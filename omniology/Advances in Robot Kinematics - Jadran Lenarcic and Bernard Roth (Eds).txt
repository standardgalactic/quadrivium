ADVANCES IN ROBOT KINEMATICS

Advances in Robot Kinematics
Edited by
I
Jo ef Stefan Institute
Ljubljana, Slovenia
and
B. ROTH
Stanford University
California, U.S.A.
Mechanisms and Motion
ý ý
ž
JADRAN
 
LENAR

A C.I.P. Catalogue record for this book is available from the Library of Congress.
ISBN-10  1-4020-4940-4 (HB)
ISBN-13  978-1-4020-4940-8 (HB)
ISBN-10  1-4020-4941-2 (e-book)
ISBN-13  978-1-4020-4941-5 (e-book)
Published by Springer,
P.O. Box 17, 3300 AA Dordrecht, The Netherlands.
www.springer.com
Printed on acid-free paper
All Rights Reserved
© 2006 Springer 
No part of this work may be reproduced, stored in a retrieval system, or transmitted
in any form or by any means, electronic, mechanical, photocopying, microfilming, recording
or otherwise, without written permission from the Publisher, with the exception
of any material supplied specifically for the purpose of being entered
and executed on a computer system, for exclusive use by the purchaser of the work.
Printed in the Netherlands.

Preface
This is the tenth book in the series of Advances in Robot Kinematics.
Two were produced as workshop proceedings, Springer published one
book in 1991 and since 1994 Kluwer published a book every two years
without interruptions. These books deal with the theory and practice
of robot kinematics and treat the motion of robots, in particular robot
manipulators, without regard to how this motion is produced or con-
trolled. Each book of Advances in Robot Kinematics reports the most
recent research projects and presents many new discoveries.
The issues addressed in this book are fundamentally kinematic in
nature, including synthesis, calibration, redundancy, force control, dex-
terity, inverse and forward kinematics, kinematic singularities, as well as
over-constrained systems. Methods used include line geometry, quater-
nion algebra, screw algebra, and linear algebra. These methods are ap-
plied to both parallel and serial multi-degree-of-freedom systems. The
en
application.
All the contributions had been rigorously reviewed by independent
reviewers and ﬁfty three articles had been recommended for publica-
tion. They were introduced in seven chapters. The authors discussed
their results at the tenth international symposium on Advances in Robot
Kinematics which was held in June 2006 in Ljubljana, Slovenia. The
symposium was organized by Jozef Stefan Institute, Ljubljana, under
the patronage of IFToMM - International Federation for the Promotion
of Mechanism and Machine Science.
We are grateful to the authors for their contributions and for their
eﬃciency in preparing the manuscripts, and to the reviewers for their
timely reviews and recommendations. We are also indebted to the per-
sonnel at Springer for their excellent technical and editorial support.
Jadran Lenarˇciˇc and Bernard Roth, editors
results should interest researchers, teachers and students, in ﬁelds of
gineering and mathematics related to robot theory, design, control and

Contents
Methods in Kinematics
J. Andrade-Cetto, F. Thomas
Wire-based tracking using mutual information
3
G. Nawratil
The control number as index for Stewart Gough platforms
15
C. Innocenti, D. Paganelli
Determining the 3×3 rotation matrices that satisfy three linear
equations in the direction cosines
23
P.M. Larochelle
A polar decomposition based displacement metric for a ﬁnite
region of SE(n)
33
J.-P. Merlet, P. Donelan
On the regularity of the inverse Jacobian of parallel robots
41
P. Fanghella, C. Galletti, E. Giannotti
Parallel robots that change their group of motion
49
A.P. Murray, B.M. Korte, J.P. Schmiedeler
Approximating planar, morphing curves with rigid-body linkages
57
M. Zoppi, D. Zlatanov, R. Molﬁno
On the velocity analysis of non-parallel closed chain mechanisms
65
Properties of Mechanisms
H. Bamberger, M. Shoham, A. Wolf
Kinematics of micro planar parallel robot comprising large joint
clearances
75
H.K. Jung, C.D. Crane III, R.G. Roberts
Stiﬀness mapping of planar compliant parallel mechanisms in a
serial arrangement
85

Y. Wang, G.S. Chirikjian
Large kinematic error propagation in revolute manipulators
95
A. Pott, M. Hiller
A framework for the analysis, synthesis and optimization
of parallel kinematic machines
103
Z. Luo, J.S. Dai
Searching for undiscovered planar straight-line linkages
113
X. Kong, C.M. Gosselin
Type synthesis of three-DOF up-equivalent parallel
manipulators using a virtual-chain approach
123
A. De Santis, P. Pierro, B. Siciliano
The multiple virtual end-eﬀectors approach for human-robot
interaction
133
Humanoids and Biomedicine
J. Babiˇc, D. Omrˇcen, J. Lenarˇciˇc
Balance and control of human inspired jumping robot
147
J. Park, F.C. Park
A convex optimization algorithm for stabilizing whole-body
motions of humanoid robots
157
R. Di Gregorio, V. Parenti-Castelli
Parallel mechanisms for knee orthoses with selective recovery
action
167
S. Ambike, J.P. Schmiedeler
Modeling time invariance in human arm motion coordination
177
M. Veber, T. Bajd, M. Munih
Assessment of ﬁnger joint angles and calibration of instrumental
glove
185
R. Konietschke, G. Hirzinger, Y. Yan
All singularities of the 9-DOF DLR medical robot setup for
minimally invasive applications
193
G. Liu, R.J. Milgram, A. Dhanik, J.C. Latombe
On the inverse kinematics of a fragment of protein backbone
201
V. De Sapio, J. Warren, O. Khatib
Predicting reaching postures using a kinematically constrained
shoulder model
209
 
viii
Contents 

Analysis of Mechanisms
D. Chablat, P. Wenger, I.A. Bonev
Self motions of special 3-RPR planar parallel robot
221
A. Degani, A. Wolf
Graphical singularity analysis of 3-DOF planar parallel
manipulators
229
C. Bier, A. Campos, J. Hesselbach
Direct singularity closeness indexes for the hexa parallel robot
239
A. Karger
Stewart-Gough platforms with simple singularity surface
247
A. Kecskem´ethy, M. T¨andl
A robust model for 3D tracking in object-oriented multibody
systems based on singularity-free Frenet framing
255
P. Ben-Horin, M. Shoham
Singularity of a class of Gough-Stewart platforms with three
concurrent joints
265
T.K. Tanev
Singularity analysis of a 4-DOF parallel manipulator using
geometric algebra
275
R. Daniel, R. Dunlop
A geometrical interpretation of 3-3 mechanism singularities
285
Workspace and Performance
J.A. Carretero, G.T. Pond
Quantitative dexterous workspace comparisons
297
E. Ottaviano, M. Husty, M. Ceccarelli
Level-set method for workspace analysis of serial manipulators
307
M. Gouttefarde, J P. Merlet, D. Daney
Determination of the wrench-closure workspace of 6-DOF
parallel cable-driven mechanisms
315
G. Gogu
Fully-isotropic hexapods
323
P. Last, J. Hesselbach
A new calibration stategy for a class of parallel mechanisms
331
M. Kreﬀt, J. Hesselbach
The dynamic optimization of PKM
339
.
Contents 
ix 
-

J.A. Snyman
On non-assembly in the optimal synthesis of serial manipulators
performing prescribed tasks
349
Design of Mechanisms
W.A. Khan, S. Caro, D. Pasini, J. Angeles
Complexity analysis for the conceptual design of robotic
architecture
359
D.V. Lee, S.A. Velinsky
Robust three-dimensional non-contacting angular motion sensor
369
K. Brunnthaler, H.-P. Schr¨ocker, M. Husty
Synthesis of spherical four-bar mechanisms using spherical
kinematic mapping
377
R. Vertechy, V. Parenti-Castelli
Synthesis of 2-DOF spherical fully parallel mechanisms
385
G.S. Soh, J.M. McCarthy
Constraint synthesis for planar n-R robots
395
T. Bruckmann, A. Pott, M. Hiller
Calculating force distributions for redundantly actuated
tendon
403
P. Boning, S. Dubowsky
A study of minimal sensor topologies for space robots
413
M. Callegari, M.-C. Palpacelli
Kinematics and optimization of the translating 3-CCR/3-RCC
parallel mechanisms
423
Motion Synthesis and Mobility
C.-C. Lee, J.M. Herv´e
Pseudo-planar motion generators
435
S. Krut, F. Pierrot, O. Company
On PKM with articulated travelling-plate and large tilting angles
445
C.R. Diez-Mart´ınez, J.M. Rico, J.J. Cervantes-S´anchez,
J. Gallardo
Mobility and connectivity in multiloop linkages
455
K. Tcho´n, J. Jakubiak
Jacobian inverse kinematics algorithms with variable steplength
for mobile manipulators
465
x
-based Stewart platforms
Contents 

J. Zamora-Esquivel, E. Bayro-Corrochano
Kinematics and grasping using conformal geometric algebra
473
R. Subramanian, K. Kazerounian
Application of kinematics tools in the study of internal
mobility of protein molecules
481
O. Altuzarra, C. Pinto, V. Petuya, A. Hernandez
Motion pattern singularity in lower mobility parallel
manipulators
489
Author Index
497
Contents 
xi 

Methods in Kinematics
J. Andrade-Cetto, F. Thomas
Wire-based tracking using mutual information
G. Nawratil
C. Innocenti, D. Paganelli
Determining the 3×3 rotation matrices that satisfy three
linear equations in the direction cosines
P.M. Larochelle
A polar decomposition based displacement metric for a ﬁnite
region of SE(n)
J.-P. Merlet, P. Donelan
On the regularity of the inverse Jacobian of parallel robots
P. Fanghella, C. Galletti, E. Giannotti
Parallel robots that change their group of motion
A.P. Murray, B.M. Korte, J.P. Schmiedeler
Approximating planar, morphing curves with rigid-body
linkages
M. Zoppi, D. Zlatanov, R. Molﬁno
On the velocity analysis of non-parallel closed chain
mechanisms
 
3 
15 
23 
33 
41 
49 
57 
65 
The control number as index for Stewart Gough platforms

WIRE-BASED TRACKING USING
MUTUAL INFORMATION
Juan Andrade-Cetto
Computer Vision Center, UAB
Ediﬁci O, Campus UAB, 08193 Bellaterra, Spain
cetto@cvc.uab.es
Federico Thomas
Institut de Rob`otica i Inform`atica Industrial, CSIC-UPC
Llorens Artigas 4-6, 08028 Barcelona, Spain
fthomas@iri.upc.edu
Abstract
ing devices. They consist of a ﬁxed base and a platform, attached to
the moving object, connected by six wires whose tension is maintained
along the tracked trajectory. One important shortcoming of this kind
of devices is that they are forced to operate in reduced workspaces so
as to avoid singular conﬁgurations. Singularities can be eliminated by
adding more wires but this causes more wire interferences, and a higher
force exerted on the moving object by the measuring device itself. This
paper shows how, by introducing a rotating base, the number of wires
can be reduced to three, and singularities can be avoided by using an
active sensing strategy.
This also permits reducing wire interference
problems and the pulling force exerted by the device. The proposed
sensing strategy minimizes the uncertainty in the location of the plat-
form. Candidate motions of the rotating base are compared selected
automatically based on mutual information scores.
Keywords:
1.
Introduction
Tracking devices, also called 6-degree-of-freedom (6-DOF) devices, are
used for estimating the position and orientation of moving objects. Cur-
rent tracking devices are based on electromagnetic, acoustic, mechani-
cal, or optical technology. Tracking devices can be classiﬁed according
to their characteristics, such as accuracy, resolution, cost, measurement
range, portability, and calibration requirements. Laser tracking systems
exhibit good accuracy, which can be less than 1µm if the system is well
calibrated. Unfortunately, this kind of systems are very expensive, their
3
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 3–14. 
© 2006 Springer. Printed in the Netherlands. 
Wire-based tracking devices are an aﬀordable alternative to costly track-
Tracking devices, Kalman ﬁlter, active sensing, mutual information,
parallel manipulators

calibration procedure is time-consuming, and they are sensitive to the
environment. Vision systems can reach an accuracy of 0.1mm. They are
low-cost portable devices but their calibration procedure can be compli-
cated. Wire-based systems can reach an accuracy of 0.1mm, they are
also low cost portable devices but capable of measuring large displace-
ments.
Moreover, they exhibit a good compromise among accuracy,
measurement range, cost and operability.
Wire-based tracking devices consist of a ﬁxed base and a platform
connected by six wires whose tension is maintained, while the platform is
moved, by pulleys and spiral springs on the base, where a set of encoders
give the length of the wires. They can be modelled as 6-DOF parallel
manipulators because wires can be seen as extensible legs connecting
the platform and the base by means of spherical and universal joints,
respectively.
Dimension deviations due to fabrication tolerances, wire-length un-
certainties, or wire slackness, may result in unacceptable performance of
rors can be eliminated by calibration. Some techniques for speciﬁc errors
have already been proposed in the literature. For example, a method
for compensating the cable guide outlet shape of wire encoders is de-
tailed in Geng and Haynes, 1994, and a method for compensating the
deﬂections caused by wire self-weights is described in Jeong et al., 1999.
In this paper, we will only consider wire-length errors which cannot be
compensated because of their random nature.
Another indirect source of error is the force exerted by the measuring
device itself. Indeed, all commercial wire encoders are designed to keep
a large string tension. This is necessary to ensure that the inertia of the
mechanism does not result in a wire going slack during a rapid motion.
If a low wire force is used, it would reduce the maximum speed of the
object to be tracked without the wires going slack. On the contrary, if a
high wire force is used, the trajectory of the object to be tracked could
be altered by the measuring device. Hence, a trade-oﬀbetween accuracy
and speed arises.
The minimum number of points on a moving object to be tracked for
pose measurements is three. Moreover, the maximum number of wires
attached to a point is also three, otherwise the lengths of the wires will
not be independent. This leads to only two possible conﬁgurations for
the attachments on the moving object. The 3-2-1 conﬁguration was pro-
posed in Geng and Haynes, 1994. The kinematics of this conﬁguration
was studied, for example, in Nanua and Waldron, 1990 and Hunt and
Primrose, 1993. Its direct kinematics can be solved in closed-form by
using three consecutive trilateration operations yielding 8 solutions, as
a wire-based tracking device. In general, the eﬀects of all systematic er-
4
J. Andrade-Cetto and F. Thomas 

(a)
(b)
(c)
p
platform
base
(d)
x
z
a1
a2
a3
ρ1
¯a
yA
θA
xA
Figure 1.
The main two conﬁgurations used for wire-based tracking devices: (a) the
“3-2-1”, (b) the “2-2-2”, and (c) the proposed tracking device, with (d) the rotating
in Thomas et al., 2005. The 2-2-2 conﬁguration was ﬁrst proposed in
Jeong et al., 1999 for a wire-based tracking device. The kinematics of
this conﬁguration was studied, for example, in Griﬃs and Duﬀy, 1989,
Nanua et al., 1990, and Parenti-Castelli and Innocenti, 1990 where it
was shown that its forward kinematics has 16 solutions. In other words,
there are up to 16 poses for the moving object compatible with a given
set of wire lengths. These conﬁgurations can only be obtained by a nu-
merical method. The two conﬁgurations above were compared, in terms
of their sensitivity to wire-length errors, in Geng and Haynes, 1994. The
conclusion was that they have similar properties.
This paper is organized as follows. Section 2 contains the mathemat-
ical model of our proposed 3-wire-based sensing device, while Section 3
derives the ﬁltering strategy for tracking its pose. Given that this device
has a moving part, Section 4 develops an information theoretic metric
for choosing the best actions for controlling it. A strategy to prevent
possible wire crossings is contemplated in Section 5. Section 6 is de-
voted to a set of examples demonstrating the viability of the proposed
approach. Finally, concluding remarks are presented in Section 7.
2.
In order to reduce cable interferences, singularities, and wire tension
problems we choose to reduce the number of cables from six to three, and
to have the base rotate on its center. Provided the tracked object mo-
tion is suﬃciently slow, two measurements at diﬀerent base orientations
would be equivalent to a 2-2-2 conﬁguration.
More elegantly, and to let the tracked object move at a faster speed,
measurements can be integrated sequentially through a partially observ-
able estimation framework. That is, a Kalman ﬁlter.
Wire-based Tracking Using Mutual Information 
5
base.
Kinematics of the Proposed Sensor

Consider the 3-wire parallel device in Figure 1(c). It is assumed that
Let the pose of our tracking device be deﬁned as the 14-dimensional array
x =
⎡
⎢⎢⎢⎢⎢⎢⎣
p
θ
v
ω
θA
ωA
⎤
⎥⎥⎥⎥⎥⎥⎦
,
(1)
where p = (x, y, z)⊤is the position of the origin of a coordinate frame
ﬁxed to the platform, θ = (ψ, θ, φ)⊤is the orientation of such coordinate
frame expressed as yaw, pitch and roll angles, v = (vx, vy, vz)⊤and
ω = (ωx, ωy, ωz)⊤are the translational and rotational velocities of p,
respectively; and θA and ωA are the orientation and angular velocity of
the rotating base.
Assume that the attaching points on the base ai, i = 1, 2, 3, are
distributed on a circle of radius ¯a as shown in Figure 1(d). Then, the
coordinates of ai can be expressed in terms of the platform rotation
angle θA as
⎡
⎣
axi
ayi
azi
⎤
⎦=
⎡
⎣
¯a cos(ρi + θA)
¯a sin(ρi + θA)
0
⎤
⎦.
(2)
Moreover, let ei be the unit norm vector specifying the direction from
ai to the corresponding attaching point bi in the platform; and let li
be the length of the i-th wire, i = 1, 2, 3. The value of bi is expressed
in platform local coordinates, where R is the rotation matrix describing
the absolute orientation of the platform. Then, the position of the wire
attaching points in the platform, in global coordinates, are
b′
i = ai + liei = p + Rbi .
(3)
3.
State Estimation
We adopt a smooth unconstrained constant-velocity motion model, its
pose altered only by zero-mean, normally distributed accelerations and
staying the same on average.
The Gaussian acceleration assumption
means that large impulsive changes of direction are unlikely. In such
model the prediction of the position and orientation of the platform at
time t plus a time interval τ is given by

p(t + τ)
θ(t + τ)

=

p(t) + v(t)τ + δa(t)τ 2/2
θ(t) + ω(t)τ + δα(t)τ 2/2

,
(4)
6
J. Andrade-Cetto and F. Thomas 
the platform conﬁguration is free to move in any direction in IR3×SO(3).

with δa and δα zero mean white Gaussian translational and angular
acceleration noises. Moreover, the adopted model for the translational
and angular velocities of the platform is given by

v(t + τ)
ω(t + τ)

=

v(t) + δa(t)τ
ω(t) + δα(t)τ

.
(5)
By the same token, the adopted models for the orientation and angular
velocity of the base are

θA(t + τ)
ωA(t + τ)

=

θA(t) + ωA(t)τ + (αA(t) + δαA(t))τ 2/2
ωA(t) + (αA(t) + δαA(t))τ

,
(6)
in which the control signal modifying the base orientation is the accel-
eration impulse αA.
Since in practice, the measured wire lengths, li, i = 1, 2, 3, will be
corrupted by additive Gaussian noise, δzi, we have that
zi(t) = li(t) + δzi(t) = ∥p(t) + R(t)bi −ai(t)∥+ δzi(t) .
(7)
Lastly, the orientation of the moving base is measured by means of
an encoder. Its model is simply
z4(t) = θA(t) + δz4(t) .
(8)
Eqs. 4 and 5 constitute our motion prediction model f(x, αA, δx).
Now, an Extended Kalman Filter can be used to propagate the platform
pose and velocity estimates, as well as the base orientation estimates,
and then, to reﬁne these estimates through wire length measurements.
To this end, δx ∼N(0, Q), δz ∼N(0, R), and our plant Jacobians with
respect to the state F = ∂f/∂x, and to the noise G = ∂f/∂δx become
F =
⎡
⎢⎢⎢⎢⎢⎢⎣
I
τI
I
τI
I
I
1
τ
1
⎤
⎥⎥⎥⎥⎥⎥⎦
and
G =
⎡
⎢⎢⎢⎢⎢⎢⎣
τ 2I
2
τ 2I
2
τI
τI
τ 2
2
τ
⎤
⎥⎥⎥⎥⎥⎥⎦
.
(9)
The measurement Jacobians H = ∂h/∂x are simply
Hi(t) =
	
ei(t)
bi × ei(t)
0
0
∂hi
∂θA
0

,
(10)
with
ei(t) =
p(t) + R(t)bi −ai(t)
∥p(t) + R(t)bi −ai(t)∥.
(11)
Wire-based Tracking Using Mutual Information 
7
Eqs. 7 and 8 complete our measurement prediction model h(x, δz).

Then, by rewriting R =
⎡
⎣
r⊤
1
r⊤
2
r⊤
3
⎤
⎦, the term ∂hi
∂θA in Hi becomes
∂hi
∂θA
=
2¯a((x(t) + r1(t)⊤bi) sin(θA(t) + ρi)
(12)
−(y(t) + r2(t)⊤bi) cos(θA(t) + ρi))/li(t) .
Lastly,
H4(t) =
0
0
0
0
1
0
.
(13)
For the sake of clarity, in the sequel, when needed, time dependencies
will be placed as subscripts. Moreover, the term t + τ|t will be used
to indicate an a prior estimate (before measurements are incorporated),
and the terms t|t and t + τ|t + τ will represent posterior estimates (once
measurements are taken into account). The prediction of the state and
state covariance are given by
xt+τ|t = f(xt|t, αA, 0)
(14)
Pt+τ|t = FPt|tF⊤+ GQG⊤
(15)
and, the revision of the state estimate and state covariance are
xt+τ,t+τ = xt+τ|t + K(zt+τ −h(xt+τ|t, 0))
(16)
Pt+τ|t+τ = (I −KH)Pt+τ|t
(17)
with I the identity matrix, and K = Pt+τ|tH⊤(HPt+τ|tH⊤+ R)−1 the
usual Kalman gain.
4.
Information Gain
This section builds from basic principles a metric for the expected
information gain as a result of performing a given action, and develops
from it, a strategy for controlling the base orientation. The aim is to
rotate the base in the direction that most reduces the uncertainty in
the entire pose state estimate, by using the information that should
be gained from future wire measurements were such a move be made,
but taking into account the information lost as a result of moving with
uncertainty.
The essential idea is to use mutual information as a measurement
of the statistical dependence between two random vectors, that is, the
amount of information that one contains about the other.
Consider
the states x, and the measurements z. The mutual information of the
8
J. Andrade-Cetto and F. Thomas 

two continuous probability distributions p(x) and p(z) is deﬁned as the
information about x contained in z, and is given by
I(x, z) =

x,z
p(x, z) log p(x, z)
p(x)p(z)dxdz .
(18)
Note how mutual information measures the independence between
the two vectors. It equals zero when they are independent, p(x, z) =
p(x)p(z). Mutual information can also be seen as the relative entropy
between the marginal density p(x) and the conditional p(x|z)
I(x, z) =

x,z
p(x, z) log p(x|z)
p(x) dxdz .
(19)
Given that our variables of interest can be described by multivariate
Gaussian distributions, the parameters of the marginal density p(x) are
trivially the Kalman prior mean xt+τ|t and covariance Pt+τ|t. Moreover,
the parameters of the conditional density p(x|z) come precisely from
the Kalman update equations xt+τ|t+τ and Pt+τ|t+τ. Substituting the
genaral form of the Gaussian distribution in Eq. 19, we can obtain a
closed formula
I(x, z) = 1
2

log |Pt+τ|t| −log |Pt+τ|t+τ|

.
(20)
Thus, in choosing a maximally mutually informative motion com-
mand, we are maximizing the diﬀerence between prior and posterior
entropies (MacKay, 1992). In other words, we are choosing the motion
command that most reduces the uncertainty of x due to the knowledge
of z.
The real-time requirements of the task preclude using an optimal con-
trol strategy to search for the base rotation command that ultimately
maximizes our mutual information metric. Instead, we can only evalu-
ate such metric for a discrete set of actions within the range of possible
commands, and choose the best action from those. The set of possible
actions is a discretization of a range of accelerations.
5.
Preventing Wire Crossings
Providing the base with the ability to rotate has the added advantage
of increasing the range of motion of the tracked platform; mainly, for
rotations along the vertical axis. One of the main diﬃculties however,
is in appropriately choosing base rotation commands so as to prevent
wire crossings. Considering that wire end-point displacements are suf-
ﬁciently small per sampling interval, the trajectory described by each
Wire-based Tracking Using Mutual Information 
9

wire can be assumed to be circumscribed within a tetrahedron. One
way to predict wire crossings is by checking whether the tetrahedra
described by the current and posterior poses for each wire intersect
each other; each tetrahedron described by the four attaching points
{ai,t|t, ai,t+τ|t, b′
i,t|t, b′
i,t+τ|t}.
A very fast test of tetrahedra intersection is based on the Separating
Axis Theorem described in the computer graphics literature (Ganovelli
et al., 2003). The test consists on checking whether the plane lying on
the face of one tetrahedron separates the two of them. If this is not
the case, the test continues to ﬁnd out if there exists a separating plane
containing only one edge on one of the tetrahedra.
6.
Implementation and Examples
6.1
Mechanical Considerations
In a cable extension transducer, commonly known as a string pot,
the tension of the cable is guaranteed by a spring connected to its spool.
Using a cable guide, the cable is allowed to move within a 20◦cone, mak-
ing it suitable for 3D motion applications. There are cable guides that
permit 360◦by 317◦displacement cable orientation ﬂexibility. Manufac-
turers of such sensors are Celesco Transducer Products Inc., SpaceAge
Control Inc., Carlen Controls Inc., and several others.
String pots provide a long range (0.04 −40m), with typical accuracy
of 0.02% of full scale. The maximum allowable cable velocity is about
7.2m/s and the maximum cable acceleration is about 200m/s2.
The usefulness of a tracking device depends on whether it can track
the motion fast enough. This ability is determined by the lag, or latency,
between the change of the position and orientation of the target being
tracked and the report of the change to the computer. In virtual reality
applications, lags above 50 milliseconds are perceptible to the user. In
general, the lag for mechanical trackers is typically less than 5ms.
6.2
Maximum Base Rotation Speed
The quality of the estimated pose is directly inﬂuenced by the velocity
at which the base can rotate. To determine the range of motion velocities
that can be tracked with our system, a tracking simulation was repeated
limiting the base rotation velocity.
A set of 20 runs was conducted,
varying the maximum platform rotation speed from 0 to 1 rad/s, and
with time steps of 0.01 s; the tracked object translating at a constant
velocity of 0.2 m/s along the x axis, and rotating at π
10 rad/s about an
10
axis perpendicular to the base. Figure 2 shows the average error of the pose
J. Andrade-Cetto and F. Thomas 

Figure 2.
Average position and orientation recovery error as a function of the
maximum platform rotation speed, and 2nd order curve ﬁt.
Figure 3.
Wire sensing device. The rotating base is attached to the Staubli arm
shown in the left side. The moving platform is attached to the arm shown to the
right.
estimation as a function of the maximum base rotational velocity. The
best pose estimations are achieved when the base rotates at twice the
speed of the tracked object, approximately π
5 rad/s for this experiment.
6.3
cable crossing allows it, the largest acceleration commands are selected.
This is because prior and posterior entropy diﬀerence is maximized for
base and the platform have been arranged to form equilateral triangles.
For this example, the object to be tracked rotated at π
10 rad/s, whilst
The maximum base rotation
speed was limited to π
5 rad/s, and the limit for possible base accelera-
tion command was set to 5 rad/sec2. Figure 4(a) shows the evolution of
the wire length measurements along the trajectory. Wire length sensors
are modeled with additive Gaussian noise with zero mean and 1 mm
Wire-based Tracking Using Mutual Information 
11
pure rotations along the vertical axis. The idea is to show that, whenever
Pure Rotations
A second experiment consisted in testing the tracking system under
standard deviation. Moreover, readings of the base orientation are also
largest possible conﬁguration changes. The attaching points in both the
Their coordinates can be found in Table 1, and refer to the frames
kept at a distance of 1 m from the base.
shown in Figure 1. The actual testbench used is shown in Figure 6.3.

Table 1.
Coordinates of the attaching points (in meters) in their local coordinate
frames.
x
y
z
x
y
z
a1
0.3000,
0.0000,
0.0000
b1
0.1000,
0.0000,
0.0000
a2
0.1500,
0.2598,
0.0000
b2
0.0500,
0.0866,
0.0000
a3
0.1500,
0.2598,
0.0000
b3
0.0500,
0.0866,
0.0000
Figure 4.
Wire tracking of pure rotations along an axis perpendicular to the base
platform.
modeled with zero mean white additive Gaussian noise with 0.001 rad
standard deviation. Figures 4(b) and 4(c) show the tracked object po-
sition and orientation recovery errors, respectively. The motion of the
rotating base is depicted in Figures 4(d)-4(e), showing that commands
for maximal platform rotation velocities are being selected from our mu-
tual information metric (Figure 4(f)).
6.4
In this last example, the tracked object moves back and forth in the
three Cartesian components along a line from (1, 1, 1) to (2, 2, 2) meters,
12
– 
– 
– 
– 
– 
– 
π
3 rad about its center in all raw, pitch and yaw com-
whilst rotating
ponents. This experiment shows that for compound motions it is more
J. Andrade-Cetto and F. Thomas 
Compound Motions
0
1
2
3
4
5
1.01
1.02
1.03
1.04
1.05
1.06
Time (sec)
Measured wire lengths (m)
l1
l2
l3
(a) Wire Lengths
0
1
2
3
4
5
−6
−4
−2
0
2
4
6x 10
−3
Time (sec)
Position error (m)
x
y
z
(b) Position Error
0
1
2
3
4
5
−0.1
−0.05
0
0.05
0.1
Time (sec)
Orientation error (rad)
roll
pitch
yaw
(c) Orientation Error
0
1
2
3
4
5
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
Time (sec)
Base angle (rad)
0
1
2
3
4
5
−4
−3
−2
−1
0
1
2
3x 10
−3
Time (sec)
Base angle error (rad)
0
1
2
3
4
5
0
0.5
1
1.5
2
Time (sec)
Mutual information
(f) Mutual Info.
(e) Base Angle Error
(d) Base Angle

Figure 5.
Wire tracking of compound motion.
diﬃcult to disambiguate orientation error, while still doing a good job at
tracking the correct object pose. Once more, the maximum base rotation
speed was limited to π
5 rad/sec, and the limit for possible base accelera-
tion command was set to 30 rad/sec2. Figure 5(a) shows the evolution of
wire length measurements for this example. The tracked object position
and orientation errors is shown in Figures 5(b) and 5(c). The motion
of the rotating base is depicted in Figures 5(d)-5(e). And, our mutual
information action selection mechanism is shown in Figure 5(f).
7.
Conclusion
An active sensing strategy for a wire tracking device has been pre-
sented. It has been shown how by allowing the sensor platform rotate
about its center, a wider range of motions can be tracked by reducing
the number of wires needed from 6 to 3. Moreover, platform rotation is
performed so as to maximize the mutual information between poses and
measurements, and at the same time, so as to prevent wire wrappings
as far as possible.
Wire-based Tracking Using Mutual Information 
13
0
1
2
3
4
5
2
3
4
5
6
7
Time (sec)
Measured wire lengths (m)
l1
l2
l3
(a) Wire Lengths
0
1
2
3
4
5
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0.2
0.25
Time (sec)
Position error (m)
x
y
z
(b) Position Error
0
1
2
3
4
5
−0.2
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
Time (sec)
Orientation error (rad)
roll
pitch
yaw
(c) Orientation Error
0
1
2
3
4
5
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
Time (sec)
Base angle (rad)
(d) Base Angle
0
1
2
3
4
5
−5
0
5x 10
−3
Time (sec)
Base angle error (rad)
(e) Base Angle Error
0
1
2
3
4
5
0
0.5
1
1.5
2
Time (sec)
Mutual information
(f) Mutual Info.

Acknowledg ments
J. Andrade-Cetto completed this work as a Juan de la Cierva Post-
doctoral Fellow of the Spanish Ministry of Education and Science under
project TIC2003-09291 and was also supported in part by projects DPI
2004-05414, and the EU PACO-PLUS project FP6-2004-IST-4-27657.
F. Thomas was partially supported by the Spanish Ministry of Edu-
cation and Science, project TIC2003-03396, and the Catalan Research
Commission, through the Robotics and Control Group.
References
Bruynickx, H. (1999). Forward kinematics for hunt-primrose parallel manipulators.
Mechanism and Machine Theory, 34:657–664.
Davison, A. (2005). Active search for real-time vision. In Proceedings of the IEEE
International Conference on Computer Vision, pages 66–73, Beijing.
Ganovelli, F., Ponchio, F., and Rocchini, C. (2003). Fast tetrahedron-tetrahedron
overlap algorithm. ACM Journal of Graphics Tools, 7(4).
platform and its application to six degree of freedom pose measurements. Robotics
and Computer-Integrated Manufacturing, 11(1):23–34.
Griﬃs, M. and Duﬀy, J. (1989). A forward displacement analysis of a class of Stewart
platforms. Journal of Robotic Systems, 6(6):703–720.
Hunt, K. and Primrose, E. (1993). Assembly conﬁgurations of some in-parallel-actuated
manipulators. Mechanism and Machine Theory, 28(1):31–42.
Jeong, J., Kim, S., and Kwak, Y. (1999). Kinematics and workspace analysis of
a parallel wire mechanism for measuring a robot pose. Mechanism and Machine
Theory, 34(6):825–841.
tion. Neural Computation, 4(4):589–603.
Merlet, J.P. (2006). Parallel Robots, volume 128 of Solid Mechanics and its Applica-
tions. Springer, New York, 2nd edition.
Nanua, P. and Waldron, K. (1990). Direct kinematics solution of a special parallel
robot structure. In Proceedings of the 8th CISM-IFToMM Symposium on Theory
and Practice of Robots and Manipulators, pages 134–142, Warsaw.
Nanua, P., Waldron, K., and Murthy, V. (1990). Direct kinematic solution of a Stewart
platform. IEEE Transactions on Robotics and Automation, 6(4):438–444.
Parenti-Castelli, V. and Innocenti, C. (1990). Direct displacement analysis for some
classes of spatial parallel machanisms. In Proceedings of the 8th CISM-IFToMM
Symposium on Theory and Practice of Robots and Manipulators, pages 126–133,
Warsaw.
Thomas, F., Ottaviano, E., Ros, L., and Ceccarelli, M. (2005). Performance analysis
of a 3-2-1 pose estimation device. IEEE Transactions on Robotics, 21(3):288–297.
Vidal-Calleja, T., Davison, A., Andrade-Cetto, J., and Murray, D. (2006). Active con-
trol for single camera SLAM. In Proceedings of the IEEE International Conference
on Robotics and Automation, Orlando. To appear.
14
J. Andrade-Cetto and F. Thomas 
Geng, Z.J. and Haynes, L.S. (1994). A 3-2-1 kinematic conﬁguration of a Stewart
MacKay, D.J.C. (1992). Information based objective functions for active data selec-
e

THE CONTROL NUMBER AS INDEX
FOR STEWART GOUGH PLATFORMS
G. Nawratil
Vienna University of Technology
Institute of Discrete Mathematics and Geometry
upuaut@controverse.net
Abstract
Singular postures of Stewart Gough Platforms must be avoided because
close to singularities they lose controllable degrees of freedom. Hence
there is an interest in a distance measure between the instantaneous
conﬁguration and the nearest singularity. This article presents such a
measure, which is invariant under Euclidean motions and similarities,
which has a geometric meaning and can be computed in real-time. This
measure ranging between 0 and 1 can serve as a performance index.
Keywords: Stewart Gough Platform, distance measure, perfomance index
1.
Introduction
In Section 3 of this article we deﬁne a new measure, which allows
to compare diﬀerent postures of diﬀerent nonredundant Stewart Gough
Platforms (SGPs). Such a measure should assign to each conﬁguration
K a scalar D(K) obeying the following six properties:
1. D(K) ≥0 for all K of the conﬁguration space,
2. D(K) = 0 if and only if K is singular,
3. D(K) is invariant under Euclidean motions,
4. D(K) is invariant under similarities,
5. D(K) has a geometric meaning,
6. D(K) is computable in real-time.
K is singular if and only if the six legs belong to a linear line complex
(see Merlet, 1992) or, analytically seen, the determinant of the Jacobian
J T =
⎛
⎝l1 ∥l1∥−1
... l6 ∥l6∥−1
l1 ∥l1∥−1
...
l6 ∥l6∥−1
⎞
⎠
with
li = Pi −Bi
and
li = Bi× li = Pi× li
(1)
vanishes, where Bi resp. Pi are the coordinates of the base resp. platform
anchor points with respect to any ﬁxed reference frame Σ0 with origin
O. Therefore the ith row of J equals the normalized Pl¨ucker coordinates
∥li∥−1(li,li) of the carrier line Li of the ith leg oriented in the direction
BiPi. We’ll assume for the rest of this article that Bi ̸= Pi for i = 1, .., 6.
© 2006 Springer. Printed in the Netherlands. 
15
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 15–22. 

Kinematic meaning of the Jacobian.
The velocity vector v(Pi) of
Pi due to the instantaneous screw (= twist) q := (q, q) of the platform
Σ against Σ0 can be decomposed in a component vL(Pi) along the ith
leg Li and in a component v⊥(Pi) orthogonal to it (see Fig. 1), thus
v(Pi) = q + (q× Pi) = vL(Pi) + v⊥(Pi)
(2)
with
∥vL(Pi)∥=
li
∥li∥·v(Pi) =
li
∥li∥·q +
li
∥li∥·q =: di.
(3)
Therefore the Jacobian J is the matrix of the linear mapping
ι : q →d = J q
with
d = (d1, .., d6)T .
(4)
ι has at least a one-dimensional kernel kerι, if K is singular. Let k ∈kerι
and k ̸= o. Then also µk with µ ∈R lies in kerι. Therefore we can say,
that v(Pi) can be arbitrarily large for vanishing translatory velocities in
the six prismatic legs. The sole exeption is the case where Pi lies on the
instantaneous screw axis (isa) and k is an instantaneous rotation.
Review.
In the following we analyze some of the in our opinion most
important indices in view of the initially stated six properties.
The manipulabilitiy introduced by Yoshikawa, 1985 is not invariant
under similarities, because for SGPs it equals |det(J )|. So Lee et al.,
1998 used |det(J )|·|det(J )|−1
m
as index, where |det(J )|m denotes the
maximum of |det(J )| over the SGP’s conﬁguration space. But the com-
putation of |det(J )|m is a nonlinear task and was only done for planar
SGPs with very special geometries. Only for these SGPs |det(J )|m can
be interpreted geometrically as the volume of the framework.
Pottmann et al., 1998 introduced the concept of the best ﬁtting linear
line complex c of L1, .., L6. The suggested index equals the square root
of the minimum of  d2
i with respect to c under the side condition
cT c = 1. The index is not invariant under similarities and it is not
deﬁned for instantaneous translations c. In order to close this gap, the
authors proposed to minimize a further function, which yields a second
value. But how should these two values be combined to a single number?
The rigidity rate introduced by Lang et al., 2001 is based on the idea,
that a SGP at any position K permits a one-parametric self-motion
within the group of Euclidean similarities G7. The angle ϕ ∈[0, π/2]
between the tangent of the self-motion in K and the subgroup of Eucli-
dean displacements serves as an index. But the choice of the invariant
symmetric bilinear form in the tangent space of G7, which is necassary
in order to deﬁne a measure in the sense of non-Euclidean geometry, is
arbitrary. Although ϕ fulﬁlls all six stated properties, its applicability is
limited. This becomes manifest in the remark at the end of Section 5.
G. Nawratil
16

2.
Now we take a closer look at the reciprocal of the condition number
(cdn−1) introduced by Salisbury and Craig, 1982, because it will be
the starting point of our considerations. cdn−1 equals the ratio of the
minimum λ−and the maximum λ+ of the quadratic objective function
ζ(q) :
qT I6 q = ω2 +

ω2 + ω2Op
2
(5)
with p denoting the isa, ω the angular velocity and ω the translatory
velocity of the screw q, under the quadratic side condition
ν(q) :
dT d = qT N q = 1
with
N = J T J .
(6)
Due to the linearity of ι in (4) the screw µq corresponds to the µ-
fold translatory velocity di in the six prismatic legs, and therefore the
side condition ν(q) is well deﬁned. The weak point of this index is the
objective function for the following reasons. First, it is not invariant
under translations, because ζ(q) depends on the choice of O. In practice
O is not selected arbitrarily, but placed in the tool center point. But
the real problem, which causes the variance of cdn−1 under similarities,
occurs from the dimensional inhomogeneity of ζ(q). To overcome this
deﬁciency, diﬀerent concepts (e.g. characteristic length, see Zanganeh
and Angeles, 1997) were introduced, but they still weight the ratio of
length and angle in a more or less arbitrary way. The inhomogeneity and
the lacking invariance of ζ(q) do not allow a geometric interpretetion of
cdn−1 and they question its adequacy as a performance index for SGPs.
The conslusion of this considerations is, that we have to look for a new
objective function ζ(q) which meets our initially stated demands. But
we want to add a further argument, which has the following motivation:
The cdn−1 as well as the manipulability are also used to optimize the
design of SGPs. But these two indices do not depend on the choice of
Bi and Pi on Li as long as Bi ̸= Pi. Thus we require:
7. D(K) depends on the geometry of the SGP, not
only on the carrier lines L1,...,L6 of the six legs.
Pottmann et al., 1998 also presented a modiﬁed version of his method,
namely the line segment method, which statisﬁes the 7th demand but
does not eliminate the other weak points. The rigidity rate is indepen-
dent of the choice of the base anchor points and so it only takes the
geometry of the platform into consideration. This raises the following
problem: If we change the viewpoint and consider Σ as the unmoved
base and Σ0 as platform, we get another index for the same SGP con-
ﬁguration. So the instantaneous rigidity of the SGP depends on the
viewpoint which is dissatisfying.
The Control Number as Index for Stewart Gough Platforms
17
Preliminary Considerations

2.1
Uncontrollable
ostures of SGPs
In practice conﬁgurations must be avoided, where minor variations
of the leg lengths have uncontrollable large eﬀects on the instantaneous
displacement of the platform Σ. But how should the quantity of eﬀects
be measured in relation to the variation of the leg lengths? The boarder
case of this uncontrollability is, if there exists an inﬁnitesimal motion of
Σ while all actuators are locked. In such a singular position the velocities
of the platform points can be arbitrarily large, and therefore the posture
is uncontrollable. The question is, which measurable parameter of the
SGP indicates the circumstance of uncontrollability in a natural way
and has a geometric meaning for the manipulator.
3.
Idea and
eﬁnition of the
ontrol
umber ctn
Let’s assume there is instantaneously a minor variation of the six leg
lenghts and the SGP is not singular. So there exists a unique screw q
which describes the motion of Σ against Σ0 according to (4). To meet
our 7th property, we consider the velocity v(Pi) of Pi with respect to
q. We are not interested in the instantaneous displacements of Pi in
direction of the leg, because the leg length is an active joint which can
be controlled totally. Therefore only the component v⊥(Pi) can be an
indicator of uncontrollability. But v⊥(Pi) is no mechanical parameter
of a SGP and therefore we look at the angular velociety ωBi of the ith
passive base joint. This ωBi
ωBi := ∥v⊥(Pi)∥
∥li∥
⇒
ω
2
Bi = ∥v⊥(Pi)∥2
∥li∥2
= ∥v(Pi)∥2
d2
i
∥li∥2
(7)
according to (2) and (3) and so it is proportio-
nal to ∥v⊥(Pi)∥. But there also exists angular
velocities ωPi in the passive platform joints,
which are deﬁned analogously. The sole diﬀe-
rence is that we regard the inverse motion of q.
So we have to substitute Bi for Pi and
q for
q in (2), (3) and (7). Obviously ω
2
Bi and ω
2
Pi
are quadratic forms with the coordinates of q
as unkowns. Therefore we can rewrite them as
ω
2
Bi = qT WBiq
and
ω
2
Pi = qT WPiq, (8)
where WBi and WPi are symmetric 6 × 6
matrices.
Figure 1.
De ning ωBi
P
D
C
G. Nawratil
18
is deﬁned as (see Fig. 1)
N
ﬁ
–
–

Now we deﬁne the new objective function ζ(q) as
ζ(q) =
6
	
i=1
ω
2
Bi + ω
2
Pi = qT Z q
with
Z =
6
	
i=1
WBi + WPi.
(9)
Deﬁnition 1. The control number of a SGP conﬁguration K is deﬁned
as
ctn(K) := +

λ−/λ+
ctn(K) ∈[0, 1] ,
(10)
where λ−resp. λ+ is the minimum resp. maximum of the objective func-
tion ζ(q) in (9) under the side condition ν(q) in (6). ctn(K) = 0 cha-
racterizes a singular conﬁguration and a value of 1 an optimal one.
4.
Computation and
ell-deﬁnedness of ctn
We solve the optimization problem in order to compute λ−resp. λ+
by introducing a Lagrange multiplier λ. Then the approach simpliﬁes in
consideration of ∇ζ = 2 Z q and ∇ν = 2 N q, to the general eigenvalue
problem (Z −λ N) q = o. This system of linear equations has a nontrivi-
al solution, if and only if |Z −λ N| = 0. The degree of the characteristic
polynomial in λ corresponds with rank(J ) because of N = J T J . Every
general eigenvalue λi is linked with an general eigenvector ei. The smal-
lest λ−and the largest λ+ are the wanted extreme magnitudes because
of
Z ei = λi N ei
and
eT
i N ei = 1
⇒
ζ(ei) = λi.
(11)
Theorem 1. λ−and λ+ of Def. 1 are the extreme general eingenvalues
of Z with respect to N. All roots λi of the characteristic polynomial
|Z −λ N| = 0 are positive if and only if rank(J ) = 6.
The Control Number as Index for Stewart Gough Platforms
19
with
Proof: According to Hestenes, 1975 all λi’s are real. Due to (11) all λi’s
are nonnegative. If q is no pure translation (q ̸= o), then all angular
velocities in the passive joints would vanish if and only if the 12 anchor
point lie on the isa. But such a conﬁguration yields rank(J ) = 1. In the
case of a pure translation, there would be no angular velocities in the
□
Theorem 2. The number of roots λi of the characteristic polynomial
|Z −λ N| = 0 dropping to inﬁnity equals the defect(J ).
Proof: All screws ±µq ∈kerι with µ ∈R cause arbitrarily large velocities
v(Pi) = v⊥(Pi) resp. v(Bi) = v⊥(Bi) and therefore arbitrarily large ωBi
resp. ωPi. The proof follows by carring out limµ→∞and (11).
□
Due to Theorem 1 and 2 the control number is well deﬁned. Therefore
all initially stated seven properties are obviously fulﬁlled.
the  translation. But such a conﬁguration yields rank(J ) ≤3.
passive joints if and only if the legs are parallel to the direction of
W

Remark.
It does not make sense to deﬁne ζ(q) only as  ω
2
Bi (resp.
 ω
2
Pi ) for following reasons: First, the index would not fulﬁll our 7th
demand for the same reason as the rigidity rate. Second, the index would
not fulﬁll our 2nd demand, because there exist nonsingular SGP conﬁ-
gurations, where the Li’s are the path tangents of Pi (resp. Bi) with
regard to q. Consequently we get ζ(q) = 0 and the index would equal 0.
4.1
According to Wolf and Shoham, 2003 the closest path normal complex
of a helical motion (rotations and translations included) to L1, .., L6,
described by its axis and pitch, provides additional information on the
SGP’s instantaneous motion and understanding of the type of singularity
when the SGP is at, or in the neighborhood of, a singular conﬁguration.
Since the ctn is a performance index as well as a distance measure, a
small ctn indicates the closeness to a singularity. Due to Theorem 2 and
the continuity of the polynomial functions |Z −λ N| = 0, which arise if
we move towards a singular position, we can say that the closest linear
complex to L1, .., L6 equals the path normal complex of e+ according
to (11). Therefore this method additionally brings about a kind of best
approximating linear line complex in the neighbourhood of singularities,
and the calculation needs no case analysis like Pottmann’s method.
5.
Final
xample
We consider a two parametric set SK of conﬁgurations K, given by
Bi = (cos αi, sin αi, −h)T
and
Pi = (cos βi, sin βi, h)T
with
α1 = β2 −π
3 = −α
α3 = β4 −π
3 = 2π
3 −α
α5 = β4 −π
3 = 4π
3 −α
α2 = β1 + π
3 = α
α4 = β3 + π
3 = 2π
3 + α
α6 = β5 + π
3 = 4π
3 + α
where α ∈[0, π
6 ] denotes the design parameter and h ∈R+ the posture
parameter of the SGP. All K ∈SK with α ̸= π
6 and h /∈{0, ∞} are
nonsingular. We study this example, because such manipulators are very
relevant in practice as ﬂight simulators. The matrix Z −λN can be
manipulated by elementary row and column operations to the diagonal
matrix diag(∆1, .., ∆6). Therefore the eigenvalues λi can be computed
explicitly using ∆i = 0, whereas λ1 = λ2 and λ4 = λ5. K+ given by
h+ = γ
4 ≈0.4,
α+ = −arctan
„√
5γ −
√
15
5
«
≈4◦,
γ =
q
2
√
5 −2 (12)
K
+ determined
by λ1,2 = λ4,5 and λ3 = λ6 we get ctn(K+) =
q
2
√
5 −4 ≈0.687.
G. Nawratil
20
(see Fig . 2 and 3). For K
Instantaneous Motion near Singularities
E
has the maximal ctn of all K ∈S
s

The SGP with α+ also makes sense from the practical point of view,
because contrary to the often propagandized 3-3 octahedral manipula-
tor (α = 0) no anchor points coincide. But coinciding anchor points are
lines of ctn when the platform is translated away from the central loca-
tion parallel to the base plane. The diﬀerence between two neighbouring
contour lines is 0.05, where the highest has the value of 0.65.
6, 7
and 8 illustrate the graphs of ctn dependig on the angle ω of the rotation
of Σ about an axis parallel to x, z or y, respectively, through (0, 0, h+).
illustrates the graph of ctn depending on
.
g. 4 shows the contour
Fi
The Control Number as Index for Stewart Gough Platforms
21
g.
Fi
Fig
Figure 2.
Axonometry of K+
Figure 3.
Contours of ctn(SK)
s.
hard to manufacture. Therefore we take a closer look to this SGP.
5
h

References
Remark.
The rigidity rate of all nonsingular conﬁgurations of this set
SK is constant at the maximal value of
/2. Only in singular positions
it drops to zero. So if we approach a singularity of SK the value of the
rigidity rate is constant
/2. Therefore this index is not recommendable
for comparing diﬀerent postures of diﬀerent SGPs.
6.
Conclusion
The presented index, called control number (ctn), allows to compare
diﬀerent postures of diﬀerent SGPs, because it obeys the initially stated
seven conditions. Therefore ctn can serve as a performance index as well
as a distance measure to the closest singularity. This concept can also
be modiﬁed for redundant SGPs and 3 dof RPR manipulators.
An article about optimal conﬁgurations K with ctn(K) = 1 is in pre-
paration. It can be proved, that such conﬁgurations do exist. New per-
formance indices for 6R robots have been presented in Nawratil, 2006.
Acknowledg ment
This is part of the author’s PhD-thesis. The author expresses his sin-
cere thanks to his supervisor Prof. H. Stachel for continuous support.
G. Nawratil
22
Hestenes, M.R. (1975), Optimization theory, New York, A Wiley publication.
Lang, J., Mick, S., and R¨oschel, O. (2001), The Rigidity Rate of Positions of Stewart-
Gough Platforms, Journal for Geometry and Graphics, vol. 5, no. 2, pp. 121–132.
Lee, J., Duﬀy, J., and Hunt, H. (1998), A Practical Quality Index Based on the Octahe-
dral Manipulator, Int. J. of Robotics Research, vol. 17, no. 10, pp. 1081–1090.
Merlet, J.-P. (1992), Singular Conﬁgurations of Parallel Manipulators and Grassmann
Geometry, Int. J. of Robotics Research, vol. 8, no. 5, pp. 45–56.
Nawratil, G. (2006), New Performance Indices for 6R Robot Postures, CD-Proc. of
the 1st EuCoMeS (M. Husty, H.P. Schr¨ocker, eds.), 12pp., Obergurgl, Austria.
Pottmann, H., Peternell, M., and Ravani, B. (1998), Approximation in line space:
applications in robot kinematics and surface reconstruction, Advances in Robot
Kinematics: Analysis & Control (J. Lenarcic, M. Husty, eds.), pp. 403–412, Kluwer.
Salisbury, J.K. and Craig, J.J. (1982), Articulated Hands: Force Control and Kine-
matic Issues, Int. J. of Robotics Research, vol. 1, no. 1, pp. 4–17.
Wolf, A., and Shoham, M. (2003), Investigations of Parallel Manipulators Using Linear
Complex Approximation, Journal of Mechanical Design, vol. 125, pp. 564–572.
Yoshikawa, T. (1985), Manipulability of Robotic Mechanisms, Int. J. of Robotics Re-
search, vol. 4, no. 2, pp. 3–9.
Zanganeh, K.E., and Angeles, J. (1997), Kinematic Isotropy and the Optimum Design
of Parallel Manipulators, Int. J. of Robotics Research, vol. 16, no. 2, pp. 185–197.
π
π
e

DETERMINING THE 3
DETERMINING THE 3
DETERMINING THE 3
DETERMINING THE 3 ××××3 ROTATION MATRICES 
3 ROTATION MATRICES 
3 ROTATION MATRICES 
3 ROTATION MATRICES 
THAT SATISFY THREE L
THAT SATISFY THREE L
THAT SATISFY THREE L
THAT SATISFY THREE LINEAR EQUATIONS IN 
INEAR EQUATIONS IN 
INEAR EQUATIONS IN 
INEAR EQUATIONS IN 
THE DI
THE DI
THE DI
THE DIRECTION COSINES
RECTION COSINES
RECTION COSINES
RECTION COSINES    
Carlo Innocenti 
DIMeC – University of Modena and Reggio Emilia – Italy 
carlo.innocenti@unimore.it 
Davide Paganelli 
DIEM – University of Bologna – Italy 
davide.paganelli@mail.ing.unibo.it 
Abstract
Abstract
Abstract
Abstract 
The paper presents a solution to all the spatial kinematics problems that 
-
sines satisfy three linear equations. After having expressed the direction co-
sines in terms of the Rodrigues parameters, a classical elimination method 
to solve three quadratic equations in three unknowns is here extended to in-
pa
Keywords:
Keywords
Keywords
Keywords  
Rotation matrix, direction cosines, Rodrigues parameters     
1. 
1. 
1. 
1.     
Introduction
Introduction
Introduction
Introduction    
A whole class of problems of spatial kinematics can be solved by de-
three given linear equations. Owing to the orthogonality constraints 
among the direction cosines, these problems are equivalent to solving a 
set of nine equations: three linear and six quadratic. 
Rather than tackling right away the solution of such an equation set, 
it is computationally more efficient to replace, in each equation, all un-
known direction cosines by their expressions in terms of the Rodrigues 
parameters. In doing so, all orthogonality constraints are implicitly ful-
filled, whereas the former linear equations in the direction cosines turn 
into second-order equations in the Rodrigues parameters. 
Unfortunately, the known algebraic elimination algorithms that solve 
a set of three quadratic equations – such as the Sylvester method – are 
23
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 23 32. 
–
require determination of the 3 × 3 rotation matrices whose nine direction co
clude all solutions at infinity. Therefore no admissible 3 × 3 rotation matrix is 
rametrization of orientation. A case study exemplifies the new method. 
neglected even though it corresponds to a singularity of the Rodrigues 
termining all 3 × 3 rotation matrices whose nine direction cosines obey 
::

unable to find real solutions at infinity, which are here of interest too 
because infinite real Rodrigues parameters are associated to finite real 
exist, these algorithms might fail to determine even the finite solutions. 
After exemplifying the recurrence in kinematics of the addressed 
three-equation set in the direction cosines, this paper presents an origi-
nal procedure to find all real solutions of the equation set. The proposed 
procedure – based on the Rodrigues parametrization of orientation and 
presented with reference to the Sylvester algebraic elimination algorithm –
 is able to identify all real solutions in terms of Rodrigues parameters, 
both finite and at infinity. Therefore its adoption guarantees that no real 
neglected. 
A numerical example shows application of the proposed computational 
2. 
2. 
2. 
2.     
A linear three-equation set in nine direction cosines is the unifying 
factor behind a number of seemingly different kinematics problems, such 
as those epitomized in Fig. 1. Although these problems have already been 
solved in the literature by ad-hoc algorithms, they could be also worked 
-
ditions in the direction cosines. In this respect, the procedure proposed in 
this paper is a viable alternative to already-known solving methods. 
-
-
    
 
Figure 1. a) Fully-parallel spherical wrist; 
 
b) rigid body supported at six points by six planes. 
 
 
not always suitable to the case at hand. The reason is twofold: i) they are 
24 
3 × 3 rotation matrices, and ii) in case one or more solutions at infinity 
3 × 3 rotation matrix compatible with the original three linear equations is 
procedure to a case study. 
TThhe e Relelev
evaanncce e tto o Kiinnem
emaattiiccss  
out by determining all 3 × 3 rotation matrices satisfying three linear con
tics aims at determining all possible orientations of the moving platform 
Figure 1a shows a fully parallel spherical wrist, whose direct kinema
C. Innocenti and D. Paganelli

for a given set of actuator lengths (Innocenti and Parenti-Castelli, 1993). 
If vvvvi and w
ww
wi are the coordinate vectors of points Qi and Pi relative to the 
fixed (S ) and movable (S’ ) reference frames respectively, and RRRR is the 
rotation matrix for transformation of coordinates from S’ to S, then – by 
applying Carnot’s theorem to triangle OQiPi – the compatibility equa-
tions can be written as 
 
 
+
−
=
=
2
2
(
1,..,3)
T
T
T
i
i
i
i
i
i
i
L
i
v v
w w
v Rw
 
(1) 
 
These equations are linear in the (unknown) elements of matrix RRRR. 
Figure 1b refers to another kinematics problem, which consists in find-
ing any possible positions of a rigid body C supported at six given points 
Pi ( i=1,..,6) by six fixed planes (Innocenti, 1994; Wampler, 2006). The co-
ordinate vector www
wi of each point Pi is known with respect to a reference 
frame S’ attached to C. Each supporting plane is defined with respect to 
the fixed frame S by the coordinate vector vvvvi of a point Qi lying on the 
plane, together with the components in S of a unit vector nnnni orthogonal to 
the plane. The unknown position of C with respect to S is parametrized 
through the coordinate vector s s s s of the origin of S’ with respect to S, to-
gether with the rotation matrix RRRR for transformation of coordinates from 
S’ to S. The compatibility equations can be written as: 
 
 
(
)
[
]
0
(
1,..,6)
T
i
i
i
i
+
−
=
=
n
s
R w
v
 
(2) 
 
They are linear in both the elements of RRRR and the components of ssss. If 
there exist three supporting planes not parallel to the same line, three of 
these equations can be linearly solved for the components of vector ssss, and 
their expressions inserted into the remaining three equations. Therefore 
a linear three-equation set that has the nine direction cosines of matrix RRRR 
as only unknowns is obtained once more. 
Other kinematics problems susceptible of being reduced to the same 
linear formulation as the one just exemplified are traceable in Gosselin 
et al., 1994, Husain and Waldron, 1994, Wohlhart, 1994, Callegari et al. 
2004.  
3. 
3. 
3. 
3.     
If ijr  (i,j =1,2,3) is the ij th element (direction cosine) of a rotation matrix 
RR
ij k
k
equations that has to be solved for ijr  (i, j =1,2,3) is 
 
25 
The  Equations  to  be  Solved  
The  Equations  to  be  Solved  
3 × 3 
Determining the 
Rotation Matrics
,
RR and a , , b  (i, j, k =1,..,3)  are known quantities, the set of three linear 

 
=
=
=
∑
,
,
1,..,3
(
1,..,3)
ij k
ij
k
i j
a
r
b
k
 
(3) 
 
The expressions of rij in terms of the vector of Rodrigues parameters 
pppp    = (p1,p2,p3)T are concisely given by (Bottema and Roth, 1979) 
 
 
−
+
+
=
+

(1
)
2
2
1
T
T
T
p p I
p
p p
R
p p
 
(4) 
 
where p  is the skew-symmetric matrix associated with vector pppp, 
i.e., 
=
×
pe
p
e

 for any three-component vector eeee. As is known, the vector pppp 
of Rodrigues parameters corresponds to a finite rotation of amplitude 
1
2 tan
θ
−
=
p  about the axis defined by unit vector u
p
p
/
=
. 
Unfortunately, the Rodrigues parametrization of orientation is singu-
lar for any half-a-turn rotation (θ = π rad) about any line because, in this 
instance, at least one of the components of pppp approaches infinity. 
By considering Eq. (4), Eq. (3) can be re-written as: 
 
 
(
)
,
,
2
2
2
,
1,..,3;
1,..,3
1
2
3
1
0
1,..,3
1
ij k
i
j
i k
i
k
i j
i
j
i
A
p p
B
p
C
k
p
p
p
=
≤
=
⎛
⎞⎟
⎜
⎟
+
+
=
=
⎜
⎟
⎜
⎟⎟
⎜
+
+
+
⎝
⎠
∑
∑
 (5) 
 
where quantities Aij,k, Bi,k, and Ck (i,j,k = 1,..,3; i ≤j) are known because 
dependent on the given quantities aij,k and bk only. 
Because the denominator of Eq. (5) does not vanish for any real vector 
pppp, if pppp does not approach infinity Eq. (5) can be simplified as follows 
 
 
(
)
,
,
,
1,..,3;
1,..,3
0
1,..,3
ij k
i
j
i k
i
k
i j
i
j
i
A
p p
B
p
C
k
=
≤
=
+
+
=
=
∑
∑
 
(6) 
 
Conversely, in case the denominator of Eq. (5) approaches infinity, so 
does at least one of the components of pppp. If both the numerator and the 
denominator of Eq. (5) are homogenized by replacing pi with expression 
xi/x0 (i = 1,..,3), and subsequently multiplied by x02, the resulting denomi-
nator is definitely different from zero (the real quantities x0, x1, x2, and x3 
cannot vanish simultaneously). Finally, for x0 = 0 (which means that at 
least one Rodrigues parameter approaches infinity), Eq. (5) becomes 
 
 
(
)
,
,
1,..,3;
0
1,..,3
ij k
i
j
i j
i
j
A
x x
k
=
≤
=
=
∑
 
(7) 
 
26
C. Innocenti and D. Paganelli

This is a set of three homogeneous quadratic equations in three un-
knowns, namely, the components of vector xxxx = (x1, x2, x3)T. 
If the set of the non-vanishing vectors that satisfy Eq. (7) is parti-
tioned into equivalence classes so that two solution vectors parallel one 
to the other belong to the same class, then each class corresponds to a 
vector pppp of Rodrigues parameters which satisfies Eq. (5) and has infinite 
magnitude. 
Finding all real solutions of Eq. (5) – both finite and at infinity – has 
been thus reduced to determining all real finite solutions of Eq. (6), to-
gether with all equivalence classes of real solutions of Eq. (7). This im-
plies that all real solutions of Eq. (6) – including those at infinity – need 
to be computed. Bezout’s theorem (Semple and Roth, 1949) ensures that 
the maximum number of these solutions is eight. 
4. 
4. 
4. 
4.     
As will be proven further on, the existence of solutions at infinity 
might affect the search for the finite solutions. It is therefore convenient 
to compute the solutions at infinity first. 
The Appendix at the end of the paper briefly summarizes the mathe-
matical tools that will be taken advantage of in this section.  
4.1 
4.1 
4.1 
4.1     
s 
 
 
 
  
The solutions at infinity, if existent, can be found by identifying Eq. (7) 
with Eq. (1-A) of the Appendix. For the case at hand, Eq. (3-A) becomes 
 
 
(
) =
2
2
2
1
2
3
1
2
1
3
2
3
T
x
x
x
x x
x x
x x
M
0 
(8) 
 
where M
M
M
M is a 6 × 6 matrix that depends on coefficients Aij,k of Eq. (7) only. 
In case the determinant of M
M
M
M is different from zero, there is only the 
trivial solution for Eq. (7), and no solution at infinity exists for Eq. (6). 
Conversely, if the determinant of M
M
M
M vanishes, Eq. (7) has non-
vanishing solutions. The number of equivalence classes of these solutions 
matches the number of solutions at infinity for Eq. (6). Determination of 
all solutions of Eq. (7) poses no hurdles and will not be detailed in this 
paper. Suffices it to say that, in the worst possible scenario, the classes of 
equivalence for the solutions of Eq. (7) can be found by solving a set of 
two quadratic equations in two unknowns. 
27
The Solving  Procedure  
The Solving  Procedure  
Solutions  at  Infinity  
s 
 
 
 
  
Solutions  at  Infinity  
3 × 3 
Determining the 
Rotation Matrics

4.2 
4.2 
4.2 
4.2     
In most cases, the finite solutions of Eq. (6) can be determined through 
the procedure described by Roth, 1993, and here briefly summarized. If 
(α,β,γ ) is a permutation of indices (1,2,3), two of the three unknowns, say 
pα and pβ, are first replaced in Eq. (6) by quantities yα /y0 and yβ /y0. Fol-
lowing multiplication by y02, the ensuing equation set is obtained: 
 
 
(
)
(
)
(
)
(
)
,
min
,
max
,
,
,
0
,
;
2
2
,
,
0
0
1,..,3
ij k
i
j
i
i
k
i k
i
i j
or
i
j
i
or
k
k
k
A
y y
A
p
B
y y
A
p
B
p
C
y
k
γ
γ
γ
α
β
α
β
γγ
γ
γ
γ
=
≤
=
⎡
⎤
+
+
⎣
⎦
+
+
+
=
=
∑
∑
 
(9) 
 
which is homogeneous with respect to unknowns y0, yα , and yβ . 
If a triplet of values for pα , pβ , and pγ fulfils Eq. (6), Eq. (9) must be 
satisfied by the same value of pγ together with a non-vanishing triplet of 
values for y0 , yα , and yβ . By also taking into account the dependence on 
pγ of the coefficients of the homogeneous system in Eq. (9), the solvability 
condition for Eq. (9) that corresponds to Eq. (3-A) turns into 
 
 
(
)
2
2
2
0
0
0
(
)
T
p
y
y
y
y y
y y
y y
γ
α
β
α
β
α
β
=
N
0 
(10) 
 
The solution of this linear set is meaningful only if the triplet 
(y0 , yα , yβ) does not vanish, i.e., if the following condition is satisfied (see 
Eq. (4-A)) 
 
 
γ =
det
(
)
0
p
N
 
(11) 
 
This univariate polynomial equation in pγ has degree not greater than 
eight (Roth, 1993). It is the outcome of elimination of unknowns pα and pβ 
from Eq. (6). For every root of Eq. (11), the corresponding values of pα 
and pβ can be easily found by Eq. (10) through linear determination of a 
non-vanishing triplet (y0 , yα , yβ ). Thus far is the outline of the procedure 
that has been presented – without investigating its singularities – in 
Roth, 1993. 
It is worth noting that Eq. (11) is unable to yield solutions at infinity. 
Things keep manageable if an infinite pγ satisfies Eq. (5) for some values 
of pα and pβ, as Eq. (11) has a degree lower than eight and its roots con-
vey information on finite solutions only. Regrettably, should an infinite 
solution to Eq. (5) exist for a finite pγ (i.e., only pα or pβ or both approach 
infinity) then Eq. (11) vanishes and the described elimination method 
becomes pointless. 
28
Finite Solutionss  
Finite Solutionss  
C. Innocenti and D. Paganelli

This latter drawback can be explained by noticing that – for pα or pβ 
approaching infinity – Eq. (10) should hold for y0 = 0 and for some (not 
simultaneously vanishing) values of yα and yβ, irrespective of the value of 
pγ (the left-hand side of Eq. (9) does not depend on pγ when y0 = 0). Conse-
quently, the determinant of 6 × 6 matrix N
NN
N(pγ ) should vanish for any finite 
pγ , which also means that Eq. (11) collapses into a useless identity. 
If it is not possible
 
to choose index γ  so as to circumvent the just 
mentioned inconvenience, the classical elimination method is definitely 
unable to find any  finite solution  to  Eq. (6). Even a different set of Rodri-
gues parameters consequent on a randomly-chosen offset rotation does 
not guarantee removal of the inconvenience.  
4.3 
4.3 
4.3 
4.3     
Adding robustness
Adding robustness
Adding robustness
Adding robustness    
To overcome the drawback outlined at the end of the previous subsec-
tion, once the solutions at infinity of Eq. (6) have been computed (see 
subsection 4.1), and prior of attempting determination of the finite solu-
tions, the vector pppp of Rodrigues parameters is replaced by vector 
qqqq = (q1, q2, q3)T, related to the former by the ensuing relation 
 
 
 
=
q
L p  
(12) 
 
where LLLL is a 3 × 3 non-singular constant matrix whose third row is not 
orthogonal to each non-vanishing vector (x1, x2, x3)T that solves Eq. (7). 
By selecting γ = 3 and replacing q1 and q2 with quantities z1 /z0 and z2 /z0, 
Eq. (9) turns into 
 
 
(
)
(
)
(
)
,
3,
3
,
0
,
1,2;
1,2
2
2
33,
3
3,
3
0
0
1,..,3
ij k
i
j
i
k
i k
i
i j
i
j
i
k
k
k
A
z z
A
q
B
z z
A
q
B
q
C
z
k
=
≤
=
′
′
′
+
+
′
′
′
+
+
+
=
=
∑
∑
 
(13) 
 
where coefficients A ij,k, B i,k, and C k, depend on the coefficients of Eq. (6) 
and on the chosen matrix LLLL. By applying the elimination procedure de-
scribed in the previous subsection, the correspondent of Eq. (11) is 
 
 
′
=
3
det
(
)
0
q
N
 
(14) 
 
Differently from Eq. (11), Eq. (14) does not lose trace of the finite solu-
tions of Eq. (6), because any solution at infinity in terms of pppp involves a 
vector qqqq whose third component, q3, approaches infinity too. 
29
′
′
′
 
which is a univariate polynomial equation in the unknown 
 .
 q3
3 × 3 
Determining the 
Rotation Matrics

5. 
5. 
5. 
5.     
The ensuing linear equation set in the direction cosines is considered: 
 
 
21
22
23
31
32
33
11
12
21
22
33
r
r
r
1
0
r
r
r
1
0
r
r
r
3r
r
1
0
⎧
+
+
+
=
⎪⎪⎪
+
+
+
=
⎨⎪⎪
+
+
+
−
+
=
⎪⎩
 
 
 
In terms of homogenized Rodrigues parameters (x1, x2, x3 , these equa-
tions have three solutions at infinity, i.e., (1, −1,0), (0,1, −1), and (1,0,0). 
Since each Rodrigues parameter is finite for at least one solution at infin-
ity, the change of variable in Eq. (12)  is crucial. The third row of LL is 
expressly chosen not normal to each of the three solutions at infinity. 
A
 
possible expression for LLL is 
 
 
1
0
0
0
1
0
1
1
1
⎛
⎞⎟
⎜
⎟
⎜
⎟
= ⎜
⎟
⎜
⎟
⎜
⎟⎟
⎜−
−
⎝
⎠
L
 
 
 
Following the change of variables in Eq. (12), Eq. (14) yields 
 
 
5
4
3
2
3
3
3
3
3
9
54
126
57
9
0
q
q
q
q
q
−
+
−
+
−
=
 
 
 
The only real root of this equation is q3 = 3. Back-substitution of this 
root into the analogous of Eq. (10) completes determination of vector 
qqqq = (−1,1,3)T. Next, Eq. (12) results into pppp = (−1,1, −1)T. The rotation matri-
ces corresponding to the four real solutions − three at infinity in terms of 
Rodrigues parameters, and the other finite − are respectively (see Eq. 4): 
 
0
1
0
1
0
0
1
0
0
0
0
1
1
0
0 ,
0
0
1 ,
0
1
0 ,
1
0
0 .
0
0
1
0
1
0
0
0
1
0
1
0
−
−
−
−
−
−
−
−
−
−
 
6. 
6. 
6. 
6.     
Conclusions
Conclusions
Conclusions
Conclusions    
matrices satisfying three linear equations in the direction cosines. The 
proposed procedure is based on the Rodrigues parametrization of orienta-
tion and takes advantage of a classical algebraic elimination method in 
order to solve a set of  three quadratic equations in three unknowns. 
To
 
avoid neglecting any possible 3 × 3 rotation matrix, the classical 
30
)
L
Numerical  Example  
Numerical  Example  
This paper has presented a new procedure to find all 3 × 3 real rotation 
C. Innocenti and D. Paganelli
⎛⎜⎜⎜⎜⎜⎜⎝
⎞⎟⎟⎟⎟⎟⎟⎟⎠
 
⎛⎜⎜⎜⎜⎜⎜⎝
⎞⎟⎟⎟⎟⎟⎟⎟⎠
 
⎛⎜⎜⎜⎜⎜⎜⎝
⎞⎟⎟⎟⎟⎟⎟⎟⎠
 
⎛⎜⎜⎜⎜⎜⎜⎝
⎞⎟⎟⎟⎟⎟⎟⎟⎠
 

tion method has been extended in the paper so that it keeps 
effective even in case one or more Rodrigues parameters approach infinity. 
A numerical example has shown application of the proposed procedure 
to a case study. 
References
References
References
References    
Bottema, O., and Roth, B. (1979), Theoretical Kinematics, North-Holland Pub-
lishing Co., Amsterdam, NL. 
Callegari M., Marzetti P., and Olivieri B. (2004), Kinematics of a Parallel Mecha-
nism for the Generation of Spherical Motions, On Advances  in Robot Kine
mat
-
ics (J. Lenarčič and C.  Galletti (eds.)), Kluwer Academic Publishers, the 
Netherlands, pp. 449-458. 
Gosselin, C.M., Sefrioui J., and Richard, M.J. (1994), On the Direct Kinematics of 
Spherical Three-Degree-of-Freedom Parallel Manipulators of General Archi-
tecture, ASME Journal of Mechanical Design, vol. 116, no. 2, pp. 594-598. 
Husain, M., and Waldron, K.J. (1994), Direct Position Kinematics of the 3-1-1-1 
Stewart Platforms, ASME Journal of Mech. Design, vol. 116, no. 4, pp. 1102-
1107. 
Innocenti, C. (1994), Direct Position Analysis in Analytical Form of the Parallel 
Manipulator That Features a Planar Platform Supported at Six Points by Six 
Planes, Proc. of the 1994 Engineering Systems Design and Analysis Confer-
ence, July 4-7, London, U.K., PD-Vol. 64-8.3, ASME, N.Y., pp. 803-808. 
Innocenti, C., and Parenti-Castelli, V. (1993), Echelon Form Solution of Direct 
Kinematics for the General Fully-Parallel Spherical Wrist, Mechanism and 
Machine Theory  vol. 28, no. 4, pp. 553-561. 
Roth, B. (1993), Computations in Kinematics, in Computational Kinematics, 
Kluwer Academic Publisher, the Netherlands, pp. 3-14. 
Salmon, G. (1885), Modern Higher Algebra, Hodges, Figgis, and Co., Dublin. 
Semple, J.G., and Roth, L. (1949), Introduction to Algebraic Geometry, Oxford 
University Press, London, UK. 
Wampler, C.W.  (2006), On a Rigid Body Subject to Point-Plane Constraints, 
ASME Journal of Mechanical Design, vol. 128, no. 1, pp. 151-158. 
Wohlhart, K. (1994), Displacement Analysis of the General Spherical Stewart 
Platform, Mechanism and Machine Theory, vol. 29, no. 4, pp. 581-589. 
Appendix
Appendix
Appendix
Appendix    
Let ffff(gggg) be an n-dimensional vector function that depends on an 
n-dimensional vector gggg. If all components of ffff are homogeneous functions 
of the same degree in the components of gggg, for any non-vanishing solution 
of the following homogenous system 
 
 
 
31
elimina
,
3 × 3 
Determining the 
Rotation Matrics

the ensuing condition holds (Salmon, 1885) 
 
 
D
∇
= 0 
(2-A) 
 
where D is the determinant of the Jacobian matrix of ffff. 
Sylvester (Salmon, 1885) has suggested the following procedure in or-
der to assess whether a set of three second-order homogeneous equations 
in three unknowns has non-vanishing solutions: 
i) 
compute the determinant D (which is a third-order homogeneous 
polynomial in the components gi, i =1,..,3, of vector gggg); 
ii) 
determine the gradient of D (its components are quadratic homo-
geneous polynomials in gi, i=1,..,3); 
iii) 
consider Eqs. (1-A)-(2-A) as a set of six equations that are linear 
and homogeneous in the six monomials gigj (i,j =1,..,3, i ≤j) 
 
 
(
) =
2
2
2
1
2
3
1
2
1
3
2
3
T
g
g
g
g g
g g
g g
H
0 
(3-A) 
 
where H
H
H
H is a 6× 6 matrix whose elements are functions of the coef-
ficients of Eq. (1-A). 
The original set of three homogeneous quadratic equations has non-
vanishing solutions if and only if the ensuing condition is satisfied 
 
 
=
det
0
H
 
(4-A) 
32
=
( )
f g
0  
(1-A) 
C. Innocenti and D. Paganelli

A POLAR DECOMPOSITION BASED
DISPLACEMENT METRIC FOR
A FINITE REGION OF SE(N)
Pierre M. Larochelle
Robotics & Spatial Systems Lab
Department of Mechanical and Aerospace Engineering
Florida Institute of Technology
pierrel@ﬁt.edu
Abstract
An open research question is how to deﬁne a useful metric on SE(n)
with respect to (1) the choice of coordinate frames and (2) the units
used to measure linear and angular distances. A technique is presented
for approximating elements of the special Euclidean group SE(n) with
elements of the special orthogonal group SO(n+1). This technique is
based on the polar decomposition (denoted as PD) of the homogeneous
transform representation of the elements of SE(n). The embedding of
the elements of SE(n) into SO(n+1) yields hyperdimensional rotations
that approximate the rigid-body displacement. The bi-invariant metric
on SO(n+1) is then used to measure the distance between any two
spatial displacements. The result is a PD based metric on SE(n) that is
left invariant. Such metrics have applications in motion synthesis, robot
calibration, motion interpolation, and hybrid robot control.
Keywords: Displacement metrics, metrics on the special Euclidean group, rigid-
body displacements
1.
Introduction
Simply stated a metric measures the distance between two points in
a set. There exist numerous useful metrics for deﬁning the distance be-
tween two points in Euclidean space, however, deﬁning similar metrics
for determining the distance between two locations of a ﬁnite rigid body
is still an area of ongoing research, see Kazerounian and Rastegar, 1992,
Martinez and Duﬀy, 1995, Larochelle and McCarthy, 1995, Etzel and
McCarthy, 1996, Gupta, 1997, Tse and Larochelle, 2000, Chirikjian,
1998, Belta and Kumar, 2002, and Eberharter and Ravani, 2004. In
the cases of two locations of a ﬁnite rigid body in either SE(3) (spatial
locations) or SE(2) (planar locations) any metric used to measure the
distance between the locations yields a result which depends upon the
chosen reference frames, see Bobrow and Park, 1995 and Martinez and
Duﬀy, 1995. However, a metric that is independent of these choices,
33
© 2006 Springer. Printed in the Netherlands.
and B. Roth (eds.), Advances in Robot Kinematics, 33 40.
J. Lenarcic

referred to as being bi-invariant, is desirable. Interestingly, for the spe-
ciﬁc case of orienting a ﬁnite rigid body in SO(n) bi-invariant metrics
do exist.
Larochelle and McCarthy, 1995 presented an algorithm for approxi-
mating displacements in SE(2) with spherical orientations in SO(3). By
utilizing the bi-invariant metric of Ravani and Roth, 1983 they arrived
at an approximate bi-invariant metric for planar locations in which the
error induced by the spherical approximation is of the order
1
R2 , where
R is the radius of the approximating sphere.
Their algorithm for an
approximately bi-invariant metric is based upon an algebraic formula-
tion which utilizes Taylor series expansions of sine() and cosine() terms
in homogeneous transforms, see McCarthy, 1983. Etzel and McCarthy,
1996 extended this work to spatial displacements by using orientations in
SO(4) to approximate locations in SE(3). This paper presents an alter-
o
hyperspherical rotations. However, an alternative approach for reaching
the same goal is presented. The polar decomposition is utilized to yield
hyperspherical orientations that approximate planar and spatial ﬁnite
displacements.
2.
The PD Based Embedding
This approach, analogous to the works reviewed above, also uses hy-
perdimensional rotations to approximate displacements. However, this
technique uses products derived from the singular value decomposition
(SVD) of the homogeneous transform to realize the embedding of SE(n-
1) into SO(n). The general approach here is based upon preliminary
work reported in Larochelle et al., 2004.
Consider the space of (n × n) matrices as shown in Fig. 1. Let [T] be
a (n×n) homogeneous transform that represents an element of SE(n-1).
[A] is the desired element of SO(n) nearest [T] when it lies in a direction
orthogonal to the tangent plane of SO(n) at [A]. The PD of [T] is used
to determine [A] by the following methodology.
The following theorem, based upon related works by Hanson and Nor-
ris, 1981 provides the foundation for the embedding
is given by: [A] = [U][V ]T where [T] = [U][diag(s1, s2, . . . , sn)][V ]T is
the SVD of [T].
Shoemake and Duﬀ, 1992 prove that matrix [A] satisﬁes the following
optimization problem: Minimize: ∥[A]−[T]∥2
F subject to: [A]T [A]−[I] =
[0], where ∥[A]−[T]∥2
F = 
i,j(aij −tij)2 is used to denote the Frobenius
P
L
Theorem 1 Given any (n × n) matrix [T] the closest element of SO(n)
.
34
. . M. arochelle
-
metrical motivations are the same- to approximate displacements with
native approach for deﬁning a metric on SE(n). Here, the underlying ge

Figure 1.
General Case: SE(n-1) ⇒SO(n)
norm. Since [A] minimizes the Frobenius norm in Rn2 it is the element
of SO(n) that lies in a direction orthogonal to the tangent plane of SO(n)
at [R]. Hence, [A] is the closest element of SO(n) to [T]. Moreover, for
full rank matrices the SVD is well deﬁned and unique. Th. 1 is now
restated with respect to the desired SVD based embedding of SE(n-1)
into SO(n)
Theorem 2 For [T] ∈SE(n-1) and [U] & [V ] are elements of the SVD
of [T] such that [T] = [U][diag(s1, s2, . . . , sn−1)][V ]T if [A] = [U][V ]T
then [A] is the unique element of SO(n) nearest [T].
Recall that [T], the homogenous representation of SE(n), is full rank
(McCarthy, 1990) and therefore [A] exists, is well deﬁned, and unique.
The polar decomposition is quite powerful and actually provides the
foundation for the better known singular value decomposition. The polar
decomposition theorem of Cauchy states that “a non-singular matrix
equals an orthogonal matrix either pre or post multiplied by a positive
deﬁnite symmetric matrix”, see Halmos, 1958.
With respect to our
application, for [T] ∈SE(n-1) its PD is [T] = [P][Q], where [P] and [Q]
are (n×n) matrices such that [P] is orthogonal and [Q] is positive deﬁnite
and symmetric. Recalling the properties of the SVD, the decomposition
of [T] yields [U][diag(s1, s2, . . . , sn−1)][V ]T , where matrices [U] and [V ]
are orthogonal and matrix [diag(s1, s2, . . . , sn−1)] is positive deﬁnite and
symmetric. Moreover, it is known that for full rank square matrices that
the polar decomposition and the singular value decomposition are related
by: [P] = [U][V ]T and [Q] = [V ][diag(s1, s2, . . . , sn−1)][V ]T , Faddeeva,
A Polar Decomposition based Displacement Metric 
.
35
.
.

1959.
Hence, for [A] = [U][V ]T it is known that [A] = [P] and the
PD yields the same element of SO(n). The result being the following
theorem that serves as the basis for the PD based embedding.
Theorem 3 If [T] ∈SE(n-1) and [P] & [Q] are the PD of [T] such that
[T] = [P][Q] then [P] is the unique element of SO(n) nearest [T].
2.1
The Characteristic Length & Metric
characteristic length is employed to resolve the unit disparity be-
tween translations and rotations. Investigations on characteristic lengths
appear in Angeles, 2005; Etzel and McCarthy, 1996; Larochelle and Mc-
Carthy, 1995; Kazerounian and Rastegar, 1992; Martinez and Duﬀy,
1995. The characteristic length used here is R = 24L
π
where L is the max-
imum translational component in the set of displacements at hand. This
characteristic length is the radius of the hypersphere that approximates
the translational terms by angular displacements that are ≤7.5(deg). It
was shown in Larochelle, 1999 that this radius yields an eﬀective balance
between translational and rotational displacement terms. Note that the
metric presented here is not dependent upon this particular choice of
characteristic length.
It is important to recall that the PD based embedding of SE(n-1)
into SO(n) is coordinate frame and unit dependent. However that this
methodology embeds SE(n-1) into SO(n) and that a bi-invariant metric
does exist on SO(n). One useful metric d on SO(n) can be deﬁned using
the Frobenius norm as,
d
=
∥[I] −[A2][A1]T ∥F .
(1)
where [A1] and [A2] of elements of SO(n). It is straightforward to verify
that this is a valid bi-invariant metric on SO(n), see Schilling and Lee,
1988.
2.2
A Finite Region of SE(3)
In order to yield a left invariant metric we build upon the work of
Kazerounian and Rastegar, 1992 in which approximately bi-invariant
metrics were deﬁned for a prescribed ﬁnite rigid body. Here, to avoid
cumbersome volume integrals over the body a unit point mass model for
the moving body is used. Proceed by determining the center of mass
⃗c and the principal axes frame [PF] associated with the n prescribed
locations where a unit point mass is located at the origin of each location:
⃗c
=
1
n
n
	
i=1
⃗di
(2)
.
A
36
P
L
. . M. arochelle

where ⃗di is the translation vector associated with the ith location (i.e.
the origin of the ith location with respect to the ﬁxed frame). Next,
deﬁne [PF] with origin at ⃗c and axes along the principal axes of the n
point mass system by evaluating the inertia tensor [I] associated with
the n point masses,
[PF]
=
 ⃗v1
⃗v2
⃗v3
⃗c
0
0
0
1

(3)
where ⃗vi are the principal axes associated with [I] Greenwood, 2003
and the directions ⃗vi are chosen such that [PF] is a right-handed system.
Note that the principal frame is not dependent on the orientations of the
frames at hand. However, the metric is dependent on the orientations
of the frames. For a set of n locations in a ﬁnite region of SE(3) the
procedure is:
1 Determine [PF] associated with the n displacements.
2 Determine the relative displacements from [PF] to each of the n
locations.
3 Determine the characteristic length R associated with the n relative
displacements and scale the translation terms in each by 1
R.
4 Compute the elements of SO(4) associated with [PF] and each of
the scaled relative displacements using the polar decomposition.
5 The magnitude of the ith displacement is deﬁned as the distance
from [PF] to the ith scaled relative displacement as computed via
Eq. 1. The distance between any 2 of the n locations is similarly
computed via the application of Eq. 1 to the scaled relative dis-
placements embedded in SO(4).
Since ⃗c and [PF] are invariant with respect to both the choice of coordi-
nate frames as well as the system of units (Greenwood, 2003) the relative
displacements determined in step 2 are left invariant and it follows that
the metric is also left invariant.
3.
Case Study
with the ﬁxed reference frame [F] where the x-axes are shown in
red, the y-axes in green, and the z-axes in blue.
Their centroid is
⃗c = [0.7500 1.5000 0.4375]T . Next, the principal axes directions are
A Polar Decomposition based Displacement Metric 
37
Consider the 4 spatial locations in Table. 1 and shown in Fig. 2 along

Table 1.
Four Spatial Locations
#
x
y
z
θ (deg)
φ (deg)
ψ (deg)
∥[T]∥
1
0.00
0.00
0.00
0.0
0.0
0.0
2.5281
2
0.00
1.00
0.25
15.0
15.0
0.0
2.5701
3
1.00
2.00
0.50
45.0
60.0
0.0
2.7953
4
2.00
3.00
1.00
45.0
80.0
0.0
2.8057
mined to deﬁne the principal frame,
[PF] =
⎡
⎢⎢⎣
−0.5692
0.8061
−0.1617
0.75000
−0.7807
−0.5916
−0.2012
1.5000
−0.2578
0.0117
0.9661
0.4375
0
0
0
1
⎤
⎥⎥⎦
(4)
shown in Fig. 2. The characteristic length is R = 24×1.7108
π
= 13.0695 and
the magnitude of the ﬁrst displacement is not zero. This is because the
relative displacement from the principal frame to the ﬁrst location is
non-identity and that the magnitudes of all displacements are computed
with respect to the principal frame.
deter
Figure 2.
The 4 Spatial Locations
38
P
L
. . M. arochelle
the magnitudes of the displacements are listed in Table 1. Interestingly,
0
1
2
3
0
1
2
3
0
0.5
1
1.5
2
2.5
3
X
Y
F=T1
The original locations and the principal frame
T2
T3
T4
PF
Z
.
.

4.
Conclusions
We have presented a metric on SE(n). This metric is based on embed-
ding SE(n) into SO(n+1) via the polar decomposition of the homoge-
neous transform representation of SE(n). It was shown that this method
determines the element of SO(n+1) nearest the given element of SE(n).
A bi-invariant metric on SO(n+1) is then used to measure the distance
between any two spatial displacements SE(n). The results is a PD based
metric on SE(n) that is left-invariant. Such metrics have applications
in motion synthesis, robot calibration, motion interpolation, and hybrid
robot control.
5.
Acknowledgements
References
of the 2005 International Workshop on Computational Kinematics, Cassino, Italy.
SE(3), IEEE Transactions on Robotics and Automation, vol 18, no 3, pp. 334-345.
guidance using screw parameters, Proc. of the ASME Design Engineering Technical
Conferences, Boston, MA, USA.
Bodduluri, R.M.C., (1990), Design and planned movement of multi-degree of freedom
spatial mechanisms, PhD Dissertation, University of California, Irvine.
Design Engineering Technical Conferences, Atlanta, USA.
Eberharter, J., and Ravani, B., (2004), Local metrics for rigid body displacements,
ASME Journal of Mechanical Design, vol. 126, pp. 805-812.
quaternions on SO(4), Proc. of the IEEE International Conference on Robotics and
Automation, Minneapolis, USA.
McCarthy, J.M., (1990), Computational Methods of Linear Algebra, Dover Publishing.
Greenwood, D.T., (2003), Advanced Dynamics, Cambridge University Press.
Mechanical Design, vol. 119, pp. 346-349.
A Polar Decomposition based Displacement Metric
39
Angeles, J., (2005), Is there a characteristic length of a rigid-body displacement, Proc.
Belta, C., and Kumar, V., (2002), An svd-based projection method for interpolation on
Bobrow, J.E., and Park, F.C., (1995), On computing exact gradients for rigid body
Chirikjian, G.S., (1998), Convolution metrics for rigid body motion, Proc. of the ASME
Etzel, K., and McCarthy, J.M., (1996), A metric for spatial displacements using bi-
Gupta, K.C., (1997), Measures of positional error for a rigid body, ASME Journal of
The contributions of Profs. Murray (U. Dayton) and Angeles (McGill
U.) to this work are gratefully acknowledged. This material is based
upon work supported by the National Science Foundation under Grants
No. #0422705. Any opinions, ﬁndings, and conclusions or recommen-
dations expressed in this material are those of the author(s) and do not
necessarily reﬂect the views of the National Science Foundation.

Halmos, P.R., (1990), Finite Dimensional Vector Spaces, Van Nostrand.
Hanson and Norris, (1981), Analysis of measurements based upon the singular value
decomposition, SIAM Journal of Scientiﬁc and Computations, vol. 2, no. 3, pp.
308-313.
Kazerounian, K., and Rastegar, J., (1992), Object norms: A class of coordinate and
metric independent norms for displacements, Proc. of the ASME Design Engineer-
ing Technical Conferences, Scotsdale, USA.
Larochelle, P. (1999), On the geometry of approximate bi-invariant projective dis-
placement metrics, Proc. of the World Congress on the Theory of Machines and
Mechanisms, Oulu, Finland.
Larochelle, P., Murray, A., and Angeles, J., (2004), SVD and PD Based Projection
Metrics on SE(n), in Lenarˇciˇc, J. and Galletti, C. (editors), On Advances in Robot
Kinematics, Kluwer Academic Publishers, pp. 13-22, 2004.
imate bi-invariant metric, ASME Journal of Mechanical Design, vol. 117, no. 4,
pp. 646-651.
for inﬁnite and ﬁnite bodies, ASME Journal of Mechanical Design, vol. 117, pp.
41-47.
McCarthy, J.M., (1983), Planar and spatial rigid body motion as special cases of
spherical and 3-spherical motion, ASME Journal of Mechanisms, Transmissions,
and Automation in Design, vol. 105, pp. 569-575.
McCarthy, J.M., (1990), An Introduction to Theoretical Kinematics, MIT Press.
Ravani, B., and Roth, B., (1983), Motion synthesis using kinematic mappings, ASME
Journal of Mechanisms, Transmissions, and Automation in Design, vol. 105, pp.
460-467.
Schilling, R.J., and Lee, H., (1988), Engineering Analysis- a Vector Space Approach,
Wiley & Sons.
of Graphics Interface ’92, pp. 258-264.
orientations for spherical mechanism design, ASME Journal of Mechanical Design,
vol. 122, pp. 457-463.
. . M. arochelle
P
L
P
L
40
Larochelle, P., and McCarthy, J.M., (1995), Planar motion synthesis using an approx-
Martinez, J.M.R., and Duﬀy, J., (1955), On the metrics of rigid body displacements
Shoemake, K., and Duﬀ, T., (1992), Matrix animation and polar decomposition, Proc.
Tse, D.M., Larochelle, P.M., (2000), Approximating spatial locations with spherical

ON THE REGULARITY OF THE INVERSE
JACOBIAN OF PARALLEL ROBOTS
Jean-Pierre Merlet
INRIA
Sophia-Antipolis, France
Jean-Pierre.Merlet@sophia.inria.fr
Peter Donelan
Victoria University
Wellington, New-Zealand
Peter.Donelan@mcs.vuw.ac.nz
Abstract
Checking the regularity of the inverse jacobian matrix of a parallel robot
is an essential element for the safe use of this type of mechanism. Ideally
such check should be made for all poses of the useful workspace of
the robot or for any pose along a given trajectory and should take
into account the uncertainties in the robot modeling and control. We
propose various methods that facilitate this check. We exhibit especially
a suﬃcient condition for the regularity that is directly related to the
extreme poses that can be reached by the robot.
Keywords:
nverse jacobian, singularity, parallel robots
1.
Introduction
Determining if a parallel robot may be in a singular conﬁguration dur-
ing its motion is a problem that is of high practical interest. Many papers
have addressed ﬁrst the determination of the inverse jacobian, denoted
J−1, of such robots and then the analysis of the singularity condition
that can be deduced from the singularity of this matrix. J−1 relates the
joint velocities to the twist of the end-eﬀector and is usually pose de-
pendent. In a singularity the end-eﬀector will exhibit non-zero velocities
for some motion although the actuators are locked. The determinant
of J−1 is usually complicated but for most parallel robots J−1 has as
rows the Pl¨ucker vectors of well-deﬁned lines. Consequently Grassmann
geometry may be used to characterize the geometry of the singularity
and to deduce simpliﬁed singularity conditions [Monsarrat 01; Merlet
89; Wolf 04]. It must be noted that even for robot with less than 6 d.o.f.
it is necessary to consider the full jacobian matrix i.e. the matrix that
involves the full twist of the end-eﬀector. Indeed for a robot with n d.o.f.
© 2006 Springer. Printed in the Netherlands. 
41
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 41–48.
I

the jacobian that relates the n d.o.f. velocities to the n actuated joint
velocities may be not singular while J−1 is singular [Bonev 01].
presence of a singularity within a motion variety with dimension 1 to n
for a n d.o.f. robot. An important point is that the singularity detection
should be certiﬁed i.e. the algorithm should provide a safe answer even
if numerical round-oﬀerrors occur. This certiﬁcation constraint usually
rules out the use of an optimization procedure.
2.
A
cheme
This singularity detection problem has been addressed in [Merlet 01]
where an eﬃcient algorithm was exhibited.
This algorithm proceeds
along the following steps: symbolic computation is used to determine
an analytical form of the determinant of J−1and its sign at a particular
pose X1. Then an interval analysis based method [Jaulin 01; Moore 79],
that takes round-oﬀerrors into account, allows one to determine if the
motion variety includes a set of poses in which the determinant has a
sign opposite to the one found at X1.
The main diﬃculty with this algorithm (apart of using eﬃciently in-
terval analysis) is the calculation of the closed-form of the determinant
as will be illustrated on a diﬃcult example, the Gough platform.
2.1
The
nverse
acobian of a Gough
latform
We deﬁne a reference frame (O, x, y, z). The attachment points of
the leg i on the base will be denoted by Ai. The attachment points
on the platform will be denoted by Bi and it is well known that the
coordinates of Bi in the reference frame can be obtained as function of
the pose parameters. The inverse jacobian matrix is then constituted of
the normalized Pl¨ucker vectors of the line associated to each leg:
J−1 = (( AiBi
||AiBi||
OAi × OBi
||AiBi||
))
(1)
Note that we may use the non normalized Pl¨ucker vector to deﬁne an-
other matrix M = ((AiBi
OAi × OBi)) with the property that the
sign of J−1 is the same than those of |M|. As M is simpler than J−1 it
will be used for the singularity detection.
2.2
Evaluation of the
eterminant
Being given a motion variety the pose parameters are functions of the
variety parameters and thus the components of the inverse jacobian may
be obtained as functions of the variety parameters. As mentioned earlier
A singularity detection algorithm should be able to determine the
42
J. -P. Merlet and P. Donelan
S
S
J
I
P
ingularity
etection
D
D

a closed-form of the determinant is obtained by symbolic computation.
It should be noted that this is not strictly necessary.
Indeed being
given ranges for the variety parameters interval arithmetic may used
to determine ranges for each component of the inverse jacobian. We
get then an interval matrix J−1
I
i.e. a matrix whose components are
intervals. Classical method for the calculation of determinant may then
be used to obtain an interval evaluation of the determinant but with a
large overestimation of the minimum and maximum of the determinant.
Indeed interval arithmetic is very sensitive to multiple occurrence of the
same variable. Consider for example the matrix A whose determinant
is xy and its interval version AI when x and y lie in the range [1,2]
A =
 x
x
y
2y

AI =
 [1, 2]
[1, 2]
[1, 2]
[2, 4]

(2)
The interval evaluation of |AI| may be calculated as [ 2,7]. Hence the
closed-form of the determinant allows one to show that |A| will always
be positive for any value of x, y in [1,2], while the use of the interval
matrix does not allow such conclusion. We have put an emphasis on
interval matrices that will be justiﬁed by the inﬂuence of uncertainties.
2.3
The nﬂuence of
ncertainties
Uncertainties are inherent part of a real system such as a robot. They
occur at the modeling level: the geometry of the real robot diﬀers from
its theoretical model due to the manufacturing tolerances (for example
for the Gough platform the locations of the Ai, Bi are known only up to
a known accuracy). Uncertainties are also due to control: there will be
a deviation of the robot motion from the theoretical motion variety.
An ideal singularity detection scheme should be able to determine
if the robot may be in a singular pose in spite of these uncertainties.
Although we may add the uncertainties as additional unknowns in the
components of J−1, a drawback is that the calculation of the closed-form
of the determinant may become diﬃcult. For example for the Gough
platform Maple is no more able to calculate the determinant as soon as
we add the uncertainties on the Ai, Bi. In that case we have to resort to
a numerical interval evaluation of the determinant based on the interval
version of J−1, but we have seen that this leads to a large overestimation
of the determinant, that will result in a large computation time for the
singularity detection scheme. It is thus necessary to develop methods
that check the regularity of the set of matrices deﬁned by an interval
matrix, without calculating its determinant. These methods should take
into account that J−1 is a parametric matrix, i.e. that its components
are not independent.
43
I
U
On the Regularity of the Inverse Jacobian of Parallel Robots
−

3.
egularity
heck
3.1
A
heck
Checking the regularity of all matrices in a set deﬁned by an interval
matrix is a classical problem in interval analysis and is known to be
NP-hard. Among possible approaches the one having shown the largest
eﬃciency in our case has been a method proposed by Rohn [Kreinovich
00]. We deﬁne the set H as the set of all n-dimensional vector h whose
components are either 1 or
1. For a given box we denote by [aij, aij] the
interval evaluation of the component J−1
ij
of J−1 at the i-th row and j-th
column. Given two vectors u, v of H, we then deﬁne the set of matrices
Auv whose elements Auv
ij are
Auv
ij = aij if ui.vj = −1, aij if ui.vj = 1
These matrices have thus ﬁxed numerical components corresponding to
lower or upper bound of the interval J−1
ij . There are 22n−1 such matrices
since Auv = A−u,−v. If the determinant of all these matrices have the
same sign, then all the matrices A′ whose components have a value
within the interval evaluation of J−1
ij
are regular. Hence for the 6 × 6
J−1 of a Gough platform if the determinant of the 2048 matrices of Auv
have the same sign, then all matrices in the set are regular.
But Auv includes matrices that are not inverse jacobian as the depen-
dency of the components of the matrix are not taken into account. This
may be seen, for example, for the interval matrix AI (2) that includes
the following matrices
A1 =
 1
1
1
4

A2 =
 1
2
2
2

A3 =
 1
2
1
2

(3)
The matrices A1, A2 belong to the set Auv and have determinants with
opposite signs. Consequently the test proposed by Rohn fails, which is
quite normal as the matrix A3, that belongs to AI is singular. For the
Gough platform the ﬁrst column of J−1 is written as x + Fi, x being a
coordinate of the center of the platform; if the range for x is [x, x] while
the range for Fi is [a,bi], then Auv includes matrices with elements x+ai
and x + bk that does not belong to the set of inverse jacobian matrices.
3.2
Pre-conditioning
A classical approach in interval analysis for regularity check is to pre-
condition the matrix by multiplying it by a real matrix K, usually the
inverse of the mid-matrix, i.e. the matrix whose components are the mid-
point of each range of the components. The purpose of this strategy is
44
R
C
C
C
−
Various Methods for
lassical Regularity
J. -P. Merlet and P. Donelan

to get S = KJ−1 close to the identity matrix so that its determinant
|S| = |K||J−1| may be interval evaluated with a lower overestimation.
If we apply this strategy to the matrix (2) the inverse of the mid-matrix
and the interval matrix KAI are:
K =

4/3
−2/3
−2/3
2/3

S = KAI =

[0, 2]
[−4/3, 4/3]
[−2/3, 2/3]
[0, 2]

(4)
The interval evaluation of |S| is [−8/9, 44/9] ≈[−0.8889, 4.88889] while
|K| is positive. In term of sign determination this interval evaluation is
indeed sharper than the one obtained with a direct evaluation of |A|, but
is still not satisfactory. We propose another method which consists ﬁrst
to compute symbolically the matrix S, using kij as components of K and
then plugging in the numerical values. The symbolic matrix Ss = AK
and its interval version SK for the numerical K are
Ss =
 x(k11 + k21)
x(k12 + k22)
y(k11 + 2 k21)
y(k12 + 2 k22)

SK =
 2x/3
0
0
2y/3

(5)
If we use now the range [1,2] for x, y the interval evaluation of |S| is
[4/3,8/3] that shows that all matrices have a positive determinant. Note
that we have used AK instead of KA, which is justiﬁed as it allows to
−1 exhibits
the same variables in a column it is better to pre-multiply it by the
conditioning matrix.
3.3
A
egularity
est for
Assume that some components of some rows (denoted the linear rows)
of a parametric matrix A = aij can be written as linear combination with
real or interval coeﬃcients of a set of unknowns {x1, x2, . . . , xn}.
We denote by A′ the set of real or interval matrices that can be derived
from A by assigning independently to each linear rows either a lower or
upper bound to each unknown xi that appears in the linear combination.
For example for matrix A the set A′ is
A′ = {
 1
1
1
2

,
 1
1
2
4

,
 2
2
1
2

,
 2
2
2
4

}
(6)
The following theorem hold:
Theorem 1: If the determinant of all matrices in the set A′ have all
the same sign, then all matrices in the set A are regular
Proof (derived from [Popova 04]): Assume that there is a singular
matrix A0 in the set A. Without lack of generality we will assume that
45
T
R
P
On the Regularity of the Inverse Jacobian of Parallel Robots
arametric Matrices
reduce the multiple occurrences of the variables. However as J
.

the ﬁrst row of A0 is linear. We consider the unknown x1, whose value
for A0 is x0
1 and lie in [x1, x1]. Each component of the ﬁrst row of A
may be written either as λ1
1jx1+b1j or a0
1j if the component is not linear.
Using row expansion the determinant of the matrix may be written as
|A| =
	
k=j1,...,jm
(−1)k+1(λ1
1kx1 +b1k)M1k +
	
l̸∈{j1,...,jm}
(−1)l+1a1lM1l (7)
where {j1, . . . , jm} are the column indices of the linear components of
A and M1j denotes the minor associated to the ﬁrst line and column j.
For x1 = x0
1 this expression will cancel. If we assume now that x1 =
x0
1 + dx1 we get
|A| = dx1(
	
k=j1,...,jm
(−1)k+1λ1
1k) = dx1K1
(8)
K1 being either a real number or an interval. We may always assign dx1
to either x1 −x0
1 or x1 −x0
1 so that |A| is positive or has a positive upper
bound. Thus by assigning x1 or x1 to x1 we have constructed a matrix
A+
1 whose determinant will be positive or has a positive upper bound.
The process may be repeated for constructing a matrix A−
1 whose de-
terminant will be negative or has a negative lower bound. Starting from
these matrices we may now assign x2 to x2 or x2 to get a matrix A+
12
whose determinant is |A+
1 | plus a positive quantity (i.e. still positive)
and a matrix A−
12 whose determinant will be lower than the determinant
of |A−
1 | (i.e. still negative). The process is repeated for each unknowns
in the row. As soon as all unknowns in the row have a ﬁxed value the
process is repeated for the next linear row. When all linear rows have
been processed the matrices A+, A−belong to A′. Note however that
the assignment of the unknowns in a row to ensure that |A+| is positive
may diﬀer between two linear rows. Hence if there is a singular matrix
in A, then we are able to determine matrices whose determinant have
opposite signs (or whose lower bound is negative and upper bound is
positive), which concludes the proof.
For example as all matrices in A′ deﬁned by (6) have the same de-
terminant sign, then the set A contains only regular matrices. Another
theorem may be derived for the full inverse jacobian matrices that have
Pl¨ucker vectors as rows. Let us deﬁne Ai(a1
i , a2
i , a3
i ) and Bi(b1
i , b2
i , b3
i ) as
two points that belong to the line associated to the Pl¨ucker vector i.
A row of J−1 may be written as
((b1 −a1, b2 −a2, b3 −a , a2b1 −a1B2, a3b1 −a1b3, a1b2 −a2b1))
(9)
so that each row is linear in the bi. Assume now that the locations of
the Ai are ﬁxed, while the locations of the Bi are functions of the end-
eﬀector motion.
Using interval analysis (or an optimization method)
46
J. -P. Merlet and P. Donelan
3

being given ranges for the motion parameter we may ﬁnd a bounding
box Bi for the location of each Bi. Let J−1
⋆
be the set of inverse jacobian
that may be obtained for the motion parameters ranges. Theorem 1
allows one to state the following corollary:
Corollary: Let A⋆be the set of matrices obtained by choosing as
location of Bi all possible combinations of the corners of Bi (there will
be 86 such matrices). If the determinants of all matrices in A⋆have the
same sign, then all matrices in J−1
⋆
are regular.
The number of matrices in A⋆may even be reduced in some cases,
using the property that we may choose as Bi any point on the line.
Assume that the bounding box Bi is deﬁned by the set of ranges [bij, bij],
j ∈[1, 3] for bj. The following cases may occur:
• ak ∈[bik, bik] for two indices in [1,2,3], while ak < bik or ak > bik for
one index. The line always enters the bounding box Bi by the face deﬁned
by bk = .bik or bk = bik. We may thus choose as Bi the intersection point
of the line with this face i.e. ﬁx the value of bk. Hence only 4 corners
will have to be checked
• ak ∈[bik, bik] for only one index. The line may enter the bounding
box by 2 faces and we have to check 6 corners
• ak ̸∈[bik, bik] for all index. The line may enter the bounding box by
3 faces and we have 7 corners to check
• ak ∈[bik, bik] for all index.
In that case the corresponding row
of the jacobian may include a line of 0 and the ranges for the motion
parameters must be bisected
In practice we will have between 46 and 76 matrices in A⋆. Uncer-
tainties in the locations of the Ai may also be dealt with by considering
that the matrices in A⋆are interval matrices.
Theorem 2 shows that checking the extreme poses of the Bi may be
suﬃcient to check the regularity of J−1 over the whole workspace.
4.
Examples
The proposed regularity check has been implemented in the singular-
ity detection scheme and has been extensively tested. It appears that
among the three regularity checks the most eﬃcient combination is to
use ﬁrst the pre-conditioning and then to apply Rohn test on the result-
ing matrix. A 6D workspace W is deﬁned with the ranges x, y in [ 15,15],
z in [45,50] and the three Euler angles having the ranges [ 15,15] degree.
The computation time on a Dell D400 laptop (1.7 Ghz) is established as
follows:
47
−
−
On the Regularity of the Inverse Jacobian of Parallel Robots

• 6D workspace without uncertainty: for W no singularity detected
singularity is detected in 9.46s.
• 6D workspace with uncertainties: for a ± 0.05 uncertainty on each
coordinates of the Ai, Bi points no singularity is detected in W in 43mn
on a cluster of 15 PC’s without the regularity checks and only in 263s
on a laptop if they are incorporated in the detection scheme. For an
uncertainty of ± 0.1 the computation time establishes respectively at
10h 22mn and 1176s.
5.
Conclusion
We have proposed regularity checks for the inverse jacobian of parallel
robots that may be used to determine if such matrix may be singular
over a motion variety. They allow to deal with uncertainties in the robot
modeling and control and have been proved to be very eﬃcient. One
of this regularity check, that is suﬃcient but not necessary, is related
to the extremal poses that can be reached by the end-eﬀector: if the
determinant of a ﬁnite number of real matrices that are related to these
extremal poses have all the same sign, then the inverse jacobian matrix
is regular.
References
Bonev I.A. and Zlatanov D. The mystery of the singular SNU translational parallel
robot. www.parallemic.org/Reviews/Review004.html, June, 12, 2001.
Jaulin L., Kieﬀer M., Didrit O., and Walter E. Applied Interval Analysis. Springer-
Verlag, 2001.
Kreinovich V. Optimal ﬁnite characterization of linear problems with inexact data.
Technical Report CS-00-37, University of Texas at El Paso, 2000.
Int. J. of Robotics Research, 8(5):45–56, October 1989.
singularity within the workspace of a parallel robot. In F.C. Park C.C. Iurascu, ed-
itor, Computational Kinematics, pages 167–176. EJCK, Seoul, May, 20-22, 2001.
Monsarrat B. and Gosselin C.M. Singularity analysis of a three-leg six-degree-of-
freedom parallel platform mechanism based on Grassman line geometry. Int. J. of
Robotics Research, 20(4):312–328, April 2001.
Moore R.E. Methods and Applications of Interval Analysis. SIAM Studies in Applied
Mathematics, 1979.
Popova E. D. Strong Regularity of Parametric Interval Matrices 33th Spring Confer-
singularity analysis of the 3-dof CaPaMan manipulator. Mechanism and Machine
Theory, 39(1):75–95, January 2004.
J. -P. Merlet and P. Donelan
48
in 3.12s. If the orientation ranges of W is extended to [ 40,40] degree a
–
ence of the Union of Bulgarian Mathematicians, Borovets, April 1, 2004.
Wolf A. and others. Application of line geometry and linear complex approximation to
Merlet J. -P. Singular conﬁgurations of parallel manipulators and Grassmann geometry.
Merlet J. -P. and Daney D. A formal-numerical approach to determine the presence of

PARALLEL ROBOTS THAT CHANGE THEIR 
GROUP OF MOTION 
Pietro Fanghella 
Dept. of Mechanics and Design of Machines 
University of Genoa, Italy 
pietro.fanghella@unige.it 
Carlo Galletti 
Dept. of Mechanics and Design of Machines 
University of Genoa, Italy 
carlo.galletti@unige.it 
Elena Giannotti 
Dept. of Computer, Control and Communication Engineering 
University of Genoa, Italy 
elena@dist.unige.it 
Abstract 
In this work we present several parallel robots with reduced mobility whose 
platforms can change their subgroups of displacement when the robot is 
displaced continuously from one set of positions to another one. In some 
cases, also the number of degrees of freedom of the platform may change, in 
other cases, only the group of displacement or its invariant properties are 
modified. By using some results on mobility of single-loop kinematic chains 
based on the theory of the displacement groups, the way to synthesize these 
robots is  discussed. 
Keywords: 
1.  
Introduction  
In recent years the literature on robot mechanisms shows a growing 
interest in parallel robots with reduced numbers of degree of freedom 
2004, Kong and Gosselin, 2005, Gogu, 2005). In general, a platform of a 
robot of this kind can move in a subgroup of the Euclidean displacement 
group, or in a subset of a subgroup. 
In a different field of kinematics, various studies have been performed 
related to mechanisms in which variations in the position variables can 
© 2006 Springer. Printed in the Netherlands. 
49
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 49–56. 
Parallel robots, displacement groups, kinematotropy, mobility 
whose mobility can be carefully investigated, (e.g., Kong and Gosselin, 

In this paper, some results concerning kinematotropic kinematic 
chains are used to synthesize parallel robots with reduced mobility, 
whose platforms change their subgroups of displacement when the robot 
is displaced from one set of positions to another one. Several robots are 
In Section 2, three single-loop kinematotropic chains are shown and 
their finite mobility discussed. 
In Section 3, the single-loop kinematotropic chains are used to 
synthesize 3 parallel robots that change both their displacement groups 
and the numbers of their degrees of freedom. 
In Section 4, the proposed approach leads to 2 parallel robots that 
change their displacement groups but not the numbers of their degrees of 
freedom, and 1 robot that only change the invariant properties of its 
displacement group. 
In Section 5 alternative ways for selecting the robot joints and the 
driver locations are discussed. 
In this paper it is assumed that the readers have a basic knowledge of 
the displacement groups in kinematics, as can be found, for instance, in 
Hervé, 1978 and in Section 5.3 of Angeles, 1988. 
2.  
Galletti and Fanghella, 2001. They are shown in the singular position 
that separates the two branches of positions in which the displacements 
between bodies a1
2
 
 
KPb 
KPa 
GR1
GR2 
a2 
b1 
a1 
b2 
a) 
      
 
KPb 
KPa 
GR1
GR2
a2 
b1 
a1 
b2 
b) 
       
KPb 
KPa 
GR1
GR2 
a2 
b1 
a1 
b2 
c) 
  
 
All these chains can be represented by the scheme of Fig. 2. The 
subchain from body a1 to b1 generates a displacement group G1, and the 
subchain from body a2 to b2 generates a group G2. The kinematic pairs 
KPa and KPb provide displacements between bodies a1 and a2, and b1 and 
2
1
2
a
b
obtained in this way and their mobility properties are presented. 
Wohlhart, 1996, called this very peculiar mobility property kinematotropy. 
Single-loop Kinematotropic Chains  
Figure 1 shows three single-loop kinematotropic chains presented by 
 and b  belong to different displacement groups. 
b  respectively: the meaning of G , G , KP , and KP , are given in Table 1. 
result in changes in the permanent finite mobility of the mechanisms. 
Figure 1.     Single-loop kinematotropic chains. 
50
P. Fanghella, C. Galletti and E. Giannotti 

Let G be the intersection group between G1 and G2. By moving KPa and 
KPb the group G changes and, as a consequence, the group of 
displacement between bodies a1 and b2 varies. 
 
 
G1 
G2 
KPb
a1 
KPa
a2 
b1 
b2 
G 
 
 
Table 1.     Groups and pairs in Fig. 1 
 
Case 
G1 = G2
KPa = KPb
Displacements between a1 and b2
a
E (planar)
R (revolute) 
From planar E to cylindrical C 
b 
S (spherical) 
P (prismatic) 
From spherical S to cylindrical C 
c 
Y (translating 
screw) 
R (revolute) 
From translating screw Y to 
cylindrical C 
 
bodies a1 and b2 when a chain, passing through the singular position, is 
displaced from one branch of positions to the other one. 
3.  
The scheme of Fig. 2 is now applied for synthesizing parallel robots 
whose platforms can change the number of degrees of freedom (d.o.f.) and 
the displacement group. Since a maximum of 3 d.o.f. can be achieved by 
all chains, 3 legs are introduced to connect the platform and the robot 
frame. The general scheme of the kinematic chain of the robots is shown 
in Fig. 3. The kinematic chains of the 3 robots obtained in this way are 
reported in Fig. 4. Each chain is shown in the singular position that 
separates the two branches of positions belonging to different groups (E, 
S, Y  and C). 
In order to exemplify the characteristics of these chains, let us 
there are drivers on pairs P1, P2, P3 and P4. 
Starting from the singular position, by moving the drivers P1, P2 and 
P3 the revolutes P6 and P4-P5 become unaligned, so they cannot rotate 
The last column in Table 1 shows the resulting displacements between 
Group and 
Robots that Change
of Freedom  
Displacement
Number of Degrees 
consider the chain in Fig. 4-a, obtained from case a) of Table 1. Suppose 
Figure 2.     Scheme of a kinematotropic chain. 
51
Parallel Robots that Change their Group of Motion 
.

anymore. Therefore, the robot acts as a standard planar platform, with 3 
d.o.f., with drivers P1, P2 and P3. 
Starting again from the singular position, by moving driver P4 the 
plane formed by pairs P1-P11-P12, and the planes formed by P2-P7-P8 and 
P3-P9-P10 become not parallel, so their intersection group gives a 
prismatic constraint with axis parallel to the common axis of pairs P4, P5, 
and P6. Therefore, the robot acts as cylindrical  platform, with 2 d.o.f., 
with two drivers: one of P4, P5 or P6, and one of P1, P2 or P3. 
 
 
An analogous discussion shows that the motion of the platform in Fig. 
4-b switches from spherical (S) to cylindrical (C) and that, for the 
platform in Fig. 4-c, it changes from translating screw (Y) to cylindrical 
(C). 
 
4.  
As shown in Section 2, the change of displacement group between 
bodies a1 and b2 is a consequence of the change of the intersection group 
G. The chains of Fig. 1 ensure the change of G and of the number of 
52
Robots that Change Displacement Group or 
their Invariant Properties  
“ 
” 
Figure 3.     General scheme of a 3-legs robot. 
Figure 4.     Robots that change No. of d.o.f. and displacement group. 
P. Fanghella, C. Galletti and E. Giannotti 

d.o.f. of the chains. It is also possible to obtain chains that change G but 
not the number of d.o.f. Using again the scheme of Fig. 2, the results 
From these results the schemes of Fig. 5 are obtained. Other similar 
configurations can be obtained through suitable permutations of 
kinematic pairs and groups. 
Table 2.     Modified groups and pairs in Fig. 1 
 
Case 
G1 = G2
KPa = KPb
Displacements between a1 and b2
d
E (planar)
X 
(Schoenflies) 
From E to a subset of X with 3 d.o.f. 
e 
Y (translating 
screw) 
X 
(Schoenflies) 
From Y to a subset of X with 3 d.o.f. 
 
 
Figure 6 shows the kinematic chains resulting from the two cases d 
separates the two branches of positions belonging to different groups. 
 
Figure 6.     Robots that change displacement group but not No. of d.o.f. 
53
reported in Table 2 can be achieved (see Fanghella and Galletti, 1994). 
and e of Table 2. The chains are drawn in their singular position that 
Figure 5.     Robots with E, X, Y, and R groups. 
Parallel Robots that Change their Group of Motion 
.

For example, in the case d, starting from the position drawn and 
rotating the revolutes with horizontal axes, the robot acts as a standard 
planar platform, with 3 d.o.f. Starting again from the singular position,
translations and 1 rotation). Then, the group of displacement is changed, 
but the number of d.o.f. is preserved. 
An analogous situation applies to case e. 
A slightly different case can be derived from a further interesting 
intersection group. Two Schoenflies groups X can give a group G = X or 
a group G = U (three-dimensional translation), depending on the 
relative positions of their rotation directions (see Fanghella and Galletti, 
 
Case 
G1 = G2
KPa = KPb
Displacements between a1 and b2
f 
X 
(Schoenflies) 
R  
From the original X (Schoenflies) 
to an X (Schoenflies) with the axis 
parallel to the axis of R 
 
Since a group X with 4 d.o.f. is obtained in both branches, the platform 
must have 4 legs in order to apply one driver to each leg, according to the 
scheme of Fig. 7. 
 
 
X 
R 
X 
X 
X 
R 
R 
R 
 
 
Figure 8 shows the resulting kinematic chain of the robot in the 
singular position where the two branches merge. 
Starting from this position and rotating the revolutes with horizontal 
axes, the platform moves in an X group with a horizontal rotation axis, 
the vertical revolutes being locked. The number of d.o.f. is 4. Starting 
again from the singular position, by moving the revolutes with vertical 
axes, the platform moves in an X group with a vertical rotation axis, the 
horizontal revolutes resulting locked. Again the number of d.o.f. is 4. The 
54
1994). Therefore, according to Fig. 2, the following chain can be derived.
Figure 7.     Scheme of a 4-legs robot. 
P. Fanghella, C. Galletti and E. Giannotti 
by moving the revolutes with vertical axes, the platform of the robot
has a displacement that is a subset of the group X, with 3 d.o.f. (2 

group of displacement is not changed, but its invariant property (rotation 
axis) is changed. 
 
 
X 
frame
platform
X 
X 
R 
R 
R 
X 
X 
R 
X 
frame 
 
 
5.  
The schemes of Figs. 3, 5, and 7, define kinematic structures in which 
specific displacement groups are generated by sequences of bodies and 
pairs. It is evident that in order to obtain the aforesaid mobility 
properties, the way in which the groups GR are realized is immaterial. 
For instance, it is well known that the group X can be generated by 3 non 
pairs. Therefore, many different robot structures can be obtained 
starting from the schemes of Figs. 3, 5, and 7. 
From a practical point of view, in order to control the motion of a 
kinematotropic chain in a branch it is necessary to provide a number of 
drivers equal to the number of degrees of freedom of the chain in that 
branch. For a complete control of the chain in all branches, it is 
necessary to provide a set of drivers equal to the union of the drivers 
used to control each branch. In each branch, the chain is actuated only by 
the drivers associated with that branch, while other drivers become 
driven; when passing through a singular position (where the number of 
infinitesimal degrees of freedom grows), all drivers must act either to 
maintain their position or to drive the chain to a specific branch. 
Finally, it is worth noting that, in some cases, starting from the 
direction orthogonal to the drawing plane leads to a branch in which the 
55
Joint Modifications, Actuators and Branches 
be reached. For example, for the mechanism in Fig. 6-d, a translation in the 
singular positions in Figs. 4, 6 and 8, more than two branches may
Figure 8.     Robot that changes the invariant of its displacement group. 
Parallel Robots that Change their Group of Motion 
parallel prismatic pairs and one revolute, by 3 parallel revolutes and  
1 prismatic pair not normal to them, and so on. Moreover, the revolutes
KP in the chains can be substituted, in several circumstances by helical

allowed relative motion between the frame and the platform is a pure 
planar translation. In the paper, for each case, the discussion is limited 
to the two branches with the highest number of degrees of freedom. 
6.  
Conclusions  
Special kinematic chains, in which displacements between two bodies 
can belong to different displacement groups when the chains are moved 
situations arise for the displacement of the platform when the robot is 
displaced continuously from one set of positions to another one: i) in 3 
cases the platform can change its group of displacement and the number 
degrees of freedom; ii) in 2 cases only the group of displacement is 
altered; iii) in 1 case only the invariant properties of the group of 
displacement are modified. 
References 
Angeles J. (1988), Rational Kinematics, Springer. 
Fanghella P. and Galletti C. (1994), Mobility Analysis of Single-Loop Kinematic 
Chains: 
An 
Algorithmic 
Approach 
Based 
on 
Displacement 
Groups,  
Mechanism and Machine Theory, Vol. 29, pp. 1187-1204. 
Galletti C. and Fanghella P. (2001), Single-Loop Kinematotropic Mechanisms,  
Mechanism and Machine Theory, Vol. 36, pp. 743-761. 
Gogu G. (2005), Mobility Criterion and Overconstraints of Parallel Manipulators, 
Proc. of CK2005 Int. Workshop on Computational Kinematics, Cassino, Paper 
22-CK2005, pp. 1-16. 
Hervé J. (1978), Analyse Structurelle des Mécanismes par Groupe des 
Déplacements, Mechanism and Machine Theory, Vol. 13, pp. 437-450. 
Kong X. and Gosselin C. (2004), Type Synthesis of 3T1R 4-DOF Parallel 
Manipulators Based on Screw Theory, IEEE Transactions on Robotics and 
Automation, Vol. 20, pp. 181-190. 
Kong X. and Gosselin C. (2005), Type Synthesis of 3-DOF PPR-Equivalent 
Parallel Manipulators Based on Screw  Theory and the Concept of Virtual 
Chain, ASME J. of Mechanical Design, Vol. 127, pp. 1113-1121. 
Wohlhart K. (1996), Kinematotropic Mechanisms, Recent Advances in Robot 
Kinematics, (J. Lenarcic and V. Parenti Castelli, Eds.), Kluwer ,  pp. 359-368. 
 
 This work has been developed under a grant of Italian MIUR
56
.
P. Fanghella, C. Galletti and E. Giannotti 
by one branch to another, are the basic components we have used
for synthesizing a particular type of parallel robots. Three different
Acknowledgement

APPROXIMATING PLANAR, MORPHING
CURVES WITH RIGID-BODY LINKAGES
Andrew P. Murray
University of Dayton, Department of Mechanical & Aerospace Engineering
Dayton, OH USA
murray@udayton.edu
Brian M. Korte and James P. Schmiedeler
The Ohio State University, Department of Mechanical Engineering
Columbus, OH USA
korte.16@osu.edu & schmiedeler.2@osu.edu
Abstract
This paper presents a procedure to synthesize planar linkages, composed
of rigid links and revolute joints, that approximate a shape change de-
ﬁned by a set of curves.
These “morphing curves” diﬀer from each
other by a combination of rigid-body displacement and shape change.
Rigid link geometry is determined through analysis of piecewise linear
curves, and increasing the number of links improves the shape-change
approximation. The framework is applied to an open-chain example.
Keywords: Shape change, morphing structures, planar synthesis
1.
Introduction
For a mechanical system whose function depends on its geometric
shape, the controlled ability to change that shape can enhance per-
formance or expand applications. Examples of adaptive or morphing
structures include antenna reﬂectors (Washington, 1996) and airfoils
(Bart-Smith & Risseeuw, 2003) proposed to include many smart mater-
ial actuators. Compliant mechanisms also provide a means of achieving
shape changes. Saggere & Kota, 2001 developed a synthesis procedure
for compliant four-bars that guide their ﬂexible couplers through dis-
crete prescribed “precision shapes” that involve both shape change and
rigid-body displacement. Lu & Kota, 2003 introduced a more general
approach using ﬁnite element analysis and a genetic algorithm to deter-
mine an optimized compliant mechanism’s topology and dimensions.
The present work introduces synthesis techniques for planar, rigid-
body mechanisms that approximate a desired shape change deﬁned by
an arbitrary number of curves, one morphing into another. Higher load-
 
57 
carrying capacity makes rigid-body mechanisms better suited than
 
 
 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 57
64. 
© 2006 Springer. Printed in the Netherlands. 
−

rigid-body mechanisms would likely require fewer actuators acting in
parallel, such as along an airfoil with changing camber. Furthermore,
actuation is not an additional development need because existing tech-
nology rather than, for example, smart material technology, is typically
used to actuate rigid-body mechanisms. With rigid links, synthesis can
a
can typically achieve larger displacements, enabling more dramatic shape
changes. This paper details a methodology for designing rigid links that
can be joined together in a chain by revolute joints to approximate the
shapes of a set of morphing curves. The methodology is applicable to
both open and closed chains, and an open-chain example is presented.
2.
Rigid Link Geometry
linkage involves converting the desired curves, denoted as “design pro-
ﬁles”, into “target proﬁles” that are readily manipulated and compared.
The target proﬁles are divided into segments, and corresponding seg-
ments from all of the target proﬁles are used to generate the rigid links.
The key is to divide the target proﬁles and then generate the rigid links
so as to reduce the error in approximating the design proﬁles.
Design Proﬁles and Target Proﬁles.
A design proﬁle is a curve
deﬁned such that an ordered set of points on the curve and the arc length
between any two such points can be determined. The piecewise linear
curve (solid line) in Fig. 1 is a simple example of a design proﬁle. A
set of p design proﬁles deﬁnes a shape change problem. Because the
change will be approximated with a rigid-body linkage, the error in the
approximation is generally smaller if all p proﬁles have roughly equal arc
length, though this is not an explicit requirement of the methodology.
A target proﬁle is formed by distributing n points, separated by equal
arc lengths, along a design proﬁle. Thus, a target proﬁle is a piecewise
linear curve composed of the line segments connecting the ordered set of
points, and any design proﬁle can be represented by a target proﬁle of
two or more points. In Fig. 1, ﬁve (x, y) points generate a target proﬁle
from the design proﬁle deﬁned by three (a, b) points. The target proﬁle
includes the dashed line and does not pass through the design proﬁle’s
second point. In this case, three points could be used to exactly represent
the design proﬁle, but the approach is more generally applicable to any
design proﬁle. The motivation is to convert a set of p design proﬁles into
target proﬁles all deﬁned by n points such that corresponding points can
 
A.P. Murray, B.M. Korte and J.P. Schmiedeler 
58 
 
 
compliant mechanisms for applications with large applied loads.Similarly,
priori knowledge of exact external loads. Finally, rigid-body mechanisms
be purely kinematic, so the system can be modeled precisely without
The procedure for generating rigid links that compose a shape-changing

Figure 1. Three-point (a, b) design proﬁle and ﬁve-point (x, y) target proﬁle.
be found on each target proﬁle. For a closed curve design proﬁle, any
point can be deemed the ﬁrst/last point, yielding a closed target proﬁle.
Important characteristics of a target proﬁle include the fact that its
arc length is always shorter than the design proﬁle it represents. The
most signiﬁcant loss of shape information occurs where the curvature is
largest for a continuous design proﬁle or where the angle at a vertex is
smallest in magnitude for a piecewise linear design proﬁle. Since points
on the target proﬁle are separated by equal arc lengths along the design
proﬁle, they are not at equidistant intervals along the target proﬁle.
Large values of n produce smaller variations between the design proﬁle
and target proﬁle and in the distances between consecutive points on the
target proﬁle. A useful heuristic is selection of n such that the target
proﬁle arc length is greater than 99% of the design proﬁle arc length.
Shifted Proﬁles.
The jth target proﬁle is deﬁned by, ⃗zji = {xji yji}T ,
i=1,...n. A rigid-body transformation in the plane,
⃗Zji = A⃗zji + ⃗d, where A =
 cos θ
−sin θ
sin θ
cos θ

and ⃗d =
 d1
d2

,
will relocate the proﬁle preserving the respective distances between points
in it. Any proﬁle relocated in this fashion is called a shifted proﬁle. Tar-
get and mean proﬁles (described below) are both shifted to perform
useful design operations without altering the original design problem.
The “distance” between target proﬁles j and k is deﬁned to be,
D =
n
	
i=1
(xji −xki)2 + (yji −yki)2 =
n
	
i=1
|⃗zji −⃗zki|2.
(Subsequent summations are i = 1,...n.) Viewing the target proﬁle’s n
points as a single point in 2n-dimensional space, this distance is the
square of the Euclidean norm in that space, so D is an appropriately
deﬁned metric. To determine the rigid-body transformation that shifts
59 
Approximating Planar, Morphing Curves 

target proﬁle j to the location that minimizes D with respect to target
proﬁle k, one must ﬁnd θ and ⃗d such that ∂D
∂θ = ∂D
∂d1 = ∂D
∂d2 = 0, where,
D =
	
⃗z T
ji⃗zji + ⃗d T⃗d + ⃗z T
ki⃗zki + 2⃗d TA⃗zji −2⃗z T
kiA⃗zji −2⃗d T⃗zki.
Introducing the deﬁnition ⃗zji = ⃗zjT = {xjT yjT }T yields a solution,
tan θ =
1
n(xkT yjT −xjT ykT ) −(xkiyji −xjiyki)
(xjixki + yjiyki) −1
n(xjT xkT + yjT ykT ) , ⃗d = 1
n(⃗zkT −A⃗zjT ).
Mean Proﬁles and Segmentation.
A mean proﬁle is one proﬁle
that approximates the shapes of all target proﬁles in a set.
A mean
proﬁle is formed by shifting target proﬁles 2 through p to minimize
their respective distances relative to reference target proﬁle 1. A new
piecewise linear curve deﬁned by n points, each the geometric center
of the set of p corresponding points in the shifted target proﬁles, is
generated. For example, two target proﬁles in Fig. 2a are shifted in Fig.
proﬁle.
Fig. 2c shows the mean proﬁle that approximates the target
proﬁles when regarded as rigid bodies.
In Fig. 2d, this mean proﬁle
is shifted to approximate the shape and location of the target proﬁles.
The described procedure could convert a shape-changing problem to a
rigid-body guidance problem, as the three locations of the mean proﬁle
in Fig. 2d deﬁne three ﬁnitely separated positions of a moving lamina.
A chain of two or more rigid links connected by revolute joints can
better approximate a shape change than can a single rigid body with the
shape of a mean proﬁle. The procedure for generating a mean proﬁle
may be applied to any segment of the target proﬁles. To generate a
linkage composed of s rigid links, an initial solution divides the target
proﬁles into s segments of roughly equal numbers of points, the last
point of a segment being the ﬁrst of the next segment. A mean proﬁle
is generated for each set of segments. For example, given target proﬁles
51, 51-76, and 76-102. The ﬁrst three segments and their corresponding
mean proﬁles each have 26 points, and the last has 27. Once generated,
each mean proﬁle can be shifted individually to the location relative to
its corresponding segment in each target proﬁle that minimizes D. The
positions of the s mean proﬁles relative to each other will diﬀer as they
are superimposed on each target proﬁle. The end points of the segments
in general will not coincide in any of the positions at this stage.
Error Reducing Segmentation.
Non-uniform target proﬁle seg-
mentation can reduce the error in approximating a shape change by
shortening segments on the proﬁle where shape change is most dramatic.
 A.P. Murray, B.M. Korte and J.P. Schmiedeler 
 
 
60 
 
of n = 102 points, if s = 4, the segments are composed of points 1-26, 26-
2b to their respective distance minimizing positions relative to the ﬁrst


! 
) $0:-- <):/-< 8:74-; * #01.<-, <):/-< 8:74-; <7 516151B-  + -)6
8:74- ;741, 416- , -)6 8:74- ;01.<-, <7 516151B-  .7: -)+0 <):/-< 8:74-
-85 49CD1>35  9C 1 @??B C57=5>D1D9?> =5DB93 2531EC5 9D 45@5>4C ?> 1
C57=5>DC >E=25B ?6 @?9>DC  25DD5B =5DB93 D85 5BB?B  9C 45>54 1C
6?<<?GC  ?B =51> @B?<5  D85 5BB?B 
 1CC?391D54 G9D8 =1D389>7 D85
3?BB5C@?>49>7 C57=5>D 9> D1B75D @B?<5  9C D85 =1H9=E= 49CD1>35 25
DG55> 1>I DG? 3?BB5C@?>49>7 @?9>DC ?> D85 DG? @B?<5C G85> D85 =51>
@B?<5 9C C896D54 D? D85 49CD1>35=9>9=9J9>7 <?31D9?> B5<1D9F5 D? D85 D1B
75D @B?<5 C57=5>D -85 5BB?B 
 1CC?391D54 G9D8 D89C =51> @B?<5 9C
D85 =1H9=E= F1<E5 ?6 
 6?B 1<< D1B75D @B?<5C    -85 ?F5B1<<
5BB?B  9C D85 =1H9=E= F1<E5 ?6 
 6?B 1<< =51> @B?<5C   
-? B54E35  D85 C57=5>D1D9?> <?31D9?>C ?> D85 D1B75D @B?<5C 1B5
=?F54 ,D1BD9>7 G9D8 C57=5>D  D85 >E=25B ?6 @?9>DC 9> 5138 C57=5>D

Approximating Planar, Morphing Curves 
8
7
6
5
4
3
2
10
1
2
3
4
a)
b)
d)
0
1
2
3
4
0
1
2
3
4
5
6
7
8
0
1
2
3
4
5
6
7
8
8
7
6
5
4
3
2
1
8
7
6
5
4
3
2
1
8
7
6
5
4
3
2
1
c)

l, except the last segment s, is increased by one if El < ¯E and decreased
by one if El > ¯E, where ¯E is the average of the El’s. Segments 1 and s
change by one point, and the others by two. Es does not explicitly deter-
mine whether segment s increases or decreases in length, but its eﬀect on
E and ¯E does so indirectly. With the target proﬁle segments redeﬁned,
a new mean proﬁle for each set is generated, the error E recomputed,
and the process repeated until E ceases to decrease. To avoid local min-
ima, the process continues for several iterations after E increases, and
each E is compared to several previous iterations instead of just the im-
mediate predecessor. The segmentation providing the smallest E is the
error reducing segmentation, and the corresponding mean proﬁles deﬁne
the geometry of the rigid links that compose the linkage. Because the
target proﬁles typically contain thousands of points, altering segments
by two points is a modest change, and exhaustive approaches involving
single-point alterations are unlikely to oﬀer signiﬁcant beneﬁt.
An alternative approach for initial segmentation is to specify an ac-
ceptable error Ea instead of a number of segments, and “grow” segments,
starting with 1, point by point until the error El of the corresponding
mean proﬁle exceeds Ea. This generates an unknown number of sege-
ments, the last of which generally has the smallest error.
3.
Example
The three design proﬁles used to generate the target proﬁles in Fig. 2a
are deﬁned by the points listed in Tb. 1, and their arc lengths are 6.72,
6.78, and 6.76, respectively.
The target proﬁles contain 1800 points,
as does the mean proﬁle in Fig. 2c.
The subset of points from the
mean proﬁle listed in Tb. 1 are key points that mark the locations of
Table 1.
Deﬁning points of design proﬁles and key points of mean proﬁle in Fig. 2.
Mean proﬁle points are in two columns, each ordered top to bottom.
Design Proﬁle 1
Design Proﬁle 2
Design Proﬁle 3
Mean Proﬁle
(2.3,7.6)
(7.6,4.3)
(4.7,6.4)
(2.52,7.23)
(0.78,4.39)
(1.4,6.5)
(7.4,5.1)
(4.0,6.2)
(1.94,6.85)
(0.85,4.01)
(1.0,5.5)
(6.9,5.8)
(3.1,5.6)
(1.87,6.80)
(0.90,3.83)
(1.0,4.0)
(6.4,6.4)
(2.7,5.0)
(1.46,6.38)
(0.94,3.73)
(1.3,2.8)
(5.7,7.0)
(2.7,3.9)
(1.32,6.19)
(1.29,3.08)
(1.9,2.1)
(4.8,7.3)
(3.0,3.4)
(1.24,6.10)
(1.38,2.93)
(2.3,1.7)
(4.0,7.3)
(3.7,2.9)
(0.93,5.54)
(1.74,2.53)
(3.3,7.3)
(4.4,2.6)
(0.91,5.49)
(1.76,2.52)
(2.5,6.8)
(5.3,2.4)
(0.90,5.48)
(2.04,2.32)
(0.79,4.64)
(2.52,2.02)
 
A.P. Murray, B.M. Korte and J.P. Schmiedeler 
62
signiﬁcant change in slope along the mean proﬁle. Figure 3 plots the error

Figure 3.
Error in matching target proﬁles shown in Fig. 2a as a function of number
of segments. Inset shows 4-segment solution superimposed on target proﬁles. Solution
segments correspond to unassembled rigid links of a shape-changing linkage.
E in matching the target proﬁles as a function of the number of segments,
with a curve ﬁt to the data to more clearly illustrate the trend. The data
point for 1 segment represents the solution shown in Fig. 2d, for which
the error clearly is deﬁned by the top end point of the middle target
proﬁle. In Fig. 3, increasing the number of segments beyond 4 oﬀers
noticably diminishing returns in terms of reduced error. The plot inset
in Fig. 3 contains the 4-segment solution superimposed on the target
proﬁles with the segments shown in alternating shades of gray.
4.
Mechanization
Once the geometry of the rigid links is determined, the links are
joined together at their end points with revolute joints to form a link-
age.
This increases the error since it requires movement of the links
from their distance-minimizing positions to bring together the generally
63 
non-coincident adjacent endpoints. Furthermore, the relative motion
Approximating Planar, Morphing Curves 

sitions is more general than that allowed by revolute joints. Still, if the
error prior to connecting the links is small, the linkage approximates
well the desired shape change. With the links joined, it is often desir-
able to add additional links that constrain the linkage to have a reduced
number of degrees of freedom.
To constrain an s-link open chain to
be a 1-DOF mechanism, s + 1 binary links must be added. If ﬁve or
fewer design proﬁles are involved, circle and center points for additional
binary links can be found exactly, but for six or more design proﬁles,
1973 are required. The details of mechanization are beyond the scope
of this paper, but each additional link further constrains the motion of
the shape-change-approximating links, thereby increasing the error.
5.
Conclusions
This work introduces a systematic procedure to determine the geom-
etry of rigid links that can be assembled together with revolute joints to
compose a linkage that approximates a desired shape change deﬁned by
an arbitrary number of morphing curves. The procedure involves com-
paring piecewise linear curves to reduce the error in the shape change
approximation, and increasing the number of links generally reduces
that error. Mechanizing the generated chains of rigid links presents a
number of challenges, but rigid-body mechanisms have great potential
as morphing structures, particularly in heavy load applications.
6.
Acknowledgements
This material is based upon work supported in part by the National
Science Foundation under Grant No. #0422731 to A. Murray.
References
Bart-Smith, H., & Risseeuw, P.E. (2003), High authority morphing structures, Proc.
ASME International Mechanical Engineering Congress, Washington, D.C., USA.
shapes, Journal of Intelligent Material Systems & Structures, vol. 14, pp. 379–391.
Saggere, L., & Kota, S. (2001), Synthesis of planar, compliant four-bar mechanisms
for compliant-segment motion generation, ASME Journal of Mechanical Design,
vol. 123, no. 4, pp. 535–541.
with the least-square approximation of a given motion, ASME Journal of Engi-
neering for Industry, vol. 95, no. 2, pp. 503–510.
Structures, vol. 5, no. 6, pp. 801–805.
A.P. Murray, B.M. Korte and J.P. Schmiedeler 
64
quired between adjacent links to achieve their distance-minimizing po-
re
least-square approximations such as those developed by Sarkisyan, et al.,
Lu, K.J., & Kota, S. (2003), Design of compliant mechanisms for morphing structural
Sarkisyan, Y.L., Gupta, K.C., & Roth, B. (1973), Kinematic geometry associated
Washington, G.N. (1996), Smart aperture antennas, Journal of Smart Materials &

Matteo Zoppia, Dimiter Zlatanovb, Rezia Molﬁnoa
aUniversit`a di Genova, via Opera Pia 15A, 16145, Genova, Italia
bD´epartement de G´enie M´ecanique, Universit´e Laval, Qu´ebec, QC, Canada
[zoppi,molﬁno]@dimec.unige.it, zlatanov@gmc.ulaval.ca
Abstract
In parallel mechanisms (PMs), the passive joint velocities can be elimi-
nated from the velocity equations by a standard screw-theory method,
obtaining a system of linear input-output equations. A general method
for the elimination of the passive joint velocities in non purely paral-
lel mechanisms is not yet known. The paper addresses the problem by
studying the instantaneous kinematics of two non-parallel closed-chain
4-dof mechanisms derived from a 5-dof PM. With some modiﬁcations
and appropriate geometric reasoning the PM methodology can be suc-
cessfully applied to the analysis of non-parallel mechanisms.
Keywords: Velocity analysis, parallel mechanisms, closed chain mechanisms
1.
Introduction
Parallel mechanisms (PMs) are composed of an end-eﬀector connected
to the base by separate serial leg chains, Fig. 1. Most published closed
spatial kinematic chains are PMs, but occasionally authors describe as
“parallel” kinematic chains that do not strictly belong to this class.
A relatively simple generalization of a parallel (or serial) mechanism is
when the kinematic chain is a two-terminal series-parallel graph connect-
ing the base to the end-eﬀector. Starting with a parallel (or serial) chain,
substitute individual joints with parallel subchains; a mostly parallel (or
serial) series-parallel (S-P) chain (and mechanism, S-PM) is the result
(Fig. 2). More complex chains can be obtained from a mostly parallel
S-P connection when subchains (with at least one joint) are added be-
tween links belonging to diﬀerent leg chains. Such mechanisms can be
referred to as interconnected chains (IC) mechanisms (ICMs) (Fig. 3).
In a PM, out of singularities, the input-output velocity equations (re-
lating the output twist, ξ = (ω, v), or (ωT |vT )T as a column vector,
and the actuated joint velocities, ˙q) are obtained in the form: Zξ = Λ ˙q.
For PMs, Z and Λ are computed by a screw-theory based method
that can be considered standard. It is relatively easy (ignoring unusual
 
65 
© 2006 Springer. Printed in the Netherlands. 
– 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 65 72. 
NON-PARALLEL CLOSED CHAIN
MECHANISMS
ON THE VELOCITY ANALYSIS OF

B
EE
P
P
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
P
P
P
Figure 1.
method cannot be used, without changes, for ICMs. In the general case,
one deals with the velocity loop equations (rather than linear expressions
of ξ in terms of the leg’s joint screws). Analogously, Ohm’s laws suﬃce
when an electrical network is series-parallel; otherwise the more general
Kirchhoﬀlaws are needed (Davies, 1981).
As we have shown (Zoppi et al., 2006), the ideas of PM velocity
analysis can be applied successfully to ICMs. The present paper illus-
trates this further by studying two new non-PMs. We modify a 5-dof
PM and its analysis to obtain and solve ﬁrst a 4-dof S-PM and then a
4-dof ICM.
2.
A 5-dof PM
In the 5-dof PM in Fig. 1 (Huang and Li, 2003), the PRRRR legs are
identical and labeled L = A, . . . , E. Numerical indices count the leg’s
joints, always from the base. The joint screws and their directions are ξL
i
and kL
i , i = 1, . . . , 5, while the links are denoted bL
i , with b = bL
0, e = bL
5
the base and platform. The P joints are horizontal while axes 2 and 3
are vertical in plane πL
23 with normal nL
23. Axes 4 and 5 intersect at the
rotation center O ﬁxed in the platform; their plane is πL
45.
2.1
Assume nonsingular leg postures. The leg system of structural con-
straints (wrenches reciprocal to all leg joints) is WL = Span (ϕz), with
ϕz a vertical force at O. The actuated constraints (reciprocal to the leg
passive joints) are VL = Span (ϕz, ϕL), with force ϕL along πL
23 ∩πL
45.
M. Zoppi, D. Zlantanov and R. Molfino 
66 
Constraint and Mobility Analysis
5-dof PM: architecture with leg screws (left) and graph (right).
singularities such as RPM or IIM singularities, (Zlatanov et al., 1994)) to
generalize the passive-velocity elimination for series-parallel chains. The

The combined constraint systems are: W = 
L WL = Span (ϕz);
V = 
L VL = W + Span (ϕA, . . . , ϕE). So the platform has full ro-
tational capability about its point O, which can translate horizontally.
Out of singularity, dim V = 6 and the mechanism can be controlled by
actuating the ﬁve P joints.
2.2
Jacobian
The screw-theoretical method for the velocity analysis of PMs was
(Hunt, 1978); (Mohamed and Duﬀy, 1985);
(Kumar, 1992); (Agrawal, 1990); (Zlatanov et al.,1994); (Zlatanov et al.,
2002); (Joshi and Tsai, 2002). We provide a detailed general formulation
in (Zoppi et al., 2006).
For each leg, a non-unique actuation system, UL, is identiﬁed, VL =
WL ⊕UL, for this PM we use UL = Span (ϕL). The reciprocal product
of the actuations (any basis of UL) eliminates the passive joint velocities
from the leg twist equation, here ξ = ˙qL
1 ξL
1 + 5
i=2 ωL
i ξL
i .
To obtain an equation Zξ = Λ ˙q with coeﬃcients in terms of the
PM’s geometry, we need symbolic expressions for the actuation screws
ϕL = (f L, mL). We use a moving frame Oijk, Oz always vertical. Since
ϕL, a pure force, and the origin are in πL
45, mL = rLnL
45, where nL
45
is the unit normal to πL
45 and rL is the distance of ϕL from O. Since
the intensity is irrelevant, f L = nL
45 × nL
23 and, ignoring the singularity
π23 ∥π45:
ϕL = (nL
45 × nL
23 |
nL
45 × nL
23
 rLnL
45
T )T
(1)
We can now write the input-output equations. The structural con-
straints amount to the condition vz = 0, in ξ = (ωx, ωy, ωz|vx, vy, vz)T .
The vz output velocity can be ignored and the system becomes ﬁve-
dimensional:
⎡
⎢⎢⎢⎢⎢⎢⎣
f ArAnA
45
T
f A
x f A
y
f BrBnB
45
T
f B
x f B
y
f CrCnC
45
T
f C
x f C
y
f DrDnD
45
T f D
x f D
y
f ErEnE
45
T
f E
x f E
y
⎤
⎥⎥⎥⎥⎥⎥⎦
¯ξ = diag
L = A,...,E
(kL
1 · f L)
⎡
⎢⎢⎢⎢⎣
˙qA
1
˙qB
1
˙qC
1
˙qD
1
˙qE
1
⎤
⎥⎥⎥⎥⎦
(2)
¯ξ is ξ with the z coordinate of its moment suppressed.
3.
A 2R2T 4-dof S-PM
The PM of Fig. 1 has instantaneous end-eﬀector motions spanned by
2 translations and 3 rotations, all independent. Mobility types allowing
67 
Analysis
developed in works like
Velocity Analysis of Non-parallel Closed Chain Mechanisms 

B
EE
R
P
P
P
P
R
R
R
R
R
R
R
R
R
R
R
R
R R
R
Figure 2.
4-dof 2R2T S-PM: architecture with leg screws (left) and graph (right)
instantaneous motions spanned by 2 translations and 2 rotations (2R2T)
are potentially useful for possible practical application and because of the
few mechanisms proposed in the technical literature having this mobility.
The 5 dof of the PM of Fig. 1 are reduced to 4 if two third links, say
bB
3 and bC
3 , are joined in one bBC
3
. The result is an S-PM, Fig. 2. (The
same result can be obtained from the PM by an extra link between ξB
3
and ξC
3 creating an immobile spatial 4-bar, see Fig. 3.)
3.1
Constraint and Mobility
Legs B and C are combined in a mostly serial leg BC, composed of a
planar PM and a passive spherical 4-bar in series.
The spherical 4-bar’s coupler, e, has one dof with respect to bBC and
a constraint 5-system Wb
BC = Span (ϕx, ϕy, ϕz, µB
45, µC
45), where ϕx, ϕy,
ϕz span all forces at O and µL
45 is a couple about nL
45. All four joints
are passive, hence Vb
BC = Wb
BC.
The 2-PRR planar PM from b to bBC imposes the (planar) structural
constraints, Wa
BC = Span (ϕz, µx, µy), and the actuated constraints
Va
BC = Wa
BC ⊕Span (ϕB, ϕC). The actuation L can be any nonvertical
force in πL
23, in particular (out of singularity) ϕL as chosen in Section 2.1.
The whole leg BC imposes the constraint systems: WBC = Wa
BC ∩
Wb
BC = Span (ϕz, µBC
0
), where µBC
0
is a pure moment with direction
k × nB
45 × nC
45; and VBC = Va
BC ∩Vb
BC = WBC ⊕Span (ϕB, ϕC) =
Span (ϕB, ϕC, ϕz, µBC
0
).
The combined platform constraints, for the 4-legged S-PM, are: W =

L WL = Span (ϕz, µBC
0
); V = 
L VL = Span (ϕA, ϕB, ϕC, ϕD) ⊕W
M. Zoppi, D. Zlantanov and R. Molfino 
68
Analysis
.

(ϕA, ϕD as in Section 2.1). dim V = 6 and the S-PM is commanded by
the four actuated PL
1 . (Leg E is thus not needed and removed.)
3.2
Jacobian
The velocity analysis proceeds as in the original PM. Locking any
PL
1 adds one independent basis screw in ϕL, as in the original PM.
Therefore, we can proceed writing the velocity equations along the four
serial chains (two of which share bBC ) and eliminating the passive joint
velocities without considering the presence of the additional link.
The velocity equations are ξ = ˙qL
1 ξL
1 + 5
i=2 ωL
i ξL
i , L = A, B, C, D.
We eliminate the passive joint velocities from the L-th equation by recip-
rocal product with ϕL from Eq. (1).
The couple µBC
0
is horizontal. In a reference frame Oijk with i ∥µBC
0
,
the ωx and vz components of ξ are zero, and the system of four velocity
equations becomes four-dimensional. From Eq. (2), we obtain:
⎡
⎢⎢⎢⎣
f ArAnA
45y
f ArAnA
45z
f A
x f A
y
f BrBnB
45y f BrBnB
45z f B
x f B
y
f CrCnC
45y
f CrCnC
45z f C
x f C
y
f DrDnD
45y f DrDnD
45z f D
x f D
y
⎤
⎥⎥⎥⎦
¯ξ= diag
L=A,...,D
(kL
1 · f L)
⎡
⎢⎢⎣
˙qA
1
˙qB
1
˙qC
1
˙qD
1
⎤
⎥⎥⎦
(3)
4.
A 2R2T 4-dof ICM
Consider ﬁnally the ICM in Fig. 3, derived from the S-PM in Fig. 2
by moving the ﬁfth joints of legs A and D from the end-eﬀector to links
bB
4 and bC
4 , respectively.
We refer three subchains as “legs”: the central S-P leg BC (same as
in the S-PM); and the the two lateral P4R serial chains, from the base
to bB
4 and bC
4 .
4.1
Constraint and Mobility
From Section 3.1, the structural constraint applied to the end-eﬀector
by leg BC is WBC = Span (ϕz, µBC
0
). Lateral leg A applies on bB
4 the
same structural constraint Span (ϕz), which is also reciprocal to ξB
5 , and
similarly for leg D and bC
4 . Thus, the combined structural constraint on
the end-eﬀector is still W = Span (ϕz, µBC
0
) as for the S-PM; dim W = 2
and the ICM has the same 4-dof mobility.
For the actuated end-eﬀector constraint, we consider joints ξB
1 , ξC
1
and ξA
1 , ξD
1 separately.
Consider ﬁrst the constraint when actuators B and C are locked.
Because ξA
1 and ξD
1 are free, it does not matter whether the lateral legs
69 
Analysis
Analysis
Velocity Analysis of Non-parallel Closed Chain Mechanisms 

B
EE
P
P
P P
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
Figure 3.
4-dof 2R2T ICM: architecture with leg screws (left) and graph (right)
are connected to the end-eﬀector or to bL
4 and, as in Section 3.1, the
actuation wrenches are ϕL, L = B, C, VBC = W + Span (ϕB, ϕC).
Consider now the contribution of leg A. We analyze, ﬁrst, the con-
straint on bB
4 .
Joint ξA
1 is locked: the constraint of leg A on bB
4 is
Span (ϕz, ϕA). The constraint on bB
4 coming from legBC is Span(ϕz,µB),
where µB is a pure moment with direction k × kB
4 . The total actuated
constraint on bB
4 with ξA
1 locked is VA
4 = Span (ϕz, ϕA, µB). This is
an IB(h = 0,γ) 3-system containing pure forces with direction k in the
plane πA
0 through O orthogonal to µB, and pure forces in the pencil
centered at the point P A where ϕA intersects πA
0 , in the plane through
ϕA parallel to k.
Only wrenches reciprocal to ξB
5 are transmitted to the platform. The
subsystem VA
4e = VA
4 ∩Span (ξB
5 )⊥is a cylindroid, Span (ϕz, ϕA
e ), ϕA
e in
the pencil at P A and intersecting ξB
5 . Another wrench in VA
4e is ζAB,
obtained by linear combination of ϕA and µB:
ζAB = (ξB
5 ◦µB)ϕA −(ξB
5 ◦ϕA)µB = λAB
1
ϕA + λAB
2
µB
(4)
Thus, the platform constraint with ξA
1 locked is VA = W ⊕Span (ζAB).
Similarly, VD = WBC ⊕Span (ζDC) and, out of singularities, V = VA +
VBC + VD is the 6-system.
4.2
Jacobian
In this case, the analysis needs to be changed signiﬁcantly. We cannot
proceed as before, because the “legs” do not all reach the end-eﬀector.
M. Zoppi, D. Zlantanov and R. Molfino 
70
Analysis
.

We analyze, ﬁrst, leg A and the subchain B of leg BC. The velocity
equations are:
ξ= ˙qA
1 ξA
1 +
5
	
i=2
ωA
i ξA
i +ωB
5 ξB
5
(5)
ξ= ˙qB
1 ξB
1 +
5
	
i=2
ωB
i ξB
i
(6)
We compute the reciprocal product of Eqs. (5) and (6) by λAB
1
ϕA and
λAB
2
µB, respectively. Then we add them and simplify using Eq. (4) and
ξB
5 ◦ζAB = 0. The same is done for leg D and subchain C of leg BC.
We obtain:
ξ ◦ζLM = ˙qL
1 ξL
1 ◦λLM
1
ϕL
(L, M) = (A, B), (D, C)
(7)
Two more velocity equations come from the subchains B and C of
leg BC: ξ = ˙qL
1 ξL
1 + 5
i=2 ωL
i ξL
i , L = B, C. The passive joint velocities
are eliminated by computing the reciprocal products with ϕB and ϕC,
respectively, obtaining: ξ◦ϕL = ˙qL
1 ξL
1 ◦ϕL. These equations and (7) can
be arranged in the matrix form:
⎡
⎢⎢⎢⎣
˜ζ
AB
˜ϕB
˜ϕC
˜ζ
DC
⎤
⎥⎥⎥⎦
¯ξ=
⎡
⎢⎢⎣
ξA
1 ◦λAB
1 ϕA
0
0
0
0
ξB
1 ◦ϕB
0
0
0
0
ξC
1 ◦ϕC
0
0
0
0
ξD
1 ◦λDC
1 ϕD
⎤
⎥⎥⎦
⎡
⎢⎢⎣
˙qA
1
˙qB
1
˙qC
1
˙qD
1
⎤
⎥⎥⎦
(8)
The matrices in Eq. (9) are written as in terms of the geometry para-
meters. We use ξL
1 =

0|kL
1

; ϕL =

f L|f LrLnL
45

, rL as in Section 2.2.
Also, λLM
1
=kM
45 z; λLM
2
= f LrLkM
5 · nL
45 ζLM=kM
45 z

f L|(1 −f LrL)nL
45

,
kM
45 z =kM
1 kM
4 kM
5 ; (L, M)=(A, B); (D, C). Thus:
⎡
⎢⎢⎢⎣
kB
45z(1 −f ArA)nA
45y
kB
45z(1 −f ArA)nA
45z
kB
45zf A
x
kB
45zf A
y
f BrBnB
45y
f BrBnB
45z
f B
x
f B
y
f CrCnC
45y
f CrCnC
45z
f C
x
f C
y
kC
45z(1 −f DrD)nD
45y
kC
45z(1 −f DrD)nD
45z
kC
45zf D
x
kC
45zf D
y
⎤
⎥⎥⎥⎦
¯ξ
=
⎡
⎢⎢⎣
kB
45zkA
1 · f A
0
0
0
0
kB
1 · f B
0
0
0
0
kC
1 · f C
0
0
0
0
kC
45zkD
1 · f D
⎤
⎥⎥⎦
⎡
⎢⎢⎣
˙qA
1
˙qB
1
˙qC
1
˙qD
1
⎤
⎥⎥⎦
(9)
71 
Velocity Analysis of Non-parallel Closed Chain Mechanisms 

5.
Conclusions
The paper shows by means of two examples how, with some modi-
ﬁcations, the standard method for the constraint and velocity analysis
of PMs can be applied for the derivation of the input-output velocity
equations of non-parallel closed chain mechanisms.
In such mechanisms part of the constraint wrenches applied to the
end-eﬀector are not in the vector-space sum of the leg constraint systems.
These additional constraints have to be taken into account in order to
eliminate the passive joint velocities from the velocity equations.
References
Agrawal, S. (1990), Rate kinematics of in-parallel manipulator systems, IEEE Int.
Conf. on Robotics and Automation ICRA90, pp. 104–109 vol. 1.
Davies, T. (1981), Kirchhoﬀ’s circulation law applied to multi-loop kinematic chains,
Mechanism and Machine Theory 16, 171–183.
Huang, Z. and Li, Q. (2003), Type synthesis of symmetrical lower mobility parallel
mechanisms using the constraint synthesis method, Int. J. of Robotics Research
22(1), 59–79.
Hunt, K. H. (1978), Kinematic Geometry of Mechanisms, Oxford University Press.
Joshi, S. and Tsai, L. (2002), Jacobian analysis of limited-dof parallel manipulators,
ASME Journal of Mechanical Design 124, 254–258.
Kumar, V. (1992), Instantaneous kinematics of parallel-chain robotic mechanisms,
ASME J. of Mechanical Design 114(3), 349–358.
Mohamed, M. and Duﬀy, J. (1985), A direct determination of the instantaneous kine-
matics of fully parallel robot manipulators, ASME J. of Mechanisms, Transmis-
sions and Automation in Design 107(2), 226–229.
Zlatanov, D., Benhabib, B. and Fenton, R. (1994), Velocity and singularity analy-
sis of hybrid chain manipulators, ASME 23rd Biennial Mechanism Conference in
DETC94, Vol. 70, Minneapolis, MN, USA, pp. 467–476.
Zlatanov, D., Bonev, I. and Gosselin, C. (2002), Constraint singularities of parallel
mechanisms, IEEE ICRA’02, pp. 496–502 vol. 1, Washington DC.
Zoppi, M., Zlatanov, D. and Molﬁno, R. (2006), On the velocity analysis of intercon-
nected chains mechanisms, to appear in Mechanism and Machine Theory.
M. Zoppi, D. Zlantanov and R. Molfino 
72
,

Properties of Mechanisms
H. Bamberger, M. Shoham, A. Wolf
Kinematics of micro planar parallel robot comprising large joint
clearances
H.K. Jung, C.D. Crane III, R.G. Roberts
Stiﬀness mapping of planar compliant parallel mechanisms in a serial
arrangement
Y. Wang, G.S. Chirikjian
Large kinematic error propagation in revolute manipulators
A. Pott, M. Hiller
A framework for the analysis, synthesis and optimization of parallel
kinematic machines
Z. Luo, J.S. Dai
Searching for undiscovered planar straight-line linkages
X. Kong, C.M. Gosselin
Type synthesis of three-DOF up-equivalent parallel manipulators using
a virtual-chain approach
A. De Santis, P. Pierro, B. Siciliano
The multiple virtual end-eﬀectors approach for human-robot interaction
75 
85 
95 
103 
113 
123 
133 

KINEMATICS OF MICRO PLANAR 
PARALLEL ROBOT COMPRISING LARGE 
JOINT CLEARANCES  
Hagay Bamberger1,2, Moshe Shoham2, Alon Wolf 2 
1RAFAEL – Armament Development Authority Ltd. 
2Robotics Laboratory 
Department of Mechanical Engineering 
Technion – Israel Institute of Technology 
hagayb@rafael.co.il 
shoham@technion.ac.il 
alonw@technion.ac.il 
Abstract 
Manufacturing of micro-robots by MEMS technology may cause large 
clearance at the joints – only one order smaller and even of the same order of 
magnitude as the links themselves. Due to the clearances, the direct 
kinematic solutions are not discrete, but form a volume that is defined here 
as the “Clearance-space”. When clearances are large enough, two separate 
regions of the clearance-space may unite, causing a major failure as the 
forward kinematic may be shifted into a different unwanted solution. This 
paper suggests an algorithm that calculates the minimal value of the joint 
clearance in which this severe phenomenon occures. 
Keywords: 
learance, direct kinematics, parallel robot, MEMS, micro joint 
1.  
Introduction  
Contemporary MEMS technology enables manufacturing of micro-
robot using masks and lithograpy process. This technolgical process 
requires keeping relatively large gaps between links in order to maintain 
the mechanism s motion. These gaps result in clearances between moving 
circumstances in traditional machinery during the 18th century that 
caused inaccuracy of the mechanism, shocks, vibrations, noise and wear 
at the joints, as opposed to the high accuracy achievable in the macro-
world nowadays. 
Modeling of clearances is always implemented by adding degrees-of-
freedom to enable parasitic motion between the joint parts. The motion 
in these degrees-of-freedom is limited by the joint geometry, where the 
most common ones are the revolute, prismatic, and spherical joints. 
Consequently, most of the models deal with these three joints. It is worth 
© 2006 Springer. Printed in the Netherlands. 
75 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 75 84. 
– 
C
parts, that can be as large as about the same order of magnitude as 
the typical dimensions of the mechanism itself. These were the 
,

noting that some of the models can be expanded to helical or cylindrical 
joints. Most models assume that the clearances are small, thus enable 
using linearization and similar simple mathematical tools. 
Dubowsky and Freudenstein, 1971, have investigated the dynamics of 
revolute and spherical joints with clearances, and discovered some 
interesting dynamic phenomena, like limit cycles and natural frequencies 
changing vs. the motion amplitude. Stoenescu and Marghitu, 2003, have 
solved the dynamics of a slider-crank-mechanism, and applied impacts 
when the two parts contact. 
Other researches focus on the static behavior of mechanisms with 
clearances, that are subjected to an external load. Wang and Roth, 1989, 
have shown all the relative situations between the journal and bearing of 
a spatial revolute joint. The mathematical conditions relate the joint 
geometry and reactions at the joint due to the external load, and the 
valid situation must satisfy the conditions ensuring that all normal 
forces are positive. Parenti-Castelli and Venanzi, 2002, have applied a 
gravitation force on moving robots, and assumed that the motion is 
quasi-static, thus one can find the contact points using static analysis. 
They have found that the accuracy of the parallel robot is quite good 
One example for dealing with relatively large clearances, without 
assuming that they are much smaller than the links, is given in 
Voglewede and Ebert-Uphoff, 2004. In their work, the authors have 
calculated the possible poses of the end effectors of two planar parallel 
robots resulting from the clearances, and have shown that the effect of 
clearances becomes worse near or at singular configurations. This 
kinematic approach is based only on the robot geometry, without taking 
into account the loads applied on the robot. 
Behi et al., 1990, and DeVoe et al., 2000, were the first to build, based 
3RRR version, and calculated their affect on the accuracy of the moving 
platform, while assuming that the clearances are very small compared to 
the robot links. 
The present paper deals with large joint clearances that are typical of 
MEMS manufacturing, and determines the clearance conditions under 
which two forwards kinematic solutions merge, which results in an 
undetermined location of the output link.  
76 
compared with the serial counterpart, except for near singular configu-
ration. 
on MEMS technology, 3RRR and 3PRR planar parallel robots, res-
pectively. Kosuge et al., 1991, was aware of the clearances in the 
H. Bamberger, M. Shoham and A. Wolf 

2. 
The Clearance-Space as an Expansion of the 
Direct Kinematics Solutions 
The 3RRR and 3PRR kinematic structures are discussed hereinafter. 
Fig. 1 shows the 3PRR robot1. 
The robot consists of an equilateral triangle platform, whose center is 
the point P. The platform pose is determined by point P x and y 
coordinates and by the platform orientation θ. Points Pr, Pg, and Pb are 
located on the platform in an equal distance r from the platform center P. 
r
M
p
, 
g
M
p
, and 
b
M
p
, where p 
stands for a position vector from the origin to the corresponding point. In 
case of 3RRR kineamtic structure the motors would be rotational, 
which 
distance between each motor and the corresponding point on the 
platform. 
It is likely that the manufacturing process would introduce clearances 
into all six revolute joints. The clearance is expressed by an offset 
between the axes of the bearing and the journal. Therefore, those axes 
are not coincident, but may be distant from each other. The simplest 
model assumes that the difference in radius between the bearing and the 
journal of any joint is ½Ʀ (see Fig. 1b). Therefore, the distances between 
each motor and the corresponding point on the platform, which we refer 
                                                
1 r , g , and b  stand for the red, green, and blue links, respectively. All colored figures 
77 
The linear motors detemine the vectors 
are marked by asterisks, and which connect the motors with
 the 
although this is not shown here. The physical length of the links
 
platform, is l, meaning that under zero clearance, this would be the 
,
,
,
,
,
,
Figure 1.     The 3PRR robot. 
can be found at the website http://robotics.technion.ac.il/Projects/hagay/Robochip.html 
Kinematics of Micro Planar Parallel Robot 
x

to as the “effective lengths” of the links MrPr, MgPg, and MbPb, is bounded 
by: 
 
∆
+
≤
≤
∆
−
l
l
b
b
g
g
r
r
P
M
P
M
P
M
p
p
p
,
,
 .   
 
 
 
(1)  
 
Defining the parameters sr, sg, and sb such that 
 
  
1
,
,
1
≤
≤
−
b
g
r
s
s
s
  
 
 
 
 
 
 
 
(2)  
 
enables writing the effective lengths as 
 
 
∆
+
=
∆
+
=
∆
+
=
b
P
M
g
P
M
r
P
M
s
l
s
l
s
l
b
b
g
g
r
r
p
p
p
 .   
 
 
 
 
 
 
 
 
(3)  
 
In order to find the possible locations of point P, three auxiliary annuli 
are drawn. They are described in the next figure, with the robot arranged 
in a specific orientation θ. 
Note that the angle θ determines the vectors 
P
Pr p ,  
P
Pg p , and 
P
Pb p ,  
which are pointing from the platform corners to its center. Those vectors 
lead to the auxiliary points Tr, Tg, and Tb, which can be calculated by 
 
P
P
T
M
P
P
T
M
P
P
T
M
b
b
b
g
g
g
r
r
r
p
p
p
p
p
p
=
=
=
 .   
 
 
 
 
 
 
  
(4)   
 
78 
Figure 2.     Possible positions for a given platform orientation due to clearances 
at the joints. 
H. Bamberger, M. Shoham and A. Wolf 

 
The annuli Ar, Ag, and Ab of the radii l–∆ and l+∆ are centered at 
points Tr, Tg, and Tb, respectively. The annulus Ar, for example, describes 
the possible positions of point P, if only the red link is connected to the 
platform. When all links are connected, point P is forced to be at the 
intersection of the three annuli. This area is bolded in Fig. 2, and can be 
calculated by ArŊAgŊAb, as shown in Voglewede and Ebert-Uphoff, 2004. 
If the three annuli do not intersect, then there is no solution for the 
 
Physically, when the robot tracks the bolded green curve in Fig. 2, the 
g
lengths of the other links are in the boundaries defined in Eqs. 1 and 2. 
Furthermore, moving along the long blue curve (sb = –1) changes the 
r = –1 and sr = 1), while 
the green link is always in the allowed range. The intersecting point 
between two curves means a configuration where the clearances of two 
links are closed. 
 
Fig. 2 describes a specific orientation of the platform. Generalizing it 
to all possible orientations yields the “Clearance-Space”, shortly named 
“Cl-space”. This space is a sub-space of the configuration-space, and it 
consists of six boxes that describe all possible platform poses resulting 
from the clearances. Note that the term “box” is being used since it has 
eight vertices, although its shape is not cubic. Actually, the “Cl-space” for 
3RRR or 3PRR robots is identical to the workspace of an equivalent 
3RPR robot, whose link lengths are limited as described in Eq. 1 
(Voglewede and Ebert-Uphoff, 2004). 
79 
effective length of the green link is always l–∆ (s = –1), while the effective 
direct kinematic problem for this specific orientation angle θ. 
length of the red link between its extreme values (s
Figure 3.     The clearance-space. 
Kinematics of Micro Planar Parallel Robot 
r
r
b
50
40
30
20
10
0
2 2.5
3
3.5
4
1.5
2
2.5
3
3.5
y
x
q
b
g
g

In the case of no clearance, the direct kinematics problem has six 
solutions, as shown in Gosselin and Merlet, 1994. These solutions are 
points in the 3D C-space, and each of them is located in one of the boxes 
Cl-space is an expansion of one of the direct kinematics solutions. 
Each of the boxes has six side walls, which are two degree-of-freedom 
manifolds: two red, two green, and two blue. As described before, the red 
side wall, for example, includes poses in which the clearances in the 
joints of the red link are closed, i.e. the effective length is minimal or 
maximal (see Eq. 1). Therefore, while manipulating the robot along an 
intersecting curve of two side walls, which is a one degree-of-freedom 
manifold, the effective lengths of the two relevant links remain fixed. In 
fact, this motion is similar to the motion of a four bar mechanism that 
consists of a platform that serves as a coupler, and the two fixed length 
links. The black curve in Fig. 3 describes the motion of such a four bar 
mechanism, in which the lengths of the red and green links are minimal 
(sr = sg
curve of the two relevant side walls. The motion of the mechanism is 
limited by the third link, since its effective length is constrained by Eq. 1. 
However, when clearance ∆ is large enough, the effective length of the 
third link does not limit the motion of the four bar mechanism. 
Each of the boxes in Fig. 3 has eight vertices, which correspond to the 
poses where all the clearances are closed. These poses can be calculated 
analytically using the algorithm in Gosselin and Merlet, 1994, since each 
of the extreme situations can be treated as an equivalent 3RPR robot, 
whose link lengths are fixed and known. For example, the circles in Fig. 
r = sg =
sb = 
 (sr = sg = –1, sb = 1)  are 
marked by 
of them lay on the black curve. 
When the clearance increases, the volumes of the boxes also increases 
and may cause two adjacent boxes to meet. Kinematically, such a case 
must be avoided, since the robot may pass from one direct kineamtic 
solution to another, thus resulting in an undesired platform pose. The 
interesting question is how to quantify a boundary for the clearance in 
order to prevent this phenomenon.  
80 
in Fig. 3. Therefore, it can be concluded that each of the boxes in the 
= –1). Indeed, this curve meets all the boxes along the intersecting 
(s
3 indicate the poses where all the effective lengths are minimal 
–1), while the cases of maximal blue link
the diamonds. As expected, there are six circles and six dia
monds, and all 
-
H. Bamberger, M. Shoham and A. Wolf 

3. 
Merging Conditions of Clearance-Space Boxes  
In order to find an analytical answer for the above question, note that 
two boxes meet when their vertices meet. As explained, the vertices are 
calculated by solving a direct kinematics problem, so it can be concluded 
that this problem has at least one multiple solution. Since the direct 
kinematics problem yields a six degree polynomial equation, conditions 
where such a polynomial has multiple roots should be found. 
Lemma: Given the general polynomial equation: 
 
0
2
3
4
5
6
=
+
−
+
−
+
−
a
bz
cz
dz
ez
fz
gz
 .  
 
 
 
 
 
(5)  
 
It can be shown that this equation has multiple roots if its coefficients 
satisfy the next equation: 
 
0
...
38880
27
4
4
4
2
2
4
2
3
2
2
2
2
2
2
2
2
=
+
+
−
−
bfg
a
f
e
d
a
g
e
d
c
b
f
e
d
c
b
 .   
 
(6)  
 
This equation has 246 terms, so only some of its terms are shown. The 
Proof: If the solutions of Eq. 5 are z1, z2, z3, z4, z5, and z6, it is evident 
that: 
 
  (
)(
)(
)(
)(
)(
)
0
2
3
4
5
6
6
5
4
3
2
1
=
+
−
+
−
+
−
=
−
−
−
−
−
−
a
bz
cz
dz
ez
fz
gz
z
z
z
z
z
z
z
z
z
z
z
z
g
   
 
 
 
 
(7)  
 
Therefore, 
 
6
5
4
3
2
1
6
5
6
4
5
4
6
3
5
3
4
3
6
2
5
2
4
2
3
2
6
1
5
1
4
1
3
1
2
1
6
5
4
6
5
3
6
4
3
5
4
3
6
5
2
6
4
2
5
4
2
6
3
2
5
3
2
4
3
2
6
5
1
6
4
1
5
4
1
6
3
1
5
3
1
4
3
1
6
2
1
5
2
1
4
2
1
3
2
1
6
5
4
2
6
5
4
3
6
5
3
2
6
4
3
2
5
4
3
2
6
5
4
1
6
5
3
1
6
4
3
1
5
4
3
1
6
5
2
1
6
4
2
1
5
4
2
1
6
3
2
1
5
3
2
1
4
3
2
1
6
5
4
3
2
6
5
4
3
1
6
5
4
2
1
6
5
3
2
1
6
4
3
2
1
5
4
3
2
1
6
5
4
3
2
1
z
z
z
z
z
z
g
f
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
g
e
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
g
d
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
g
c
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
g
b
z
z
z
z
z
z
g
a
+
+
+
+
+
=
+
+
+
+
+
+
+
+
+
+
+
+
+
+
=
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
=
+
+
+
+
+
+
+
+
+
+
+
+
+
+
=
+
+
+
+
+
=
=
 
.
  
 
(8)  
 
81 
complete expression can be found online at the website http://robotics.
. 
technion.ac.il/Projects/hagay/Robochip.html
.
Kinematics of Micro Planar Parallel Robot 

Substituting Eq. 8 into Eq. 6 yields 
 
 
(
)(
)(
)(
)(
)
(
)(
)(
)(
)(
)
(
)(
)(
)(
)(
)
0
2
6
5
6
4
5
4
6
3
5
3
4
3
6
2
5
2
4
2
3
2
6
1
5
1
4
1
3
1
2
1
10
=
»
»
»
¼
º
«
«
«
¬
ª
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
z
g
 ,  
 
 
 
(9)  
 
meaning that there exists at least one pair of multiple roots. 
 
The following equation is obtained while solving the direct kinematical 
problem: 
 
  
(
)
(
)
(
)
(
)
(
)
(
)
(
)
0
0
1
2
2
0
1
2
2
2
0
1
2
2
3
0
1
2
2
4
0
1
2
2
5
0
1
2
2
6
0
1
2
2
=
+
∆
+
∆
+
+
∆
+
∆
−
+
∆
+
∆
+
+
∆
+
∆
−
+
∆
+
∆
+
+
∆
+
∆
−
+
∆
+
∆
a
a
a
t
b
b
b
t
c
c
c
t
d
d
d
t
e
e
e
t
f
f
f
t
g
g
g
 ,   
   (10)  
 
where: 
 
 
¸
¹
·
¨
©
§
=
2
tan θ
t
 ,   
 
 
 
 
 
 
 
 
 
   (11)  
 
and all coefficients a0, a1, a2, …, g0, g1, g2 are known functions of the 
geometric parameters 
r
l
b
g
r
M
M
M
,
,
,
,
p
p
p
 and sr, sg, and sb. 
 
Substituting the coefficients of Eq. 10 into Eq. 6 yields a polynomial 
equation in ∆ only: 
 
 
0
20
0
=
∆
¦
=
i
i
i
κ
 .  
 
 
 
 
 
 
 
 
 
   (12)  
 
For all the solutions of the above equation, Eq. 10 has multiple solutions. 
The smallest positive solution has a physical meaning, since it is the 
clearance ∆ where the vertices of two different boxes meet. For a 
complete solution, it is required to repeat the calculation for all eight 
combinations (sr = ±1, sg = ±1, sb
vertices the meeting will occur.  
4. 
Numerical Example 
Given the motor positions at 
y
x
p
y
x
p
y
x
p
ˆ
5
ˆ
2
,ˆ
0
ˆ
7
,ˆ
0
ˆ
0
+
=
+
=
+
=
b
g
r
M
M
M
, 
shows all the Cl-space for ∆= 0 .1
. 
Implementation of the process described in Eqs. 10 and 6 for each of 
the combinations of sr, sg, and sb yields eight equations in ∆. For example, 
for sr = sg = –1, sb = 1, one gets: 
 
82 
= ±1), in order to find the first meeting 
of two boxes, whereas it cannot be known in advance in which of the eight 
clearance ∆= 0.2, which is one order smaller than the link lengths. Fig. 3 
the platform center P at a constant orientation angle θ =12.5° due to a 
and the geometric parameters l = 2, r = 4. Fig. 2 shows a possible area for 
H. Bamberger, M. Shoham and A. Wolf 

0
21726
.0
9558
.1
53
.
17
69
.
147
36
.
415
8.
2523
9.
4820
10771
14420
20825
17010
19083
10067
5.
8679
5.
3280
7.
2071
52
.
474
64
.
261
4984
.6
7241
.1
04096
.0
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
=
∆
+
∆
−
∆
−
∆
+
∆
+
∆
−
∆
−
∆
+
∆
+
∆
−
∆
−
∆
+
∆
+
∆
−
∆
−
∆
+
∆
+
∆
−
∆
+
∆
+
 . 
 
   (13)  
 
The real solutions of Eq. 13 are –7.2367, –3.5072, –2.3201, –1.5742,         
–0.8661, –0.7204, 0.1279, 0.8696, 1.1962, 4.8039, 7.7946, and 8.9655. 
The lowest positive solutions of the eight combinations of sr, sg, and sb 
are shown in the next table: 
 
sr 
sg 
sb 
∆min 
1 
5.7662 
1 
1 
0.7204 
1 
0.2776 
1 
1 
1 
0.1528 
1 
0.5665 
1 
1 
0.1656 
1 
0.1279 
1 
1 
1 
0.4935 
 
The smallest value in the table is bolded and, as expected, it results in 
meeting of the two vertices that are indicated by a diamond in the top of 
that the two boxes became one and there are only four solutions for 
sr = sg =  –1,  sb = 1. 
 
83 
Fig. 3. The next figure shows the Cl-space for ∆= 0.14, and it can be seen 
–
–
–
–
–
–
–
Table 1.     The clearances causing meeting of vertices of the Cl-space. 
Figure 4.     The clearance-space for large clearances. 
Kinematics of Micro Planar Parallel Robot 
r 
r
b
b
g 
g
50
40
30
20
10
0
2
2.5
3 3.5
4
1.5
2
2.5
3
3.5
y
x
q

5.  Conclusions  
The kinematic effects of large joint clearances in parallel robots was 
discussed. It was shown that the direct kinematics solutions expand due 
to the clearances, and the clearance-space was defined as the set of 
possible platform poses resulting from given clearances. Instability of 
direct kinematics solutions may occur, as the clearances get bigger when 
two distinct clearance-space boxes might merge. An analytical approach 
for finding the minimal clearance that causes this unwanted behavior 
was suggested, along with a numerical example showing that for a 3 
DOF planar parallel robot, clearance of about 10% of the typical robot 
link length may be problematic. Future work will investigate the effects 
of clearances on the static and the dynamic behaviors of micro-robots. 
References 
Behi, F., Mehregany, M., and Gabriel, K.J. (1990), A Microfabricated Three-
Degree-of-Freedom Parallel Mechanism, Proceedings of IEEE Micro Electro 
Mechanical Systems – An Investigation of Micro Structures, Sensors, 
Actuators, and Machines, pp. 159-165. 
Research, University of Maryland, MD, USA. 
Systems with Clearances, Part 1: Formation of Dynamical Model; Part 2: 
Dynamic Response, Journal of Engineering for Industry, Transactions of the 
ASME, Series B., Vol. 93, No. 1, pp. 305-316. 
Gosselin, C.M., and Merlet, J.P. (1994), The Direct Kinematics of Planar Parallel 
Manipulators: Special Architectures and Number of Solutions, Mechanism 
and Machine Theory, Vol. 29, No. 8, pp. 1083-1097. 
Kosuge, K., Fukuda, T., and Mehregany, M. (1991), Kinematic Analysis of 
Precision Planar Manipulator on Silicon, International Conference on Solid-
State Sensors and Actuators (Transducers'91), San Francisco, CA, USA, pp. 
618-621. 
Parenti-Castelli, V., and Venanzi, S. (2002), On the Joint Clearance Effects in 
Serial and Parallel Manipulators, Proceedings of the Workshop on 
Fundamental Issues and Future Research Directions for Parallel Mechanisms 
and Manipulators, Quebec, Canada, pp. 215-223. 
Stoenescu, E.D., and Marghitu, D.B. (2003), Dynamic Analysis of a Planar Rigid-
Link Mechanism with Rotating Slider Joint and Clearance, Journal of Sound 
and Vibration, Vol. 266, No. 2, pp. 394-404. 
Voglewede, P., and Ebert-Uphoff, I. (2004), Application of Workspace Generation 
Techniques to Determine the Unconstrained Motion of Parallel Manipulators, 
Journal of Mechanical Design, Transactions of the ASME, Vol. 126, No. 2, pp. 
283-290. 
Wang, H.H.S., and Roth, B. (1989), Position Errors Due to Clearance in Journal 
Bearings, Journal of Mechanisms, Transmissions, and Automation in Design, 
Vol. 111, pp. 315-320. 
84 
DeVoe, D., et al., 3 DOF Planar Micromechanism (2000), 
The  Institute for 
Systems 
http://www.isr.umd.edu/
Dubowsky, S., and Freudenstein, F. (1971), Dynamic Analysis of Mechanical 
ISR/accomplishments/032_ParallelFabrication /,
H. Bamberger, M. Shoham and A. Wolf 

STIFFNESS MAPPING OF PLANAR 
COMPLIANT PARALLEL MECHANISMS 
IN A SERIAL ARRANGEMENT 
Hyun K. Jung, Carl D. Crane III 
University of Florida 
Department of Mechanical and Aerospace Engineering 
hyunkwon.jung@gmail.com, ccrane@ufl.edu 
Rodney G. Roberts 
Florida State University, FAMU-FSU College of Engineering 
Department of Electrical and Computer Engineering 
rroberts@eng.fsu.edu 
Abstract 
This paper presents a stiffness mapping of a mechanism having two planar 
compliant parallel mechanisms in a serial arrangement.  The stiffness 
matrix of the mechanism is obtained by taking a derivative of the static 
equilibrium equations.  A derivative of spring force connecting two moving 
bodies is derived and it is applied to obtain the stiffness matrix of the 
mechanism.  A numerical example is presented. 
Keywords: 
Stiffness matrix, compliant coupling, parallel mechanism 
1.  
Introduction  
There are many robotic tasks involving contacts of man and machine 
or the robot and its environment.  A small amount of positional error of 
the robot system, which is almost inevitable, may cause serious damage 
to the robot or the object with which it is in contact.  Compliant couplings 
which may be inserted between the end effecter and the last link of the 
robotic manipulator can be a solution to this problem (Whitney, 1982, 
Peshkin, 1990, and Griffis, 1991).    
Dimentberg, 1965, studied properties of an elastically suspended body 
using Screw theory which was introduced by Ball, 1900.  Screw theory is 
employed throughout this paper to describe the motion of rigid bodies 
A small twist applied to the compliant coupling generates a small change 
of the wrench which the compliant coupling exerts on the environment.  
This relation is well described by the stiffness matrix of the compliant 
coupling.   
© 2006 Springer. Printed in the Netherlands. 
85
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 85–94. 
(twist) and the forces applied to rigid bodies (wrench) (Crane et al., 2006).  

Parallel mechanisms have several advantages over serial mechanisms 
such as high stiffness, compactness, and small positional errors at the 
cost of a smaller work space and increased complexity of analysis.  
Griffis, 1991, obtained a global stiffness model for parallel mechanism-
based compliant couplings.  Huang and Schimmels, 1998, Ciblak and 
Lipkin, 1999, and Roberts, 1999, studied synthesis of stiffness matrices. 
2.  
Problem Statement  
 
obtained in this paper.  Body A is connected to ground by three compliant 
couplings and body B is connected to body A in the same way.  Each 
compliant coupling has a revolute joint at each end and a prismatic joint 
with a spring in the middle.  It is assumed that an external wrench 
ext
w
 
is applied to body B and that both body B and body A are in static 
equilibrium.  The poses of body A and body B and the spring constants 
and free lengths of all compliant couplings are known.   
The stiffness matrix [
]
K  which maps a small twist of the moving body 
B in terms of the ground, E
B
GD ,  into the corresponding wrench varia-
tion, 
ext
G w
, is desired to be derived.   This relationship can be written as  
 
H.K. Jung, C.D. Crane III and R.G. Roberts 
86 
 
Figure 1.     Mechanism having two planar parallel mechanisms in a serial 
Figure 1 depicts the compliant mechanism whose stiffness matrix will be 
arrangement. 

 
E
B
ext
K
G
G
 ª
º
¬
¼
w
D .  
 
 
 
 
 
 
 
(1) 
 
The static equilibrium equation of bodies B and A can be written by 
 
 
1
2
3
4
5
6
ext  


 


w
f
f
f
f
f
f
  
 
 
 
 
 
 
 
(2) 
 
where 
i
f
 are the forces from the compliant couplings. 
The stiffness matrix will be derived by taking a derivative of the static 
equilibrium equation, Eq. 2, to yield 
 
1
2
3
4
5
6
ext
G
G
G
G
G
G
G
 


 


w
f
f
f
f
f
f
.  
 
 
 
 
 
 
(3) 
 
Expressions for 
i
G f
 for the compliant couplings joining body A and 
ground, i.e., for i = 4, 5, 6, were obtained by Griffis, 1991. 
The contribution of this new effort is in the analysis of the derivative 
of the spring force joining bodies A and B which will lead to the 
derivation of the compliant matrix that will relate the change in the 
external wrench to the twist of body B with respect to ground. 
3.  
Derivative of Spring Force Connecting 
Two Moving Bodies 
 
 
 
coupling with a spring constant k , a free length 
ol ,  and a current length 
E 
P1 
T  
S  
P2 
Body B 
Body A 
P1 
P2 
T  
l
G  
lGT
2
A
B
P
G r
Body A 
l
 
GT  
Stiffness Mapping of Planar Compliant Parallel Mechanisms 
87 
Figure 2.     Compliant coupling conneting two moving bodies and variation of 
point P2 due to twist of body B with respect to body A. 
l.  The spring force may be written as 
Figure  2 depicts two rigid bodies connected to each other by a compliant 

 
(
)
o
k l
l
 

f
$   
 
 
 
 
 
 
 
 
 
 
(4) 
where 
1
2
E
A
E
B
P
P
ª
º
ª
º
 
 
«
»
«
»
u
u
«
»
«
»
¬
¼
¬
¼
S
S
$
r
S
r
S   
 
 
 
 
 
 
 
(5) 
 
and where, S  is a unit vector along the compliant coupling. 
1
E
A
P
r
 and 
2
E
B
P
r
 are the position vector of the point P1 in body A and that of point 
P2 in body B, respectively, measured with respect to the reference 
system embedded in ground (body E).   
 
The derivative of the spring force as in Eq. 4 can be written by 
 
(
)
E
E
o
k l
k l
l
G
G
G
 


f
$
$ .  
 
 
 
 
 
 
 
(6) 
 
From the twist equation, the variation of position of point P2 in body B 
with respect to body A can be expressed as 
 
2
2
B
B
B
A
B
A
A
A
P
o
P
G
G
G
 

u
r
r
Ǘ
r
  
 
 
 
 
 
 
 
(7) 
where 
B
2
P
Ar
 is the position of P2, which is embedded in body B, 
measured with respect to a coordinate system embedded in body A which 
at this instant is coincident and aligned with the reference system 
attached to ground.  In addition, A
B
GǗ
 is the differential of angle of body 
B in terms of body A.  It can also be decomposed into two perpendicular 
vectors along S  and 
A
T
w
w
S  which is a known unit vector perpendicular to 
S .  These two vectors correspond to the change of the spring length 
l
G  
and the directional change of the spring lGT  in terms of body A as shown 
in Fig. 2.  Thus Eq. 7 can be rewritten as 
 
 
 
 
 
 


2
2
2
A
A
A
B
A
B
A
B
P
P
P
A
l
l
G
G
G
T
T
G
GT
T
§
·
w
w
 



¨
¸
¨
¸
w
w
©
¹
w
 

w
S
S
r
r
S S
r
S
S
  
 
 
 
(8) 
where 
1
A
A
A
A
A
P
T
T
T
ª
º
w
«
»
w
w
«
»
 «
»
w
w
u
«
»
w
¬
¼
S
$
S
r
.  
 
 
 
 
 
 
 
 
(9) 
 
 
H.K. Jung, C.D. Crane III and R.G. Roberts 
88 

 
 
 
 
 
2
2
2
A
B
A
B
A
B
A
B
P
o
P
A
B
A
B
A
B
o
P
T A
B
l
G
G
G
G
G
G
G
 

 


u

 



u
 
r
S
r
S
Ǘ
r
S
r
S
Ǘ
r
S
$
D
 
 
 
 
(10) 
2
2
2
A
A
A
A
B
A
B
A
B
A
B
P
o
P
A
A
A
B
A
B
A
B
o
P
A
T
A
B
lGT
G
G
G
T
T
T
G
G
T
T
G
T
w
w
w
 

 


u

w
w
w
w
w
 



u
w
w
c
w
 
w
S
S
S
r
r
Ǘ
r
S
S
r
Ǘ
r
$
D
 
(11) 
where 
 
 
 
 
 
 
 
 
 
2
A
A
A
A
B
P
T
T
T
ª
º
w
«
»
c
w
w
«
»
 «
»
w
w
u
«
»
w
¬
¼
S
$
S
r
.  
 
 
 
 
 
 
(12) 
 
A
T
c
w
w
$  has the same direction as
A
T
w
w
$  but has a different moment term. 
EG$  in Eq. 6 is a derivative of the unit screw along the spring in terms 
of the inertial frame and may be written as 
 
1
1
E
E
E
A
E
A
E
P
P
G
G
G
G
ª
º
«
»
 
u

u
«
»
¬
¼
S
$
r
S
r
S
.  
 
 
 
 
(13) 
 
Using an intermediate frame attached to body A, 
 
E
A
E
A
G
G
G
 

u
S
S
Ǘ
S .  
 
 
 
 
 
 
(14) 
 
Then, EG$  may be decomposed into three screws as follows 
 




1
1
1
1
1
1
1
E
E
E
A
E
A
E
P
P
A
E
A
E
A
E
A
A
E
A
P
P
E
A
A
E
A
E
A
A
E
A
E
A
P
P
P
G
G
G
G
G
G
G
G
G
G
G
G
G
G
ª
º
«
»
 
u

u
«
»
¬
¼
ª
º

u
«
»
 «
»
u

u

u
¬
¼
ª
º
u
ª
º
ª
º
«
»
«
»
 

 «
»
«
»
u
u
«
»
u
u
«
»
¬
¼
¬
¼
¬
¼
S
$
r
S
r
S
S
Ǘ
S
r
S
r
S
Ǘ
S
Ǘ
S
0
S
r
S
r
S
r
Ǘ
S
.
 (15) 
 
Since S  is a function of T  alone from the vantage of body A and lGT  is 
already described in Eq. 11, the first screw in Eq. 15 can be written as 
 
Stiffness Mapping of Planar Compliant Parallel Mechanisms 
89 
From Eqs. 7 and 8, Gl  and GT
l
 can be expressed as 

 
 
 
1
1
1
1
A
A
E
A
A
A
P
E
A
P
A
A
A
T
A
B
l
l
l
GT
G
T
G
GT
T
GT
G
T
T
T
ª
º
w
«
»
ª
º
w
«
»
«
»  «
»
u
«
»
w
¬
¼
u
«
»
w
¬
¼
c
w
w
w
 
 
w
w
w
S
S
r
S
S
r
$
$
$
D
 
 
 
.
 (16) 
 
As to the second screw in Eq. 15, E
A
G
u
Ǘ
S  has the same direction as 
A
T
w
w
S  with magnitude of E
A
GI  and thus may be written as 
 
 
 
 
 
 
A
E
A
E
A
G
GI
T
w
u
 
w
S
Ǘ
S
.  
 
 
 
 
 
 
 
(17) 
 
Then the second screw in Eq. 15 can be expressed as 
 


1
1
0
0
1
A
E
A
E
A
E
A
E
A
A
E
A
P
P
E
A
A
A
E
A
E
A
GI
G
T
G
GI
T
GI
G
T
T
ª
º
w
ª
º
«
»
u
w
«
»
«
»
 
«
»
«
»
u
u
w
¬
¼
u
«
»
w
¬
¼
w
w
 
 
ª
º
¬
¼
w
w
S
Ǘ
S
r
Ǘ
S
S
r
$
$
D
 . 
(18) 
 
As to the third screw in Eq. 15, 
1
E
A
P
G r
 can be decomposed into two 
perpendicular vectors along S  and 
T
w
w
A S , respectively as 
 
 
 


1
1
1
1
E
A
E
A
E
A
E
A
P
o
P
A
A
E
A
E
A
P
P
G
G
G
G
G
T
T
 

u
§
·
w
w
 



¨
¸
¨
¸
w
w
©
¹
r
r
Ǘ
r
S
S
r
S S
r
 
 
 
 
 
(19) 
where 
 
 
 
1
1
1
E
A
E
A
E
A
A
P
o
P
E
A
E
A
A
o
P
T E
A
G
G
G
G
G
G

 


u

 



u
 
r
S
r
S
Ǘ
r
S
r
S
Ǘ
r
S
$
D
  
 
 
 
 
 
(20) 
 
 
 
1
1
1
A
A
A
E
A
E
A
E
A
A
P
o
P
A
A
E
A
E
A
A
o
P
A
T
E
A
G
G
G
T
T
T
G
G
T
T
G
T
w
w
w

 


u

w
w
w
w
w
 



u
w
w
w
 
w
S
S
S
r
r
Ǘ
r
S
S
r
Ǘ
r
$
D
 . 
  
(21) 
 
H.K. Jung, C.D. Crane III and R.G. Roberts 
90 

By combining Eqs. 19, 20, and 21, 
1
E
A
P
G r
 can be written as 
 
 
 
 
 


1
A
T
A
E
A
T E
A
E
A
P
G
G
G
T
T
§
·
w
w
¨
¸
 
 ¨
¸
w
w
©
¹
$
S
r
$
D
S
D
.  
 
 
(22) 
 
Then the third screw in Eq. 15 can be written as 
 


1
0
0
0
0
1
1
A
T
A
T E
A
E
A
E
A
P
A
T
A
A
T
E
A
E
A
T
A
T
A
E
A
E
A
G
G
G
T
T
G
G
T
T
T
G
G
T
T
ª
º
«
»
ª
º
­
½
§
·
 
w
«
»
«
»
w
°
°
¨
¸

u
u
®
¾
«
»
«
»
¬
¼
¨
¸
w
w
°
°
«
»
©
¹
¯
¿
¬
¼
ª
º
ª
º
«
»
«
»
§
·
 
w
 
w
«
»
w
«
»
¨
¸
u

«
»
¨
¸
«
»
w
w
w
¬
¼
«
»
©
¹
¬
¼
ª º
§
·
w
w
« »
¨
¸
 
 
ª
º
¬
¼
« »
¨
¸
w
w
©
¹
« »
¬ ¼
0
0
$
S
$
D
S
D
S
r
S
0
0
$
S
$
D
S
D
$
$
D
D
  
(23) 
 
because 
 
1
A
T
w
u
 
w
S
S
k . 
By substituting l
G and EG$  in Eq. 6 with Eqs. 10, 16, 18, and 23 and 
arranging the terms by the twists, the derivative of the spring force can 
be written as 
 
(
)
E
E
o
A
B
E
A
F
M
k l
k l
l
K
K
G
G
G
G
G
 


 

ª
º
ª
º
¬
¼
¬
¼
f
$
$
D
D
  
 
 
 
 
 
(24) 
 
where 
 
 
 
 
 
 
 
(1
)
A
A
T
T
o
F
l
K
k
k
l
T
T
c
w
w
 


ª
º
¬
¼
w
w
$
$
$$
  
 
 
 
(25) 
 
 
 
(
)
0
0
1
0
0
1
T
A
A
M
o
K
k l
l
T
T
§
·
§
·
w
w
¨
¸
¨
¸
 


ª
º
ª
º
ª
º
¬
¼
¬
¼
¬
¼
¨
¸
¨
¸
w
w
¨
¸
©
¹
©
¹
$
$
.  
(26)
 
As shown in Eq. 24, the derivative of the spring force joining two rigid 
bodies depends not only on a relative twist between two bodies but also 
on the twist of the intermediate body, in this case body A, in terms of the 
inertial frame.  
F
K
ª
º
¬
¼  is identical to the stiffness matrix of the spring 
connecting a moving body to the ground which was derived by Griffis, 
1991.  
M
K
ª
º
¬
¼  is newly introduced from this research and results from the 
M
K
ª
º
¬
¼  takes a skew 
symmetric form in general. 
Stiffness Mapping of Planar Compliant Parallel Mechanisms 
91 
motion of the base frame, in this case body A.  

4. 
Stiffness Matrix of the Mechanism 
The stiffness matrix K
ª
º
¬
¼  which maps a small twist of body B in terms 
of the inertial frame into the corresponding change of the wrench on body 
B is derived from Eq. 3 (see Fig. 1). The derivatives of spring forces can 
be written by Eqs. 27 and 28 since Springs 4, 5, and 6 connect body A and 
ground and Springs 1, 2, and 3 join two moving bodies. 
 
4
5
6
4
5
6
,
E
A
E
A
E
A
F
F
F
E
A
F
R L
K
K
K
K
G
G
G
G
G
G
G


 


ª
º
ª
º
ª
º
¬
¼
¬
¼
¬
¼
 ª
º
¬
¼
f
f
f
D
D
D
D
  
 
(27)
 
 
1
2
3
1
2
3
1
2
3
,
,
A
B
A
B
A
B
F
F
F
E
A
E
A
E
A
M
M
M
A
B
E
A
F
M
R U
R U
K
K
K
K
K
K
K
K
G
G
G
G
G
G
G
G
G
G
G


 


ª
º
ª
º
ª
º
¬
¼
¬
¼
¬
¼



ª
º
ª
º
ª
º
¬
¼
¬
¼
¬
¼
 

ª
º
ª
º
¬
¼
¬
¼
f
f
f
D
D
D
D
D
D
D
D
  (28)
 
 
where 
6
,
4
F
F
R L
i
i
K
K
 
 
ª
º
ª
º
¬
¼
¬
¼
¦
, 
3
,
1
F
F
R U
i
i
K
K
 
 
ª
º
ª
º
¬
¼
¬
¼
¦
, 
3
,
1
M
M
R U
i
i
K
K
 
 
ª
º
ª
º
¬
¼
¬
¼
¦
 
 
and where 
F
i
K
ª
º
¬
¼  and 
M
i
K
ª
º
¬
¼  are defined as Eqs. 25 and 26. 
 
Then from Eqs. 3, 27, and 28 the derivative of the external wrench can 
be written by  
 
 
 
 
,
,
,
E
B
ext
E
A
F
R L
A
B
E
A
F
M
R U
R U
K
K
K
K
G
G
G
G
G
 ª
º
¬
¼
 ª
º
¬
¼
 

ª
º
ª
º
¬
¼
¬
¼
w
D
D
D
D
.  
 
 
 
(29) 
 
Finally, from Eq. 29 and the twist equation, Eq. 30, the stiffness 
matrix can be obtained as Eq. 31. 
 
E
B
E
A
A
B
G
G
G
 

D
D
D   
 
 
 
 
 
 
(30) 
 


1
,
,
,
,
,
F
F
F
M
F
R L
R L
R U
R U
R U
K
K
K
K
K
K

 


ª
º
ª
º
ª
º
ª
º
ª
º
ª
º
¬
¼
¬
¼
¬
¼
¬
¼
¬
¼
¬
¼
  
(31) 
5. 
Numerical Example 
The geometry information and spring properties of the mechanism in 
Fig. 1 and the external wrench 
ext
w
 are given below. 
 
0.01
0.02
0.03
ext
N
N
Ncm
ª
º
«
»
 

«
»
«
»
¬
¼
w
 
 
H.K. Jung, C.D. Crane III and R.G. Roberts 
92 

o
 
Spring No. 
1 
2 
3 
4 
5 
6 
Stiffness 
constant k  
0.2 
0.3 
0.4 
0.5 
0.6 
0.7 
Free length ol   
5.0040 
2.2860 
4.9458 
5.5145 
3.1573 
5.2568 
 
Pivot points 
E1 
E2 
E3 
B1 
B2 
B3 
X 
0.0000 
1.5000 
3.0000 
0.0903 
1.7063 
1.9185 
Y  
0.0000 
1.2000 
0.5000 
9.8612 
8.6833 
10.6721 
 
(continue) 
A1 
A2 
A3 
A4 
0.9036 
2.5318 
2.7236 
1.6063 
4.5962 
3.4347 
5.4255 
5.4659 
 
The stiffness matrices [
]
K  is obtained by using Eq. 31. 
 
0.0108
/
0.0172
/
0.0797
[
]
0.0172
/
0.3447
/
0.8351
0.0997
0.8251
2.6567
N cm
N cm
N
K
N cm
N cm
N
N
N
Ncm


ª
º
«
»
 
«
»
«
»

¬
¼
 
 
To evaluate the result, a small wrench 
G
G w  is applied to body B and 
the static equilibrium pose of the mechanism is obtained by a 
numerically iterative method. From the equilibrium pose of the 
mechanism, the twist of body B with respect to ground E
B
GD  is obtained 
as below. 
4
0.5
10
0.2
0.4
G
N
N
Ncm
G

ª
º
«
»
 
u «
»
«
»
¬
¼
w
 
 
0.0077
0.0012
0.0007
E
B
cm
cm
rad
G
ª
º
«
»
 

«
»
«
»
¬
¼
D
 
 
Then the twist E
B
GD  is multiplied by the stiffness matrices to see if 
the given small wrench 
G
G w  results. 
4
0.4991
[
]
10
0.1988
0.4016
E
B
N
K
N
Ncm
G
G

ª
º
«
»
 
 
u «
»
«
»
¬
¼
w
D
 
Stiffness Mapping of Planar Compliant Parallel Mechanisms 
93 
Table 2.     Positions of pivot points in terms of the inertial frame (Unit: cm). 
Table 1.     Spring properties (Unit: N/cm for k, cm for l ). 

The numerical example indicates that [
]
K  produces the given wrench 
G
G w  with high accuracy. 
6. 
Conclusion 
In this paper, a derivative of spring force connecting two moving 
bodies was derived by using screw theory and an intermediate frame and 
applied to obtain a stiffness matrix of a mechanism having two compliant 
connecting two moving bodies depends not only on a relative twist 
between the two bodies but also on the twist of the intermediate body in 
terms of the inertial frame. This result also can be applied for 
mechanisms having any arbitrary number of parallel mechanisms in a 
serial arrangement. 
7.  
Acknowledgements  
The authors would like to gratefully acknowledge the support provided 
by the Department of Energy via the University Research Program in 
Robotics (URPR), grant number DE-FG04-86NE37967 
References 
Ball, R.S. (1900), A Treatise on the Theory of Screws, London, Cambridge 
University Press. 
Ciblak, N. and Lipkin, H. (1999), Synthesis of Cartesian Stiffness for Robotic 
Applications. Proceedings of the IEEE International Conference on Robotics 
and Automation, Detroit, MI, USA. 
Crane, C.D., Rico, J.M, and Duffy, J. (2006), Screw Theory and Its Application to 
Spatial Robot Manipulators, London, Cambridge University Press. 
Dimentberg, F.M. (1965), The Screw Calculus and its Applications in Mechanics, 
Foreign Technology Division, Wright-Patterson Air Force Base, Ohio. 
Document No. FTD-HT-23-1632-67. 
Griffis, M.A. (1991), Novel Theory for Simultaneously Regulating Force and 
Displacement, PhD dissertation, University of Florida, Gainesville, USA. 
Huang, S. and Schimmels, J.M. (1998), The Bounds and Realization of Spatial 
Stiffness Achieved with Simple Springs Connected in Parallel, IEEE 
Transactions on Robotics and Automation, no. 3, vol. 14, pp. 466-475. 
Peshkin, M. (1990), Programmed Compliance for Error Corrective Assembly, 
IEEE Transactions on Robotics and Automation, no. 4, vol. 6. 
Roberts, R.G. (1999), Minimal Realization of a Spatial Stiffness Matrix with 
Simple Springs Connected in Parallel, IEEE Transactions on Robotics and 
Automation, no. 5, vol. 15. 
Whitney, D.E. (1982), Quasi-static assembly of compliantly supported rigid parts, 
ASME Journal of Dynamic Systems, Measurement, and Control, vol. 104, pp. 
65-77. 
 
H.K. Jung, C.D. Crane III and R.G. Roberts 
94 
.
parallel mechanisms serially arranged.  A derivative of spring force 

LARGE KINEMATIC ERROR
PROPAGATION IN REVOLUTE
MANIPULATORS
Yunfeng Wang
Department of Mechanical Engineering
The College of New Jersey
Ewing, NJ 08628, USA
jwang@tcnj.edu
Gregory S. Chirikjian
Department of Mechanical Engineering
Johns Hopkins University
Baltimore, MD 21218, USA
gregc@jhu.edu
Abstract
Understanding how errors propagate in serial revolute manipulators is
important for developing better designs and planning algorithms, as
well as understanding the practical limitations on accuracy of multi-
link arms. In this paper we provide a systematic propagation method-
ology and numerical example that illustrates how large kinematic errors
propagate by convolution on the Euclidean motion group.
Keywords:
1.
Introduction
Kinematic errors arising from spatial uncertainties put strong limita-
tions on the performance of serial manipulators.
important for understanding the practical limitations on accuracy of
multi-link arms.
In this paper, we presents a systematic methodology of propagating
large errors in revolute manipulators from the point view of Euclidean
motion group. Our approach is to treat errors using probability densi-
ties on the Euclidean group. Whereas concepts such as integration and
convolution of these densities follow in a natural way when considering
the Lie group setting [Chirikjian and Kyatkin, 2001], standard concepts
associated with the Gaussian distribution in IRN
© 2006 Springer. Printed in the Netherlands. 
95
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 95–102. 
Kinematic error, error propagation, revolute manipulators
of these errors could lead to the failure of executing nominal tasks.
Evaluating the propagation eﬀects of kinematic errors is essential in
manipulator design, failure prediction, and algorithms planninng. It is also
The accumulation
do not follow in a

reviewed below. These include the theory of Lie groups, robot kinemat-
ics, methods for describing spatial uncertainty, and state estimation.
Murray, Li and Sastry [Murray, Li and Sastry, 1994] and Selig [Selig,
and Brockett [Park and Brockett, 1994] showed how dexterity measures
Wang and Chirikjian [Wang and
Chirikjian, 2004] showed that the workspace densities of manipulators
with many degrees of freedom can be generated by solving a diﬀusion
equation on the Euclidean group. Blackmore and Leu [Blackmore and
Leu, 1992] showed that problems in manufacturing associated with swept
volumes can be cast within a Lie group setting. Kyatkin and Chirikjian
[Chirikjian and Kyatkin, 2001] showed that many problems in robot
kinematics and motion planning can be formulated as the convolution
of functions on the Euclidean group.
Starting with the pioneering work of Brockett [Brockett, 1972], the
controls community has embraced group-theoretic problems for many
years. This includes PD control on the Euclidean group [Bullo and Mur-
ray, 1999; Leonard and Krishnaprasad 1995], tracking problems [Han and
Park, 2001; Han, 2004], and estimation [Lo and Eshleman, 1979]. The
representation and estimation of spatial uncertainty has also received
attention in the robotics and vision literature [Smith and Cheeseman,
1986; Su and Lee, 1992]. Recent work on error propagation described by
the concatenation of random variables on groups has also found promis-
ing applications in mobile robot navigation [Smith, Drummond, and
Roussopoulos, 2003]. We note that while all of these works focus on
small errors, our emphasis is a formulation that applies to large errors
as well.
2.
Review of Rigid-Body Motions
2.1
Euclidean Motion Group
The Euclidean motion group, SE(N), is the semi direct product of
IRN with the special orthogonal group, SO(N). We denote elements of
SE(N) as g = (a, A) ∈SE(N) where A ∈SO(N) and a ∈IRN. For
any g = (a, A) and h = (r, R) ∈SE(N), the group law is written as
g ◦h = (a + Ar, AR), and g−1 = (−AT a, AT ). It is often convenient
to express an element of SE(N) as an (N + 1) × (N + 1) homogeneous
Several of the most closely related works are
natural way to Lie groups.
96
Y. Wang and G. S. Chirikjian
1996] presented Lie-group-theoretic notation and terminology to the
robotics community, which has now become standard vocabulary. Park
can be viewed in a Lie group setting, and how this coordinate-free
approach can be used in robot design.

transformation matrix of the form:
g =
⎛
⎝
A
a
0T
1
⎞
⎠.
In this way, rotation and translation are combined into a single matrix.
A homogeneous transformation matrix takes the place of the pair (a, A),
and the group operation becomes the matrix multiplication
For example, each element of SE(2) parameterized using polar coor-
dinates can be written as:
g(r, φ, θ) =
⎛
⎝
cos θ
−sin θ
r cos φ
sin θ
cos θ
r sin φ
0
0
1
⎞
⎠,
(1)
where 0 ≤φ, θ ≤2π and 0 ≤r ≤∞. SE(2) is a 3-dimensional manifold
much like IR3. We can integrate over SE(2) using the volume element
d(g(r, θ, φ)) = rdrdθdφ.
2.2
Motion-Group Fourier Transform
The Fourier transform of a function on G = SE(N) is deﬁned as:
ˆf(p) =

G
f(g)U(g−1, p) d(g)
(2)
where d(g) is a volume element at g, and U(g, p) is an inﬁnite-dimensional
unitary matrix called an irreducible unitary representation, or IUR
property, U(g1 ◦g2, p) = U(g1, p)U(g2, p). One can show that the gener-
alization of the classical Fourier transform in (2) admits a convolution
theorem due to the homomorphism property of U(g, p), and that the
f(g) =
 ∞
0
trace( ˆf(p)U(g, p))pN−1dp.
(3)
This is because the matrix elements of the full set of IURs form an
orthonormal basis with which to expand functions on SE(N).
A number of works [Chirikjian and Kyatkin, 2001] have shown that
the matrix elements of the IURs for SE(2) can be expressed as
umn(g(r, φ, θ), p) = in−me−i[nθ+(m−n)φ]Jn−m(p r)
(4)
where Jν(x) is the νth order Bessel function, and m and n take values
in the integers.
97
and Kyatkin, 2001]. It possess the important homomorphism
Chirikjian
]
function:
following inverse transform can be used to reconstruct the original
Large Kinematic Error Propagation in Revolute Manipulators

The Fourier inverse transform can be written in terms of elements as
f(g) =
	
m,n∈ZZ
 ∞
0
ˆfmnunm(g, p)pdp.
(5)
(f1 ∗f2)(g) =

G
f1(h)f2(h−1 ◦g)d(h),
the result is the product of Fourier transform matrices: ˆf2(p) ˆf1(p).
3.
Propagation of Error in Serial Linkages
Suppose we are given a manipulator consisting of two concatenated
serial links connected with a revolute joint.
One unit is stacked on
top of the other one.
The proximal unit will be able to reach each
frame h1 ∈SE(3) with some error when its proximal end is located at
the identity e ∈SE(3). This error may be diﬀerent for each diﬀerent
frame h1. This is expressed mathematically as a real-valued function
of g1 ∈SE(3) which has a peak in the neighborhood of h1 and decays
rapidly away from h1. If the unit could reach h1 exactly, this function
would be a delta function. Explicitly the error may be described by one
of many possible density functions depending on what error model is
used. However, it will always be the case that it is of the form ρ1(h1, g1)
for h1, g1 ∈SE(3). That is, the error will be a function of g1 ∈SE(3)
for each frame h1 that the top of the module tries to attain relative to its
base. Likewise, the second module will have an error function ρ2(h2, g2)
for h2, g2 ∈SE(3) that describes the distribution of frames around h2
that might be reached when h2 is the expected end frame for module 2
relative to its base, and the base of module 2 is located at the identity
e ∈SE(3).
The error distribution that results from the concatenation of two mod-
1
2
ρ(h1 ◦h2, g)
=
(ρ1 ⊗ρ2)(h1 ◦h2, g)
△=

SE(3) ρ1(h1, g1)ρ2(h2, g−1
1
◦g)d(g1).
(6)
Here d(g) is the unique bi-invariant integration measure for SE(3) eval-
uated at g [Chirikjian and Kyatkin, 2001].
Sometimes this is simply
Y. Wang and G. S. Chirikjian
98
applied to convolutions of the form
The motion-group Fourier transform has the property that when
modules with errors ρ (·) and ρ (·) results from sweeping the error distrib-
matically as:
mathe
ution of the second module by that of the ﬁrst. This is written

written as dg. In the case of no error, the multiplication of homoge-
neous transforms h1 and h2 as h1 ◦h2 represents the composite change
in position and orientation from the base of the lower unit to the inter-
face between units, and from the interface to the top of the upper unit.
In the case of inexact kinematics, the error function for the upper unit
is shifted by the lower unit (ρ2(h2, g−1
1 ◦g)), weighted by the error distri-
bution of the lower unit (ρ1(h1, g1)) and integrated over the support of
the error distribution of the lower unit (which is the same as integrating
over all of SE(3) since outside of the support of the error distribution
the integral is zero). The result of this integration is by deﬁnition the
error density function around the frame h1 ◦h2, and this is denoted as
(ρ1 ⊗ρ2)(h1 ◦h2, g). It should be noted that (6) holds regardless of the
size of the errors or the form of the error density.
It is often convenient to suppress the explicit dependence of ρi(cot)
on hi, which can be viewed as a constant set of parameters. When this
is done, Eq. 6 reduces to a convolution on SE(N).
4.
Numerical Example
Consider the three-link planar revolute manipulator shown in Figure
1. Each rigid link has length L, and each joint has some backlash that
is described by a probability distribution f(θ −θ0) centered around the
value θ0 = 30 degrees. The error density for a single link is then of the
form
ρ(g(r, φ, θ)) = f(θ −θ0)δ(φ −θ)δ(r −L)/r
(7)
where δ(·) is the usual Dirac delta function in one dimension and an
arbitrary element of g(r, φ, θ) ∈SE(2) is parametrized as in Eq.
1.
Integration over G = SE(2) is then integration over all values of r ∈IR+
and φ, θ ∈[0, 2π].
Figure 1.
A three-link planar manipulator with joint backlash
In Equation 7, the delta functions enforce the rigidity of the links,
and division by r is due to the r in the volume element. The function
99
Large Kinematic Error Propagation in Revolute Manipulators
.

f(θ) has its mode at 0, but the backlashes can be potentially large (i.e.,
not highly concentrated). For this reason, we cannot take it to be a
Gaussian, but rather, a folded Gaussian of the form:
f(θ, σ)
=
1
2π
∞
n=−∞e−n2σ2einθ
=
1
√
2πσ
∞
n=−∞e−(θ−2πn)2/2σ2
(8)
The error density that accumulates at the end eﬀector due to back-
lashes in each of the joints is computed as the convolution
ρee(g) = (ρ ∗ρ ∗ρ)(g).
Computing this numerically by the deﬁnition of convolution is not as
convenient as using the SE(2)-convolution theorem and the correspond-
ing concept of Fourier transform, which is what we shall do here.
Computing the SE(2)-Fourier transform of the one-link backlash-
error density in Equation 7, one ﬁnds (after the delta functions kill the
integrals over r and φ) that:
ˆρmn(p)
=
in−mJm−n(pL)
 2π
0
f(θ −θ0)einθdθ
=
in−mJm−n(pL)einθ0−n2σ2.
(9)
Using the convolution theorem, we compute ˆρee(p) = ˆρ ˆρ ˆρ, where the
matrix elements of ˆρ are given by Equation 9. Then the original error
density ρee(g(r, φ, θ)) can be reconstructed by applying the Fourier in-
version formula (3) to ˆρee(p). Since it is diﬃcult to view the error density
ρ(g) graphically, the marginal density function ρ(r, φ) is computed. The
marginal density function ρ(r, φ) is found by just integrating the Fourier
reconstruction formula (3) for ρ(g) with respect to θ as
ρ(r, φ)
=
1
2π
 2π
0
ρ(g)dθ
=
	
n∈z
i−ne−inφ
 ∞
0
ˆf0n(p)J−n(pr)pdp.
To validate the results obtained from our convolution-based error
propagation method, the error distribution (8) is sampled and applied
to each joint of the manipulator directly. Then brute force enumeration
is used to obtain the error distribution directly.
The marginal error densities ρ(r, φ) obtained from both methods are
plotted in Figures 2 and 3 with the left one from the propagation method
and the right one from brute force. The variance σ2 of 0.1 is given in
Figure 2 and σ2 of 0.3 in Figure 3.
Y. Wang and G. S. Chirikjian
100

Figure 2.
The marginal error density ρ(r, φ) for σ2
Figure 3.
2
For the above computations, the link length L is taken as 1, and
60 samples points are generated for the distribution (8). The inﬁnite-
dimensional matrix function U(g, p) in the SE(2) Fourier transform is
truncated at ﬁnite values of |m|, |n| ≤10 (i.e., the dimension of U(g, p)
is 2 × 10 + 1). The band-limited approximation still gives very accurate
results because the magnitude of the Fourier transform of a suﬃciently
smooth function can be ignored beyond a certain cutoﬀfrequency. The
frequency parameter p is sampled in the interval of 300 with an inte-
gration step of 0.2. All the calculations in this example (excluding the
brute force method) took less then 3 minutes using Matlab with a 1.0
GHz, 516 MB RAM computer.
5.
Conclusions
In this paper it is shown how the accumulation of large kinematic er-
rors in serial manipulators can be computed by performing convolutions
101
= 0.1
The marginal error density ρ(r, φ) for σ = 0.3
Large Kinematic Error Propagation in Revolute Manipulators
.
.

on the Euclidean motion group. This theory is demonstrated with the
example of a planar revolute manipulator with three links.
6.
Acknowledg ments
This work was performed under grant NSF-RHA 0098382 “Diﬀusion
Processes in Motion Planning and Control.”
References
J. Control, Vol. 10, No. 2, pp. 265-284.
geometric framework,” Automatica, 35 (1): 17-34.
Chirikjian, G.S., Kyatkin, A.B. (2001), Engineering Applications of Noncommutative
Harmonic Analysis, CRC Press, Boca Raton, FL.
environments: Theoretical and practical viewpoints,” IEEE Transactions on Ro-
botics and Automation, 20 (2): 309-318.
Transactions on Automatic Control, 46 (7): 1127-1132.
Invariant Systems on Lie Groups,” IEEE Transactions on Automatic Control, Vol.
40, No. 9, pp. 1539-1554.
timal Estimation and Detection for Rotational Processes,” SIAM J. Appl. Math.,
Vol. 36, No. 1, pp. 73-82.
Murray, R.M., Li, Z., Sastry, S.S. (1994) A Mathematical Introduction to Robotic
Manipulation, CRC Press, Ann Arbor MI.
The International Journal of Robotics Research, Vol. 13, No. 1, pp. 1-15.
by representing, propagating and combining PDFs over groups,” Proceedings of the
9th IEEE Int. Conf. on Computer Vision, volume II, pages 1275-1282, Nice.
Smith, R.C., Cheeseman, P. (1986) “On the Representation and Estimation of Spatial
Uncertainty,” The Int. J. of Robotics Research, Vol. 5, No. 4, pp. 56-68.
iﬁcation of Applicability of Actions in assembly Tasks,” IEEE Transactions on
Wang, Y.F., Chirikjian, G.S. (2004)
Generation of Hyper-Redundant
Manipulators as a Diﬀusion Process on SE(N),” IEEE Transactions on Robotics
Y. Wang and G. S. Chirikjian
102
Blackmore, D., Leu, M.C. (1992),“Analysis of Swept Volume via Lie Groups and Dif-
Brockett, R.W. (1972), “System Theory on Group Manifolds and Coset Spaces,” SIAM
ferential Equations,” The Int. J. of Robotics Research Vol. 11, No. 6, pp. 516-537.
Bullo, F., Murray R.M. (1999), “Tracking for fully actuated mechanical systems: a
Han, Y.M. (2004), “Simultaneous translational and rotational tracking in dynamic,
Han, Y., Park, F.C. (2001), “Least squares tracking on the Euclidean group,” IEEE
Leonard, N.E., Krishnaprasad, P.S. (1995),
”
Motion Control on Drift-Free, Left-
Park, F.C., Brockett, R.W. (1994), “Kinematic Dexterity of Robotic Mechanisms,”
Selig, J.M. (1996) Geometrical Methods in Robotics, Springer, New York.
,
Lo, J. T.-H., Eshleman, L.R. (1979), “Exponential Fourier Densities on SO(3) and Op-
Smith, P., Drummond, T., Roussopoulos, K. (2003), “Computing MAP trajectories
Su, S., Lee, C.S.G. (1992), “Manipulation and Propagation of Uncertainty and Ver-
Systems, Man, and Cybernetics, Vol. 22, No. 6, pp. 1376-1389.
and Automation, Vol. 20, No. 3, pp. 399-408.
, “Workspace
,
e
,

A FRAMEWORK FOR THE ANALYSIS,
SYNTHESIS AND OPTIMIZATION OF
PARALLEL KINEMATIC MACHINES
Andreas Pott and Manfred Hiller
Chair of Mechatronics
University Duisburg-Essen, Germany
{pott, hiller}@imech.de
Abstract
Analysis and design of parallel robots are often treated separately due to
diﬀerent methods. Thus, a framework is needed to combine important
aspects of both tasks. In this paper, it is shown that workspace calcula-
tion/veriﬁcation and synthesis/optimization can be summarized within
the context of an interval analysis based constrained global optimiza-
tion. Specializing this general formulation leads to a ﬂexible technique
which can be used to solve each of the aforementioned subtasks. In this
setting, the constraints specify the machine’s properties like size and
quality of the workspace of the machine. Starting with workspace calcu-
lation for some criterions, one extends the requirements and seamlessly
advance to parameter synthesis and optimization.
These techniques
present a framework for workspace calculation, parameter design, and
optimization which allows for analysis and synthesis by means of the
same model. The method is demonstrated for a 6 d.o.f. Gough-platform.
Keywords: Parallel Robot, Analysis, Optimization, Interval Analysis, Modular
Framework
1.
Introduction
For the design of parallel kinematic machines (PKM), it is important
to make an appropriate choice for the geometrical parameters in order
to fulﬁll the customers requirements. Unfortunately, one cannot start
with the design of new machines unless one can cope with a number of
issues that are related to the analysis of parallel machines. In partic-
ular, this includes the determination of the size, shape, and properties
of the workspace. In the last two decades, many scientists have been
working on diﬀerent aspects of analysis. Especially for spatial parallel
robots, most results can only be determined numerically due to the in-
herent complexity of PKMs. But mostly these results cannot be used to
solve the design problem, i.e. how one has to choose the parameters so
that the resulting machines have the desired properties. For example,
© 2006 Springer. Printed in the Netherlands. 
103
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 103–112. 

the widely used calculation of the workspace by discretization reveals
nothing about how one has to change the geometry of the machine to
enlarge the workspace. Thus, methods are needed that allow for both
analysis and synthesis within one framework to assist during the whole
development process: Firstly, a preliminary analysis is needed to prove
the concept of a machine. Subsequently, one switches to parameter de-
sign with respect to given process requirements and optimization due to
factors like costs. Finally, one has to verify that the developed machine
has all desired properties.
In this paper, interval analysis based constraint satisfaction is used
as common framework to perform workspace calculation and parame-
ter synthesis. It is shown how the general form of a constrained global
optimization problem can be specialized to perform workspace calcula-
tion, parameter synthesis, and optimization using an extendable scheme
of constraints. The paper is organized as follows: In section 2 interval
methods for constraint satisfaction and optimization are reviewed and
applied to the design problem of PKMs. In section 3, the constraints
for Gough-platforms are deduced from imperative process requirements
and examples from the analysis, synthesis, and optimization are given
in section 4. Conclusions are drawn in section 5.
2.
Constraint Satisfaction and Global
Optimization
At ﬁrst, consider the constrained global optimization problem of the
form
minimize
f(g)
(1)
s.t.
Φ(g, x)
>
0
(2)
∀
x
∈
W,
(3)
where f is the objective function, Φ is a system of nonlinear constraints,
g is the vector of the design parameters (calculation domain), W is the
compact set of conﬁgurations to be veriﬁed, and the conﬁguration x is
any vector from the set W. In contrast to classical optimization prob-
lems, this formulation is extended by constraints, that must be fulﬁlled
for all conﬁgurations x given by the set W. In this paper, it is assumed
that the set W can be approximated by hypercubes. Thus, this special
type of optimization problem is denoted as global constrained optimiza-
tion over intervals.
As pointed out above, the analysis, design, and optimization of PKMs
can be regarded as such a constrained global optimization problem. For
PKMs, one identiﬁes Φ with imperative process requirements, g with
104
A. Pott and M. Hiller

the geometrical design parameters of the machine, x are the world coor-
dinates (position and orientation) of the platform, and W is the desired
workspace of the robot.
The basic algorithm to solve this problem is based on interval analysis
and can be found in (Hansen, 1992). Interval analysis is a powerful tool
to deal with both, the constraint satisfaction problem (CSP) given by
Interval analysis have been applied to PKMs for
analysis by e.g. (Chablat et al., 2002; Chablat et al., 2004; Merlet, 2004),
and (Pott et al., 2004). Furthermore, interval analysis based algorithms
were successfully used for the design of PKMs by (Merlet, 2001), (Hao
and Merlet, 2005), (Pott et al., 2005), and (Pott and Hiller, 2006). Since
the algorithm is already known, the key features are quickly reviewed.
Interval methods are implemented such that numerical round-oﬀerrors
are taken into account. Furthermore, interval analysis based constraint
solvers and optimizers do not rely on a point-wise discretization of the
parameter space. Therefore, it is guaranteed that constraints hold in
any point of the considered set and optimizers are able to ﬁnd guaran-
teed bounds for both, the optimum of the objective function and the
environment of the parameter space containing the optimum.
2.1
Framework
The main advantage of the proposed framework is that one can save
much development time, because the same solver algorithm and the
same model equations are used to perform the diﬀerent investigations.
Furthermore, the system Φ is composed from subsets of inequations that
are related to diﬀerent properties of the machine, e.g. taking into account
geometric relations for the workspace, limits on the active and passive
joints, link interference, and bounds on the dexterity.
The presented
framework allows among others
to verify, if a given machine design g0 exhibits a given orientation
workspace W0,
to calculate the constant orientation workspace Wco and the total
orientation workspace Wto for a given machine design g0 and
to determine all machine designs g that provide a given (orienta-
tion) workspace W0.
Here, workspace includes all criterions that are introduced by the re-
quirements Φ, e.g. the veriﬁed/calculated workspace is guaranteed to be
consistent with active and passive joint limits and free of link interfer-
ence. The diﬀerent investigations can be deduces from the general form
A Framework for Parallel Kinematic Machines
105
Eqs. (2)-(3) and the constrained global optimization problem which is gen-
erated by Eqs. (1)-(3).

as follows. Firstly, one can verify that a machine with given parameters
g0 exhibits the given workspace W0 by analyzing
Φ(g0, x) > 0
∀
x ∈W0,
(4)
with the CSP solver. In contrary, determining all poses x, where
Φ(g0, x) > 0,
(5)
responds the problem to calculate the workspace of a given machine
design. Finally, the determination of all g that fulﬁll
Φ(g, x) > 0
∀
x ∈W0
(6)
corresponds to the design problem for PKMs, i.e. ﬁnding all machine
designs that fulﬁll given requirements throughout a given workspace W0.
Such designs are then called feasible. Finally, the objective function f
can be taken into account to ﬁnd an optimal machine within the set of
feasible designs generated by the CSP.
2.2
Modular Program Design
A ﬂexible framework is intended to provide the following properties:
Switch quickly between workspace veriﬁcation (Eq. 4), workspace
calculation (Eq. 5), parameter design (Eq. 6), and optimization
Add or remove constraints for reachable workspace, limits on ac-
tive/passive joints, link interference, etc.
Constraints should be independent from each other. New require-
ments may be added without reconsideration of other constraints.
Workspace requirements can be used for parameter synthesis and
optimization.
To achieve this, a modular program design of the framework is proposed
(Fig. 1). This algorithm was proposed by ( Pott and Hiller, 2006). A
generic implementation of the interval based CSP solver (or the global
optimizer) passes the interval boxes g to the constraint abstraction layer
(CAL) that encapsulates the system of constraints for evaluation. The
result of the evaluation is an abstract information like valid, invalid,
or undeﬁned that can be interpreted by the algorithm without further
information on the system. To achieve the desired reconﬁgurability for
the framework, the constraints must not be ﬁxed to one special set of
variables. This adaptability is realized by storing all variables that may
be considered in a shared database. During the initialization, a mapping
is set up between the constraints Φ and the variables in the database
A. Pott and M. Hiller
106
.

...
CSP
Interval
Solver
Global
Interval
Optimizer
Constraint
Abstraction
Layer
constraints
Φ
Symbol Database
assign
evaluate
Φ1
Φ2
Φn
evaluate
g
x1 . . .xn g1 . . .gm
Figure 1.
that the user deﬁnes to be unknown. All other variables in the database
are set to constant values.
Before evaluating the constraints Φ, the
CAL copies the actual values from g into the database. Note, that the
implementation in C++ manages these apparent complicated relations
very eﬃciently by means of pointers and virtual function.
The constraints Φ are generated with computer algebra (Maple) and
transformed into C++ code with Maple’s automatic code generator. At
this point, a little post-processing is needed to prepare the code to be
used with interval analysis. For a calculation, one has only to select the
variables/constraints to be taken into account from a library and assign
initial values to the variables.
3.
The constraints Φ for this framework are deduced from imperative
process requirements, like the size of the workspace or limits for the
passive joints. As shown by (Pott et al., 2005) for PKMs with constant
length legs, one can also take into account auto-collision in terms of link
interference, as well as, bounds on the kinematic dexterity. Due to space
limitation of this paper, the following list is rather an example than an
comprehensive list of requirements. To set up the equations, ﬁrstly a
machine model has to be introduced.
3.1
Simpliﬁed Symmetric Manipulator (SSM)
To deduce constraints for the well-known simpliﬁed symmetric ma-
nipulator (SSM, Merlet, 2000, p. 62), the inverse kinematics is quickly
reviewed. The SSM has a planar hexagonal base and platform where the
platform is connected to the base by six legs which consist of prismatic
joints with universal and spherical joints at their ends. The pivot points
A Framework for Parallel Kinematic Machines
107
Structure of the modular interval CSP solver and optimizer
Process Related Constraints
.

∆αb
∆αp
rp
rb
K0
Kp
ai
bi
li
Ai
Bi
rTCP, RTCP
Figure 2.
Parameter and kinematics of a SSM robot
of the legs are arranged on circle with radii rp and rb
The position of the platform is given in world
coordinates rTCP and the orientation is deﬁned by the matrix RTCP with
respect to the base frame K0. Using a vector loop yields the closure
condition
li = rTCP + RTCPbi −ai
for
i = 1, . . . 6,
(7)
where ai and bi are the positions of the pivot points on the base and
the platform, respectively. The length li = |li| of the leg can be easily
determine from a given pose rTCP, RTCP of the platform. It is a necessary
condition for a pose to belong to the workspace, that li does not exceed
the stroke of the actuator [lmin, lmax]. Thus, from lmin ≤li ≤lmax one
receives the 12 inequations
l2
i −l2
min
>
0
l2
max −l2
i
>
0

for
i = 1, . . . 6
(8)
that can be added to the constraint system Φ > 0.
3.2
The universal and spherical joints may limit the motion of the plat-
form due to their technical realization. Therefore, one has to take into
account the mechanical limits of these joints. For universal joints, Mer-
let, 2000, p. 205f suggested to use a pyramid described by its four face
A. Pott and M. Hiller
for platform and
base is shown in Fig. 2.
and
base, respectively. The distribution of the pivot points on platform
108
Limits on the Passive oints
J
.

normals n1, n2, n3, n4, to take into account these limits. For spherical
joints, the motion of the joints is limited by a cone with a known apex
angle βmax. Thus, one received the following inequality
li .ui −li cos βmax > 0
for
i = 1, . . . 6,
(9)
where ui is a unit vector of the direction of the leg at the reference
conﬁguration. A similar considerations can be used for the platform. In
that case, one must take into account that the reference vector vi is ﬁxed
to the platform frame and must be transformed to world coordinates by
li .RTCPvi −li cos βmax > 0
for
i = 1, . . . 6.
(10)
3.3
Technological Requirements
As an example for a technological requirement, the distance AiAj
between neighboring pivot points on the base and/or on the platform is
considered. Since the joints need a minimal installation space, there is
a lower bound ∆amin for this distance. This can be taken into account
by considering the constraints
ri

2 −2 cos(2∆αi) −∆amin > 0
for
i ∈{p, b}.
(11)
Technological requirements have often a very simple structure and can
be easily implemented into the framework. Nevertheless, they introduce
restrictions that are important in practise and allow to neglect many
designs without considering any details of the workspace.
3.4
Objective Function
Since the system of constraints Φ collects all imperative process re-
quirements, the objective function f focuses on minimizing a selected
criterion. For example, one can minimize the total volume of the ma-
chine. In general, this criterion may be chosen more sophisticated for
example by taking into account the total monetary costs of manufactur-
ing. In the framework of the proposed algorithm for global optimization,
this function is not even required to be continuous. Therefore, it is easy
to incorporate for example tables with costs of components like actu-
ators or other available components. It is clearly out of the scope of
kinematics, to deﬁne and discuss, how one can set up such cost calcula-
tions. But at this point, an interface is deﬁned, that explicitly separates
economic requirements in terms of the cost function f and technological
requirements in terms of imperative process requirements Φ. For sim-
plicity, in section 4 a simple minimization of the volume of the machine
is performed as an example of the algorithm.
A Framework for Parallel Kinematic Machines
109

Table 1.
Nominal Geometrical Parameters of the SSM
Parameter
value
Description
rb
1 m
radius of the base frame
rp
0.25 m
radius of the mobile platform
∆αb
45◦
angular oﬀset for the pivot points on the base
∆αp
15◦
angular oﬀset for the pivot points on the platform
lmin
1 m
minimal length of the strut
lmax
2 m
maximal length of the strut
∆βmax
45◦
maximal rotation of the spherical joints
Figure 3.
Workspace of the SSM a) constant orientation workspace b) total orien-
tation workspace
4.
Computational Examples
In this section, the presented framework is applied step by step to a
SSM. Parameters which are not part of the calculation, i.e. appear in g
are carried out for limits of the active joints, as well as limits of the
passive joints at the base frame.
Workspace Calculation.
At ﬁrst, the workspace is determined us-
ing the CSP solver, i.e. both the constant orientation workspace (RTCP =
I3) and the total orientation workspace is calculated. Fig. 3a shows the
constant orientation workspace as it was determined by setting the vec-
tor of design variables to g = (x, y, z) and leaving the vector of conﬁgu-
rations to be veriﬁed empty x = (). For the total orientation workspace
A. Pott and M. Hiller
110
.
.
and x are assumed to have their nominal value (Table 1). All calculations

Table 2.
Parameters for the optimal machine design of the SSM for a total orientation
workspace of 200 × 200 × 200mm
Parameter:
rp
rb
∆αb
∆αp
∆z
0.38125
0.278125
0.78125
0.625
0.753125
(Fig. 3b) all positions which can be reached with all orientations of
Bryant-angles x = (ϕ ∈[−0.1, 0.1], θ ∈[−0.1, 0.1], ψ ∈[−0.1, 0.1])
=
Parameter Synthesis.
For the parameter synthesis example, the
total orientation workspace of the robot is required to include a cubic
workspace of size 200 × 200 × 200mm.
Thus, the desired workspace
is described by x = (x ∈[−0.1, 0.1], y ∈[−0.1, 0.1], z ∈[0.0, 0.2], ϕ ∈
[−0.1, 0.1], θ ∈[−0.1, 0.1], ψ ∈[−0.1, 0.1]) and all geometrical parame-
ters g = (rp, rb, ∆αp, ∆αb) are sought, that fulﬁll this requirement. The
solution set is described in the 4-dimensional parameter space and can-
not be printed into a simple diagram. Therefore, only some key data are
given. Totally, 214547 boxes with a volume of 7.2% out of a total search
space volume were veriﬁed to be feasible designs by the CSP solver. The
calculation time was ∼27h.
Optimization.
The results from the parameter synthesis, i.e. the
solution set from the constraint satisfaction problem can be used as
input for the global optimization.
As an example, the overall size of
the machine and the distance between the pivot points is used as an
objective function, which yields
f(rp, rb, ∆αb, ∆αp, ∆z) = r2
p + ∆z r2
b + (∆αp −1)2 + (∆αb −1)2 (12)
Applying this optimization function to the CSP of the previous step,
The computational time of the
program on a Pentium IV with 3.2GHz is 56min, and the optimizer per-
formed approximately 57500 constraint evaluations per second, which
demonstrates that the modular system can be implemented very eﬃ-
ciently. Note, that the combined use of the CSP solver and the optimizer
can reduces signiﬁcantly the calculation time.
5.
Conclusions
In this paper, a framework for the analysis and design of parallel kine-
matic machines based on interval analysis and global optimization algo-
rithms is proposed. It was shown how practically relevant calculations
A Framework for Parallel Kinematic Machines
t = 1.7s and t = 41s, respectively.
one obtains the values given in Table 2.
111
.
Accuracy was ε
were determined.
0.025 and the calculation time was

for PKMs may be addressed in terms of a constrained global optimiza-
tion problem. The proposed algorithm enforces the fulﬁllment of given
process requirements throughout a workspace of desired size and guar-
antee the validity of the calculations. A global optimization is performed
simultaneously, which assures to ﬁnd the global minimum. Constraints
were exemplarily deduced for the SSM and calculation results from the
framework were presented.
Acknowledgement
This work is supported by the German Research Council (Deutsche
Forschungsgemeinschaft) under HI370/19-3 as part of the priority pro-
gram SPP1099 Parallel Kinematic Machine Tools.
References
Chablat, D., Wenger, P., Majou, F., and Merlet, J.-P. (2004). An Interval Analysis
Based Study for the Design and the Comparison of 3-DOF Parallel Kinematic
Machines. International Journal of Robotics Research.
Chablat, D., Wenger, P., and Merlet, J.-P. (2002). Workspace Analysis of the Or-
thoglide Using Interval Analysis. In Advances in Robot Kinematics, pages 397–406,
Dordrecht, Netherlands. Kluwer Academic Publishers.
Hansen, E. (1992). Global Optimization using Interval Analysis. Marcal Dekker, Inc.
Hao, F. and Merlet, J.-P. (2005). Multi-criteria optimal design of parallel manipulators
based on interval analysis. Mechanism and Machine Theory, 40(2):157–171.
Merlet, J.-P. (2000). Parallel Robots. Solid Mechanics and its Application. Kluwer
Academic Publishers, Dordrecht.
Merlet, J.-P. (2004). Guaranteed in-the-workspace improved trajectory/surface/volume
veriﬁcation for parallel robots. In IEEE International Conference on Robotics and
Automation, New Orleans, USA.
Pott, A., Boye, T., and Hiller, M. (2005). Parameter synthesis for parallel kine-
matic machines from given process requirements. In Proceedings of the Inter-
national Conference on Advanced Intelligent Mechatronics, Monterey, California,
Pott, A., Franitza, D., and Hiller, M. (2004). Orientation workspace veriﬁcation for
parallel kinematic machines with constant leg length. In Proceedings of Mechatron-
ics and Robotics 2004, pages 984–989, Aachen, Germany.
Pott, A. and Hiller, M. (2006). A parallel implementation for the optimization of par-
allel kinematic machines under process requirements. In 1st European Conference
on Mechanism Science, Obergurgl, Austria.
A. Pott and M. Hiller
112
Conference on Robotics and Automation, Seoul, Korea.
spatial parallel manipulators with speciﬁed workspace. In IEEE International
Merlet, J.-P. (2001). An improved design algorithm based on interval analysis for
USA, IEEE/ASME.

SEARCHING FOR UNDISCOVERED
PLANAR STRAIGHT-LINE LINKAGES
Zhenjun Luo
Department of Mechanical Engineering
King’s College London
zhenjun.luo@kcl.ac.uk
Jian S Dai
Department of Mechanical Engineering
King’s College London
jian.dai@kcl.ac.uk
Abstract
In this paper we investigate if there are undiscovered 6-bar linkages for
generating a straight-line. First we successfully deduce the relationships
in Hart’s second straight-line mechanisms using symbolic methods. For
more complicate cases, we formulate the problem as precision position
synthesis problems, and solve the derived equations using classic iter-
ative methods and verify solutions using interval methods. Although
no new mechanisms have been found at the current stage, this research
initiates an e ort towards an automatic approach for obtaining over-
constrained linkages (Dai and Rees Jones, 1999).
Keywords:
1.
Introduction
Synthesis of planar linkages for curves generation is a classic topic
in the
cians and kinematicians since the time of industrial revolution. However
before the Peaucellier-Lipkin linkage (Peaucellier, 1864) was discovered,
most mathematicians doubted that there are linkages capable of draw-
ing exact straight lines. Kempe (1873) enunciated a striking theorem
that a portion of any algebraic curve on a plane can be generated by a
planar linkage. Koenigs (1897) stated a spatial equivalence of Kempe’s
theorem. Those e orts predates a large body of modern work on the-
orems of “algebraic universality” starting from the 1970’s (see Smith,
1998; Kapovich, 2002). Smith (1998) and Gao et al (2000) presented
new constructive approaches to prove Kempe’s theorem. Nevertheless
the constructive approaches are of less interests in practice since they
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 113–122. 
113
Path generation, algebraic curves, overconstrained, numerical methods
field of kinematics. It had attracted many noted mathemati-
.

can only
As Hunt
stated in Chapter 4 of his book (Hunt, 1978):
Yet neither Kempe nor anyone else since has established a method
for isolating the best, or the simplest, linkage for tracing a particular
curve.
In the history all feasible linkages with a small number of links for
algebraic curves generation were invented by some great masters using
their geometrical intuitions (Please see the Appendix for details). Nev-
ertheless geometrical intuitions are di
may not guarantee all solutions for a synthesis problem be found. The
above investigation raises a question: Are there any undiscovered 6-bar
linkages for straight-line generation? This paper proposes a numerical
approach to attack the problem. Note that it is possible to extend the
approach for
nding spatial 6R single loop overconstrained mechanisms
(see remarks at the end of Section 2.2).
2.
Figure 1.
Six arrangements of 6-bar linkages for a path generation, with the asterisk
denoting the position of coupler-point
Figure 1 illustrates 6 possible arrangements of 6-bar linkages for straight-
line generation. As can be seen from Fig. 4 that the existing straight-line
6-bar linkages are either Watt-I1 linkages or Stephenson-I linkages. In-
deed based on the principle of inversion and Robert’s cognate theorem,
we can conclude that Stephenson-II2 linkages and Stephenson-III link-
ages cannot generate a straight-line. Other arrangements should be
1This is still an open problem. Smith, 1998 tried to prove it but failed.
2According to (Artobolevskii, 1964), Alekseyev, 1939 discovered the dimensional relationships
of the generalized linkage on 1939, but the authors are not able to ﬁnd Alekseyev’s proof,
while the short proof given in Artobolevskii’s book is indeed invalid.
Z. Luo and J.S. Dai
114
Searching for 6-bar Straight-line Linkages
.
find feasible linkages with a large number of links.
fficult to be duplicated, and they

to the derivation of coupler-curve equations of general planar linkages
(see Primrose et al., 1967, Almadi, 1996, and Wampler, 1999). However
it is important to develop problem-speci
analysis (Dukkipati, 2001, Karger, 1998) or numerical analysis (Luo and
Dai, 2005).
2.1
Synthesize Stephenson-I Linkages for
Figure 2.
Two representations for synthesizing Stephenson-I linkages. (a) is Alek-
seyev’s representation (see Artobolevskii, 1964), and (b) is a new representation
In Alekseyev’s representation, suppose a coupler-curve equation in
(xQ, yQ) is obtained, the coupler curve is a straight line if and only if
there exist (x0, θ) which satisfy yQ ≡tan θ (xQ −x0). However since
tan θ can vary from zero to in nity, (xQ, yQ) should be parameterized.
In our representation, we assume the straight-line is along the x-axis,
thus yQ ≡0. We further specify xA = 0. As can be seen, there are 10
structural parameters (a, b, c, e, f, g, h, yA, xD, yD). Alternatively we can
use (a, b, c, d, e, f, g, h, y A, θ0). Refer to Fig. 2(b), we obtain the following
three loop-closure equations:
a cos θ1 + b cos θ2 −c cos θ3 = xD −xA
a sin θ1 + b sin θ2 −c sin θ3 = yD −yA
(1)
(a + e) cos θ1 + f cos θ4 = xQ −xA
(a + e) sin θ1 + f sin θ4 = yQ −yA
(2)
(c + h) cos θ3 + g cos θ5 = xQ −xD
(c + h) sin θ3 + g sin θ5 = yQ −yD
(3)
Using classic resultant methods, it is not di
i
1, . . . , 5) and a 16th degree bivariate polynomial in (xQ, yQ) is obtained.
Searching for Undiscovered Planar Straight-line Linkages
115
examined individually. Synthesizing straight-line linkages is closely related
a Straight-line Motion
.
fic methods based on symbolic
fficult to eliminate θ (i =

Since yQ ≡0, we obtain a univariate polynomial in xQ. Denote it as:
Ps1 =
16
	
i=0
aixi
Q = 0
(4)
Since the linkage can pass in
s1 should be incidentally zero.
Using a symbolic
computing software such as Mathematica, we obtain that:
a16 = 0; a15 = 0; a14 = 65536 a2c2(ce −ah)2d2
(5)
It follows that
a13 = 0. Substitute c = ah/e into a12 we obtain
−a2b2 + a(−2b2 + d2)e + (−b2 + d2)e2 = 0
(6)
Solve the above equation yields e1 = ab2/(d2 −b2) or e2 = −a. Only e1
is feasible. It follows that h = cb2/(d2 −b2) and a11 = 0. Substitute the
above into coe
10 to a7 yields
a10 = f1(a, b, c, d, f, g, θ0)
a9 = f2(a, b, c, d, f, g, θ0)
a8 = f3(a, b, c, d, f, g, yA, θ0)
a7 = f4(a, b, c, d, f, g, yA, θ0)
(7)
Note that we use xD = xA + d cos θ0, yD = yA + d sin θ0 to simplify
symbolic expressions. One may want to eliminate (yA, θ0) from the above
equations and then solve for (f, g). Unfortunately those equations are
quite complicate to solve due to the “pyramidal e
We then adapt Karger’s technique to the problem and try to obtain
more information (see Karger, 1998 for more details).
Karger’s Proposition: Let P(x) = n
j=0 (aj + bj cos x) sinj x = 0 for
all x. Then aj = bj = 0(j = 0, . . . , n)
Now we eliminate θi(i = 2, . . . , 5) and xQ using Resultant methods, this
leads to
P(θ1) =
	7
j=0 (aj + bj cos θ1) sinj θ1 = 0
(8)
Following the procedures in (Karger, 1998), we obtain the coe
the two terms with the highest order in variables (cos θ1, sin θ1).
a7 = g1(a, c, f, h, yA, xD, yD)
b6 = g2(a, c, h, yA, xD, yD)
(9)
Z. Luo and J.S. Dai
116
finity many points along the x axis, all
the coe
Since link lengths can not be zero, we obtain ce = ah.
fficients of P
fficients a
ffect” (Karger, 1998).
fficients of
.

Incidentally b7 = 0, and e is substituted by ah/c.
From the above
equations, we obtain
xD = 0
or
yD = 0
(10)
When xD = 0, we have θ0 = π/2, Substitute θ0 = π/2 into Eq. (7), from
f1 we can obtain
f2 −g2 = b2c2d2 −a2b2d2
(d2 −b2)2
(11)
Substitute the above equation into f2 in Eq. (7), we obtain
f =
bcd
d2 −b2
and
g =
adb
d2 −b2
(12)
It seems that even for the simplest case of 6-bar linkages, symbolic de-
ductions are not quite straightforward. Indeed we have tried the above
procedure to synthesize other generic 6-bar linkages but currently no
analogous results have been obtained. However a supercomputer may
help the symbolic computations. In contrast, we can use numerical algo-
rithms to solve the above problem conveniently. For example, given 10
points along the x-axis, we obtain a system of 10 polynomials (i.e. Eq. (4))
in 10 unknown variables (a, b, c, e, f, g, h, yA, xD, yD). Together with tun-
nelling techqniques, random restarts of Levenberg-Marquart method can
2.2
Synthesize Watt-I2 Linkages for
a Straight-line Motion
Symbolic Synthesis Equations.
Consider a generic Watt-I2 mech-
anism shown in Fig. 3, let’s call the illustrated pose the initial pose of the
O
Q
A
B
C
P
D
E
Z1
Z4
Z5
Z8
Z2
Z3
Z7
Z6
5
2
1
3
7
Q'
Figure 3.
Design parameters in the Watt-I2 mechanism
Searching for Undiscovered Planar Straight-line Linkages
117
.
When yD
to get enough information using symbolic computation.
ﬁnd multiple solutions (see Luo and Dai, 2005 for more information).
= 0, Eq. (7) still can’t be simpliﬁed. Currently we are not able

cident with the coupler-point Q at the initial pose. There are 14 design
, y , xA, yA, xB, yB, xC, yC, xD, yD, xE, y , xP , yP ).
Alter-
natively, we can use complex vectors Z
For this problem, we prefer to derive the synthesis equations using com-
plex numbers for compactness. Referring to Fig. 3, when Q is moved to
a new position Q′ after a displacement of δ = x + iy, the following three
loop-closure vector equations can be obtained
Z1(ei∆θ1 −1) + Z2(ei∆θ2 −1) −Z3(ei∆θ3 −1) = 0
(13a)
Z3(ei∆θ3 −1) + Z4(ei∆θ2 −1) + Z5(ei∆θ5 −1) = δ
(13b)
Z6(ei∆θ3 −1) + Z7(ei∆θ7 −1) + Z8(ei∆θ5 −1) = δ
(13c)
Rearrange Eqs. (13a) and (13b), one obtains:
Z1ei∆θ1 = Z3(ei∆θ3 −1) −Z2(ei∆θ2 −1) + Z1
(14a)
Z5ei∆θ5 = δ −Z3(ei∆θ3 −1) −Z4(ei∆θ2 −1) + Z5
(14b)
The angles
θ1 and
θ5 can be eliminated by multiplying each side
of Eqs. (14a) and (14b) with its complex conjugate. Expanding and
rearranging the results yields
p1ei∆θ2 + p2e−i∆θ2 + p3 = 0
(15a)
p4ei∆θ2 + p5e−i∆θ2 + p6 = 0
(15b)
where pi(i = 1, . . . , 6) are expressions in θ3 and the 14 design variables.
Note that Eqs. (15a) and (15b) are indeed two real number equations.
Solve Eqs. (15a) and (15b) for ei∆θ2 and e−i∆θ2 by Cramer’s rule, and
then apply the identity ei∆θ2e−i∆θ2 = 1 leads to
(p1p6 −p3p4)(p2p6 −p3p5) + (p1p5 −p2p4)2 = 0
(16)
It is easy to verify that Eq. (16) is also a real number equation. De-
note ei∆θ3 as θ3, and multiply the above equation by θ3
3, a sixth-order
polynomial in θ3 can be obtained as:
m6θ6
3 + m5θ5
3 + m4θ4
3 + m3θ3
3 + m2θ2
3 + m1θ3 + m0 = 0
(17)
i
Similarly, by manipulating Eqs. (13b) and (13c), one obtains another
two equations
(q1q6 −q3q4)(q2q6 −q3q5) + (q1q5 −q2q4)2 = 0
(18)
n6θ6
3 + n5θ5
3 + n4θ4
3 + n3θ3
3 + n2θ2
3 + n1θ3 + n0 = 0
(19)
Z. Luo and J.S. Dai
118
variables (x
E
(i = 1, . . . , 7) as design variables.
i
mechanism. For simplicity, we set the the origin of the ﬁxed frame coin-
where the coeﬃcients m (i = 0, ..., 6) are expressions in design variables.
O
O
∆
∆

The necessary condition for Eqs. (17) and (19) to have a common solu-
tion of θ3 is that the determinant of their resultant matrix becomes zero.
Here the Bezout resultant matrix will be used, which can be obtained
using the Bezout-Cayley formulation (Almadi, 1996).
B = [bij]6×6
(20)
Expand the determinant of the Bezout matrix, one obtains
det(B) =
r
	
m=0
r
	
n=0
amnxmyn = 0,
m + n ≤r
(21)
where amn are expressions in the aforementioned 14 design variables,
while r is case dependent.
In a generic case where Z8 ̸= 0, Z5 ̸= 0,
r = 54; in case Z8 = 0, r = 16; while in case Z5 = 0, r = 8. It can be
zero. Eq. (21) can be further factored since it always has a trivial factor:
gcd(m6m0, n6n0) = (x −xC)2 + (y −yC)2
(22)
where gcd means the greatest common factor. Thus for a generic Watt-
I2 linkage, its coupler curve equation is a bivariate polynomial of order
52, which in general has 1431 monomials. It is impractical to expand
det(B) and collect coe
cients of x as did in subsection 3.1.
Numerical Approach and Analysis.
In path generation synthesis,
for each given precision point δ = x + iy, Eq. (21) is a polynomial in 14
design variables. Therefore if 14 precision points besides the origin are
will be obtained. In other words, a Watt-I2 linkage generally can pass
at maximum 15 precision points including the origin. Therefore if it can
pass 16 precision points on a line, then theoretically it must contain a
segment of that line.
Note that in precision position synthesis problems there are generally
positive dimensional manifolds of extraneous solutions. Extraneous so-
lutions arise when m6m0 or n6n0 is identically zero. It can be shown
that the conditions for m6m0 or n6n0 to be identically zero are,
Z3 = 0 or Z2 + Z4 = 0 or Z1 + Z2 −Z3 = 0
(23)
Z3 = 0 or Z6 = 0 or Z5 = Z8 = 0 or Z5Z6 −Z3Z8 = 0
(24)
Some of the conditions correspond to degenerated linkages while other
neous solutions is the tunnelling (de ation) method (Luo and Dai, 2005).
Searching for Undiscovered Planar Straight-line Linkages
119
veriﬁed that the imaginary component of the determinant is identically
speciﬁed, a determined system of 14 polynomials in 14 design variables
are mathematical ﬁgments. An eﬀective approach to exclude such extra-
fl

Although the above formulation is compact, numerical tests show that
classic iterative methods normally can not converge within 1000 itera-
should choose equations with less nonlinearity. Besides multi-precision
arithmetic may be preferable for better accuracy and reliability. Cur-
rently we use the following approach for better reliability.
points (besides the origin) to be passed along the x-axis, there are
the 14 structural variables (xO, yO, xA, yA, xB, yB, xC, yC, xD, yD,
xE, yE, xP , yP ) and 15 incremental angular variables △θ3k(k =
1, . . . , 15).
There are 30 equations in 29 variables.
Multi-start
of Levenberg-Marquart method is used to solve the system.
2 Once a converged point is obtained, we then assign small intervals
to the 14 structural parameters of the converged point, and use
interval arithmetic to evaluate the corresponding interval box.
After a coupler of days of program running, we have got a large num-
ber of converged approximate solutions. It is observed that most runs
can converge to stationary points with a function residual smaller than
1.0e-10. However all the converged solutions are not exact solutions.
more points to increase the reliability. However there is no obvious posi-
that the instantaneous center of velocity at the initial pose should be
The obtained
interval boxes will then be used as the search domains of multi-start
classic iterative methods to accelerate the process.
The numerical approach can be extended to the synthesis of overcon-
strained spatial single-loop mechanisms. It is well known that a spatial
chain can reach 21 precision positions (Perez, 2003). Therefore give more
constrained mechanisms can be found by precision position synthesis.
nisms should be avoided using tunnelling techniques.
3.
Conclusions
In this paper, we have investigated the problem of searching for undis-
covered straight-line linkages. The dimensional relationships in Hart’s
Z. Luo and J.S. Dai
120
on the y-axis. Meanwhile we are planning to run interval method use
parallelized computers to identify potential interval boxes.
tions when double-precision ﬂoat-point arithmetic is used. Therefore we
1
Given 15
Most converged approximate solutions pass 14 precision points in diﬀer-
ent conﬁgurations and pass near a 15th point. Later we have also added
tive eﬀect. Currently we are programming to include another constraint
6R manipulator has up to 16 conﬁgurations, while a spatial 5R open
than 16 rotation angles about a ﬁxed axis, spatial 6R single-loop over-
Nevertheless similar numerical diﬃculties arise, e.g. planar 6R mecha-
Two real equations Eq.  (16) and Eq. (18) are used ﬁrst.

second straight-line linkage have been deduced using symbolic calcula-
tions. A numerical approach is then proposed for solving more compli-
cate cases. Although no new mechanisms have been found at the current
stage, this research is a ﬁrst step towards an automatic approach for dis-
covering new overconstrained mechanisms.
References
Alekseyev, N.I., (1939), Hart’s straight line mechanism. Scientiﬁc Reports of the
Moscow Hydro-improvement Institute, VI.
Almadi, A.N., (1996), On new foundations of kinematics using classical and modern
algebraic theory and homotopy. PhD thesis, University of Wisconsin-Milwaukee.
Artobolevskii, I.I., (1964), Mechanisms for the Generation of Plane Curves. Trans-
lated by Wills, R.D. & Johnson, W., Macmillan NY.
Bricard, R., (1927), Lecons de Cin´ematique (2 volumes), Gauthier-Villar, Paris.
Dai, J.S. and Rees Jones, J., (1999), Mobility in metamorphic mechanisms of fold-
Dijksman, E., (1975), Kempe’s (focal) linkage generalized, particularly in connec-
tion with hart’s second straight-line mechanism, Mechanism and Machine Theory,
Dukkipati, R.V., (2001), Spatial Mechanisms, Analysis and Synthesis, Chapter 4.1
Existence Criteria of Mechanisms, Alpha Science Press.
Gao, X.S., Zhu, C.C., Chou, S.C., and Ge, J.X., (2001), Automated generation of
Kempe linkages for algebraic curves and surfaces. Mechanism and Machine Theory,
Harry Hart, (1877), On some cases of parallel motion. Proc. London Math Soc. vol. 8,
Hunt, K.H., (1978), Kinematic Geometry of Mechanisms, Oxford University Press.
Kapovich, M., Millson, J., (2002), Universality theorem for conﬁguration spaces of
Karger, A., (1998), Classiﬁcation of 5R closed kinematic chains with self mobility.
Kempe, A.B., (1873), On the solution of equations by mechanical means, Cambridge
Kempe, A.B., (1877), How to Draw a Straight Line, London: Macmillan and Co.
Koenigs, G., (1897), Le¸cons de cin´ematique, Hermann, Paris. [4.4, 9.3, 14.4, 14.6 15.3]
Luo, Z.J. and Dai, J.S., (2005), Pattern bootstrap: a new method which gives eﬃ-
ciency for some precision position synthesis problems, ASME J. Mechanical Design
(Accepted).
Peaucellier, C., (1873), Note sur une question de geometrie de compass, Nouvelles
Annales der Mathematiques, vol. 12, pp. 71–81.
Primrose, E.J.F., Freudenstein, F., Roth, B., (1967), Six-Bar Motion. Archive for
Smith, W.D., 1998, Plane mechanisms and the “downhill principle”, in the series of
“Computational power of machines made of rigid parts”, lectures given at Prince-
Sylvester, J.J., (1875), History of the plagiograph, Nature, vol. 12, pp. 214–216.
Searching for Undiscovered Planar Straight-line Linkages
121
able/erectable kinds, ASME J. of Mechanical Design, vol. 121, no. 3, pp. 375–382.
vol. 10, no. 6, pp. 445–460.
vol. 36, pp. 1019–1033.
pp. 286–289.
planar linkages, Topology, vol. 41, no. 6, pp. 1051–1107.
Mechanism and Machine Theory, vol. 33, pp. 213-222.
Messenger of Mathematics, vol. 2, pp. 51–52.
Rational Mechanics and Analysis, vol. 24, pp. 22–41.
ton University, pp. 1–26.

Wampler, C.W., (1999), Solving the kinematics of planar mechanisms, ASME J. Me-
chanical Design. vol. 121, pp. 387–391.
Perez, A., (2003), Dual Quaternion Synthesis of Constrained Robotic Systems, PhD
thesis, University of California, Irvine.
Appendix: Existing 6-bar Straight-Line Linkages
Figures 4 illustrates four known 6-bar straight-line linkages. Cases
(a) is based on the principle of inversor (Hart, 1877).
Case (b) is a
generalized case of Case (a) discovered by Sylvester, 1875 and Kempe,
1877. Cases (c) and (d) were ﬁrst invented by Hart, 1877 and Bricard,
1927 respectively. Later Dijksman, 1975 uniﬁed the two cases into a
generalized Case (e). For all four cases, the coupler points drawing a
straight-line are labelled as Q. Especially in case (c), Q1 and Q2 trace
two perpendicular straight-lines, while any other point G on the same
coupler traces an ellipse. In case (a), BD = CE, BE = CD, OC =
BC, BO/BE = CP/CE = BP/BD, OP O = OP P. In case (b), BD =
CE, BE = CD, ∆OBE ⋍∆QBD ⋍∆PCE, and θ = ∠POQ In
the generalized case of Cases (c) and (d), AB = a, BC = b, CD =
c, AD = d, BE = e, CF = h, EQ = f, GQ = g, e = ab2/(d2 −b2), f =
cdb/(d2 −b2), g = adb/(d2 −b2), h = cb2/(d2 −b2). Especially in case
(c), AB = BC, OC = CB; and in case (d), AE = CF, EQ = FQ.
E
O
B
C
D
Q
P
OP
A
D
B
C
E
F
Q1
Q2
G
(a)
(b)
A
B
E
D
C
F
Q
(c)
(d)
P
O
B
E
Q
OP
D
C
B
A
D
E
C
F
Q
(e)
Figure 4.
Four known 6-bar linkages for a straight-line motion.
Z. Luo and J.S. Dai
122

TYPE SYNTHESIS OF
THREE-DOF UP-EQUIVALENT
PARALLEL MANIPULATORS USING
A VIRTUAL-CHAIN APPROACH
Xianwen Kong
D´epartement de G´enie M´ecanique, Universit´e Laval,
Qu´ebec, Qu´ebec, Canada, G1K 7P4
xwkong@gmc.ulaval.ca
Cl´ement M. Gosselin
D´epartement de G´enie M´ecanique, Universit´e Laval,
Qu´ebec, Qu´ebec, Canada, G1K 7P4
gosselin@gmc.ulaval.ca
Abstract
Three-DOF UP-equivalent parallel manipulators are the parallel coun-
terparts of the 3-DOF UP serial manipulators, which are composed
of one U (universal) and one P (prismatic) joint.
Such parallel ma-
nipulators can be used either independently or as modules of hybrid
manipulators. Using the virtual-chain approach that we proposed else-
where for the type synthesis of parallel manipulators, this paper deals
with the type synthesis of this class of 3-DOF parallel manipulators.
In addition to all the 3-DOF UP-equivalent parallel manipulators pro-
posed in the literature, a number of new 3-DOF overconstrained or
non-overconstrained UP-equivalent parallel manipulators are identiﬁed.
Keywords: Three-DOF parallel manipulator, Type synthesis, Virtual chain, Screw
Theory, Overconstrained mechanism
1.
Introduction
Three-DOF UP-equivalent parallel manipulators have a wide range
of applications including assembly and machining. Such parallel manip-
ulators can be used either independently or as modules of hybrid ma-
nipulators. Two UP-equivalent parallel manipulators, which are used
as modules in hybrid manipulators, have been proposed in [Neumann,
1988; Huang et al., 2005]. However, the systematic type synthesis of the
UP-equivalent parallel manipulator is very diﬃcult and has not been
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 123–132. 
123
In order to provide alternatives to the current
investigated yet.

the type synthesis of UP-equivalent
parallel manipulators needs further investigation.
Using the virtual-chain approach proposed in [Kong and Gosselin,
2005a]1, the type synthesis of UP-equivalent parallel manipulators is
dealt with in this paper. In Section 2, the virtual-chain approach for the
type synthesis of parallel manipulators is recalled. The type synthesis
of 3-DOF single-loop kinematic chains is performed in Section 3.
In
Section 4, we discuss how to construct UP-equivalent parallel kinematic
chains and UP-equivalent parallel manipulators using 3-DOF single-loop
kinematic chains. Two new UP-equivalent parallel manipulators are also
presented. Finally, conclusions are drawn.
2.
2.1
As proposed in [Kong and Gosselin, 2005a], the motion pattern of
an f-DOF parallel manipulator can be represented by a virtual chain
which is the simplest serial or parallel kinematic chain that can express
the motion pattern well.
The virtual chain for the motion pattern of the 3-DOF PMs to be
synthesized in this paper is the UP virtual chain shown in Fig. 1(a).
In the UP virtual chain, the direction of the P (prismatic) joint is per-
pendicular to the axis of its adjacent R (revolute) joint within the U
(universal) joint.
Virtual chain
Moving platform
Base
P joint
2nd R joint
1st R joint
(a)
Base
ζ∞3
ζ02
Virtual chain
Moving platform
ζ01
(b)
U joint
Figure 1.
UP virtual chain: (a) schematic representation and (b) wrench system.
2.2
In the type synthesis of parallel manipulators, one needs to deal
with the instantaneous constraints.
Screw theory, see [Kumar et al.,
X. Kong and C. M. Gosselin
124
pulators.
In this paper, we limit ourselves to non-redundant parallel mani-
The Virtual-chain Approach
The Virtual Chain
Representation of Instantaneous Constraints
UP-equivalent parallel manipulators,

2000; Davidson and Hunt, 2004] for example, provides an eﬃcient tool
to address this issue.
The instantaneous constraints exerted on the moving platform by the
base through the kinematic chain (virtual chain, leg of a parallel kine-
matic chain or a parallel kinematic chain) is represented by a screw sys-
tem which is called the wrench system of the kinematic chain (virtual
chain, leg of a parallel kinematic chain or a parallel kinematic chain).
For brevity, the wrench system of a leg is also called a leg-wrench system.
Wrench system of UP-equivalent parallel kinematic chains.
In any general conﬁguration, a UP-equivalent parallel kinematic chain
and its corresponding UP virtual chain have the same wrench system.
Finding the wrench system of the UP-equivalent parallel kinematic chain
is thus equivalent to ﬁnding the wrench system of the UP virtual chain
[Fig. 1(b)].
It can be found without diﬃculty that the wrench system of the UP-
equivalent parallel kinematic chain is a 2-ζ0-1-ζ∞-system [see Fig. 1(b)].
Here, ζ0 and ζ∞denote, respectively, a wrench of zero pitch and a
wrench of inﬁnite-pitch. One base of the 2-ζ0-1-ζ∞-system is composed
of (a) two non-collinear ζ0 whose axes pass through the center of the U
joint and are perpendicular to the direction of the P joint and (b) a ζ∞
whose direction is perpendicular to the axes of the R joints within the
U joint.
Leg-wrench system of UP-equivalent parallel kinematic chains.
As the wrench system of a parallel kinematic chain is the linear com-
UP-equivalent parallel kinematic chain is a ci(0 ≤ci ≤3)-ζ-system, in-
cluding 2-ζ0-1-ζ∞-system, 2-ζ0-system, 1-ζ0-1-ζ∞-system, 1-ζ0-system,
1-ζ∞-system and 0-system, in any general conﬁguration.
2.3
When we connect the base and the moving platform of a parallel
kinematic chain by an appropriate UP virtual chain, the function of the
parallel kinematic chain is not aﬀected (Fig. 2). Any of its legs and the
UP virtual chain will constitute a 3-DOF single-loop kinematic chain.
Thus, a parallel kinematic chain is a UP-equivalent parallel kinematic
chain if it satisﬁes the following two conditions:
Three-DOF Up-equivalent Parallel Manipulators
125
Conditions for a UP-equivalent Parallel
Manipulator
et al., 2000], it is then concluded that the wrench system of any leg in a
bination of all of its leg-wrench systems in any conﬁguration [Kumar

Leg 1 Leg 2
Leg 3
Base
Moving platform
(b)
Leg 1 Leg 2
Leg 3
Virtual chain
Base
Moving platform
(a)
Figure 2.
(a) Three-legged UP-equivalent parallel kinematic chain; (b) Three-legged
UP-equivalent parallel kinematic chain with a UP virtual chain added.
(1) Each leg of the parallel kinematic chain and the same UP virtual
chain constitute a 3-DOF single-loop kinematic chain.
(2) The wrench system of the parallel kinematic chain is the same as
that of the UP virtual chain in any one general conﬁguration.
The ﬁrst condition guarantees that the moving platform can undergo
at least the UP-motion. The second condition further guarantees that
the degree of freedom of the moving platform is three.
Based on the above conditions, the type synthesis of parallel manipu-
lators can be performed by ﬁrst performing the type synthesis of 3-DOF
single-loop kinematic chains and then constructing UP-equivalent paral-
lel manipulators using the types of 3-DOF single-loop kinematic chains.
3.
In Section 2.2, the wrench systems of legs for UP-equivalent paral-
lel manipulators have been determined. Then, the number of 1-DOF
joints of a leg with a ci(0 ≤ci ≤2)-ζ-system is equal to (6 −ci). In
the case of ci = 0, the associated single-loop kinematic chains are not
overconstrained. Such a single-loop kinematic chain is composed of the
UP virtual chain and six R and P joints. Many types of single-loop kine-
matic chains can be obtained. Among these types, the types with simple
structure, such as UPSV, PUSV and RUSV, are of practical interest.
In the following, we will focus on the type synthesis of overconstrained
single-loop kinematic chains involving a UP virtual chain.
compositional units. A compositional unit is a serial kinematic chain
with speciﬁc characteristics, namely: In any general conﬁguration, the
126
Type Synthesis of 3-DOF Single-loop
Chains Involving a UP Virtual Chain
constrained single-loop kinematic chains can be constructed using seven
As pointed out in [Kong and Gosselin, 2005b], the types of over
Kinematic
X. Kong and C. M. Gosselin

Table 1.
Composition of 3-DOF overconstrained single-loop kinematic chains with a
UP virtual chain.
ci
Leg-wrench
system
Composition
Planar
Spherical
Coaxial
Codirectional
Parallelaxis
unit
unit
unit
unit
unit
3
2-ζ0-1-ζ∞
2
1
2
1-ζ0-1-ζ∞
1
1
2-ζ0
1
1
1
1-ζ∞
1
1
1
1
2
1-ζ0
1
1
wrench system of each of these kinematic chains always includes a spec-
iﬁed number of independent wrenches of zero-pitch or inﬁnite-pitch.
By analyzing the wrench system of the compositional units, it can be
found that a single-loop kinematic chain that has a UP virtual chain
and a speciﬁed leg-wrench system is composed of two or three of the
(a) Parallelaxis compositional units. Serial kinematic chains composed
of at least one R joint and at least one P joint in which the axes
of all the R joints are parallel and not all the directions of the P
joints are perpendicular to the axes of the R joints.
(b) Planar compositional units. Serial kinematic chains in which all
the links are moving along parallel planes. A planar serial kine-
matic chain is denoted by ()E.
(c) Spherical compositional units. Serial kinematic chains composed
of two or more concurrent R joints. Each R joint of a spherical
serial kinematic chain is denoted by ˙R.
(d) Coaxial compositional units. Serial kinematic chains composed of
two coaxial R joints.
(e) Codirectional compositional units.
Serial kinematic chains com-
posed of two P joints whose directions are parallel. Each P joint
of a codirectional serial kinematic chain is denoted by P∥.
For each class of single-loop kinematic chains that has a UP virtual
chain and a speciﬁed leg-wrench system, the speciﬁc types can be readily
Three-DOF Up-equivalent Parallel Manipulators
127
following ﬁve compositional units as shown in Table 1.

the type synthesis of single-loop mechanisms, a mechanism with a coax-
ial or codirectional compositional unit is regarded to be degenerated
and is therefore discarded. In the type synthesis of parallel mechanisms,
however, a single-loop kinematic chain that contains a coaxial or codi-
rectional compositional unit should be used since one joint of the coaxial
or codirectional compositional unit belongs to one leg of a parallel mech-
anism while the other joint belongs to the virtual chain.
In the representation of types of 3-DOF single-loop kinematic chains
involving a UP virtual chain, the following notations are used. The joints
within a ()|
E constitute a planar kinematic chain, whose associated plane
of relative motion is parallel to the direction of the P joint of the UP vir-
tual chain. The joints within a ()∥
E constitute a planar kinematic chain,
whose associated plane of relative motion is parallel to the direction of
the P joint of the UP virtual chain and perpendicular to the axis of the
second R joint within the U joint of the UP virtual chain. The P joint
whose direction is parallel to the direction of the P joint within the UP
virtual chain is denoted by P∥. The R joints are represented by ˙R, ˇR, ¨R,
¯R, ˝R and ´R due to the diﬀerent geometric conditions that the R joints
˙
point on the axis of the ﬁrst R joint within the U joint of the UP virtual
chain. The axes of all the ˇR joints within a leg intersect at the center
of the U joint of the UP virtual chain. ¨R (¯R) denotes an R joint that
is coaxial with the ﬁrst (second) R joint within the U joint of the UP
virtual chain. ˝R (´R) denotes an R joint whose axis is parallel to the axes
of the the ﬁrst (second) R joint within the U joint of the virtual chain.
Considering that each leg of the UP-equivalent parallel kinematic
chain and the same UP virtual chain constitute a 3-DOF single-loop
kinematic chain, the above notations can also be used to represent the
types of UP-equivalent parallel kinematic chains, UP-equivalent paral-
lel manipulators and their legs. The geometric conditions for the UP-
pulators and their legs can be obtained as follows.
All the P∥joints are along the same direction.
All the planes of
relative motion of the planar chains associated with ()∥
E are parallel.
The above planes, the planes of relative motion of the planar chains
associated with ()|
E as well as the direction of the P∥joints all parallel
to a common direction. The axes of the ´R joints are parallel to a line
that is perpendicular to (a) the planes of relative motion of the planar
chains associated with ()∥
E, (b) the intersection of the planes of relative
motion of the planar chains associated with ()|
E, and (c) the direction
128
obtained and shown in Table 2. It is noted that in the existing works on
equivalent
kinematic
UP-equivalent
satisfy. The axes of all the R joints within a leg intersect at a common
parallel mani-
chains,
parallel
X. Kong and C. M. Gosselin

Virtual chain
1
1
2 2
3
3
(a) ¨R¯RP∥V.
1
1
Virtual chain
2
2
2
2
2
(b) ¨R(RRR)∥
EV.
1
1
2
1
2
2
2
Virtual chain
1
(c) ˙R ˙R ˙R(RR)∥
EV.
Figure 3.
Three-DOF single-loop kinematic chains involving a UP virtual chain or
some legs for UP-equivalent parallel kinematic chains.
of the P∥joints. The axes of ¨R joints, the intersections of the ˙R joints
within the same leg, the intersections of the ˇR joints within the same
leg, and the intersection of the axes of the ¨R joint and the ¯R joint within
the same leg determine a common line. The axes of the ˝R joints are
parallel to the above common line.
For a better understanding of the notation used, a few single-loop
kinematic chains involving a UP virtual chain are shown in Fig. 3. In
Fig. 3, the UP virtual chain is enclosed using dashed lines. The joints
of a single-loop kinematic chain indicated by the same number form a
compositional unit.
As mentioned above, single-loop kinematic chains [Figs. 3(a)–3(b)]
involving a coaxial or codirectional compositional unit are usually re-
garded to be degenerated in the literature. However, these kinematic
chains are useful in the type synthesis of parallel manipulators.
4.
Now let us see how to construct UP-equivalent parallel manipulators
from the 3-DOF single-loop kinematic chain involving a virtual chain.
By removing the virtual chain in a 3-DOF single-loop kinematic chain
involving a virtual chain, one leg for UP-equivalent parallel manipula-
tors can be obtained. For example, by removing the virtual chain in
a ˙R ˙R ˙R(RR)∥
EV kinematic chain [Fig. 3(c)], an ˙R ˙R ˙R(RR)∥
E leg can be
obtained . Such a leg has a 1-ζ0-system. The ζ0 passes through the
common point of the axes of three ˙R joints and is parallel to the axes
of the R joints within (RR)∥
E. Using this approach, a large number of
Three-DOF Up-equivalent Parallel Manipulators
129
Construction of UP-equivalent Parallel
Manipulators

Table 2.
Three-DOF single-loop kinematic chains with a UP virtual chain or Legs
for UP-equivalent parallel kinematic chains.
ci
Leg-wrench
system
No
Type (Remove V if representing legs)
3
2-ζ0-1-ζ∞
1
¨R¯RP∥V
2
1-ζ0-1-ζ∞
2–8
¨R(RRR)∥
EV
¨R(RRP)∥
EV
¨R(RPR)∥
EV
¨R(PRR)∥
EV
¨R(RPP)∥
EV
¨R(PRP)∥
EV
¨R(PPR)∥
EV
2-ζ0
9
˙R ˙R ˙RP∥V
1
1-ζ∞
10–58
¨R´RPPPV
¨RP´RPPV
¨RPP´RPV
¨RPPP´RV
¨R´R´RPPV
¨R´RP´RPV
¨RP´R´RPV
¨RPP´R´RV
¨RP´RP´RV
¨R´R´R´RPV
¨R´R´RP´RV
¨R´RP´R´RV
¨RP´R´R´RV
˝R˝R´R´R´RV
˝R˝R˝R´RV
P˝R´R´R´RV
˝RP´R´R´RV
˝R˝RP´R´R
˝R˝R´RP´RV
˝R˝R´R´RPV
P˝R˝R´R´R
˝RP˝R´R´RV
˝R˝RP´R´RV
˝R˝R˝RP´R
˝R˝R˝R´RPV
P˝RP´R´RV
P˝R´RP´RV
P˝R´R´RPV
˝RPP´R´RV
˝RP´RP´RV
˝RP´R´RPV
˝R˝RPP´RV
˝R˝RP´RPV
˝R˝R´RPPV
PP˝R´R´RV
P˝RP´R´RV
˝RPP´R´RV
P˝RPP´RV
P˝RP´RPV
P˝R´RPPV
˝RPPP´RV
˝RPP´RPV
˝RP´RPPV
PP˝RP´RV
P˝RPP´RV
˝RPPP´RV
PP˝R´RPV
P˝RP´RPV
˝RPP´RPV
1-ζ0
59–80
˙R ˙R ˙R(RR)∥
EV
˙R ˙R(RRR)∥
EV
˙R ˙R ˙R(RP)∥
EV
˙R ˙R ˙R(PR)∥
EV
˙R ˙R(RRP)∥
EV
˙R ˙R(RPR)∥
EV
˙R ˙R(PRR)∥
EV
˙R ˙R ˙R(PP)∥
EV
˙R ˙R(RPP)∥
EV
˙R ˙R(PRP)∥
EV
˙R ˙R(PPR)∥
EV
ˇRˇRˇR(RR)|
EV
ˇRˇR(RRR)|
EV
ˇRˇRˇR(RP)|
EV
ˇRˇRˇR(PR)|
EV
ˇRˇR(RRP)|
EV
ˇRˇR(RPR)|
EV
ˇRˇR(PRR)|
EV
ˇRˇRˇR(PP)|
EV
ˇRˇR(RPP)|
EV
ˇRˇR(PRP)|
EV
ˇRˇR(PPR)|
EV
0
0-system
81–
omitted
legs for UP-equivalent parallel manipulators have been obtained and are
The
variations of UP-equivalent parallel manipulators involving U, C (cylin-
drical) and S (spherical) joints and parallelograms can be obtained using
the techniques summarized in [Kong and Gosselin, 2005c].
Using the types of legs obtained in Section 3 and Condition (2) for
UP-equivalent parallel kinematic chains, we can obtain a large num-
ber of UP-equivalent parallel kinematic chains.
By further applying
the validity condition of actuated joints [Kong and Gosselin, 2005a], we
X. Kong and C. M. Gosselin
130
listed in Table 2. In Table 2, only the basic types of legs are listed.

Table 3.
Families of 3-DOF m-legged UP-equivalent parallel manipulators.
m
Family
Overconstrained
Non-overconstrained
2
3-3
3-2
3-1
2-2
3-0
2-1
3
3-3-3
3-3-2
3-3-1
3-2-2
3-3-0
3-0-0
2-1-0
3-2-1
2-2-2
3-2-0
3-1-1
2-2-1
1-1-1
3-1-0
2-2-0
2-1-1
4
3-3-3-3
3-3-3-2
3-3-3-1
3-3-2-2
3-3-3-0
3-0-0-0
2-1-0-0
3-3-2-1
3-2-2-2
3-3-2-0
3-3-1-1
3-2-2-1
1-1-1-0
2-2-2-2
3-3-1-0
3-2-2-0
3-2-1-1
2-2-2-1
3-3-0-0
3-2-1-0
3-1-1-1
2-2-2-0
2-2-1-1
3-2-0-0
3-1-1-0
2-2-1-0
2-1-1-1
3-1-0-0
2-2-0-0
2-1-1-0
1-1-1-1
Moving platform
Base
Base
Moving platform
(b)
(a)
Figure 4.
Two UP-equivalent parallel manipulators: (a) ¨R(RRR)∥
E-2-ˇRˇRˇR(RR)|
E,
and (b) ˝R˝R(RRR)∥
E-2-ˇRˇRˇR(RR)|
E.
can obtain a large number of m(m ≥2)-legged UP-equivalent paral-
lel manipulators.
Due to the large number of UP-equivalent parallel
manipulators, we only list the families of UP-equivalent parallel manip-
nipulators in Fig. 4. The ¨R(RRR)∥
E-2-ˇRˇRˇR(RR)|
E parallel manipulator
shown in Fig. 4(a) belongs to Family 2-1-1 and is overconstrained. The
˝R˝R(RRR)∥
E-2-ˇRˇRˇR(RR)|
E shown in Fig. 4(b) belongs to Family 1-1-1
and is not overconstrained.
It is noted that the UP-equivalent parallel manipulators proposed in
[Neumann, 1988; Huang et al., 2005] belong respectively to Families
Three-DOF Up-equivalent Parallel Manipulators
131
ulators in Table 3 and show two new 3-legged UP-equivalent parallel ma-
3-0-0-0 and 3-0-0 listed in Table 3.

5.
Conclusions
The type synthesis of UP-equivalent parallel manipulators has been
systematically solved using the virtual-chain approach proposed in [Kong
and Gosselin, 2005a].
Both overconstrained and non-overconstrained
UP-equivalent parallel manipulators can be obtained. The UP-equivalent
parallel manipulators obtained include some new UP-equivalent parallel
manipulators as well as all the known UP-equivalent parallel manipula-
tors.
The optimal selection of types of UP-equivalent parallel manipulators
based on kinematic and dynamic indices is still an open issue.
6.
Acknowledgements
The authors would like to acknowledge the ﬁnancial support of the
Natural Sciences and Engineering Research Council of Canada (NSERC)
and of the Canada Research Chairs Program.
Notes
1. In addition to our approach to the type synthesis of parallel manipulators, there are
also several others, such as those proposed by Profs. J. M. Herv´e, J. Angeles, Z. Huang, L.-
W. Tsai, T.-L. Yang, G. Gogu and their colleagues. For a comprehensive list of references on
this issue, see [Kong and Gosselin, 2005a; Kong and Gosselin, 2005c] and visit the webpage of
Dr. Jean-Pierre Merlet at http://www-sop.inria.fr/coprin/equipe/merlet/merlet eng.html.
References
Neumann, K.E. (1988), “Robot,” United States Patent 4732525.
Huang, T., Li, M., Zhao, X.M., Mei, J.P., Chetwynd, D.G., and Hu, S.J. (2005), “Con-
ceptual design and dimensional synthesis for a 3-DOF module of the TriVariant–a
novel 5-DOF reconﬁgurable hybrid robot,” IEEE Transactions on Robotics, 21(3),
Kong, X., and Gosselin, C.M. (2005a), “Type synthesis of 3-DOF PPR parallel ma-
nipulators based on screw theory and the concept of virtual chain,” ASME Journal
of Mechanical Design, 127(6), pp. 1113–1121.
Kong, X., and Gosselin, C.M. (2005b), “Mobility analysis of parallel mechanisms
based on screw theory and the concept of equivalent serial kinematic chain,” Pro-
ceedings of the ASME 2005 International Design Engineering Technical Confer-
ences and the Computers and Information in Engineering Conference, Long Beach,
California, USA, Paper DETC2005-85337.
Kumar, V., Waldron, K.J., Chrikjian, G., and Lipkin, H. (2000), Applications of screw
system theory and Lie theory to spatial kinematics: A Tutorial, 2000 ASME Design
Engineering Technical Conferences, Baltimore, USA.
Davidson, J.K., and Hunt, K.H. (2004), Robots and Screw Theory: Applications of
Kinematics and Statics to Robotics, Oxford University Press.
Kong, X., and Gosselin, C.M. (2005c), “Type synthesis of 5-DOF parallel manipula-
tors based on screw theory,” Journal of Robotic Systems, 22(10), pp. 535–547.
X. Kong and C. M. Gosselin
132
pp. 449–456.

THE MULTIPLE VIRTUAL
END-EFFECTORS APPROACH FOR
HUMAN-ROBOT INTERACTION
Agostino De Santis
PRISMA Lab, Dipartimento di Informatica e Sistemistica
Universit`a degli Studi di Napoli Federico II
Via Claudio 21, 80125 Napoli, Italy
agodesa@unina.it
Paolo Pierro
PRISMA Lab, Dipartimento di Informatica e Sistemistica
Universit`a degli Studi di Napoli Federico II
Via Claudio 21, 80125 Napoli, Italy
paolopierro@tin.it
Bruno Siciliano
PRISMA Lab, Dipartimento di Informatica e Sistemistica
Universit`a degli Studi di Napoli Federico II
Via Claudio 21, 80125 Napoli, Italy
siciliano@unina.it
Abstract
In this paper, a method for managing redundancy for a mobile robot
manipulator is proposed, which is aimed at kinematic control of the sys-
tem in interaction tasks with humans. The method considers those parts
of the manipulator structure —virtual end-eﬀectors (VEEs)— which
could potentially hit objects or persons during human-robot interac-
tion. The positioning of each of these various VEEs is considered as
a lower-priority task in the inverse kinematics resolution of the robot
manipulator, while the order of priorities is dynamically changed during
task execution. In addition, it is shown that suitable trajectories are
to be planned for VEEs using sensory data, e.g., with potential ﬁeld
methods. A simulation case study for anthropic domains is proposed.
Keywords: Redundancy resolution, physical human-robot interaction, safety, po-
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 133–144. 
133
tential ﬁelds, obstacle avoidance

1.
Introduction
Human-robot interaction addresses important issues to avoid that the
physical body of a robot could result in damages to humans. In the lat-
est years the attention was focused on cognitive aspects of the growing
interaction from robots and humans, like mental models and interfaces.
It is important to notice that the presence of physical “bodies” is a
crucial aspect in the interaction between humans and robots. In partic-
ular, physical human-robot interaction (pHRI) addresses the two crucial
issues of safety and dependability, especially when environments are un-
structured. The physical interaction with a robot in anthropic domains
becomes every day more interesting for assistance and service robotics in
the houses and for the elderly-dominated society. The EURON project
PHRIDOM (Albu-Schaﬀer et al., 2005), e.g., is addressing these issues.
The crucial goals of safety and dependability are related to technical
issues such as collision avoidance, redundancy resolution, compliance
control and sensory-based safety systems for close interaction.
Safe and dependable interaction can be accomplished both in a passive
and in an active fashion. Passive safety is introduced, e.g., using springs,
elastic joints (De Luca, 2000); other interesting techniques were also
proposed, like the variable-stiﬀness actuators (Bicchi et al., 2001) and
the distributed macro-mini actuation (Zinn et al., 2002). To improve
safety, and also to add dependability for the users, active control of
the physical interaction is to be considered. Force control (Siciliano and
Villani, 1999) and safe postures of robot manipulators should be focused
as fundamental issues. In addition, the whole kinematic structure of a
manipulator must be controlled, because the robot can hit a person with
diﬀerent parts of the structure.
This paper considers the problem of controlling the positioning of cru-
cial parts of the kinematic structure of a robot in interaction tasks, which
are termed “virtual end-eﬀectors” (VEEs). Proper Closed-Loop Inverse
Kinematics (CLIK) schemes (Siciliano, 1990) are adopted to achieve
resolution in the presence of redundancy, so as to take into account
the issues discussed above in the positioning of such VEEs. Each VEE
is controlled with a diﬀerent level of priority with respect to the task,
programming the positioning of each dangerous part of the articulated
structure in a safe conﬁguration; then, the priorities between the tasks
are handled in a hierarchical inverse kinematics scheme (Siciliano and
Slotine, 1991). The trajectory planning phase is designed to make the
multiple VEEs approach suitable to control of the interaction. In detail,
an obstacle avoidance technique based on the well-known potential ﬁeld
A. De Santis, P. Pierro and B. Siciliano
134

method (Khatib, 1986) is adopted to dynamically change the priority
order according to the position of goals and objects in the environment.
2.
Modelling
The application domain hereby considered is domestic assistance. For
dependable pHRI a redundant mobile robot is needed: movements in a
room, objects picking and other tasks may be accomplished, for instance,
with a manipulator mounted on a mobile base.
2.1
Kinematics
The mobile robot manipulator considered for the purpose of the present
study has the kinematic structure of Fig. 1, which is equivalent to the
assembly of a commercial mobile robot (Pioneer PowerBot) and an in-
dustrial robot manipulator (Comau Smart-3S), although the method is
at all applicable for any kinematic structure with a known Jacobian. In
the ﬁgure, several critical points are evidenced (A, B, C, D, E), which
describe those extremities of the robot that can collide with a human
being. Also, they are crucial in order to locate the positions of the ma-
nipulator links, since the robot can run into an obstacle not only by a
VEE, but also with an intermediate point between two VEEs located on
a link.
It should be pointed out, however, that safety issues suggest using
accurate sensor information to localize goals and obstacles, lightweight
structures and other additional facilities to make the robot intrinsically
safe in event of collisions. Here, however, only kinematic aspects are
focused. By the way, the manipulator should be lightweight, while in-
dustrial manipulators are heavy and cart robots able to carry them are
not yet available for potential use in houses.
2.2
Redundancy resolution is related to the problem of ﬁnding movements
of available joints that respect the desired motion of the end-eﬀector,
while satisfying some additional task. The solution of the problem can
be found on the basis of the well-known diﬀerential mapping
˙p = J(q) ˙q
(1)
where
p = [ x
y
z ]T
q = [ q1
q2
...
qn ]T
135
Redundancy Resolution
Virtual End-effectors Approach for Human-robot Interaction

Figure 1.
Mobile robot manipulator with VEEs A, B, C, D, E
are respectively the end-eﬀector position vector and the joint position
vector of an n-DOF mobile robot manipulator, and J denotes the usual
Jacobian. For the purpose of the present work, the end-eﬀector orien-
tation is not considered, while n = 8, i.e. 2 DOF’s for the mobile base
and 6 DOF’s for the manipulator. Since the robot is redundant (n > 3),
the simplest way to invert the mapping (1) is to use the pseudo-inverse
of the Jacobian matrix, which corresponds to the minimization of the
joint velocities in a least-square sense (Sciavicco and Siciliano, 2000).
Because of the diﬀerent characteristics of the available DOFs, it could
be required to modify the velocity distribution. This might be achieved
by adopting a weighted pseudo-inverse J†
W
J†
W = W −1JT(JW −1JT)−1
(2)
with the (n×n) matrix W −1 = diag{β1, β2, ..., βn}, where βi is a weight
factor belonging to the interval [0, 1] such that βi = 1 corresponds to full
motion for the i-th degree of mobility and βi = 0 corresponds to freeze
the corresponding joint (De Santis et al., 2005a).
A. De Santis, P. Pierro and B. Siciliano
136
.

Redundancy of the system can be further exploited by using a task-
the form
˙q = J†
W (q)v +

In −J†
W (q)J(q)

˙qa
(3)
where In is the (n × n) identity matrix, ˙qa is an arbitrary joint velocity
vector and the operator

In −J†
W J

projects the joint velocity vector
in the null space of the Jacobian matrix. Also in (3), v = ˙pd +k(pd −p)
which provides a feedback correction term of p to the desired position pd,
according to the well-known CLIK algorithm, being k > 0 a suitable
gain (Siciliano, 1990). This solution generates an internal motion of the
robotic system (secondary task) which does not aﬀect the motion of the
end-eﬀector while fulﬁlling the primary task.
The kind of secondary tasks employed for the algorithm discussed in
this work are based on the inverse kinematics of a reduced part of the
structure. As an example of positioning of diﬀerent parts of manip-
ulator (rather than only the actual end-eﬀector), consider the human
arm: the structure is redundant for the positioning of the hand, and
thus it is possible to position the elbow (which can be considered a ﬁrst
VEE); the so-computed joint values can then be used as references for
the positioning of the wrist (second VEE), and so far for the hand (real
end-eﬀector) (De Santis et al., 2005b). Therefore, a hierarchical solution
of redundancy is achieved, where the various lower-priority tasks are to
be selected according to some suitable criteria (Featherstone, 1988).
3.
The multiple VEEs approach
Virtual end-eﬀectors (VEEs) are parts of the manipulator structure,
whose positions are to be controlled in addition to the control of the
end-eﬀector of the mobile robot manipulator. In detail, let qi denote
the vector of the ni joint variables which determine the position pi of
the i-th VEE. Therefore, the diﬀerential mapping for the VEE is
˙pi = Ji(qi) ˙qi
(4)
where Ji denotes the associated Jacobian.
The multiple VEEs approach is hereby introduced in a general fashion,
by adopting a multiple task priority strategy for specifying secondary
tasks, along with a proper trajectory planning technique for the desired
motion of each VEE. The result is a nested N-layer CLIK scheme, where
N is the number of considered VEEs. To this regard, please notice that
the end-eﬀector is included in the counting of the VEEs; in fact, it may
well be the case the highest priority be assigned to an intermediate VEE
137
priority strategy (Nakamura, 1991) corresponding to a solution to (1) of
Virtual End-effectors Approach for Human-robot Interaction

other than to the end-eﬀector, say when an obstacle is obstructing the
end-eﬀector motion.
With this approach, the control of diﬀerent points is not considered
in a global matrix, but with multiple mappings. The VEEs approach
can be used for maneuvering a kinematic structure in a volume, e.g., for
tube inspections and endoscopy with snake robots, by considering the
most critical prominences of the structure as VEEs.
3.1
Inverse kinematics with the VEEs approach orders the VEE posi-
tioning tasks according to a priority management strategy. Since the
trajectories of lower priority VEEs are assigned as secondary task, they
will be followed only if they do not interfere with the higher priority
task to be fulﬁlled. Hence, a list of VEEs is considered, starting from
the one with highest priority. When a VEE gets close to an obstacle,
its desired path following (necessary to avoid the obstacle) becomes of
higher priority for the CLIK scheme and the priority order is switched
with respect to the distance of each VEE from the obstacle. This can be
achieved by considering the N-layer priority algorithm described in the
following. The idea is summarized in Fig. 2, being N the lowest priority.
Figure 2.
Scheme of nested CLIK with VEEs
At the lowest layer, the diﬀerential mapping corresponding to the
velocity of the VEE with lowest priority is considered, i.e. (4) with i = N.
Hence, a CLIK algorithm with weighted pseudo-inverse is adopted to
compute the inverse kinematics:
˙qN = J†
N(qN)vN,
(5)
A. De Santis, P. Pierro and B. Siciliano
138
Nested Closed-loop Inverse Kinematics
.

with vN = ˙pNd + kN(pNd −pN), being pNd the desired position for the
VEE with lowest priority and kN > 0. The pseudo-inverse matrix is
substantially weighted as in (2).
At the generic i-th layer of the nested scheme, with i = N −1, . . . , 1,
the inverse kinematics is computed as in (3), i.e.
˙qi = J†
iW (qi)vi +

Ini −J†
iW (qi)Ji(q)

˙qia
(6)
where
J†
iW = W −1
i JT
i (JiW −1
i JT
i )−1
(7)
with W −1
i
= diag{βi1, βi2, ..., βini} and vi = ˙pid +ki(pid −pi), being pid
the desired position for the VEE with priority i, and ki > 0. Further,
˙qia is the gradient of the objective function:
Gi = −1
ni
ni
	
j=1
qi,j −qi+1,j
qi,jM −qi,jm
where qi,jM (qi,jm) is the maximum (minimum) value of the joint vari-
able qi,j, i.e. the j-th component of the joint vector qi. The above choice
corresponds to achieving a joint motion for the joint variables as close as
possible to that computed in the previous layer qi+1, which are feeded
as secondary reference values to the next layer, providing a way to ful-
ﬁll inverse kinematics of diﬀerent parts of the structure, with diﬀerent
priorities.
Going on, the nested CLIK algorithm computes the inverse kinematics
for the structures ending with each of the considered VEEs. It is worth
emphasizing that the order of priorities is dynamically changed during
task execution. As illustrated in Fig. 2, the scheme takes the desired
positions for the ordered VEEs at time t; then, the output of the CLIK
algorithms at the N levels are input to a trajectory planning block which
re-evaluates the priority order among the various VEEs according to the
positions of the goals and the obstacles in the environment, and thus
generates the new ordered sequence of desired positions for the VEEs
at time t + ∆t, where ∆t is the sampling time at which the CLIK algo-
rithm is discretized for practical implementation; the planning aspects
are discussed in the following section.
The weights βij of the matrices W i are chosen according to the crite-
rion described above (De Santis et al., 2005a). In particular, the joints
of the mobile base have a higher weight with the respect to the joints
of the manipulator. In Fig. 3 it is possible to see how trajectories are
followed for various VEEs with diﬀerent priorities. It is easy to recognize
that planned trajectories for VEEs with lower priorities are abandoned
139
Virtual End-effectors Approach for Human-robot Interaction

when they interfere with the higher priority planned trajectories. With
the priority strategy, which ranks the VEEs, it is possible to fulﬁll the
most critical positioning problems on line.
Figure 3.
Planned (gray) and actual (black) trajectory for the VEE labelled with
A and B in Fig. 1
The time history of a joint variable is also reported in Fig. 4; move-
ments planned in the task space are abandoned if they interfere with
higher-priority tasks.
Figure 4.
Planned (dashed) and actual (solid) trajectory for the joint value q4
The priority management strategy is crucial: if a mobile robot ma-
nipulator is considered, which avoids the head of a person in a room
with the end-eﬀector, it is diﬃcult to predict the possibility of hitting
him/her with other parts of the structure, because a possible avoidance
movement can be incompatible with the path of the real end-eﬀector or
of a VEE with higher priority.
A. De Santis, P. Pierro and B. Siciliano
140
.
.

3.2
For each VEE it should be possible to plan a complete trajectory oﬀ-
line, but this approach is not satisfying, since the trajectories imposed
to the VEEs, if planned a priori, do not have realistic application (most
obstacles are moving and their trajectories are not known a priori). Fur-
thermore, the positioning of VEEs in task space is only a secondary task
for the positioning of other VEEs with higher priority. On-line trajec-
tory planning is needed: potential ﬁelds methods (Khatib, 1986) can
be used for such a planning: the manipulator moves in a ﬁeld of forces;
the position to be reached is an attractive pole for the end-eﬀector, and
obstacles are repulsive surfaces for the manipulator parts. The ﬁeld of
artiﬁcial forces F is produced by a diﬀerentiable potential function, with
F(pi) = −∇(U(pi)), where ∇(U(pi)) is the gradient vector of U at pi,
that is the position of the VEE under the ﬁeld eﬀect.
The potential U is constructed as the sum of two elementary potential
functions: U(pi) = Uatt(pi) + Urep(pi) In this relation Uatt is the attrac-
tive potential and depends only on the ﬁnal position, whereas Urep is the
repulsive function and depends only on the obstacles position. During
the simulation, the attractive potential ﬁeld is chosen to be a parabolic
well, centered in the goal positions, whereas a repulsive ﬁeld is related
to a distance of inﬂuence from obstacles. So, the goal is a source of
an attractive potential ﬁeld; obstacles are sources of repulsive potential
ﬁelds.
Simulations of robot movements with this approach are shown in the
next section. Notice again the importance of the priority management in
the CLIK schemes, as discussed above: even with on-line path planning,
a desired path could be not executable, so it is necessary to switch the
4.
In this section, operations of the considered mobile manipulator are
examined in an anthropic domain, while the robot is performing an
assistance task. The model has been simulated under the Virtual Reality
Toolbox (VRT) in Matlab. The VRT is a solution for interacting with
virtual reality models of dynamic systems over time. The complete CLIK
algorithm with multiple priority handling and potential ﬁelds method
for trajectory planning is considered.
The robot has to take a soda
can which is placed in a ﬁtted cupboard, where an impaired person
cannot arrive.
In the ﬁrst phase, the person on the wheelchair is a
moving obstacle to be avoided.
When the robot takes the can, the
person becomes a goal point to be reached by the end-eﬀector bringing
141
Trajectory Planning
priority order, as emphasized by the trajectory planning block in Fig. 2.
A Case Study
Virtual End-effectors Approach for Human-robot Interaction

the can. The ﬁrst desired position for the robot is the location of the can
on the cupboard; after the end of the goal reaching, the second desired
position is the location of the person, who is moving in an independent
way. The anthropic environment where the task is executed is shown in
Fig. 5.
Figure 5.
Interaction with the service robot in an anthropic environment
In the shown environment, the robot has to avoid the lamps (it has to
slow down in order to keep away from objects attached to the ceiling),
as well as the person (turning around him/her) and ﬁnally the desktop
and the table. The obstacles are modelled as spheres: a lamp is a sphere
having a small radius, whereas a person is a set of spheres with diﬀerent
radiuses.
Notice that these radiuses may take into account cognitive
evaluations. As an example, consider the potentially unpredictable be-
haviours of children in the scene: in such a case, safety issues suggest to
magnify the radiuses for repulsive potential ﬁelds. It is possible, in in-
telligent environments, to provide radio-frequency identiﬁcation tags to
assign diﬀerent set of parameters, depending on the skills of interacting
people, for robot kinematic and force control. The table has been mod-
elled diﬀerently: it is characterized by a succession of points (each point
represents a corner or the lower point of a foot of the table). The robot
is equipped with seven leds, each one placed next to one critical points:
when a particular VEE assumes the highest priority, its led lights up.
The priority assignment for the nested CLIK of the diﬀerent VEEs is
reported in Fig. 6, where EE stands for the end-eﬀector and WMR for
the wheeled-mobile robot.
A. De Santis, P. Pierro and B. Siciliano
142
.

Figure 6.
Time history of priority assignments
In Fig. 7 it is possible to see the paths for one VEE and the EE
avoiding the obstacles as well as the motion of the impaired person.
Strong hypothesis about sensory system are assumed: positions of robot,
people and objects are exactly known and tracked.
Figure 7.
Trajectories for the VEE labelled with A and the EE of the robot (solid)
in the task of Fig. 5, where the spheres are edges of obstacles and the thin line is the
trajectory of the impaired person during the task
5.
Conclusion
The virtual end-eﬀectors (VEEs) approach has been proposed for si-
multaneous inverse kinematics, with proper trajectory planning, of mo-
bile robot manipulators operating in unstructured environments. For
pHRI, the VEEs approach can actually complement interaction schemes,
where intrinsical and active safety issues are to be considered. The pro-
posed approach may be also used to keep a robot in proper postures in
narrow spaces (e.g., snake robots) and for self-collision avoidance too.
143
Virtual End-effectors Approach for Human-robot Interaction
.
.

For comparison, a global optimization of diﬀerent forces acting on the
manipulator without null-space techniques should also be considered,
with a weighted extended Jacobian approach. In addition, automatic
techniques for the location of the VEEs should be of interest as well.
Future work will also be devoted to add soft-computing techniques for
both trajectory planning and inverse kinematics, and to consider inte-
gration with force control on real mobile robot manipulators.
References
Albu-Schaﬀer, A., Bicchi, A., Boccadamo, G., Chatila, R., De Luca, A., De Santis,
A., Giralt, G., Hirzinger, G., Lippiello, V., Mattone, R., Schiavi, R., Siciliano, B.,
Tonietti, G., Villani, L., “Physical Human-Robot Interaction in Anthropic Do-
mains: Safety and Dependability”, 4th IARP/IEEE-EURON Workshop on Tech-
nical Challenges for Dependable Robots in Human Environments, Nagoya, J, July
2005.
De Luca, A., “Feedforward/feedback laws for the control of ﬂexible robots” 2000 IEEE
International Conference of Robotics and Automation, San Francisco, CA, USA,
April 2000.
Bicchi, A., Tonietti, G., Bavaro, M., Piccigallo, M., “Variable stiﬀness actuators for
fast and safe motion control”, 11th International Symposium of Robotics Research,
Siena, I, October 2003.
Zinn, M., Khatib, O., Roth, B., Salisbury, J.K., “A new actuation approach for hu-
man friendly robot design”, International Symposium on Experimental Robotics,
S. Angelo d’Ischia, I, July 2002.
Siciliano, B., Villani, L., Robot Force Control, Kluwer Academic Publishers, Boston,
MA, 1999.
Siciliano, B., “A closed-loop inverse kinematic scheme for on-line joint-based robot
control”, Robotica, 8, 231–243, 1990.
Sciavicco, L., Siciliano, B., Modelling and Control of Robot Manipulators, (2nd Ed.),
Springer-Verlag, London, UK, 2000.
Siciliano, B., Slotine, J.J.E., “A general framework for managing multiple tasks in
highly redundant robotic systems, 5th International Conference on Advanced Rob-
otics, Pisa, I, June 1991.
Khatib, O., “Real-time obstacle avoidance for robot manipulators and mobile robots”,
International Journal of Robotics Research, 5(1), 90–98, 1986.
De Santis, A., Siciliano, B., Villani, L., “Fuzzy trajectory planning and redundancy
resolution for a ﬁre ﬁghting robot operating in tunnels”, 2005 IEEE International
Conference on Robotics and Automation, Barcelona, E, April 2005.
Nakamura, Y., Advanced Robotics: Redundancy and Optimization, Addison-Wesley,
Reading, Mass., 1991.
De Santis, A., Caggiano, V., Siciliano, B., Villani, L., Boccignone, G., “Anthropic
inverse kinematics of robot manipulators in handwriting tasks”, 12th Conference
of the International Graphonomics Society, Fisciano, Italy, June 2005.
Featherstone, R., “Resolving manipulator redundancy by combining task constraints”,
Int. Meeting Advances in Robot Kinematics, Ljubljana, Yugoslavia, Sep. 1988.
A. De Santis, P. Pierro and B. Siciliano
144

Humanoids and Biomedicine
J. Babiˇc, D. Omrˇcen, J. Lenarˇciˇc
J. Park, F.C. Park
A convex optimization algorithm for stabilizing whole-body motions
of humanoid robots
R. Di Gregorio, V. Parenti-Castelli
Parallel mechanisms for knee orthoses with selective recovery action
S. Ambike, J.P. Schmiedeler
Modeling time invariance in human arm motion coordination
M. Veber, T. Bajd, M. Munih
Assessment of ﬁnger joint angles and calibration of instrumental glove
R. Konietschke, G. Hirzinger, Y. Yan
All singularities of the 9-DOF DLR medical robot setup for minimally
invasive applications
G. Liu, R.J. Milgram, A. Dhanik, J.C. Latombe
On the inverse kinematics of a fragment of protein backbone
V. De Sapio, J. Warren, O. Khatib
Predicting reaching postures using a kinematically constrained shoulder
model
Balance and control of human inspired jumping robot
147
157
167
177
185
193
201
209

BALANCE AND CONTROL OF HUMAN
INSPIRED JUMPING ROBOT
Jan Babiˇc, Damir Omrˇcen and Jadran Lenarˇciˇc
”
Joˇzef Stefan” Institute, Department of Automatics, Biocybernetics and Robotics
Ljubljana, Slovenia
jan.babic@ijs.si, damir.omrcen@ijs.si, jadran.lenarcic@ijs.si
Abstract
The purpose of this study is to describe the necessary conditions for the
motion controller of a humanoid robot to perform the vertical jump.
We performed vertical jump simulations using three diﬀerent control
algorithms and showed the eﬀects of each algorithm on the vertical jump
performance. We showed that motion controllers which consider one of
two conditions separately are not appropriate to control the vertical
jump. We demonstrated that the motion controller has to satisfy both
conditions simultaneously in order to achieve a desired vertical jump.
Keywords:
1.
Introduction
The vertical jump is an example of a fast explosive movement that
requires quick and completely harmonized coordination of all segments of
the robot, for the push-oﬀ, for the ﬂight and, ﬁnally, for the landing. The
most important part of the vertical jump which inﬂuences the eﬃciency
and therefore the height of the jump is the push-oﬀphase. The push-oﬀ
phase can be deﬁned as a time interval when the feet are touching the
ground before the ﬂight. The primary task of the actuators during the
push-oﬀphase is to keep the robot balanced during the entire jump.
The secondary task of the actuators is to accelerate the robot’s center
of mass upwards in the vertical direction to the extended body position.
In the past, several research groups developed and studied jumping
robots but most of these were simple mechanisms not similar to humans.
They were controlled by empirically derived control strategies. Probably
the best-known hopping robots were designed by Raibert, 1986 and his
team. They developed diﬀerent hopping robots, all with telescopic legs
and with a steady-state control algorithm. Later, De Man et al., 1996
developed a trajectory generation strategy based on the angular mo-
mentum theorem which was implemented on a model with articulated
legs. Recently Hyon et al., 2003 developed a one-legged hopping robot
with a structure based on the hind-limb model of a dog. They used an
empirically derived controller based on the characteristic dynamics.
Humanoid robot, Vertical jump, dynamic stability
147
© 2006 Springer. Printed in the Netherlands.
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 147–156.

sary conditions that the motion controller of a humanoid robot has to
consider in order to perform the vertical jump.
2.
The model of the jumping robot is planar and is composed of four
segments which represent the foot, shank, thigh and trunk (Fig.
1).
The segments are connected by frictionless rotational hinges whose axes
are perpendicular to the sagittal plane. The model consists of two parts,
the model of the robot in the air and the model of the robot in contact
with the ground. While the tip of the foot is on the ground, the contact
between the foot tip and the ground is modelled as a rotational hinge
joint between the foot tip and the ground at point F. Therefore, the
robot has six degrees of freedom during ﬂight and four degrees of freedom
during stance (with the assumption that the foot tip of the robot does
not slip and does not bounce back). The generalized coordinates used
to describe the motion of the robot are coordinates xF and yF of the
foot tip measured in the reference frame and joint angles α, β, γ, δ.
Figure 1.
Jumping robot during ﬂight.
3.
To assure the verticality of the jump, the robot’s center of mass
(COM) has to move in the upward direction above the support poly-
gon during the push-oﬀphase of the jump. The second condition, which
148 
The purpose of this study is to mathematically formulate the neces-
Dynamical Model of Jumping Robot
Vertical Jump Conditions and Control
Algorithm
J. Babiþ, D. Omrþen and J. Lenarþiþ

refers to the balance of the robot during the push-oﬀphase, is the posi-
tion of the zero moment point (ZMP). ZMP is the point on the ground
at which the net moment of the inertial forces and the gravity forces has
no component along the horizontal axes (Vukobratovi´c et al., 2004). In
the following sections we will analyse how these two conditions inﬂuence
the vertical jump.
First we will design two control algorithms based
on the COM condition and ZMP condition separately and then we will
design a control algorithm that considers both conditions together.
Equations that deﬁne the position of COM are
xcom =
n
i=1mixi
n
i=1mi
,
ycom =
n
i=1miyi
n
i=1mi
,
(1)
where xcom and ycom are horizontal and vertical positions of COM of the
i and yi are the coordinates of COM of
the i-th segment,mi
segments.
The position of ZMP is
xzmp =
n
i=1mixi(¨yi + g) −n
i=1miyi¨xi + τz
n
i=1mi(¨yi + g)
,
(2)
where
τz =
n
	
i=1
(Ii ˙ωi + ωi × Iiωi).
(3)
g is the quadratic norm of the gravity vector, Ii is the inertial tensor of
the i −th segment around its COM and ωi is the angular velocity of the
i−th segment. When the robot is at rest, the position of ZMP coincides
with the horizontal position of COM.
For the control purposes we have to ﬁnd the second derivatives of xcom
and ycom (Eq. 1). We get the following equations
¨xcom = k11¨α + k12 ¨β + k13¨γ + k14¨δ + d1
(4)
and
¨ycom = k21¨α + k22 ¨β + k23¨γ + k24¨δ + d2,
(5)
where the parameters kij and di are functions of joint angles (kij =
f(α, β, γ, δ), di = f(α, β, γ, δ)).
The position of ZMP on the ground can not be described in this form
because the denominator of Eq.
2 is also a function of joint angles.
149 
Balance and Control of Human Inspired Jumping Robot
whole system, respectively. x
is the mass of the i-th segment and n is the number
of

However, in many cases we can freely move the coordinate system to co-
incide with the position of the desired ZMP and the balancing condition
becomes xzmp = 0. In this case we can express xzmp as
xzmp = 0 = k31¨α + k32 ¨β + k33¨γ + k34¨δ + d3.
(6)
Eqs. 4, 5 and 6 can be combined and written in the matrix form
⎡
⎣
¨xcom
¨ycom
0
⎤
⎦=
⎡
⎣
k11
k12
k13
k14
k21
k22
k23
k24
k31
k32
k33
k34
⎤
⎦
⎡
⎢⎢⎢⎣
¨α
¨β
¨γ
¨δ
⎤
⎥⎥⎥⎦+
⎡
⎣
d1
d2
d3
⎤
⎦,
(7)
where ¨xcom and xzmp are the conditions that relate with the balance.
On the other hand, ¨ycom is the prescribed vertical acceleration of the
robot’s COM during the push-oﬀphase of the jump which enables the
robot to jump.
3.1
Control of xcom
In the ﬁrst case we analyse the vertical jump when the motion con-
troller keeps the horizontal position of the robot’s COM over the virtual
joint connecting the foot with the ground at point F during the entire
push-oﬀphase of the vertical jump. Motion controller does not control
the position of ZMP xzmp.
By rewriting Eq. 7 for xcom and ycom we get
 ¨xcom
¨ycom

=
 k11
k12
k13
k14
k21
k22
k23
k24

⎡
⎢⎢⎢⎣
¨α
¨β
¨γ
¨δ
⎤
⎥⎥⎥⎦+
 d1
d2

.
(8)
Since the system is under-determinate (the degree of redundancy is
two), we have to set up two additional constraints. To achieve a human
like motion of the vertical jump we chose the following simple constraints
¨γ = c1¨β,
¨δ = c2¨β,
(9)
where c1 and c2 are constants. By substitution of Eq. 9 into Eq. 8 we
get
 ¨xcom
¨ycom

=
 k11
k12 + c1k13 + c2k14
k21
k22 + c1k23 + c2k24
 
¨α
¨β

+
 d1
d2

.
(10)
150 
J. Babiþ, D. Omrþen and J. Lenarþiþ

The system of equations is determinate and the joint accelerations can
be written as

¨α
¨β

=
 k11
k12 + c1k13 + c2k14
k21
k22 + c1k23 + c2k24
−1  ¨xcom
¨ycom

−
 d1
d2

.
(11)
3.2
Control of xzmp
In the second case we analyse the vertical jump when the motion
controller keeps the position of ZMP aligned with the virtual joint at
point F. The motion controller does not control the horizontal position
of COM (xcom).
By rewriting Eq. 7 for xzmp and ycom we get
 ¨ycom
0

=
 k21
k22
k23
k24
k31
k32
k33
k34

⎡
⎢⎢⎢⎣
¨α
¨β
¨γ
¨δ
⎤
⎥⎥⎥⎦+
 d2
d3

.
(12)
Similarly as in the previous case we have to ﬁnd the joint accelerations.
If we again use the same constraints (9) we get the following determinate
system of equations
 ¨ycom
0

=
 k21
k22 + c1k23 + c2k24
k31
k32 + c1k33 + c2k34
 
¨α
¨β

+
 d2
d3

,
(13)
and the joint accelerations are

¨α
¨β

=
 k21
k22 + c1k23 + c2k24
k31
k32 + c1k33 + c2k34
−1  ¨ycom
0

−
 d2
d3

.
(14)
3.3
Control of xcom and xzmp
In the third case we will analyse the vertical jump when the motion
controller considers both conditions from the precedent two sections. It
keeps the position of ZMP and the horizontal position of the robot’s
COM aligned with the virtual joint at point F.
In this case the degree of redundancy is one. The following constraint
that abolishes the redundancy of Eq. 7 is the relationship of the ankle
and knee joint accelerations
151 
Balance and Control of Human Inspired Jumping Robot
¨γ = C1 ¨β,
(15)

where C1 is a constant. By substitution of Eq. 15 into Eq. 7 we get
⎡
⎣
¨xcom
¨ycom
0
⎤
⎦=
⎡
⎣
k11
k12 + C1k13
k14
k21
k22 + C1k23
k24
k31
k32 + C1k33
k34
⎤
⎦
⎡
⎢⎣
¨α
¨β
¨δ
⎤
⎥⎦+
⎡
⎣
d1
d2
d3
⎤
⎦,
(16)
and the joint accelerations are
⎡
⎢⎣
¨α
¨β
¨δ
⎤
⎥⎦=
⎡
⎣
k11
k12 + C1k13
k14
k21
k22 + C1k23
k24
k31
k32 + C1k33
k34
⎤
⎦
−1 ⎛
⎝
⎡
⎣
¨xcom
¨ycom
0
⎤
⎦−
⎡
⎣
d1
d2
d3
⎤
⎦
⎞
⎠.
(17)
3.4
Motion Controller
For the control of the robot we used a simple feed forward joint ac-
celeration controller
τc = H(q)¨qc + C( ˙q, q) + g(q),
(18)
where τc and q denote the control torque and the vector of joint posi-
tions, respectively. H, C and g denote the inertia matrix, the vector
of Coriolis and centrifugal forces and the vector of gravity forces, re-
spectively. ¨qc is the vector of control accelerations (¨qc =

¨α, ¨β, ¨γ, ¨δ
T ).
During the push-oﬀphase of the jump ¨qc is deﬁned by Eqs. (11),(14) or
(17). During the ﬂight phase, when the robot is in the air, the angular
momentum and the linear momentum are conserved and the ¨qc is set in
such a way that the joint motions stops and the robot is prepared for
landing.
4.
Simulation Study
We performed vertical jump simulations using three diﬀerent control
algorithms described in the previous section.
First we simulated the
vertical jump using the control algorithm based on the COM condition,
then we simulated the vertical jump using the control algorithm based
on the ZMP condition and, ﬁnally, we simulated the jump where the
controller considered both conditions together.
152 
J. Babiþ, D. Omrþen and J. Lenarþiþ

In this case we controlled ¨ycom and ¨xcom
by Eq. 11. From the requirement that ¨xcom has to be above the support
com = 0 and ¨xcom
the position of COM during the jump.
horizontal position while the dashed line represents the vertical position
of COM. Dotted line shows the moment of take-oﬀ. It is evident that
0
0.2
0.4
0.6
0
0.2
0.4
0.6
0.8
1
t/s 
xCOM,yCOM/m
Figure 2.
Position of center of mass
during vertical jump considering only the
COM condition.
0
0.2
0.4
0.6
Ŧ6
Ŧ4
Ŧ2
0
t/s 
W/Nm
Figure 3.
Required torque in virtual
joint considering only COM condition.
Due to the fact that we did not control the position of ZMP, the
required torque in the virtual joint between the foot and the ground
during the push-oﬀphase of the jump is not zero (see Fig. 3). As this
torque can not be applied to the real robotic system, this controller is
not appropriate for performing the vertical jump. Without applying this
the conﬁgurations of the robot during the jump.
Control of
.
In this case we controlled ¨ycom and xzmp, as deﬁned
by Eq. 14. To satisfy the balance criteria xzmp has to be over the support
polygon (xzmp = 0). As evident from Fig. 5, the horizontal position of
COM during the push-oﬀphase of the jump is not zero and, therefore,
the robot does not perform the vertical jump as it should.
On the other hand, the torque in the virtual joint is zero (Fig. 6) and
the system is balanced without the torque in the virtual joint between
the foot and the ground. Therefore, the robot performs a jump, but this
is not a vertical jump, since COM is not above point F at the take-oﬀ
153 
Balance and Control of Human Inspired Jumping Robot
.
Control of
com
xzmp
x
polygon (point F) follows that x
COM is above point F.
the horizontal position of COM remains zero, i.e.
The solid line represents the
as deﬁned
= 0 . Figure 2 shows
torque at the virtual joint the robot becomes unbalanced. Figure 4 shows
moment. Figure 7 shows the conﬁgurations of the robot during the jump.

Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.13 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.25 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.38 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.51 s
Figure 4.
0
0.2
0.4
0.6
0
0.2
0.4
0.6
0.8
1
t /s 
xCOM,yCOM/m
Figure 5.
Position of center of mass
during vertical jump considering only
ZMP condition.
0
0.2
0.4
0.6
Ŧ1
Ŧ0.5
0
0.5
1
t /s 
W/Nm
Figure 6.
Torque in virtual joint con-
sidering only ZMP condition.
Control of
and
.
In this case we controlled ¨ycom together
with both ¨xcom and xzmp, as deﬁned by Eq.
17.
8 shows the
position of COM during the jump and Fig. 9 shows the torque in the
virtual joint.
As the position of COM is always above point F and
the torque in the virtual joint is zero, the robot performs the desired
vertical jump. Therefore, both conditions have to be fulﬁlled to assure
the verticality of the jump. Both, the horizontal position of COM and
10 shows the
conﬁgurations of the robot during the jump when the motion controller
considers both necessary conditions.
154 
condition.
Conﬁgurations of robot during vertical jump considering only COM
Figure
com
x
xzmp
J. Babiþ, D. Omrþen and J. Lenarþiþ
the position of ZMP have to coincide with point F. Figure

Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.13 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.25 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.38 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.5 s
Figure 7.
condition.
0
0.2
0.4
0.6
0
0.2
0.4
0.6
0.8
1
t/s 
xCOM,yCOM/m
Figure 8.
Position of center of mass
during vertical jump considering both
COM and ZMP conditions.
0
0.2
0.4
0.6
Ŧ1
Ŧ0.5
0
0.5
1
t/s 
W/Nm
Figure 9.
Torque in virtual joint con-
sidering both COM and ZMP conditions.
5.
Conclusions
In this study, we mathematically formulated the necessary conditions
which have to be considered by the motion controller to perform the
vertical jump. The ﬁrst condition refers to the robot’s center of gravity
which has to move in the upward direction above the support polygon
during the push-oﬀphase of the jump. The second condition refers to
the position of the zero moment point that has to lie inside the support
polygon to assure the balance of the robot.
We analysed how these
two conditions inﬂuence the vertical jump performance. Based on these
conditions we designed three diﬀerent control algorithms and used them
in vertical jump simulations. We showed that motion controllers that
155 
Balance and Control of Human Inspired Jumping Robot
Conﬁgurations of robot during vertical jump considering only ZMP

Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.13 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.25 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.38 s
Ŧ0.2 0 0.2
0
0.5
1
1.5
x/m
y/m
t = 0.5 s
Figure 10.
Conﬁgurations of robot during vertical jump considering both COM and
ZMP conditions.
consider one of two conditions separately are not appropriate for the
control of the vertical jump. We demonstrated that the motion controller
has to satisfy both conditions simultaneously in order to achieve a desired
vertical jump.
6.
Acknowledgement
This study was supported by the Slovenian Ministry of Higher Edu-
cation, Science and Technology.
References
De Man H., Lefeber D., Daerden F., and Faignet E. Simulation of a new control
algorithm for a one-legged hopping robot (using the multibody code mechanica
motion). In Proceedings International Workshop on Advanced Robotics and Intel-
ligent Machines, pages 1–13, Manchester, UK, 1996.
Raibert M. Legged Robots That Balance. MIT Press, 1986.
Vukobratovi´c M. and Borovac B. Zero-moment point
thirty ﬁve years of its life.
International Journal of Humanoid Robotics, 1(1):157–173, 2004.
Hyon S., Emura T., and Mita T. Dynamics-based control of a one-legged hopping
robot. Journal of Systems and Control Engineering, 217(2):83–98, 2003.
J. Babiþ, D. Omr
þ
þen and  
þ
156
J. Lenarcic
–

FOR STABILIZING WHOLE-BODY
MOTIONS OF HUMANOID ROBOTS
Juyong Park and Frank C. Park
School of Mechanical & Aerospace Engineering
Seoul National University
juyong.park@gmail.com, fcp@snu.ac.kr
Abstract
This paper presents a convex optimization algorithm for the stabiliza-
tion of whole-body motions for humanoid robots.
Given a possibly
unstable input reference trajectory in the form of joint and base frame
acceleration time proﬁles, the algorithm determines, at each time step,
the optimal acceleration proﬁle subject to stability constraints on the
zero-moment point (ZMP), and under the assumption that joint posi-
tion and velocity measurements are available. We show that the above
optimization can be formulated as a second-order cone programming
(SOCP) problem, a well-known class of convex optimization problem
that admits eﬃcient interior-point algorithms. Simulations suggest that
eﬃcient whole-body stabilization is possible for typical humanoid struc-
tures, even in dynamic environments.
Keywords: Whole-body motion, humanoid robot, motion stabilization, convex op-
timization, second-order cone programming
1.
Introduction
This paper addresses the problem of reﬁning a reference whole-body
motion for a humanoid robot such that it is stable, and closely approx-
imates the reference motion.
As a possible application scenario, one
can envision a reference motion obtained from human motion capture
data; directly transferring this data to a humanoid robot can easily re-
sult in an unstable motion, causing the robot to lose balance. We seek
an online algorithm that optimally tracks the reference motion, in an
appropriate least-squares sense, while ensuring stability as prescribed
by the zero-moment point (ZMP) condition.
Since the early work of [Vukobratovic and Borovac, 2004] on dy-
namic stability and stabilization of legged robots using the zero mo-
ment point, many methods have been proposed for generation of stable
motions for humanoid robots based on the ZMP notion.
One of the
ﬁrst optimization-based approaches to whole-body motion stabilization
© 2006 Springer. Printed in the Netherlands.
157
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 157–166.
A CONVEX OPTIMIZATION ALGORITHM
is the work of Kagami et al. [Kagami et al., 2000], who develop an

least square method while satisfying desired ZMP and center-of-gravity
(COG) constraints. The main disadvantage with this approach is that
COG is constrained from moving along x and y axes in order to simplify
the problem. Sugihara and Nakamura [Sugihara et al., 2002] propose an
alternative COG optimization-based method for balancing a humanoid
with two diﬀerent loops; this algorithm assumes a stable reference tra-
jectory that is subject to short-term disturbances, whereas our objective
propose a control algorithm for tracking a ZMP trajectory and the mo-
tions of some links which want to be controlled. This method is useful
for real-time control, but the resulting ZMP tracking errors can lead to
unstable motions. Related work preceding the above is [Nishiwaki
algorithms for stable motions.
In this paper we present a convex optimization algorithm for the sta-
bilization of whole-body motions for humanoid robots. Given a (possibly
unstable) input reference trajectory in the form of joint and base frame
acceleration time proﬁles, the algorithm determines, at each time step,
the optimal acceleration proﬁle subject to stability constraints on the
zero-moment point (ZMP), and under the assumption that state mea-
surements (i.e., the joint position and velocity) are available.
We show that the above optimization can be formulated as a second-
order cone programming (SOCP) problem, which is a well-known class
of convex optimization problems that admit eﬃcient interior-point algo-
rithms. Simulation results suggest that online whole-body stabilization
is possible for typical humanoid structures, even in dynamic environ-
ments.
2.
Problem Formulation
We assume an n degree-of-freedom humanoid robot with a tree topol-
ogy structure, and deﬁne the optimization vector to be
x =
 ˙V0
¨q

(1)
where ˙V0 ∈se(3) denotes the generalized acceleration of the root link,
and ¨q ∈ℜn denotes the joint acceleration vector.
The ensuing con-
strained optimization problem is formulated as
min
∥x −xref∥2
(2)
subject to
Aeqx = beq
(3)
158 
J. Park and F.C. Park
algorithm to achieve dynamic balance for humanoid robots based on the
is to stably adjust an unstable trajectory. Park et al. [Park et al., 2005]
et al., 2002], [Morisawa et al., 2005], which investigate pattern generation

Aineqx ≤bineq
(4)
f(x) ≤0,
(5)
The kinematics and dynamics equations can be formulated as
˙Vi
=
A ˙Vix + b ˙Vi
(6)
FZMP
=
MZMP x + CZMP
(7)
where ˙Vi ∈se(3) is the generalized acceleration of link i, and FZMP is
the generalized force between the robot and environment, described in
the coordinates whose origin is at the desired ZMP. A ˙Vi, b ˙Vi, MZMP and
CZMP are functions of position and velocity. From these equations the
linear equality constraint (3) follows:
Aeq ≡

A ˙V
MZMP,Mxy

beq ≡

˙Vconst −b ˙V
−CZMP,Mxy

(8)
where A ˙V and b ˙V are made by stacking A ˙Vi and b ˙Vi of some links whose
motions need to be constrained (e.g., foot link), and MZMP,Mxy and
CZMP,Mxy denote the components of the moments about the x and y
axes in MZMP and CZMP .
The linear inequality constraint (4) comes from the static constraint
and joint bounds. The static constraint causes the motion to stay within
a statically stable region, and can be approximated as a linear inequality.
The nonlinear constraint comes from the friction constraint, which can
be expressed as
f(x)
≡
−FZMP,fz + ∥FZMP,fxy∥/µ + |FZMP,Mz|/µn
(9)
where µ is the friction coeﬃcient about the force in the xy plane, µn is
the rotational friction coeﬃcient about the z axis, FZMP,fz is the force
along the z axis, FZMP,fxy is the force in the xy plane, and FZMP,Mz is
the moment about the z axis of FZMP . This problem can be recast as a
second-order cone programming (SOCP) problem by introducing some
additional variables as follows:
min
t1
subject to
∥x −xref∥≤t1
∥MZMP,fxyx + CZMP,fxy∥≤µt2
|MZMP,Mzx + CZMP,Mz| ≤µnt3
0 ≤−Aeqx + beq
0 ≤Aeqx −beq
0 ≤−Aineqx + bineq
0 ≤MZMP,fzx + CZMP,fz −t2 −t3
(10)
159 
Stabilizing Whole-body Motions of Humanoid Robots

Eﬃcient interior point algorithms for SOCP problems have been de-
veloped in, e.g., [Boyd and Vandenverghe, 2004], [Lobo et al., 1998],
[MOSEK]. These algorithms are shown to have complexity O(n3), where
n denotes the dimension of the optimization vector, and typically con-
verge in around 50 iterations for very wide range of problem size. For
typical humanoid robots where n is around 30, online solutions to the
optimization are feasible.
3.
Case Study
In this section, we evaluate the algorithm through simulations with a
humanoid robot model with 25 degrees of freedom: six at each limb and
one at the waist along the z axis as shown in Figure 1. To obtain natural
reference motions we capture some human motions and transform them
to those compatible with our humanoid robot model. Each optimization
is performed using Matlab version 6.5, running on a Pentium 4 (1.8 GHz)
personal computer.
Figure 1.
Humanoid robot model
3.1
Whole-Body Motion Stabilization
Using the algorithm, we stabilize some motions obtained from motion
capture data as shown in Table 1. Here beta refers the ratio between
the support polygon and the region of the original motion’s projected
center of mass (CoM) distribution.
motion’s projected CoM is located at the center of the support polygon.
From the values of Beta and time per step, we can observe that the
results are dependent on the complexity of the motion. If the motion is
too complex or too fast for the robot, it cannot be stabilized at every
160 
J. Park and F.C. Park
In the case of beta = 0, the original
.

Motions
Beta
Time/step (sec)
Right leg raise forward
0.4
0.891918
Right kick forward
0.4
0.862366
Right leg raise aside
0
0.961157
Right kick aside(×0.95)
0
0.635591
Bartender Motion
0.1
0.629111
Easy dance(×0.9)
0
0.502345
Table 1.
moment. In this case from the values of Beta we can conclude that the
motion along the x axis, which is the forward direction of the robot, is
easier to stabilize; the characteristics of the robot model can be regarded
as a cause of these results. The computational time per step for the
optimization, coded in Matlab, is less than 1 second in all cases, clearly
suggesting that online solutions are feasible.
(a) ZMP trajectory before sta-
bilization
(b) ZMP trajectory after stabi-
lization
Figure 2.
The dynamic stability of the
right kick forward” motion before and
after stabilization can be ascertained in Figure 2. The red square in the
ﬁgure denotes the support polygon. The +x and +y directions are the
forward and left directions of the robot. From the ﬁgures we can verify
that the resulting motion has been stabilized.
Figure 3.
Stabilizing Whole-body Motions of Humanoid Robots
161
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
0.4
−0.2 −0.1
0
0.1 0.2
0.3
x(m)
y (m)
−0.05
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
0.18
0.2
0
x (m)
y (m)
0.05
0.1
ZMP trajectories before and after stabilization.
”
Motions before and after stabilization.
Stabilization of given motions.

From Figure 3 we can see the motion after stabilization is similar to
the reference motion. In the stabilized motion, the robot appears to
stabilize itself much as a human would, by repeatedly overcompensating
and reacting. While the reference motion looks reasonable in the ﬁgure,
this motion is unstable and will cause the robot to fall over.
3.2
Posture Stabilization in Dynamic
Environments
One of the important features of our proposed algorithm is that it
can be applied online.
The algorithm depends only on the states at
each time, in this case the joint position and velocity measurements.
One can thus achieve posture stabilization in a dynamically changing
environment; in what follows we consider a simple standing posture,
i.e., θ = 0.
Acceleration proﬁle
α
Time/step
(λ = 2π/tf)
(m/s2 or deg /s2)
(sec)
α sin λt
1
0.400948
(translation along x axis)
0.7
0.460664
−αλ2 sin λt
6
0.336903
(rotation along y axis)
5
0.334582
Table 2.
For the test cases of a dynamically varying environment, the standing
posture is stabilized as shown in Table 2. α, a coeﬃcient for the accel-
eration proﬁle, is described in m/s2 in the case of translational motions
of the environment and deg /s2 in the case of rotational motions. From
the Table we see that the algorithm works satisfactorily in our sample
dynamic environments.
From the ZMP and projected CoM trajectories in Figure 4 and
5,
both dynamic and static stability of the motions can be examined. In
both cases the reference motion, which is not dynamically stable, is
stabilized. In Figure 5(b) and 5(d) we can see how the trajectory has
been stabilized intuitively.
We can observe from Figures 6(a) and 6(b) that the reaction of the
robot resembles that of a human. The motions shown Figure 6(a) re-
semble the reaction of human standing in a moving vehicle.
J. Park and F.C. Park
162
Posture stabilization in a dynamic environment.
–
–

Figure 4.
ZMP and projected CoM trajectories before and after stabilization of a
standing posture in a translating moving environment when α = 1
(a) ZMP trajectory
before stabilization
(b) ZMP trajectory
after stabilization
(c) Projected CoM
trajectory before
stabilization
(d) Projected CoM
trajectory after sta-
bilization
Figure 5.
ZMP and projected CoM trajectories before and after stabilization of a
standing posture in a rotating environment when α = 6
(b) Rotating environment when α = 6
Figure 6.
Stabilized motions in a dynamic environment
3.3
Motion Stabilization in a Dynamic
Environment
163 
Stabilizing Whole-body Motions of Humanoid Robots
(a) Translating environment when α = 1
From the former section, we can see the algorithm is applicable to the
case of dynamic environments, and that the results resemble the natural
reactions of a human. Based on these results we evaluate the performance
.
.
.
(a) ZMP trajectory
before stabilization
(b) ZMP trajectory
after stabilization
(c) Projected CoM
trajectory before
stabilization
(d) Projected CoM
trajectory after sta-
bilization
−0.1
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0
0.1
0.2
x (m)
y (m)
−0.1
−0.15
−0.1
−0.05
−0.15
−0.1
−0.05
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0
0.1
0.2
x (m)
y (m)
−0.1
0
0.05
0.1
0.15
0
0.1
0.2
x (m)
y (m)
−0.1
0
0.05
0.1
0.15
0
0.1
0.2
x (m)
y (m)
−0.1
−0.15
−0.1
−0.05
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0
0.1
0.2
x (m)
y (m)
−0.1
−0.15
−0.1
−0.05
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0
0.1
0.2
x (m)
y (m)
−0.1
0
0.05
0.1
0.15
0
0.1
0.2
x (m)
y (m)
−0.1
0
0.05
0.1
0.15
0
0.1
0.2
x (m)
y (m)

mance of the algorithm by attempting to stabilize a reference motion in
a dynamic environment. The reference motion in this simulation is the
”
right kick forward” motion.
Acceleration proﬁle
α
Time/step
(λ = 2π/tf)
(m/s2 or deg /s2)
(sec)
α sin λt
0.6
0.752351
(translation along x axis)
0.55
0.769769
α sin λt
0.45
0.658306
(translation along y axis)
0.45
0.805410
−αλ2 sin λt
4
0.862881
(rotation along y axis)
2.5
0.676269
−αλ2 sin λt
2.5
0.730828
(rotation along x axis)
2.5
0.882090
Table 3.
From the results of Table 3, we can see that motions can be success-
fully stabilized in various cases of dynamic environments. The obtained
results are similar to the reference motion, and stable as shown in Fig-
ures 7 and 8.
Figure 7.
ZMP and projected CoM trajectories before and after stabilization of
Figure 8.
Motions before and after stabilization in a rotating environment about
164
J. Park and F.C. Park
Motion stabilization in a dynamic environment.
”right kick forward” motion in a rotating environment when α = 4.
the y axis.
–
–
–
–

4.
Conclusion
This paper has proposed an algorithm that stabilizes whole-body mo-
tions for humanoid robots, even in dynamically changing environments,
via the solution of a convex optimization problem at each timestep. By
expressing the stabilization constraints as linear equalities and inequali-
ties in the acceleration vector, we show that the whole-body stabilization
problem can be formulated as a second-order conic programming prob-
lem. The optimization depends only the current states (i.e., position and
velocity), and can be solved in nearly real-time for moderately complex
humanoid models with up to thirty kinematic degrees of freedom.
References
Boyd, S. and Vandenverghe, L. (2004), Convex Optimization, Cambridge University
Kagami, S., Kanehiro, F., Tamiya, Y., Inaba, M., and Inoue, H. (2000), AutoBalancer:
An Online Dynamic Balance Compensation Scheme for Humanoid Robots, Pro-
ceedings of International Workshop Algorithmic Foundations Robotics (WAFR),
Hanover, Germany.
Stable Motion Planning for Humanoid Robots, Autonomous Robots, vol. 12,
no. 1, pp. 105–118.
Lobo, M.S., Vandenverghe, L., Boyd, S., and Lebret, H. (1998), Applications of
second-order cone programming, Linear Algebra and its Applications, vol. 284,
pp. 193-228.
Morisawa, M., Kajita, S., Kaneko, K., Harada, K., Kanehiro, F., Fujiwara, K., and
Hirukawa, H. (2005), Pattern Generation of Biped Walking Constrained on Para-
metric Surface, Proceedings of IEEE International Conference on Robotics and
Automation, Barcelona, Spain.
MOSEK, http://www.mosek.com
Nishiwaki, K., Kagami, S., Kuniyoshi, Y., Inaba, M., and Inoue, H. (2002), Online
Generation of Humanoid Walking Motion based on a Fast Generation Method of
Motion Pattern that Follows Desired ZMP, Proceedings of IEEE/RSJ International
Conference on Intelligent Robots and Systems, Lausanne, Switzerland.
Park, F.C., Bobrow, J.E., and Ploen, S.R. (1995), A Lie group formulation of robot
dynamics, International Journal of Robotics Research, vol. 14, no. 6, pp. 609–618.
Park, F.C., Choi, J., and Ploen, S.R. (1999), Symbolic formulation of closed chain
dynamics in independent coordinates, Mechanism and Machine Theory, vol. 34,
no. 5, pp. 731–751.
Park, F.C., and Jo, G. (2004), Movement primitives and principal component analysis,
Advances in Robot Kinematics, Dordrecht, Kluwer.
Park, J., Youm, Y., and Chung, Wan-K. (2005), Control of Ground Interaction at
the Zero-Moment Point for Dynamic Control of Humanoid Robots, Proceedings of
IEEE International Conference on Robotics and Automation, Barcelona, Spain.
Stabilizing Whole-body Motions of Humanoid Robots
165
Kuﬀner Jr., J.J., Kagami, S., Nishiwaki, K., Inaba, M., and Inoue, H. (2002), Dynami
cally
-
Press.

Sugihara, T., and Nakamura, Y. (2002), Whole-body Cooperative Balancing of Hu-
manoid Robot using COG Jacobian, Proceedings of IEEE/RSJ International Con-
ference on Intelligent Robots and Systems, Lausanne, Switzerland.
Vukobratovic, M., and Borovac, B. (2004), Zero-Moment Point – Thirty Five Years
of Its Life, International Journal of Humanoid Robotics, vol. 1, no. 1, pp. 157–173.
J. Park and F.C. Park
166

PARALLEL MECHANISMS FOR KNEE 
ORTHOSES WITH SELECTIVE RECOVERY 
ACTION 
Raffaele Di Gregorio 
Departm n  of Eng neering
University of Ferrara 
e t
i
I
Via Saragat, 1 – 44100 FERRARA, ITALY 
rdigregorio@ing.unife.iti 
Vincenzo Parenti-Castelli 
D EM – University of Bologna 
Viale Risorgimento, 2 – 40136 BOLOGNA, ITALY 
vincenzo.parenticastelli@mail.ing.unibo.it 
Abstract 
A procedure to design new orthoses for the human knee articulation is 
presented. The design is based on knee equivalent parallel mechanisms 
whose links closely replicate the main knee anatomical structures; this 
makes it possible to design orthoses which can either re-establish the 
complete functionality of the knee articulation or, selectively, only the 
function of an injured knee structure. 
Keywords: 
Articulation, knee, equivalent mechanisms, orthoses  
1.  
Introduction  
Recent studies showed that the human knee passive motion, i.e. the 
relative motion of femur and tibia under virtually unloaded conditions, 
can be replicated quite well by mechanisms (equivalent mechanisms) 
with one degree of freedom (dof). Early studies (Goodfellows and 
O’Connor, 1978; O’Connor et al., 1989; Fuss, 1989) proposed planar 
equivalent mechanisms, which replicate the knee motion in the sagittal 
plane. Later in (Wilson and O’Connor, 1997; Wilson et al., 1998; Parenti-
Castelli and Di Gregorio, 2000; Di Gregorio and Parenti-Castelli, 2003, 
Ottoboni et al., 2005) spatial mechanisms were proposed that replicate 
the femur-tibia spatial motion.  
The equivalent spatial mechanisms (ESMs) rely upon the clinical 
evidence that some fibers of the three main ligaments (the anterior 
cruciate (ACL), the posterior cruciate (PCL) and the medial collateral 
(MCL) ligament) are almost isometric during the knee flexion and guide 
167
© 2006 Springer. Printed in the Netherlands.
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 167–176.
 – 

the knee motion while the femur and tibial condyles remain in mutual 
contact. 
The proposed ESMs (Fig. 1) model the ACL, PCL and MCL by means 
of three binary links each joined to the tibia and to the femur by a 
universal joint (U) and a spherical pair (S) respectively, and consider two 
contact points between the condyle surfaces. Different approximations of 
the surfaces lead to different mechanisms. In (Wilson and O’Connor, 
1997; Wilson et al., 1998), the femur condyles V1 and V2 are spherical and 
the tibia condyles S1 and S2 are planar (Fig. 1(a) mechanism ESM-1). In 
(Parenti-Castelli and Di Gregorio, 2000) both the femur (V1, V2) and tibia 
(G1, G2) condyles are spherical surfaces (Fig. 1(b) mechanism ESM-2), 
whereas in (Di Gregorio and Parenti-Castelli, 2003) all condyles are 
i
i
 
taken from cadavers. 
This paper focuses on the knee orthoses, i.e. on orthopedic devices 
which support or fully replace the functionality of the human knee 
The knee orthoses available on the market mainly try to replicate the 
femur-tibia motion by means of a revolute pair whose axis must be 
cleverly located (Schache et al., 2005). This is an empirical approach 
based on a rough approximation of the actual motion which is indeed a 
complex spatial motion. Up to now the ESMs have not been exploited to 
build orthoses. Orthoses based on ESMs could be devised either to re-
establish the complete functionality of the knee articulation or selectively 
 
 
 
femur
tibia
S
PCL
MCL
ACL
1
C
C2
V
S2
2
V1
S1
U
 
femur
tibia
PCL
MCL
ACL
U
S
1
C
C2
V2
V1
2
D
D1
2
1
G
G
 
 
(a) 
(b) 
 
Figure 1.  Equivalent spatial mechanisms of the knee: (a) ESM-1, (b) ESM-2  
168 
R. Di Gregorio and V. Parenti-Castelli
(Thoumie et al., 2001). 
centers of the spherical surfaces. The geometry of the ESMs was deter-
mined by slightly adjusting the measurements on the knee specimen 
support (replace) specific structures of the knee which are injured or do not 
general smooth surfaces. In Fig. 1 points C , i = 1,2, and D , i = 1,2 are the 
.

Taking as a reference for the orthosis design an equivalent mechanism 
of the knee passive motion could be considered as a limitation. However, 
In this paper, the potentiality of using ESM-1 and/or ESM-2 as a basic 
reference for building orthoses for either a single patient or a class of 
them, is investigated. Issues on both the measurement of the tibia-femur 
spatial motion in the healthy knee and the determination of the 
corresponding ESM geometry are addressed. Finally, guidelines for the 
design of new orthosis architectures capable either for global or selective 
re-habilitation actions are presented. 
 
2.  
The synthesis of an ESM requires: (i) the data to compute the passive 
motion of the healthy knee and (ii) the topology of the ESM to synthesize. 
Then, synthesis algorithms can be applied to determine the ESM 
geometry that replicates the assigned knee motion. 
 
2.1  
Measurement of the relative passive motion between the femur and 
tibia can be performed by several techniques (DellaCroce et al., 2005; 
Freeman and Pinskerova, 2005), provided external loads are somehow 
compensated. Compliant-adaptive and haptic devices can be also used to 
this purpose.  
Data collection consistent with the anatomical parameters of the 
patients is another important issue. Indeed, direct measurements on the 
measurements performed on the other healthy knee of the patient (if 
possible) or by adjusting data taken from a database of a class of people 
the patient belongs to (same age, sex, height, etc.). 
In the first case it seems reasonable to reconstruct the motion of the 
damaged knee from the motion of the other knee under the hypothesis 
that the two motions are symmetric with respect to the sagittal plane. In 
other words a one-to-one correspondence between shin-thigh relative 
169 
Parallel Mechanisms for Knee Orthoses
work properly. The use of the ESMs for such applications requires effi- 
cient techniques both for the measurement of the knee motion and for the 
determination of the ESMs’ geometry.  
-
this approximation is believed to be of the same order of other  un  
Determination of the ESMs’ Geometry 
Motion Data of the Healthy Knee 
The problem, however, can be solved in different ways. For instance, by 
patient under treatment might not be possible for various reasons. 
certainty factors such as, for instance, measurement errors, and there-
fore acceptable.  

poses of one leg is established with the shin-thigh relative poses of the 
other leg. The relationships that provide the motion data of one knee 
from those of the other can be explicitly written by using the notations of 
Fig. 2. In Fig. 2, O is a point of the sagittal plane. nn is a unit vector 
perpendicular to the sagittal plane. Bi, are points embedded in the left 
thigh. B’i, are points that are symmetric to Bi, with respect to the sagittal 
plane, and are fixed to the right thigh. Ai, are points embedded in the left 
shin. A’i, are points that are symmetric to Ai, with respect to the sagittal 
plane, and are fixed to the right shin. 
With these notations, the following vector relationships hold: 
 
 
(AA’i  OO) = [113  2 nn nnT] (AAi  OO) 
(1) 
 
(BB’i  OO) = [113  2 nn nnT] (BBi  OO) 
(2) 
 
where 113 is the 3 u 3 identity matrix, and T is for transpose. 
If the coordinates, in a Cartesian reference system, of the points Ai 
and Bi (A’i and B’i) are available from measurements on the healthy leg, 
the coordinates of the points A’i and B’i (Ai and Bi), in the same reference 
system, can be computed through relationships (1) and (2). Once the 
coordinates of shin points and of thigh points are known for each leg 
posture the shin-thigh relative pose parameters can be calculated and 
referred to a set of standard reference systems (Grood and Suntay (1983). 
2.2  
Synthesis of the ESM 
The determination of the ESM’s geometry may resort to the solution of 
a rigid body guidance problem. The shin (thigh) is the guided body, the 
thigh (shin) is the frame, the healthy knee motion data provides the path 
to generate, and the topology of the one-dof mechanism to synthesize is 
that of ESM-1 or ESM-2. 
The solution of the body guidance problem can be addressed either (I) 
points). The second one consists in the minimization of an objective 
function which somehow measures the “distance” between the path of the 
guided body and the path to generate. 
 
2.2.1 Precision point techniques: The techniques based on precision 
points usually start writing, in all the assigned poses, the equations that 
express the  constraint, on  the  guided  body  motion, due   to each  serial 
kinematic chain (leg) which connects the guided body to the frame. The 
resulting system  has the  geometric parameters of each leg as unknowns  
170 
R. Di Gregorio and V. Parenti-Castelli
through techniques based on precision points, or (II) through optimi-
zation techniques. The first technique consists in imposing that the
guided body assumes a finite number of assigned poses (precision 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
O
A2
A1
A3
B2
B1
B3
A'
2
A'
1
A'3
2
B'
B'3
B'1
Left Thigh
Left Shin
Right Thigh
Right Shin
Sagittal Plane
Figure 2.     Notations 
and can be arranged into a number of decoupled subsystems equal to the 
number of the different leg topologies that appear in the one-dof 
mechanism to synthesize. Then, all the subsystems are separately solved. 
Finally, the solutions of each subsystem are combined with the 
solutions of the other subsystems, according to the combinatorial 
calculus’ rules, for generating the geometry of all mechanisms that make 
the guided body move through the assigned poses. If the number of 
assigned poses is sufficient to write a number of equations equal to the 
number of the unknown geometric parameters for each subsystem, a 
finite number of mechanism geometries will be obtained.  
of a wide number of leg topologies have been presented in (Chen and 
Roth, 1969a, 1969b; Nielsen and Roth, 1995; Wampler et al., 1990). 
Moreover, some papers (Innocenti, 1995; Liao and McCarthy, 2001; Di 
Gregorio, 2005) have found the analytic solution of leg topologies that are 
particularly interesting for the applications. 
The ESM-1, has two different leg topologies (Fig. 1(a)): three legs of 
US topology and two sphere-plane contact pairs, each kinematically 
equivalent to a leg of RRS topology (R is for revolute pair, the spherical 
pair S is centered in C1 (C2) and the two revolute pairs have axes 
orthogonal to the plane S1 (S2). This, in fact,  constrains the point C1 (C2) 
to move in a plane parallel to S1 (S2) at a distance equal to the radius of 
171 
Parallel Mechanisms for Knee Orthoses
General methodologies for writing and solving the constraint equations 
n
.

the spherical condyle V1 (V2)). Analogously, the contact sphere-sphere in 
the ESM-2 (Fig. 1(b)) can be modeled by a leg of US topology with U and 
S pairs centered at points D1 (D2) and C1 (C2) respectively. Therefore, 
from a kinematic viewpoint, the ESM-1 and ESM-2 are one-dof fully 
parallel mechanisms with three legs of type US plus two legs of type 
RRS, and with five legs of type US respectively. 
A US leg makes the distance between a point of the guided body and a 
point of the frame constant. Such a geometric constraint is analytically 
expressed by one scalar equation with seven geometric parameters: the 
three coordinates of the guided-body’s point, the three coordinates of the 
unknowns will result. This system was analytically solved (Innocenti, 
1995) and reduced to the solution of a 20th degree univariate polynomial 
equation. Therefore, the system admits 20 solutions in the complex field 
and at most 20 real solutions. 
An RRS leg makes a point of one body move on a plane belonging to 
the other body. The analytic expression of this constraint is a scalar 
equation with six geometric parameters: the three coordinates of the 
point and the three parameters which identify the location of the plane 
(e.g. two components of the unit vector normal to the plane, and the 
signed distance of the plane from the origin of the Cartesian reference 
system). Thus, if six poses are assigned, a system of six equations in six 
unknowns will result. Such a system was analytically solved (Nielsen 
and Roth (1995) and reduced to the solution of a 10th degree univariate 
polynomial equation. Therefore, it admits 10 solutions in the complex 
field and at most 10 real solutions. 
Thus, by using the rules of the combinatorial calculus, the ESM-1 
geometries that solve the body guidance problem are at most the 
 
 
 
(3) 
51300
2
10
3
20
 
¸¸
¹
·
¨¨
©
§
¸¸
¹
·
¨¨
©
§
 
The ESM-2 geometries that solve the same problem are at most the 
combinations in quintets of the 20 solutions of the US leg, that is: 
 
 
 
(4) 
15504
5
20  
¸¸
¹
·
¨¨
©
§
 
172 
R. Di Gregorio and V. Parenti-Castelli
frame’s point and the constant distance between the two points. Thus,  
if seven poses are assigned, a system of seven equations in seven 
combinations in triplets of the 20 solutions of the US leg by the combi-
nations in couples of the 10 solutions of the RRS leg, that is: 

Despite the high number of complex solutions, the real solutions are in 
general much less than 20 for the US leg and less than 10 for the RRS 
leg. Therefore, the number of real mechanisms’ geometries dramatically 
reduces, and, sometimes, there is no real geometry for one or the other 
mechanism topology. Moreover, the order that the assigned poses must 
follow to reproduce the knee motion and the smoothness of the path 
performed by the guided body between two successive assigned poses are 
not guaranteed. 
 
optimization techniques can be used. One technique to introduce an 
optimization criterion is to arbitrarily change one (or more than one) 
assigned pose until the path performed by the guided body is 
satisfactory. This approach reduces the number of precision points, but 
still maintains some of them. 
In general, optimization techniques use the constraint equations in a 
great number (much more than 7) of poses, and calculate the geometric 
parameters (which now are much less than the equations) by minimizing 
an objective function related to the sum of the absolute values of the 
errors in each equation. For instance, one objective function might be the 
mean square root of the errors. These techniques allow the introduction 
of equations that take into account some limitations on the values of the 
searched geometric parameters. The main drawback of this approach is 
that the equations are nonlinear which makes the resulting optimization 
process cumbersome. Moreover, the computed mechanism geometry does 
not make the guided body pass through any assigned pose even though 
its path is near to the desired path. 
3.  
Once a satisfactory geometry of ESM-1 or ESM-2 has been identified, 
the design stage of the orthosis starts. The design problem is now to 
manufacture the identified ESM by satisfying the following conditions: 
(a) all the kinematic chains, i.e. the legs of type US and RRS must be 
external to the patient’s knee; (b) the joints of the legs must be simple 
and free of problems like jamming; (c) the workspace of each leg must 
contain the path to generate; (d) when the orthosis is applied to the 
patient’s leg, the patient should still be able to wear trousers.  
All legs in the ESM-1 and ESM-2 are of type US or RRS, that is of type 
5R if considering that a U joint and an S spherical pair are in practice 
kinematically equivalent, respectively, to an RR chain with the two R 
axes intersecting each other and to an RRR chain with the three R axes 
intersecting at one common point. Figures 3(a) and 3(b) show a schematic 
173 
Parallel Mechanisms for Knee Orthoses
2.2.2 Optimization techniques: In order to overcome these drawbacks, 
Design of the Orthosis 

of a 5R leg kinematically equivalent to a US leg (Fig. 3(a)) and to an RRS 
leg (Fig. 3(b)) respectively. 
A 5R leg can satisfy all the above said conditons. Indeed, condition (a) 
is easily satisfied since the hardware of the revolute pairs can be 
arbitrarily located along their axes. Condition (b) is satisfied because the 
revolute pairs do not undergo jamming. Condition (c) can be satisfied by 
suitably sizing the geometric parameters of the 5R chain. Finally, when a 
US leg is manufactured, the leg hardware can be confined into a thin 
shell located near the patient’s knee. Moreover, when an RRS leg is 
manufactured, the planar RR chain  that reproduces the motion of the 
condylar contact point in the 5R leg  in the worst conditions (considering 
that experimental data reported in (Wilson et al., 1998) show that the 
condylar contact point moves inside a rectangle whose sides are shorter 
than 40 mm) does not occupy regions farther than 25 mm from the 
patient’s knee. Therefore, condition (d) can be satisfied too. 
The endings of each 5R leg are connected to rigid rings fixed to the 
thigh (guided body in Figures 3(a) and 3(b)) and to the shin (frame in 
Figures 3(a) and 3(b)) respectively by means of braces (Fig. 3 (c)). 
It is worth noting that for both ESM-1 and ESM-2, each 5R leg has an 
anatomical structure as a direct counterpart: namely a ligament or a 
condylar surface contact pair. Therefore, when only one or a few specific 
anatomical structures of the knee must be replicated by the orthosis, the 
ESM synthesis can be focused on the corresponding 5R legs of the 
mechanism, so that the synthesized ESM fairly reproduces the motion 
constraints due to those structures. The correspondence between the legs’ 
geometry and the articular structures to be replaced can be checked 
through    radiographs    before   the   orthosis   is   sized.  After   such   a  
 
 
 
frame
guided body
 
 
 
 
 
 
 
 
 
 
(a) 
(b) 
(c) 
frame
guided body
 
 
Figure 3. 5R kinematic chains: (a) US leg (sphere-sphere contact), (b) RRS leg 
(sphere-plane contact), (c) 5R legs applied to the knee 
174 
R. Di Gregorio and V. Parenti-Castelli
–
–
. 

correspondence is verified, an orthosis, which contains only the legs 
corresponding to the damaged structures of the knee, can be 
manufactured. This opportunity is particularly appealing for the post-
reconstruction therapy of many knee traumas. For instance, the 
reconstruction of a knee ligament is frequent among players of many 
popular sports, and ligament breakdowns occur both to professional 
players and to amateurs. 
4.  
Conclusions  
A procedure has been presented that leads to design novel knee 
orthoses inspired by equivalent spatial mechanisms (ESM) proposed 
recently in the literature for replicating the human knee passive motion. 
In particular, in-vivo measurement issues of knee motion as well as 
techniques for the synthesis of ESM have been addressed. Finally, 
guidelines for the design of new orthoses that can reestablish either the 
complete functionality of the knee articulation or selectively only the 
functionality of the injured knee structures have been presented. 
Acknowledgments 
Fruitful discussions with Federico Corazza and Alberto Leardini at 
IOR (Orthopedic Rizzoli Institute) are gratefully acknowledged. 
This paper has been supported by funds of the Italian MIUR. 
References 
Chen, P. and Roth, B., 1969a, “A unified theory for the finitely and 
infinitesimally separated position problems of kinematic synthesis,” ASME J. 
of Engineering for Industry, Vol. 91B, pp. 203-208. 
Chen, P. and Roth, B., 1969b, “Design equations for the finitely and 
infinitesimally separated position synthesis of binary links and combined link 
chains,” ASME J. of Engineering for Indus ry, Vol. 91B, pp. 209-219. 
t
c
f
c
DellaCroce, U., Leardini A., Chiari L., and Cappozzo, A., 2005, “ Human 
movement analysis using strereophotogrammetry. Part 4: assessment of 
anatomical landmark dislocation and its effects on joint kinematics, Gait & 
Posture, 21, pp. 226-237. 
Di Gregorio, R., 2005, “On the polynomial solution of the synthesis of five plane-
sphere contacts or PPS chains that guide a rigid body through six assigned 
poses,” Proc. of the 2005 ASME Design Engineering Techni al Con eren es, 
Long Beach, California (USA), Paper No: DETC2005-84788. 
Di Gregorio, R. and Parenti-Castelli, V., 2003, “A Spatial Mechanism with Higher 
Pairs for Modelling the Human Knee Joint ”,  ASME Journal of Biomechanical 
Engineering, Vol. 125, Issue 2 (April 2003), pp. 232-237. 
 
175 
Parallel Mechanisms for Knee Orthoses
”

Freeman, M.A.R., and Pinskerova, V., 2005 “The movement of the normal tibio-
femoral joint,” Journal of Biomechanics, 38, pp. 197-208.  
Fuss, S.K., 1989, “Anatomy of the cruciate ligaments and their function in 
extension and flexion of the human knee joint,” American Journal of Anatomy, 
184, pp. 165-176.  
Goodfellows, J.D., and O’Connor, J.J., 1978, “The mechanics of the knee and 
prosthesis design,” Journal of Bone Joint Surgery [Br] 60-B, pp. 358-369.  
Grood, E.S., and Suntay, W. J., 1983, “A joint coordinate system for the clinical 
description of three-dimensional motion: application to the knee,” ASME 
Journal of Biomechanical Engineering, Vol. 105, pp. 136-144.  
Innocenti, C., 1995, “Polynomial solution of the spatial Burmester problem,” 
ASME J. of Mechanical Design, Vol. 117, No. 1, pp. 64-68. 
Liao, Q. and McCarthy, J.M., 2001, “On the seven position synthesis of a 5-SS 
platform linkage,” ASME J. of Mechanica  Des gn, Vol. 123, No. 1, pp. 74-79. 
l
i
Nielsen, J. and Roth, B., 1995, “Elimination methods for spatial synthesis,” 
Computational Kinematics, J.P. Merlet and B. Ravani eds., Vol. 40 of Solid 
Mechanics and its Applications, pp. 51-62, Kluwer Academic Publishers. 
O’Connor, J.J., Shercliff, T.L., Biden, E., and Goodfellow, J.W., 1989, “The 
geometry of the knee in the sagittal plane,” Proceedings, institute of 
Mechanical Engineering Part H. Journal of  ngineering in Medicine, 203, pp. 
223-233. 
Ottoboni, A., Parenti-Castelli, V., and Leardini, A., 2005, “On the limits of the 
articular surface approximation of the human knee passive motion models,” 
Proc. of the XVII AIMETA Congress, Florence, Italy, Paper No: 228. 
Parenti-Castelli, V., and Di Gregorio, R., 2000, Parallel mechanisms apply to the 
human knee passive motion simulation, Advances in Robot Kinematics, ds. 
 J. and Stanisic M. M., Kluwer Academic Publishers, Netherlands, 
ISBN 0-7923-6426-0, pp. 333-344. 
Parenti-Castelli, V., Leardini, A., Di Gregorio, R. and O’Connor, J.J., 2004, “On 
the modeling of passive motion of the human knee joint by means of 
equivalent planar and spatial parallel mechanisms,” Autonomous Robots, Vol. 
16, issue 2 (March 2004), pp. 219-232. 
Schache, A. G., Baker, R., and Lamoreux L. W., 2005, “Defining the  knee  join 
flexion-extension axis for purposes of quantitative gait analysis: An evaluation 
of methods,” Gait & Posture, in press. 
Thoumie, P.  Sautreuil, P.  and  Mevellec, E.  2001, “Orthèses de  genou. 
Évaluation de l’efficacité clinique à partir d’une revue de la littérature,” Ann 
Readaptation Med Phys, 44, pp. 567-580.  
Wampler, C.W., Morgan, A.P. and Sommese, A.J., 1990, “Numerical continuation 
methods for solving polynomial systems arising in kinematics,” ASME J. of 
Mechanical Design, Vol. 112, No. 1, pp. 59-68. 
Wilson, D.R., and O’Connor, J.J., 1997, “A three-dimensional geometric model of 
the knee for the study of joint forces in gait,” Gait and Posture, 5, pp. 108-115.  
Wilson, D.R., Feikes, J.D., and O’Connor, J.J., 1998. “Ligament and articular 
contact guide passive knee flexion,” Journal of Biomechanics, 31, pp. 1127-
1136. 
 
176 
R. Di Gregorio and V. Parenti-Castelli
E
Lenarˇciˇc
e
,
,
 ,
 ,
“
” 
,
 ,

MODELING TIME INVARIANCE IN
HUMAN ARM MOTION COORDINATION
Satyajit Ambike
The Ohio State University, Department of Mechanical Engineering
Columbus, OH USA
ambike.1@osu.edu
James P. Schmiedeler
The Ohio State University, Department of Mechanical Engineering
Columbus, OH USA
schmiedeler.2@osu.edu
Abstract
This paper proposes that two-degree-of-freedom Curvature Theory pro-
invariant kinematic model is fundamental to human motor coordination,
Curvature Theory provides a concise, eﬃcient mapping of a desired out-
put trajectory geometry to the joint angles’ instantaneous speed ratios.
If the speed ratios for a motion are learned through experience, one can
subsequently execute the motion at diﬀerent speeds. This formulation
is consistent with a structure for the internal model that the central ner-
vous system may use as a feed-forward element for planning motions.
A simple example is presented to illustrate how the model works.
Keywords: Human motor coordination, arm kinematics, Curvature Theory
1.
Introduction
A well-recognized theory in modern motor control research suggests
that through experience, the central nervous system (CNS) builds and
maintains internal models of the motor apparatus and external world
(Atkeson, 1989). Experimental work (Flanagan et al., 1999 and Lac-
quaniti et al., 1982) shows that separate internal kinematic and dynamic
models are consistent with typical behavior. Further evidence indicates
that the internal kinematic model separates time-invariant and time-
dependent aspects of motion.
Hand path shape in reaching, often a
straight line, is independent of trajectory speed, and tangential hand ve-
locity has a single, bell-shaped curve regardless of magnitude (Atkeson &
Hollerbach, 1985, Morasso, 1981, Soechting & Lacquaniti, 1981). Fixed
relations between instantaneous elbow and shoulder angular positions
© 2006 Springer. Printed in the Netherlands.
177
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 177–184.
vides a mathematical representation of the kinematics of planar human
arm motion coordination. Arguing that an internal inverse, time-

are observed across a range of tasks and speeds (Lacquaniti & Soechting,
1982, Soechting & Lacquaniti, 1981). Based on these observed time in-
variances in human movement, this paper theorizes that the fundamental
internal model employed for motor coordination is based on a geometric
mapping of position and higher order motion properties. While signiﬁ-
cant research has focused on explaining observed hand trajectories with
dynamics-based theories (Hollerbach & Flash, 1982), this work proposes
that an internal inverse dynamic model is an additional layer of a uniﬁed,
coherent model for motion planning whose foundation is kinematic. The
separation oﬀers computational beneﬁts compared to an exclusively dy-
namic model in which the mappings for geometrically equivalent motions
would be stored completely separate from one another.
Consider that a pianist sight-reading a piece of new music plays the
notes more slowly than prescribed by the piece, but in proper relation
to one another. At this stage, he is learning the kinematic geometry
of the ﬁnger motion
represented in a mathematical model by the in-
stantaneous speed ratios.
Experimental studies show that the ratios
between interstroke intervals in piano playing are in fact independent
of duration (Soechting et al., 1996). After gaining experience with the
piece, he “plays back” the same kinematic ﬁnger geometry at increas-
ing speed until mastering it at the proper tempo. When teaching the
piece to someone else, though, the pianist can still demonstrate it at
slower speeds because his CNS has learned the piece by separating the
time-invariant and time-dependent aspects of the motion.
Roth, 2004 showed how to derive geometric properties from time-
based planar 1-DOF motions and to determine all time-dependent mo-
tions that generate trajectories with identical geometric properties. His
work inspired the idea introduced in this paper that Curvature The-
ory oﬀers a compact mathematical representation of the internal inverse
kinematic model humans use for motor coordination. The focus here,
though, is 2-DOF motion, so the formulation follows closely Lorenc et al.,
1995, who presented a general form of planar 2-DOF Curvature Theory
and applied it to trajectory generation in planar path tracking systems.
While they suggested use of a processed video image to calculate the
instantaneous speed ratios required for coordination of robotic systems,
humans are more likely to “learn” the speed ratios required to execute
a desired motion over the course of several motions. Furthermore, the
CNS likely applies the internal kinematic model for motion planning in
a feed-forward control loop augmented by a feedback loop that allows
adaptation to novelty in the current situation (Atkeson, 1989).
This paper applies 2-DOF Curvature Theory to be a mathematical
description of how a human’s internal kinematic model could be built
178 
S. Ambike and J.P. Schmiedeler
–

Figure 1.
General planar motion of a point P in moving frame M.
over the course of several hand motions. This building of the internal
model may be how the CNS learns to coordinate arm movement. The
motivation for the work is ultimately to achieve a better understand-
ing of human motor coordination, with potential applications such as
enhancing rehabilitation for stroke patients.
2.
Internal Kinematic Model
The internal kinematic model for planning multi-joint arm movements
is an inverse model that maps desired hand motion to required shoul-
der and elbow motions. Time invariance provides for model compact-
ness, which should reduce the CNS’s computational load. The proposed
mathematical representation of this model assumes that wrist motion is
decoupled from elbow and shoulder motions to separate the problems of
positioning and orienting the hand, which has been observed in human
reaching (Lacquaniti & Soechting, 1982). The formulation also assumes
that motion planning takes place in the visual coordinate system deﬁning
the output space and sensing takes place in a kinesthetic coordinate sys-
tem deﬁning the control space (Soechting & Lacquaniti, 1981, Morasso,
1981). The model focuses on planar reaching motions, which involve
only the 2 DOF’s associated with positioning the wrist in the plane.
Mathematical Formulation. Frame M
is shown in Fig. 1. The coordinates of the
179 
Modeling Time Invariance in Human Arm Motion Coordination
moving in a plane with res-
pect to ﬁxed frame F

Figure 2.
Planar RR representation of the human arm with the canonical coordinate
system located at the elbow.
origin of M in F are (a, b), and φ is the orientation of M with respect
to F. Point P has coordinates (x, y) in M and (X, Y ) in F, related as,
 X
Y

=
 cos φ
−sin φ
sin φ
cos φ
  x
y

+
 a
b

.
(1)
If point P is the wrist center, M is ﬁxed in the forearm and F is ﬁxed
in the trunk for purposes of positioning the hand relative to the body.
An additional transformation would be required to relate these frames
to the environment since the trunk-ﬁxed and visual coordinate systems
do not coincide (Schmiedeler et al., 2004). In Fig. 2, the arm is repre-
sented by the two-link RR open chain in which OA and A indicate the
shoulder and elbow joints, respectively. The angular displacements of
the upper arm and forearm are λ and µ, and the motion variables are
functions of these: a = a(λ, µ), b = b(λ, µ), φ = φ(λ, µ). Without loss of
generality, the depicted position is taken to be the zero position. Using a
trailing subscript to indicate a derivative evaluated in the zero position

i.e. Xλ = ∂X
∂λ |λ,µ=0, Yλµ = ∂2Y
∂λ∂µ|λ,µ=0

, the second-order Taylor series
expansion of Eq. 1 about the zero position is,
 X
Y

=
 x + Xλλ + Xµµ + 1
2(Xλλλ2 + 2Xλµλµ + Xµµµ2)
y + Yλλ + Yµµ + 1
2(Yλλλ2 + 2Yλµλµ + Yµµµ2)

,
(2)
where Xλ = aλ−yφλ, Yλµ = bλµ+xφλµ−yφλφµ, etc. The time dependent
180 
S. Ambike and J.P. Schmiedeler

motion of point P with respect
F is obtained by diﬀerentiating
 ˙X
˙Y

=
 (−yφλ + aλ) ˙λ + (−yφµ + aµ) ˙µ
(xφλ + bλ) ˙λ + (xφµ + bµ) ˙µ

,
(3)
 ¨X
¨Y

=
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
[−yφλ + aλ]¨λ + [−yφµ + aµ]¨µ
+[−x(φλ ˙λ + φµ ˙µ)φλ −y(φλλ ˙λ + φλµ ˙µ) + aλλ ˙λ + aλµ ˙µ] ˙λ
+[−x(φλ ˙λ + φµ ˙µ)φµ −y(φµµ ˙µ + φλµ ˙λ) + aµµ ˙µ + aλµ ˙λ] ˙µ
[xφλ + bλ]¨λ + [xφµ + bµ]¨µ
+[x(φλλ ˙λ + φλµ ˙µ) −y(φλ ˙λ + φµ ˙µ)φλ + bλλ ˙λ + bλµ ˙µ] ˙λ
+[x(φµµ ˙µ + φλµ ˙λ) −y(φλ ˙λ + φµ ˙µ)φµ + bλµ ˙λ + bµµ ˙µ] ˙µ
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎭
.
(4)
The simplest description of the motion is obtained in the canonical co-
ordinate system (Bottema & Roth, 1979), which is desirable to provide
for model compactness. The canonical system satisﬁes three conditions:
1) frames M and F are instantaneously coincident in the zero position,
2) the Y y axes are aligned with the polar line, which in this case passes
through the shoulder and elbow joints, and 3) the instantaneously co-
incident origins of M and F are placed on the polar line such that at
least one of the three second order Taylor coeﬃcients bλλ, bλµ, and bµµ
has zero magnitude. The remaining non-zero Taylor coeﬃcients are the
instantaneous invariants. With the canonical coordinate system located
at the elbow, as shown in Fig. 2, the instantaneous invariants for the
planar RR mechanism are aλ = −l1, φλ = 1, φµ = 1, and bλλ = −l1.
3.
Discussion
According to the proposed model, the instantaneous invariants ob-
tained here mathematically would be “learned” by the CNS. The CNS
would likely use information gathered over a substantial period of time
and resulting from many hand motions to determine the invariants. This
can be represented mathematically as the generation of Eqs. 3 and 4
multiple times over several hand motions and then solved simultaneously
for the invariants. This activity would be a continuous process when an
individual is growing since the length of the upper arm l1 changes. Even
later, reﬁnement in the values of the invariants would be anticipated,
given that data obtained by the CNS is likely to contain noise.
The CNS’s planning and control of a desired new hand motion can
be explained in terms of the present model as follows. A target toward
which the hand will reach is typically deﬁned in the visual coordinate
181 
Modeling Time Invariance in Human Arm Motion Coordination
Eq. 2 with respect to time.
to

system, and the corresponding hand path, typically a straight line, is
planned in the same coordinate system. The instantaneous geometry
of the path is thus deﬁned, and the CNS maps the path geometry to
instantaneous ﬁrst and second order speed ratios of the arm n and n′,
where n =
˙λ
˙µ and n′ =
¨λ
¨µ. Lorenc et al., 1995 show that the speed ratios
can be expressed in terms of the geometry of the path,
n = −aλ −θλyp
aµ −θµyp
(5)
n′ = n′ (aλ, aµ, θλ, θµ, aλλ, aµµ, aλµ, θλλ, θµµ, θλµ, n, (PJ)x) ,
(6)
where yp is the distance from the origin to the instant center and (PJ)x
is the projection of the inﬂection circle’s diameter through the instant
center onto the Xx axes. For the planar RR mechanism in Fig. 2, the
speed ratios are n = −yp+l1
yp
and n′ = (1+n)3(PJ)x
l1
.
The CNS does not measure yp and (PJ)x. Rather, these geometric
quantities represent in the present formulation the mapping that the
CNS learns through experience and updates with each new movement.
Once the speed ratios are obtained, the joint angles λ and µ can be
controlled using the second order Taylor series,
µ = nλ + 1
2n′λ2,
(7)
or its inverse that expresses λ as a function of µ. Regardless, the two
parameters are coordinated to instantaneously achieve the desired hand
motion. Further, the desired path can be traversed at any speed, as ˙λ
and ¨λ can be chosen arbitrarily and ˙µ and ¨µ can be computed (or vice
versa) for the same speed ratios n and n′.
Since only second order coordination of λ and µ is presented here, the
model would require regular recalculation of speed ratios to accurately
track a desired hand path. As the hand moves away from the position
in which the speed ratios were calculated, the error in path-tracking
increases. Higher order coordination would reduce the error and require
less frequent updates for accurate tracking, suggesting a computational
trade-oﬀbetween this approach and the regular updating of lower order
coordination. To detect these errors, visual and/or kinesthetic feedback
is required and would generally be expected throughout the course of the
motion. When an unanticipated disturbance is encountered, the desired
instantaneous path may be entirely redeﬁned. The speed ratios can be
obtained again, with the motion shifting toward the new target.
182 
S. Ambike and J.P. Schmiedeler

Figure 3.
Example of motion planning showing desired and actual hand paths.
4.
Numerical Example
As an example, the arm segment lengths are taken to be l1 = l2=500
mm. An arbitrary zero position of the arm-segments in which the fore-
arm is at an angle of 98 degrees relative to the Xx axis is shown in Fig.
3. The target location expressed in the canonical coordinate system is
( 183.4 mm, 134.8 mm), so the desired straight-line hand path toward
the target is 378 mm long. The instant center and inﬂection circle are
p=473.2 mm and
(PJ)x = 367.4 mm, along the Yy and Xx axes, respectively. Eqs. 5 and
6 yield speed ratios of n= 2.06 and n′=0.87, and Eq. 7 is then used
to compute angles λ and µ. In Fig. 3, λ is plotted in 5-degree incre-
ments to illustrate the motion. Near the zero position, the hand motion
closely tracks the desired path, but after λ has been incremented by 30
degrees, the hand position deviates from the path by 24.5 mm. This
highlights the need for regular feedback to update the motion planning
accomplished with the internal kinematic model.
5.
Conclusion
This work applies an established formulation of 2-DOF Curvature
Theory to the coordination of planar human arm motion. The result is a
concise and computationally eﬃcient model explaining the kinematics of
planar arm motion. The model requires knowledge of the instantaneous
invariants and the geometry of the desired path.
The invariants are
the same for any planar motion, and the path tangent and curvature
represent the novelty in each situation. Mathematically, the invariants
are formulated, and the path properties measured.
By analogy, the
CNS must learn through experience the mapping between the trajectory
183 
Modeling Time Invariance in Human Arm Motion Coordination
–
–
constructed, but not shown in the ﬁgure, to obtain y
–

tangent and curvature in the output space (hand path and curvature)
and the control space (ﬁrst and second order joint angle speed ratios)
that is mathematically deﬁned by these geometric quantities. Since the
mapping is time invariant, a motion can be repeated at any speed. The
model also oﬀers an explanation as to how a feed-forward and a feed-
back system may be employed by the CNS to coordinate the arm motion
with limited computational eﬀort.
6.
Acknowledgements
This material is based upon work supported in part by the National
Science Foundation under Grant No. #0546456 to J. Schmiedeler.
References
Atkeson, C.G. (1989), Learning arm kinematics and dynamics, Annual Review of
Neuroscience, vol. 12, pp. 157–183.
Atkeson, C.G., & Hollerbach, J.M. (1985), Kinematic features of unrestrained arm
movements, Journal of Neuroscience, vol. 5, no. 9, pp. 2318–2330.
Bottema, O., & Roth, B. (1979), Theoretical Kinematics, Amsterdam, North Holland.
Flanagan, J.R., Nakano, E., Imamizu, H., Osu, R., Yoshiyoka T., & Kawato, M.
(1999), Composition and decomposition of internal models in motor learning under
altered kinematic and dynamic environments, Journal of Neuroscience, vol. 19,
no. 20, RC34.
Hollerbach, J.M., & Flash, T. (1982), Dynamic interactions between limb segments
during planar arm movement, Biological Cybernetics, vol. 44, pp. 67–77.
Lacquaniti, F., & Soechting, J.F. (1982), Coordination of arm and wrist motion during
a reaching task, Journal of Neuroscience, vol. 2, no. 4, pp. 399–408.
Lacquaniti, F., Soechting, J.F., & Terzuolo C. (1982), Some factors pertinent to the
organization and control of arm movements, Brain Research, vol. 252, pp. 394–397.
Lorenc, S.J., Staniˇsi´c, M.M., & Hall, A.S. (1995), Application of instantaneous invari-
ants to the path tracking control problem of planar two degree-of-freedom systems:
A singularity free mapping of trajectory geometry, Mechanisms and Machine The-
ory, vol. 30, no. 6, pp. 883–896.
Morasso, P. (1981), Spatial control of arm movements, Experimental Brain Research,
vol. 42, pp. 223–237.
Roth, B. (2004), Time-invariant properties of planar motion, On Advances in Robot
Kinematics, Dordrecht: Kluwer Academic Publishers, pp. 79–88.
Schmiedeler, J.P., Stephens, J.J., Peterson, C.R., & Darling, W.G. (2004), Human
hand movement kinematics and kinesthesia, On Advances in Robot Kinematics,
Dordrecht: Kluwer Academic Publishers, pp. 163–170.
ments: Typing and piano playing, In: Bloedel, J.R., Ebner, T.J. and Wise, S.P.,
eds. Acquisition of motion behavior in vertibrates, Cambridge, MA: MIT Press,
pp. 343–359.
Soechting, J.F., & Lacquaniti, F. (1981), Invariant characteristics of a pointing move-
ment in man, Journal of Neuroscience, vol. 1, no. 7, pp. 710–720.
S. Ambike and J.P. Schmiedeler
184
Soechting, J.F., Gordon, A.M., & Engel, K.C. (1996), Sequential hand and ﬁnger move-

 
ASSESSMENT OF FINGER JOINT ANGLES 
AND CALIBRATION OF INSTRUMENTAL 
GLOVE  
Mitja Veber 
University of Ljubljana, Faculty of Electrical Engineering 
Laboratory of Robotics and Biomedical Engineering 
mitja.veber@robo.fe.uni-lj.si 
Tadej Bajd 
University of Ljubljana, Faculty of Electrical Engineering 
Laboratory of Robotics and Biomedical Engineering 
tadej.bajd@robo.fe.uni-lj.si 
Marko Munih 
University of Ljubljana, Faculty of Electrical Engineering 
Laboratory of Robotics and Biomedical Engineering 
marko.munih@robo.fe.uni-lj.si 
Abstract 
already proposed optimization methods for assessment of joint centers of 
rotation. The segment lengths acquired from statistical anthropometry and 
those from the calculated centers of rotation do not differ notably. The joint 
angles estimated by our method and those from centers of rotation, are also 
comparable. The proposed method requires small number of markers which 
makes it suitable for the calibration of an instrumental glove. The results of 
the glove calibration show that its accuracy is limited to ±5º. 
Keywords: 
1.  
Introduction  
Understanding of kinematics of grasping is a demanding task. 
Although first anthropomorphic hands were designed more than two 
decades ago, control of many degrees of freedom to carry out specific task 
remains to be a challenging problem. 
At the moment a generally accepted system for accurate noninvasive 
assessment of hand kinematics is not available. A well established 
Hand modeling, assessment of joint angles, instrumental glove calibration
The aim of the paper is to present a method for assessment of joint angles 
a kinematical model of human hand. The method was validated against 
in human fingers. The method is based on an optical tracking device and  
© 2006 Springer. Printed in the Netherlands. 
185
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 185–192. 

 
technique, which does not hinder the movement as exoskeletons do, 
includes reflective markers, which are placed over bony landmarks. Due 
to its accuracy, the method can be taken as a reference. Modeling of 
upper extremity or finger kinematics is performed by using rigid bodies, 
assumed that a marker attached to the rigid body traces out a sphere or 
circle. The difficulty in capturing hand kinematics originates from 
relatively large number of degrees of freedom concentrated in a very 
small place. Large skin artifacts compared to the distances between 
markers, make the reconstruction of a frame attached to the rigid body 
even more difficult. Besides, the range of motion of some joints is very 
small. As a consequence, characteristic patterns of the finger motion are 
to be used in finding the centers of rotation (Miyata et al., 2004). In this 
case the number of markers can be reduced. 
The main drawback of optical tracking system is occlusion of markers. 
manipulation of an object. The object of this work is to develop a method 
calibration of an instrumental glove. 
The instrumental glove has been used in many experiments. In most 
cases the raw data from the glove was used. Significant effort in 
experiment design was made to compensate the offset in the response, 
which occurs when the bend sensors are fully extended, and to estimate 
the sensitivity of individual bend sensor. The claim that the calibration 
of the glove can be carried out by a set of specific hand movements is 
misleading. By the movements across the whole range of motion in finger 
joints, only the active range of analog to digital converters can be 
established. For a hand with known range of joint motions, rough 
estimates of joint angles can be given. However, due to the nonlinear 
response of the bend sensors, the accuracy can not be estimated. We are 
method. The described deficiency of the instrumental glove is most often 
hidden behind the statistical analysis of the data measured. The second 
aim of this work was instrumental glove calibration and its validation 
against the reference method. 
186 
which are linked together with the ball or hinge joints. In the opti- 
mization methods (Halvorsen et al., 1999, Zhang et al., 2003), it is 
not suitable for assessment of hand kinematics during dexterous 
This deficiency becomes obvious when the number of markers is inc- 
reased and it is the main reason why an optical tracking system is  
not aware of any article which would describe the results of measure- 
ments in actual units and compare those results with a reference 
M. Veber, T. Bajd and M. Munih
the reconstruction of hand kinematics and would be suitable for the 
using the minimal possible set of markers,  which would still enable 

 
2.  
Methods  
2.1 
Hand kinematics can be described by Denavit-Hartenberg (D-H) 
notation. Four degrees of freedom (DOF) were used to describe each 
finger, two for metacarpophalangeal joint (MCP) flexion/extension (f/e) 
The center of wrist rotation was selected for the origin of the model. 
The base frame of the i-th finger ( i = 2, 3, 4, 5; j = 0 ) was attached to the 
center of i-th MCP joint. Transformation from the wrist frame to the i-th 
finger base can be described by Eq. 1, where PJi1x and PJi1z denote 
position of the i-th MCP joint relative to the wrist frame. Transformation 
from the frame j-1 to j ( j = 1, 2, …) can be described by Eq. 2, where 
parameters aj, dj, ǂj, and 4j denote translations along x and z axis and 
rotations around x and z axis respectively. 
 
    
 
 
 
 
0
1
1
(
,0,
)
(
/2)
( )
w i
i x
i z
trans PJ
PJ
roty
rotx
S
S
 

T
    
 
 
     (1) 
 
 
 
           
1,
(
)
(0,0,
)
(
,0,0)
(
)
j
j
j
j
j
j
rotz
trans
d trans a
rotx D

 
4
T
    
     (2) 
 
Position and orientation of the i-th fingertip can be obtained by post-
multiplication of transformation matrix in Eq. 1 by matrices from Eq. 2. 
i2
denotes 
i3 from PIP to DIP 
joint, 
i4 the length of i-th proximal phalanx.   
Table 1. Denavit-Hartenberg parameters for fingers 
 
4 
d 
a 
ǂ 
 
4 
d 
a 
ǂ 
4i1 
0 
0 
Ǒ/2 
 
4i3 
0 
PJi3 
0 
4i2 
0 
PJi2 
0 
 
4i4 
0 
PLi4 
0 
 
The model was parameterized by hand length and by palm width, as 
proposed by Buchholz et al., 1992. 
The joint angles were obtained by solving the inverse kinematics 
problem. Each finger is a serial manipulator with four internal variables 
q0, q1, q2, and q3 which are related to MCP ab/ad and MCP, PIP, and DIP 
f/e respectively. A direct solution of finger inverse kinematics can be 
Assessment of Finger Joint Angles and Instrumental Glove Calibration
187 
2.2 
Inverse Kinematics 
Kinematic Model of a Human and 
H
–
and PL
the distance from i-th MCP joint to PIP joint, PJ
D-H parameters are collected within Table 1 , where parameter  PJ
and abduction/adduction (ab/ad) and two for the proximal interphalangeal
(PIP) and distal interphalangeal (DIP) joint f/e. The model of a thumb is 
not covered in this paper.  

 
obtained when the fingertip position and its orientation are given. When 
only fingertip position M[XM, YM, ZM] is known, the simplification from 
Eq. 3 can be applied. It is justified as f/e angles of PIP and DIP joints are, 
due to the anatomical structure of ligaments, not independent. 
Coefficients c which describe the correlations of PIP and DIP joint angles, 
were reported by Kamper et al., 2003. 
 
3
2
q
cq
 
     
 
 
   
 
 
 
          (3) 
 
 
 

2
2
2
0
,
M
M
L
X
Y
    
 
 
 
 
 
 
     (4) 
 


2
2
2
1
2
2
2
0
0
2
3
2
cos
  
2
cos
,
prox
mid
prox
mid
dist
dist
L
L
L
L
L
q
L
L
L L
q
q
E
 


 




  
 
 (5) 
 
2
2
2
2
2
2
3
0
0
2
cos
2
cos
,
mid
dist
mid
dist
prox
prox
L
L
L
L
L
q
L
L
L L
E
 


 


      (6) 
 
     
 
 
 
 
 
 


1
arctan
.
M
M
q
Y
X
E
 

     
 
 
 
 
 
 
     (7) 
 
Its solution is obtained by numerical computation which yields the 
angles ǃ, q2, and q3. Internal coordinate q0 can be according to Fig. 1 B 
calculated from Eq. 8. However, if position of DIP joint is known, an 
explicit solution of the inverse kinematics for q0, q1, and q2 can be 
written, while a good approximation of q3 is obtained with Eq. 3. 
 
     
 
 
 
 
 
 
 
 

.
arctan
0
M
M X
Z
q  
     
 
 
 
 
 
 (8) 
 
 
 
 
 
 
 
 
 
 
 
188 
The triangle relationships in Fig. 1 A leads to a system of Eq. 4  to Eq. 7: 
Figure 1. Inverse kinematics of a finger, A flexion/extension, B abduction/adduction. 
A motion tracking system (Optotrak, Northern Digital Inc.) was 
used for validation of the model and DataGlove (DataGlove Ultra Series, 
5DT Inc., 14 DOF) kinematic calibration. The index and middle finger 
M. Veber, T. Bajd and M. Munih

 
kinematics of one subject, free from any musculoskeletal disorders, was 
considered. A set of two cameras was used in the investigation. Infrared 
markers were attached to the anatomical landmarks of the hand, above 
MCP, PIP, and DIP joints and on the fingertips. An additional three 
markers were attached to the hand dorsum. 
The initial data acquisition was performed for f/e of MCP joints with 
immobilized PIP and DIP joints, and f/e of PIP and DIP joints at fixed 
angle in MCP joints. The method validation and kinematic calibration of 
the glove comprised simultaneous f/e of MCP, PIP and DIP joints. The 
data from the motion tracking system and instrumental glove were 
recorded simultaneously. 
2.3 
A general method for lower or upper extremity joint axis and center of 
rotation (AoR, CoR) estimation is not appropriate for fingers. Satisfactory 
results can be obtained when markers are separated apart from each 
other as far as possible. This can be achieved by a small set of markers. 
3D parameter estimation problem for PIP and DIP joints was simplified 
to a 2D one, as proposed by Zhang et al., 2003. Parameters for estimation 
of PIP and DIP joint locations were obtained by minimizing a cost 
function defined by Eq. 9, where DPIP and DDIP denote the depths of PIP 
and DIP joints below surface marker and DPIPk and DDIPk the depths 
calculated for the k-th frame. N stands for the number of all frames. The 
average of the cost function is due to a non-uniform distribution of the 
acquired samples, weighted by wk. 
 






 
 



¦
2
2
1
N
k
PIPk
PIP
DIPk
DIP
k
C
w
D
D
D
D
   
 
 
     (9) 
 
The calculation of the cost function is explained in Fig. 2. Lmid and Ldist 
denote lengths of middle and distal phalange and m are the positions of 
markers. The lengths Ldist, Lmid, DDIP, and DPIP are changed during 
 
 
 
 
 
 
 
 
Figure 2.  Calculation of PIP and DIP joint centers of rotation 
Assessment of Finger Joint Angles and Instrumental Glove Calibration
189 
Finger Joints Centers of Rotation 
Eq. 9. 
optimization subjected to linear constraints to obtain the minimum of 
.

 
In the case of MCP joint improved results can be obtained by using the 
marker which is distant from the joint, as proposed by Miyata et al., 
2004. The coordinate frame Cref, defined by markers mMCP, mPIP, and 
mDIP, was positioned to the PIP joint marker. Its z-axis formed a normal 
vector to the common plane defined by mMCP, mPIP, and mDIP, while x-axis 
pointed in the direction of the proximal phalange. The CoR for MCP joint 
was found by minimization of the cost function (Eq. 10), where Tk denotes 
a transformation matrix which moves the coordinate frame Cref from the 
initial (k=1) to the k-th (k = 2 , …, N) pose. cMCP represents a point, which 
is invariant to transformations Tk and can be taken for CoR of the MCP 
joint. The average is for similar reasons as in PIP and DIP joint CoR 
estimation weighted with wk. 
Parameters cMCP, Ldist, Lmid, DDIP, and DPIP were obtained during the 
initial data acquisition. The relative position of PIP and DIP joints was 
calculated from the calibration movements (simultaneous f/e of MCP, 
PIP, and DIP joints) as an intersection of circles, as shown in Fig. 2, 
while cMCP represented a standstill point within the coordinate frame 
attached to the hand dorsum. 
 
 
2
MCP
MCP
1
N
k
k
i
C
w
 
 

¦
T c
c
     
 
 
   
   (10) 
 
 
CoR estimation. 
3.  
Results 
The hand width of a subject who took part in the study was 90 mm 
and hand length 204 mm. The mean lengths of proximal (Lprox), middle 
(Lmid) and distal phalanx (Ldist), which were obtained from CoR 
compared to the lengths estimated from hand external dimensions via 
scaling factors reported by Buchholz et al., 1992. 
The f/e angles in MCP, PIP, and DIP joints of index finger are 
presented in Fig. 3. They were calculated for the simultaneous flexion in 
MCP, PIP, and DIP joints. The angles acquired through inverse 
kinematics are presented with dash-doted line and compared to the 
reference angles, plotted with full lines. The reference angles were 
estimated from CoR. The mean differences and accompanying standard 
 
190 
of CoR. The lengths of finger segments were obtained as a by-product of 
The reference joint angles were calculated from the known positions 
estimation, are presented in Table 2 for index and middle finger. They are 
deviations are shown in Table 3. 
M. Veber, T. Bajd and M. Munih

 
Table 2.  Length  of  proximal, middle, and distal phalanx  of  index and  middle 
finger  
 
 
From CoR 
Finger 
Lprox (mm) 
Lmid (mm) 
Ldist (mm) 
Index 
47.35±0.65 
25.37±0.60 
23.81±0.08 
Middle 
44.63±0.50 
30.82±0.85 
24.63±0.03 
 
Statistically-based 
Index 
45.48±0.45 
25.96±0.21 
22.99±0.06 
Middle 
41.95±0.13 
30.87±0.22 
25.85±0.08 
and angles acquired through inverse kinematics 
 
Finger 
MCP (°) 
PIP (°) 
DIP (°) 
Index 
2.7±1.7 
7.9±2.9 
6.3±2.1 
Middle 
1.3±3.0 
6.6±2.9 
1.5±3.5 
 
One record of simultaneous f/e in MCP, PIP, and DIP joints, obtained 
from the optical tracking device and instrumental glove, was used for the 
glove calibration. Four records were used to validate the calibration. 
Joint angles for calibration were estimated through inverse kinematics. 
Analytic functions, which transform analog to digital converter raw 
values from the glove into the bend angles of individual sensors were 
obtained as a result of calibration. Angles reported by the calibrated 
glove were compared with the reference angles estimated from CoR. 
 
 
 
 
 
 
 
Figure 3. Validation of the method. 
 
 
 
 
 
 
 
Figure 4. Data Glove calibration results. 
Assessment of Finger Joint Angles and Instrumental Glove Calibration
191 
–
–
–
Table 3. Mean difference and standard deviation between reference joint angles 

 
The responses of bend sensors attached above the MCP and PIP joints 
of index finger are shown in Fig. 4 with dashed line. They are compared 
to the reference angles, which were acquired via estimated CoR, and are 
presented with full lines. The mean difference and standard deviation 
between joint angles recorded with the calibrated glove and the reference 
respectively. 
5.  
Conclusions  
A method for assessment of finger joint angles and calibration of 
instrumental glove based on optical tracking system and a kinematic 
model of a hand has been proposed. The model and the method were 
validated against the methods for estimation of joint CoR. The results 
show that lengths of finger segments, which were obtained from external 
dimensions of the hand and from the CoR of joints, are comparable. The 
angles obtained by the proposed method slightly differ from reference 
angles, however, the number of markers which is to be used for the 
reconstruction of finger motion is considerably smaller. Only markers on 
fingertips and additional 3 markers on hand dorsum are required. The 
proposed method was used for the instrumental glove calibration and 
proved to be appropriate for this application. 
References 
Buchholz, B., Armstrong, T.J., and Goldstein, S.A. (1992), Anthropometric data 
for describing the kinematics of the human hand, Ergonomics, no. 3, vol. 35, 
Halvorsen, K., Lesser, M., and Lundberg, A. (1999), A new method for estimating 
the axis of rotation and the center of rotation, Journal of Biomechanics, no. 11, 
Kamper, D.G., Cruz, E.G., and Siegel, M.P. (2003), Stereotypical fingertip 
3710. 
Miyata, N., Kouchi, M., Kurihara, T., and Mochimaru, M. (2004), Modeling of 
human hand link structure from optical motion tracking data, Proceedings of 
2004 IEEE/RSJ International Conference on Intelligent Robotics and Systems, 
Sendai, Japan. 
Zhang X., Lee, S.W., and Braido, P. (2003), Determining finger segmental centers 
of rotation in flexion-extension based on surface marker measurement, 
192 
–
–
pp. 261-273. 
vol. 32, pp. 1221-1227. 
trajectories during grasp, Journal of Neurophysiology, no. 6, vol. 90, pp. 3702-
Journal of Biomechanics, no. 8, vol. 36, pp. 1097-1102. 
angles reached ( 1.7±1.8)º and ( 5.1 ± 0.6) º for PIP and DIP joints, 
M. Veber, T. Bajd and M. Munih

ALL SINGULARITIES OF THE 9-DOF
DLR MEDICAL ROBOT SETUP FOR
MINIMALLY INVASIVE APPLICATIONS
Rainer Konietschke1, Gerd Hirzinger
German Aerospace Center, Institute of Robotics and Mechatronics
P.O. Box 1116, D-82230 Weßling, Germany
1 Rainer.Konietschke@dlr.de
Yuling Yan
University of Hawaii at Manoa, Mechanical Engineering
2540 Dole Street - Holmes Hall 302, Honolulu HI 96822, USA
Abstract
This paper shows that it is possible to determine analytically all singular
conﬁgurations of the 9-DoF DLR medical robot setup for minimally
invasive applications. It is shown that the problem can be devided
into the determination of the singularities of the general 7-DoF DLR
medical arm and of the 2-DoF surgical instrument, used in a minimally
invasive application. The formula of Cauchy-Binet is used to calculate
the singularities of the redundant medical arm, and an interpretation of
this formula for any serial redundant robot design is given.
Keywords:
mally invasive surgery, optimization, robot design
1.
Introduction
In robotically assisted minimally invasive applications, a surgical robot
is used to access the operating ﬁeld inside the human body through small
incisions with thin cylindrical instruments. The design of such robotic
devices for medical applications is liable to exceptionally high require-
ments in terms of safety and reliability. A thorough analysis of the
robot’s kinematic structure is important to ensure complete reachability
as well as the absence of any singular conﬁguration inside the desired
workspace. The desired workspace is usually deﬁned by the operator
during a planning step, and serves to determine the optimal robot setup
(Adhami, 2002; Konietschke et al., 2004). The robot setup comprises the
position and orientation of the robot base and the position of the entry
point into the human body as well as any adjustable DH parameter (as
for example adjustable instrument lengths).
© 2006 Springer. Printed in the Netherlands. 
193
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 193–200. 
Medical robotics, singularities, manipulability, robotic assistance, mini-
-

The determination of the singular conﬁgurations of a robot is espe-
cially important in the case of teleoperation, where the exact path is
not known in advance. Though singular conﬁgurations can be detected
by monitoring
in Yoshikawa,
1990; Konietschke et al., 2004, these measures are to the author’s knowl-
edge insuﬃcient to signal vicinity to singular conﬁgurations. Since the
behaviour of robots near singularities is in most cases not very intuititive
for the operator, it is highly desirable to restrict the workspace admissi-
ble to the operator to a space that does not contain any singularities or
to control the robot in a way that singular conﬁgurations are avoided.
This is facilitated if an analytic description of all singularities of the
robot design is known, since the use of computationally cheap strategies
for singularity avoidance in analogy with well known strategies for joint
limit avoidance becomes possible.
In the next section, the kinematic structure of the considered robotic
system is presented. The singularities of the DLR medical arm and the
attached surgical instrument are given in the sections 3 and 4. Section 5
gives a short conclusion.
2.
Kinematic
tructure
The kinematic structure of the considered robot with the attached
actuated instrument and the used coordinate frames are shown in Fig. 1.
The medical robot itself has 7 DoF (φ1...7) and the attached instrument
disposes of two additional DoF (φ8,9). The kinematic chain of the robot
itself is denoted thereafter as K1, that of the actuated instrument as K2.
In the following, the problem of determining the singular conﬁgura-
tions of the robot kinematics is divided into two subproblems. This is
possible due to the restrictions at the entry point (see section 4).
3.
The
ingular
onﬁgurations of the DLR
edical
rm
Written in the wrist frame {W}, the geometric Jacobian J of the
forward kinematics has the following form (Yoshikawa, 1990):

vW
ωW

= J ˙φ =

J11
0
J21
J22

˙φ,
with

vW
ωW

(1)
the translational and rotational velocity of the wrist frame {W} and
J11, J21 ∈R3×4, J22 ∈R3×3 .
(2)
A singular conﬁguration occurs if the following determinant equals
zero:
R. Konietschke, G. Hirzinger and Y. Yan
194
certain manipulability measures as e.g.
S
S
C
M
A

Figure 1. Kinematic description of the considered kinematic chains (K1 and K2)
JJT = 0.
(3)
With the formula of Cauchy-Binet (see e g.Gantmacher, 1959), Eq. 3
can be transformed into a sum of squares of determinants:
JJT =
4
	
i=1


Ji
11
0
Ji
21
J22

2
+
3
	
i=1


J11
0
J21
Ji
22

2
,
(4)
with Ji
mn the i-th submatrix (minor) obtained by suppressing column
i of the matrix Jmn. The terms of the ﬁrst sum have a lower block
triangular form and can be combined to:
	
i


Ji
11
0
Ji
21
J22

2
= |J22|2 	
i
Ji
11
2 = |J22|2 J11JT
11
.
(5)
In the last step, the formula of Cauchy-Binet is applied inversely.
Since the sum in Eq. 4 consists of squared summands, all of them have to
equal zero in a singular conﬁguration. Simpliﬁcations are possible with
consideration of the rank of the Jacobian. Due to the special structure
of J, a suﬃcient condition for a singular conﬁguration is:
rank (J11) < 3 .
(6)
All Singularities of the 9-DOF DLR Medical Robot Setup
195
.
.

For the remaining singular conﬁgurations, a necessary condition is:
rank (J22) < 3 .
(7)
Thus, the second sum of Eq. 4 has to be evaluated only for joint angles
that cause |J22| to be zero. The following singularities ei can thus be
determined, with k ∈N:
e1 :
φ4 = πk ,
(8)
e2 :
φ2 = π
2 + πk ∧φ3 = π
2 + πk ,
(9)
e3 :
φ2 = π
2 + πk ∧φ4 = ± arccos

−a3
d5

+ 2πk ,
(10)
e4 :
φ2 = π
2 + πk ∧φ6 = πk , and
(11)
e5 :
φ5 = π
2 + πk ∧φ6 = πk .
(12)
The singular conﬁguration e3 only appears if ∥a3∥≤∥d5∥. Details
about the zero points of the relevant determinants are given in the ap-
pendix. The classical “wrist singularity” (φ6 = πk) that occurs in many
6-DoF kinematic chains (consider for example a kinematic chain K ′
1
obtained with joint φ3 held constant) does only appear in conjunction
with additional conditions (Singularities e4,5).
To illustrate this, the
pseudo inverse J+
a of the Jacobian Ja in the non singular conﬁguration
φa = (0, 0, 0, π/2, 0, 0, 0)T as shown left in ﬁgure 2 is considered, writ-
ten in frame {I}:
J+
a = JT
a

JaJT
a
−1 , J+
a =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
0
0
0
0
0
1
1
a3
0
0
0
0
0
0
1
a3
0
0
0
−d5
a3
−1
a3
0
−1
d5
0
0
0
0
1
2 a3
0
1
2
0
−d5
2 a3
0
0
1
d5
0
1
0
0
1
2 a3
0
1
2
0
−d5
2 a3
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
. (13)
With d5/a3 ≈1, all joint velocities remain small for arbitrary rota-
tions of the tool tip. Particularly, pure rotation around an axis b as
shown left in Fig. 2 (perpendicular to the rotation axes of φ6 and φ7
and intersecting them), constituting the singular direction in case of a
R. Konietschke, G. Hirzinger and Y. Yan
196

0
20
40
60
80
100
120
140
160
0
5
10
15
20
25
30
35
φ5 [degree]
||Ja
+ ⋅(0,0,0,0,0,1)T||2
Figure 2.
In case of the considered robot, pure rotations around the axis b can still
be performed even if φ6 = 0 (left). Only if also φ5 = π/2+πk, a singular conﬁguration
occurs, as can be seen on the right where the norm ||J+
a ·(0, 0, 0, 0, 0, 1)T||2 is shown
as a function of the joint angle φ5.
kinematic chain as K′
1 in this conﬁguration, leads to the following (rea-
sonably small) joint velocities:
˙φ = J+
a · (0, 0, 0, 0, 0, 1)T = (1, 0, −d5
a3
, 0, −d5
2 a3
, 0, −d5
2 a3
)T.
(14)
On the right of Fig. 2 the norm ||J+
a · (0, 0, 0, 0, 0, 1)T||2 is shown
as a function of the joint angle φ5 with all other angles remaining in
conﬁguration φa.
3.1
Generalisation to the
ase of a
with n-fold
edundancy
The singular conﬁgurations of a general, n-fold redundant robot can
be calculated by considering the roots of the following determinant:
JJT =
(m+n)!
2(m!)

i=1
|Ji|2 ,
J ∈Rm×(m+n),
(15)
with Ji representing all (m+n)!
2(m!)
(diﬀerent) matrices obtainable by sup-
pressing n columns of the Jacobian J. It can be seen from Eq. 15 that the
singularities of a serial redundant structure with m + n joints of which
n are redundant are identical with the intersection of the singularities of
all those robotic structures obtained by ﬁxing any possible set of n joints
All Singularities of the 9-DOF DLR Medical Robot Setup
197
C
Serial
obot
R
R

of the redundant structure. It has to be noted however, that already for
the case of a 2-fold redundant robot with 8 DoF,
8!
2·6! = 28 minors have
to be considered, each of which being usually a rather complex function
of the joint angles φ.
4.
Singularities of the nstrument in a
inimally
nvasive
pplication
The kinematics in minimally invasive applications have the peculiarity
of a fulcrum point where the surgical instrument enters into the human
body. At that point, a constraint is imposed upon the system, resulting
in a loss of two DoF. In order to regain full dexterity inside of the patient,
an articulated instrument can be used, adding two DoF (φ8 and φ9, see
To
analyze the singular conﬁgurations introduced by the fulcrum point and
the two extra DoF of the instrument, the following Jacobian matrix is
considered:

v9
ω9

= 6
9Jv
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
˙x6
˙y6
˙z6
˙φ7
˙φ8
˙φ9
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
, 6
9Jv =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
d′
7−d7
d′
7
0
0
0
0
0
0
1
0
0
0
0
0
0
d′
7−d7
d′
7
0
0
0
0
0
1
d′
7
0
−c7
−s7c8
0
0
0
−1
0
s8
−1
d′
7
0
0
0
−s7
c7c8
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
,
(16)
with v9 resp. ω9
{9} and ( ˙x6, ˙y6, ˙z6) the translational velocities of frame {W}. The de-
terminant of 6
9Jv yields:
		6
9Jv
		 = −(d7,a −d7)2 c8
d2
7,a
,
(17)
and a singular conﬁguration can be stated when
c8 = 0 ,
(18)
with the axes z7 and z9 aligned.
The singular conﬁguration that
occurs if
d7,a = d7
(19)
corresponds to a conﬁguration where the fulcrum point is coincident
with the origin of {W}. In this case, translations of the frame {W} are
partly restricted by the constraint of the fulcrum point, and an altered
Jacobian matrix (a matrix that takes into consideration the rotation of
R. Konietschke, G. Hirzinger and Y. Yan
198
I
M
I
A
Fig. 3) to obtain full 6 DoF at the distal end of the instrument.
the translational and rotational velocity of frame

Figure 3.
Kinematic description of the articulated instrument in MIS. The length
d′
7 signiﬁes the distance between the wrist frame {W} and the fulcrum point.
frame {W} rather than its translation) would have to be considered.
Since, due to the design of the considered robot, the wrist joint cannot
be coincident with the fulcrum point this case is not further analyzed.
5.
Conclusion
In this paper the analytical solution for the determination of all singu-
larities of the DLR medical robot with attached articulated instrument
is given. The use of the formula of Cauchy-Binet simpliﬁes the equations
considerably and is suggested for the calculation of the singularities of
similar redundant kinematic structures. Particularly, the singular con-
ﬁgurations of both the DLR light weight robots II and III (7-DoF robots)
can be easily determined. As for the DLR medical robot, all singularities
except for e1 (φ4 = πk) and e5

φ5 = π
2 + πk ∧φ6 = πk

are outside of
the joint limits.
Appendix
The relevant determinants yield:
|J22| = −s6,
J1
11
 = −a3d5c3s4 (d5c4 + a3) ,
J2
11
 = a3d5c2s3s4 (d5c4 + a3) ,
J3
11
 = a3d5s4 (s2c3 (a3 + d5c4) + d5c2s4) ,
All Singularities of the 9-DOF DLR Medical Robot Setup
199

J4
11
 = 0,


J11
0
J21
J1
22
 = −a3d5c2s4 (d5s6 + a3s4c5c6 + a3c4s6) ,


J11
0
J21
J2
22
 = a2
3d5c2s2
4s5s6,


J11
0
J21
J3
22
 = a2
3d5c2s4c5;
The determinants equal zero for the following joint angles:
J1
11
 = 0 :
φ3 = π
2 +πk
∨
φ4 = πk
∨
φ4 = ±arccos

−a3
d5

+2πk;
J2
11
 = 0 :
φ2 = π
2 +πk ∨φ3 = πk ∨φ4 = πk ∨φ4 = ±arccos

−a3
d
5

+2πk;
J3
11
 = 0 :
φ4 = πk
∨
φ2 = ±arctan

s4d5
c3 (d5c4 + a3)

+ πk,
J4
11
 = 0 ∀φi;


J11
0
J21
J1
22

s6=0
= 0 : φ2 = π
2 + πk
∨
φ4 = πk;


J11
0
J21
J2
22

s6=0
= 0, ∀φi;


J11
0
J21
J3
22

s6=0
= 0 : φ2 = π
2 + πk
∨
φ4 = πk
∨
π
2 + πk;
References
Loua¨ı Adhami. An Architecture for Computer Integrated Mini-Invasive Robotic Sur-
gery: Focus on Optimal Planning. Ph.D. Thesis, Ecole des Mines de Paris, Paris,
2002.
Felix R. Gantmacher. The Theory of Matrices. American Mathematical Society, 1959.
Rainer Konietschke, Tobias Ortmaier, Holger Weiss, Gerd Hirzinger, and Robert En-
gelke. Manipulability and Accuracy Measures for a Medical Robot in Minimally
Invasive Surgery. In Advances in Robot Kinematics, Genua, Italy, 2004.
hen, Germany, 8.-9. Dezember 2004.
Tsuneo Yoshikawa. Foundations of Robotics: Analysis and Control. The MIT Press,
1990.
R. Konietschke, G. Hirzinger and Y. Yan
200
In 3. Jahrestagung der Deutschen Gesellschaft f¨ur Computer- und Roboterassisti-
erte Chirurgie (CURAC), Munc
¨
Rainer Konietschke, Holger Weiss, Tobias Ortmaier, and Gerd Hirzinger. A Preoperative
Planning Procedure for Robotically Assisted Minimally Invasive Interventions.

ON THE INVERSE KINEMATICS OF A
FRAGMENT OF PROTEIN BACKBONE
Guanfeng Liu†, R.J. Milgram‡, A. Dhanik†, and J.C. Latombe†
† Department of Computer Science, Stanford University
‡ Department of Mathematics, Stanford University
{liugf,ankur,latombe}@cs.stanford.edu and milgram@math.stanford.edu
Abstract
This paper studies the structure of the inverse kinematics (IK) map of a
fragment of protein backbone with 6 torsional degrees of freedom. The
images (critical sets) of the singularities of the orientation and position
maps are computed for a slightly idealized kinematic model. They yield
a decomposition of SO(3) and R3 into open regions where the number
of IK solutions is constant.
A proof of the existence of at least one
16-solution cell in R3 × SO(3) is given and one such case is shown.
Keywords: Protein backbone, inverse kinematics, critical sets
1.
Introduction
A protein (Creighton, 1993) is a sequence of amino-acids connected
by peptide bonds. It is often modeled as a serial linkage, the backbone,
with short side-chains. Each amino-acid contributes three atoms – N,
Cα, and C – and two torsional degrees of freedom (dofs) to the backbone
(Fig. 1). These dofs correspond to the dihedral angles φ and ψ around
the N – Cα and the Cα– C bonds. The inverse kinematics of the backbone
Let F be a backbone fragment with 6 dihedral angles φ and ψ, and f
be its forward kinematics. It is well-known that the number of solutions
of the inverse kinematics (IK) map f −1 has 16 as an upper bound, but
it has often been questioned whether this bound is tight (Coutsias et
poses of the moving frame T of F. Here, we study the global structure
of f −1 over the entire 6-D manifold of poses of T in R3 × SO(3). The
images of the singularities of f are the critical poses, which, according
to the Morse-Sard theorem, decompose the noncritical part of the image
into open regions, such that in each region E, f −1(x) for each x ∈E
contains the same number of points. These decompositions of the 6-D
manifold can be very complex, so we study the position map p and an
orientation map ρ separately. It turns out ρ is quite easy to understand
and the original question reduces to studying the projection to R3 from
© 2006 Springer. Printed in the Netherlands.
201
and B. Roth (eds.), Advances in Robot Kinematics, 201–208.
J. Lenarcic
is of considerable interest in biology (Coutsias et al., 2004).
al.,
2004). Available algorithms only compute these solutions for given

the inverse images of ρ. Given the frame associated to T, the set of
conﬁgurations that give the frame is either a copy of (S1)3 or a copy
of the disjoint union (S1)3 ⊔(S1)3. Focusing on these (S1)3, we can
compute p−1 more eﬃciently and we ﬁnd regions with 16 inverse image
points. This result is reasonable since a 6-dof protein fragment does not
satisfy any of the conditions under which the IK of a 6-dof serial linkage
has less than 16 solutions (Mavroidis and Roth, 1994).
2.
Kinematic Model of a Protein Fragment
Let F be a 6-dof fragment of a protein backbone as illustrated in
Fig. 1. The coordinates of F are the 3 dihedral angles φi around the
bonds Ni– Ci
α, and the 3 dihedral angles ψi around the bonds Ci
α– Ci. For
convenience, we rename φi by θ2i−2 and ψi by θ2i−1, so each conformation
of F is speciﬁed by a 6-tuple θ = (θ1, . . . , θ6) ∈(S1)6.
We represent F by a kinematically equivalent sequence of 3 identical
units, each made of two perpendicular links, a “long” one of length ℓ2
and a “short” one of length ℓ1, as shown in Fig. 2. We number the links
1, 2, . . . ,6, so that each link 2i −1 is a long link and each link 2i is a
short link. Angle θ2i−1 rotates short link 2i about long link 2i −1. So,
each short link moves in a plane perpendicular to the preceding long
link. Angle θ2i rotates the long link 2i + 1 about an axis parallel to long
link 2i−1 and passing through the extremity of short link 2i. Link 2i+1
makes the constant angle α = 19 degrees with the plane perpendicular
to link 2i −1.
Finally, we add a long link 7 to F.
This is the link
associated with the moving frame T.
We summarize these remarks and put them into a mathematical set-
ting as follows. Set
Ri =
 cos(θi)
−sin(θi)
0
sin(θi)
cos(θi)
0
0
0
1

,
L =

−sin(α)
0
cos(α)
0
−1
0
cos(α)
0
sin(α)

,
where α ∼.105556π is ﬁxed and LT = L−1 = L. Then, the orientations
of the frames are given by
O1 = I3×3,
O2i = O2i−1R2i−1,
O2i+1 = O2iR2iL,
and f is the composition of p and ρ with
p : (S1)6 →R3,
θ →(R1;2L + R1;2LR3;4L)v1
+ (R1 + R1;2LR3 + R1;2LR3;4LR5)v2,
(1)
ρ : (S1)6 →SO(3),
θ →R1;2LR3;4LR5;6L,
(2)
where Ri;j = RiRj, v1 = [0, 0, ℓ2]T , and v2 = [ℓ1, 0, 0]T .
This paper studies the structure of the inverse kinematics f −1 =
(p, ρ)−1. Noticing that for any (X, R) ∈R3 × SO(3),
(p, ρ)−1(X, R) = p−1(X) ∩ρ−1(R),
202

α
C
N
C
C
α
α
C
N
C
C
N
α
C
ω
ω=π
φ
ψ
ψ
φ
ψ
φ
120o
ω 120
o
o
109
Figure 1.
x
z T(O  )
7
z
x
z
z
x
z
x
z
x
z
xα
O
O
O
W(O )
1
5
6 x
O 4
2
O 3
θ
θ
θ
θ
θ
θ
1
2
3
4
5
6
Figure 2.
Equivalent model
we proceed in two steps. First, we derive the inverse orientation map
ρ−1 : SO(3) →(S1)6 and show that in general ρ−1(R) is the disjoint
union of two 3-D tori M1 and M2. Next, we compute p−1
k (X), where
pk, k ∈1, 2, is the map p with its domain restricted to Mk.
3.
Inverse Orientation Map
Reduction.
In Eq. (2) only the sums θ2i−1+θ2i appear. So, we write
τi = θ2i−1 + θ2i, i = 1, 2, 3, and τ = (τ1, τ2, τ3). As θ runs over (S1)6,
τ runs over the 3-D torus (S1)3, and ρ factors as composition
ρ = ˆρ ◦(+) : (S1)6 →(S1)3 →SO(3)
where ˆρ : (S1)3 →SO(3), τ →Rτ1LRτ2LRτ3L. Rτi is the rotation of
angle τi around the z axis. Given R ∈SO(3), the values of ˆρ−1(R) are
the solutions of ˆρ(τ) := Rτ1LRτ2LRτ3L
=
R, which is equivalent to:
ˆρ(τ)L := Rτ1LRτ2LRτ3
=
RL.
(3)
Since ˆρ(τ)L deﬁnes the frame on the z-axis, (which is ﬁxed by Rτ3,
we further reduce Eq. (3) by eliminating the variable τ3. To do this, we
deﬁne Az : SO(3) →S2,
R →Rz, where z = [0, 0, 1]T and S2 denotes
the unit 2-D sphere. Since Az(Rτ3) = z, applying Az to both sides of
Eq. (3) yields:
Az(ˆρ(τ)L) := Rτ1LRτ2Lz
=
RLz
(4)
where Rτ1LRτ2L deﬁnes the orientation of the z-axis of frame 6 in W.
We can solve this equation for (τ1, τ2). The value of τ3 is then uniquely
determined by:
Rτ3 = (Rτ1LRτ2L)T RL.
(5)
Inverse Kinematics of a Fragment of Protein Backbone
203
6-dof fragment.
.

z
Lz
π
LR  Lz
critical circle
 critical point
two solutions
one solution
empty
 a circle of solutions
τ2
LR   Lz
Figure 3.
Critical set of η
−4
−3
−2
−1
0
1
2
3
4
−2.5
−2
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
x
y
Figure 4.
The discriminant curve Xd
computed with γ = π and d = −0.32.
To each solution τ = (τ1, τ2, τ3) of Eqs. (4) and (5) corresponds a set of
values of θ = (θ1, ..., θ6) such that θ2i−1 + θ2i = τi for i = 1, 2, 3. This
set is a 3-D torus (S1)3.
Singular set.
The singularities of ˆρ are the points in (S1)3 where the
3 × 3 Jacobian matrix J ˆρ has rank less than 3. When working with Lie
groups, the Jacobian is (dˆρ)ˆρ−1. This gives a map to the Lie algebra.
The Lie algebra of SO(3) is 3-dimensional and a change of basis gives
J ˆρ = [z, Rτ1Lz, Rτ1LRτ2Lz], z as above. J ˆρ has at least rank 2. It
has has rank exactly 2 if and only if: det(J ˆρ) = sin(τ2) cos(α) = 0. As
cos(α) ̸= 0, the singular set of ˆρ is {τ | τ2 = 0} ∪{τ | τ2 = π}.
Critical set and number of solutions.
The quotient map η :
(S1)3 →SO(3) →S2 that appears in the left-hand side of Eq. (4),
has the same singular set as ˆρ. The critical set of η – i.e., the image
of {τ | τ2 = 0} ∪{τ | τ2 = π} – is the union of C1 = Rτ1Rτ3z = z
and C2 = Rτ1LRπLRτ3z = Rτ1LRπLz for all τ1 ∈S1.
C1 is the
point that corresponds to the situation where the z-axes of W and
frame 6 are parallel.
Indeed, when τ2 = 0, the z-axis of frame 6 is
parallel to the z-axis of W for any value of τ1.
On the other hand,
Rτ1LRπLz = [(sin(2α) cos(τ1), sin(2α) sin(τ1), −cos(2α)]T , so C2 is the
circle perpendicular to the z-axis and passing through the point LRπLz.
See Fig. 3.
The inverse map η−1, hence ˆρ−1, has a constant structure in C1, C2,
and in each of the two open subsets of S2 bounded by C1 and C2. We
notice that: L(LRτ2Lz) = [cos(α) cos(τ2), cos(α) sin(τ2), sin(α)]T . So,
LRτ2Lz is a circle perpendicular to Lz contained in the subset of S2
G. Liu et al.
204
.

tween C1 and C2, except at τ2 = 0 and τ2 = π where it coincides with C1
and C2, respectively (Fig. 3). For any ﬁxed τ1 ∈S1, the set Rτ1LRτ2Lz
is the circle obtained by rotating LRτ2Lz by τ1 around the z axis. Thus,
for every point s in the region between C1 and C2, Rτ1LRτ2Lz contains
s for two distinct values of τ1. We conclude that η−1 has two values
(τ k
1 , τ k
2 ), k = 1, 2. In C1, s = z and η−1(s) = {(τ1, 0) | τ1 ∈S1}. For
any s ∈C2, η−1(s) has a single value of the form (τ1, π). Elsewhere
η−1(s) is empty.
Corresponding to each value (τ1, τ2) of η−1(s) there is a unique value
of τ3 given by Eq. (5), hence a single value of ˆρ−1(R).
Thus, as we
initialize an orientation R ∈SO(3) not in the critical sets C1 and C2,
ρ−1(R) is the disjoint union of two 3-D tori, written Mk, k = 1, 2.
4.
Inverse Position Map
Restriction to Mk.
We now study p−1
k (X), where X ∈R3 and pk,
k ∈1, 2, is the position map p with its domain restricted to Mk. Since
θ2j−1 + θ2j, j = 1, 2, 3, are constant on Mk and equal to τ k
j , each point
on Mk is uniquely deﬁned by the values of θ1, θ3, and θ5. Eq.(1) yields:
pk : (S1)3 →R3,
(θ1, θ3, θ5) →v0,k +(R1 +Rτ k
1 LR3 +Rτ k
1 LRτ k
2 LR5)v2
where v0,k = (Rτ k
1 L + Rτ k
1 LRτ k
2 L)v1 is a constant vector and {R1v2},
{Rτ k
1 LR3v2}, and {Rτ k
1 LRτ k
2 LR5v2} are constant circles of radius ℓ1 con-
tained in three diﬀerent planes.
Computing p−1
k (X) amounts to solving the equation:
X′ = ˆpk(−θ2, θ3, θ5) := R−2v2 + LR3v2 + LRτ k
2 LR5v2,
(6)
where X′ = RT
τ k
1 (X −v0,k) and R−2 is the rotation of −θ2 around z.
Critical set.
Here we directly determine the critical positions X ′
where the number of solutions of ˆpk changes. We rewrite Eq. (6) as:
X′ −r(w) = q(t, u),
(7)
where we rename the variables as t = −θ2, u = θ3, w = θ5, and γ = τ k
2 .
X′−r(w) is a unit circle centered at X′ and q(t, u) spans a quartic surface
Q in R3. Q is the Minkowski sum of two circles, so it is bounded and
connected. Eq. 7 can be solved by computing the intersections between
X′ −r(w) and the coss-section curve of Q by the plane containing X ′ −
r(w). We compute r(w) = ˆxcw+ˆysw. ˆx = [s2
αcγ+c2
α, sγsα, sαcα(1−cγ)]T
and ˆy = [−sαsγ,
cγ, cαsγ]T form an orthonormal basis for the plane
Inverse Kinematics of a Fragment of Protein Backbone
205
be

−0.4
−0.2
0
0.2
0.4
0.6
0.8
−1.4
−1.3
−1.2
−1.1
−1
−0.9
−0.8
−0.7
−0.6
x
y
Figure 5.
Zoom on a portion of Xd in
Fig. 4. The centers of the small squares
and the small circles are cusp points and
self-intersection points, respectively.
0
2
2
4
6
6
6
6
6
6
8
8
Figure 6.
The planar graph determined
The
containing the circle r(w). Setting ˆz = ˆx × ˆy, the equation of the plane
containing X′ −r(w) is:
ˆzT q
=
d
(8)
where d = ˆzT X′. We let Pd denote the plane deﬁned by this equation.
When X′ spans R3, Pd translates, but its orientation remains constant.
On the other hand, we can easily compute:
q(t, u)
=
[ct −sαcu,
st −su,
cαcu]T .
(9)
By replacing q by this expression in Eq. (8), we get the equation of the
cross-section Qd of Q by Pd in terms of (t, u):
c(u−γ) + K(γ)s(t+β)
=
d
cα
(10)
where cβ = −
sγ
K(γ), sβ = sα(1−cγ)
K(γ)
, and K(γ) =

s2γ + s2α(1 −cγ)2.
The number of intersection points in Qd ∩(X′ −r(w)) varies as X′
runs over R3. The X′ such that the circle is tangent to Qd form the
critical set X ⊂R3 of ˆpk. Let dmin and dmax be the extreme values
of d between which the plane ˆzT q = d and Q intersect. For any d ∈
[dmin, dmax], the values of X′ such that X′ −r(w) lies in the plane Pd
and is tangent to Qd form a curve Xd called the discriminant curve at d.
The union of the discriminant curves for d in [dmin, dmax] is the critical
surface X of ˆpk. Fig. 4 shows a discriminant curve, with several cusp
and self-intersection points. An animation of both the cross-section of
Q and the corresponding discriminant curve when d varies is available
at www.stanford.edu/~phwu1/curve when γ = π.
G. Liu et al.
206
by the discriminant curve of Fig. 4.
number of solutions is shown in each node.

Figure 7.
The cusp curves when γ = π.
Figure 8.
Four of the 16 solutions.
Decomposition of R3 into regions.
The surface X decomposes
R3 into open 3-D regions such that the number of solutions of the inverse
position map is constant over each one. We ﬁrst compute the decompo-
sition of a plane Pd by Xd. Next, we partition [dmin, dmax] into smaller
open intervals, such that over each such interval the discriminant curves
Xd are equivalent. We get the decomposition of R3 by “stacking” the
decompositions in the successive intervals.
Decomposition of Pd: We sweep a line L parallel to the y-axis across
the plane Pd from left to right to construct a set S of sub-regions and
their adjacency relations. S is initialized to the empty set. During the
sweep, whenever L crosses a cusp point, a self-intersection point, or a
vertical tangency point, sub-regions are added to S and the adjacency
relation is updated. When the sweep is completed, adjacent sub-regions
in S not separated by Xd are merged to form the decomposition of Pd.
The outcome is a planar graph in which the nodes are the computed
regions and the edges represent the adjacency relation.
The number
of solutions of the inverse position map varies by 2 at each crossing
of a region boundary.
We compute cusp and self-intersection points
numerically by approximating the discriminant curve by line segments.
Fig. 6 shows the graph computed from the discriminant curve shown in
Fig. 4. An animation of the discriminant curve and the corresponding
graph when d varies is available at www.stanford.edu/~phwu1/curve when
γ = π.
Decomposition of R3: As d varies from dmin to dmax, the planar graph
in Pd changes only at a ﬁnite number of critical values of d, which we
denote di, i = 1, ..., m. Over each open interval (di, di+1), i = 0, ..., m,
with d0 = dmin and dm+1 = dmax, the discriminant curves are equivalent
and the planar graph remains constant. Let Gi be the planar graph in
Inverse Kinematics of a Fragment of Protein Backbone
207

interval (di, di+1). The decomposition of R3 is obtained by merging every
pair of regions from Gi and Gi+1, for all i = 0, ..., m, that are adjacent,
but not separated by X. The corresponding nodes of the planar graphs
are also merged to obtain the graph of the decomposition of R3.
The 2-D surface X is made of smooth patches separated by cusp and
self-intersection curves.
The cusp (resp.
self-intersection) curves are
the locus X cusp (resp. X self
the discriminant curves Xd when d varies. The critical values of d are
contributed by X\(X cusp ∪X self), X cusp, and X self. For lack of space, we
do not describe their computation here. Fig. 7 shows X cusp for γ = π.
5.
Existence of a 16-Solution Cell
Theorem 1 There exists a nonempty open region in R3 × SO(3) such
that for all (X, R) in this region, (p, ρ)−1(X, R) contains 16 points.
Proof: Consider ﬁrst an orientation R0 ∈SO(3) that lies in the critical
circle C2. ρ−1(R0) is a copy of (S1)3. There is a nonempty open region
E0 ⊂C2 such that for all R in E0, p(ρ−1(R)) has an open region U so that
p−1(X) contains 8 points for X ∈U (see Fig. 6). Let R′ be a noncritical
orientation that is close to R0. Then ρ−1(R′) is a disjoint union of two
3-D tori Mk, k = 1, 2. For each pk, there exists a nonempty open region
Ek with 8 inverse image points. Moreover, for R′ suﬃciently close to
R0, E = E1 ∩E2 is nonempty. Then (p, ρ)−1(X, R′) has 16 solutions for
all X ∈E.
Using the idea in the proof, we constructed the following pose (X, R)
of T:
X =

1.9760
4.5809
−2.2402

and
R =

0.6742
−0.3715
−0.6383
0.2378
−0.7091
0.6638
−0.6992
−0.5993
−0.3897

,
such that (p, ρ)−1(X, R) contains 16 solutions (for a fragment in which
ℓ1 = 1 and ℓ2 = 3). Four of them are shown in Fig. 8. (It is easily seen
that the existence of 16-solution cell is independent of the link lengths
as long as the short links all have the same length.)
References
loop closure. J. Comp. Chem., 25:510–528.
Creighton, T.E. (1993), Proteins: Structures and molecular properties W. H. Freeman
and Company, New York, 2nd edition.
Mavroidis, C., and Roth, B. (1994), Structural Parameters which reduce the number
of manipulator conﬁgurations. J. Mech. Design, Trans. ASME, vol. 116, pp. 3–10.
208 
G. Liu et al.
) of all the cusp (self-intersection) points of
.
Coutsias, E.A., Seok, C., Jacobson, M.P., and Dill, K.A. (2004), A kinematic view of
,
0443939.
Acknowledgements: This research was funded by NSF grant
DMS-

PREDICTING REACHING POSTURES
USING A KINEMATICALLY
CONSTRAINED SHOULDER MODEL
Vincent De Sapio, James Warren, and Oussama Khatib
Artiﬁcial Intelligence Laboratory
Stanford University
{vdesap, warren, khatib}@stanford.edu
Abstract
We present a new muscle eﬀort criteria for predicting physiologically
accurate upper limb motion in human subjects based on skeletal kine-
matics, muscle routing kinematics, and muscle strength characteristics.
The new criteria properly accounts for the cross-joint coupling associ-
ated with the routing kinematics of multi-articular muscles. We also
employ a new kinematically constrained model of the human shoulder
complex, which is critical for the proper evaluation of our muscle eﬀort
criteria. Through a set of subject trials we have shown good correlation
between natural reaching postures and our proposed criteria.
Keywords:
1.
Introduction
The prediction and synthesis of human movement has presented a
daunting challenge to the biomechanics, neuroscience, and robotics com-
munities. In the presence of this challenge there is a signiﬁcant motiva-
tion to understand and emulate human movement. Given a speciﬁc task
the prediction of kinematically redundant upper limb motion is a prob-
lem of choosing one of a multitude of control solutions which all yield
kinematically feasible solutions. It has long been observed that humans
resolve this redundancy problem in a relatively consistent manner (Lac-
quaniti and Soechting, 1982; Kang et al., 2005). For this reason general
mathematical models have proven to be valuable tools for motor control
prediction across human subjects.
Many of the models for predicting human arm movement, including
the minimum work model (Soechting et al., 1995) and the minimum
torque-change model (Uno et al., 1989), do not involve any direct in-
clusion of muscular properties such as routing kinematics and strength
properties. Even models described as employing biomechanical variables
(Kang et al., 2005) typically employ only variables derivable purely from
skeletal kinematics and not musculoskeletal behavior. We feel that the
© 2006 Springer. Printed in the Netherlands.
209
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 209–218.
Muscle eﬀort, shoulder complex, constraints, muscle routing kinematics

utilization of a model-based characterization of muscle systems (Zajac,
1993; Delp and Loan, 2000), which accounts for muscle kinematic and
strength properties, is critical to authentically simulating human mo-
tion since all human motion is rooted in, and bounded by, physiological
capabilities.
We will present a new methodology for predicting arm conﬁguration
in reaching movements by examining the muscular eﬀort required to
perform positioning tasks. This is built upon the work of Khatib et al.,
2004, but involves a number of improvements in methodology. An im-
portant element of this approach is the implementation of a suﬃciently
sophisticated musculoskeletal model of the upper limb that accounts for
kinematic coupling between the constituents of the human shoulder com-
plex (Holzbaur et al., 2005). This provides ﬁdelity in predicting muscle
forces, joint moment arms, and resulting muscle induced joint moments,
particularly in the shoulder complex. With our methodology and phys-
iological models we show that natural task-driven human arm postures
can be predicted accurately using a criteria based on a skeletal kine-
matics, muscle routing kinematics, and muscle strength characteristics.
This is validated through a set of targeted subject trials.
2.
Human Upper Extremity Model
The upper extremity model of Holzbaur et al., 2005, has been em-
ployed, with some modiﬁcation, in this work. The model, consisting of a
shoulder complex and a lower arm, has been implemented in the SIMM
(Software for Integrated Musculoskeletal Modeling) environment (Delp
and Loan, 2000). A minimal set of 7 generalized coordinates were chosen
to describe the conﬁguration of the shoulder complex, elbow, and wrist
(3 for the shoulder complex, 2 for elbow ﬂexion and pronation, and 2 for
wrist ﬂexion and deviation). This is depicted in Fig. 1.
Fidelity in predicting muscle action was an important requirement
for the model employed in this work. In particular, proper kinematics of
the shoulder complex is critical in generating realistic muscle paths and
associated joint moments. While the purpose of the shoulder complex is
to produce spherical articulation of the humerus, the resultant motion
does not exclusively involve motion of the glenohumeral joint (see Fig.
1). The shoulder girdle, which is comprised of the clavicle and scapula,
connects the glenohumeral joint to the torso and produces some of the
motion associated with the overall articulation of the humerus. While
this motion is small compared to the glenohumeral motion its impact on
overall arm function is signiﬁcant (Klopˇcar and Lenarˇciˇc, 2001; Lenarˇciˇc
210
V. De Sapio, J. Warren and O. Khatib

Figure 1.
(Left) Constituents of the shoulder complex including the scapula, clavi-
cle, and humerus. The glenohumeral joint produces spherical motion of the humerus.
The shoulder girdle attaches the glenohumeral joint to the torso and inﬂuences the
resultant motion of the humerus. (Right) Kinematic parameterization of the model
of Holzbaur et al.
et al., 2000).
Part of this impact is related to the shoulder girdle’s
inﬂuence on the muscle routing kinematics.
The constrained movement of the shoulder girdle was determined from
the shoulder rhythm regression analysis of de Groot and Brand, 2001.
The model obtained from this regression analysis was shown to ﬁt well
for an independent set of shoulder motions and on a diﬀerent set of sub-
jects than was used for the regression analysis. For these reasons the
model of de Groot and Brand is considered to be superior in predicting
shoulder motion than a simple unconstrained model which only reﬂects
glenohumeral rotation. Using the results of de Groot and Brand the
constraints that model the shoulder girdle are implicitly handled, with
all motions of the shoulder girdle being dependent on the three gleno-
humeral rotation coordinates. These are elevation plane, q1, elevation
angle, q2, and shoulder rotation, q3.
Due that fact that SIMM restricts any joint motion to a function of a
single independent generalized coordinate, the regression equations were
simpliﬁed by Holzbaur et al. to be a function of only thoracohumeral
(humerus elevation) angle, q2. The shoulder kinematics for this param-
The terms d1, d2, and d3
1
Q7
Predicting Reaching Postures
211
eterization are shown in Table 1.
are rotation matrices associated with spins about successive local
are ﬁxed translation vectors and Q
· · ·
,
,

Table 1.
Shoulder kinematics using a minimal set of generalized coordinates.
Translation
Rotation
clavicle
tdc = d1
t
cQ = Q1(c1q2)Q2(c2q2)
scapula
tds = tdc + t
cQd2
t
sQ = Q3(c3q2)Q4(c4q2)Q5(c5q2)
humerus
tdh = tds + t
sQd3
t
hQ = Q6(q1)Q7(q2)Q6(−q1)Q6(q3)
2
De Sapio et al., 2006, provide an extensive analysis of the impact
of shoulder girdle motion, associated with glenohumeral coupling con-
straints, on the muscle routing kinematics and moment arms about the
glenohumeral joint. The constrained model employed here typically gen-
erates moment arms of substantially larger magnitude than those of a
simple model with no kinematic coupling between glenohumeral and
shoulder girdle motion. The resulting moment generating capacities as-
sociated with the constrained model are also typically larger in magni-
tude than those associated with the simple model. This is of paramount
importance for the implementation addressed in the following section.
3.
Muscle Eﬀort Minimization
A scalar measure of instantaneous (path independent) muscle eﬀort
at a speciﬁc conﬁguration can be deﬁned based on the necessary gravity
torque to maintain the conﬁguration and the muscle strength capacity
at the conﬁguration. Activation, which represents the normalized ex-
ertion of muscles, provides a natural measure for this. Speciﬁcally, the
magnitude of the muscle activation vector, a, has been used as a scalar
optimization criteria in both static and dynamic optimizations. That
is, we can choose our instantaneous muscle eﬀort measure, U, to be
U(q ˙q) = ∥a∥2. To express this measure we ﬁrst represent the joint
torques, Γ in terms of muscle action,
Γ(q ˙q a) = KΓ(q ˙q)a
(1)
212
V. De Sapio, J. Warren and O. Khatib
script t refers to the torso as the frame of reference. The constraint con-
stants,
coordinate axes, where the arguments identify the spin angles. The super-
were obtained from the regression analysis of de Groot and Brand, 2001.
c, associated with the dependency on humerus elevation angle, q ,
,
, ,
,

where KΓ(q ˙q) is the muscle torque-activation gain matrix. That is, it
maps muscle activation, a, to joint torque (De Sapio et al., 2005). Due
to the fact that there are typically more muscles spanning a set of joints
than the number of generalized coordinates used to describe those joints
this equation will have an inﬁnite set of solutions for a. Choosing the
solution, ao, which has the smallest magnitude yields,
ao = K+
Γ Γ = KT
Γ(KΓKT
Γ)−1Γ
(2)
where K+
Γ is the pseudoinverse of KΓ. Our muscle eﬀort measure can
then be expressed as,
U(q) = ∥ao∥2 = gT (KΓKT
Γ)−1g
(3)
Note that we have eliminated the dependency on ˙q, as we will concern
ourselves only with static conﬁgurations for the remainder of our analy-
sis. Similarly, Γ has been replaced with the conﬁguration space gravity
vector, g, since in the static case Γ →g. Expressing this in terms of
constituent terms we have,
U(q ˙q) = gT [LT (KfKT
f )L]−1g
(4)
where we have made use of the relationship, KΓ = LT Kf. The muscle
force-activation gain matrix, Kf, maps muscle activation to muscle force
(De Sapio et al., 2005). The transpose, LT , of the muscle Jacobian is
a kinematic quantity, based on muscle routing kinematics, that maps
muscle force to joint torque (Khatib et al., 2004).
If we dissect the
structure of this eﬀort criteria as follows,
U = gT
muscular capacity
)
*+
,
[
LT
+,)*
kinematics
(KfKT
f )
+
,)
*
kinetics
L
+,)*
kinematics
] −1g
(5)
we gain some physical insight into what is being measured. The terms
inside the brackets represent a measure of the net capacity of the muscles.
This is a combination of the force generating kinetics of the muscles as
well as the mechanical advantage of the muscles, as determined by the
muscle routing kinematics. The terms outside of the brackets represent
the kinetic requirements of the task/posture; in this case the gravity
torques at the joints.
Eq. 5 represents a generalization of the joint decoupled measure used
by Khatib et al., 2004. That measure projected muscle strength capac-
ities to the joint level in a decoupled manner. Consequently, the cross-
joint coupling associated with multi-articular muscles (muscles that span
Predicting Reaching Postures
213
,
,

more than one joint) was ignored. The measure of Eq. 5 properly ac-
counts for multi-articular muscle coupling in the musculoskeletal system.
It is noted that the solution of Eq. 1 expressed in Eq. 2 corresponds
to a constrained minimization of ∥a∥2, however, this solution does not
enforce the constraint that muscle activation must be positive (muscles
can only produce tensile forces).
Imposing the inequality constraint,
a ⩾0, on the activations requires a quadratic programming approach
to performing the constrained minimization. In this case the solution to
Eq. 1 which minimizes ∥a∥2 and satisﬁes a ⩾0 can be represented in
shorthand as,
ao = qp(KΓ Γ ∥a∥2 ai ⩾0)
(6)
where qp(·) represents the output of a quadratic programming function
(eg. quadprog() in the Matlab optimization toolbox). Our muscle eﬀort
criteria is then U(q) = ∥ao∥2, where ao is given by Eq. 6. Despite the
To ﬁnd a task consistent static conﬁguration which minimizes U(q),
we ﬁrst deﬁne the self-motion manifold associated with a ﬁxed task point,
xo. This is given by M(xo) = {q | x(q) = xo} where x(q) is the op-
erational point of the kinematic chain (e.g. the position of the hand).
The problem of ﬁnding a minimal eﬀort task consistent conﬁguration
can then be stated as minimizing U(q) on M(xo).
4.
Experiments
A set of experiments was conducted to provide validation for the mus-
cle eﬀort minimization approach of Section 3. The subjects chosen were
six right-handed adult males with normal or corrected-to-normal vision.
The subjects were seated with a test ﬁxture directly in front of them.
The test ﬁxture contained ﬁve visual targets represented as physical
markers positioned at diﬀerent locations. A set of weights (5, 8, and 15
lbs) were placed to the side of the subjects. An eight-camera Qualisys
retroreﬂective motion capture system was used to record subject motion
during the trials at a capture rate of 250 Hz.
The subjects performed a set of tasks designed to isolate upper limb
reaching motion. While seated each subject was instructed to pick up
a weight and move it to each target and hold a static conﬁguration at
the target for 4 seconds (see Fig. 2). The subjects were instructed to
perform the movement in any manner which felt natural and comfortable
to them. Five consecutive trials were performed for each weight (8, 12,
and 15lb) as well as a trial with no weight in hand, for a total of 20
214
V. De Sapio, J. Warren and O. Khatib
Eq. 5 provides valuable insights at a conceptual level.
preferred use of quadratic programming for computational purposes,
,
,
,

trials. The total number of 20 trials took each subject roughly an hour
to perform; including time for hardware set up and marker placement.
Figure 2.
Subject reaching to a set of 5 target locations from a seated conﬁguration.
The subject performs these targeted reaching movements freehand and with a total
of three diﬀerent weights in hand. Time histories of shoulder joint angles, q1, q2, and
q3, and elbow joint angle, q4, show steady state conﬁgurations at each of the targets.
Following motion capture the marker data was segmented using the
Qualisys Track Manager software. To obtain joint space trajectories,
custom Matlab scripts were written based on the inverse kinematics of
the constrained shoulder complex presented in Section 2. The steady
state conﬁgurations associated with the ﬁve targets were obtained from
the joint space trajectories for each trial (see Fig. 2). For each con-
ﬁguration a 1-dimensional self motion manifold, M(xo), was computed
numerically given the ﬁxed target location, xo. The manifold was asso-
ciated with the variation of the 3 shoulder complex joint angles, q1, q2,
and q3, and the elbow joint angle, q4.
The muscle eﬀort criteria of Section 3 was then computed. SIMM
was used to generate the maximum muscle induced moments over the
self motion manifold for each trial. Matlab scripts were then written
to construct the muscle torque-activation gain matrix, KΓ, from the
computed muscle moments as well as the gravity vector, g. A quadratic
Predicting Reaching Postures
215

programming routine (quadprog() from Matlab’s optimization toolbox)
was used to enforce positive values for muscle activation.
The subject’s chosen conﬁg-
uration was typically within several degrees (norm based metric along
the self motion manifold) of the predicted conﬁguration associated with
minimizing the computed muscle eﬀort. This was consistent across the
set of subjects, with the largest deviation between experimental and
predicted conﬁgurations being on the order of 25◦and more commonly
under 10◦.
Figure 3.
Muscle eﬀort variation for one of the subject trials with no weight in
hand. Each plot depicts the muscle eﬀort for one of the ﬁve target conﬁgurations.
The locations of the subject’s chosen conﬁgurations are depicted with a red +. The
full range of motion is depicted by the black silhouettes (±90◦from nominal).
of trials with diﬀerent weights. In each case the weight at the hand was
projected into joint space and added to the gravity vector associated
with the limb segments. The arm conﬁgurations at the targets did not
216
V. De Sapio, J. Warren and O. Khatib
Figure 3 depicts the results of the muscle eﬀort computations for one of
the subject trials with no weight in hand.
Figure 4 depicts the results of the muscle eﬀort computations for a set

dramatically change with increased weight at the hand. This implies
that the subjects tended to generate stereotyped reaching postures that
were not highly sensitive to the weight being carried. As a consequence
we included a weighting between the component of the gravity vector
associated with limb masses and the component associated with the
external weight carried at the hand. With this weighting we were able
to maintain good predictions with increases in the weight at the hand.
Figure 4.
Muscle eﬀort variation for a set of trials to the fourth target location with
diﬀerent weights in hand. The weight at the hand was projected into joint space and
added to the gravity vector associated with the limb segments The locations of the
subject’s chosen conﬁgurations are depicted with a red +.
5.
Conclusions
Building upon the work of Khatib et al., 2004, we have implemented
a new muscle eﬀort criteria for predicting physiologically accurate up-
per limb motion. This criteria is a generalization of the joint decou-
pled measure used previously. The new criteria properly accounts for
the cross-joint coupling associated with multi-articular muscle routing
kinematics. We also employ a new kinematically constrained model of
the human shoulder complex (Holzbaur et al., 2005). The modeling of
the shoulder rhythm using constraints between the scapula, clavicle, and
humerus provides more physiologically accurate muscle routing kinemat-
ics and, consequently, better estimates of muscle induced moment arms
Predicting Reaching Postures
217
−
−
−
−
−
−
−
−
−
−

218
V. De Sapio, J. Warren and O. Khatib
about the glenohumeral joint (De Sapio et al., 2006). Through a set of
subject trials we have shown good correlation between natural reaching
postures and those predicted by our proposed criteria.
6.
Acknowledgements
The authors would like to thank Scott Delp and Katherine Holzbaur
for their helpful comments on this work. Additionally, the motion cap-
ture support of Chris Dyrby is gratefully acknowledged.
References
de Groot, J. H., and Brand, R. (2001), A three-dimensional regression model of the
shoulder rhythm, Clinical Biomechanics, vol. 16, pp. 735-743.
De Sapio, V., Warren, J., Khatib, O., and Delp S. (2005), Simulating the Task-level
Control of Human Motion: A Methodology and Framework for Implementation,
The Visual Computer, vol. 21, no. 5, pp. 289-302.
De Sapio, V., Holzbaur, K.R., and Khatib, O. (2006), The Control of Kinematically
Constrained Shoulder Complexes: Physiological and Humanoid Examples, Pro-
ceedings of the 2005 IEEE International Conference on Robotics and Automation,
vol. 1, pp. 470 475, Barcelona, April 2005.
Delp, S.L., and Loan, J.P. (2000), A Computational Framework for Simulating and
Analyzing Human and Animal Movement, IEEE Computing in Science and Engi-
neering, vol. 2, no. 5, pp. 46-55.
Holzbaur, K.R., Murray, W.M., and Delp, S.L. (2005), A Model of the Upper Extrem-
ity for Simulating Musculoskeletal Surgery and Analyzing Neuromuscular Control,
Annals of Biomedical Engineering, vol. 33, no. 6, pp. 829-840.
Kang, T., He, J., Helms Tillery, S.I. (2005), Determining natural arm conﬁguration
along a reaching trajectory, Experimental Brain Research, vol. 167, pp. 352-361
Khatib, O., Warren, J., De Sapio, V., and Sentis, L. (2004), Human-like motion from
in robot kinematics, pp. 149 163, Boston: Kluwer, 2004.
Klopˇcar, N., and Lenarˇciˇc, J. (2001), Biomechanical Considerations on the Design of
a Humanoid Shoulder Girdle, Proceedings of the 2001 IEEE/ASME International
Conference on Advanced Intelligent Mechatronics, vol. 1, pp. 255 259, Como, Italy.
Holzbaur, K.R., Murray, W.M., and Delp, S.L. (1982), Coordination of Arm and Wrist
Motion During a Reaching Task, Journal of Neuroscience, vol. 2, no. 4, pp. 399-408.
Lenarˇciˇc, J., Staniˇsi´c, M.M., and Parenti-Castelli, V. (2000), Kinematic design of a
humanoid robotic shoulder complex, Proceedings of the 2000 IEEE International
Conference on Robotics and Automation, vol. 1, pp. 27 32, San Francisco, CA.
Soechting, J.F., Buneo, C.A., Herrmann, U., Flanders, M. (1995), Moving Eﬀortlessly
in Three Dimensions: Does Donders Law Apply to Arm Movement? Journal of
Neuroscience, vol. 15, pp. 6271 6280.
Uno, Y., Kawato, M., Suzuki, R. (1989) Formation and control of optimal trajectory
in human multijoint arm movement, Biological Cybernetics, vol. 61, pp. 89 101.
Zajac, F.E. (1993) Muscle coordination of movement: a perspective, Journal of Biome-
chanics, vol. 26, pp. 109-124.
-
-
-
-
-
-
.
physiologically-based potential energies, Lenarˇciˇc J, Galletti C (eds.) On advances
,
,
,
,
.
.

Analysis of Mechanisms
D. Chablat, P. Wenger, I.A. Bonev
Self motions of special 3-RPR planar parallel robot
A. Degani, A. Wolf
Graphical singularity analysis of 3-DOF planar parallel
C. Bier, A. Campos, J. Hesselbach
Direct singularity closeness indexes for the hexa parallel robot
A. Karger
Stewart-Gough platforms with simple singularity surface
A. Kecskem´ethy, M. T¨andl
P. Ben-Horin, M. Shoham
Singularity of a class of Gough-Stewart platforms with three
T.K. Tanev
Singularity analysis of a 4-DOF parallel manipulator using
R. Daniel, R. Dunlop
A geometrical interpretation of 3-3 mechanism singularities
manipulators
229
221
239
247
A robust model for 3D tracking in object-oriented multibody
255
systems based on singularity-free Frenet framing
concurrent joints
265
geometric algebra
275
285

SELF MOTIONS OF A SPECIAL 3-RPR
PLANAR PARALLEL ROBOT
Damien Chablat, Phlippe Wenger
Institut de Recherche en Communications et Cybern´etique de Nantes
1, rue de la No¨e, 44321 Nantes, FRANCE
[damien.chablat, philippe.wenger]@irccyn.ec-nantes.fr
Ilian A. Bonev
´Ecole de technologie sup´erieure
1100, rue Notre-Dame Ouest, Montr´eal (Qu´ebec) H3C 1K3, CANADA
ilian.bonev@etsmtl.ca
Abstract
robot with actuated base joints and congruent equilateral base and mo-
bile platform. The singularity loci are ﬁrst determined. Then the global
behavior at all singularities is geometrically described by studying the
degeneracies of the direct kinematic model. This study is made easier
by the fact that one of the two direct kinematic solutions is trivial and
singular. It is shown that this parallel robot has Cardanic self motions.
Keywords: Kinematic geometry, planar parallel mechanism, singularity, self motion
1.
Introduction
Often, the main drawback of choosing design conditions for which the
direct kinematic problem of a parallel robot becomes simpliﬁed is the
appearance of self motions (Husty and Zsombor-Murray, 1994; Karger,
2002; Wohlhart, 2002). While self motions are certainly the worst type
of singularity a parallel robot could cross, they should simply be avoided
like any other type of singularity. Then, why not use parallel robots with
self motions if these robots have simpler direct kinematics?
For example, in a recent paper (Bonev et al., 2006), the authors have
shown that all singularities of the popular spherical parallel robot design,
known as the Agile Eye, correspond to self motions, yet this design is
arguably the “best” spherical wrist. (In the Agile Eye, any two axes
that are ﬁxed to one another are orthogonal.) Indeed, the singularity
loci of the Agile Eye are not surfaces but curves, which means that the
robot’s theoretical workspace is undivided and unlimited. Furthermore,
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 221–228. 
221
This paper studies the kinematic geometry of a 3-RPR planar parallel

while the Agile Eye still has eight assembly modes, like any other 3-RRR
parallel wrist (R stands for revolute and P for prismatic joint, and an
underline indicates which joint is actuated), half of them correspond to
four singular orientations and the other half are easily found in cascade.
Self motions have been investigated mainly for Stewart-Gough plat-
forms. Few planar parallel robots with self motions have been studied,
and the kinematics of the general 3-RPR planar parallel robot was only
brieﬂy considered in two papers (Merlet, 1996; Bonev et al., 2003). We
came up with a special design for this peculiar planar parallel robot on
a fruitless search for a planar equivalent to the Agile Eye. While our
special 3-RPR planar parallel robot is certainly not the most useful one,
the study of its self motions brings insight into the complex relationship
between direct kinematics and singularities of parallel robots.
In the next section, we will brieﬂy present the analytic expression for
the singularity loci of our special 3-RPR planar parallel robot. We will
identify a range of orientations for which the robot has a suﬃciently
large singularity-free workspace. Then, in Section 3, we will describe
the several types of singular conﬁgurations by studying the degeneracies
of the direct kinematics and show that they belong to self motions.
Conclusions are given in the last section.
2.
Singularity Loci
The special 3-RPR planar parallel robot is shown in Fig. 1. Its mobile
platform and base form congruent equilateral triangles. We denote with
Oi and Bi (in this paper, i = 1, 2, 3) the intersections of the base and
platform revolute joint axes, respectively, with a plane normal to these
axes. Then, let Oxy and Cx′y′ be the base and mobile reference frames,
respectively. The generalized coordinates locating the mobile platform,
i.e., the mobile frame Cx′y′, in the base frame Oxy will be denoted by
x, y, and φ. We deﬁne each active-joint variable θi as the angle between
the x-axis and a unit vector vi that deﬁnes the direction of the prismatic
joint of leg i, measured in counter-clockwise sense. Finally, the directed
distance from point Oi to point Bi along vector vi is denoted by ρi.
Skipping the derivation and referring the reader to (Bonev et al.,
2003), the velocity equation for the 3-RPR planar parallel robot is
A ˙q =
⎡
⎢⎣
m1 fT
1
m2 fT
2
m3 fT
3
⎤
⎥⎦
⎡
⎢⎣
˙φ
˙x
˙y
⎤
⎥⎦=
⎡
⎣
ρ1
0
0
0 ρ2
0
0
0 ρ3
⎤
⎦
⎡
⎢⎣
˙θ1
˙θ2
˙θ3
⎤
⎥⎦= B ˙θ ,
(1)
where
fi = E vi =
 −sin θi
cos θi

= E (rOC + rCBi −rOOi)/ρi,
(2)
222
D. Chablat, P. Wenger and I.A. Bonev

Figure 1.
3-RPR planar parallel robot with congruent equilateral base and platform.
mi = fT
i E rCBi = fT
i E R r′
CBi,
(3)
and
E =
 0 −1
1
0

, R =
 cos φ −sin φ
sin φ
cos φ

.
(4)
Furthermore, rOC = [x, y]T , rOOi and rCBi are the vectors along OOi
and CBi, respectively, expressed in the base frame, and r′
CBi is the vector
along CBi expressed in the mobile frame. Without loss of generality, we
deﬁne these vectors as
rOO1 = r′
CB1 =

−1/2
−
√
3/2

, rOO2 = r′
CB2 =

1/2
−
√
3/2

,
rOO3 = r′
CB3 =
 0
0

,
or, in other words, we set the sides of the base and platform to unity,
and ﬁx the base and platform frames at points O3 and B3, respectively.
Type 2 singularities occur when A is singular. Geometrically, this
means that the lines normal to the directions of the prismatic joints and
passing through points Bi are concurrent or parallel. Simplifying the
determinant of A and zeroing yields:
det(A) =
√
3(cos φ −1)
2ρ1ρ2ρ3

(x −xc)2 + (y −yc) −r2
= 0,
(5)
where
xc = −1
√
3 sin φ, yc = −1
√
3(1 −cos φ), r =

2(1 −cos φ)
3
.
Self Motions of Special 3-RPR Plane Parallel Robot
R
223

O1
O2
O3 O
B1
B2
B3 C
x
x'
y'
-
Figure 2.
Singularity loci and singularity-free workspace for φ ∈[120◦, 240◦].
Therefore, Type 2 singularity loci for this mechanism are (a) the whole
xy-plane, when φ = 0 (the directions of all prismatic joints are parallel),
and (b) a circle of radius r, centered at (xc, yc), which passes through
O3, when φ ̸= 0. Note, however, that Eq. (1) is of indeterminate form
(0/0) at a Type 1 singularity. Indeed, at a Type 1 singularity, a motor
can freely rotate without aﬀecting the pose of the platform. Such a pose
would be Type 2 singular only for speciﬁc combinations of the active-
joint variables that correspond to singular legs.
We will conclude this section by proposing a range of orientations for
which the singularity-free workspace is suﬃciently large. Apparently,
this range needs to exclude φ = 0, and if symmetry is to be observed,
the best choice would be a range centered at φ = 180◦. Figure 2 shows
our parallel robot with a series of Type 2 singularity circles corresponding
to φ = 120◦+ k10◦(k = 0, 1, 2, ..., 12). The dots correspond to Type 1
singularities. The singularity-free workspace for the orientation range
φ ∈[120◦, 240◦] is the one that excludes the circle-swept region in Fig. 2.
Based on this purely algebraic analysis, it is certainly not obvious, but
one can verify by using Eq. (5) that for any Type 2 singular conﬁguration
for which φ ̸= 0, lines OiBi intersect at a common point lying on the
circumcircle of the base (see the gray-colored conﬁguration in Fig. 2).
D. Chablat, P. Wenger and I.A. Bonev
224

Figure 3.
Geometric interpretation of the direct kinematic model.
3.
Degeneracies of the Direct Kinematics
In order to study the global behavior of the parallel robot at all singu-
larities, we will analyze its direct kinematic model. Indeed, this approach
is the most intuitive one and gives a clear geometric interpretation of
all singular conﬁgurations. It is usually very diﬃcult or even impossible
to follow this approach, but in our case the direct kinematic model is
particularly simple. Indeed, whatever the active-joint variables, there is
always the trivial solution when the base and platform coincide.
Merlet (1996) showed that the direct kinematic problem of 3-RPR
planar parallel robots is equivalent to intersecting an ellipse with a line,
but did not study any special cases. Let us dismount the revolute joint
at B3. For given active-joint variables, points B1 and B2 are constrained
to move along two lines (Fig. 3), L1 and L2, respectively, and the mobile
al., 1998). As a result, B3 describes a curve, E, that is an ellipse, two
parallel lines, a line, or a doubly traced line segment. Obviously, this
curve contains point O3 (i.e., O). Considering leg 3, B3 should also lie
on a line passing through O3, denoted by L3. Thus, the direct kinematic
problem is equivalent to ﬁnding the intersections between L3 and E.
Let us now derive the elliptic curve E. We can write the following
closure equation for point C ≡B3:
rOC = rOO1 + ρ1v1 −rCB1 = rOO2 + ρ2v2 −rCB2.
(6)
This yields the following system of two equations:
−1 + ρ1 cos θ1 + cos φ −ρ2 cos θ2 = 0,
(7)
ρ1 sin θ1 + sin φ −ρ2 sin θ2 = 0.
(8)
225
Self Motions of Special 3-RPR Plane Parallel Robot
platform undergoes a Cardanic movement (see for example Tischler
et

°
°
Figure 4.
Cardanic self motion when the legs are concurrent and make equal angles.
Solving Eqs. (7) and (8) for ρ1 and ρ2, and substituting the results in
Eq. (6), we obtain the following parametric equation in φ:
x =
 cos θ1 sin θ2
sin(θ1 −θ2) + 1
2

(cos φ −1) −
.
cos θ1 cos θ2
sin(θ1 −θ2) +
√
3
2
/
sin φ,
(9)
y =
.
sin θ1 sin θ2
sin(θ1 −θ2) +
√
3
2
/
(cos φ −1) −
 sin θ1 cos θ2
sin(θ1 −θ2) −1
2

sin φ. (10)
The above parametric equation is not deﬁned when sin(θ1 −θ2) = 0,
a case that will be studied later. If sin(θ1 −θ2) ̸= 0, i.e., if L1 and L2
are not parallel, then the elliptic curve degenerates if, and only if, its
curvature is zero for any φ. The curvature, κ, of E can be derived as
κ =
˙x¨y −˙y¨x
( ˙x2 + ˙y2)3/2 = sin(θ1 −θ2 + π/3)
D3
,
(11)
where D is a relatively large expression in θ1, θ2, and φ.
Therefore, when L1 and L2 make a 60◦angle, κ = 0, and E degenerates
to a line. In other words, if, and only if, the point of intersection between
L1 and L2, denoted by P12, lies on the curcumcircle of the base, denoted
by C, E degenerates to a line (Fig. 4). In fact, it degenerates to a doubly
traced line segment of length 4/
√
3 (Tischler et al., 1998).
This line
segment is centered at P12 and passes through O. When P12 ≡O, the
doubly traced line segment is parallel to O1O2.
As we said before, the direct kinematic problem is equivalent to ﬁnd-
ing the two intersection points between L3 and E, of which one is always
O. We will not present an actual algorithm for determining the other
intersection point (x, y) and the corresponding platform orientation φ,
but only investigate the singular conﬁgurations corresponding to all par-
ticular cases in which there is a single or inﬁnitely many solutions.
D. Chablat, P. Wenger and I.A. Bonev
226

Case 1a: sin(θ1 −θ2) = 0 and cos θ1 cos θ2 ̸= 0
In this case, L1 and L2 are parallel and E degenerates to two lines parallel
to L1 and L2, one of which passes through O.
 If L3 is parallel to L1 and L2, the platform vertices can slide along
L1, L2 and L3, with φ = 0, even though all actuators are blocked.
 If L3 is not parallel to L1 and L2, the platform can assume a
nonsingular conﬁguration, as well as the trivial solution q = 0,
for which the corresponding conﬁguration is only Type 1 singular
(i.e., the platform is not shaky; in fact, it is jammed).
Case 1b: cos θ1 = 0 and cos θ2 = 0
In this case, L1 and L2 are parallel to the y-axis and E degenerates to a
single line parallel to L1 and L2, and passing through O.
 If L3 is parallel to L1 and L2, the platform vertices can slide along
L1, L2 and L3, with φ = 0, even though all actuators are blocked.
 If L3 is not parallel to L1 and L2, the platform can assume only
the trivial solution q = 0, and the conﬁguration is Type 1 and
Type 2 singular (the platform can rotate inﬁnitesimally).
Case 2: sin(θ1 −θ2 + π/3) = 0
In this case, L1 and L2 make a 60◦angle and their intersection point,
P12, lies on C (Fig. 4). The curve E degenerates to a doubly traced line
segment passing through P12 and O (if P12 ≡O, E is parallel to O1O2).
 If L3 is collinear with E, then point B3 can slide along E while the
platform changes orientation simultaneously (Fig. 4), even though
all actuators are blocked (as in Reuleaux straight-line mechanism).
 If L3 is not collinear with E, then the platform can assume two
possible poses. The ﬁrst one is the trivial solution q = 0, while the
second one is q = [180◦, 0, 0]T . For both poses, the corresponding
conﬁgurations are only Type 1 singular (the platform is jammed).
Case 3: sin(θ1 −θ2 + π/3) sin(θ1 −θ2) ̸= 0
In this case, L1 and L2 intersect at a point that does not lie on C, and
E is an ellipse (Fig. 3).
 If L3 is tangent to E at O, then the platform can assume only the
pose q = 0, and the corresponding conﬁguration is both Type 1
and Type 2 singular (there is no self motion). Indeed, it can be
shown that at this conﬁguration, the normals to L1, L2 and L3
passing through B1, B2 and B3, respectively, are concurrent.
 If L3 is not tangent to the ellipse, then the mobile platform can
assume the pose q = 0, for which the corresponding conﬁguration
is only Type 1 singular, and another nonsingular pose (Fig. 3).
227
Self Motions of Special 3-RPR Plane Parallel Robot

4.
Conclusions
This paper described the kinematic geometry of a 3-RPR planar par-
allel robot with congruent equilateral base and mobile platform. It was
shown that the only singular conﬁgurations, for which the base and mo-
bile platform do not coincide, belong to self motions. They occur when
the legs intersect at the circumcircle of the base or are parallel. Once
again, It was demonstrated that careful analysis of the degeneracies of
the direct kinematic model provides a convenient geometrical tool for
better understanding the global behavior of singularities.
Parallel robots with identical base and mobile platform allow self mo-
tions but have interesting characteristics and simpler geometric models.
The authors believe that these robots deserve further attention as they
are likely to ﬁnd use in practice or lead to better understanding some
theoretical issues. This design simpliﬁcation approach will next be ap-
plied to 3-RRR planar parallel robots. These robots are undoubtedly
the cheapest alternative for planar motion, from the hardware point of
view, but are still too complex to design optimally.
References
Bonev, I.A., Chablat, D., and Wenger, P. (2006), Working and assembly modes of the
Agile Eye, Proceedings of the 2006 IEEE International Conference on Robotics and
Automation, Orlando, Florida, May 15–19.
Bonev, I.A., Zlatanov, D., and Gosselin, C.M. (2003), Singularity analysis of 3-DOF
planar parallel mechanisms via screw theory, Journal of Mechanical Design, vol. 125,
no. 3, pp. 573–581.
Husty, M., and Zsombor-Murray, P. (1994), A special type of singular Stewart-Gough
platform, Advances in Robot Kinematics and Computational Geometry, J. Lenarˇciˇc;
and B. Ravani (eds.), Kluwer Academic Publishers, The Netherlands, pp. 449–458.
Karger, A. (2002), Singularities and self motions of a special type of platforms, Ad-
vances in Robot Kinematics, J. Lenarˇciˇc; and F. Thomas (eds.), Kluwer Academic
Publishers, The Netherlands, pp. 449–458.
Merlet, J.-P. (1996), Direct kinematics of planar parallel manipulators, Proceedings of
the 1996 IEEE International Conference on Robotics and Automation, Minneapolis,
Minnesota, pp. 3744–3749.
Tischler, C.R., Hunt, K.H., and Samuel, A.E. (1998), A spatial extension of Cardanic
movement: its geometry and some derived mechanisms, Mechanism and Machine
Theory, vol. 33, no. 8, pp. 1249–1276.
Wohlhart, K. (2002). Synthesis of architecturally mobile double-planar platforms, Ad-
vances in Robot Kinematics, J. Lenarˇciˇc; and F. Thomas (eds.), Kluwer Academic
Publishers, The Netherlands, pp. 473–482.
D. Chablat, P. Wenger and I.A. Bonev
228

GRAPHICAL SINGULARITY ANALYSIS OF    
3-DOF PLANAR PARALLEL MANIPULATORS 
Amir Degani 
Robotics Institute 
Carnegie Mellon University 
degani@cmu.edu 
Alon Wolf 
Dept. of Mechanical Engineering  
Technion – Israel Institute of Technology 
alonw@tx.technion.ac.il 
Abstract 
This paper introduces a new approach to identify singularities of planar 
parallel manipulators (PPMs). This method is based on Maxwell’s reciprocal 
figure theory which establishes a duality between self-stress frameworks 
and reciprocal figures. We use line geometry tools to introduce a new 
graphical construction called the Mechanism’s Line of action Graph (MLG). 
The MLG is introduced in order to implement Maxwell’s Reciprocal Figure 
theory to mechanisms. In this paper, we show that the configurations where 
the MLG has a connected reciprocal figure imply a singularity type-II in the 
mechanism. This singularity analysis tool is also used to trace the 
singularity loci of the PPM.  
Keywords: 
Graphical Analysis, Maxwell’s Reciprocal Figure Theory, Parallel Manipulators,
 Singularity 
1. 
Introduction 
This paper focuses on the singularity analysis of planar parallel 
manipulators (PPMs). Specifically we analyze the type-II singularity of 
fully parallel planar manipulators which are planar three-degree-of-
freedom (3-DOF) parallel manipulators, consisting of three limbs, each 
consisting of one actuated joint and two unactuated (passive) joints. Most 
of the approaches to finding singularities of parallel manipulators 
address the singularity types that were introduced by Gosselin and  
Angeles (Gosselin and Angeles, 1990). These types of singularities are 
based on the singularity of the Jacobian matrix, which maps the 
Cartesian velocities of the end-effector onto the joint velocity vector. 
We confront the problem of the singularity analysis somewhat 
differently than most approaches. We first represent the manipulator 
graphically using a known line geometry tool, the reciprocal screw. This 
229 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 229–238. 
© 2006 Springer. Printed in the Netherlands. 

230 
A. Degani and A. Wolf 
screw, which is reciprocal to all the unactuated joint twists of the limb, 
represents the line of action of a limb, which is the wrench that a limb 
applies to the end-effector. We represent the line of action of each limb of 
the manipulator as an edge in the Mechanism’s Line of action Graph 
(MLG). Then, in order to find the “graphical singularities” we use a 
theory that goes back to the mid 19th century, Maxwell’s Reciprocal 
Figure theory (Maxwell, 1864), to construct a dual graph (reciprocal 
figure) of the MLG. We will show that when a reciprocal figure of the 
MLG can be constructed, this specific configuration of the manipulator is 
a type-II singular configuration (Gosselin and Angeles, 1990). A different 
starting point of the analysis is with a connected reciprocal figure upon 
which the MLG is built. In this type of analysis, when the configuration 
of the reciprocal figure is changed (while still being connected), the cor-
responding manipulator will change configuration but will continuously 
be in a singular configuration, resulting in the PPM’s singularity loci. 
2. 
Preliminaries 
We first present a brief explanation of the tools that led to the 
development of the presented graphical approach. 
2.1 
Reciprocal Screws and the Limb’s Line of Action 
Finding the line of action for each limb of the manipulator is the first 
step in constructing the Mechanism’s Line of Action Graph (MLG). We 
use reciprocal screws to find these lines of action. Tsai developed a 
specific procedure for the derivation of reciprocal screw and its app-
lication for the Jacobian analysis of parallel manipulators (Tsai, 1998). 
Bonev used derivations of reciprocal screws in the specific case of PPMs 
(Bonev, 2002), which is relevant for the current analysis. 
The reciprocal screw, which is reciprocal to the two unactuated joints 
of each limb, is a wrench which if applied to the platform, can be resisted 
solely by the actuated joint of the limb. This reciprocal screw is the line of 
action of the ith limb, also known as the governing line of the limb (Hunt, 
1978; Tsai, 1998). The two most common cases of unactuated joints in 
PPMs are either two revolute joints or one revolute joint and one 
prismatic joint. A third, less common case, is a limb consisting of two 
unactuated prismatic joints. In the case of two revolute joints, the 
reciprocal screw is a pure force (zero pitch screw) passing through the 
two unactuated revolute joints (Fig. 1a,b,c). In the case of one revolute 
and one prismatic unactuated joints, the screw is a pure force passing 
through the unactuated revolute joint and perpendicular to the axis of 

Graphical Singularity Analysis of 3-DOF PPMs 
231 
the unactuated prismatic joint (Fig. 1d,e). In the case of a limb consisting 
of two unactuated prismatic joints, the line of action is a pure torque in 
the direction going out of the plane (Fig. 1f), which will only enable a 
pure torque and will constrain the platform to rotation only. For this 
reason, only one such limb can be included in the design of a PPM. 
a 
b 
c 
d 
e 
f 
Passive revolute joint 
 Active revolute joint 
  Passive prismatic joint     Active prismatic joint   
line of action 
Figure 1.
 Examples of typical limbs of PPMs and their reciprocal screws corres-
ponding to the lines of action 
2.2 
Maxwell’s Reciprocal Figure Theory 
In the mid 19th century James Clerk Maxwell (Maxwell, 1864) 
described a three-way connection between self stresses in planar bar-
joint framework (static rigidity), reciprocal figures, which are dual 
figures of the bar framework, and spatial polyhedra. In this paper, we 
only focus on the first two components of the theory, i.e. the connection 
between self stress framework and the existence of a reciprocal figure. 
A bar framework in the plane is a graph which represents a structure 
constructed out of bars and joints. The bars are represented as edges and 
the joints as vertices. If the ith vertex is marked pi  then the direction of 
the edge connected by the ith and jth joint is represented as p
p
i 
j . The 
force inside the bar is in the direction of the edge multiplied by a scalar 
Z ij  which is the scale of the force in the bar ( Z ij t 0 represents tension 
and Z ij d 0  represents compression.)  
The forces reach equilibrium at the joint pi  if the sum of the forces in 
j bars connected to the joint pi  is equal to zero: 
¦ Z (p  p )  0 
(1)
 
j
ij
j
i
A self stress of a bar framework is an assignment of scalars Z ij to the 
edges such that, for each vertex pi , Eq. 1 will be realized. 
A bar framework is fully self stressed if for allZ ij ,Z ij z 0 . 
Maxwell’s reciprocal figure theory states that a plane framework or a 
planar graph supports a full self stress if and only if it has a reciprocal 
figure. Moreover, this graph should be vertex 2-connected and edge 
3-connected which means that removing any one vertex and its edges 
.

232 
A. Degani and A. Wolf 
leaves the vertex set connected by the remaining edges, and removing 
any two edges leaves the vertex set connected by the remaining edges. 
A graph is a reciprocal figure to another if the two graphs consist of 
an equal number of edges, corresponding edges in the two graphs are 
perpendicular, and corresponding edges which converge to a point in one 
graph form a closed polygon in the other. This definition of a reciprocal 
figure clarifies the connection between Eq. 1 (equilibrium at a vertex in a 
self stressed framework), and the duality between edges converging to a 
point in one graph and edges forming a closed polygon in the other. 
This connection between reciprocal figure and self stress in a frame-
work is the foundation of the connection we present between reciprocal 
figure and singularity type-II of a PPM. For additional insights and a 
complete proof of Maxwell’s reciprocal figure theory we refer the reader 
to (Crapo and Whiteley, 1993). 
3. 
Singularity Analysis Method and Examples  
When using the singularity analysis method presented in this paper 
one should apply the following three main steps on a given PPM: 
STEP 1: Construct an MLG for the specific PPM. 
STEP 2: Construct a reciprocal graph based on the obtained MLG. 
STEP 3: Find the configurations of the manipulator in which the reciprocal 
graph is connected. In these configurations the manipulator is in 
type-II singularity. 
As mentioned earlier, we conduct our investigation on fully parallel 
planar manipulators which consist of three limbs, each containing one 
actuated joint and two unactuated (passive) joints. Even though the 
examples provided in this paper are of identical limb manipulators, 
the method can be applied to different types of PPMs. We use the 
conventional notation of PPMs by using R to describe revolute joints and 
P to describe prismatic (linear) joints. Actuated joints are marked with 
an underline. When the three limbs of the PPM are identical the 
manipulator is marked by a preceding ‘3
‘
 (for example: 3-RRR). 
3.1 
Constructing the MLG of PPMs 
Given a PPM we represent its kinematic structure in a graphical 
representation which mainly represents the line of action of each of the 
limbs of the PPM. This graphical representation is then used as a planar 
graph with Maxwell’s reciprocal figure theory. In order to construct the 
Mechanism’s Line of action Graph (MLG) we identify the reciprocal 
screw for each of the limbs of the PPM (as described in Section 2.1).  

233 
Graphical Singularity Analysis of 3-DOF PPMs 
The three limbs of a PPM can be connected to the end-effector either 
by revolute joints or by prismatic joints. This difference will affect the 
construction of the MLG. To begin an MLG construction of a PPM 
connected with revolute joints (Fig. 2a), the three vertices of the end-
effector should be marked (Fig. 2b). From each of the end-effector’s 
vertices an edge corresponding to the line of action of the limb is 
constructed. Figure 2c illustrates the three reciprocal screws corres-
ponding to the line of action of each limb (marked as dotted 
arrows). Even though the length of the edge corresponding to the line of 
action is not essential for this method, we draw the length of the edge 
equal to the length of the link closest to the end-effector (Fig. 2d). 
Finally, the three ground vertices of the line of actions’ edges are to be 
connected (Fig. 2e). The ground vertices are located at the distal end of 
the line of action’s edge with respect to the end-effector. 
The MLG is changed depending on the configuration of the 
manipulator. In most PPMs, the ground vertices in the MLG are not 
static (as in the case of the 3-RRR in Fig. 2). This does not affect our 
results because we are only analyzing the instantaneous kinematics of 
the manipulator’s end-effector. A similar step by step construction of an 
MLG of a 3-RPR is shown in Fig. 3. 
a 
b 
c 
d 
e 
Figure 2. 
Example of the construction of the MLG for a 3-RRR manipulator 
a 
b
 
c 
d 
e 
Figure 3.
 Constructing the MLG for a 3-RPR manipulator 
The main difference between the two MLGs in Fig. 2e and Fig. 3e is 
the line of action of each limb. In Fig. 3 the reciprocal screws that 
correspond to the lines of action of the limbs pass through the center of 
the passive revolute joints of the limb (first and third joints). In Fig. 2 the 
lines of action pass through the second and third joints which are the 
passive ones. 
In the case of a limb connected to the end-effector by prismatic joints 
(Fig. 4a), the construction of the MLG should begin from the ground 
.
.

234
A. Degani and A. Wolf 
vertices. First the three ground vertices are constructed. From each of 
the ground vertices an edge corresponding to the line of action of the limb 
is constructed (Fig. 4b). Three vertices are constructed on each of the 
edges corresponding to the line of action at a constant, arbitrary unit 
distance from the ground vertex (Fig. 4c). Connecting these three vertices 
and the three ground vertices finalizes the construction of the MLG (Fig. 
4d). 
An example of a degenerate case of a PPMs end-effector, in which the 
three distal joints create a line, is shown in Fig. 5a. To construct an MLG 
for this special case the end-effector should still be thought of as a 
triangle in a degenerate configuration (Fig. 5b). 
a 
b
c
d 
Figure 4. 
Example of the construction of the MLG for a 3-RPP manipulator 
a 
b 
Figure 5.
 Construction the MLG for a 3-RPR manipulator with degenerate end-
effector 
It is important to note that for now it is not feasible when using this 
method to represent the line of action of a limb consisting of two passive 
prismatic joint in an MLG (i.e. a pure torque out of the plane). 
3.2 
Constructing a Reciprocal Graph of the PPM’s 
MLG 
Figure 6 presents a step by step construction of the reciprocal figure of 
the 3-RPR. We use a dynamic geometry program that enables us to 
construct the reciprocal figure for a given configuration so that when the 
mechanism is moved, the reciprocal figure will change correspondingly. 
We note that these constructions can be drawn using a simple ruler and 
a compass (most likely the tools that the late Maxwell originally used), 
but for every different configuration, a new reciprocal graph should be 
.
.

a
b
c 
1
2
3
4
1
2
3
4
7
6
5
1 
2 
3 
4 
7 
6 
5 
8 
9 
d
p’ 
q 
q’ 
9 8 
e
 
Graphical Singularity Analysis of 3-DOF PPMs 
235 
drawn. The MLG that was constructed for the 3-RPR PPM in Fig. 3, is 
given in Fig. 6a. To start the construction of the reciprocal figure an 
arbitrary inner polygon in the MLG is picked (polygon (1,2,3,4)). An 
initial vertex is drawn and the four perpendicular lines corresponding to 
the polygon’s edges are constructed (Fig. 6b). Then another vertex 
is drawn on line (4) since its corresponding edge is shared by the top 
two inner polygons in the MLG. Next, the three perpendicular lines 
corresponding to the remaining edges of the top right polygon in the 
MLG (edges 5, 6, and 7) are constructed (Fig. 6c). The reciprocal graph 
should eventually consist of edges and not infinite lines. In order to 
correctly trim the lines we have constructed we need to determine the 
intersections that are actually vertices that correspond to closed polygons 
in the MLG. The intersections that join lines correspond to edges of the 
closed polygons that have not yet been addressed need to be marked, i.e. 
the bottom polygon, the center triangle and the outer triangle. In Fig. 6d 
the three vertices are marked (3/7, 1/5, 6/2). For example the 1/5 ver-
tex corresponds to the 1,4,3,2 polygon, and so forth. To finalize the cons-
truction of the reciprocal figure, edges 8 and 9 (from the bottom polygon) 
should be added to the bottom vertex of the reciprocal figure, perpendi-
cular to their corresponding edges (Fig. 6e). Note that these two edges 
(8, 9) are not connected to their correct vertices (vertices p and q). 
This means that the reciprocal figure cannot be constructed for this 
particular configuration. Therefore, the specific configuration of the PPM 
(Fig. 3a) for which this MLG was constructed (Fig. 3e), is not a type-II 
singularity. We note that the order in which we construct the reciprocal 
figure may change the resulting edges that are not connected; however, 
this does not change the overall existence of the reciprocal figure. The 
construction of the reciprocal figure for the 3-RRR manipulator is done in 
a similar way since the MLGs are similar. 
constructed in a similar way, while keeping in mind that the three joints 
(in this case on a line) are actually a degenerate triangle. In this case 
three of the edges of the reciprocal figure will always be parallel to each 
other and will always coincide at infinity.  
Figure 6.
  Construction of the reciprocal figure for a 3-RPR PPM 
The construction of the degenerate end-effector (Fig. 5) can also be 
.

236 
A. Degani and A. Wolf 
3.3 
The Singularity/Self Stress Connection  
Once the MLG of a PPM and a reciprocal figure are constructed, one 
can use them for the singularity analysis of PPMs. Maxwell’s theory 
(section 2.2) presents a connection between the existence of a reciprocal 
figure and self stress in a framework. We will now analyze a self-stressed 
MLG (Fig. 7) in order to demonstrate the connection between self-stress 
and singularity. Based on the definition of self stress framework, when a 
bar-joint framework is in self stress, the sum of the forces of the bars 
connected to a joint is equal to zero. Three equations corresponding to the 
sum of forces in the three vertices 1,2,3 can be written as: 
Sum of forces in vertex 1: a + d + f  = 0 ,
 
(2)
 
Sum of forces in vertex 2: b - d + e = 0 , 
(3) 
Sum of forces in vertex 3: c - e - f  = 0 .
 
(4)
 
These three equations are vector summations. We arbitrarily assign the 
direction of the forces and consistently add the forces. Therefore, some of 
the forces in Eq. 2-4 are negated. Summing Eq. 2, 3, and 4: 
a + b + c = 0
 (5) 
a 
b 
c 
d 
f 
e 
2
1 
3 
Figure  7. 
“Singular” (self stress) configuration of MLG 
Equation 5 confirms a linear dependency of the three forces a, b, and c. 
These three forces are the forces corresponding to the lines of action of 
the three limbs. The meaning of this dependency is that these three 
limbs cannot generate instantaneous work (virtual work (Hunt, 1978)) on 
the end-effector while it is moving in an instantaneous twist deformation 
resulting from an external wrench applied on it. Therefore, self stress in 
a framework is equivalent to a type-II singularity of a PPM. It is now 
evident that the existence of a reciprocal figure indicates a self stress 
framework, and in a similar way indicates a singular configuration in a 
mechanism.  
3.4 
Locating the Singular Configurations 
To find the configurations where there exists a reciprocal figure to a 
particular PPM, and therefore it is in a singular configuration, one 
should move the manipulator by changing its joint parameters while 
tracking for configurations in which the reciprocal figure is visually 
.

237 
Graphical Singularity Analysis of 3-DOF PPMs 
connected, e.g. in Fig. 6e, vertices p and q merge with p’ and q’ 
respectively. Figure 8 shows examples of PPM configurations in which 
the reciprocal figure is connected and the manipulator is in a singular 
configuration. 
Figure 8. 
Two examples of singular configurations and the connected reciprocal 
 figures (3-RPR left, 3-RRR right)   
So far the search for a singular configuration was carried out by 
changing the joint parameters of the manipulator and checking for the 
existence of a connected reciprocal figure. If the analysis is constructed 
the other way around, so that a connected reciprocal figure is first 
constructed and only then an MLG is constructed to be reciprocal to it, 
we can trace the loci of the singular configurations of the manipulator by 
changing the reciprocal figure while keeping it connected (Fig. 9 left). 
Note that the construction of the reciprocal figure in this case is based on 
mechanical constraints of the PPM, e.g. the fixed shape of the end-
effector. Moreover, the singular configuration’s loci are traced relative to 
a constant orientation of the PPM in order to enable us to plot the loci as 
a 2-D graph. We refer the readers to (Sefrioui and Gosselin, 1995) to 
examine the consistency of the results. 
More examples, including JAVA applets of this method, can be found 
at: www.cs.cmu.edu/~adegani/graphical/ . 
Figure 9. 
 (Left) Singularity loci of 3-RPR in two different constant orientations 
of the end-effector. (Right) A loci plot from six different orientations of the end-
effector  (0,5, 10, 15, 20, and 25 degrees) 
.
.

238 
A. Degani and A. Wolf 
4. 
Conclusion and Future Work 
References 
Bonev, I.A. (2002), Geometric analysis of parallel mechanisms. Ph.D. Thesis, 
Laval University, Quebec, QC, Canada. 
Crapo, H., and Whiteley, W. (1993), Plane self stresses and projected polyhedra I: 
Gosselin, C., and Angeles, J. (1990), Singularity analysis of closed-loop kinematic 
chains. IEEE Transactions on Robotics and Automation no. 3, vol. 6, pp. 281-
290. 
C. Galletti, Advances in Robot Kinematics, Kluwer Acad. Publ., pp. 89-96. 
Maxwell, J.C. (1864), On reciprocal figures and diagrams of forces. Phil. Mag no. 
27, vol. 4, pp. 250-261. 
Sefrioui, J., and Gosselin, C.M. (1995), On the quadratic nature of the 
singularity curves of planar three-degree-of-freedom parallel manipulators. 
Mechanism and Machine Theory no. 4, vol. 30, pp. 533-551. 
Tsai, L.W. (1998), The Jacobian analysis of a parallel manipulator using 
reciprocal screws, Proceedings of the 6th International Symposium on Recent 
Advances in Robot Kinematics, Salzburg, Austria. 
The graphical method which is presented and implemented in this paper 
results in comparable outcomes to those obtained by other approaches
(e.g. Sefrioui and Gosselin, 1995), yet avoids some of the complexities in-
volved in analytic derivations. It is worth mentioning that the method we 
present can be potentially applied to non-identical limb manipulators and 
to other types of mechanisms as well. The method makes use of reciprocal 
screws to represent the lines of action of PPMs’ limbs in a Mechanism’s 
Line of action Graph (MLG), an insightful graphical representation of the 
mechanism. Maxwell s theory of reciprocal figure and self stress is then
’
applied to create a dual figure of the MLG. Analyzing this dual (reciprocal) 
the loci o
figure provides us with the singular configurations of the PPM and with 
We are currently facing the challenge of expanding this graphical
able to use our relatively simple method to find the singular configura-
tions of complex three-dimensional manipulators, such as a 6-DOF 
Gough-Stewart platform. One possible way to achieve this goal is to 
method to the analysis of three-dimensional manipulators. We hope to be 
project the spatial lines of action of the limbs on one or more planes 
(Karger, 2004). We believe a self-stress analysis of these projected graphs,
similar to the one done on PPM, will offer insight into the singular confi-
guration of these non-planar manipulators.  
The basic pattern. Structural Topology no. 1, vol. 20, pp. 55-78. 
Hunt, K.H. (1978), Kinematic Geometry of Mechanisms, Oxford, Clarendon Press. 
singular configurations of the manipulator. 
f
J. Lenarcic and 
Karger, A. (2004), Projective properties of parallel manipulators, 
^
^

DIRECT SINGULARITY CLOSENESS
INDEXES FOR THE HEXA PARALLEL
ROBOT
Carlos Bier*, Alexandre Campos, J¨urgen Hesselbach
Institute of Machine Tools and Production Technology - TU Braunschweig
Langer Kamp 19b, 38106 Braunschweig, Germany
* c.bier@tu-bs.de
Abstract
Direct kinematic singularities constrain the internal robot workspace
and the proximity to them must be detected online as fast as possible
for non deterministic trajectories. Direct singularity proximity for the
Hexa parallel robot is measured by means of three measure indexes with
two diﬀerent physical bases. In this paper a new index based on Grass-
mann geometry to measure the singularity closeness is introduced. This
method and methods based on constraint minimization are applied and
validated in the Hexa robot. From the results we observe, for instance,
that the new index requires less time than the constraint minimization
methods but requires a better knowledge of the robot structure.
Keywords: Parallel Manipulator Singularities, Grassmann Geometry, Constrained
Minimization
1.
Introduction
A measure of the direct singularity closeness for parallel manipulators
is required aiming at a safe operation space. For parallel robots as the
Hexa robot (Fig. 3d), workspace is limited by direct kinematic singu-
larities as well as by inverse kinematic singularities. Direct kinematic
singularities allow the end eﬀector to gain unconstrained movements.
Its identiﬁcation has been studied from diﬀerent perspectives. The van-
ishing of the Jacobian determinant has been used for particular parallel
robots. However it is a product of factors and thus it suﬀers from the fact
that close to a singularity, where a factor shrinks to zero, other factors
may be big enough and the determinant does not indicate the singularity
closeness. Additionally, the physical meaning of the determinant is not
clear.
Qualitative conditions, based on Grassmann geometry, are proposed
to detect singularities of triangular simpliﬁed symmetric manipulators
[Merlet, 2000].
Quantitative approaches use a numerical measure to
determine how close a robot position is to a singularity. Diﬀerent mea-
© 2006 Springer. Printed in the Netherlands.
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 239–246.
239
-

sures have been used for this task, e.g. the natural frequency measure
[Voglewede and Ebert-Uphoﬀ, 2004], the power and the stiﬀness inspired
measure [Pottmann et al., 1998] based on a constraint minimization
In this paper a new method for quantitative measures of the direct
singularity closeness based on Grassmann geometry is presented. This
new method as well as the minimization based methods are applied to
the Hexa robot and the results are analyzed.
The six DOF Hexa robot is composed by six limbs connecting the
basis to the end eﬀector, see Fig. 3d.
Each limb contains an active
rotative joint Ai (for i = 1, · · · , 6). Its axes are ﬁxed to the basis plane,
a passive universal joint Bi and a passive spherical joint Ci connected to
the end eﬀector, so that all Ci joints deﬁne the end eﬀector plane. The
cranks and the passive links are connected at Bi. The six limbs of the
Hexa robot are arranged in three pairs of two active joints with collinear
rotational axes. The pairs of active joints are axisymmetrical, i.e. 120o
between each pair.
2.
In spatial parallel manipulators the relationship between actuator co-
ordinates q and end eﬀector Cartesian coordinates x can be stated as a
function f(q, x) = 0, where 0 is the 6-dimensional null vector. Therefore
the diﬀerential kinematic relation may be determined as
Jq ˙q −Jx$t = 0; Jq ˙q = Jx$t
(1)
where $t is the end eﬀector velocity twist in ray order and, Jx, Jq and
J = J−1
q Jx are the direct, inverse and standard Jacobian matrices, re-
spectively.
The rows of the direct kinematic matrix Jx may correspond to the
normalized screw of wrenches, in axis order acting upon the end eﬀec-
tor through the passive link, i.e. the distal link of each limb [David-
son and Hunt, 2004].
Therefore, a static relation may be stated as
JT
x τ =
ˆ$r1, · · · , ˆ$r6

τ = $r, where $r is the result wrench acting upon
the end eﬀector in axis order, τ = [τ1, · · · , τ6] are the input wrench mag-
nitudes and the columns of JT
x are the normalized screws (axial order)
of wrenches acting on the end eﬀector.
Singular conﬁgurations appear if either Jx or Jq drops rank. If Jx is
singular, a direct singularity is encountered and the end eﬀector gains
one or more uncontrollable degrees of freedom (DOF), on other hand if
240 
matrix algebra.
method as well as the condition number [Xu et al., 1994] based on
Parallel
anipulator Singularities
M
C. Bier, A. Campos and J. Hesselbach

Jq drops rank it looses at least one DOF. The direct singularity occurs
in the workspace and is the main aim of this paper.
The new method as well as the minimization based methods are in-
troduced and applied to the Hexa robot.
3.
The constraint minimization method determines closeness to singu-
larity through an optimization problem that results in a corresponding
generalized eigenvalue problem. Using this methodology it is possible
to describe the instantaneous behavior of the end eﬀector near singular-
ities for parallel manipulators in general [Voglewede and Ebert-Uphoﬀ,
2004, Hesselbach et al., 2005]. In this approach, an objective function
F($t) to be optimized is subject to move on a constraint h.
This is
formulated mathematically as:
M(X) =

min/max
F($t) = $T
t JT SJ$t
subject to
h = $T
t T$t −c = 0
(2)
where S (positive semideﬁnite) and T (positive deﬁnite) are n × n sym-
metric matrix and c is some positive constant, e.g. c = 1. The solution
of Eq. (2) gives the closeness measure to a singularity M(X) at a par-
ticular position and orientation X of the manipulator. The proposed
constrained optimization problem is found with the application of a La-
grange multiplier λ.
The local extrema of the Lagrangian ζ($, λ) =
F($t) −λh($t) are determined by its derivation. For a nontrivial solu-
tion to exist, the minimization (or maximization) of Lagrangian yields
det(JT SJ −λT) = 0, which is called the corresponding general eigen-
value problem. The smallest eigenvalue λmin will be the minimum value
of the objective function F($t), and so it can be utilized as a measure
value.
In general, this minimization problem was formulated based on an
arbitrary quantity for S and T [Voglewede and Ebert-Uphoﬀ, 2004].
Taking J = Jx, S = I6x6 and T = diag[000111], then √λmin is associ-
ated to the minimum power [∼W] of the system, which indicates the
manipulator singularity closeness.
Another possible way is to choose S as the stiﬀness matrix of the
actuators KAct and T as the mass matrix of the manipulator MEE (or for
simplicity the end eﬀector mass matrix, i.e. neglecting the limb masses).
Therefore, √λmin is associated to the ω natural frequency [∼Hz] of the
system (MEE ¨X −ω2KEE = 0), indicating the singularity closeness.
Both methods are applied in the Hexa robot (Fig. 3d) for its singu-
larity approximation measure. The measure behaviors of the minimum
power of the system through a singularity (Fig. 1a) is showed in Fig. 1b,
Direct Singularity Closeness Indexes for the Hexa Parallel Robot
241 
Constraint
inimization
M

here the end eﬀector twists θo around the $min (the end eﬀector twist
which requires minimum power in this singularity). The singularity oc-
curs when √λmin = 0, but a singular range exists due to clearance and
compliance of the system, where the end eﬀector is still unconstrained.
The singular range bound is experimentally identiﬁed as 0.029 ∼W and
upon it the manipulator stiﬀness is warranted into the whole workspace.

$tmin
20
30
40
50
60
70
80
0
20
40
60
80

angle
[°]
singular range
distance [mm]
Grassmann algorithm V5b
limit value (55 mm)
singularity
V5b
c)
d)
Bi
Ai
Ci
3
4
1 2
5
6
V5b
L
angle
[°]

0
10
20
30
40
50
60
0.01
0.02
0.03
0.04
singular range
power method
limit value (0.029 W)
~
singularity
V5a
power (
) [ W]
~
min
$tmin

$r1
$r2
$r3
$r5
$r4
a)
b)
4
5
1
2
6
3
V5a
Figure 1.
a) Grassmann variety V5a on the Hexa; b) Power based index; c) Grass-
man variety V5b; d) Grassman V5b based index
The same behavior is obtained through the frequency method. It is
important to notice that both methods detect all the singularities with
a unique index.
4.
Grassmann Geometry
A new index to determine closeness to singularities is obtained based
on Grassmann geometry.
eties of lines, i.e. the sets of linear dependent lines to n given indepen-
dent lines, and characterized them geometrically according to their rank
(1, · · · , 6) [Hesselbach et al., 2005]. A singular conﬁguration of the ma-
nipulator may be associated with a linear dependent set of lines, also
242 
Grassmann (1809–1877) studied the vari-
C. Bier, A. Campos and J. Hesselbach
.

called line based singularities. In general, the reciprocal wrenches $r
(Fig. 1a) to the passive twists of each manipulator leg are associated
to lines in the direction of the forces acting upon the end eﬀector, also
called Pl¨ucker vectors. Linear dependence among these lines represents
a direct singularity. These wrenches compose the Jx matrix (Sec. 2).
Using the Grassmann geometry we recognize that the Hexa robot may
be associated to several varieties. Some singularities of the Hexa robot
as well as correspondent varieties are shown in Figs. 1a, 1c and 2. In
the Hexa conﬁgurations of Fig. 2a, two wrenches are collinear and so $r1
and $r2 represent a Grassmann variety 1 (for short V1). Figure 2b shows
that four wrenches ($r1, $r2, $r3 and $r6) are on a ﬂat pencil V2b. Given
that the Hexa robot has six wrenches acting upon the end eﬀector, the
conﬁguration in Fig. 2a may be associated to V5a and the conﬁguration
in Fig. 2b to V4d. In Fig. 2c all wrenches are parallel to each other and
they form a bundle of lines V3b. In Fig. 2d all wrenches lie in a plane
with diﬀerent intersection points and represent a V3d. In Fig. 1a all
wrenches belong to a linear complex V5a, and Fig. 1c shows an example
where all wrenches are meeting one given line V5b. Each unconstrained
DOF of the end eﬀector is represented by one $min in the Figs. 1a, 1c
and 2.
V2b
1
2
3
c)
d)
$tmin
$tmin
$tmin
$tmin
$tmin
$tmin
$r1
$r2
$r1
$r2
$r3
$r6
$r4
$r5
a)
b)
$tmin
$tmin
$tmin
a
b
2
V1
1
V3b
1
2
3
4
1
2
3
4
V3d
Figure 2.
Grassmann variety on the Hexa robot: a) V1; b) V2b; c) V3b; d) V3d
Considering the workspace of the Hexa robot which is limited by the
actuated joint angles, the possible Grassmann varieties may be reduced
to two: V5a and V5b. Thus only singularities of Fig. 1a and 1c may
Direct Singularity Closeness Indexes for the Hexa Parallel Robot
243 
.

occur. With the help of the Grassmann geometry all possible singular
conﬁgurations on the Hexa robot are known. Aiming at quantify the
closeness to the singularities of Fig. 1a and Fig. 1c, a measure algorithm
is presented in the sequence.
A complex is generated by ﬁve skew symmetric lines (e.g. wrench
axes). Let π be a plane tangent to the complex that contains a point
of the line B6C6 (correspondent to the sixth wrench).
The distance
between a certain point of this line and π gives a closeness measure to
that singularity. It is possible to build a 4×4 skew symmetric matrix G so
that BT
i G Ci = 0 where Bi and Ci (Fig. 1c) are in projective coordinates.
This linear system has six unknowns and ﬁve equations. For simplicity
and without loss of validity one unknown is set to 1. A pencil of lines of
the complex that contains B6 deﬁnes π. Mathematically, if a projective
point Xp = [x y z 1]T ̸= B6 is an element of π, then BT
6 G Xp = 0.
Considering the vector U = [u1, · · · , u4]T = BT
6 G, the aﬃne component
of plane is u1x + u2y + u3z + u4 = 0. The distance between C6 and π
may be interpreted as a measure for the line B6C6 of the complex:
d(C6, π) = v1C6,x + v2C6,y + v3C6,z + v4 = 0; vi =
ui
0
u2
1 + u2
2 + u2
3
(3)
If all the lengths BiCi are the same and no other variety occurs,
d(C6, π) is a distance measure of the manipulator to a singularity V5a.
Singularity of V5b occurs if all six wrench axes BiCi intersect one line
L. This line crosses two wrenches in the points C. These points must
belong to legs whose drive axes are collinear and L must be parallel
to these drive axes. The maximal distance between L and all the six
wrenches is a measure to a singularity V5b of the Hexa robot.
This algorithm is applied in order to measure the closeness of the Hexa
robot to a singularity V5b as shown in Fig. 1c. The resulting distance
measure to the singularity is presented in Fig. 1d, where it linearly falls
down to zero in the singularity. Similarly to the minimization method,
a singular range is observed under the limit of 55 mm.
5.
Conclusion
The Grassmann approach as well as the power and frequency meth-
ods are experimentally validated in the Hexa robot and investigated for
online singularity detection. All three methods allow a safe monitoring
of such positions and present some properties are described next.
movement (manually drived) from a rigid position, through a singularity
V5b and twice singularity V5a, to a rigid position. Figure 3a compares
244 
The experiment presented in Figs. 3a and 3b shows the end eﬀector
C. Bier, A. Campos and J. Hesselbach

both Grassmann algorithms with the power method and shows that a
Grassmann algorithm V5a does not detect a singularity of V5b and vice
versa. A combined Grassmann index, the lower of the both algorithms,
may be used due to that both present the same limit range of 55mm,
which is a general property. Comparing the combined Grassmann index
with the power and the frequency method in Fig. 3b, it can be observed
that all three methods have an equivalent behavior. It is important to
notice that a scale factor is required due to the diﬀerent physical base
of each method. Additionally, it allows the use of a unique singularity
limit value.
2
4
6
8
10
12
0
time [s]
a)
20
40
60
80
100
120
b)
2
4
6
8
10
12
0
20
40
60
80
100
120
time [s]
singularity index
1900 x power [ W]
~
combined Grassmann [mm]
38000 x frequency [ Hz]
~
1900 x power [ W]
~
Grassmann V5a [mm]
Grassmann V5b [mm]
singularity index
0
2
4
6
8
10
12
20
40
60
80
100
120
time [s]
computation time [µs]
power
frequency (simplified
)
MEE
frequency (full
)
MEE
combined Grassmann
c)
d)
singularity
V5b
singularity
V5a
Figure 3.
a) and b) Comparison of the singularity closeness indexes; c) Computa-
tional time; d) Hexa robot of Collaborative Research Center 562
For the online application of an approach, the computing time is a
decisive factor. For the same trajectory of example Fig. 3a, a comput-
ing time comparison is presented in Fig. 3c. The combined Grassmann
algorithm is notably faster than the minimization methods. Addition-
ally, in the frequency approach has been observed that using only the end
eﬀector instead of the whole manipulator mass matrix MEE, the compu-
tation time decreases without any loss of measure accuracy. Therefore,
it seems plausible to only use a simpliﬁed model of MEE.
Direct Singularity Closeness Indexes for the Hexa Parallel Robot
245 
.

Properties as computational time, number of measured indexes, phys-
ical index meaning, method complexity and implementation costs must
to be considered to choose a suitable approach for a particular applica-
tion. The frequency method is general and can be applied to any type of
parallel manipulator. The drawback of this approach is its complexity
and that non-kinematic quantities (mass and stiﬀness) are introduced to
the measure. On the other hand the power approach does not present
this drawback and is not so complex.
However, it can not detect ﬁ-
nite and inﬁnite (pure translation) unconstrained screw movements of
the end eﬀector with the same index. Both minimization approach in-
dexes have a physical meaning in particular conditions (e.g. only unitary
wrenches acting upon the end eﬀector), and generally they are only asso-
ciated to this physical meaning. The Grassmann approach oﬀers a fast
and simple method to detect the singularities closeness with a geomet-
rical meaning index. The main weakness is that more than one index
is required if the robot presents more than one singular variety. It can-
not taken for granted that the measure index can be always combined
aiming at automatic singularity avoidance strategies.
In this paper, three singularity closeness indexes based on diﬀerent
physical meanings, are evaluated in the Hexa robot. Each index is able
to detect all the direct singularities into the robot workspace. The prop-
erties of the new Grassmann based index are compared to the odder two
approaches and conclusions are presented.
References
Hesselbach, J., Bier, C., Campos, A., and L¨owe, H. (2005). Direct kinematic sin-
gularity detection of a hexa parallel robot. Proceedings - ICRA, pp. 3249-3254.
Barcelona.
Merlet, J. (2000). Parallel Robots. Kluwer Academic Publisher.
Pottmann, H., Peternell, M., and Ravani, B. (1998). Approximation in line space–
applications in robot kinematics and surface reconstruction. In Andvances in Robot
Kinematics, pp. 403-412, Salzburg. Kluwer Acad. Publ.
Sciavicco, L. and Siciliano, B. (1996). Modeling and Control of Robot Manipulators.
McGraw-Hill.
Tsai, L. (1999). Robot Analysis: the Mechanics of Serial and Parallel Manipulators.
John Wiley & Sons, New York.
Voglewede, P. and Ebert-Uphoﬀ, I. (2004). Measuring closeness to singularities for
parallel manipulators. In Proceedings - ICRA, New Orleans.
Xu, Y. X., Kohli, D., and Weng, T. C. (1994). Direct diﬀerential kinematics of hybrid-
chain manipulators including singularity and stability analyses. Journal of Mechan-
ical Design, vol. 116, no. 2, pp. 614-621.
C. Bier, A. Campos and J. Hesselbach
246
Davidson, J. and Hunt, K. (2004). Robots and Screw Theory. Oxford University Press.

STEWART-GOUGH PLATFORMS WITH
SIMPLE SINGULARITY SURFACE
Adolf Karger
Charles University Praha
Faculty of Mathematics and Physics
Adolf.Karger@mﬀ.cuni.cz
Abstract
The singularity surface of a parallel manipulator is a very complicated
algebraic surface of high degree in six-dimensional space of all possible
positions of the manipulator (in the six-dimensional group of all space
congruences). In this paper we show that for some classes of manipula-
tors we can visualize the singularity set for any ﬁxed orientation of the
manipulator by a quadric in the space of translations. Some properties
and examples are given.
Keywords: Stewart-Gough platforms, parallel manipulators, Study representation,
1.
Introduction
is very complicated, in general it is given by 24 structural parameters
18 spatial coordinates of 6 points in the base and 18 in the platform, 12
of which can be specialized by using twice the congruence group, which
yields 12 parameters. This means that the description of the motion
leads to complicated equations and in general it is not possible to study
it in closed form.
To describe the singular set is still more complicated
the general
equation of the singular set has about 106 terms and so it gives almost
no information about its properties. To obtain some closed form infor-
mation about singular positions of a parallel manipulator we have to
simplify the problem.
One possibility is to choose a ﬁxed orientation of the platform and for
this orientation describe all singular positions. This can be done, but it
is easy to see that in this case we in general obtain a cubic surface in
E3, as the singularity surface is cubic in translations. Cubic surfaces in
space are still relatively complicated objects to give a good idea about
their shape. Using the general equation of the singular set we can show
that in case of S.
and base the equation of the singular set becomes only quadratical and
© 2006 Springer. Printed in the Netherlands. 
247
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 247–254. 
singular positions
−
−
-
The geometry of a parallel manipulator of the type of S.-G. platform
G. platforms with aﬃnely corresponding platform

therefore in this case the singular set for ﬁxed orientation is given by a
quadric, which is much simpler to represent.
If the platform and base are aﬃnely correspondent and planar, we get
much more specialized situation
the singular set factorizes into three
factors
either points of the platform lie on a conic section or the orien-
tation belongs to an algebraic hypersurface in the space of orientations
and the manipulator is singular for all translations or there is a plane of
singular positions (depending on the orientation). This describes the sit-
uation relatively well in both cases. It seems that the described situation
is not the only possibility for which the singular set is quadratical, but
the general solution seems to be diﬃcult for non-planar base or platform.
This means to describe all parallel manipulators for which the singular
set is quadratical in translations. In the planar case the problem is not
diﬃcult to solve, we show one example.
2.
Description of the motion of a
Stewart-Gough platform
Let g be a matrix of a space displacement,
g =
 1
0
ti
aij

(1)
parametrized by Euler parameters aij = aij(xα) and Study parameters
ti = ti(xα, yβ), i, j = 1, 2, 3, α, β = 0, ..., 3 in the usual way, see Botema,
Roth, 1990, Husty, 1991, Husty, Karger, 2000, Karger, 2002.
We shall deﬁne the Study representation of the displacement group D6
of the Euclidean space. We consider the 7-dimensional projective space
P7 of the vector space R8 with coordinates x0, ..., x3, y0, ..., y3. Points of
P7 are determined by non-trivial 8-tuples (x0, x1, x2, x3, y0, y1, y2, y3) of
real numbers, given up to a nonzero multiple. From P7 we remove the
subspace given by equations x0 = 0, x1 = 0, x2 = 0, x3 = 0, let P ′
7 be
the remaining part. Let S be the set in P ′
7 which is determined by the
equation
U = x0y0 + x1y1 + x2y2 + x3y3 = 0.
S will be called the Study quadric. We have a 1-1 correspondence
between points of S and elements of the group D6 of space displacements.
To simplify computations we can normalize coordinates in S by the
requirement
K ≡x2
0 + x2
1 + x2
2 + x2
3 = 1.
Now we shall describe the geometry of the motion of Stewart-Gough
platform. From kinematical point of view we can say that the upper
part of the platform lies in the moving space, the lower part lies in the
ﬁxed space and the motion of the Stewart-Gough platform is generated
A. Karger
248
−
−

by telescopic legs which connect six points of the moving space with six
points of the ﬁxed space by spherical joints.
Let us suppose that we have chosen a system {O1,⃗e1,⃗e2,⃗e3}
({O2, ⃗f1, ⃗f2, ⃗f3}) of Cartesian coordinates in the moving (ﬁxed) spaces,
respectively.
Let M = (A, B, C) be a point in the ﬁxed space (lower part of the
platform), m = (a, b, c) be a point in the moving space (upper part of the
platform).
Any point m of the moving space can be also expressed by coordinates
(˜a,˜b, ˜c) with respect to the ﬁxed space, where
˜a = t1 + a11a + a12b + a13c,
˜b = t2 + a21a + a22b + a23c,
˜c = t3 + a31a + a32b + a33c.
The condition for the point m to lie on sphere with center at M and
radius r is
(˜a −A)2 + (˜b −B)2 + (˜c −C)2 −r2 = 0.
In this equation we substitute Study parameters and the result is an
equation of degree four in xi, yi. This equation simpliﬁes considerably
if we add 4U2 to it. Then the factor K factorizes out and we obtain a
quadratical equation
h = RK + 4(y2
0 + y2
1 + y2
2 + y2
3) −2x2
0(Aa + Bb + Cc)+
2x2
1(−Aa + Bb + Cc) + 2x2
2(Aa −Bb −Cc) + 2x2
3(Aa + Bb −Cc)+
4[x0x1(Bc −Cb) + x0x2(Ca −Ac) + x0x3(Ab −Ba) −x1x2(Ab + Ba)−
x1x3(Ac + Ca) −x2x3(Bc + Cb)+
(x0y1 −y0x1)(A −a) + (x0y2 −y0x2)(B −b) + (x0y3 −y0x3)(C −c)+
(x1y2−y1x2)(C+c)−(x1y3−y1x3)(B+b)+(x2y3−y2x3)(A+a)] = 0, (2)
where R = A2 +B2 +C2 +a2 +b2 +c2 −r2, Husty, 1991, Husty, Karger,
2000.
Let us suppose that the Stewart-Gough platform is given by six ar-
bitrary points Mi = (Ai, Bi, Ci) in the lower part and six points mi =
(ai, bi, ci) in the upper part of the platform, ri be also given, i = 1, ..., 6.
We substitute coordinates of Mi, mi in (2) and we obtain 6 equations
h1 = 0, ..., h6 = 0.
(3)
By this way the geometry and kinematics of the platform is fully de-
scribed, Husty, 1991.
We would like to show how we can describe the singular positions
using the Study representation, because the reasoning is natural and
Stewart-Gough Platforms with Simple Singularity Surface
249

very simple. Let us suppose that ri are given as functions of time, ri =
ri(t). This generates a motion in the moving space described by a curve
xi = xi(t), yi = yi(t), i = 0, ..., 3 in P 7. We express the velocity operator
for this motion.
We can suppose that at instant t = t0 the motion
passes through identity (the frame in the moving space is identical with
the frame in the ﬁxed one),
1
0
0
0
j
0
j
0
The matrix of the motion is a function of the time, g = g(t) and for
its derivative at t = t0 we obtain
g′(t0) = 2
⎛
⎜
⎜
⎝
0
0
0
0
v1
0
−u3
u2
v2
u3
0
−u1
v3
−u2
u1
0
⎞
⎟
⎟
⎠,
(4)
where uj = x′
j(t0), vj = y′
j(t0), j = 1, 2, 3 and x′
0(t0) = y′
0(t0) = 0 as a
consequence of K = 1, U = 0. The vector (u1, u2, u3) yields the rotational
part of the velocity operator, (v1, v2, v3) yields its translational part.
The derivative of (2) at t = t0 yields
r(t0)r′(t0)/2 = u1(Bc−Cb)+u2(Ca−Ac)
+u3(Ab−Ba)+v1(A−a)+v2(B−b)+v3(C−c).
(5)
Application of this procedure to (3) yields a linear mapping φ which
transforms velocities (u1, u2, u3, v1, v2, v3) of the motion of the upper
part of the platform (end eﬀector) into the linear velocities (r′
1, ..., r′
6) of
telescopic motions of legs of the manipulator. In practical problems we
more often need the inverse φ−1 of this mapping, to express velocities
of the motion from velocities of legs.
As we have 6 linear equations
for 6 unknowns, it exists iﬀthe matrix of coeﬃcients of φ is regular.
Coeﬃcients are
(Bc −Cb, Ca −Ac, Ab −Ba, A −a, B −b, C −c),
(6)
which are the Pl¨ucker coordinates of the line connecting points m and M.
Positions where φ is not invertible are called singular positions of the
parallel manipulator, see Botema, Roth, 1990, Karger, 2001, Karger,
2002, Ma, Angeles, 1992, Merlet, 1992.
3.
The singular surface is a very complicated hypersurface in the 6-
dimensional space of all possible conﬁgurations of the parallel manip-
ulator. It is of degree 10 in Study parameters and it has about 2000
A. Karger
250
x (t ) = 1, y (t ) = 0, x (t ) = y (t ) = 0, j = 1, 2, 3.
Singular Set for Special
arallel
anipulators
P
M

terms in general for a given manipulator (with fully given geometry).
To give at least a partial idea how it looks like we shall concentrate at
special cases. We shall preserve translations as free parameters and use
Euler parameters for the orientation. We observe that the singular set
is of degree 3 in translations. This means that for given orientation of
the platform we obtain an algebraic surface of degree 3 in E3. Algebraic
surfaces of degree three were intensively studied but they have a rather
complicated structure. This is not very suitable for visualization or de-
scription. Therefore we shall concentrate at the case where the platform
and the base are aﬃnely equivalent. In this case we observe that there
is a basic diﬀerence between the planar and nonplanar cases.
Let af ﬁrst the platform (and base) be non-planar. We choose the
system of Cartesian coordinates in such a way that m1 = [0, 0, 0], m2 =
[a2, 0, 0], m3 = [a3, b3, 0], and similarly for the base. We can suppose that
a2b3c4 ̸= 0. Now let us suppose that there is an aﬃne correspondence ψ
between the platform and base such that ψ(mi) = Mi, i = 1, ..., 6. ψ is
X = f11x + f12y + f13z + f1,
Y = f21x + f22y + f23z + f2,
Z = f31x + f32y + f33z + f3,
where x, y, z are coordinates in the moving (platform) space, X, Y, Z are
coordinates in the ﬁxed (base) space. Substitution of m1 and M1 yields
f1 = f2 = f3 = 0. Substitution of m2 and M2 yields f11 = A2/a2, f21 =
f31 = 0. From m3 and M3 we obtain
f12 = A3a2 −A2a3
a2b3
, f22 = B3/b3, f32 = 0.
The fourth pair of points m4 and M4 yields A4 = f11a4, +f12b4 +f13c4,
B4 = f22b4 + f23c4, C4 = f33c4 and therefore f33 = C4/c4,
f23 = B4b3 −B3b4
b3c4
, f13 = b3(A4a2 −A2a4) + b4(A2a3 −A3a2)
a2b3c4
.
This ﬁnishes the computation of the aﬃne correspondence and its equa-
tions are
X = A2
a2
x + A3a2 −A2a3
a2b3
y + b3(A4a2 −A2a4) + b4(A2a3 −A3a2)
a2b3c4
z
Y = B3
b3
y + B4b3 −B3b4
b3c4
z, Z = C4
c4
z,
(7)
Stewart-Gough Platforms with Simple Singularity Surface
251

Points M5, M6 are determined by the correspondence ψ, because a spa-
tial aﬃne correspondence is determined by four pairs of corresponding
points (in general position, which is our case). Let us write
Q = Σi,j,ksijkti
1tj
2tk
3
where the sum is over i, j, k, where i ≥0, j ≥, k ≥0, i + j + k ≤3.
We suppose at ﬁrst that sijk = sijk(aα,β), which means that we do not
substitute Euler parameters into coeﬃcients of the orthogonal matrix
of the orientation, to keep the expression into reasonable limits. The
expansion of the equation of the singular set has then 164016 terms. We
obtain coeﬃcients of degree three in Q of the following length given in
square brackets,
[s300] = 264, [s030] = 708, [s003] = 1224, [s210] = 1200, [s201] = 1590,
[s102] = 708, [s021] = 2484, [s021] = 2418, [s012] = 2928, [s111] = 3930.
Substitution from equations of the aﬃne correspondence shows that
all these coeﬃcients are equal to zero. This shows that for given orien-
tation the singular set is only a quadric in E3.
Example 1. We choose points
m1 = [0, 0, 0], m2 = [1, 0, 0], m3 = [2, 1, 0],
m4 = [3, 1, 1], m5 = [5, 3, 6], m6 = [5, 3, 4]
M1 = [0, 0, 0], M2 = [2, 0, 0], M3 = [3, 2, 0],
M4 = [1, 2, 2], M5 = [−17, 6, 12], M6 = [−9, 6, 8]
and orientation given by
x0 = 1/5, x1 = 2/5, x2 = −2/5, x3 = 4/5.
A. Karger
252
The singular set can be seen at Fig. 1.
Figure 1.
The singular set for non-planar platform from Example 1
4.
In the planar case we substitute Ci = ci = 0 and the equation of
the singular set becomes shorter, it has 14640 terms (without Euler
Planar Platform and
ase
B
.

q1 = 0 can be explicitly solved as a linear sytem, but the solution is
too large to be given here. Instead of this we present an example of a
planar platform and base which are not aﬃnely equivalent but they have
a singular set quadratical in translations.
Example 2. We write only ﬁrst two coordinates of points.
m1 = [0, 0], m2 = [1, 0], m3 = [2, 3], m4 = [5, 7]
m5 = [5, 8], m6 = [12, 10], M1 = [0, 0], M2 = [2, 0],
M3 = [3, 4], M4 = [6, 8], M5 = [3, 36/5], M6 = [−2160/71, −2416/71].
The orientation is as in the ﬁrst example. The singular set is at Fig. 2.
In the planar case the existence of an aﬃne correspondence between
platform and base is more restrictive. Points M4, M5, M6 are given by
the correspondence, as aﬃne correspondence in the plane is determined
by three pairs of points. The equation for the singular set factorizes into
three factors, det(φ) = Q1.Q2.Q3.
Q1 = 0 iﬀpoints mi lie on a conic section ( is known for a long
time), Q2 = 0 depends only on the orientation of the platform and it
Stewart-Gough Platforms with Simple Singularity Surface
253
parameters). The equation of the singular set is still of third degree in
translations, but the cubic part factorizes into three factors,
t3[2t1(x0x2 + x1x3) + 2t2(x0x1 −x2x3) + t3(−x2
0 + x2
1 + x2
2 −x2
3)]q1,
where q1 is linear in t1, t2, t3 with rather complicated coeﬃcients, it is
not possible do display it here. This means that in general the singular
surface in the planar case remains cubic, but it has three asymtotic
planes. Let us have a look if the second factor can be equal to zero for
all directions. This yields equations
x0x2 + x1x3 = 0, x0x1 −x2x3 = 0, x2
0 + x2
3 = x2
1 + x2
2
We obtain x0 = r cos α, x3 = r sin α, x1 = r cos β, x2 = r sin β, which
yields cos(α + β) = sin(α + β) = 0, which is impossible. The equation
.
Figure 2.
Singular set for the planar case from Example 2.

References
Husty, M.L., Karger A.: Self-motions of Griﬃs-Duﬀy type parallel manipulators. Pro-
ceedings of the 2000 IEEE international Conference on Robotics & Automation,
San Francisco, CA, April 2000, pp. 7-12.
2001.
Karger A.: Singularities ans Self-Motions of a special type of platforms. In J.Lernarˇciˇc
and F. Thomas, Advances in Robot Kinematics, Kluwer Acad. Publ. 2002, ISBN
0-7923-6426-0, pp. 355-364.
Ma O., Angeles J.: Architecture Singularities of Parallel Manipulators. Int. Journal
of Robotics and Automation 7, 23-29, 1992.
ometry. Int. Journal of Robotics Research, 8, 45-56, 1992.
A. Karger
254
Bottema, O., Roth, B.: Theoretical Kinematics, Dover Publishing, 1990.
Husty, M.L.: An algorithm for solving the direct kinematics of general Stewart-Gough
platforms. Mech. Mach. Theory 31, 365-380, 1991.
Karger
A.: Singularities and self-motions of equiform platforms. MMT 36, 801-815,
,
,
Merlet, J.P.: Singular Conﬁgurations of Parallel Manipulators and Grasssmann Ge-
platform is singular for all translations. Q3 = 0 is linear in translations.
We have
Q2 = (A3a2 −A2a3)(x2
0x2
2 −x2
1x2
3) + (b3A2 −B3a2)x1x2(x2
0 + x2
3)+
(b3A2 + B3a2)x0x3(x2
1 + x2
2)
Q3 = 2t1a2[x1x3(b3 + B3) + x0x2(b3 −B3)]+
2t2[x0x1b3(A2 −a2) + x2x3b3(A2 + a2) + (A3a2 −A2a3)(x0x2 −x1x3)]+
t3[2(A3a2 −A2a3)(x0x3 + x1x2) + (b3 −B3)(a2 −A2)x2
0−
(b3 + B3)(a2 −A2)x2
1 −(b3 −B3)(a2 + A2)x2
2 + (b3 + B3)(a2 + A2)x2
3].
a plane. A special case was studied in Karger, 2001.
The research of this contribution was supported by research project
5.
Conclusions
In this paper we have found a large class of parallel robot-manipulators
with the property that their singular set is at most quadratical in trans-
lations.
In the non-planar case we have shown that this is true for
aﬃnely equivalent base and platform. For planar platform and base the
In the planar
case it is also possible to ﬁnd all manipulators which are quadratical in
translations, for the non-planar case the problem remains open.
MSM0021620839 of the Ministery of Education of the Czech Republic.
We see that in this case the singular set for given orientation is always
situation is much simpler. For aﬃne equivalent platform and base the sin-
gular set factorizes into three factors two are independent of transla-
tions and the third one is only linear in translations.
Acknowledgements
is independent of translations.
This means that if Q2 = 0, then the
,

Abstract
The article presents an object-oriented representation of Frenet frame motion
along spatial curves in multibody systems. In this setting, the spatial track is
regarded as a kinetostatic transmission element transmitting motion and forces
as in a generic joint. It is shown that for the Frenet frame parameterization it is
possible to avoid singularities at the points of inﬂection by a special exponential
blending technique. The combination of the simple Frenet frame formulas with
singularity treatment leads to robust and efﬁcient code for dynamic multibody
simulation. All concepts have been tested within an industrial application of
roller coaster design.
Keywords:
Guided motions along spatial curves have many applications in engineering
such as, for example, in the simulation of railways and roller coaster tracks, in
CNC machining (ˇS´ır and J¨uttler, 2005), for guiding robot end effectors or for
describing the motion of bodies measured with tracking systems (Kecskem´ethy
et al., 2003).
While in unconstrained motion the path geometries for translation and ori-
entation are generated independently by dynamical equations, in guided mo-
accurately — termed framings. The framing of curves has been intensively
studied in previous works (Bishop, 1975, Hanson and Ma, 1995). A simple
© 2006 Springer. Printed in the Netherlands.
255
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 255–264. 
Spatial motion, Frenet frame, singularity treatment, kinematics
tion, one has to produce smooth trajectories that ensure good dynamic
behavior, and also create smooth rotation interpolations that follow the track

and computationally efﬁcient frame parameterization uses the Frenet frame
with the axes oriented in tangential, normal and binormal direction, respec-
tively. Frenet curves have been used extensively in motion interpolation, rang-
ing from physics, e.g., to describe the motion of macromolecules (Balakrish-
nan and Blumenfeld, 1997) and to mechanical engineering, where they have
been used in constrained multibody systems using Lagrange equations of ﬁrst
kind (Pombo and Ambrosio, 2003, Hansen and Elliott, 2002). One still un-
solved problem is that Frenet frames display a singularity when reaching points
of inﬂection, which limits their broad application. The framing suggested by
Bishop helps to circumvent this problem by minimizing angular velocity, but
on the other hand it requires the solution of a system of differential equations in
order to generate the trajectory, which is computationally expensive. The cur-
rent paper describes an approach for avoiding singularities of the Frenet frame
parameterizations and by this to provide a robust description that is suitable for
encapsulated code, such as required in object-oriented modelling. The avoid-
ance of singularities is achieved by a de l’Hospital limit analysis, allowing for
a continuous Frenet frame distribution even in the presence of points of zero
curvature.
The rest of the paper is organized as follows. Section 2 describes the idea
of object-oriented representation of multibody dynamics. This idea is applied
to spline joints in section 3. In the fourth section, the Frenet frame param-
eterization and the singularity treatment approach are described. Finally, the
application of the developed implementations to industrial roller-coaster de-
sign is presented.
For an object-oriented design, one requires a responsibility-driven approach
(Wirfs-Brock and Wilkerson, 1989) that allows for invoking complex software
by “clicking” at the elements. In mechanics, the most abstract “responsibility”
of mechanical components can be regarded to be the transmission of motion
and forces. In this view, a mechanical component acts as a kinetostatic trans-
mission element mapping motion and forces from one set of state objects —
the ‘input’ — to another set of state objects — the ‘output’ (Kecskem´ethy and
Hiller, 1994). Input and output state objects can be spatial reference frames
and/or scalar variables, including associated velocities, accelerations and gen-
eralized forces. Let the dimension of the input vector
be
, and that of the
output vector
be
. Then, the overall transmission behavior has the form
depicted in Fig. 1.
256
A Kecskeméthy and M. Tändl 

Position
Velocity
Acceleration
Force
A simple transmission element.
The operation of motion transmission consists of the three sub-operations
position:
velocity:
acceleration:
(1)
where
represents the
Jacobian of the transmission element.
Furthermore, a force-transmission mapping can be deﬁned by assuming that
the transmission element neither generates nor consumes power, i.e., that it is
ideal. Then, equating virtual work at the input and output yields
T
T
and, after substituting
and noting that this condition must hold for
all
IR , one obtains the force transmission function
force:
T
(2)
Thus, in general, force transmission takes place in opposite direction to veloc-
ity transmission with the transposed velocity Jacobian. This relationship holds
independently of the complexity of the transmission element.
By the use of kinetostatic transmission elements, users can access the generic
properties of mechanical objects without having to refer to their internal imple-
mentation details. As shown in Kecskem´ethy and Hiller, 1994, it is possible to
generate all closure conditions of closed loops as well as the equations of mo-
tion of minimal order using only the basic kinetostatic transmission functions.
This allows one to combine models of mechanical elements without respect to
their internal complexity, making open-architecture, object-oriented libraries
possible (Kecskem´ethy, 2003).
In order to represent a guided motion as a kinetostatic transmission element,
one needs to identify inputs and outputs and describe the corresponding trans-
mission functions for motion and forces. Let a general curve be given as a
vector function
with respect to a basis frame
in dependency of the
257
A Robust Model for 3D Tracking

path coordinate
(Fig. 2). The coordinate frame
may be located at some
spatial pose with respect to the inertially ﬁxed coordinate system
. The mo-
tion along the curve is described by a moving frame
, which represents the
output of the kinetostatic transmission element. The inputs are embodied by
the reference frame
as well as the path coordinate .
Model of a spline joint.
In the following, we assume in general vectors to be decomposed in the
target frame, i.e., in the present case, in coordinates of
. For other decompo-
sitions, we introduce the notation
, where
denotes the frame of decompo-
sition,
denotes the frame with respect to which the motion is measured, and
denotes the target frame. For motions measured with respect to frame
, the
index
is omitted. Likely, for decompositions in the target frame
,
the index
is omitted. Hence
denotes the object
. Furthermore, let
denote the derivative of a quantity with respect to the path coordinate , and let
denote the rotation matrix transforming coordinates with respect to frame
to coordinates with respect to frame
. Then, the transmission behavior
of the spline joint can be deﬁned by the following equations.
For the orientation and position of the output frame
, one obtains
T
(3)
depends on the framing of the curve as described in the next section.
Translational (
) and angular (
) velocities of frame
are obtained as
T
T
T
(4)
258
A Kecskeméthy and M. Tändl 

where
is the rigid-body Jacobian, and
is the Jacobian mapping path ve-
locity
to the velocity quantities of the output frame, as speciﬁed below for
the particular parameterization. Moreover, we employ the notation
for the
skew-symmetric matrix generated by a vector
T as :
(5)
For the translational and angular acceleration, one obtains
(6)
According to the force transmission behavior for ideal transmission elements,
forces (
) and moments (
) at the output frame are mapped to the correspond-
ing forces at the input frame. These are the force and moment at the frame
as well as the generalized force
along the path coordinate. Hereby, the
force-moment wrench is assumed to be given with respect to the origin, and
all vectors are assumed to be decomposed in coordinates of the frame of refer-
ence. As shown in Kecskem´ethy and Hiller, 1994, this transmission is realized
by the transposed Jacobian:
T
T
(7)
For the generation of spatial curves, one can employ existing spline algorithms
from the literature. In the present context, the B-Spline routine of ﬁfth order
from the spline library DIERCKX (Dierckx, 1993) was used.
The axes of the Frenet frame at path coordinate
are the tangent vector
, the normal vector
with curvature
and
the binormal vector
. With
,
and
being
the coordinate representations of ,
and
in frame
, the rotation matrix
becomes
(8)
For the Jacobian matrix , one obtains
(9)
A Robust Model for 3D Tracking
259

Frenet spline joint
where
is the direction of the angular velocity of frame
for
and
is the tangent vector,
and
are the second and
third derivatives of
with respect to , all decomposed in
. The acceleration
of
relative to
is
(10)
At points of inﬂection, the standard formula for determining the normal
vector
fails, as both the nominator and the denominator vanish. However,
by a limit analysis, this difﬁculty can be overcome. Let the curvature
be described in the vicinity of the singularity by a linear approximation
with a still-to-be-determined positive constant
. By substituting
for
and using de l’Hospital’s rule, the right- and left-hand side
limits of
become, for
,
260
A Kecskeméthy and M. Tändl 

From the condition
one obtains
and the right-hand
and left-hand limits become
(12)
This creates a ﬁnite value, but induces a switch of direction of the normal vec-
tor at the singularity. In order to avoid this switch of direction, one deﬁnes a
vector ﬁeld
along one side of the curve by introducing at equidistant sup-
port points
unit vectors aligned with
the normal vector
at that point and oriented such that
T
(Fig. 4
a)). The intermediate vector ﬁeld
is then obtained by linear interpolation.
Using these vectors, one can deﬁne a smooth vector ﬁeld
sgn
T
(13)
whose direction at each point coincides with that of the normal vector.
point of inﬂection
A
A
C
C
B
a) Vector ﬁeld
for orienting normal vectors
b) Domains for normal vector formulas
For practical applications, one needs to treat not only points in which the
curvature is exactly zero, but also points for which the curvature almost van-
ishes. As the spline joints developed here must be suited for dynamic simula-
tions, the transitions from one set of computations (regular Frenet frame for-
mulas) to another (limit analysis Frenet frame formulas) must be smooth and
differentiable. For this purpose, one deﬁnes two thresholds for the curvature,
one for entering zero curvature domain (
), and one for entering the regular
region (
). In-between, a blending procedure is applied which interpolates
the result of the normal vector computation using the regular formulas and that
using limit-analysis formulas. When the limit-analysis formula is applied to
points near the singularity, the resulting limit vector
is no longer exactly nor-
mal to the tangent. This can be circumvented by taking the normal component
of
through the projection
T
T
sgn
T
for
(14)
A Robust Model for 3D Tracking
261
.
.

Let
denote the normal vector as computed with the regular formula, and let
denote the normal vector as computed with the singularity formula after
orthogonalization with respect to the tangent. Then, for a typical trajectory
passing through an inﬂection point, one obtains three domains: A (regular), C
(transition) and B (singular) as depicted in Fig. 4 b). Then one can deﬁne for
region A (
)
sgn
T
(15)
for region B (
)
T
T
sgn
T
(16)
and for region C (
)
with
(17)
sgn
T
T
sgn
T
(18)
Here, the exponential weighting functions
with
are employed, in which the coefﬁcients
and
can still be determined by
the user in order to achieve optimal results. Although also other blending func-
tions are conceivable, exponential blending functions have the advantage that
(1) they offer
transitions for the two limit cases
,
, (2) the
boundary conditions can be achieved easily, and (3) all derivatives are easy to
compute. Moreover, the blending functions are related to the error function in
statistics, so that they mimic an averaging procedure. Hence, no other types of
blending functions have been considered in this context, although they could
be incorporated easily. For computing
and
one needs the ﬁrst and second
derivatives of
, which are not reproduced here due to lack of space. Using
and
, the coordinates of
can be computed using Poisson’s formula and
as:
T
T
(19)
T
262
A Kecskeméthy and M. Tändl 

As well, the coordinates of
become, with
,
T
T
T
T
T
T
T
T
T
T
T
T
(20)
T
T
From these formulas, one obtains smooth Frenet frame rotations through points
with low curvature. In the following, a nearly singular point at
with
curvature
was regarded.
vectors
and
when using the proposed method for
,
and
and the magnitudes obtained with the regular formula as
reference. The peak in the angular velocity that might lead to problems during
numerical integration is completely avoided using the blending procedure.
 0
 0.05
 0.1
 0.15
 0.2
 0.25
 0.3
 4
 5
 6
 7
 8
 9
 10
 11
 12
A
A
C
C
B
in
in
sing.-free
standard
 0
 0.05
 0.1
 0.15
 0.2
 0.25
 0.3
 4
 5
 6
 7
 8
 9
 10
 11
 12
A
A
C
C
B
in
in
sing.-free
standard
Comparison of
and
for standard and singularity-free Frenet frame
formulas
The presented approach for generating guided spatial motion using Frenet
frames prove to be useful for parameter-independent, object-oriented simula-
tion of multibody systems. With the introduced limit analysis, it is possible
to generate smooth Frenet frame motions through inﬂection points, which are
required for robust numeric integration of the equations of motion. Using this
description, it is possible to encapsulate the framing algorithm in easily appli-
cable objects which can be used for online editing of spatial trajectories such
as shown in Fig. 6 for the application in roller coaster design.
Balakrishnan, R. and Blumenfeld, R. (1997), Transformation of general curve evolution to a
modiﬁed Belavin-Polyakov equation. Journal of Mathematical Physics, vol. 38, no. 11, pp.
5878–5888.
A Robust Model for 3D Tracking
263
Figure 5 shows the magnitude of the

Roller coaster design environment
Bishop, R. L. (1975), There is More than One Way to Frame a Curve. American Mathematical
Monthly, vol. 82, no. 3, pp. 246–251.
Dierckx, P. (1993), Curve and Surface Fitting with Splines. Clarendon Press, Oxford.
Hansen, N. and A. Elliott, A. (2002), Improving Roller Coaster Design with Virtual Prototyping.
In ADAMS Users Conference.
Hanson, A. J. and Ma, H. (1995), Quaternion frame approach to streamline visualization. IEEE
Transactions on Visualization and Computer Graphics, vol. 1, no. 2, pp. 164–174.
Kecskem´ethy, A. (2003), MOBILE 1.3 User’s Guide and Reference Manual. University of
Duisburg-Essen.
Kecskem´ethy, A. and
lation of multibody dynamics. Computer Methods in Applied Mechanics and Engineering,
vol. 115, pp. 287–314.
Kecskem´ethy, A., Stolz, M., Strobach, D., Saraph, V., Steinwender, G. and Zwick, B. (2003),
Improvements in measure-based simulation of the human lower extremity. In Proceedings
of the IASTED Conference on Biomechanics, pp. 155–160, Rhodes, Greece.
Pombo, J. and Ambrosio, J. (2003), General Spatial Curve Joint for Rail Guided Vehicles:
Kinematics and Dynamics. Multibody System Dynamics, vol. 9, pp. 237–264.
ˇS´ır, Z. and J¨uttler, B. (2005), Constructing acceleration continuous tool paths using Pythagorean
Hodograph curves. Mechanism and Machine Theory, vol. 40, pp. 1258–1272.
Wirfs-Brock, R. and Wilkerson, B. (1989), Object-oriented design: A responsibility-driven ap-
proach. In OOPSLA ’89 Proceedings, pp. 71–75.
264
A Kecskeméthy and M. Tändl 
Hiller, M. (1994), An object-oriented approach for an effective formu-

Patricia Ben-Horin 
Department of Mechanical Engineering 
Technion – Israel Institute of Technology 
patbh@tx.technion.ac.il 
Moshe Shoham 
Department of Mechanical Engineering 
Technion – Israel Institute of Technology 
shoham@tx.technion.ac.il 
Abstract 
In this paper the singularity of all Gough-Stewart platforms (GSP) that have 
three concurrent joints is analyzed. The singularity analysis is based on 
Grassmann-Cayley algebra, and the general expression of the rigidity 
matrix of six lines connecting two bodies (Superbracket). For the class under 
consideration, this coordinate-free expression is easily reduced leading to a 
geometrically meaningful singularity condition. 
1.  
Introduction  
The growing interest in parallel robots during the last twenty years is 
accompanied with theoretical effort to cope with the singularity problems 
of these robots due to their instability characteristic at these points. The 
Gough-Stewart platform (GSP) is a paradigm for parallel robots and the 
singularities of some of its special forms were thoroughly studied. In this 
investigation we focus on a certain class of GSPs consisting of all the 
structures having three concurrent joints on the moving platform (or 
alternatively the stationary platform). These robots advantage is having 
the orientation of the platform and the position of one point on the 
platform decoupled. Several researchers addressed specific decoupled 
GSP structures, most of them dealt with the forward kinematics (Husain 
and Waldron, 1994, Wohlhart, 1994, Bruyninckx, 1997 and 1998). In 
addition to the forward kinematics analysis, Wohlhart (1994) obtained 
also the singularity condition of the general decoupled robot (also called 
3-1-1-1). Following some algebraic manipulations of the Jacobian 
SINGULARITY OF A CLASS
 OF 
Keywords: 
Singularity, decoupled parallel robot, Grassmann-Cayley algebra 
© 2006 Springer. Printed in the Netherlands.
265
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 265–274.
THREE CONCURRENT JOINTS 
GOUGH-STEWART PLATFORMS
 WITH 

determinant, he found two conditions, one constituting a linear complex 
and the second constituting a linear congruence of the lines along the 
manipulator extensible links. The same result was also obtained by Di 
Gregorio (2002) who used mixed products of vectors identified in the 
robot to obtain the singularity condition as a ninth-degree polynomial 
based system, Thomas et al. (2002), found that the singularity of this 
robot occurs when one of three tetrahedrons constituted by the joints is 
singular. The same result was obtained by Downing et al. (2002), who 
approached the problem by using the pure condition  proposed by White 
(1983) (also used in the present paper). The results of Thomas et al. and 
Downing et al. go along with the comments of Hunt and Primrose (1993) 
regarding the singularity of the 3-2-1 structure. 
The approach used in this paper is based on Grassmann-Cayley 
algebra. The origin of this algebra date back to Grassmann treatise 
Theory of extension  in 1844. The basic elements of this algebra are 
geometric entities such as points, lines and planes and the basic 
operators are able to express algebraically the intersection (meet) or the 
union (join) of two or more elements. A complete definition of the meet 
In the present investigation we provide a comprehensive study of the 
singularity conditions of a class of 18 robots that have three concurrent 
2005b). The main aim of this paper is to demonstrate the simplicity of 
the use of Grassmann-Cayley algebra for decoupled robots as a class, 
while general and special cases are easily identified. The analysis is 
performed using the singularity condition of the general GSP in a 
coordinate-free decomposed form so that the spherical joint locations 
appear explicitly. Once the specific structure is substituted into the 
general expression, the geometric meaning of the condition is deduced 
using Grassmann-Cayley operators and properties.  
The outline of this paper is as follows: Section 2 presents the full list of 
GSPs that belong to this class having three concurrent legs on a 
platform. Section 3 briefly presents the basic operations of the 
Grassmann-Cayley algebra. Section 4 contains the singularity condition 
of the general GSP, leading to the solutions of the decoupled structures of 
this paper in section 5. 
266 
P. Ben-Horin and M. Shoham
 
equation. Another decoupled robot whose singularity was found is the 
3-2-1 structure. Using an ellipsoidal uncertainty model for a 3-2-1 wire-
et al. (1974).  
operation came out after more than a century in the paper of Doubilet  
links on the moving, not generally planar, platform. This is a conti- 
nuation of previous studies on the singularity of a class of seven GSPs 
having only pairs of concurrent joints (Ben-Horin and Shoham, 2005a) 
and a broad class of three-legged robots (Ben-Horin and Shoham, 
“ 
” 
“ 
” 

2.  
Innocenti and Parenti-Castelli (1994) enumerated a long list of GSPs, 
dividing them into two groups: 17 types that have only single or double 
combinations of GSPs containing a total of 35 types. The additional types 
presented are identified to be those having triplet spherical pairs. Table 
1 lists all the structures that belong to the class under consideration, all 
of them (Fig. 1) appear in Faugere and Lazard's paper (1995). To have a 
unique identification of the robots we use the letters a,b,..,j defining the 
spherical joints connecting the legs, so as the robots in Fig. 1 are denoted 
as follows: 
Table 1:  Notation of the structures 
1.  (ae,af,ag),bh,ci,dj 
2.  (ae,af,ag),bh,ch,dj 
  3.  (ae,af,ag),bh,ci,cj 
4.  (ae,af,ag),bh,bi,ci 
  5.  (ae,af,ag),be,cf,dg 
6.  (ae,af,ag),bf,cg,dg 
7.  (ae,af,ag),be,bf,cg 
8.  (ae,af,ag),bg,ch,di 
9.  (ae,af,ag),be,cf,dh 
 10.(ae,af,ag),bg,cg,dh 
11.(ae,af,ag),bg,ch,dh 
 12.(ae,af,ag),bg,ch,ci 
13.(ae,af,ag),bf,bg,ch 
14.(ae,af,ag),bg,bh,ci 
15.(ae,af,ag),bg,bh,ch 
  16.(ae,af,ag),bf,cg,ch 
17.(ae,af,ag),bg,cg,ch 
 18.(ae,af,ag),bf,bg,cg 
 19.(ae,af,ag),bh,ch,dh 
 
 
 
Every pair of letters indicates a leg, the first three pairs being within 
parentheses since they are identical in all the structures. Structure 
intersect the line passing through a and h, thus resulting in a general 
complex singularity. 
 
Some of the structures were presented in the literature. As mentioned 
 
actuation is through linear guides of the lower spherical joints instead of 
extension of the legs. Patarinski and Uchiyama (1993) studied structure 
No. 5 from the instantaneous kinematics point of view. Bruyninckx 
derived the forward kinematics of structure No. 2 with non-planar 
platforms (1997) and of No. 10, with both platforms being planar (1998). 
Structure No. 3 (also called 3-2-1) was addressed by Thomas et al. (2002) 
267 
Singularity of a Class of Gough-Stewart Platforms
A Class of Gough-Stewart Platforms  
spherical pairs and 4 types that have triplet spherical pairs. Sub- 
sequently, Faugere and Lazard (1995) presented a complete list of all 
No. 19 is always singular since, by definition, all the lines of the robot 
Di Gregorio (2002) analyzed structure No. 1 (also called 3-1-1-1). Bernier 
 
et al. (1995) proposed a specific design of structure No. 1, where the 
in the introduction, Wohlhart (1994), Husain and Waldron (1994) and
No. 18. 
and Downing et al. (2002). Besides solving the forward kinematics  
of structure No. 1, Nanua and Waldron (1990) also addressed structure 
.

 
Figure 1.    All versions of GSPs that have three concurrent legs 
e    f     g    h    i     j 
 a      b      c      d 
e    f     g    h    i     j 
 a     b    c     d
e    f     g    h    i     j 
  a     b   c     d
e    f     g    h    i     j 
  a      b      c      d 
e    f     g    h    i     j 
  a     b    c     d
e    f     g    h    i     j 
  a      b      c      d 
e    f     g    h    i     j 
 a      b      c      d 
e    f     g    h    i     j 
 a     b    c     d
e    f     g    h    i     j 
 a      b      c      d 
e    f     g    h    i     j 
 a     b    c     d
e    f     g    h    i     j 
  a     b    c     d
e    f     g    h    i     j 
  a      b      c      d 
e    f     g    h    i     j 
  a     b    c     d
e    f     g    h    i     j 
  a      b      c      d 
e    f     g    h    i     j 
 a      b      c      d 
e    f     g    h    i     j 
 a     b    c     d
e    f   g  h    i    j
  a     b    c     d
e    f     g    h    i     j 
  a     b      c      d 
e    f   g  h    i    j
 a     b    c     d
     (1) 
 
 
 
 
 
(2)  
 
 
 
 
 
(3)  
 
 
 
 
 
 (4) 
      (5) 
 
 
 
 
 
(6)
 
 
 
 
 
(7) 
 
 
 
 
 
 (8) 
 (9) 
 
 
 
 
 
(10)
(11)
(12) 
(13)  
 
 
 
 
(14)
(15)
(16) 
(17)  
 
 
 
 
(18)
(19) 
3.  
In this section a short introduction to the main notions of this algebra 
is given, including relevant examples to this paper. More details on 
Grassmann-Cayley algebra can be found in Ben-Horin and Shoham 
(2005a) and many references therein. 
Consider a finite set of vectors {a1,a2,.,ad} defined in the d-dimensional 
1,i,x2,i,..,xd,i (1 id). If M is a 
matrix having a (1 i  d) as its columns, then the bracket of these vectors 
is defined to be the determinant of M:  
 
268 
P. Ben-Horin and M. Shoham
Grassmann-Cayley Algebra  
i
vector space over the field P, V, where a =x
i
. 

 >
@
1,1
1,2
1,
1
2
,1
,2
,
,
,...,
det
d
d
d
d
d d
x
x
x
a a
a
M
x
x
x
 
 
"
#
#
"
#
"
.  
 
 
 
(1)
 
T he brackets satisfy the following relations: 
>
@
1
2
,
,...,
0
d
a a
a
 
,  
 
 
 
 
 
 
 
 (2) 
 
f
a1,a2,…,ad are dependent. 
I 
>
@
>
@
1
2
1
2
,
,...,
( )
,
,...,
d
d
a a
a
sign
a
a
a
V
V
V
V
 
  
 
 
 
 
(3) 
 
for an
 
 
y permutation V of 1,2,…,d  
>
@>
@
>
@>
1
2
1
2
2
1
2
1
1
1
1
,
,...,
,
,...,
,
,...,
,
,...,
,
,
,...,
d
d
d
i
d
i
i
i
a a
a
b b
b
b a
a
b b
b
a b
b


 
 ¦
@
d  (4) 
 
Equations (2) and (3) stem from well-known determinant properties. 
The relations of the third type (4) are called Grassmann-Plücker 
relations or syzygies (White, 1975), and they correspond to generalized 
Laplace expansions by minors. 
Let W be a k-dimensional subspace of V, let {w1, w2,.., wk} be a basis of 
W, and let A be a Plücker coordinate vector in the  
d
k -dimensional vector 
space Vk. Then this vector can be denoted symbolically as follows (White, 
1994): 
 
1
2
k
w
w
w
 



A
"
  
 
 
 
 
 
 
 
(5) 
 
A is called an extensor of step k. Additionally, A
W
  ,
where A  is called 
the support of  A.  Two k-extensors  A and B are  equal up  to a  scalar
 multiplication if and only if their supports are equal, A
B
 
.  
Let A=a1a2..ak and B=b1..bh (or simply A=a1a2..ak and B=b1..bh) 
be extensors in V having steps k and h respectively, with k+h<d. Then 
he join of A and B is defined by 
t 
 
1
2
1
1
2
1
k
h
k
a
a
a
b
b
a a
a b
b

 






 
A
B
"
"
"
h
"
  
 
(6) 
 
which is an extensor of step k+h. The join is non-zero if and only if 
{a1,a2,..,ak,b1,b2,..,bh} is a linearly independent set.  
Let A=a1a2…ak and B=b1b2…bh, with k+h t d. Then the meet of these 
extensors is defined by the expression: 
 
 
  
(7) 
(1)
(2)
(
) 1
(
1)
( )
sgn( )[
...
...
]
...
d h
h
d h
k
a
a
a
b
b a
a
V
V
V
V
V
V
V

 

 ¦
A
B
 
where the sum is taken over all permutations V of {1,2,..,k} such that 
V(1)<V(2)<}<V(d h) and V(d h+1)<V(d h+2)<}<V(k). Alternatively, the 
permutations in Eq. (7) may be written using dots above the permuted 
elements instead of V as follows: 
269 
Singularity of a Class of Gough-Stewart Platforms
i
j
≠
a  = a  for some ,  with    , or
  
i j
j
i

 
V
V
x
x
x
x
x

 

 ¦
1
2
1
1
sgn( )[
...
...
]
...
d h
d h
k
h
a a
a
b
b
a
a
A
B
  
   (8) 
3.1.  
3 (d=4). In this case k+h=d. If K 
and L are skew lines, then KL =
3 and KL =0, then KL is a scalar. 
The calculation of this scalar gives six times the volume of a tetrahedron 
constructed from points a, b, c and d (see Fig. 2(a)). If the lines are 
coplanar, KL =
2 
3, then the meet is KL=0, since this is a 
degenerate case of that of Fig. 2(b). 
a
d
b
c
b
a
c
d
KL=[abcd]oscalar  
KL=[abcd]=0 
 
 
 
(a)  
 
 
 
 
 
 
 
(b)  
 
    
 
Figure 2.    Meet of lines in space 
3
are not coplanar, then XY=
3, XY0, therefore in this case the meet 
of X and Y yields an extensor of step k+h d=2, which indicates the line of 
intersection of X and Y: 
 
[
x
x x

 

 
X
Y abc def
adef]bc -[bdef]ac -[cdef]ba=[adef]bc  
 
3.  A line gh intersecting this line of intersection gives the same result 
s in the degenerate case in example 1, then the meet is equal to 0: 
a 


[
0


 

 
•
•
gh abc def
gabc]h -[habc]g
def =[gabc][hdef]
. 
4.  
From the rigidity of frameworks point of view researchers have 
frameworks (White and Whiteley, 1987). A special case of the latter 
frameworks is the case of two bodies interconnected by six bars, namely, 
the GSP. As known, the rigidity matrix (or the Jacobian) of this case has 
the Plücker coordinates of the bar-lines as its columns. A decomposition 
270 
P. Ben-Horin and M. Shoham
Examples of the Meet Operation  
1. Let K=ab and L=cd be two extensors of step 2 (k = h=2) representing 
Π
the lines K and L in the projective space 
Π
Π
Π
2. Let X=abc and Y=def be two extensors of step 3 (k=h=3), 
Π
Π (d=4). Given the planes 
representing two planes in the projective space 
Singularity Condition of the General GSP 
and-joint frameworks (White and Whiteley, 1983) and bar-and-body 
is infinitesimally non-rigid. This resulted in rigidity matrices of bar-
developed methods to find the condition for which the framework  
. 
-
-
-

of the determinant of this matrix was proposed by White (1983), calling it 
Superbracket. This expression includes bracket monomials containing 
symbolically only the connecting points. A significant simplification of 
this expression was provided by McMillan (1990), reducing to 24 bracket 
monomials. Below, McMillan's version is introduced.  
Let [ab,cd,ef,gh,ij,kl] be the bracket of six 2-extensors representing 
lin
«
» «
»
«
» «
» «
»
«
»
¬
¼ ¬
¼ ¬
¼
¬
¼
¬
¼ ¬
¼
es ab, cd, ef, gh, ij, kl in space. Then the superbracket of these lines is: 
 
>
@
3
3
1 2
1 2
4
4
ª
º ª
º
ª
º ª
º ª
º
ª
º
 

5 6
5
7
6 7
8 9
8
10
9 10
,
,
,
, ,
ª
º ª
º ª
º
ª
º ª
º ª
º


«
» «
» «
»
«
» «
» «
»
¬
¼ ¬
¼ ¬
¼
¬
¼ ¬
¼ ¬
¼
abce
dghi
f jkl
abcg
def i
h j kl
  
(9) 
 
here 
ab cd ef gh ij kl
abcd
ef g i
h jkl
abce
df gh
ijkl
 denotes
ª
º ª
º ª
º
«
» «
» «
»
¬
¼ ¬
¼ ¬
¼
¦
1 2
1 2
1,2
sign(1,2) abcd
ef g i
h jkl
ª
º ª
º ª
º
«
» «
» «
»
¬
¼ ¬
¼ ¬
¼
1 2
1 2
abcd
ef g i
h jkl
w
and 
1,2 are permutations of the 2-element sets {g, h}, {i, j}, respectively.  
5.  
The s
condition for the robots of the decoupled class is 
ob
sulting non-zero terms for structure No.1 are (out of 24 terms): 
ingularity 
tained by substituting the points of each robot in the general 
superbracket expression of Eq. (9). According to Eq. (2) and due to 
repetition of points in double or triple spherical pairs, this expression is 
reduced to two or one non-zero monomial terms for all the robots in the 
class. 
The re
 
>
@
>
@>
@>
@
>
@>
@>
@
,
,
,
,
,
 

ae af ag bh dj ci
aefg abhd ajci
aefg abhj adci   
(10) 
 
fter collecting equal terms the right hand side is written as 
A 
>
@ >
@>
@
>
@>
@


 

aefg
abhj adci
abhd ajci        
 (11) 
he expressions in parentheses are identified to be the re
·
 
T
sult of the  
meet operation, interchanging j and d: 
 
>
@§ª
º ª
º
 
¨
¸
«
» «
»
¬
¼ ¬
¼
©
•
•
aefg
abh j adci
¹
  
 
 
 
    
 (12) 
 
hese terms being equated to zero comprise the singularity conditions: 
T  
>
@
0
or
0
 


 
aefg
abh
aci
dj
  
 
 
 
    
 (13) 
he first singularity condition occurs whenever 
f
g 
 
T
the points a, e,  and 
are coplanar. Since we refer to generic robots having this joint 
distribution, this condition does not necessarily mean that point a is on 
plane efg. For instance, the robot proposed by Bernier et al. (1995) which 
is actuated by linear actuators that change the spherical joints locations 
271 
Singularity of a Class of Gough-Stewart Platforms
Singularity Solution of Three-concurrent-joint 
Robots  

can have point g lying on line ef thus leading to this singularity. The 
second singularity condition arises whenever line dj intersects the line of 
intersection of planes abh and aci (as may be identified from example 
No. 3 in Section 3.1). 
Singularity of particular cases   
is one of the particular cases of No. 1, 
Structure No. 2  in Table. 1 
the form 
 
>
,
ae af
@
>
@>
@>
@
>
@>
@>
@
,
,
,
,
 

ag bh dj ch
aefg abhd ajch
aefg abhj adch .  
(14) 
imilarly to the solution of structure No. 1: 
 
S
>
@ >
@>
@
>
@>
@


 abhd ajch    
     
 (15) 
·
 aefg
abhj adch
>
@
x
x
§ª
º ª
º
 
¨
¸
«
» «
»
¬
¼ ¬
¼
©
aefg
abh j adch
  
¹
     
 
 
These terms being equated to zero comprise the sin
arity conditions: 
 
 
 
 (16) 
gul
 
>
@
0
or
0
 


 
aefg
abh
ach
dj
  
 
 
 
    
 (17) 
These conditons have the same form as for structure No. 2. However, the 
second condition is calculated as follows: 
 


0


 
 
abh
ach
dj
aach
>
@
ª
º

¬
¼bh
bach ah  hach


ª
º

¬
¼ ba
dj  
 
    (18) 
>
@
>
@>
@
 

 
bach ah
dj
bach ahdj   
 
 
In conclusion, the singularity condition is: 
 
 
   (19) 
 
>
@
>
@
>
@
0
or
0
 
 
aefg
bach
or
0
 
ahdj
  
 
 (20) 
 
he robot is singular whenever points a,e,f and g, or poin
c 
j]=0 
T
ts a,b,h and 
or a,h,d and j are coplanar. The condition of the first four points being 
coplanar was obtained for structure No. 1. This is related to the inability 
to resist forces applied on point a. The second two conditions are related 
to the inability to resist torques, thus gaining one or two angular degrees 
of freedom. This condition in structure No. 1 consists of the intersection 
of line dj with the intersection of planes abh and aci. In structure No. 2, 
the line of intersection of the respective planes abh and ach is line ah 
itself, as it is obtained in Eq.(19), so the second condition becomes 
Eq.(20).  
1.[aefg]=0, abhachdj=0 
2. [aefg][abhj][adch]=0 
 3.[aefg][abhc][aic
4. [aefg][abhi][abci]=0 
5.[aefg]=0, abeadgfc=0 
6. [aefg][abfg][acdg]=0 
7. [aefg][abef][abcg]=0 
8.[aefg]=0, abgadihc=0 
9.[aefg]=0,abeadhfc=0 
10.[aefg][abgc][agdh]=0 
11.[aefg][abgh][acdh]=0 
12.[aefg][abgc][ahci]=0 
13.[aefg][abfg][abch]=0 
14.[aefg][abgh][abci]=0 
15.[aefg][abgh][abch]=0 
16.[aefg][abfc][agch]=0 
17.[aefg][abgc][agch]=0 
18.[aefg][abfg][abcg]=0 
272 
P. Ben-Horin and M. Shoham
Table 2:  Singularity conditions of all GSP having three concurrent joints 
where point i coincides with point h. Therefore, the terms of Eq. (10) take 
.

The condition obtained for structure No. 1 matches the result obtained 
by Wohlhart (1994) and the condition obtained for structure No. 2 is 
compatible with results obtained by Thomas et al. (2002) and Downing et 
al. (2002) for similar structures. While structure No. 2 was taken as an 
example, the same type of solution is obtained for structures No. 2, 3, 4, 
6, 7, 10, 11, 12, 13, 14, 15, 16, 17 and 18, see Table 2. In the same way, 
structures No. 5, 8 and 9 
have the same singularity 
condition as No. 1, all 
having 
three 
mutually 
separated legs. a  Fig. 1 
shows structure No. 17 in 
its regular and singular 
poses. In this case the 
singular pose is caused by 
the condition [abgc]=0. 
(left) and 
singular (right) poses 
 
6. 
Conclusions 
In this paper the singularity of a GSP class having three concurrent 
joints was addressed using a decomposed form of the rigidity matrix 
determinant of the general GSP. This form contains combinations of 
bracket monomials, which are tools from Grassmann-Cayley algebra. 
Since the class of robots under consideration has at least one concurrent 
triplet of joints, the substitution of the joints of the robots into the 
general solution causes most of the bracket monomials to vanish. 
Consequently, the retrieval of the geometrical nature of the singularity 
condition of each robot using Grassmann-Cayley properties becomes a 
simple task. Starting with the most general structure and showing 
particular cases, the singularity conditions of all the 18 robots of the 
class were obtained. For the general cases it consists of the coplanarity of 
one tetrahedron associated with the three concurrent joints or the meet 
of one leg with the intersection line of two other planes. The singularity 
of the particular cases includes three possible coplanar tetrahedrons. 
References 
Ben-Horin P. and Shoham M. (2005a), Singularity Analysis of Parallel Robots 
Mechanism and Machine Theory. 
Ben-Horin P. and Shoham M. (2005b), Singularity condition of six degree-of-
freedom three-legged parallel robots based on Grassmann-Cayley algebra, 
accepted for publication in IEEE Transactions on Robotics. 
273 
Singularity of a Class of Gough-Stewart Platforms
Figure 1. Structure No. 17 in a regular 
Based on Grassmann-Cayley Algebra, International Workshop on Computa-
tional Kinematics, Cassino, May 4-6. Accepted for publication in Mechanism 
.

Bernier D., Castelain J.M., and Li X. (1995), A new parallel structure with six 
degrees of freedom, 9th World Congress on the Theory of Machines and 
Mechanisms, pp. 8-12. 
Bruyninckx H. (1997), The Analytical Forward Displacement Kinematics of the 
31-12  Parallel Manipulator, IEEE International Conference on Robotics and 
Automation, pp. 2956-2960. 
Bruyninckx H. (1998), Closed-form forward position kinematics for a (3-1-1-1)2 
fully parallel manipulator, IEEE Transactions on Robotics and Automation, 
No. 14, vol. 2, pp. 326-328. 
Di Gregorio R. (2002), Singularity-locus expression of a class of parallel 
Doubilet P., Rota G.C., and Stein J. (1974), On the Foundations of Combinatorial 
Theory: IX, Combinatorial Methods in Invariant Theory, Studies in Applied 
Mathematics, vol. 53, no.3, pp. 185-216. 
Downing D.M., Samuel A.E., and Hunt K.H. (2002), Identification of the Special 
Configurations of the Octahedral Manipulator using the Pure Condition, The 
Faugere J.C. and Lazard D. (1995), Combinatorial Classes of Parallel 
Manipulators, Mechanism and Machine Theory, No. 30, vol. 6, pp. 765-776. 
Husain M. and Waldron K.J. (1994), Direct position kinematics of the 3-1-1-1 
Stewart platforms, Journal of Mechanical Design, vol. 116, pp. 1102-1107. 
Innocenti C. and Parenti-Castelli V. (1994), Exhaustive Enumeration of Fully 
Parallel Kinematic Chains, ASME Dynamics Systems and Control, DSC-Vol 
55-2, vol. 2, pp. 1135-1141. 
McMillan T. (1990), Invariants of Antisymmetric Tensors, PhD Dissertation, 
University of Florida.  
Nanua P. and Waldron K.J. (1990), Direct kinematic solution of a special parallel 
Patarinski S.P. and Uchiyama M. (1993), Position/Orientation decoupled parallel 
manipulators, ICAR, pp. 153-158. 
Thomas F., Ottaviano E., Ros L., and Ceccarelli M. (2002), Uncertainty model 
and singularities of 3-2-1 wire-based tracking systems, Advances in Robot 
Kinematics, pp. 107-116. 
White N. (1975), The Bracket Ring of a Combinatorial Geometry I, Transactions 
of the American Mathematical Society, vol. 202 pp. 79-95. 
White N. (1983), The Bracket of 2-Extensors, Congressus Numerantium, vol. 40, 
pp. 419-428. 
White N. (1994), Grassmann-Cayley Algebra and Robotics, Journal of Intelligent 
White N. and Whiteley W. (1983), The Algebraic Geometry of Stresses in 
Frameworks, SIAM Journal on Algebraic and Discrete Methods, Vol. 4, No. 4, 
pp. 481-511.
White N. and Whiteley W. (1987), The algebraic Geometry of Motions of Bar-and-
Body Frameworks, SIAM Journal on Algebraic and Discrete Methods, vol. 8, 
Wohlhart K. (1994), Displacement analysis of the general spherical Stewart 
platform, Mechanism and Machine Theory, no. 29, vol. 4, pp. 581-589. 
274 
P. Ben-Horin and M. Shoham
mechanisms, Robotica, vol. 20, pp. 323-328. 
International Journal of Robotics Research, vol. 21, No. 2, pp. 147-159. 
Hunt K.H. and Primrose E.J.F. (1993), Assembly configurations of some 
vol. 1, pp. 31-42. 
in-parallel-actuated manipulators, Mechanism and Machine Theory, No. 28,
robot structure, RoManSy, ol. 8, pp. 134-142
and Robotics Systems, vol. 11, pp. 91-107. 
“ 
” 
no. 1, pp. 1-32. 
.
v

Tanio K. Tanev 
Central Laboratory of Mechatronics and Instrumentation 
Bulgarian Academy of Sciences 
Acad. G. Bonchev Str., Bl.1, Sofia-1113, Bulgaria 
tanev_tk@hotmail.com 
Abstract 
The paper presents a geometric algebra (Clifford algebra) approach to 
singularity analysis of a spatial parallel manipulator with four degrees of 
freedom. The geometric algebra provides a good geometrical insight in 
identifying the singularities of parallel manipulators with fewer than six 
degrees of freedom. 
Keywords: 
1.  
Introduction  
Most of the investigations of the parallel manipulators are concerned 
with the six-degrees-of-freedom (6-dof) parallel manipulators such as 
Steward-Gough parallel manipulators. In recent years there is an 
increased interest in parallel manipulators with less than six degrees of 
freedom. The performance of such types of manipulators is satisfactory 
for some applications. Moreover, they have some advantages in 
comparison with the 6-dof parallel manipulators such as greater 
workspace and simpler mechanical designs. Comparatively a small 
number of papers have been dedicated to 4-dof and 5-dof parallel 
manipulators (e.g. Fang and Tsai, 2002; Lenarcic, et al., 2000; Pierrot 
and Company, 1999; Tanev, 1998). 
The singularity of spatial parallel manipulators with fewer than six 
degrees of freedom (mainly 3-dof) has been studied by several 
researchers (Di Gregorio, 2001; Wolf et al., 2002; Zlatanov et al., 2002). 
This paper presents a singularity analysis of a four-degrees-of-freedom 
three-legged parallel manipulator using geometric algebra (Clifford 
algebra) approach. Only a few papers are dedicated to application of 
Clifford algebra to robot kinematics (e.g. Collins and McCarthy, 1998; 
Rooney and Tanev, 2003). The geometric algebra provides a good 
© 2006 Springer. Printed in the Netherlands.
275
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 275–284.
USING GEOMETRIC ALGEBRA 
SINGULARITY ANALYSIS OF 
A 4-DOF PARALLEL MANIPULATOR 
Singularity, parallel manipulator, geometric algebra, kinematics 
geometrical insight and computer efficiency in designing and mani-
pulating geometric objects.  

In this paper the author adopts the geometric algebra (Clifford 
algebra) approach developed by Hestens (Hestenes, 1999; Hestenes and 
Sobczyk, 1984). In an n-dimensional vector space 
n  over real numbers, 
the geometric algebra 
n
n
.
(
)
 

 .
 is generated from 
n  by defining a 
single basic kind of multiplication called geometric product between two 
vectors. The geometric product for all vectors in 
 obeys associative and 
distributive rules, multiplication by a scalar (
.
n
.
O ) is defined and the 
square of any vector is a scalar. These properties, which hold for all 
vectors, are summarized as follows: 
(
)
(
)
a bc
ab c
 
; 
(
)
a b
c
ab
ac

 

; 
; 
(
)
b
c a
ba
ca

 

a
a
O
O
 
; 
2
2
a
a
 r
 where a  is a positive scalar called 
magnitude of a. The geometric algebra 
n
n
(
)
 

 .
 is a 2 -dimensional 
algebra, i.e., 
 generates exactly 2  linearly independent elements. The 
vector space 
n  is closed under vector addition, but is not closed under 
multiplication. By multiplication and addition the vectors of 
n  generate 
a larger linear space 
n
n
n
n

n
.
.
(
)
 

 .
 called the geometric algebra of 
. This 
linear space is closed under multiplication as well as addition. 
n
.
The geometric product of two vectors a and b can be decomposed into 
symmetric and antisymmetric parts. i.e., 
 
 
,
ab
a b
a
b
 



 
(1) 
 
where the inner product a b

 and the outer product a
b

, respectevely, 
are defined by  
 
 
1 (
2
a b
ab
ba

 

)   and  
1 (
2
a
b
ab
ba

 

) .  
(2) 
 
The inner product a b

is a scalar-valued (drade 0). The result of the 
other product is neither a scalar nor a vector. For any two vectors a and 
b, the outer product a
b

 is an entity called bivector (grade 2). 
Geometrically, it represents a directed plane segment produced by 
sweeping a along b. Higher-grade elements can be constructed by 
introducing more vectors. Thus, trivectors a
b
c


 (grade 3) represent 
volumes and so on, up to the dimension of the space under consideration. 
The outer product of k vectors 
1
2
 generates a new entity 
1
2
k called a k-blade. The integer k is named a grade. A linear 
combination of blades with the same grade is called a k-vector. The 
geometric algebra 
n  contains nonzero blades of maximum grade n 
which are called pseudoscalars of 
n  or 
n . Although geometric algebra 
can be constructed in an entirely basis-free form, in this particular 
application (Euclidean geometric algebra with signature (n,0)) it is useful 
to introduce a set of basis vectors which obey the following 
,
,...,
k
a a
a
a
a
a

  


.
i
j
ij
e
e
G

 
; 
1(
)
ij
i
j
G
 
 
 and 
0 (
)
ij
i
j
G
 
z
; 
0
i
i
e
e

 
. 
T.K. Tanev
2. 
Geometric Algebra 
276 

A generic element of the geometric algebra is called a multivector 
which can be written as 
 
0
n
k
k
M
M
 
 ¦
,  
(3) 
 
where 
k
M
 denotes the k-vector part of M. 
An extensive treatment of a geometric algebra is given in Hestenes, 
1999. 
3.  
In this section, the velocity equations for parallel manipulators in 
terms of the geometric algebra are obtained. 
3.1. 
Any oriented line l is uniquely determined by given its direction u and 
its moment 
 and in the geometric algebra 
3  of 3-D vector space 
 
with the basis 
it can be written as (Hestenes, 1999): 
m

3
.
1
2
3
{
,
,
}
e e e
 
 
+
l
u m
u + r
u
 
{
  , 
(4) 
 
where r is the position vector of a point on the line. 
Thus, in the geometric algebra 
3  of the 3-D vector space 
3 , a line is 
expressed as a multivector composed from a vector part plus a bivector. 
An extension of the equation of the line (Eq. 4), i.e. adding the moment 
corresponding to the pitch, leads to the equation of a screw: 

.
 
 
 (5) 
1 1
2
2
3
3
1
2
3
2
3
1
3 1
2,
s
u + r
u
hiu
v e
v e
v e
b e
e
b e
e
b e
e
 


{








 
where 
 and 
(
1,2,3
iv i  
)
)
(
1,2,3
ib i  
 are scalar coefficients; 
 is 
the unit pseudoscalar of 
; h  is the pitch of the screw. 
1
2
3
i
e e e
 
3
In Eq. 5 the screw is expressed as a multivector in 
3 . It could also be 
expressed as a vector in the geometric algebra 
6 . In the geometric 
algebra 
6  of 6-D vector space 
6  with the basis 
, a 
screw can be written as a vector (grade 1), i.e., 




.
1
2
3
4
5
6
{
,
,
,
,
,
}
e e e e e e
 
 
 
(6) 
1 1
2
2
3 3
1
4
2 5
3
6 ,
S
v e
v e
v e
b e
b e
b e
 





 
where the coefficients are the same as in Eq. 5. 
The operation of transformation of a screw into an elliptic polar screw 
(see Lipkin and Duffy, 1985) can be written as 
 
 
1
1 1
2
2
3
3
1
2
3
2
3
1
3 1
2
1
2
,
s
i s
i
s
b e
b e
b e
v e
e
v e
e
v e
e

 
{







+


 (7) 
 
where 
k
s
denotes k-vector part of s; 
1
i is the inverse of the unit 
pseudoscalar i for the 
. 
3

Singularity Analysis of a 4-DOF Parallel Manipulator
277 
Velocity of Parallel Manipulators  
Screws in terms of Geometric Algebra 

From this section on the following notations for a screw are adopted: a 
3
6  of 6-D space; letters with a tilde mark (
) denote the elliptic polars 
of the screws (s and S), given in 
 and 
, respectively. 


,s S

3
6
It has been pointed out by Lipkin and Duffy (1985) that the twists of 
non-freedom (wrenches of non-constraint) and wrenches of constraint 
(twists of freedom) are elliptic polars; twists of freedom (wrenches of 
constraint) and twists of non-freedom (wrenches of non-constraint) are 
orthogonal complements which together span a six space. These 
properties and relationships are used in the present paper in order to 
obtain the singularities of the considered parallel manipulator. Although 
orthogonality of screws is invariant with respect to rotations of the 
coordinate system but not with respect to the translations (Lipkin and 
Duffy, 1985), it is still useful for the purpose of the identification of 
singularities in this paper. 


3.2.  
The moving platform and the base of a parallel manipulator are 
connected with n-legs, which can be considered as serial chains. The 
velocity of the moving platform can be expressed as a linear combination 
of the joint instantaneous twists 
 
 
 
(8) 
1
,
(
1,2... ),
f
j
j
p
i
i
i
V
S
j
Z
 
 
 
¦
n
 
 where j
i
Z  denotes the joint rate and 
 represents the normalized 
screw associated with the ith joint axis of the jth leg; f is the dof of the jth 
leg . The left leading superscript denotes the leg number.  
j
i
S
In case of a parallel manipulator with fewer than six degrees of 
freedom, some legs may not possess full mobility. In that case, we 
suppose that the remaining degrees of freedom are represented by 
dummy joints (or driven but locked joints) and associated with them 
dummy screws. Taking the outer product of five screws of the jth leg 
gives the following 5-blade: 
 
 
 
(9) 
1
2
1
1
6
...
...
.
j
j
j
j
j
j
k
k
k
A
S
S
S
S
S


 






 
The 5-blade 
 from Eq. 9 involves five screws (out of six with the 
exception of the 
screw). The kth joint is active. In a non-degenerate 
space, the dual of a blade represents the orthogonal complement of the 
subspace represented by the blade. The dual of the above 5-blade 
 is 
given by the following geometric product: 
j
k
A
j
k
S
j
k
A
 
T.K. Tanev
278 
Velocity Equations 
3-D space; an upper case letter (S, L) denotes a screw written as a vector in 
 of
lower case letter (s, l) denotes a screw written as a multivector in 

 
1
(6
)
1
6
6
( 1)
,
j
j
n
n
j
k
k
k
D
A I
I
A



 
 
 
(10) 
 
where 
 is a unit pseudoscalar of the 
 and 
 is its 
inverse; 
(in case of 6-dof limb). 
6
1
2
3
4
5
6
I
e e e e e e
 
6

1
6I 
5
n  
Pre-multiplying (inner product) both sides of Eq. 8 by j
k
D  one obtains: 
 
 
.
j
j
j
j
k
p
k
k
k
D V
D
Z
 
<
S
<
k
 
(11) 
 
The 
result 
in 
Eq. 
11 
is 
obtained 
having 
in 
mind 
that 
 and 
(providing the joint screws of the jth 
leg are linearly independent); j
 is a scalar. 
0 (
)
j
j
i
k
S
D
i
k
 
z
<
j
j
j
k
k
S
D
c
 
<
kc
 
 
1
,
j
j
k
j
j
k
k
R V
R
S
Z  

<
 <
k
p
R
D
{

,
,...,
,
,...,
j
j
j
j
S
S
S
S
S
 
(12) 
 
where 
 
is 
a 
screw 
reciprocal 
to 
the 
joint 
screws 
1
2
1
1
6
k
k


 of the jth leg; and 
j
j
k
k
p
V is the velocity of the 
moving platform with interchanged primary and secondary parts (the 
interchanging operation is algebraically the same as operation of 
transformation of a screw into an elliptic polar screw).  

The screws j
 form the rows of the inverse Jacobian.  
k
R
4.  
The considered three-legged parallel manipulator is shown in Fig.1. 
Two of the legs have SPS structure. The third leg has R1AR2AP3AR3 
structure (the R1 revolute joint is attached to the base and R3 revolute 
joint - to the moving platform, respectively).  
 
A1
A3
A2
B1
B2
B3
3S2
3S3
3S4
3S1
C
 
A
B
S1
S3
S4
S5
S5
S2
 
 
a) The 3-legged 4-dof parallel 
manipulator  
 
b) The SPS (UPS) leg of the 
manipulator and the screw axes 
Figure 1.     The 3-legged 4-dof parallel manipulator and the joint screw axes 
Singularity Analysis of a 4-DOF Parallel Manipulator
279 
Therefore, it follows from Eq. 11 that the rate of kth joint of the jth leg is 
Singularity of a 3-legged 4-DOF Parallel 
Manipulator  
-
. 

The active (actuated) joints are as follows: i) the three prismatic joints 
of the legs; and ii) the revolute joint R1 of the third leg which is connected 
to the base platform (for details see Tanev, 1998). 
In a non-singular configuration the driven joints and the structure (or 
the dummy joints) of the manipulator sustain a general wrench applied 
to the moving platform. Referring to Eqs. 11 and 12, the condition for 
singular configuration can be written as  
 
 
1
2
6
...
0,
D
D
D



 
 
(13) 
 
where 
1
6
j
i
D
A I 
 
 is a vector (grade 1), because the 5-blade 
j
 also 
includes the screws associated with the dummy joints of the jth leg. 
A
The 6-blade from Eq. 13 is zero, if and only if its six constituent 
vectors are linearly dependent. The first and the second legs (SPS legs) of 
the considered parallel manipulator have full mobility and each one has 
one driven joint (the P joint). The third leg (RRPR leg) has four degrees of 
freedom, two driven joints (R1 and P3) and in order to have full mobility 
two extra dummy joints (denoted by a superscript d in the equations) are 
added, which can be considered as active but locked. In this case, Eq. 13 
can be rewritten as 
 
 
 
(14) 
1
2
3
3
3
3
3
3
1
3
1
2
0.
d
d
D
D
D
D
D
D





 
 
The duals, which are needed for the velocity equations for the active 
and dummy joints of the third leg (RRPR leg), are as follows 
 
 
3
3
3
3
3
3
1
2
3
4
1
2
6
3
3
3
3
3
3
3
1
2
4
1
2
6
3
3
3
3
3
3
1
1
2
3
4
2
6
3
3
3
3
3
3
2
1
2
3
4
1
6
(
)
(
(
(
)
d
d
d
d
d
d
d
d
1
1
1
1
;
)
)
D
S
S
S
S
S
I
D
S
S
S
S
S
I
D
S
S
S
S
S
I
D
S
S
S
S
S
I




 




 




 




 




 
(15) 
 
Taking the outer product of the four vectors from Eq. 15 and after 
some manipulations one obtains 
 
 
3
3
3
3
3
3
1
3
1
2
2
4
(
)
d
d
1
6
D
D
D
D
S
S
I
O




 

 , 
(16) 
 
where 
 is a scalar; the above result is 
obtained keeping in mind that 
3
3
3
3
3
3
1
1
1
1
2
2
(
)(
)(
d
d
d
d
D
S
D
S
D
S
O  
<
<
<
)
3
3
0(
)
i
k
D
S
i
k
 
z
<
 and 3
3
0(
)
i
k
D
S
i
z
 
<
k
1
6
)
1
1
. 
 and 
represent one and the same subspace.
  
3
3
2
4
( S
S
I
O


3
3
2
4
6
(
)
S
S
I 

Therefore, the condition for singularity can be written as 
 
 
 
(17) 
1
2
3
3
3
0,
D
D
D


 
 
where 1
1
1
1
1
1
3
1
2
4
5
6
6
(
)
D
S
S
S
S
S
I 
 




; 
2
2
2
2
2
2
3
1
2
4
5
6
(
)
1
6
D
S
S
S
S
S
I 
 




 and  3
3
3
2
4
6
(
)
1
D
S
S
I 
 

. 
T.K. Tanev
280 
Since O
 
is 
a scalar, 
both 
4-blades 

The singular configurations of the manipulator can be algebraically 
obtained from Eq. 17. Further, in order to utilize the geometrical insight 
of the approach, the 6-blade from the left-hand side of Eq. 17 is factorized 
into six vectors (screws). The linear dependence of these six screws gives 
the condition for singularity. Since 1
3
D  and 2
3
D  are vectors, only the 4-
blade 3D  is factorized into four vectors. These six dual screws yield their 
elliptic polars. It could be proved that if n screws are linearly dependent, 
so are their elliptic polars. The elliptic polars of 1
3
D  and 2
3
D are two lines 
(
1
L  and 
2 ) along the first and the second legs, respectively. The elliptic 
polars of the four factor vectors of the 4-blade 3
L
D  are as follows: i)the 
line 
3  is along the third leg (
3
CB ); ii)the line 
4  is parallel to the  joint 
screw axis 
 and passes through 
3
L
L
3
2
S
B ; iii)the line 
5  is parallel to the  
joint screw
 axis
 
and passes  through C ;  iv)the line 
6  intersects 
the
 
two joint screw axes 
 and 
,  and does not pass through .  These 
 and  
. Thus, 
L
3
4
S
L
3
2
S
3
4
S
C
3
2
S
3
4
S
 
 
 
(18) 
3
3
4
5
6
,
L
L
L
L
D
P



 




 
where P  is a scalar. 
A1
A3
A2
B1
B2
B3
C
L1
L2
L3
L4
L5
L6
 
 
Figure 2.     The arrangement of the six lines 
The six lines are shown in Fig. 2. They, actually, represent the 
wrenches of constraints, including those from the active (driven) joints, 
imposed to the moving platform. Therefore, the manipulator is in 
singular configuration if these six lines are linearly dependent, i.e., 
 
 
1
2
3
4
5
6
0.
L
L
L
L
L
L





 
 
(19) 
 
Singularity Analysis of a 4-DOF Parallel Manipulator
281 
It is clear that the condition for the singularity (Eq. 17) involves screws
which represent all and only passive joints of the parallel manipulator.
This condition can be easily generalized to any kind of parallel manipula-
tor with less than six degrees of freedom.  
four lines are  reciprocal to 
the two joint screws 
the outer product of the elliptic polars of the latter four  lines is 
. 

Obviously, Eqs. 17 and 19 are equivalent and both represent the 
condition for singularity of the considered parallel manipulator. 
4.1  
The singular configurations of the manipulator can be identified using 
Eq. 17 (or Eq. 19). The following main types of singular configurations for 
the considered parallel manipulator can be distinguished: i) The first 
type of singular configuration occurs when one line is linearly dependent 
on three other lines (Fig. 3).  
Figure 3.     Type 3b singular configuration 
This singularity is of type 3b according to the classification introduced 
by Merlet (Merlet, 1989; McCarthy, 2000). In this case the intersection 
line of two planes, defined by two pairs of intersecting lines (
3 ,
5  and 
2,
6), passes through the two points of intersection of the two pairs of 
lines (Fig. 3-b). Interesting in this case is the fact that the manipulator is 
in singular configurations regardless of the leg length of the first leg 
(
1
1
L
L
L
L
A B ). In this singular configuration the uncontrollable motion is a 
general screw motion. ii) The second type of singular configuration is of 
type 4d 
 degenerate congruence. Fig. 4-a shows this singular 
configuration and the plane generated by two intersecting lines. The 
lines
, 
3  and 
5  lie in this plane, while the intersection point of the 
lines 
2  and 
6  is the same as the point of intersection of the two lines 
generating the plane. Here, the uncontrollable motion (twist of freedom) 
is a pure rotation about an axis $ along the line
2
3
1
L
L
L
L
L
B B . iii) The next type of 
singular configuration occurs when one of the lines is a linear 
combination of the remaining five lines (Fig. 4-b). In this particular case 
five of the lines (
1
L ,
2,
3,
4  and 
6) intersect a single line 
2
3
L
L
L
L
B B  and 
the sixth line 
5  is parallel to the same line 
2
3
L
B B . In this singular 
configuration, the uncontrollable motion is a pure rotation about an axis 
$ along the line
2
3
B B . Although this type of singularity is not explicitly 
T.K. Tanev
282 
Singular Configurations  
–
. 

listed in the Merlet’s (Merlet, 1989; McCarthy, 2000) classification, it 
 
 
1
2
3
4
5
0.
S
S
S
S
S
S





 
 
(20) 
 
Postmultiplying both sides of Eq. 20 by 
1
6I   leads to 
 
 
1
1
1
2
3
4
5
6
1
2
3
4
5
6
(
)
[(
S
S
S
S
S
S
I
S
S
S
S
S
S
I


)
]
0.





 




 
<
 (21) 
 
Since 
1
1
2
3
4
5
6
(
F
S
S
S
S
S
I)

 




 is a unique screw, therefore it 
follows from Eq. 21 that any screw S, which is reciprocal to the elliptic 
polar screw (
) of F, is a linear combination of the five screws 
i
. If 
 is a real line (a screw with zero pitch), then S could be 
any line in space which intersects 
, is coaxial with or parallel to 
. 
F
(
1...5)
S i  
F
F
F
Figure 4.     Types 4 and 5 singular configurations 
In the considered particular singular case (Fig. 4-b) the dual of any 
5-blade (the outer product of any five screws
i ) is a line and its elliptic 
polar is the line along 
2
3
L
B B  (Fig. 4-b). Five of the lines intersect the line 
2
3
B B  and the remaining sixth line is parallel to the same line
2
3
B B . 
5.  
Conclusions  
The condition for singularity is expressed as a linear dependency of six 
lines using the language of geometric algebra. Several main types of 
singularity for the considered parallel manipulator have been identified. 
It has been proved that the equation for the singularity (the condition for 
singularity) involves the screws which represent all and only passive 
joints of the manipulator. Although the presented geometric algebra 
approach is applied to a particular parallel manipulator, it could be 
generalized for identifying the singularities of a general type of parallel 
Singularity Analysis of a 4-DOF Parallel Manipulator
283 
could be classified as 5b singularity. Let a screw S be a linear combination 
of five screws. Thus, the six screws are linearly dependent if and only if
their outer product is zero, i.e., 
manipulator and as well as of one with fewer than six degrees of freedom. 
. 

Acknowledgements  
This paper is partly supported by the Bulgarian National Science 
Fund – TH-1510/05 project. 
References 
planar platforms in the Clifford algebra of the projective plane, Mechanism 
IEEE/ASME International Conference on Advanced Intelligent Mechatronics, 
Hestenes, D. (1999), New foundations for classical mechanics (Second edition), 
Kluwer Academic Publishers, Dordrecht, The Netherlands. 
 
Lenarcic, J., Stanisic, M.M., and Parenti-Castelli V. (2000), A 4-DoF parallel 
mechanism simulating the movement of the human sternum-clavicle-scapula 
complex. In Advances in Robot Kinematics, J. Lenarci  and M.M. Stanisic, 
Lipkin, H., and Duffy, J. (1985), The elliptic polarity of screws, ASME Journal of 
McCarthy, J.M. (2000), Geometric design of linkages, Springer-Verlag. 
Merlet, J-P. (1989), Singular configurations of parallel manipulators and 
Grassmann geometry, International Journal of Robotics Research, 
ol. 8, 
Issue 5, pp. 45-56. 
IEEE/ASME International Conference on Advanced Intelligent Mechatronics, 
Atlanta, Georgia, USA, pp. 508-513. 
Mappings between Robotic Jointspaces and Workspaces, Journal of Robotic 
Degree-of-Freedom Parallel Manipulator, In: Advances in Robot Kinematics: 
Analysis and Control, Lenarcic J. and Husty M.L. (Eds.), Kluwer Academic 
Publishers, Dordrecht, pp. 147-154. 
self-motion of the the 3-UPU robot, Advances in Robot Kinematics: Theory and 
Applications, Lenarcic J., and Thomas, F. (eds), Kluwer Academic, Dordrecht, 
pp. 165-174. 
parallel mechanisms, Proc. IEEE Int. Con. Robotics and Automation, 
T.K. Tanev
284 
5-DOF Parallel Manipulators with Identical Limb Structures, The International
D. Reidel Publishing Company, Dordrecht, Holland. 
Hestenes, D., and Sobczyk, G. (1984), Clifford algebra to geometric calculus, 
Collins, C.L., and McCarthy, J.M. (1998), The quartic singularity surfaces of 
and Machine Theory, ol. 33, No. 7, pp. 931-944. 
Di Gregorio, R. (2001), Statics and singularity loci of the 3-UPU wrist, Proc. 
Como, Italy, ol. 1 , pp. 470-475. 
Fang, Y., and Tsai, L-W. (2002), Structure Synthesis of a Class of 4-DOF and 
(eds.), Kluwer Academic, pp. 325-332. 
Mechanisms, Transmissions, and Automation in Design, ol. 107, pp. 377-387. 
Pierrot F., and Company O. (1999), H4: a new family of 4-dof parallel robots. 
Rooney, J., and Tanev, T. K. (2003), Contortion and Formation Structures in the 
Tanev, T.K. (1998), Forward Displacement Analysis of a Three-Legged Four-
Wolf, A., Shohan, M., and Park, F.C. (2002), Investigation of singularities and 
Zlatanov, D., Bonev, I.A., Cosselin, C.M. (2002), Constraint singularities of 
ˇ cˇ
ˇˇ ˇ
Washington, DC, vol. 1 , pp. 496-502. 
Systems, vol. 20, No. 7, pp. 341-353. 
 Journal of Robotics Research, vol. 21, No. 9, September  2002, pp. 799-810. 
v
v
v
v

	
		

				
	

	


	

	
	
					


	

	
	
	
	


			







	


	


	
 

		

 ! 	
	 

 
" 

 

 
 
  


	 

     	 
  	
 
 

" 
 		  
 
 

	
  
 	 


#

	




	

			




	
 
!"
	#$%#

 

  
  			
    $ %!&'
%!() 
 %!&*  +, 
 
	 	 	 
	
"
-	
	 	 
	
  
 	  
  
  
	./$0

 "%!1&*





2	 
  
" 
 			 

  
 
	 	

	 
	

			

	3$*
  
 	 	 
2	 
  
  
 
 $-*"  	
 	




			

$""4


%!11' %!!5) 6  7
 (55(* 	 
   	 
 
	
			
   
 


" 0 
   

			
		




 
 	
 
 
" 
 .
	 
 	  
	 
 	



	

			

	

	
"
P

	'/	
	'		'

 
285
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 285–294. 

&"
%#'$(%%
-	


		,	"%"
	


 
 	
 888 	 .
 		 
 8  8

	

	

	
88
	



"

	
	/

θ	

"



	

	
	
	8
	
"

 		

 	






	


'
		
"


 	 	
  

 "  3  
 
  
	 
 		


 	 

	"
	


	
		'

'









	


	2
"	 


	
	



	



		2
"



!


		
	 


'	

 		#
		 
'


	
	


!

"



  	 	
  	 
  
 
'  




	
	



	






	 
"0
	
	 
		

			"0

	


		'	
			
2	 




'	"
"





		



-	 	3	

"-


   	
 

 	 
 	  
 
	

			
			
	

	
	"  	 		 
  
 .
	  
 !
	
	


9 !"#$θθθ:
		

 
 
 
 9 !"#$:  
	 	" 0 
  	
R. Daniel and R. Dunlop 
286 
	
	





	
	

' 	

	



	





'

			





"

		
 		 
 $  	
	
* 
	  
 
 
		' 
 

  	
 	 		 



	
	

		.	


"

; 
  
    
 
  
 #
   


 
 	 
 
 
 
 
	
"  <0  
	


		#
'
			"
"

	
	

	
=",	
	

 


		 
	


	


θ				




	
	

		
	

"


 	
  
  	   %   
 	
'  



	


	
2		
!	
	




		   	 
  	
  
"  
 2
  

 	



	
'


(
)
(
)
(
)





=
=
=
∀







δ
δ
δ

3	
		
	

⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎣
⎡
=
⎥⎦
⎤
⎢⎣
⎡
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
⎡
∂
∂
∂
∂
∂
∂
∂
∂
∂
∂
∂
∂




























	 


 θθθθ	 

"

	 	 
  
 		  
 
	   

 	




	
	"

2	
 


	

















⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
⎡
∂
∂
∂
∂
∂
∂
−
=
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
⎡
∂
∂
∂
∂
∂
∂








 	 

	  
 
 
 
	 	 
  
 .
	
	  
 	 
 	 
 !	
	 


A Geometrical Interpretation of  3-3 Mechanism Singularities 
287 


  
 

 
  
 

 

	 
"
-






		 		


2	 
>5'	"
"		
	

 
 	 	"  	 		  		 	 
  

			


	


	
	

 
		 
 	  
  	 3$*' 

 

	
 

  
  
  
	
  
 


	






"
"
,


			.	'








⋅
∂
∂
=
∂
∂
⋅
∂
∂
−
=
∂
∂
=
∂
∂







θ
θ
θ
θ
θ







		


	 		

	



		 

⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
⎡
⋅
∂
∂
⋅
∂
∂
−
⋅
∂
∂
−
⋅
∂
∂
⋅
∂
∂
⋅
∂
∂
−
=
















 












θ
θ
θ
θ
θ
θ


					

=
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
−
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
























θ
θ
θ
θ
θ
θ

	

	

		
2	?
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
=
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂
























θ
θ
θ
θ
θ
θ

		  
 	
 
   		 
	"  3	
 
	


2	
#


#

2"





	


'	
		
		

 	
		'


		
	
"
%#'$(%%) %#*%#()+
R. Daniel and R. Dunlop 
288 


,"
-#+
-	




	




	



"-




&&&

	 
'
	





		
	"
"&	
	

8	,	"%"
	



	




	";	
'


	
	
	


  
 

 	
 &   	
    	"
" 

	




	
'"			
'
'  	
 	 &  &  	 
  
   


	 
"

 

 

 & &  & 
	
  



 
  


		
"@

	

	





 
	
  A		8  
 
	
 

 	  
 	

	

	


⊂&∩&
⊂&∩&
⊂&∩&


	
	

&

&

&



	 
	
	




"
."
0
	

		
2		#
'




		

	

#
"		


	

	
"
			
	
	



- %%Z
A Geometrical Interpretation of  3-3 Mechanism Singularities 
289 
Figure 2.


(	
	




"






	


"			
%'&'!


 
 
' 	
 
 
 
  
 
"  
 
 			  / 0/  
 
	 #
 	  	

  


B




=
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂




θ


=
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂




θ


=
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂




θ


=
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂




θ


		%

		(

		

=
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂




θ


		C

		&

		

=
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⋅
∂
∂




θ


		D

		1

		!
."!
%#'$(%!









			
 %' ('   	 
 	  
 	
 	 
	" $E

the l

'	"
"		
	

	
	
"
the s		
2	'
 		




	


	
 
	
	

	

	
"*#

	
Figure 3.



	





	
 prismatic
		


	
 with an edge of the tetrahedron.


 		
"

 singularity of type 1
R. Daniel and R. Dunlop 
290 



				%









⊂
⇒
=
⋅
∂
∂
⊂
⇒
=
⋅
∂
∂








θ
θ

;	,	"	
	
	

	&&'	"
"

	





	

)		 






"EF	










	
 	'
 




	

	


 	"
."&
%#'$(%&

				(












∈
⇒
=
⋅
∂
∂
∈
⇒
=
⋅
∂
∂






θ
θ



(		
	



"
Figure 4. G		


	A8"

		 of
A Geometrical Interpretation of  3-3 Mechanism Singularities 
291 

F
			∈&

		
 		
	&

"		
A	8	


	
		"EF	
∈&

 	
	&
		
 

"
 





	
	


 	"
."
%#'$(%

				












∈
⇒
=
⋅
∂
∂
∈
⇒
=
⋅
∂
∂






θ
θ

	
∈&	



	'


 




	"
"
 

	
	



"

1"


 
	  
 

	  
 	 
 #
" 

		  
  
	
  
  	   
 	
 
 
Figure 5.
		'
	

"

		
		 a platform corner at the apex



"
G

 





	
 the leg-
	
		"6
 

%5
- %%No#Z


			

C!



%
R. Daniel and R. Dunlop 
292 



>λHµ
>I>$λ µ*Hµ λ
>λHµ
	
 0>I>$λ µ*Hµ λ
>λHµ

>I>$λ µ*Hµ λ

		

	
		
2		
λλλ> µµµ
"×>$λHµ*"$λHµ*×$λHµ*>2'	"
"

		 ⇒ 
 		  
 '    
  

 

 




	
	


 	"

	


		
	"

 	"			

		 
'

		 

 
	

		

(
)
(
)
(
)
(
)
(
)
(
)
	



	




	



	





−
⋅
∂
∂
−
⋅
∂
∂
−
⋅
∂
∂
−
−
⋅
∂
∂
−
⋅
∂
∂
−
⋅
∂
∂
=












θ
θ
θ
θ
θ
θ
θ



0 /	
	
	

	
	 	 


	


	
	


	
  	 
 	  
 
	
 	 
	 C  /	 

 


A		8"			,	" ("
−
−
−
−
−
−
E

 




	
	



Figure 6"G				%5"
 





"  
 	
  
  	   
 


  


	


	
			


 	"

A Geometrical Interpretation of  3-3 Mechanism Singularities 
293 
−



	



	






⋅
∂
∂
⋅
∂
∂
⋅
∂
∂
−
⋅
∂
∂
⋅
∂
∂
⋅
∂
∂
−
=












θ
θ
θ
θ
θ
θ
θ


	
(
)
(
)

=
⋅
∂
∂
+
⋅
∂
∂
⋅
∂
∂
−
+
⋅
∂
∂
⋅
∂
∂
⋅
∂
∂
−
=




























θ
µ
λ
θ
θ
µ
λ
θ
θ
θ
θ

			
				0
	

	
3θθθθ42	"
"			"
5"
6%$%##
#($%#

 	"


#

	
	
	
	
!			
	

 	
	




 
"   %5 			
  
 
  

		
 

"
		




?

)* !+! ,& ( 
 
	 
 	 	 
 *   *
*	
	*	**+(	

	*
(	*
	(-

)#
'J"3"$%!&*'.-/
-0	-*-1	-'"!(!&"
*
0	-)*	
	2-0-&-0-)-' "%%D'"%%D%&"

3**	0	
4	
42	-
	'!*0&35-

' " $%!&*' ; G 	 	 


  ,

' .-  *
0'


>λHµ
	





	


 	
* 		 

 





	
	
	
	&


0&33. (%(D"
'J"3"K	
'""$%!(*'L	 
	

4	
'.-6
.-2		0	23*.5*	
	
0
'6"'/'M",/	#	'. $%!1&*'G
	'.- !
4

'"G"$%!11*'G
	'G(?
'			
6'4"@"7
';" $(55(*' 
	
G'


"3*3(-760	

	
4

'"G"$%!!5*';

	
/	
	

0	

	5*	
1	
	' "%15$G%'%&*'"D%1"
R. Daniel and R. Dunlop 
294 


	  
 	  
 #
'   
 
  

$
5	
( 3 
	3
L"
$
*'






Workspace and Performance
J.A. Carretero, G.T. Pond
Quantitative dexterous workspace comparisons
E. Ottaviano, M. Husty, M. Ceccarelli
Level-set method for workspace analysis of serial manipulators
M. Gouttefarde, J -P. Merlet, D. Daney
Determination of the wrench-closure workspace of 6-DOF parallel
G. Gogu
Fully-isotropic hexapods
P. Last, J. Hesselbach
A new calibration stategy for a class of parallel mechanisms
M. Kreﬀt, J. Hesselbach
The dynamic optimization of PKM
J.A. Snyman
On non-assembly in the optimal synthesis of serial manipulators
297
307
315
323
331
339
performing prescribed tasks
349
cabledriven mechanisms
.

QUANTITATIVE DEXTEROUS
WORKSPACE COMPARISONS
Juan A. Carretero and GeoﬀT. Pond
Department of Mechanical Engineering, University of New Brunswick
15 Dineen Dr., Fredericton, NB, E3B 5A3, Canada
{Juan.Carretero, Geoﬀ.Pond}@unb.ca
Abstract
sing a novel method for the formulation of Jacobian matrices, this
paper will compare the dexterity of two parallel manipulators: the 3-
PRS and 3-RPS. The newly obtained Jacobian matrix is square and
dimensionless and its singular values have an evident physical meaning.
These singular values are used to identify and compare regions of the
manipulators’ workspaces where either high end e ector velocities or a
ﬁne resolution over the manipulator pose may be obtained. Workspace
plots for the two manipulators, corresponding to these attributes are
presented and compared for arbitrarily chosen architectural parameters.
The objective of the comparison is to illustrate the capability of the
described method to quantitatively compare the dexterity of various
complex degree of freedom manipulators.
Keywords: Parallel manipulators, Jacobian matrices, singular value decomposition,
1.
Introduction
Studying the workspace characteristics of manipulators having either
translational degrees of freedom (DOF) or rotational DOF is simpliﬁed
due to the dimensional consistency within the manipulator’s Jacobian
matrix (e.g., Tsai and Joshi, 2000). However, for manipulators having
DOF in both translational and rotational directions, the conventional
method of studying the workspace characteristics using the Jacobian
matrix condition number is no longer possible. This is due to dimen-
sional inconsistencies within the manipulator’s Jacobian matrix.
Recently, a method has been introduced by Pond and Carretero, 2006,
which produces a dimensionally homogeneous Jacobian matrix regard-
less of the manipulator’s degrees of freedom, provided that only one
type of actuator (either revolute or prismatic) is used in the manipu-
lator architecture. This paper will further this work by quantitatively
comparing the dexterity of diﬀerent manipulators.
The manipulators included in this study are the 3-PRS mechanism
(Carretero et al., 2000) and the 3-RPS mechanism (Lee and Shah, 1988).
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 297–306. 
297
workspace, dexterity, complex degrees of freedom
U

The two mechanisms may be considered to have the same independent
DOF. The resulting Jacobian matrix for both manipulators, when for-
mulated by the method used in this paper, are the same size and are
dimensionless. This will be explained further in the following section.
1.1
Jacobian Formulation
A detailed description of the method developed to obtain dimen-
sionally homogeneous Jacobian matrices for use in dexterity analyses
is described in Pond and Carretero, 2006 and therefore, only a brief
introduction is provided here for completeness. The method presented
therein, is a continuation of a method introduced by Gosselin, 1992, and
later generalised by Kim and Ryu, 2003. This original method relates
a vector containing the Cartesian velocities of three points on the end
eﬀector platform ( ˙G1, ˙G2, and ˙G3) to the vector ˙q of actuator velocities
using ˙q = J˙x where ˙x =[ ˙G1x
˙G1y
˙G1z
˙G2x
˙G2y
˙G2z
˙G3x
˙G3y
˙G3z]T ,
˙q =[˙b1 ˙b2 ˙b3]T and the Jacobian matrix J relating the two is:
J =
dq
dx

(1)
This method relates actuator and end eﬀector velocities for up to 6-DOF
motion. However, use of this Jacobian’s condition number or singular
values in dexterity analyses may not be appropriate as at least 3 of
the variables of ˙x are dependent on the remaining terms of ˙x (6 are
dependent in the case of 3-DOF manipulators). Therefore the meaning
of the Jacobian’s singular values is unknown (Kim and Ryu, 2003).
Now consider the case of a 3-DOF manipulator such as one of those
included in this study, having a translational degree of freedom per-
pendicular to the base platform and two rotational degrees of freedom
around axes parallel to the base platform. Knowing the elevation of three
points on the end eﬀector platform relative to the base platform is suf-
ﬁcient to solve the inverse displacement problem (Pond and Carretero,
2006). Therefore, vector ˙x may be reduced to: ˙x′ =[ ˙G1z ˙G2z ˙G3z]T and
the general equation relating these end eﬀector velocities to the actuator
velocities is rewritten in the form ˙q = JP˙x′ where P, which is used to
map ˙x′ to ˙x, is expressed as:
P =
 dx
dx′

(2)
In order to obtain the partial derivative elements of P, constraint equa-
tions relating Giz to Gix and Giy must ﬁrst be formulated. The ﬁrst
derivative with respect to time of these equations leads to the partial
298
J.A. Carretero and G.T. Pond

derivative elements of P. In the case of the manipulators included in this
comparison, where the actuated joints are all prismatic, the multiplica-
tion of JP yields a square, dimensionless Jacobian relating independent
end eﬀector velocities to the actuator velocities. That is,
JP =
 dq
dx′

(3)
Therefore, the singular values of such a Jacobian matrix as JP in Eq. 3
have an evident physical meaning. The meaning of which is important
in understanding the dexterous characteristics of the manipulator.
1.2
Dexterity Analysis
The dimensionally homogeneous matrix JP maps the system output
˙x′ to the system input ˙q. As such, useful system characteristics may
be extracted from the information contained within this matrix.
As
explained by Pond and Carretero, 2006, the maximum and minimum
singular values of JP correspond to the magnitude of the minimum
and maximum system outputs corresponding to any unit system input.
Therefore, for the case where relatively small singular values are ob-
tained from JP, this corresponds to a manipulator pose where high end
eﬀector velocities may be obtained for a given set of actuator veloci-
ties. Conversely, where relatively large singular values are obtained, a
ﬁner resolution over the manipulator pose results as the system output
is smaller for the same unit input.
Conventionally, the Jacobian matrix condition number is used to mea-
sure the dexterity of a particular manipulator pose. Mathematically, this
is the ratio of maximum and minimum singular values. Physically, this
compares the ease by which the manipulator may move in the fastest
and slowest directions or whether the manipulator has similar resolution
in each of the DOF. Poses where the condition number is exactly 1 are
termed isotropic conﬁgurations (Angeles, 2003) and are considered ideal.
Only by examination of both, the Jacobian’s condition number and its
singular values, can a true understanding of the workspace characteris-
tics of a given manipulator be achieved.
2.
The 3-PRS Mechanism
The 3-PRS, shown schematically in Fig. 1a consists of three identical
kinematic chains. The kinematics for this manipulator have been previ-
ously presented in a variety of publications (e.g., Carretero et al., 2000)
and therefore only a brief review is provided here.
Quantitative Dexterous Workspace Comparisons
299

Figure 1.
Basic structure of the 3-PRS (a) and 3-RPS (b) manipulators
Inverse Displacement Solution.
Conventionally, the two mecha-
nisms discussed in this paper have one translational DOF along the base
frame’s z-axis and two rotational DOF around the x and y axes depicted
in Fig. 1a. However, as mentioned earlier, these degrees of freedom may
also be modelled using the elevation of three points lying on the plane
representing the moving platform (G1z, G2z, and G3z). Each of these
three points is chosen as one of the two intersections of the circle concen-
tric and coplanar with the end eﬀector platform, with the plane deﬁned
perpendicular to the ﬁxed xy plane. In order to compare between diﬀer-
ent architectures, the magnitude of the circle’s radius where points Gi lie
must be kept constant, and is preferably a unit circle. Constraint equa-
tions were developed in Pond and Carretero, 2006, relating Giz to Gix
and Giy
is very involved, they will not be presented here.
As presented in Carretero et al., 2000, the displacement of the actu-
ated prismatic joint |bi| is solved by means of the vector loop represent-
ing limb i, depicted in Fig. 1a for i = 3. Given a platform elevation z
and two angles ψ and θ around the ﬁxed x and y axes, respectively, two
solutions for this displacement are obtained by solving for the squared
length of limb i as |li|2 = |ri −bi|2.
Jacobian Formulation.
As described by Pond and Carretero, 2006,
any point on the plane deﬁned by the moving platform, with respect to
the base frame may be equated to a weighted sum of the three vectors
gi (i = 1, 2, 3), depicted in Fig. 1a. A point must now be identiﬁed
which lies on this plane and may also be represented by a vector loop
which includes the actuated prismatic joint. The logical choice is the
300
J.A. Carretero and G.T. Pond
by limb i, for i = 1, 2, 3. The plane deﬁned by limb i is constrained to be
(for i = 1, 2, 3). As the derivation of these constraint equations

position of the spherical joint as this point obviously lies on the end
eﬀector plane and a vector loop including the actuated prismatic joint
has already been used when solving for the actuator displacement. The
vector ri, representing the position of the spherical joint with respect to
the base frame, is equivalent to the vector sum bi + li. Equating this to
the weighted summation of vectors gi yields:
bi + li = ki,1g1 + ki,2g2 + ki,3g3
(4)
where the variables ki,j (j=1, 2, 3) are dimensionless constants and ki,1+
ki,2 + ki,3 = 1. Finally, taking the ﬁrst time derivative and simplifying:
sT
bisli ˙bi = ki,1sT
li ˙g1 + ki,2sT
li ˙g2 + ki,3sT
li ˙g3
(5)
where sbi and sli are unit vectors in the directions of bi and li, respec-
tively. The dimensionless constants ki,j are solved using Eq. 4. Equa-
tion 5 may be written three times corresponding to each of the three
limbs to formulate the manipulator Jacobians:
Jq ˙q = Jx ˙x
(6)
where ˙x9×1 =

˙gT
1 ˙gT
2 ˙gT
3
T , ˙q3×1 =
˙b1 ˙b2 ˙b3
T and
Jq =
⎡
⎢⎣
sT
b1sl1
0
0
0
sT
b2sl2
0
0
0
sT
b3sl3
⎤
⎥⎦
3×3
Jx =
⎡
⎢⎣
k1,1sT
l1
0
0
0
k2,2sT
l2
0
0
0
k3,3sT
l3
⎤
⎥⎦
3×9
The Jacobian matrix, J in Eq. 1 is produced by multiplying Jx and
Jq, i.e., J = J−1
q Jx.
By taking the ﬁrst time derivative of equations
constituting the inverse displacement solution discussed in Section 2, the
constraining matrix P in Eq. 2 is formulated. Finally, multiplication of
the Jacobian J with the constraining matrix P produces the constrained,
dimensionally homogeneous, square Jacobian JP in Eq. 3.
3.
The 3-RPS Mechanism
The 3-RPS mechanism depicted in Fig. 1b has been previously studied
in a variety of publications (e.g., Lee and Shah, 1988).
Inverse Displacement Solution.
Similarly to the 3-PRS Mecha-
nism, the limbs of the 3-RPS Mechanism are also conﬁned to move on a
single plane. As such, the constraint equations relating the designated
independent degrees of freedom (G1z, G2z, and G3z) to the dependent
degrees of freedom (Gix and Giy for i = 1, 2, 3) are the same. The only
Quantitative Dexterous Workspace Comparisons
301

diﬀerence from the inverse displacement solution of the 3-PRS mech-
anism is in the ﬁnal step where li = ri −bi is used to solve for the
displacement of the actuated prismatic joint i, that is |li|.
Jacobian Formulation.
Due to similarity in the constraint equa-
tions for the 3-PRS and 3-RPS mechanisms, the development of the
dimensionally homogeneous Jacobian J is also very similar. Consider
Eq. 4 again.
The vector bi is a known constant in the architecture
of the 3-RPS mechanism whereas the magnitude of vector li is now a
variable. Taking the ﬁrst time derivative of Eq. 4 yields:
˙li = ki,1sT
li ˙g1 + ki,2sT
li ˙g2 + ki,3sT
li ˙g3
(7)
Writing Eq. 7 three times (once for each limb) to formulate the inverse
and direct Jacobian matrices, as in Eq. 6, yields Jq = I3×3 and
Jx =
⎡
⎢⎣
k1,1sT
l1
0
0
0
k2,2sT
l2
0
0
0
k3,3sT
l3
⎤
⎥⎦
3×9
(8)
The Jacobian matrix J is obtained by the multiplication J−1
q Jx.
As
previously mentioned, the constraint equations relating G1z, G2z, and
G3z to Gix and Giy (i = 1, 2, 3) are the same as those developed for the
3-PRS manipulator and therefore matrix P is identical. The resulting
matrix JP is, again, square and dimensionally homogeneous.
4.
Dexterous Workspace Comparison
The reachable workspace is deﬁned here as all poses attainable by a
manipulator without forcing it to transit a singular conﬁguration when
travelling from its datum position (explained later in this section). Be-
fore determining the reachable or dexterous workspaces, an understand-
ing of the manipulator singular conﬁgurations must ﬁrst be obtained.
Inverse singular conﬁgurations typically correspond to the absolute
boundary of the reachable workspace, beyond which, poses are unattain-
able by the manipulator. Therefore, these singular conﬁgurations do not
further limit the reachable workspace volume as deﬁned in this paper.
Direct singular conﬁgurations on the other hand, may exist inside the
reachable workspace. In this work, only poses attainable without forc-
ing the manipulator to transit a direct singular conﬁguration, or toggle
point, are included as part of the reachable workspace.
The 3-RPS and 3-PRS mechanisms share the same direct singular con-
ﬁguration where the vector li is parallel to the plane deﬁned by points Ai.
302
J.A. Carretero and G.T. Pond

Figure 2.
Reachable and Dexterous workspace for the 3-PRS (a and b) and the
3-RPS (c and d). Note θ and ψ are in radians, rp = 0.6, for the 3-PRS: γ = 0
and
|li| = 1 and for the 3-RPS: |bi| = 1. Dexterous workspace boundary at condmax = 6.
At this pose, the manipulator gains the ability to toggle about the spher-
ical joint Ai. For the 3-PRS and 3-RPS manipulators, when all three of
the limbs are parallel with this plane, the end eﬀector is at the minimum
permissible elevation along the z-axis here referred to as the datum po-
sition. The 3-PRS has a second family of singular conﬁgurations which
occur when one or more of the ﬁxed-length links become perpendicular
to the direction of their respective actuated prismatic joint.
4.1
As the condition number of the Jacobian matrix is inﬁnity at a sin-
gular pose, it is expected that dexterity decreases as the manipulator
approaches a singular conﬁguration. Both the reachable and dexterous
workspaces for the 3-PRS mechanism are depicted in Figs. 2 a and b.
The bottom apex of Fig. 2a corresponds to the direct singular conﬁgu-
ration discussed earlier at z = 0. The dexterous workspace depicted in
Fig. 2b is a subset of the reachable workspace. As the maximum per-
missible limit on the Jacobian condition number is reduced (not shown),
the cross sectional area of the dexterous workspace continues to be re-
duced. The workspace will however, continue to exist throughout the
entire range 0 ≤z ≤1. This tendency conﬁrms that the manipula-
tor is at isotropic conditions whenever the moving platform is perfectly
parallel to the base platform where the JP is a scaled identity matrix.
Theoretically, the reachable workspace of the 3-RPS mechanism ex-
tends to a z-elevation of inﬁnity. However, in order to provide a mean-
ingful comparison to the 3-PRS mechanism, the range of z-elevations will
be restricted to 0 ≤z ≤1. This limited workspace is depicted in Fig. 2.
As the 3-RPS mechanism also experiences the toggle point at z = 0,
the restricted range does not further limit the workspace on the lower
Quantitative Dexterous Workspace Comparisons
303
Dexterity Measured by the Jacobian
Condition
umber
N
o

−1
0
1
−1
0
1
0
0.2
0.4
0.6
0.8
1
ψ
PRS: σ ≥ 0.25 (V = 0.0632)
θ
z
−1
0
1
−1
0
1
0
0.2
0.4
0.6
0.8
1
ψ
PRS: σ ≤ 0.85 (V = 0.0366)
θ
z
a)
b)
−1
0
1
−1
0
1
0
0.2
0.4
0.6
0.8
1
ψ
RPS: σ ≥ 0.25 (V = 0.3439)
θ
z
−1
0
1
−1
0
1
0
0.2
0.4
0.6
0.8
1
ψ
RPS: σ ≤ 0.85 (V = 0.1503)
θ
z
c)
d)
Figure 3.
Regions of the workspace corresponding to high end eﬀector velocities
and ﬁne resolution over the manipulator pose for the 3-PRS (a and b, respectively)
and the 3-RPS (c and d, respectively). Angles θ and ψ are in radians.
boundary. Only the highest z-elevation is being imposed, which artiﬁ-
cially limits the range of both the reachable and dexterous workspaces.
Otherwise, the cross sectional area of the workspace would monotoni-
cally expand until, at z = ∞, the manipulator would be capable of 90◦
rotations around both the x and y axes (angles ψ and θ, respectively).
It should be noted that neither of these two architectures has been
optimised. That is, the values chosen for architectural parameters such
as the base and end eﬀector platform radii, and the magnitude of the
ﬁxed length link have not been optimised to provide the largest possible
workspace volume. The objective here is only to illustrate the ability
of this method to compare the dexterity of various architectures, not to
suggest any single architecture is in any way superior to others.
4.2
Dexterity
easured by both the Jacobian
ondition
umber and
ingular
alues
One of the greatest advantages of the comparison method presented in
this paper is the ability to identify regions of the manipulator’s workspace
where either high end eﬀector velocities may be achieved, or where a ﬁne
resolution over the manipulator pose exists. Depending on the applica-
tion, either or both of these attributes may be highly desired. In the
previous section, the condition that cond(J) ≤6 was arbitrarily chosen
to determine the dexterous workspace. In this section, the dexterous
workspace plots are further reduced by constraining the singular values
of the Jacobian matrix to be within a deﬁned range. In this way, regions
of the workspace corresponding to either high end eﬀector velocities, or
ﬁne resolution over the manipulator pose, are determined.
For the dexterous workspace of the 3-PRS manipulator, depicted in
Fig. 2b, Jacobian matrix singular values vary within the range 0.003 ≤
304
J.A. Carretero and G.T. Pond
M
C
N
S
V

Figure 4.
Workspace volume as a function of a minimum (left) and maximum
(right) permissible singular values.
σ ≤15.565. Figure 3a is produced by restricting the Jacobian condition
number to be less than or equal to 6, and restricting all Jacobian matrix
singular values to be greater than or equal to 0.25. That is, for a system
output where |˙x| = 1, only poses where the magnitude of the vector ˙q is
greater than 0.25, are allowed. Therefore, the workspace is restricted to
poses where a minimum resolution over the end eﬀector pose is allowed.
Similarly, Fig. 3b is produced by restricting the Jacobian matrix con-
dition number to be less than or equal to 6, but in this case, only sin-
gular values less than or equal to 0.85 are allowed. In this manner, the
workspace is restricted to poses where the of the vector ˙q is restricted
to be less than 0.85, for any unit system output or, |˙x| = 1. Intuitively,
this is not in the same region of the reachable workspace as poses were a
ﬁne resolution is obtained. Figures 3a and 3b conﬁrm this as these two
regions are at opposite ends of the workspace.
Similar limits on the 3-RPS manipulator were used to obtain Figs. 3c
and 3d.
Figure 3c shows that the 3-RPS has lost a relatively small
volume by restricting the Jacobian matrix singular values to be less than
or equal to 0.25. This should not be surprising as the permissible range
0 ≤σ ≤0.85 is a large portion of the overall range 0.0007 ≤σ ≤1.0526
observed when obtaining Fig. 2d.
The left portion of Fig. 4 compares the two manipulators’ workspace
volume as a function of the minimum permissible singular value. As
this value is increased, an increasingly heavier emphasis is placed on
high end eﬀector velocities. Naturally then, as the σmin is increased, a
greater restriction is placed on the workspace and the workspace volume
continues to decrease in magnitude. The 3-PRS mechanism experiences
a much more gradual reduction in workspace volume as the minimum
permissible singular value is decreased. This demonstrates its ability to
achieve a high degree of accuracy throughout a relatively large portion
of its workspace as compared to the 3-RPS.
Similarly, a gradual increase in the workspace volume is experienced
by the 3-PRS mechanism as the maximum permissible singular value
is increased, when compared to the 3-RPS (see the right portion of
Quantitative Dexterous Workspace Comparisons
305
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
σ
σ
min
Volume
3 PRS, γ = 0 
3 RPS
0
1
2
3
4
0
0.2
0.4
0.6
0.8
1
 max
Volume
3 PRS,γ = 0 
3 RPS

Fig. 4). It is observed that, as σmax is decreased, the workspace size is
further restricted by a continuously heavier emphasis on the accuracy
of the manipulator. It should be noted that the signiﬁcantly smaller
dexterous workspace volume of the 3-PRS manipulator is due in part, to
the considerably wider range of singular values within the manipulator’s
reachable workspace when compared to the 3-RPS manipulator.
5.
Conclusions
The method for developing dimensionally homogeneous square Jaco-
bians JP has proven successful in comparing the dexterity of multiple
parallel architectures. This method is suitable for comparing manipula-
tors having the same number and type of actuators and also having the
same independent degrees of freedom.
For illustration purposes, the 3-PRS and 3-RPS manipulators were
compared using an arbitrary set of architectural parameters for each
manipulator. Of the two, the 3-PRS manipulator was found to have
the largest workspace if a high level of accuracy is required and the
3-RPS manipulator was found to have the largest workspace if high
end eﬀector velocities are required. Following optimisation, any of the
manipulators may be the best candidate depending on the designer’s
desired compromise between the two characteristics.
Having identiﬁed a desired compromise between accuracy and veloc-
ity characteristics, the robot designer may use this method to optimise
and compare a variety of manipulators in order to select the optimal
architecture and architectural variables, for a speciﬁc application.
References
Angeles, J. (2003), Fundamentals of Robotic Mechanical Systems, Springer- erlag.
Kinematic analysis and optimization of a new three degree-of-freedom spatial par-
Gosselin, C.M. (1992), The optimum design of robotic manipulators using dexterity
Kim, S. G., and Ryu, J. (2003), New dimensionally homogeneous Jacobian matrix
formulation by three end-e ector points for optimal design of parallel manipulators,
Lee, K. and Shah, D. (1988), Kinematic analysis of a three-degrees-of-freedom in-
Pond, G., and Carretero, J.A. (2006), Formulating Jacobian matrices for the dexterity
analysis of parallel manipulators, To appear in Mechanism and Machine Theory.
Tsai, L.W., and Joshi, S. (2000), Kinematics and optimization of a spatial 3- P
306
Carretero, J.A., Podhorodeski, R.P., Nahon, M.A., and Gosselin, C.M. (2000),
J.A. Carretero and G.T. Pond
,
IEEE Transactions on Robotics and Automation,
ol. 19, No. 4, pp. 731-737.
parallel actuated manipulator, IEEE Journal of Robotics and Automation,
ol. 4,
No. 3, pp. 354-360.
parallel manipulator, Journal of Mechanical Design,
ol. 122, No. 4, pp. 439-446.
V
U U
allel manipulator, Journal of Mechanical Design,
ol. 122, No. 1, pp. 17-24.
ff
indices, Journal of Robotics and Autonomous Systems,
ol. 9, No. 4, pp. 213-226.
v
v
v
v
v

LEVEL-SET METHOD FOR WORKSPACE 
ANALYSIS OF SERIAL MANIPULATORS 
Erika Ottaviano*, Manfred Husty** and Marco Ceccarelli* 
*    LARM: Laboratory of Robotics and Mechatronics – DiMSAT – University of Cassino 
Via Di Biasio 43 - 03043 Cassino (Fr), Italy 
{ ottaviano,ceccarelli }@unicas.it 
**  Institute for Engineering Mathematics Geometry and Computer Science 
University of Innsbruck, Technikerstr. 13 A-6020 Innsbruck, Austria 
manfred.husty@uibk.ac.at 
1.  
Introduction  
Serial manipulators are still the most used robots for industrial 
applications. This is due to their kinematic properties and construction 
features that aim to obtain suitable systems for industrial applications. 
Since most of the industrial manipulators are wrist-partitioned, the 
studies on serial manipulators were performed by (Roth 1975; 
Freudenstein and Primrose 1984; Parenti-Castelli and Innocenti 1988; 
Ceccarelli 1989; Smith and Lipkin 1993). Several authors have grouped 
manipulators into classes (Burdick 1985; Zein et al. 2005; Wenger 2000), 
but they have just considered special architectures, such as cuspidal or 
orthogonal structures, which have simplification in the architecture. In 
this paper we present a classification of a general 3R manipulator as 
based on kinematic properties, but not only on parameter simplification. 
As a completely new method we discuss the level-set belonging to the 
two-parameter set of curves, which constitutes the cross section of the 
workspace of the manipulator. The level-set surface directly linked to the 
level-set provides new and surprising insight in the internal structure of 
the workspace.   
© 2006 Springer. Printed in the Netherlands. 
307
Abstract 
space analysis of 3R manipulators. A formulation is presented and it
the effects of kinematic parameters on  workspace. 
of workspace manifolds. Numerical examples are presented to show 
allows to determine different topologies of manipulators as function 
This paper presents an application of the level-set method for  work-
Keywords: Kinematics, Serial Manipulators, Level-Set Method, Workspace 
Analysis 
workspace analysis of such manipulators can be performed by con-
sidering the positioning and orienting singularities separately. Early 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 307–314. 
,

2.  
Level-Set Analysis for the Workspace of a 
General 3R Manipulator 
The kinematic parameters of a general 3R manipulator are denoted 
according to the Hartenberg and Denavit (H-D) notation. Without loss of 
generality the base frame is assumed to be coincident with X1Y1Z1 frame, 
which is fixed on first link when T1 = 0, a0
1
manipulator is described by the H-D parameters a1, a2, d2, d3, D1 and D2, 
and Ti, for (i = 1,…,3). The end-effector point H is placed on the X3 axis at 
a distance a3 from O3. The position H0 with respect to reference frame 
X0Y0Z0 can be expressed as function of H3 vector in the classical form 
 
3
3
2
2
1
1
0
0
T
T
T
H
H
 
.  
 
 
 
 
 
 
 
 (1)  
 
The workspace of a general 3R manipulator can be expressed in the 
form of radial and axial reaches r and z respectively. In particular, r is 
the radial distance of the operating point from Z1-axis and z is the axial 
reach; both can be expressed as function of H-D parameters (Ceccarelli 
1996). In fact, r and z can be evaluated as 
 








2
1
y
1
1
x
1
2
1
y
1
1
x
1
2
y
0
2
x
0
2
c
H
s
H
s
H
c
H
H
H
r
T

T

T

T
 

 
  
z
0
H
z  
.  (2) 
 
Equation (2) represents a 2-parameter family of curves, which gives the 
cross-section workspace in a cross-section plane (Freudenstein and 
Primrose 1984; Ceccarelli 1989). In the following this two-parameter set 
is interpreted as a level-set (Sethian 1996). The level-set of a 
differentiable function 

o
n
:
f
 corresponding to a real value “c” is the 
set of points  
 




^
`
c
x
,
,
x
f:
x
,
,
x
n
1
n
n
1
 




.  
 
 
 
 
 
 (3) 
 
The potentiality of the level-set method is now applied to the 
workspace analysis of 3R manipulators. In particular, the level-set 
reconstruction for a serial manipulator can be obtained by using the 2-
values of  T3 are curves in the rz-plane. Therefore this one parameter set 
of curves can be viewed as the contour map of a surface S, which 
conveniently can be used to analyze the workspace of the manipulator. 
The surface S is defined via the functions  
 
2
2
r
X
 
; 
z
Y  
 ; 
¸¸
¹
·
¨¨
©
§ T
 
2
tan
Z
3 .   
 
 
 
 
 
 
 (4) 
 
By performing the half-tangent substitution v = tan (T2/2) in Eq. (4) 
and eliminating the v parameter one can obtain an implicit equation of 
the surface S.  
 
 
S: 

0
Z
,
Y
,
X
F
 
. 
(5) 
 
308
E. Ottaviano, M. Husty and M. Ceccarelli
= 0 and d =0. A general 3R 
parameter-family of curves in Eq. (2). The level-sets belonging to constant 

Equation (5) describes an algebraic surface which is of degree 20. It 
splits into two parts  
 
 






0
Z
,
Y
,
X
S
Z
,
Y
,
X
S
Z
,
Y
,
X
F
2
1
 
 
. 
(6) 
 
S1 represents four double planes parallel to XY plane, in which the 
height depends on the H-D parameters.  
S2 is the graph of the level-set function. The parameter lines on this 
surface belong to T2 = const or T3  = const. Geometrically S is generated by 
taking a cross-section of the workspace that is parameterized by T2 and T3  
clearly the number of solutions of the Inverse Kinematics (IK).  
In Fig.1 this is shown for a general design. In Fig. 1a) the level-set 
curves are shown. It should be noted that in the displayed cross-section 
of the workspace in fact two different one-parameter sets of level-curves 
are displayed. The blue one belongs to T3 = const and the grey one belongs 
2 
 
corresponding surface S is displayed. Geometrically the level-set curves 
planes Z = const and the surface S onto the XY-plane. The blue level-set 
This line shows clearly four intersection points with the surface S. 
corresponds to a four fold solution of the IK.  
On the surface S2 the T3 curves keep their closed curve nature and T2 
ones are taken apart. In order to determine the algebraic degree of S2 one 
has to homogenize and intersect with the plane at infinity. The resulting 
intersection is completely independent by the H-D parameters. It 
surface is of algebraic degree 12. 
 
Level-set Method for Workspace Analysis
309
Z-axis. The major advantage of this procedure is that on S one can see 
and explode the overlapping level-set curves in the direction of the 
A discussion of the other set would lead to similar results. On Fig.1b) the 
to T = const. In the following we only discuss the blue set of curves.
of Fig. 1a) are the orthogonal projections of the intersection curves with 
consists of a eight fold line Z = 0 and two complex double lines. Thus, the 
cross-section; b) corresponding S surface. 
Figure 1.   A numerical  example for a general 3R manipulator: a)  workspace
Additionally we have displayed in Fig. 1b) a line parallel to the Z-axis. 
Therefore, the corresponding point in the level-set plane in Fig. 1a) 
curves in Fig. 1a) are therefore a contour map of the surface S. 

Manipulators having singularities on the surface S can be considered 
as an algebraically closed set. Indeed, a small perturbation on H-D 
parameters will change the behaviour of the manipulator. Singularities 
of the surface S can be found by considering the implicit equation of S, 
together with its partial derivatives with respect to X, Y, and Z, 
respectively (Gibson 1998). All these four functions have to vanish for a 
point on the surface being singular. Singular conditions can be expressed 
as functions of H-D dimensional parameters. There is an important 
observation that can be made. Considering just the one parameter set of 
level-set curves in the plane of parameters rz, one can observe singular 
points on the envelop curve of the set. These singular points have been 
discussed in the literature quite a lot. By considering a formulation for 
the cross-section workspace boundary of 3R manipulators as proposed in 
(Ottaviano et al., 2004) it is possible to determine the singularities on the 
inner boundary curve, which is a part of the enveloping curve. These 
singularities  can be either double points or acnodes or cusps of the cross-
set function reveals a very different nature of these highly interesting 
singular points. Some of them arise just from the projection of S into the 
level-set plane and some of them come from singularities of the surface S.  
In this paper we have focused our analysis on 3R manipulators, and a 
classification can be obtained by looking at the singular configurations of 
S as function of H-D parameters. In order to determine the singularities 
of the surface S the two parts S1 and S2 are analyzed separately. 
In particular, S1 can be expressed in the form 
 
0
1
2
2
3
3
4
4
1
k
Z
k
Z
k
Z
k
Z
k
S




 
. 
 
 
 
 
 
 
 
 
 
 
 
 
 
(7) 
 
where the coefficients ki depend on H-D dimensional parameters. They 
can be expressed in the form 
 

 
2
2
3
2
2
2
3
4
a
a
sin
d
k


D
 
; 




2
2
3
3
3
cos
sin
d
a
4
k
D
D
 
 






>
@
1
cos
2
a
a
sin
d
2
k
2
2
2
3
2
2
2
2
2
3
2

D


D
 
  
 
 
 
 
 
 
 
 
 
 
(8) 
3
1
k
k  
; 

 
2
2
3
2
2
2
3
0
a
a
sin
d
k


D
 
. 
 
In general S1 = 0 can have real solutions. According to Decartes rule of 
signs a necessary and sufficient condition for having real solutions is iff 
there are changes in the signs of coefficients ki. In particular, the number 
of real roots is equal to the number of changes of sign in the ki 
coefficients. Other singularities can be found by analyzing surface S2. 
Zeros of the set of equations S2 = 0; S2X = 0; S2Y = 0; and S2Z =0, yield the 
geometric singularities of the surface S2. Singularities of S2 surface can 
be can expressed by the product of three polynomials in the form 
 

 
2
2
3
2
2
2
3
1
a
a
sin
d
P


D
 
; 




0
2
2
2
2
4
4
2
c
cos
c
cos
c
P

D

D
 
 

 



2
2
2
2
2
3
2
2
2
3
3
cos
a
a
sin
d
P
D


D
 
.  
 
 
 
 
 
 
 
 
 
 
 
(9) 
E. Ottaviano, M. Husty and M. Ceccarelli
310
section boundary curve (Ottaviano et al., 1999). The graph S of the level-

in which ci coefficients are given by 
 


2
2
3
2
3
4
a
d
c

 
 ;  
 



»¼
º
«¬
ª




 
2
3
2
3
2
2
2
2
3
2
3
2
a
d
a
d
a
2
c
  
 
 




¸¹
·
¨©
§


¸¹
·
¨©
§


 
2
3
2
3
2
2
3
2
3
2
0
d
a
a
d
a
a
c
. 
 
 
 
 
 
 
 
 
 
 
 
  (10) 
3.  
A Classification of the 3R Manipulators 
A classification of 3R manipulator designs can be obtained by 
considering groups of manipulators having similar kinematic properties 
of surface S and workspace boundary. According to the proposed 
formulation, a classification into three groups is proposed as based on 
kinematic properties of 3R manipulators with general architecture. 
3.1  
Class A: General Manipulator 
A manipulator that belongs to the Class A has no (real) singularities 
on the surface S. It may have either a changing posture behaviour or it 
can present a void within the workspace. A characteristic shape with 
corresponding cross-section figures are reported in the examples of Figs. 
2 and 3. Such general manipulator is characterized to have no 
singularities on the level-set surface. In addition, it has been observed 
that cuspidality behaviour is not strictly related to special designs. 
3.2  
Surface S 
A manipulator that belongs to the Class B has only one singularity on 
the surface S. It is characterized by having a2 = a3; d3 
2
Class B manipulators are characterized by the presence of 4-solution 
1
2
S1 degenerates into an expression, which is independent by Z. They 
present a void iff the projections of the singularity of the surface S 
2
3
meet the second joint axis whenever T3 = ± arccos( a2 /a3). A characteristic 
shape with corresponding cross-sections are reported in the examples of 
Figs. 4 and 5. 
3.3  
the Surface S 
This class of manipulators is characterized by having two singularities 
on the surface S, which can be analyzed by considering Eqs.(9). Class C 
manipulators have P3 = 0 and  a3  > a2; d3 = 0 and D2= S/2. S1 degenerates 
into an expression that contains only even powers of Z. Class C 
Level-set Method for Workspace Analysis
311
Class B: Manipulator with a Singularity on the 

Class C: Manipulator with Two Singularities on 
= 0 and D  = S/2. 
regions for the IK. By considering Eq. (9) P  and P  polynomials vanish. 
belongs to the workspace boundary too. If a   a , the operation point can 

manipulators have in general a 4-solution region for the IK and they 
characteristic shape with corresponding cross-sections are reported in 
the examples of Figs. 6 and 7. 
4.  
Numerical Examples 
Numerical examples show different topologies of the 3R manipulators. 
Figures 2 to 7 show manipulators belonging to the three classes.  
 
 
Figure 2.   A numerical example for Case A with void, a1=4.68; D1=2.90; a2=9.78, 
a3  =1.15; d2 =4.48; D2 = ,d3  
 
 
 
 
 
 
 
 
Figure 3.  A numerical example for Case A without void, a1=1.24; D1=2.41; a2 
=5.58, a3  =2.12; d2 =2.22; D2 =
3 
 
 
 
 
Figure 4.  A numerical example for Case B with void, a1=6.98; D1=0.596; a2 = a3 
= 8.33; d2=2.07; D2=S/2,d =0: a) workspace cross-section; b) surface S. 
 
E. Ottaviano, M. Husty and M. Ceccarelli
312
 
 
to the workspace boundary too. In the two singularities point H meets 
have a void iff the projections of the singularities of the surface belong 
the second joint axis and the manipulator has infinite IK solutions. A 
(u is unit lenght and angles are in radians). 
 S (u is unit lenght and angles are in radians). 
3  
=1.38: a) workspace cross-section; b) surface S. 
,d =0.307: a) workspace cross-section;  b) surface

 
Figure 5.     A numerical example for Case B without void, a1=5.32; D1=0.777; 
a2 = a3 =6.46; d2 =8.99; D2 =S/2,d3 
 
 
 
 
 
 
 
 
1
2
3
2
2
3
 
 
 
 
1 =9.87; D1 =0.852; a2 
=4.36, a3 =4.99; d 2 =1.84; D2=S/2,d3 =0: a) workspace cross-section; b) surface S. 
4.  
Conclusions  
This paper presents a novel analysis of the workspace of serial 
manipulators as based on the level-set reconstruction of the workspace. 
The method produces useful information for characterization of the 
workspace in Cartesian Space in terms of void existence. It has been 
found that the analysis of the cusps and double points on the cross-
section boundary curve is not sufficient to determine the kinematic 
Level-set Method for Workspace Analysis
313
=0: a) workspace cross-section; b) surface S (u is
a =19.13; d =0.973; D= S/2,d =0: a) workspace cross-section; b) surface S. (u is   
1=6.23; D =1.23; a =9 47, 
.
 (u is unit lenght and angles are in radians). 
Figure 6.  A numerical example for Case C with void, a
unit lenght and angles are in radians). 
unit lenght and angles are in radians).  
Figure 7.   A numerical example for Case C without void, a

characteristics of a manipulator. Singularities on the graph S of the 
level-set are singular configurations in which there is a value of T3 angle 
for which the manipulator encounters a singularity. In order to obtain 
complete information on the singularities of the workspace, one has to 
detect the presence of a void by considering the surface S, together with 
points. They can be either double points and acnodes (hermit points) for 
the cross-section boundary curve. The presence of a void can be detected 
by considering the surface S and the cross-section boundary curve. If the 
surface S has no singularities and the cross-section boundary curve has 
double points then the manipulator has a void. 
References 
Burdick, J.W. (1995), A Classification of 3R Regional Manipulator Singularities 
Ceccarelli M. (1989), On the Workspace of 3R Robot Arms, Proc. 5th IFToMM Int. 
Ceccarelli M. (1996), A Formulation for the Workspace Boundary of General N-
Freudenstein F., Primrose E.J.F. (1984), On the Analysis and Synthesis of the 
Workspace of a Three-Link, Turning-Pair Connected Robot Arm, ASME Jnl of 
Gibson C.G. (1998), Elementary Geometry of Algebraic Curves, Cambridge 
University Press. 
Hunt, K.H. (1978), Kinematic Geometry, Clarendon Press, Oxford.  
Ottaviano E., Ceccarelli M., Lanni C. (1999), A Characterization of Ring Void in 
Workspace of Three-Revolute Manipulators, Proc. 10th
Ottaviano E., Husty M., Ceccarelli M. (2004), A Cartesian Representation for the 
Boundary Workspace of 3R Manipulators, on Advances in Robot Kinematics, 
Sestri Levante, pp. 247-254, 2004. 
Parenti-Castelli V., Innocenti C. (1988), Position Analysis of Robot Manipulators: 
158. 
Roth B., (1975), Performance Evaluation of Manipulators From a Kinematic 
61. 
Sethian J.A. (1996), Level-set Methods and Fast Marching Methods, Cambridge 
University Press. 
Smith D.R., Lipkin H. (1993), Higher Order Singularities of Regional 
Wenger P. (2000), Some Guidelines for the Kinematic Design of New 
Zein M., Wenger P., Chablat D., (2005), An Exhaustive Study of the Workspaces 
Topologies 
of 
All 
3R 
Orthogonal 
Manipulators 
with 
Geometrical 
Simplifications, 
Proc. Of 
CK2005, 12th
tational Kinematics, paper 34-CK2005. 
E. Ottaviano, M. Husty and M. Ceccarelli
314
A necessary condition to avoid a void is that the surface contains S singular 
the analysis of the singularities of the cross-section boundary curve.
Regions and Sub-Regions, on Advances in Robot Kinematics, Ljubljana, pp. 150-
 
International Workshop on Compu-
 World Congress on the 
Symp. on Theory and Practice of Mechanism, Bucharest, vol. II-1, pp. 37-46. 
Mech., Transm. and Autom. in Design, vol. 106, pp. 365-370. 
Theory of Machines and Mechanisms, Oulu, vol. 3, pp. 1039-1044. 
Manipulators, Proc. IEEE Int. Conf. on Rob. and Autom., vol. 1, pp. 194-199. 
and Geometries, Mech.  and Machine Theory, vol. 30, no.1, pp. 71-89.   
Revolute Manipulators, Mech.  and Machine Theory, vol. 31, no. 5, pp. 637-646. 
Viewpoint, National Bureau of Standards Special Publication, no. 459, pp. 39-
Manipulators, Mech.  and Machine Theory, vol. 35, no. 3, pp. 437-449. 

DETERMINATION OF THE
WRENCH-CLOSURE WORKSPACE
OF 6-DOF PARALLEL CABLE-DRIVEN
MECHANISMS
M. Gouttefarde, J-P. Merlet and D. Daney
INRIA Sophia-Antipolis, France
Marc.Gouttefarde@sophia.inria.fr
Jean-Pierre.Merlet@sophia.inria.fr
David.Daney@sophia.inria.fr
Abstract
The wrench-closure workspace of parallel cable-driven mechanisms is
the set of poses of their mobile platform for which the cables can bal-
ance any external wrench. The determination of this workspace is an
important issue since the cables can only pull and not push on the mo-
bile platform. This paper deals with the wrench-closure workspace of
six-degrees-of-freedom (DOF) parallel mechanisms driven by m cables,
m ≥7. The boundary of the constant-orientation cross sections of the
wrench-closure workspace is shown to consist of parts of cubic surfaces
and an eﬃcient method that determine this workspace by delineating
its boundary is proposed.
Keywords:
Gough-Stewart platform
1.
Introduction
A parallel cable-driven mechanism consists essentially of a mobile plat-
form connected in parallel to a base by light weight links such as cables.
The control of the length of the cables allows the control of the pose of
the platform. For instance, a mechanism driven by eight cables is shown
in Fig. 1. Parallel cable-driven mechanisms have several advantages over
conventional rigid-link mechanisms (Barrette and Gosselin, 2005, Mer-
let, 2004, Roberts et al., 1998). The mass and inertia of the moving part
is reduced and they are less expensive. Moreover, parallel cable-driven
mechanisms are easier to build, transport and reconﬁgure and they have
the possibility of working in a very large space. Consequently, parallel
cable-driven mechanisms have been used in several applications such as,
for instance, robotic cranes (Dagalakis et al., 1989), high speed manip-
Cable-driven mechanism, parallel mechanism, wrench-closure, workspace,
© 2006 Springer. Printed in the Netherlands.
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 315–322. 
315

2
3
0
0.5
1
1.5
2
2.5
0
.2
.4
.6
.8
A1
A2
A3
A5
A7
A8
X
y
A4





Mobile platform
H
H
j Base frame

* Cable #8
HH
j COWCW
Figure 1.
A 6-DOF Parallel Mechanism Driven by Eight Cables and its Constant-
ulation (Kawamura et al., 2000), active suspension devices (Lafourcade,
2004) and virtual reality (Merlet, 2004).
This paper deals with the determination of the workspace of six-DOF
parallel cable-driven mechanisms. This workspace may be limited by the
total length of each cable, by the interferences between the cables and
between the cables and the mobile platform and by the unidirectional
nature of the forces applied by the cables on the mobile platform. The
limitations due to the total lengths of the cables can be determined by
means of algorithms presented in (Gosselin, 1990) and in (Merlet, 1999).
However, the workspace will usually not be limited by the total lengths
of the cables since large total lengths can generally be used. For a con-
stant orientation of the mobile platform, the problem of the inﬂuence on
the workspace of the cables interferences is addressed in (Merlet, 2004).
The third limitation which is due to the unidirectional nature of the
forces applied by the cables on the platform has been studied mainly
in the case of planar parallel cable-driven mechanisms in (Barrette and
Gosselin, 2005, Fattah and Agrawal, 2005, Gallina and Rosati, 2002,
Gouttefarde and Gosselin, 2006, Roberts et al., 1998, Stump and Ku-
2003).
All these references do not share the same deﬁnition of the workspace
and two diﬀerent types of workspace can be distinguished. Indeed, we
can study the set of poses of the mobile platform for which the cables
can balance, by pulling on the mobile platform,
a particular wrench or a particular set of wrenches, or
any wrench.
When the ﬁrst type of workspace is to be determined, the particular
wrench or the particular set of wrenches must be chosen. Hence, the de-
M. Gouttefarde et al.
316 
Orientation Wrench-Closure Workspace.
mar, 2004, Verhoeven and Hiller, 2000, Verhoeven, 2004, Williams et al.,

termination of this workspace is useful when a particular task, for which
the wrenches that must be generated at the mobile platform are known,
is assigned to the cable-driven mechanism. The determination of the
second type of workspace, called the wrench-closure workspace (WCW)
in the present paper, does not need such a choice since it depends on
the geometry of the mechanism only (Gouttefarde and Gosselin, 2006),
i.e., on the number of cables, on the positions of the attachment points
of the cables at the mobile platform and on the positions of the points
of the base from which the cables are taut (points Ai in Fig. 1). Hence,
the WCW is a property of the mechanism only and is consequently re-
lated to the general design problem of selecting geometry of mechanisms
which have the ability to perform various types of tasks. More details
on the diﬀerent types of workspace of parallel cable-driven mechanisms
can be found in (Bosscher and Ebert-Uphoﬀ, 2004, Ebert-UpHoﬀand
Voglewede, 2004, Gouttefarde and Gosselin, 2006, Gouttefarde, 2005).
orientation cross sections of the WCW, called the constant-orientation
WCW (COWCW), is proposed. This method applies to any six-DOF
parallel cable-driven mechanism and it determines the boundary of the
COWCW which is shown to consist of parts of cubic surfaces. To the
best of our knowledge, such a tool has never been introduced in previous
papers dealing with six-DOF cable-driven mechanisms such as the works
presented in (Hiller et al., 2005, Kawamura et al., 2000, Lafourcade,
2004, Pham et al., 2006, Tadokoro et al., 1996, Takeda and Funabashi,
2000, Verhoeven, 2004).
2.
The relationship between the tensions in the cables and the wrench
wp applied by the cables on a reference point P of the platform is given
by
Wt = wp,
(1)
where t is the vector of cable tensions and W the 6 × m pose dependent
wrench matrix where m denotes the number of cables. Since the WCW
of a six-DOF parallel cable-driven mechanism exists only if its mobile
platform is driven by at least seven cables (Ming and Higuchi, 1994), in
this paper, m ≥7.
The WCW is deﬁned as the set of poses of the mobile platform in
which, for any wrench wp in R6, there exists at least one vector t in Rm,
whose components are all nonnegative, such that Eq. 1 is veriﬁed. For
317
Determination of the Wrench-Closure Workspace
In this paper, an eﬃcient method that allows to determine the constant-
Nature of the Boundary of the COWCW

a constant orientation of the mobile platform, the COWCW is the set
of positions of the reference point P of the platform which belongs to
the WCW. The poses that belongs to the WCW can be characterized
(Murray et al., 1994, Stump and Kumar, 2004).
Theorem 1 Let wi, 1 ≤i ≤m, m > 6, be the column vectors of
the wrench matrix W and let us assume that rank(W) = 6. Then, a
pose of the mobile platform belongs to the WCW if and only if all the
hyperplanes H of R6 spanned by ﬁve wrenches wi (linearly independent)
are separating, i.e.,
∃(j, k), j ̸= k, such that wT
j q > 0 and wT
k q < 0,
where q ̸= −→0 is a vector of R6 orthogonal to H.
Eq. 2 means that there exists at least one column of W lying on each
side of the hyperplane H.
Now, let us assume that the orientation of the mobile platform of
position P1 of the mobile platform which belongs to the COWCW and a
continuous trajectory going from P1 to a position P2 which lies outside
the COWCW. According to Theorem 1, on the part of the trajectory that
belongs to the COWCW, all the hyperplanes H spanned by ﬁve columns
of the wrench matrix W are separating. Moreover, at the point at which
the trajectory leaves the COWCW, at least one of the hyperplane H
ceases to be a separating hyperplane. But, a hyperplane H ceases to be
a separating hyperplane if and only if the ﬁve columns of W which span
H become linearly dependent or these ﬁve columns and an other column
of W become linearly dependent. Hence, in the two cases, the trajectory
leaves the COWCW since at least one combination of six columns of W
becomes linearly dependent and a position of the mobile platform belongs
to the boundary of the COWCW only if six columns of the wrench matrix
W are linearly dependent.
This observation on the nature of the boundary of the COWCW is im-
portant. Indeed, the columns of the wrench matrix W are of the same
nature as the columns of the transpose of the so-called jacobian ma-
trix of a Gough-Stewart platform (Ebert-UpHoﬀand Voglewede, 2004,
Gouttefarde and Gosselin, 2005) and, consequently, for a constant orien-
tation of the mobile platform, six columns of W are linearly dependent
on a surface of the same nature as the constant-orientation singularity
locus of a Gough-Stewart platform which is known to be a cubic surface
M. Gouttefarde et al.
318
by several means (Gouttefarde, 2005) including the following theorem
(2)
a six-DOF parallel cable-driven mechanism is constant. Let us consider a

(Mayer St-Onge and Gosselin, 2000), i.e., a surface whose equation can
be written as a multivariate polynomial of degree three in the Cartesian
coordinates of the mobile platform. Finally, we can state that the bound-
ary of the COWCW consists of parts of cubic surfaces of the same nature
as the constant-orientation singularity locus of the Gough-Stewart plat-
form. This fundamental result is a generalization to the most general
case of the similar result presented in (Gouttefarde and Gosselin, 2005)
in the case of six-DOF parallel mechanisms driven by seven cables.
3.
In this section, the main steps of an eﬃcient method that determines
the COWCW by ﬁnding its boundary are presented. This method takes
advantage of the geometric nature of the boundary introduced in the
previous section.
First, an orientation of the mobile platform is chosen and, for each
combination of six columns of the wrench matrix W, the equation of
the cubic surface Si on which these columns are linearly dependent is
determined. A method that allows to obtain these equations is presented
in (Mayer St-Onge and Gosselin, 2000). Then, in order to deal with
curves instead of surfaces, a set of parallel planes is selected, e.g. planes
orthogonal to the z-axis, and the part of the boundary of the COWCW
which belongs to these planes is sought. Let us denote by P one of these
planes. Without loss of generality, we can assume that the equation of
P is z = z0, i.e., that P is orthogonal to the z-axis. The part of the
boundary of the COWCW which lies in P can be obtained by following
the steps presented below.
Step 1: obtain the equations of the cubic curves Ci that lie in P and on
which six columns of W are linearly dependent by substituting z0 for z
in the equations of the cubic surfaces Si.
According to section 2, if it exists, the part of the boundary of the
COWCW which lies in P is composed of parts of the cubic curves Ci.
Moreover, the extremities of these parts are the points of intersection
between the cubic curves Ci.
Step 2: for each of the cubic curve Ci, determine the points of intersec-
tion between Ci and the other cubic curves.
The points of intersection between the cubic curves Ci can be deter-
mined by means of an elimination method (Roth, 1993).
Step 3: for each of the cubic curve Ci, ﬁnd all its parts deﬁned by the
points of intersection computed at step 2 and eliminate all unbounded
parts.
Eﬃcient
etermination of the COWCW
D
Determination of the Wrench-Closure Workspace
319
,

M. Gouttefarde et al.
320

References
Barrette, G., and Gosselin, C. M. (2005), Determination of the dynamic workspace of
cable-driven planar parallel mechanisms, Journal of Mechanical Design, vol. 127,
no. 2, pp. 242–248.
Bosscher, P., and Ebert-Uphoﬀ, I. (2004), Wrench-based analysis of cable-driven
robots, IEEE International Conference on Robotics and Automation, New Orleans,
LA, USA.
Dagalakis, N. G., Albus, J. S., Wang, B.-L., Unger, J., and Lee, J. D. (1989), Stiﬀ-
ness study of a parallel link robot crane for shipbuilding applications, Journal of
Oﬀshore Mechanics and Arctic Engineering, vol. 111, pp. 183–193.
Ebert-UpHoﬀ, I., and Voglewede, P. A. (2004), On the connections between cable-
driven robots, parallel manipulators and grasping, IEEE International Conference
on Robotics and Automation, New Orleans, LA, USA.
Fattah, A., and Agrawal, S. K. (2005), On the design of cable-suspended planar
parallel robots, Journal of Mechanical Design, vol. 127, pp. 1021–1028.
Gallina, P., and Rosati, G. (2002), Manipulability of a planar wire driven haptic
device, Mechanism and Machine Theory, vol. 37, no. 2, pp. 215–228.
Gosselin, C. M. (1990), Determination of the workspace of 6-DOF parallel manipula-
tors, Journal of Mechanical Design, vol. 112, no. 3, pp. 331–336.
Gouttefarde, M. (2005), Analyse de l’espace des poses polyvalentes des m´ecanismes
Canada.
Gouttefarde, M., and Gosselin, C. M. (2006), Analysis of the wrench-closure workspace
of planar parallel cable-driven mechanisms, IEEE Transactions on Robotics, to ap-
pear.
Gouttefarde, M., and Gosselin, C. M. (2005), Wrench-closure workspace of six-dof
parallel mechanisms driven by 7 cables, CCToMM Symposium on Mechanisms,
Machines, and Mechatronics, Montr´eal, Qu´ebec, Canada.
parall`eles entraˆın´es par cˆables, Ph.D. Dissertation, Laval University, Qu´ebec,
curves
i, their points of intersection and the cross section of the bound-
ary of the COWCW obtained by the method are shown in Fig. 2.
5.
Conclusions
The determination of the WCW is an important issue for 6-DOF par-
allel cable-driven mechanisms since the cables cannot push on the mobile
platform. Moreover, the COWCW turns out to be highly dependent on
the geometry of the mechanism and on the orientation of its mobile
platform. Hence, the method presented in this paper which allows to
determine the COWCW is useful in order to analyze and design 6-DOF
parallel cable-driven mechanisms. This method applies to 6-DOF mech-
anisms driven by an arbitrary number of cables and is based on the na-
ture of the boundary of the COWCW which has been shown to consist
of parts of cubic surfaces of the same nature as the constant-orientation
singularity locus of Gough-Stewart platforms.
Determination of the Wrench-Closure Workspace
321
C

Hiller, M., Fang, S., Mielczarek, S., Verhoeven, R., and Franitza, D. (2005), Design,
analysis and realization of tendon-based parallel manipulators, Mechanism and
Machine Theory, vol. 40, pp. 429–445.
Kawamura, S., Kino, H., and Won, C. (2000), High-speed manipulation by using
parallel wire-driven robots, Robotica, vol. 18, no. 1, pp. 13–21.
Lafourcade, P. (2004), Contribution `a l’´etude des manipulateurs parall`eles `a cˆables,
application `a la conception d’une suspension active pour souﬄerie, Ph.D. Disser-
tation, ONERA-DCSD, Toulouse, France.
Mayer St-Onge, B., and Gosselin, C. M. (2000), Singularity analysis and representa-
tion of the general Gough-Stewart platform, The International Journal of Robotics
Research, vol. 19, no. 3, pp. 271–288.
Merlet, J-P. (2004), Analysis of the inﬂuence of wires interference on the workspace
of wire robots, in Advances in Robot Kinematics, Sestri-Levante, Italy.
Merlet, J-P. (1999), Determination of 6D workspaces of Gough-type parallel manip-
ulator and comparison between diﬀerent geometries, The International Journal of
Robotics Research, vol. 18, no. 9, pp. 902–916.
Available: http://www-sop.inria.fr/coprin/
logiciels/ALIAS/
Ming, A., and Higuchi, T. (1994), Study on multiple degree-of-freedom positioning
mechanism using wires (Part 1) - concept, design and control, International Jour-
nal of the Japan Society for Precision Engineering, vol. 28, no. 2, pp. 131–138.
Murray, R., Li, Z., and Sastry, S. (1994), A mathematical introduction to robotic
manipulation, CRC Press, Boca Raton, FL, USA.
closure workspace analysis of cable-driven parallel mechanisms, Mechanism and
Machine Theory, vol. 41, no. 1, pp. 53–69.
Roberts, R. G., Graham, T., and Lippitt, T. (1998), On the inverse kinematics, statics,
and fault Tolerance of cable-suspended robots, Journal of Robotic Systems, vol. 15,
no. 10, pp. 581–597.
Roth, B. (1993), Computations in Kinematics, in Computational Kinematics, Dagstuhl
Castle, Germany.
Stump, E., and Kumar, V. (2004), Workspace delineation of cable-actuated parallel
manipulators, ASME Design Engineering Technical Conferences, Salt Lake City,
UT, USA.
Tadokoro, S., Nishioka, S., Kimura, T., Hattori, M., Takamori, T., and Maeda, K.
(1996), On fundamental design of wire conﬁgurations of wire-driven parallel ma-
nipulators with redundancy, Proceedings of the 1996 Japan/USA Symposium on
Flexible Automation, Boston, MA, USA, pp. 151–158.
Takeda, Y., and Funabashi, H. (2000), Kinematic synthesis of spatial in-parallel wire-
driven mechanism with six degrees of freedom with high force transmissibility,
ASME Design Engineering Technical Conferences, Baltimore, MD, USA.
Verhoeven, R., and Hiller, M. (2000), Estimating the controllable workspace of tendon-
based stewart platforms, in Advances in Robot Kinematics, Piran-Portoroz, Slove-
nia.
Verhoeven, R. (2004), Analysis of the workspace of tendon-based Stewart platforms,
Ph.D. dissertation, Duisburg Essen University, Duisburg, Germany.
Williams II, R. L., Gallina, P., and Vadia, J. (2003), Planar translational cable-direct-
driven robots, Journal of Robotic Systems, vol. 20, no. 3, pp. 107–120.
322
M. Gouttefarde et al.
Merlet, J-P. (2004b), ALIAS, [Online].
Pham, C. B., Yeo, S. H., Yang, G., Kurbanhusen, M. S., and Chen, I-M. (2006), Force-

FULLY-ISOTROPIC HEXAPODS 
Grigore Gogu 
Mechanical Engineering Research Group, French Institute of Advanced Mechanics and 
University Blaise Pascal, Clermont-Ferrand, France 
Grigore.Gogu@ifma.fr 
Abstract 
The paper presents a special family of fully-isotropic parallel manipulators 
with six degrees of mobility called Isoglide6-E. The six motions of the 
moving platform are controlled independently by six actuators situated on 
the fixed base. A one-to-one correspondence exists between the actuated 
joint space and the operational space of the moving platform. The Jacobian 
identity matrix throughout the entire workspace. A method is proposed for 
structural synthesis based on the theory of linear transformations. The 
special family of fully-isotropic hexapods includes 2197 solutions. As far as 
we are aware, this paper presents for the first time fully-isotropic parallel 
manipulators with six degrees of mobility. 
Keywords: 
structural synthesis 
1.  
Introduction  
The three translations (T) and the three rotations (R) of the moving 
platform in the fully-isotropic hexapods, called Isoglide6-E, presented in 
this paper can be controlled independently by three linear actuators and 
three rotary actuators situated on the fixed platform (base). A one-to-one 
space of the moving platform 
   
  
 
 
 
 
 
 
 
   
 (1)  
> @> @
Z
ª º
 
« »
¬ ¼

p
H
v
J
q
 
where : [v]=[vx vy vz]T is the velocity of a point H belonging to the moving 
platform, [Z ]= [ǚǂ ǚǃ ǚǅ ]T is the angular velocity of the moving platform, 
[ ] =[
1
2
3
4
5
6 ]
q
q
q
q
q
q
q
T are the velocities of the actuated joints, [J] is the 
Jacobian matrix and p is the coordinate system in which the velocities of 
the moving platform with respect to the fixed base are expressed.  
We know that a parallel manipulator (PM) is fully-isotropic if the 
Jacobian J is a diagonal matrix with identical diagonal elements 
throughout the entire workspace. The Jacobian matrix of fully-isotropic 
hexapods presented in this paper is the identity matrix throughout the 
matrix of the fully-isotropic hexapods presented in this paper is the 6 × 6 
correspondence exists between the actuated joint space and the operational 
© 2006 Springer. Printed in the Netherlands.
323
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 323–330.
Parallel manipulators, hexapods, fully-isotropic, six degrees of mobility, 

entire workspace (J = I6× 6). The condition number and the determinant of 
the Jacobian matrix being equal to one, the manipulator performs very 
well with regard to force and motion transmission (Angeles, 1987). The 
isotropic design aims at ideal kinematic and dynamic performance of the 
manipulator (Fattah and Hasan Ghasemi,  2002).  
Some important studies are now available to support the design of 
hexapods, such as the pioneering works of Hunt (1973, 1978, 1983), the 
comprehensive enumerations presented by Merlet (1997, 2000) and Tsai 
(2000). Although hexapods are known for more than half a century, no 
one fully-isotropic PM with six degrees of freedom has been proposed 
until now (Fassi et al., 2005). As far as we are aware, this paper proposes 
for the first time fully-isotropic parallel manipulators with six degrees of 
freedom. Only PMs with Schönflies motions T3R1-type (Gogu, 2004a, 
2005a, Caricato, 2005), translational T3-type (Caricato and Parenti-
Castelli, 2002, Kim and Tsai, 2002, Kong and Gosselin, 2002, Gogu, 
2004b), planar T2R1-type (Gogu, 2004c), T2R2-type (Gogu, 2005b), T1R2-
type (Gogu, 2005c) and spherical R2-type (Gogu, 2005d) fully-isotropic 
parallel manipulators have been previously proposed in the literature.  
The general methods used for structural synthesis of parallel robotic 
manipulators can be divided into three approaches: the methods based on 
displacement group theory (Hervé, 1995, Hervé and Sparacino, 1993, 
Hervé, 2004, Angeles, 2004, Li et al., 2004), the methods based on screw 
2004c, Fang and Tsai, 2002, Huang and Li, 2002, 2003, Caricato, 2005) 
and the methods based on the theory of linear transformations (Gogu, 
2004a, 2004b, 2004c, 2005a, 2005b, 2005c, 2005d, 2005e).  The method 
2.  
The general kinematic structure of the fully-isotropic PMs proposed in 
this paper is presented in Fig. 1. The legs A, B and C contribute to the 
1
A
B
C
F
contribute to the three independent rotations of the mobile platform 5F 
and each integrates two homokinetic joints connected by telescopic 
shafts. Just the input and the output shafts are indicated in Fig. 1 for 
324
algebra (Frisoli et al., 2000, Kong and Gosselin, 2001, 2004a, 2004b, 
Kinematic Structure   
the three independent translations of the intermediary platform 
fully-isotropic translational parallel kinematic chain. The legs D, E and F 
n ŋ n ŋ n ŋ n  and implicitly of the final mobile  platform 5 . They make a 
each homokinetic joint. The intermediary members of the homokinetic  
G. Gogu
used in this paper is also founded on the theory of linear transformations.

 
 
Figure 1.     General kinematic structure of the fully-isotropic hexapods of 
Isoglide6-E family  
joints are not indicated. Various types of homokinetic joints could be 
used: Tracta, Weiss, Bendix, Dunlop, Rzeppa, Birfield, Glaenzer, 
Thompson, Triplan, Tripode, UF (undercut-free) ball joint, AC (angular 
contact) ball joint, VL plunge ball joint, DO (double offset) plunge ball 
joint, AAR (angular adjusted roller), helical flexure U-joints, etc. (DudiĦӽ 
The first joint of each leg is actuated (underlined joint). The legs A, B 
and C are actuated by linear motors and the legs D, E and F by rotary 
motors.  The six actuators are mounted on the fixed base.  
The mechanism associated to a fully-isotropic PM with six degrees of 
mobility is denoted by Q. The existence of this mechanism involves
 the  
/1 between the 
moving (n) and the fixed (1ŋ0) platforms and for the base (
) of the 
vector space of relative velocities of the moving platform:   
Q
n
/1
Q
n
R
a) general conditions for any position of the mechanism when 
 0, 
 0  
 0, 
 0, 
 0 and 
 0 
 1
q
 2
q
 3
q
 4
q
 5
q
 6
q
 
/1
Q
n
S
= 6,   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 (2) 
 




D
E
G
Z
Z
Z
 &
&
&
&
&
&
/1
,
,
,
,
,
Q
n
x
y
z
R
v v
v
,  
 
 
 
 
 
                                        (3) 
 
 
b) particular conditions when one actuator is locked 
= 0 (i = 1,…,6) 
 iq
 
/1
Q
n
S
= 5,  
 
 
     
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 (4) 
 




D
E
G
Z
Z
Z
 &
&
&
&
&
/1
,
,
,
,
Q
n
y
z
R
v v
, if 
= 0, 
 (5) 
 1
q
 




D
E
G
Z
Z
Z
 &
&
&
&
&
/1
,
,
,
,
Q
n
x
z
R
v v
 2
q
, if 
= 0,   
 (6) 
 




D
E
G
Z
Z
Z
 &
&
&
&
&
/1
,
,
,
,
Q
n
x
y
R
v v
 3
q
, if 
= 0,  
 (7) 
 




E
G
Z
Z
 &
&
&
&
&
/1
,
,
,
,
Q
n
x
y
z
R
v v v
 4
, if  q = 0, 
 (8) 
 
325
Fully-Isotropic Hexapods
.
et al., 2001a, 2001b).   
, 
following conditions for the connectivity (spatiality)
 
S





D
G
Z
Z
 &
&
&
&
&
/1
,
,
,
,
Q
n
x
y
z
R
v v v
, if  
= 0,    
      (9) 
 5
q
 




D
E
Z
Z
 &
&
&
&
&
/1
,
,
,
,
Q
n
x
y
z
R
v v v
 6
, if  q = 0,       
 
 
 
 
 
 
 
 
        (10) 
 
The point H on the moving platform n is chosen such that the bases 
(
) defined by Eqs. (3) and (5-10) represent the unique bases of the 
vector space of the relative velocities between the mobile and fixed 
platforms.  
Q
n / 1
R
We recall that the connectivity (spatiality) 
/1  between the moving 
and the fixed platforms in the mechanism Q represents the number of 
relative independent infinitesimal displacements or velocities allowed by 
the mechanism between the two platforms. It is given by the dimension 
of the vector space 
 of the relative velocities between the two 
platforms (Gogu, 2005e) 
Q
n
S
Q
n / 1
R
 
   
 
/1
/
dim(
)
Q
Q
n
n
S
R
1 .  
 
    
       
 
   (11) 
 
F
fully-isotropic PM presented in Fig. 1.  
Various solutions of legs A, B and C could be used in the general 
kinematic structure presented in Fig. 1:  
- elementary legs P A P A ɝP, P A P A ɠRɠR, PɠR A P A ɠR, PɠRɠR
P, 
A
PɠRɠRɠR ,  
 
- complex legs with parallelogram loops P A P A ɠPa, PɠPa
P, 
A
PɠPaɠPa, PɠPaɠRɠR, PɠRɠRɠPa, 
 
- complex legs with m (m = 1,2,…) rhombus loops PɠRɠRb1ɠ…ɠRbmɠR, 
 
- complex legs with bimobile planar loops  PɠPn2ɠR, 
 
- complex legs with trimobile planar loops  PɠPn3ɠR. 
 
In these notations P stands for prismatic pair, R for revolute pair, Pa 
for planar parallelogram loop, Rb for planar rhombus loop, Pn2 for 
bimobile planar loop and Pn3 for trimobile planar loop. The notations 
 
and ɠ indicate the perpendicular or parallel positions of the joint axes. 
For example, the notation 
A
P A P A ɠRɠR indicates that: the first three 
pairs have perpendicular axes/directions, the last two pairs have parallel 
axes and the axis of the third pair is in the same time parallel to the 
direction of the first pair. More details on the structural synthesis of the 
legs A, B, and C via theory of linear transformations could be get in 
Gogu, 2004b.  
By various combinations of the five solutions of elementary legs and 
the eight solutions of complex legs A, B and C we obtain 133 = 2197 
distinct solutions of fully-isotropic PMs with six degrees of freedom. All 
these solutions obey conditions (2)-(10) and integrate only revolute and 
prismatic joints in the legs A, B and C. The family of these solutions 
could be more diversified by introducing helical, cylindrical and planar 
326
The moving platform is nŋ 5  for the general kinematic structure of the 
joints to replace some equivalent combinations of revolute and prismatic 
G. Gogu

Figure 2.     Example of fully-isotropic hexapod: Isoglide6-E1(a) and its associated 
Figure 3.     Example of fully-isotropic hexapod: Isoglide6-E2 (a) and its 
327
Fully-Isotropic Hexapods
graph (b). 
associated graph (b).  

joints or by introducing some new joints with idle mobilities to obtain non 
overconstrained (isostatic) solutions. Due to space limitations, we have 
reduced our presentation in this paper to fully-isotropic overconstrained 
solutions without idle mobilities integrating just revolute and prismatic 
pairs in the legs A, B and C.     
B and C of type PɠRɠRɠR (Fig. 2) and complex legs A, B and C of type 
PɠRɠRb1ɠR (Fig. 3). The workspace of these solutions must be correlated 
with the angular capability of the homokinetic joints and translational 
capability of the telescopic shafts.   
 
3.  
Conclusions  
of 2197 fully-isotropic hexapods with six degrees of mobility called 
Isoglide6-E. Special legs were conceived to achieve fully-isotropic 
conditions. The Jacobian matrix mapping the joint and the operational 
vector spaces of the fully-isotropic hexapods presented in this paper is 
realize a one-to-one mapping between the actuated joint velocity space  
and the operational velocity space. The condition number and the 
determinant of the Jacobian matrix being equal to one, the manipulator 
performs very well with regard to force and motion transmission. 
Moreover, the solutions of fully-isotropic hexapods presented in this 
paper have all actuators mounted directly on the fixed base. As far as we 
are aware, this paper presents for the first time fully-isotropic parallel 
manipulators with six degrees of freedom and a method for their 
structural synthesis.  
 
4.  
Acknowledgement  
 
This work was sustained by CNRS (The French National Council of 
Scientific Research) in the frame of the projects ROBEA-MAX (2002-
2003) and ROBEA-MP2 (2004-2006).   
 
References 
Angeles, J. (1987), Fundamentals of Robotic Mechanical Systems : Theory, 
Methods, and Algorithms, New York, Springer. 
Angeles, J. (2004), The qualitative synthesis of parallel manipulators, Trans. 
ASME Journal Mech. Design, vol. 126, pp. 617-624. 
328
the 6 × 6 identity matrix throughout the entire workspace. These solutions 
G. Gogu
 An approach has been proposed for structural synthesis of a family
 
   The two examples presented in Figs. 2 and 3 have elementary legs A,
 

Carricato, M. and Parenti-Castelli, V. (2002), Singularity-free fully-isotropic 
translational parallel mechanisms, Int. Journal of Robotics Research, no. 2, 
vol. 22, pp. 161-174. 
Caricato, M. (2005), Fully-isotropic four degrees-of-freedom parallel mechanisms 
for Schoenflies motion, Int. Journal of Robotics Research, no. 5, vol. 24, pp. 
397-414. 
articulate, Braúov, Ed. Orientul Latin. 
Braúov, Ed. Trisedes Press. 
Fang, Y., and Tsai, L.-W. (2002), Structural synthesis of a class of 4-dof and 5-dof 
parallel manipulators with identical limb structures. Int. Journal of Robotics 
Research, no. 9, vol. 21, pp. 799-810. 
Fassi, I., Legnani, G. and Tosi, D. (2005), Geometrical conditions for the design of 
partial or full isotropic hexapods, Journal of Robotic Systems, no. 10, vol. 22, 
pp. 505-518.  
manipulators. Int. Journal of Robotics Research, no. 9, vol. 21, pp. 811-824. 
Frisoli, A., Checcacci, D., Salsedo F. and Bergamasco, M. (2000), Synthesis by 
screw algebra of translating in-parallel actuated mechanisms, in: LenarĀiĀ, J. 
Academic Publishers,  pp. 433-440. 
Gogu, G. (2004a),  Fully-isotropic T3R1-type parallel manipulators, in: LenarĀiĀ, 
J., Galletti, C. (Eds.), On Advances in Robot Kinematics, Dordrecht,  Kluwer 
Academic Publishers, pp. 265-274. 
Gogu, G. (2004b), Structural synthesis of fully-isotropic translational parallel 
robots via theory of linear transformations, European Journal of Mechanics– 
A/Solids, no. 6, vol. 23, pp. 1021-1039. 
Gogu, G. (2004c), Fully-isotropic over-constrained planar parallel manipulators, 
Proceedings of IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS 
2004), Sendai, pp. 3519-3520. 
Gogu, G. (2005a), Singularity-free fully-isotropic parallel manipulators with 
Schönflies motions, Proceedings of 12th International Conference on Advanced 
Robotics (ICAR 2005), Seattle, pp. 194-201. 
Gogu, G. (2005b), Fully-isotropic parallel robots with four degrees of freedom T2R2-
type, Proceedings of IEEE/RSJ International Conference on Intelligent Robots 
and Systems (IROS 2005), Edmonton, pp. 1190-1195. 
Gogu, G. (2005c), Fully-isotropic T1R2-type parallel manipulators with three 
degrees of freedom, Proceedings of International Design Engineering Technical 
Conferences & Computers and Information in Engineering Conference 
(IDETC/CIE 2005), Long Beach, Paper DETC2005-84313.  
Gogu, G. (2005d),  Fully-isotropic over-constrained parallel wrists with two degrees 
of freedom, Proceedings of  IEEE International Conference on Robotics and 
Automation (ICRA 2005), Barcelona, pp. 4025-4030. 
Gogu, G. (2005e), Mobility and spatiality of parallel robots revisited via theory of 
linear transformations, European Journal of Mechanics / A –Solids, vol. 24, pp. 
690-711. 
Proceedings of the 9th World Congress on the Theory of Machines and 
Mechanisms, Milan, pp. 2079-2082. 
329
Fully-Isotropic Hexapods
DudiĦӽ, F., Diaconescu, D., Jaliu, C., Bârsan, A. and Neagoe, M. (2001a), Cuplaje mobile 
DudiĦӽ, F., Diaconescu, D., Lateú, M. and Neagoe, M. (2001b), Cuplaje mobile podomorfe, 
Fattah, A. and Hasan Ghasemi A.M. (2002), Isotropic design of spatial parallel 
and Stanišiþ, M.M. (Eds), Advances in robot kinematics, Dordrecht, Kluwer 
Hervé, J.M. (1995), Design of parallel manipulators via the displacement group ,

Lie-groups: Y-STAR and H-ROBOT, Proceedings of IEEE Intl. Workshop on 
Advanced Robotics, Tsukuba, pp. 75-80. 
parallelogram, Proceedings of the 11th World Congress in Mechanism and 
Machine Science, vol. 4, China Machine Press, pp. 1599-1603. 
symmetrical 
lower-mobility 
parallel 
manipulators 
and 
several 
novel 
manipulators, Int. Journal of Robotics Research, no. 2, vol. 21, pp. 131-145. 
parallel mechanisms using the constraint-synthesis method, Int. Journal of 
Robotics Research, no. 1, vol. 22, pp. 59-79. 
Hunt, K. H.  (1973), Constant-velocity  shaft  couplings: a general  theory, Trans. 
ASME Journal of Eng. Industry, vol. 95B, pp. 455-464. 
Trans. ASME  Journal Mech. Design, vol. 105, pp. 705-712. 
manipulator, in: J. LenarĀiĀ and F. Thomas, eds., Advances in Robot 
Kinematics, Dordrecht, Kluwer Academic Publishers, pp. 21-28. 
translational degrees of freedom based on screw theory, Proceedings of 
CCToMM Symposium on Mechanisms, Machines and Mechatronics, Montreal. 
parallel manipulators, in: J. LenarĀiĀ and F. Thomas, eds., Advances in Robot 
Kinematics, Dordrecht, Kluwer Academic Publishers, pp. 453-462. 
manipulators based on screw theory, IEEE Trans. Robotics and Automation, 
no. 2, vol. 20, pp. 181-190. 
parallel manipulators, Proceedings of the 11th World Congress in Mechanism 
and Machine Science, vol. 4, China Machine Press, pp. 1642-1646. 
parallel manipulators based on screw theory, Trans. ASME Journal of 
Mechanical Design, vol. 126, pp. 83-92. 
mechanisms using the Lie group of displacements. IEEE Trans. Robotics and 
Automation, no. 2, vol. 20, pp. 173-180. 
e
Tsai, L.-W. (2000), Mechanism Design: Enumeration of kinematic structures 
according to function. CRC Press. 
 
330
G. Gogu
Hervé, J.M. and Sparacino, F. (1993), Synthesis of parallel manipulators using 
Hervé, J.M. (2004), New translational parallel manipulators with extensible 
Huang, Z. and Li, Q.C. (2002), General methodology for type synthesis of 
Huang, Z. and Li, Q.C. (2003), Type synthesis of symmetrical lower-mobility 
Hunt, K.H. (1978), Kinematic Geometry of Mechanisms, Oxford University Press. 
Hunt, K.H. (1983), Structural kinematics of in-parallel-actuated robot arms, 
Kim, H.S. and Tsai, L.-W. (2002), Evaluation of a Cartesian parallel
 
Kong, X., Gosselin, C.M. (2001), Generation of parallel manipulators with three 
Kong, X. and Gosselin, C.M. (2002), Type synthesis of linear translational 
Kong, X. and Gosselin, C.M. (2004a). Type sysnthesis of 3T1R parallel 
Kong, X. and Gosselin, C.M. (2004b), Type synthesis of analytic translational 
Kong, X. and Gosselin, C.M. (2004c), Type synthesis of 3-dof translational 
Li, Q., Huang, Z. and Hervé, J. M. (2004), Type synthesis of 3R2T 5-DOF parallel  
, 2  édition, Paris, Hermès. 
Merlet, J.P. (1997), Les robots parallèls
Merlet, J.P. (2000), Parallel Robots, Dordrecht, Kluwer Academic Publishers. 

A NEW CALIBRATION STATEGY FOR
A CLASS OF PARALLEL MECHANISMS
Philipp Last
Institute of Machine Tools and Production Technology
Langer Kamp 19b, 38106 Braunschweig, Germany
p.last@tu-bs.de
J¨urgen Hesselbach
Institute of Machine Tools and Production Technology
Langer Kamp 19b, 38106 Braunschweig, Germany
j.hesselbach@tu-bs.de
Abstract
Geometric calibration has been proven to be an eﬃcient way to en-
hance absolute accuracy of robotic systems. The idea is to identify the
geometric parameters of the kinematic model matching the real robots’
geometry.
Basically calibration is performed by analyzing the diﬀer-
ence between conﬂicting information gained by the kinematic model
and corresponding redundant information. In all existing robot calibra-
tion approaches required redundancy is achieved either by extra sensors
or by special constraint devices. This paper for the ﬁrst time proposes
a calibration method that does not rely on any extra device, thus being
very economical. The presented technique which only holds for parallel
robots is based on a method that allows passing singularities of type
two. By means of simulation studies using a FiveBar-structure as an
example the approach is veriﬁed.
Keywords: Parallel Kinematics, Calibration, Singularities
1.
Introduction
Although automated robot programming is a well engineered technol-
ogy, most robotic systems are still programmed by using the teach-in
approach. This is due to an insuﬃcient absolute accuracy oﬀered by
most industrial robots. Positioning errors are mainly caused by a devia-
tion between the controller model and the real robots’ geometry eﬀected
by thermal inﬂuences, manufacturing and assembly tolerances [Mooring
et al., 2005].
Geometric calibration has been shown to be a suitable
method to overcome that drawback. It is a process by which the pa-
rameters of the kinematic model are estimated in a way that best ﬁts
the real robot. Parametric calibration requires redundant measurement
information that is usually obtained by additional internal or external
© 2006 Springer. Printed in the Netherlands.
331
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 331–338.

measurement systems such as lasertracker-devices, theodolites, camera
systems or passive joint sensors.
Alternatively the robots’ degree of
freedom (dof) may be restrained by passive devices. In that case the
actuator encoders of the system deliver enough information allowing for
parameter identiﬁcation.
Various calibration technique of both cate-
gories are compared in [Hollerbach and Wampler, 1996].
This contribution for the ﬁrst time presents a calibration strategy
which does not require any calibration equipment. Due to the aban-
donment of external measurement systems or constraint devices the
proposed calibration approach is very inexpensive compared to other
techniques. Furthermore it belongs to the class of self-calibration meth-
ods [Maurine et al., 2005] and can thus be completely automated and
repeated whenever necessary. Redundancy is achieved by special knowl-
edge about singular conﬁgurations of type two which need to be passed
in order to identify the kinematic parameters of a parallel kinematic ma-
nipulator. Our approach is therefore based on a technique that allows
to savely guide a parallel mechanism through singularities of type two,
introduced in [Helm, 2003]. Without a loss of generality the new cali-
bration approach will be explained and validated by means of a simple
2-dof planar parallel structure, the FiveBar-robot [Sachau et al., 2002].
2.
As mentioned in the previous section our new calibration approach re-
lies on passing singularities of type two. Because these constitute struc-
ture conﬁgurations where two solutions of the direct kinematic problem
(DKP) coincide, they are also called direct kinematic singularities. It
is well known that a robot-structure is uncontrollable in this kind of
conﬁgurations [Hesselbach et al., 2005] and hence particular strategies
need to be applied to savely guide a manipulator through singularities
of type two. With the intention of workspace enlargement Helm pre-
sented a technique to pass direct kinematic singularities, which has been
approach has been extended to spatial parallel structures in
tuate the robot system during passing the singular conﬁguration and to
use an additional driving force to guide the structure through the direct
kinematic singularity. By means of the planar FiveBar-structure the
conﬁguration (a) the structure is underactuated by releasing one actua-
tor (b). While the second actuator is kept at a constant motor-position
P. Last and J. Hesselbach
332
approach is exemplarily summarized in Fig. 1. In a pose near the singular
experimentally proven at a planar robot-structure [Helm, 2003]. The
et al., 2005]. Both methods rely on the basic idea to temporarily underac-
[Budde
Idea of the Calibration
cheme
the endeﬀector-point C passes the singularity (c) driven by gravity
S

g
q1
q2
g
q1
q1
q2
q2
a)
c)
d)
q1
q2
g
b)
x
y
A1
A2
C
B1
B2
active joint
passive joint
L11
L12
L22
L21
endeffector movement
movement of the released actuator
released joint
Figure 1.
FiveBar-structure: Kinematic design (a) and basic steps while passing
leased actuator can be activated again. Instead of exploiting gravity as
the driving force which has been also done in [Budde et al., 2005], struc-
ture inertia may be used to pass the singularity as described in [Helm,
2003].
Mathematically singular conﬁgurations of type two can be detected
by
det(J) = 0
(1)
with the Jacobian matrix J = ∂q
∂X relating endeﬀector velocities ˙X and
actuator velocities ˙q [Gosseling and Angeles, 1990]
˙q = J ˙X .
(2)
Following the above mentioned strategy to pass the singularity one actu-
ator needs to be released while all others remain at a constant position.
In that case the systems’ dof is one and J reduces to a scalar expression
J = ˙q
˙X
.
(3)
Since for scalar values
det(J) = J ,
(4)
333
A New Calibration Stategy
a singular conﬁguration in (b)-(d).
inﬂuence until it reaches a nonsingular conﬁguration (d) in which the re-

a direct kinematic singularity is according to Eq. 1 reached under the
condition
˙q = 0 ∧˙X ̸= 0.
(5)
Thus, in a singular structure conﬁguration the velocity of the released
actuator ˙qreleased is zero while the endeﬀector is still in motion. This cor-
responds to the structure in Fig. 1 where the released actuator changes
its direction of movement exactly in the singular conﬁguration (indicated
by the dashed line in a,b,c). Consequently by observing the movement of
the released actuator by its own encoder it is possible to identify and save
the actuator coordinate ˆqsing
released that corresponds to a singular conﬁg-
uration. Furthermore, since particular geometric conditions need to be
fulﬁlled at a singular conﬁguration of type two, it is possible to compute
the actuator coordinate qsing
released(k) from the kinematic model including
the kinematic parameters k. Comparing both information leads to a
residual
r(k) = ˆqsing
released −qsing
released(k).
(6)
Passing the direct kinematic singularity at diﬀerent locations allows for
a formulation of diﬀerent residual functions. These may be assembled
real robot-structure, then r(k) = 0. Since we assume parameter errors,
mathematical optimization methods may be applied to ﬁnd k such that
r(k) is minimized.
3.
In order to validate the presented approach the FiveBar-structure
from Fig. 1 will be calibrated. Its kinematic model is deﬁned by only
ﬁve parameters. These are (Fig. 1a):
1 parameter L0 deﬁning the distance A1A2 between the two actu-
ator base points.
1 parameter Li1 for each kinematic chain i = 1, 2 describing the
length of the crank AiBi
1 parameter Li2 for each kinematic chain i = 1, 2 specifying the
rod length BiC
While typical kinematic problems are concernd with relating endef-
fector and actuator coordinates the calibration approach presented here
requires to determine the actuator coordinate qsing
released from arbitrary
given ﬁxed actuator coordinates qfixed and a vector of kinematic pa-
rameters k
qsing
released = fSKP(k, qfixed).
(7)
in a vector r(k). Ideally, if the kinematic model exactly matches the
FiveBar-
obot
inematics
R
K
334
P. Last and J. Hesselbach

We refer to this problem as the Singular Kinematic Problem (SKP).
The FiveBar-structures’ SKP can be solved analytically. For brevity
index f is introduced for parameters of the chain with the ﬁxed actuator
and index r for parameters of the chain whose actuator is released. We
assume that rAf = [xAf , yAf]T and rAr = [xAr, yAr]T pointing from the
base coordinate system to point Af and Ar respectively, are given with
the restriction that |xAr −xAf | = L0 and consequently yAr = yAf. By
known vector rBr = [xBr, yBr]T , qreleased can be solved to
qreleased = qr = atan2(yBr −yAr, xBr −xAr).
(8)
The structure is in a singular conﬁguration under the geometric con-
dition that the two rods of the robot build a common line. Hence rBr
can be computed by intersecting a circle KI with its center in Bf and
radius RI = L12 + L22 and a second circle KII around Ar with radius
RII = Lr1. With the substitutes
S1 =
x2
Ar+y2
Ar −(xAf +cos qf Lf1)2−(yAf +sin qf Lf1)2+R2
I−R2
II
2yAr −2yAf −2 sin qfLf1
(9)
S2 =
xAf +cos qfLf1−xAr
yAr−yAf −sin qf Lf1
(10)
S3 =
S1S2−S2(yAf +sin qfLf1)−(xAf +cos qfLf1)
S2
2+1
(11)
S4 =
(S1−yAf −sin qfLf1)2+(xAf +cos qfLf1)2−R2
I
S2
2+1
(12)
two solutions
xBr1,2 = −S3 ±

S2
3 −S4; yBr1,2 = S1 + S2xBr1,2
(13)
can be derived for xBr and yBr, leading to two solutions of the FiveBar-
structures’ SKP with Eq. 8.
4.
Requirements and
imitations
The technique presented above is a very promising strategy to cali-
brate parallel mechanisms and thus to enhance their absolute accuracy.
There are however several limitations:
As there is a risk of damaging a robot-structure it is usually avoided
to approach direct kinematic singularities. Due to this several par-
allel structures are dimensioned and designed in a way that no sin-
gular conﬁguration of type two exist in their workspace. Obviously
these manipulators cannot be calibrated by means of the proposed
calibration scheme.
L
335
A New Calibration Stategy

Each time a singularity is passed one redundant information can
be gathered. In order to identify n parameters by the calibration
process at least n independent informations need to be determined.
This requires that diﬀerent singular conﬁgurations exist, which is
for example not the case for the Paraplacer-structure presented
in [Helm, 2003].
If only angular measurements are used for parameter calibration
no unique parameter-set can be identiﬁed as each scaled version
of the robot deﬁnes a possible solution to the calibration problem.
Consequently one metric parameter needs to be known in advance
and serves as a reference-dimension during calibration, meaning
problem is the same for all calibration strategies).
Since direct kinematic singularities for the FiveBar-robot occur
under the geometric condition of the two rods building one line, the
calibration process cannot diﬀer between a parameter deviation of
L12 and one in L22. This however results from the particular design
feature that both kinematic chains are directly connected to each
other in one joint. Most parallel structures, especially those with
a dof > 2 are designed in a way that the chains are not directly
connected to each other but to an additonal passive platform link.
In that case this problem does not occur.
The last two items limit parameter identiﬁcation for the FiveBar-
robot under consideration. In order to circumvent the scaling problem,
it is assumed that L0 is exactly known and will serve as the reference
parameter during calibration.
Furthermore, as it cannot be diﬀered
between parameter-deviations in L12 and L22, L12 +L22 will be handled
as one parameter of the calibration procedure. In summary only three
of the ﬁve parameters describing the system can be identiﬁed.
5.
Simulation
tudies
In order to validate the proposed calibration approach various sim-
tor kreal containing the actual robot geometry-parameters is generated
which adds random values in the range [±1mm] to the nominal values
of the three kinematic parameters L11, L21, L12 + L22 that are supposed
to be identiﬁed by the calibration process. Nominal parameters knom as
well as typical real robot parameters kreal
Gathering of redundant information is simulated by application of
ˆqsing
2,j
= fSKP(kreal, q1,j), where j indicates a speciﬁc conﬁguration. This
that this parameter remains constant during calibration. (This
S
ulation studies have been performed. For simulation purposes a vec-
336
P. Last and J. Hesselbach
are given in Table 1.

Table 1.
parameter
nominal dimension [mm]
exemplary real dimension [mm]
L0
50
50
L11
30
29, 1
L12
50
49, 2
L12
30
30, 7
L22
50
50
result is compared to qsing
2,j
= fSKP(k, q1,j) in a residual rj(k) according
to Eq. 6, with k the current parameter set. In order to ensure that
m ≥3 diﬀerent residuals rj exist, q1,j is set to j = 1..m diﬀerent val-
ues. All rj(k) are then assembled in r(k) = [r1, .., rj]T . Starting with
k = knom, the idea is to ﬁnd an optimal parameter set kopt that best
ﬁts the real robot-structure by minimization of r(k). For mathematical
convenience a function F is deﬁned as F = rT r. Minimization of F
is then performed by the Levenberg Marquard algorithm [Scales, 1985]
that has been proven to be successful in various calibration approaches,
e.g. [Zhuang, 1997].
2 shows a typical result of our calibration studies which corre-
real values within a small number of iteration steps indicating that the
algorithm works successful.
L11
L22
L +L
12
22
1
2
3
4
5
6
1e-12
1e-10
1e-8
1e-6
1e-4
1e-2
1e 0
parameter
iteration step
Figure 2.
sponds to the parameters from Table 1. The parameters converge to the
presented calibration approach.
337
A New Calibration Stategy
Nominal and exemplary real dimensions for the simulation studies.
Figure
deviation [mm]
Simulation result corresponding to Table 1 showing the eﬀectiveness of the
-

6.
Conclusion
For the ﬁrst time a robot calibration approach has been presented
that does exclusively rely on the information delivered by the robot-
system itself. Hence, as neither additional sensors nor special constraint
devices are required in order to apply parameter identiﬁcation methods,
the proposed technique is very economical. The basic idea of the new
calibration scheme has been explained and validated by means of simple
planar parallel structure. Simulation results emphasize the promising
potential of the approach. Future work will focus on application of the
method to more complex parallel structures. In addition the eﬀect of
sensor noise in the actuator encoders will be analyzed.
7.
Acknowledgements
The research work reported here was supported by the German Reser-
ach Foundation (DFG) within the scope of the Collaborative Research
Center SFB 562.
References
Budde, C., Last, P., Hesselbach, J. (2005), Workspace Enlargement of a Triglide
Robot by Changing Working and Assembly Mode, Proc. of IASTED International
Gosselin, C., Angeles, J. (1990), Singularity Analysis of Closed-Loop Kinematic Chains,
Helm, M. (2003), Durchschlagende Mechanismen f¨ur Parallelroboter, Dissertation, TU
Hesselbach, J., Bier, C., Campos, A., L¨owe, H. (2005), Direct Kinematic Singularity
Detection of a Hexa Parallel Robot, Proc. of the IEEE International Conference
Hollerbach, J. M., Wampler, C. W. (1999), The Calibration Index and Taxonomy for
Robot Kinematic Calibration Methods, International Journal of Robotics Research,
Maurine, P., Liu, D. M., Uchiyama, M. (1998), Self Calibration of a New Hexa Parallel
Robot, Proc. of the 4th Japan-France Congress and 2nd Asia-Europe Congress on
Mooring, B. W., Roth, Z. S., Driels, M. R. (1991), Fundamentals of Manipulator
Calibration, John Wiley and Sons INC.
Sachau, D., Breitbach, E., Rose, M., Keimer, E. (2001), An Adaptronic Solution to
Increase Eﬃciency of High Speed Parallel Robots, Proc. of the 12th Int. Conference
Scales, L. E. (1985), Introduction to Non-Linear Optimization, Macmillan Publishers
Ltd.
Zhuang, H. (1997), Self-Calibration of Parallel Mechanisms with a Case study on
338
P. Last and J. Hesselbach
Braunschweig.
IEEE Trans. on Robotics and Automation, 6(3), pp. 281-290.
Conference on Robotics and Applications, Cambridge, USA, pp. 244-248.
on Robotics and Automation, ICRA, Barcelona, Spain, pp. 3507-3512.
Mechatronics, Kitakyushu, Japan, pp. 290-295.
on Adaptive Structures and Technologies, College Park, Maryland, USA.
pp. 387-397.
vol. 15.
Stewart Platforms, IEEE Transaction on Robotics and Automation, vol. 13, no. 3,

THE DYNAMIC OPTIMIZATION OF PKM
Abstract
It is well known that parallel kinematic machines (PKM) have a lot
of signiﬁcant advantages. In recent years several machines have been
developed and presented on international fairs. But up to now only a
handful of machines have been transferred to industrial applications.
Reasons for this lack of technical transfer are structural drawbacks and
an awful design. Therefore, this paper presents a new optimization ap-
proach for the optimal design of PKM according to given application
requirements. The main idea of this concept is the separation of the
transmission matrices concerning translational and rotational behavior.
Hence the resulting criteria allow an exact physical analysis of the kine-
matic and dynamic properties. To assure the practicability our approach
is demonstrated by means of 6-dof Stewart-Gough platform.
Keywords:
1.
Introduction
Due to the fact that the tool center point (TCP) is supported by se-
veral guiding chains, the main advantages of PKM are high stiﬀness,
process forces and accuracy. In addition the symmetric layout allows
a modular design based on standard machine elements (Merlet, 2000).
Beside the evolution of increasingly powerful machine control and sophi-
sticated new components, the structure synthesis and optimization is one
of the most important deﬁance’s for the developing engineer. This is the
starting point for several researchers dealing with the analysis and opti-
mization of the kinematic structure. The main focus of these approaches
is the optimization of two characteristics: workspace and the Jacobian
matrix. In general, these ﬁrst optimization strategies utilized currently
look at the kinematics and dynamics of the mechanism in a successive
manner. Moreover, the dynamic properties of PKM are optimized after
Parallel kinematics, Jacobian matrices, optimization
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 339–348. 
339
Mathias Kreﬀt
m.kreﬀt@tu-bs.de
Juergen Hesselbach
Institute of Machine Tools and Production Technology (IWF)
j.hesselbach@tu-bs.de
Institute of Machine Tools and Production Technology (IWF)
Technical University Braunschweig, Langer Kamp 19b, 38106 Braunschweig, Germany
Technical University Braunschweig, Langer Kamp 19b, 38106 Braunschweig, Germany

the kinematics is deﬁned. This is a typical approach because the tools for
kinematic and dynamic analysis are often not the same and the dynamic
analysis is usually very diﬃcult to perform. In this paper we will discuss
new performance criteria. By integrating the kinematics and dynamics
in the design process enhanced PKM can be designed.
2.
Analysis
The kinematic and dynamic analysis of PKM is strongly associated
with the linear transmission of the drive velocities by the Jacobian Ja:
˙X = Ja ˙q
(1)
In literature a large number of approaches discussing this transmission
behavior can be found, e.g. Ma and Angeles, 1991. Thus the standardized
drive velocity ˙q, which describes the surface of a F-dimensional hyper
sphere in the joint space, are transmitted on a hyper ellipsoid in the
Cartesian space representing the time derivates of the endeﬀector pose.
This transmission is characterized by the extension/ampliﬁcation and
deformation of the hyper sphere and the phase shifting of the output
vector ˙X according to the input vector ˙q. The maximum ampliﬁcation
of an input drive velocity is given by the spectral norm of the Jacobian
matrix:
∥Ja∥2 = max
∥˙q∥2̸=0
∥Ja ˙q∥2
∥˙q∥2

.
(2)
In the same way
11J−1
a
11−1
2
gives the minimum ampliﬁcation. The spec-
tral norm can be calculated with the square root of the maximum eigen-
value ξmax of JaJT
a . Since JaJT
a and JT
a Jaare equal, the singular value
σmax (Ja) ≡∥Ja∥2 =
0
ξmax (JTa Ja) is the maximum semi half axis of
the hyper ellipsoid and σmin (Ja) ≡
0
ξmin (JTa Ja) = σ−1
max

J−1
a

is the
minimum semi half axis. Thus the deformation of the hyper ellipsoid can
be described by the condition number κ of the Jacobian matrix:
κ(Ja) = σmax (Ja)
σmin (Ja) = ∥Ja∥2
11J−1
a
11
2
(3)
2.1
Modiﬁed Criteria
Using the inverse of the condition number the range of values can be
shifted from [1, ∞] to the interval [0, 1] Salisbury and Craig, 1982. Even
though the inverse condition number is a local value, which depends on
the pose of the endeﬀector, a lot of authors, e.g. Ma and Angeles, 1991,
use this value for the optimization of parallel robots. The aim of this
340
M. Krefft and J. Hesselbach

approach is a uniform velocity transmission in all directions. If κ−1 = 1,
the structure is called isotropic, irrespective of other poses. Furthermore,
the general opinion that κ−1 = 1 means that the PKM can reach the
same velocities in all directions, is completely wrong from a physical
point of view. This fact has serious consequences for the use of singular
values. Considering Eq. 1, the diﬀerence quotient for accuracy analysis
can be derived:
Ja = ∆X/∆q
(4)
Fig. 1 shows the Biglide-structure based on the PRRRP kinematic
chain in a kinematic isotropic position (P = prismatic joint, R = rotational
joint). However, considering the maximum errors of each drive, the maxi-
1. The reason for this lies in the fact that the input vector ∆q has to
be described by a hyper square (index□) with the side length 2∆qmax.
If ∆q1,max = ∆q2,max, the ratio of maximum and minimum Cartesian
errors is κx = ∥∆Xmax∥2 ∥∆Xmin∥−1
2
= 1, 41, which is the same as the
ratio of the input drive errors κq = ∥∆qmax∥2 ∥∆qmin∥−1
2
= 1, 41 = κx
thus κ = κx/κq
conditions for the PRRRP-structure as shown in Fig. 1. Thus, the extre-
input
∆qmin
∆qmax
∆xmin
∆xmax
κq
κx
κ
sphere
1.00
1.00
0.70
1.77
1.00
2.55
2.55
square
1.00
1.41
0.92
2.51
1.41
2.74
2.40
341
The Dynamic Optimization of PKM
mum and minimum endeﬀector displacements diﬀer as depicted in Table
me Cartesian errors can be calculated by
Figure 1.
Exact Modeling of Independent Input Parameters
Table 1.
Error Transmission of the PRRRP-Structure
= 1. Table 1 shows the spectral norm of the errors and
.

∆Xmax = max (∥Ja∆q□∥2)
(5)
with the drive errors and permutation parameters
∆q□=

µ1q1,max
. . .
µF qF,max
T
(6)
µi ∈{−1, 1} ∧µj ∈{−1, 1}, i = {1, . . . , F} \ {j} .
(7)
2.2
Separation Approach
Considering the required accuracy of the PKM tasks, we have to gua-
rantee a maximum deﬂection of the needed endeﬀector pose due to errors
of the drive angles given by the measurement system. Hence, the drive
encoders are independent and we have to consider an incremental error
∆qi of each drive. Nevertheless, we have to bear in mind that only a
hypercube will accomplish this demand.
Furthermore, if we analyze a PKM with F = 6, e.g. the Stewart-Gough
platform or a Hexapod in general, we will mix diﬀerent physical units:
[Ja] =
	
1 ∈ℜ3x6
rad/m ∈ℜ3x6

(8)
In this case, each performance criterion, which is based on the Jacobian
matrix, has no physical meaning. In addition the values of the two sub
matrices are having diﬀerent magnitudes and one sub matrix will domi-
nate the other one. Thus some authors like Ma and Angeles, 1991 deﬁne a
constant characteristic length arbitrarily. Thus, the characteristic of the
mechanism performance can be manipulated without aﬀecting the ma-
chine itself. Kirchner, 2001 uses the projection of the platform vectors
on the orientation planes. But, the use of the standardized matrix is still
of a Hexapod structure (6-UPS) for a given pose. As can be seen, the
maximum singular values describe a combined motion, i.e. translation
in y-direction and a rotation around the x- and z-axes. But what is the
maximum positioning error?
The following approach using two criteria for translation and orien-
tation will avoid this problem. The main idea is to split the Jacobian
matrix into two sub matrices containing the translational (index t) and
rotational (index r) transmission behavior:
Ja =

JT
a,t
JT
a,r
T
(9)
Now Eq. 1 can be separated as follows
v = Ja,t ˙q, Ja,t ∈ℜ3, Ω= Ja,r ˙q, Ja,r ∈ℜ3.
(10)
342
M. Krefft and J. Hesselbach
problematic, as shown in Table 2. The table gives the six singular values

type
singular value
→x
→y
→z
⟲x
⟲y
⟲z
standardized Jacobian
σmax
0.44
0.00
0.36
0.00
0.28
0.00
0.04
σmin
0.19
0.02
0.00
0.10
0.00
0.05
0.00
separated Jacobian
∆xmax
0.35
0.11
0.34
0.00
7.68
2.49
0.00
∆Φmax
9.11
0.21
0.23
0.00
6.75
6.12
0.00
With regard to Eq. 4 this equation obtains the maximal translational
and rotational displacements:
∆xmax = max

∥Ja,tq□∥2

, ∆ϕmax = max

∥Ja,rq□∥2

(11)
2.3
Forces and Dynamic Eﬀects
For high speed applications the most important aim is to increase
the endeﬀector’s velocity. Therefore, most authors maximize the velocity
transmission as shown in section 2.2. Nevertheless, this approach has the
risk of a saturation of the drive forces since velocity and force transmissi-
on are inverse. Thus, the analysis of the drive forces τ has to be included
in the optimization approach. However, it becomes diﬃcult to assign a
physical interpretation when authors like Kirchner, 2001 and Ottavia-
no and Ceccarelli, 2002 mix forces and torques. Their approach yields
physically inconsistent results when diﬀerent units are mixed. Thus, the
swiftness approach of Di Gregorio and Parenti-Castelli, 2004 is not sui-
table for all PKM, generally. An appropriate approach, which has been
made for serial robots by Bowling and Khatib, 2005, is well suited for
our task. The main idea is to separate the diﬀerent force components,
e.g. inertia, torques, forces, etc.
τ = τ fL + τ mL + τ ˙v + τ ˙Ω+ ....
(12)
The addition of each contribution can be represented geometrically by
mapping one force ellipsoid onto every point on the surface of the other as
shown in Fig. 2. To simplify the problem we ﬁrstly consider the external
loads and inertia eﬀects. The separation of the geometric Jacobian
JT
g =

JT
g,tJT
g,r

,
(13)
which diﬀers from the analytic Jacobian Ja for PKM with F > 3, yields
τ = JT
g,tfL + JT
g,rotmL + Bt ˙v + Br ˙Ω,
(14)
343
The Dynamic Optimization of PKM
– 
– 
– 
– 
– 
– 
– 
Table 2.
Singular values and directions for diﬀerent approaches

with the inertia matrix B =

BT
t
BT
r
T = JT
g,t
 
JT
j MjJj

, where
Mj is the mass matrix of each body j. For instance the transmission
ellipsoid of the external load fL is given by:
τ T
fL

JT
g,tJg,t
+ τ fL = ∥fL∥2
2
(15)
This equation can be understood by mapping a force hyper sphere into
the space of the drive forces. Here a hyper sphere can be used, because
it represents a maximum force vector with constant length and arbitrary
direction. These mappings are valid because we use the Moore-Penrose
pseudo inverse
(JT
g,...)+ =

Jg,...JT
g,...
−1 Jg,...,
(16)
since the single contributions are of a smaller dimension than the drive
force vector. The diﬃculty of the approach by Bowling and Khatib, 2005,
is the calculation of the maximum projection of each contribution on
each drive axis in the space of the drive forces. Fig. 2 shows that this
projection cannot be calculated by using the greatest singular values of
the separated geometric Jacobian sub matrices, here JT
g,t and JT
g,r. Instead
of Bowling’s numerical approach we use the maximum singular values of
each row to calculate the maximum projection of each contribution.
JT
g (X) =
⎡
⎢⎣
JT
g,t,1
JT
g,r,1
...
...
JT
g,t,F
JT
g,r,F
⎤
⎥⎦
(17)
344
M. Krefft and J. Hesselbach
Figure 2.
Addition of the single force terms and their projected contributions in the
direction of each drive.

This process is very simple and quite eﬀective, because it gives the
exact maximum force value for each drive
τmax = max
i
11JT
g,t,ifL
11
2 +
11JT
g,r,imL
11
2

.
(18)
Notice that this equation provides the possibility to independently
determine the worst case contributions of all terms in Eq. (12) without
using any standardization values.
3.
Modiﬁed Evolutionary Algorithm
The mentioned performance criteria are discontinuities, discrete and
nonlinear functions with constraint conditions. Thus the optimization
problem has no convexity properties and therefore gradient methods fai-
led where simple stochastic methods are too time consuming. In this case
evolutionary algorithms are very eﬀective to search the global optima wi-
thout any knowledge about the optimization problem itself (Zitzler et al.,
2003). In contrast to some authors (Ottaviano and Ceccarelli, 2002), who
used a weighted cost function as one criterion, our approach is a pareto
based multi criteria evolutionary algorithm.
Ind1 ≻Ind2 :∀k ∈{1, . . . , NObj} : Ok(Ind1) ≥Ok(Ind2)∧
(19)
∃p ∈{1, . . . , NObj} : Op(Ind1) > Op(Ind2)
To enhance the performance of the evolutionary algorithm, we mo-
diﬁed the approach of Zitzler et al., 2003, with respect to a dynamic
parameter limitation and a better initialization as well as adaptive mu-
2006). The result
is an uniform distributed compromise set with all NInd solutions Ind
ﬁtting the NObj contradictory objectives Oi of the given application.
4.
Optimization of a Hexapod
The performance of our optimization approach was demonstrated by
means of a Hexapod manipulator with hydraulic drives for metal for-
ming, which was designed at the IWF in 2002 (Fig. 3). The advantage
of the hydraulic actuators is the high power to weight ratio. For the me-
tal forming process the platform has to rotate around the pitch and roll
axes with a sin-characteristics respectively, resulting in a tumbling moti-
on with a maximum angle of 15◦and 1 Hz. The process forces are 50kN
in z-direction and 5kN in the xy-plane. Beside the workspace W the mi-
nimization of the maximum actuator forces (due to process forces) and
the maximum actuator velocities (due to the tumbling motion) inside W
are the main aims of the optimization task. However, these two aims are
345
The Dynamic Optimization of PKM
tation and termination functionalities (see Kreﬀt et al.,

no.
requirement
variable
border in W
aim
note
1.
workspace radius
rW
0,05 m
shape 6D:
2.
workspace height
hW
0,05 m
cylindrical
3.
pivoting angle
ψx, θy
±15◦
independent
4.
max. drive force
τi,max
50kN
min
Fz = 50 kN, Fxy = 5kN
5.
max. drive velocity
˙qi,max
0,5 m/s
min
˙ψx, ˙θy = f(ψx, θy)
˙ψx,max, ˙θy,max = 95 ◦/s
6.
max. axial bearing forces
fUa,i,max
min
contradictory. Nevertheless, the separation of the translational kinetosta-
tic and rotational kinematic aspects may help to overcome this problem.
Additionally, the axial bearing forces of the universal joints have to be
performance of the hydraulic drives, the border values τi,max = 50 kN
and ˙qi,max = 0.5 m/s have not been exceeded in any pose of W. Using
these suﬃcient restriction, we can guarantee that all ﬁxed requirements
are fulﬁlled.
In addition to the radius of the base LAi and platform LCi and the
distance of the universal joint pairs LU
ΣCi, βΣCi of the
◦rotation of base and platform is the optimum
arrangement.
pareto evolutionary algorithm (SPEA) based on Zitzler et al., 2003, the
pareto set has a uniform distribution. The pareto set in the 3D objectives
space is similar to a shell, which is formed by the best solutions ﬁtting
346
M. Krefft and J. Hesselbach
reduced for the sake of stiﬀness and accuracy (Table 3). Considering the
, the orientation α
imization. So far a 60
ﬁrst joint axes in spherical coordinates are the input parameters of the opt-
Fig. 4 shows the result of the optimization. Due to an enhanced strength
Figure 3.
Parameters/Layout of the Structure and Process Parameters
Table 3.
Requirements
.
.

minimized, there exists no solution on the backside of this area. It can
be seen that using this evolutionary algorithm, an exact hyper surface,
which is representing the best solution set, can be derived.
In comparison to the ﬁrst design of the machine, which is the reference
for our new approach, the pareto set oﬀers both, minimized drive forces
and drive velocities. Even if there was no suitable optimization tool up
to the time of the ﬁrst development, the original design oﬀers a good
overall performance (Fig. 4). The projection of the pareto solution shows
the contradictory behavior of the requirements 4 and 5 (Fig. 4). The ﬁnal
selection out of the pareto set has to be done by the developing engineer
with his expert knowledge by using weighting factors. To overcome the
problem of combining diﬀerent physical values in one cost function the
objectives have to be standardized with the limiting objective values of
the pareto set Op.
ˆOi = (Oi −min(Op))/(max(Op) −min(Op)).
(20)
In contrast to common cost function approaches, e.g. Ottaviano and Cec-
carelli, 2002, this procedure has two advantages: Firstly, the optimization
process must not be restarted, if one may change the weighting factors
and secondly, a standardization of the objectives is very easy. As depicted
in Fig. 5, diﬀerent weighting factors obtain diﬀerent solutions. Where-
as the variants 2-4 have a better overall performance than the original
design, the solutions 1 and 5 oﬀer the best solution of one objective ac-
cording to the ﬁxed requirements. With regard to the ﬁrst design the
axial bearing forces are minimized with all variants.
347
The Dynamic Optimization of PKM
the requirements in Table 3. Due to the fact that all demands have to be
Figure 4.
3D Pareto Set (Req. 4-6) and Quality of First Design (Req. 4,5).

5.
Conclusion
This article presents a new optimization approach for optimized PKM.
The key feature is the separation of the Jacobian matrix and the pro-
jection of the current values with respect to translation/rotation as well
as drive axes. Thus, we get performance criteria with a physical exact
meaning. It is understood that this basic idea can be copied to other
problems. The optimization of an existing machine shows that this new
approach obtains a further performance enhancement.
References
Bowling, A., and Khatib, O. (2005), The dynamic capability equations: a new tool
for analyzing robotic manipulator performance, IEEE Trans. on Robotics and Au-
tomation, vol. 21, no. 1, pp. 115–123.
Di Gregorio, R., and Parenti-Castelli, V. (2004), Comparison of 3-dof parallel mani-
pulators based on new dynamic performance indices, Proceedings of the 11th World
Congress in Mechanism and Machine Science, Tianjin, China, pp. 1684–1688.
Kirchner, J. (2001), Mehrkriterielle Optimierung von Parallelkinematiken, PhD-Thesis
Technical University Chemnitz, Germany.
Kreﬀt, M., Last, P., and Hesselbach, J. (2006), New Concepts to Adapt the Paral-
lel Robot Performance to Application Requirements, Proceedings of Chemnitzer
Parallel Kinematik Seminar, Chemnitz, Germany, in print.
Ma, O., and Angeles, J. (1991), Optimum Architecture Design of Platform Manipu-
lators, Proceedings of Int. Conf. on Advanced Robotics, Pisa, Italy, pp. 1130–1135.
Merlet, J.-P. (2000), Parallel Robots, Dordrecht, Netherlands, Kluwer Academic Pub.
Ottaviano, E., and Ceccarelli, M. (2002), Optimum design of parallel manipulators
for workspace and singularity performances, Proceedings of the Workshop on Fun-
Salisbury, J. K., and Craig, J. J. (1982), Articulated hands - Force control and kine-
matic issues, Int. J. of Robotics Research, vol. 1, no. 1, pp. 4–17.
Zitzler, E., Thiele, L., Laumanns, M., Fonseca, C. M., and Fonseca, V. G. (2003), Per-
formance assessment of multiobjective optimizers, IEEE Trans. on Evolutionary
Computation, vol. 7, no. 2, pp. 117–132.
348
M. Krefft and J. Hesselbach
Manipulators, Quebec City, Canada, pp. 98–105.
damental Issues and Future Research Directions for Parallel Mechanisms and
Figure 5.
Enhancement of 5 Optimized Variants According to the First Design.

ON NON-ASSEMBLY IN THE OPTIMAL
SYNTHESIS OF SERIAL MANIPULATORS
PERFORMING PRESCRIBED TASKS
J.A. Snyman
Department of Mechanical and Aeronautical Engineering
University of Pretoria, Pretoria 0002, South Africa
jan.snyman@eng.up.ac.za
Abstract
In the application of optimization algorithms to the optimal synthesis of
mechanical manipulators performing prescribed tasks, unique diﬃculties
are encountered due to the fact that the optimization algorithms may
drive the design to a conﬁguration that experiences lock-up, and thus
resulting non-assembly along the task path. If this happens no objective
function can be evaluated for the current design, and the optimization
procedure is forced to terminate prematurely. In previous work on pla-
nar serially linked manipulators, a heuristic procedure was proposed
presents a concise review and justiﬁcation of the proposed methodology
in terms of general kinematic constraint equations that may deﬁne the
prescribed motion of any serially linked manipulator.
Keywords:
1.
Introduction
In the optimal synthesis of a serially linked manipulator a dimensional
conﬁguration, i.e. link lengths and base positioning, is sought that will
ensure favorable performance along a prescribed task path. In particular
the required dimensional design must be such that the end-eﬀector not
manipulator occurs along the task path then the conﬁguration cannot
be evaluated. In comparison to much work that has been done on the
optimal synthesis of linkages [Erdman and Sandor, 1997], very little work
appears to have been done on the above serial manipulator synthesis
problem. This is probably due to the greater complexity of the latter
problem, and particularly because of the unique complication of non-
assembly during the numerical solution of the associated optimization
problem. It is of interest to note that the problem of non-assembly in the
optimal synthesis of linkages has also received little attention [Minnaar
et al., 2001].
to deal with speciﬁc individual synthesis problems. Here the author
some optimal manner.
if non-assembly or lock-up of the
course,
only executes a time-speciﬁc prescribed task path, but also does so in
© 2006 Springer. Printed in the Netherlands. 
349
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 349–356.
ptimal dimensional synthesis, serial manipulator, non-assembly
Of
O

Relatively recently the author and co-worker Berner [Berner and Sny-
man, 1999, Snyman and Berner, 1999a, Snyman and Berner, 1999b] have
addressed the above optimal synthesis problem for a speciﬁc planar ma-
nipulator performing a variety of diﬀerent prescribed tasks, subject to
the average absolute torque requirement being optimal. They proposed
and applied an ad hoc heuristic procedure in solving the associated opti-
mization problems for this speciﬁc manipulator, with diﬀerent imposed
practical constraints. The purpose of this paper is to present a concise
review of the previously proposed methodology, but here in terms of gen-
eral kinematic constraint equations that may deﬁne the prescribed mo-
tion of any serially linked manipulator. In doing so the basic elements of
the proposed methodology for overcoming the problem of non-assembly
are elucidated.
In spite of the sophistication of existing mathematical optimization
algorithms, certain inhibiting diﬃculties remain when these algorithms
are applied to real-world problems [Snyman, 2005]. This is particularly
true in the ﬁeld of mechanical design where unique diﬃculties arise that
have prevented the general application of mathematical programming
techniques to optimal design problems. Some typical optimization dif-
ﬁculties that may arise are: (i) computational expense in evaluating
performance via dynamical simulations, (ii) presence of numerical noise
and discontinuities in the objective function, (iii) the existence of multi-
ple minima, and (iv) the existence of regions in the design space where
the objective function is not deﬁned, and therefore cannot be evalu-
ated. Problems (i) - (iii) have often been addressed, and various general
methods and techniques have been developed to overcome the respective
problems [Snyman, 2005]. Diﬃculty (iv), however, has by comparison
been neglected. There does not appear to be a general method for solving
this particular problem. Often the nature of the system being optimized
dictates the method to be adopted in overcoming this problem. Here
the previous problem-speciﬁc methodology of Snyman and Berner, for
overcoming diﬃculty (iv), is reviewed and justiﬁed in terms of general
kinematic constraint equations.
2.
In the optimal design of a serially linked manipulator, it may be re-
quired to minimize an objective function associated with the execution
of a prescribed task path to be followed by the end-eﬀector. In particular
it may, for example, be required that for a typical planar serially linked
manipulator depicted in Figure 1, where the end-eﬀector is to follow a
prescribed task path speciﬁed by the vector position r(t) at any instant
350
J.A. Snyman 
Problem
ormulation
F
-

t, the average torque for the execution of the prescribed task path over
the time interval [0, T], be minimized with respect to the link lengths
and base placement.
3
2
3
Motor 2
Motor 3
Motor 1
link 1
Base
(x ,y )
b
b
l
l
2
link 2
1=
1
2
1
3
link 3
t = 0
prescribed
path
r(t)
l
t = T
y
x
Figure 1.
A major problem that may occur, corresponding to optimization dif-
ﬁculty (iv) mentioned in the previous section, is that during the op-
timization procedure the optimization algorithm, in adjusting the link
lengths and base coordinates [l1, l2, l3, xb, yb], may drive the design to
one where the workspace no longer fully encloses the prescribed task
path. Thus, assuming that the initial point of the task path is in the
workspace, the end-eﬀector in following the prescribed task path will
reach a point on the boundary of the workspace, beyond which assem-
bly of the manipulator is no longer possible. Consequently the objective
function associated with the completion of the path cannot be evaluated,
i.e. diﬃculty (iv) is encountered, and the optimization procedure termi-
nates prematurely and unsuccessfully. For individually speciﬁc problems
Snyman and Berner proposed an ad hoc heuristic procedure, involving
artiﬁcial objective function values, for overcoming this problem during
optimization. Here their heuristic is reviewed with reference to the gen-
eral kinematic constraint equations deﬁning the motion of any serially
linked manipulator.
3.
Kinematically
riven
ystem
and
on- ssembly
In general a kinematically driven system is described by a combination
of n kinematic and driving constraint equations of the form [4]:
Φ(q, t) = 0
(1)
351
Serial Manipulators Performing Prescribed Tasks
D
S
N
A
Representation of a planar manipulator following a prescribed path.

where q is a n-vector of generalized coordinates and t denotes the in-
stant in time. It is assumed here that equation (1) explicitly or implicitly
speciﬁes the position vector r(t) of the end-eﬀector at any instant t in
the interval [0, T]. Suppose now that for a speciﬁc design the task path
is initially (t = 0) inside the reachable workspace of the manipulator,
but crosses the boundary at t = t∗> 0. This implies that assembly is
lost beyond the boundary, and that for t > t∗no solution to equation (1)
exists. According to the deﬁnition of Haug [Haug, 1989] the conﬁgura-
tion q∗at time t∗corresponds to lock-up, and further, since the solution
cannot be continued beyond t∗it follows by the implicit function theo-
rem that the Jacobian of (1) at t∗, Φq(q∗, t∗), is singular. This has an
important inﬂuence on the behavior of ˙q and ¨q as t approaches t∗.
The velocity equation obtained by taking the time derivative of (1) is
Φq(q, t) ˙q = −Φt
(2)
Since Φq(q, t) is singular at time t∗, it follows that in the situation
described above, where the manipulator approaches a lock-up conﬁgura-
tion, that the solution of (2) yields a value for the norm of ˙q that tends
to inﬁnity as t approaches t∗. Clearly the same applies to the solution
of the corresponding acceleration equation obtained by diﬀerentiating
(2) with respect to time. Thus the behavior of the norms of ˙q and ¨q
as t nears t∗serves as a warning that a lockup conﬁguration and non-
assembly is being approached. In the following section a simple example
is presented that illustrates such a situation and shows how the behavior
of the manipulator may be monitored in practice.
4.
Simple
xample of
ock- p and
on- ssembly
Consider a two-link revolute manipulator (l1 = l2 = 1) with the con-
ﬁguration speciﬁed by link angles φ1 and φ2 as shown in Figure 2(a), and
with the task path of the end-eﬀector speciﬁed by r(t) = [x(t), y(t)]T ≡
[t,
√
2]T for all t in the interval [0, 2]. Setting q1 = φ1 and q2 = φ2,
equation (1) assumes the form
Φ(φ, t) =
"
x(t) −t
y(t) −
√
2
#
=
"
cos φ1 + cos φ2 −t
sin φ1 + sin φ2 −
√
2
#
= 0
(3)
For any instant t equation (3) may be solved for φ1 and φ2. By further
diﬀerentiation of (3) with respect to time, the velocity and acceleration
equations may be derived, from which one may solve for
˙φ1,
˙φ2, ¨φ1,
and ¨φ2. The values of ˙φ1 and ¨φ1, computed at intervals of ∆t = 0.01s,
are plotted in Figure 2(b). The values of
˙φ2 and ¨φ2 behave similarly
352
J.A. Snyman 
N
A
L
E
U

2
1
workspace
boundary
t = 2
r
= [t,     ]
(t)
2
2
2
t* = 2
2
x
1
1
t = 0
2
y
2
1.2            1.25            1.3           1.35            1.4            1.45
t Z
Z
120
100
80
60
40
20
30
25
20
15
10
5
0
Z
1
1
1
1
(a)
(b)
Figure 2.
(a) Task path of two-link manipulator (b) Behavior of
˙φ1 and ¨φ1 along
but are negative as t approaches t∗. Clearly as t approaches t∗=
√
2
the velocities and accelerations increase dramatically in magnitude, as
is expected from theoretical considerations, and beyond t∗no solutions
exist.
If the further inverse dynamics is done, then, since the accelerations
increase to inﬁnity, the corresponding required torques τ1 and τ2 to be
applied by the actuators on the respective links in order to maintain the
prescribed motion, will also increase to inﬁnity as t approaches t∗. The
general argument in the previous section, and the evidence presented
here for the simple manipulator, indicate that this behavior is in general
true for a large number of practical cases where non-assembly or lock-
up trajectories may be encountered. The practical signiﬁcance of this
behavior is discussed in the next section.
5.
Evaluation of
bjective
unction for
ock- p
rajectories
Consider the manipulator depicted in Figure 1 and where, for exam-
ple, the objective function for a given dimensional design x =[x1, x2, x3,
x4, x5]T = [l1, l2, l3, xb, yb]T , is the average absolute torque requirement
for execution of the task path given by
Tav(x) = 1
T
Z T
0
(|τ1(t)| + |τ2(t)| + |τ3(t)|)dt
(4)
where τi(t) denotes the torque applied to link i. Of course, other ap-
propriate formulations involving the torques, such as the average sum of
353
Serial Manipulators Performing Prescribed Tasks
L
U
T
F
O
task path.

the squares of the torques or average energy usage over the task path,
may also be considered. In practice objective function (4) is minimized
subject to the imposition of constraints relating to limits on maximum
deliverable absolute torque values, and upper and lower bounds on link
lengths. Additionally, constraints may be speciﬁed to prevent allow-
able joint angle ranges from being exceeded, and to prevent violation of
geometrical restrictions on the placement of the base.
Assume for the moment that it can be ensured that for all design
points during the optimization procedure, the initial point and endpoint
of the prescribed path lie within the workspace. If during the optimiza-
tion procedure a design is obtained that results in lock-up and resultant
non-assembly further along the path (between the initial and end point),
then obviously the evaluation of the objective function (4) is not possible.
The behavior of the accelerations near lock-up, as discussed in the
previous sections, now points to a practical strategy for obtaining a
meaningful value for the objective function even if non-assembly is en-
countered. In practice the kinematic analysis is done at discrete time
instants tj = j∆t, j = 1, 2, ..., N where ∆t is an appropriately small time
step and T = N∆t. The analysis starts at the initial point where assem-
bly is assumed to be possible. Lock-up and non-assembly will therefore
be detected at some discrete point along the path if a solution to equa-
tion (1) cannot be found. Non-assembly will be evident from failure of
the formula for the closed form solution, if it exists, or failure of, for
example, the Newton-Raphson method to converge if a numerical solu-
tion is sought. If the system is now forced through the lock-up position
and the analysis continued at the discretization points for the prescribed
path, the analysis will fail at intermediate steps where assembly is no
longer possible. However, as assembly at the end position is guaran-
teed by our assumption above, a point will be reached where assembly
is again possible, and the analysis can successfully be continued.
A heuristic procedure to compute a meaningful objective function
value for such a lock-up trajectory was previously proposed and success-
fully applied to the optimal design of planar manipulators by the author
and co-worker Berner. This heuristic may now be justiﬁed in terms of
the theoretical argument and computational evidence presented in the
previous two sections. At the integration points tj where assembly fails,
set the respective torques τi(tj) := τi(ts) where ts (close to t∗, ts < t∗),
corresponds to the last step at which assembly was successfully car-
ried out and the inverse dynamics could be done. Use these artiﬁcial
torque values in the numerical integration of (4) to give an associated
artiﬁcial value for the objective function. This situation is depicted in
Figure 3.
Because ts is close to t∗, one expects the values of |τi(ts)|
354
J.A. Snyman 

lock-up
interval
t
t
t
t
j
j+1
t s
0
T
calculated value
artificial value
i (t)
Figure 3.
Numerically computed absolute torque values, |τi(t)|, along lock-up tra-
to be relatively large, so that the computed value for Tav will be very
high. Also, the longer the non-assembly time interval, the larger the
expected value for the artiﬁcial objective function. Thus the objective
function contains a meaningful penalty component in the case where
non-assembly occurs along the task path. Any minimization procedure
employing the above artiﬁcial integration procedure for evaluating the
objective function, should drive the design away from lock-up trajecto-
ries with artiﬁcially high objective function values. This is indeed borne
out by the work of Snyman and Berner.
6.
Ensuring
ssembly at
ndpoints of
ask
ath
In the above it was assumed that for all design points occurring during
the optimization procedure, assembly is at least possible at the begin-
ning and end of the task path. If not, the evaluation of the objective
function, real or artiﬁcial, corresponding to (4) is of course impossible
since the integration in (4) cannot be started or completed. The condi-
tions, that will ensure assembly in the neighbourhood of the respective
extreme points, may be expressed in terms of relationships between the
design variables that must be satisﬁed at the start and end of the time
interval [0, T]. These two assembly conditions can be expressed in terms
of inequality constraints of the general form: gi(x) ≤0, i = 1, 2.
Thus, to overcome non-assembly at the two extreme points, the spe-
ciﬁc procedure adopted during the optimization process is to replace
the objective function, corresponding to (4), by a single penalty func-
tion P(x) containing only the assembly constraints, i.e. by P(x) =
β1(g1(x))2+β2(g2(x))2, where βi = 0 if gi(x) ≤0 and βi = 1 if gi(x) > 0,
whenever one or both assembly constraints are violated. The minimiza-
tion is then continued with the penalty function until the design returns
355
Serial Manipulators Performing Prescribed Tasks
jectory.
A
E
P
T

to a region where both assembly constraints are met. At this point the
optimization reverts to the minimization of objective function (4) sub-
ject to the normal physical constraints. In spite of the discontinuities
inherent in the switching from objective function to penalty function, it
is found that the optimization can easily be performed using the robust
gradient-based leap-frog algorithm [Snyman, 2005].
7.
Conclusion
In an attempt to minimize the torque requirement in the optimal syn-
thesis of a serially linked planar manipulator, an optimization algorithm
is inclined to drive the design to one which can no longer be assembled
at some point along the task trajectory. Here, a previously proposed
ad hoc procedure for avoiding non-assembly during optimal synthesis,
and which was successfully applied to speciﬁc individual synthesis prob-
lems, is reviewed and justiﬁed by considering the behavior of the general
kinematic and driving constraint equations of any manipulator in the
neighborhood of non-assembly. The analysis fully justiﬁes the use of the
proposed methodology in the general case. The application of this ap-
proach, in which continuation of the optimization process is ensured in
order to produce a feasible optimum design, may therefore be expected
to be successful in the optimal synthesis of more complicated and general
three-dimensional serially linked manipulators.
References
Berner, D.F. and Snyman, J.A. (1999), The inﬂuence of joint angle constraints on the
optimum design of a manipulator following a complicated path, Computers and
Mathematics with Applications, vol. 18, pp. 111–124.
Erdman, A.G. and Sandor, G.N. (1997), Mechanism design: analysis and synthesis,
Upper Saddle River, New Jersey, Prentice-Hall.
Haug, E.J. (1989), Computer-aided kinematics and dynamics of mechanical systems,
Boston, Allyn and Bacon.
Minnaar, R.J., Tortorelli, D.A., and Snyman, J.A. (2001), On nonassembly in the op-
timal dimensional synthesis of planar mechanisms, Structural and Multidisciplinary
Optimization, vol. 21, pp. 215–221.
Snyman, J.A. and Berner, D.F. (1999a), A mathematical optimization methodology
for the optimal design of a planar robotic manipulator, International Journal for
Numerical Methods in Engineering, vol. 44, pp. 535–550.
Snyman, J.A. and Berner, D.F. (1999b), The design of a planar robotic manipula-
tor for optimum performance of prescribed tasks, Structural and Multidisciplinary
Optimization, vol. 18, pp. 95–106.
Snyman, J.A. (2005), Practical mathematical optimization: An introduction to basic
optimization theory and classical and new gradient-based algorithms, New York,
NY, Springer.
356
J.A. Snyman 

Design of Mechanisms
W.A. Khan, S. Caro, D. Pasini, J. Angeles
architecture
D.V. Lee, S.A. Velinsky
Robust three-dimensional non-contacting angular motion sensor
K. Brunnthaler, H.-P. Schr¨ocker, M. Husty
Synthesis of spherical four-bar mechanisms using spherical
kinematic mapping
R. Vertechy, V. Parenti-Castelli
Synthesis of 2-DOF spherical fully parallel mechanisms
G.S. Soh, J.M. McCarthy
Constraint synthesis for planar n-R robots
T. Bruckmann, A. Pott, M. Hiller
Calculating force distributions for redundantly actuated
tendon-
Stewart platforms
P. Boning, S. Dubowsky
A study of minimal sensor topologies for space robots
M. Callegari, M.-C. Palpacelli
Kinematics and optimization of the translating 3-CCR/3-RCC
parallel mechanisms
359
369
377
385
395
403
413
423
based
Complexity analysis for the conceptual design of robotic

COMPLEXITY ANALYSIS
FOR THE CONCEPTUAL DESIGN
OF ROBOTIC ARCHITECTURES
Waseem A. Khan, St´ephane Caro, Damiano Pasini, Jorge Angeles
Department of Mechanical Engineering, McGill University
817, Sherbrooke St. West, Montreal, QC, Canada, H3A 2K6
{wakhan, caro}@cim.mcgill.ca, damiano.pasini@mcgill.ca, angeles@cim.mcgill.ca
Abstract
We propose a formulation capable of measuring the complexity of kine-
matic chains at the conceptual stage in robot design. As an example,
two realizations of the Sch¨onﬂies displacement subgroup are compared.
Keywords: Conceptual design, complexity, kinematic chains, displacement sub-
groups
1.
Introduction
We propose here a formulation capable of measuring the complexity
of the kinematic chains of robotic architectures at the conceptual-design
stage.
The motivation lies in providing an aid to the robot designer
when selecting the best design alternative among various candidates at
the early stages of the design process, when a parametric design is not
yet available.
In this paper, the complexity of three lower kinematic pairs (LKPs),
the revolute, the prismatic and the cylindrical pairs, is ﬁrst obtained.
Then, a formulation to measure the complexity of kinematic bonds
(Herv´e, 1978; Herv´e, 1999) is introduced. Based on this formulation,
the complexity of ﬁve displacement subgroups—the helical pair is left
out in this paper—is established. Finally, as an application, two realiza-
tions of the Sch¨onﬂies displacement subgroup (Angeles, 2004; Company
et al., 2001) are compared.
2.
Kinematic Pair, Kinematic Bond
and Kinematic Chain
A kinematic bond is deﬁned as a set of displacements stemming from
the product of displacement subgroups (Herv´e, 1978; Angeles, 2004),
the bond itself not necessarily being a subgroup. We denote a kinematic
bond by L(i, n), where i and n stand for the integer numbers associated
© 2006 Springer. Printed in the Netherlands.
359
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 359–368.

with the two end links of the bond. There are six basic displacement
subgroups R(A), P(e), H(A, p), C(A), F(u, v) and S(O) (Herv´e, 1978;
Herv´e, 1999; Angeles, 2004), each associated with a lower kinematic pair
(LKP). In this notation, A stands for the axis of the kinematic pair in
question; e, u and v are unit vectors, O is a point denoting the center
of the spherical pair; and p is the pitch of the helical pair.
A kinematic bond is realized by a kinematic chain. A kinematic chain
is the result of the coupling of rigid bodies, called links, via kinematic
pairs. When the coupling takes place in such a way that the two links
share a common surface, a lower kinematic pair results; when the cou-
pling takes place along a common line or a common point, a higher
kinematic pair is obtained. Examples of higher kinematic pairs include
gears and cams.
There are six lower kinematic pairs, namely, revolute R, prismatic
P, helical H, cylindrical C, planar F, and spherical S. These pairs can
be regarded as the generators of the six displacement subgroups listed
above. Although the displacement subgroups can be realized by their
corresponding LKPs, it is possible to realize some of their displacement
subgroups by appropriate kinematic chains. A common example is that
of the C(A) which, besides the C pair, can be realized by a suitable
concatenation of a P and a R pair.
3.
The Loss of Regularity of a Surface
In this section, we propose a measure of the complexity of a given
surface. We base this measure on the concept of loss of regularity LOR,
deﬁned as
LOR ≡||κ′
rms||2
||κrms||2
(1)
where κrms is the r.m.s. of the two principal curvatures at a point of
the surface, κ′
rms is the derivative of κrms with respect to a dimension-
less parameter σ. The LOR is inspired from Taguchi’s loss function
(Taguchi, 1993), and measures the diversity of the curvature distribu-
tion of the given surface, the LOR of the surfaces associated with ﬁve
lower kinematic pairs, being found below.
LOR of the Surface of the R Pair.
Typically, the surface asso-
ciated with the revolute pair is assumed to be a cylinder. However, in
order to realize the R(A) subgroup, the translation in the axial direction
of the cylindrical surface must be constrained. This calls for additional
surfaces, which must then be blended smoothly with the cylindrical sur-
face in order to avoid curvature discontinuities.
360
W.A. Khan et al.

The above discussion reveals that the surface associated with a rev-
olute pair has to be a surface of revolution but cannot be an extruded
surface; the cylindrical surface is both. We should thus look for a gen-
eratrix G other than a straight line, but with G2-continuity everywhere.
The latter would allow a shaft of appropriate diameter to be blended
smoothly on both ends. The simplest realization of G is a 2-4-6 polyno-
mial, namely, P(x) = −x6 + 3x4 −3x2 + 1.
Figure 1(a) is a 3D rendering of the surface SR obtained by revolving
the generatrix G about the x-axis, so as to blend with a cylinder of unit
radius.
(a)
10
15
20
25
30
35
0
0.5
1
1.5
2
r
LOR
(b)
Figure 1.
(a) A 3D rendering of the surface of revolution SR and (b) its LOR vs.
shaft radius r
The two principal curvatures of SR are given by (Oprea, 2004)
κµ =
−y′′
(1 + y′2)3/2 ,
κπ =
1
y(1 + y′2)1/2
(2)
where y = P + r and r is the radius of the cylindrical shaft. The r.m.s.
of the two principal curvatures, κµ and κπ, can now be obtained, i.e.,
κrms =

1
2(κ2µ + κ2π)
(3)
Next, we need to choose a suitable length parameter s and a homog-
enizing length l. A natural choice for s is the distance traveled along G;
l can be taken as the total length of the generatrix, the dimensionless
parameter being σ ≡s/l.
The LOR of SR can now be evaluated by eq. (1),
Fig. 1(b). Notice that LORR is not monotonic in r. Further, LORR
reaches a minimum of 10.2999 at r = 0.1132. We thus assign LORR =
10.2999.
Conceptual Design of Robotic Architectures 
361
.
and depicted in

LOR of the Surface of the P Pair.
The most common cross
section of a P pair is a dovetail, but we might as well use an ellipse,
a square or a rectangle. A family of smooth curves that continuously
leads from a circle to a rectangle is known as Lam´e curves (Gardner,
1965). In their simplest form, these curves are given by xm + ym = 1,
where m > 0 is an even integer. When m = 2, the corresponding curve
is a circle of unit radius, with its center at the origin of the x-y plane.
As m increases, the curve becomes ﬂatter and ﬂatter at its intersections
with the coordinate axes, becoming more like a square. For m →∞,
the curve is a square of sides equal to two units of length and centered
at the origin. A Fourier analysis based on the curvature of these curves
conﬁrms the intuitively accepted notion that the spectral richness, or
diversity, of the curvature increases with m (Khan, Caro, Pasini and
Angeles, 2006).
The LOR of the surface of the prismatic pair obtained by extruding
a square or a rectangle is expected to have a very high value. A Lam´e
curve L with m = 4 is plausibly the best candidate for the cross section
of the prismatic pair. This curve is shown in Fig. 2(a). Figure 2(b) is a
3D rendering of the surface SP obtained by extruding L along the z-axis.
–1
–0.5
0.5
1
–1
–0.5
0.5
1
y
x
s
(a)
(b)
Figure 2.
(a) Cross section of the prismatic pair; (b) A 3D rendering of the extruded
surface
The two principal curvatures of SP are given by
κµ = x′′y′ −y′′x′
(x′2 + y′2)3/2 ,
κπ = 0
(4)
The r.m.s. of the two principal curvatures, κµ and κπ thus reduces to
κrms = κµ. The length parameter s and the homogenizing length l are,
correspondingly, the distance traveled along SP, depicted in Fig. 2(a),
and the total length l of the Lam´e curve, whence σ ≡s/l.
The loss of regularity LORP of SP, the surface associated with the P
pair, is thus LORP = 19.6802.
362
.
W.A. Khan et al.

LOR of the Surface of the F Pair.
The F pair is a generator of
the planar subgroup F and requires two parallel planes, separated by
an arbitrary distance. In order to avoid corners and edges, a suitable
‘blending option’ is the use of the quartic Lam´e curve.
The concept
is shown in Fig. 3(a). Notice that the female element of the pair is an
extruded surface SFf while the male element is a solid of revolution SFm.
–0.5
0.5
0.5
x,
y
d
D>>d
GFm
GFf
ξ
η
(a)
44
46
48
50
52
54
0      2
4
6       8
10
LOR
d
(b)
Figure 3.
(a) Cross section of the simplest realization of the planar pair; (b) LOR
vs. diameter d of the male element
The LOR of the planar pair, LORF, is deﬁned by both the male and
the female elements. Further, the contribution of a ﬂat surface to the
LOR is zero, a plane being a sphere of inﬁnite radius. We thus obtain
LORplane = lim
κ→0
||κ′
rms||2
||κrms||2
= lim
κ→0
0
||κrms||2
= 0
(5)
The LOR of the female element LORFf is thus the same as that of the
prismatic pair, that of the male element LORFm being evaluated below,
namely,
κµ =
ξ′′η′ −η′′ξ′
(ξ′ 2 + η′ 2)3/2 ,
κπ =
1
ξ

1 + ξ′ 2
(6)
where, from Fig. 3(a), η = y and ξ = x + d/2, and d/2 is the dis-
tance between the y and the η axes. The length parameter s and the
homogenizing length l are, correspondingly, the distance traveled along
the generatrix GFm depicted in Fig. 3(a) and its total length l, whence
σ ≡s/l.
Figure 3(b) is a graph between the LOR of SFm, LORFm, and the
diameter d. Notice that LORFm grows monotonically with d. Further,
LORFm reaches a limit of approximately 56.0399, whence LORFm =
56.0399. Finally, the LORF is deﬁned as LORF ≡(LOFFf+LOFFm)/2 =
37.8601.
Conceptual Design of Robotic Architectures 
363
.

LOR of the Surface of the C and S Pairs.
The r.m.s. of the
principal curvatures of the cylindrical and the spherical surfaces is con-
stant.
Hence, the loss of regularity is zero for the two surfaces, i.e.,
LORC = LORS = 0.
4.
The Geometric Complexity of LKPs
We introduce here the geometric complexity of the LKPs based on the
LOR introduced earlier: the geometric complexity KG|x of a pair x is
KG|x ≡
LORx
LORmax
(7)
where LORx is the loss of regularity of the surface associated with the
pair x and LORmax ≡max{LORR, LORC, LORP, LORF, LORS}. The
geometric complexity of the ﬁve LKPs of interest is, in the foregoing
order: 0.2721; 0; 0.5198; 1.0; and 0.
5.
The Complexity of Kinematic Bonds
In this section we lay the foundations for the evaluation of the com-
plexity of any kinematic bond. We ﬁrst restrict our study to kinematic
bonds that are realizable using LKPs; the study of bonds including
higher kinematic pairs is as yet to be reported. Next, we deﬁne the
complexity K ∈[0, 1] of a kinematic chain as a convex combination
(Boyd, 2004) of its various complexities:
K = wJKJ + wNKN + wLKL + wBKB
(8)
where KJ ∈[0, 1] is the joint-type complexity, KN ∈[0, 1] the joint-
number complexity, KL ∈[0, 1] the loop-complexity, and KB ∈[0, 1] the
bond-realization complexity, with wJ, wN, wL, and wB denoting their
corresponding weights, such that wJ + wN + wL + wB = 1.
5.1
J
Joint-type complexity is that associated with the type of LKPs used in
a kinematic chain. We deﬁne a preliminary joint-type complexity KJ|x
as the geometric complexity KG|x of the x pair, the joint-type complexity
KJ of a kinematic bond L being deﬁned as
KJ|L = 1
n(nRKJ|R + nPKJ|P + nCKJ|C + nFKJ|F + nSKJ|S)
(9)
where nR, nP , nC, nF and nS are the number of revolute, prismatic,
cylindrical, planar and spherical joints, respectively, while n is the total
number of pairs.
364
Joint-Type Complexity K
W.A. Khan et al.

5.2
N
The joint-number complexity KN is deﬁned as that associated with a
kinematic bond L by virtue of its number of kinematic pairs, with respect
to the minimum required to realize the same set of displacements. We
adopt the expression
KN|L = 1 −exp(−qNN);
N = n −m
(10)
where n is the number of joints used in the realization of the bond L, m
is the minimum number of LKPs required to produce a displacement of
bond L, and qN is the resolution parameter, to be adjusted according to
the resolution required. Note that KN|L ∈[0, 1].
5.3
Loop-Complexity KL
The loop-complexity KL|L of a kinematic bond is that associated with
the number of independent loops of the kinematic chain connecting the
two links, i and n, of a kinematic bond L, with respect to the mini-
mum required to produce the prescribed displacement set. The loop-
complexity can be evaluated by means of the formula:
KL|L = 1 −exp(−qLL);
L = l −lm
(11)
where l is the number of kinematic loops, lm the minimum number of
loops required to realize such a bond and qL the resolution paramter.
5.4
B
The bond-realization complexity is associated with the geometric con-
straints involved in the realization of a kinematic bond. The complexity
of geometric constraints may be evaluated by the number of ﬂoating-
point operations (ﬂops) required to realize a geometric constraint. One
ﬂop is customarily deﬁned as the combination of one addition and one
multiplication. Lack of space prevents us from including the ﬂop analysis
of the geometric constraints, which is reported in (Khan, Caro, Pasini
and Angeles, 2006). A summary of the results of this analysis is dis-
played in Table 1.
The bond-realization complexity based on the geometric constraints
of its realization can now be deﬁned as
KB|L = 1 −exp(−qBf)
(12)
where f is the number of ﬂoating-point operations corresponding to the
constraints, qB being the corresponding resolution parameter.
Conceptual Design of Robotic Architectures 
365
Joint-Number Complexity K
Bond-Realization Complexity K

Table 1.
Realization cost of some geometric constraints
Geometric constraint
Representation
ﬂops
total ﬂops
Intersection of two lines
(e1 × e2) · q21 = 0
5A + 9M
9
Angle of intersection
e1 · e2 = cos α
2A + 3M
3
Parallelism b/w two lines
e1 × e2 = 03
3A + 6M
6
Length of common normal
||q21 −(q21 · e1) e1||2
2 = d2
7A + 9M
9
Intersection of three lines
det(C) = 0
30A + 36M
36
e1, e2 and e3 span 3D space
det([ e1
e2
e3 ]) ̸= 0
5A + 9M
9
Deﬁnition of the resolution parameters.
Three resolution para-
meters, namely qN, qL and qB were introduced above. These parameters
provide an appropriate resolution for the complexity at hand. Since the
foregoing formulation is intended to compare the complexities of two or
more kinematic chains, it is reasonable to assign a complexity of 0.9 to
the chain with maximum complexity and hence evaluate the normalizing
constant, i.e., for J = B, L, N,
qJ =

−ln(0.1)/Jmax,
for
Jmax > 0;
0,
for
Jmax = 0.
6.
The Complexity of the Displacement
Subgroups
In Section 5, we assigned the joint-type complexity of the lower kine-
matic pairs as the geometric complexity of the surface associated with
the LKPs. The F pair requires the machining of two parallel planes,
separated by an arbitrary distance. Further, the F pair poses an ac-
cessibility problem to the male element of the coupling, this pair being
seldom used in practice as such. Moreover, precision spherical pairs are
expensive and diﬃcult to manufacture.
Hence, using the geometric complexity of the LKPs as the correspond-
ing joint-type complexities is not justiﬁed. In order to solve this problem
we must look at the complexity of the displacement subgroups generated
by the ﬁve LKPs studied here.
The basic displacement subgroups can be realized either by their cor-
responding pairs or by a kinematic bond. The complexity of the dis-
placement subgroups is deﬁned as the complexity of the realization that
exhibits the minimum kinematic bond complexity.
The complexity of the ﬁve displacement subgroups generated by the
LKPs considered here can now be evaluated. In this vein, we apply the
formulation introduced in the previous section to the diﬀerent realiza-
tions of the displacement subgroups under study. Table 2 displays some
366
W.A. Khan et al.
.

Table 2.
Complexity of ﬁve displacement subgroups
Subgroup
Desc.
KJ
KN
KB
K
R(A)
R
0.2721/1
1 −e−qN (0)
1 −e−qB(0)
0.0907
P(e)
P
0.5198/1
1 −e−qN (0)
1 −e−qB(0)
0.1733
C(A)
C
0/1
1 −e−qN (0)
1 −e−qB(0)
0
PR
0.7919/2
1 −e−qN (1)
1 −e−qB(6)
0.4480
PPR
1.3117/3
1 −e−qN (2)
1 −e−qB(12)
0.5987
F(u, v)
RRR
0.8163/3
1 −e−qN (2)
1 −e−qB(12)
0.5436
RPR
1.0640/3
1 −e−qN (2)
1 −e−qB(9)
0.5412
S(O)
RRR
0.8163/3
1 −e−qN (2)
1 −e−qB(45)
0.6907
qN = −ln(0.1)/2 = 1.1513;
qB = −ln(0.1)/45 = 0.0512
Table 3.
Complexity of two realizations of the Sch¨onﬂies subgroup
Description
KJ
KN
KL
KB
K
McGill SMG
2.76/21
1 −e−qN (21−2)
1 −e−qL(5−0)
1 −e−qB(258)
0.68
H4
16.79/22
1 −e−qN (22−2)
1 −e−qL(7−0)
1 −e−qB(99)
0.79
qN = −ln(0.1)/20 = 0.12; qL = −ln(0.1)/7 = 0.33; qB = −ln(0.1)/258 = 0.01
pertinent realizations. The minimum complexity values found for R(A),
P(e), C(A), F(u, v) and S(O) are, correspondingly, 0.0907, 0.1733, 0,
0.5412 and 0.6907. Normalizing the above results so that the maxi-
mum is given a complexity of 1, we obtain the complexities of the ﬁve
displacement subgroups as
KJ|R = 0.1313, KJ|P = 0.2509, KJ|C = 0, KJ|F = 0.7836
(13)
Notice that, although these are not the joint-type complexity deﬁned in
Section 5, which are rather based on form than on function, the above
values can be used to evaluate the joint-type complexity in eq.(9).
7.
Example
We apply our proposed formulation to compute the complexity of two
includes three independent translations and one rotation about an axis
of ﬁxed orientation. Figure 4(b) shows the joint and loop graphs of the
McGill SMG (Angeles, 2005) and the H4 robot (Company et al., 2001).
Table 3 displays the diﬀerent complexity values associated with the
topology of the two robots. Here, we note that the overall complexity
of the McGill SMG is lower than that of the H4 robot.
Conceptual Design of Robotic Architectures 
367
motion capability of this subgroup
Sch¨onﬂies-motion generators. The
.
.

R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
frame
tool
(a)
R
R
R
R
R
R
S
S
S
S
S
S
S
S
S
S
S
S
S
S
S
S
frame
tool
(b)
Figure 4.
Joint and loop graphs of: (a) the McGill SMG; and (b) the H4 robot
8.
Conclusions
The complexity analysis of kinematic chains at the conceptual stage
in robot design was proposed in this paper. To do this, the complexity
of ﬁve lower kinematic pairs and a formulation of the complexity of kine-
matic bonds were introduced. The complexity values of two realizations
of the Sch¨onﬂies displacement subgroup were computed.
References
Angeles, J. (2005). The degree of freedom of parallel robots: a group-theoretic ap-
proach. Proc. IEEE Int. Conf. Robotics and Automation, Barcelona, 1017–1024.
Angeles, J. (2004). The qualitative synthesis of parallel manipulators. ASME Journal
of Mechanical Design 126, 617–624.
Boyd, S. and Vandenberghe, L. (2004). Convex Optimization. Cambridge University
Press, Cambridge.
Parallel Robot. European Patent EP1084802, March 21.
Gardner, M. (1965). The superellipse: a curve that lies between the ellipse and the
rectangle. Scientiﬁc American, 213, 222–234.
Herv´e, J. (1978). Analyse structurelle des m´ecanismes par groupes de d´eplacements.
Mech. Mach. Theory 13, 437–450.
Herv´e, J. (1999). The Lie group of rigid body displacements, a fundamental tool for
mechanical design. Mech. Mach. Theory 34, 719–730.
Khan, W.A., Caro, S., Pasini, D. and Angeles, J. (2006). The Geometric Complexity
of Kinematic Chains. Department of Mechanical Engineering and Centre for In-
telligent Machines Technical Report. CIM-TR 0601, McGill University, Montreal.
Oprea, J. (2004). Diﬀerential Geometry and its Applications. Pearson Prentice Hall,
New Jersey.
Taguchi, G. (1993). Taguchi on Robust Technology Development. Bringing Quality
Engineering Upstream. ASME Press, New York.
368
.
W.A. Khan et al.
Company, O., Pierrot, F., Shibukawa, T., and Koji, M. (2001). Four-Degree-of-Freedom
,
,
,

ROBUST THREE-DIMENSIONAL NON-
CONTACTING ANGULAR MOTION SENSOR 
Danny V. Lee 
Department of Mechanical and Aeronautical Engineering 
University of California Davis 
dvxlee@ucdavis.edu 
Steven A. Velinsky 
Department of Mechanical and Aeronautical Engineering 
University of California Davis 
savelinsky@ucdavis.edu 
Abstract 
Keywords: 
1.  
Introduction  
In the literature, there are a variety of devices based on a sphere 
2003, there is little work on spherical encoders or other means of three-
dimensional, orientation feedback without mechanical coupling.   
In this paper, a non-contacting, angular velocity sensor based on 
magnetometry is presented.  The primary application for this sensor is a 
ball wheel mechanism, which will serve as the drive train in a robust 
omnidirectional mobile platform. Designed for operation in unstructured 
environments, the spherical tire will be subject to contamination and 
rotating in a cradle. These include: spherical motors as in Chirikjian and 
For devices based on a sphere rotating in a cradle, the axis of rotation of the 
sphere is arbitrary and can change instantaneously. Consequently, a non-
contact means of velocity  sensing is desirable.  For the ball wheel 
mechanism, which serves as  the drive train for a class of omnidirectional 
mobile robots, most existing methods are not feasible, such as optical 
techniques based on surface-pattern distinction. Thus, in this paper, a 
robust, three-dimensional angular velocity sensor based on magnetometry is 
presented that tracks the orientation of ferromagnet embedded in the 
sphere. An algorithm based on vector orthogonality is used to approximate 
the angular velocity vector of the sphere from the sampled orientation data. 
Stein 1999, Dehez et al., 2005, spherical continuously variable trans- 
missions as in Ostrowski 2000, Gillespie et al., 2002, and omni-
directional vehicles based on the ball wheel mechanism as in West and
Asada 1997, Ferriere et al., 2001.  However, according to Stein et al.,
Motion-tracking, sensor, spherical motion 
© 2006 Springer. Printed in the Netherlands.
369
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 369–376.

wear.  As a result, optical encoder techniques that require surface 
tracking in demanding environments, magnetic sensing is commonly 
invasive gastrointestinal transit monitoring.  
Information on the configuration of a magnetic source provides a 
means of determining the configuration of the body to which the sources 
are attached. In this case, the goal is to determine the axis of rotation 
and angular speed of the sphere given the absolute position of a point on 
the sphere, which the magnetometry scheme provides. To solve this 
1999 for applications in limb motion tracking in biomechanics. 
2.  
Magnetometry Scheme  
T
p
jˆ
kˆ
r
 
The proposed magnetometry scheme is based on tracking the magnetic 
flux density vector of a cylindrically-symmetric ferromagnet, which will 
be modeled as a magnetic dipole. Generally, the theoretical field 
equations are a function of six configuration variables and physical 
properties of the magnet. For this analysis it will be assumed that the 
sphere and the magnet are both fixed in translation and both are 
perfectly centered at the origin of an inertial reference frame. 
370
 D.V. Lee and S.A. Velinsky
contrast or surface patterning, as proposed by Garner et al., 2001, Stein 
et al., 2003, are not feasible for this application. For non-contact motion 
employed. Jacobs and Nelson 2001 use magnetic sensors to track 
use magnetic sensing for vehicle guidance; and Weitschies et al., 1994, 
Figure 1.  Schematic of field lines from magnetic dipole. 
abdominal cavity deflection in crash test dummies; Donecker et al., 2003 
loyed.  This approach is described in  Panjabi 1979, Halvorsen et al., 1999 
inverse problem, a method based on vector orthogonality will be emp- 
Prakash and Spelman 1997 use magnetic marker tracking for non-

Consider the planar case as shown in Fig. 1. The magnet is located at 
origin
m
O and the sensor is located at point
. Unit vector
defines the 
magnet axis,
S
O
pˆ
r is the position vector from
m to
S, and
O
O
T is the relative 
orientation between r and
. The magnetic flux density vector
pˆ
B  is 
decomposed into radial and tangential components
and
, and are, 
respectively,  
r
B
tB
 
°
°
¿
°°
¾
½
°
°
¯
°°
®
­
 
 
T
S
P
T
S
P
sin
4
cos
2
3
0
3
0
r
M
B
r
M
B
t
r
,  
(1) 
where
0
P is the permeability and M is the dipole moment. The 
relationship between the field components and the configuration 
variables can be found in most texts on electromagnetic fields, such as 
Shadowitz 1975.  For the three-dimensional case, the expressions in Eq. 
1 can be used in the plane defined by vectors 
and
pˆ
r . It remains, then, to 
find the relationship between the radial and tangential field components 
and the the three-dimensional, measured field components. A diagram of 
the configuration is shown in Fig. 2.   
pˆ
r
iˆ
jˆ
kˆ
T
reˆ
teˆ
n
eˆ
 
The magnetometer is positioned along the x-axis of the inertial reference 
frame. This significantly simplifies the geometry of the problem. 
{Bx,By,Bz} are the orthogonal field components from the magnetometer 
 Robust Three-Dimensional Non-Contacting Angular Motion Sensor
371
Figure 2.  Sensor Diagram. 

and {l,m,n} are the direction cosines used to parameterize the magnet 
axis
. Next, orthogonal triad
is positioned at
and defined as, 
pˆ
}
ˆ,
ˆ,
ˆ
{
t
n
r
e
e
e
S
O
 
°¿
°¾
½
°¯
°®
­
u
 
u
u
 
 
n
r
t
r
r
n
r
e
e
e
p
e
p
e
e
r
r
e
ˆ
ˆ
ˆ
,
ˆ
ˆ
ˆ
ˆ
ˆ
,
ˆ
. 
(2) 
Unit vector
re is directed along the radial vector,
n
e is a unit vector normal 
to the plane defined by
and
ˆ
ˆ
pˆ
r , and
t is the tangential unit vector in the 
n -plane, orthogonal to
r . Moreover, the trigonometric functions in Eq. 
1 can be expressed as a function of the direction cosines of 
; as such, 
eˆ
eˆ
eˆ
pˆ
 
°¿
°¾
½
°¯
°®
­

 
 
2
2
sin
cos
n
m
l
T
T
.
 
(3) 
For an arbitrary orientation of
, the theoretical magnetic flux density 
vector can be expressed as, 
pˆ
 
t
t
r
r
TH
e
B
e
B
B
ˆ
ˆ 
 
.
 
(4) 
Eq. 2 and Eq. 3 provide the proper sign conventions through the 
transformations. Substituting Eq. 1-3 into Eq. 4 results in the following 
expression: 
 
»
»
»
»
»
»
¼
º
«
«
«
«
«
«
¬
ª


 
#
»
»
»
¼
º
«
«
«
¬
ª
 
n
r
M
m
r
M
l
r
M
B
B
B
B
B
TH
M
z
y
x
M
3
0
3
0
3
0
2
4
2
S
P
S
P
S
P
.
 
(5) 
Eq. 5 states that the direction cosines of
are linearly proportional to the 
measured field components. In other words, this scheme directly 
measures the motion of vector, fixed relative to the sphere, under 
spherical motion. It remians to solve the inverse kinematics problem of 
extracting the angular velocity vector of the sphere given this data. 
pˆ
3.  
Inverse Kinematics of Spherical Motion 
Calculating the angular displacement given the axis of rotation and 
the trajectory of a point on the body, is a straightforward matter; several 
orientation of the rotation axis and the angular displacement, given only 
the trajectory of a point, is not well established. A method for estimating 
displacements are used to locate the instantaneous axis of rotation for 
 D.V. Lee and S.A. Velinsky
372
techniques are shown in Murray et al., 1994. However, determining the 
these values can be found in Halvorsen et al., 1999. In this work, two 

represent a plane; the axis of rotation is defined by the intersection of 
problem developed for post-processing. For applications in vehicle 
tracking, a real-time method is necessary. The scheme presented below is 
based on Halvorsen s concept of vector orthogonality but results from a 
direct calculation of the on-line sampled data. 
Perp
r
p
O
eˆ
Perp
'r
uˆ
'
uˆ
D
jˆ
iˆ
kˆ
p'
r
'r

eˆ
eˆ
r 
ǚ
r
m
l
n
p
iˆ
jˆ
kˆ
O
  
(a)                                                                 (b) 
Fig. 3(a) is a diagram for the problem formulation. The position 
S
ˆ
ˆ
ˆ
Perp
r
 
e
Perp
Perp
Perp
Perp
ˆ
sin
'
'
D
r
r
r
r
 
u
.
 
(6) 
All the variables in Eq. 6 are unknown since the projections cannot be 
Halvorsen’s work 
Perp
r
can be replaced with a vector u, which represents 
the displacement of
and calculated by normalizing its instantaneous 
tangential velocity
; as such, 
ˆ
p
p
 
r
r
v
v
u
p
p


 
 
ˆ
 Robust Three-Dimensional Non-Contacting Angular Motion Sensor
373
limb motion. More specifically, each of these displacement vectors 
Figure 3. Diagram for (a) general system kinematics and (b) planar sub-problem. 
vector r of point p on sphere  is parameterized by the direction cosines 
{l,m,n},  which is now a measured quantity from the magnetometry
scheme. As S rotates with angular velocity ǚ , p follows the circular
arc C.  Fig. 3(b) illustrates the vector relations of this motion;  (r.e)e is
the projection of position vector r along the axis of rotation, denoted 
by unit vector e , and projection
is related to the other configu-
ration variables by: 
made until the axis of rotation is determined. However, following 
.
 
(7) 
,
,
these planes.  Halvorsen s method involves a quadratic optimization 

Substituting 
for 
uˆ
Perp
r
becomes, 
 
e
ǂ
'
u
u
ˆ
ˆ
ˆ
 
u
. 
(8) 
Eq. 8 is often called the rotation vector forD is the radian rotation of u . 
Dividing by the period T between samples results in the approximate 
angular velocity vector; as such, 
ˆ
 
ǚ(t)
e
T
ǂ(t)
T
(t)
u
T)
-
(t
u
|
 
u
ˆ
ˆ
ˆ
.
 
(9) 
4.  
Experimental Verification  
To verify this scheme a rod magnet rotated by a DC motor and an 
Applied Physics Systems (APS) 535 fluxgate magnetometer was used to 
track the resulting field. The magnet was positioned 6-inches from the 
sensor origin. The rotation speed is stepped through a range of values for 
comparison with the theoretical calculation. The maximum commanded 
speed corresponds to a desired vehicle speed of approximately 5 mph. 
The raw and filtered direction cosine data is shown in Fig. 4(a) and the 
calculated tangential velocity components are shown in Fig. 4(b).   
The raw data is processed with a second order Butterworth filter and the 
differentiations were made using an ideal digital differentiator.  While 
these functions were chosen for convenience, the signal is always 
sinusoidal in nature and therefore numerical differentiation of the on-
 D.V. Lee and S.A. Velinsky
374
Figure 4. Experimental data for (a) position and (b) velocity. 
and making a small angle approximation, Eq. 6 

line sampled data is well-behaved. Fig. 5(a) is the radian rotation of the 
magnet about the orthogonal axes of the inertial reference frame at each 
sample, essentially the output of Eq. 8. The sensed speed compared to 
the commanded speed is shown in Fig. 5(b).   
10
20
30
40
50
60
70
80
90
100
0.04
0.035
0.03
0.025
0.02
0.015
0.01
0.005
0
0.005
Rotation [rad]
nx
ny
nz
 
(a)                                                                  (b) 
sensor were also carried out with equally promising results. A more 
precise test fixture is being developed with optical encoders to track 
transients as the axis of rotation changes orientation relative to the 
sensor. 
5. Conclusion 
A three-dimensional, non-contacting, angular velocity sensor based on 
magnetometry has been presented. The sensing scheme tracks the 
orientation of the axis of a cylindrically-symmetric ferromagnet. A vector-
orthogonality approach is used to approximate the angular velocity 
vector from the sampled orientation data. Initial feasibility testing has 
clearly shown the potential of the approach. 
References 
 Robust Three-Dimensional Non-Contacting Angular Motion Sensor
Figure 5. Sensor output (a) rotation vector and (b) angular speed. 
y-axis of the magnetometer. Tests with the axis oriented relative to the 
For the results presented, the axis of rotation was aligned with the 
375
Chirikjian, G. S. and D. Stein (1999). Kinematic design and commutation of a 
“ 
” IEEE/ASME Transactions on Mechatronics 4(4): 342-353. 
spherical stepper motor.
–
–
–
–
–
–
–
–
Component of Rotation Vector
time [s]

A Mechatronic  Sensing 
32(11): 1221-1227. 
 
“ 
” 
“ 
” 
Dehez, B., V. Froidmont, D. Grenier and B. Raucent (2005). Design, modeling 
and first experimentation of a two-degree-of-freedom spherical actuator.
Donecker, S. M., T. A. Lasky and B. Ravani (2003).
System for Vehicle Guidance and Control.  IEEE/ASME Transactions on Mecha- 
tronics 8(4): 500-510. 
Ferriere, L., G. Campion and B. Raucent (2001). ROLLMOBS, A New Drive 
Garner, H., M. Klement and K. M. Lee (2001). Design and Analysis of an 
 
Absolute Non-Contact Orientation Sensor for Wrist Motion Control.  IEEE/
ASME International Conference on Advanced Intelligent Mechatronics, AIM 1: 69-74. 
System for Omnimobile Robots.  Robotica 19(1): 1-9. 
“ 
” 
“ 
” 
Gillespie, R. B., C. A. Moore, M. Peshkin and J. E. Colgate (2002). Kinematic 
Creep in a Continuously Variable Transmission: Traction Drive Mechanics for 
Cobots.  Transactions of the ASME Journal of Mechanical Design 124(4): 713-722.
” 
Halvorsen, K., M. Lesser and A. Lundberg (1999). New Method for Estimating 
the Axis of Rotation and the Center of Rotation.  Journal of Biomechanics 
Robotics and Computer-Integrated Manufacturing 21(3): 197-204. 
“ 
“ 
” 
Jacobs, B. C. and C. V. Nelson (2001). Development and Testing of a Magnetic Position
Sensor System for Automotive and Avionics Applications. Proceedings of SPIE -
The International Society for Optical Engineering. 
Murray, R. M., Z. Li and S. S. Sastry (1994).  A Mathematical Introduction to 
Robotic Manipulation. Boca Raton, CRC Press. 
Ostrowski, J. P. (2000). Controlling more with less using nonholonomic gears. 2000
IEEE/RSJ International Conference on Intelligent Robots and Systems, 
Oct 31-Nov 5 2000, Takamatsu, Institute of Electrical and Electronics 
Engineers Inc. 
Panjabi, M. (1979). Center and angles of rotation of body joints: A study of errors 
and optimization.  Journal of Biomechanics 12(12): 911-920. 
“ 
” 
Prakash, N. M. and F. A. Spelman (1997). Localization of a Magnetic Marker for 
GI Motility Studies: An In Vitro Feasibility Study. Proceedings of the 19th 
Annual International Conference of the IEEE Engineering in Medicine and 
Biology ociety. 
Shadowitz, A. (1975). Electromagnetic Fields. New York, McGraw-Hill. 
Stein, D., E. R. Scheinerman and G. S. Chirikjian (2003). Mathematical models 
of binary spherical-motion encoders.  IEEE/ASME Transactions on Mechatronics
8(2): 234-244. 
“ 
” 
Weitschies, W., J. Wedemeyer, R. Stehr and L. Trahms (1994). Magnetic 
Transactions on Biomedical Engineering 41(2): 192-195. 
Markers as a Noninvasive Tool to Monitor Gastrointestinal Transit.  IEEE 
“ 
” 
West, M. and H. Asada (1997). Design of Ball Wheel Mechanisms for Omni-
directional Vehicles with Full Mobility and Invariant Kinematics.  Transactions
of the ASME Journal of Mechanical Design 119(2): 153-161. 
“ 
” 
 D.V. Lee and S.A. Velinsky
376
 -
.
.
S

SYNTHESIS OF SPHERICAL FOUR-BAR
MECHANISMS USING SPHERICAL
KINE
Katrin Brunnthaler,
Hans-Peter Schr¨ocker,
Manfred Husty
University Innsbruck, Institute of Engineering Mathematics, Geometry and Computer
Science, Technikerstraße 13, A-6020 Innsbruck, Austria
katrin.brunnthaler@uibk.ac.at, hans-peter.schroecker@uibk.ac.at, manfred.husty@uibk.ac.at
Abstract
Designing a spherical four-bar mechanism that guides a coupler system
through ﬁve given orientations is an old and well known problem. Here
we use kinematic mapping to solve the problem. We investigate the con-
straint surface belonging to a spherical RR-chain and solve the problem
in the newly deﬁned kinematic design space. The algorithm results in
RR-chains which pairwise combined give the synthesized four-bars. It
is remarkable that with this method the univariate polynomial can be
computed completely general without specifying the parameters of the
problem with numerical values. Furthermore for the ﬁrst time an exam-
ple with six real RR-chains is given. These can be combined to 30 real
four-bars that move the coupler system through the ﬁve given precision
points.
Keywords: Mechanism synthesis, spherical four-bar mechanism, ﬁve-orientations-
problem
1.
Introduction
A spherical four-bar mechanism is a closed chain, which consists of
four bodies, linked by four revolute pairs incident with the same point.
One of the four bodies is called the base and is located in the ﬁxed system
Σ0, which is connected with two links to the coupler, the moving system
Σ. Given ﬁve ﬁnitely separated orientations Σt1, . . . , Σt5 of Σ (Fig. 1)
– sometimes called precision points – one can always ﬁnd a ﬁnite set of
spherical RR-chains, guiding a coordinate system attached to the cou-
pler through them. To be more precise, one can ﬁnd according to Roth,
1967 at most six real RR-chains, which are essentially diﬀerent.
means, that solutions with axes origin-symmetric to axes of these RR-
chains are neglected. Six real RR-chains determine 30 diﬀerent spherical
four-bar mechanisms, if there are just four, two or zero real RR-chains,
© 2006 Springer. Printed in the Netherlands. 
MATIC MAPPING
That
377
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 377–384. 

Figure 1.
one can build only 12, one or zero spherical four-bar mechanisms guid-
ing a coordinate system attached to the coupler through the given ﬁve
orientations. Note, that not all orientations necessarily have to lie in
the same assembly branch of the spherical four-bar mechanism. There
exist a number of solutions of this synthesis problem, most of them use
kinematic properties of the motion itself. Bottema and Roth, 1979, Mc-
Carthy, 2000, Chiang, 1988, Lin, 1998, Dowler et al., 1978 solved the
problem via intersecting two center point curves to obtain the centers
respectively two circle point curves to obtain the circle points. These
points represent the points moving on circles in the synthesized spherical
four-bar motion. Bodduluri and McCarthy, 1992 solved this problem as
special case of a curve ﬁtting method by minimizing a normal distance
in the image space. McCarthy, 2000 also solved this problem by using
a two-step elimination procedure that yields a sixth degree polynomial
in one of the coordinates of the ﬁxed axes. In this paper the spherical
four-bar mechanism synthesis is solved in the kinematic image space of
spherical Euclidean displacements. We compute the constraint surface
representing a spherical RR-chain in this space and deﬁne then the kine-
matic design space which is sort of dual to the kinematic image space.
It turns out that in the kinematic design space the constraint surface
representing the design problem is a quadric surface with a very special
and simple structure.
These geometric considerations are key to the
remarkable result that the univariate polynomial of degree six that gov-
erns this design problem can be derived completely general, i.e., without
specifying the coordinates of the ﬁve given orientations.
The paper is organized as follows: In Section 2 we give a brief intro-
duction to the mathematical framework and recall especially spherical
kinematic mapping. In Section 3 we derive the kinematic image of spher-
ical RR-chains and solve the synthesis problem using this representation.
378
K. Brunnthaler et al.
Given 5 orientations of a coordinate system.

Section 4 illustrates the presented algorithm with a numerical example
that presents for the ﬁrst time six real RR-chains.
2.
Preliminaries
Spherical Euclidean displacements D can be described by
X = Ax,
(1)
where X and x represent a point in the ﬁxed and moving frame, re-
spectively and A ∈SO(3) is a 3 × 3 proper orthogonal matrix (Husty
et al., 1997; McCarthy, 2000). For the following it is convenient to use
the Euler parameters to parameterize SO(3):
A :=
⎡
⎣
x2
0 + x2
1 −x2
3 −x2
2
−2x0x3 + 2x2x1
2x3x1 + 2x0x2
2x2x1 + 2x0x3
x2
0 + x2
2 −x2
1 −x2
3
−2x0x1 + 2x3x2
−2x0x2 + 2x3x1
2x3x2 + 2x0x1
x2
0 + x2
3 −x2
2 −x2
1
⎤
⎦.
(2)
In the matrix A the entries xi have been normalized so that x2
0 + x2
1 +
x2
2 + x2
3 = 1. The mapping
κ : D →P ∈P 3
A(xi) →(x0 : x1 : x2 : x3) ̸= (0 : 0 : 0 : 0)
(3)
is called spherical kinematic mapping and maps each spherical Euclidean
displacement D to a point P in P 3. The space P 3 is called kinematic
image space and is naturally endowed with an elliptic metric (Blaschke,
1960). It should be mentioned that xi are the components of the Hamil-
tonian quaternion which is associated with the corresponding element
of SO(3). Therefore one could also use the quaternion calculus as it is
done in McCarthy, 2000. The spherical kinematic mapping is the restric-
tion of the general spatial kinematic mapping to the orientation part of
the Euclidean displacement group. In spatial kinematic mapping each
Euclidean displacement D is mapped to a point P on a six dimensional
hyper-quadric S2
6 ⊂P 7. The spherical kinematic mapping restricts the
general one to a three dimensional subspace on S2
6.
3.
Synthesis of Spherical Four-Bar Mechanisms
The spherical four-bar mechanism is a closed 4R-chain, where all four
revolute pairs intersect in one point. For the synthesis of such a mech-
anism we attach two of the revolute axes to the ﬁxed system and two
axes to the moving (coupler) system. Now we prize open the coupler link
and obtain two open RR-chains. We map the possible displacements of
the ﬁrst RR-chain into the spherical kinematic image space P 3. This
379
Synthesis of Spherical Four-Bar Mechanisms

Figure 2.
yields the constraint manifold M1 of the ﬁrst RR-chain in the kinematic
image space. The same procedure we perform with the other RR-chain
and obtain a second constraint manifold M2. Possible assembly modes
of the two RR-chains correspond to intersection points of M1 and M2.
These constraint manifolds will then be used for the synthesis algorithm.
3.1
Constraint Manifold of RR-Chains
In a spherical four-bar a point of the coupler revolute joint moves
on a circle.
In Fig. 2 this is shown for the point M. The point M
is bound to this circle.
can say that point M is constrained to be on two spheres. One is the
unit sphere κ0 the other is a sphere κ centered at piercing point M0 of
the base the revolute joint with the unit sphere and radius r = MM0.
Let the vector of the ﬁxed revolute axis be vf = (A, B, C)T and the
corresponding vector of the moving revolute axis in the coupler system
be vm = (a, b, c)T . The endpoints of these vectors will be M0 resp. M
when we have A2 + B2 + C2 = 1 or a2 + b2 + c2 = 1. The path of M is
now modelled as the intersection curve of the two spheres:
κ0 : X2
1 + X2
2 + X2
3 −X2
0 = 0
κ : X2
1 + X2
2 + X2
3 −2AX1X0 −2BX2X0 −2CX3X0 + RX2
0 = 0. (4)
with R = A2 + B2 + C2 −r2, where r is the radius of the sphere and
A, B, C are the coordinates of the center. Xi are the coordinates of
the moving pivot in the ﬁxed system and can be computed via Eq. 1.
Substituting X = (X0, X1, X2, X3)T from Eq. 1 into Eq. 4 yields after
factorization:
(x2
1 + x2
0 + x2
3 + x2
2)(−2Ccx2
3 −2Aax2
0 −2Ccx2
0 −4Abx0x3 + 4Acx0x2
+4Bax0x3 −4Bcx3x2 −4Cax0x2 −4Cbx3x2 + a2x2
0 + a2x2
3 + a2x2
2
K. Brunnthaler et al.
Four-bar and sphere.
When we want to model this constraint we
380

b2x2
2 + c2x2
3 + b2x2
0 + b2x2
3 + c2x2
0 + c2x2
2 + x2
1c2 + x2
1a2 + x2
1b2
+Rx2
0 + Rx2
3 + Rx2
2 + x2
1R + 2Bbx2
3 + 2Ccx2
2 + 2Aax2
3 + 2Aax2
2 −2Bbx2
0
−2Bbx2
2 + 2x2
1Cc −2x2
1Aa + 2x2
1Bb −4x1Bcx0 + 4x1Cbx0 −4x1Abx2
−4x1Bax2 −4x1Acx3 −4x1Cax3) = 0.
This equation can be simpliﬁed using the normalizing condition x2
0 +
x2
1 + x2
2 + x2
3 = 1:
SCS : 4Acx0x2 −4Abx0x3 + 4Bax0x3 −4Bcx3x2 −4Cax0x2 −4Cbx3x2
−2Aa −2Bb −2Cc + 4Bbx2
3 + 4Ccx2
2 + 4Aax2
3 + 4Aax2
2 + 4x2
1Cc
+4x2
1Bb −4x1Bcx0 + 4x1Cbx0 −4x1Abx2 −4x1Bax2 −4x1Acx3
−4x1Cax3 + B2 + A2 + C2 + a2 + b2 + c2 −r2 = 0.
(5)
SCS is a quadratic surface (a hyperboloid) in P 3 and can be conve-
niently used for the analysis of spherical four-bar mechanisms following
the process demonstrated in Bottema and Roth, 1979 for planar four-bar
mechanisms. The four-bar motion is mapped to the intersection curve
of two hyperboloids in the image space and can easily be investigated
using the properties of the image space curve.
For the synthesis we have to adapt a diﬀerent point of view. In the
synthesis some positions of a moving system are given and a mechanism
has to be synthesized. Therefore in Eq. 2 xi are known coeﬃcients and
A, B, C, a, b, c, r are unknowns. Changing the point of view we have
now a seven dimensional design space DS having the coordinates A, B,
C, a, b, c, r and Eq. 2 is again a quadratic surface but now in the seven
dimensional design space. This surface is called design constraint surface
DCS and has the remarkable structure:
DCS :
wT
⎛
⎝
I
−2B
0
−2B
I
0
0T
0T
−1
⎞
⎠w = 0
(6)
where the coordinates of DS are assembled to a vector w = (A, B, C, a, b,
c, r)T , I is the three dimensional unit matrix, B is the right lower 3 × 3-
matrix in matrix A (Eq. 1) and 0 is a 3-dimensional zero vector. From
this representation we see immediately that the squared coordinates of
DCS are free of the position parameters xi. This will be crucial in the
synthesis algorithm below.
3.2
Synthesis Algorithm
Given are ﬁve precision points P1, P2, P3, P4 and P5 ∈P 3
s
ponding to ﬁve orientations of a coordinate system. The goal is to
Synthesis of Spherical Four-Bar Mechanisms
, corre -
381
+

compute the design parameters A, B, C, a, b, c, r of the spherical mecha-
nism that guides the coupler system through these orientations. It is evi-
dent from the section before that the ﬁve precision point yield ﬁve design
constraint equations DCSi, i = 1, . . . , 5. Furthermore we have two nor-
malizing equations N1 : A2 + B2 + C2 −1 = 0, N2 : a2 + b2 + c2 −1 = 0.
DCSi and Ni constitute a system of seven nonlinear equations to solve
the synthesis problem. Ni are free of position parameters, therefore they
will be used at the very end of the the synthesis algorithm to normalize
the solution vectors.
Without loss of generality we can assume that the ﬁxed system Σ0
coincides with one of the ﬁve given orientations. Otherwise there exists
a unique Euclidean transformation, which does not change the design of
the mechanism, to obtain this situation. Thus, the image space point,
which represents the identity
(x0 : x1 : x2 : x3) = (1 : 0 : 0 : 0)
(7)
has to be on one design constraint manifold:
DCS1 := −2Bb−2Cc−2Aa+A2 +C2 +B2 +a2 +b2 +c2 −r2 = 0. (8)
Now four simple equations are built by subtracting DCS1 from the other
four constraint equations:
M1j = DCSj −DCS1,
j = 2, . . . 5.
The four diﬀerence equations are bilinear in the unknowns A, B, C, a,
b, c and do not contain r. Note that at least one of the unknowns in
(A, B, C) and (a, b, c) has to be non zero. Let us assume that C and
c are nonzero. Therefore we can set for the moment C = 1, c = 1.
We emphasize that this is no restriction of generality. Now we have
four simple bilinear equations M1j. Two of these equations, say M1,2
and M1,3 are used to solve linearly for two of the unknowns, say a, b.
The solutions are substituted into M1,4 and M1,5. This yields two cubic
equations C1, C2. The resultant of C1, C2 with respect to one of the
remaining unknowns, say B yields a univariate polynomial Q9 of degree
nine in the unknown A. Q9 factors into the solution polynomial Q6
of degree six and in three linear factors. The linear factors are not
solution of the system because they would cause the determinant of
the linear system to vanish. This proposition can be proven easily by
computing the resultant of the determinant polynomial of the linear
system (M1,2, M1,3) and e.g. C1. The linear factors are contained in
the ideal spanned by these two equations. Therefore they have to be
cancelled.
K. Brunnthaler et al.
382

Solving Q6 for A yields either 0, 2, 4 or 6 real numerical solutions. Back
substitution gives the other unknowns. The ﬁnal step of the algorithm
uses both equations Ni to normalize the solution vector.
Remark: The geometric preprocessing and the simple structure of
the resulting equations allows a solution of this synthesis problem com-
pletely general, without specifying the position parameters. This is to
the best of the author’s knowledge for the ﬁrst time that the ﬁnal uni-
variate polynomial of the spherical four-bar synthesis problem could be
computed without specifying the input parameters.
4.
Numerical Examples
We start with ﬁve points P1, P2, P3, P4, P5 ∈P 3; these points corre-
spond to ﬁve arrays of Euler-parameters which represent the ﬁve given
orientations:
x0
x1
x2
x3
Pose1
1
0
0
0
Pose2
0.37721
0.82336
0.38967
0.16722
Pose3
0.0078934
0.041131
0.085164
0.99549
Pose4
0.039457
0.77456
0.60494
0.18041
Pose5
0.30301
0.36492
0.85697
0.20157
Table 1.
Input data for the example
These input data yield six real RR-chains. The input data are plugged
into the algorithm above and the resulting centers M0 in the ﬁxed sys-
tem and M in the moving system are displayed below. vf and vm are
the position vectors of the points M0 and M in the ﬁxed resp. moving
system.
vf[1] =
0
@
0.216419
−0.188593
0.957912
1
A, vf[2] =
0
@
0.380468
0.064814
0.922520
1
A, vf[3] =
0
@
0.254798
0.644619
0.720794
1
A,
vm[1] =
0
@
−0.711602
0.697874
0.081202
1
A, vm[2] =
0
@
0.054261
−0.996977
0.055603
1
A, vm[3] =
0
@
0.900242
0.435383
0.002536
1
A,
vf[4] =
0
@
0.136474
−0.909345
0.393022
1
A, vf[5] =
0
@
0.861340
−0.443225
0.248284
1
A, vf[6] =
0
@
0.791447
−0.581484
0.188383
1
A,
vm[4] =
0
@
0.349442
−0.144163
0.925801
1
A, vm[5] =
0
@
0.323069
−0.589944
0.739995
1
A, vm[6] =
0
@
0.242377
0.197065
0.949957
1
A.
5.
Conclusion
Using spherical kinematic mapping a new method for the synthesis
of spherical four-bar mechanisms was presented. It was found that the
Synthesis of Spherical Four-Bar Mechanisms
383
.
−
−
−
−
−

Figure 3.
Motion of the coordinate frame; one of the synthesized four-bar mecha-
constraint equation describing the design constraints is a quadric surface
in the seven dimensional design space of the synthesis problem. Because
of the resulting simple equations the problem could be solved completely
computed without specifying the input parameters. Furthermore this
approach allowed to ﬁnd an example with six real RR-chains that can
be assembled to 30 real spherical four-bar mechanisms.
References
Blaschke, W. (1960). Kinematik und Quaternionen. Mathematische Monographien.
Springer Verlag, Berlin.
Bodduluri, R. and McCarthy, J. (1992). Finite position synthesis using the image
curve of a spherical four-bar motion. Journal of Mechanical Design, 114:55–60.
Bottema, O. and Roth, B. (1979). Theoretical kinematics, volume 24 of North-Holland
Series in Applied Mathematics and Mechanics. North-Holland Publishing Com-
pany, Amsterdam, New York, Oxford.
Chiang, C. (1988). Kinematics of spherical mechanisms. Cambridge Univ. Pr., Cam-
bridge.
Dowler, H., Duﬀy, J., and Tesar, D. (1978). A generalised study of four and ﬁve
multiply separated positions in spherical kinematics-ii. Journal of Mechanism and
Machine Theory, 13:409–435.
Husty, M., Karger, A., Sachs, H., and Steinhilper, W. (1997). Kinematik und Robotik.
Springer-Verlag, Berlin, Heidelberg, New York.
Lin, C.-C. (1998). Complete solution of the ﬁve-position synthesis for spherical four-
bar mechanisms. Journal of Marine Science and Technology, 6(1):17–27.
McCarthy, J. (2000). Geometric Design of Linkages, volume 320 of Interdisciplinary
Applied Mathematics. Springer-Verlag, New York.
Roth, B. (1967). Finite-position theory applied to mechanism synthesis. Journal of
Applied Mechanics, 34:599–605. Transactions of the ASME, Series E.
K. Brunnthaler et al.
384
nisms; corresponding motion of a body.
general, i.e., the univariate polynomial governing the synthesis could be

SYNTHESIS OF 2-DOF SPHERICAL FULLY 
PARALLEL MECHANISMS 
Rocco Vertechy 
D EM, University of Bologna  
I
I
Viale Risorgimento, 2, 40136 Bologna, Italy 
rocco.vertechy@mail.ing.unibo.it 
Vincenzo Parenti-Castelli 
D EM, University of Bologna  
Viale Risorgimento, 2, 40136 Bologna, Italy 
Vincenzo.parenticastelli@mail.ing.unibo.it 
Abstract 
This paper deals with the synthesis of 2-dof spherical fully parallel 
mechanisms with legs of type US (U and S are for universal and spherical 
joints, respectively). First, two analytical methods derived from the 
literature are used to find the conditions for the legs to fit within the desired 
spherical relative motion between the base and the movable  platform of the 
mechanism. Then, these conditions are used to devise three families of 
mechanisms which comprise also over-constrained architectures. Finally, 
actuation issues and kinematic, workspace and singularity analyses are 
addressed.  
1.  
Introduction  
Spherical mechanisms are used for the orientation of bodies. High-
demanding applications, for instance in aerospace and automotive fields, 
require mechanisms which perform limited rotations about the axes of 
motion, but are very resistant and lightweight, have low encumbrance 
and desired stiffness characteristics. Closed chain architectures are well 
suited to devise mechanisms which match the aforementioned features.  
Two-dof spherical parallel mechanisms are used in pointing systems 
for mirrors and antennas, steering systems of vehicles and joints for 
biomimetic robots. In the literature, 2-dof spherical parallel mechanisms 
Dunlop and Johnes, 1999, Wiitala and Stanisic, 2000, Di Gregorio, 2002, 
Bauer, 2002, Carricato and Parenti-Castelli, 2004, Gogu, 2005. 
This paper deals with the synthesis of 2-dof spherical fully parallel 
mechanisms with legs of US-type (US-PM for short), i.e. closed chains 
have been proposed by Baumann et al., 1997, Gosselin and Caron, 1998, 
© 2006 Springer. Printed in the Netherlands.
385
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 385–394.
Keywords: 
Parallel manipulators, Spherical motion, Over-constrained mechanisms  

which comprise, regardless of how their actuation is performed, a fixed 
base and a moving platform connected to each other through binary links 
of constant length and of US-type (U and S are for universal and 
spherical joint, respectively). From the mathematical standpoint, this 
study is related to the Shönflies problem, Shönflies, 1886; to the 
spherical motion problem, Bricard, 1906, and Borel, 1908; and to the 
study of architecturally singular and shaky UPS parallel manipulators, 
Ma and Angeles, 1992, Husty and Zsombor-Murray, 1994, Karger and 
Husty, 1998, Roshel and Mick, 1998, Kong, 1998, Husty and Karger, 
2002, and Wohlhart, 2003. 
In particular, by means of two analytical methods derived from the 
literature, we show that only two types of US-legs exist which fit within 
the desired spherical motion between the mechanism base and platform. 
Then, three families of mechanisms, which comprise over-constrained 
mechanisms too, are derived by properly combining a number of these 
legs. Finally, we address actuation issues and kinematic, workspace and 
singularity analyses. 
2.  
Problem Definition and Methods 
The synthesis of a spherical US-PM falls under the body-guidance 
problems. Indeed, the matter at hand amounts to finding the lengths of 
the US-legs and the locations of the U and S joint centers on the platform 
and on the base so that the assembly of a number of legs fits within the 
desired relative spherical motion of the platform and the base. 
To this end, two analytical methods can be used: 
x Method M1 (adaptation of the procedure by Karger and Husty, 1998): it 
is based on the closure equations of the mechanism. Upon expression of 
the closure equations as a function of the parameters used to describe 
the desired motion, the synthesis problem amounts to finding the 
locations of the U and S joint centers, on the base and on the platform, 
of a set of US-legs, with unknown and constant lengths, whose axes 
(defined by the centers of the U and S joints) belong to an n-system of 
lines and which satisfy the closure equations for every set of given 
values of the motion parameters. 
x Method M2 (adaptation of the procedure by Wohlhart, 2003): it is based 
on the virtual work principle. By considering the expressions of the 
velocity vectors of the attachment points of the US-legs on the moving 
platform as functions of the motion parameters and their first time 
derivatives, the synthesis problem amounts to finding the locations of 
the U and S joint centers, on the base and on the platform, of a set of 
US-legs, with unknown and constant lengths, whose axes belong to an 
386
R. Vertechy and V. Parenti-Castelli 

n-system of lines which are orthogonal to the aforementioned velocity 
vectors for every set of given values of the motion parameters and their 
derivatives. 
3.  
Synthesis of 2-dof Spherical US-PM  
In this section, the methods mentioned in Section 2 are applied to the 
synthesis of 2-dof spherical US-PM. First, a standard parameterization of 
the desired spherical motion is introduced. Then, methods M1 and M2 
are applied to find the conditions for the US-legs to fit within the desired 
spherical relative motion of the platform and the base. Finally, these 
conditions are used to devise the sought mechanisms. 
3.1  
Definition and Parameterization of the Motion  
Referring to Fig. 1: frame of reference S0=^O; i0, j0, k0`, with origin O, 
and S1=^C; i1, j1, k1`, with origin C, are embedded in the base and in the 
platform, respectively. Here, i0, j0, k0 are the unit vectors of the axes X, Y, Z 
of the system S0 and i1, j1, k1 are the unit vectors of the axes x, y, z of the 
system S1. Point C is the center of the relative spherical motion between 
the base and the platform, i.e. between S0 and S1. Axis Z of system S1 is 
taken from O to C. 
We consider a 2-dof spherical motion of the platform with respect to 
the base defined by the two following rotations: a rotation D about Z-axis 
of S0 and a rotation E about x-axis of S1 (i.e. rotations about unit vector k0 
and i1, respectively). The 3 x 3 rotation matrix R from S1 to S0 is 
 
c
s c
s s
s
c c
c s
0
s
c
D
D
E
D
E
D
D
E
D
E
E
E
ª
º

«
»
 

«
»
«
»
¬
¼
R
, 
(1) 
where cD   cosD, sD   sinD, cE   cosE and sE   sinE. Matrix R transforms 
vector components from S1 to S0. 
 
387
Figure 1.    Base, platform and axes of rotation. 
Synthesis of 2-DOF Spherical Fully Parallel Mechanisms 

3.2 
Synthesis Procedure 
The synthesis of a US-PM amounts to finding the location of the U and 
S joints on the base and on the platform respectively, and the lengths of 
the connecting legs. That is, if for each leg k, we introduce the column 
array of components pk   >pk; qk; rk@, with respect to S1, of the point Pk which 
is the center of either the U or the S joint on the platform, the column 
array of components Bk   >Ak; Bk; Ck@, with respect to a frame parallel to S0 
but centered in C, of the point Bk which is the center of either the S joint 
or the U joint on the base, and the length lk = _Pk  Bk_ of the connecting 
leg between Pk and Bk, we have to search for N unknown arrays of 
geometric parameters, i.e. Qk   > pk; Bk; lk @ for k   1,...,N. Use of the method 
M1 or M2 makes it possible to find the conditions for Qk so that the leg 
PkBk fits within the desired 2-dof spherical motion between platform and 
base. 
Method M1: Assuming the description and the parameterization of the 
orientation introduced in Section 3.1, the length of the k-th US-leg is 
given by 
 
P
B
k
k
k
k
k
k
l  
 

 

R
l
p
B , 
(2) 
which, according to Eq. 1 is a function of  the motion parameters D and E. 
However, for the k-th US-leg to comply within the desired motion of the 
platform, the length lk must not depend on D and E. This means that if 
one considers the expression 
 


2
2
c
s c
s s
s
c c
c s
2
,
s
c
k
k
k
k
k
k
k
k
k
k
k
k
k
p
q
r
A
l
p
q
r
B
f
q
r
C
D
D
E
D
E
D
D
E
D
E
E
E
D E
ª
º



«
»
 
 



 
«
»
«
»


¬
¼
l
,  
(3) 
where 
 
,  
(4) 


2
2
2
2
2
2
c
s c
s s
s
c c
,
c s
s
c
k
k
k
k
k k
k
k
k
k
k k
k
k
k k
k
k
k
k
k
k
A p
A q
A r
B p
B q
f
B r
C q
C r
p
q
r
A
B
C
D
D
E
D
E
D
D
E
D
E
E
E
D E






·
§
 
¸
¨¨
¸









©
¹
all the coefficients in cD, sD, cE and sE of the polynomial f D,E must 
vanish, and the length of the k-th leg must become 
 
2
2
2
2
2
2
k
k
k
k
k
k
l
p
q
r
A
B
C
 





k .  
(5) 
Vanishing of the coefficients of Eq. 4 leads to the following conditions 
 
0
k
k
A p  
, 
0
k
k
A q  
, 
0
k k
A r  
, 
0
k
k
B p  ,  
(6.1) 
 
0
k
k
B q  
, 
0
k k
B r  
, 
0
k
k
C q  
, 
0
k k
C r  ,  
(6.2) 
to be satisfied simultaneously for each leg PkBk. 
R. Vertechy and V. Parenti-Castelli 
388

It turns out that the only non trivial solutions, i.e. lk z 0, are obtained 
for the following two sets of parameters 
 
^
`
1
2
2
2
;
;
;
0;
0;
0;
i
i
i
i
i
i
i
i
i
i
i
A
B
C p
q
r
l
A
B
C
 


 
 
 
 


Q
,  
(7) 
 
^
`
2
2
2
0;
0;
;
;
0;
0;
j
j
j
j
j
j
j
j
j
j
A
B
C
p q
r
l
p
C
 
 
 


 
 
 

Q
.  
(8) 
Method M2: Since for a general motion of the US-PM the parameters 
D and E are functions of time, based on the time derivative of the 
equation 
 
c
s c
s s
s
c c
c s
s
c
k
k
k
k
k
k
k
k
k
k
k
k
k
k
p
q
r
A
p
q
r
B
q
r
C
D
D
E
D
E
D
D
E
D
E
E
E
ª
º



«
»
 

 



«
»
«
»


¬
¼
R
l
p
B
,  
(9) 
the relative velocity vector vk, of point Pk and point Bk, is given by 
 
s
c c
c s
s s
s c
c
s c
s s
c s
c c
0
c
k
k
k
k
k
k
k
k
k
k
k
k
p
q
r
q
r
p
q
r
q
r
q
r
D
D
E
D
E
D
E
D
E
D
D
E
D
E
D
E
D
E
E
D
Es
D
E
ª
º




ª
º
«
»
«
»
 


 

«
»
«
»
«
»
«
»

¬
¼
¬
¼
v


,  
(10) 
where D  and E  are the first time derivatives of the motion parameters 
D and E, respectively. Since the legs PkBk have constant length lk, it must 
hold that, during the motion, the components of the velocity vk in the 
direction of the leg axis must be zero, i.e. 
 




,
,
k
k
g
h
D E D
D E E
0

 

v
l


 
s
,  
(11) 
where 
 


,
s
c c
c s
c
s c
s
k
k
k
k
k
k
k
k
k
k
k
k
g
p A
q A
r A
p B
q B
r B
D
D
E
D
E
D
D
E
D
E
D E  





,  (12) 
 


,
c s
c c
s s
s c
c
k
k
k
k
k
k
k
k
k
k
k
k
h
q B
r B
q A
r A
q C
r C s
D
E
D
E
D
E
D
E
E
D E  





E.  (13) 
Since this condition must hold for every configuration and motion of the 
platform (that is it should not depend on D, E, D  and E ), all the 
coefficients in cD, sD, cE and sE of the two polynomials g D,E and h D,E 
must vanish.  
Vanishing of the coefficients of Eqs. 12-13 leads to the same conditions 
expressed by Eq. 6 and, therefore, to the non-trivial solutions 
represented by Eqs. 7-8. 
That is, legs characterized by the set of parameters 1
i  (type-1) and 
Q
2
j
Q  (type-2) are the only ones which comply with the desired 2-dof 
spherical motion.  
In Section 3.3 we will show that a feasible mechanism requires both 
types of legs. 
389
Synthesis of 2-DOF Spherical Fully Parallel Mechanisms 

3.3  
Generation of Mechanisms  
Equations 7-8 provide the geometric conditions for legs of US-type to 
fit within the desired spherical motion between platform and base. The 
conditions identify two types of legs. Legs of type-1 have one joint located 
at point C in the platform and the other joint located anywhere in the 
base. Legs of type-2 have the joint in the based located on kk0 axis and the 
joint in the platform located on ii1 axis. 
 Generation of mechanisms amounts to combining a proper number I 
of legs of type-1 and a proper number J of legs of type-2. Of course, the 
choice of I and J clearly affects the mechanism architecture and its 
feasibility. In particular, certain conditions on I and J must be satisfied. 
First, in order for the mechanism to have 2-dof, the axes of the legs in 
the set ^ 1
1
2
2
1
1
,...,
,
,...,
I
J
Q
Q
Q
Q ` must belong to a linear variety of lines 
with rank   4 (Merlet, 1989), usually referred to as linear line 
congruence. Therefore, at least four legs with linear independent axes 
are needed, i.e. 
. Here, the axis of the k-th leg is defined as the 
line through point P
4
I
J

t
k to point Bk. 
Second, since the legs (of type-1) in the set ^ 1
1
1,...,
I
Q
Q ` pass through 
the common point C, i.e. the center of the reference frame 
1, while the 
legs (of type-2) in the set ^
S
2
2
1,...,
J
Q
Q ` lie in the plane defined by the 
vectors k0 and i1, the axes of the legs within each type form, at most, a 
linear variety of lines with rank   3 (Merlet, 1989). Indeed, the axes of 
the legs within the family of type-1 generate at most a bundle of lines, 
while the axes of the legs within the family of type-2 generate at most a 
plane of lines. Therefore, in order for the set of geometric parameters  
^ 1
1
2
2
1
1
,...,
,
,...,
I
J
Q
Q
Q
Q ` to define a linear variety with rank   4, at least 
one leg for each type is needed, i.e. 
1
I t  and 
. 
1
J t
That is, in a feasible 2-dof spherical fully parallel mechanism with legs 
of US-type, the axes of all the legs must define a degenerate congruence, 
i.e. the variety of lines which lie in the plane defined by unit vectors k0 
and i1 or pass through the point C of that plane. 
In practice, depending on the varieties of lines spanned by the axes of 
the legs within a type, three families of mechanism architectures can be 
identified: 
x Family-1 (Fig. 2): The axes of the legs in the set ^ 1
1
1
,...,
I
Q
Q
,...,
` define a 
linear variety with rank   1, i.e. a single line passing through C but 
with direction different to k0, and the axes of the legs in the set 
^
1
2
2
J
Q
Q
,...,
` define a linear variety of lines with rank   3, i.e. a plane of 
lines defined by k0 and i1.  
x Family-2 (Fig. 3): The axes of the legs in the set ^ 1
1
1
I
Q
Q ` define a 
linear variety with rank   2, i.e. a planar pencil of lines with center in 
R. Vertechy and V. Parenti-Castelli 
390

C but which does not contain the line through k0, and the axes of the 
legs in the set ^
1
2
2
,...,
J
Q
Q
,...,
` define a linear variety of lines with rank   
2, i.e. a planar pencil of lines in the plane defined by k0 and i1.  
x Family-3 (Fig. 4): The axes of the legs in the set ^ 1
1
1
I
Q
Q
,...,
` defines a 
linear variety of lines with rank   3, i.e. a bundle of lines centered in C, 
and the axes of the legs in the set ^
1
2
2
J
Q
Q ` define a linear variety of 
lines with rank   1, i.e. a single line in the plane defined by the unit 
vectors k0 and i1 but which does not pass through C. 
 
Figures 2-4 depicted the basic (non-over-constrained) mechanisms 
which are the generators of the three families. For convenience, in the 
figures, both U and S joints are represented by circles.  
Moreover, addition of legs of type-1 and/or of type-2 to such basic US-
PMs does not alter the mechanism kinematics but renders the systems 
redundant and with self-motion.  
Examples of over-constrained US-PM with five and six US-legs are 
depicted in Fig. 5. For ease of understanding, the redundant legs are 
drawn in long-dash-dot lines. Note that over-constrained architectures 
have several advantages with respect to the basic ones. Indeed, the 
former make it possible to augment the mechanism stiffness-to-weight 
 
 (a) 
             
 (b) 
391
   Figure 2.     Family-1. 
Figure 3.     Family-2. 
   Figure 4.     Family-3. 
  Figure 5.     Over-constrained mechanisms. 
Synthesis of 2-DOF Spherical Fully Parallel Mechanisms 

and -to-encumbrance ratios, the mechanism strength-to-weight and -to-
encumbrance ratios, allow the mechanism to be preloaded so as to reduce 
system backlash, and allow the system to be built through simpler 
elements such as rafters and wireropes. As an example, the mechanism 
depicted in Fig. 5.a can be made by means of one rafter (leg drawn in 
long-dash-dot line) and by four wireropes (legs drawn in solid line). 
Besides, over-constrained architectures further limit the range of motion 
of the mechanism and render its assemblage more complex. 
From a kinematic standpoint, note that many of the U and S joints of 
the mechanisms depicted in Figs. 2-5 may, in practice, be suppressed 
and/or replaced by simpler pairs. Indeed, joints which are not placed 
along the axes k0 and i1 are idle; the joints which are placed either on k0 
or i1 work as simpler revolute joint with rotation axis along k0 or i1, 
respectively; and the joints which are placed on both k0 and i1 work as U 
joints with rotation axes along k0 and i1. However, from the kinetostatic 
standpoint, suppression of the idle degrees of freedom of the U and S 
joints makes the legs to bear consistent flexional loads which may cause 
the mechanism to be oversized. Replacement of the idle pairs with elastic 
hinges introduces much smaller flectional loads and, therefore, may be 
the most effective way to implement the mechanism. 
4  
Actuation  
The mechanisms presented in Section 3.3 are inherently suited to be 
actuated in-parallel by motors with linear motion. In practice, the 
addition of two UPS-legs (P stands for actuated prismatic P joint), each 
connecting the base and the platform by means of a U joint and an S 
joint, provides a very simple means to fully control the mechanism 
throughout the desired range of motion. 
 
R. Vertechy and V. Parenti-Castelli 
392
Figure 6.    Actuated mechanism of family-3. 
.

decouple the motion about the axes k0 and i1. Indeed, since a force is not 
able to generate moments about the lines it crosses, it is clear that every 
UPS-leg whose connecting joint on the base is centered in a point Bk, 
which lies on k0, makes it possible to control rotations about i1 only, while 
every UPS-leg whose connecting joint on the platform is centered in a 
point Pk, which lays on i1, makes it possible to control rotations about k0 
only. 
A decoupled actuated manipulator obtained from a US-PM of family-3 
is represented in Fig. 6 (UPS-legs are drawn as telescopic legs). The 
actuated UPS-leg, P5B5, controls the rotation about the axis k0 only, while 
the actuated UPS-leg, P6B6, controls the rotation about the axis i1 only. 
Note that the manipulator obtained from the mechanisms of family-3 
coincides with the fully parallel spherical wrist with the P actuator on 
the leg P4B4 locked.
5  
Kinematic, Workspace and Singularity Analyses  
Due to the decoupled actuation of the rotations of the mechanism 
about the k0 and i1 axes, the direct kinematic, workspace and singularity 
analyses are very straightforward. Indeed, these problems are reduced to 
the study of two spatial Whitworth’s quick-return mechanisms. Solutions 
of these problems can be accomplished as in Di Gregorio and Sinatra, 
2002, Di Gregorio, 2002, and Carricato and Parenti-Castelli, 2004. 
6.  
Conclusions  
This paper presented the synthesis of 2-dof spherical fully parallel 
mechanisms. In particular, by means of two analytical methods derived 
from the literature, three families of 2-dof spherical mechanisms have 
analyses have been addressed which show that such mechanisms are 
very easy to analyze and control. 
7.  
Acknowledgements  
Support of this work by the Advanced Concept Team (ACT) of 
The collaboration and discussions with Dr. Carlo Menon of the ACT 
are acknowledged and appreciated. 
 
393
In practice,  proper placements  of  the  actuators  make  it  possible to  
been synthesized. These families comprise over-constrained mecha- 
nisms too. Actuation issues and kinematic, workspace and singularity 
European Space Agency (ESA) under ESTEC/Contract No. 18911/05/
NL/MV is gratefully acknowledged.  
Synthesis of 2-DOF Spherical Fully Parallel Mechanisms 
.

References 
Shönflies, A. (1886), Geometrie der Bewegung in Sinthetischer Darstellung, 
Lipzieg.  
Bricard, R. (1906), Memoire sur les Displacements a Trajectoires Spheriques, 
Borel, E. (1908), Memoire sur les Displacements a Trajectories Spheriques, 
Grassmann Geometry, The Int. J. of Robotic  Resear h, vol. 8, pp. 45-56. 
s
c
s
c
s
t
o
c
Ma, O. and Angeles J. (1992), Architecture Singularities of Parallel 
Manipulators, Int. Journal of Robotic  and Automation, vol. 7, pp. 23-29. 
Innocenti, C.  and Parenti-Castelli, V. (1993), Echelon Form Solution of Direct 
Kinematics for the General Fully-Parallel Spherical Wrist, Mechanism and 
Husty, M.L. and Zsombor-Murray, P. (1994), A Special Type of Singular Stewart 
Gough Platform, Advances in Robots Kinematics, pp. 439-449. 
Baumann, R., Maeder, W. Glauser, D. and Clavel, R. (1997), The PantoScope: a Spherical 
Remote-Center-of-Motion Parallel Manipulator for Force Reflexion, Proc. IEEE Int. Conf. 
Robotics and Automation, pp. 718-723. 
Gosselin, C.M. and Caron F. (1998), Two Degree-Of-Freedom Spherical Orienting 
Device, US Patent #5,966,991. 
Karger, A. and Husty, M. (1998), Classification of all Self-Motions of the Original 
Stewart-Gough Platform, Computer-Aided Design, vol. 30, pp. 205-215. 
Roshel O. and Mick S. (1998), Charachterization of Architecturally Shaky 
Platforms, Advances in Robots Kinematics, pp. 465-474.  
Kong X. (1998), Generation of Singular 6-SPS Parallel Manipulators, Proc. of 
1998 ASME Design Techni al Conferences, 98DETC/MECH-5952. 
Dunlop, G.R. and Johnes, T.P. (1999), Position Analysis of a two DOF Parallel 
Mechanism – the Canterbury Tracker, Mechanism and Machine Theory, vol. 
34, pp. 599-614. 
Wiitala, J.M. and Stanisic, M.M. (2000), Design of an Overconstrained Dextrous Spherical 
Wrist, Journal of Mechanical Design, vol. 122, pp. 347-353. 
Bauer, J.R. (2002), Kinematics and Dynamics of a Double-Gimballed Control Moment 
Gyroscope, Mechanism and Machine Theory, vol. 37, pp. 1513-1529. 
Husty, M.L. and Karger, A. (2002), Self Motions of the Stewart-Gough-Platforms, 
an overview, Proceedings of the Workshop on Fundamental Issues and Future 
Research Directions for Parallel Mechanism  and Manipula ors, Quebec, 
Canada, pp. 131-141. 
Di Gregorio, R. and Sinatra, R. (2002), Singulariy Curves of a Parallel Pointing 
System, MECCANICA, vol. 37, pp. 255-268. 
Di Gregorio, R. (2002), Analytic Determination of Workspace and Singularities in 
a Parallel Pointing System, Journal of Robotics Systems, vol. 18, pp. 37-43. 
Wohlhart, K. (2003), Mobile 6-SPS Parallel Manipulators, J urnal of Robotics 
Systems, vol. 20, pp. 509-516. 
Carricato, M. and Parenti-Castelli, V. (2004), A Novel Fully Decoupled Two-
Degrees-of-Freedom Parallel Wrist, The Int. J. of Robotics Resear h, vol. 23, 
pp. 661-667. 
Gogu, G. (2005), Fully-Isotropic Over-Constrained Parallel Wrists with Two Degrees of 
Freedom, Proc. IEEE Int. Conf. Robotics and Automation, pp. 4025-4030. 
R. Vertechy and V. Parenti-Castelli 
394
Journal de l’Ecole Polytechnique, vol. 11, no. 2, pp. 1-96. 
Merlet, J.P. (1989), Singular Configurations of Parallel Manipulators and 
Memoires Presentes par Divers Savants, Paris, vol. 33, no. 2, pp. 1-128. 
Machine Theory, vol. 28, pp. 553 561. 
-

CONSTRAINT SYNTHESIS
FOR PLANAR
-R ROBOTS
Gim Song Soh
gsoh@uci.edu
J. Michael McCarthy
jmmccart@uci.edu
Robotics and Automation Laboratory
University of California, Irvine
Irvine, CA 92697
Abstract
In this paper, we control the joints of a planar nR chain mechanically
using RR dyads and obtain a one degree-of-freedom system that guides
the end-eﬀector smoothly through ﬁve speciﬁed task positions. To solve
this problem, we specify the nR chain and determine it conﬁgurations
when its end-eﬀector is positioned in each of the ﬁve task positions. This
yields a set of RR chain synthesis problems that constrain alternating
links in a way that ensures that the relative joint angles required by
the task positions are attained. In general, we cannot guaranteed that
the resulting assembly will move smoothly between the task positions
without jamming, however we present a strategy based on enforcing
symmetry of the nR chain that yields useful solutions.
Examples of
constrained 3R, 4R, 5R and 6R are discussed. The procedure is general
and can be applied to arbitrarily long serial chains.
1.
Introduction
In this paper, we consider the addition of n-1 RR chains to a planar
nR serial chain robot in order to mechanically prescribe its movement
through ﬁve task positions.
In the case of a planar 3R robot this is
equivalent to the synthesis of a Watt I six-bar linkage. For a planar
4R, 5R and 6R serial chains, we obtain planar eight-bar, 10-bar and
12-bar linkages. In general, our synthesis results transform an n degree-
of-freedom nR chain into a single degree-of-freedom 2n-bar linkage that
has 3n −2 revolute joints.
Our design equations only ensure that the solution linkage can be
assembled in each task position, not that it can move smoothly between
the positions. Therefore, it can happen that a resulting linkage has
task positions reachable from diﬀerent assemblies. This is known as a
circuit defect ?. A fundamental challenge in linkage synthesis is ﬁnding
© 2006 Springer. Printed in the Netherlands. 
395
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 395–402. 
N

solutions that have the task positions on the same single circuit. In what
follows, we present a synthesis strategy that yields successful constrained
nR chains that have the ﬁve task positions on the same circuit.
2.
Literature Review
This work is inspired by ?, who derived synthesis equations for planar
nR planar serial chains in which the n joints are constrained by a cable
drive. They obtained a “single degree-of-freedom coupled serial chain”
that they use to design an assistive device.
? formulated and solved the design equations for six-bar linkages, and
? extended this to eight-bar linkages. Our approach is simpler in that
we do not attempt to design the entire 2n-bar linkage, rather we assume
the nR serial chain is given, and use standard dyad synthesis theory to
solve for individual RR constraints, see ?.
Once a linkage has been designed, we analyze it to determine its con-
ﬁguration for given values of the input crank, in order to simulate its
movement. ? presents an analysis methodology for general planar link-
ages using complex number loop equations and the Dixon determinant.
However, the our synthesis approach yields linkages that are a series of
four-bar loops and are easily analyzed individually.
3.
Kinematics Equations of a Planar nR Chain
Let the conﬁguration of an nR serial chain be deﬁned by the coor-
dinates Ci = (xi, yi), i = 1, . . . , n of each of its revolute joints. The
distances ai,i+1 = |Ci+1 −Ci| deﬁned the lengths of each link. Attach a
frame Ai to each of these links so so its origin is located at Ci and its x
axis is directed toward Ci+1. The joints C1 and Cn are the attachments
to the base frame F = A1 and the moving frame M = An, respectively,
and we assume they are the origins of these frames. The joint angles θi
deﬁne the relative rotation about the joints Ci.
Introduce a world frame G and task frame H so the kinematics equa-
tions of the nR chain are given by
[D] = [G][Z(θ1)][X(a12)][Z(θ2)][X(a23)] . . . [X(an−1,n)[Z(θn)][H],
(1)
where [Z(θi)] and [X(ai,i+1)] are the 3×3 homogeneous transforms that
represent a rotation about the z-axis by θi, and a translation along the x-
axis by ai,i+1, repspectively. The transformation [G] deﬁnes the position
of the base of the chain relative to the world frame, and [H] locates the
task frame relative to the end-eﬀector frame. The matrix [D] deﬁnes the
coordinate transformation from the world frame G to the task frame H.
396
G.S. Soh and J.M. McCarthy

(12, 16)
(6, 7)
(8, 10)
(10, 13)
3R
4R
5R
6R
nR
(2n, 3n-2)
100R
(200, 298)
Design n-1 RR chains
Figure 1.
This shows the kinematic structure of mechanically constrained serial
chains. The linkage graph is on the left, which has each link as a node and each R
joint as an edge. The contracted graph on the right shows only links with three or
four edges as nodes. This shows that the structure extends to any length of nR robot.
Given ﬁve task positions [Tj], j = 1, . . . , 5 of the end-eﬀector of this
chain, we can solve the equations
[D] = [Tj],
j = 1, . . . , 5,
(2)
to determine the joint parameter vectors ⃗θj = (θ1,j, θ2,j, . . . , θn,j). Be-
cause there are three independent constraints in this equation, we have
free parameters when n > 3. In what follows, we show how to use these
free parameters to facilitate the design of mechanical constraints on the
joint movement so the end-eﬀector moves smoothly through the task
positions.
397
Constraint Synthesis for Planar N- R Robots
-

Figure 2.
This six-bar chain is obtained by designing two RR chains to constrain
the joint movement of a 3R robot, so its end-eﬀector passes through the ﬁve speciﬁed
positions.
4.
Synthesis of RR Constraints
Assume that we have solved the inverse kinematics problem that en-
sures our nR chain reaches the ﬁve speciﬁed task [Tj], j = 1, . . . , 5, which
means we know the ﬁve joint parameter vectors ⃗θj. From this we can
determine ﬁve positions of the link frame Ai+1 relative to the link frame
Ai−1.
The result is n-1 sets of ﬁve relative positions that we use to
synthesis an RR chain that connects link Ai+1 to Ai−1.
Let [Vk,j], j = 1, . . . , 5 denote the ﬁve positions of Ak+1 relative to
Ak−1. Then the coordinates of the moving pivot Pk attached to Ak+1
and the ﬁxed pivot Bk attached to Ak−1 must satisfy the equations,
([Vk,j]Pk −Bk) · ([Vk,j]Pk −Bk) = Rk,
j = 1, . . . , 5.
(3)
These are the well-known constraint equations for an RR chain, which
can be solved algebraically to determine as many as four solutions for
the coordinates of Pk and Bk. For the details of this solution, please
see ? and ?. It is useful to note that the existing RR chain CkCk+1
satisfy these design equations, which guarantees the presence of second
real solution.
G.S. Soh and J.M. McCarthy
398

The RR design equations allow us to constrain an nR chain to reach
ﬁve task positions. Figure ?? lists the planar linkages that this procedure
allows us to design. Notice that in each the chain is a sequence of four-
bar linkages extending from the base frame F to the moving frame M.
Furthermore, while the base and moving frames are binary links having
only two revolute joints, the links A1 and An−1 are ternary links, and
the remaining links are quaternary.
Figure 3.
This eight-bar chain is obtained by constraining the joints of a 4R serial
chain to pass through the same ﬁve speciﬁed task positions.
5.
Synthesis for Smooth Movement
In the design or serial chain robots it is convenient to have near-equal
length links to reduce the size of workspace holes. For this reason, we
assume that the link dimensions of our nR chain satisfy the relationship
a12 = a23 = . . . = an−1,n.
(4)
This reduces the speciﬁcation of the nR chain to the location of the base
joint C1 in G and the end-eﬀector joint Cn relative to task frame H.
If the serial chain has three joints, then the inverse kinematics equa-
tions are completely prescribed and the synthesis of two RR chains yields
the constrained serial chain. Figure ?? shows the results of this synthe-
sis. In this case, though we obtained a solution that passes smoothly
through the task positions, we are not able to guarantee that this will
occur.
399
Constraint Synthesis for Planar N- R Robots
-

Figure 4.
This 10-bar chain is obtained from a 5R that reaches the same ﬁve task
positions.
If the serial chain has n > 3 joints, then we impose a symmetry
condition
θ2 = θ3 = . . . = θn−1,
(5)
in order to obtain a unique solution to the inverse kinematics equations.
This causes the design equations for the RR constraints at the joints C2
through Cn−1 to degenerate to the multiple solutions identical to the
existing links of the nR chain. In this case the design equations have
four simultaneous roots.
In order to obtain useful RR constraints, we perturb the condition
(??), so these angles are close in value but not equal. The result is a
set of solutions to the design equations that are near the existing links.
While this process does not guarantee a solution that does not have a
circuit defect, we have been successful in ﬁnding 4R, 5R and 6R linkages
that move smoothly through the ﬁve task positions, see Figures ??, ??
and ??.
6.
Conﬁguration Analysis
In order to evaluate and animate the movement of these linkage sys-
tems we must analyze the system to determine its conﬁguration for each
value of the input angle θ1. Figure ?? shows that these systems consist
G.S. Soh and J.M. McCarthy
400

Figure 5.
This 12-bar chain is a mechanically constrained 6R chain that guides the
end-eﬀector through the same ﬁve task positions.
C1
C2
B1
P1
A2
B2
P2
C3
C4
B3
P3
K
A3
Cn-1
Cn
An-1
Bn-1
Pn-1
Pn-2
B4
θ1
Figure 6.
This shows our conventions for the analysis of a mechanically constrained
nR serial chain.
of a network of interconnected four-bar linkages.
entire system can be analyzed as a sequence of four-bar linkage analysis
problems.
We begin the analysis with the results of the inverse kinematics anal-
ysis of the nR chain at each of the ﬁve task positions. Our approach
uses the analysis procedure of 4 bar linkage from ?. We analyze each
of the n-1 4 bar linkages in the order of frame K, A2, A3, . . . , An−1.
401
This means that the
Constraint Synthesis for Planar N- R Robots
-

Starting from the ﬁrst four-bar linkage in frame K, we solve for P1 for a
given θ1. Then, we move to the second four-bar linkage in frame A2 and
solve for P2. Next, we move to the thrid four-bar linkage in frame A3
and solve for P3. The procedure continues until we conclude with the
n −1st four-bar linkage in frame An−1.
The result is a complete analysis of the mechanically constrained nR
serial chain.
7.
Conclusions
Our synthesis of a mechanically constrained nR chain yields a one
through ﬁve task positions. We set the size of each of the links of the
chain to the same value, and specify the coordinates of its attachment
to ground and to the end-eﬀector. The inverse kinematics of the nR
chain in each of the ﬁve task positions provides relative positions that
enable the computation of sequence of n −1 RR chains. These chains
combine with the nR chain back-bone to form a network of four-bar link-
ages which are easily analyzed to simulate the movement of the chain.
A strategy of perturbation of a singular solution has yielded linkage 4R,
5R and 6R linkage systems that have all of the task positions on the
same circuit.
References
anisms,” ASME Journal of Mechanical Design, 115(2):214-222.
Krovi, V., Ananthasuresh, G. K., and Kumar, V., 2002, “Kinematic and Kinetostatic
Synthesis of Planar Coupled Serial Chain Mechanisms,” ASME Journal of Me-
chanical Design, 124(2):301-312.
Positions,” Mechanism and Machine Theory, 22:411-419.
Subbian, T., and Flugrad, D. R., 1994, “6 and 7 Position Triad Synthesis using Con-
tinuation Methods,” Journal of Mechanical Design, 116(2):660-665.
Sandor, G. N., and Erdman, A. G., 1984, Advanced Mechanism Design: Analysis and
Synthesis, Vol. 2. Prentice-Hall, Englewood Cliﬀs, NJ.
Perez, A., and McCarthy, J. M., 2005, “Cliﬀord Algebra Exponentials and Planar
Linkage Synthesis Equations,” ASME Journal of Mechanical Design, 127(5):931-
940, September.
nant and a Complex Plane Formulation”, ASME Journal of Mechanical Design,
McCarthy, J. M., 2000, Geometric Design of Linkages, Springer-Verlag, New York.
G.S. Soh and J.M. McCarthy
402
degree-of-freedom system that guides the end-eﬀector of the chain smoothly
J. A.,
Mirth,
and
T. R.,
Chase,
1993, “Circuit Analysis of Watt Chain Six-Bar Mech-
Lin, C.-S., and Erdman, A. G., 1987, “Dimensional Synthesis of Planar Triads for Six
C. W.,
Wampler,
”
Solving the Kinematics of Planar Mechanisms by Dixon Determi-
123(3), pp. 382-387.

CALCULATING FORCE DISTRIBUTIONS
FOR REDUNDANTLY ACTUATED
TENDON-BASED STEWART PLATFORMS
Tobias Bruckmann, Andreas Pott and Manfred Hiller
Chair of Mechatronics
University Duisburg-Essen, Germany
{bruckmann,pott, hiller}@imech.de
Abstract
Completely and redundantly restraint tendon-based Stewart platforms
demand for a distribution of tendon forces to control the platform on a
given trajectory. Thus, position control has to be extended by a tendon
force controller which generates continuous and feasible force values.
The computation of such force distributions can be formulated as a
constrained optimization problem. Solving the problem is numerically
expensive and requires an algorithm which is capable to be integrated
into a realtime environment.
In this paper, diﬀerent algorithms for
tendon force distribution are proposed and investigated with respect to
their usability on a realtime system.
1.
Introduction
At the Chair of Mechatronics, the testbed for the n = 6 d.o.f. tendon-
based Steward-platforms Segesta (Seilgetriebene Stewart-Plattformen
in Theorie und Anwendung) has been developed during the past few
years. Presently, the Segesta teststand uses m = 7 tendons to move
the platform along desired trajectories (Hiller et al., 2005b). In a future
modiﬁed version of Segesta it is planned to add an eighth tendon.
The platform can be basically guided using position control in the do-
main of tendon lengths. Following a trajectory, intermediate poses for
every time step are calculated. For these points, the inverse kinemat-
ics delivers the corresponding tendon lengths. Since the actual tendon
lengths are available from sensors, feedback control is used to guide the
platform. This basic control concept provides satisfying results at low
velocities. For higher accelerations and velocities it was observed that
the platform begins to “wobble” due to slack tendons. To prevent slack-
ness and also to limit forces, tension has to be controlled within lower
and upper bounds. The calculation of a force distribution is theoret-
ically straight forward in the case of a manipulator with m = n + 1
tendons. In the case of m > n + 1, optimization is required, which is
always expensive in terms of computational time. For 6 d.o.f. systems,
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 403–412. 
403

a)
b)
Figure 1.
Segesta Testbed and Symbol Deﬁnitions for a General Tendon-Based
one cannot precalculate force distributes for all poses. Therefore, it is
required to determine force distributions online. The chosen algorithm
needs to be suitable with respect to calculation time and possibly fulﬁll
deterministic realtime requirements.
The paper is structured as follows: In chapter 2, a short description
of the kinematics and dynamics of Segesta is given. Methods for gen-
erating continuous tendon force distributions are discussed in chapter 3,
including examples. Finally, in chapter 4, the conclusions are drawn and
an outlook is given.
2.
Kinematics and Force Equilibrium
Segesta consists of two main components: a frame of aluminium
proﬁle bars which carries motors, winches as well as further components
like computers, measurement equipment etc. (ﬁg. 1a). The triangu-
lar shaped platform is connected to the winches by tendons. Segesta
is designed as an reconﬁgurable system by using modules which carry
winches and motors and which can be installed and removed easily. Due
to its lightweight structure, Segesta can generate high-dynamic mo-
tions (Hiller et al., 2005a).
Platform poses are calculated along a trajectory and for every step,
computation of the tendon lengths (inverse kinematics) is trivial com-
pared to the generally complicated forward kinematics. Segesta can
be described using the following vectors and coordinate frames, with
µ = 1, . . . , m (Fang, 2005):
Stewart-Platform.
404
T. Bruckmann et al.

The coordinate frame CB is the base frame, while CP is connected
to the platform (ﬁg. 1b).
The vectors bµ denote the positions of the winch points, repre-
sented by the points where tendons are led through small ceramic
eyes which are ﬁxed.
pµ are the platform-ﬁxed vectors to the connecting points
lµ denote the tendon vectors from the platform to the winches.
The forces in the tendons are described by fµ, where f P and τ P
denote all other applied forces and torques acting on the platform.
Since tendons can only transmit pulling forces, tensions must always
be greater than zero which leads to the requirement of at least m =
n + 1 tendons (where n is the number of d.o.f.’s and m the number of
tendons)when no external load is available to tighten the tendons. The
force equilibrium for the platform can be easily expressed as (Ming and
Higuchi, 1994, Verhoeven, 2003)

ν1
. . .
νm
p1 × ν1
· · ·
pm × νm

⎡
⎢⎣
f1
...
fm
⎤
⎥⎦+
 f p
τ p

= 0,
f > 0
(1)
with ν = lµ
|lµ| or in a more compact form as
ATf + w = 0,
f > 0.
(2)
3.
Force Generation
Since force control is necessary to guarantee a deﬁned tension distri-
bution, a method to calculate tendon forces must be provided. Because
we have force redundancy in the examined systems with m ≥n + 1
and thus at least an one-dimensional solution set for the force distrib-
utions belonging to a speciﬁc position, an optimal solution is desired.
The term “optimal” has to be used with respect to the technical appli-
cation (Verhoeven, 2003). In this paper, “optimal” means small forces,
but it is also possible to generate high forces (for higher eigenfrequency
and stiﬀness) or force distributions in between (for safety and robustness
against parameter changes). Beside minimum tendon forces (which can
be zero as smallest possible force) also maximum tendon force are of
great importance since their ratio deﬁnes the workspace boundaries. To
evaluate the proximity of a speciﬁc position of the platform to workspace
405
.
Calculating Force Distributions 

Figure 2.
Combined Force- and Position Control
boundaries, knowledge of the tendon forces is presumed. Obtaining a
solution from the optimization algorithm which exceeds the tendon force
boundaries means that the platform is outside the predeﬁned workspace.
So, the calculation of force distributions plays also an important role in
terms of reliability and safety. In practice, it is of great importance to
ﬁnd continuous solutions. Non-continuous tendon forces may consist of
acceptable solutions, but since those values are needed for control, they
would cause steps in motor torques which leads to vibrations and high
mechanical loads. Using both the results from the inverse kinematics
and the force optimization makes a combined position-force-control pos-
sible, as shown in ﬁg. 2. The position part delivers positioning precision
while the force controller is responsible for positive tensions and acts as
a kind of pilot control. Detailed concepts for tendon force control are
also proposed in (Oh and Agrawal, 2004).
3.1
Force Distribution
For tendon-based robots with m ≥n + 1, let r = m −n denote
the degree of redundancy. The tendon force distribution f has to be
generated with the m × r-dimensional kernel of AT and the pseudo
406
.
inverse A+T as follows
T. Bruckmann et al.

f = −A+Tw + H λ.
(3)
The limits for minimum tendon force fmin and maximum tendon force
fmax form a hypercube. The kernel (or nullspace) H of AT is deﬁned by
ATH = 0. All solutions for f can be represented by a r-dimensional
plane. If solutions exist, the cube and the plane intersect and form a
polyhedron which contains all acceptable solutions, i.e. solutions where
no tendon exceeds its minimum or maximum force limits.
The term
flsq = A+Tw is a least square solution, that lies somewhere on that
plane. It lies not necessarily within the cube which means that it is not
acceptable in this case. On the other hand, the term fkrn = H λ provides
the possibility to “move” the solution on the plane since it only tenses
or reliefs the tendons without violating the platform’s force equilibrium.
3.2
Completely Restrained Manipulator
In case of a Completely Restrained Parallel Manipulator (CRPM), i.e.
m = n + 1, the structure matrix AT has the dimension n × (n + 1). To
solve (3) with respect to f, a least square algorithm (pseudo inverse) is
used
f = −A+Tw
+
,)
*
flsq
+ hλ
+,)*
fkrn
,
(4)
where h is the m × 1-dimensional kernel of AT and λ is a scalar factor
(Verhoeven, 2003, Bruckmann et al., 2006). This means that we have
one d.o.f. to move on a straight line via choosing a suitable λ. Based on
this, a simple algorithm can be provided:
1 Calculate the structure matrix AT based on a given platform pose
and the kernel h of the structure matrix.
2 Get the least square solution flsq and the “force oﬀset” foffµ which
has to be added to each tendon, which exceeds its lower bounds in
the least squares solution foff = f min −flsq.
3 Compute the necessary kernel multiplication factors λµ for these
tendons to achieve the force oﬀset via kernel addition λµ =
foffµ
hµ .
4 Select the maximum multiplication factor λµmax.
5 Correct tendon forces using kernel h and λµmax.
6 Check if no tendon is exceeding its bounds. If at least one tendon
does, there is no solution.
407
Calculating Force Distributions 
.
.
.
.
.
.

The algorithm has been implemented using Ma a
a aBILE and LAPACK
routines. The function DGESVD (providing singular value decomposition,
SVD) was used to calculate the kernel and the function DGELSD (com-
putes the minimum-norm solution to a real linear least squares problem)
was chosen to get the least squares solution.
3.3
Redundantly Restrained Manipulator
In the case of a Redundantly Restrained Parallel Manipulator (RRPM)
we have m > n + 1 and the tendon force distribution has to be gener-
ated with the m × r-dimensional kernel of AT. The Segesta teststand
having eight drives is an example of this category.
This leads to a more complex optimization problem, since now there
are r > 1 redundant d.o.f.. Again, it is relatively easy to ﬁnd acceptable
solutions, but it needs some consideration to ﬁnd continuous solutions
along a trajectory. In the domain of optimization, continuity depends
on the cost function, which is given to the optimizer. Intuitive ideas like
choosing a maximum (inﬁnity) norm
∥v∥∞= max
1≤µ≤m |fµ|
(5)
result in non-continuous force distribution runs. A helpful choice is the
p-Norm
∥f∥p =
p
2
3
3
4
m
	
µ=1
fp
µ,
(6)
as proven by ( Verhoeven and Hiller, 2002). In the paper, p = 2 was
chosen due to common optimizer implementations, using quadratic cost
functions.
This leads to an optimization problem with r unbounded
parameters λα, 1 ≤α ≤r, and (2 · m) linear constraints and a quadratic
cost function. Thus, one obtains the following optimization problem
minimize
g(f) =
∥f∥2 =
2
3
3
4
m
	
µ=1
f2µ
(7)
s.t.
−∞≤λα ≤∞
(8)
Linear Constraints
fµoff ≤
m−n
	
α=1
Hµα λα ≤fµmax −fµlsq (9)
This formulation requires a two step process, ﬁrst calculating the kernel
H of the structure matrix and determining flsq. Then the optimization
is performed. An alternative idea is to use the optimizer with a diﬀerent
408
T. Bruckmann et al.

set of linear constraints. Having the structure matrix, it is also possible
to get constraints which are diﬀerent from the previous ones:
minimize
g(f) =
∥f∥2 =
2
3
3
4
m
	
µ=1
f2µ
(10)
s.t.
fµmin ≤fµ ≤fµmax
(11)
Linear Constraints
wµ = −
m
	
µ=1
AT
α,µ fµ
(12)
Although this alternative approach has to deal with m instead of r pa-
rameters, it was found to be faster in certain examples due to the good
initial values, which can be reused from the last time step.
3.4
Force Distribution using Interval Analysis
Interval analysis provides a powerful algorithm to solve constrained
global optimization problems (Hansen, 1992). This algorithm was suc-
cessfully used for the optimization of parallel kinematic machines e.g.
by Pott and Hiller, 2006. But the algorithm is also capable to deal with
the problem of force distribution given by (7)-(9). This approach clearly
makes use of the kernel H of the structure matrix, and thus, requires
to determine H before the optimization is carried out. Generally, in-
terval analysis can also deal with the problem given by (10)-(12), i.e.
more forces are sought and the constraints are equations instead of in-
equalities. Nevertheless, interval based optimization guarantees to ﬁnd
the optimum or to reliably report, that no such force distribution exists.
Furthermore, interval analysis naturally takes into account numerical
round oﬀerrors. For the usage in online control, it must be assured
that the force calculation can be performed within the cycle time. The
worst-case calculation time of the interval based optimization can be
determined but it is far beyond the required cycle time of the controller.
Filtering techniques like consistency tests and interval gradient methods
can drastically reduce the average calculation time but in general it is
diﬃcult to improve the worst case runtime. Thus, the interval analysis
based algorithm is used as reference for the calculation of the tendon
forces, where an iterative scheme is proposed for the online control.
3.5
Solution using Gradient-based Optimizers
For optimization, gradient-based optimizers are widely-used. For this
purpose, the NAG library oﬀers a variety of routines. The routine
nag_opt_lin_lsq (solves linearly constrained linear least-squares prob-
lems using gradients) was chosen to solve the described optimization
409
Calculating Force Distributions 

Figure 3.
Force Distribution For Eight Tendons.
problem. Since the solutions for f can be represented by a plane - or,
in case of the RRPM
a hyperplane, such gradient-based optimizers
ﬁt good to this kind of optimization task. Moreover, such optimizers
are able to use an initial estimate of the solution. Since a trajectory in
workspace is continuous, the entries of the structure matrix vary just a
little bit between two force distribution calculations. Thus, the initial
estimate of the next force distribution calculation is very close to the last
solution which results in short calculation times. Nevertheless it is an
iterative algorithm and has thus in its present implementation using the
NAG libraries no hard realtime capabilities. For the future use within
a hard realtime environment, a possible realtime-capable approach is to
implement a gradient-based optimizer including a calculation time su-
pervision. Since a good initial estimate can be provided, even a poor
optimization which has been interrupted due to a restricted computation
time may be close to the optimal result and thus usable.
3.6
Example
As a simulation example, a tendon-based Stewart platform with the
frame dimensions 1000×1000×800 [mm] and eight tendons has to follow
a straight line trajectory which starts at 100mm above the ground and
lifts the platform for 500mm. The platform orientation is constant with
the Bryant angles ϕ = θ = ψ = 2.0◦which are small resulting in a
relatively large translational workspace.
The minimum tension force
410
– 
T. Bruckmann et al.

Figure 4.
Parameters λ1, λ2 For Eight Tendons
desired is 2N, the maximum allowed force is 50N. The time history of
the design variables in ﬁg. 4 is of some interest: Kernel computation is
done by SVD and as an artifact of the routine used, the spanning vectors
of the kernel may rotate non-continuously. Therefore, the corresponding
λµ have to change accordingly in order to fulﬁll the objective function.
Thus, the algortihm generates a continuous and therefore usableforce
distribution as shown in ﬁg. 3. It is obvious that reaching the upper
workspace boundaries leads to relatively high tendon forces. The force
distribution is continuous and remains between the given force bounds.
Thus, it is feasible for control purposes. The example was calculated
both using interval analysis and gradient-based optimization. Within
the required precision, no relevant diﬀerences could be ﬁgured out.
4.
Conclusions and Outlook
In this paper, algorithms for generating continuous force distributions
for the tendon-based Stewart-platform Segesta were presented. Meth-
ods for the cases of m = n + 1 and m > n + 1 tendons (in particular
m = 8), respectively, were proposed. In the latter case, optimization al-
gorithms have to be used, which are expensive in terms of computation
time. To solve the resulting optimization problem, two algorithms using
interval analysis and gradient-based optimizers were described. Interval
analysis based optimization provides guaranteed solutions at the cost
of a long computational time. Contrary, the gradient based optimizer
411
.
Calculating Force Distributions 

generated the identical results in average within the given cycle time.
Due to its iterative approach this cannot be guaranteed in general.
Deriving realtime-capable algorithms from the methods stated here
and embedding them into the controller framework will be part of fu-
ture work. A more powerful PC will be set up and integrated into the
modular controller to perform numerically expensive computations. The
combination of force- and position control will be realized and tested,
and the enhancements regarding safety and precision of movement can
be veriﬁed.
Acknowledgements
This work is supported by the German Research Council (Deutsche
Forschungsgemeinschaft) under HI370/24-1 and HI370/19-3.
References
Bruckmann, T., Pott, A., Franitza, D., and Hiller, M. (2006). A modular controller for
redundantly actuated tendon-based stewart platforms. In Husty, M. and Schroecker,
H.-P., editors, 1st European Conference on Mechanism Science, Obergurgl, Aus-
tria.
Fang, S. (2005). Design, modeling and motion control of tendon-based parallel manip-
ulators. Ph. D. dissertation, Gerhard-Mercator-University, Duisburg, Germany.
Hansen, E. (1992). Global Optimization using Interval Analysis. Marcal Dekker, Inc.
Hiller, M., Fang, S., Hass, C., and Bruckmann, T. (2005a). Analysis, realization and
application of the tendon-based parallel robot segesta. In Last, P., Budde, C.,
and Wahl, F., editors, Robotic Systems for Handling and Assembly, volume 2 of
International Colloquium of the Collaborative Research Center SFB 562, pages
185–202, Braunschweig, Germany. Aachen, Shaker Verlag.
Hiller, M., Fang, S., Mielczarek, S., Verhoeven, R., and Franitza, D. (2005b). Design,
analysis and realization of tendon-based parallel manipulators. Mechanism and
Machine Theory, 40.
Ming, A. and Higuchi, T. (1994). Study on multiple degree of freedom positioning
mechanisms using wires, Part 1. Int. J. Japan Soc. Prec. Eng., 28:235–242.
Oh, S.R. and Agrawal, S.K. (2004). Cable suspended planar robots with redun-
dant cables: controllers with positive tensions. In IEEE Transactions on Robotics,
Accepted for Publication (SCI), 2004.
Pott, A. and Hiller, M. (2006). A parallel implementation for the optimization of par-
allel kinematic machines under process requirements. In 1st European Conference
on Mechanism Science, Obergurgl, Austria.
Verhoeven, R. (2003). Analysis of the workspace of tendon-based Stewart-platforms.
Ph. D. dissertation, Gerhard-Mercator-University, Duisburg, Germany.
Verhoeven, R. and Hiller, M. (2002). Tension distribution in tendon-based Stewart
platforms. Proceedings of the ARK ’02, 8th. International Symposium on Advances
in Robot Kinematics.
412
T. Bruckmann et al.

A STUDY OF MINIMAL SENSOR 
TOPOLOGIES FOR SPACE ROBOTS 
 
Peggy Boning 
Department of Mechanical Engineering, MIT 
Cambridge, MA, USA 
pboning@mit.edu 
Steven Dubowsky 
Department of Mechanical Engineering, MIT 
Cambridge, MA, USA 
dubowsky@mit.edu 
Abstract 
Sensing in space robotic systems is expensive but necessary to compensate 
for imprecise actuation, disturbances, and modeling errors. It has been 
shown that force/torque sensors can identify actuation efforts including joint 
torques and reaction jet forces for multi-manipulator free-flying space robots 
and greatly improves system precision. This paper studies the minimum 
number of sensors which can identify these actuation efforts. The method 
uses force/torque sensors to isolate sections of the system, which are reduced 
to canonical elements. This allows the analysis of a small number of 
elements. The results of the analysis of the canonical elements are combined 
to determine the number of sensors needed for the original system. 
Configurations of one- and two-manipulator space robots are examined here 
and the minimal number of sensors shown. 
1.  
Introduction  
Autonomous robots will be needed for future space missions such as 
satellite capture and on orbit construction of large space structures 
including space telescopes and solar power stations (see Fig. 1) [Ueno 
2003, Staritz 2001]. For these missions a space robot needs to perform 
precise motion and force control using its manipulators and reaction jets 
constrained by inherent nonlinearities. Sensing is necessary to 
compensate for torque disturbances due to joint friction, reaction jet 
variability and bias, thermal warping effects, and modeling errors 
[Breedveld 1997]. Sensing in space is limited and expensive because of 
hardware cost and system complexity. The objective of this work is to 
study the system topologies that minimize the number of sensors needed 
to measure joint torques and reaction jet forces for space robots. 
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 413–422. 
413
[Matsumoto 2002]. However, in space actuation can be imprecise and 

Figure 1.     Construction of a large space structure by teams of robots 
Sensor-based methods to compensate for actuation nonlinearities and 
errors have been shown to provide precise control. Friction has proven 
difficult to model but control methods have been developed that use joint 
torque sensors to compensate successfully for friction [Vischer 1995]. 
However, placing a sensor at every actuator increases weight, cost, and 
complexity, and reduces system reliability, motivating study of minimal 
sensing methods to measure actuation, such as a gyro-based method for 
detecting faults for thruster-controlled spacecraft [Wilson 2002].  
To avoid internal joint-torque sensors a method called Base Sensor 
Control (BSC) was developed for fixed-based terrestrial manipulators 
[Morel 2000]. BSC uses measurements from a six-axis force/torque 
sensor to estimate joint torques for closed-loop control. This method has 
recently been extended for space robots and it has been shown that 
force/torque sensors mounted between the manipulators and spacecraft 
can determine both the joint torques and the reaction jet forces and 
moments [Boning 2006]. This paper uses the method to examine the best 
placement and the minimum number of force/torque sensors for a given 
space robot to simultaneously measure joint and spacecraft actuation. 
This problem could be solved by exhaustive analysis. However, 
varying the number of manipulators p, the number of links n, reaction 
jets or not, payload or not, and considering force/torque sensors at the 
base of the manipulator or at the end-effector, the number of cases c that 
need to be considered grows rapidly (
n
 p 
16
 
u
 
c
). Here, it is shown that 
most cases are topologically similar and the space of possible solutions 
can be reduced to a small number of similar cases called canonical 
elements. The dynamic analysis is needed only for these elements and 
the results can be applied to more general systems. 
2.  
Analytical Development 
The systems studied are 3D free-flying space robots with multiple 
manipulators (see Fig. 2). It is assumed that the spacecraft and links are 
3D rigid bodies (for example, fuel slosh is not considered). It is also 
assumed that the actuator forces and moments and friction at each joint 
and reaction jet forces are unknown. Further, it is assumed that there 
are no additional external loads acting on the system such as gravity 
P. Boning and S. Dubowsky
. 
414

gradient effects. For this study, quantities measured are assumed to be 
known exactly and include accelerations. If the manipulator is holding a 
payload it is assumed that the end-effector makes a firm grasp. 
The approach taken here is to divide the system at each six-axis 
force/torque sensor into subsystems. The subsystems are categorized by a 
small set of canonical elements. The dynamics of the canonical elements 
are analyzed using Newton’s method to find intermediate forces and 
torques. Finally, the results are applied to the original system to find the 
minimum number of sensors required to calculate the actual net joint 
efforts (eliminating the effects of friction) and the actual thruster forces 
and reaction wheel moments. 
Figure 2.    Space robot with sensors between spacecraft and manipulators 
2.1  
Categorizing by Canonical Element 
All the subsystems created by isolating sections for the space robots at 
force/torque sensors can be reduced to the canonical elements in Fig. 3. 
The force/torque sensors provide the known interface forces and 
moments. The canonical element for a given subsystem is determined by 
reducing the subsystem following rules which are shown in Fig. 4. First 
the system is divided at the force/torque sensors and the sensors are 
replaced with equal and opposite known force/torques. Next, zero end 
loads at the end-effectors are replaced with known force/torques, since 
zero loads are known loads. Adding these zero loads allows more cases to 
be considered as one type. Then, reaction jets are replaced with unknown 
force/torques. Finally, branches are replaced with chains. If a known load 
is applied at the end of a chain, it is equivalent to applying a known load 
at the branching point. The same is true for an unknown load. 
 
 
Figure 3.     Canonical system elements 
415
A Study of Minimal Sensor Topologies
. 
. 

Figure 4.     Reduction to canonical elements 
An example of the application of these rules is given in Fig. 5 which 
shows how the unknown reaction jets on a spacecraft become the 
canonical element chain with one unknown. More examples are shown in 
Fig. 6. Fig. 6(a) (Case 1) is a free-floating (no thrusters) space robot with 
two manipulators and a single force/torque sensor. The sensor separates 
the system into two canonical elements, both chains with known loads. 
Fig. 6(b) (Case 2) shows a free-floating robot with a single sensor at the 
wrist, equivalent to a chain with known loads. The sensor measures very 
little, since there is no payload in this case. Fig. 6(c) (Case 3) shows a 
free-flying space robot with a single sensor between the spacecraft and 
both manipulators. Fig. 6(d) (Case 4) shows a free-flying space robot that 
contains a closed kinematic chain or loop. 
 
Figure 5.     Reduction of unknown reaction jets to chain with one unknown 
 
Figure 6.     More reduction examples 
2.2 
Dynamic Analysis 
The objective of this section is to determine if there is enough sensory 
information for a given subsystem topology to find the net actuator forces 
and moments on all joints and links in the subsystem. The analysis is for 
a full 3D system. The friction at unactuated joints can also be measured. 
416
. 
. 
. 
P. Boning and S. Dubowsky

A representative space system is shown in Fig. 7(a). It is assumed that 
for this system the spacecraft linear acceleration
sr , angular velocity 
s and acceleration
s
Ȧ
j, the forces 
0f
and torques
0Ĳ
 
)
, and accelerations 

Ȧ

)
( j
j)
(
( j
q
)
( j
q
)
( j
q
First it is noted that the positions, velocities, and acceleration of the 
links are known from system kinematics. To find the link’s unknown 
actuator load, a link with only known forces and moments (given by a 
force/torque sensor) is located. Looking at the free body diagram in Fig. 
7(b), from fundamental mechanics the unknown force 
 can be 
determined from the known force 
:                          
1

if
if
i
i
i
i
m
c
1
v
f
f


 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(1) 
where 
i
m  is the mass of the ith link and 
ic  is the acceleration at the ith 
center of mass. Similarly, the unknown torque 
 can be found from the 
known torque
: 
v
1

iĲ
iĲ


1
1
,
c
,
c
1



u

u


u


 
i
i
i
i
i
i
i
i
i
i
i
i
i
f
r
f
r
Ȧ
I
Ȧ
Ȧ
I
Ĳ
Ĳ

 
 
 
 
 
 
 
 
(2) 
where 
iI  is the ith inertia tensor, 
i
Ȧ is the angular velocity ith link, and 
i
i,
cr
is a vector from the center of mass of the ith link to the ith joint. 
Force and torque calculations can be projected along the chain by 
repeating the procedure. 
Figure 7.    System models 
417
. 
can be measured or estimated. For each mani- 
pulator 
 at each sensor are measured
along with measurements or estimates of the joint angles 
,  velocities 
.  Fig. 7(b) shows a typical link. Fig. 7(c) shows
a link at a branch point. 
A Study of Minimal Sensor Topologies

When there are two unknown forces (such as in Fig. 7(c)) the forces 
and torques cannot be calculated directly. This situation can often be 
solved by starting at several points in the chain and propagating the 
known forces and moments to a common point. In other cases additional 
information (such as provided by an additional force/torque sensor) is 
needed to permit a solution. When all of the links in the system have 
been visited it is possible to determine if the given set of sensors is 
sufficient or if additional sensors are required. 
2.3  
Analysis of Canonical Elements 
The above analysis can be applied case by case to the canonical 
elements in Fig. 3. First consider the chain with known loads (Fig. 3(a)). 
Starting with the link on the far left, it is possible to find the actuator 
torques on the first joint. Continuing with the links from left to right it is 
possible to find forces and torques on all joints in this system. Hence 
there are enough sensors to completely identify all actuation efforts for 
this case.  
The canonical element chain with one unknown load also has enough 
sensors, but it is necessary to work inward from both ends of the chain 
simultaneously so that the single unknown load at the middle link can be 
determined. However, for any chain that has more than one unknown 
load (as in Fig. 3(c)) all actuator efforts cannot be determined without 
adding more sensors. 
Loops can be resolved into two chains joined by two branching links. 
Loops are analysed by starting with a link that has only known applied 
loads and propagating the loads in both directions around the loop until 
the chain rejoins. It can be shown that there are not enough sensors to 
determine all actuation efforts for any of the three canonical elements 
with loops. However, inserting a sensor in a loop converts this problem 
into the case of the chain with known loads (Fig. 3(a)). To summarize, for 
all the canonical elements, only a chain with known loads (Fig. 3(a)) and 
a chain with one unknown load (Fig. 3(b)) have enough sensory 
information to determine all actuation efforts. 
Using the analysis of the canonical elements, it is straightforward to 
apply the results to the original system to determine sensor placement. 
For any given robot configuration with multiple manipulators, links, 
branches, etc., it is possible to enumerate potential sensor placements, 
divide the system into subsystems at the sensors, classify each 
subsystem by its canonical element, eliminate the layouts where there is 
not enough sensory information, and find the minimal number and 
placement of sensors for the system. 
P. Boning and S. Dubowsky
418

3.  
System Topologies 
Systems such as Fig. 2 were studied to determine the torques at each 
joint and the reaction jet forces. The parameters varied are number of 
manipulators  (p = 1, 2), number of links per manipulator  (n = 1, 2, many), 
reaction jets or not (free-flying or free-floating), and payload or not. The 
primary locations for sensor placement are the manipulator wrist and 
the manipulator base where it joins the spacecraft. For most cases it is 
not necessary to enumerate all the cases where the sensor is placed at 
any joint in between since they are often equivalent to the cases where 
there are sensors at the ends of manipulator. 
3.1 
Minimum Sensor Configurations 
The sensor placement method presented above was applied to space 
robots with one and two manipulators. A collection of single manipulator 
cases with and without thrusters is summarized in Fig. 8. In all cases 
with a single manipulator there was adequate sensing. Fig . 9-12 
summarize the results for space robots with two manipulators. The cases 
in Fig. 9 do not have (or are not firing their) thrusters. The first row 
shows possible sensor placements when one sensor is available. It can be 
placed between the manipulator and the spacecraft, at the end effector, 
between both manipulators and the spacecraft, or at the end of both end-
effectors. The second row shows placement of two sensors, the third three 
sensors, and the last row the only configuration with four sensors. All 
cases reduce to the canonical chain elements with at most one unknown 
load, except for the two loop cases which are crossed out. The crossed out 
cases do not have enough sensing to determine all actuation efforts. 
From the remaining cases which do have enough information it is easy to 
determine the minimal sensors (one) and their potential locations. These 
cases are outlined in bold. Fig. 10 shows the same cases as Fig. 9, except 
that the space robots now have thrusters. The addition of the unknown 
thruster loads does not change the results. There are still only two cases 
which do not have enough sensing, and a single force torque sensor is 
enough to determine actuation.  
Fig. 11 shows robots which have no thrusters but carry a payload 
grasped by both manipulators creating a closed loop. Most of the loops 
are broken by a sensor so actuation can be determined but there are only 
two places to put a single sensor to determine actuation. Fig. 12 shows 
the robots from Fig. 11 with thrusters. Once again addition of unknown 
thruster forces does not significantly change the results. 
A Study of Minimal Sensor Topologies
419
s

Figure 8.     Space robot configurations for a single manipulator, no thrusters 
Figure 9.     Space robot configurations for  two manipulators and no thrusters 
Figure 10.     Space robot configurations for two manipulators and thrusters 
Figure 11.     Space robot configurations for two manipulators and payload 
 
 
Figure 12.     Space robot configurations for two manipulators, payload, thrusters 
P. Boning and S. Dubowsky
420
. 
. 
. 
. 
. 

4.  
Illustrative Examples 
To demonstrate the validity of the basic method it is applied to the 
system shown in Fig. 2. One sensor could be used; however two sensors 
very well even though the manipulator is unable to follow the torque 
command due to very large friction. In this case, a torque loop is not 
closed to compensate for friction. With a valid torque estimate this could 
be accomplished but control algorithms are beyond the scope of this 
paper. Fig. 14 shows the results of the same sensor measurements used 
to estimate the applied spacecraft reaction jet forces. The actual reaction 
jet forces do not match the commanded due to nonlinear effects. However 
the method is still able to estimate these forces. 
0
2.25
4.5
−2000
−1000
0
1000
2000
time [sec]
Commanded 
Torque    
Manipulator 1
Joint 1      
Estimated Torque (dashed line)   
and Applied Torque (solid line)  
virtually the same               
Joint 1
Torque 
[N−m]  
 
Figure 13.     Manipulator 1 torques for the satellite capture task 
0
2.25
4.5
−1000
−500
0
500
1000
time [sec]
Fx [N] 
Commanded 
Spacecraft
Force     
Estimated Force
(dashed line)  
Applied Force
(solid line) 
Maximum   
Error <5% 
 
Figure 14.     Continuous commanded net thruster forces, satellite capture task 
5. 
Conclusions 
In space robots, actuator effort sensing is required for precise control. 
However, such sensing adds complexity, weight and cost. Hence it is 
important to minimize the number of sensors used. Here it is shown that 
there are minimum sensor configurations that are able to determine 
system actuation precisely. It was found that a base force torque sensor 
are included here to provide sensor redundancy. With failure of one sensor 
this system could still maintain precise control. While the above results
are valid for 3D systems, for clarity 2D cases of a satellite capture task
were simulated. The simulations were done in Matlab for the free-flying
space robot, firing its thrusters at the same time as the manipulator
end-effectors were tracking the grasp points on the satellite [Boning 
2006]. Fig. 13 shows joint torques for the first manipulator. The mani-
pulators have very high friction, 50% of their maximum capable tor-
que. The method’s torque estimate and actual applied torque agree 
.   
.   
A Study of Minimal Sensor Topologies
421

for each manipulator can provide an estimate for friction in the joints 
and applied reaction jets. A wrist force torque sensor for each 
manipulator can also be used to estimate joint friction and applied 
reaction jet forces. However, additional sensors are needed for cases 
when there are closed kinematic loop configurations.  
The methods shown here can be applied to other situations such as 
unknown contact forces at the end-effector, unknown payload mass, or 
payload gripped with pin joints (rather than rigidly grasped). Systems 
with reaction wheels can be considered with this methodology. The 
approach is useful to study redundant sensor configurations and 
accommodate sensor failure. Current studies are underway to consider 
the effects of higher order dynamics and sensor noise. An experimental 
validation of the method is expected to be completed shortly (in time for 
the ARK conference). 
Acknowledgment 
The support of the Japan Aerospace Exploration Agency (JAXA) is 
acknowledged by the authors. The authors would like to thank Prof. 
Ohkami, Mr. Ueno, and Mr. Ishijima for their useful comments. 
References 
Boning, P. and Dubowsky, S. (2006), Identification of Actuation Efforts using 
Limited Sensory Information for Space Robots, Proc. of the IEEE International 
Conference on Robotics and Automation, (to be published). 
Breedveld, P., Diepenbroek, A., van Lunteren, T. (1997), Real-time Simulation of 
Friction in a Flexible Space Manipulator, Proceedings of the 8th International 
Conference on Advanced Robotics, Monterey, CA. 
Satellite Capturing Strategy using Agile Orbital Servicing Vehicle, Hyper-
OSV, Proc. of the IEEE Int Conf. on Robotics and Automation, Wash. DC. 
Morel, G., Iagnemma, K., and Dubowsky, S. (2000), The Precise Control of 
Manipulators with High Joint-Friction Using Base Force/Torque Sensing, 
Automatica: The Journal of the International Federation of Automatic Control, 
Staritz, P.J., Skaff, S., Urmson, C., and Whittaker, W. (2001), Skyworker: A 
Robot for Assembly, Inspection and Maintenance of Large Scale Orbital 
Facilities, Proc. IEEE Int. Conf. on Robotics and Automation, Seoul, Korea. 
Ueno, H., Nishimaki, T., Oda, M., and Inaba, N. (2003), Autonomous Cooperative 
Robots for Space Structure Assembly and Maintenance, Proc. 7th Int. Symp. 
on Artificial Intelligence, Robotics, and Automation in Space, NARA, Japan. 
Vischer D. and Khatib O. (1995), Design and Development of High-Performance 
Wilson, E., Lages, C., and Mah, R. (2002), Gyro-based maximum-likelihood 
thruster fault detection and identification, Proc. of the American Control 
Conference, Anchorage, AK. 
P. Boning and S. Dubowsky
422
Matsumoto, S., Ohkami, Y., Wakabayashi, Y., Oda, M., and Ueno, H. (2002), 
No. 7, vol. 36, pp. 931-941. 
Torque-Controlled Joints, IEEE Trans. Robotics & Automation, No. 4, vol. 11. 

KINEMATICS AND OPTIMIZATION 
TRANSLATING 3-CCR/3-RCC 
PARALLEL MECHANISMS 
Massimo Callegari   and   Matteo-Claudio Palpacelli 
Polytechnic University of Marche, Department of Mechanics 
Ancona, Italy 
{m.callegari, m.palpacelli}@univpm.it 
Abstract 
The paper presents the kinematics of the 3-RCC/3-CCR translating parallel 
mechanisms and several machines of such family are described in detail 
taking into account different possible kinds of actuations. They all share 
good kinematic properties as for instance simple closed-form relations and 
convex workspace, but differ for overall dimensions of the mobile platform 
and dynamic behaviour: therefore the concepts have been optimized and 
compared against common performance indices, to determine the best 
solutions for selected classes of applications. Based on such results, a 
prototype robot has been finally built. 
Keywords: 
Parallel robots, Translating Parallel Machines, Kinematic analysis, 
1.  
Introduction 
The kinematics of parallel mechanisms with full spatial mobility is 
usually very complex and sometimes cannot even be solved in closed 
form, as for example in the well-known case of the general Gough-
Stewart platform (Liu and Fitzgerald, 2003). For this reason it is recently 
growing the interest of researchers and industry towards minor mobility 
mechanisms, able to perform elementary motions like pure rotations, 
pure translations or planar displacements: in this way the complexity of 
the analytical problem is greatly reduced while the advantages of closed-
loop actuation are still preserved, eventually by having two parallel 
mechanisms mounted in series or cooperating in parallel for the 
accomplishment of a given task. 
Many new translating parallel machines (TPMs) have been studied in 
the last years, including the 3-RPC mechanism by (Callegari and 
Tarantini, 2003) that showed good kinematic performances, e.g. simple 
equations, high stiffness, convex workspace, and so on. However the 
aforementioned concept presented also some clear weak points, such as a 
cumbersome moving platform, poor dynamic performances and an 
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 423–432. 
423
Conceptual design, Optimization 
OF THE 

overconstrained structure: therefore the study has been enlarged to the 
whole family of machines with 3-RCC/3-CCR kinematics (Callegari and 
Marzetti, 2003) to assess whether other mechanisms of this set show 
better features than the one previously identified. 
The paper briefly presents three mechanisms selected among the most 
optimization and compares the resulting performances. 
2.  
A whole family of mechanisms can be defined by the functional design 
schematically represented in Fig. 1a: a mobile platform is connected to 
the fixed base by three identical limbs, that are composed by two 
members coupled by a cylindrical pair; the lower link of each leg is 
connected to the frame by a revolute joint while the upper one is 
connected to the platform by a cylindrical pair. Such kind of mechanisms 
are conventionally called 3-RCC to indicate the sequence of the joints in 
the three (identical) limbs, starting from the fixed frame and moving 
towards the platform; the 3-CCR architecture, shown in Fig. 1b, is simply 
obtained by kinematic inversion. It can be easily seen that the described 
architecture is characterized by 3 d.o.f.’s in space where in the general 
case spatial translations are coupled with changes of orientation of the 
platform. Nevertheless for particular geometrical configurations such 
mechanisms can provide motions of pure translation, i.e. iff (i) the axes of 
the revolute and outer cylindrical joint of ith limb are parallel to the same 
unit vector 
iuˆ  and (ii) 
j
i
u
u
ˆ
ˆ ≠
 for i  j (i,j =1,2,3). 
(a)  
 
 
 
(b) 
It must be pointed out that in these cases the two links of each leg do 
not turn around the cylindrical pair, which could well be substituted by a 
prismatic joint, giving rise to the already mentioned 3-RPC (or 3-CPR) 
overconstrained mechanism. 
424
M. Callegari and M.-C. Palpacelli
Description of the Family of Mechanisms 
Figure 1.     The 3-RCC (a) and 3-CCR (b) parallel mechanisms. 
to the possible different actuations and finally performs a kinematic 
interesting elements of this class, develops their kinematics according

3.  
In this section three different mechanisms are considered. The 3-RCC 
architecture shown in Fig. 1a can be actuated either by driving the base 
revolute joints or by controlling legs’ extensions: the mobile platform of 
such concepts turns out to be rather bulky because of the (unavoidable) 
length of the stroke of the cylindrical pairs mounted on the platform 
itself. This drawback can be possibly avoided by inverting the kinematic 
structure of the mechanism, Fig. 1b: in this case the legs can be actuated 
by directly driving the sliders running along the fixed slideways. 
Unfortunately a mere inversion of the mechanism is not possible because 
the resulting kinematics shown in Fig. 1b is singular in its entire 
workspace; therefore two more concepts are presented, slightly different 
from first mechanism but both characterized by a 3-CCR architecture. 
3.1  
The configuration of the mechanism is symmetric, Fig. 1a, with the 
axes of the three revolute pairs forming an equilateral triangle on the 
fixed base; in the same manner, another equilateral triangle is formed on 
the moving platform by the axes of the cylindrical pairs; moreover, the 
legs are perpendicular to the joints connecting them with the two bases. 
In case the machine is driven by controlling legs’ lengths, IPK is 
characterized by a single configuration of the mechanism while DPK 
presents 8 different solutions that can be simply evaluated in closed-form 
(Callegari and Tarantini, 2003). When the unit vectors of the three limbs 
become linearly dependent, the manipulator gets stuck in a singular 
configuration: therefore the locus of all the singular points is given by a 
right cylinder, that however can be moved outside the workspace with a 
mechanism can be easily driven by means of rotary motors lumped at the 
end of the limbs and ball screws, see Fig. 2: such design yields very good 
static properties (e.g. a high thrust can be delivered since the legs are 
loaded only by normal forces) but the resulting dynamic behaviour is 
poor due to the relevant mass of the mobile platform and the high inertia 
Better dynamic performances can be obtained by directly powering the 
base revolute joints, even if the limbs are loaded by bending moments in 
this case. (Callegari and Marzetti, 2003) developed the complete 
kinematics of such mechanism: it is shown that a (very simple) unique 
solution exists for both direct and inverse position problem and no 
translation or rotation singularities are possible at all. 
425
Kinematics and Optimization
Kinematics of Some Mechanisms 
3-RCC with Triangular Configuration 
proper dimensioning of the machine. No constraint (rotation) singu- 
larities exist apart from the surface of the mentioned cylinder. This 
of the spinning or tilting masses (Callegari et al., 2006). 

3.2  
The mere kinematic inversion of the 3-RCC mechanism just described 
is shown in Fig. 1b: (Callegari and Marzetti, 2003) proved that such 
As a matter of fact, in order to give full mobility to the inverted 
mechanism it is necessary that the direction of the axes of the three pairs 
connecting the limbs to the ground are linearly independent. 
(a) 
(b) 
th
For instance, in the tetrahedral configuration shown in Fig. 3a such 
axes stem from the origin of the fixed frame 
(
)
z
y
x
O
ˆ
,ˆ
,ˆ
 and are tilted by α 
radians with respect to the horizontal plane. If a frame 
(
)
w
v
u
P
ˆ
,ˆ
,ˆ
, parallel 
to 
(
)
z
y
x
O
ˆ
,ˆ
,ˆ
, is attached to the mobile platform at the intersection of the 
426
M. Callegari and M.-C. Palpacelli
Figure 2.  Sketch of the 3-RCC translational platform (actuation on legs’ length). 
3-CCR with Tetrahedral Configuration 
 limb. 
Figure 3 .   Sketch of the tetrahedral 3-CCR architecture and loop-closure for  i
mechanism is useless since all the points of its workspace are singular. 

three revolute joints, the vector 
OP
=
p
 can be taken to specify the 
position of the moving platform.  
In order to simplify the study of the mechanism, other frames can be 
easily defined for each link as shown in Fig. 3b: e.g. the frame 
)
ˆ
,
ˆ
,
ˆ
(
i
i
i
i
z
y
x
A
, attached at of ith limb, is obtained by starting at the global 
frame 
(
)
z
y
x
O
ˆ
,ˆ
,ˆ
, then it is rotated by 
iϕ  around the (current) zi axis and 
then by α around the (current) yi axis, finally a translation ai along the 
direction of the (current) xi axis is performed, to allow for the variable 
sliding of the cylindrical pair. Moreover, the articular coordinates of the 3 
joints are defined as follows: ai and 
iϑ  for the first cylindrical pair, di and 
βi for the second one and γi for the revolute joint. It is also noted that the 
configuration of Fig. 3 is characterized by maximum symmetry, therefore 
°
=
°
=
°
=
240
,
120
,
0
3
2
1
ϕ
ϕ
ϕ
 and 
t
ti =  for i = 1,2,3. 
The loop-closure equation of ith limb is given by: 
 
i
i
i
t
d
a
p
+
+
=
 
(1) 
 
that can be expressed in the local 
iA  frame as: 
 
»
»
»
¼
º
«
«
«
¬
ª
−
»
»
»
¼
º
«
«
«
¬
ª
−
»
»
»
¼
º
«
«
«
¬
ª
=
»
»
»
¼
º
«
«
«
¬
ª
»
»
»
¼
º
«
«
«
¬
ª
−
−
i
i
i
i
i
i
i
i
i
i
z
y
x
i
i
i
i
i
i
c
s
d
s
s
s
c
c
t
a
p
p
p
c
s
s
s
c
c
s
s
c
s
c
c
ϑ
ϑ
β
ϑ
β
ϑ
β
α
α
ϕ
α
ϕ
ϕ
ϕ
α
α
ϕ
α
ϕ
0
0
0
0
 
(2)  
 
The mobility analysis developed in the Appendix shows that 
unfortunately such architecture is liable of constraints singularities 
inside its entire workspace; therefore, in order to prevent it rotating, it is 
necessary to turn to an overconstrained architecture by replacing limbs’ 
internal cylindrical pairs with a prismatic pairs, resulting with a 3-CPR 
kinematics. The following analysis will be performed with reference to 
this case, where Eq. 2 still holds with β i = 0. 
Inverse position kinematics relations provide the actuated variables as 
functions of platform s position p: 
 
i
z
i
y
i
x
i
t
s
p
c
s
p
c
c
p
a
+
+
+
=
α
α
ϕ
α
ϕ
 
(3)  
 
The same Eq. 3, written for i=1,2,3, is used to solve the direct position 
kinematics and find the values of 
z
y
x
p
p
p
,
,
 as functions of 
ia . The direct 
derivation of Eq. 1 is the base for the velocity analysis: 
 
i
i
i
i
i
i
p
d
a
d
Ȧ
d
a
v
×
+
⋅
+
⋅
=
ˆ
ˆ


 
(4)  
 
By dot-multiplying both sides of Eq. 4 by the unit vector 
iaˆ  and 
collecting the 3 relations for i=1,2,3 in a single expression in matrix form, 
a
v

=
p
J
, the expressions of the Jacobian matrix is obtained: 
 
427
Kinematics and Optimization
’

  
»
»
»
¼
º
«
«
«
¬
ª
=
»
»
»
¼
º
«
«
«
¬
ª
=
α
α
ϕ
α
ϕ
α
α
ϕ
α
ϕ
α
α
ϕ
α
ϕ
s
c
s
c
c
s
c
s
c
c
s
c
s
c
c
J
T
T
T
3
3
2
2
1
1
3
2
1
ˆ
ˆ
ˆ
a
a
a
 
(5) 
 
The constant Jacobian shows that this mechanisms belongs to the 
class of the so-called Cartesian parallel robots (Kim and Tsai, 2002). It is 
noted that the maximum value of 
( )
α
αs
c
J
2
det
=
, granting an “optimal” 
manipulability, is obtained for 
°
≈
26
.
35
α
 which corresponds to aligning 
the ground cylindrical pairs along a Cartesian frame. 
3.3  
The setting of the joints shown in Fig. 4 gives rise to a full Cartesian 
kinematics; in fact inverse and direct position kinematics are solved by: 
 
 
°¯
°®
­
=
+
+
=
+
=
z
y
x
x
p
a
t
s
p
c
p
a
t
p
a
3
2
2
1
1
α
α
       
°
°
¯
°°
®
­
=
−
⋅
+
+
⋅
−
=
−
=
3
2
1
2
1
1
1
a
p
s
t
t
c
a
a
c
p
t
a
p
z
y
x
α
α
α
 (6 a-b) 
 
and velocity kinematics is expressed by the following Jacobian matrix: 
 
  
»
»
»
¼
º
«
«
«
¬
ª
=
»
»
»
¼
º
«
«
«
¬
ª
=
1
0
0
0
0
0
1
ˆ
ˆ
ˆ
2
2
1
α
α
s
c
J
T
T
T
T
a
a
a
 
(7) 
 
showing that J is the identity matrix when the three ground cylindrical 
affected by rotation singularities inside the workspace therefore, just as 
before, the equivalent 3-CPR mechanism should be used instead. 
 
 
 
428
M. Callegari and M.-C. Palpacelli
3-CCR with Cartesian Configuration 
pairs are orthogonal one to the others (α = 90°). Also this architecture is 
Figure 4.   Sketch of the Cartesian 3-CCR architecture. 

4.  
The kinematic performances of the described machines strongly 
depend on the specific geometric parameters of the four architectures: 
the machines have been individually optimized and then the resulting 
performances have been compared. The following non-dimensional 
performance index has been used for the optimization: 
 
3
3
2
2
1
1
F
F
F
PI
⋅
+
⋅
+
⋅
=
β
β
β
  
(8) 
 
where F1 measures the volume of the workspace, F2 is proportional to 
mobile platform s overall dimensions, F3 quantifies the dexterity of the 
i
i
i  1 and β i are subject to the 
condition: β1+β2 +β3 =1, the performance index results bounded by 0 PI 1. 
The measure of workspace volume F1 is chosen with reference to the 
Monte Carlo method proposed by (Stamper, 1997): robot s workspace is 
inscribed inside a cube of side 2dmax and is discretized in ntot points; then 
a numerical procedure determines the number of nin points belonging to 
robot s workspace and it is finally defined: 
tot
in n
n
F =
1
 
(9)  
Overall dimensions of mobile platform are evaluated as: 
(
)
max
max
2
t
t
t
F
−
=
 
 (10)  
where tmax is the maximum dimension of its height and is constrained to 
the maximum stroke of the ground sliders. Machine s dexterity is 
assessed by computing the condition number c of the matrix JTJ, with J 
Jacobian matrix, as suggested by (Gosselin and Angeles, 1991); by using 
the already defined discretization, it is therefore defined: 
in
n
i
i
tot
in
tot
n
i
i
W
W
n
c
n
n
d
n
c
d
dW
dW
c
F
in
in
¦
¦
³
³
=
=
=
≈
=
1
2
3
max
1
2
3
max
2
3
1
8
1
8
1
 
(11)  
The variable parameters of the optimization are the geometric 
dimensions of both platforms, limbs  lengths and the incidence angle α 
between joint axes (or the offset distance e for the fully Cartesian 
machine); in order to deal with dimensionless parameters all variables 
are divided by maximum limbs’ lenght or by the stroke of ground sliders, 
i.e. dmax = 1 or amax = 1 is imposed according to the specific architecture. 
If the three functions Fi are equally weighted, i.e. β1 =β2 =β3, the 
429
Kinematics and Optimization
Optimization of the Families 
therefore according to what has been proposed by (Carretero et al., 2000), 
’
’
’
’
optimization process yields the results collected in Table 1 : it is clear that  
0  F
the functions F are chosen such that 
mechanism and β , i=1,2,3 are the weights of the 3 functions; since  
’

the two 3-CPR concepts yield the best performances also when the two 3-
RCC architectures present a relatively high PI in spite of a virtually null 
workspace. In fact the optimization process drove geometry variations of 
the 3-RCC concepts towards very small values of mobile platforms sides, 
therefore constraining the displacements of its cylindrical pairs. 
 
 
RCC 
R(PR)C 
CPR 
(Tetrahedral)
CPR 
(Cartesian) 
a 
0.5 
0.8 
1 
1 
t 
0.1 
0.1 
0 
0 
α 
— 
— 
35.26° 
90° 
PI 
0.42 
0.45 
0.70 
0.70 
W 
1.1% 
§0% 
12.5% 
12.5% 
e 
— 
— 
— 
0 
 
However, also in case the only workspace is maximized for the 4 
mechanisms (β1 =1, β2 =β3 = 0) the two 3-CPR architectures still show a 
workspace comparable with the other concepts (see Fig. 5), that are in 
this case characterized by big overall dimensions and limited dexterity. 
Figure 5   Optimized workspace of the 4 machines: 3-RCC with rotary (a) or 
430
M. Callegari and M.-C. Palpacelli
linear (b) actuation, 3-CPR with tetrahedral (c) or Cartesian (d) configuration. 
Table 1.     Comparison of robots performances (optimization with equal weights). 
.

5.  
Conclusions 
The paper has presented the kinematic properties of the translating 
platforms characterized by the 3-RCC architecture: it has been shown 
that also its 3-CCR kinematic inversion can be considered but, due to 
rotation singularities, the rotation of the inner cylindrical joint must be 
avoided by turning to the 3-CPR overconstrained architecture. After 
having optimized the mechanisms, it has been shown that the two 3-CPR 
concepts present quite better performances than the others: as a matter 
of fact they are both Cartesian parallel machines, being slightly different 
only due to the disposition of joint axes in the space and present a 
(comparably) wide workspace characterized by very high dexterity.  
Moreover by still keeping the same geometry of the 3-CCR tetrahedron 
design of Fig. 3, but with a different disposition of the pairs, i.e. the 3-
CPU architecture shown in Fig. 6a, it is possible to get rid of all 
singularities and obtain a non-overconstrained machine that still retains 
the good feature of the original concept (as a matter of fact the same 
kinematics equations at all). A prototype robot has been built with this 
the first experimentations are still under way. 
 
(a)   
(b) 
 
References 
Callegari, M., Marzetti, P. (2003), Kinematics of a Family of Parallel Translating 
Cassino (Italy), May 7-10. 
Callegari, M., Palpacelli, M.-C., Principi, M. (2006), Dynamics Modelling and 
Callegari, M., Palpacelli, M.-C., Scarponi, M. (2005), Kinematics of the 3-CPU 
431
Kinematics and Optimization
structure, as described in (Callegari et al., 2005), and is shown in Fig. 6b: 
Figure 6.     Concept (a) and prototype (b) of the 3-CPU translation robot. 
Control of the 3-RCC Translational Platform, submitted to Mechatronics.  
Conf. Robotics and Automation, Barcelona, April 18-22, pp. 4031-4036. 
parallel manipulator assembled for motions of pure translation, Proc. Intl. 
Mechanisms, Proc. Intl. Workshop on Robotics in Alpe-Adria-Danube Region, 

Callegari, M., Tarantini, M. (2003), Kinematic Analysis of a Novel Translational 
Platform, ASME Journal of Mechanical Design, vol. 125, pp. 308-315. 
Carretero, J.A., Podhorodesky, R.P., Nahon, M.A., Gosselin, C.M. (2000), A 
Global Performance Index for the Kinematic Optimization of Robotic 
Manipulators, ASME Journal of Mechanical Design, vol. 122, pp. 17-24. 
Gosselin, C., Angeles, J. (1991), A Global Performance Index for the Kinematic 
Optimization of Robotic Manipulators, ASME Journal of Mechanical Design, 
vol. 113, pp. 220-226. 
Kim, H.S., Tsai, L-W. (2002), Evaluation of a Cartesian parallel manipulator. In 
Advances in Robot Kinematics: Theory and Applications, Lenarcic and Thomas 
Liu, K., Fitzgerald, J.M. (2003), Kinematic Analysis of a Stewart Platform 
Manipulator, IEEE Trans. Industrial Electronics, vol. 40, pp. 282-293. 
Stamper, R.E. (1997), A Three Degree of Freedom Parallel Manipulator with 
Only Translational Degrees of Freedom, Ph.D. Thesis, University of Maryland, 
College Park, Maryland. 
 
Appendix.  Mobility analysis of the tetrahedral 3-CCR 
The angular velocity ω of mobile platform can be expressed in function 
of ith limb’s articular coordinates as follows, see Fig. 3b: 
 
i
i
i
i
i
i
t
d
a
Ȧ
ˆ
ˆ
ˆ
⋅
+
⋅
+
⋅
=
γ
β
ϑ



 
 (12)  
 
By dot-multiplying Eq. 12 by 
i
dˆ , it is obtained: 
 
i
T
i
β
=
⋅Ȧ
dˆ
 
(13)  
 
Taking into account Eq. 13, the derivation of the first line of Eq. 2 
provides: 
 
(
)
Ȧ
⋅
+
=
⋅
+
⋅
+
⋅
T
i
i
i
i
z
y
i
x
i
II
z
s
t
a
p
s
p
c
s
p
c
c
ˆ
β
α
α
ϕ
α
ϕ




 
 (14) 
 
If platform’s motors are held still (
0
=
ia
), due to the absence of 
translation singularities is also: 
0
=
=
=
z
y
x
p
p
p



 and therefore from Eq. 
14: 
 
(
)
0
ˆ
=
⋅Ȧ
dT
i
i
is
t β
 
 (15) 
 
Initial mounting conditions require 
0
=
i
β
, therefore it is evident that a 
finite angular velocity Ȧ  can be initiated: however, since in case of pure 
translations the legs do not rotate around their own axes, the problem 
can be overcome by the introduction of prismatic pairs in place of the 
inner cylindrical joints (3-CPR architecture). 
432
M. Callegari and M.-C. Palpacelli
Eds., Springer, pp. 21-28. 

Motion Synthesis and Mobility
C.-C. Lee, J.M. Herv´e
Pseudo-planar motion generators
S. Krut, F. Pierrot, O. Company
On PKM with articulated travelling-plate and large tilting angles
Mobility and connectivity in multiloop linkages
K. Tcho´n, J. Jakubiak
Jacobian inverse kinematics algorithms with variable steplength
for
J. Zamora-Esquivel, E. Bayro-Corrochano
Kinematics and grasping using conformal geometric algebra
R. Subramanian, K. Kazerounian
Application of kinematics tools in the study of internal mobility
of
O. Altuzarra, C. Pinto, V. Petuya, A. Hernandez
Motion pattern singularity in lower mobility parallel manipulators
mobile manipulators
protein molecules
C.R. Diez-Mart´ınez, J.M. Rico, J.J. Cervantes-S´anchez,
J. Gallardo
435
445
455
465
473
481
489

PSEUDO-PLANAR MOTION GENERATORS
Chung-Ching Lee
Dept. Tool & Die-Making Engineering,
National Kaohsiung University of Applied Sciences,
415 Chien Kung Road, Kaohsiung, 80782, Taiwan R.O.C.
E-mail: cclee@cc.kuas.edu.tw 
Jacques M. Hervé
Ecole Centrale Paris,
Grande Voie des Vignes,
F-92295, Chatenay-Malabry, France
E-mail: jherve@ecp.fr 
Abstract
In this paper, a particular type of motion is called pseudo-planar motion and
termed Y motion for brevity.  A set of Y -motions having the same plane
direction and the same pitch is endowed with the algebraic structure of a
mechanical generators of a Y subgroup are disclosed.  All singular postures
of Y-motion generators are described and their embodiments are graphically
displayed. 
Keywords:
1. 
Introduction 
A special 3-dof-motion type, which includes any translation parallel to
a given plane and any helical motion with a given pitch about any axis
provided that the axis is perpendicular to the foregoing plane can be
called pseudo-planar motion and is denoted Y-motion.  A set of Y motions
with a given plane direction and a given pitch is endowed with the
algebraic structure of a 3D Lie group and, in other words, is a 3D
displacement Lie subgroup.  Hervé (1978) defined this kind of subgroup
and some essential properties of the Y-motion generators together with
some examples of applications were disclosed more recently (Hervé,
translating-screw  group.  In this paper, Y-motion generators including
hinged parallelograms are introduced and the singular postures of the
generators are comprehensively derived.
One can discriminate two types of singularity, namely permanent
singularity and local singularity.  The permanent singularity yields an
inadequate chain that does never generate the desired Y motion.  Local
© 2006 Springer. Printed in the Netherlands. 
435
three-dimensional (3D) Lie group. The possible architectures of the
-
 “
”
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 435–444. 
Pseudo-planar motion, Lie group, mechanical generator, singularity
2004).  In Angeles (2004), a subgroup of Y motions is named a

singularities are specific of particular poses of the chain that generally
generates the Y motion.
In any singular pose of the chain, intermediate bodies between the
distal bodies of the open chain can undergo motions that are passive with
respect to the relative motion between the distal bodies.  Such passive
motions may have finite (or full-cycle) amplitude or only infinitesimal
amplitude.  For brevity, these two types of singularity will be designated
by the shortened locutions, infinitesimal singularity and finite
singularity, respectively.
After recalling some properties of the Y motion, we enumerate all
generators of Y-motion with serial arrays of 1-dof Reuleaux pairs or
hinged parallelograms. The article will emphasize the singularity in the
previous generators. 
A 3D Lie group of Y displacements is denoted {Y (ww, p)} where curly
brackets indicate a set, ww is a given unit vector perpendicular to the
plane Pl and p is the given pitch of the feasible helical displacements.
The pitch can be any real number and, therefore, the planar
displacements are the special case p =0.  This is reflected by the notation:
{Y (w, 0)} = {G(w)}.  Furthermore, any set of helical displacements with
straightforward to verify that any translation parallel to Pl belongs to
{Y (w, p)}.   Hence, {Y (w, p)} has 3 categories of proper Lie subgroups.
They are: (a) {H (N, ww, p)}: any set of helical movements of axis (N, ww)
with the given pitch p, N ; (b) {T (ss)}: any set of rectilinear translations
parallel to any given vector ss that must be perpendicular to ww, sAw; (c)
{T (Pl)}= {T (Aw)}: set of planar translations parallel to the Pl-plane (or
perpendicular to ww).  The improper subgroups of {Y (ww, p)} are {E }, which
contains only one element, namely the identity E, and {Y (ww, p)} itself.
The set of feasible displacements of a rigid body with respect to
another body of the same kinematic chain is called kinematic bond
bond between the distal bodies, which bond is the product of the bonds
mechanical generators.
436
C.-C. Lee and J.M. Hervé
-
2. 
Pseudo Planar Motion Generators 
called its mechanical generators. Generally, a given bond has several
generated by the serial pairs. The chains producing a given bond are
between the bodies. The serial layout of kinematic pairs generates a
pitch p around any axis parallel to ww is included in {Y (ww, p)}. It is
Because of the closure of the product in a 3D subgroup {Y (ww, p)}, the
product of three 1D manifolds included in {Y (ww, p)} can be equated to

{Y(w  p)} = {H (N1, ww  p)} {H (N2, ww  p)} {H (N3, ww  p)}
(1a)
= {T(uu)} {H (N2, ww  p)} {H (N3, ww  p)}
( u A w)
 (1b)
= {H (N1, ww  p)} {T (u)} {H (N3, ww  p)}
( u A w) 
(1c)
= {H (N1, ww  p)} {H (N2, ww  p)} {T(uu)}
( u A w) 
(1d)
= {T(uu)} {H (N, ww  p)} {T (v)}
( u A w,  vAw, uu z v)
(1e)
= {H (N, ww  p)} {T (u)} T (v)}
( u A w,  vAw,  u z v) 
(1f)
= {T (uu)} {T (v)} {H (N, ww  p)}
( u A w,  vAw,  u z v) 
(1g)
PHH, HPH, PHP and HPP.  Reversing the order of joints also yields a
mechanical generator of {Y(ww, p)}.
be used for the structural synthesis of Y motion generators.  As a matter
of fact, the two bars remain parallel and the motion of one bar with
respect to the other bar is 1-dof translation along a circle.  Replacing one
parallelograms, we obtain seven Y-motion generators with hinged
perpendicular to ww.  Flattened parallelograms are singular and must be
avoided.
(a) HHH
(b) PHH 
(c) HPH
(d) HPP
(e) PHP
437
Pseudo-Planar Motion Generators
The coupling of two opposite bars in a hinged parallelogram can also
The serial Y-motion generators with 1-dof Reuleaux pairs are HHH,
parallelograms, Figure 2.  The planes of the parallelograms must be
or two P pairs in the generators of Figure 1 by one or two hinged
Figure 1. Y-motion generators.
{Y(w, p)} in a neighborhood of E provided that this product is 3-
dimensional. The following equalities express the 3D subgroup {Y (ww  p)}
as products of three 1D subgroups, which are associated to the 1-dof
Reuleaux pairs (Reuleaux, 1875), as shown in Figure 1.
, 
,
,
,
,
,
,
,
,
,
,
,
,

(c) HPaP 
(d) HPPa
(e) PaHP
(f) HPaPa
(g) PaHPa 
In this section, the singularity rises from an undesired finite (or full-
motion.  If the distal bodies of the chain are rigidly connected, then the
resulting closed chain is movable with one or more degrees of freedom.
Such a type of singularity may be permanent or local.  The former does
latter may happen in particular poses of a chain that generally generates
the Y motion.
From the Delassus contribution [Delassus, 1922, Waldron, 1969, Lee,
1998], there are only ordinary  types of movable three-bar linkages.
Using Hervé s approach, the ordinary  mobility can be explained via the
group algebraic properties of the displacement set.  It is straightforward
to derive all the possible cases of group dependency between the
subgroups of {
dependent iff their set intersection is not {E }.  The 2D subgroup of planar
translations {T (Pl )} can be dependent of a subgroup of rectilinear
translation parallel to Pl.  A 1D subgroup of rectilinear translation or a
1D subgroup of helical displacements can be dependent only of itself. 
Obviously, if the chain includes three P pairs parallel to the plane Pl,
the closed chain PPP is a trivial 1-dof chain associated to the 2D
subgroup of planar translations {T (Pl)} = {T (Aw)} parallel to the plane Pl
438
C.-C. Lee and J.M. Hervé
(a) PaHH 
(b) HPaH
3. Finite Singularity of the Y -
otion 
enerators 
M
G
cycle) motion of an intermediate link in the chain aiming to generate Y
not correspond properly to a generator singularity but actually charac-
 “
”
 “
”
Y (ww, p)}. It is worth recalling that two subgroups are
’
Figure 2. Y -motion generators with hinged parallelograms.
terizes inadequate chains, which do never generate Y motion. T he

In a chain with two P pairs and one H pair, an undesired motion may
happen if the P pairs are parallel.  Such a geometric arrangement of the
P pairs may be permanent or transitory.  If the P pairs are adjacent, then
their common rigid link maintains the parallelism and the chain is a
wrong generator of Y-motion.  In a PHP array, the angle between the two
P pairs can change and the chain generates Y-motion when the P pairs
are not parallel and may become locally singular in a possible posture
with transitory parallel P pairs.  Both cases are shown in Figure 3. 
(a) permanent finite singularity
(b) locally finite singularity 
In a pseudo-planar chain with two H pairs, an undesired finite motion
may happen when two H pairs are coaxial.  It is an inadequate chain if
the coaxial H pairs are adjacent as shown in Figure 4.  Otherwise, it is a
local (or transitory) singularity, Figure 5.  
(a) permanent singularity
(b) permanent singularity
(a)
(b)
439
Pseudo-Planar Motion Generators
that is perpendicular to ww.  Its corresponding open chain PPP generates
{T (Aw)}{Y (w, p)} with 1-dof of passive mobility.  Hence, the generators
of Y-motions necessarily include one or more H pair.  
Figure 3. Finite Singularity of PPH and PHP Y-motion generators.
Figure 4. Permanent finite singularity of chains with two coaxial H pairs.
Figure 5. Finite local singularity of Y-motion generators with two coaxial H pairs.

4. 
subgroup, a generic point M of the Euclidean affine 3D space is
transformed into another point M' = M + dM
M, that is, 
where is D an infinitesimal angle.
  The exponential series yields
exp(Dwu)(N
NM) = (N
NM) + Dw u(N
NM).  Hence, 
and, the point O being any origin,
(OOM ) = (OOM) + D [(p/2S) ww  (OON)u ww
 w u (OOM)]
This further provides
The expression in Eq.(7) is usually called the twist in the H pair.
Actually, the twist is a mapping, M o dM
M, of the 3D Euclidean affine
determines what is often called the rate of twist .  The rate of twist is
characterized at the origin O by the datum of two vectors, namely ww and
perpendicular drawn from O to the screw axis can be derived from ww and
t by employing the two relations k = p/ 2S = ww.t and  (OON)   w u tt.  
Consequently, the twist of any H pair, which has the axis (N,  w) and
the pitch p=2Sk can be expressed as 
D[wwu(OOM) + (OON) uw  kw ]= D [wwu(OOM) + tt ]  
In order to obtain simple expressions in what follows, without loss of
the generality, the point N that can be any point belonging to the screw
axis, is chosen in the plane that is perpendicular to the unit vector ww and
contains the origin O ; this plane will be denoted Pl (O, Aw).
Any linear combination of two twists is a third twist, which is called
resultant twist.  The resultant twist is the twist of the serial array of two
pairs characterized by the first two twists.  Natively the resultant twist
is linearly dependent on the first two twists and is an element of the
belong to the same 2D vector subspace of the 6D vector space of all twists.
If three kinematic pairs are characterized by three linearly dependent
singularity is a local infinitesimal singularity. 
Let us consider two H pairs with the same pitch p = 2Sk and parallel
axes (N1, ww) and (N2, ww).  We choose N1 and N2 in the plane Pl (O, Aw).
Obviously, if N1 = N2, then the screw pairs are coaxial and the linear
span of the two twists is made of the twists of all coaxial H pairs with the
pitch p.  In what follows, N1  N2.  The twist of the first H is d1M =
D[ww u (OOM) + (OON1) u w  k¬w] and the twist of the second H is d2M =
440
C.-C. Lee and J.M. Hervé
Infinitesimal Singularity of HHH Generators 
–
M o M' = N +(D p/2S) uu  exp(D wwu) (N
NM) 
(4)
M' = M + D [(p/2S) ww  w u (N
NM)] 
(5)
(6)
dM
M = (OOM )  (OOM) = D[wwu (OOM) +  (OON)u w + (p/2S)ww ]
(7)
(8)
linear span of the first two twists. In other words, the three twists
twists, then the serial array of these pairs is singular. Generally, this
 “
”
t = (OON) uw + (p/2S) ww. Conversely, the pitch p and the foot N of the
Through an infinitesimal displacement belonging to the {H (N, ww, p)}
space in the 3D Euclidean vector spac e. The expression of dM
M/D
+
+
+
+
+
'
'
=
+

2
 
R
H pairs having the same pitch p, can be expressed as
dRM
d1M+d2M  DR[ww u(OOM) +(OONR)u w kRw]= DR[ww u(OOM) + ttR]
(9)
in which 
DR= D + E
tR 
(OONR)u w  kRw  [D(OON1)+ E(OON2)]/(D + E)uw kRw
kR= pR 2S =(Dp + Ep)/[2S(D + E)]= p/2S = k
NR : a point belonging to the resultant screw axis, in Pl (O,Aw).
One can identify  in [D(OON1) + E(OON2)]  ( D + E ) the barycenter (center
of mass) of the point N1 and the point N2 with the mass D ( D + E ) and the
R
1
2
One can readily demonstrate
(N
NRN1) = (OON1)  (OONR) = (OON1)  [D(OON1)+ E(OON2)]  (D + E)
= (OON1)  [D(OON1)+ E(OON1  N1N2)]  (D + E)
= E (N
N2N1)  (D + E)
(10a)
By the same token, 
(N
NRN2) = D (N
N2N1) / (D + E)
(10b)
Equations (10a) and (10b) show that the coefficients D/(D+E) and
E/(D+E) can be expressed with ratios of vectors that are derived of the
arrangement on a straight line of the three points N1, N2 and NR, namely
D (D + E) =(N
N NR)/ (N
N2N1) and  E  (D + E) = (N
N1NR) /(N
N1N2).
The resultant twist can be identified as the twist of a H pair with the
R
that are represented by the following product of three subgroups of
helical displacements
{H(N1, ww, p)} {H(N2, ww, p)}{H(NR, ww, p)}  with NR line (N1N2)
(11)
The position of NR on the straight line N1N2 can be anyone.  The three
H pair axes lies in the same plane parallel to ww, Figure 6.  Furthermore,
the planar case is a special case (p =0) of the pseudo-planar case.  Hence,
a generator RRR of planar gliding motion becomes singular iff the three
R axes lies in a plane as shown in Figure 7. 
441
Pseudo-Planar Motion Generators
mass E (D + E ), respectively. Hence, N  lies on the straight line N N .
pitch p and the axis (N , ww). We find out the singular chain postures
Figure 6. A HHH chain with 
a local infinitesimal singularity. 
of RRR generator of planar motion.
Figure 7. Infinitesimal singularity
E[ww u(OOM) + (OON )uw
 k w]; D and E denote infinitesimal angles in each 
of the two H pairs.  The resultant twist d M
M of a serial array of two parallel
–
–
–
–
=
=
=
=
+
/
+
 + 
 + 
/
/
/
+
/
/
/
/
/
2
/

5.
Let us consider a pseudo-planar chain including a P pair generating
{T ss)}.  An infinitesimal displacement belonging to the subgroup {T (ss)} is
the point transformation M o M' = M + Es where E is an infinitesimal
real number.  This transformation is an infinitesimal translation that
has no screw axis dM
M = Es.  Now, let us consider one H pair having the
axis (N,  w) and the pitch p= 2Sk whose twist is d1M = D[ww u(OOM) +
(OON) uw 
 kw] and one prismatic P pair parallel to the unit vector ss
whose twist is d2M = Es.  The resultant twist of the serial array HP can
be expressed as 
dRM =d1M+d2M= D[ww u(OOM)+(OON)uw
(kw+E/Ds)]=DR[wwu(OOM) +ttR] (15)
in which DR(=D) denotes the infinitesimal angle in the resultant twist.
One can readily identify the twist of a H pair.  The twist axis is parallel
to  w.  The pitch is pR = 2Sw.tR= 2S[k+E/D(ww.s)] = 2Sk = p because ww.s = 0, ss
being perpendicular to ww.  The axis position is determined by a point NR
belonging to the resultant screw axis. The point NR is chosen in the plane
Pl (O, Aw).  (OONR)=  w u tR= OON +  (E/D)ww u s.  The vector
us is parallel to
the plane Pl (O, Aw) and is perpendicular to ss.  Moreover, one can verify
that wwus is a unit vector.  The number a = E/D is the abscissa of point NR
number. 
We find out the singular postures of a HPH generator of Y-motion.
The P pair is perpendicular to the plane of the two parallel H axes as
shown in Figure 8.
The previous resultant twist of a HP array is also the resultant twist
herefore, Figure 9 shows a singular pose of a PHH
generator.  Furthermore, Figure 10 and Figure 11 depict the singular
poses in the generators RPR and PRR (or RRP) of the subgroup {G (ww)} of
planar gliding motions perpendicular to ww.  
442
C.-C. Lee and J.M. Hervé
Infinitesimal Singularity in Chains with One P
in the frame of reference (N,  wu s). The abscissa a can be any real
Figure 8. Local infinitesimal singularity 
larity of PHH Y-motion generator.
of HPH Y-motion generator.
of a PH array. T
 
Figure 9. Local infinitesimal singu-
(
+
+
w

To sum up, a HPH, PHH or HHP open chain aiming to be a generator
of Y-motion has a local infinitesimal singularity iff the P pair is
perpendicular to the plane of the two parallel H axes. 
What is more, based on the above findings, the possible local singular
postures of Y motion generators with hinged parallelograms are readily
deduced and are displayed in Figure 12.
(a) deduced from Figure 8
(b) deduced from Figure 5(b)
(c) deduced from Figure 9
(d) deduced from Figure 3(b)
(e) also deduced from Figure 3(b)
(f) deduced from Figure 3(a)
443
Pseudo-Planar Motion Generators
Figure 10. Infinitesimal singularity 
larity of PRR G-motion generator.
Figure 11. Infinitesimal local singu-
of RPR G-motion generator.

(g) also deduced from Figure 3(a)
(h) also deduced from Figure 3(a)
6.
Conclusion
Five distinct architectures of Y motion generators with Reuleaux pairs
and seven ones with hinged parallelograms are enumerated and their
kinematic chains are graphically displayed in order to be a tool for the
selection of limb structures in the synthesis of parallel manipulators.
The singular postures resulting of undesired motion with finite and
infinitesimal amplitude are disclosed through the study of group
dependency of displacement subsets and linear dependency of twists,
manipulators with pseudo-planar limbs can be envisioned but this lies
outside of the scope of this paper.
References
Angeles, J. (2004), The Qualitative Synthesis of Parallel Manipulators, ASME J.
Delassus, E. (1922), Les Chains Articulées Fermées et Déformables à Quatre
Hervé, J. M., (1978), Analyse Structurelle des Mécanismes par Groupe des
Hervé, J. M. (2004), Parallel Mechanisms with Pseudo-Planar Motion Generators,
Lee, C.–C. (1998), An Account of Delassus Three-Bar Overconstrained
Mechanisms, Proceedings of the First National Conference on the Design of
Reuleaux, F. (1875), Theoretische Kinematik:Grunzüge einer Theorie des
Maschinenwesens. Vieweg, Braunschweig, Reprinted as Kinematics of
Machinery by Dover, New York, 1963.   
Waldron, K. J. (1969), The Mobility of Linkages, Ph.D. Dissertation, Stanford
University.
444
C.-C. Lee and J.M. Hervé
Figure 12. Singular postures of Y-motion generators with hinged parallelograms.
respectively. It is quite clear that several novel 3-dof parallel
Mech. Design, Vol. 126, pp. 617 674.
–
–
–
On advances in Robot Kinematics, Kluwer Academic Publishers, pp. 431    440.
–
Mechanisms and Machines, Tainan, Taiwan R.O.C., pp. 31   37.
–
Membres, Bull. Sci. Math., Vol. 46, pp. 283  304. 
Déplacements, In: Mechanism and Machine Theory, Vol. 13, No. 4, pp. 437   450.

ON PKM WITH ARTICULATED TRAVELLING-
PLATE AND LARGE TILTING ANGLES  
Sébastien Krut, François Pierrot, Olivier Company 
LIRMM, UMR 5506 CNRS – Université Montpellier 2 
161 rue Ada, 34392 Montpellier CEDEX 5, France 
<krut, pierrot, company>@lirmm.fr  
Abstract 
This paper discusses some ways to achieve large tilting motions with PKM 
by resorting to articulated travelling plate. Different options are firstly 
presented: remote actuation, hybrid architectures, redundancy, rotation-
amplification and translation-to-rotation transformation. Starting from two 
of those features, the aim of this paper is to go one step further and to show 
that it might be possible to design a 5-DoF (Degrees of Freedom) mechanism 
with large tilting angles about two axes. 
Keywords: 
1.  
The idea of parallel mechanisms resorting to a non-rigid (or 
articulated) moving platform (traveling plate) which includes passive 
joints has been introduced recently and a few academic prototypes have 
already demonstrated the effectiveness of this principle (Pierrot et al., 
1999; Krut et al., 2003). These prototypes implement Scara motions.  
Indeed, the 4 DoF of Scara motions are well adapted to pick-and-place 
tasks: 3 translations to carry an object from one point to another, plus 
one rotation about a given axis in world coordinates for the orientation. 
For efficient pick-and-place a 360-degree orientation range is expected. 
Robots inspired from Delta  architecture (Clavel, 1985) encountered a 
real commercial success achieving this task because of their high 
dynamics (acceleration capability) that has a strong influence on cycle 
time. This is due to their lightweight (actuators are fixed on the base) 
parallel (having closed kinematics chains) design. However, the RUPUR 
central kinematic chain (R: Revolute, U: Universal, P: Prismatic, bold 
letter stands for actuated joint) that transmits the rotational motion 
from a revolute actuator fixed on the frame to the effector may become a 
weak point. This is particularly true for Delta with huge workspace or, 
even more, with linear Delta that might be used for designing machine-
tools. 
Most of recent researches in that field have proposed different designs 
to obtain Scara motions either for serving as pick-and-place robots, or for 
© 2006 Springer. Printed in the Netherlands.
445
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 445–454.
PKM, articulated travelling-plate, large tilting angles 
Introduction  

being a part of a more complex machine-tool; some of them are parallel 
others have non-fully-parallel designs  (Angeles et al., 2000). Other 4-DoF 
parallel mechanisms have been studied in the past, but they are 
dedicated to different applications such as Koevermans’ flight simulator 
(Koevermans et al., 1975) and Reboulet’s four-DoF wrist  (Reboulet et al., 
1991). Even more recently, a machine with a moving platform including 
passive prismatic joints and a “Translation-to-Rotation” transformation 
system has been introduced  (Krut et al., 2003); in the latest paper it was 
shown that it was possible to get a realistic practical design for a very 
specific design: (i) four linear motors in the same plane and aligned on 
the same direction, (ii) a three-part moving platform. Moreover, it 
induces very simple kinematics model in closed form for both Inverse and 
Forward problems. 
The aim of this paper is to go one step further and to propose two 
ideas: 
1. It might be indeed possible to obtain a 4-DoF design which 
compares directly with commercially available Delta-based 
robots (e.g. the FlexPicker, an ABB Robotics piece of harware) 
in terms of technology, workspace, and performance while 
avoiding the RUPUR kinematic chain. 
2. It might be possible to design a 5-DoF machine with large 
tilting angle about two axes. 
To do so, we have designed the prototype of a robot (we call Eureka) by 
resorting to several components from the industrial FlexPicker robot.  A 
prototype is about to be built. Its design can be seen as an “extension” of 
the principle of articulated travelling plate with passive linear joints. 
Hence, it also combines actuation redundancy so that we obtain a 5-DoF, 
large-tilting-angle solution. 
In this paper, this prototype is described and the way to achieve the 
desired rotations is discussed. Then, geometrical models are derived (a 
nice feature for this robot is that the forward geometrical model can be 
written in a closed form). Afterwards, a kinematic modelling able to 
witness all the singularities of the robot is established. It is based on a 
detailed modelling of the so-called “spatial parallelograms” which are 
described here for what they really are: two SS chains. It shows up the 
geometrical condition that must be verified in order to achieve the 
desired motions.  
2.  
It is well established that PKM suffers from different types of 
singularities that are often said to belong to two families: 
446 
S. Krut et al.
mechanisms, like Kanuk  (Rolland, 1999) or H4  (Pierrot et al., 1999), some 
Getting Large Tilting Angles  

x 
Serial-type (or under-mobility) when the mechanism loses one 
(or more) degree of freedom; 
x 
Parallel-type 
(or 
over-mobility) 
when 
the 
mechanism’s 
stiffness vanishes in one (or more) direction. 
In the following section, this paper will discuss this description of 
singularities (even explaining that additional problems exist) but it is 
nevertheless true that the tilting angles are often limited by parallel-type 
singularities. So far, different solutions have been proposed to overcome 
that problem and getting larger tilting angles, as described in the 
following sub-sections: 
Remote actuation – One way to get large tilting angles is to arrange 
one revolute joint on the travelling plate (in a “serial” way) and, to limit 
the moving parts masses, to place the actuation in a fixed remote 
location, that is, the base. It is the option selected for most Delta robots, 
using a telescopic fourth chain (with an RUPUR arrangement) dedicated 
to tool rotation. This principle allows the rotation range to be as large as 
for serial chains (indeed, the last rotation is actually arranged in a serial 
way...) while keeping the moving masses low because all motors are still 
fixed on the base. 
Hybrid architecture – Kinematic optimization is always an open 
option when a PKM has to be designed, and it is often feasible to select 
angles range. Obviously, this optimization process is made easier if some 
constraints are removed, for example if the machine is designed for 
tilting purpose only. This solution leads to machines made with two sub-
parts, each of them specialized in only a part of the task. 
Redundancy – The general concept of “redundancy” applied to 
mechanism theory can be roughly stated as follows: installing more 
actuators than the number of the TCP’s (Tool Control Point). For serial 
number of cases. The principle is here to select among the possible joint 
positions, one position that is far enough from singularities. 
Moreover, PKM offer the ability to create a different type of 
redundancy, called “actuation redundancy”, that can be described as 
447 
of legs, etc.) to maximize the workspace of a mechanism in terms of tilting 
an “optimal” set of design parameters (position of actuators, length 
chains, this gives, for a given position of the TCP, and infinite number 
redundancy”) exists for PKM but it has been used in a very limited 
may help in avoiding singularities. This option (called “kinematic 
of actuated joints positions. Selecting properly a set of joint positions 
is to choose among the possible sets of joint forces, one set of forces 
force sets exist for balancing the external load. In that case, the principle 
follows: for a given set of external load, an infinite number of joint 
On PKM with Articulated Travelling-plate

implementation of such a principle). 
This type of redundancy has been studied in more details for PKM 
than the previous one (for kinematic redundancy most efforts had been 
dedicated to the serial case) and several prototypes have been built, 
giving researchers the opportunity to evaluate control schemes. Indeed, 
control is here the key issue since actuation redundancy leads to over-
constrained mechanisms. Consequently internal forces may exist, and 
control schemes have to cope with that. 
Rotation amplification – In recent years, we have studied such an 
option in some details, by proposing different mechanism architectures 
based on one key principle: designing a travelling plate which includes 
passive revolute joints. This was the base of H4 architecture, a 
mechanism for “Scara-like motions”, already described. H4 is based on 4 
identical elementary chains (R[SS]2 chains) and on an articulated 
travelling plate equipped with 3 passive revolute joints. The last revolute 
joint is moved by a coupling system about a 360 degree range, which 
relates its motion to the motion of another passive revolute joint that has 
only a 90 degree range by using an additional gear-based amplification. 
Translation-to-Rotation transformation – It has been shown that 
H4 is an architecture providing Scara motions. However, some of its 
limitations can be pointed out: 
x When tool orientation changes, the Jacobean matrix condition number 
may vary a lot, leading to important changes in machine behaviour; 
x It has been proved that the relative positions of the four “spatial 
parallelograms” must be properly selected to avoid singular cases; 
x Its forward geometrical model has not been established in analytical 
form, except for specific arrangements. 
It was proposed in Krut et al., 2003, to build travelling plates with 
prismatic passive joints instead of revolute joints. It is always possible to 
transform this translational motion into a rotational one by means of 
rack-and-pinion, belt or cable-and-pulley devices. This solves most 
difficult points due to revolute joints: models are simpler, load balance is 
easier to achieve, general design is simpler, etc. 
This section of the paper introduces a novel mechanical architecture 
which combines two of the previous features. Eureka, the proposed 
machine, is redundant (6 actuators for 5 DoF provides actuation 
redundancy) and is based on an articulated three-body travelling plate 
with two linear joints. The machine offers 3 translations and 2 rotations 
with large tilting capabilities in two directions; the first axis of rotation 
448 
S. Krut et al.
which guarantees a good stiffness (see Ryu et al., 1998, for a good 
.3 Combining Redundancy and T-to-R Transformation 

has a constant direction with respect to a fixed frame, the second axis is 
orthogonal to the first one. 
A detailed kinematic analysis is carried out and leads to geometrical 
conditions to be verified by the mechanism for proper functioning. Then a 
kinematic modelling illustrates the mechanism simplicity and provides a 
first evaluation of the machine’s workspace. Finally, preliminary 
information is given regarding practical implementation of this new 
architecture. 
The proposed machine is a 6-actuator / 5-dof parallel mechanism. In 
Fig. 1, a joint-and-loop graph is depicted: grey boxes represent actuated 
joints; white boxes passive joints and circles express a kinematic coupling 
between two joints. 
 
R
coupling
coupling
Moving
Platform
Base
P
P
P
S
S
S
S
P
S
S
S
S
P
P
S
S
S
S
P
S
S
S
S
P
 
As for Delta and H4 architectures, the actuators are fixed on the base. 
Actuators may be rotational or linear; one S-joint per chain may be 
replaced by U-joint (to get rid of internal motions). One must notice the 
machine’s symmetrical architecture: the machine’s upper and lower parts 
are identically made of a “spatial-parallelogram” and two single rods. 
Each single rod is connected to the “spatial parallelogram”. 
Note that, in a general matter, the “spatial-parallelogram” chains 
2
parallelogram” made of  PR(RR)2R chains (as done on the Orthoglide, see 
Chablat et al., 2002) adds two constraints on the mechanism (3 
translations and 1 rotation remain feasible). 
449 
 chains) only add one constraint on a mechanism  
(3 translations and 2 rotations remain feasible) while a “spatial-
(that is, the P(SS)
Figure 1. Joint-and-loop graph. 
Figure 2. Kinematics scheme. 
On PKM with Articulated Travelling-plate
3.1 
General Concept 

The travelling plate is the one introduced in Krut et al., 2003, with the 
I4L robot: while the two sub-parts shift one relatively to the other, a 
mechanical device transforms this motion into a rotation. Two types of 
travelling plates exist (see Fig. 3): Type 1 is made of two prismatic joints 
and two kinematically coupled rack-and-pinion systems. It has a 
symmetrical design. 
 
(a) Type 1 
 
(b) Type 2 
3.2 
Singularities analysis is often based on the analysis of the standard 
Jacobean matrices 
x
J  and 
q
J  representing the input-output velocity 
relationship: 
 
 
q
x
J q
J x

,  
(1) 
where q  and  x  are respectively  the joint velocity vector and the 
operational velocity vector. 
But other kind of singularities can occur (Zlatanov et al., 1998). To 
reveal them, a deeper analysis is required. At first, we will recall the fact 
that “spatial parallelograms” can be seen in two different ways. The 
realistic case where spherical joints are modelled as 3-DoF joints and not 
as 2-DoF joints is considered here. Then, two types of modelling will be 
given: one suggesting that the linear guide is a cylindrical joint (isostatic 
modelling), and another assuming that it is a prismatic joint (over-
constrained modelling). In both cases, geometrical constraints, which 
must be fulfilled to get rid of internal singularities, will be derived. 
According to Hervé’s notations (see Hervé, 1999) about displacement 
subgroups, ^ `
T  stands for the subgroup of spatial translations and 
^
`
( )
X u
 stands for the subgroup of Schoenflies displacements (or Scara 
motions), where u  is a unitary vector collinear to the rotation axis. If a 
closed loop mechanism is composed of two chains producing Schoenflies 
displacements with
z
v
u,  then: 
 
^
` ^
`
^ `
( )
( )
X
X
T
 
u
v

 
(2) 
450 
S. Krut et al.
Figure 3. Different possibilities of travelling plate. 
the parts. Type 2 is made up with one part less, but loses Type 1’s 
symmetrical design, which is good for balancing the loads among all  
A Remark on Singularity Analysis 

2
easily handled with such a technique since those chains correspond to 
Schoenflies subgroup. 
 
(a) RR(RR)2R 
 
(b) R(SS)2 
The case of machines with R(SS)2 chains (Fig. 4-b) is more complex: 
each chain provides 5 DoF, 3T-2R, and does not correspond to a group. 
Indeed, it is possible that the union (  ) of two 3T-2R chains generates a 
3T-3R motion. 
This implies the recourse to a more complex analysis when dealing 
with mechanisms based on R(SS)2 chains: for lack of space, this is 
recalled here, but the reader may find relevant information in Company 
et al., 2006. 
In this section, the focus is given to a particular design, where the six 
linear motors are all collinear with vector 
z
workspace in this particular direction. The selected geometrical 
parameters are as follows 
0.45 m
H  
, 
0.08 m
I  
 and 
0.4 m
J  
1. The values of geometrical parameters are: 
0.05 m
D  
, 
0.06 m
E  
 and 
1
0.05 m/rad
k  
. Note that the amplification ratio 
1k  is chosen equal to 
D  in order to have same rotation capabilities for T  and M  (+/-90 degrees 
for this design). Lengths of rods are: 
0.9 m
il  
, 
{1,
,6}
i 
!
. Actuators 
limits are: 0
1.3m
iq
d
d
. Fig
 5 presents the domain where the condition 
number of the normalized Jacobean matrix is smaller than 8 (note that 
by the actuators’ stroke). 
 
451 
e : this guarantees a large
along the Z direction corresponding to z, the workspace is only limited 
 (See Fig. 2 
for geometrical parameters explanations). The travelling plate is of type 
Figure 4. Two ways to model “spatial parallelograms”. 
that is to say that such a mechanism will produce only three trans- 
lations. The case of machines with RR(RR) R chains (Fig. 4-a) is 
On PKM with Articulated Travelling-plate
ure
3.3 
Workspace Analysis 

O
(m)
z
(m )
y
(m )
x
1
O
4
O
2
O
3
O
5
O
6
O
Figure 5. Workspace for 
cond(
-1
-1
q
x
x
J
J
W
) < 8 
Figure 6. CAD View of the Eureka 
It could be interesting, for simplicity purposes, to connect the “single 
rods” directly to the travelling plate; however, such a practical design 
faces too many self-collisions. The machine depicted in Fig. 7 (left) shows 
such a practical design. Another architecture avoiding self-collisions is 
shown in Fig. 7 (right). It involves curved shapes of the single rods in 
order to avoid self-collisions. 
A prototype is about to be built. The practical design is extremely 
simple thanks to Linear motors (Fig. 6). Dimensions are the ones 
introduced for computing the workspace. Rods and travelling plate are 
S. Krut et al.
452
prototype. 
Figure 7. Self-collision-free design #1 and #2. 
3.4 
Practical Design Considerations 

made of aluminium. Instead of using rack-and-pinion systems, the 
mobile platform has been equipped with cable-pulley devices. This 
kinematics provides the same displacements as those of the Tricept 
robot. This design is well suited for the manipulation of light objects, but 
other applications are still possible. 
A design of a haptic master arm based on this kinematics is proposed 
in Fig. 8. It uses revolute actuators instead of prismatic ones, so the 
footprint is reduced. DD motors are used in order to reduce friction. The 
required range for angular displacements is +/ 45 degrees. This allows 
the use of an articulated travelling plate based on a planar parallelogram 
provides three Translations plus two Rotations (3T-2R). The missing 
rotation (to get the complete master arm) is obtained using a carried 
revolute axis, located directly on the ending stick. This is similar to the 
design of classical master arms, such as the PHANToM (SensAble 
Technologies). 
 
 
In this paper, several techniques for reaching high tilting angles have 
been presented, with a focus on solutions related to articulated travelling 
plates. Even though such results are still at an early stage of 
development, they show that it might be possible to use (i) on the one 
hand, travelling plates embedding passive joints which allows local 
motion amplification, and (ii) on the other hand, actuation redundancy as 
453 
to provide the desired rotation. The translation to rotation trans- 
formation is then suppressed and friction reduced. The Eureka base 
Figure 8. CAD view of the Eureka haptic arm. 
On PKM with Articulated Travelling-plate
–
4. 
Conclusion 

a way to overcome some singular positions that usually limit the range of 
motion. 
References 
Angeles, J., Morozov, A., Navarro, O., A novel manipulator architecture for the 
production of  SCARA motions, Proceddings of IEEE International Conference 
on Robotics and Automation, San Francisco, April 24-28, 2000, pp. 2370-2375. 
Chablat, D., and Wenger, P., Design of a Three-Axis Isotropic Parallel 
Workshop on Fundamental Issues and Future Research Directions for Parallel 
Mechanisms and Manipulators, October 3-4, Québec, Québec, Canada, 2002. 
Clavel, R., Une nouvelle structure de manipulateur parallèle pour la robotique 
légère, APII, 23(6), 1985, pp. 371-386. 
Company, O., Krut, S., and Pierrot, F., Internal Singularity Analysis of a Class of 
Lower Mobility Parallel Manipulators with Articulated Travelling Plate, IEEE 
Transactions on Robotics, 2006 (to appear). 
Koevermans, W.P., Design and performance of the four dof motion system of the 
NLR research flight simulator, Proceedings of AGARD Conference, La Haye, 
20-23 October 1975, pp. 17-1/17-11. 
Krut, S., Company, O., Benoit, M., Ota, H., and Pierrot, F., I4: A new parallel 
mechanism for Scara motions, Proceedings of IEEE International Conference 
on Robotics and Automation, Taipei, Taiwan, September 14-19, 2003. 
Pierrot, F., and Company, O., H4: a new family of 4-dof parallel robots, 
Proceedings of IEEE/ASME International Conference on Advanced Intelligent 
Mechatronics, Atlanta, Georgia, USA, September 19-22, 1999, pp. 508-513. 
Reboulet, C., Rapport d’avancement projet VAP, thème 7, phase 3. Rapport de 
Recherche 7743, CNES/DERA, January 1991. 
Rolland L., The Manta and the Kanuk: Novel 4 dof parallel mechanism for 
industrial handling, Proceedings of ASME Dynamic Systems and Control 
Ryu, S.J., Kim, J.W., Hwang, J.C., Park C., Ho, H.S., Lee, K., Lee, Y., Cornel U., 
Park, F.C., and Kim, J., ECLIPSE: An Overactuated Parallel Mechanism for 
Rapid Machining, Proceedings of ASME International Mechanical Engineering 
Congress and Exposition, Vol. 8, USA, 1998, pp. 681-689. 
Zlatanov, D., Fenton, R.G., and Benhabib, B., Identification and classification of 
the singular configurations of mechanisms, Mechanism and Machine Theory, 
Vol. 33, No. 6, pp. 743-760, August 1998. 
454 
S. Krut et al.
pp. 831-844. 
Division IMECE’99 Conference, Nashville, November 14-19, 1999, vol. 67, 
Manipulator for Machining Applications: The Orthoglide, Proceedings 
of  
719-730. 
Hervé, J.M., The Lie group of rigid body displacements, a fundamental tool  
for mechanism design, Mechanism and Machine Theory, Vol. 34, 1999, pp. 

MOBILITY AND CONNECTIVITY
Abstract
This contribution provides new deﬁnitions of inﬁnitesimal mobility and
connectivity of kinematic chains. These deﬁnitions are straightforwardly
connected with accepted deﬁnitions of ﬁnite mobility and connectivity.
Further, screw theory is applied to the determination of the inﬁnitesimal
mobility and connectivity of multi-loop linkages. These results provide
a guide for the determination of the ﬁnite mobility and connectivity of
general topology of multiloop linkages, one of the important remaining
problems in mobility theory.
Keywords:
1.
Introduction
The last three years have seen a ﬂurry of studies about mobility and
connectivity of kinematic chains. For the most part, these analyses have
been focused on single-loop kinematic chains and parallel platforms.
Most of the few studies about mobility and connectivity of general mul-
tiloop linkages deal with the mobility and connectivity determined from
their velocity analysis. It is well known that the information gathered
via velocity analysis of any class of kinematic chains does not provide
conclusive information about their mobility and connectivity.
In this
© 2006 Springer. Printed in the Netherlands.
455
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 455–464.
IN MULTILOOP LINKAGES
contribution, it is shown that higher
analyses, in particular
order
Mobility, connectivity, multiloop linkages, screw theory
C´esar Real Diez-Mart´ınez
creal@iteso.edu
Jos´e M. Rico, J. Jes´us Cervantes-S´anchez
jrico, jecer@salamanca.ugto.mx
Jaime Gallardo
a
gjaime@itc.mx
Instituto Tecnol´ogico y de Estudios Superiores de Occidente
Guadalajara, Jal. M´exico
Facultad de Ingenier a Meca´nica El ´ectrica y Electr´onica
Universidad de Guanajuato, Salamanca, Gto. M ´exico
Departamento de Ingenier´a Mecanic
´
Instituto Tecnol´ogico de Celaya, Celaya, Gto. M ´exico
i

noted that Wohlhart, 1999 and Wohlhart, 2000, employed higher order
analyses to shed light into the characteristics of singular positions of
fully parallel platforms. In contrast, in this contribution the authors are
interested in general topology multiloop linkages. Further, the higher
order analyses are employed, in addition, as an important aid in the
determination of their mobility, a problem that remain unsolved in this
general case.
2.
Mobility and Connectivity
In this section, a review of the concepts of mobility and connectivity
as well as new deﬁnitions of inﬁnitesimal mobility and connectivity are
presented.
Deﬁnition 1.
Consider a single-loop or multiple loop kinematic
chain. The ﬁnite mobility of the chain, denoted by MF, in a given
conﬁguration is the number, minimum and necessary, of scalar variables
required to determine the pose, with respect to a link regarded as refer-
ence, of all the remaining links of the kinematic chain.
In our approach, the ﬁnite mobility depends not only on the kinematic
chain, but also of the conﬁguration of the kinematic chain to be analyzed,
and it becomes a property of the conﬁguration of the kinematic chain
and its neighborhood. This deﬁnition is motivated by the presence of
kinematotropic chains, Galletti and Fanghella, 2001, and diﬀers from the
deﬁnition, usually presented in undergraduate and graduate textbooks,
and adopted by Gogu, 2005.
Consider now the velocity analysis equation of the kinematic chain,
in a given conﬁguration, which can be written as follows
J⃗ω = ⃗0,
(1)
where, the Jacobian matrix, J, is a matrix with as many columns as
screws associated with the kinematic pairs of the chain and as many rows
as fundamental circuits and loops of the kinematic chain, multiplied by
6. Additionally, ⃗ω is the vector of joint rates, translational or angular,
associated with the screws of the chain, and the vector ⃗0 has the same
number of rows as the Jacobian matrix.
Deﬁnition 2. Consider a kinematic chain whose velocity analysis
equation is given by Eq. 1. Then, the kinematic chain has ﬁrst order
inﬁnitesimal mobility if there exists a vector ⃗ω1 ̸= ⃗0 that satisﬁes the
Eq. 1. Moreover, the number of independent components of the vector
⃗ω1 determines the number of ﬁrst order degrees of freedom, or ﬁrst
acceleration analysis, can be successfully employed in shedding light on
the mobility and connectivity of general multiloop linkages. It should be
456 
C.R. Diez-Martínez et al.

order inﬁnitesimal mobility, denoted by M1, of the chain in a given
conﬁguration.
Consider now the acceleration analysis equation of the kinematic chain
in the same given conﬁguration, which can be written as follows
J ˙⃗ω = −$L,
(2)
where, $L is the Lie screw that contains terms of the form [ωi $i ωj $j],
where the bracket represents the dual motor product or Lie product,
Unlike the velocity analysis equation, the accel-
eration analysis equation is non-homogeneous. Further, the solution of
a non-homogeneous linear system is given by the sum of the subspace
solution of the associated homogeneous system and a particular solution
associated homogeneous linear system is given by
J ˙⃗ω = ⃗0.
(3)
Therefore, a vector ˙⃗ω whose components are numerically equal to those
of any of the vectors ⃗ω1, solution of the Eq. 1, is also a solution of Eq.
3. Furthermore, a necessary and suﬃcient condition for the Eq. 2 to
have a particular solution is given, Bentley and Cooke, 1971, by
Rank(J) = Rank(J, $L).
(4)
If Rank(J) is less than the number of matrix rows, Eq. 4 frequently im-
poses additional conditions over the components of the vector ⃗ω1. These
additional conditions require that one or more of the independent com-
ponents of ⃗ω1 satisfy additional equations, frequently, these conditions
require that one or more of the independent components of ⃗ω1 be zero.
Let ⃗ω2 be the solution of both, the velocity and the acceleration analy-
ses equations. This result, provides the rationale for deﬁning the second
order inﬁnitesimal mobility of the chain.
Deﬁnition 3. Consider a kinematic chain in a given conﬁguration,
such that the velocity and acceleration analyses equations are given by
Eqs. 1, 2. The chain has a second order inﬁnitesimal mobility if there
is a non-zero vector ⃗ω2 that satisﬁes both equations. Furthermore, the
number of independent components of the vector ⃗ω2 determines the num-
ber of second order degrees of freedom, or second order inﬁnitesimal
mobility, denoted by M2, of the chain in a given conﬁguration.
Similarly, it is possible to deﬁne similar concepts regarding the con-
nectivity.
Consider a kinematic chain in a given conﬁguration.
The ﬁnite connectivity between a pair of links (i, j), in the kinematic
457 
see Rico et al., 1999.
Mobility and Connectivity
of the non-homogeneous system, Bentley and Cooke, 1971. Thus, the
Deﬁnition 4.

chain is the minimum and necessary number of joint – scalar – variables
that determine the pose of one link with respect to the other, and it if
denoted as CF (i, j).
Consider an arbitrary kinematic chain and assume that (i, j) is an
arbitrary pair of links of the chain. Further, assume that the velocity
analysis of the chain has been solved and that the unique velocity state,
i⃗V j
1 , of link j with respect to link i, following all possible paths between
links i and j has been determined. The velocity state i⃗V j
1 depends on
independent variables that solve the velocity analysis solution, contained
in ⃗ω1. These elements are linear or angular velocities associated with
the kinematic pairs of the chain. Further, i⃗V j
1 is a vector space. Then
it is possible to deﬁne the ﬁrst order inﬁnitesimal connectivity.
Consider a kinematic chain in a given conﬁguration
tivity between links (i, j), denoted by C1(i, j), is deﬁned as
C1(i, j) = dim(i⃗V j
1 ).
(5)
Consider a kinematic chain in a given conﬁguration
and let (i, j) be a pair of links. Further, assume that the velocity and
acceleration analyses of the chain has been solved. The number of in-
dependent variables of the vector ⃗ω2 might be less than the number of
independent variables of the vector ⃗ω1. Assume that the unique velocity
state of link j with respect to link i, using the solution of the velocity
and acceleration analyses ⃗ω2, denoted by i ⃗V2
j, is also known.
Then,
their second order inﬁnitesimal connectivity, denoted by C2(i, j),
is deﬁned by
C2(i, j) = dim(i ⃗V2
j).
(6)
Higher order mobilities and connectivities can be deﬁned accordingly.
3.
Mobility and Connectivity in Multiloop
Linkages
Consider the multiloop spatial kinematic chain shown in Fig. 1, pro-
posed by Fayet, 1995 and used by Wohlhart, 2004. The chain has two
spherical pairs, four cylindrical pairs, a planar pair and three revolute
pairs.
458 
Deﬁnition 6.
Deﬁnition 5.
C.R. Diez-Martínez et al.
and let (i, j) be a pair of links. The ﬁrst order inﬁnitesimal connec---

z 
y 
x 
Locating the origin of the coordinate system at point A, the screws
associated with the kinematic pairs are given by
A1
5$5a = (1, 0, 0; 0, 0, 0),
B1
4$4a = (1, 0, 0; 0, 1, 0),
A2
5a$5b = (0, 1, 0; 0, 0, 0),
B2
4a$4b = (0, 1, 0; −1, 0, 0),
A3
5b$4 = (0, 0, 1; 0, 0, 0),
B3
4b$3 = (0, 0, 1; 0, 0, 0),
C1
1$1b = (0, 0, 0; 1, 0, 0),
D1
2$2a = (0, 0, 0; 0, 1, 0),
C2
1b$1c = (0, 0, 0; 0, 1, 0),
D2
2a$1 = (0, 1, 0; 0, 0, 1),
C3
1c$6 = (0, 0, 1; −1, 0, 0),
E1
1$1a = (0, 0, 0; 0, 1, 0),
F
3$2
= (0, 1, 0; −1, 0, 1),
E2
1a$5 = (0, 1, 0; 0, 0, 0),
G1
6$6a = (0, 0, 0; 0, 1, 0),
H
8$7
= (0, 0, 1; 1, 1, 0),
G2
6a$4 = (0, 1, 0; −1/2, 0, 0),
J1
7$7a = (0, 0, 0; 0, 1, 0),
K
6$8
= (0, 1, 0; −1/2, 1, 0),
J2
7a$3 = (0, 1, 0; −1, 0, 0),
where the screws 5$5a, 5a$5b and 5b$4 correspond to the spherical pair
located in point A. Similarly, for the remaining kinematic pairs. Up to
the velocity analysis, the approach follows that proposed by Wohlhart,
chain is shown in Fig. 2. The graph associates links with vertex and
kinematic pairs with edges.
Mobility and Connectivity
459 
2004, see also Baker, 1981. The graph associated with the kinematic
Figure 1.
Kinematic chain proposed by Fayet and used by Wohlhart.

1 
2 
3 
5 
4 
6 
8 
7 
 
 
 
 D 
 F  
 J  
 H 
 K 
 C 
 E 
 A 
 B 
 G 
From this graph, and following the loops, it is possible to ﬁnd the
velocity analysis equation for the kinematic chain given, in matrix form,
by
J ⃗ω = ⃗0
or
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
5$5a
−5$5a
$0
5a$5b
−5a$5b
$0
5b$4
−5b$4
$0
4$4a
$0
−4$4a
4a$4b
$0
−4a$4b
4b$3
$0
−4b$3
3$2
$0
$0
2$2a
$0
$0
2a$1
$0
$0
1$1a
−1$1a
$0
1a$5
−1a$5
$0
$0
1$1b
$0
$0
1b$1c
$0
$0
1c$6
$0
$0
6$6a
−6$6a
$0
6a$4
−6a$4
$0
$0
6$8
$0
$0
8$7
$0
$0
7$7a
$0
$0
7a$3
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
T ⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
5ω5a
5aω5b
5bω4
4ω4a
4aω4b
4bω3
3ω2
2ω2a
2aω1
1ω1a
1aω5
1ω1b
1bω1c
1cω6
6ω6a
6aω4
6ω8
8ω7
7ω7a
7aω3
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
,
(7)
460 
Figure 2.
Graph of the kinematic chain proposed by Fayet and used by Wohlhart.
C.R. Diez-Martínez et al.

where $0 is a six dimensional vector whose elements are all equal to zero.
The solution of the velocity analysis solution, given by Eq. 7, is found
to be
5ω5a = 0,
5aω5b = 2 1ω1b + 2 4bω3 −1aω5,
5bω4 = −4bω3,
4ω4a = 0,
4aω4b= −2 1ω1b −2 4bω3,
3ω2
= 2 1ω1b + 2 4bω3,
2ω2a = −1ω1a,
2aω1 = −2 1ω1b −2 4bω3,
1cω6 = −4bω3,
6ω6a = 1ω1a −1bω1c,
6aω4 = 2 1ω1b + 2 4bω3,
8ω7
= 4bω3,
7ω7a = 1ω1a −1bω1c −4bω3 −2 1ω1b,
7aω3 = −2 1ω1b,
6ω8
= 2 1ω1b,
where, 1ω1b, 1bω1c, 1ω1a, 1aω5 and 4bω3 can be selected arbitrarily. There-
fore, the ﬁrst order mobility is, M1 = 5. Furthermore, the ﬁrst order
connectivity matrix is given by
CI =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
2
2
3
2
3
3
3
2
0
1
2
2
3
3
3
2
1
0
2
2
3
2
3
3
2
2
0
2
2
2
2
2
2
2
2
0
4
3
3
3
3
3
2
4
0
2
1
3
3
2
2
3
2
0
1
3
3
3
2
3
1
1
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
.
(8)
The acceleration analysis equation has a solution, if and only if, the
augmented matrix, Ja, obtained by augmenting the coeﬃcient matrix,
J, with the column given by LS =
 $L1
$L2
$L3
T , or
Ja =
 J
LS

(9)
where, $L1, $L2 and $L3 are the Lie screws of the three loops of the
kinematic chain, satisfy the condition
Rank(Ja) = Rank(J).
(10)
This condition yields
4bω3 = 1ω1b = 0.
(11)
Therefore, the solution of the velocity analysis that takes into consid-
eration the acceleration analysis condition is given by Eq. 11 and the
Mobility and Connectivity
461 

following additional results
5ω5a = 0,
5aω5b = −1aω5,
5bω4 = 0,
4ω4a = 0,
4aω4b = 0,
3ω2 = 0,
2ω2a = −1ω1a,
2aω1 = 0,
1cω6 = 0,
6ω6a = 1ω1a −1bω1c,
6aω4 = 0,
8ω7 = 0,
7ω7a = 1ω1a −1bω1c,
7aω3 = 0,
6ω8 = 0,
Thus, only 1ω1a, 1aω5 and 1bω1c can be arbitrarily selected. Hence, the
second order inﬁnitesimal mobility is M2 = 3. Further, the second order
inﬁnitesimal mobility matrix is given by
CII =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
1
1
1
2
1
1
1
1
0
0
0
1
1
1
1
1
0
0
0
1
1
1
1
1
0
0
0
1
1
1
1
2
1
1
1
0
2
2
2
1
1
1
1
2
0
0
0
1
1
1
1
2
0
0
0
1
1
1
1
2
0
0
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
.
(12)
Finally, it will be shown that the results obtained up to this point,
allow to determine the ﬁnite mobility and connectivity of this multiloop
The
inﬁnitesimal mechanical liaisons associated with all the possible four
paths, I, II, III, IV , between links 1, regarded as the ﬁxed platform,
and 5, regarded as the moving platform, are the column spaces of the
matrices
1V 5
I
=
1$1a 1a$5,
1V 5
II =
	
1$1b 1b$1c 1c$6 6$6a 6a$4 4$5b 5a$5b 5$5a
,
1V 5
III =
	
1$2a 2a$2 3$2 4b$3 4a$4b 4a$4 5b$4 5a$5b 5$5a
,
1V 5
IV =
	
1$1b 1b$1c 1c$6 6$8 8$7 7$7a 7a$3 4b$3 4a$4b 4a$4 5b$4 5a$5b 5$5a
.
The absolute mechanical liaison is given by
1V 5
a = 1V
5
I ∩1V
5
II ∩1V
5
III ∩1V
5
IV =
 0
1
0
0
0
0
0
0
0
0
1
0
T
(13)
462 
parallel platforms, Rico et al., 2005, will be adapted for the task.
kinematic chain. For that purpose, recent results on the mobility of
C.R. Diez-Martínez et al.

It is easy to recognize 1V 5
a as the subalgebra, of the Lie algebra of the
Euclidean group, se(3), associated with cylindrical displacements along
the y axis. This result accounts for two of the degrees of freedom, from
the three determined by the second order inﬁnitesimal mobility. They
are the ﬁnite displacements associated with the screws 1$1a and 1a$5
translational motion, along the same axis y, and produced by the screws
1b$1c, located in point C, and 7$7a, located in point J, while the revolute
joints located between them remain inactive. This degree of freedom is
passive when the ﬁxed and moving platforms are links 1 and 5.
The conclusion is that the ﬁnite mobility of the multiloop linkage is
MF = M2 = 3. Therefore, the ﬁnite connectivities among the diferent
links, CF(i, j) are given by the elements of the second order inﬁnitesimal
connectivity matrix CII.
This contribution has shown that it is possible to provide higher-order
deﬁnitions of inﬁnitesimal mobility and connectivity that are congruent
with the usual deﬁnitions of ﬁnite mobility and connectivity. They pro-
vide a guide for the computation of ﬁnite mobility of general multiloop
linkages, this is, in the opinion of the authors, the most diﬃcult task in
mobility computations. The results have been veriﬁed using Adams c⃝.
The ﬁrst author thank Conacyt for the support of his M. Sc. studies.
The authors thank Concyteg for the support of several projects, includ-
ing a thesis scholarship for the ﬁrst author. This work is based on his
M. Sc. thesis at the Instituto Tecnol´ogico de Celaya.
References
Baker, J. E. (1981), On Mobility and Relative Freedoms in Multiloop Linkages and
Structures, Mechanism and Machine Theory, vol. 16, no. 6, pp. 583-597.
Bentley, D. L., and Cooke, K. L. (1971), Linear Algebra with Diﬀerential Equations,
New York: Holt, Rinehart and Winston.
Fayet, M. (1995), M´ecanismes Multi-Boucles I. D´etermination des Espaces de Torseurs
Cin´ematiques Dans un M´ecanisme Multi-Boucles Quelconque, Mechanism and Ma-
chine Theory, vol. 30, no. 2, pp. 201-217.
Galletti, C. and Fanghella, P. (2001), Single-Loop Kinematotropic Mechanisms,Mech-
anism and Machine Theory, vol. 36, no. 6, pp. 743-761.
Gogu, G. (2005), Mobility of Mechanisms: a Critical Review, Mechanism and Machine
Theory, vol. 40, no. 9, pp. 1068-1097.
Mobility and Connectivity
463 
located in point E. The remaining degree of freedom is related to the
4.
Conclusions
5.
Acknowledgements
,

Rico, J. M., Gallardo, J. and Duﬀy, J. (1999), Screw Theory and Higher Order Anal-
yses of Open Serial and Closed Chains, Mechanism and Machine Theory, vol. 34,
no. 4, pp. 559-586.
Rico, J. M., Aguilera, L. D., Gallardo, J., Rodriguez, R., Orozco, H., and Barrera,
J. M. (2006), A More General Mobility Criterion for Parallel Platforms, ASME
Journal of Mechanical Design, vol. 128, no. 1, pp. 207-219.
Wohlhart, K. (1999), Degrees of Shakiness, Mechanism and Machine Theory, vol. 34,
no. 7, pp. 1103-1126.
Wohlhart, K. (2000), Architectural Shakiness or Architectural Mobility of Platforms,
On Advances in Robot Kinematics, Lenarˇciˇc, J. and Staniˇsi´c, eds. Dordrecht:
Kluwer Academic Publishers, pp. 365-374.
Wohlhart, K. (2004), Screw Spaces and Connectivities in Multiloop Linkages, On
Advances in Robot Kinematics, Lenarˇciˇc, J. and Galletti, C. eds. Dordrecht: Kluwer
Academic Publishers, pp. 97-104.
464 
,
C.R. Diez-Martínez et al.

JACOBIAN INVERSE KINEMATICS
MANIPULATORS
Krzysztof Tcho´n
Institute of Computer Engineering, Control and Robotics
Wroclaw University of Technology
tchon@ict.pwr.wroc.pl
Janusz Jakubiak
Institute of Computer Engineering, Control and Robotics
Wroclaw University of Technology
Janusz.Jakubiak@pwr.wroc.pl
Abstract
We study Jacobian inverse kinematics algorithms for mobile manipu-
lators composed of a nonholonomic mobile platform and a holonomic
onboard manipulator. In general, the Jacobian algorithms converge lo-
cally, often producing weird end eﬀector and platform trajectories. In
the paper we use the existing theory of Newton algorithms in order to
improve the quality of convergence of the Jacobian algorithms. Speciﬁ-
cally, we examine a strategy of adjusting the steplength in the Jacobian
pseudoinverse algorithm that results from the aﬃne covariant Lipschitz
condition imposed on the mobile manipulator’s Jacobian. The aﬃne
covariant strategy is veriﬁed by extensive computer simulations and
compared with the constant length step and a simple Armijo strategies.
Keywords:
1.
Introduction
In this paper by a mobile manipulator we call a robotic system com-
posed of a nonholonomic mobile platform and a stationary manipula-
the platform and the holonomic kinematics of the onboard manipulator
are modelled as a driftless control system with outputs. The end-point
map of this system determines the kinematics of the mobile manipulator
Tcho´n and Jakubiak, 2003. The Jacobian inverse kinematics algorithm
for mobile manipulators are conveniently devised using the continua-
© 2006 Springer. Printed in the Netherlands.
465
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 465–472.
ALGORITHMS WITH VARIABLE
STEPLENGTH FOR MOBILE
tor ﬁxed to the platform. The nonholonomic constraints imposed on
Mobile manipulator, inverse kinematics, Jacobian algorithm

tion method Chitour and Sussmann, 1998; Divelbiss et al., 1998.
In
this framework, an inverse kinematics algorithm is determined by a dy-
namic system operating in an iniﬁnite dimensional Hilbert conﬁguration
space. Computable inverse kinematics algorithms make use of a Ritz
approximation of platform controls by truncated orthogonal series. The
Jacobian algorithms usually have local convergence and often produce
unrealistic platform and end eﬀector trajectories Tcho´n and Jakubiak,
2003. The fact that inverse kinematics algorithms for stationary manip-
ulators and mobile platforms are of the Newton type is well known, see
e.g. Isobe et al., 1992; Divelbiss et al., 1998; Duleba and Sasiadek, 2003.
In particular in Divelbiss et al., 1998 the line searching has been men-
tioned as a method of adjusting the steplength of the inverse kinematics
algorithm for a mobile platform.
Motivated by these circumstances in this paper we are attempting
at improving the quality of convergence of Jacobian inverse kinematics
algorithms by appropriate steplength adjustment. Our approach relies
on existing results for Newton algorithms Deulfhard, 2004. We consider
a general Jacobian inverse kinematics algorithm associated with a given
right inverse of the Jacobian. Then we formulate the aﬃne covariant
condition and obtain a prediction-correction strategy of the steplength
adjustment. This strategy is applied to a mobile manipulator composed
of a kinematic car platform and an RTR onboard manipulator, driven by
the inverse kinematics algorithm based on the Jacobian pseudoinverse.
The aﬃne covariant strategy is examined by computer simulations and
compared with two other strategies. Our conclusions are twofold. First:
the variable steplength improves both the speed and the quality of con-
vergence of the Jacobian pseudoinverse algorithm in comparison to the
case of constant steplength. Second, although generally proﬁtable, the
aﬃne covariant strategy is sometimes overpassed by a simple Armijo
choice of the steplength from among a ﬁnite set of possibilities.
The composition of this paper is the following. Section 2 recalls ba-
sic concepts of the endogenous conﬁguration space approach. Section 3
presents the aﬃne covariant steplength adjustment strategy for a gen-
eral Jacobian inverse kinematics algorithm. This strategy is speciﬁed to
the Jacobian pseudoinverse algorithm and examined by computer simu-
lations in section 4. The paper is concluded with section 5.
2.
Basic
oncepts
We shall study mobile manipulators whose kinematics are represented
by a driftless control system with outputs,
˙q = G(q)u = m
i=1 gi(q)ui,
y = k(q, x).
(1)
 
 and J. Jakubiak
h
466
K. Tchon
C

In (1) q ∈Rn, x ∈Rp and y ∈Rr denote, respectively, generalized
coordinates of the platform, joint positions of the manipulator, and the
end eﬀector location in the taskspace.
The control functions u(t) of
the platform and joint positions x of the onboard manipulator, acting
over a control time horizon T > 0, deﬁne the endogenous conﬁguration
space X = L2
m[0, T]×Rp. The space X equipped with the inner product
< (u1(·), x1), (u2(·), x2) >=
 T
0 uT
1 (t)u2(t)dt+xT
1 x2 becomes an inﬁnitely
dimensional Hilbert space with induced norm
||(u(·), x)||2 =
(u(·), x), (u(·), x) > .
(2)
An endogenous conﬁguration (u(·), x) ∈X determines a platform trajec-
tory q(t) = ϕq0, t(u(·)) and an end eﬀector trajectory y(t) = k(q(t), x).
The instantaneous kinematics Kq0,T : X →Rr of the mobile manipulator
are deﬁned as the end-point map of (1), i.e.
Kq0,T (u(·), x) = y(T) = k(ϕq0,T (u(·)), x).
(3)
The kinematics (3) deﬁne end eﬀector positions and orientations of the
mobile manipulator steered by the control (u(·), x) that can be reached
at T. By diﬀerentiation of the kinematics Kq0,T (u(·), x) we obtain the
analytic Jacobian
Jq0,T (u(·), x)(v(·), w) = C(T, x)
 T
0
Φ(T, s)B(s)v(s)ds+D(T, x)w.
(4)
The Jacobian may be interpreted as the output reachability map at T
of the linear approximation
˙ξ = A(t)ξ + B(t)v,
η = C(t, x)ξ + D(t, x)w,
(5)
to system (1) along the control-state trajectory (u(t), x, q(t)), initial-
ized at ξ0 = 0.
The matrices appearing in (5) have the standard
form A(t) =
∂
∂q (G(q(t))u(t)), B(t) = G(q(t)), C(t, x) =
∂k
∂q (q(t), x),
D(t, x) = ∂k
∂x(q(t), x), while matrix Φ(t, s) in (4) satisﬁes the evolution
equation
∂
∂tΦ(t, s) = A(t)Φ(t, s) with initial condition Φ(s, s) = In. Let
cobian Jq0,T (u(·), x) : X →Rr is surjective. This is equivalent to the
full rankness of the dexterity matrix
Dq0,T (u(·), x) =
C(T, x)
 T
0
Φ(T, s)B(s)BT(s)ΦT (T, s)ds CT(T, x) + D(T, x)DT (T, x);
467
Jacobian Inverse Kinematics Algorithms
>
us recall that an endogenous conﬁguration is regular, if the analytic
Ja

otherwise (u(·), x) is referred to as singular. The inverse kinematic prob-
lem for the mobile manipulator (1) consists in determining an endoge-
nous conﬁguration (ud(·), xd) such that for a given location yd of the
end eﬀector Kq0,T (ud(·), xd) = yd.
Jacobian inverse kinematics algo-
rithms for mobile manipulators are conveniently derived using the con-
tinuation method. Among them, the most often used is the Jacobian
pseudoinverse algorithm Tcho´n and Jakubiak, 2003; its alternative is
the extended Jacobian algorithm Tcho´n and Jakubiak, 2005. The Jaco-
bian pseudoinverse algorithm relies on the Jacobian pseudoinverse
(J#
q0,T (u(·), x)η)(t) =

BT (t)ΦT (T, t)CT (T, x)
DT (T, x)

D−1
q0,T (u(·), x)η
and assumes the following form
d
dθ

uθ(t)
x(θ)

= −γJ#
q0,T (uθ, x(θ))e(θ))(t),
(6)
where γ > 0 denotes the steplength, and e(θ) = Kq0,T (uθ(·), x(θ)) −yd
is the taskspace error. For the algorithm exploits the inversion of the
dexterity matrix, it is deﬁned only for regular conﬁgurations of the
mobile manipulator.
The dynamic system (6) produces a trajectory
(uθ(·), x(θ)) ∈X parameterized by θ ∈R.
A solution (ud(t), xd) to
the inverse kinematic problem is computed as a limit (ud(t), xd) =
limθ→+∞(uθ(t), x(θ)) .
3.
Steplength
djustment
Let K = Kq0,T : X −→Y deﬁned by (3) describe the kinematics of a
mobile manipulator. For simplicity of notation, in this section we shall
denote endogenous conﬁgurations by z = (u(·), x) and omit subscripts.
At a regular conﬁguration z ∈X the Jacobian (4) has a right inverse
D K#(z) : Rr →X that determines an associated Jacobian inverse
kinematics algorithm
d z(θ)
d θ
= −γD K#(z(θ))e(θ),
z(0) = z0.
(7)
As before, the solution of the inverse kinematic problem is obtained as
a limit zd = limθ→+∞z(θ).
In particular, when D K# = J#
q0,T , the
algorithm (7) coincides with the Jacobian pseudoinverse algorithm (6).
After discretization the algorithm (7) becomes a Newton algorithm
z(k + 1) = z(k) −γD K#(z(k))e(k),
k = 0, 1, 2, . . . .
(8)
The quantity D K#(z(k))e(k) appearing in (8) is called the Newton
direction at the step k. It is known that the Newton direction guarantees
468
 
 and J. Jakubiak
h
K. Tchon
A

a gradual decrease of the taskspace error from step to step, provided that
the steplength γ is chosen properly. Relying on Deulfhard, 2004 we shall
consider two strategies of the steplength choice in (8). The ﬁrst strategy
is called the Armijo strategy that consists in deﬁning for a ﬁxed integer
m a set Γm = {1, 1
2, . . . ,
1
2m } of candidate steplengths and choosing at
every step of the algorithm γ = argminα∈Γm||K(z −αDK#(z)e)−yd||2.
A more sophisticated strategy may be based on the aﬃne covariant
Lipschitz condition imposed on D K,
||D K#(z)(D K(y) −D K(w))v|| ≤ω||y −w||||v||,
(9)
where ||·|| denotes the norm (2) in X, v, w, y, z ∈X, and ω > 0 is a Lips-
chitz constant. It may be checked that in a singularity-free region of the
endogenous conﬁguration space the aﬃne covariant condition is satisﬁed.
However, for the reason that usually the Lipschitz constant ω in (9) is
not available, the computation of γ relies on some estimates achieved in
a prediction-correction procedure Deulfhard, 2004, culminating in the
following algorithm of the steplength adjustment. The algorithm is ini-
tiated at z0 with γ0
1 = 1. At the step k the algorithm returns z0(k),
computes e0(k) = K(z0(k)) −yd, and makes a prediction γ0
k.
Then
the predicted value of γ0
k is subject to a series of corrections. Suppose
that after the ith correction step the algorithm proposes a steplength
γi
k. Then the algorithm ﬁnds zi(k) = z0(k)−γi
kD K#(z0(k))e0(k), com-
putes ei(k) = K(zi(k)) −yd, and accomplishes the (i + 1)st correction
as γi+1
k
= min{γi
k/2, 1/hi+1
k
}, where
hi+1
k
= 2||D K#(z0(k))ei(k) −(1 −γi
k)D K#(z0(k))e0(k)||
(γi
k)2||D K#(z0(k))e0(k)||
.
These corrections are made a preassumed number of times yielding an
i∗such that γi∗
k = argmin i||ei(k)||2. Next, given γi∗
k the algorithm sets
z0 = z0(k+1) = zi∗(k), e0 = e0(k+1) = K(z0(k+1))−yd, and computes
a prediction for the step k + 1 as γ0
k+1 = min{1, 1/h0
k+1}, where
h0
k+1 = ||D K#(z0)(D K(z0) −D K(z0(k)))D K#(z0)e0||
γi∗
k ||D K#(z0(k))e0(k)||
.
In the next section we shall apply the above procedure to the Jacobian
pseudoinverse algorithm (6) driving a speciﬁc mobile manipulator.
4.
Computer
imulations
In simulations we shall use a Ritz approximation of platform control
functions by truncated Fourier series: u1(t) = λ10+2
j=1 λ1 2j−1 sin jωt+
469
Jacobian Inverse Kinematics Algorithms
S

λ1 2j cos jωt, u2(t) = λ20 + λ21 sin ωt + λ22 cos ωt, where ω = 2π
T . For
a suitable matrix P(t) the control can be written as u(t) = P(t)λ,
where the control parameters λ = (λ10 . . . , λ14, λ20, λ21, λ22) ∈R8. The
Ritz approximation deﬁnes a ﬁnite-dimensional, band-limited endoge-
nous conﬁguration space ˜
X ∼= R11, and yields the band-limited kine-
matics ˜Kq0,T (λ, x) and the band-limited analytic Jacobian
˜Jq0,T (λ, x) =

˜C(T, x)
 T
0
˜Φ(T, s) ˜B(s)P(s)ds, ˜D(T, x)

.
In consequence, a discrete band-limited Jacobian pseudoinverse inverse
kinematics algorithm (6) will take the following form

λk+1
xk+1

=

λk
xk

−γ ˜JT
q0,T (λk, xk) ˜D−1
q0,T (λk, xk)˜ek,
(10)
where ˜e = ˜Kq0,T (λ, x) −yd and ˜Dq0,T (λ, x) = ˜Jq0,T (λ, x) ˜JT
q0,T (λ, x).
The inverse kinematics algorithm (10) has been applied to a mobile
manipulator composed of a kinematic car platform carrying an RTR
manipulator, portrayed in Figure 1. The vector q = (q1, q2, q3, q4) =
Figure 1.
(x, y, ϕ, ψ) ∈R4 includes the position and the orientation of the platform
and the heading angle of its front wheels. The vector x = (x1, x2, x3) ∈
R3 denotes joint positions of the onboard manipulator. Cartesian posi-
tions of the end eﬀector y = (y1, y2, y3) ∈R3 serve as taskspace coor-
dinates. The representation (1) of kinematics, excluding the side-slip of
platform wheels, takes the following form
˙q1 = u1 cos q3 cos q4,
˙q2 = u1 sin q3 cos q4,
˙q3 = u1 sin q4,
˙q4 = u2,
y = (q1 + L cos(q3 + x1), q2 + L sin(q3 + x1), x2 + l3 sin x3),
where L = l2 + l3 cos x3. In simulations the length of the car l = 1, the
link lengths of the onboard manipulator l2 = 0.5, l3 = 1, and the control
470
 
 and J. Jakubiak
h
K. Tchon
RTR manipulator mounted on kinematic car.

time horizon T = 1. The initial platform coordinates q0 = (0, 10, 0, 0),
the initial joint positions x0 = (0, 2, π/4), the desired taskspace point
yd = (0, 0, 1). The algorithm has been initiated at diverse λ10, λ20 lying
in a square [−100, +100]2, while remaining λij = 0. Table 1 displays
the number of steps after which yd has been reached within the accu-
racy of 10−6.
The symbol > 2000 means that within 2000 iterations
the convergence has not been observed. For comparison, the Jacobian
pseudoinverse algorithm has been examined with constant steplength
γ = 1 and with the steplength governed by the Armijo strategy with
m = 5. Figure 2 shows platform and end eﬀector trajectories obtained
for λ20 = −λ10 = 0.01 using the constant step and the aﬃne covariant
strategies.
5.
Conclusions
Assuming the aﬃne covariant Lipschitz condition we have obtained
a strategy of steplength adjustment in Jacobian inverse kinematics al-
gorithms for mobile manipulators. This strategy has been implemented
for the Jacobian pseudoinverse algorithm and examined by computer
simulations. The examination has demonstrated that using a variable
steplength improves both the speed and the quality of convergence of
Table 1.
Convergence of the Jacobian pseudoinverse algorithm
λ10
λ20
γ = 1
Arm
cov
λ10
λ20
γ = 1
Arm
cov
100
100
136
14
13
100
100
17
22
16
10
10
11
11
11
10
10
37
70
40
1
1
100
27
29
1
1
276
132
94
0.1
0.1
295
25
113
0.1
0.1
249
331
65
0.01
0.01
152
28
52
0.01
0.01
1307
211
59
0.001
0.001
40
32
57
0.001
0.001
830
33
58
100
100
126
160
>2000
100
0
90
27
62
10
10
26
1158
117
10
0
90
334
145
1
1
138
60
20
1
0
91
302
26
0.1
0.1
241
22
47
0.1
0
101
30
89
0.01
0.01
115
86
54
0.01
0
205
40
58
0.001
0.001
177
427
46
0.001
0
332
29
55
100
100
509
310
344
100
0
189
360
62
10
10
78
573
142
10
0
353
29
167
1
1
75
26
1538
1
0
194
76
79
0.1
0.1
801
61
78
0.1
0
64
70
90
0.01
0.01
318
40
58
0.01
0
171
90
58
0.001
0.001
120
30
62
0.001
0
207
247
56
471
Jacobian Inverse Kinematics Algorithms
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–

Figure 2.
the algorithm in comparison to the case of constant steplength. When
the prediction-correction procedure produces very small steplenghts the
aﬃne covariant strategy may be overpassed by a simple Armijo strat-
egy. The fact that no lost of convergence has been observed along with
the result of Chitour and Sussmann, 1998 on global convergence of the
Jacobian pseudoinverse algorithm for the mobile platform from Figure 1
may suggest that the examined algorithm also converges globally.
6.
Acknowledgements
This research was supported by the Foundation for Polish Science.
References
Chitour, Y., and Sussmann, H. J. (1998), Motion planning using the continuation
method, In: Essays on Mathematical Robotics, ed. by J. Baillieul, S. S. Sastry and
H. J. Sussmann, Springer-Verlag, New York, pp. 91-125.
Deuﬂhard, P. (2004), Newton Methods for Nonlinear Problems, Springer-Verlag, Berlin,
2004.
Divelbiss, A., Seereeram, S., and Wen, J.T. (1998), Kinematic path planning for
robots with holonomic and nonholonomic constraints. In: Essays on Mathemat-
ical Robotics, ed. by J. Baillieul, S. S. Sastry and H. J. Sussmann, Springer-Verlag,
New York, pp. 127-150.
Duleba, I., and Sasiadek, J. Z. (2003), Nonholonomic motion planning based on New-
ton algorithm with energy optimization, IEEE Trans. Contr. Syst. Technology,
vol. 11, no. 3, pp. 355-363.
Isobe, T., Nagasaka, K., and Yamamoto, S. (1992), A new kinematic control of simple
manipulators, IEEE Trans. Syst., Man, Cybernet., vol. 22, no. 5, pp. 1116-1124.
Tcho´n, K., and Jakubiak, J.
(2003), Endogenous conﬁguration space approach to
mobile manipulators: a derivation and performance assessment of Jacobian inverse
kinematics algorithms, Int. J. Control, vol. 76, no. 14, pp. 1387-1419.
Tcho´n, K., and Jakubiak, J. (2005), A repeatable inverse kinematics algorithm with
linear invariant subspaces for mobile manipulators, IEEE Trans. Syst., Man, Cy-
bernet., – Part B Cybernetics, vol. 35, no. 5, pp. 1051-1057.
472 
K. 
 and J. Jakubiak
TchoĔ
Trajectory for constant steplength (left) vs. aﬃne covariant (right).

KINEMATICS AND GRASPING USING
CONFORMAL GEOMETRIC ALGEBRA
Julio Zamora-Esquivel and Eduardo Bayro-Corrochano
Center of research and advanced studies of IPN, Unit Guadalajara
Geovis Laboratory. Jalisco, Mexico
jzamora,edb@gdl.cinvestav.mx
Abstract
In this paper we introduce the conformal geometric algebra in the ﬁeld of
robot grasping. It help us to tackle problems of object modelling, hand
kinematics and vision system using a unifying geometric language. We
present an grasp algorithm using velocity control.
1.
Introduction
As the technology advances new mechanisms emerge that enable us
interact with a wider variety of objects, in this way new challenges re-
lated to object grasping planning arises. There are many approaches to
deal with this kind of problems based in shape primitives [Miller, 2003],
forces equilibrium [Borst, 1999] for cite two examples.
in how to obtain the optimal grasping points by means of mathemat-
ical modelling of the object and the manipulator. In this manner we
also obtain the hand (manipulator) pose. Conformal geometric Algebra
has been used in this work due to its powerful geometric representation
and algebraic richness of which helps greatly in the process of modelling
mechanical structures like the Barrett HandTM.
2.
In this paper we will specify a geometric algebra Gn of the n dimen-
sional space by Gp,q,r, where p, q and r stand for the number of basis
vector which squares to 1, -1 and 0 respectively and fulﬁll n = p + q + r.
We will use ei to denote the vector basis i. In a Geometric algebra
Gp,q,r, the geometric product of two basis vector is deﬁned as
eiej =
1
for
i = j ∈1, · · · , p
−1
for
i = j ∈p + 1, · · · , p + q
0
for
i = j ∈p + q + 1, · · · , p + q + r.
ei ∧ej
for
i ̸= j
Geometric algebra G4,1 can be used to treat conformal geometry in
a very elegant way.
In this geometry an Euclidean vector space R3
© 2006 Springer. Printed in the Netherlands. 
473
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 473–480. 
The Geometric Algebra of n-D Space
We are working
-

is represented in R4,1. This space has orthonormal vector basis given
by {ei} and eij = ei ∧ej are bivectorial basis where e23, e31 and e12
correspond to the Hamilton basis.
The unit Euclidean pseudo-scalar
Ie := e1 ∧e2 ∧e3, a pseudo-scalar Ic := IeE and the bivector E :=
e4e5. The conformal geometry is related to a stereographic projection in
Euclidean space. A stereographic projection is a mapping taking points
lying on a hypersphere to points lying on a hyperplane. In this case, the
projection plane passes through the equator and the sphere is centered
at the origin. To make a projection, a line is drawn from the north pole
to each point on the sphere and the intersection of this line with the
projection plane constitutes the stereographic projection. The points
are mapped to a point of conformal geometry by x = x+ 1
2 ∥x∥2 e∞+eo.
More information about the conformal geometry in [Hestenes, 2001].
3.
Barrett Hand Forward Kinematics
The direct kinematics involves the computation of the position and
orientation of the robot end-eﬀector given the parameters of the joints.
The direct kinematics can be easily computed provided that the lines of
the axes of screws are given for more information [Bayro, 2000].
In order to introduce the kinematics of the Barrett HandTM, we show
the kinematic of one ﬁnger, in this example we will assume that the
ﬁnger is totally extended. Note that such an hypothetical position is
not reachable in normal operation.
We points x1o, x2o and x3o to describe the position of each union and
the end of the ﬁnger in the Euclidean space, see the ﬁgure 1. Here we
use Aw, A1,2,3 and Dw as the dimension of the ﬁnger’s components.
x1o
=
Awe1 + A1e2 + Dwe3,
(1)
x2o
=
Awe1 + (A1 + A2)e2 + Dwe3,
(2)
x3o
=
Awe1 + (A1 + A2 + A3)e2 + Dwe3.
(3)
Figure 1.
J. Zamora-Esquivel and E. Bayro-Corrochano
474
Barrett hand hypothetical position.

Once we have deﬁned these points it is quite simple to calculate the
axes L1o,2o,3o, which will be used as motor’s axis. as you can see at the
ﬁgure 1.
L1o
=
−Aw(e2 ∧e∞) + e12,
(4)
L2o
=
(x1o ∧e1 ∧e∞) Ic,
(5)
L3o
=
(x2o ∧e1 ∧e∞) Ic.
(6)
when the hand is initialized the ﬁngers moves away to the home position,
this is the angle Φ2 = 2.46
by the joint two and the angle Φ3 = 50
degrees by the joint three. In order to move the ﬁnger from this hypo-
thetical position to its home position the appropriate transformation is
as follows:
M2o
=
cos (Φ2/2) −sin(Φ2/2)L2o,
(7)
M3o
=
cos (Φ3/2) −sin(Φ3/2)L3o.
(8)
Once we have gotten the transformations, then we apply them to the
points x2o and x3o in order to get the points x2 and x3 that represents
the points in its home position, also the line L3 is the line of motor axis
in home position.
x2
=
M2ox2o 
M2o,
(9)
x3
=
M2oM3ox3o 
M3o 
M2o,
(10)
L3
=
M2oL3o 
M2o.
(11)
The point x1 = x1o is not aﬀected by the transformation, the same
for the lines L1 = L1o and L2 = L2o see ﬁgure 2. Since the rotation
Figure 2.
Barrett hand at home position
angles of both axis L2 and L3 are related, we will use fractions of the
angle q1 to describe their individual rotation angles. The motors of each
joint are computed using
2
35q4 to rotate around L1,
1
125q1 around L2 and
Kinematics and Grasping
475
°
°

1
375q1 around L3, these speciﬁc angle coeﬃcients where taken from the
Barrett Hand user manual.
M1
=
cos(q4/35) + sin(q4/35)L1,
(12)
M2
=
cos(q1/250) −sin(q1/250)L2,
(13)
M3
=
cos(q1/750) −sin(q1/750)L3.
(14)
The position of each point is related to the angles q1 and q4 as follows:
x′
1
=
M1x1 
M1,
(15)
x′
2
=
M1M2x2 
M2 
M1,
(16)
x′
3
=
M1M2M3x3 
M3 
M2 
M1.
(17)
4.
Grasping the
bjects
In our example considering that the cameras can only see the surface
of the observed objects, thus we will consider them as bi-dimensional
surfaces which are embedded in a 3D space, and are described by the
function
→
H (s, t) = hx(s, t)e1 + hy(s, t)e2 + hz(s, t)e3
(18)
where s and t are real parameters in the range [0, 1]. Such parameteriza-
tion allows us to work with diﬀerent objects like points, conics, quadrics,
or even more complex objects like cups, glasses, etc. The table 1 shows
some parameterized objects.
Particle
→
H= 3e1 + 4e2 + 5e3
Cylinder
→
H= cos(t)e1 + sin(t)e2 + se3
Plane
→
H= te1 + se2 + (3s + 4t + 2)e3
Table 1.
Parameterized Objects
Due to that our objective is to grasp such objects with the Barrett
Hand, we must consider that it has only three ﬁngers, so the problem
consists in ﬁnding three “touching points” for which the system is in
equilibrium during the grasping; this means that the sum of the forces
equals to zero, and also the sum of the moments.
For this case, we
consider that there exists friction in each “touching point”.
If the friction is being considered, we can claim that over the surface
H(s, t) a set of forces exist which can be applied. Such forces are inside
a cone which have the normal N(s, t) of the surface as its axis (as shown
in Fig. 3). Its radius depends on the friction’s coeﬃcient ∥F −Fn∥≤
J. Zamora-Esquivel and E. Bayro-Corrochano
476
O

Figure 3.
−µ(|Fn|), where Fn = (F · N(s, t))N(s, t) is the normal component of
F. The angle θ for the incidence of F with respect to the normal can be
calculated using the wedge product, and should be smaller than a ﬁxed
θµ
∥F ∧N(s, t)∥
F · N(s, t)
≤tan(θµ)
(19)
We know the surface of the object, so we can compute its normal
vector in each point using
N(s, t) =
∂
→
H (s, t)
∂s
∧∂
→
H (s, t)
∂t
Ie
(20)
In surfaces with lower friction, the angle θ is very small, then the value of
Figure 4.
F tends to its projection over the normal (F ≈Fn). To maintain equilib-
rium, the sum of the forces must be zero (3
i=1 ∥Fn∥N(si, ti) = 0). This
fact restricts the points over the surface in which it can be applied the
forces. This number of points is even more reduced if we are confronted
with the case when considering the unit normal (3
i=1 N(si, ti) = 0) the
forces over the object are equal. Additionally, to maintain the equilib-
Kinematics and Grasping
 477
The friction cone.
Object and his normal vectors.
$
%

rium, it must be accomplished that the sum of the moments is zero
3

i=1
H(s, t) ∧N(s, t) = 0
(21)
The points on the surface having the same directed distance to the
center of mass of the object fulﬁll H(s, t)∧N(s, t) = 0. Due to the normal
in such points crosses the center of mass (Cm), it does not produce any
moment. Before determining the external and internal points, we must
compute the center of mass as follows
Cm =
 1
0
 1
0
→
H (s, t)dsdt
(22)
Once that Cm is calculated we can establish next constraint
(H(s, t) −Cm) ∧N(s, t) = 0
(23)
The values s and t satisfying (23) form a subspace called grasping
space. They accomplish that the points represented by H(s, t) are crit-
ical on the surface (being maximums, minimums or inﬂections). In this
work we will not consider other grasping cases like when they do not
utilize extreme points other when friction cones are being considered.
This issues will be treated in future work. The equation (23) is hard to
fulﬁll due to the noise, and it is necessary to consider a cone of vectors.
So, we introduce an angle called α,
∥(H(s, t) −Cm) ∧N(s, t)∥
(H(s, t) −Cm) · N(s, t)
≤tan(α)
(24)
We use equation (24) instead of (23), because it allows us to deal with
errors or data lost. The constraint imposing that the three forces must
be equal is hard to fulﬁll because it implies that the three points must
be symmetric with respect to the mass center. When such points are
not present, we can relax the constraint to allow that only two forces
are equal in order to fulﬁll the hand’s kinematics equations.
Then,
the normals N(s1, t1) and N(s2, t2) must be symmetric with respect
to N(s3, t3).
N(s3, t3)N(s1, t1)N(s3, t3)−1 = N(s2, t2)
(25)
Once the three grasping points (P1 = H(s1, t1), P2 = H(s2, t2), P3 =
H(s3, t3)) are calculated, it is really easy to determine the angles at the
joints in each ﬁnger. To determine the angle of the spread (q4 = β) for
example we use
cos β = (p1 −Cm) · (Cm −p3)
|p1 −cm| |Cm −p3| , sin β = |(p1 −Cm) ∧(Cm −p3)|
|p1 −cm| |Cm −p3|
,
(26)
J. Zamora-Esquivel and E. Bayro-Corrochano
478

Figure 5.
Object relative position
desired ﬁnger without the need of solving any kind of inverse kinematics
equations C. Canudas, G. Bastin, B. Siciliano. Given the the diﬀerential
kinematics equation
˙X′3 =

1
125X′
3 · L′
2 +
1
375X′
3 · L′
3
−2
35X′
3 · L′
1
 
˙q1
˙q4,

(27)
If we want to reach the point H(s1, t1), we require that the suitable
velocity at the very end of the ﬁnger should be proportional to the error
at each instance Vi = −0.7(X′
3 −H(s1, t1)). This velocity is mapped
into the phase space by means of using the Jacobian inverse. Here we
use simply the pseudo-inverse. with j1 =
1
125X′
3 · L′
2 +
1
375X′
3 · L′
3 and
j2 = −2
35X′
3 · L′
1
∆q1
∆q4

= (j1 ∧j2)−1 ·

Vi ∧j2
j1 ∧Vi

(28)
Applying this control rule, one can move any of the ﬁngers at a desired
position above an object, so that an adequate grasp is accomplish.
5.
Results
In this section we present the experimental results of our grasping
algorithm. In Figure 6, the inferior images correspond to the simulated
scenario and the other ones are real. In this experiment the object was
suspended manually above the grasping hand, simply to check whether
the has been opened correctly or not. We can see that for each object
the algorithm manages to ﬁnd the singular grasp points, so that the
object is hold properly and in equilibrium. Note that the found points
correspond to the expected grasping points.
Kinematics and Grasping
 479
or it is possible to implement a control law which will allow to move the

Figure 6.
6.
Conclusion
Using conformal geometric algebra we show that it is possible to ﬁnd
three grasping points for each kind of object, based on the intrinsic
information of the object. The hand s kinematic and the object structure
can be easily related to each other in order to manage a natural and
feasible grasping where force equilibrium is always guaranteed.
References
computational geometry”. G. Somer, editor, Geometric Computing with Cliﬀord
Algebras, pages 27-52. Springer-Verlag Heidelberg.
the kinematics of robot manipulators. Journal of Robotics Systems, 17(9):495-516.
Carlos Canudas de Wit, Georges Bastin, Bruno Siciliano. (1996) Theory of Robot
Control, Springer.
Arbitrary 3D Objects. ICRA, pages 1890-1896. Detroit, Michigan.
Andrew T. Miller, Steﬀen Knoop, Peter K. Allen, Henrik I. Christensen. (2003)
”
Au-
tomatic Grasp Planning Using Shape Primitives,” In Proceedings of the IEEE
International Conference on Robotics and Automation, pp. 1824-1829.
J. Zamora-Esquivel and E. Bayro-Corrochano
480
Grasping some objects.
Li, H. Hestenes, D. Rockwood A. (2001).“Generalized Homogeneous coordinates for
Bayro-Corrochano, E. and K¨ahler, D. (2000). Motor Algebra Approach for Computing
Ch Borst, Fischer M. and Hirzinger, G. (1999) A Fast and Robust Grasp Planner for
,
,
,
,
.
.
.

 
Raghavendran Subramanian 
Graduate Student 
Dept. of Mechanical Engineering 
University of Connecticut 
Storrs, CT – 06268 
raghavendran@engr.uconn.edu 
Kazem Kazerounian 
Professor 
Dept. of Mechanical Engineering 
University of Connecticut 
Storrs, CT – 06268 
kazem@engr.uconn.edu 
Abstract 
In this paper, we present a new methodology to identify the rigid domains in 
a protein molecule. This procedure also identifies the flexible domains as 
well as their degree of flexibility. Identification of rigid domains significantly 
simplifies the motion modeling procedures (such as molecular dynamics) 
that use geometric features of a protein as variables.  
Keywords: 
1.  
Introduction  
  
Proteins are the building blocks that play an essential role in a variety 
of basic biological functions such as signal transduction, ligand binding, 
catalysis, regulation of activity, transport of metabolites, formation of 
larger assemblies and cellular locomotion. Its internal motions results in 
conformational transitions and often relate structure to its function. 
Hence, comprehending the protein internal motion is the key to the 
understanding of the structural relationship of these natural machines to 
their function. Protein molecules have always been observed with rigid 
domains connected by flexible portions as shown in the figure 1.  
Kinematics serial chain model of proteins has been established and 
justified in few of our previous works (Kazerounian 2004; Kazerounian, 
Kazerounian June 2002).  As the long snake type serial linkage folds, 
new bonds are created between atoms of the residues that are not 
© 2006 Springer. Printed in the Netherlands.
481
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 481–488.
APPLICATION OF KINEMATICS TOOLS  
OF PROTEIN MOLECULES 
IN THE STUDY OF INTERNAL MOBILITY 
inematics, mobilities, functions, graph theory, nano machines, closed loops 
Latif et al., 2005; Kazerounian, Latif et al., 2005; Subramanian 2005; 
K

neighbors. These bonds transform the open loop linkage to a linkage with 
some relatively large links (rigid body domains) and closed kinematic 
loops. These bonds are generally categorized as follows: 1) Hydrogen 
Bonds (main chain to main chain,  main chain to Side chain and side 
chain to side chain), and 2) Disulphide bonds. 
To gain insight into a protein function, we must understand the 
are five different computational methods reported in literature to 
identify rigid domains of the protein. Two of the methodsalso  attempt to 
1995) involves comparison of two conformations of a protein to identify 
the rigid domains in a molecule. The second method (Wriggers and 
Schulten 1997) also compares two different conformations of the same 
dynamics of a protein molecule. The procedure creates an equivalent 
elastic network model with 
atoms as masses serially 
connected 
one 
after 
the 
This 
mathematical 
treatment 
yields vibrational frequency 
modes of all the atoms. An 
atom for which all frequency 
modes are computed to be 
zero, will be considered as a 
part of a rigid domain. This method is computationally, a very expensive 
procedure even with a network of just C D  atoms.  Fourth method is a 
variant of the third method. In this method normal mode analysis 
Carlo simulation is used to form the trajectory of all the atoms. This 
requires only one conformation to identify the rigid domains in a protein 
molecule. It uses the distance constraints between atoms due to the 
a rigidity matrix which on further manipulation based on the set of rules 
defined under the rigidity theory, one can find rigid domains. This 
method disregards the presence of disulphide bonds in a protein molecule 
which also reduces the mobility of atoms in proteins. 
 The methodology presented in this paper treats the protein molecule 
as a kinematic chain that has open as well as closed loops. In the recent 
482 
R. Subramanian and K. Kazerounian
kinematics and the mobility of the internal motion of the protein.  T  here 
establish the mobility of the chain.   F irst method (Nichols, Rose et al. 
protein. It uses a least square technique to best fit the two con- 
formations.  Third method (Levitt, Sander et al., 1985) is based on the 
other 
by 
springs .
in its open and closed conformation. 
coupled with molecular dynamics (Doruker, Bahar et al., 2002) and Monte 
method too requires unreasonably excessive computation.  Fifth method 
presence of covalent and the hydrogen bonds between them. I t develops 
(Jacobs, Rader et al., 2001) is based on the graph theory. This method 
Figure 1. Ribbon view of a peptide chain 
,

past, many kinematicians (Crossley 1965; Woo 1967; Manolescu 1973; 
type synthesis of mechanisms especially to identify non-isomorphic 
mechanisms and to enumerate mechanisms. This method also uses graph 
theory based on the primary (linear) structure of the protein, and uses 
the atom coordinates to detect the hydrogen and disulphide bonds. The 
resulting graph maintains the information on the connectivity of links in 
the protein mechanism and thereby identifies all the loops formed by 
hydrogen and disulphide bonds. The loops that are kinematically over-
constrained form rigid structures. This is an iterative process that 
2. 
Identification of the Hydrogen Bonds  
Hydrogen bonds occur when two electronegative atoms interact with 
the same hydrogen. The hydrogen atom is covalently attached to one 
atom (commonly called 
donor), 
and 
interacts 
electrostatically with the 
other atom (commonly 
called 
acceptor). 
This 
(hydrogen). 
Hydrogen 
bond 
possesses 
some 
degree of orientational 
preference and has the 
characteristics 
of 
a 
covalent bond (although 
it is weak). Several fine 
works in the literature 
have 
focused 
on 
this 
directional behavior of hydrogen bonds (Baker and Hubbard 1984; Eswar 
and Ramakrishnan 2000). These works have established generalized 
geometric characteristics for identification of the hydrogen bonds when 
the positional coordinates of the electronegative atoms and the hydrogen 
configuration. A shortfall of these data files is that the hydrogen atom 
positions are usually not recorded.  
C 
O 
C 
N 
C
H 
483 
Application of Kinematics Tools
results in the identification of all the rigid domains. 
Figure 2.  Location of Hydrogen atom 
with respect to the neighboring atoms. 
atoms and the proton 
interaction 
is 
due 
to 
ween the electronegative 
the 
dipole 
effect 
bet-
atoms are known.  Protein Data Bank (PDB) (Berman, Westbrook et al., 
Mruthyunjaya and Raghavan 1979) have extensively used graph theory for 
2000) offers the coordinate position of all the atoms in a protein 

2.1 
Hydrogen Atom Position Calculation 
The chemical (directional) nature of the covalent bonds leads to a 
unique relative position of a hydrogen atom with respect to the positional 
coordinate of its neighboring atoms. Hence the coordinates of a hydrogen 
atom can be established theoretically using coordinates of its neighbor 
atoms (figure 2).  The detailed procedure and formulation based on figure 
2 is included in Rigid body assumption in proteins has been established 
and justified in few of our previous works (Subramanian 2005). 
2.2 
Criteria to Establish Hydrogen Bonds  
There are predominantly three types of hydrogen bonds observed in 
the protein structures. They are main chain to main chain, main chain to 
side chain and side chain to side chain hydrogen bonds. The majority of 
the main chain to main chain hydrogen bonds are local in nature 
involving less than six consecutive residues in the primary sequence of a 
protein.  As mentioned earlier, the directional nature of the hydrogen 
bond results in a set of geometric criteria to be established to identify the 
presence of hydrogen bonds. These geometric criteria solely depend on 
the coordinate positions of two electronegative atoms and a hydrogen 
atom. These geometric criteria are different for different sets of the 
electronegative atoms and the geometric conditions for identification of 
the hydrogen bonds are quite extensive.  Reference (Subramanian 2005) 
and the exhaustive conditions for selecting each one of the three possible 
hydrogen bonds, as developed by the authors.  
3. 
Identification of the Disulphide Bonds  
A disulphide bridge is formed between two cysteine residues by the 
oxidation of their sulfur atoms to form a double bond. Thus two cysteine 
residues connect through their sulphur atoms and form loops in the open 
chain. In proteins disulphide bridges contribute significantly to the 
stability of proteins.  
Two parameters have been established (Sowdhamini, Srinivasan et al. 
1989) to identify the presence of disulphide bonds between two cysteine 
residues in a protein molecule. They are based on the geometric features 
that exist between the two test residues. The distance parameters 
include the distance  between the two alpha carbon atoms and the 
distance  between the two beta carbon atoms  of two cysteine residues in 
the primary sequence. The two geometric conditions are that the first 
distance mentioned lies within 3.8Å to 6.5Å and the second distance lies 
within 3.4Å to 4.5Å. These criteria are checked for all the possible 
484 
R. Subramanian and K. Kazerounian
,

combinations of any two cysteines in a protein molecule. Those 
combinations that meet the above requirements are assumed to form the 
disulphide bonds.     
4.
 Application of the Graph Theory to Loop 
The internal mobility of a protein chain is a function of how various 
links in the open chain model connect by means of hydrogen and 
disulphide bonds. These bonds transform the open loop linkage to more 
complex multi closed loop system. The size of the protein molecule and 
the large number of such bonds demands a sophisticated method of 
accounting for connections within the molecule. Graph theory is an ideal 
tool for this purpose   
The equivalent linkage mechanisms to protein chains can be described 
as a graph with links as edges and joints as vertices and is a very useful 
tool to represent the connectivity between links. A two dimensional 
matrix (commonly called as connectivity matrix) mathematically 
represent the connectivity between all the links. Prior to the detection of 
the over-constrained loops from the given connectivity matrix, all the 
side chain links which do not participate in the loop formation will be 
eliminated from the connectivity matrix. This will reduce the 
computational complexity of the problem of detecting the over-
constrained closed loops.  
As a first step, we will eliminate all those side chain links which do 
not participate in the loop formation. This process starts from the end 
link of all the side chains. If the end link has only one joint, then it does 
not form a loop. Consequently the link preceding the removed end link 
becomes the end link itself. This procedure iteratively eliminates all the 
links of the side chains that do not form closed loops except the first link 
of the side chains (that is connected to the two main chain links).    
The graph after the previous step will have only one side chain link for 
all the side chains which are not involved in the loop formation. As 
mentioned earlier, these side chains will be connected only to two main 
chain links and no side chain links. In the second step the procedure 
eliminates all such first links of the side chains. This requires that the 
side chain links be differentiated from main chain links by their index 
numbers. This can be done by storing the index numbers of all the main 
chain links and all the side chain links in two different vectors. This 
information is readily available from Protein Data Bank (PDB) files.   
Note that in the above two stages the size and the values in the 
connectivity matrix changed while eliminating all the side chain links 
that were not part of any closed loops. This will leave the graph with 
485 
Application of Kinematics Tools
Detection in a Protein Chain  

none of the open ended side chain branches off the main chain. Thus the 
complexity involved with maintaining the information of the un-
influencing side chain links is avoided. This also reduces the 
computational needs for solving the problem of detecting all the over 
constrained loops.          
The procedure we have developed to detect all the over-constrained 
loops involves finding all the closed loops with two links, three links, four 
links, five links and six links respectively, until all the over-constrained 
loops are detected. The steps to detect loops with m links (m = 2 to 6) are 
2005). The search starts 
with 
any 
link 
and 
corresponding 
to 
that 
link in the connectivity 
matrix, we follow the 
trail 
of 
the 
links 
connected until we arrive 
back on the link we 
started the search with. 
This indicates that the 
loop is closed and a 
counter keeps track of the 
number of links in that 
closed loop. 
In the repeated local 
search for all the over-constrained loops, we change the connectivity 
matrix every time an over-constrained loop is found. The changes are as 
follow: all the links of an over-constrained loop is replaced by a single 
new link, thus the rows and columns corresponding to these links are 
dropped from the connectivity matrix and a new row and column is 
appended to the connectivity matrix to represent this new link. All the 
connections to all the links of this over-constrained loop will now be the 
connections to this new link.  
5. 
 Results and Discussion 
numerous protein molecules to identify their rigid domains and flexible 
portions. One such numerical experiment was on the protein BPTI (PDB  
486 
R. Subramanian and K. Kazerounian
briefly explained as follows. The detailed algorithm for this detec-
tion process is included 
 
in reference(Subramanian 
of a “1” in the row 
through 
the 
detection 
 
Figure 3. Kinematic Sketch of the protein BPTI 
(1K6U) with its rigid and flexible domains. 
 The methodology developed in this work was succesfully applied to 
-

ID: 1K6U).  Bovine Pancreatic Trypsin Inhibitor (PDB ID: 1K6U) is a 58 
residue long protein. We identified a total of 26 hydrogen bonds in the 
protein molecule of which 19 were main chain to main chain hydrogen 
bonds and the rest of the hydrogen bonds were between main chain and 
side chains. This protein molecule was identified with 3 disulphide 
bonds.  
4 rigid domains (R1 to R4) and 
5 flexible portions (F1 to F5). 
The kinematic sketch for this 
protein is shown in figure 3 
(kinematic arrangement) and a 
3-D illustration in Figure 4. 
The alpha helices and beta 
sheets as expected formed rigid 
domains 
or 
part 
of 
rigid 
domains. 
Among 
all 
the 
flexible chains, 3 of them were 
closed loops. The degrees of 
freedom for such constrained 
closed loops are also reported. 
These are as follow: 7 for F2, 1 
for F3 and 5 for F4. These 
results were compared visually 
with the motion of the protein molecules available in the website: 
The results were observed to be consistent with these motion  pictures for 
each of the three protein molecules. 
6.
Conclusion 
(and contact). The coordinate value of all the atoms in the protein is used 
only to establish the location of hydrogen and disulphide bonds. It also 
finds all the flexible portions of a protein molecule and calculates its 
degrees of freedom, a numerical value as a flexibility measure, for each of 
these flexible portions. This methodology has been successfully tested on 
several proteins from PDB.  
7. 
References 
Baker, E. N. and R. E. Hubbard (1984). Hydrogen bonding in globular proteins.  
Prog Biophys Mol Biol 44(2): 97-179. 
orange and blue) represent the different 
487 
Application of Kinematics Tools
“
”
Figure 4. Color code based distinction 
between the rigid domains and flexible 
portions of the protein, BPTI (PDB ID: 
1K6U). Red portions are the flexible 
regions and other colors (pink, green, 
rigid domains in the protein. 
 The protein molecule  had 
http://molmovdb.mbb.yale.edu/molmovdb/ (Echols, Milburn et al., 2003). 
tify all the rigid domains in a protein identified in a PDB type format 
 W
 e have developed a computationally efficient methodology to iden- 

Berman, H. M., J. Westbrook, et al. (2000). The Protein Data Bank.  Nucleic 
Acids Res 28(1): 235-42. 
Crossley, F. R. E. (1965). The permutations of Kinematic Chains of Eight 
Members or Less from Graph Theoretic Viewpoint.  Developments in 
Theoretical and Applied Mechanics 2: 467-487. 
Doruker, P., I. Bahar, et al. (2002). 
Collective deformations in proteins 
determined by a mode analysis of molecular dynamics trajectories.  
POLYMER 43(2): 431-439. 
Echols, N., D. Milburn, et al. (2003). MolMovDB: analysis and visualization of 
conformational change and structural flexibility.  Nucleic Acids Research 
31(1): 478-482. 
Eswar, N. and C. Ramakrishnan (2000). Deterministic features of side-chain 
main-chain hydrogen bonds in globular protein structures.  Protein Eng 13(4): 
227-38. 
Jacobs, D. J., A. J. Rader, et al. (2001). Protein flexibility predictions using 
graph theory.  Proteins 44(2): 150-65. 
Kazerounian, K. (2004). From mechanisms and robotics to protein conformation 
and drug design.  Journal of Mechanical Design 126(1): 40-45. 
Kazerounian, K. (June 2002). Is Design of New Drugs a Challenge for 
Kinematics? Proceedings of the 8th Int. Conf. on Advance Robot Kinematics - 
ARK, Caldes de Malavalla, Spain. 
Kazerounian, K., K. Latif, et al. (2005). Protofold: A successive kinetostatic 
compliance method for protein conformation prediction.  Journal of 
Mechanical Design 127(4): 712-717. 
Kazerounian, K., K. Latif, et al. (2005). Nano-kinematics for analysis of protein 
molecules. Journal of Mechanical Design 127(4): 699-711. 
Levitt, M., C. Sander, et al. (1985). Protein normal-mode dynamics: trypsin 
inhibitor, crambin, ribonuclease and lysozyme.  J Mol Biol 181(3): 423-47. 
Manolescu, N. I. (1973). A Method based on Barnov Trusses, and using Graph 
Theory to find the set of Planar Jointed Kinematic Chains and Mechanisms.  
mechanism and machine theory 8(1): 3-22. 
Mruthyunjaya, T. S. and M. R. Raghavan (1979). 
Structural Analysis of 
Kinematic Chains and Mechanisms based on Matrix Representation.  ASME 
Journal of Mechanical Design 101: 488-494. 
Nichols, W. L., G. D. Rose, et al. (1995). Rigid Domains in Proteins - an 
Algorithmic Approach to Their Identification.  Proteins-Structure Function 
and Genetics 23(1): 38-48. 
Sowdhamini, R., N. Srinivasan, et al. (1989). 
Stereochemical modeling of 
disulfide bridges. Criteria for introduction into proteins by site-directed 
mutagenesis. Protein Eng 3(2): 95-103. 
Subramanian, R. (2005). Calibration of Structural Variables and Mobility 
Analysis of Protein molecules. Mechanical Engineering Department. Storrs, 
University of Connecticut. MS. 
Woo, L. S. (1967). Type Synthesis of Plane Linkages.  ASME Journal of 
Engineering for Industry: 159-172. 
Wriggers, W. and K. Schulten (1997). Protein domain movements: Detection of 
rigid domains and visualization of hinges in comparisons of atomic 
coordinates.  Proteins-Structure Function and Genetics 29(1): 1-14. 
 
 
488 
R. Subramanian and K. Kazerounian
“
”
“
”
“
”
“
”
“
”
”
”
“
”
“
”
”
“
”
“
”
“
”
“
”
“
”
“
”
“
“
“

MOTION PATTERN SINGULARITY
MANIPULATORS
Oscar Altuzarra, Charles Pinto, Victor Petuya, Alfonso Hernandez
Department of Mechanical Engineering
University of the Basque Country, Alameda de Urquijo s/n 48013 Bilbao, Spain
[oscar.altuzarra, charles.pinto, victor.petuya, a.hernandez]@ehu.es
Abstract
Many procedures to detect singularities in manipulators have been de-
scribed in the literature up to now. Singularities are often deﬁned as an
instantaneous or permanent modiﬁcation in the number of degrees of
freedom (DOF), either aﬀecting certain links or the whole mechanism.
However, the motion of the end-eﬀector of a parallel manipulator is not
only given by the number of DOF but also by the nature of them (rota-
tional or translational). There are poses in which, being no quantitative
alteration of the DOF of the platform, there are changes in this nature.
This is also a singularity, and produces, as other singularities do, a
mathematical deﬁciency in the velocity equations of the manipulator.
This type of singularity aﬀects only the so called lower mobility parallel
manipulators. In this contribution the authors deﬁne this new type of
singularity, called motion pattern singularity, and present a procedure
to analyze it.
Keywords:
1.
Introduction
In robot design, knowing the possibilities of motion of the end-eﬀector
is the key to a proper choice of the application. The motion possibilities
of the parallel manipulator’s end-eﬀector are not only determined by the
number of DOF, but also by the nature of these freedoms. This nature
has a qualitative aspect (translational or rotational) and a quantitative
one: the directions of possible translation or rotation at each pose. Both
features deﬁne the motion pattern of the platform. This denomination
has been previously used for parallel manipulators in Kong and Gos-
selin, 2005. The motion pattern is specially important in lower mobility
parallel manipulators because it determines the possible task to be per-
formed. In addition, a proper design looks for constant directions of the
DOF inside the workspace. Unfortunately, in many of the lower mo-
bility parallel manipulators there is a variation of the translational and
rotational directions with the pose. This does not imply a singularity,
© 2006 Springer. Printed in the Netherlands. 
J. Lenarþiþ and B. Roth (eds.), Advances in Robot Kinematics, 489–496. 
IN LOWER MOBILITY PARALLEL
Motion Pattern, Parallel Manipulators, Platform Twist, Singularities
489

but it does condition the kinematic characteristics of the manipulator
such as its manipulability.
The nature of the DOF of the moving platform is usually unaltered
by the motion of the manipulator, the same with the number of DOF.
Nevertheless, it is possible that, in certain poses of the platform, some
of the DOF change in nature, e.g. some rotational DOF becomes trans-
lational. Obviously, this alters substantially the motion pattern of the
platform and hence, it can be considered as a singularity. In fact, it gen-
erates a mathematical deﬁciency as it will be explained later. In these
circumstances, it is possible that the robot were unable to accomplish
with the intended task, at least instantaneously at that pose. It must
be highlighted that such a condition is independent of the coexistence
with any other type of singularity. Anyway, it is necessary to have a
procedure to detect those variations in the nature of the DOF of the
platform along its motion.
A wide bibliography on singularities in robots has been issued in the
past. We bring notice to some well known references as Freudenstein,
1962, Hunt, 1978, Sugimoto et al., 1982, Merlet, 1989, Gosselin and
Angeles, 1990, Zlatanov et al., 1994, and Park and Kim, 1999. These
works and some others have stated fundamental concepts as direct kine-
matic singularity, inverse kinematic singularity, or increased mobility
conﬁguration. Some more speciﬁc concepts have also been issued, such
as constraint singularity Zlatanov et al., 2002, architecture singularity
Ma and Angeles, 1992, internal singularities Company et al., 2006 or
cuspidal manipulator Wenger, 2004. In all these works the singularity
is understood as an alteration in the number of DOF, either globally
in the mechanism as a whole, or locally at some part of it (preferably
at input or output). However, to our best knowledge, such singularity
as the one described in this paper has not been discussed. In fact, the
latest references on parallel manipulator singularities as Thomas et al.,
2005, Huang and Cao, 2005, or Liu et al., 2005 go over the quantitative
modiﬁcation of the number of DOF again.
2.
Motion Pattern Singularity
In this section the authors present the deﬁnition and procedure to
obtain the motion pattern of the manipulator’s platform as well as the
singularity associated to that concept.
2.1
Motion Pattern
The motion pattern of a parallel manipulator represents the plat-
form’s capacity of motion.
their
490
The number of degrees of freedom,
O. Altuzarra et al.

nature (traslational or rotational) and directions deﬁne this characteris-
tic. Although this is an instantaneous feature, the number and nature of
the DOF are, generally, permanent in the workspace. In fact, when they
change in some pose, is because it is a singular conﬁguration. Against,
the directions of translation and rotation of the platform’s DOF are often
variable in parallel manipulators.
The motion pattern is obtained with a procedure that starts with a
velocity equation that maps joint velocities to the platform’s twist:
˙x = J ˙q
(1)
where ˙x =
 ˙pT ωT T is the twist of the moving platform, being ˙p the
velocity of a point P in the platform and ω the platform’s angular ve-
locity, J is a Jacobian matrix and ˙q is the vector of input joint rates.
This Jacobian matrix is not always easy to ﬁnd analytically. It will be
often found numerically, and in those occasions the motion pattern is
analyzed pose by pose.
This Jacobian can be divided into two submatrices JT and JR, cor-
responding to terms that aﬀect linear and angular velocity respectively.
If the full cycle mobility, Hunt, 1978, of a non-redundant manipulator is
F Eq. 1 is
 ˙p
ω

6×1
=

JT
JR

6×F
˙qF×1
(2)
The rotational motion space is analyzed extracting the equations corre-
sponding to angular components from that system:
ω = JR ˙q
(3)
The number of rotational DOF of the platform FR is the rank of matrix
JR and the corresponding directions ωr are obtained in Eq. 3 with a
basis ˙qr of the rangespace of that matrix:
ωr = JR ˙qr
r = 1 . . . FR
(4)
The number of translational DOF of the platform FT is (rank (J) −FR),
and the corresponding directions ˙pt are solved in the translational part
of Eq. 2 upon substitution of a basis ˙qt of the null space of matrix JR:
˙pt = JT ˙qt
t = 1 . . . FT
(5)
Therefore, the platform’s motion pattern is deﬁned by the number of ro-
tational DOF, FR = rank (JR), and translational DOF, FT = rank (J)−
rank (JR), along with the rotational and translational directions, ωr and
˙pt respectively.
Motion Pattern Singularity
491

2.2
Singularity
some DOF
change in nature, e.g. a rotational DOF becomes translational or vice
versa. Note that this singularity does not make reference to variations
in the directions of possible translation or rotation of the platform. In
fact, this latter is quite usual in lower mobility parallel manipulators al-
though constant directions are desirable in design. Obviously, this type
of singularity is only possible in lower mobility parallel manipulators.
Other type of singularities aﬀecting the moving platform, and already
described in the references, are the constraint singularity deﬁned in Zla-
tanov et al., 2002 and the so called Impossible Output introduced in
Zlatanov et al., 1994. The former implies a gain while the latter means
a loss in the DOF of the end-eﬀector.
The rank of Jacobian JR has to be checked to detect mathemati-
cally the motion pattern singularity. As this Jacobian is homogeneous
in terms of units, the ﬁrst singular value not null of that Jacobian serves
well as an indicator of closeness to singularity. The Singular Value De-
composition technique applied to JR provides both the range and null
spaces, and the motion pattern of the platform at the singularity is ob-
tained with them.
3.
Example
A 3 DOF parallel manipulator with rotational motion is shown in
Fig. 1. A passive limb with 3 revolute joints (R) constrains the desired
motion while three linear actuators (SPS) provide the control of the end-
eﬀector. A ﬁxed frame is deﬁned with origin at point O and a moving
frame is attached to the platform with origin at point P. The loop-
closure position equation is stated for every limb relating vector p that
positions point P with: vectors ai that locate the ﬁxed S joints Ai of the
linear actuators, vectors that go from Ai to Bi (being si a unit vector in
the direction of actuators and ρi the length of the actuator), and vectors
pbi that place points Bi with respect to point P in the platform and are
best expressed in the moving frame:
p = ai + ρisi −pbi
i = 1, 2, 3
(6)
Diﬀerentiating Eq. 6 with respect to time yields
˙p = ˙ρi · si + ωi × ρisi −ω × pbi
i = 1, 2, 3
(7)
where ˙ρi is the actuator’s rate, ωi are the angular velocities of the ac-
tuators, and ω is the angular velocity of the platform. If now we dot
492
A motion pattern singularity occurs in a pose where, being no alter-
ation in the number of DOF of the moving platform,
O. Altuzarra et al.

Figure 1.
multiply Eq. 7 by si and simplify wherever possible we get
si · ˙p + [pbi × si] · ω = ˙ρi
i = 1, 2, 3
(8)
The revolute joints of the passive limb constrain the platform to a
3 DOF rotational motion.
Let’s consider the geometrical constraints
imposed by each of the revolute joints in the passive limb. These can
be formulated taking into account the ﬁxed orientation of the position
vector p with respect to each of the R joints’ axes ri, namely
r1 · p = 0
(9)
r2 · p = p
(10)
r3 · p = 0
(11)
Diﬀerentiating Eq. 9 to 11 with respect to time yields
r1 · ˙p = 0
(12)
r2 · ˙p = 0
(13)
r3 · ˙p + [r3 × p] · ω = 0
(14)
Compiling Eq. 8 and Eqs. 12 to 14 in matrix form gives
⎡
⎢⎢⎢⎢⎢⎢⎣
rT
1
0T
rT
2
0T
rT
3
[r3 × p]T
sT
1
[pb1 × s1]T
sT
2
[pb2 × s2]T
sT
3
[pb3 × s3]T
⎤
⎥⎥⎥⎥⎥⎥⎦
 ˙p
ω

=

0
I

˙ρ
(15)
Motion Pattern Singularity
493
Kinematic Model of a Rotational Platform.

This is a velocity equation that maps the twist of the platform to the
inputs of the manipulator. A rank deﬁciency in the ﬁrst Jacobian in Eq.
15, called Jx, imply a direct kinematic singularity. A rank deﬁciency of
the second Jacobian, called Jq, is not possible in this manipulator, and
hence no singularity in the inverse problem exists.
The Jacobian Jx must be inverted and postmultiplied by the second
Jacobian to get the following expression of the twist
 ˙p
ω

=
1
|Jx|

δ1
δ2
δ3
α1
α2
α3

˙ρ =

JT
JR

˙ρ
(16)
where the translational Jacobian JT is formed by vectors δi multiplied
by
1
|Jx|:
δ1 = [n3 · (m3 × m2)] · (r1 × r2)
(17)
δ2 = [n3 · (m1 × m3)] · (r1 × r2)
(18)
δ3 = [n3 · (m2 × m1)] · (r1 × r2)
(19)
being
n3 = r3 × p
(20)
m1 = pb1 × s1
(21)
m2 = pb2 × s2
(22)
m3 = pb3 × s3
(23)
And the rotational Jacobian JR is formed by vectors αi multiplied by
1
|Jx|:
α1 = −[r3 · (r1 × r2)] · (m3 × m2) −[s2 · (r1 × r2)] · (n3 × m3)
−[s3 · (r1 × r2)] · (m2 × n3)
(24)
α2 = −[r3 · (r1 × r2)] · (m1 × m3) −[s1 · (r1 × r2)] · (m3 × n3)
−[s3 · (r1 × r2)] · (n3 × m1)
(25)
α3 = −[r3 · (r1 × r2)] · (m2 × m1) −[s1 · (r1 × r2)] · (n3 × m2)
−[s2 · (r1 × r2)] · (m1 × n3)
(26)
Then, the procedure to analyze the motion pattern can be applied
and possible singularities in the motion pattern found.
In a nonsingular position the rangespace of the rotational Jacobian
JR has a dimension of 3, and hence the platform has 3 rotational DOF.
The rank of J is also 3, and the nullspace of JR has a zero dimension,
therefore the platform has 0 translational DOF.
494
O. Altuzarra et al.

However, in any pose where the revolute axis r3 is parallel to the joint
axis r1 (see Fig. 2) the rank of the rotational Jacobian JR decreases.
Vectors αi are
α1 = −[s2 · (r1 × r2)] · (n3 × m3) −[s3 · (r1 × r2)] · (m2 × n3)
(27)
α2 = −[s1 · (r1 × r2)] · (m3 × n3) −[s3 · (r1 × r2)] · (n3 × m1)
(28)
α3 = −[s1 · (r1 × r2)] · (n3 × m2) −[s2 · (r1 × r2)] · (m1 × n3)
(29)
Note that the three of them are perpendicular to n3 and hence depen-
dent. The dimension of the rangespace is 2, the possible rotation has 2
DOF and its direction is on the plane perpendicular to n3.
The nullspace is one dimensional, and upon substitution into the
translational Jacobian JT the direction of translation is obtained. In
view of Eqs. 17 to 19 is easy to note that every vector δi that form the
translational Jacobian JT is parallel to vector r1 × r2. Therefore this is
the only direction of possible translation. Adequate inputs can produce
a ﬁnite motion with this motion pattern.
Figure 2.
Sequence of motion in a Motion Pattern Singularity (r1
3
4.
Conclusions
This paper describes a singularity that aﬀects the moving platform of
lower mobility parallel manipulators. As far as the authors know, this
type of singularity has not been deﬁned in the references on this subject.
This singularity does not cause an increment or reduction of the DOF
of the end-eﬀector, but a change in their nature (transforming from
rotational to translational or vice versa). Regarding the manipulator
performance, this singularity may produce problems with the control
or the actuators.
If the manipulator approaches a pose where there
is a motion pattern singularity, it is evident that the desired twist in
the end-eﬀector may require very high inputs. In practice this produces
abrupt increments of the inputs that can damage the machine, or simply
not move the platform at all. As with other types of singularities, the
Motion Pattern Singularity
495
= r ).

motion pattern singularity is generally instantaneous, i.e. dependent on
the pose. However, there are many cases where the singularity becomes
permanent for certain inputs.
5.
Acknowledgements
This research work was supported in part by the Spanish Ministerio
de Ciencia y Tecnologia (Project DPI2005-02207), and the University of
the Basque Country (Project 9/UPV00145.345-14494/2002).
References
Kong X. and Gosselin C. M. (2005), Type Synthesis of
3-DOF
PPR-Equivalent
Parallel Manipulators Based on Screw Theory and the Concept of Virtual Chain,
ASME Journal of Mechanical Design, vol. 127, pp. 1113-1121.
Freudenstein F. (1962), On the variety of motions generated by mechanisms, Trans.
ASME. J. Eng. Ind., pp. 156-160.
Hunt K.H. (1978), Kinematic geometry of mechanisms, Clarendon Press.
nisms and robot arms, Mechanism and Machine Theory, vol. 17, no. 2, pp. 119-132.
Merlet J -P. (1989), Singular conﬁgurations of parallel manipulators and Grassmann
geometry, Int. J. of Robotics Res., vol. 8, no. 5, pp. 45-56.
Gosselin C. and Angeles J. (1990), Singularity analysis of closed-loop kinematic
chains, IEEE Trans. Robot. Autom., vol. 6, no. 3, pp. 281-290.
and robots via velocity-equation model of the instantaneous kinematics, IEEE Int.
Conf. Rob. Autom., vol. 2, pp. 986-991.
Park F.C. and Kim J.W. (1999), Singularity analysis of closed kinematic chains,
ASME Journal of Mechanical Design, vol. 121, pp. 32-38.
parallel mechanisms, Proc. IEEE Int. Conf. Rob. Autom., Washington DC, USA.
Ma O. and Angeles J. (1992), Architecture singularities of parallel manipulators, Int.
J. Robot. Automt., vol. 7, no. 1, pp. 23-29.
Company O., Krut S. and Pierrot F. (2006), Internal singularity analysis of a class of
lower mobility parallel manipulators with articulated traveling plate, IEEE Tran.
on Robotics, vol. 22, no. 1, pp. 1-11.
Wenger P. (2004), Uniqueness Domains and Regions of Feasible Paths for Cuspidal
manipulators, IEEE Tran. on Robotics, vol. 20, no. 4, pp. 745-750.
Thomas F., Ottaviano E., Ros Ll. and Ceccarelli M. (2005), Performance Analysis of a
3-2-1 Pose Estimation Device, IEEE Tran. on Robotics, vol. 21, no. 3, pp. 288-297.
Huang Z. and Cao Y.
(2005), Property Identiﬁcation of the Singularity Loci of
a Class of Gough-Stewart Manipulators, The Int. J. Robotics Research, vol. 24,
no. 8, pp. 675-685.
Liu X -J.,Wang J. and Pritschow G. (2005), Kinematics, singularity and workspace
of planar 5R symmetrical parallel mechanisms, Mechanism and Machine Theory,
In press.
496
Sugimoto K., Duﬀy J. and Hunt K.H. (1982), Special conﬁgurations of spatial mecha-
Zlatanov D.S., Bonev I.A. and Gosselin C.M. (2002), Constraint singularities of
O. Altuzarra et al.
Zlatanov D., Fenton R.G. and Benhabib B. (1994), Singularity analysis of mechanisms
.
.

Author Index 
 
 
 
 
 
 
 
 
 
 
 
 
 
Altuzarra, O., 489 
Ambike, S., 177 
Andrade-Cetto, J., 3 
Angeles, J., 359 
BabiĀ, J., 147 
Bajd, T., 185 
Bamberger, H., 75 
Bayro-Corrochano, E., 473 
Ben-Horin, P., 265 
Bier, C., 239 
Bonev, I.A., 221 
Boning, P., 413 
Bruckmann, T., 403 
Brunnthaler, K., 377 
Callegari, M., 423 
Campos, A., 239 
Caro, S., 359 
Carretero, J.A., 297 
Ceccarelli, M., 307 
Cervantes-Sánchez, J.J., 455 
Chablat, D., 221 
Chirikjian, G.S., 95 
Company, O., 445 
Crane III, C., 85 
Dai, J.S., 113 
Daney, D., 315 
Daniel, R., 285 
De Santis, A., 133 
De Sapio, V., 209 
Degani, A., 229 
Dhanik, A., 201 
Di Gregorio, R., 167 
Diez-Martínez, C.R., 455 
Donelan, P., 41 
Dubowsky, S., 413 
Dunlop, R., 285 
Fanghella, P., 49 
Gallardo, 455 
Galletti, C., 49 
Giannotti, E., 49 
Gogu, G., 323 
Gosselin, C.M., 123 
Gouttefrade, M., 315 
Hernandez, A., 489 
Hervé, J.M., 435 
Hesselbach, J., 239, 331, 339 
Hiller, M., 103, 403 
Hirzinger, G., 193 
Husty, M., 307, 377 
Innocenti, C., 23 
Jakubiak, J., 465 
Jung, H.K., 85 
Karger, A., 247 
Kazerounian, K., 481 
Kecskeméthy, A., 255 
497

Krefft, M., 339 
Krut, S., 445 
Last, P., 331 
Latombe, J.C., 201 
Lee, C.-C., 435 
Lee, D.V., 369 
LenarĀiĀ, J., 147 
Liu, G., 201 
Luo, Z., 113 
McCarthy, J.M., 395 
Merlet, J.-P., 41, 315 
Milgram, R.J., 201 
Molfino, R., 65 
Munih, M., 185 
Murray, A.P., 57 
Nawratil, G., 15 
OmrĀen, D., 147 
Ottaviano, E., 307 
Larochelle, P.M., 33 
Paganelli, D., 23 
Palpacelli, M.-C., 423 
Parenti-Castelli, V., 167, 385 
Park, F.C., 157 
Park, J., 157 
Pasini, D., 359 
Petuya, V., 489 
Pierro, P., 133 
Pierrot, F., 445 
Pinto, C., 489 
Pond, G.T., 297 
Pott, A., 103, 403 
Rico, J.M., 455 
Roberts, R.G., 85 
Schmiedeler, J.P., 57, 177 
Schröcker, F.-P., 377 
Shoham, M., 75, 265 
Siciliano, B., 133 
Snyman, J.A., 349 
Soh, G.S., 395 
Subramanian, R., 481 
Tändl, M., 255 
Tanev, T.K., 275 
Tchoę, K., 465 
Thomas, F., 3 
Veber, M., 185 
Velinsky, S.A., 369 
Vertechy, R., 385 
Wang, Y., 95 
Warren, J., 209 
Wenger, P., 221 
Wolf, A., 75, 229 
Yan, Y., 193 
Zamora-Esquivel, J., 473 
Zlatanov, D., 65 
Zoppi, M., 65 
 
Khan, W.A., 359 
Khatib, O., 209 
Kong, X., 123 
Konietschke, R., 193 
Korte, B.M., 57 
Author Index
498

