Jiˇr´ı Ad´amek
Horst Herrlich
George E. Strecker
Abstract and Concrete Categories
The Joy of Cats
Dedicated to
Bernhard Banaschewski

The newest edition of the ﬁle of the present book can be downloaded from
http://katmat.math.uni-bremen.de/acc
The authors are grateful for any improvements, corrections, and remarks, and can be
reached at the addresses
Jiˇr´ı Ad´amek, email: adamek@iti.cs.tu-bs.de
Horst Herrlich, email: horst.herrlich@t-online.de
George E. Strecker, email: strecker@math.ksu.edu
All corrections will be awarded, besides eternal gratefulness, with a piece of delicious
cake! You can claim your cake at the KatMAT Seminar, University of Bremen, at any
Tuesday (during terms).
Copyright c⃝2004 Jiˇr´ı Ad´amek, Horst Herrlich, and George E. Strecker.
Permission is granted to copy, distribute and/or modify this document under the terms
of the GNU Free Documentation License, Version 1.2 or any later version published by
the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no
Back-Cover Texts. A copy of the license is included in the section entitled “GNU Free
Documentation License”. See p. 512 ﬀ.
2

PREFACE to the ONLINE EDITION
Abstract and Concrete Categories was published by John Wiley and Sons, Inc, in 1990,
and after several reprints, the book has been sold out and unavailable for several years.
We now present an improved and corrected version as an open access ﬁle. This was made
possible due to the return of copyright to the authors, and due to many hours of hard
work and the exceptional skill of Christoph Schubert, to whom we wish to express our
profound gratitude. The illustrations of Edward Gorey are unfortunately missing in the
current version (for copyright reasons), but fortunately additional original illustrations
by Marcel Ern´e, to whom additional special thanks of the authors belong, counterbalance
the loss.
Open access includes the right of any reader to copy, store or distribute the book or
parts of it freely. (See the GNU Free Documentation License at the end of the text.)
Besides the acknowledgements appearing at the end of the original preface (below),
we wish to thank all those who have helped to eliminate mistakes that survived the
ﬁrst printing of the text, particularly H. Bargenda, J. J¨urjens W. Meyer, L. Schr¨oder,
A. M. Torkabud, and O. Wyler.
January 12, 2004
J. A., H. H., and G. E. S.
3

PREFACE
Sciences have a natural tendency toward diversiﬁcation and specialization. In particular,
contemporary mathematics consists of many diﬀerent branches and is intimately related
to various other ﬁelds. Each of these branches and ﬁelds is growing rapidly and is itself
diversifying. Fortunately, however, there is a considerable amount of common ground
— similar ideas, concepts, and constructions. These provide a basis for a general theory
of structures.
The purpose of this book is to present the fundamental concepts and results of such a
theory, expressed in the language of category theory — hence, as a particular branch of
mathematics itself. It is designed to be used both as a textbook for beginners and as a
reference source. Furthermore, it is aimed toward those interested in a general theory of
structures, whether they be students or researchers, and also toward those interested in
using such a general theory to help with organization and clariﬁcation within a special
ﬁeld.
The only formal prerequisite for the reader is an elementary knowledge of set
theory. However, an additional acquaintance with some algebra, topology, or computer
science will be helpful, since concepts and results in the text are illustrated by various
examples from these ﬁelds.
One of the primary distinguishing features of the book is its emphasis on concrete cat-
egories. Recent developments in category theory have shown this approach to be par-
ticularly useful.
Whereas most terminology relating to abstract categories has been
standardized for some time, a large number of concepts concerning concrete categories
has been developed more recently. One of the purposes of the book is to provide a refer-
ence that may help to achieve standardized terminology in this realm. Another feature
that distinguishes the text is the systematic treatment of factorization structures, which
gives a new unifying perspective to many earlier concepts and results and summarizes
recent developments not yet published in other books.
The text is organized and written in a “pedagogical style”, rather than in a highly
economical one. Thus, in order to make the ﬂow of topics self-motivating, new concepts
are introduced gradually, by moving from special cases to the more general ones, rather
than in the opposite direction. For example,
• equalizers (§7) and products (§10) precede limits (§11),
• factorizations are introduced ﬁrst for single morphisms (§14), then for sources
(§15), and ﬁnally for functor-structured sources (§17),
• the important concept of adjoints (§18) comes as a common culmination of three
separate paths: 1. via the notions of reﬂections (§4 and §16) and of free objects
(§8), 2. via limits (§11), and 3. via factorization structures for functors (§17).
Each categorical notion is accompanied by many examples — for motivation as well as
clariﬁcation. Detailed veriﬁcations for examples are usually left to the reader as implied
exercises. It is not expected that every example will be familiar to or have relevance
4

for each reader.
Thus, it is recommended that examples that are unfamiliar should
be skipped, especially on the ﬁrst reading. Furthermore, we encourage those who are
working through the text to carry along their favorite category and to keep in mind
a “global exercise” of determining how each new concept specializes in that particular
setting. The exercises that appear at the end of each section have been designed both as
an aid in understanding the material, e.g., by demonstrating that certain hypotheses are
needed in various results, and as a vehicle to extend the theory in diﬀerent directions.
They vary widely in their diﬃculty. Those of greater diﬃculty are typically embellished
with an asterisk (∗).
The book is organized into seven chapters that represent natural “clusters” of topics,
and it is intended that these be covered sequentially. The ﬁrst ﬁve chapters contain
the basic theory, and the last two contain more recent research results in the realm of
concrete categories, cartesian closed categories, and quasitopoi. To facilitate references,
each chapter is divided into sections that are numbered sequentially throughout the
book, and all items within a given section are numbered sequentially throughout it. We
use the symbol
to indicate either the end of a proof or that there is a proof that is
suﬃciently straightforward that it is left as an exercise for the reader. The symbol
D
means that a proof of the dual result has already been given. Symbols such as
A 4.19
are used to indicate that no proof is given, since a proof can be obtained by analogy
to the one referenced (i.e., to item 19 in Section 4).
Two tables of symbols appear
at the end of the text. One contains a list (in alphabetical order) of the abbreviated
names for special categories that are dealt with in the text. The other contains a list
(in order of appearance in the text) of special mathematical symbols that are used. The
bibliography contains only books and monographs. However, each section of the text
ends with a (chronologically ordered) list of suggestions for further reading. These lists
are designed to aid those readers with a particular interest in a given section to “strike
out on their own” and they often contain material that can be used to solve the more
diﬃcult exercises. They are intended as merely a sampling, and (in view of the vast
literature) there has been no attempt to make them complete1 or to provide detailed
historical notes.
Acknowledgements
We are grateful for ﬁnancial support from each of our “home universities” and from the
Natural Sciences and Engineering Research Council of Canada, the National Academies
of Sciences of Czechoslovakia and the United States, the U.S. National Science Foun-
dation, and the U.S. Oﬃce of Naval Research. We particularly appreciate that such
support made it possible for us to meet on several occasions to work together on the
manuscript.
Our special thanks go to Marcel Ern´e for several original illustrations that have been
incorporated in the text and to Volker K¨uhn for his eﬀorts on a frontispiece that the
1Indeed, although some could serve as a suggested reading for more than one section, none appears in
more than one.
5

Publisher decided not to use. We also express our special thanks to Reta McDermott
for her expert typesetting, to J¨urgen Koslowski for his valuable TEXnical assistance, and
to Y. Liu for assistance in typesetting diagrams. We were also assisted by D. Bressler
and Y. Liu in compiling the index and by G. Feldmann in transferring electronic ﬁles
between Manhattan and Bremen. We are especially grateful to J. Koslowski for carefully
analyzing the entire manuscript, to P. Vopˇenka for fruitful discussions concerning the
mathematical foundations, and to M. Ern´e, H.L. Bentley, D. Bressler, H. Andr´eka,
I. Nemeti, I. Sain, J. Kincaid, and B. Schr¨oder, each of whom has read parts of earlier
versions of the manuscript, has made suggestions for improvements, and has helped to
eliminate mistakes. Naturally, none of the remaining mistakes can be attributed to any
of those mentioned above, nor can such be blamed on any single author — it is always
the fault of the other two.
srohtua eht
6

Contents
Preface to the Online Edition
3
Preface
4
0 Introduction
9
1
Motivation
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
11
2
Foundations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
13
I Categories, Functors, and Natural Transformations
19
3
Categories and functors
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
21
4
Subcategories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
47
5
Concrete categories and concrete functors . . . . . . . . . . . . . . . . . .
60
6
Natural transformations . . . . . . . . . . . . . . . . . . . . . . . . . . . .
82
II Objects and Morphisms
97
7
Objects and morphisms in abstract categories . . . . . . . . . . . . . . . .
99
8
Objects and morphisms in concrete categories . . . . . . . . . . . . . . . . 130
9
Injective objects and essential embeddings . . . . . . . . . . . . . . . . . . 149
III Sources and Sinks
165
10
Sources and sinks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 167
11
Limits and colimits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 191
12
Completeness and cocompleteness
. . . . . . . . . . . . . . . . . . . . . . 208
13
Functors and limits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 220
IV Factorization Structures
233
14
Factorization structures for morphisms . . . . . . . . . . . . . . . . . . . . 235
15
Factorization structures for sources . . . . . . . . . . . . . . . . . . . . . . 253
16
E-reﬂective subcategories
. . . . . . . . . . . . . . . . . . . . . . . . . . . 271
17
Factorization structures for functors
. . . . . . . . . . . . . . . . . . . . . 286
V Adjoints and Monads
299
18
Adjoint functors
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 301
19
Adjoint situations
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 310
20
Monads
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 320
7

VI Topological and Algebraic Categories
351
21
Topological categories
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 353
22
Topological structure theorems . . . . . . . . . . . . . . . . . . . . . . . . 376
23
Algebraic categories
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 383
24
Algebraic structure theorems
. . . . . . . . . . . . . . . . . . . . . . . . . 401
25
Topologically algebraic categories . . . . . . . . . . . . . . . . . . . . . . . 410
26
Topologically algebraic structure theorems . . . . . . . . . . . . . . . . . . 422
VII Cartesian Closedness and Partial Morphisms
429
27
Cartesian closed categories . . . . . . . . . . . . . . . . . . . . . . . . . . . 431
28
Partial morphisms, quasitopoi, and topological universes . . . . . . . . . . 445
Bibliography
463
Tables
467
Functors and morphisms: Preservation properties . . . . . . . . . . . . . . . . . 467
Functors and morphisms: Reﬂection properties . . . . . . . . . . . . . . . . . . 467
Functors and limits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 468
Functors and colimits
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 468
Stability properties of special epimorphisms . . . . . . . . . . . . . . . . . . . . 468
Table of Categories
469
Table of Symbols
474
Index
478
GNU Free Documentation License
512
18th January 2005

Chapter 0
INTRODUCTION
There’s a tiresome young man in Bay Shore.
When his ﬁanc´ee cried, ‘I adore
The beautiful sea’,
He replied, ‘I agree,
It’s pretty, but what is it for?’
Morris Bishop
18th January 2005
9


1 Motivation
Why study categories? Some reasons are these:
1.1 ABUNDANCE
Categories abound in mathematics and in related ﬁelds such as computer science. Such
entities as sets, vector spaces, groups, topological spaces, Banach spaces, manifolds,
ordered sets, automata, languages, etc., all naturally give rise to categories.
1.2 INSIGHT INTO SIMILAR CONSTRUCTIONS
Constructions with similar properties occur in completely diﬀerent mathematical ﬁelds.
For example,
(1) “products” for vector spaces, groups, topological spaces, Banach spaces, automata,
etc.,
(2) “free objects” for vector spaces, groups, rings, topological spaces, Banach spaces,
etc.,
(3) “reﬂective improvements” of certain objects, e.g., completions of partially ordered
sets and of metric spaces, ˇCech-Stone compactiﬁcations of topological spaces, sym-
metrizations of relations, abelianizations of groups, Bohr compactiﬁcations of topo-
logical groups, minimalizations of reachable acceptors, etc.
Category theory provides the means to investigate such constructions simultaneously.
1.3 USE AS A LANGUAGE
Category theory provides a language to describe precisely many similar phenomena that
occur in diﬀerent mathematical ﬁelds. For example,
(1) Each ﬁnite dimensional vector space is isomorphic to its dual and hence also to its
second dual. The second correspondence is considered “natural”, but the ﬁrst is
not. Category theory allows one to precisely make the distinction via the notion
of natural isomorphism.
(2) Topological spaces can be deﬁned in many diﬀerent ways, e.g., via open sets, via
closed sets, via neighborhoods, via convergent ﬁlters, and via closure operations.
Why do these deﬁnitions describe “essentially the same” objects? Category theory
provides an answer via the notion of concrete isomorphism.
(3) Initial structures, ﬁnal structures, and factorization structures occur in many dif-
ferent situations. Category theory allows one to formulate and investigate such
concepts with an appropriate degree of generality.
11

12
Introduction
[Chap. 0
1.4 CONVENIENT SYMBOLISM
Categorists have developed a symbolism that allows one quickly to visualize quite com-
plicated facts by means of diagrams.
1.5 TRANSPORTATION OF PROBLEMS
Category theory provides a vehicle that allows one to transport problems from one area
of mathematics (via suitable functors) to another area, where solutions are sometimes
easier. For example, algebraic topology can be described as an investigation of topolog-
ical problems (via suitable functors) by algebraic methods.
1.6 DUALITY
The concept of category is well balanced, which allows an economical and useful duality.
Thus in category theory the “two for the price of one” principle holds: every concept is
two concepts, and every result is two results.
The reasons given above show that familiarity with category theory will help those who
are confronted with a new ﬁeld to detect analogies and connections to familiar ﬁelds, to
organize the new ﬁeld appropriately, and to separate the general concepts, problems and
results from the special ones, which deserve special investigations. Categorical knowledge
thus helps to direct and to organize one’s thoughts.
18th January 2005

2 Foundations
Before delving into categories per se, we need to brieﬂy discuss some foundational as-
pects. In §1 we have seen that in category theory we are confronted with extremely
large collections such as “all sets”, “all vector spaces”, “all topological spaces”, or “all
automata”. The reader with some set-theoretical background knows that these entities
cannot be regarded as sets. For instance, if U were the set of all sets, then the subset
A = {x | x ∈U and x /∈x} of U would have the property that A ∈A if and only if A /∈A
(Russell’s paradox). Someone working, for example, in algebra, topology, or computer
science usually isn’t (and needn’t be) bothered with such set-theoretical diﬃculties. But
it is essential that those who work in category theory be able to deal with “collections”
like those mentioned above. To do so requires some foundational restrictions. Neverthe-
less, certain naturally arising categorical constructions should not be outlawed simply
because of the foundational safeguards. Hence, what is needed is a foundation that, on
the one hand, is suﬃciently ﬂexible so as not to unduly inhibit categorical inquiry and, on
the other hand, is suﬃciently rigid to give reasonable assurance that the resulting theory
is consistent, i.e., does not lead to contradictions. We also require that the foundation be
suﬃciently close to those foundational systems that are used by most mathematicians.
Below we provide a brief outline of the features such a foundation should have.
The basic concepts that we need are those of “sets” and “classes”. On a few occasions
we will need to go beyond these and also use “conglomerates”.
2.1 SETS
Sets can be thought of as the usual sets of intuitive set theory (or of some axiomatic
set theory). In particular, we require that the following constructions can be performed
with sets.
(1) For each set X and each “property” P, we can form the set {x ∈X | P(x)} of all
members of X that have the property P.
(2) For each set X, we can form the set P(X) of all subsets of X (called the power
set of X).
(3) For any sets X and Y , we can form the following sets:
(a) the set {X, Y } whose members are exactly X and Y ,
(b) the (ordered) pair (X, Y ) with ﬁrst coordinate X and second coordinate Y ,
[likewise for n-tuples of sets, for any natural number n > 2],
(c) the union X ∪Y = {x | x ∈X or x ∈Y },
(d) the intersection X ∩Y = {x | x ∈X and x ∈Y },
(e) the cartesian product X × Y = {(x, y) | x ∈X and y ∈Y },
(f) the relative complement X \ Y = {x | x ∈X and x ̸∈Y },
13

14
Introduction
[Chap. 0
(g) the set Y X of all functions2 f : X →Y from X to Y .
(4) For any set I and any family3 (Xi)i∈I of sets, we can form the following sets:
(a) the image {Xi | i ∈I} of the indexing function,
(b) the union S
i∈I Xi = {x | x ∈Xi for some i ∈I},
(c) the intersection T
i∈I Xi = {x | x ∈Xi for all i ∈I}, provided that I ̸= ∅,
(d) the cartesian product Q
i∈I Xi = {f : I →S
i∈I Xi | f(i) ∈Xi for each
i ∈I},
(e) the disjoint union U
i∈I Xi = S
i∈I(Xi × {i}).
(5) We can form the following sets:
N of all natural numbers,
Z of all integers,
Q of all rational numbers,
R of all real numbers, and
C of all complex numbers.
The above requirements imply that each topological space is a set. [It is a pair (X, τ),
where X is its (underlying) set and τ is a topology (that is the set of all open subsets
of X); i.e., τ ∈P(P(X)).] Analogously, each vector space and each automaton is a set.
However, by means of the above constructions, we cannot form “the set of all sets”, or
“the set of all vector spaces”, etc.
2.2 CLASSES
The concept of “class” has been created to deal with “large collections of sets”.
In
particular, we require that:
(1) the members of each class are sets,
(2) for every “property” P one can form the class of all sets with property P.
Hence there is the largest class: the class of all sets, called the universe and denoted
by U. Classes are precisely the subcollections of U. Thus, given classes A and B, one
may form such classes as A ∪B, A ∩B, and A × B. Because of this, there is no problem
in deﬁning functions between classes, equivalence relations on classes, etc. A family4
(Ai)i∈I of sets is a function A : I →U (sending i ∈I to A(i) = Ai). In particular, if I
is a set, then (Ai)i∈I is said to be set-indexed [cf. 2.1(4)].
For convenience we require further
2A function with domain X and codomain Y is a triple (X, f, Y ), where f ⊆X × Y is a relation such
that for each x ∈X there exists a unique y ∈Y with (x, y) ∈f [notation: y = f(x) or x 7→f(x)].
Functions are denoted by f : X →Y or X
f
−−→Y . Given functions X
f
−−→Y and Y
g
−→Z, the
composite function X
g◦f
−−−→Z is deﬁned by x 7→g(f(x)).
3For a formal deﬁnition of families of sets see 2.2(2).
4One should be aware that a family and its image are diﬀerent entities and that, moreover, a family
is not determined by its image for essentially the same reason that a sequence (i.e., an N-indexed
family) is not determined by its set of values. A family (Ai)i∈I is sometimes denoted by (Ai)I.
18th January 2005

Sec. 2]
Foundations
15
(3) if X1, X2, . . . , Xn are classes, then so is the n-tuple (X1, X2, . . . , Xn), and
(4) every set is a class (equivalently: every member of a set is a set).
Hence sets are special classes. Classes that are not sets are called proper classes. They
cannot be members of any class. Because of this, Russell’s paradox now translates into
the harmless statement that the class of all sets that are not members of themselves
is a proper class. Also the universe U, the class of all vector spaces, the class of all
topological spaces, and the class of all automata are proper classes.
Notice that in this setting condition 2.1(4)(a) above gives us the Axiom of Replacement :
(5) there is no surjection from a set to a proper class.
This means that each set must have “fewer” elements than any proper class.
Therefore sets are also called small classes, and proper classes are called large classes.
This distinction between “large” and “small” turns out to be crucial for many categorical
considerations.5
The framework of sets and classes described so far suﬃces for deﬁning and investigating
such entities as the category of sets, the category of vector spaces, the category of
topological spaces, the category of automata, functors between these categories, and
natural transformations between such functors. Thus for most of this book we need not
go beyond this stage. Therefore we advise the beginner to skip from here, go directly to
§3, and return to this section only when the need arises.
The limitations of the framework described above become apparent when we try to per-
form certain constructions with categories; e.g., when forming “extensions” of categories
or when forming categories that have categories or functors as objects. Since members
of classes must be sets and U is not a set, we can’t even form a class {U} whose only
member is U, much less a class whose members are all the subclasses of U or all functions
from U to U. In order to deal eﬀectively with such “collections” we need a further level
of generality:
2.3 CONGLOMERATES
The concept of “conglomerate” has been created to deal with “collections of classes”. In
particular, we require that:
(1) every class is a conglomerate,
(2) for every “property” P, one can form the conglomerate of all classes with property
P,
(3) conglomerates are closed under analogues of the usual set-theoretic constructions
outlined above (2.1); i.e., they are closed under the formation of pairs, unions,
products (of conglomerate-indexed families), etc.
5See, for example, Remark 10.33.
18th January 2005

16
Introduction
[Chap. 0
Thus we can form the conglomerate of all classes as well as such entities as functions
between conglomerates and families of conglomerates.
Furthermore, we require
(4) the Axiom of Choice for Conglomerates ; namely for each surjection between con-
glomerates f : X →Y , there is an injection g : Y →X with f ◦g = idY .
In other words, every equivalence relation on a conglomerate has a system of represen-
tatives. Notice that this Axiom of Choice implies an Axiom of Choice for Classes and
also the familiar Axiom of Choice for Sets.
Conglomerates
Classes =
subcollections of
the universe U
Sets =
small classes =
elements of U
The hierarchy of “collections”
A conglomerate X is said to be codable by a conglomerate Y provided that there exists
a surjection Y →X (equivalently: provided that there exists an injection X →Y ).
Conglomerates that are codable by a class (resp. by a set) are called legitimate (resp.
small) and will sometimes be treated like classes (resp. sets). For example, {U} is a small
conglomerate, and U ∪{U} is a legitimate one. Conglomerates that are not legitimate
are called illegitimate. For example, P(U) is an illegitimate conglomerate.
Since our main interest lies with such categories as the category of all sets, the category
of all vector spaces, the category of all topological spaces, the category of all automata,
and possible “extensions” of these, no need arises to consider any “collections” beyond
the level of conglomerates, such as the entity of “all conglomerates”.
For a set-theoretic model of the above foundation, see e.g., the Appendix of the mono-
graph of Herrlich and Strecker (see Bibliography), where, in view of the requirement
2.2(3), the familiar Kuratowski deﬁnition of an ordered pair (A, B) = {{A}, {A, B}}
needs to be replaced by a more suitable one; e.g., by (A, B) = {{{a}, {a, 0}} | a ∈
A} ∪{{{b}, {b, 1}} | b ∈B}.
18th January 2005

Sec. 2]
Foundations
17
Suggestions for Further Reading
Lawvere, F. W. The category of categories as a foundation for mathematics. Proceed-
ings of the Conference on Categorical Algebra (La Jolla, 1965), Springer, Berlin–
Heidelberg–New York, 1966, 1–20.
Mac Lane, S. One universe as a foundation for category theory. Springer Lect. Notes
Math. 106 (1969): 192–200.
Feferman, S. Set-theoretical foundations of category theory. Springer Lect. Notes Math.
106 (1969): 201–247.
B´enabou, J. Fibred categories and the foundations of naive category theory. J. Symbolic
Logic 50 (1985): 10–37.
18th January 2005


Chapter I
CATEGORIES,
FUNCTORS,
AND
NATURAL TRANSFORMATIONS
In this chapter we introduce the most fundamental concepts of category theory, as well
as some examples that we will ﬁnd to be useful in the remainder of the text.
18th January 2005
19


3 Categories and functors
CATEGORIES
Before stating the formal deﬁnition of category, we recall some of the motivating exam-
ples from §1. The notion of category should be suﬃciently broad that it encompasses
(1) the class of all sets and functions between them,
(2) the class of all vector spaces and linear transformations between them,
(3) the class of all groups and homomorphisms between them,
(4) the class of all topological spaces and continuous functions between them, and
(5) the class of all automata and simulations between them.
3.1 DEFINITION
A category is a quadruple A = (O, hom, id, ◦) consisting of
(1) a class O, whose members are called A-objects,
(2) for each pair (A, B) of A-objects, a set hom(A, B), whose members are called
A-morphisms from A to B — [the statement “f ∈hom(A, B)” is expressed
more graphically6 by using arrows; e.g., by statements such as “f : A →B is a
morphism” or “A
f
−→B is a morphism”],
(3) for each A-object A, a morphism A
idA
−−−→A, called the A-identity on A,
(4) a composition law associating with each A-morphism A
f
−→B and each A-mor-
phism B
g
−→C an A-morphism A
g◦f
−−−→C, called the composite of f and g,
subject to the following conditions:
(a) composition is associative; i.e., for morphisms A
f
−→B, B
g
−→C, and C
h
−→D, the
equation h ◦(g ◦f) = (h ◦g) ◦f holds,
(b) A-identities act as identities with respect to composition; i.e., for A-morphisms
A
f
−→B, we have idB ◦f = f and f ◦idA = f,
(c) the sets hom(A, B) are pairwise disjoint.
3.2 REMARKS
If A = (O, hom, id, ◦) is a category, then
(1) The class O of A-objects is usually denoted by Ob(A).
6Notice that although we use the same notation f : A →B for a function from A to B (2.1) and for a
morphism from A to B, morphisms are not necessarily functions (see Examples 3.3(4) below).
21

22
Categories, Functors, and Natural Transformations
[Chap. I
(2) The class of all A-morphisms (denoted by Mor(A)) is deﬁned to be the union of all
the sets hom(A, B) in A.
(3) If A
f
−→B is an A-morphism, we call A the domain of f [and denote it by dom(f)]
and call B the codomain of f [and denote it by cod(f)]. Observe that condition
(c) guarantees that each A-morphism has a unique domain and a unique codomain.
However, this condition is given for technical convenience only, because whenever all
other conditions are satisﬁed, it is easy to “force” condition (c) by simply replacing
each morphism f in hom(A, B) by a triple (A, f, B) (as we did when deﬁning func-
tions in 2.1). For this reason, when verifying that an entity is a category, we will
disregard condition (c).
(4) The composition, ◦, is a partial binary operation on the class Mor(A). For a pair
(f, g) of morphisms, f ◦g is deﬁned if and only if the domain of f and the codomain
of g coincide.
(5) If more than one category is involved, subscripts may be used (as in homA(A, B))
for clariﬁcation.
3.3 EXAMPLES
(1) The category Set whose object class is the class of all sets; hom(A, B) is the set
of all functions from A to B, idA is the identity function on A, and ◦is the usual
composition of functions.
(2) The following constructs; i.e., categories of structured sets and structure-preserving
functions between them (◦will always be the composition of functions and idA will
always be the identity function on A):
(a) Vec with objects all real vector spaces and morphisms all linear transformations
between them.
(b) Grp with objects all groups and morphisms all homomorphisms between them.
(c) Top with objects all topological spaces and morphisms all continuous functions
between them.
(d) Rel with objects all pairs (X, ρ), where X is a set and ρ is a (binary) relation
on X. Morphisms f : (X, ρ) →(Y, σ) are relation-preserving maps; i.e., maps
f : X →Y such that xρ x′ implies f(x) σf(x′).
(e) Alg(Ω) with objects all Ω-algebras and morphisms all Ω-homomorphisms
between them. Here Ω= (ni)i∈I is a family of natural numbers ni, indexed by
a set I. An Ω-algebra is a pair (X, (ωi)i∈I) consisting of a set X and a family of
functions ωi : Xni →X, called ni-ary operations on X. An Ω-homomorphism
f : (X, (ωi)i∈I) →( ˆX, (ˆωi)i∈I) is a function f : X →ˆX for which the diagram
Xni
fni /
ωi

ˆXni
ˆωi

X
f
/ ˆX
18th January 2005

Sec. 3]
Categories and functors
23
commutes (i.e., f ◦ωi = ˆωi ◦fni) for each i ∈I. In case ni = 1 for each i ∈I,
the symbol Σ = (ni)i∈I is usually used instead of Ω.
(f) Σ-Seq with objects all (deterministic, sequential) Σ-acceptors, where Σ is a
ﬁnite set of input symbols. Objects are quadruples (Q, δ, q0, F), where Q is a
ﬁnite set of states, δ : Σ×Q →Q is a transition map, q0 ∈Q is the initial state,
and F ⊆Q is the set of ﬁnal states.
A morphism f : (Q, δ, q0, F) →(Q′, δ′, q′
0, F ′) (called a simulation) is a function
f : Q →Q′ that preserves
(i) transitions, i.e., δ′(σ, f(q)) = f(δ(σ, q)),
(ii) the initial state, i.e., f(q0) = q′
0, and
(iii) the ﬁnal states, i.e., f[F] ⊆F ′.
(3) For constructs, it is often clear what the morphisms should be once the objects are
deﬁned. However, this is not always the case. For instance:
(a) there are at least three natural constructs each having as objects all metric
spaces; namely,
Met with morphisms all non-expansive maps (= contractions),7
Metu with morphisms all uniformly continuous maps,
Metc with morphisms all continuous maps.
(b) there are at least two natural constructs each having as objects all Banach
spaces; namely,
Ban with morphisms all linear contractions,8
Banb with morphisms all bounded linear maps (= continuous linear maps =
uniformly continuous linear maps).
(4) The following categories where the objects and morphisms are not structured sets
and structure-preserving functions:
(a) Mat with objects all natural numbers, and for which hom(m, n) is the set of
all real m × n matrices, idn : n →n is the unit diagonal n × n matrix, and
composition of matrices is deﬁned by A ◦B = BA, where BA denotes the usual
multiplication of matrices.
(b) Aut with objects all (deterministic, sequential, Moore) automata. Objects are
sextuples (Q, Σ, Y, δ, q0, y), where Q is the set of states, Σ and Y are the sets of
input symbols and output symbols, respectively, δ : Σ×Q →Q is the transition
map, q0 ∈Q is the initial state, and y : Q →Y is the output map. Morphisms
from an automaton (Q, Σ, Y, δ, q0, y) to an automaton (Q′, Σ′, Y ′, δ′, q′
0, y′) are
triples (fQ, fΣ, fY ) of functions fQ : Q →Q′, fΣ : Σ →Σ′, and fY : Y →Y ′
satisfying the following conditions:
7A function f : (X, d)
→
(Y, ˆd) is called non-expansive (or a contraction) provided that
ˆd(f(a), f(b)) ≤d(a, b), for all a, b ∈X.
8For Banach spaces the distance between a and b is given by ∥a −b ∥.
18th January 2005

24
Categories, Functors, and Natural Transformations
[Chap. I
(i) preservation of transition: δ′(fΣ(σ), fQ(q)) = fQ(δ(σ, q)),
(ii) preservation of outputs: fY (y(q)) = y′(fQ(q)),
(iii) preservation of initial state: fQ(q0) = q′
0.
(c) Classes as categories:
Every class X gives rise to a category C(X) = (O, hom, id, ◦) — the objects of
which are the members of X, and whose only morphisms are identities — as
follows:
O = X,
hom(x, y) =
(
∅
if
x ̸= y,
{x}
if
x = y,
idx = x,
and
x ◦x = x.
C(∅) is called the empty category. C({0}) is called the terminal category
and is denoted by 1.
(d) Preordered classes as categories:
Every preordered class, i.e., every pair (X, ≤) with X a class and ≤a reﬂexive
and transitive relation on X, gives rise to a category C(X, ≤) = (O, hom, id, ◦)
— the objects of which are the members of X — as follows:
O = X,
hom(x, y) =
(
{(x, y)}
if
x ≤y,
∅
otherwise,
idx = (x, x),
and (y, z) ◦(x, y) = (x, z).
(e) Monoids as categories:
Every monoid (M, •, e), i.e., every semigroup (M, •) with unit, e, gives rise to a
category C(M, •, e) = (O, hom, id, o) — with only one object — as follows:
O = {M},
hom(M, M) = M,
idM = e,
and
y ◦x = y • x.
(f) Set×Set is the category that has as objects all pairs of sets (A, B), as morphisms
from (A, B) to (A′, B′) all pairs of functions (f, g) with A
f
−→A′ and B
g
−→B′,
identities given by id(A,B) = (idA, idB), and composition deﬁned by
(f2, g2) ◦(f1, g1) = (f2 ◦f1, g2 ◦g1).
Similarly, for any categories A and B one can form A×B, or, more generally, for
ﬁnitely many categories C1, C2, . . . , Cn, one can form the product category
C1 × C2 × · · · × Cn.
3.4 REMARKS
(1) In the cases of classes, preordered classes, and monoids, for notational convenience
we will sometimes not distinguish between them and the categories they determine
in the sense of Examples 3.3(4)(c), (d), and (e) above. Thus, we might speak of a
preordered class (X, ≤) or of a monoid (M, •, e) as a category.
18th January 2005

Sec. 3]
Categories and functors
25
(2) Morphisms in a category will usually be denoted by lowercase letters, with uppercase
letters reserved for objects. The morphism h = g ◦f will sometimes be denoted by
A
f
−→B
g
−→C or by saying that the triangle
A
f
/
h
@
@
@
@
@
@
@
B
g

C
commutes. Similarly, the statement that the square
A
f
/
h

B
g

C
k
/ D
commutes means that g ◦f = k ◦h.
(3) The order of writing the compositions may seem backwards.
However, it comes
from the fact that in many of the familiar examples (e.g., in all constructs) the
composition law is the composition of functions.
(4) Notice that because of the associativity of composition, the notation
A
f
−→B
g
−→C
h
−→D is unambiguous.
THE DUALITY PRINCIPLE
3.5 DEFINITION
For any category A = (O, homA, id, ◦) the dual (or opposite) category of A is the
category Aop = (O, homAop, id, ◦op), where homAop(A, B) = homA(B, A) and f ◦op g =
g ◦f. (Thus A and Aop have the same objects and, except for their direction, the same
morphisms.)
3.6 EXAMPLES
(1) If A = (X, ≤) is a preordered class, considered as a category [3.3(4)(d)], then
Aop = (X, ≥).
(2) If A = (M, •, e) is a monoid, considered as a category [3.3(4)(e)], then
Aop = (M, ˆ•, e), where a ˆ• b = b • a.
3.7 REMARK
Because of the way dual categories are deﬁned, every statement SAop(X) concerning an
object X in the category Aop can be translated into a logically equivalent statement
Sop
A (X) concerning the object X in the category A.
This observation allows one to
18th January 2005

26
Categories, Functors, and Natural Transformations
[Chap. I
associate (in two steps) with every property P concerning objects in categories, a dual
property concerning objects in categories, as demonstrated by the following example:
Consider the property of objects X in A:
PA(X) ≡For any A-object A there exists exactly one A-morphism f : A →X.
Step 1: In PA(X) replace all occurrences of A by Aop, thus obtaining the property
PAop(X) ≡For any Aop-object A there exists exactly one Aop-morphism f : A →X.
Step 2: Translate PAop(X) into the logically equivalent statement
P op
A (X) ≡For any A-object A there exists exactly one A-morphism f : X →A.
Observe that, roughly speaking, Pop
A (X) is obtained from PA(X) by reversing the di-
rection of each arrow and the order in which morphisms are composed. Naturally, in
general, Pop
A (X) is not equivalent to PA(X). For example, the above property PSet(X)
holds if and only if X is a singleton set, whereas the dual property Pop
Set(X) holds if and
only if X is the empty set.
In a similar manner any property about morphisms9 in categories gives rise to a dual
property concerning morphisms in categories, as demonstrated by the following example:
Consider the property of morphisms A
f
−→B in A:
QA(f) ≡There exists an A-morphism B
g
−→A with A
f
−→B
g
−→A = A
idA
−−−→A (i.e.,
g ◦f = idA) in A.
Step 1: Replace in QA(f) all occurrences of A by Aop, thus obtaining the property
QAop(f) ≡There exists an Aop-morphism B
g
−→A with A
f
−→B
g
−→A = A
idA
−−−→A
(i.e., g ◦f = idA) in Aop.
Step 2: Translate QAop(f) into the logically equivalent statement
Qop
A (f) ≡There exists an A-morphism A
g
−→B with A
g
−→B
f
−→A = A
idA
−−−→A (i.e.,
f ◦g = idA) in A.
For example, the above property QSet(f) holds if and only if f is an injective function
with nonempty domain or is the identity on the empty set, whereas the dual property
Qop
Set(f) holds if and only if f is a surjective function.
More complex properties PA(A, B, . . . , f, g, . . .) that involve objects A, B, . . . and mor-
phisms f, g, . . . in a category A can be dualized in a similar way.
If P = PA(A, B, . . . , f, g, . . .) holds for all A-objects A, B, . . . and all A-morphisms
f, g, . . ., then we say that A has the property P or that P(A) holds.
9Observe that if a property concerns morphisms A
f
−−→B, then its dual concerns morphisms B
f
−−→A.
In particular if a property concerns dom(f), then its dual concerns cod(f).
18th January 2005

Sec. 3]
Categories and functors
27
The Duality Principle for Categories states
Whenever a property P holds for all categories,
then the property Pop holds for all categories.
The proof of this (extremely useful) principle follows immediately from the facts that
for all categories A and properties P
(1) (Aop)op = A, and
(2) Pop(A) holds if and only if P(Aop) holds.
For example, consider the property R = RA(f) ≡if PA(dom(f)), then QA(f), where
P and Q are the properties deﬁned above. One can easily show that R(A) holds for
all categories A, so that by the Duality Principle Rop(A) holds for all categories A,
where10 Rop
A (f) ≡if Pop
A (cod(f)) then Qop
A (f).
The duality principle
Because of this principle, each result in category theory has two equivalent formulations
(which at ﬁrst glance might seem to be quite diﬀerent). However, only one of them needs
to be proved, since the other one follows by virtue of the Duality Principle.
Often the dual concept Pop of a concept P is denoted by “co-P” (cf. equalizers and
coequalizers (7.51 and 7.68), wellpowered and co-wellpowered (7.82 and 7.87), products
and coproducts (10.19 and 10.63), etc.). A concept P is called self-dual if P = Pop.
An example11 of a self-dual concept is that of “identity morphism”.
10See footnote 4.
11“Live dual, laud evil” — E.H.
18th January 2005

28
Categories, Functors, and Natural Transformations
[Chap. I
Formulation of the duals of deﬁnitions and results will be an implied exercise throughout
the remainder of the book. However, we ﬁnd that it is sometimes instructive to provide
such formulations. When we do so for results, we usually will conclude with the symbol
D to indicate that the dual result has been stated and proved at an earlier point, so
that (by the Duality Principle) no proof is needed.
ISOMORPHISMS
3.8 DEFINITION
A morphism f : A →B in a category12 is called an isomorphism provided that there
exists a morphism g : B →A with g ◦f = idA and f ◦g = idB. Such a morphism g is
called an inverse of f.
3.9 REMARK
It is clear from the above deﬁnition that the statement “f is an isomorphism” is self-dual;
i.e., f is an isomorphism in A if and only if f is an isomorphism in Aop.
3.10 PROPOSITION
If f : A →B, g : B →A and h : B →A are morphisms such that g ◦f = idA and
f ◦h = idB, then g = h.
Proof: h = idA ◦h = (g ◦f) ◦h = g ◦(f ◦h) = g ◦idB = g.

3.11 COROLLARY
If g1 and g2 are inverses of a morphism f, then g1 = g2.

3.12 REMARK
Due to the above corollary we may speak of the inverse of an isomorphism f. It will be
denoted by f−1.
3.13 EXAMPLES
(1) Every identity idA is an isomorphism and id−1
A = idA.
(2) In Set the isomorphisms are precisely the bijective maps, in Vec they are precisely
the linear isomorphisms, in Grp they are precisely the group-theoretic isomorphisms,
in Top they are precisely the homeomorphisms, and in Rel they are precisely the
relational isomorphisms. Observe that in all of these cases every isomorphism is a
bijective morphism, but that the converse to this statement, namely, “every bijective
morphism is an isomorphism”, is true for Set, Vec, and Grp, but not for Rel or
Top.
12From now on, when making a deﬁnition or stating a result that is valid for any category, we will
not name the category. Also whenever we speak about morphisms or objects without specifying a
category, we usually mean that they belong to the same category. When more than one category
is involved and confusion may occur, we will use a hyphenated notation, such as A-identity or A-
isomorphism.
18th January 2005

Sec. 3]
Categories and functors
29
(3) In Banb[3.3(3)] the isomorphisms are precisely the linear homeomorphisms, whereas
in Ban isomorphisms are precisely the norm-preserving linear bijections.
(4) In Mat the isomorphisms are precisely the regular matrices; i.e., the square matrices
with nonzero determinant.
(5) A morphism (fQ, fΣ, fY ) in Aut is an isomorphism if and only if each of the maps
fQ, fΣ, and fY is bijective.
(6) In a monoid, considered as a category, every morphism is an isomorphism if and
only if the monoid is a group.
3.14 PROPOSITION
(1) If A
f
−→B is an isomorphism, then so is B
f−1
−−−→A and (f−1)−1 = f.
(2) If A
f
−→B and B
g
−→C are isomorphisms, then so is A
g◦f
−−−→C, and
(g ◦f)−1 = f−1 ◦g−1.
Proof:
(1). Immediate from the deﬁnitions of inverse and isomorphism (3.8).
(2). By associativity and the deﬁnition of inverse, we have: (g ◦f) ◦(f−1 ◦g−1) =
g◦(f ◦f−1)◦g−1 = g◦idB◦g−1 = g◦g−1 = idC. Similarly, (f−1◦g−1)◦(g◦f) = idA.
3.15 DEFINITION
Objects A and B in a category are said to be isomorphic provided that there is an
isomorphism f : A →B.
3.16 REMARK
For any category, A, “is isomorphic to” clearly yields an equivalence relation on Ob(A).
[Reﬂexivity follows from the fact that identities are isomorphisms, and symmetry and
transitivity are immediate from the proposition above.]
Isomorphic objects are fre-
quently regarded as being “essentially” the same.
FUNCTORS
In category theory it is the morphisms, rather than the objects, that have the primary
role. Indeed, we will see that it is even possible to deﬁne “category” without using the
notion of objects at all (3.53). Now, we take a more global viewpoint and consider cate-
gories themselves as structured objects. The “morphisms” between them that preserve
their structure are called functors.
3.17 DEFINITION
If A and B are categories, then a functor F from A to B is a function that assigns
to each A-object A a B-object F(A), and to each A-morphism A
f
−→A′ a B-morphism
F(A)
F(f)
−−−−→F(A′), in such a way that
18th January 2005

30
Categories, Functors, and Natural Transformations
[Chap. I
(1) F preserves composition; i.e., F(f ◦g) = F(f) ◦F(g) whenever f ◦g is deﬁned, and
(2) F preserves identity morphisms; i.e., F(idA) = idF(A) for each A-object A.
3.18 NOTATION
Functors F from A to B will be denoted by F : A →B or A
F
−−→B. We frequently use
the simpliﬁed notations FA and Ff rather than F(A) and F(f). Indeed, we sometimes
denote the action on both objects and morphisms by
F(A
f
−→B) = FA
Ff
−−→FB.
3.19 REMARK
Notice that a functor F : A →B is technically a family of functions; one from Ob(A) to
Ob(B), and for each pair (A, A′) of A-objects, one from hom(A, A′) to hom(FA, FA′).
Since functors preserve identity morphisms and since there is a bijective correspondence
between the class of objects and the class of identity morphisms in any category, the
object-part of a functor actually is determined by the morphism-parts. Indeed, we will
see later that if we choose the “object-free” deﬁnition of category (3.53), then a functor
between categories can be deﬁned simply as a function between their morphism classes
that preserves identities and composition (3.55).
3.20 EXAMPLES
(1) For any category A, there is the identity functor idA : A →A deﬁned by
idA(A
f
−→B) = A
f
−→B.
(2) For any categories A and B and any B-object B, there is the constant functor
CB : A →B with value B, deﬁned by
CB(A
f
−→A′) = B
idB
−−−→B.
(3) For any of the constructs A mentioned above [3.3(2)(3)] there is the forgetful
functor (or underlying functor) U : A →Set, where in each case U(A) is the
underlying set of A, and U(f) = f is the underlying function of the morphism f.
(4) For any category A and any A-object A, there is the covariant hom-functor
hom(A, −) : A →Set, deﬁned by
hom(A, −)(B
f
−→C) = hom(A, B)
hom(A,f)
−−−−−−−→hom(A, C)
where hom(A, f)(g) = f ◦g.
18th January 2005

Sec. 3]
Categories and functors
31
(5) For any category A and any A-object A, there is the contravariant13 hom-functor
hom(−, A) : Aop →Set deﬁned on any Aop-morphism14 B
f
−→C by
hom(−, A)(B
f
−→C) = homA(B, A)
hom(f,A)
−−−−−−→homA(C, A)
with hom(f, A)(g) = g ◦f, where the composition is the one in A.
A forgetful functor
(6) If A and B are monoids considered as categories [3.3(4)(e)], then functors from A
to B are essentially just monoid homomorphisms from A to B.
(7) If A and B are preordered sets considered as categories [3.3(4)(d)], then functors
from A and B are essentially just order-preserving maps from A to B.
(8) The covariant power-set functor P : Set →Set is deﬁned by
P(A
f
−→B) = PA
Pf
−−→PB
where PA is the power-set of A; i.e., the set of all subsets of A; and for each X ⊆A,
Pf(X) is the image f[X] of X under f.
13Functors are sometimes called covariant functors. A contravariant functor from A to B means a
functor from Aop to B.
14Recall that Aop-objects are precisely the same as A-objects, and B
f
−−→C is an Aop-morphism means
that C
f
−−→B is an A-morphism.
18th January 2005

32
Categories, Functors, and Natural Transformations
[Chap. I
(9) The contravariant8 power-set functor Q : Setop →Set is deﬁned by
Q(A
f
−→B) = QA
Qf
−−−→QB
where QA is the power-set of A, and for each X ⊆A, Qf(X) is the preimage f−1[X]
of X under the function f : B →A.
(10) For any positive integer n the nth power functor Sn : Set →Set is given by
Sn(X
f
−→Y ) = Xn
fn
−−→Y n,
where fn(x1, . . . , xn) = (f(x1), . . . , f(xn)).
(11) The Stone-functor S : Topop →Boo (where Boo is the construct of boolean
algebras and boolean homomorphisms) assigns to each topological space the boolean
algebra of its clopen subsets, and for any continuous map X
f
−→Y ; i.e., for any
morphism Y
f
−→X in Topop, Sf : S(Y ) →S(X) is given by Sf(Z) = f−1[Z].
(12) The duality functor for vector spaces (ˆ) : Vecop →Vec associates with any
vector space V its dual ˆV (i.e., the vector space hom(V, R) with operations deﬁned
pointwise) and with any Vecop-morphism V
f
−→W, i.e., any linear map W
f
−→V ,
the morphism ˆf : ˆV →ˆW, deﬁned by ˆf(g) = g ◦f.
(13) If M = (M, •, e) is a monoid, then functors from M (regarded as a one-object
category) into Set are essentially just M-actions; i.e., pairs (X, ∗), where X is a set
and ∗is a map from M × X to X such that e ∗x = x and (m • ˆm) ∗x = m ∗( ˆm ∗x).
[Associate with any such M-action (X, ∗) the functor F : M →Set, deﬁned by
F(M
m
−−→M) = X
F(m)
−−−−→X, where F(m)(x) = m ∗x.]
PROPERTIES OF FUNCTORS
3.21 PROPOSITION
All functors F : A →B preserve isomorphisms; i.e., whenever A
k
−→A′ is an A-
isomorphism, then F(k) is a B-isomorphism.
Proof: F(k)◦F(k−1) = F(k◦k−1) = F(idA′) = idFA′. Similarly, F(k−1)◦F(k) = idFA.
3.22 REMARKS
(1) Although the above proposition has a trivial proof, it has interesting consequences.
In particular, it can be used to show that certain objects in a category are not
isomorphic. For example, the fundamental group functor can be used to prove that
certain topological spaces are not homeomorphic by showing that their fundamental
groups are not isomorphic.
18th January 2005

Sec. 3]
Categories and functors
33
(2) Even though all functors preserve isomorphisms, they need not reﬂect isomor-
phisms (in the sense that if F(k) is an isomorphism, then k must be an isomor-
phism). For example, consider the forgetful functor U : Top →Set. The identity
function from the set of real numbers, with the discrete topology, to R, with its
usual topology, is not a homeomorphism (i.e., isomorphism in Top), although its
underlying function is an identity, and thus is an isomorphism in Set.
3.23 PROPOSITION
If F : A →B and G : B →C are functors, then the composite G ◦F : A →C
deﬁned by
(G ◦F)(A
f
−→A′) = G(FA)
G(Ff)
−−−−−→G(FA′)
is a functor.15

3.24 DEFINITION
(1) A functor F : A →B is called an isomorphism provided that there is a functor
G : B →A such that G ◦F = idA and F ◦G = idB.
(2) The categories A and B are said to be isomorphic provided that there is an iso-
morphism F : A →B.
3.25 REMARKS
(1) Obviously the functor G in the above deﬁnition is uniquely determined by F. It will
be denoted by F −1.
(2) Clearly, “is isomorphic to” is an equivalence relation on the conglomerate of all
categories. Isomorphic categories are considered to be essentially the same.
3.26 EXAMPLES
(1) For any pair of classes (X, Y ), the categories C(X) and C(Y ) [3.3(4)(c)] are isomor-
phic if and only if there exists a bijection from X to Y . A category is isomorphic
to a category of the form C(X) if and only if each of its morphisms is an identity.
Such categories are called discrete.
(2) For any pair ((X, ≤), (Y, ≤)) of preordered classes, the categories C(X, ≤) and
C(Y, ≤) [3.3(4)(d)] are isomorphic if and only if (X, ≤) and (Y, ≤) are order-isomor-
phic. A category is isomorphic to a category of the form C(X, ≤) if and only if for
each pair of objects (A, B), hom(A, B) has at most one member. Such categories
are called thin.
(3) For any pair (M, N) of monoids, the categories C(M) and C(N) [3.3(4)(e)] are
isomorphic if and only if M and N are isomorphic monoids. A category is isomorphic
to a category of the form C(M) if and only if it has precisely one object.
15Occasionally, for typographical eﬃciency, we will use juxtaposition to denote composition of functors,
i.e., GF rather than G ◦F. When F is an endofunctor, i.e., when its domain and codomain are the
same, we may even use F 2 or F 3 to denote F ◦F or F ◦F ◦F, respectively.
18th January 2005

34
Categories, Functors, and Natural Transformations
[Chap. I
(4) The construct Boo of boolean algebras [3.20(11)] is isomorphic to the construct
BooRng of boolean rings16 and ring homomorphisms.
(5) For any commutative ring R let R-Mod (resp. Mod-R) denote the construct of left
(resp. right) R-modules, and module homomorphisms.17 Then:
(a) R-Mod is isomorphic to Mod-R, for any ring R.
(b) If Z denotes the ring of integers, then Z-Mod is isomorphic to the construct
Ab of abelian groups and group homomorphisms.
(6) For any monoid, M, let M-Act be the category of all M-actions [3.20(13)] and
action homomorphisms [f(m ∗x) = m ∗f(x)]. If Σ∗is the free monoid of all words
over Σ, then Σ∗-Act is isomorphic to Alg(Σ) [3.3(2)(e)].
3.27 DEFINITION
Let F : A →B be a functor.
(1) F is called an embedding provided that F is injective on morphisms.
(2) F is called faithful provided that all the hom-set restrictions
F : homA(A, A′) →homB(FA, FA′)
are injective.
(3) F is called full provided that all hom-set restrictions are surjective.
(4) F is called amnestic provided that an A-isomorphism f is an identity whenever
Ff is an identity.
3.28 REMARK
Notice that a functor is:
(1) an embedding if and only if it is faithful and injective on objects, and
(2) an isomorphism if and only if it is full, faithful, and bijective on objects.
3.29 EXAMPLES
(1) The forgetful functor U : Vec →Set is faithful and amnestic, but is neither full nor
an embedding. This is the case for all of the constructs mentioned above (except, of
course, for Set itself).
(2) The covariant power-set functor P : Set →Set and the contravariant power-set
functor Q : Setop →Set [3.20(8)(9)] are both embeddings that are not full.
16A boolean ring is a ring, with unit, in which each element is idempotent with respect to multiplica-
tion.
17Notice that for the ring R of real numbers, R-Mod = Vec.
18th January 2005

Sec. 3]
Categories and functors
35
(3) The functor U : Metc →Top deﬁned by
U((X, d)
f
−→(X′, d′)) = (X, τd)
f
−→(X′, τd′)
(where τd denotes the topology induced on X by the metric d) is full and faithful,
but not an embedding.
(4) For any category A, the unique functor from A to 1[3.3(4)(c)] is faithful if and only
if A is thin.
(5) The discrete space functor D : Set →Top deﬁned by
D(X
f
−→Y ) = (X, δX)
f
−→(Y, δY )
(where δZ denotes the discrete topology on the set Z) is a full embedding.
(6) The indiscrete space functor N : Set →Top deﬁned by
N(X
f
−→Y ) = (X, ιX)
f
−→(Y, ιY )
(where ιZ denotes the indiscrete topology on the set Z) is a full embedding.
3.30 PROPOSITION
Let F : A →B and G : B →C be functors.
(1) If F and G are both isomorphisms (resp. embeddings, faithful, or full), then so is
G ◦F.
(2) If G ◦F is an embedding (resp. faithful), then so is F.
(3) If F is surjective on objects and G ◦F is full, then G is full.
3.31 PROPOSITION
If F : A →B is a full, faithful functor, then for every B-morphism f : FA →FA′,
there exists a unique A-morphism g : A →A′ with Fg = f.
Furthermore, g is an A-isomorphism if and only if f is a B-isomorphism.
Proof: The morphism exists by fullness, and it is unique by faithfulness.
Since by
Proposition 3.21 functors preserve isomorphisms, f is an isomorphism if g is.
If
f : FA →FA′ is a B-isomorphism, let g′ : A′ →A be the unique A-morphism with
F(g′) = f−1.
Then F(g′ ◦g) = Fg′ ◦Fg = f−1 ◦f = idFA = F(idA), so that by
faithfulness g′ ◦g = idA. Likewise g ◦g′ = idA′. Hence g is an isomorphism.

3.32 COROLLARY
Functors F : A →B that are full and faithful reﬂect isomorphisms; i.e., whenever g is
an A-morphism such that F(g) is a B-isomorphism, then g is an A-isomorphism.

18th January 2005

36
Categories, Functors, and Natural Transformations
[Chap. I
Recall that isomorphic categories are considered as being essentially the same. This
concept of “sameness” is very restrictive. The following slightly weaker and more ﬂexible
notion of “essential sameness” called equivalence of categories is much more frequently
satisﬁed. It will turn out that equivalent categories have the same behavior with respect
to all interesting categorical properties.
3.33 DEFINITION
(1) A functor F : A →B is called an equivalence provided that it is full, faithful,
and isomorphism-dense in the sense that for any B-object B there exists some
A-object A such that F(A) is isomorphic to B.
(2) Categories A and B are called equivalent provided that there is an equivalence
from A to B.
3.34 REMARK
It is shown in Proposition 3.36 that “is equivalent to” is an equivalence relation on the
conglomerate of all categories.
3.35 EXAMPLES
(1) Each isomorphism between categories is an equivalence. Hence isomorphic categories
are equivalent.
(2) The category Mat [3.3(4)(a)] is equivalent to the construct of ﬁnite-dimensional
vector spaces (and linear transformations), but is not isomorphic to it. The fact
that there is no isomorphism can be deduced from the observation that in Mat
diﬀerent objects cannot be isomorphic. An equivalence is given by the functor that
assigns to each natural number n ∈Ob(Mat) the vector space Rn and to each
n × m matrix A ∈Mor(Mat) the linear map from Rn to Rm that assigns to each
(x1, x2, . . . , xn) ∈Rn the 1×m matrix [x1x2 . . . xn]A (given by matrix multiplication)
considered as an m-tuple in Rm.
(3) The constructs Metc of metric spaces and continuous maps and Topm of metrizable
topological spaces and continuous maps are equivalent. The functor that associates
with each metric space its induced topological space is an equivalence that is not an
isomorphism.
(4) Posets,18 considered as categories, are equivalent if and only if they are isomorphic.
However, preordered sets, considered as categories, can be equivalent without being
isomorphic (cf. Exercise 3H).
(5) The category of all minimal acceptors (i.e., those with a minimum number of states
for accepting the given language), as a full subcategory of Σ-Seq, is equivalent to
the poset of all recognizable languages (ordered by inclusion and considered as a
thin category). In fact, for two minimal acceptors A and A′, there exists at most
one simulation A →A′, and such a simulation exists if and only if A′ accepts each
word accepted by A.
18A poset (or partially ordered set) is a pair (X, ≤) that consists of a set X and a transitive, reﬂexive,
and antisymmetric relation ≤on X.
18th January 2005

Sec. 3]
Categories and functors
37
3.36 PROPOSITION
(1) If A
F
−−→B is an equivalence, then there exists an equivalence B
G
−−→A.
(2) If A
F
−−→B and B
H
−−→C are equivalences, then so is A
H◦F
−−−−→C.
Proof:
(1) For each object B of B, choose an object G(B) of A and a B-isomorphism
εB : F(G(B)) →B. Since F is full and faithful, for each B-morphism g : B →B′
there is a unique A-morphism G(g) : G(B) →G(B′) with
F(G(g)) = ε−1
B′ ◦g ◦εB : F(G(B)) →F(G(B′)).
Hence G(g) is the unique A-morphism for which the diagram
F(G(B))
F(G(g)) /
εB

F(G(B′))
εB′

B
g
/ B′
(∗)
commutes.
That G preserves identities follows immediately from the uniqueness
requirement in the above diagram. That G preserves composition follows from the
uniqueness, the commutativity of the diagram
F(G(B))
F(G(g)) /
εB

F(G(B′))
F(G(h)) /
εB′

F(G(B′′))
εB′′

B
g
/ B′
h
/ B′′
and the fact that F preserves composition. Thus G is a functor. G is full because
for each A-morphism f : G(B) →G(B′), the morphism εB′ ◦F(f) ◦ε−1
B : B →B′
(which we denote by g) has the property that g ◦εB = εB′ ◦F(f), and this implies
[by uniqueness for (∗)] that f = G(g). G is faithful since given B
g1 /
g2 / B′ with
G(g1) = G(g2) = f, an application of (∗) yields
g1 = εB′ ◦F(G(g1)) ◦ε−1
B = εB′ ◦F(f) ◦ε−1
B = εB′ ◦F(G(g2)) ◦ε−1
B = g2.
Finally, G is isomorphism-dense because in view of Proposition 3.31 for each A-
object A, the B-isomorphism εFA : F(G(FA)) →FA is the image of some A-iso-
morphism GFA →A.
(2) By Proposition 3.30 it suﬃces to show that H ◦F is isomorphism-dense. Given a
C-object C, the fact that both F and H are isomorphism-dense gives a B-object
B, an isomorphism h : H(B) →C, and an A-object A, with an isomorphism
k : F(A) →B. Thus h ◦H(k) : (H ◦F)(A) →C is an isomorphism.

18th January 2005

38
Categories, Functors, and Natural Transformations
[Chap. I
3.37 REMARK
The concept of equivalence is especially useful when duality is involved.
There are
numerous examples of pairs of familiar categories where each category is equivalent to
the dual of the other.
3.38 DEFINITION
Categories A and B are called dually equivalent provided that Aop and B are equiv-
alent.
3.39 EXAMPLES
(1) The construct Boo of boolean algebras is dually equivalent to the construct BooSpa
of boolean spaces (i.e., to the construct of zero-dimensional compact Hausdorﬀspaces
and continuous maps). An equivalence can be obtained by associating with each
boolean space its boolean algebra of clopen subsets (Stone Duality).
(2) The category of ﬁnite-dimensional real vector spaces is dually equivalent to itself.
An equivalence can be obtained by associating with each ﬁnite-dimensional vector
space its dual space [cf. 3.20(12)].
(3) Set is dually equivalent to the category of complete atomic boolean algebras and
complete boolean homomorphisms. An equivalence can be obtained by associating
with each set its power-set, considered as a complete atomic boolean algebra.
(4) The category of compact Hausdorﬀabelian groups is dually equivalent to Ab. An
equivalence can be obtained by associating with each compact Hausdorﬀabelian
group G its group of characters hom(G, R/Z) (Pontrjagin Duality).
(5) The category of locally compact abelian groups is dually equivalent to itself. An
equivalence can be obtained as in (4) above.
(6) The category HComp of compact Hausdorﬀspaces (and continuous functions) is
dually equivalent to the category of C∗-algebras and algebra homomorphisms. An
equivalence can be obtained by associating with each compact Hausdorﬀspace X
the C∗-algebra C(X, C) of complex-valued continuous functions (Gelfand-Naimark
Duality).
3.40 REMARK
Recall that we have formulated a duality principle related to objects, morphisms, and
categories (3.7).
We now extend this to functors; i.e., we introduce for any functor
F : A →B, the concept of its dual functor that can be used to formulate the duals of
categorical statements involving functors. The reader may guess as to what the dual
of a categorical statement involving a functor might be. Two common mistakes are to
either do too little (by dualizing just one of the categories A or B) or to do too much
(by even reversing the arrow representing the functor F). In either of these cases, one
generally does not obtain a new functor. The proper dual concept is the following:
18th January 2005

Sec. 3]
Categories and functors
39
3.41 DEFINITION
Given a functor F : A →B, the dual (or opposite) functor F op : Aop →Bop is the
functor deﬁned by
F op(A
f
−→A′) = FA
Ff
−−→FA′.
3.42 REMARK
Obviously (F op)op = F.
To form the dual of a categorical statement that involves
functors, make the same statement, but with each category and each functor replaced
by its dual. Then translate this back into a statement about the original categories and
functors.
3.43 PROPOSITION
Each of the following properties of functors is self-dual: “isomorphism”, “embedding”,
“faithful”, “full”, “isomorphism-dense”, and “equivalence”.

CATEGORIES OF CATEGORIES
We have seen above that functors act as morphisms between categories; they are closed
under composition, which is associative (since it is just the composition of functions be-
tween classes) and the identity functors act as identities with respect to the composition.
Because of this, one is tempted to consider the “category of all categories”. However,
there are two diﬃculties that arise when we try to form this entity. First, the “category
of all categories” would have objects such as Vec and Top, which are proper classes,
so that since proper classes cannot be elements of classes, the conglomerate of all ob-
jects would not be a class (thus violating condition 3.1(1) in the deﬁnition of category).
Second, given any categories A and B, it is not generally true that the conglomerate
of all functors from A to B forms a set. This violates condition 3.1(2) in the deﬁnition
of category. However, if we restrict our attention to categories that are sets, then both
problems are eliminated.
3.44 DEFINITION
A category A is said to be small provided that its class of objects, Ob(A), is a set.
Otherwise it is called large.
3.45 REMARK
Notice that when Ob(A) is a set, then Mor(A) must be a set, so that the category
A = (Ob(A), hom, id, ◦) must also be a set (cf. Exercise 3M).
3.46 EXAMPLES
Mat is small; so are all preordered sets considered as categories, and all monoids con-
sidered as categories. However, Mon, the category of all monoids and monoid homo-
morphisms between them, is not small.
18th January 2005

40
Categories, Functors, and Natural Transformations
[Chap. I
3.47 DEFINITION
The category Cat of small categories has as objects all small categories, as morphisms
from A to B all functors from A to B, as identities the identity functors, and as com-
position the usual composition of functors.
3.48 REMARKS
(1) That Cat is indeed a category follows immediately from the facts that
(a) since each small category is a set, the conglomerate of all small categories is a
class, and
(b) for each pair (A, B) of small categories, the conglomerate of all functors from
A to B is a set.
(2) Cat itself is not small. In fact, there are full embeddings from each of the constructs
Set and Mon into Cat (3.3(4)(c) and 3I).
Since (because of size restrictions) we can’t form the category of all categories, and
other naturally occurring entities that we will want to investigate later, we introduce
the concept of “quasicategories”. This is done by freeing the concept of category from
its set-theoretical restrictions:
3.49 DEFINITION
A quasicategory is a quadruple A = (O, hom, id, ◦) deﬁned in the same way as a
category except that the restrictions that O be a class and that each conglomerate
hom(A, B) be a set are removed. Namely,
(1) O is a conglomerate, the members of which are called objects,
(2) for each pair (A, B) of objects, hom(A, B) is a conglomerate called the conglomerate
of all morphisms from A to B (with f ∈hom(A, B) denoted by f : A →B),
(3) for each object A, idA : A →A is called the identity morphism on A,
(4) for each pair of morphisms (f : A →B , g : B →C) there is a composite morphism
g ◦f : A →C,
subject to the following conditions:
(a) composition is associative,
(b) identity morphisms act as identities with respect to composition,
(c) the conglomerates hom(A, B) are pairwise disjoint.
3.50 DEFINITION
The quasicategory19 CAT of all categories has as objects all categories, as morphisms
from A to B all functors from A to B, as identities the identity functors, and as com-
position the usual composition of functors.
19Frequently proper quasicategories (see 3.51(2)) will be denoted by all capital letters to distinguish
them from categories.
18th January 2005

Sec. 3]
Categories and functors
41
3.51 REMARK
(1) Clearly each category is a quasicategory.
(2) CAT is a proper quasicategory in the sense that it is not a category. [Notice that
hom(Set, Set) is not a set.]
(3) Virtually every categorical concept has a natural analogue or interpretation for qua-
sicategories. The names for such quasicategorical concepts will be the same as those
of their categorical analogues. Thus we have, for example, the notions of functor
between quasicategories, equivalence of quasicategories, discrete and thin quasicat-
egories, etc. Because the main object of our study is categories, most notions will
only be speciﬁcally formulated for categories. However, we will freely make use of
implied quasicategorical analogues, especially when it allows clearer or more conve-
nient expression. For example, at this point it is clear that an isomorphism between
categories (3.24) is precisely the same as an isomorphism in CAT (3.8). Not every
categorical concept has a reasonable quasicategorical interpretation. An outstand-
ing example of this is the fact that quasicategories in general lack hom-functors into
Set.
(4) Dealing with quasicategories and forming CAT gives us the possibility of applying
category theory to itself. There are advantages to doing this (some of which are
indicated above) as well as certain dangers. One danger is the tendency to want
to form something like the “quasicategory of all quasicategories”. However, to do
so causes a Russell-like paradox that cannot be salvaged within our foundational
system, as outlined in §2. Because our main interest is in categories, as opposed to
quasicategories, we will never need to consider such an entity as the “quasicategory
of all quasicategories”.
OBJECT-FREE DEFINITION OF CATEGORIES
Because of the bijection between the class of objects and the class of identity morphisms
in any category (given by A 7→idA) and the fact that identities in a category can be
characterized by their behavior with respect to composition, it is possible to obtain an
“object-free” deﬁnition of category. This deﬁnition, given below, is formally simpler
than the original one and is “essentially” equivalent to it (3.55). The reason for choosing
the deﬁnition given in 3.1 is that it is more closely associated with standard examples
of categories.
3.52 DEFINITION
(1) A partial binary algebra is a pair (X, ∗) consisting of a class X and a partial
binary operation ∗on X; i.e., a binary operation deﬁned on a subclass of X × X.
[The value of ∗(x, y) is denoted by x ∗y.]
(2) If (X, ∗) is a partial binary algebra, then an element u of X is called a unit of (X, ∗)
provided that x ∗u = x whenever x ∗u is deﬁned, and u ∗y = y whenever u ∗y is
deﬁned.
18th January 2005

42
Categories, Functors, and Natural Transformations
[Chap. I
3.53 DEFINITION
An object-free category is a partial binary algebra C = (M, ◦), where the members
of M are called morphisms, that satisﬁes the following conditions:
(1) Matching Condition: For morphisms f, g, and h, the following conditions are equiv-
alent:
(a) g ◦f and h ◦g are deﬁned,
(b) h ◦(g ◦f) is deﬁned, and
(c) (h ◦g) ◦f is deﬁned.
(2) Associativity Condition: If morphisms f, g, and h satisfy the matching conditions,
then h ◦(g ◦f) = (h ◦g) ◦f.
(3) Unit Existence Condition: For every morphism f there exist units uC and uD of
(M, ◦) such that uC ◦f and f ◦uD are deﬁned.
(4) Smallness Condition: For any pair of units (u1, u2) of (M, ◦) the class hom(u1, u2) =
{f ∈M | f ◦u1 and u2 ◦f are deﬁned} is a set.
3.54 PROPOSITION
If A is a category, then
(1) (Mor(A), ◦) is an object-free category, and
(2) an A-morphism is an A-identity if and only if it is a unit of (Mor(A), ◦).
Proof: (Mor(A), ◦) is clearly a partial binary algebra, where f ◦g is deﬁned if and only
if the domain of f is the codomain of g. Thus each A-identity is a unit. If A
u
−→B is a
unit in (Mor(A), ◦), then u = u ◦idA = idA, where the ﬁrst equality holds since idA is
a A-identity and the second one holds since u is a unit. Thus (2) is established. From
this, (1) is immediate.

3.55 REMARK
We now have two versions of the concept of category, the “standard” one (3.1), which
is more intuitive and is more easily associated with familiar examples, and the “object-
free” one (3.53), which is more succinctly stated and so, in many cases, more convenient
to use. Next we will see that these two concepts are equivalent. Proposition 3.54 shows
that with every category we can associate an object-free category. Even though this
correspondence is neither injective nor surjective, it provides an equivalence between
the “standard” and the “object-free” deﬁnitions of category. This claim can be made
precise as follows:
(1) One can deﬁne functors between object-free categories to be functions between their
classes of morphisms that preserve both units (= identities) and composition.
(2) Parallel to the deﬁnition of the quasicategory CAT of all categories one can deﬁne
the quasicategory CATof of all object-free categories and functors between them.
18th January 2005

Sec. 3]
Categories and functors
43
(3) The correspondence from Proposition 3.54 is the object part of a functor between
the quasicategories CAT and CATof that can be shown to be an equivalence in the
sense of Deﬁnition 3.33.
In this sense the two concepts of category are essentially the same; i.e., essentially the
same “category theory” will result if one proceeds from either of the two formulations.
EXERCISES
3A. Graphs of Categories
A graph is a quadruple (V, E, d, c) consisting of a set V (of vertices), a set E (of
(directed) edges), and functions d, c : E →V (giving the domain and codomain of an
edge). A large graph is the same concept except that V and E are allowed to be
classes. The graph G(A) of a category A is the obvious large graph with V = Ob(A)
and E = Mor(A).
(a) Verify that a thin category is determined up to isomorphism by its graph.
(b) Find two non-isomorphic categories with the same graph.
(c) Determine which of the following graphs are of the form G(A) for some category A
(where vertices and identity edges are indicated by dots, and non-identity edges are
indicated by arrows).
•
•
•
-

-
(1)
•
•
•
-


(2)
•
•
•

-
@
@
R
  	
(3)
•
•


-
(4)
(d) Show that for each of the following graphs G there exists up to isomorphism precisely
one category A with G(A) = G.
•
•

-
 


(1)
•
•


-




6
(2)
(e) The free category generated by a graph (V, E, d, c) is the category A with Ob(A) =
V , Mor(A) = all paths (= all ﬁnite sequences in E in which the domain of each
edge is the codomain of the preceding one), composition is the obvious composition
of paths, and identity morphisms are the empty paths. Verify that A is indeed a
category.
18th January 2005

44
Categories, Functors, and Natural Transformations
[Chap. I
3B. Pointed Categories
(a) Show that there is a category whose objects are all pairs of the form (A, a), where
A is a set and a ∈A and
hom((A, a), (B, b)) = { f | f : A →B and f(a) = b }.
This is called the category of pointed sets (and base-point-preserving functions).
It is denoted by pSet.
(b) Show that there is a faithful functor U : pSet →Set with the property that U(f) =
f for each base-point-preserving function, f. Does U reﬂect isomorphisms?
(c) Prove that Set and pSet are not equivalent.
(d) Mimic the above construction of the category of pointed sets to obtain the categories
pTop of pointed topological spaces and pGrp of pointed groups. Determine
whether or not Top and pTop (resp. Grp and pGrp) are equivalent or isomorphic.
3C. Alternative Deﬁnition of Category
Deﬁne a category of type 2 to be a quintuple A = (O, M, dom, cod, ◦) consisting of
(1) a class O, of A-objects,
(2) a class M, of A-morphisms,
(3) functions dom : M →O and cod : M →O, assigning to each morphism its domain
and codomain, and
(4) a function ◦from D = {(f, g) | f, g ∈M and dom(f) = cod(g)} to M [with ◦(f, g)
written f ◦g],
subject to the following conditions:
(a) If (f, g) ∈D, then dom(f ◦g) = dom(g) and cod(f ◦g) = cod(f).
(b) If (f, g) and (h, f) belong to D, then h ◦(f ◦g) = (h ◦f) ◦g.
(c) For each A ∈O there exists a morphism e such that dom(e) = A = cod(e) and
(1) f ◦e = f whenever (f, e) ∈D, and
(2) e ◦g = g whenever (e, g) ∈D.
(d) For any (A, B) ∈O × O, the class
{f | f ∈M, dom(f) = A,
and cod(f) = B}
is a set.
Compare the deﬁnition of category of type 2 with that of category (3.1) and object-
free category (3.53) and determine in which sense these deﬁnitions can be considered
“equivalent”.
If functors between categories of type 2 are deﬁned to be functions between their mor-
phism classes that preserve identities and composition, show that the quasicategory
CAT2 of categories of type 2 and functors between them is equivalent to CAT and to
CATof.
18th January 2005

Sec. 3]
Categories and functors
45
3D. Identities
(a) Show that whenever A = (O, hom, id, ◦) and A∗= (O, hom, id∗, ◦) are categories,
then A = A∗.
(b) A functor F is said to reﬂect identities provided that if F(k) is an identity then
k must be an identity. Show that every isomorphism between categories reﬂects
identities, but that not every equivalence does.
3E. Duality
(a) Show that none of the following categories is dually equivalent to itself: Set, Vec
(but compare 3.39(2)), Grp, Top, Rel, Pos.
(b) Determine whether or not the category of ﬁnite sets is dually equivalent to itself.
(c) Establish the following consequence of the duality principle:
If S is a categorical statement, then S holds for all categories satisfying
property P if and only if Sop holds for all categories satisfying Pop.
3F. Isomorphisms
(a) Describe the isomorphisms in each of the categories Met, Metu, and Metc.
(b) Show that a monoid is a group if and only if, considered as a category, each of its
morphisms is an isomorphism.
3G. Functors
(a) Consider the category A with exactly one object A, with hom(A, A) = {a, b}, and
with composition deﬁned by a ◦a = a and a ◦b = b ◦a = b ◦b = b. Consider further
the category B with exactly one object B, with hom(B, B) = {b}, and with b◦b = b.
Let F be deﬁned by F(B) = A, F(b) = b. Is F : B →A a functor?
(b) Show that a category A is thin (resp. empty) if and only if every functor with domain
A is faithful (resp. full).
3H. Equivalences
(a) Show that none of the following categories is equivalent to any of the others: Set,
Vec, Grp, Top, Rel, Pos.
(b) Show that two posets (resp. monoids), considered as categories, are equivalent if and
only if they are isomorphic.
(c) Show that, considered as categories, every preordered set is equivalent to a poset,
and that a preordered set is isomorphic to a poset if and only if it is a poset itself.
(d) Show that an equivalence is an embedding if and only if it reﬂects identities.
(e) Prove that categories A and B are isomorphic if and only if there exists an equiva-
lence E : A →B such that for each A-object A the number of isomorphic copies of
A in A coincides with the number of isomorphic copies of E(A) in B.
18th January 2005

46
Categories, Functors, and Natural Transformations
[Chap. I
3I.
Show that there is a full embedding from the category Mon of monoids into Cat.
3J.
Show that there is a covariant power-set functor R : Set →Set that is diﬀerent from
the one given in Example 3.20(8): such that on objects A, RA is the power set of A,
and on functions A
f
−→B, (Rf)(X) = { b ∈B | f−1(b) ⊆X }.
3K. Comma Categories
If A
F
−−→C and B
G
−−→C are functors, then the comma category (F ↓G) is the
category whose objects are triples (A, f, B) with A ∈Ob(A), B ∈Ob(B), and
FA
f
−→GB ∈Mor(C); whose morphisms from (A, f, B) to (A′, f′, B′) are pairs (a, b)
with A
a
−→A′ ∈Mor(A), and B
b−→B′ ∈Mor(B) such that the square
FA
Fa /
f

FA′
f′

GB
Gb
/ GB′
commutes; whose identities are id(A,f,B) = (idA, idB); and whose composition is deﬁned
componentwise, i.e., by (a, b) ◦(a, b) = (a ◦a, b ◦b).
(a) Verify that (F ↓G) is indeed a category.
(b) For any category A and any A-object K, denote by CK : 1 →A the constant
functor with value K. Give explicit descriptions of
• the comma category (idA ↓CK), also denoted by (A ↓K) and called the
category of objects over K,
• the comma category (CK ↓idA), also denoted by (K ↓A) and called the
category of objects under K,
• the comma category (idA ↓idA), also denoted by A2 and called the arrow
category of A.
(c) Show that (A ↓K)op = (K ↓Aop).
(d) Show that if P is a singleton set, then (P ↓Set) is isomorphic with pSet (cf.
Exercise 3B).
3L. Quasicategories as Objects
Show that one may not form the “quasicategory of all quasicategories”. [Hint: Russell’s
paradox].
3M. Small Categories
Let A be a category whose object-class is a set. Show that (a) – (d) below are true.
[Hint: see 2.1.]
18th January 2005

Sec. 3]
Categories and functors
47
(a) Mor(A) = S{hom(A, B) | (A, B) ∈Ob(A) × Ob(A)} is a set.
(b) hom : Ob(A) × Ob(A) →P(Mor(A)) is a set.
(c) ◦⊆Mor(A) × Mor(A) × Mor(A) is a set.
(d) A is a set.
3N. Decompositions of Functors
Let A
F
−−→B be a functor. Show that
(a) There exist functors A
G
−−→C and C
H
−−→B with the following properties:
(1) F = H ◦G,
(2) G is full and bijective on objects,
(3) H is faithful,
(4) whenever A
F
−−→B = A
G
−−→C
H
−−→B and H is faithful, then there exists a
unique functor C
K
−−→C, such that the diagram
A
G
/
G 
C
K
~~~~~~~
H

C
H
/ B
(∗)
commutes, i.e., G = K ◦G and H = H ◦K.
(b) There exist functors A
G
−−→C and C
H
−−→B with the following properties:
(1) F = H ◦G,
(2) G is bijective on objects,
(3) H is full and faithful,
(4) whenever A
F
−−→B = A
G
−−→C
H
−−→B and H is full and faithful, then there
exists a unique functor C
K
−−→C such that the diagram (∗) above commutes.
18th January 2005

4 Subcategories
In §3 we have seen several instances where one category is included in another (Ab
in Grp, HComp in Top, etc.). In this section we investigate this phenomenon more
thoroughly.
4.1 DEFINITION
(1) A category A is said to be a subcategory of a category B provided that the
following conditions are satisﬁed:
(a) Ob(A) ⊆Ob(B),
(b) for each A, A′ ∈Ob(A), homA(A, A′) ⊆homB(A, A′),
(c) for each A-object A, the B-identity on A is the A-identity on A,
(d) the composition law in A is the restriction of the composition law in B to the
morphisms of A.
(2) A is called a full subcategory of B if, in addition to the above, for each
A, A′ ∈Ob(A), homA(A, A′) = homB(A, A′).
4.2 REMARKS
(1) Because of the nature of full subcategories, a full subcategory of a category B can
be speciﬁed by merely specifying its object class within B.
(2) Notice that conditions (a), (b), and (d) of part (1) of the deﬁnition do not imply
(c). (See Exercise 4A.)
(3) If F : A →B is a full functor or is injective on objects, then the image of A under
F is a subcategory of B. However, for arbitrary functors F : A →B, the image of
A under F need not be a subcategory of B. Consider, e.g., a functor from •
/ •
•
/ •
to
•
/
 @@@ •
•
.
4.3 EXAMPLES
(1) For any category A, the empty category and A itself are full subcategories of A.
(2) The class of all Hausdorﬀspaces speciﬁes the full subcategory Haus of Top; likewise,
all Tychonoﬀspaces (i.e., completely regular T1 spaces) yields a full subcategory
Tych of Haus; and HComp is a full subcategory of Tych.
(3) The class of all preordered sets (i.e., all sets supplied with a reﬂexive and transitive
relation) determines a full subcategory Prost of Rel.
The class of all partially
ordered sets (i.e., all sets supplied with a reﬂexive, transitive and antisymmetric
relation) determines a full subcategory Pos of Prost. The category Lat that consists
of all lattices (i.e., all partially ordered sets for which each pair of elements has a
48

Sec. 4]
Subcategories
49
meet and a join) together with all lattice homomorphisms (i.e., all maps preserving
meets and joins of pairs) is a nonfull subcategory of Pos. The category JCPos of
complete lattices and join-preserving maps is a nonfull subcategory of Pos. The
category CLat of complete lattices and meet- and join-preserving maps is a nonfull
subcategory of JCPos that has the same objects as JCPos.
(4) The category Grp of groups is a full subcategory of the construct Mon that con-
sists of all monoids (i.e., semigroups with unit) and monoid homomorphisms (i.e.,
unit-preserving semigroup homomorphisms). Mon is a nonfull subcategory of the
construct Sgr of all semigroups and semigroup homomorphisms.
(5) Ban is a nonfull subcategory of Banb that has the same class of objects.
(6) The subcategories of a monoid M, considered as a category, are precisely the empty
category and the submonoids of M.
4.4 REMARK
For every subcategory A of a category B there is a naturally associated inclusion
functor E : A ,→B. Moreover, each such inclusion is
(1) an embedding;
(2) a full functor if and only if A is a full subcategory of B.
As the next proposition shows, inclusions of subcategories are (up to isomorphism)
precisely the embedding functors and (up to equivalence) precisely the faithful functors.
A full embedding
4.5 PROPOSITION
(1) A functor F : A →B is a (full) embedding if and only if there exists a (full)
subcategory C of B with inclusion functor E : C →B and an isomorphism
G : A →C with F = E ◦G.
(2) A functor F : A →B is faithful if and only if there exist embeddings E1 : D →B
and E2 : A →C and an equivalence G : C →D such that the diagram
A
F
/
E2

B
C
G
/ D
E1
O
18th January 2005

50
Categories, Functors, and Natural Transformations
[Chap. I
commutes.
Proof:
(1). One direction is immediate and the other is a consequence of the fact that (full)
embeddings are closed under composition.
(2). One direction follows from the compositive nature of faithful functors. To show,
conversely, that every faithful functor can be decomposed as stated, let E1 : D →B
be the inclusion of the full subcategory D of B that has as objects all images (under
F) of A-objects. Let C be the category with Ob(C) = Ob(A), with
homC(A, A′) = homB(FA, FA′),
and with identities and composition deﬁned as in B.
C is easily seen to be a
category. Now deﬁne functors E2 : A →C and G : C →D by
E2(A
f
−→A′) = A
Ff
−−→A′
and
G(C
g
−→C′) = FC
g
−→FC′.
Then E2 is an embedding, G is an equivalence, and F = E1 ◦G ◦E2.

4.6 DEFINITION
A category A is said to be fully embeddable into B provided that there exists a full
embedding A →B, or, equivalently, provided that A is isomorphic to a full subcategory
of B.
4.7 EXAMPLES
Although it is far from easy to prove (see the monograph Pultr-Trnkov´a in the Refer-
ences), each category of the form Alg(Ω) is fully embeddable into each of the following
constructs:
(a) Sgr,
(b) Rel,
(c) Alg(1, 1), i.e., the construct of unary algebras on two operations.
Under an additional set-theoretical hypothesis (the non-existence of measurable cardi-
nals), every construct is fully embeddable into Sgr (or Rel or Alg(1, 1)).
4.8 REMARK
Because full subcategories are determined by their object classes, they are often regarded
as “properties of objects”. Since most of the interesting properties P satisfy the condition
that whenever an object A has property P then every object isomorphic to A also has
P, we often require that full subcategories have the property (deﬁned below) of being
isomorphism-closed.
4.9 DEFINITION
A full subcategory A of a category B is called
18th January 2005

Sec. 4]
Subcategories
51
(1) isomorphism-closed provided that every B-object that is isomorphic to some
A-object is itself an A-object,
(2) isomorphism-dense provided that every B-object is isomorphic to some A-object.
4.10 REMARK
If A is a full subcategory of B, then the following conditions are equivalent:
(1) A is an isomorphism-dense subcategory of B,
(2) the inclusion functor A ,→B is isomorphism-dense,
(3) the inclusion functor A ,→B is an equivalence.
4.11 EXAMPLE
The full subcategory of Set with the single object N (of natural numbers) is neither
isomorphism-closed nor isomorphism-dense in Set. It is equivalent to the isomorphism-
closed full subcategory of Set consisting of all countable inﬁnite sets.
There are instances when one wishes to consider full subcategories in which diﬀerent
objects cannot be isomorphic:
4.12 DEFINITION
A skeleton of a category is a full, isomorphism-dense subcategory in which no two
distinct objects are isomorphic.
4.13 EXAMPLES
(1) The full subcategory of all cardinal numbers is a skeleton for Set.
(2) The full subcategory determined by the powers Rm, where m runs through all
cardinal numbers, is a skeleton for Vec.
4.14 PROPOSITION
(1) Every category has a skeleton.
(2) Any two skeletons of a category are isomorphic.
(3) Any skeleton of a category C is equivalent to C.
Proof:
(1). This follows from the Axiom of Choice [2.3(4)] applied to the equivalence relation
“is isomorphic to” on the class of objects of the category.
(2). Let A and B be skeletons of C. Then each A-object A is isomorphic in C to a
unique B-object. Denote the latter by F(A) and choose for each A-object A a
C-isomorphism fA : A →F(A). Then the functor F : A →B deﬁned by:
F(A
h
−→A′) = FA
f−1
A
−−−→A
h
−→A′
fA′
−−−→FA′
is an isomorphism.
18th January 2005

52
Categories, Functors, and Natural Transformations
[Chap. I
(3). The inclusion of a skeleton of C into C is an equivalence. (See 4.10(2).)

4.15 COROLLARY
Two categories are equivalent if and only if they have isomorphic skeletons.

REFLECTIVE AND COREFLECTIVE SUBCATEGORIES
4.16 DEFINITION
Let A be a subcategory of B, and let B be a B-object.
(1) An A-reﬂection (or A-reﬂection arrow) for B is a B-morphism B
r
−→A from B
to an A-object A with the following universal property:
for any B-morphism B
f
−→A′ from B into some A-object A′, there exists a unique
A-morphism f′ : A →A′ such that the triangle
B
r
/
f
 A
A
A
A
A
A
A
A
f′

A′
commutes.
By an “abuse of language” an object A is called an A-reﬂection for B provided that
there exists an A-reﬂection B
r
−→A for B with codomain A.
(2) A is called a reﬂective subcategory of B provided that each B-object has an
A-reﬂection.
4.17 EXAMPLES
Several familiar constructions in mathematics such as certain “completions”, certain
formations of “quotients”, and certain “modiﬁcations” of structures can be regarded in
a natural way as reﬂections. Here we list a few such examples of reﬂective subcategories
A of categories B. In every example except the last two, A is a full subcategory of B.
A. Modiﬁcations of the Structure
(1) Making a relation symmetric: B = Rel, A = Sym, the full subcategory of sym-
metric relations. (X, ρ)
idX
−−−→(X, ρ ∪ρ−1) is an A-reﬂection20 for (X, ρ).
(2) Making a topological space completely regular: B = Top, A = the full subcategory
of completely regular (not necessarily T1) spaces. If (X, τ) is a topological space,
then the collection of all cozero sets21 in (X, τ) is a base for a topology τc on X.
(X, τ)
idX
−−−→(X, τc) is an A-reﬂection for (X, τ).
20ρ−1 = {(y, x) | (x, y) ∈ρ}.
21A is called a cozero set in (X, τ) provided that there is a continuous map f : (X, τ) →R with
A = X −f −1[{0}].
18th January 2005

Sec. 4]
Subcategories
53
B. Improving Objects by Forming Quotients
(3) Making a preordered set partially ordered: B = Prost (preordered sets and order-
preserving maps), A = Pos. If (X, ≤) is a preordered set, deﬁne an equivalence
relation ≈on X by: x ≈y ⇔(x ≤y
and
y ≤x). Let p : X →X/ ≈be the
canonical map. Then (X, ≤)
p
−→(X/ ≈, (p × p)[≤]) is an A-reﬂection for (X, ≤).
(4) Making a group abelian: B = Grp, A = Ab. Let G be a group and let G′ be the
commutator subgroup of G. Then the canonical map G →G/G′ is an A-reﬂection
for G.
(5) Making a topological space T0: B = Top, A = Top0, the full subcategory con-
sisting of all T0 spaces. Let X be a topological space, and let ≈be the equivalence
relation on X, given by: x ≈y
⇔
the closure of {x} = the closure of {y}. Then
the canonical map X →X/ ≈is an A-reﬂection for X.
(6) Making an abelian group torsion-free: B = Ab, A = TfAb, the full subcategory
of torsion-free abelian groups. Let G be an abelian group and let TG be the torsion
subgroup of G. Then the canonical map G →G/TG is an A-reﬂection for G.
(7) Making a reachable acceptor minimal: B = the full subcategory of Σ-Seq consist-
ing of all reachable acceptors (i.e., those for which each state can be reached
from the initial one by an input word), A = the full subcategory of B consisting of
all minimal acceptors (i.e., those reachable acceptors with the property that no
two diﬀerent states are observably equivalent. The observability equivalence ≈
on a reachable acceptor B is given by: q ≈q′ provided that whenever the initial
state of B is changed to q, the resulting acceptor recognizes the same language as it
does when the initial state is changed to q′). Then the canonical map B →B/ ≈,
where B/ ≈is the induced acceptor on the set of all ≈-equivalence classes of states
of B, is an A-reﬂection for B.
C. Completions
(8) B = Metu(metric spaces and uniformly continuous maps) or Met(metric spaces
and non-expansive maps), A = the full subcategory of complete metric spaces. In
either case the metric completion (X, d) ,→(X∗, d∗) is an A-reﬂection for (X, d).
(9) B = Tych, A = HComp. If X is a Tychonoﬀspace, then the ˇCech-Stone com-
pactiﬁcation X ,→βX is an A-reﬂection for X.
(10) B = JPos (posets and join-preserving maps), A = JCPos. Let (B, ≤) be a poset,
and let B∗be the collection of all subsets S of B that satisfy
(a) S is an lower-set, i.e., b ∈S and b′ ≤b ⇒b′ ∈S,
(b) S is closed under the formation of all existing joins, i.e., if A ⊆S and b is the
join of A in (B, ≤), then b ∈S.
Then (B∗, ⊆) is a complete lattice, and the function
(B, ≤) →(B∗, ⊆),
deﬁned by
b 7→{x ∈B | x ≤b}
18th January 2005

54
Categories, Functors, and Natural Transformations
[Chap. I
is an A-reﬂection for (B, ≤). Note that these A-reﬂections diﬀer, in general, from
the Mac Neille completions. For example, an A-reﬂection for a 3-element discrete
poset is an 8-element complete lattice, whereas the Mac Neille completion is a
5-element one.
(11) B = Pos, A = the nonfull (!) subcategory JCPos. Let (B, ≤) be a poset and let
˜B be the collection of all lower-sets S of B [cf. (10)(a)]. Then ( ˜B, ⊆) is a complete
lattice and the function (B, ≤) →( ˜B, ⊆) deﬁned as in (10) is an A-reﬂection.
(12) B = Sgr, A = the nonfull (!) subcategory Mon. If (X, •) is a semigroup, then
the extension (X, •) ,→(X ∪{e}, ˆ•, e), obtained by adding a unit element e ̸∈X
of the operation ˆ•, is an A-reﬂection for (X, •).
4.18 REMARK
Observe that in the last two examples given above, the reﬂection arrows are never
surjective.
This fact may seem surprising since in each of the other examples each
A-reﬂection arrow for an A-object is an isomorphism. It is not surprising, however, in
view of Proposition 4.20.
4.19 PROPOSITION
Reﬂections are essentially unique, i.e.,
(1) if B
r
−→A and B
ˆr
−→ˆA are A-reﬂections for B, then there exists an A-isomorphism
k : A →ˆA such that the triangle
B
r
/
ˆr
?
?
?
?
?
?
?
?
A
k

ˆA
commutes,
(2) if B
r
−→A is an A-reﬂection for B and A
k
−→
ˆA is an A-isomorphism, then
B
k◦r
−−−→ˆA is an A-reﬂection for B.
Proof:
(1). The existence of a morphism k with ˆr = k◦r follows from the deﬁnition of reﬂection
and the fact that ˆA is an A-object. Similarly there is a morphism ˆk with r = ˆk ◦ˆr.
Now (ˆk ◦k)◦r = r = idA ◦r, so that by the uniqueness requirement in the deﬁnition
of reﬂection, ˆk ◦k = idA. Analogously, one can see that k ◦ˆk = id ˆ
A, so that k is an
isomorphism.
(2). Obvious.

4.20 PROPOSITION
If A is a reﬂective subcategory of B, then the following conditions are equivalent:
(1) A is a full subcategory of B,
18th January 2005

Sec. 4]
Subcategories
55
(2) for each A-object A, A
idA
−−−→A is an A-reﬂection,
(3) for each A-object A, A-reﬂection arrows A
rA
−−→A∗are A-isomorphisms,
(4) for each A-object A, A-reﬂection arrows A
rA
−−→A∗are A-morphisms.
Proof: That (1) ⇒(2) ⇒(3) ⇒(4) is clear. To see that (4) ⇒(1), let A
f
−→A′ be a
B-morphism between A-objects. By the deﬁnition of reﬂection there is an A-morphism
A∗
f
−→A′ with f = f ◦rA. Thus f is the composite of A-morphisms, and so must be
an A-morphism.

4.21 REMARK
There exist nonfull reﬂective subcategories A of B such that every A-reﬂection arrow is
a B-isomorphism; e.g., let A = • →• and B = • ⇄•.
4.22 PROPOSITION
Let A be a reﬂective subcategory of B, and for each B-object B let rB : B →AB be
an A-reﬂection arrow. Then there exists a unique functor R : B →A such that the
following conditions are satisﬁed:
(1) R(B) = AB for each B-object B,
(2) for each B-morphism f : B →B′, the diagram
B
rB /
f

R(B)
R(f)

B′
rB′ / R(B′)
commutes.
Proof: There exists a unique function R on objects satisfying (1) and (by the deﬁnition
of A-reﬂection arrows) a unique function R on morphisms satisfying (2). It remains to
be shown that R is a functor, i.e., that R preserves identities and composition. The ﬁrst
fact follows from the commutativity of the diagram
B
rB /
idB

RB
idRB

B
rB / RB
and the second one from the commutativity of the diagram
B
rB
/
g ◦f

RB
Rg ◦Rf

B′′
rB′′ / RB′′
obtained by pasting together the corresponding diagrams for B
f
−→B′ and B′
g
−→B′′.
18th January 2005

56
Categories, Functors, and Natural Transformations
[Chap. I
4.23 DEFINITION
A functor R : B →A constructed according to the above proposition is called a reﬂec-
tor for A.
4.24 REMARK
If A is a reﬂective subcategory of B, then a reﬂector for A depends upon the choice
of the reﬂection arrows. Hence, there are usually many diﬀerent reﬂectors for A. In
Proposition 6.7 we will see that any two such reﬂectors are essentially the same; i.e.,
they will turn out to be “naturally isomorphic”.
The dual of the concept reﬂective subcategory is coreﬂective subcategory. That is, A
is a coreﬂective subcategory of B if and only if Aop is a reﬂective subcategory of Bop.
Although each of the above statements is an adequate deﬁnition, to aid the reader
we provide a detailed dual formulation that doesn’t involve the dual categories. We
occasionally provide such explicit dual formulations although, strictly speaking, to do so
is redundant.
4.25 DEFINITION
Let A be a subcategory of B and let B be a B-object.
(1) An A-coreﬂection (or A-coreﬂection arrow) for B is a B-morphism A
c−→B
from an A-object A to B with the following universal property:
for any B-morphism A′
f
−→B from some A-object A′ to B there exists a unique
A-morphism f′ : A′ →A such that the triangle
A′
f′

f
 A
A
A
A
A
A
A
A
c
/ B
commutes.
By an “abuse of language” an object A is called an A-coreﬂection for B provided
that there exists an A-coreﬂection A
c−→B for B with domain A.
(2) A is called a coreﬂective subcategory of B provided that each B-object has an
A-coreﬂection.
4.26 EXAMPLES
Several mathematical constructions such as certain “modiﬁcations” of structures and
certain “selections” of convenient subobjects can be regarded in a natural way as core-
ﬂections. Here we list a few examples of full coreﬂective subcategories A of categories
B.
A. Modiﬁcations of the Structure
18th January 2005

Sec. 4]
Subcategories
57
(1) Making a relation symmetric: B = Rel, A = Sym. (X, ρ ∩ρ−1)
idX
−−−→(X, ρ) is
an A-coreﬂection for (X, ρ).
This example shows one of the rare instances where a subcategory is simultaneously
reﬂective and coreﬂective [cf. 4.17(1)].
(2) Making a topological space sequential: B=Top, A= the full subcategory of sequen-
tial spaces (i.e., spaces in which every sequentially closed set is closed). If (X, τ)
is a topological space, then τ ′ = {A ⊆X | X \ A is sequentially closed in (X, τ)}
is a topology on X and (X, τ ′)
idX
−−−→(X, τ) is an A-coreﬂection for (X, τ).
B. Sorting Out Convenient Subobjects
(3) Making an abelian group a torsion group: B = Ab, A = the full subcategory of
abelian torsion groups. For any abelian group G the canonical embedding TG ,→G
of the torsion-subgroup TG of G into G is an A-coreﬂection for G.
(4) Making a sequential acceptor reachable: B = Σ-Seq, A = the full subcategory of
reachable acceptors. For any acceptor A the canonical embedding RA ,→A of the
acceptor RA, formed by removing from the state set of A all states that cannot be
reached from the initial state, is an A-coreﬂection for A. Thus a minimalization
of sequential acceptors is obtained in two steps: ﬁrst the coreﬂection, which yields
a reachable acceptor, and then the reﬂection, which gives the minimal quotient of
the reachable part [cf. 4.17(7)].
4.27 PROPOSITION
If A is a coreﬂective subcategory of B and for each B-object B, AB
cB
−−→B is an A-
coreﬂection arrow, then there exists a unique functor C : B →A (called a coreﬂector
for A) such that the following conditions are satisﬁed:
(1) C(B) = AB for each B-object B,
(2) for each B-morphism f : B →B′ the diagram
C(B)
cB
/
C(f)

B
f

C(B′) cB′
/ B′
commutes.
D 22
Suggestions for Further Reading
Herrlich, H. Topologische Reﬂexionen und Coreﬂexionen. Lecture Notes in Mathemat-
ics, Vol. 78, Springer, Berlin–Heidelberg–New York, 1968.
22See Remark 3.7.
18th January 2005

58
Categories, Functors, and Natural Transformations
[Chap. I
Banaschewski, B., and E. Nelson. Completions of partially ordered sets.
SIAM J.
Comp. 11 (1982): 521–528.
Kelly, G. M. On the ordered set of reﬂective subcategories. Bull. Austral. Math. Soc.
36 (1987): 137–152.
Tholen, W. Reﬂective subcategories. Topol. Appl. 27 (1987): 201–212.
EXERCISES
4A. Subcategories and Identities
Consider the categories A and B described in Exercise 3G(a). If A = B, then is B a
subcategory of A?
4B. Isomorphism-Closed Subcategories
A (not necessarily full) subcategory A of a category B is called isomorphism-closed
provided that every B-isomorphism with domain in A belongs23 to A. Show that every
subcategory A of B can be embedded into a smallest isomorphism-closed subcategory
A′ of B that contains A. The inclusion functor A ,→A′ is an equivalence iﬀall B-
isomorphisms between A-objects belong to A.
4C. Full Subcategories
(a) Show that a category is discrete if and only if each of its subcategories is full.
(b) Show that in a poset, considered as a category,
• every subcategory is isomorphism-closed,
• every (co)reﬂective subcategory is full.
4D. Reﬂective Subcategories of Special Categories
* (a) Show that Set has
• precisely three full, isomorphism-closed, reﬂective subcategories,
• precisely two full, isomorphism-closed, coreﬂective subcategories,
• inﬁnitely many reﬂective subcategories,
• inﬁnitely many coreﬂective subcategories.
* (b) Show that HComp has precisely two full, isomorphism-closed, coreﬂective subcat-
egories.
(c) Show that a full subcategory A of a poset B, considered as category, is reﬂective
in B if and only if for each element b of B the set {a ∈A | b ≤a} has a smallest
element.
23Observe that if a morphism belongs to A, so does its domain and its codomain.
18th January 2005

Sec. 4]
Subcategories
59
(d) Consider the poset of natural numbers as a category, B. Verify that a subset A of
B, considered as full subcategory of B, is
• reﬂective in B if and only if A is inﬁnite,
• coreﬂective in B if and only if 0 ∈A.
(e) Show that no ﬁnite monoid, considered as a category, has a proper reﬂective sub-
category. However, if A is the monoid of all maps from N into N, considered as
a category, then the subcategory of A, consisting of all maps f : N →N with
f(0) = 0, is reﬂective in A.
(f) Show that the (nonfull) subcategory A of Pos, consisting of those posets for which
every nonempty subset has a meet, and those morphisms that preserve meets of
nonempty subsets, is reﬂective in Pos. For a poset A, A
id
−−→A is an A-reﬂection if
and only if A is well-ordered.
(g) Verify that the category •
// • has no proper reﬂective subcategory.
4E. Subcategories That Are Simultaneously Reﬂective and Coreﬂective
(a) Show that in Rel the full subcategory of symmetric relations is both reﬂective and
coreﬂective. What about the full subcategory of reﬂexive relations, . . ., or of transi-
tive relations?
(b) Verify that in Alg(1), the category of unary algebras on one operation, all idempo-
tent algebras form a full subcategory that is both reﬂective and coreﬂective.
(c) Show that the poset of natural numbers, considered as a category, has inﬁnitely many
isomorphism-closed subcategories that are simultaneously reﬂective and coreﬂective.
[Cf. 4D(c).]
*(d) Show that neither Set nor Top has a proper isomorphism-closed full subcategory
that is both reﬂective and coreﬂective.
What about nonfull isomorphism-closed
subcategories of Set?
4F. Intersections of Reﬂective Subcategories
(a) Show that in the poset of natural numbers, considered as a category B, the fol-
lowing hold:
• the intersection of any nonempty family of coreﬂective subcategories of B is
coreﬂective in B,
• every full subcategory of B is an intersection of two reﬂective full subcate-
gories of B.
* (b) Let BiTop be the construct of bitopological spaces (i.e., triples (X, τ1, τ2), where τ1
and τ2 are topologies on X) and bicontinuous maps (i.e., maps that are separately
continuous with respect to the ﬁrst topologies and with respect to the second
topologies). Verify that the full subcategory B1 that consists of all bitopological
spaces with τ1 compact Hausdorﬀis reﬂective in BiTop. By symmetry the full
18th January 2005

60
Categories, Functors, and Natural Transformations
[Chap. I
subcategory B2 that consists of all bitopological spaces with τ2 compact Hausdorﬀ
is also reﬂective in BiTop.
Show, however, that BiComp = B1 ∩B2 is not
reﬂective in BiTop. [Hint: A space (X, τ1, τ2), where X is inﬁnite and τ1 and τ2
are discrete, has no reﬂection arrow.]
* (c) Let PsTop be the construct of pseudotopological spaces (i.e., pairs (X, α), where
X is a set and α is a function that assigns to each ultraﬁlter on X a subset of
X, in such a way that for each point x ∈X, x ∈α(
·x) [where
·x is the ultraﬁlter
of all supersets of {x}]) and continuous maps (i.e., functions (X, α)
f
−→(Y, β)
having the property that for each x ∈α(F) it follows that f(x) ∈β(f(F)), where
f(F) = { M ⊆Y | f−1[M] ∈F}).
Verify that the full subcategory of PsTop
consisting of all compact Hausdorﬀspaces, i.e., all spaces (X, α) with the property
that each α(F) is a singleton set, is not reﬂective even though it is an intersection
of a class of full reﬂective subcategories. [Hint: Let Bk be the subcategory that
consists of all (X, α) such that α(F) is a singleton whenever some member of F is
a set of cardinality less than k.]
4G. Subcategories of Subcategories
Let A be a subcategory of B and B be a subcategory of C. Prove that
(a) A is a subcategory of C,
(b) if A is reﬂective in B and B is reﬂective in C, then A is reﬂective in C,
(c) if A is reﬂective in C and B is a full subcategory of C, then A is reﬂective in B,
(d) if A is reﬂective in C, then A need not be reﬂective in B. [Construct an example.]
4H. Reﬂectors
(a) Let A be a reﬂective subcategory of B. Show that if A is full in B, then there exists
a reﬂector R : B →A with R ◦E ◦R = R. Does the converse hold?
(b) Let A be the full subcategory of Vec consisting of all one-element vector spaces.
Verify that A is simultaneously reﬂective and coreﬂective in Vec, and every functor
from Vec to A is simultaneously a reﬂector and a coreﬂector.
4I. Skeletons
Given two skeletons of a category A, show that there is an isomorphism A →A that
restricts to an isomorphism between the skeletons.
* 4J. Universal Categories
Does there exist a category A such that every category can be fully embedded into A?
4K. Full Embeddability
Show that
(a) Prost is fully embeddable into Top as a coreﬂective subcategory,
(b) Alg(1) is fully embeddable into Rel as a reﬂective subcategory,
(c) Σ-Seq is fully embeddable into Aut.
18th January 2005

5 Concrete categories and concrete func-
tors
As we have seen, many familiar categories such as Vec and Top are constructs (i.e.,
categories of structured sets and structure-preserving functions between them). If we
regard such constructs as purely abstract categories (as we have done so far), some
valuable information (concerning underlying sets of objects and underlying functions of
morphisms) is lost. Fortunately, category theory enables us to retain this information by
providing a means for a formal deﬁnition of construct — a construct being a pair (A, U)
consisting of a category A and a faithful functor U : A →Set. A careful analysis reveals
that, for instance, many of the interesting properties of the constructs of vector spaces
and topological spaces are not properties of the corresponding abstract categories Vec
and Top but rather of the corresponding constructs (Vec, U) and (Top, V ), where U
and V denote the obvious underlying functors. In fact, they are often properties of just
the underlying functors U and V . For example, the facts that the construct of vector
spaces is “algebraic” and the construct of topological spaces is “topological” are very
conveniently expressed by speciﬁc properties of the underlying functors, rather than by
properties of the abstract categories Vec and Top (see Chapter VI).
If, instead of vector spaces or topological spaces, we want to investigate objects with more
complex structures, e.g., topological vector spaces, we may supply the corresponding
abstract category TopVec with forgetful functors not only into Set (forgetting both
the topology and the linear structure), but also into Top (just forgetting the linear
structure) or into Vec (just forgetting the topology). Hence we can consider TopVec
as a concrete category over Set or over Top or over Vec. This leads to the concept of
concrete categories over a category X as pairs (A, U) consisting of a category A and a
faithful functor U : A →X. In this way we may decompose complex structures into
simpler ones, or, conversely, construct more complex structures out of simpler ones by
composing forgetful functors. The concept of concrete categories over arbitrary base
categories provides a suitable language to carry out such investigations.
5.1 DEFINITION
(1) Let X be a category.
A concrete category over X is a pair (A, U), where A
is a category and U : A →X is a faithful functor.
Sometimes U is called the
forgetful (or underlying) functor of the concrete category and X is called the
base category for (A, U).
(2) A concrete category over Set is called a construct.
5.2 EXAMPLES
(1) Every category A can be regarded via the identity functor as a concrete category
(A, idA) over itself.
61

62
Categories, Functors, and Natural Transformations
[Chap. I
(2) If A is a construct in the sense of Example 3.3(2) and U is its naturally associated
underlying functor [3.20(3)], then the pair (A, U) is a construct in the sense of
Deﬁnition 5.1. Frequently we will denote the construct (A, U) (by an “abuse of
notation”) by A alone. For example, the abstract category of vector spaces and the
construct of vector spaces will both be denoted by Vec. It will always be clear from
the context which of these entities is being considered.
(3) Ban [3.3(3)(b)] can be considered as a construct in two natural ways:
(a) via the obvious forgetful functor U : Ban →Set,
(b) via the less obvious but useful “unit ball” functor O : Ban →Set, where
O(X) = { x ∈X |
∥x ∥≤1 } and O(f) is the corresponding restriction of
U(f).
[It will turn out that, as constructs, (Ban, O) has more pleasant properties than
(Ban, U).]
(4) Whenever (A, U) is a construct, then (Aop, Q ◦Uop) is also a construct (where
Q : Setop →Set is the contravariant power-set functor [cf. 3.20(9)]). In particular,
(Setop, Q) is a construct.
(5) The category TopVec of topological vector spaces and continuous linear transfor-
mations can be regarded naturally via the obvious forgetful functors as
(a) an abstract category,
(b) a construct,
(c) a concrete category over Top,
(d) a concrete category over Vec.
A similar situation occurs for TopGrp, the category of topological groups (and
continuous homomorphisms).
(6) The category Aut of deterministic sequential Moore automata [3.3(4)(b)] can natu-
rally be considered as a concrete category over Set × Set × Set [cf. 3.3(4)(f)]. This
is the case since for any object (Q, Σ, Y, δ, q0, y) of Aut, each of Q, Σ, and Y is a set
and Aut-morphisms (i.e., simulations) are triples of functions that carry Q, Σ, and
Y into the corresponding sets of the codomain.
(7) Since for any category A the unique functor A →1 is faithful if and only if A is
thin, the concrete categories over 1 are essentially just the thin categories; i.e., the
preordered classes [3.26(2)].
5.3 REMARK
We adopt the following conventions:
(1) Since faithful functors are injective on hom-sets, we usually assume [in view of 3.2(3)]
that homA(A, B) is a subset of homX(UA, UB) for each pair (A, B) of A-objects.
This familiar convention allows one to express the property that “for A-objects A and
18th January 2005

Sec. 5]
Concrete categories and concrete functors
63
B and an X-morphism UA
f
−→UB there exists a (necessarily unique) A-morphism
A →B with U(A →B) = UA
f
−→UB” much more succinctly, by stating
“UA
f
−→UB
is an A-morphism (from A to B)”.24
Observe, however, that since U doesn’t need to be injective on objects, the expression
“UA
idX
−−−→UB
is an A-morphism (from A to B)”
does not imply that A = B or that idX = idA, although it does imply that UA =
UB = X. (This is the case, for example, for the morphism in Pos from ({0, 1}, =)
to ({0, 1}, ≤) that is the identity function on {0, 1}.) To avoid possible confusion in
such a circumstance, we call an A-morphism A
f
−→B identity-carried if Uf = idX.
(2) Sometimes we will write simply A for the concrete category (A, U) over X, when U
is clear from the context; e.g., in the example above. In these cases the underlying
object of an A-object A will sometimes be denoted by |A|; i.e., “| |” will serve as a
standard notation for underlying functors.
(3) If P is a property of categories (or of functors), then we will say that a concrete
category (A, U) has property P provided that A (or U) has property P.
FIBRES IN CONCRETE CATEGORIES
5.4 DEFINITION
Let (A, U) be a concrete category over X.
(1) The ﬁbre of an X-object X is the preordered class consisting of all A-objects A
with U(A) = X ordered by:
(2) A ≤B if and only if idX : UA →UB is an A-morphism.
(3) A-objects A and B are said to be equivalent provided that A ≤B and B ≤A.
(4) (A, U) is said to be amnestic provided that its ﬁbres are partially ordered classes;
i.e., no two diﬀerent A-objects are equivalent.
(5) (A, U) is said to be ﬁbre-small provided that each of its ﬁbres is small, i.e., a
preordered set.
5.5 EXAMPLES
If A is a construct in the sense of 3.3(2)(3) and X is a set, then the A-ﬁbre of X is (up
to order-isomorphism) the class of all A-structures on X, ordered appropriately, e.g.,
24Observe that analogues of this expression are frequently used in “concrete situations”, e.g., in saying
that a certain function between vector spaces “is linear” or that a certain function between topological
spaces “is continuous”, etc.
18th January 2005

64
Categories, Functors, and Natural Transformations
[Chap. I
(1) if A = Rel, then for relations ρ1 and ρ2 on X
ρ1 ≤ρ2
⇔
ρ1 ⊆ρ2,
(2) if A = Met, then for metrics d1 and d2 on X
d1 ≤d2
⇔
∀(x, y) ∈X × X, d2(x, y) ≤d1(x, y),
(3) if A = Σ-Seq, then for acceptors (Q, δ, q0, F) and (Q, δ′, q′
0, F ′) on a set Q
(δ, q0, F) ≤(δ′, q′
0, F ′)
⇔
δ = δ′, q0 = q′
0, and F ⊆F ′,
(4) if A = Top, then for topologies τ1 and τ2 on X
τ1 ≤τ2
⇔
τ2 ⊆τ1,
(5) if A = Vec, then for vector space structures ν1 and ν2 on X
ν1 ≤ν2
⇔
ν1 = ν2.
Observe that for Top the ﬁbres are complete lattices (with smallest element the discrete
topology and largest element the indiscrete topology), whereas for Vec the ﬁbres are
ordered by the equality relation, i.e., no two diﬀerent vector space structures on the
same set are related to each other. These properties of the ﬁbres of Top (resp. Vec) are
typical for “topological” (resp. “algebraic”) constructs. See Chapter VI.
5.6 REMARKS
A concrete category (A, U) is anmestic if and only if the functor U is amnestic (cf. 3.27(4)).
Most of the familiar concrete categories are both amnestic and ﬁbre-small. However:
(1) No proper class, considered as a concrete category over 1, is ﬁbre-small.
Fibres
of the quasiconstruct25 of quasitopological spaces26 are not even preordered classes,
but rather are proper conglomerates. The latter statement follows from the fact that
for each set X with at least two points, the ﬁbre of X cannot be put in bijective
correspondence with any subclass of the universe U.
(2) The constructs Banb and Metc are not amnestic. In Proposition 5.33 we will see
that each concrete category (A, U) over X has an associated “amnestic modiﬁcation”
that in most respects behaves like (A, U).
25A quasiconstruct is a pair (A, U), where A is a quasicategory and U is a faithful functor from U to
Set.
26See, e.g., E. Spanier, Quasi-topologies, Duke Math. J. 30 (1963): 1–14.
18th January 2005

Sec. 5]
Concrete categories and concrete functors
65
5.7 DEFINITION
A concrete category is called
(1) ﬁbre-complete provided that its ﬁbres are (possibly large) complete lattices,27
(2) ﬁbre-discrete provided that its ﬁbres are ordered by equality.
5.8 PROPOSITION
A concrete category (A, U) over X is ﬁbre-discrete if and only if U reﬂects identities
(i.e., if U(k) is an X-identity, then k must be an A-identity).

CONCRETE FUNCTORS
Just as functors can be considered as the natural “morphisms” between abstract cat-
egories, and are a useful tool for investigating them, concrete functors are the natural
“morphisms” between concrete categories.
5.9 DEFINITION
If (A, U) and (B, V ) are concrete categories over X , then a concrete functor from
(A, U) to (B, V ) is a functor F : A →B with U = V ◦F. We denote such a functor
by F : (A, U) →(B, V ).
5.10 PROPOSITION
(1) Every concrete functor is faithful.
(2) Every concrete functor is completely determined by its values on objects.
(3) Objects that are identiﬁed by a full concrete functor are equivalent.
(4) Every full concrete functor with amnestic domain is an embedding.
Proof: Let F : (A, U) →(B, V ) be a concrete functor.
(1). This follows from Proposition 3.30(2).
(2). Suppose that G : (A, U) →(B, V ) is a concrete functor with G(A) = F(A) for
each A-object A. Then for any A-morphism A
f
−→A′ we have the B-morphisms
GA = FA
Ff /
Gf
/ FA′ = GA′
with V (Ff) = U(f) = V (Gf). Since V is faithful, Ff = Gf. Hence F = G.
(3). Let A and A′ be A-objects with FA = FA′ (= B). Then, by using Proposition
3.31, idB : FA →FA′ can be lifted to an A-isomorphism g : A →A′. Hence A
and A′ are equivalent.
27A partially ordered class (X, ≤) is called a large complete lattice provided that every subclass of
X has a join and a meet.
18th January 2005

66
Categories, Functors, and Natural Transformations
[Chap. I
(4). F is full, faithful, and injective on objects; hence it is an embedding.

5.11 EXAMPLES
Because of part (2) of the above proposition, when specifying concrete functors, we need
only describe how they map objects.
(1) The forgetful functor Rng →Ab that “forgets” multiplication is a concrete functor
from the category of rings (and ring homomorphisms) to the category of abelian
groups, where both categories are considered as constructs. In a similar way, the
forgetful functors Met →Top (that assigns to each metric space (X, d) the topolog-
ical space determined by the distance function d ) and TopVec →Vec (that assigns
to each topological vector space its underlying vector space) are concrete functors.
(2) There are many functors from Set to itself, but there is only one concrete functor
between the construct (Set, idSet) and itself — namely, the identity functor.
(3) The “discrete-space functor” and the “indiscrete-space functor” [3.29(5),(6)] are ex-
amples of concrete functors from Set to Top.
(4) Any functor between concrete categories over 1 is already concrete.
5.12 REMARK
A concrete isomorphism F : (A, U) →(B, V ) between concrete categories over X is
a concrete functor that is an isomorphism of categories. All of the isomorphisms given
in Examples 3.26(2), (4), (5), and (6) are concrete. That such a concrete isomorphism
exists means, informally, that each structure in A, i.e., each object A of A, can be
completely substituted by a structure in B, namely F(A) (keeping, of course, the same
morphisms). For example, the standard descriptions of topological spaces by means of
• neighborhoods,
• open sets,
• closure operators, or
• convergent ﬁlters,
give technically diﬀerent constructs, all of which are concretely isomorphic. This is why
the diﬀerences between the various descriptions are regarded as inessential and we can
in good conscience call each of them “Top”.
The concept of concretely isomorphic
concrete categories gives rise to an equivalence relation that is stronger than the relation
of isomorphism of categories.
For example, assuming that no measurable cardinals
exist, Top (and, indeed, any construct) can be thought of as being isomorphic to a
full subcategory of Rel (cf. 4.7). However, Top is not concretely isomorphic to such
a subcategory, because there are more topologies on N (namely, 22ℵ0) than there are
binary relations on N (namely, 2ℵ0).
18th January 2005

Sec. 5]
Concrete categories and concrete functors
67
5.13 REMARK
If F : (A, U) →(B, V ) is a concrete isomorphism, then its inverse F −1 : B →A
is concrete from (B, V ) to (A, U). Unfortunately, the corresponding result does not
hold for concrete equivalences (i.e., concrete functors that are equivalences) since if
F : (A, U) →(B, V ) is a concrete equivalence, then it may happen that there is no
concrete equivalence from (B, V ) to (A, U) even though there are equivalences from
B to A; cf. Proposition 3.36. For example, the embedding of the skeleton of cardinal
numbers into Set is such a concrete equivalence of constructs that is not invertible. Thus,
even though it makes sense to say that two concrete categories over X are concretely
isomorphic, it makes little sense to say that they are concretely equivalent since the
relation between concrete categories of being concretely equivalent is not symmetric.
The following proposition provides the basis for forming the quasicategory of all concrete
categories over a given base category.
5.14 PROPOSITION
(1) The identity functor on a concrete category is a concrete isomorphism.
(2) Any composite of concrete functors over X is a concrete functor over X.

5.15 DEFINITION
The quasicategory that has as objects all concrete categories over X and as mor-
phisms all concrete functors between them is denoted by CAT(X).
In particular,
CONST = CAT(Set) is the quasicategory of all constructs.
5.16 REMARK
Notice that even when X is small, CAT(X) is never an actual category (unless X is the
empty category). CAT(1) is essentially the quasicategory of all preordered classes and
order-preserving functions.
5.17 EXAMPLE
There is a natural embedding F : Monop →CONST that assigns to any monoid M
the category M-Act. If f : M →N is a monoid homomorphism, then
F(f) : N-Act →M-Act is the concrete functor that assigns to any N-action (X, ∗N)
the M-action (X, ∗M), where m ∗M x is deﬁned to be f(m) ∗N x.
5.18 DEFINITION
If F and G are both concrete functors from (A, U) to (B, V ), then F is ﬁner than G
(or G is coarser than F), denoted by: F ≤G, provided that F(A) ≤G(A) for each
A-object A [5.4(1)].
5.19 EXAMPLES
(1) For order-preserving functions considered as concrete functors over 1, f ≤g if and
only if this relation holds pointwise.
18th January 2005

68
Categories, Functors, and Natural Transformations
[Chap. I
(2) Among the concrete functors from Set to Top there is a ﬁnest one (the discrete-space
functor), and a coarsest one (the indiscrete-space functor).
DUALITY FOR CONCRETE CATEGORIES
5.20 REMARK
For every concrete category (A, U) over X, its dual (Aop, Uop) is a concrete category
over Xop. Moreover, for every concrete functor F : (A, U) →(B, V ) over X its dual
functor F op : (Aop, Uop) →(Bop, V op) is a concrete functor over Xop. Thus, there is a
duality principle for concrete categories and concrete functors. Observe, however, that
unless X = Xop there is no duality for concrete categories over a ﬁxed base category X.
In particular, we don’t have a duality principle for constructs. However, since 1 = 1op,
there is a duality principle for concrete categories over 1 (i.e., for preordered classes).
This is indeed a familiar duality.
CONCRETE SUBCATEGORIES
5.21 CONVENTION
If (B, U) is a concrete category over X and A is a subcategory of B with inclusion
E : A ,→B, then A will often be regarded (via the functor U ◦E) as a concrete category
(A, U ◦E) over X. In such cases we will call (A, U ◦E) a concrete subcategory of
(B, U). In the case that the base category is Set, we will call (A, U◦E) a subconstruct
of (B, U).
5.22 DEFINITION
(1) A concrete subcategory (A, U) of (B, V ) is called concretely reﬂective in (B, V )
(or a reﬂective modiﬁcation of (B, V )) provided that for each B-object there
exists an identity-carried A-reﬂection arrow.
(2) Reﬂectors induced by identity-carried reﬂection arrows are called concrete reﬂec-
tors.28
Dual Notions: Concretely coreﬂective subcategory (or coreﬂective modiﬁca-
tion); concrete coreﬂectors.
5.23 EXAMPLES
(1) The construct of symmetric relations is simultaneously a concretely reﬂective and
a concretely coreﬂective subconstruct of the construct Rel of (binary) relations
[cf. 4.17(1) and 4.26(1)].
(2) The construct of completely regular spaces is a concretely reﬂective subconstruct of
Top [cf. 4.17(2)].
28Caution: Concrete functors that are reﬂectors need not be concrete reﬂectors. See 5.23(6).
18th January 2005

Sec. 5]
Concrete categories and concrete functors
69
(3) The construct of sequential topological spaces is a concretely coreﬂective subcon-
struct of Top [cf. 4.26(2)].
(4) None of the reﬂective subconstructs described in Examples 4.17(3)–(12) is concretely
reﬂective.
(5) None of the coreﬂective subconstructs described in Examples 4.26(3) and (4) is
concretely coreﬂective.
(6) Let X be a category consisting of a single object X and two morphisms idX and s
with s ◦s = idX. Let A be the concrete category over X, consisting of two objects
A0 and A1 and the morphism sets
homA(Ai, Aj) =
(
{idX}
if
i = j
{s}
if
i ̸= j.
Consider A as a concretely reﬂective subcategory of itself. Then idA : A →A is a
concrete reﬂector, and the concrete functor R: A →A, deﬁned by R(Ai) = A1−i, is
a reﬂector that is not a concrete reﬂector.
5.24 PROPOSITION
Every concretely reﬂective subcategory of an amnestic concrete category is a full subcat-
egory.
Proof: Let (A, U) be a concretely reﬂective subcategory of an amnestic (B, V ), let A
be an A-object, and let r : A →A∗be an identity-carried A-reﬂection arrow for A. We
wish to show that r = idA so that Proposition 4.20 can be applied. By reﬂectivity there
exists a unique A-morphism s : A∗→A such that the diagram
A
r
/
idA
 A
A
A
A
A
A
A
A
A∗
s

A
commutes.
Since r is identity-carried, V (r) = idVA. Since also V (idA) = idVA, we conclude that
V (s) = idVA as well. Faithfulness of V gives us r ◦s = idA∗. Hence r is a B-isomorphism
with V (r) = idVA. Amnesticity of (B, V ) yields r = idA. Therefore, by Proposition 4.20,
A is full in B.

5.25 REMARK
A concretely reﬂective subcategory of a nonamnestic concrete category need not be full,
as Example 4.21 shows. (The categories given there should be considered as concrete
categories over 1).
5.26 PROPOSITION
For a concrete full subcategory (A, U) of a concrete category (B, V ) over X, with inclu-
sion functor E : (A, U) ,→(B, V ), the following are equivalent:
18th January 2005

70
Categories, Functors, and Natural Transformations
[Chap. I
(1) (A, U) is concretely reﬂective in (B, V ),
(2) there exists a concrete functor R : (B, V ) →(A, U) that is a reﬂector with
R ◦E = idA and idB ≤E ◦R,29
(3) there exists a concrete functor R : (B, V ) →(A, U) with R ◦E ≤idA and
idB ≤E ◦R.
Proof: (1) ⇒(2). For each B-object B choose a reﬂection arrow B
rB
−−→AB such that
rB is identity-carried, and in case that B is an A-object B
rB
−−→AB = B
idB
−−−→B (4.20).
The associated reﬂector (4.23) has the properties required in (2).
(2) ⇒(3). Immediate.
(3) ⇒(1). If R is a concrete functor that satisﬁes the requirements of (3), then for each
B-object B, we have B ≤RB; i.e., there is an identity-carried B-morphism B
rB
−−→RB.
To show that rB is an A-reﬂection arrow for B, let A be an A-object and B
f
−→A be
a B-morphism. Since R is a concrete functor, RB
f
−→RA is an A-morphism. In view
of the fact that RA ≤A, this implies that RB
f
−→A is an A-morphism. Hence it is the
unique A-morphism that makes the triangle
B
rB /
f
!C
C
C
C
C
C
C
C
RB
f

A
commute.

5.27 REMARK
By the above proposition every full concretely reﬂective subcategory has a reﬂector that
is a concrete functor. The converse holds (Proposition 5.31) for isomorphism-closed full
concrete subcategories of transportable concrete categories, deﬁned below. However, for
nonfull subcategories [cf. Exercise 5E(d)] or non-transportable categories [cf. Exercise
5E(c)] the converse need not hold.
TRANSPORTABILITY
We have seen that many of the familiar constructs have the extra property of being
amnestic. Another frequently encountered convenient property is that of transportabil-
ity.
5.28 DEFINITION
A concrete category (A, U) over X is said to be (uniquely) transportable provided
that for every A-object A and every X-isomorphism UA
k
−→X there exists a (unique)
A-object B with UB = X such that A
k
−→B is an A-isomorphism.
29Observe that R ◦E = idA just means that RA = A for each A-object A and that idB ≤E ◦R just
means that B ≤RB for each B-object B [5.4(1)].
18th January 2005

Sec. 5]
Concrete categories and concrete functors
71
Transportability
5.29 PROPOSITION
A concrete category is uniquely transportable if and only if it is transportable and amnes-
tic.
Proof: Let (A, U) be uniquely transportable and let f : A →A′ be an A-isomorphism
such that Uf = idX. Since idA is also an A-isomorphism with domain A and U(idA) =
idX, by uniqueness it follows that f = idA.
Conversely, if (A, U) is transportable and amnestic, A is an A-object, and A
k1
−−→A1
and A
k2
−−→A2 are A-isomorphisms with Uk1 = Uk2, then A1
k2◦k−1
1
−−−−−→A2 is an identity-
carried A-isomorphism. Hence, by amnesticity k2 ◦k−1
1
= idA1, so that k1 = k2.

5.30 EXAMPLES
(1) For a preordered class (A, ≤) considered as a concrete category over 1 [cf. 5.2(7)],
the following conditions are equivalent:
(a) (A, ≤) is uniquely transportable,
(b) (A, ≤) is amnestic,
(c) ≤is antisymmetric, i.e., ≤is a partial-order on A.
(2) Familiar constructs such as Vec, Rel, Grp, and Top are uniquely transportable.
(3) The skeleton of Vec formed by all spaces Rm [see 4.13(2)] is amnestic, but not
transportable.
5.31 PROPOSITION
If (A, U) is an isomorphism-closed full concrete subcategory of a transportable concrete
category (B, V ) over X , then the following are equivalent:
1. (A, U) is concretely reﬂective in (B, V ),
18th January 2005

72
Categories, Functors, and Natural Transformations
[Chap. I
2. there exists a reﬂector R : B →A that is concrete from (B, V ) to (A, U).
Proof: (1) ⇒(2). Immediate (cf. 5.26).
(2) ⇒(1). Let R be as in (2) and for each B-object B, let B
rB
−−→RB be an A-reﬂection
arrow. Then the diagram
B
rB
/
rB

RB
RrB

RB
rRB/ R(RB)
commutes (cf. 4.22). This implies (by uniqueness in the deﬁnition of reﬂection arrows)
that RrB = rRB.
Since RB is an A-object and A is full in B, rRB is an A-iso-
morphism (4.20).
Hence U(RB
rRB=RrB
−−−−−−−→R(RB)) is an X-isomorphism.
By the
concreteness of R, V (B
rB
−−→RB) = U(RB
RrB
−−−→R(RB)). Hence V RB
r−1
B
−−−→V B
is an X-isomorphism. By the transportability of (B, V ) there exists an isomorphism
RB
r−1
B
−−−→ˆB in B, so that since A is isomorphism-closed in B, ˆB is an A-object. Con-
sequently, the composite B
rB
−−→RB
r−1
B
−−−→ˆB is an identity-carried A-reﬂection arrow
for B.

5.32 REMARK
For concretely reﬂective subcategories there usually exist (even in the uniquely trans-
portable cases) several reﬂectors that are concrete functors [see Example 5.23(6)]. How-
ever, in the amnestic case there exists only one concrete reﬂector.
Although transportability and amnesticity are quite useful and convenient properties for
concrete categories, they are not especially strong ones. The next propositions show that
if a concrete category fails to have one of them, it can be replaced via slight modiﬁcations
by concrete categories that do have them.
5.33 PROPOSITION
For every concrete category (A, U) over X , there exists an amnestic concrete category
(B, V ) over X that has the following properties:
(1) there exists an (injective) concrete equivalence E : (B, V ) →(A, U),
(2) there exists a surjective concrete equivalence P : (A, U) →(B, V ).
Moreover, if (A, U) is transportable, then so is (B, V ).
Proof: The relation for A-objects, given by “A is equivalent to
ˆA if and only if
A ≤ˆA and ˆA ≤A”, is an equivalence relation on the class of A-objects. If B is a
full subcategory of A that contains, as objects, precisely one member from each equiv-
alence class, E : B ,→A is the inclusion, and V = U ◦E, then (B, V ) is an amnestic
concrete category and E : (B, V ) →(A, U) satisﬁes condition (1).
18th January 2005

Sec. 5]
Concrete categories and concrete functors
73
If (B, V ) is constructed as above, then the unique concrete functor (A, U)
P
−−→(B, V )
that sends each A-object A to its unique equivalent B-object satisﬁes condition (2).
That transportability is not destroyed is obvious from the construction.

5.34 REMARK
The construction of (A, U)
P
−−→(B, V ), given above, is unique in the sense that for every
surjective concrete equivalence (A, U)
ˆP
−−→( ˆB, ˆV ) with ( ˆB, ˆV ) amnestic, there exists a
concrete isomorphism K : (B, V ) →( ˆB, ˆV ) such that ˆP = K ◦P. In view of this the
above (B, V ) can be called “the” amnestic modiﬁcation of (A, U). With respect to
almost every interesting categorical property30 a concrete category is indistinguishable
from its amnestic modiﬁcation. If one takes the view that in non-amnestic categories
there are “too many objects ﬂoating around in the ﬁbres”, then the amnestic modiﬁca-
tions can be considered to be more natural than the concrete categories that give rise
to them. For an example of this phenomenon, notice that the amnestic modiﬁcation of
the construct Metc of metric spaces and continuous maps is31 the construct Topm of
metrizable topological spaces and continuous maps.
5.35 LEMMA
For every concrete category (A, U) over X, there exists a transportable concrete category
(B, V ) over X and a concrete equivalence E : (A, U) →(B, V ).
Proof: Deﬁne B as follows: Each B-object is a triple (A, a, X), with A ∈Ob(A),
X ∈Ob(X), and a : UA →X an X-isomorphism.
homB((A, a, X), ( ˆA, ˆa, ˆX)) = homA(A, ˆA).
Identities and composition are as in A. Deﬁne V : B →X by
V ((A, a, X)
f
−→( ˆA, ˆa, ˆX)) = X
ˆa◦Uf ◦a−1
−−−−−−−→ˆX;
i.e., such that the square
UA
a
/
Uf

X
Vf

U ˆA
ˆa
/ ˆX
commutes.
Clearly, V is a faithful functor, and if V (A, a, X)
f
−→Y is an X-isomorphism, then
idA : (A, a, X) →(A, f ◦a, Y ) is a B-isomorphism with V (idA) = f. Hence (B, V ) is
transportable. E : (A, U) →(B, V ), deﬁned by: E(A) = (A, idUA, UA), is a concrete
equivalence.

30Amnesticity obviously is not one of them.
31with respect to the canonical forgetful functor Metc→Topm
18th January 2005

74
Categories, Functors, and Natural Transformations
[Chap. I
5.36 PROPOSITION
For every concrete category (A, U) over X there exists a uniquely transportable concrete
category (B, V ) over X and a concrete equivalence E : (A, U) →(B, V ) that is uniquely
determined32 up to concrete isomorphism.
Proof: According to Lemma 5.35 there is a transportable concrete category (C, W)
over X and a concrete equivalence F : (A, U) →(C, W). By Proposition 5.33 there
is an amnestic concrete category (B, V ) over X and a surjective concrete equivalence
P : (C, W) →(B, V ).
Consequently, E = P ◦F : (A, U) →(B, V ) is a concrete
equivalence, and by Proposition 5.33 (B, V ) is uniquely transportable.
To show the essential uniqueness, let (A, U)
E
−−→(B, V ) be a concrete equivalence,
with (B, V ) uniquely transportable.
For each B-object B choose an A-object AB
and a B-isomorphism EAB
hB
−−→B such that whenever B ∈E[Ob(A)] then hB is a
B-identity, EAB
hB
−−→B = B
idB
−−−→B. Then V (EAB
hB
−−→B) = UAB
hB
−−→V B =
V (EAB)
hB
−−→V B is an X-isomorphism. Since (B, V ) is uniquely transportable, there
is a unique B-isomorphism EAB →CB with V (EAB →CB) = V (EAB)
hB
−−→V B.
A simple computation establishes that there exists a unique full concrete functor
H : (B, V ) →(B, V ) with HB = CB for each B-object B. By Proposition 5.10, H is a
concrete embedding. To show that E = H ◦E, let A be an A-object and let B = EA. By
our construction EAB
hB
−−→B is a B-identity, which implies that EAB = EA. Hence,
by Proposition 5.10, AB and A are equivalent A-objects. Consequently, EAB and EA
are equivalent B-objects. Since (B, V ) is amnestic, this implies that EAB = EA. Hence
EAB
id
−−→EA is a B-isomorphism with
V (EAB
id
−−→EA) = V (EAB)
hB
−−→V B,
so that by the deﬁnition of CB we have CB = EA; i.e., (H ◦E)A = HB = CB = EA.
It remains to be shown that H is surjective. Let C be a B-object. Since E is isomorphism-
dense, there exists some A-object A and some B-isomorphism EA
h
−→C.
Then
V (EA
h
−→C) = UA
h
−→V C = V (EA)
h
−→V C is an X-isomorphism, so that by
the unique transportability of (B, V ), there exists a unique B-isomorphism EA →B,
with V (EA →B) = V (EA)
h
−→V C.
We claim that HB = C.
To see this, con-
sider the chosen B-isomorphism EAB
hB
−−→B. Since EA
h
−→B is a B-isomorphism,
EAB
h−1◦hB
−−−−−−→EA is a B-isomorphism. By the fullness and faithfulness of E, this im-
plies that AB
h−1◦hB
−−−−−−→A is an A-isomorphism (3.31), and hence EAB
h−1◦hB
−−−−−−→EA is
a B-isomorphism. Consequently,
EAB
hB
−−→C = EAB
h−1◦hB
−−−−−−→EA
h
−→C
32That is, whenever (A, U)
E
−−→(B, V ) is a concrete equivalence to a uniquely transportable concrete
category over X, then there exists a concrete isomorphism H : (B, V ) →(B, V ) such that E = H ◦E.
18th January 2005

Sec. 5]
Concrete categories and concrete functors
75
is a B-isomorphism with
V (EAB
hB
−−→C) = V (EAB)
hB
−−→V C = V B,
which, by the deﬁnition of HB, implies that HB = C. Thus H : (B, V ) →(B, V ) is a
concrete isomorphism with E = H ◦E.

FUNCTORS “INDUCING” CONCRETE CATEGORIES
Many familiar constructs of an “algebraic” or “topological” nature have natural descrip-
tions that can be accomplished in two steps. The ﬁrst step, which will be formalized
below (separately for algebraic and topological cases), consists of deﬁning algebraic (resp.
topological) categories by means of certain functors. The second step consists of singling
out full, concrete subcategories by imposing certain axioms on the objects (cf. 16.11 and
22.1).
5.37 DEFINITION
Let T : X →X be a functor. Alg(T) is the concrete category over X, the objects of
which (called T-algebras) are pairs (X, h) with X an X-object and h : T(X) →X
an X-morphism.
Morphisms f : (X, h) →(X′, h′) (called T-homomorphisms) are
X-morphisms f : X →X′ such that the diagram
T(X)
h
/
T(f)

X
f

T(X′)
h′
/ X′
commutes. The underlying functor to X is given by:
(X, h)
f
−→(X′, h′)
 = X
f
−→X′.
5.38 EXAMPLES
(1) Consider the squaring functor [3.20(10)] S2 : Set →Set. The construct Alg(S2)
is obviously the construct of binary algebras Alg(Ω0), where Ω0 consists of the
singleton natural number 2 [3.3(2)(e)]. Observe that such familiar constructs as Sgr,
Mon, Grp, and Ab can be considered as subcategories of Alg(S2). [Later we shall
see that each Alg(Ω) is isomorphic to Alg(T) for some T (10U).]
(2) A unary Σ-algebra [3.3(2)(e)] (X, σ(−))σ∈Σ gives rise to a function X × Σ
h
−→X
that maps (x, σ) to σ(x). Deﬁne a functor (−× Σ) : Set →Set as follows. On
objects: (−× Σ)(X) = X × Σ, and on morphisms: (−× Σ)(f) = f × idΣ. Then the
passage from (X, σ(−))σ∈Σ to (X, h) deﬁnes a concrete isomorphism
F : Alg(Σ) →Alg(−× Σ)
that is the identity function on morphisms.
18th January 2005

76
Categories, Functors, and Natural Transformations
[Chap. I
(3) Let ˆS2 : Pos →Pos be the squaring functor for Pos; i.e., ˆS2(X, ≤) = (X × X, ≤),
where the order relation on X × X is deﬁned coordinatewise, and ˆS2(f) = f × f,
for any order-preserving map f. Then the concrete category Alg( ˆS2) over Pos is
concretely isomorphic to the category of ordered binary algebras, considered as a
concrete category over Pos.
(4) For any category X and X-object, X, the constant functor CX : X →X [3.20(2)]
yields the category Alg(CX) which is the comma category (X ↓X) of objects under
X (see Exercise 3K).
5.39 PROPOSITION
Each concrete category of the form Alg(T) is ﬁbre-discrete.

5.40 DEFINITION
Let T : X →Set be a functor. Spa(T) is the concrete category over X, the objects of
which (called T-spaces) are pairs (X, α) with α ⊆T(X). Morphisms (X, α)
f
−→(Y, β)
(called T-maps) are X-morphisms f : X →Y such that T(f)[α] ⊆β. The underlying
functor to X is given by:
(X, α)
f
−→(Y, β)
 = X
f
−→Y. Concrete categories of the form
Spa(T) are called functor-structured categories.
5.41 EXAMPLES
(1) Consider the squaring functor S2 : Set →Set [3.20(10)].
Then the construct
Spa(S2) is equal to the construct Rel. Observe that such familiar constructs as
Prost and Pos can be considered as full subcategories of Spa(S2).
(2) Any functor T : 1 →Set consists of choosing a distinguished set A, and so, for this
case, Spa(T) is just the power-set of A regarded as a poset or as a concrete category
over 1.
5.42 PROPOSITION
Each concrete category of the form Spa(T) is ﬁbre-complete.

5.43 REMARK
We will see later (22.3) that every small-ﬁbred “topological” category (A, U) over X
is isomorphic to a full concrete subcategory of Spa( ˆT) for a suitable ˆT : X →Set.
A more natural representation of (A, U) is often obtained in terms of a full concrete
subcategory of (Spa(T))op considered as a concrete category over X = (Xop)op for
some functor T : Xop →Set. Concrete categories of the form (Spa(T))op are called
functor-costructured categories.
5.44 EXAMPLE
Consider the contravariant power-set functor Q : Setop →Set. Then the construct
(Spa(Q))op has as objects all pairs (X, τ) consisting of a set X and a set τ of subsets of
X, where a morphism f : (X, τ) →(Y, σ) is a function f : X →Y such that Qf[σ] ⊆τ.
In particular, Top is a full subconstruct of (Spa(Q))op.
18th January 2005

Sec. 5]
Concrete categories and concrete functors
77
5.45 REMARK
Concrete categories of the form Spa(T) can be very large. In fact, every construct A
can be fully embedded in
(a) Spa(P), where P is the covariant power-set functor;
(b) (Spa(Q))op, where Q is the contravariant power-set functor;
(c) the concrete category of topological spaces and open, continuous functions.
These and related results can be found in the monograph Pultr-Trnkov´a (see References).
However, the corresponding embeddings usually will not be concrete.
Suggestions for Further Reading
Katˇetov, M. Allgemeine Stetigkeitsstrukturen. Proceedings of the International Con-
gress of Mathematicians (Stockholm, 1962), Inst. Mittag-Leﬄer, Djursholm, 1963,
473–479.
Isbell, J. R. Two set-theoretical theorems in categories. Fund. Math. 53 (1963): 43–49.
Barr, M. Coequalizers and free triples. Math. Z. 116 (1970): 307–322.
Ehresmann, A., and C. Ehresmann. Categories of sketched structures. Cahiers Topol.
Geom. Diﬀ. 13 (1972): 105–214.
Kuˇcera, L., and A. Pultr. On a mechanism of deﬁning morphisms in concrete cate-
gories. Cahiers Topol. Geom. Diﬀ. 13 (1972): 397–410.
Freyd, P. J. Concreteness. J. Pure Appl. Algebra 3 (1973): 171–191.
Rosick´y, J., and M. Sekanina. Realizations of topologies by set systems. Colloquium
on Topology (Keszthely, 1972), Colloq. Math. Soc. J´anos Bolyai 8, North Holland,
Amsterdam, 1974, 535–555.
Koubek, V. Each concrete category has a representation by T2 paracompact topological
spaces. Comment. Math. Univ. Carolinae 15 (1976): 655–664.
Porst, H.-E., and W. Tholen Concrete Dualities. Category Theory at Work (eds. H. Her-
rlich and H.-E. Porst). Heldermann Verlag 1991, 111–136.
EXERCISES
5A. Fibres
(a) Show that the category TopGrp, as a concrete category over Top, is ﬁbre-discrete
and, as a concrete category over Grp, is ﬁbre-complete. What about the construct
TopGrp? What about the constructs HComp and Comp (of compact spaces)?
(b) Which concrete categories have the property that each ﬁbre is a singleton?
18th January 2005

78
Categories, Functors, and Natural Transformations
[Chap. I
5B. Non-concrete Isomorphisms
Show that there is an illegitimate conglomerate of isomorphisms of Set onto itself, al-
though the only concrete isomorphism of the construct Set onto itself is id.
5C. Categories of Concrete Categories
Verify that for each small category X there is a category whose objects are all ﬁbre-small
concrete categories over X and whose morphisms are all concrete functors. Nevertheless,
show that the conglomerate of all ﬁbre-small constructs is illegitimate.
[In fact, the
conglomerate of all full subcategories of Set is illegitimate.]
5D. Concrete Functors Between Constructs
(a) Show that there is precisely one concrete functor from Rel to Set (the forgetful
functor) and that there are precisely three concrete functors from Set to Rel, the
discrete functor, the diagonal functor (FX = (X, ∆), where ∆= { (x, x) | x ∈X }),
and the indiscrete functor.
(b) Show that there is precisely one concrete functor from Set to Pos.
(c) Show that there is no concrete functor from Set to Vec. Generalize this to other
algebraic constructs, and to Σ-Seq.
* (d) Show that there are precisely two concrete functors from Set to Top, but a proper
class of concrete functors from Top into itself. [Hint: For each cardinal number α
let Fα : Top →Top assign to each topological space X the space FαX generated
by intersections of α-indexed families of X-open sets.]
5E. Concrete Reﬂections
(a) Show that no proper subconstruct of Grp is concretely reﬂective (or coreﬂective).
Generalize this to all ﬁbre-discrete concrete categories.
(b) Show that the full subconstruct of Rel formed by all objects (X, ρ) without proper
cycles (i.e., if x1ρx2, x2ρx3, · · · , xn−1ρxn, and x1 = xn, then x1 = x2 = · · · = xn) is
reﬂective, but not concretely reﬂective.
(c) Show that a reﬂective, isomorphism-closed, full concrete subcategory (A, U) of
a (non-transportable) concrete category (B, V ) over X with a reﬂector functor
(B, V )
R
−−→(A, U) that is concrete need not be concretely reﬂective. [Hint: Con-
sider the additive monoid of integers as base category X; let B be the category with
Ob(B) = N and homB(n, m) =
(
∅,
if m = 0 < n
{(n, m)},
otherwise
)
; let the functor
B
V
−−→X be deﬁned by V (n, m) = n −m; and let (A, U) be the full concrete
subcategory of (B, V ) obtained by deleting the object 0.] Cf. Proposition 5.31.
* (d) Show that a reﬂective (nonfull) concrete subcategory (A, U) of a transportable con-
crete category (B, V ) over X with a reﬂector (B, V )
R
−−→(A, U) that is a concrete
functor need not be concretely reﬂective. [Hint: Consider the compositive monoid
of all order-preserving endomorphisms of the set N, with its natural order, as base
18th January 2005

Sec. 5]
Concrete categories and concrete functors
79
category X, and let (A, U) (resp. (B, V )) be the concrete category over X with
objects all pairs (N, n), with n ∈N, and whose morphisms (N, n)
f
−→(N, m)
are all X-morphisms N
f
−→N that satisfy f(n + p) = m + p for all p ∈N
(resp. f(n + p) = m + p for all p ≥1 and f(n) ≤m).] Cf. Proposition 5.31.
5F. Amnestic Modiﬁcation
(a) Describe the amnestic modiﬁcation of the construct Metu of metric spaces and
uniformly continuous maps.
(b) What are the amnestic modiﬁcations for concrete categories over 1?
5G. Categories of T -Algebras
(a) Describe Alg(T) for the constant functor T : Set →Set
(1) with value ∅,
(2) with value 1 = {0}.
(b) Find a functor T : Set →Set such that Alg(T) is concretely isomorphic to the
category of commutative binary algebras (i.e., algebras with a binary operation ·
satisfying x · y = y · x).
(c) Describe Alg(id).
(d) Let T : Pos →Pos be the functor that assigns to each poset (X, ≤) the discretely
ordered set, and is deﬁned on morphisms by: Tf = f. Describe Alg(T).
5H. Categories of T -Spaces
(a) Describe Spa(T) for the constant functor T : Set →Set
(1) with value ∅,
(2) with value 1 = {0}.
(b) Find a functor T : Set →Set such that Spa(T) is concretely isomorphic to the
construct of symmetric binary relations (i.e., if x is related to y, then y must be
related to x).
(c) Show that there is no functor T : Set →Set such that Spa(T) is concretely iso-
morphic to the construct of reﬂexive binary relations.
5I. Cat as a Concrete Category
Cat can be viewed in various ways as a concrete category. Depending on the chosen
deﬁnition of category (cf. 3.1, 3.53 and 3C) and on the chosen forgetful functor, various
situations arise:
(a) Show that by assuming any of the two deﬁnitions of categories 3.1 or 3C, Cat can
be considered as a concrete category over Set × Set via the functor
U : Cat →Set × Set, deﬁned by
U(A
F
−−→B) = (Ob(A)
FO
−−→Ob(B) , Mor(A)
FM
−−−→Mor(B)),
18th January 2005

80
Categories, Functors, and Natural Transformations
[Chap. I
(where FO is the restriction of F to objects and FM is its restriction to morphisms),
and that in both cases U is uniquely transportable.
(b) Show that by assuming any of the three deﬁnitions of categories, Cat can be con-
sidered as construct via the functor U : Cat →Set, deﬁned by U(A
F
−−→B) =
Mor(A)
FM
−−−→Mor(B). In the cases of Deﬁnition 3.1 and of Exercise 3C, U is
transportable, but not amnestic; and in the case of Deﬁnition 3.53, U is amnestic
and transportable. [Thus, when considered as a construct, Catof is usually preferred
to Cat.]
5J. Concretizable Categories
A category A is called concretizable over X provided that there exists a faithful
functor from A to X. Verify that
(a) A is concretizable over 1 if and only if A is thin.
(b) Setop is concretizable over Set.
(c) If A is concretizable over Set, then so is Aop.
* (d) There exist categories that are not concretizable over Set, e.g., the category hTop,
whose objects are topological spaces and whose morphisms are homotopy equivalence
classes of continuous maps.
(e) A is concretizable over Set if and only if A is embeddable into Set.
(f) There exist categories A that are not concretizable over Aop.
* 5K. Subconstructs That Are Simultaneously Reﬂective and
Coreﬂective Modiﬁcations
Show that the construct Rel has precisely six subconstructs that are simultaneously
reﬂective and coreﬂective modiﬁcations and that the ﬁve proper ones can be described
by the following implications:
(1) xρy ⇒yρx (symmetry),
(2) xρy ⇒xρx,
(3) xρy ⇒yρy,
(4) xρy ⇒(xρx and yρy),
(5) xρy ⇒(xρx and yρx).
5L. The Constructs Topop
0
and Fram
(a) If Top0 denotes the construct of T0 topological spaces, show that Topop
0
can be
considered as a construct via the functor L : Topop
0
→Set that forgets not the
“structure” but rather the underlying set; i.e., for a continuous function
(Y, σ)
f
−→(X, τ), L((X, τ)
f
−→(Y, σ)) = τ
Lf
−−→σ, where Lf(A) = f−1[A].
18th January 2005

Sec. 5]
Concrete categories and concrete functors
81
(b) Let Fram be the construct whose objects are frames, i.e., complete lattices that sat-
isfy the law a ∧W
i∈I bi
= W
i∈I(a ∧bi), and whose morphisms are frame-
homomorphisms, i.e., functions that preserve ﬁnite meets and arbitrary joins.
Show that there is a unique concrete functor Topop
0
T
−−→Fram over Set that sends
each topological space to its set of open subsets, ordered by inclusion.
[Loc=Framop is called the category of locales. The functor T op : Top0 →Loc is a
nonfull coreﬂective embedding, and its restriction to sober spaces is a full coreﬂective
embedding].
5M. HCompop as a Construct
Show that HCompop can be considered as a construct via the contravariant hom-functor
hom(−, [0, 1]) : HCompop →Set.
5N. Concrete Isomorphisms
(a) Show that the following constructs are concretely isomorphic:
(1) MCPos (complete lattices and meet-preserving maps),
(2) JCPos,
(3) the full subconstruct of Alg(P) consisting of those P-algebras (X, h) that satisfy
the following two conditions:
(i) h({x}) = x for each x ∈X,
(ii) h(∪A) = h({h(A)
 A ∈A}) for each A ⊆PX.
(b) Show that the three constructs deﬁned below are pairwise concretely isomorphic and
therefore provide three diﬀerent approaches to topology.
(1) Approach via closure; the construct Clos:
Objects are closure spaces; i.e., pairs (X, cl) with cl : P(X) →P(X) a func-
tion that satisﬁes:
(i) cl(∅) = ∅,
(ii) A ⊆cl(A) for each A ∈P(X),
(iii) cl(A ∪B) = cl(A) ∪cl(B) for each A, B ⊆X.
Morphisms are closure-preserving maps; i.e., functions (X, cl)
f
−→(X′, cl′)
such that f[cl(A)] ⊆cl′(f[A]) for each A ⊆X.
(2) Approach via convergence; the construct PrTop:
Objects are pretopological spaces; i.e., pairs (X, conv), where conv is the
relation that shows which ﬁlters converge to which points of X, subject to the
following conditions:
(i) for every x ∈X the ﬁxed ultraﬁlter at x ( ˙x) converges to x,
(ii) if a ﬁlter converges to x, then so does every ﬁner ﬁlter,
18th January 2005

82
Categories, Functors, and Natural Transformations
[Chap. I
(iii) if each member of a family of ﬁlters converges to x, then so does the
intersection of the family.
Morphisms are convergence-preserving maps; i.e., functions
(X, conv)
f
−→(X′, conv′) such that whenever F converges to x, then the ﬁlter
generated by f[F] converges to f(x).
(3) Approach via neighborhoods; the construct Neigh:
Objects are neighborhood spaces; i.e., pairs (X, N), where N associates with
any x ∈X a ﬁlter N(x), the neighborhood ﬁlter of x, subject to the condition
that if U is a neighborhood of x then x is a member of U.
Morphisms are all functions (X, N)
f
−→(X′, N ′) such that whenever U is a
neighborhood of f(x), then f−1[U] is a neighborhood of x.
5O. Realizations
Full concrete embeddings are called realizations. Show that
(a) There are precisely two realizations from Pos to Rel.
* (b) There are precisely two realizations from Top to Spa(Q)op.
(c) There is a realization from Alg(1) to Rel.
(d) There is a realization from Sgr to Spa(S3).
(e) For each Ω, there is a realization from Alg(Ω) to some functor-structured category.
(f) There is a realization from Prost to Top.
(g) There is no realization from Rel to Sgr.
(h) There is a proper class of realizations from Tych to Spa(Q)op.
(i) There are at least two realizations from Haus to Spa(Q)op. [It is unknown whether
there are more than two.]
(j) There is a no ﬁbre-small construct (A, U) such that every ﬁbre-small construct has
a realization to (A, U).
* (k) There is a construct (A, U) such that every construct has a realization to (A, U).
5P. Amnesticity
Show that a concrete category (A, U) over X is amnestic if and only if each A-iso-
morphism f is an A-identity whenever Uf is an X-identity.
18th January 2005

6 Natural transformations
Let V be a ﬁnite-dimensional real vector space and let ˆV be its dual (i.e., the set of
all linear functionals V →R with vector-space operations deﬁned pointwise). V and
ˆV are known to be isomorphic.
Hence V and its second dual ˆˆV are isomorphic as
well. However, there is a fundamental diﬀerence between these two situations. There
is a “natural” isomorphism τ : V →ˆˆV which to every vector x assigns the “evaluate
at x” functional τ(x) : ˆV →R.
But there is no “natural” isomorphism between V
and ˆV . This section provides a formal deﬁnition for the intuitive notion of “natural
isomorphism” and (more generally) of “natural transformation”.
6.1 DEFINITION
Let F, G : A →B be functors. A natural transformation τ from F to G (denoted
by τ : F →G or F
τ−→G) is a function that assigns to each A-object A a B-morphism
τA : FA →GA in such a way that the following naturality condition holds: for each
A-morphism A
f
−→A′, the square
FA
τA
/
Ff

GA
Gf

FA′
τA′ / GA′
commutes.
6.2 EXAMPLES
(1) Let A be a reﬂective subcategory of B with inclusion functor E, let B
rB
−−→RB be
an A-reﬂection arrow for each B-object B, and let R : B →A be the associated
reﬂector (4.23). Then r = (rB)B∈Ob(B) is a natural transformation: idB
r
−→E ◦R.
(2) Let U : Grp →Set be the forgetful functor, and let S : Grp →Set be the
“squaring-functor”, deﬁned by S(G
f
−→H) = G2
f2
−−→H2. For each group G, its
multiplication is a function τG : G2 →G. The family τ = (τG) is a natural transfor-
mation from S to U. The naturality condition simply means that f(x·y) = f(x)·f(y)
for any group homomorphism G
f
−→H and any x, y ∈G. Thus “multiplication” in
groups can be regarded as a natural transformation. Likewise, for any type of alge-
bras, each of the deﬁning operations can be considered as a natural transformation
between suitable functors.
(3) Let (ˆˆ) : Vec →Vec be the second-dual functor for vector spaces deﬁned by
Vec
( ˆˆ )
−−−→Vec = (Vecop)op
( ˆ )op
−−−−→Vecop
( ˆ )
−−−→Vec,
83

84
Categories, Functors, and Natural Transformations
[Chap. I
where (ˆ)op is the dual of the duality functor for vector spaces (cf. 3.20(12)
and 3.41), and let idVec be the identity functor on Vec. Then the linear transfor-
mations τV : V →ˆˆV , deﬁned by (τV (x))(f) = f(x), yield a natural transformation
idVec
τ−→(ˆˆ).
(4) The assignment of the Hurewicz homomorphism πn(X) →Hn(X) to each topo-
logical space X is a natural transformation from the nth homotopy functor
πn : Top →Grp to the nth homology functor Hn : Top →Grp.
(5) If B
f
−→C is an A-morphism, then
homA(C, −)
τf
−−→homA(B, −),
deﬁned by τf(g) = g ◦f, and
homA(−, B)
σf
−−→homA(−, C),
deﬁned by σf(g) = f ◦g, are natural transformations.
(6) Let U : Σ-Seq →Set be the forgetful functor. For each σ ∈Σ, and each acceptor
A = (Q, δ, q0, F), let ˆσA be the function δ(−, σ) : Q →Q. Then ˆσ = (ˆσA) : U →U
is a natural transformation.
6.3 DEFINITION
If G, G′ : A →B are functors and G
τ−→G′ is a natural transformation, then
(1) for each functor F : C →A, the natural transformation τF : G ◦F →G′ ◦F is
deﬁned by
(τF)C = τFC,
(2) for each functor H : B →D, the natural transformation Hτ : H ◦G →H ◦G′ is
deﬁned by
(Hτ)A = H(τA).
Likewise the natural transformation G′op
τ op
−−−→Gop is deﬁned by
τ op
A = τA,
6.4 EXAMPLE
If S2 : Set →Set is the squaring functor [3.20(10)] and ∆: id →S2 is the natural
transformation that associates with every set X the diagonal map ∆X : X →X2 given
by x 7→(x, x), then
(1) S2∆: S2 →S2 ◦S2 is given by (x, y) 7→((x, x), (y, y)),
(2) ∆S2 : S2 →S2 ◦S2 is given by (x, y) 7→((x, y), (x, y)).
18th January 2005

Sec. 6]
Natural transformations
85
NATURAL ISOMORPHISMS
6.5 DEFINITION
Let F, G : A →B be functors.
(1) A natural transformation F
τ−→G whose components τA are isomorphisms is called
a natural isomorphism from F to G.
More generally, a natural transformation from F to G whose components belong to
some speciﬁed class M of B-morphisms is called an M-transformation.
(2) F and G are said to be naturally isomorphic (denoted by F ∼= G) provided that
there exists a natural isomorphism from F to G.33
6.6 EXAMPLES
(1) For each functor F : A →B we have the identity natural transformation on F,
idF : F →F given by (idF )A = idFA, which is clearly a natural isomorphism.
(2) Let F : Set →Vec be a functor that assigns to each set X a vector space FX with
basis X, and to each function X
f
−→Y the unique linear extension FX
Ff
−−→FY
of f. This actually is not a correct deﬁnition of a functor, since there are many
diﬀerent vector spaces with the same basis. However, the deﬁnition is “correct up to
natural isomorphism”. Whenever we choose, for each set X, a speciﬁc vector space
FX with basis X, we do obtain a functor F : Set →Vec (since the above condition
determines the action of F on functions uniquely). Furthermore, any two functors
that are obtained in this way are naturally isomorphic.
(3) The natural transformation τ : idVec →(ˆˆ ) from the identity functor on Vec to
the second-dual functor for vector spaces (ˆˆ ) given in Example 6.2(3) becomes a
natural isomorphism when the above functors are restricted to the full subcategory
of ﬁnite-dimensional vector spaces.
(4) For any 2-element set A, hom(A, −) is naturally isomorphic to the squaring functor
S2 [3.20(10)] and hom(−, A) is naturally isomorphic to the contravariant power-set
functor Q [3.20(9)].
(5) If f is a morphism and τf and σf are the associated natural transformations for the
hom-functors [6.2(5)], then the following are equivalent:
(a) f is an isomorphism,
(b) σf is a natural isomorphism,
(c) τf is a natural isomorphism.
Thus, if A and B are isomorphic objects, then hom(A, −) and hom(B, −) are natu-
rally isomorphic functors, and so are hom(−, A) and hom(−, B). The converse holds
as well (cf. Exercise 6M).
33Observe that the relation ∼= is an equivalence relation on the conglomerate of all functors from A to
B.
18th January 2005

86
Categories, Functors, and Natural Transformations
[Chap. I
6.7 PROPOSITION
If A is a reﬂective subcategory of B, then any two reﬂectors for A are naturally isomor-
phic.
Proof: Let R and S be reﬂectors for A with associated reﬂection arrows B
rB
−−→RB
and B
sB
−−→SB. Then there exist A-morphisms RB
fB
−−→SB and SB
gB
−−→RB such
that the diagrams
B
rB /
sB
!C
C
C
C
C
C
C
C
RB
fB

SB
and
B
sB /
rB
!C
C
C
C
C
C
C
C
SB
gB

RB
commute. Uniqueness in the deﬁnition of reﬂection arrows implies that gB ◦fB = idRB
and fB ◦gB = idSB.
Hence the fB’s are A-isomorphisms.
That (fB)B∈Ob(A) is a
natural transformation (hence a natural isomorphism) follows from the fact that for any
B-morphism B
f
−→B′ the following diagrams 1 and 2 — hence, by the uniqueness
property for B
rB
−−→RB, also 3 — commute:
B
sB /
1
f

SB
Sf

B′
sB′ / SB′
=
B
rB /
f

2
RB
fB
/
Rf

3
SB
Sf

B′
rB′ / RB′
fB′
/ SB′
In Proposition 3.36 we have seen that if A
F
−−→B is an equivalence, then there is an
equivalence B
G
−−→A. Now that we have the notion of natural isomorphism, we are able
to sharpen this result:
6.8 PROPOSITION
A functor A
F
−−→B is an equivalence if and only if there exists a functor B
G
−−→A such
that idA ∼= G ◦F and F ◦G ∼= idB.
Proof: Let F be an equivalence. By following the proof of Proposition 3.36 we see
that there is a functor G and a natural isomorphism ε : F ◦G →idB. Now for each
A-object A, ε−1
FA : FA →(F ◦G ◦F)(A) is an isomorphism. Since F is full and faithful,
Proposition 3.31 implies that there is a unique isomorphism ηA : A →(G ◦F)(A) such
that F(ηA) = ε−1
FA. The naturality of η follows from that of ε−1 (cf. Exercise 6L) and
the faithfulness of F.
Conversely, let G : B →A be a functor and let idA
η
−→G ◦F and F ◦G
ε
−→idB be
natural isomorphisms. Since F(GB)
εB
−−→B is an isomorphism for any B-object B,
it follows that F is isomorphism-dense. F is faithful, since for any pair A
f /
g / A′ of
B-morphisms the equality Ff = Fg implies ηA′ ◦f = GFf ◦ηA = GFg ◦ηA = ηA′ ◦g;
hence f = g. F is full, since for any B-morphism f : FA →FA′, η−1
A′ ◦Gf ◦ηA is an
A-morphism g : A →A′ with Fg = f.

18th January 2005

Sec. 6]
Natural transformations
87
6.9 DEFINITION
A functor F : A →Set is called representable (by an A-object A) provided that F
is naturally isomorphic to the hom-functor hom(A, −) : A →Set.
6.10 REMARK
Objects that represent the same functor (or two naturally isomorphic functors) are iso-
morphic. (Cf. Exercise 6M.)

6.11 EXAMPLES
(1) Forgetful functors are often representable. For example,
(a) Vec →Set is represented by the vector space R,
(b) Grp →Set is represented by the group of integers Z,
(c) Top →Set is represented by any one-point topological space.
(2) The underlying functor U for the construct Ban [5.2(3)] is not representable (see
Exercise 10J). However, the faithful unit ball functor O : Ban →Set is represented
in the complex case by the Banach space C of complex numbers.
(3) The forgetful functor for Σ-Seq is not representable (since for each (ﬁnite) acceptor
A there exists a nonempty acceptor B with hom(A, B) = ∅).
6.12 REMARK
For constructs (A, U) the forgetful functor is represented by an object A if and only
if A is a free object over a singleton set [see Deﬁnition 8.22(2)]. This provides many
additional examples of representations.
FUNCTOR CATEGORIES
6.13 DEFINITION
If F, G, H : A →B are functors and F
σ
−→G and G
τ−→H are natural transformations,
then the composition of natural transformations τ ◦σ : F →H is the natural
transformation that assigns to each A-object A the morphism τA ◦σA : F(A) →H(A).
6.14 REMARK
It is obvious that the composition of natural transformations is a natural transformation,
that this composition is associative, and that the identity natural transformations act
as units.
6.15 DEFINITION
For categories A and B the functor quasicategory [A, B] has as objects all functors
from A to B, as morphisms from F to G all natural transformations from F to G, as
identities the identity natural transformations, and as composition the composition of
natural transformations given above.
18th January 2005

88
Categories, Functors, and Natural Transformations
[Chap. I
6.16 REMARKS
(1) If A and B are small categories, then [A, B] is a category.
If A is small and
B is large, then [A, B], though being a proper quasicategory, is isomorphic to a
category. Quasicategories that are isomorphic to categories are called legitimate
quasicategories and are treated as categories. If A and B are both large, then
[A, B] will generally fail to be isomorphic to a category. Such quasicategories are
called illegitimate.
(2) A natural transformation between functors from A to B is a natural isomorphism
if and only if it is an isomorphism in [A, B].
6.17 EXAMPLES
(1) If A is a discrete category with one object, then [A, B] is isomorphic to B.
(2) If A is a discrete category with two objects, then [A, B] is isomorphic to B × B.
(3) If 2 is a category of the form • →• with two objects and one non-identity morphism,
then [2, B] is isomorphic to the arrow category of B (cf. Exercise 3K).
(4) If M is a monoid, considered as a category, then [M, Set] is isomorphic to the
category M-Act of M-actions.
6.18 PROPOSITION
For any functor F : A →Set, any A-object A and any element a ∈F(A), there exists
a unique natural transformation τ : hom(A, −) →F with τA(idA) = a.
Proof: Let τB(f) = (F(f))(a).
Pointwise evaluations establish that τ is a natural
transformation. If δ : hom(A, −) →F is such that δA(idA) = a, then by the naturality
of δ, δB(f) = δB(f◦idA) = (δB◦hom(A, f))(idA) = (F(f)◦δA)(idA) = F(f)(a) = τB(f).
6.19 COROLLARY (YONEDA LEMMA)
If F : A →Set is a functor and A is an A-object, then the following function
Y : [hom(A, −), F] →F(A)
deﬁned by
Y (σ) = σA(idA),
is a bijection (where [hom(A, −), F] is the set of all natural transformations from hom(A, −)
to F).

6.20 THEOREM
For any category A, the functor E : A →[Aop, Set], deﬁned by
E(A
f
−→B) = hom(−, A)
σf
−−→hom(−, B),
where σf(g) = f ◦g, is a full embedding.
Proof: The described assignment clearly preserves identities and composition. Thus it
is a functor. If f and f′ are distinct members of hom(A, B), then σf and σf′ clearly diﬀer
on idA. Hence E is faithful. Fullness follows from Corollary 6.19 with F = hom(B, −).
18th January 2005

Sec. 6]
Natural transformations
89
6.21 EXAMPLES
(1) If M is a monoid considered as a category, then the unique object assigned to it by
the above embedding is the Mop-action on the set M deﬁned by right translations
in M.
(2) If A is a poset considered as a thin category, then the above embedding is the
representation of A by all the principal ideals in A.
CONCRETE NATURAL TRANSFORMATIONS
AND GALOIS CORRESPONDENCES
6.22 REMARK
From now on, when investigating concrete categories, we typically will use the notational
conventions described in Remark 5.3. In particular,
(1) we will denote a concrete category (A, U) over X by A alone and denote the under-
lying functor U by | |,
(2) the expression “|A|
f
−→|B| is an A-morphism” means that for the X-morphism
|A|
f
−→|B| there exists a (necessarily unique) A-morphism A →B, which will also
be denoted by f, with |A →B| = |A|
f
−→|B|.
6.23 DEFINITION
If A and B are concrete categories over X and F, G : A →B are concrete functors (5.9),
then a natural transformation τ : F →G is called concrete (or identity-carried)
provided that |τA| = id|A| for each A-object A.
6.24 PROPOSITION
If F, G : A →B are concrete functors, then the following are equivalent:
(1) F ≤G (5.18),
(2) there exists a (necessarily unique) concrete natural transformation τ : F →G.

6.25 DEFINITION
Let A and B be concrete categories over X. If G : A →B and F : B →A are concrete
functors over X, then the pair (F, G) is called a Galois correspondence (between A
and B over X) provided that F ◦G ≤idA and idB ≤G ◦F.
6.26 EXAMPLES
(1) Galois isomorphisms: If K : A →B is a concrete isomorphism, then (K−1, K)
is a Galois correspondence, called a Galois isomorphism.
18th January 2005

90
Categories, Functors, and Natural Transformations
[Chap. I
(2) Galois reﬂections and coreﬂections:
(a) If E : A →B is a concrete embedding and R : B →A is a concrete reﬂector,
then (R, E) is a Galois correspondence, called a Galois reﬂection.
(b) If E : A →B is a concrete embedding and C : B →A is a concrete coreﬂector,
then (E, C) is a Galois correspondence, called a Galois coreﬂection.
(3) Galois correspondences for constructs:
(a) Let U : Top →Set be the forgetful functor, let D : Set →Top be the discrete
functor, and let N : Set →Top be the indiscrete functor [3.29(5) and (6)].
Then (D, U) and (U, N) are both Galois correspondences.
(b) Let G : Top →Rel be the concrete functor (over Set) deﬁned on objects by:
(X, τ) 7→(X, ρτ), where xρτy if and only if x is in the τ-closure of {y}. Let
F : Rel →Top be the concrete functor deﬁned on objects by (X, ρ) 7→(X, τρ),
where A is τρ-closed if and only if A is a lower-set for ρ [i.e., a ∈A and
a′ρa ⇒a′ ∈A]. Then (F, G) is a Galois correspondence.
(c) If U : Unif →Top is the forgetful functor that assigns to any uniform space
the completely regular space underlying it, and F : Top →Unif is the ﬁne
functor that assigns to any topological space the ﬁne uniform space determined
by it, then (F, U) is a Galois correspondence.
(4) Galois connections:
(a) Recall that when X = 1, then concrete categories over X are essentially pre-
ordered classes and concrete functors between them are essentially order-preserv-
ing functions. Historically, a Galois connection between preordered classes A and
B has been deﬁned as a pair (f, g) of order-preserving34 functions g : A →B
and f : B →A with the property that for all a ∈A and b ∈B, f(b) ≤a if and
only if b ≤g(a). Notice that the latter condition is equivalent to: (f ◦g)(a) ≤a
for all a ∈A and b ≤(g ◦f)(b) for all b ∈B. Thus Galois connections are just
Galois correspondences with the base category X = 1. (See also Proposition
6.28 below.)
(b) Important special cases of Galois connections arise from (binary) relations:
Let ρ be a relation from the set X to the set Y , i.e., ρ ⊆X × Y . Denote by A
the poset of all subsets of X ordered by inverse inclusion and by B the poset of
all subsets of Y ordered by inclusion. Then the following maps yield a Galois
connection:
g : A →B,
deﬁned by
g(S) = {y ∈Y | sρy for all s ∈S}
f : B →A,
deﬁned by
f(T) = {x ∈X | xρt for all t ∈T}.
34Many
of
the
earlier
deﬁnitions
of
Galois
connections
deal
only
with
the
case
of
par-
tially
ordered
sets
and
they
usually
adopt
a
“contravariant”
formulation
as
follows:
If
g : A →B and f : B →A are order-reversing functions between posets, then (f, g) is a (con-
travariant) Galois connection provided that a ≤f(b) if and only if b ≤g(a). Notice that this is the
same as the formulation above if the order on A is reversed. The order-preserving version corresponds
to what are frequently called residuated-residual pairs or (sometimes) Galois connections of mixed
type.
18th January 2005

Sec. 6]
Natural transformations
91
6.27 PROPOSITION
(1) If (F, G) is a Galois correspondence between A and B and ( ˆF, ˆG) is a Galois corre-
spondence between B and C, then (F ◦ˆF, ˆG◦G) is a Galois correspondence between
A and C [sometimes denoted by ( ˆF, ˆG) ◦(F, G)].
(2) If (F, G) is a Galois correspondence between A and B over X, then (Gop, F op) is a
Galois correspondence between Bop and Aop over Xop.
Proof:
(1). For any A-object A we obtain ˆF ˆG(GA) ≤GA. Application of the functor F yields
F ˆF ˆGG(A) ≤FGA. Since FGA ≤A, transitivity of ≤yields (F ˆF)( ˆGG)(A) ≤A.
Likewise B ≤( ˆGG)(F ˆF)B for each B-object B.
(2). Obvious.

6.28 PROPOSITION
Let G : A →B and F : B →A be concrete functors over X. Then the following are
equivalent:
(1) (F, G) is a Galois correspondence,
(2) an X-morphism |F(B)|
f
−→|A| is an A-morphism if and only if |B|
f
−→|G(A)| is a
B-morphism.
Proof:
(1) ⇒(2).
If |FB|
f
−→|A| is an A-morphism, then by applying G and using
idB ≤G ◦F, one has that |B|
id|B|
−−−→|(G ◦F)(B)|
f
−→|GA| is a B-morphism.
Conversely, the facts that |B|
f
−→|GA| is a B-morphism and that F ◦G ≤idA im-
ply that |FB|
f
−→|(F ◦G)(A)|
id|A|
−−−→|A| is an A-morphism.
(2) ⇒(1).
Since each |FB|
id|F B|
−−−−→|FB| is an A-morphism, from (2) we see that
B ≤(G ◦F)(B) for each B-object B. Similarly, (F ◦G)(A) ≤A for each A-object A.
Thus (F, G) is a Galois correspondence.

6.29 PROPOSITION
The functors in a Galois correspondence between amnestic concrete categories determine
each other uniquely; in particular, if (F, G) and (F ′, G) are such Galois correspondences,
then F = F ′.
Proof: Let B be a B-object. If (F, G) is a Galois correspondence, B ≤(G ◦F)(B),
so that by the above proposition, if (F ′, G) is a Galois correspondence, F ′B ≤FB.
Similarly, FB ≤F ′B, so that by amnesticity, F = F ′. [Dually, it can be shown that if
each of (F, G) and (F, G′) are Galois correspondences, then G = G′.]

18th January 2005

92
Categories, Functors, and Natural Transformations
[Chap. I
6.30 PROPOSITION
If (F, G) is a Galois correspondence between amnestic concrete categories, then G ◦F ◦
G = G and F ◦G ◦F = F.
Proof: Clearly, idB ≤G ◦F implies F = F ◦idB ≤F ◦G ◦F. Similarly, F ◦G ≤idA
implies F ◦G ◦F ≤idA ◦F = F, so that by amnesticity F = F ◦G ◦F. The other
equation holds by duality.

6.31 COROLLARY
If (F, G) is a Galois correspondence between amnestic concrete categories, then (G◦F)◦
(G ◦F) = G ◦F and (F ◦G) ◦(F ◦G) = F ◦G.

6.32 COROLLARY
Let G : A →B and F : B →A be concrete functors between amnestic concrete cat-
egories such that (F, G) is a Galois correspondence, and let A∗be the full subcategory
of A with objects: {F(B) | B ∈Ob(B)} and B∗the full subcategory of B with objects:
{G(A) | A ∈Ob(A)}. Then
(1) A∗is coreﬂective in A, and A ∈Ob(A∗) if and only if A = (F ◦G)(A).
(2) B∗is reﬂective in B, and B ∈Ob(B∗) if and only if B = (G ◦F)(B).
(3) The restrictions of G and F to A∗and B∗are concrete isomorphisms, G∗: A∗→B∗
and F ∗: B∗→A∗, that are inverse to each other.

6.33 EXAMPLES
(1) If (R, E) is a Galois reﬂection between amnestic concrete categories with E : A →B,
then A∗= B∗= A. Similarly for Galois coreﬂections.
(2) For the Galois correspondence (D, U) of Example 6.26(3)(a) Set∗= Set and Top∗
is the full subcategory of discrete spaces.
(3) For the Galois correspondence (U, N) of Example 6.26(3)(a) Set∗= Set and Top∗
is the full subcategory of indiscrete spaces.
(4) For the Galois correspondence (F, G) of Example 6.26(3)(b) Rel∗= Prost and Top∗
consists of those topological spaces for which arbitrary intersections of open sets are
open.
(5) For the Galois correspondence (F, U) of Example 6.26(3)(c) Top∗is the full subcat-
egory of completely regular (= uniformizable) spaces, and Unif∗is the full subcat-
egory of ﬁne uniform spaces.
6.34 PROPOSITION
Let G : A →B and F : B →A be concrete functors between amnestic concrete cate-
gories such that (F, G) is a Galois correspondence. Then the following are equivalent:
(1) G is a full embedding,
18th January 2005

Sec. 6]
Natural transformations
93
(2) G is full,
(3) G is injective on objects,
(4) F is surjective on objects,
(5) F ◦G = idA,
(6) up to Galois isomorphism, (F, G) is a Galois reﬂection; i.e., there exists a Galois re-
ﬂection (R, E) and a Galois isomorphism (K−1, K) with (F, G) = (R, E)◦(K−1, K).
Proof:
(1) ⇒(2). Trivial.
(2) ⇒(3). If GA = GA′, then by fullness, A ≤A′ and A′ ≤A. Hence, by amnesticity,
A = A′.
(3) ⇒(4). By Proposition 6.30 for any A-object A, we have (G ◦F ◦G)(A) = G(A), so
that by (3), F(GA) = A.
(4) ⇒(5). For any A-object A there exists, by (4), a B-object B with F(B) = A.
Hence, by Proposition 6.30, (F ◦G)(A) = (F ◦G ◦F)(B) = F(B) = A.
(5) ⇒(6).
Let B∗be the full subcategory of B with objects {G(A) | A ∈Ob(A)};
let K be the codomain restriction of G, i.e., K : A →B∗; let E : B∗,→B be the
inclusion; and let R = K ◦F. Then by Corollary 6.32 K−1 = F ◦E and (K−1, K) is
a Galois isomorphism. Clearly, G = E◦K and F = K−1◦R. It remains to be shown that
(R, E) is a Galois reﬂection; i.e., that R is a concrete reﬂector. For each B-object B,
B ≤(G ◦F)(B). But (G ◦F)(B) = R(B). Thus |B|
id|B|
−−−→|R(B)| is a B-morphism so
that the reﬂection arrows are identity-carried.
(6) ⇒(1). By amnesticity the embedding E must be full (5.24). Thus G = E ◦K is the
composition of full embeddings and so must be one too.

6.35 DECOMPOSITION THEOREM FOR GALOIS
CORRESPONDENCES
Every Galois correspondence (F, G) between amnestic concrete categories is a composite
(F, G) = (R, EB) ◦(K−1, K) ◦(EA, C) of
(1) a Galois coreﬂection, (EA, C),
(2) a Galois isomorphism, (K−1, K) and
(3) a Galois reﬂection, (R, EB).
A
G
/
C

B
A∗
K
/ B∗
EB
O
A
B
F
o
R

A∗
EA
O
B∗
K−1
o
18th January 2005

94
Categories, Functors, and Natural Transformations
[Chap. I
Proof: If G : A →B and F : B →A are concrete functors such that (F, G) is a Galois
correspondence, then let A∗and B∗be the full subcategories of A and B determined by
the images of F and G, respectively (Corollary 6.32). Let C : A →A∗and R : B →B∗
be the codomain restrictions of F ◦G and G ◦F, respectively, let K : A∗→B∗and
K−1 : B∗→A∗be the corresponding restrictions of G and F, and let EA : A∗→A
and EB : B∗→B be the full embedding of these subcategories. The result then follows
immediately from Proposition 6.34 and its dual.

6.36 REMARK
Notice that the above theorem actually gives a characterization of Galois correspondences
between amnestic concrete categories since the composition of Galois correspondences is
a Galois correspondence.
Suggestions for Further Reading
Eilenberg, S., and S. Mac Lane. General theory of natural equivalences. Trans. Amer.
Math. Soc. 58 (1945): 231–294.
Yoneda, N. On the homology theory of modules. J. Fac. Sci. Tokyo 7 (1954): 193–227.
Herrlich, H., and M. Huˇsek. Galois connections categorically. J. Pure Appl. Algebra
68 (1990): 165–180.
EXERCISES
6A. Composition of Natural Transformations
Let F, F ′ : A →B and G, G′ : B →C be functors and let F
τ−→F ′ and G
σ
−→G′ be
natural transformations. Show that
(a) σF ′ ◦Gτ = G′τ ◦σF. [This natural transformation is called the star product of τ
and σ and is denoted by G ◦F
σ∗τ
−−−→G′ ◦F ′.]
(b) σF = σ ∗idF and Gτ = idG ∗τ.
(c) idG ∗idF = idG◦F .
(d) If H, H′ : C →D are functors and H
δ−→H′ is a natural transformation, then
δ ∗(σ ∗τ) = (δ ∗σ) ∗τ.
(e) If A
F ′′
−−→B and B
G′′
−−→C are functors and F ′
τ ′
−−→F ′′ and G′
σ′
−−→G′′ are natural
transformations, then
(σ′ ◦σ) ∗(τ ′ ◦τ) = (σ′ ∗τ ′) ◦(σ ∗τ).
18th January 2005

Sec. 6]
Natural transformations
95
(f) If C
H
−−→D is a functor, then (Hσ)F = H(σF).
(g) If C
H
−−→D is a functor, then (H ◦G)τ = H(Gτ).
(h) If D
K
−−→A is a functor, then σ(F ◦K) = (σF)K.
(i) If B
G′′
−−→C and C
H
−−→D are functors and G′
σ′
−−→G′′ is a natural transformation,
then H(σ′ ◦σ)F = (Hσ′F) ◦(HσF).
6B. Counting Natural Transformations
(a) Show that there is precisely one natural transformation idSet →idSet.
(b) Let M be a monoid considered as a category. Show that an element x of M yields
a natural transformation idM →idM if and only if x ◦y = y ◦x for each y ∈M.
(c) How many natural transformations are there from S2 to P? Cf. 3.20(8) and 3.20(10).
[Hint: Observe that S2 is naturally isomorphic to hom(2, −) and use Corollary 6.19.]
6C. Functor-Structured Categories
Let S, T : X →Set be functors. Show that Spa(S) and Spa(T) are concretely isomor-
phic if and only if S and T are naturally isomorphic.
6D. Functors Naturally Isomorphic to idA
Show that
(a) If a functor A
F
−−→A is naturally isomorphic to idA, then F is an equivalence.
(b) A functor Set
F
−−→Set is naturally isomorphic to idSet if and only if F is an equiv-
alence.
(c) If G is a group considered as a category, then a functor G
F
−−→G (i.e., a group
endomorphism F) is naturally isomorphic to idG if and only if F is an inner auto-
morphism of G.
(d) If A is a discrete category, then idA is the only functor from A to A that is naturally
isomorphic to idA.
6E. Ban
O
−−→Set and Ban
U
−−→Set
Show that O is representable, but U is not. Cf. 5.2(3).
6F. Representability of Power-Set Functors
Show that the contravariant power-set functor Setop
Q
−−→Set is representable (by any
two-element set), but that the covariant power-set functor Set
P
−−→Set is not repre-
sentable.
6G. Maps Induce Galois Connections
Let A
f
−→B be a map.
Consider the functions PA
Pf
−−→PB and PB
Qf
−−−→PA
[cf. 3.20(8) and (9)] as concrete functors between the power-sets PA and PB, ordered
by inclusion, and show that (Pf, Qf) is a Galois connection.
18th January 2005

96
Categories, Functors, and Natural Transformations
[Chap. I
6H. Legitimate Functor Quasicategories.
(a) Prove that for each small category A all quasicategories [A, B] are legitimate.
(b) Prove that 1 and ∅are the only categories B with the property that each quasicat-
egory [A, B] is legitimate.
(c) Prove that [Set, Set] is illegitimate.
6I. Total Categories
A category A is called total provided that the natural embedding E : A →[Aop, Set]
of Theorem 6.20 maps it onto a reﬂective subcategory E[A] of [Aop, Set].
(a) Prove that Set is total. [Hint: A reﬂection of F : Setop →Set is given by
τ : F →hom(−, F(1)), where 1 = {0} and τA maps a ∈F(A) to the function
τA(a) : A →F(1) given by t 7→Ff(a) for f : 1 →A, with f(0) = t.]
(b) Prove that Spa(T) is total for each T : Set →Set. [Hint: Analogous to (a) with
(1, ∅) substituted for 1.]
(c) Prove that if A is a total category then every full reﬂective subcategory of A is total.
(d) Prove that a category isomorphic to a total category is total. Conclude that Pos,
Vec, Sgr, and Alg(Ω) are total categories. [Hint: Combine 6I(c) and 4K.]
6J. Yoneda Embedding
Show that the bijective function Y of Corollary 6.19 is “natural in the variables A and
F”, i.e., deﬁne functors H, G : [A, Set] × A →Set on objects by H(F, A) = F(A) and
G(F, A) = [hom(A, −), F] such that Y becomes a natural isomorphism from G to H.
6K. Representable Functors
If F : A →Set is a functor, then a universal point of F is a pair (A, a) consisting
of an A-object A and a point a ∈FA with the following (universal) property: for each
A-object B and each point b ∈FB there exists a unique A-morphism f : A →B with
Ff(a) = b.
(a) Prove that a functor is representable if and only if it has a universal point.
(b) Find a universal point of each of the forgetful functors of Vec, Top, and Pos. Show
that the forgetful functor of Σ-Seq has no universal point.
(c) Find a universal point of Q : Setop →Set.
(d) For which sets M does the functor −× M : Set →Set have a universal point?
(e) Does P : Set →Set have a universal point?
6L. “Naturally Isomorphic” is an Equivalence Relation
Let F, G, and H be functors from A to B and let F
σ
−→G and G
τ−→H be natural
isomorphisms. Show that:
(a) σ−1 = (σ−1
A ) : G →F is a natural isomorphism.
18th January 2005

Sec. 6]
Natural transformations
97
(b) τ ◦σ : F →H is a natural isomorphism.
6M. Naturally Isomorphic Hom-Functors
Let τ : hom(A, −) →hom(B, −) be a natural isomorphism. Show that τA(idA) : B →A
is an isomorphism.
18th January 2005


Chapter II
OBJECTS AND MORPHISMS
18th January 2005
99


7 Objects and morphisms in abstract cat-
egories
INITIAL AND TERMINAL OBJECTS
7.1 DEFINITION
An object A is said to be an initial object provided that for each object B there is
exactly one morphism from A to B.
7.2 EXAMPLES
(1) The empty set ∅is the unique initial object for Set. Likewise, the empty partially
ordered set (resp. the empty topological space) is the unique initial object for Pos
(resp. Top).
(2) Every one-element group is an initial object for Grp; likewise for Vec.
(3) The empty category (i.e., the category with no objects and no morphisms) is the
only initial object for Cat. It is also the only initial object for the quasicategory
CAT, and, considered as a concrete category over X (via the inclusion), is the only
initial object in CAT(X).
(4) For any category of the form Spa(T) (Deﬁnition 5.40) an object (X, α) is initial if
and only if X is an initial object in X and α = ∅.
(5) For any category of the form Alg(Ω) [Example 3.3(2)] let Ωn = {i ∈I | ni = n}. If
Ω0 = ∅, then the unique initial object is the empty algebra. If Ω0 ̸= ∅, then an initial
object in Alg(Ω) is the term algebra. Its members are terms, deﬁned inductively
as follows:
(a) each element of Ω0 is a term;
(b) if i ∈Ωn and if ω1, ω2, . . . , ωn are terms, then iω1ω2 . . . ωn is a term; and
(c) all terms are obtained by iterative application of (a) and (b) above.
Each term algebra operation is concatenation via rule (b) resp. (a).
(6) The ring of integers is an initial object in the construct Rng of rings with unit and
unitary ring homomorphisms. For a ring R with unit e, the unique homomorphism
f : Z →R is deﬁned by f(n) = e + e + · · · + e [n summands], and f(−n) = −f(n).
(7) The two-element boolean algebras are initial objects in Boo.
(8) Σ-Seq has no initial object.
(9) In a poset considered as a category, an object is an initial object if and only if it is
a smallest element.
101

102
Objects and Morphisms
[Chap. II
7.3 PROPOSITION
Initial objects are essentially unique, i.e.,
(1) if A and B are initial objects, then A and B are isomorphic,
(2) if A is an initial object, then so is every object that is isomorphic to A.
Proof:
(1). By deﬁnition, there are morphisms A
k
−→B and B
h
−→A. Furthermore, h◦k = idA
since idA is the unique morphism from A to A. Analogously, k ◦h = idB. Thus k is
an isomorphism.
(2). Let k : A′ →A be an isomorphism. For each object B there is a unique morphism
f : A →B. Then f ◦k : A′ →B is a morphism from A′ to B. It is unique since if
g : A′ →B, then g ◦k−1 : A →B. So g ◦k−1 must be f; i.e., g must be f ◦k.

Next we deﬁne terminal objects. They are dual to initial objects; i.e., A is terminal in
A if and only if A is initial in Aop.
7.4 DEFINITION
An object A is called a terminal object provided that for each object B there is exactly
one morphism from B to A.
A terminal object
7.5 EXAMPLES
(1) Every singleton set is a terminal object for Set.
(2) Frequently for constructs, there is only one structure on the singleton set {0}, and
in these cases the corresponding object is a terminal object. This is the case, for
example, in Vec, Pos, Grp, Top, and Catof.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
103
(3) In Rel there are two structures on the set {0}. Of these, the pair ({0}, {(0, 0)}) is
a terminal object.
(4) For any category of the form Spa(T) (Deﬁnition 5.40) an object (X, α) is terminal
if and only if X is a terminal object object in X and α = T(X).
(5) In Σ-Seq the acceptor with exactly one state that is both an initial and a ﬁnal state
is a terminal object.
(6) In a poset considered as a category an object is a terminal object if and only if it is
a largest element.
(7) In CAT(X) an object (A, U) is terminal if and only if U : A →X is an isomorphism.
In particular, (X, idX) is a terminal object.
7.6 PROPOSITION
Terminal objects are essentially unique.
D
ZERO OBJECTS
7.7 DEFINITION
An object A is called a zero object provided that it is both an initial object and a
terminal object.
7.8 REMARK
Notice that since “terminal object” is dual to “initial object”, the notion of zero object
is self-dual; i.e., A is a zero object in A if and only if it is a zero object in Aop.
7.9 EXAMPLES
(1) Set and Top don’t have zero objects, but pSet and pTop (cf. Exercise 3B) do have
zero objects — the “singletons”.
(2) Vec, Ban, Banb, TopVec, and Mon have zero objects, but Sgr doesn’t.
(3) Ab and Grp have zero objects, but Rng doesn’t.
(4) Pos and Cat don’t have zero objects.
SEPARATORS AND COSEPARATORS
7.10 DEFINITION
An object S is called a separator provided that whenever A
f /
g / B are distinct mor-
phisms, there exists a morphism S
h
−→A such that
S
h
−→A
f
−→B ̸= S
h
−→A
g
−→B.
18th January 2005

104
Objects and Morphisms
[Chap. II
7.11 EXAMPLES
(1) In Set the separators are precisely the nonempty sets.
(2) In Top (resp. Pos) the separators are precisely the nonempty spaces (resp. nonempty
posets).
(3) In Vec the separators are precisely the nonzero vector spaces.
(4) The group of integers Z under addition is a separator for Grp and for Ab. The
monoid of natural numbers N under addition is a separator for Mon.
(5) (X, ρ) is a separator in Rel if and only if X ̸= ∅= ρ.
7.12 PROPOSITION
An object S of a category A is a separator if and only if hom(S, −) : A →Set is a
faithful functor.
Proof: The faithfulness of hom(S, −) means, by deﬁnition, that given distinct A-mor-
phisms A
f /
g / B , their hom(S, −) images are distinct; i.e., they diﬀer in at least one
element h ∈hom(S, A). In other words, f ◦h ̸= g ◦h, and this is precisely the deﬁnition
of separator.

7.13 REMARK
As we will see later, the existence of a separator in A often serves as a useful “smallness”
condition for A that guarantees that there are not “too many” A-objects. A slightly
weaker condition that serves the same purpose is the existence of a separating set.
7.14 DEFINITION
A set T of objects is called a separating set provided that for any pair A
f /
g / B of
distinct morphisms, there exists a morphism S
h
−→A with domain S a member of T
such that f ◦h ̸= g ◦h.
7.15 EXAMPLES
(1) The empty set is a separating set for A if and only if A is thin.
(2) A one-element set {S} is a separating set if and only if S is a separator.
(3) Set × Set has no separators, but the set consisting of the two objects (∅, {0}) and
({0}, ∅) is a separating set.
(4) Aut has no separator, but {A1, A2} is a separating set, where A1 has states {q0, q1},
with q0 initial, no input, and output set {0, 1, 2}, with y(q0) = 0 and y(q1) = 1;
and A2 has states {qi | i ∈N}, with q0 initial, one input σ, with δ(σ, qi) = qi+1, and
y(qi) = i.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
105
Next we introduce coseparators — the dual concept to separators.
From the list of
examples one can discern that in familiar categories coseparators are more rare than
separators.
7.16 DEFINITION
An object C is a coseparator provided that whenever B
f /
g / A are distinct morphisms,
there exists a morphism A
h
−→C such that
B
f
−→A
h
−→C ̸= B
g
−→A
h
−→C.
7.17 PROPOSITION
C is a coseparator for A if and only if hom(−, C) : Aop →Set is faithful.
D
7.18 EXAMPLES
(1) In Set the coseparators are precisely those sets that have at least two elements. [If
C has at least two elements and if B
f /
g / A diﬀer on b ∈B, let h : A →C be any
function with h(f(b)) ̸= h(g(b)).]
(2) In Vec the coseparators are precisely the nonzero vector spaces.
(3) The coseparators in Pos are precisely the nondiscrete posets. To see this, suppose
that C has elements x < y and B
f /
g / A diﬀer on b ∈B, say, f(b) ̸≤g(b). Deﬁne
h : A →C by
h(a) =
(
x
if
a ≤g(b)
y
if
a ̸≤g(b).
(4) The coseparators in Top are precisely the non-T0-spaces. [If C is a non-T0-space,
then C has an indiscrete subspace with at least two points. Using this fact, proceed
as in (1) above.]
(5) The coseparators in Top0 are precisely the non-T1-spaces. To see this, suppose that
C is a T0-space that is not T1. Then there exist elements x and y with y ∈cℓ{x}
and x ̸∈cℓ{y}. If B
f /
g / A diﬀer on b ∈B, then there exists an open set W in A
that contains precisely one of f(b) and g(b). Deﬁne h : A →C by
h(a) =
(
x
if
a ∈W
y
if
a ̸∈W.
(6) In a preordered class considered as a category, every element (= object) is simulta-
neously a separator and a coseparator.
18th January 2005

106
Objects and Morphisms
[Chap. II
(7) Any two-element boolean algebra is a coseparator for Boo. The closed unit interval
is a coseparator for Tych. The Banach space of complex numbers is a cosepara-
tor for both Banb and Ban (Hahn-Banach Theorem). The circle group R/Z is a
coseparator for Ab and, considered as a compact group, it is a coseparator for the
category of locally compact abelian groups. Set is a coseparator for the quasicate-
gory CAT. [If F, G : B →A, with F ̸= G, then hom(A, −) ◦F ̸= hom(A, −) ◦G
for some A-object A.]
(8) None of the categories Rng, Grp, Sgr, or Haus has a coseparator. (This follows for
rings from the existence of arbitrarily large ﬁelds, for groups and semigroups from
the existence of arbitrarily large simple groups, and for Hausdorﬀspaces from the
fact that for each Hausdorﬀspace X there exists a Hausdorﬀspace Y with more
than one point such that every continuous map from Y to X is constant.) Indeed,
none of these categories even has a coseparating set.
SECTIONS AND RETRACTIONS
7.19 DEFINITION
A morphism A
f
−→B is called a section provided that there exists some morphism
B
g
−→A such that g ◦f = idA (i.e., provided that f has a “left-inverse”).
Sections
7.20 EXAMPLES
(1) A morphism in Set is a section if and only if it is an injective function and is not
the empty function from the empty set to a nonempty set.
(2) In Vec the sections are exactly the injective linear transformations.
(3) In Ab a homomorphism f : A →B is a section if and only if it is injective and f[A]
is a direct summand of B.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
107
(4) If X and Y are sets (resp. topological spaces) and if a ∈Y, then the function
f : X →X × Y deﬁned by f(x) = (x, a) is a section in Set (resp. Top). [Note that
the image of f is a “cross-section” of the product, which is in one-to-one correspon-
dence (resp. homeomorphic) to X. This motivates our use of the word “section” in
Deﬁnition 7.19.]
(5) The sections described in (4) are just special cases of the following situation: Let
f : X →Y be a morphism in Set (resp. Top, Grp, R−Mod). Consider the graph
of f as a subset (resp. subspace, subgroup, submodule) of the product X ×Y . Then
the embedding of X into X ×Y deﬁned by x 7→(x, f(x)) is a section in the category
in question.
(6) If T is a terminal object, then every morphism with domain T is a section.
(7) In a thin category, sections are precisely the isomorphisms.
7.21 PROPOSITION
(1) If A
f
−→B and B
g
−→C are sections, then A
f
−→B
g
−→C is a section.
(2) If A
f
−→B
g
−→C is a section, then f is a section.
Proof:
(1). Given h with h ◦f = idA and k with k ◦g = idB, then (h ◦k) ◦(g ◦f) = idA.
(2). Given h with h ◦(g ◦f) = idA, we have (h ◦g) ◦f = idA.

7.22 PROPOSITION
Every functor preserves sections (i.e., if F : A →B is a functor and f is an A-
section, then F(f) is a B-section).
Proof: If h ◦f = idA, then Fh ◦Ff = F(h ◦f) = F(idA) = idFA.

7.23 PROPOSITION
Every full, faithful functor reﬂects sections (i.e., if F : A →B is full and faithful and
F(f) is a B-section, then f is an A-section).
Proof: Given h : FB →FA with h ◦F(f) = idFA, by fullness there is k : B →A with
h = F(k). Thus F(k ◦f) = idFA = F(idA), so that by faithfulness k ◦f = idA.

The dual concept for “section” is “retraction”. The name comes from topology, where a
subspace Y of a space X is called a retract if there is a continuous function f : X →Y
with f(y) = y for each y ∈Y ; so that if e : Y →X is the inclusion, f ◦e = idY .
7.24 DEFINITION
A morphism A
f
−→B is called a retraction provided that there exists some morphism
B
g
−→A such that f ◦g = idB (i.e., provided that f has a “right-inverse”). If there exists
such a retraction, then B will be called a retract of A.
18th January 2005

108
Objects and Morphisms
[Chap. II
7.25 EXAMPLES
(1) The retractions in Set are precisely the surjective functions. [Notice that this state-
ment is equivalent to the Axiom of Choice for sets.]
(2) In Vec the retractions are exactly the surjective linear transformations.
(3) A morphism f in Top is a retraction if and only if there is a topological retraction
r and a homeomorphism h such that f = h ◦r. In other words, the retractions in
Top are (up to homeomorphism) exactly the topological retractions.
(4) In any thin category the concepts “retraction”, “section”, and “isomorphism” agree.
(5) The usual underlying functor U : Top →Set is a retraction in the quasicategory
CAT. It has precisely two right inverses, the discrete functor and the indiscrete
functor.
(6) In Ab retractions are (up to isomorphism) the projection homomorphisms, i.e.,
f : A →B is a retraction if and only if there is an abelian group C such that
A
f
−→B = A
h
−→B × C
p
−→B, where h is an isomorphism and p is a projection.
7.26 PROPOSITION
For a morphism f the following are equivalent:
(1) f is an isomorphism,
(2) f is a section and a retraction.
Proof: This follows immediately from Proposition 3.10.

7.27 PROPOSITION
(1) If A
f
−→B and B
g
−→C are retractions, then A
g◦f
−−−→C is a retraction.
(2) If A
g◦f
−−−→C is a retraction, then g is a retraction.
D
7.28 PROPOSITION
Every functor preserves retractions.
D
7.29 PROPOSITION
Every full, faithful functor reﬂects retractions.
D
7.30 REMARKS
(1) Notice that by combining Proposition 7.23 and its dual (7.29) we get the result
(already proved [3.32]) that every full, faithful functor reﬂects isomorphisms.
(2) Notice also that we did not need to deﬁne “sect” as the dual of retract, since “retract”
is self-dual.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
109
7.31 PROPOSITION
An isomorphism-closed full reﬂective subcategory A of a category B contains with any
object A each retract of A in B.
Proof: Let A
r
−→B be a B-retraction of an A-object A. Then there exist a section
s : B →A such that r ◦s = idB and an A-reﬂection B
u
−→AB. By the deﬁnition of
reﬂection there is an A-morphism AB
t−→A such that s = t◦u. Thus (r ◦t)◦u = r ◦s =
idB. Hence u ◦(r ◦t) ◦u = u = idAB ◦u, so that by uniqueness u ◦(r ◦t) = idAB. Thus
u is an isomorphism, and since A is isomorphism-closed in B, B must belong to A.

MONOMORPHISMS AND EPIMORPHISMS
7.32 DEFINITION
A morphism A
f
−→B is said to be a monomorphism provided that for all pairs
C
h /
k
/ A of morphisms such that f ◦h = f ◦k, it follows that h = k (i.e., f is “left-
cancellable” with respect to composition).
7.33 EXAMPLES
(1) A function is a monomorphism in Set if and only if it is injective. [To show that
a monomorphism f : A →B must be injective, take a, b ∈A and consider the
constant functions ˆa, ˆb : {p} →A.]
(2) For any morphism f in Vec, the following are equivalent:
(a) f is a monomorphism,
(b) f is a section,
(c) f is injective.
(3) In many constructs, monomorphisms are precisely those morphisms that have in-
jective underlying functions; e.g., this is the case for Pos, Top, Grp, Ab, Sgr,
Rng, Rel, and Alg(Ω). In fact this is true for any construct with a representable
underlying functor (7.37 and 7.38).
(4) In the construct {σ}-Seq (whose forgetful functor is not representable), monomor-
phisms are precisely the injective simulations. [If f : A →B is not injective, then
there exist distinct states x1 and x2 with f(x1) = f(x2), and there exist n, m, and k
such that σn+kx1 = σkx1 and σm+kx2 = σkx2. Let C be the acceptor obtained from
A by adding k+nm nonﬁnal states q1, . . . , qk+nm such that σqi = qi+1 for i < k+nm
and σqk+nm = qk+1. For i = 1, 2, there is a unique simulation gi : C →A that is
the inclusion on A-states and such that gi(q1) = xi. Then f ◦g1 = f ◦g2.]
(5) In the category DivAb of divisible abelian groups and group homomorphisms there
are monomorphisms that have non-injective underlying functions.
Consider the
natural quotient Q →Q/Z, where Q is the additive group of rational numbers and
Z is the additive group of integers.
18th January 2005

110
Objects and Morphisms
[Chap. II
(6) There is a monomorphism X
f
−→Y in Top such that the homotopy class X
˜f
−→Y
of f is not a monomorphism in the category hTop, whose objects are topological
spaces and whose morphisms are homotopy equivalence classes of continuous maps.
[Consider the usual embedding of the bounding circle of a disc into the disc.]
(7) The monomorphisms in CAT are precisely the embedding functors.
(8) In the category of all ﬁelds35 and homomorphisms between them, every morphism
is a monomorphism.
(9) In any thin category every morphism is a monomorphism.
7.34 PROPOSITION
(1) If A
f
−→B and B
g
−→C are monomorphisms, then A
f
−→B
g
−→C is a monomor-
phism.
(2) If A
f
−→B
g
−→C is a monomorphism, then f is a monomorphism.
Proof: Let h, k : D →A.
(1). (g ◦f) ◦h = (g ◦f) ◦k ⇒g ◦(f ◦h) = g ◦(f ◦k) ⇒f ◦h = f ◦k ⇒h = k.
(2). f ◦h = f ◦k ⇒(g ◦f) ◦h = (g ◦f) ◦k ⇒h = k.

7.35 PROPOSITION
Every section is a monomorphism.
Proof: Suppose that g ◦f = id and f ◦h = f ◦k. Then h = g ◦f ◦h = g ◦f ◦k = k.
7.36 PROPOSITION
For any morphism f the following are equivalent:
(1) f is an isomorphism,
(2) f is a retraction and a monomorphism.
Proof: (1) ⇒(2) is clear from Propositions 7.26 and 7.35. To show that (2) ⇒(1), let
f be a monomorphism with f ◦g = id. Then f ◦(g ◦f) = (f ◦g) ◦f = id ◦f = f ◦id, so
that by left-cancellation, g ◦f = id. Hence f is an isomorphism.

7.37 PROPOSITION
(1) Every representable functor preserves monomorphisms, i.e., if F : A →Set is
representable and if f is a monomorphism in A, then F(f) is a monomorphism in
Set (i.e., an injective function).
(2) Every faithful functor reﬂects monomorphisms, i.e., if F : A →B is faithful
and F(f) is a B-monomorphism, then f is an A-monomorphism.
35Recall that in each ﬁeld 0 ̸= 1.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
111
Proof:
(1). Simple computations show that
(a) hom-functors hom(A, −) : A →Set preserve monomorphisms,
(b) whenever functors F and G are naturally isomorphic and F preserves mono-
morphisms, then so does G.
(2). Suppose that f ◦h = f ◦k. Then Ff ◦Fh = Ff ◦Fk implies that Fh = Fk, so
that by faithfulness h = k.

7.38 COROLLARY
In any construct all morphisms with injective underlying functions are monomorphisms.
When the underlying functor is representable, the monomorphisms are precisely the mor-
phisms with injective underlying functions.

The categorical dual of “monomorphism” is “epimorphism”.
7.39 DEFINITION
A morphism A
f
−→B is said to be an epimorphism provided that for all pairs B
h /
k
/ C
of morphisms such that h ◦f = k ◦f, it follows that h = k (i.e., f is “right-cancellable”
with respect to composition).
7.40 EXAMPLES
(1) In both Set and Vec the following are equivalent for any morphism f:
(a) f is an epimorphism,
(b) f is a retraction,
(c) f is surjective.
[To show that an epimorphism A
f
−→B in Set is surjective, consider two functions
from B to {0, 1}, one of them mapping every point of B to 0 and the other mapping
precisely the points of f[A] to 0. To show that A
f
−→B in Vec is surjective, use the
above idea with the quotient B/f[A] replacing {0, 1}.]
(2) In a number of constructs the epimorphisms are precisely the morphisms with surjec-
tive underlying functions. This is the case, for instance, in Top, Rel, each Alg(Ω),
Lat, Σ-Seq, Pos, Ab, Grp, and HComp. [For Top, argue as in Set, where {0, 1}
is given the indiscrete topology; similarly for Rel. For Ab and HComp, argue as
in Vec.] However, this situation occurs less frequently than that of monomorphisms
being precisely those morphisms with injective underlying functions. In quite a few
familiar constructs, epimorphisms fail to be surjective (see below), and even when
they are surjective, the proof may be far from obvious; e.g., for Grp see Exercise
7H.
18th January 2005

112
Objects and Morphisms
[Chap. II
(3) In Haus the epimorphisms are precisely the continuous functions with dense images.
Also in Banb, and in Ban (with either of the two natural forgetful functors) [5.2(3)],
the epimorphisms are precisely the morphisms with dense images. In the category
of Hausdorﬀtopological groups there exist epimorphisms with non-dense images.
(4) In the category of torsion-free abelian groups, a morphism A
f
−→B is an epimor-
phism if and only if the factor group B/f[A] is a torsion group.
Thus, in this
category, the inclusion 2Z ,→Z is a non-surjective epimorphism.
(5) In Rng and Sgr there are epimorphisms that are not surjective; e.g., the usual
embedding Z
f
−→Q of the integers into the rationals is an epimorphism in Rng and
in Sgr. [If h and k are homomorphisms such that h ◦f = k ◦f and if n/m ∈Q,
then
h(n/m) = h(n) · h(1/m) · h(1) = k(n) · h(1/m) · k(1)
= k(n) · h(1/m) · k(m) · k(1/m) = k(n) · h(1/m) · h(m) · k(1/m)
= k(n) · h(1) · k(1/m) = k(n) · k(1) · k(1/m) = k(n/m).]
(6) In Cat there are epimorphisms that are not surjective. Consider the epimorphism
F : A →B, where A = •
g
−→•, B is the additive monoid of natural numbers, and
F is the unique functor from A and B with F(g) = 1.
(7) There is an epimorphism X
f
−→Y in Top such that the homotopy class X
˜f
−→Y
of f is not an epimorphism in the category hTop. Consider the covering projection
of the real line onto the circle, deﬁned by: x 7→eix.
(8) In a thin category, each morphism is an epimorphism.
7.41 PROPOSITION
(1) If A
f
−→B and B
g
−→C are epimorphisms, then A
f
−→B
g
−→C is an epimorphism.
(2) If A
f
−→B
g
−→C is an epimorphism, then g is an epimorphism.
D
7.42 PROPOSITION
Every retraction is an epimorphism.
D
7.43 PROPOSITION
For a morphism, f, the following are equivalent:
(1) f is an isomorphism.
(2) f is a section and an epimorphism.
D
7.44 PROPOSITION
Every faithful functor reﬂects epimorphisms.
D
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
113
7.45 COROLLARY
In any construct all morphisms with surjective underlying functions are epimorphisms. D
7.46 REMARK
Although faithful functors reﬂect epimorphisms and monomorphisms, they need not
preserve them (as the above examples show). In fact, even full embeddings may fail
to do so.36 For example, the full embedding E : Haus ,→Top doesn’t preserve epi-
morphisms [7.40(2) and (3)] and so the full embedding Eop : Hausop ,→Topop doesn’t
preserve monomorphisms. However, if such functors are also isomorphism-dense, then
they preserve monomorphisms and epimorphisms, as the following shows:
7.47 PROPOSITION
Every equivalence functor preserves and reﬂects each of the following: monomorphisms,
epimorphisms, sections, retractions, and isomorphisms.
Proof: By duality and Propositions 7.22, 7.23, and 7.37, we need only show preser-
vation of monomorphisms.
Let F : A →B be an equivalence, let A′
f
−→A be an
A-monomorphism, and let B
r /
s / FA′ be morphisms with Ff ◦r = Ff ◦s. Since F is
isomorphism-dense, there exists an A-object A′′ and a B-isomorphism FA′′
k
−→B. By
fullness there are A-morphisms A′′
r′ /
s′ / A′ with Fr′ = r ◦k and Fs′ = s ◦k. Thus
F(f ◦r′) = Ff ◦Fr′ = Ff ◦r ◦k = Ff ◦s ◦k = Ff ◦Fs′ = F(f ◦s′).
Faithfulness and the fact that f is a monomorphism imply that r′ = s′, from which it
follows readily that r = s.

7.48 REMARK
The above is typical of equivalences. They preserve and reﬂect virtually all properties
that are considered to be categorical. In fact, a reasonable way to deﬁne a “categorical
property” would be as “a property of categories that is preserved and reﬂected by all
equivalences”. This is why equivalent categories are considered to be almost as much
alike as isomorphic ones.
7.49 DEFINITION
(1) A morphism is called a bimorphism provided that it is simultaneously a monomor-
phism and an epimorphism.
(2) A category is called balanced provided that each of its bimorphisms is an isomor-
phism.
36However, we will see later [Proposition 18.6 and Example 19.12(1)] that embeddings of reﬂective
subcategories must preserve monomorphisms.
18th January 2005

114
Objects and Morphisms
[Chap. II
7.50 EXAMPLES
(1) Set, Vec, Grp, Ab, and HComp are balanced categories.
(2) Rel, Pos, Top, Mon, Sgr, Rng, Cat, Ban, and Banb are not balanced categories.
The inclusion Z ,→Q is a non-isomorphic bimorphism in Mon, Sgr, Rng, and Cat.
The function ℓ∞
f
−→c0,37 deﬁned by f(xn) = ( xn
n ), is a non-isomorphic bimorphism
in Ban and Banb.
REGULAR AND EXTREMAL MONOMORPHISMS
Originally it was believed that monomorphisms would constitute the correct categorical
abstraction of the notion “embeddings of substructures” that exists in various constructs.
However, in many instances the concept of monomorphism is too weak; e.g., in Top
monomorphisms are just injective continuous maps and thus need not be embeddings.
Below we introduce two stronger notions (and there are several others in current use
— see Exercises 7D and 14C) that more frequently correspond with embeddings in
categories. However, a satisfactory concept of “embeddings” seems to be possible only
in the setting of constructs (see 8.6).
7.51 DEFINITION
Let A
f /
g / B be a pair of morphisms. A morphism E
e
−→A is called an equalizer of
f and g provided that the following conditions hold:
(1) f ◦e = g ◦e,
(2) for any morphism e′ : E′ →A with f ◦e′ = g ◦e′, there exists a unique morphism
e : E′ →E such that e′ = e ◦e, i.e., such that the triangle
E′
e

e′
 A
A
A
A
A
A
A
E
e
/ A
f
/
g
/ B
commutes.
7.52 EXAMPLES
(1) Let A be one of the categories Set, Vec, Pos, Top, or Grp. If A
f /
g / B are A-
morphisms, and if E denotes the set {a ∈A | f(a) = g(a)} considered as a subset
(resp. linear subspace, subposet, subspace, subgroup) of A, then the inclusion from
E to A is an equalizer of f and g. [If E′
e′
−−→A is such that f ◦e′ = g ◦e′, then e is
the codomain restriction of e′.]
37ℓ∞(resp. c0) is the classical Banach space of all bounded sequences in the ﬁeld K (resp. all sequences
in K that converge to 0) with the sup-norm.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
115
(2) If A is the full subcategory of Top that consists of sequential spaces (resp. compactly
generated spaces) and if E (as in (1)) is supplied with the coarsest sequential (resp.
compactly generated) topology for which the inclusion E
e
−→A is continuous, then
e is an equalizer of f and g in A.
7.53 PROPOSITION
Equalizers are essentially unique; i.e., given A
f /
g / B in a category, then the following
hold:
(1) if each of E
e
−→A and E′
e′
−−→A is an equalizer of f and g, then there is an
isomorphism k : E′ →E with e′ = e ◦k,
(2) if E
e
−→A is an equalizer of f and g, and if E′
k
−→E is an isomorphism, then
E′
e◦k
−−−→A is also an equalizer of f and g.
Proof:
(1). Since f ◦e′ = g ◦e′, there is a k with e′ = e ◦k. Analogously, there is an h with
e = e′ ◦h.
Thus e ◦id = e = e′ ◦h = e ◦(k ◦h), so that by the uniqueness
requirement in the deﬁnition of equalizer, id = k ◦h. Similarly, h ◦k = id, so that
k is an isomorphism.
(2). This is clear, since whenever e is a unique morphism with e ◦e = e′, then k−1 ◦e
will be a unique morphism with (e ◦k) ◦(k−1 ◦e) = e′.

7.54 PROPOSITION
If E
e
−→A is an equalizer of A
f /
g / B , then the following are equivalent:
(1) f = g,
(2) e is an epimorphism,
(3) e is an isomorphism,
(4) idA is an equalizer of f and g.

7.55 PROPOSITION
If A
g
−→B
f
−→A = A
idA
−−−→A, then g is an equalizer of g ◦f and idB.
Proof: Clearly (g ◦f)◦g = g ◦(f ◦g) = g = idB ◦g. Given h : C →B with (g ◦f)◦h =
idB ◦h, then f ◦h : C →A is the unique morphism k with h = g ◦k.

7.56 DEFINITION
A morphism E
e
−→A is called a regular monomorphism provided that it is an
equalizer of some pair of morphisms.
18th January 2005

116
Objects and Morphisms
[Chap. II
7.57 REMARKS
(1) It is clear from the uniqueness requirement in the deﬁnition of equalizer that regular
monomorphisms must be monomorphisms.
(2) One should be aware of the diﬀerence between the concepts of equalizer and regular
monomorphism. “Equalizer” is deﬁned relative to pairs of morphisms, whereas “reg-
ular monomorphism” is absolute. The diﬀerence is more than just a technical one.
For example, later we will see that it is possible for a functor to preserve regular
monomorphisms without preserving equalizers (13.6).
7.58 EXAMPLES
(1) In Set the regular monomorphisms are the injective functions, i.e., up to isomor-
phism, precisely the inclusions of subsets. [If E
e
−→A is an inclusion of a subset,
consider functions f and g from A to {0, 1}, where f maps every point of A to 1
and g maps precisely the points of E to 1. Then e is an equalizer of f and g.]
(2) In Top the regular monomorphisms are, up to isomorphism, precisely the embed-
dings of subspaces. [If E
e
−→A is an inclusion of a subspace, proceed as in (1), and
supply the set {0, 1} with the indiscrete topology.]
(3) In Haus the regular monomorphisms are, up to isomorphism, precisely the inclusions
of closed subspaces. [If e : E →A is an embedding of a closed subspace in Haus,
let A1 = A2 = A, and let ˜A be the topological sum of A1 and A2 with embeddings
µ1 and µ2. Let q : ˜A →B be the quotient map that for each x ∈E identiﬁes µ1(x)
and µ2(x), but identiﬁes nothing else. Then B is Hausdorﬀand e is an equalizer of
q ◦µ1 and q ◦µ2.] Similarly, in Metc (resp. Banb) the regular monomorphisms are
the topological embeddings of closed (linear) subspaces. In Met (resp. Ban) the
regular monomorphisms are the isometric embeddings of closed (linear) subspaces.
(4) In many “algebraic” categories, e.g., in Vec, Grp, and Alg(Ω), and also in HComp,
all monomorphisms are regular. [If e : E →A is a monomorphism in Vec, consider
the quotient space B = A/e[E], the zero map f : A →B, and the natural quotient
map g : A →B. Then e is an equalizer of f and g.] However, in Sgr and Rng
monomorphisms need not be regular, e.g., the inclusion Z ,→Q is a non-regular
monomorphism. [If it were regular, then since it is an epimorphism [7.40(5)] by
Corollary 7.63 and Proposition 7.66 it would necessarily be an isomorphism.]
(5) In {σ}-Seq the regular monomorphisms are precisely the injective simulations that
map each nonﬁnal state to a nonﬁnal state.
7.59 PROPOSITION
(1) Every section is a regular monomorphism.
(2) Every regular monomorphism is a monomorphism.
Proof: (1) is immediate from Proposition 7.55 and (2) follows from the uniqueness
requirement in the deﬁnition of equalizer.

18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
117
7.60 REMARK
Neither implication of the previous proposition can be reversed. For example, Z ,→Q
is a monomorphism in Sgr that is not regular, and every embedding of a non-connected
topological space into a connected one is a regular monomorphism in Top that is not a
section. Also the embedding of the unit circle into the unit disc is not a section in Top.
(This is the crucial lemma for Brouwer’s ﬁxed-point theorem.)
Next, we introduce another type of monomorphism that is particularly useful because
(as is the case with regular monomorphisms) it often coincides with embeddings in
constructs, and, since it is deﬁned by intrinsic properties, it is sometimes easier to
handle than regular monomorphisms.
7.61 DEFINITION
A monomorphism m is called extremal provided that it satisﬁes the following extremal
condition:
If m = f ◦e, where e is an epimorphism, then e must be an isomorphism.
7.62 PROPOSITION
Let A
f
−→B and B
g
−→C be morphisms.
(1) If f is an extremal monomorphism and g is a regular monomorphism, then g ◦f is
an extremal monomorphism.
(2) If g ◦f is an extremal monomorphism, then f is an extremal monomorphism.
(3) If g ◦f is a regular monomorphism and g is a monomorphism, then f is a regular
monomorphism.
Proof:
(1). Let g be an equalizer of r and s. Let g ◦f = h◦e, where e is an epimorphism. Then
r ◦h ◦e = r ◦g ◦f = s ◦g ◦f = s ◦h ◦e implies that r ◦h = s ◦h. Thus there exists
a unique morphism k with h = g ◦k. Hence g ◦k ◦e = h ◦e = g ◦f. Consequently,
k ◦e = f, which implies that e is an isomorphism.
(2). Immediate.
(3). If g ◦f is an equalizer of r and s, then f is an equalizer of r ◦g and s ◦g.

7.63 COROLLARY
Every regular monomorphism is extremal.

7.64 REMARK
A composite of extremal monomorphisms may fail to be extremal. However, if all ex-
tremal monomorphisms in a category are regular, then, by Proposition 7.62, in that
category the class of extremal (= regular) monomorphisms is closed under composition
and is cancellable from the left; i.e., its compositive behavior is similar to that of the
class of all monomorphisms (cf. Proposition 7.34). This is the case for most of the famil-
iar categories, e.g., for Set, Vec, Rel, Pos, Top, Haus, Grp, and Alg(Ω). (See also
the dual of Proposition 14.14.) However, this is not always the case, as the following
example and Exercises 7J and 14I show.
18th January 2005

118
Objects and Morphisms
[Chap. II
7.65 EXAMPLE
Let FHaus denote the full subcategory of Top consisting of the functionally Hausdorﬀ
spaces.38 Then a morphism A
f
−→B in FHaus is
(a) a monomorphism if and only if f is injective,
(b) an extremal monomorphism if and only if f is an embedding such that for every
subspace C of B with f[A] ⊊C, there exists a non-constant morphism C
g
−→R
with the restriction g|f[A] constant,
(c) a regular monomorphism if and only if f is an embedding of a subspace of B that
is an intersection of zerosets39 in B (cf. 7J).
7.66 PROPOSITION
For any morphism f the following are equivalent:
(1) f is an isomorphism,
(2) f is an extremal monomorphism and an epimorphism.
Proof: (1) ⇒(2) is immediate from Proposition 7.59, Corollary 7.63, and duality. If f
satisﬁes (2), the trivial factorization f = id ◦f shows that f is an isomorphism.

7.67 PROPOSITION
For any category A, the following are equivalent:
(1) A is balanced,
(2) in A each monomorphism is extremal.
Proof: (1) ⇒(2) is immediate from Proposition 7.34(2), and (2) ⇒(1) follows from
the proposition above (7.66).

REGULAR AND EXTREMAL EPIMORPHISMS
One of the nice insights that can be gleaned from category theory is that the formation
of quotient structures (such as groups of cosets and identiﬁcation topologies) can be
viewed as the dual of the formation of substructures. Analogous to the situation where
monomorphisms frequently are too weak to represent substructures, epimorphisms are
frequently too weak to represent quotient structures. The notions of regular epimorphism
and extremal epimorphism, which are the duals of the notions of regular monomorphism
and extremal monomorphism, frequently coincide with natural quotients in abstract
categories.
However, as is the case with subobjects, a truly satisfactory concept of
“quotient” seems to be possible only in the setting of constructs (see 8.10).
38A topological space A is called a functionally Hausdorﬀspace provided that for any two distinct
points a and b of A there exists a continuous map from A to the real numbers that has diﬀerent
values at a and b.
39Z is called a zeroset in B provided that there exists a continuous map from B to the real numbers
such that Z is the inverse image of 0.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
119
7.68 DEFINITION
Let A
f /
g / B be a pair of morphisms. A morphism B
c−→C is called a coequalizer of
f and g provided that the following conditions hold:
(1) c ◦f = c ◦g,
(2) for any morphism c′ : B →C′ with c′ ◦f = c′ ◦g, there exists a unique morphism
c : C →C′ such that c′ = c ◦c; i.e., such that the triangle
A
f
/
g
/ B
c
/
c′
 A
A
A
A
A
A
A
C
c

C′
commutes.
7.69 EXAMPLES
1. Given two functions A
f /
g / B in Set, let ∼be the smallest equivalence relation on
B such that f(a) ∼g(a) for all a ∈A. Then the natural map q : B →B/∼, which
assigns to each b ∈B the equivalence class to which b belongs, is a coequalizer of
f and g.
2. If A
f /
g / B are continuous functions in Top, then the procedure given above yields
a coequalizer of f and g, provided that B/∼is assigned the ﬁnest topology that
makes q continuous (i.e., the ﬁnal (or identiﬁcation) topology).
3. Coequalizers in Rel and Prost are formed analogously to the way that they are
formed in Top. In Pos they are formed by ﬁrst forming the coequalizers in Prost
and then taking the Pos-reﬂection of the resulting preordered set.
4. If A
f /
g / B are Ab-morphisms, let B0 be the subgroup {f(a) −g(a) | a ∈A} of
B. Then the natural map q : B →B/B0 to the group of cosets is a coequalizer of
f and g.
5. If A
f /
g / B are homomorphisms in Alg(Ω), then a coequalizer for them is ob-
tained analogously as in Set by using, instead of equivalence relations, the smallest
congruence relation ∼such that f(a) ∼g(a) for all a ∈A.
6. If A
f /
g / B are simulations in Σ-Seq, then a coequalizer for them is obtained
analogously as in Alg(Ω) with ﬁnal states precisely the congruence classes that
contain some ﬁnal state of B.
18th January 2005

120
Objects and Morphisms
[Chap. II
7.70 REMARK
Since the concept of coequalizer is dual to that of equalizer, the general results about
equalizers can be translated (via the Duality Principle) into results about coequalizers.
For example,
(1) Coequalizers are essentially unique.
(2) If A
g
−→B
f
−→A = A
idA
−−−→A, then f is the coequalizer of g ◦f and idB.
(3) If B
c−→C is a coequalizer of A
f /
g / B , then the following are equivalent:
(a) f = g,
(b) c is a monomorphism,
(c) c is an isomorphism,
(d) idB is a coequalizer of f and g.
7.71 DEFINITION
A morphism B
c−→C is called a regular epimorphism provided that it is a coequalizer
of some pair of morphisms.
7.72 EXAMPLES
(1) In Set the regular epimorphisms are the surjective functions. [Given e : A →B
surjective, consider the two projections from D = {(a, a′) ∈A × A | e(a) = e(a′)} to
A.] In fact, in Set,
Retr = RegEpi = Surj = Epi.
(2) In Top the regular epimorphisms are precisely the topological quotient maps; i.e.,
the surjective continuous maps onto spaces with the ﬁnal topology. [For such a map
e proceed as in Set with D considered as a subspace of A × A.] In Σ-Seq regular
epimorphisms are precisely the surjective simulations that have the property that
each ﬁnal state in the codomain has a ﬁnal preimage in the domain. Thus, in both
of these categories,
RegEpi ⊊Surj = Epi.
(3) In each Alg(Ω), Vec, Grp(cf. 7H), Ab, Lat, and HComp,
RegEpi = Surj = Epi.
(4) In Sgr, Mon, and Rng,
RegEpi = Surj ⊊Epi.
(5) In the constructs Cat and (Ban, O) there exist regular epimorphisms that are
not surjective.
In Cat, consider the regular epimorphism A
F
−−→B of Example
7.40(6). In (Ban, O), consider the regular epimorphism e : c0 →K, where K is
the ﬁeld of real (or complex) numbers considered as a Banach space, c0 is the clas-
sical Banach space of all sequences in K converging to 0 with the sup-norm, and
e(xn) = P∞
n=1 xn/2n.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
121
7.73 REMARK
Each of the forgetful functors from Vec, Grp, and Top1 (T1-topological spaces) into
Set preserves regular epimorphisms.
However, none of them preserves coequalizers.
(Cf. Remark 13.6.)
7.74 DEFINITION
An epimorphism e is called extremal provided that it satisﬁes the following extremal
condition:
If e = m◦f, where m is a monomorphism, then m must be an isomorphism.
7.75 PROPOSITION
(1) Every retraction is a regular epimorphism.
(2) Every regular epimorphism is an extremal epimorphism.
D
7.76 REMARK
(1) In most of the familiar categories the regular epimorphisms and the extremal epimor-
phisms coincide. See, e.g., Proposition 14.14. However, in Cat there exist extremal
epimorphisms that are not regular epimorphisms. An example is the composite G◦F
of the regular epimorphism (functor) F : A →B of Example 7.40(6) with the reg-
ular epimorphism (functor) G : B →C, where C is the multiplicative submonoid
{0, 1} of Z (considered as a category), G(n) = 0 for n > 0, and G(0) = 1.
(2) In general, “between” regular epimorphisms and extremal epimorphisms there are
several other commonly used types of epimorphisms, the “strong epimorphisms” (the
dual of which is introduced in Exercise 14C), the “swell epimorphisms” (introduced
in 15A), and the “strict epimorphisms” (introduced in Exercise 7D). Thus we have
the following diagram that summarizes the relative strengths of the various notions
introduced. Notice that the notions in the boxes frequently coincide (see (1) above),
but none of the implications can be reversed in general.
isomorphism
bimorphism
monomorphism
epimorphism
section
retraction
∨












QQQ
QQQ
QQQ
QQQ
regular mono
strict mono
swell mono
strong mono
extremal mono
regular epi
strict epi
swell epi
strong epi
extremal epi
∨
∨
⇓
⇓
⇓
⇓
⇓
⇓
⇓
⇓
⇓
⇓
18th January 2005

122
Objects and Morphisms
[Chap. II
SUBOBJECTS
For most of the familiar constructs, a canonical notion of “subobject” is generally un-
derstood. Category theory has made it apparent that “A being a subobject of B” is
not only a property of the object A, but also of the naturally associated “inclusion mor-
phism” from A into B. Hence we will deﬁne subobjects of B to be pairs (A, m), where
A is an object and m is an “inclusion morphism”.
Since, as we have seen, for diﬀerent categories one may need diﬀerent concepts of mor-
phism40 to characterize (up to isomorphism) the “inclusion morphisms of subobjects”,
the concept of subobject will be made dependent upon a chosen class M of morphisms
that represents (in each case) such inclusions.
7.77 DEFINITION
Let M be a class of monomorphisms. An M-subobject of an object B is a pair (A, m),
where A
m
−−→B belongs to M. In case M consists of all (regular, extremal) monomor-
phisms, M-subobjects are called (regular, extremal) subobjects.
7.78 REMARK
By the above deﬁnition, a subobject of a set B in Set is a pair (A, m), where m : A →B
is an injective function. In order for the notion of subobject to correspond more closely
to the notion of subset, two subobjects (A, m) and (A′, m′) should be considered to be
essentially the same if m[A] = m′[A′]. Furthermore a subobject (A, m) of B in Set
should be considered to be “smaller than” the subobject (A′, m′) of B provided that
m[A] ⊆m′[A′]. The following deﬁnitions capture these ideas.
7.79 DEFINITION
Let (A, m) and (A′, m′) be subobjects of B.
(1) (A, m) and (A′, m′) are called isomorphic provided that there exists an isomorphism
h : A →A′ with m = m′ ◦h.
(2) (A, m) is said to be smaller than (A′, m′) — denoted by (A, m) ≤(A′, m′) —
provided that there exists some (necessarily unique) morphism41 h : A →A′ with
m = m′ ◦h
A
h
/
m
 @
@
@
@
@
@
@
@
A′
m′

B
7.80 REMARK
Observe that for the class of all subobjects of a given object
40For example, in Rng the class of monomorphisms is appropriate, whereas the class of regular (=
extremal) monomorphisms is not. However, for Top the class of regular (= extremal) monomorphisms
is appropriate, whereas the class of monomorphisms is not.
41Observe that by Proposition 7.34, h must be a monomorphism.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
123
(1) the relation of being isomorphic is an equivalence relation, and
(2) the relation ≤is a preorder; i.e., it is reﬂexive and transitive. In general, it fails to
be antisymmetric, but (A, m) ≤(A′, m′) and (A′, m′) ≤(A, m) imply that these two
subobjects are isomorphic.
7.81 EXAMPLES
(1) Let B be a set, let PB be the set of all subsets of B, let SB be the class of
all subobjects of B in Set, and let H : SB →PB be the function deﬁned by:
H(A, m) = m[A]. Then
(a) (A, m) and (A′, m′) are isomorphic if and only if H(A, m) = H(A′, m′), and
(b) (A, m) ≤(A′, m′) if and only if H(A, m) ⊆H(A′, m′).
Hence, up to isomorphism, subsets of B correspond bijectively to subobjects of B,
where the correspondence is order-preserving.
(2) Similarly, in the categories Vec, Sgr, Mon, Grp, Ab, Rng, Alg(Ω), and
HComp, subobjects correspond to linear subspaces, subsemigroups, submonoids,
subgroups, subrings, subalgebras, and compact subspaces, respectively.
(3) Analogously, in Top, Rel, and Pos, regular (= extremal) subobjects correspond to
subspaces, subrelations, and subposets, respectively.
7.82 DEFINITION
Let M be a class of monomorphisms of a category A.
(1) A is called M-wellpowered provided that no A-object has a proper class of pair-
wise42 non-isomorphic M-subobjects.
(2) In case M is the class of all (regular, extremal) monomorphisms, then M-well-
powered is called (regular, extremally) wellpowered.
7.83 REMARK
Every wellpowered category must be regular wellpowered and extremally wellpowered,
but not conversely.
[The thin category Ord of all ordinal numbers (with its usual
order) is wellpowered. Ordop is extremally wellpowered, but is not wellpowered. In
fact, each of its objects has a proper class of pairwise non-isomorphic subobjects, but
only one extremal subobject.] Thus one should be aware that even though the phrase
“extremally wellpowered” sounds stronger than “wellpowered”, it is actually weaker.
QUOTIENT OBJECTS
Often in mathematics one has a “quotient” or “identiﬁcation” procedure that maps
points to equivalence classes or “collapses” parts of a structure. Frequently, both of
42“Pairwise” in this context means that any pair consisting of distinct members are assumed to be
non-isomorphic.
18th January 2005

124
Objects and Morphisms
[Chap. II
these processes are considered to be essentially the same, and are used interchangeably.
For example, collapsing a subgroup of an abelian group to the identity element is un-
derstood either as the homomorphism onto the group of cosets or as the homomorphism
onto a particular set of representatives of the cosets. The reason that mathematicians
don’t distinguish these procedures is because they both give rise to essentially the same
quotient object — where “quotient object” is the dual concept to that of subobject.
7.84 DEFINITION
Let E be a class of epimorphisms. An E-quotient object of an object A is a pair (e, B),
where A
e
−→B belongs to E. In case E consists of all (regular, extremal) epimorphisms,
E-quotient objects are called (regular, extremal) quotient objects.
7.85 DEFINITION
Let (e, B) and (e′, B′) be quotient objects of A.
(1) (e, B) and (e′, B′) are called isomorphic provided that there exists an isomorphism
h : B →B′ with e′ = h ◦e.
(2) (e, B) is said to be larger than (e′, B′) — denoted by (e, B) ≥(e′, B′) — provided
that there exists some (necessarily unique) morphism h : B →B′ with e′ = h ◦e.
A
e
/
e′
 A
A
A
A
A
A
A
B
h

B′
7.86 EXAMPLES
(1) Let A be a set, let EA be the set of all equivalence relations on A, let KA be the set
of all quotient objects of A in Set, and let H : KA →EA be the function deﬁned
by: H(e, B) = {(x, y) ∈A × A | e(x) = e(y)}. Then
(a) (e, B) and (e′, B′) are isomorphic if and only if H(e, B) = H(e′, B′), and
(b) (e, B) ≥(e′, B′) if and only if H(e, B) ⊆H(e′, B′).
Hence, up to isomorphism, quotient objects of A correspond bijectively to equiva-
lence relations on A, where the correspondence is order-reversing.
(2) Similarly, in the constructs Top, Rel, and Pos the regular (= extremal) quotient
objects of an object correspond (up to isomorphism) bijectively to the equivalence
relations on its underlying set.
(3) Analogously, in HComp the quotient objects (= regular quotient objects) of an
object A correspond (up to isomorphism) bijectively to those equivalence relations
ρ on the underlying set of A that, considered as subsets of A × A, are closed.
(4) In algebraic constructs such as Vec, Sgr, Mon, Grp, Ab, Rng, and Alg(Ω), the
regular (= extremal) quotient objects of an object A correspond (up to isomorphism)
bijectively to the congruence relations on A; i.e., to the equivalence relations on the
underlying set of A that respect the operations.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
125
7.87 DEFINITION
Let E be a class of epimorphisms of a category A.
(1) A is called E-co-wellpowered provided that no A-object has a proper class of
pairwise non-isomorphic E-quotient objects.
(2) In case E is the class of all (regular, extremal) epimorphisms, then E-co-wellpowered
is called (regular, extremally) co-wellpowered.
7.88 THEOREM
Every construct is regular wellpowered and regular co-wellpowered.
Proof: Let (A, U) be a construct.
(1). To show that A is a regular co-wellpowered category, let A be an A-object and
let {(ei, Bi) | i ∈I} be a class of pairwise non-isomorphic regular quotient objects
of A. Let EA be the set of all equivalence relations on UA and let the function
H : I →EA be deﬁned by: H(i) = {(a, b) ∈UA × UA | ei(a) = ei(b)}. To see
that H is injective, let i1, i2 ∈I with H(i1) = H(i2). For k = 1, 2, let (eik, Bik) be
a coequalizer of Ak
rk /
sk / A . The equality ei1 ◦r1 = ei1 ◦s1 implies that for each
a ∈UA1 (r1(a), s1(a)) ∈H(i1) = H(i2). Consequently, ei2 ◦r1 = ei2 ◦s1, so that by
the deﬁnition of coequalizer (ei1, Bi1) ≥(ei2, Bi2). By symmetry, and by using the
dual of Remark 7.80(2), we have that (ei1, Bi1) and (ei2, Bi2) are isomorphic and
hence, by assumption, i1 = i2. Thus H : I →EA is an injective function, so that
since EA is a set, I must be a set.
(2). That A is regular wellpowered follows immediately from (1) and the fact that
(Aop, Q ◦Uop) is a construct [5.2(4)].

7.89 COROLLARY
Every category with a separator or a coseparator is regular wellpowered and regular co-
wellpowered.
Proof: If S is a separator in A, then (A, hom(S, −)) is a construct. If C is a cosep-
arator in A, then (A, Q ◦hom(−, C)op) is a construct, where Q : Setop →Set is the
contravariant power-set functor.

7.90 EXAMPLES
(1) Fibre-small transportable constructs for which the epimorphisms are precisely the
morphisms with surjective underlying functions must be co-wellpowered.
(2) Constructs are frequently co-wellpowered, even when they have non-surjective epi-
morphisms; e.g., Sgr, Rng, and Haus. However, in these cases establishing co-
wellpoweredness is more involved.
18th January 2005

126
Objects and Morphisms
[Chap. II
(3) The construct of Urysohn spaces43 is not co-wellpowered. The proof is nontrivial.
Another non-co-wellpowered subcategory of Top is described in Exercise 7L. Both
of these constructs are regular co-wellpowered (since they are constructs). Ord is
obviously not co-wellpowered.
(4) Constructs need not be extremally co-wellpowered: consider the construct whose
objects are all sets and whose morphisms are all identities and all constant functions
from sets A to sets B, where the cardinality of B is greater than that of A.
Suggestions for Further Reading
Grothendieck, A. Sur quelque points d’alg´ebre homologique. Tohoku Math. J. 9 (1957):
119–221.
Isbell, J. R. Some remarks concerning categories and subspaces. Canad. J. Math.
9
(1957): 563–577.
Burgess, W. The meaning of mono and epi in some familiar categories. Canad. Math.
Bull. 8 (1965): 759–769.
Baron, S. Note on epi in T0. Canad. Math. Bull. 11 (1968): 503–504.
Isbell, J. R. Epimorphisms and dominions IV. J. London Math. Soc. 1 (1969): 265–273.
Poguntke, D. Epimorphisms of compact groups are onto. Proc. Amer. Math. Soc., 26
(1970): 503–504.
Pareigis, B., and M. E. Sweedler On generators and cogenerators. Manuscr. Math. 2
(1970): 49–66.
Schr¨oder, J. The category of Urysohn spaces is not cowellpowered. Topol. Appl.
16
(1983): 237–241.
EXERCISES
7A. Zero Morphisms
A morphism A
f
−→B is called a constant morphism provided that for any pair
A′
r /
s / A of morphisms we have f ◦r = f ◦s.
Morphisms that are simultaneously
constant and coconstant are called zero morphisms. Show that
(a) If f is a constant morphism then so is any composite h ◦f ◦g.
(b) If f can be factored through a terminal object, then f is constant.
(c) If A has a zero object, 0, then an A-morphism is a zero-morphism if and only if it
can be factored through 0.
43A topological space is called a Urysohn space provided that any two distinct points have disjoint
closed neighborhoods.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
127
7B. Pointed Categories
A category is called pointed provided that each of its morphism sets hom(A, B) contains
a zero morphism. Show that a category is pointed if and only if it is a full subcategory
of a category with a zero object.
7C. Kernels and Normal Monomorphisms
In a pointed category an equalizer of A
f
−→B and a zero morphism A →B is called a
kernel of f. A morphism is called a normal monomorphism provided that it is the
kernel of some morphism. Show that
(a) Every normal monomorphism is regular.
(b) In Grp the normal monomorphisms are the embeddings of normal subgroups,
whereas the regular monomorphisms are the embeddings of subgroups. [Use 7H(a)].
(c) If A
f
−→B
g
−→C are morphisms in a pointed category and g is a monomorphism,
then f is a kernel of g if and only if A is a zero object.
(d) Each nonempty pointed category has a zero object if each of its morphisms has a
kernel.
(e) If A is a pointed category such that each of its morphisms has a kernel and a cokernel,
then the following hold:
(1) A morphism f is a normal monomorphism if and only if it is a kernel of a
cokernel of f.
(2) For each object A the preordered class of all non-isomorphic normal subobjects
of A is anti-isomorphic with the preordered class of all non-isomorphic normal
quotient objects of A.
7D. Strict Monomorphisms
A morphism A
f
−→B is called a strict monomorphism provided that whenever
A′
f′
−−→B is a morphism with the property that for all morphisms B
r /
s / C , r◦f = s◦f
implies that r◦f′ = s◦f′, then there exists a unique morphism A′
f
−→A with f′ = f ◦f.
Show that:
(a) Every regular monomorphism is a strict monomorphism, but not vice versa.
(b) Every strict monomorphism is an extremal monomorphism, but not vice versa
(cf. 14I).
(c) If A
f
−→B is an extremal monomorphism and B
g
−→C is a strict monomorphism,
then A
f
−→B
g
−→C is an extremal monomorphism.
(d) If A
f
−→B is a strict monomorphism and B
g
−→C is a section, then A
f
−→B
g
−→C
is a strict monomorphism.
18th January 2005

128
Objects and Morphisms
[Chap. II
(e) The composite of two strict monomorphisms is an extremal but not necessarily strict
monomorphism.
(f) If A
f
−→B
g
−→C is a strict monomorphism and B
g
−→C is a monomorphism, then
A
f
−→B is a strict monomorphism.
7E. Sections
Show that
(a) Every morphism with a terminal domain is a section.
(b) If A
f
−→B
g
−→C is a section and A
f
−→B is an epimorphism, then B
g
−→C is a
section.
(c) If A
f
−→B is a function and A has at least two elements, then in Set the following
are equivalent:
(1) f is an isomorphism,
(2) there exists precisely one function B
g
−→A with g ◦f = idA.
(d) If A is a full subcategory of B, then an A-reﬂection arrow is a section if and only if
it is an isomorphism.
(e) In a construct each section (but not necessarily each regular monomorphism) is
injective.
(f) If a natural transformation τ = (τA) regarded as a morphism in the functor quasi-
category [A, B] is a section, then each τA is a B-section (but the converse need not
be true).
7F. Full Embeddings of Reﬂective Subcategories
Let A be a full reﬂective subcategory of B. Show that the inclusion functor A ,→B
(a) preserves and reﬂects monomorphisms, sections, retractions, and isomorphisms,
(b) preserves but need not reﬂect regular monomorphisms, extremal monomorphisms,
and strict monomorphisms,
(c) reﬂects but need not preserve regular epimorphisms, extremal epimorphisms, strict
epimorphisms, and epimorphisms.
7G. Faithful Functors
(a) Show that a faithful functor that reﬂects extremal epimorphisms must reﬂect iso-
morphisms.
(b) Show that a functor F : A →B that reﬂects equalizers (i.e., whenever E
e
−→A
and A
f /
g / B are A-morphisms such that Fe is an equalizer of Ff and Fg, then e
is an equalizer of f and g) is faithful.
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
129
7H. Epimorphisms for Groups
* (a) Show that if K is a subgroup of the (ﬁnite) group H, then there exists a (ﬁnite)
group G and group homomorphisms f1, f2 : H →G such that
K = { h ∈H
 f1(h) = f2(h) }.
[Hint: Consider the set X obtained from the set { hK
 h ∈H } of all left K-cosets
of H by adjoining a single new element ˆK. Let G be the permutation group of X,
and let ρ : X →X be the permutation that interchanges the elements eK (= K)
and ˆK, and leaves all other elements of X ﬁxed.
Deﬁne f1, f2 : H →G by
f1(h)(S) =
(
hh′K
if S = h′K
ˆK
if S = ˆK

f2(h) = ρ ◦f1(h) ◦ρ−1.]
(b) Show that the epimorphisms in Grp are precisely the surjective homomorphisms.
(c) Show that the epimorphisms in the category of ﬁnite groups are precisely the
surjective homomorphisms.
(d) Show that in the category of commutative cancellative semigroups, A
f
−→B is an
epimorphism if and only if for each b ∈B there exist a1, a2 ∈A with f(a1) + b =
f(a2). [Hint: Embed each commutative cancellative semigroup in an abelian group.
There the epimorphisms are surjective.]
(e) Show that in the category of torsion-free abelian groups, a morphism A
f
−→B is
an epimorphism if and only if the factor group B/f[A] is a torsion group.
7I. Epimorphisms in FHaus
(a) Show that in FHaus a morphism A
f
−→B is an epimorphism if and only if each
morphism B
g
−→R is constant whenever g ◦f is constant.
(b) Let B be the space with underlying set R that has τ ∪{R \ Q} as a subbase for its
topology (where τ is the usual topology on R). Let A be the subspace of B with
underlying set Q. Show that the (closed) embedding A ,→B is an epimorphism in
FHaus. Notice that this implies that A ,→B is not an extremal monomorphism in
FHaus.
7J. Regular Monomorphisms in FHaus
In the category of functionally Hausdorﬀspaces (cf. 7.65) consider the discrete spaces
A and B with underlying sets { 1
n | n ∈N+ } and {0} ∪{ 1
n | n ∈N+ }, the space C with
underlying set R, having τ ∪{R \ A} as a subbase for its topology (where τ is the usual
topology on R), and the space D obtained as a quotient of C by identifying the points
0 and 1.
18th January 2005

130
Objects and Morphisms
[Chap. II
(a) Show that the natural inclusions A
f
−→B and B
g
−→C are regular monomorphisms,
but that g ◦f is not regular.
(b) Show that if C
h
−→D is the natural quotient map, then h ◦(g ◦f) is a regular
monomorphism, but that g ◦f is not regular.
7K. Subobjects
Show that it is possible for (A, m) and (A′, m′) to be non-isomorphic subobjects of an
object B even though A and A′ are isomorphic.
* 7L. A Non-co-wellpowered Category of Topological Spaces
Let A be the full subcategory of Top that consists of those topological spaces in which
every compact subspace is Hausdorﬀ. Show that
(a) A is a reﬂective subcategory of Top, and
(b) A is not co-wellpowered.
7M. Coequalizers
Let A
e
−→B be an epimorphism and let B
f /
g / C be a pair of morphisms. Show that c
is a coequalizer of f and g if and only if c is a coequalizer of f ◦e and g ◦e.
7N. Extremal Monomorphisms
Show that the composite of two extremal monomorphisms need not be extremal.
7O. Epi = RegEpi and Mono = RegMono
Show that the above equations hold in any of the following categories: Set, Vec, Ab,
Grp, Alg(Ω), and HComp.
* 7P. A Characterization of Monomorphisms by Sections
Let f be a morphism in a category A. Show that f is a monomorphism in A if and only
if A can be embedded into a category B such that f is a section in B.
7Q. Separating Sets and Concretizable Categories
(a) Show that if A has a separating set { Ai | i ∈I } and I is the discrete category
associated with I, then A is concretizable over [I, Set]. (Cf. Proposition 7.12.)
(b) Show that if A has a separating set, then A is concretizable over Set.
(c) Exhibit a construct that has no separating set.
7R. Epi-Transformations and Mono-Transformations
Let S, T : X →Set be functors. Show that
(a) If there exists an Epi-transformation from S to T, then Spa(T) is concretely iso-
morphic to a reﬂective modiﬁcation of Spa(S).
18th January 2005

Sec. 7]
Objects and morphisms in abstract categories
131
(b) If there exists a Mono-transformation from S to T, then Spa(S) is concretely iso-
morphic to a coreﬂective modiﬁcation of Spa(T).
7S. Regular Epimorphisms in Cat
(a) Let A
F
−−→B be the functor described in 7.40(6), let B
G
−−→C be the functor
described in 7.76(1), let D be the category •
f /
g / • , let A
H
−−→D be the inclusion
functor, and let D
K
−−→B be the functor deﬁned by K(g) = 1 and K(f) = 2. Show
that
(1) F and G are regular epimorphisms in Cat, but G ◦F is not a regular epimor-
phism,
(2) F = K◦H is a regular epimorphism in Cat, but K is not a regular epimorphism,
(b) Consider the functors:
A1
f1 / B1
A2
f2 / B2
A3
f3
/ B3
F
−−→
A1
f
5
f1 / B1 = A2
f2 / B2
A3
f3
/ B3
G
−−→
A2
f1 / •
f2 / B2
A3
f=f3
/ B3
Show that in Cat:
(1) F is a regular epimorphism,
(2) G is a retraction,
(3) G ◦F is not a regular epimorphism.
[Contrast this with Exercise 10M.]
18th January 2005

8 Objects and morphisms in concrete
categories
In this section we study special objects and morphisms in concrete categories. It will
become apparent that these concepts depend heavily upon the underlying functors, and,
hence, can be deﬁned in the context of arbitrary (not necessarily faithful) functors.
The notational conventions of Remark 6.22 will be used throughout this section. In
particular, forgetful functors will be denoted by | |.
DISCRETE AND INDISCRETE OBJECTS
8.1 DEFINITION
An object A in a concrete category A over X is called discrete whenever, for each
object B, every X-morphism |A| →|B| is an A-morphism.
8.2 EXAMPLES
(1) In the construct Pos the discrete objects are precisely the sets ordered by equality.
(2) In Cat the discrete objects are the discrete small categories.
(3) In Top the discrete objects are the discrete topological spaces.
(4) Let PMet denote the construct of pseudometric spaces44 and contractions. For each
set X, the object (X, d), where d is deﬁned by
d(x, y) =
(
0,
if
x = y
∞,
if
x ̸= y,
is a discrete object in PMet. In contrast, in the construct Met no space with at
least two points is discrete.
(5) The constructs Vec, Grp, and Σ-Seq have no discrete objects. For Ω̸= ∅, Alg(Ω)
has no discrete object, with the possible exception of the empty Ω-algebra.
(6) In TopGrp, considered as a concrete category over Grp, the discrete objects are
the topological groups with discrete topology. In TopGrp, considered as a concrete
category over Top, no object is discrete.
44A pseudometric on a set X is a function d : X × X →[0, ∞], such that:
(1) d(x, x) = 0 for all x ∈X,
(2) d(x, y) = d(y, x) for all x, y ∈X,
(3) d(x, z) ≤d(x, y) + d(y, z) for all x, y, z ∈X.
132

Sec. 8]
Objects and morphisms in concrete categories
133
(7) In an abstract category considered as concrete over itself (w.r.t. the identity functor)
every object is discrete. In a poset A, considered as a concrete category over 1, an
object is discrete if and only if it is the smallest element of A.
Next we consider the concrete dual (5.20) of the concept of discrete object.
8.3 DEFINITION
An object A in a concrete category A over X is called indiscrete whenever, for each
object B, every X-morphism |B| →|A| is an A-morphism.
8.4 REMARK
Notice that if A is a discrete (resp. indiscrete) object in the concrete category A, then
A is the smallest (resp. largest) element in the ﬁbre of |A| (cf. 5.4). The converse need
not hold, as seen below [8.5(2)].
8.5 EXAMPLES
(1) In the construct Pos the only indiscrete objects are the empty poset and the single-
ton posets; similarly in Cat.
(2) In Top the indiscrete objects are precisely the indiscrete topological spaces. In the
full subcategory Top1 of Top, consisting of all T1-spaces, only the empty space and
the singleton spaces are indiscrete. However, each ﬁbre has a largest element — the
coﬁnite topology.
(3) In PMet (8.2) the indiscrete objects are precisely those for which every pair of
points has distance 0. The only indiscrete objects in Met are the metric spaces
with at most one point.
(4) In Vec, Grp, and Mon only the trivial objects with precisely one element are
indiscrete.
(5) In Σ-Seq an acceptor is indiscrete if and only if it has only one state and that state
is ﬁnal.
(6) If TopGrp is considered as a concrete category over Grp, then the indiscrete objects
are the topological groups with indiscrete topology. If TopGrp is considered as a
concrete category over Top or Set, then the indiscrete objects are trivial.
EMBEDDINGS
In §7 several classes of monomorphisms have been introduced in order to formalize the
intuitive concept of “embeddings of subobjects”. However, none of these concepts works
in all situations. (Recall that monomorphisms fail in Top [7.33(3)] and extremal and
regular monomorphisms fail in Sgr [7.58(4), 7I].) Below, we introduce the concept of
embedding, which agrees with the intuitive notion of “embeddings of subobjects” in every
familiar construct.
18th January 2005

134
Objects and Morphisms
[Chap. II
8.6 DEFINITION
Let A be a concrete category over X.
(1) An A-morphism A
f
−→B is called initial45 provided that for any A-object C an X-
morphism |C|
g
−→|A| is an A-morphism whenever |C|
f◦g
−−−→|B| is an A-morphism.
(2) An initial morphism A
f
−→B that has a monomorphic underlying X-morphism
|A|
f
−→|B| is called an embedding.
(3) If A
f
−→B is an embedding, then (f, B) is called an extension of A and (A, f) is
called an initial subobject of B.
8.7 PROPOSITION
For any concrete category the following hold:
(1) Each embedding is a monomorphism.
(2) Each section (and in particular each isomorphism) is an embedding.
(3) If the forgetful functor preserves regular monomorphisms, then each regular mono-
morphism is an embedding.
Proof:
(1). Immediate from Proposition 7.37(2).
(2). Suppose that A
s
−→B and B
r
−→A are A-morphisms with r ◦s = idA.
Let
|C|
g
−→|A| be an X-morphism for which |C|
s◦g
−−−→|B| is an A-morphism. Then
g = r ◦(s ◦g) is an A-morphism. Thus A
s
−→B is initial, hence an embedding.
(3). Suppose that A
m
−−→B is an equalizer of a pair of morphisms (u, v), and let
g : |C| →|A| be an X-morphism such that m ◦g is an A-morphism. Then since
u◦(m◦g) = v ◦(m◦g), there exists an A-morphism k : C →A with m◦g = m◦k.
Since, by assumption, m is a X-monomorphism, this implies that k = g. Thus
g = k : C →A is an A-morphism. Hence m is initial, and so is an embedding.

8.8 EXAMPLES46
(1) If an abstract category A is considered to be concrete over itself via the identity
functor, then every morphism is initial. In particular,
Emb(A) = Mono(A).
(2) In the construct A = Top a continuous map f : (X, τ) →(Y, σ) is initial if and
only if τ is the “initial topology” with respect to f and σ, i.e., τ = { f−1[S] | S ∈σ }.
Thus embeddings are precisely the “topological embeddings”, i.e., homeomorphisms
onto subspaces. In particular,
RegMono(A) = ExtrMono(A) = Emb(A) ⊊Mono(A).
45Notwithstanding their names, the concepts of initial object (7.1) and initial morphism are unrelated.
46Emb(A) is the class of all A-embeddings. Similarly, Mono(A) is the class of all A-monomorphisms,
etc. See the Table of Symbols.
18th January 2005

Sec. 8]
Objects and morphisms in concrete categories
135
(3) In the construct A = Haus the initial morphisms are precisely the topological
embeddings. Hence
ExtrMono(A) ⊊Init(A) = Emb(A) ⊊Mono(A).
(4) In the construct A = FHaus of functionally Hausdorﬀspaces the initial morphisms
are precisely the topological embeddings. Hence (cf. 7.65, 7I and 7J)
RegMono(A) ⊊ExtrMono(A) ⊊Init(A) = Emb(A) ⊊Mono(A).
(5) In some “algebraic” constructs A such as Vec and Grp the initial morphisms coin-
cide with each of the other “reasonable” families of monomorphisms; i.e.,
RegMono(A) = Init(A) = Emb(A) = Mono(A).
However, if A is any of the constructs Rng, Banb, or (Ban, O), then
ExtrMono(A) ⊊Init(A) = Emb(A) = Mono(A).
(6) In the construct A = (Ban, U) injective morphisms usually fail to be initial; in-
stead the initial morphisms are precisely the isometric embeddings of (automatically
closed) subspaces. Thus
ExtrMono(A) = Init(A) = Emb(A) ⊊Mono(A).
(7) In the construct A = Met the initial morphisms are precisely the isometric embed-
dings of (not necessarily closed) subspaces. Thus
ExtrMono(A) ⊊Init(A) = Emb(A) ⊊Mono(A).
(8) In the constructs Rel and Pos a morphism f : (X, ρ) →(Y, σ) is initial if and only
if the equivalence: xρy
⇔
f(x)σf(y) holds. Thus in Pos initial morphisms are
precisely the embeddings, and in both cases
ExtrMono(A) = Emb(A) ⊊Mono(A).
(9) Extremal monomorphisms need not be embeddings. In the full subconstruct A =
DRail of Top consisting of all discrete spaces and all inﬁnite indiscrete spaces,
every injective map with ﬁnite discrete domain and indiscrete range is an extremal
monomorphism, but (for non-trivial domain) not an embedding. Hence
ExtrMono(A) ̸⊆Emb(A) = RegMono(A) ⊊ExtrMono(A).
(10) In the construct Cat the embeddings are precisely the embedding functors.
(11) In the construct Σ-Seq embeddings are those injective simulations A
f
−→B for
which any state a ∈A, with f(a) ﬁnal in B, must itself be ﬁnal in A.
18th January 2005

136
Objects and Morphisms
[Chap. II
(12) In a preordered class A considered as a concrete category over 1, initial morphisms
and isomorphisms coincide. Thus, if A is a nondiscrete poset, then
Iso(A) = Init(A) = Emb(A) = ExtrMono(A) ⊊Mono(A).
(13) If TopGrp is considered as a concrete category over Grp (resp. over Top), then a
morphism G
f
−→ˆG is initial if and only if G has the initial topology with respect to
f (resp. if and only if it is injective).
8.9 PROPOSITION
(1) If A
f
−→B and B
g
−→C are initial morphisms (resp. embeddings), then A
g◦f
−−−→C
is an initial morphism (resp. an embedding).
(2) If A
g◦f
−−−→C is an initial morphism (resp. an embedding), then f is initial (resp. an
embedding).

QUOTIENT MORPHISMS
The concepts of ﬁnal morphism and quotient morphism are dual to the concepts of initial
morphism and embedding, respectively.
8.10 DEFINITION
Let A be a concrete category over X.
(1) An A-morphism A
f
−→B is called ﬁnal provided that for any A-object C, an X-
morphism |B|
g
−→|C| is an A-morphism whenever |A|
g◦f
−−−→|C| is an A-morphism.
(2) A ﬁnal morphism A
f
−→B with epimorphic underlying X-morphism |A|
f
−→|B| is
called a quotient morphism.
(3) If A
f
−→B is a quotient morphism, then (f, B) is called a ﬁnal quotient object
of A.
8.11 EXAMPLES
(1) In the construct Top a continuous function f : (X, τ) →(Y, σ) is ﬁnal if and only
if σ = {A ⊆Y | f−1[A] ∈τ}; i.e., σ is the “ﬁnal topology” on Y with respect to f
and τ. Thus in Top the quotient morphisms are the topological quotient maps.
(2) In the construct Rel a morphism f : (X, ρ) →(Y, σ) is ﬁnal if and only if σ is the
ﬁnal relation on Y with respect to f and ρ; i.e., σ = {(f(x), f(y)) | (x, y) ∈ρ}.
(3) For any of the constructs Grp, Ab, Vec, Boo, Lat, HComp, BooSp, Mon, Sgr,
and Σ-Seq, we have47
Final(A) = Quot(A) = RegEpi(A).
47Final(A) is the class of all ﬁnal morphisms in A. Similarly, Quot(A) is the class of all A-quotient
morphisms, etc. See the Table of Symbols.
18th January 2005

Sec. 8]
Objects and morphisms in concrete categories
137
(4) For the constructs Cat and (Ban, O) there exist regular epimorphisms that are not
ﬁnal. Some examples of such morphisms are the non-surjective regular epimorphisms
described in Example 7.72(5).
(5) In the construct Cat there exist surjective extremal epimorphisms that are not ﬁnal.
An example of this is the functor G ◦F : A →C described in Remark 7.76(1).
(6) A morphism (X, d)
f
−→(Y, ˆd) is ﬁnal in PMet if and only if
ˆd(y, y′) = inf
 n−1
X
i=1
distd(f−1(yi),f−1(yi+1)) | (y1, . . . , yn) is a ﬁnite sequence in Y
with y1 = y and yn = y′

.
8.12 PROPOSITION
For any concrete category the following hold:
(1) Each quotient morphism is an epimorphism.
(2) Each retraction (and in particular each isomorphism) is a quotient morphism.
(3) If the forgetful functor preserves regular epimorphisms, then each regular epimor-
phism is a quotient morphism.
D
8.13 PROPOSITION
(1) If A
f
−→B and B
g
−→C are ﬁnal morphisms (resp. quotient morphisms), then
A
g◦f
−−−→C is ﬁnal (resp. a quotient morphism).
(2) If A
g◦f
−−−→C is a ﬁnal morphism (resp. a quotient morphism), then g is ﬁnal (resp. a
quotient morphism).
D
8.14 PROPOSITION
In a concrete category A over X, the following conditions are equivalent for each A-
morphism f:
(1) f is an A-isomorphism.
(2) f is an initial morphism and an X-isomorphism.
(3) f is a ﬁnal morphism and an X-isomorphism.
Proof: (1) ⇒(2) follows from Proposition 3.21 and Proposition 8.7(2).
(2) ⇒(1).
If A
f
−→B is an initial X-isomorphism, then |B|
f−1
−−−→|A|
f
−→|B| =
|B|
idB
−−−→|B| implies, by initiality, that |B|
f−1
−−−→|A| is an A-morphism. Thus A
f
−→B
is an A-isomorphism.
(1) ⇔(3) follows by duality from (1) ⇔(2).

18th January 2005

138
Objects and Morphisms
[Chap. II
STRUCTURED ARROWS
For concrete categories A over X, we have introduced properties of A-objects and of
A-morphisms. Next we will investigate properties of pairs (f, A) consisting of an X-
morphism f and a suitably related A-object A. First we deﬁne three concepts of “gen-
eration”. Whereas for “topological” constructs the concept of generation works better
than that of extremal generation, and for “algebraic” constructs the concept of extremal
generation works better than that of generation, the concept of concrete generation
works well in either setting.
8.15 DEFINITION
Let A be a concrete category over X.
(1) A structured arrow with domain X is a pair (f, A) consisting of an A-object A
and an X-morphism X
f
−→|A|. Such a structured arrow will often be denoted by
X
f
−→|A|.
(2) A structured arrow (f, A) is said to be generating provided that for any pair of
A-morphisms r, s : A →B the equality r ◦f = s ◦f implies that r = s.
(3) A generating arrow (f, A) is called extremally generating (resp. concretely gen-
erating) provided that each A-monomorphism (resp. A-embedding) m : A′ →A,
through which f factors (i.e., f = m ◦g for some X-morphism g), is an A-isomor-
phism.
(4) In a construct, an object A is (extremally resp. concretely) generated by a
subset X of |A| provided that the inclusion map X ,→|A| is (extremally resp.
concretely) generating.
8.16 PROPOSITION
In a concrete category A over X the following hold for each structured arrow
f : X →|A|:
(1) If (f, A) is extremally generating, then (f, A) is concretely generating.
(2) If (f, A) is concretely generating, then (f, A) is generating.
(3) If X
f
−→|A| is an X-epimorphism, then (f, A) is generating.
(4) If X
f
−→|A| is an extremal epimorphism in X, and if | | preserves monomorphisms,
then (f, A) is extremally generating.

8.17 EXAMPLES48
(1) If an abstract category A is considered to be concrete over itself via the identity
functor, then an A-morphism A
f
−→B, considered as a structured arrow (f, B), is
48Gen(A) is the class of all generating structured arrows in A, ExtrGen(A) is the class of all extremally
generating structured arrows in A, ConcGen(A) is the class of all concretely generating structured
arrows in A, etc. See the Table of Symbols.
18th January 2005

Sec. 8]
Objects and morphisms in concrete categories
139
generating (resp. extremally or concretely generating) if and only if f is an epimor-
phism (resp. an extremal epimorphism). That is,
Gen(A) = Epi(A)
and
ExtrGen(A) = ConcGen(A) = ExtrEpi(A).
(2) In Vec, Grp, Sgr, Rng, and other algebraic constructs, the concepts of concrete
generation and of extremal generation coincide with the familiar (non-categorical)
concept of generation.
In the constructs Sgr and Rng the inclusion map Z ,→Q is generating, but is not
concretely generating [cf. 7.40(5)].
(3) In the construct A = Top we have
ConcGen(A) = Gen(A) = Surjective maps, and
ExtrGen(A) = Surjective maps with discrete codomain.
(4) In the construct A = Haus we have
Gen(A) = Dense maps,
ConcGen(A) = Surjective maps, and
ExtrGen(A) = Surjective maps with discrete codomain.
(5) In a partially ordered set A, considered as a concrete category over 1, every struc-
tured arrow is concretely generating. A structured arrow (f, a) is extremally gener-
ating if and only if a is a minimal element of A.
(6) In Σ-Seq, given an acceptor A, the inclusion map of {q0}, where q0 is the initial
state, concretely generates A if and only if A is reachable.
8.18 REMARK
In a concrete category A, if an A-morphism A
f
−→B is regarded as a structured arrow
(f, B) with domain |A|, then the following hold:
(1) A
f
−→B is an epimorphism if and only if (f, B) is generating.
(2) If (f, B) is extremally generating and the forgetful functor preserves monomor-
phisms, then A
f
−→B is an extremal epimorphism.
(3) If A
f
−→B is an extremal epimorphism, then (f, B) is concretely generating.
8.19 DEFINITION
Let A be a concrete category over X.
(1) Structured arrows (f, A) and (g, B) in A with the same domain are said to be iso-
morphic provided that there exists an A-isomorphism k : A →B with k ◦f = g.
18th January 2005

140
Objects and Morphisms
[Chap. II
(2) A is said to be concretely co-wellpowered provided that for each X-object X
any class of pairwise non-isomorphic concretely generating arrows with domain X
is a set.
8.20 EXAMPLES
Most of the familiar constructs such as Vec, Grp, Top, HComp, Pos, Alg(Ω) for each
Ω, and Σ-Seq for each Σ are concretely co-wellpowered. The construct with objects
all sets and morphisms all identity mappings is ﬁbre-small and co-wellpowered, but
not concretely co-wellpowered. The constructs CLat and CBoo are not concretely co-
wellpowered (cf. Exercise 8E). A proper class, ordered by equality and considered as a
concrete category over 1, is co-wellpowered, but is not concretely co-wellpowered.
8.21 PROPOSITION
Each concretely co-wellpowered concrete category is extremally co-wellpowered.
Proof: This follows immediately from the following two facts:
(1) Each extremal quotient (f, B) of A, considered as a structured arrow with domain
|A|, is concretely generating. Cf. Remark 8.18(3).
(2) Extremal quotients (f1, B1) and (f2, B2) are isomorphic if and only if the structured
arrows (f1, B1) and (f2, B2) are isomorphic.

UNIVERSAL ARROWS AND FREE OBJECTS
8.22 DEFINITION
In a concrete category A over X
(1) a universal arrow over an X-object X is a structured arrow X
u
−→|A| with domain
X that has the following universal property: for each structured arrow X
f
−→|B|
with domain X there exists a unique A-morphism ˆf : A →B such that the triangle
X
u
/
f
 @
@
@
@
@
@
@
@
|A|
ˆf

|B|
commutes,
(2) a free object over an X-object X is an A-object A such that there exists a universal
arrow (u, A) over X.
8.23 EXAMPLES
(1) In a construct, an object A is a free object
(a) over the empty set if and only if A is an initial object.
18th January 2005

Sec. 8]
Objects and morphisms in concrete categories
141
(b) over a singleton set if and only if A represents the forgetful functor (6.9).
(2) In the construct Vec each object is a free object over any basis for it.
(3) In the constructs Top and Pos the free objects are precisely the discrete ones.
(4) In the construct Ab free objects over X are the free abelian groups generated by X.
They can be constructed as the group of all functions p : X →Z with ﬁnite carrier,
where addition is carried out componentwise, and, if A is such a group of functions,
a universal arrow u : X →|A| is given by
(u(x))(z) =
(
1,
if
z = x
0,
if
z ̸= x.
Similarly, the familiar free group generated by a set X is a free object over X in the
construct Grp.
A non-free group and a free object
(5) In the construct Mon a free monoid X∗over a set X is a free object over X;
elements are words (= ﬁnite sequences, including the empty one) formed from mem-
bers of X, with operation • of concatenation: (x1, x2, . . . , xn) • (y1, y2, . . . , ym) =
(x1, x2, . . . , xn, y1, y2, . . . , ym), and u : X →|A| is given by u(x) = (x). Analogously,
in the construct Sgr a free semigroup generated by X consists of all nonempty words
formed from members of X.
(6) In each construct Alg(Ω) the free objects over a set X can be described in a way
similar to the description of initial objects [cf. 7.2(5)] except that in step (a) each
element of Ω0 ⊎X should be required to be a “term”. Notice that in any Alg(Σ) a
18th January 2005

142
Objects and Morphisms
[Chap. II
free unary algebra over a singleton set is, by coincidence, the algebra Σ∗of all words
with unary operations given by concatenations. A free algebra over a set X is the
disjoint union of card(X) copies of Σ∗(cf. Exercise 8H).
(7) In the construct CLat an initial object is the two-point chain, a free object over a
one-element set is the three-point chain, and a free object over a two-element set is
the six-element lattice formed by replacing the middle member of a three-element
chain by a four-element boolean algebra. There are no free objects over sets that
have more than two elements (cf. Exercise 8G). In the construct CBoo an initial
object is the two-point chain, the four-element boolean algebra is a free object over a
one-element set, and a free object over n (< ℵ0) generators has 22n elements. There
is no free object over any inﬁnite set. (See Exercise 8F.)
(8) In JCPos the free objects are, up to isomorphism, precisely the power sets (regarded
as JCPos objects). For each set X, the structured arrow X
u
−→|P(X)|, deﬁned by
u(x) = {x}, is a universal arrow.
However, in the construct Λ-JCPos (with objects triples (X, ≤, λ) consisting of a
complete lattice (X, ≤) and a unary operation λ on X, and morphisms the join-
preserving {λ}-homomorphisms) there do not exist free objects over any set. In
particular, Λ-JCPos has no initial object [even though Λ-JCPos is extremally co-
wellpowered, the empty set extremally generates arbitrarily large objects!], and the
forgetful functor is not representable.
(9) In the construct Cat a free object over the set {0} is a category of the form •
g
−→•
(where the universal arrow u sends 0 to g).
(10) In the construct Rng the polynomial ring Z[M] over a set M of variables is a free
object over M.
(11) Let Y be a nonempty set and consider Set as a construct via the forgetful functor
U = hom(Y, −). Then the structured arrow X
u
−→U(X × Y ) = hom(Y, X × Y ),
deﬁned by (u(x))(y) = (x, y), is universal.
(12) To construct a universal arrow in (Ban, O) over a set X, let ℓ1(X) be the subspace
of the vector space KX consisting of all r = (rx)x∈X in KX whose norm ∥r∥=
P
x∈X |rx| is ﬁnite. Then ℓ1(X) is a Banach space. Deﬁne X
u
−→O(ℓ1(X)) at y
by the Dirac function u(y) = (δyx)x∈X. Then (u, ℓ1(X)) is a universal arrow over
X. Observe, for comparison, that for the construct (Ban, U) the only set having
a universal arrow is the empty set, and that for the construct Banb the only sets
having universal arrows are the ﬁnite ones.
(13) In an abstract category, considered as a concrete category over itself via the identity
functor, every object is free over itself.
(14) In an preordered set A, considered as a concrete category over 1, an object a is free
over the single object of 1 if and only if a is the smallest element of A.
(15) In the concrete category of Rng over Mon in which the forgetful functor “forgets
addition” a universal arrow over a monoid M is given by the monoid ring Z[M] of M
18th January 2005

Sec. 8]
Objects and morphisms in concrete categories
143
over the additive group (Z, +) and the arrow u : M →|Z[M]| deﬁned by u(x) = x.
Likewise in the concrete category of Rng over Ab, where multiplication is forgotten,
a universal arrow over an abelian group G is given by the tensor ring over G.
(16) No acceptor is free in the construct Σ-Seq. (In fact, if A is an acceptor on n states
and if B is the (n + 1)-state acceptor in which the next-state maps δ(−, σ) are
(n + 1)-cycles, then there is no simulation from A to B.)
8.24 PROPOSITION
Every universal arrow is extremally generating.
Proof: Let X
u
−→|A| be a universal arrow. By the uniqueness requirement, (u, A) is
generating. Let A′
m
−−→A be an A-monomorphism, and let X
g
−→|A′| be an X-morphism
with u = m ◦g. Since (u, A) is universal, there exists an A-morphism A
ˆg
−→A′ with
g = ˆg ◦u. Hence A
idA
−−−→A and A
m◦ˆg
−−−→A are A-morphisms with idA ◦u = (m ◦ˆg) ◦u.
By the uniqueness requirement in the deﬁnition of universal arrow, this implies that
idA = m ◦ˆg. Hence m is simultaneously an A-retraction and an A-monomorphism, and
so is an A-isomorphism (7.36).

8.25 PROPOSITION
For any X-object X, universal arrows over X are essentially unique; i.e., any two uni-
versal arrows with domain X are isomorphic, and conversely, if X
u
−→|A| is a universal
arrow and A
k
−→A′ is an A-isomorphism, then X
k◦u
−−−→|A′| is also universal. A 4.19 49
8.26 DEFINITION
A concrete category over X is said to have free objects provided that for each X-object
X there exists a universal arrow over X.
8.27 EXAMPLES
By Examples 8.23 the constructs Vec, Grp, Ab, Mon, Sgr, Alg(Ω), Top, Pos, and
(Ban, O) have free objects; but the constructs CLat, CBoo, and (Ban, U) don’t. Nei-
ther do the constructs Banb and Met; however, PMet does. A partially ordered set,
considered as a concrete category over 1, has free objects if and only if it has a smallest
element.
8.28 PROPOSITION
If a concrete category A over X has free objects, then an A-morphism is an A-mono-
morphism if and only if it is an X-monomorphism.
49The symbol A 4.19 indicates that a proof of the preceding result can be obtained as a straightforward
analogue of the proof of Proposition 4.19.
18th January 2005

144
Objects and Morphisms
[Chap. II
Proof: The suﬃciency holds for all concrete categories [cf. Proposition 7.37(2)]. To see
the necessity, let A
f
−→B be an A-monomorphism, and let X
r /
s / |A| be a pair of
X-morphisms with f ◦r = f ◦s. If X
u
−→|C| is a universal arrow over X, then there
exist A-morphisms C
ˆr /
ˆs
/ A with ˆr ◦u = r and ˆs ◦u = s. Thus (f ◦ˆr) ◦u = (f ◦ˆs) ◦u.
By the uniqueness requirement in the deﬁnition of universal arrow, this implies that
f ◦ˆr = f ◦ˆs. Since f is an A-monomorphism, it follows that ˆr = ˆs, so that r = s. Hence
f is an X-monomorphism.

8.29 PROPOSITION
If a construct A has a free object over a singleton set, then the monomorphisms in A
are precisely those morphisms that are injective functions.
Proof: By Example 8.23(1) the forgetful functor for A is representable.
Hence the
result follows from Corollary 7.38.

OBJECTS AND MORPHISMS
WITH RESPECT TO A FUNCTOR
8.30 DEFINITION
Let G : A →B be a functor, and let B be a B-object.
(1) A G-structured arrow with domain B is a pair (f, A) consisting of an
A-object A and a B-morphism f : B →GA.
(2) A G-structured arrow (f, A) with domain B is called
(a) generating provided that for any pair of A-morphisms A
r /
s / ˆA , the equality
Gr ◦f = Gs ◦f implies that r = s,
(b) extremally generating provided that it is generating and whenever A′
m
−−→A
is an A-monomorphism and (g, A′) is a G-structured arrow with f = G(m) ◦g,
then m is an A-isomorphism,
(c) G-universal for B provided that for each G-structured arrow (f′, A′) with
domain B there exists a unique A-morphism A
ˆf
−→A′ with f′ = G( ˆf) ◦f, i.e.,
such that the triangle
B
f
/
f′
!D
D
D
D
D
D
D
D
GA
G ˆf

GA′
commutes.
18th January 2005

Sec. 8]
Objects and morphisms in concrete categories
145
8.31 EXAMPLES
(1) For concrete categories (A, U) over X, we have the following:
U-structured arrow = structured arrow,
U-generating arrow = generating arrow,
extremally U-generating arrow = extremally generating arrow,
U-universal arrow = universal arrow.
(2) If A is a subcategory of B and E : A →B is the associated inclusion functor, then
an E-structured arrow (u, A) with domain B is E-universal if and only if B
u
−→A
is an A-reﬂection arrow for B.
(3) Let A be a category and let G be the unique functor from A to 1. Then a G-
structured arrow (u, A) is G-universal if and only if A is an initial object in A.
(4) If G = hom(A, −) : A →Set, then a G-structured arrow X
u
−→G(B) = hom(A, B)
is G-universal if and only if for every A-object C and every family (A
fx
−−→C)x∈X of
A-morphisms there exists a unique A-morphism B
f
−→C with fx = f ◦u(x) for each
x ∈X. [By the deﬁnition of coproducts in §10, this is equivalent to ((u(x))x∈X, B)
being a coproduct of the family consisting of X copies of A; i.e., to B being an
X-copower of A with injections A
u(x)
−−−→B.]
(5) Minimal realization is universal. This means that for the category Beh of behav-
iors (i.e., triples (Σ, Y, b), where Σ∗
b−→Y is a function) and behavior morphisms
[i.e., (f, g) : (Σ, Y, b) →(Σ′, Y ′, b′), where Σ
f
−→Σ′ and Y
g
−→Y ′ are functions
with (g ◦b)(σ1σ2 · · · σn) = b′(f(σ1)f(σ2) · · · f(σn))], the minimal realization functor
M : Beh →Autr has universal arrows. Here Autr denotes the full subcategory
of Aut [3.3(4)(b)] formed by those automata for which each state can be reached
from the initial one, and M assigns to each behavior its minimal realization. An
M-universal arrow A
η
−→M(Σ, Y, bA) (where bA : Σ∗→Y is the external behavior
of A) is the unique simulation onto the minimal realization of bA.
8.32 PROPOSITION
If G : A →B is a functor, then the following are equivalent:
(1) G is faithful,
(2) each A-epimorphism, considered as a G-structured arrow, is generating,
(3) each A-identity, considered as a G-structured arrow, is generating.

8.33 PROPOSITION
Every G-universal arrow is extremally generating.
A 8.24
18th January 2005

146
Objects and Morphisms
[Chap. II
8.34 DEFINITION
G-structured arrows (f, A) and (f′, A′) with the same domain are said to be isomorphic
provided that there exists an A-isomorphism k : A →A′ with G(k) ◦f = f′.
8.35 PROPOSITION
For any functor G : A →B and any B-object B, G-universal arrows for B are es-
sentially unique; i.e., any two G-universal arrows with domain B are isomorphic, and,
conversely, if B
u
−→GA is a G-universal arrow and A
k
−→A′ is an isomorphism, then
B
Gk◦u
−−−−→GA′ is also G-universal.
A 4.19
8.36 PROPOSITION
Let G : A →B be a functor. If the triangle
X
u /
f
!D
D
D
D
D
D
D
D
GA
G ˆf

GB
commutes, where (u, A) is a G-universal arrow and A
ˆf
−→B is an A-morphism, then
the following hold:
(1) (f, B) is generating if and only if ˆf is an epimorphism.
(2) (f, B) is extremally generating if and only if ˆf is an extremal epimorphism.
Proof: It is clearly suﬃcient to show that whenever ˆf is an extremal epimorphism, then
(f, B) is extremally generating. Let X
g
−→GC be a G-structured arrow and let C
m
−−→B
be an A-monomorphism with f = Gm ◦g. Then there exists an A-morphism A
ˆg
−→C
with g = Gˆg ◦u. Thus the equality G(m ◦ˆg) ◦u = f = G ˆf ◦u implies that m ◦ˆg = ˆf.
Hence m is an isomorphism.

8.37 DEFINITION
(1) A functor G : A →B is called (extremally) co-wellpowered provided that for
any B-object B, any class of pairwise non-isomorphic (extremally) generating G-
structured arrows with domain B is a set.
(2) A faithful functor G : A →B is called concretely co-wellpowered provided that
the concrete category (A, G) is concretely co-wellpowered.
8.38 PROPOSITION
If a faithful functor G : A →B is co-wellpowered, then so is A.
A 8.21
18th January 2005

Sec. 8]
Objects and morphisms in concrete categories
147
8.39 REMARK
If a faithful functor G : A →B is extremally co-wellpowered, then A need not be
extremally co-wellpowered. Conversely, if A is co-wellpowered, then G : A →B need
not even be extremally co-wellpowered. Consider, e.g., the unique functor from a large
discrete category to 1.
More can be said if, e.g., for every B-object B there exists a universal G-structured
arrow for B. See 18.11 and 18B.
COSTRUCTURED ARROWS
All of the concepts relating to G-structured arrows have duals. In particular:
8.40 DEFINITION
Let G : A →B be a functor and let B be a B-object.
(1) A G-costructured arrow with codomain B is a pair (A, f) consisting of an
A-object A and a B-morphism GA
f
−→B.
(2) A G-costructured arrow (A, f) with codomain B is called G-co-universal for B
provided that for each G-costructured arrow (A′, f′) with codomain B there exists
a unique A-morphism A′
ˆf
−→A with f′ = f ◦G( ˆf).
8.41 EXAMPLES
(1) If A is a subcategory of B and E : A →B is the associated inclusion functor, then
an E-costructured arrow (A, u) with codomain B is E-co-universal if and only if
A
u
−→B is an A-coreﬂection arrow for B.
(2) For forgetful functors U of familiar concrete categories, U-co-universal arrows are
relatively rare. For example, Grp has U-co-universal arrows only for one-point sets,
and Pos has U-co-universal arrows only for sets with at most one point. However,
(a) in the construct Top for every set X there exists a co-universal arrow
(X, τ)
id
−−→X, where τ is the indiscrete topology,
(b) if T : X →Set is a functor and Spa(T) is the associated concrete category over
X, then for every X-object X there exists a co-universal arrow
(X, T(X))
idX
−−−→X,
(c) in the constructs Alg(Σ) of unary algebras there exist co-universal arrows for
each set X: consider the Σ-algebra XΣ∗of all functions from Σ∗(the set of all
words over Σ) into X, with the operation σ ∈Σ sending a function g : Σ∗→X
to the function g(σ−), deﬁned by: g(σ−)((σ1 · · · σn)) = g(σσ1 · · · σn).
Then
ε : XΣ∗→X given by ε(g) = g(∅) is co-universal. [In fact, given a Σ-algebra
A and a function f : A →X, the unique homomorphism ˆf : A →XΣ∗with
f = ε ◦ˆf is given by ˆf(a)(σ1 · · · σn) = f(σ1 · · · σna).]
18th January 2005

148
Objects and Morphisms
[Chap. II
Suggestions for Further Reading
Samuel, P. On universal mappings and free topological groups. Bull. Amer. Math. Soc.
54 (1948): 591–598.
Sonner, J. Universal and special problems. Math. Z. 82 (1963): 200–211.
Hales, A. W. On the non-existence of free complete Boolean algebras. Fund. Math. 54
(1964): 45–66.
Gaifman, H. Inﬁnite Boolean polynomials. Fund. Math. 54 (1964): 230–250.
Solovay, R. New proof of a theorem of Gaifman and Hales. Bull. Amer. Math. Soc. 72
(1966): 282–284.
Ehresmann, C. Construction de structures libres.
Springer Lect. Notes Math.
92
(1969): 74–104.
Pumpl¨un, D. Universelle und spezielle Probleme. Math. Ann. 198 (1972): 131–146.
EXERCISES
8A. Regular Monomorphisms vs. Embeddings
(a) Show that in a construct a regular monomorphism need not be an embedding. [Cf.
Proposition 8.7.]
(b) Prove that each regular monomorphism in a construct that has a free object over a
nonempty set must be an embedding.
(c) Prove that each embedding in a construct that has a two-element indiscrete object
must be a regular monomorphism.
8B. Initial Monomorphisms vs. Embeddings
Show that in constructs the embeddings are precisely the initial monomorphisms, but
that in concrete categories initial monomorphismss may fail to be embeddings.
8C. An Initial, Non-injective Morphism in Sgr
Show that if A resp. B are the semigroups with underlying sets {0, 1, 2} resp. {0, 1} and
multiplication deﬁned by x · y = 0 for all x and y, then the non-injective map A
f
−→B,
deﬁned by f(x) = Min{x, 1}, is an initial morphism in Sgr.
8D. A Characterization of Concretely Co-wellpowered Constructs
Show that a uniquely transportable construct is concretely co-wellpowered if and only if
it is ﬁbre-small and for every cardinal number k there exists a cardinal number k such
that every object that is concretely generated by a set of cardinality not exceeding k has
an underlying set with cardinality not exceeding k.
18th January 2005

Sec. 8]
Objects and morphisms in concrete categories
149
* 8E. CBoo is Extremally Co-wellpowered,
but Not Concretely Co-wellpowered
Let CBoo be the construct of complete boolean algebras and boolean homomorphisms
that preserve arbitrary meets and joins. Show that:
(a) CBoo is wellpowered and extremally co-wellpowered,
(b) CBoo is not concretely co-wellpowered,
(c) the forgetful functor CBoo →Set is not extremally co-wellpowered.
[Hint for (b) and (c): Let X be a topological space. A subset A of X is called regular
open provided that int(clA) = A (where “int” designates “interior” and “cl” designates
“closure”). The set R(X) of all regular open subsets of X is a complete boolean algebra
with respect to the following operations:
_
M = int(cl(
[
M)),
for M ⊆R(X)
^
M = int(
\
M),
for ∅̸= M ⊆R(X)
A′ = int(X −A),
for A ∈R(X).
Let K be an inﬁnite cardinal number. Let X be the set of all ordinal numbers with
cardinality less than K, considered as a discrete topological space. Let P = XN be the
topological product of countably many copies of X, with projections πn : XN →X. The
complete boolean algebra R(XN) is extremally generated by the family
{π−1
n (ξ)
 n ∈N, ξ ∈X}, hence by the countable set {Am,n
 m, n ∈N}, where
Am,n = {x ∈XN  πm(x) ≤πn(x)}.]
8F. Free Objects in CBoo
Show that in the construct CBoo
(a) there exists a free object over each ﬁnite set.
(b) there does not exist a free object over any inﬁnite set. [Hint: 8E.]
8G. Free Objects in JPos, JCPos, CLat, and Fram
Show that
* (a) the constructs JCPos and Fram have free objects.
(b) in the construct JPos there exists a free object over X if and only if card X ̸= 1.
* (c) in the construct CLat there exists a free object over X if and only if card X ≤2.
8H. Free Objects in Alg(Ω)
As outlined in Example 8.23(6) free Ω-algebras can be constructed as algebras of terms.
Another, more graphic, description can be achieved via labeled trees: Consider the
inﬁnite regular tree ω∗of all words in ω (with root ∅, the empty word; the ﬁrst level
consists of all natural numbers i ∈ω; in the second level, the successors of i are all words
ij with j ∈ω, etc.). An Ω-labeled tree in a set X is deﬁned to be a “labeling” partial
function t : ω∗→Ω⊎X such that
18th January 2005

150
Objects and Morphisms
[Chap. II
(a) the domain of deﬁnition Dt of t is ﬁnite, and it has ∅as a member;
(b) if t(i1i2 · · · in) is an operation symbol of arity k, then i1i2 · · · inin+1 belongs to Dt if
and only if in+1 ∈{0, 1, . . . , k −1};
(c) if t(i1i2 · · · in) is an element of X, then i1i2 · · · inin+1 does not belong to Dt for any
in+1.
Show that the set of all Ω-labeled trees is an Ω-algebra that is isomorphic to the term
algebra, and hence is free.
[Given σ ∈Ωof arity k, and given Ω-labeled trees t0, t1, . . . , tk−1, then the tree
σ(t0, t1, . . . , tk−1) = t is deﬁned on i0i1 · · · in by
t(i0i1 · · · in) = ti0(i1 · · · in)
for
i0 < k,
i1 · · · in ∈Dti0;
otherwise it is undeﬁned.]
8I. Free Objects in Setop, Topop
0 , and HCompop
Show that the constructs Setop (see 5.2(4)), Topop
0
(see 5L), and HCompop (see 5M)
have free objects and, in each case, describe them explicitly.
8J. Free Objects in BooSp and HComp
Show that the constructs BooSp and HComp have free objects and, in each case,
describe them explicitly.
8K. Free Objects in (Ban, O) and (Ban, U)
Show that (Ban, O) has free objects (cf. 8.23(12)), but that (Ban, U) has free objects
only over the empty set.
* 8L. Isomorphic Free Objects
Show that it can happen that a construct A has free objects in such a way that any
two free objects over ﬁnite, nonempty sets are isomorphic (as objects). [Hint: Consider
the concrete full subcategory of Alg(Ω), where Ω= (1, 1, 2), consisting of those Ω-
algebras (X, (ω1, ω2, ω3)) that satisfy the equations ω1(ω3(x, y)) = x, ω2(ω3(x, y)) =
y and ω3(ω1(x), ω2(x)) = x.
Show that whenever an object (X, (ω1, ω2, ω3)) of the
construct A is free over a set Y ⊎{x, y}, then it is free over Y ⊎{ω3(x, y)}.]
8M. Discrete Objects
Show that for concrete categories the following hold:
(a) Retracts of discrete objects are discrete.
(b) An object A is discrete if and only if the structured arrow |A|
id
−−→|A| is universal.
8N. A Characterization of Faithfulness
Show that a functor A
G
−−→B is faithful if and only if every A-epimorphism A
f
−→ˆA,
considered as a G-structured arrow (Gf, ˆA), is generating.
18th January 2005

Sec. 8]
Objects and morphisms in concrete categories
151
8O. Regular Epimorphisms and Finality
Let A be a concrete category over X that has free objects, and let f be an A-morphism
such that Uf is a regular epimorphism in X. Show that f is a regular epimorphism in
A if and only if f is ﬁnal.
8P. Free Automata
(a) Show that the construct Σ-Seq has free objects if and only if Σ = ∅.
(b) Show that Aut considered as a concrete category over Set×Set×Set has only the
(trivial) free objects over (Σ, Q, Y ) with Q = Y = ∅.
18th January 2005

9 Injective objects and essential embed-
dings
Earlier it has been shown that many familiar constructions, particularly “completions”
such as the completion of a metric space or the ˇCech-Stone compactiﬁcation of a Ty-
chonoﬀspace, can be naturally regarded as reﬂections. However, there also exist familiar
completions that cannot be (or only artiﬁcially can be) regarded as such. Examples are
the Mac Neille completion of a poset and the algebraic closure of a ﬁeld.50 In both cases,
and in several others, the construction in question can be regarded rather naturally as an
injective hull, a concept that will be studied in this section. Roughly speaking, an object
C is called injective provided that for any object A, any morphism from a subobject
of A into C can be extended to a morphism from A into C. Since a satisfactory con-
cept of subobjects is available for concrete categories, but not for arbitrary categories,
we will ﬁrst deﬁne injective objects for concrete categories only. Later, for arbitrary
categories A and arbitrary classes M of A-morphisms, M-injective objects will be intro-
duced in such a way that for concrete categories the injective objects are precisely the
Emb(A)-injective objects.
INJECTIVITY IN CONCRETE CATEGORIES
For concrete categories we will use the notational conventions described in Remark 6.22.
9.1 DEFINITION
In a concrete category an object C is called injective provided that for any embedding
A
m
−−→B and any morphism A
f
−→C there exists a morphism B
g
−→C extending f, i.e.,
such that the triangle
A
m
/
f
@
@
@
@
@
@
@
B
g

C
commutes.
9.2 REMARK
The morphism g in the above deﬁnition is not required to be uniquely determined by m
and f. This contrasts sharply with many categorical deﬁnitions in which existence and
uniqueness requirements are coupled (see 4.16 for a typical example).
9.3 EXAMPLES
In Examples (1)–(5) below, we consider injective objects in various constructs:
50Observe, e.g., that there exist two diﬀerent automorphisms of the ﬁeld of complex numbers (the
algebraic closure of the ﬁeld of real numbers) that keep the reals pointwise ﬁxed.
152

Sec. 9]
Injective objects and essential embeddings
153
(1) In Set the injective objects are precisely the nonempty sets.
(2) In Pos the injective objects are precisely the complete lattices.
[Injectivity of a
complete lattice C follows from the fact that, for given m and f as in Deﬁnition
9.1, the map g : B →C deﬁned by g(b) = sup{f(a) | a ∈A and m(a) ≤b} is order-
preserving. Completeness of an injective object C follows from 9.5 and the fact that
C is a retract of its Mac Neille completion.] Similarly the injective objects
(a) in Boo (and in the construct DLat of distributive lattices) are precisely the
complete Boolean algebras,
(b) in the construct SLat (posets with ﬁnite meets and maps that preserve ﬁnite
meets) are precisely the frames [see Exercise 5L(b)],
(c) in JCPos are precisely the completely distributive complete lattices.
(3) (Algebra)
(a) In Vec every object is injective.
(b) In Ab the injective objects are precisely the divisible abelian groups.
(c) In Alg(1) the injective objects are precisely those unary algebras whose single
unary operation is surjective and has a ﬁxed point. Analogously, a {σ}-acceptor
is injective in {σ}-Seq if and only if every state is ﬁnal and its next state function
is a permutation with a ﬁxed point.
(d) In Grp only the terminal objects are injective [since each group can be properly
embedded into a simple group].
Analogously, terminal objects are the only
injective objects in Lat, Mon, Sgr, and Rng.
(4) (Topology)
(a) In HComp the injective objects are precisely the retracts of powers [0, 1]I of the
unit interval [0, 1]. In particular, [0, 1] is injective (Tietze-Urysohn Theorem).
(b) In BooSp the injective objects are precisely the retracts of Cantor spaces, i.e.,
of powers of the two-element Boolean space B = ({0, 1}, P{0, 1}).
(c) In Top0 the injective objects are precisely the retracts of powers of the Sierpinski
space S = ({0, 1}, {∅, {0}, {0, 1}}).
(d) In Top the injective objects are precisely the retracts of powers CI of the space
C = ({0, 1, 2}, {∅, {0, 1}, {0, 1, 2}}).
(e) In Met an object (X, d) is injective if and only if it is hyperconvex, i.e., if for
any superadditive map51 f : X →R+ there exists z ∈X with d(z, x) ≤f(x)
for all x ∈X.
(f) In the construct Unif of uniform spaces and uniformly continuous functions,
the unit interval [0, 1] is injective, but the real line R is not.
51f : X →R+ is superadditive provided that d(x, y) ≤f(x) + f(y) for all x, y ∈X.
18th January 2005

154
Objects and Morphisms
[Chap. II
(g) In some constructs (e.g., for Top1, Haus, and Tych) only the terminal objects
are injective [since a map f from R \ {0} into a T1-space X, sending all r < 0
to x and all r > 0 to y, can be extended to a continuous map f : R →X only
if x = y].
(5) (Analysis)
In Ban(K) (Banach spaces over K) the injective objects are (up to isomorphism)
precisely the function spaces C(X, K) for extremally disconnected compact Haus-
dorﬀspaces X. [In case K is the ﬁeld R of real numbers, these are precisely the
hyperconvex spaces (see (4)(e) above). In case K is the ﬁeld C of complex numbers,
the zero-space is the only hyperconvex injective object.] In particular, K itself is
injective (Hahn-Banach Theorem).
(6) In a partially ordered set, considered as a concrete category over 1, every object is
injective.
9.4 PROPOSITION
Every terminal object is injective.

9.5 PROPOSITION
Every retract of an injective object is injective.
Proof: Let C
r
−→D be a retraction with C an injective object.
Then there exists
D
s
−→C with r ◦s = idD. Let A
m
−−→B be an embedding and A
f
−→D be a morphism.
Since C is an injective object, there exists an extension B
g
−→C of A
s◦f
−−−→C; i.e., a
morphism g such that
A
m
/
f

B
g

D
s
/ C
commutes. Thus r ◦g is an extension of f.

9.6 DEFINITION
In a concrete category an object C is called an absolute retract provided that any
embedding with domain C is a section.
9.7 PROPOSITION
Every injective object is an absolute retract.

9.8 REMARK
One can easily provide constructs in which absolute retracts fail to be injective. However,
as we shall see below (9.10), under reasonable assumptions, injective objects are precisely
the absolute retracts. From Examples 9.17 we see that this is the case in the constructs
Set, Vec, Pos, Ab, Met, (Ban, O), and Field (= ﬁelds and algebraic ﬁeld extensions).
18th January 2005

Sec. 9]
Injective objects and essential embeddings
155
9.9 DEFINITION
A concrete category has enough injectives provided that each of its objects is an
initial subobject of an injective object.
9.10 PROPOSITION
If a concrete category A has enough injectives, then in A injective objects are precisely
the absolute retracts.
Proof: Let C be an absolute retract in A, and let C
m
−−→D be an initial monomorphism
with D an injective object. Since C is an absolute retract, m is a section, i.e., there
exists a retraction D
r
−→C with r ◦m = idC. By Proposition 9.5, C is injective.

9.11 REMARK
If a concrete category has enough injectives, one may ask whether for every object A
there exists a distinguished injective extension (i.e., an embedding A
m
−−→B with B
an injective object), e.g., one which is in some sense minimal or smallest. The crucial
concept needed in order to describe and analyze such “injective hulls” is that of essen-
tial extensions, i.e., extensions that are in a certain sense “dense” (but not necessarily
epimorphic).
9.12 DEFINITION
In a concrete category an embedding A
m
−−→B is called essential provided that a
morphism B
f
−→C is an embedding, whenever A
f◦m
−−−→C is an embedding.
9.13 EXAMPLES
In Examples (1)–(8) below, we consider essential embeddings for various constructs:
(1) In Vec the essential embeddings are the isomorphisms.
(2) In Set the only essential embeddings are the bijective functions and the maps
∅→{a} with empty domain and one-element codomain.
(3) In Pos the essential embeddings are the embeddings that are meet-dense and join-
dense (e.g., the embedding of Q into R).
(4) In Boo the essential embeddings are the join-dense embeddings (which are auto-
matically meet-dense).
(5) In Ab an embedding A
m
−−→B is essential if and only if every nontrivial subgroup
of B meets m[A] nontrivially (e.g., the embedding of (Z, +) into the rationals).
(6) In Tych the essential embeddings are precisely the homeomorphisms, the one-point
compactiﬁcations of locally compact, noncompact spaces, and the embeddings of the
empty space into one-point spaces. In particular this example shows that epimorphic
embeddings need not be essential.
(7) In Met an embedding A
m
−−→B is essential if and only if it is tight, i.e., if and only
if it satisﬁes the following two conditions:
18th January 2005

156
Objects and Morphisms
[Chap. II
(a) dB(b1, b2) = sup{ dB(m(a), b1) −dB(m(a), b2)
 a ∈A } for all b1, b2 ∈B.
(b) For each b ∈B, the map f : A →R+, deﬁned by f(a) = dB(m(a), b), is a
minimal superadditive map [cf. 9.3(4)(e)].
In particular, if A is a subspace of R with V A = a and W A = b, then the embedding
A →[a, b] is essential.
(8) In Lat every object has arbitrarily large essential extensions (see Exercise 9H).
9.14 PROPOSITION
(1) Every isomorphism is essential.
(2) The composite of essential embeddings is essential.
(3) If f and g are embeddings with g ◦f essential, then g is essential.
(4) If f and g ◦f are essential embeddings, then g is an essential embedding.

9.15 PROPOSITION
Injective objects have no proper essential extensions.
Proof: If C
m
−−→D is an extension of an injective object C, then there is a retraction g
with idC = g ◦m. If m is essential, then g is an embedding, and hence an isomorphism.
Thus m is an isomorphism as well.

9.16 DEFINITION
An injective hull of A is an extension A
m
−−→B of A such that B is injective and m is
essential.
9.17 EXAMPLES
In Examples (1)–(6) below, we describe injective hulls for various constructs:
(1) In Vec every object A has an injective hull, namely, A
idA
−−−→A.
(2) In Set every object A has an injective hull, namely,
(
A
idA
−−−→A,
in case
A ̸= ∅;
A −−→{a},
in case
A = ∅.
(3) In Pos every object has an injective hull, namely, its Mac Neille completion (=
completion by cuts). Likewise in Boo every object has an injective hull, its Mac
Neille completion.
(4) In Ab every object has an injective hull. The embedding Z ,→Q is an example.
(5) In the construct Field every object has an injective hull, namely, its algebraic clo-
sure. The embedding R ,→C is an example.
18th January 2005

Sec. 9]
Injective objects and essential embeddings
157
(6) In Met every object has an injective hull, namely, its hyperconvex envelope. If A
is a subspace of R with V A = a and W A = b, then the embedding A ,→[a, b] is an
injective hull. Likewise in (Ban, O) every object has an injective hull.
9.18 REMARK
It is sometimes diﬃcult to decide whether or not every object in a given concrete category
has an injective hull. The existence of enough injectives is a necessary but not suﬃcient
condition. For example, the construct BooSp has enough injectives, since every Boolean
space is a subspace of some Cantor space [cf. 9.3(4)(b)], but no nonempty Boolean space
has a proper essential extension. A similar situation occurs for HComp (cf. Exercise
9D). In Exercise 9C we will formulate conditions that guarantee the existence of injective
hulls.
9.19 PROPOSITION
Injective hulls are essentially unique, i.e.,
(1) if (m, B) and (m′, B′) are injective hulls of A, then there exists an isomorphism
B
k
−→B′ with m′ = k ◦m,
(2) if (m, B) is an injective hull of A, and if B
k
−→B′ is an isomorphism, then (k◦m, B′)
is an injective hull of A.
Proof:
(1). Since m is an embedding and B′ is injective, there exists a morphism B
k
−→B′ with
m′ = k ◦m. By Proposition 9.14(4), k is an essential embedding. Since B has no
proper essential extension, k is an isomorphism.
(2). Obvious.

9.20 PROPOSITION
If an object A has an injective hull, then for any extension (m, B) of A the following
conditions are equivalent:
(1) (m, B) is an injective hull of A,
(2) (m, B) is a maximal essential extension of A (i.e., (m, B) is an essential exten-
sion of A, and B has no proper essential extension),
(3) (m, B) is a largest essential extension of A (i.e., (m, B) is an essential exten-
sion of A, and for every essential extension (m′, B′) of A there exists an essential
embedding B′
m
−−→B with m = m ◦m′),
(4) (m, B) is a smallest injective extension of A (i.e., (m, B) is an injective exten-
sion of A, and for every injective extension (m′, B′) of A there exists an embedding
B
m
−−→B′ with m′ = m ◦m),
(5) (m, B) is a minimal injective extension of A (i.e., (m, B) is an injective exten-
sion of A and whenever A
m
−−→B = A
m′
−−→B′
m
−−→B with m′ and m embeddings,
and B′ an injective object, then m is an isomorphism).
18th January 2005

158
Objects and Morphisms
[Chap. II
Proof: Let (m0, B0) be an injective hull of A.
(1) ⇒(2). Immediate from Proposition 9.15.
(2) ⇒(1). Let (m, B) be a maximal essential extension of A. Since B0 is injective,
there exists a morphism f with m0 = f ◦m. By Proposition 9.14(4), f is an essential
embedding. Since (m, B) is a maximal essential extension, f must be an isomorphism.
Hence (m, B) is an injective hull of A.
(1) ⇒(3). Let (m, B) be an essential extension of A. By the injectivity of B0, there exists
a morphism f with m0 = f ◦m. By Proposition 9.14(4), f is an essential embedding.
(3) ⇒(1). Let (m, B) be a largest essential extension of A. Then there exists a morphism
g with m = g ◦m0. By Proposition 9.14(4) g is an essential embedding, and so by
Proposition 9.15 is an isomorphism. Hence (m, B) is an injective hull of A.
(1) ⇒(4). Immediate.
(4) ⇒(1). If (m, B) is a smallest injective extension of A, then there exists an embedding
m with m0 = m ◦m. By Proposition 9.14(3), m is essential and hence, since B has no
proper essential extension, m is an isomorphism. Thus (m, B) is an injective hull of A.
(1) ⇒(5). Let (m, B) be an injective extension of A and let (m, B0) be an extension of
B with m0 = m ◦m. Then by Proposition 9.14(3), m is an essential embedding; hence,
since B has no proper essential extensions, m is an isomorphism.
(5) ⇒(1). Let (m, B) be a minimal injective extension of A. Since B is injective, there
exists a morphism f with m = f ◦m0. Since m0 is essential, f is an embedding; hence,
by (5) an isomorphism. Thus (m, B) is an injective hull of A.

9.21 REMARK
If A has no injective hull, then the concepts mentioned in the above proposition may
fall apart. For example, in Tych every object has a simultaneously largest and max-
imal essential extension, but no space with more than one point has an injective hull
[cf. 9.13(6) and 9.3(4)]. For further “negative” examples see Exercises 9F and 9G.
M-INJECTIVES IN ABSTRACT CATEGORIES
9.22 DEFINITION
Let M be a class of morphisms in a category A.
(1) An object C is called M-injective provided that for every morphism A
m
−−→B in
M and every morphism A
f
−→C there exists a morphism B
g
−→C with f = g ◦m.
(2) A morphism A
m
−−→B in M is called M-essential provided that a morphism
B
f
−→C belongs to M whenever f ◦m does.
(3) An M-injective hull of an object A is a pair (m, B) consisting of an M-injective
object B and an M-essential morphism A
m
−−→B.
18th January 2005

Sec. 9]
Injective objects and essential embeddings
159
(4) A has enough M-injectives provided that for each object A there exists an M-
injective object C and a morphism A
m
−−→C in M.
9.23 REMARK
If M is the class of all embeddings in a concrete category A, then the concepts deﬁned
above specialize to those of injective objects, essential embeddings, and injective hulls.
Also the previous results of this section carry over to the more general context of M-
injectivity, provided that suitable assumptions are imposed on M, e.g.,
(a) Iso(A) ⊆M ⊆Mono(A); i.e., M is a class of A-monomorphisms that contains all
A-isomorphisms,
(b) M ◦M ⊆M; i.e., M is closed under composition.
We refrain from explicitly formulating the corresponding results.
9.24 EXAMPLES
(1) In any category, if M consists of all sections, then every object is M-injective.
(2) In Met, if M consists of all dense embeddings, then the M-injective objects are the
complete metric spaces, and the M-injective hulls are the metric completions.
(3) In Top0, if M consists of all front-dense embeddings, then the M-injective objects
are the sober spaces, and the M-injective hulls are the sober reﬂections.
(4) In Top, if M consists of all embeddings X →X ∪{p} of inﬁnite discrete spaces into
ultraﬁlter spaces (i.e., p is a point of the ˇCech-Stone compactiﬁcation of X), then
the M-injective objects are the compact spaces.
(5) In Top, if M consists of the single embedding {0, 1} →[0, 1], then the M-injective
objects are the pathwise connected spaces. Similarly, if M consists of the single
embedding of the unit circle into the unit disc, then a complex domain is an M-
injective object if and only if it is simply connected.
(6) In Top a metrizable space X satisﬁes dim X ≤n if and only if the n-sphere Sn is
an M-injective object, where M consists of all embeddings of closed subspaces of X
into X.
(7) In Top, if M consists of all embeddings of closed subspaces of normal spaces, then
[0, 1] and R are M-injective objects [Tietze-Urysohn Theorem].
(8) In Ab, if M consists of all pure embeddings, then the M-injective objects are the
algebraically compact abelian groups, or, equivalently, are all the direct summands
of direct products of cocyclic abelian groups.
(9) In CAT(X), if M consists of all concrete full embeddings, then the M-injective
objects are the “topological” concrete categories over X. Such categories will be
deﬁned and studied in detail in §21. In particular, the constructs Top, Unif, Rel,
Prost, and each Spa(T) are topological.
18th January 2005

160
Objects and Morphisms
[Chap. II
(10) In a (meet) semilattice C, considered as a category, an object is Mono-injective if
and only if it is the largest element of C.
9.25 PROPOSITION
If B is a reﬂective, isomorphism-closed, full subcategory of A and M is the class of all
B-reﬂection arrows, then
(1) the M-injective objects of A are precisely the B-objects, and
(2) the M-injective hulls are precisely the B-reﬂections.
Proof:
(1). Clearly each B-object is M-injective.
Let C be an M-injective object, and let
C
r
−→B be an B-reﬂection arrow for C. Then there exists some B
f
−→C for which
idC = f ◦r. The fact that idB ◦r = (r ◦f) ◦r and the uniqueness in the deﬁnition
of reﬂection arrow show that idB = r ◦f. Thus r is an isomorphism, so that since
B is isomorphism-closed, C is a B-object.
(2). By (1) we need only show that each B-reﬂection arrow A
r
−→B is M-essential.
Suppose that A
r
−→B
f
−→B′ belongs to M, i.e., is also a B-reﬂection arrow.
Since B-reﬂection arrows for A are essentially unique (4.19), we can conclude that
B
f
−→B′ is an isomorphism, and hence is a member of M.

9.26 REMARK
We may call a class B of A-objects (resp. the associated full subcategory B of A) an
injectivity class in A, whenever there exists a class M of A-morphisms such that
B is precisely the class of M-injective objects. The above proposition shows that every
reﬂective, isomorphism-closed, full subcategory of A is an injectivity class. The converse
is not true. By Example 9.24(4) compact spaces form an injectivity class in Top, but
the associated subcategory is not reﬂective in Top. A characterization of injectivity
classes by suitable stability properties is unknown even for “nice” categories (e.g., for
Top). Connected spaces, which have stability properties similar to those of compact
spaces (e.g., they are closed under the formation of products and of continuous images),
do not form an injectivity class in Top. In fact the only injectivity class in Top that
contains all connected spaces is Top itself.
18th January 2005

Sec. 9]
Injective objects and essential embeddings
161
PROJECTIVITY
9.27 TABLE OF DUAL CONCEPTS
The following table provides the names for the concepts dual to those investigated in
this section:
Concept
Dual Concept
embedding
quotient morphism
injective object
projective object
essential embedding
coessential quotient morphism
injective hull
projective cover
M-injective object
M-projective object
M-essential morphism
M-coessential morphism
M-injective hull
M-projective cover
9.28 EXAMPLES
In Examples (1)–(4) below, we consider projective objects in various constructs:
(1) In Set and in Vec every quotient morphism is a retraction. Hence in either con-
struct every object is projective, and the coessential quotient morphisms are the
isomorphisms. Thus, in these constructs, each object has a projective cover.
(2) In any of the constructs Top, Pos, Ab, and Grp the projective objects are precisely
the free objects. Projective covers generally fail to exist.
(3) In BooSp and in HComp the projective objects are the extremally disconnected
compact Hausdorﬀspaces (= the retracts of ˇCech-Stone compactiﬁcations of dis-
crete spaces), and the coessential quotient morphisms are the irreducible quotient
morphisms (= those continuous surjections f : X →Y that map no proper closed
subset of X onto Y ). Projective covers exist for each object (and are called projective
resolutions).
(4) In Alg(Ω) the projective objects are precisely the retracts of the free objects. This
follows from the next proposition:
9.29 PROPOSITION
If (A, U) is a concrete category over X that has free objects, and E is the class of all
A-morphisms f for which Uf is a retraction, then the following are equivalent:
(1) A is an E-projective object,
(2) A is a retract of a free object.
18th January 2005

162
Objects and Morphisms
[Chap. II
Proof: (1) ⇒(2). Let (u, B) be a universal arrow over UA. Then there exists a unique
A-morphism e : B →A with idUA = Ue ◦u. So e belongs to E. Hence, by (1), there
exists an A-morphism f : A →B with idA = e ◦f. Consequently A is a retract of the
free object B.
(2) ⇒(1). Let A be a free object (with universal arrow (u, A)), let e : B →C be
a morphism in E, and let f : A →C be a A-morphism. Since in X every object is
UE-projective there exists an X-morphism g such that the diagram
X
u
/
g

UA
Uf

UB
Ue
/ UC
commutes. Since (u, A) is universal, there exists a unique A-morphism k : A →B with
g = Uk ◦u. Hence Uf ◦u = Ue ◦g = Ue ◦Uk ◦u = U(e ◦k) ◦u, which implies that
f = e ◦k. Hence A is E-projective. By the dual of Proposition 9.5 every retract of A is
also E-projective.

Projectivity and retracts of a free object
9.30 COROLLARY
If in a construct with free objects every surjective morphism is a quotient morphism,
then the projective objects are precisely the retracts of the free objects.

18th January 2005

Sec. 9]
Injective objects and essential embeddings
163
9.31 EXAMPLES
The above corollary applies to such constructs as Grp, Lat, HComp (and many others).
Suggestions for Further Reading
Baer, R. Abelian groups that are direct summands of every containing abelian group.
Bull. Amer. Math. Soc. 46 (1940): 800–806.
Eckmann, B., and A. Schopf. ¨Uber injektive Moduln. Archiv Math. 9 (1953): 75–78.
Gleason, A. M. Projective topological spaces. Illinois J. Math. 2 (1958): 482–489.
Isbell, J. R. Six theorems about injective metric spaces. Comment. Math. Helv.
39
(1964): 65–76.
Cohen, H. B. Injective envelopes of Banach spaces. Bull. Amer. Math. Soc. 70 (1964):
723–726.
Maranda, J. M. Injective structures. Trans. Amer. Math. Soc. 110 (1964): 98–135.
Banaschewski, B., and G. Bruns. Categorical characterization of the Mac Neille com-
pletion. Archiv Math. 18 (1967): 369–377.
Banaschewski, B. Projective covers in categories of topological spaces and topologi-
cal algebras. Proceedings of the Kanpur Topological Conference 1968, Academia,
Prague, 1971, 63–91.
Banaschewski, B. Injectivity and essential extensions in equational classes of algebras.
Queen’s Papers Pure Appl. Math. 25 (1970): 131–147.
Scott, D. Continuous lattices. Springer Lect. Notes Math. 274 (1972): 97–136.
Banaschewski, B. Essential extensions of T0-spaces. Gen. Topol. Appl. 7 (1977): 233–
246.
Blass, A. Injectivity and projectivity of abelian groups and the axiom of choice. Trans.
Amer. Math. Soc. 255 (1979): 31–59.
Tholen, W. Injective objects and cogenerating sets. J. Algebra 73 (1981): 139–155.
Porst, H.-E. Characterization of injective envelopes. Cahiers Topol. Geom. Diﬀ.
22
(1981): 399–406.
18th January 2005

164
Objects and Morphisms
[Chap. II
EXERCISES
* 9A. The Axiom of Choice
Many results of this book can be expressed (in localized form) in the realm of Zermelo-
Fraenkel set theory (ZF). But if the axiom of choice for sets (AC) is not assumed, several
results fail to be true. Consider the following:
(ET) In Set every epimorphism is a retraction.
(PT) In Set every product of injective objects is injective.
(BT) The injective objects in Ab are precisely the divisible abelian groups.
(ST) The injective objects in Boo are precisely the complete Boolean algebras.
(UT) In Boo the two-element Boolean algebra is injective.
(GT) The projective objects in HComp are the extremally disconnected compact Haus-
dorﬀspaces.
(a) that in ZF the following implications hold:
(AC) ⇐⇒(ET) ⇐⇒(PT) ⇐⇒(BT) =⇒(ST) =⇒(UT).
(b) Show that in ZF the following holds: (ST) ⇐⇒[(GT) and (UT)].
(c) Does (ST) imply (AC)? [Unsolved.]
9B. A Characterization of Injective Objects
Let A be a construct satisfying
(1) A has enough injectives, and
(2) for every embedding A
m
−−→B there exists a morphism B
f
−→C such that
A
f◦m
−−−→C is an essential embedding.
Show that in A injective objects are precisely those objects that have no proper essential
extension.
9C. Existence of M-Injective Hulls
Let M be a class of morphisms in a category A and let M∗be the class of M-essential
morphisms. Assume that the following conditions are satisﬁed:
(1) Iso(A) ⊆M ⊆Mono(A),
(2) M ◦M ⊆M,
(3) for any m ∈M, there exists an A-morphism f such that f ◦m ∈M∗,
(4) for every 2-source B
m
←−−A
f
−→C with m ∈M, there exists a 2-sink
B
f
−→D
m
←−−C with m ∈M and f ◦m = m ◦f,
(5) every well-ordered system in M has an upper bound in M,
18th January 2005

Sec. 9]
Injective objects and essential embeddings
165
(6) A is M∗-co-wellpowered (in the obvious sense; M∗need not consist of epimorphisms
only).
Show that
(a) For A-objects A the following conditions are equivalent:
(a1) A is M-injective,
(a2) every A
m
−−→B in M is a section,
(a3) every A
m
−−→B in M∗is an isomorphism.
(b) Every A-object has an M-injective hull.
* 9D. Enough Injectives and Injective Hulls in HComp
Show that HComp has enough injectives, but that the only compact Hausdorﬀspace
that has a proper essential extension is the empty space.
9E. Regular Projective Objects
Show that the RegEpi-projective objects
* (a) in Top are the discrete topological spaces,
* (b) in Haus are the discrete topological spaces,
(c) in Set2 are the injective functions,
(d) in (Set2)op are the surjective functions with nonempty domain.
9F. Injective Objects and Maximal Essential Extensions in Top1
Show that
(a) In Top1 the following conditions are equivalent:
(1) X is injective,
(2) X is an absolute retract,
(3) X is a terminal object.
(b) If a T1-space X has a point such that each of its neighborhoods is coﬁnite in X,
then X has no proper essential extension. If a T1-space X has no such point, then it
has an essentially unique proper essential extension. [Add a point p to X with each
neighborhood of p coﬁnite in X ∪{p}.]
(c) In Top1 every object has an essentially unique maximal essential extension.
(d) In Top1 the only objects that have injective hulls are the initial object and the
terminal objects.
(e) If M is the class of embeddings in Top1, then all the conditions of Exercise 9C are
satisﬁed except condition (3).
18th January 2005

[Chap. II
* 9G. Minimal and Smallest Injective Extensions
Show that
(a) Minimal injective extensions need not be smallest injective extensions. [In the con-
struct that consists of all sets X with card(X) ̸= 1 together with all identities
and constant maps as morphisms, every ∅→B with B ̸= ∅is a minimal injective
extension. However, ∅has no smallest injective extension.]
(b) Smallest injective extensions need not be minimal. [In the full subconstruct of Set
that contains ∅and all inﬁnite sets, ∅→N is a smallest injective extension. However,
∅has no minimal injective extension.]
(c) Injective extensions that are simultaneously smallest and minimal need not be in-
jective hulls.
[In the full subconstruct of Set that consists of all sets X with
card(X) ̸= 1, the inclusion ∅,→{1, 2} is simultaneously a smallest and a mini-
mal injective extension. However, ∅has no M-injective hull.]
9H. Essential Extensions in Lat
Show that every lattice that has at least two elements has arbitrarily large essential
extensions. [Hint: First assume that L is a lattice with smallest element 0 and largest
element 1. Show that for any set A that has at least three elements and is disjoint from
L, if A is ordered by equality, then the embedding
1
L \ {0, 1}
v
v
v
v
v
v
v
v
v
v
H
H
H
H
H
H
H
H
H
H
0
 
/
1
========
L \ {0, 1}
v
v
v
v
v
v
v
v
v
v
H
H
H
H
H
H
H
H
H
H
A
0

is an essential extension of L.]
9I. Injective Automata
(a) Prove that the following are equivalent for each object A of {σ}-Seq:
(1) A is injective,
(2) A is an absolute retract,
(3) all states in A are ﬁnal, and δ(−, σ) is a permutation with a ﬁxed point.
Whenever Σ has more than one element, show that there exists an object of Σ-Seq
that is not an absolute retract, although every state is ﬁnal and each δ(−, σ) is a
permutation with a ﬁxed point.
(b) Characterize those objects of Σ-Seq that have an injective hull.
18th January 2005

Chapter III
SOURCES AND SINKS
A source
A sink
18th January 2005
167


10 Sources and sinks
SOURCES
A basic categorical concept that simultaneously generalizes the concepts of objects and
of morphisms is that of sources.
10.1 DEFINITION
A source is a pair (A, (fi)i∈I) consisting of an object A and a family of morphisms
fi : A →Ai with domain A, indexed by some class I. A is called the domain of the
source and the family (Ai)i∈I is called the codomain of the source.
10.2 REMARK
(1) Whenever convenient we use more concise notations, such as (A, fi)I, (A, fi) or
(A
fi
−−→Ai)I.
(2) The indexing class I of a source (A, fi)I may be a proper class, a nonempty set, or
the empty set. In case I = ∅, the source is determined by A. In case I ̸= ∅, the
source is determined by the family (fi)I.
(3) Sources indexed by the empty set are called empty sources and are denoted by
(A, ∅). Whenever convenient, objects may be regarded as empty sources.
(4) Sources that are indexed by a set are called set-indexed or small.
(5) Sources that are indexed by the set {1, . . . , n} are called n-sources and are denoted
by (A, (f1, . . . , fn)). Whenever convenient, morphisms f : A →B may be regarded
as 1-sources (A, f).
(6) There are properties of sources that depend heavily on the fact that (fi)I is a family,
i.e., an indexed collection (e.g., the property of being a product). There are other
properties of sources (A, fi), depending on the domain A and the associated class
{ fi | i ∈I } only (e.g., the property of being a mono-source).
In order to avoid
a clumsy distinction between indexed and non-indexed sources, we will sometimes
regard classes as families (indexed by themselves via the corresponding identity
function). Hence for any object A and any class S of morphisms with domain A,
the pair (A, S) will be considered as a source. A particularly useful example is the
total source (A, SA), where SA is the class of all morphisms with domain A.
10.3 DEFINITION
If S = (A
fi
−−→Ai)I is a source and, for each i ∈I, Si = (Ai
gij
−−→Aij)Ji is a source, then
the source
(Si) ◦S = (A
gij◦fi
−−−−→Aij)i∈I, j∈Ji
is called the composite of S and the family (Si)I.
169

170
Sources and Sinks
[Chap. III
10.4 REMARKS
(1) For a source S = (A
fi
−−→Ai)I and a morphism f : B →A we use the notation
S ◦f = (B
fi◦f
−−−→Ai)I.
(2) The composition of morphisms can be regarded as a special case of the composition
of sources.
MONO-SOURCES
10.5 DEFINITION
A source S = (A, fi)I is called a mono-source provided that it can be cancelled from
the left, i.e., provided that for any pair B
r /
s / A of morphisms the equation S ◦r = S ◦s
(i.e., fi ◦r = fi ◦s for each i ∈I) implies r = s.
10.6 EXAMPLES
(1) An empty source (A, ∅) is a mono-source if and only if for each object B there is at
most one morphism from B to A.
(2) A 1-source (A, f) is a mono-source if and only if f is a monomorphism.
(3) In Set mono-sources are precisely the point-separating sources (A, fi)I, i.e.,
sources (A, fi)I such that for any two diﬀerent elements a and b of A there exists
some i ∈I with fi(a) ̸= fi(b).
(4) In many familiar constructs, e.g., in Vec, Grp, Top, and Pos, a source is a mono-
source if and only if it is point-separating. [See Corollary 10.8.]
(5) In every preordered class, considered as a category, every source is a mono-source.
This property characterizes thin categories. [Consider the empty sources.]
10.7 PROPOSITION
(1) Representable functors preserve mono-sources (i.e., if G : A →Set is a repre-
sentable functor and S is a mono-source in A, then GS is a mono-source in Set).
(2) Faithful functors reﬂect mono-sources (i.e., if G : A →B is a faithful functor,
S = (A, fi) is a source in A, and GS = (GA, Gfi) is a mono-source in B, then S
is a mono-source in A).
Proof: 52
(1). If a functor preserves mono-sources, then, clearly, so does every functor that is nat-
urally isomorphic to it. Thus it suﬃces to show that each mono-source (B
fi
−−→Bi)I
is sent by each hom-functor hom(A, −) : A →Set into a point-separating source:
(hom(A, B)
hom(A,fi)
−−−−−−−→hom(A, Bi))I.
52Even though the proof is immediate by arguments analogous to those used in the proof of Proposition
7.37, we nevertheless sketch a proof so that the reader may gain some familiarity with notation
concerning sources.
18th January 2005

Sec. 10]
Sources and sinks
171
But this is immediate from the deﬁnition of mono-source.
(2). Let G and S be as described. If B
r /
s / A is a pair of A-morphisms with S ◦r =
S ◦s, then GS ◦Gr = G(S ◦r) = G(S ◦s) = GS ◦Gs. Since GS is a mono-source,
this implies Gr = Gs. Since G is faithful, this gives r = s.

10.8 COROLLARY
In a construct (A, U) every point-separating source is a mono-source.
The converse
holds whenever U is representable.

10.9 PROPOSITION
Let T = (Si) ◦S be a composite of sources.
(1) If S and all Si are mono-sources, then so is T .
(2) If T is a mono-source, then so is S.

10.10 PROPOSITION
Let (A, fi)I be a source.
(1) If (A, fj)J is a mono-source for some J ⊆I, then so is (A, fi)I.
(2) If fj is a monomorphism for some j ∈I, then (A, fi)I is a mono-source.

10.11 DEFINITION
A mono-source S is called extremal provided that whenever S = S ◦e for some epi-
morphism e, then e must be an isomorphism.
10.12 EXAMPLES
(1) A 1-source (A, f) is an extremal mono-source if and only if f is an extremal mono-
morphism.
(2) In balanced categories (e.g. in Set, Vec, and Grp) every mono-source is extremal.
[This follows immediately from Proposition 10.9(2).]
Conversely, if every mono-
source in C is extremal, then C is balanced (cf. Proposition 7.67).
(3) A source (A
fi
−−→Ai)I in Pos is an extremal mono-source provided that the following
equivalence holds:
a ≤b ⇔∀i ∈I
fi(a) ≤fi(b).
(4) A mono-source (A
fi
−−→Ai)I in Top is extremal if and only if A carries the initial
(= weak) topology with respect to (fi).
(5) A mono-source (A
fi
−−→Ai)I in Σ-Seq is extremal if and only if a state q of A is ﬁnal
whenever each state fi(q) is ﬁnal in Ai.
(6) In a poset, considered as a category, a source (A →Ai)I is an extremal mono-source
if and only if A is a maximal lower bound of { Ai | i ∈I }.
18th January 2005

172
Sources and Sinks
[Chap. III
10.13 PROPOSITION
(1) If a composite source (Si) ◦S is an extremal mono-source, then so is S.
(2) If S ◦f is an extremal mono-source, then f is an extremal monomorphism.

10.14 REMARK
If S and each Si are extremal mono-sources, then (Si) ◦S need not be extremal. See
Exercise 7N.
10.15 PROPOSITION
Let (A, fi)I be a source.
(1) If (A, fj)J is an extremal mono-source for some J ⊆I, then so is (A, fi)I.
(2) If fj is an extremal monomorphism for some j ∈I, then (A, fi)I is an extremal
mono-source.

10.16 REMARK
The concept of source allows a simple description of coseparators: namely, A is a cosep-
arator if and only if, for any object B, the source (B, hom(B, A)) is a mono-source. This
suggests the following deﬁnition:
10.17 DEFINITION
An object A is called an extremal coseparator provided that for any object B the
source (B, hom(B, A)) is an extremal mono-source.
10.18 EXAMPLES
(1) In a balanced category every coseparator is extremal.
(2) In the nonbalanced category Pos every coseparator is extremal [cf. 7.18(3)].
(3) A topological space is an extremal coseparator in Top if and only if it contains an
indiscrete subspace with two elements and a Sierpinski subspace (i.e., a nondiscrete
T0-space with two elements) [cf. 7.18(4)].
(4) The unit interval [0, 1] is an extremal coseparator in HComp.
(5) The category Tych of Tychonoﬀspaces and continuous maps has no extremal cosep-
arator [cf. 7.18(7)].
(6) Let Σ-Seq0 denote the category of sequential Σ-acceptors that have no initial state
and that are observable (i.e., the observability equivalence of Example 4.17(7) is
equality). Then Σ-Seq0 has an extremal coseparator: the acceptor (Rat, δ, F) of
all rational languages in Σ, where δ(L, σ) = { σσ1 · · · σn | σ1 · · · σn ∈L } and F =
{ L ∈Rat | ∅∈L }. [For each acceptor A consider the simulation f : A →(Rat, δ, F)
that assigns to each state q the language f(q) ∈Rat accepted by A in the initial
state q. Then f is an extremal monomorphism.]
18th January 2005

Sec. 10]
Sources and sinks
173
PRODUCTS
Cartesian products of pairs of sets or, more generally, of families of sets (resp. direct
products of families of vector spaces, resp. topological products of families of topological
spaces) can be regarded as objects together with families of (projection) morphisms
emanating from them, i.e., as sources. As such — but not as objects alone — they can
be characterized, up to isomorphism, by the following categorical property:
10.19 DEFINITION
A source P = (P
pi
−−→Ai)I is called a product provided that for every source S =
(A
fi
−−→Ai)I with the same codomain as P there exists a unique morphism A
f
−→P with
S = P ◦f. A product with codomain (Ai)I is called a product of the family (Ai)I.
10.20 EXAMPLES
(1) In the category Set, given sets A1 and A2, the projections from the cartesian product
π1 : A1 × A2 →A1 and π2 : A1 × A2 →A2 (given by: πi(x1, x2) = xi) form a
product source (A1 × A2
πi
−−→Ai)i=1,2. Indeed, given a source
(A
fi
−−→Ai)i=1,2,
there is a unique A
f
−→A1 × A2 with fi = πi ◦f, namely, f(a) = (f1(a), f2(a)).
More generally, let (Ai)I be a family of sets indexed by a set I, and let Q
i∈I Ai be
its cartesian product, i.e., the set of all functions g : I →S
I Ai with the property
that g(i) ∈Ai. Then the family of projection functions πj : Q
i∈I Ai →Aj, given
by: g 7→g(j), is a product in Set.
(2) Likewise in the categories Vec, Ab, and Grp the “direct products”, in Pos the
“ordinal products”, and in Top the “topological products”, considered as sources
via the projections, are products.
(3) If (Ai)i∈I is a set-indexed family of objects in the category AbTor of abelian torsion
groups, its direct product Q
i∈I Ai need not be a torsion group. However, a product
of the family does exist in AbTor. Let P be the torsion-subgroup of Q
i∈I Ai (i.e.,
the subgroup consisting of all torsion-elements), and for each j ∈I let pj : P →Aj
be the restriction of the jth projection πj : Q
i∈I Ai →Aj. Then (P
pi
−−→Ai)i∈I is
a product in AbTor. [Indeed, given a source (A
fi
−−→Ai)I in AbTor, each a ∈A
is a torsion-element of A, so that (fi(a))I is a torsion-element of Q Ai. Thus the
function A
f
−→P, given by f(a) = (fi(a))I, satisﬁes the above deﬁnition.]
(4) Similarly, in Ban products can be obtained as the subspaces of the direct products
of the corresponding vector spaces, consisting of those elements a = (ai)i∈I with
∥a∥= supi∈I ∥ai∥< ∞, supplied with the restrictions of the projection-maps.
(5) In Σ-Seq the product of two acceptors A1 × A2 is their parallel connection (the
state of which is determined by knowing the state of both A1 and A2). Thus ﬁnite
products have a clear interpretation in Σ-Seq, although inﬁnite products usually
don’t exist, since acceptors are by deﬁnition ﬁnite.
18th January 2005

174
Sources and Sinks
[Chap. III
(6) In a partially ordered class, considered as a category [3.3(4)(d)], a source (P
pi
−−→Ai)I
is a product if and only if P = V
i∈I Ai.
(7) An empty source (P, ∅) is a product if and only if P is a terminal object. Thus,
regarding empty sources as objects, one might say: terminal objects are empty
products.
(8) A 1-source (P, p) is a product if and only if p is an isomorphism. Thus, regarding
1-sources as morphisms, one might say: isomorphisms are 1-products.
10.21 PROPOSITION
Every product is an extremal mono-source.
Proof: If P = (P, pi) is a product and A
r /
s / P is a pair of morphisms with P ◦r =
P ◦s, then S = P ◦r = P ◦s is a source with the same codomain as P. The uniqueness
requirement in the deﬁnition of product implies that r = s. Hence P is a mono-source.
To show that P is extremal, let P = Q ◦e for some epimorphism e. Since P and Q have
the same codomain, there exists a unique morphism f with Q = P ◦f. Since P is a
mono-source, the equation P ◦idp = P = Q ◦e = P ◦(f ◦e) implies that idp = f ◦e.
Consequently, e is a section and an epimorphism, hence an isomorphism.

10.22 PROPOSITION
For any family (Ai)I of objects, products of (Ai)I are essentially unique; i.e., if P =
(P
pi
−−→Ai)I is a product of (Ai)I, then the following hold:
(1) for each product Q = (Q
qi
−−→Ai)I there exists an isomorphism Q
h
−→P with
Q = P ◦h,
(2) for each isomorphism A
h
−→P the source P ◦h is a product of (Ai)I.
Proof:
(1). Since P and Q are products with the same codomain, there exist unique morphisms
h and k with Q = P ◦h and P = Q ◦k. Therefore Q ◦idQ = Q ◦(k ◦h) and
P ◦idP = P ◦(h ◦k). Since P and Q are mono-sources, these equations imply that
idQ = k ◦h and idP = h ◦k. Hence h is an isomorphism.
(2). Obvious.

10.23 REMARK
The above uniqueness result allows us to introduce special notations for products (pro-
vided that they exist):
(1) Products of (Ai)I will be denoted by (Q
i∈I Ai
πj
−−→Aj)j∈I, or, more simply, by
(Q Ai
πj
−−→Aj)I, and the morphisms πj will be called projections.
18th January 2005

Sec. 10]
Sources and sinks
175
(2) If (Q Ai
πj
−−→Aj)I is a product and (A
fj
−−→Aj)I is a source with the same codomain,
then the unique morphism f : A →Q Ai with fj = πj ◦f for each j ∈I will be
denoted by ⟨fi⟩:
A
⟨fi⟩/
fj
!C
C
C
C
C
C
C
C
Q Ai
πj

Aj
(∗)
(3) In case I = {1, 2, . . . , n} the following notation will often be used instead of that
above:
A
⟨f1,f2,...,fn⟩/
fj
*T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
A1 × A2 × · · · × An
πj

Aj
(∗∗)
10.24 REMARK
The above diagram (∗) makes visible why products are useful.
The correspondence
(A, fi) 7→⟨fi⟩provides a bijection from the collection of all sources with domain A
and codomain (Ai)I to the set of all morphisms with domain A and codomain Q
i∈I Ai.
Hence products allow one to treat sources as if they were morphisms. Propositions 10.26
and 10.38 below show how this correspondence works.
10.25 PROPOSITION
Let Q = (Pi) ◦P be a composite of sources.
(1) If P and all Pi are products, then so is Q.
(2) If Q is a product and all Pi are mono-sources, then P is a product.
Proof: This follows immediately from the deﬁnition of products and the fact that prod-
ucts are mono-sources (10.21).

10.26 PROPOSITION
Consider
A
⟨fi⟩/
fj
!C
C
C
C
C
C
C
C
Q Ai
πj

Aj
Then
(1) (A, fi)I is a mono-source if and only if ⟨fi⟩is a monomorphism.
(2) (A, fi)I is an extremal mono-source if and only if ⟨fi⟩is an extremal monomorphism.
(3) (A, fi)I is a product if and only if ⟨fi⟩is a product; i.e., an isomorphism.
18th January 2005

176
Sources and Sinks
[Chap. III
Proof: (1) follows from Proposition 10.9, (3) follows from Propositions 10.21 and 10.25,
and the “only if ” part of (2) follows from Proposition 10.13. To show the “if ” part
of (2), let ⟨fi⟩be an extremal monomorphism. By (1), (A, fi) is a mono-source. Let
A
e
−→B be an epimorphism and (B, gi)I be a source with fi = gi ◦e for each i ∈I.
Then, since the product is a mono-source,
πi ◦⟨fi⟩= gi ◦e = πi ◦⟨gi⟩◦e
implies that
⟨fi⟩= ⟨gi⟩◦e.
Hence e is an isomorphism.

10.27 REMARK
Whereas each product is an extremal mono-source, the single projections are usually
retractions, as the following result shows.
That this need not always be the case is
demonstrated in Set by the projection: ∅× N →N.
10.28 PROPOSITION
If (P
pi
−−→Ai)I is a product and if i0 ∈I is such that hom(Ai0, Ai) ̸= ∅for each i ∈I,
then pi0 is a retraction.
Proof: For each i ∈I choose fi ∈hom(Ai0, Ai) with fi0 = idAi0. Then ⟨fi⟩: Ai0 →P
is a morphism with pi0 ◦⟨fi⟩= fi0 = idAi0.

10.29 DEFINITION
(1) A category has products provided that for every set-indexed family (Ai)I of objects
there exists a product (Q Ai
πj
−−→Aj)I.
(2) A category has ﬁnite products provided that for every ﬁnite family (Ai)I of objects
there exists a product (Q Ai
πj
−−→Aj)I.
10.30 PROPOSITION
A category has ﬁnite products if and only if it has terminal objects and products of pairs
of objects.
Proof: The result follows from the observations that
(1) empty products are terminal objects [10.20(7)],
(2) products of singleton families always exist [10.20(8)],
(3) products of n-indexed families for n ≥3 can be constructed via induction by com-
posing products of pairs [cf. 10.25(1)]:
A1 × A2 × · · · × An = (· · · ((A1 × A2) × A3) × · · · × An).

10.31 EXAMPLES
(1) The categories Set, Vec, Grp, Top, Rel, Pos, Alg(Ω), and Aut have products.
18th January 2005

Sec. 10]
Sources and sinks
177
(2) Met and Σ-Seq have ﬁnite products, Metu and Metc have countable products,
and PMet has products. [In fact, a set-indexed family (Xi)i∈I of nonempty metric
spaces each having ﬁnite diameter diam(Xi) has a product in Met if and only if the
set { diam(Xi) | i ∈I } is bounded.]
(3) Banb has ﬁnite products, and Ban has products.
(4) A poset, considered as a category, has products if and only if it is a complete lattice.
10.32 THEOREM
(1) A category that has products for all class-indexed families must be thin.
(2) A small category has products if and only if it is equivalent to a complete lattice.
Proof:
(1). Assume that A has all class-indexed products, but that the set hom(A, B) has at
least two elements. Consider the family (Bi)i∈I with I = Mor(A) and Bi = B
for each i ∈I. Since hom(A, B) has at least two members, there are at least as
many distinct sources with domain A and codomain (Bi)I as there are subclasses
of I. Hence hom(A, Q Bi) contains at least as many members as this (cf. 10.24),
contradicting the fact that hom(A, Q Bi) is contained in I.
(2). Since A is small, Mor(A) is a set, so that if A has products, the above proof shows
that it is thin. Thus it is a preordered set with meets of all subsets, and, hence, is
equivalent to a complete lattice [cf. 10.31(4)]. The converse is clear.

10.33 REMARK
The above theorem shows why in Deﬁnition 10.29(1) we didn’t require the existence of
products for families of objects indexed by arbitrary (hence also proper) classes. Such
a requirement would be far too strong.
None of our familiar constructs [e.g., from
Examples 10.31 (1)–(3)] satisﬁes this condition, yet many of them do satisfy the weaker
condition of having products of all set -indexed families. This observation demonstrates
strikingly that when working with categories one needs to distinguish carefully between
sets and proper classes (resp. between “small” and “large” collections).
10.34 DEFINITION
If (Ai
fi
−−→Bi)I is a family of morphisms and if (Q Ai
πj
−−→Aj)I and (Q Bi
pj
−−→Bj)I are
products, then the unique morphism Q Ai →Q Bi that makes the following diagram
commute for each j ∈I
Q Ai
Πfi /
πj

Q Bi
pj

Aj
fj
/ Bj
is denoted by Πfi and is called the product of the family (fi)I. If I = {1, . . . , n} then
Πfi is usually written as f1 × f2 × · · · × fn.
18th January 2005

178
Sources and Sinks
[Chap. III
10.35 PROPOSITION
Let (fi)I be a set-indexed family of morphisms with product Πfi. If each fi has any of
the following properties, then so does Πfi:
(1) isomorphism,
(2) section,
(3) retraction,
(4) monomorphism,
(5) regular monomorphism (provided that the category in question has products).
Proof: (1), (2), and (3) follow immediately from the observation that Πgi ◦Πfi =
Π(gi ◦fi).
(4) follows from Propositions 10.9 and 10.21.
(5) follows from the next proposition. (Observe that products of regular monomorphisms
are always extremal monomorphisms. Cf. also 10D)

10.36 PROPOSITION
In a category with products, if I is a set and if Ei
ei
−−→Ai is an equalizer of Ai
fi /
gi / Bi
for each i ∈I, then Q Ei
Πei
−−−→Q Ai is an equalizer of Q Ai
Πfi /
Πgi
/ Q Bi .
Proof:
Q Ei
Πei /
πj

Q Ai
Πfi /
Πgi
/
pj

Q Bi
qj

Ej
ej
/ Aj
fj
/
gj
/ Bj
That Πfi ◦Πei = Πgi ◦Πei follows from the fact that the product (Q Bi
qj
−−→Bj)
is a mono-source.
If C
h
−→Q Ai is a morphism such that Πfi ◦h = Πgi ◦h, then
fj ◦pj ◦h = gj ◦pj ◦h for each j ∈I. Hence for each j ∈I there exists a morphism
hj : C →Ej with pj ◦h = ej ◦hj. Consequently, ⟨hi⟩: C →Q Ei is a morphism with
pj ◦Πei ◦⟨hi⟩= ej ◦πj ◦⟨hi⟩= ej ◦hj = pj ◦h; hence with Πei ◦⟨hi⟩= h. Therefore h
factors through Πei. Since, by Proposition 10.35(4), Πei is a monomorphism, h factors
uniquely.

10.37 DEFINITION
If I is a set and (Q Ai
πj
−−→Aj)I is a product with Ai = A for each i ∈I, then Q Ai is
denoted by AI and called an Ith power of A.
10.38 PROPOSITION
In a category that has products, an object A is an (extremal) coseparator if and only if
every object is an (extremal) subobject of some power AI of A.
18th January 2005

Sec. 10]
Sources and sinks
179
Proof: Let A and B be objects.
Consider the source S = (B, hom(B, A)) and the
morphism B
m
−−→Ahom(B,A)
deﬁned by f = πf ◦m for each f ∈hom(B, A).
By
Proposition 10.26, S is an (extremal) mono-source if and only if m is an (extremal)
monomorphism. Hence A is an (extremal) coseparator if and only if B
m
−−→Ahom(B,A)
is an (extremal) monomorphism for each object B. Finally, B
g
−→AI is an (extremal)
monomorphism for some I [i.e., the source (B, πi ◦g)i∈I is an (extremal) mono-source] if
and only if S = (B, hom(B, A)) is an (extremal) mono-source. Cf. Propositions 10.10(1)
and 10.15(1).

10.39 REMARKS
(1) In a category A that has products and an (extremal) coseparator the above result
provides a useful description of the A-objects. For example, since the two-element
chain 2 is a coseparator for Pos, posets are precisely the subobjects of powers of
2 in Pos, and since the unit interval [0, 1] is an extremal coseparator for HComp,
compact Hausdorﬀspaces are precisely the extremal subobjects (= closed subspaces)
of powers of [0, 1] in HComp.
(2) In a category that has products, M-coseparators may be deﬁned (for any class M
of monomorphisms) as objects A such that each object is an M-subobject of some
power of A.
10.40 PROPOSITION
For any class M of morphisms, every product of M-injective objects is M-injective.53
SOURCES IN CONCRETE CATEGORIES
Next we turn our attention to sources in concrete categories. As before, in the context
of concrete categories, we use the notational conventions of Remark 6.22.
INITIAL SOURCES
10.41 DEFINITION
Let A be a concrete category over X.
A source (A
fi
−−→Ai) in A is called initial
provided that an X-morphism f : |B| →|A| is an A-morphism whenever each composite
fi ◦f : |B| →|Ai| is an A-morphism.
10.42 EXAMPLES
(1) An empty source (A, ∅) is initial if and only if A is indiscrete.
(2) A 1-source (A, f) is initial if and only if f is an initial morphism (cf. 8.6).
53The special case for products that are empty sources yields Proposition 9.4.
18th January 2005

180
Sources and Sinks
[Chap. III
(3) A source (A, fi)I in Top is initial if and only if A carries the initial (= weak) topology
with respect to the family (fi)I. In particular, a topological space X is completely
regular if and only if the source S(X, R), consisting of all continuous maps from X
to the real line, is initial (in the construct Top); and X is a Tychonoﬀspace if and
only if S(X, R) is an initial mono-source.
(4) In Spa(T) a source ((X, α)
fi
−−→(Xi, αi))I is initial if and only if α = T
i∈I(Tf)−1[αi].
In particular, a source ((X, ρ)
fi
−−→(Xi, ρi))I in Rel is initial if and only if the
equivalence: xρy ⇔∀i ∈I fi(x)ρifi(y) holds.
(5) In PMet a source ((X, d)
fi
−−→(Xi, di))I is initial if and only if
d(x, y) = sup
i∈I
di(fi(x), fi(y)).
(6) In Pos and in Σ-Seq the initial sources are precisely the extremal mono-sources
(cf. 10.12).
(7) In any of the constructs Vec, Ab, Grp, Mon, Rng, Boo, and Alg(Ω) the initial
sources are precisely the mono-sources.
(8) In a preordered class, considered as a concrete category over 1, the initial sources are
precisely the products [cf. 10.20(6)]. This fact is not as accidental as it may seem.
As we will see later in this section (cf. 10.58), a source in an arbitrary category A is
a product if and only if it is T-initial, where T : A →1 is the unique functor from
A to 1.
10.43 PROPOSITION
If (A
fi
−−→Ai)I is an initial source in A, then
A = max{ B ∈Ob(A)
 |B| = |A| and all |B|
fi
−−→|Ai| are A-morphisms }.54

10.44 REMARK
The above property often characterizes initial sources, e.g., in such constructs as Top or
Spa(T). However, in the construct Top1, there are non-initial sources with the above
property. In fact, as shown in Example 8.5(2), for each set X the ﬁbre of X has a largest
element AX, hence the empty source (AX, ∅) satisﬁes the above property. But (AX, ∅)
is initial (i.e., AX is indiscrete) only for card(X) ≤1.
10.45 PROPOSITION
Let T = (Si) ◦S be a composite of sources in a concrete category.
(1) If S and all Si are initial, then so is T .
(2) If T is initial, then so is S.

54Recall the order on the ﬁbre of |A| [5.4(1)].
18th January 2005

Sec. 10]
Sources and sinks
181
10.46 PROPOSITION
Let (A, fi)I be a source in a concrete category. If (A, fi)J is initial for some J ⊆I, then
so is (A, fi)I.

10.47 DEFINITION
A concrete functor F : A →B over X is said to preserve initial sources provided
that for every initial source S in A, the source FS is initial in B.
10.48 EXAMPLES
(1) The forgetful concrete functor Rng →Ab over Set, which forgets multiplication,
preserves initial sources [cf. 10.42(7)].
(2) The concrete functor Top →Rel over Set, which assigns to each topological space
(X, τ) the object (X, ρ) with xρy if and only if x ∈cl{y}, preserves initial sources.
(3) An order-preserving map between preordered classes, considered as a concrete func-
tor over 1, preserves initial sources if and only if it preserves all existing meets.
10.49 PROPOSITION
If (F, G) is a Galois correspondence, then G preserves initial sources.
Proof: Let G : A →B and F : B →A be concrete functors over X such that (F, G)
is a Galois correspondence over X. Let (A
fi
−−→Ai)I be an initial source in A and let
B
h
−→GA be an X-morphism such that all B
h
−→GA
fi
−−→GAi are B-morphisms. Then
by Proposition 6.28, all FB
h
−→A
fi
−−→Ai are A-morphisms. Hence FB
h
−→A is an
A-morphism. Again by Proposition 6.28, B
h
−→GA is a B-morphism.

10.50 COROLLARY
Embeddings of concretely reﬂective subcategories preserve initial sources.

10.51 REMARK
Let G : A →B be a monotone map between posets, considered as a concrete functor
over 1. If A is a complete lattice, then G preserves initial sources (= meets) if and
only if there exists a (necessarily unique) monotone map F : B →A such that (F, G)
is a Galois connection. [Namely, F(b) = V{ a ∈A | b ≤G(a) }]. Theorem 21.24 is a
corresponding result for concrete functors over arbitrary base categories X.
CONCRETE PRODUCTS
10.52 DEFINITION
Let A be a concrete category over X. A source S in A is called a concrete product
in A if and only if S is a product in A and |S| is a product in X.
18th January 2005

182
Sources and Sinks
[Chap. III
10.53 PROPOSITION
A source S in a concrete category A over X is a concrete product if and only if it is
initial in A and |S| is a product in X.

10.54 DEFINITION
A concrete category A has concrete products if and only if for every set-indexed
family (Ai)I of A-objects there exists a concrete product (P
pi
−−→Ai)I in A, i.e., if and
only if A has products and the forgetful functor preserves them.
10.55 EXAMPLES
(1) Many familiar constructs, e.g., Vec, Grp, Ab, Rng, Top, Rel, Pos, and Alg(Ω),
have concrete products. According to Proposition 10.53 they can be constructed in
two steps: Given a family of objects (Ai)I in A, ﬁrst form the cartesian product
(Q |Ai|
πj
−−→|Aj|)I of the underlying sets, and then supply the set Q |Ai| with the
initial structure with respect to (πj)I.
(2) The construct (Ban, O) has concrete products, but the products in (Ban, U) gen-
erally fail to be concrete [cf. 10.20(4)].
(3) Products in the construct AbTor generally fail to be concrete [cf. 10.20(3)].
(4) In a concrete category over 1 every product is concrete.
10.56 PROPOSITION
Let Q = (Pi) ◦P be a composite of sources in a concrete category A.
(1) If P and all Pi are concrete products, then so is Q.
(2) If Q is a concrete product and each |Pi| is a mono-source, then P is a concrete
product.

G-INITIAL SOURCES
Now we investigate sources not only in relation to forgetful functors of concrete cate-
gories, but also in relation to arbitrary functors. This will throw additional light on
products.
10.57 DEFINITION
Let G : A →B be a functor. A source S = (A
fi
−−→Ai)I in A is called G-initial
provided that for each source T = (B
gi
−−→Ai)I in A with the same codomain as S and
each B-morphism GB
h
−→GA with GT = GS ◦h there exists a unique A-morphism
B
h
−→A with T = S ◦h and h = Gh.
B
h

gi
 A
A
A
A
A
A
A
A
fi
/ Ai
GB
Gh=h

Ggi
"F
F
F
F
F
F
F
F
GA
Gfi
/ GAi
18th January 2005

Sec. 10]
Sources and sinks
183
10.58 EXAMPLES
(1) If (A, U) is a concrete category, then U-initial sources are precisely the initial sources
in (A, U).
(2) If A is a category and G : A →1 is the unique functor from A to 1, then G-initial
sources are precisely the products in A.
10.59 PROPOSITION
For a functor G : A →B the following conditions are equivalent:
(1) G is faithful,
(2) for each A-object A the 2-source (A, (idA, idA)) is G-initial,
(3) whenever (A, fi)I is a source in A and (A, fj)J is G-initial for some J ⊆I, then
(A, fi)I is G-initial.
Proof: Obviously (1) ⇒(3) ⇒(2). To show that (2) implies (1) let A
r /
s / B be a
pair of A-morphisms with Gr = Gs. Consider the 2-sources S = (B, (idB, idB)) and
T = (A, (r, s)) in A and the B-morphism h = Gr : GA →GB. Then GT = GS ◦h.
Hence, by G-initiality of S, there exists an A-morphism h : A →B with T = S ◦h, i.e.,
with r = idB ◦h = s.

10.60 PROPOSITION
If G : A →B is a functor such that each mono-source in A is G-initial, then the
following hold:
(1) G is faithful,
(2) G reﬂects products,
(3) G reﬂects isomorphisms.
Proof:
(1). follows from Proposition 10.59, since in A each 2-source (A, (idA, idA)) is a mono-
source.
(2). If P is a source in A such that GP is a product in B, then GP is a mono-source
in B. Hence, by (1), P is a mono-source in A and, consequently, is G-initial. This,
together with faithfulness of G, immediately implies that P is a product in A.
(3). follows from (2), since isomorphisms are 1-products.

10.61 REMARK
The property that all mono-sources be initial, is not unfamiliar. As we will see in §23,
it is typical for “algebraic” categories.
18th January 2005

184
Sources and Sinks
[Chap. III
SINKS
The concept dual to that of source is called sink.
Whereas the concepts of sources
and sinks are dual to each other, frequently sources occur more naturally than sinks
(cf. §15 and §17). However, there are cases where the opposite is true. Cf. in particular
Deﬁnition 10.69 and Proposition 10.71 below.
10.62 DEFINITION
A sink is a pair ((fi)i∈I, A) [sometimes denoted by (fi, A)I or (Ai
fi
−−→A)I ] consisting
of an object A (the codomain of the sink) and a family of morphisms fi : Ai →A in-
dexed by some class I. The family (Ai)i∈I is called the domain of the sink. Composition
of sinks is deﬁned in the (obvious) way dual to that of composition of sources.
10.63 TABLE OF DUAL CONCEPTS
The following table provides the names for the concepts dual to those investigated in
this section:
Concept
Dual Concept
source
sink
mono-source
epi-sink
extremal mono-source
extremal epi-sink
extremal coseparator
extremal separator
initial source
ﬁnal sink
G-initial source
G-ﬁnal sink
product (Q Ai, πj)j∈I
coproduct (µj, ` Ai)j∈I
projection πj
injection µj
A
⟨fi⟩/
fj
!C
C
C
C
C
C
C
C
Q Ai
πj

Aj
A
` Ai
[fi]
o
Aj
fj
aCCCCCCCC
µj
O
power AI
copower IA
C
⟨f,g⟩
−−−→A × B
C
[f,g]
←−−−A + B
Q fi ; f × g
` fi ; f + g
18th January 2005

Sec. 10]
Sources and sinks
185
10.64 EXAMPLES OF EPI-SINKS
(1) In Set a sink (Ai
fi
−−→A)I is an epi-sink if and only if it is jointly surjective, i.e., if
and only if A = S
i∈I fi[Ai].
In every construct, all jointly surjective sinks are epi-sinks. The converse implication
holds, e.g., in Vec, Pos, Top, and Σ-Seq.
(2) In Sgr we have seen that there are epimorphisms that are not surjective [7.40(5)].
Thus, there are epi-sinks that are not jointly surjective.
(3) A category A is thin if and only if every sink in A is an epi-sink.
10.65 EXAMPLES OF EXTREMAL EPI-SINKS
(1) Every epi-sink (= jointly surjective sink) is an extremal epi-sink in Set, Vec, and
Ab.
(2) In Top an epi-sink (Ai
fi
−−→A) is extremal if and only if A carries the ﬁnal topology
with respect to (fi)i∈I.
(3) In Pos an epi-sink (Ai
fi
−−→A)I is extremal if and only if the ordering of A is the
transitive closure of the relation consisting of all pairs (fi(x), fi(y)) with i ∈I and
x ≤y in Ai.
(4) In Σ-Seq an epi-sink (Ai
fi
−−→A)I is extremal if and only if each ﬁnal state of A has
the form fi(q) for some i ∈I and some ﬁnal state q of Ai.
10.66 EXAMPLES OF EXTREMAL SEPARATORS
(1) Every separator is extremal in Set, Vec, and Ab.
(2) In Pos the separators are precisely the nonempty posets, whereas the extremal
separators are precisely the nondiscrete posets.
(3) Top has no extremal separator.
10.67 EXAMPLES OF COPRODUCTS
Many familiar categories have coproducts.
However, as opposed to the situation for
products, coproducts in familiar constructs often fail to be concrete.
(1) If (Ai)I is a pairwise-disjoint family of sets, indexed by a set I, then the sink of
inclusion maps (Aj
µj
−−→S
i∈I Ai)j∈I is a coproduct in Set.
If (Ai)I is an arbi-
trary set-indexed family of sets, then it can be “made disjoint” by pairing each
member of Ai with the index i, i.e., by working with Ai × {i}, rather than Ai.
The union S
i∈I(Ai × {i}) is called the disjoint union of the family (Ai)I and is
denoted by U
i∈I Ai.
The sink of natural injections (Aj
µj
−−→U
i∈I Ai)j∈I [where
µj(a) = (a, j)] is a coproduct55 in Set of the the family (Ai)I. [Indeed, given a sink
(Aj
fi
−−→B)j∈I in Set, the unique function f : U
i∈I Ai →B satisfying fi = f ◦µi
for all i is deﬁned by: f(a, i) = fi(a).]
55For a disjoint family of sets, the union and the disjoint union (together with associated injections)
each form a coproduct.
This is not a contradiction since coproducts are determined only up to
isomorphism. Compare this with the corresponding result for products: Proposition 10.22.
18th January 2005

186
Sources and Sinks
[Chap. III
(2) In the construct Top coproducts are called “topological sums” and can be con-
structed as for sets by supplying the disjoint union with the ﬁnal topology. Thus,
Top has concrete coproducts.
(3) In the construct Pos coproducts are called “cardinal sums” and can be constructed
as for sets by supplying the disjoint union of the underlying sets with the order
that agrees on each Ai × {i} with the order on Ai, and where members of distinct
summands are incomparable. Thus, Pos has concrete coproducts.
(4) Vec has nonconcrete coproducts called direct sums. The direct sum L
i∈I Ai of a
family (Ai)I of vector spaces is the subspace of the direct product Q
i∈I Ai consisting
of all elements (ai)i∈I with ﬁnite carrier (i.e., { i ∈I | ai ̸= 0 } is ﬁnite), together
with the injections µj : Aj →L Ai given by:
µj(a) = (ai)i∈I
with
ai =
(
a,
if i = j
0,
if i ̸= j.
The description of coproducts in Ab is analogous.
(5) HComp has nonconcrete coproducts, namely the ˇCech-Stone compactiﬁcations of
the topological sums.
(6) Grp has nonconcrete coproducts, called “free products”.
(7) The constructs Alg(Ω) all have coproducts. They are concrete if and only if all the
operations are unary.
(8) In a poset A, considered as a category, coproducts are joins. Thus A has coproducts
if and only if it is a complete lattice.
(9) In every category every 1-indexed family (A) has a coproduct A
id
−−→A; an empty
sink with codomain A is a coproduct if and only if A is an initial object.
10.68 EXAMPLES OF FINAL SINKS
(1) An empty sink (∅, A) in a concrete category is ﬁnal if and only if A is discrete.
(2) A singleton sink A
f
−→B in a concrete category is ﬁnal if and only if f is a ﬁnal
morphism.
(3) A sink ((Xi, τi)
fi
−−→(X, τ))I in Top is ﬁnal if and only if τ is the ﬁnal topology with
respect to the maps (fi)I, i.e., τ = { U ⊆X | for all i ∈I,
f−1
i
[U] ∈τi }.
(4) A sink ((Xi, ≤i)
fi
−−→(X, ≤))I in Pos is ﬁnal if and only if ρ is the transitive closure
of the relation { (x, x) | x ∈X } ∪S
I{ (fi(x), fi(y)) | x ≤i y }.
(5) A sink ((Xi, αi)
fi
−−→(X, α))I in Spa(T) is ﬁnal if and only if α = S
I Tfi[αi].
18th January 2005

Sec. 10]
Sources and sinks
187
10.69 DEFINITION
A full concrete subcategory A of a concrete category B is said to be ﬁnally dense in
B provided that for every B-object B there is a ﬁnal sink (Ai
fi
−−→B)I in B with Ai in
A for all i ∈I.
Dual Notion: initially dense.
10.70 EXAMPLES
A. Final density in constructs
(1) In Met the full subcategory consisting of all two-element metric spaces is ﬁnally
dense.
(2) In Pos the full subcategory whose only object is a 2-chain is ﬁnally dense.
(3) In Vec the full subcategory whose only object is R2 is ﬁnally dense. In general, in
a construct of algebras with operations of arity at most n, any free algebra on n
generators, considered as a full subcategory with one object, is ﬁnally dense.
(4) Top does not have any small, ﬁnally dense subcategory.
(5) Σ-Seq does not have any ﬁnite, ﬁnally dense subcategory. [Consider an automaton
whose transitions form a cycle larger than the number of objects of the given ﬁnite
subcategory.]
B. Final density in concrete categories
(6) For a poset B, considered as a concrete category over 1, a subset A is ﬁnally dense
if and only if it is join-dense (i.e., each b ∈B is a join of a subset of A).
(7) For a category A considered as concrete over itself, the empty subcategory is ﬁnally
dense.
10.71 PROPOSITION
If A is a ﬁnally dense full concrete subcategory of a concrete category B, then every
initial source in A is initial in B.
Proof: Let A = (A
fi
−−→Ai)I be an initial source in A, let B be a B-object, and
|B|
f
−→|A| be an X-morphism, such that each |B|
fi◦f
−−−→|Ai| is a B-morphism. To show
that |B|
f
−→|A| is a B-morphism, let B = (Cj
gj
−−→B)J be a ﬁnal sink in B with each
Cj belonging to A. Then each
|Cj|
gj
−−→|B|
f
−→|A|
fi
−−→|Ai|
is an A-morphism. Since A is initial in A and each Cj belongs to A, each
|Cj|
gj
−−→|B|
f
−→|A| is an A-morphism. Since B is ﬁnal, |B|
f
−→|A| is a B-morphism.
18th January 2005

188
Sources and Sinks
[Chap. III
10.72 REMARK
A full concrete embedding E : A →B is called ﬁnally dense if its image is a ﬁnally
dense subcategory of B.
The above proposition states, more succinctly, that ﬁnally
dense embeddings preserve initiality.
Suggestions for Further Reading
Mac Lane, S. Duality for groups. Bull. Amer. Math. Soc. 56 (1950): 485–516.
Taylor, J. C. Weak families of maps. Canad. Math. Bull. 8 (1965): 771–781.
Pumpl¨un, D. Initial morphisms and monomorphisms. Manuscr. Math. 32 (1980): 309–
333.
EXERCISES
10A. A Characterization of (Extremal) Mono-Sources
Let A be a category such that for any pair A
f /
g / B of morphisms there exists a co-
equalizer in A. Show that
(a) A source S in A is a mono-source provided that whenever S = S ◦e for some regular
epimorphism e, it follows that e is an isomorphism.
(b) A source S in A is an extremal mono-source provided that whenever S = S ◦e for
some epimorphism e, it follows that e is an isomorphism.
10B. A Characterization of Extremal (Co)Separators
Show that an object S of a category A is
(a) an extremal separator if and only if the functor A
hom(S,−)
−−−−−−−→Set is faithful and
reﬂects isomorphisms, and
(b) an extremal coseparator if and only if the functor Aop
hom(−,S)
−−−−−−−→Set is faithful and
reﬂects isomorphisms.
10C. Extremal (Co)Separators in HComp, BooSpa, and Tych
Show that
(a) In HComp every nonempty space is an extremal separator, and [0, 1] is an extremal
coseparator.
(b) In BooSpa every nonempty space is an extremal separator, and every space with
at least two points is an extremal coseparator.
* (c) Tych has neither an extremal separator nor an extremal coseparator.
18th January 2005

Sec. 10]
Sources and sinks
189
10D. Products of Special Morphisms
Show that
(a) Products of regular monomorphisms are extremal monomorphisms.
(b) In a category with products, products of regular monomorphisms are regular mono-
morphisms.
(c) Products of regular monomorphisms may fail to be regular.
(d) Products of extremal monomorphisms may fail to be extremal.
(e) Products of epimorphisms may fail to be epimorphisms.
10E. Hom-Functors Preserve and “Collectively Detect” Products
Show that a source S is a product in A if and only if for each A-object A the source
hom(A, −)(S) is a product in Set.
10F. Concrete Products and Hom-Functors
Let A be a free object over a nonempty set in a construct A. Prove that a source S in
A is a concrete product if and only if S is initial and hom(A, −)(S) is a product in Set.
10G. Products in Ab
Let (G2, (π1, π2)) be the cartesian product of an abelian group G with itself (where the
group operation is given by G2
+
−−→G). Show that each of (G2, (π1, π2)), (G2, (π1, +))
and (G2, (π2, +)) is a product of the pair (G, G) in Ab.
10H. Products with Terminal Objects
In A let T be a terminal object, A be an arbitrary object, and A
tA
−−→T be the unique
morphism from A to T. Show that (A, (idA, tA)) is a product of the pair (A, T) in A.
10I. No (Co)Products in Fields or in a Group
Show that neither Field nor a nontrivial group (nor a nontrivial ﬁnite monoid), consid-
ered as a category, has ﬁnite products or ﬁnite coproducts.
10J. Products for Banach Spaces
Show that
(a) Banb has ﬁnite products, but Banb does not have products.
(b) Ban has products, but (Ban, U) does not have concrete products.
(c) (Ban, O) has concrete products.
10K. Comparison of Powers
Let I be a subset of K and let AI and AK be powers of A in A. Show that:
(a) If I ̸= ∅, then AI is a retract of AK.
(b) If I = ∅, then AI need not even be a subobject of AK. [Hint: Consider A = ∅in
Set.]
18th January 2005

190
Sources and Sinks
[Chap. III
* 10L. A Characterization of Concretizable Categories Over Set
Show that a category that has equalizers and ﬁnite products is concretizable over Set if
and only if it is regular wellpowered.
10M. Composites of Regular Monomorphisms With Sections
Show that in a category that has ﬁnite products the composite s ◦m of a regular mono-
morphism m and a section s is a regular monomorphism. [Hint: If r ◦s = id and m is
an equalizer of f and g, then s◦m is an equalizer of ⟨f ◦r, id⟩and ⟨g ◦r, s◦r⟩.] Contrast
this with Exercise 7S.
10N. Dualities and Representability
Let (A, U) and (B, V ) be concrete categories that are dually equivalent; i.e., there are
contravariant functors G : A →B and F : B →A such that F ◦G ∼= 1A and G◦F ∼= 1B.
Suppose that the A-object A represents U and the B-object B represents V , and let
˜A = F(B) and ˜B = G(A). Prove that
(a) U( ˜A) ∼= V ( ˜B).
(b) V ◦G ∼= homA(−, ˜A) and U ◦F ∼= homB(−, ˜B).
If, moreover, B has products, then show that
(c) for each A-object X there exists a monomorphism mX : G(X) →˜BU(X) such that
V (mX) is the embedding of V (G(X)) ∼= homA(X, ˜A) into
homSet(U(X), U( ˜A)) ∼= homSet(U(X), V ( ˜B)) = (V ( ˜B))U(X) ∼= V ( ˜BU(X)).
10O. Composites of F -Initial Sources
Let F : A →B be a functor and let T = (Si) ◦S be a composite of sources in A. Show
that
(a) If S and Si are F-initial, then so is T .
(b) If T is F-initial and all Si are mono-sources, then S is F-initial.
(c) If T is F-initial, then S need not be F-initial. [Hint: Consider the unique functor
F from
1
>
>
>
>
>
>
>
'N
N
N
N
N
N
N
N
N
N
N
N
N
N
2
/ 3
0
@       @       7p
p
p
p
p
p
p
p
p
p
p
p
p
p
O
to
1
>
>
>
>
>
>
>
'N
N
N
N
N
N
N
N
N
N
N
N
N
N
2
/ 3
0
@       7p
p
p
p
p
p
p
p
p
p
p
p
p
p
O
which leaves the four objects ﬁxed. Then 1 →2 is not F-initial, but 1 →2 →3 is.]
10P. Universally Initial Morphisms
Let f be a morphism in a category A. Show that
* (a) f is an isomorphism if and only if f is F-initial with respect to every functor F
that has domain A.
18th January 2005

Sec. 10]
Sources and sinks
191
* (b) If f is a section, then f is F-initial with respect to every faithful functor A
F
−−→B.
Does the converse hold?
(c) f is initial with respect to every full and faithful functor with domain A.
10Q. A Characterization of Products
Show that a source in A is a product if and only if it is initial with respect to every
functor A
F
−−→B that preserves mono-sources.
10R. Copowers Versus Free Objects in Constructs
Let (A, U) be a construct such that U is representable by an object A. Show that for
any set I and any A-object B the following conditions are equivalent:
(1) B is a free object over I,
(2) B is an Ith copower IA of A.
10S. Copowers in CBoo and CLat
Show that neither CBoo nor CLat has small copowers. [Hint: Use 10R, 8.23(1)(b),
8.23(7), and 8F resp. 8G.]
10T. Mono-Sources in Σ-Seq
Prove that mono-sources in {σ}-Seq are precisely the point-separating sources — al-
though the forgetful functor is not representable (cf. Corollary 10.8).
10U. Coproducts of Functors
Given functors Fi : A →B, where B is a category with coproducts, then F = ` Fi
denotes the functor of “pointwise” coproducts, i.e.,
F(A
f
−→A′) =
a
FiA
⨿Fif
−−−−→
a
FiA′.
(a) Verify that F is a coproduct of the family (Fi) in the functor quasicategory [A, B]
(6.15).
(b) Verify that for each type Ωthere exists a coproduct T of functors Sn [3.20(10)] such
that Alg(Ω) is concretely isomorphic to Alg(T).
10V. The Diagonal-Morphism ∆A
∆A = ⟨idA, idA⟩: A →A × A is called the diagonal morphism of A. Consider the
product A
π1
←−−A × A
π2
−−→A and show that (A, ∆A) is an equalizer of (π1, π2).
18th January 2005

192
Sources and Sinks
[Chap. III
10W. Products and Constant Morphisms
Consider the diagram
A
f
/ B
A × A
f×f
/
π1
O
π2

B × B
p1
O
p2

A
f
/ B
Show that the following are equivalent:
(1) f is constant,
(2) f ◦π1 = f ◦π2,
(3) p1 ◦(f × f) = p2 ◦(f × f),
(4) f × f factors through ∆B, i.e., for some g:
A × A
f×f
−−−→B × B = A × A
g
−→B
∆B
−−−→B × B.
18th January 2005

11 Limits and colimits
Many basic constructions in mathematics can be described as limits (or dually as co-
limits). Such constructions associate with a given diagram a distinguished object to-
gether with morphisms connecting this object with the objects of the diagram; i.e., a
certain source called the limit of the diagram. This limit can be characterized, up to
isomorphism, by a purely categorical property. We have encountered two special cases
of limits already: equalizers and products. The main new type of limit introduced below
is that of pullback. Unlike products, the usefulness of pullbacks was generally recognized
only after the emergence of category theory.
LIMITS
11.1 DEFINITION
(1) A diagram in a category A is a functor D : I →A with codomain A. The domain,
I, is called the scheme of the diagram.56
(2) A diagram with a small (or ﬁnite) scheme is said to be small (or ﬁnite).
11.2 EXAMPLES
(1) A diagram in A with discrete scheme is essentially just a family of A-objects.
(2) A diagram in A with scheme • ⇒• is essentially just a pair of A-morphisms with
common domain and common codomain.
11.3 DEFINITION
Let D : I →A be a diagram.
(1) An A-source (A
fi
−−→Di)i∈Ob(I) is said to be natural for D provided that for each
I-morphism i
d
−→j, the triangle
A
fi

fj
 B
B
B
B
B
B
B
B
Di
Dd
/ Dj
commutes.
56Although there is technically no diﬀerence between a diagram and a functor, or between a scheme and
a category, we use the alternate terminology when treating limits and colimits, for reasons of both its
historical development and to indicate a slight change of perspective. For example, we often denote
the image of an object i under a diagram D by Di rather than D(i). This produces notation that is
more consistent with that introduced earlier for sources and sinks.
193

194
Sources and Sinks
[Chap. III
(2) A limit of D is a natural source (L
ℓi
−−→Di)i∈Ob(I) for D with the (universal )
property that each natural source (A
fi
−−→Di)i∈Ob(I) for D uniquely factors through
it; i.e., for every such source there exists a unique morphism f : A →L with fi =
ℓi ◦f for each i ∈Ob(I).
11.4 EXAMPLES
(1) For a diagram D : I →A with a discrete scheme, every source with codomain
(Di)i∈Ob(I) is natural. A source is a limit of D if and only if it is a product of the
family (Di)i∈Ob(I). Expressed brieﬂy: products are limits of diagrams with discrete
schemes. In particular, an object, considered as an empty source, is a limit of the
empty diagram (i.e., the one with empty scheme) if and only if it is a terminal object.
(2) For a pair of A-morphisms A
f /
g / B , considered as a diagram D with scheme • ⇒•,
a source (A
e
←−C
h
−→B) is natural provided that g ◦e = h = f ◦e. Observe that
in this case h is determined by e. Hence, C
e
−→A is an equalizer of A
f /
g / B if and
only if the source (A
e
←−C
f◦e
−−−→B) is a limit of D. Thus we may say (imprecisely)
that equalizers are limits of diagrams with scheme • ⇒•. If, in the above scheme,
the two arrows are replaced by an arbitrary set of arrows, then limits of diagrams
with such schemes are called multiple equalizers.
(3) If I is a down-directed57 poset (considered as a category), then limits of diagrams
with scheme I are called projective (or inverse) limits. If, e.g., I = Nop is the
poset of all non-negative integers with the opposite of the usual ordering, a diagram
D : I →A with this scheme is essentially a sequence
· · ·
d2
−−→D2
d1
−−→D1
d0
−−→D0
of A-morphisms (where D(n + 1 →n) = Dn+1
dn
−−→Dn, D(n + 2 →n) = dn ◦dn+1,
etc.).
A natural source for D is a source (A
fn
−−→Dn)n∈N with fn = dn ◦fn+1
for each n. In Set a projective limit of a diagram D with scheme Nop is a source
(L
ℓn
−−→Dn)n∈N, where L is the set of all sequences (xn)n∈N with xn ∈Dn and
dn(xn+1) = xn for each n ∈N; and where each ℓm is a restriction of the mth
projection πm : Q
n∈N Dn →Dm.
(4) If D : A →A is the identity functor, then a source L = (L
ℓA
−−→A)A∈ObA is a
limit of D if and only if L is an initial object of A. The suﬃciency is obvious.
For the necessity let L be a limit of D and let L
f
−→A be a morphism. By the
naturality of L for D we obtain f ◦ℓL = ℓA. Application of this to f = ℓA yields
ℓA ◦ℓL = ℓA = ℓA ◦idL for each object A. Hence, by the uniqueness requirement
57Down-directed means that every pair of elements has a lower bound.
The dual notion is up-
directed.
18th January 2005

Sec. 11]
Limits and colimits
195
in the deﬁnition of limit, ℓL = idL. Consequently, f = f ◦idL = f ◦ℓL = ℓA. Thus
hom(L, A) = {ℓA} for each object A.
(5) If the category I has an initial object i0 with hom(i0, i) = {mi} for each i ∈Ob(I),
then every diagram D : I →A with scheme I has a limit: (Di0
Dmi
−−−−→Di)i∈Ob(I).
11.5 REMARK
If D : I →A is a diagram, then natural sources for D can be regarded as natural
transformations from constant functors C : I →A to the functor D.
11.6 PROPOSITION
Every limit is an extremal mono-source.
A 10.21
11.7 PROPOSITION
Limits are essentially unique; i.e., if L = (L
ℓi
−−→Di)i∈Ob(I) is a limit of D : I →A,
then the following hold:
(1) for each limit K = (K
ki
−−→Di)i∈Ob(I) of D, there exist an isomorphism K
h
−→L
with K = L ◦h,
(2) for each isomorphism A
h
−→L, the source L ◦h is a limit of D.
A 10.22
PULLBACKS
11.8 DEFINITION
(1) A square
P
f
/
g

B
g

A
f
/ C
(∗)
is called a pullback square provided that it commutes and that for any commuting
square of the form
ˆP
ˆf
/
ˆg

B
g

A
f
/ C
there exists a unique morphism ˆP
k
−→P for which the following diagram commutes
ˆP
ˆg

ˆf
"
k?
?
?
?
?
?
?
?
P
f
/
g

B
g

A
f
/ C
18th January 2005

196
Sources and Sinks
[Chap. III
(2) If (∗) is a pullback square, then the 2-source A
g
←−P
f
−→B is called a pullback of
the 2-sink A
f
−→C
g
←−B and f is called a pullback of f along g.
11.9 REMARKS
(1) A square (∗) is a pullback square if and only if the 3-source (P, (g, f ◦g, f)) is a
limit of the 2-sink A
f
−→C
g
←−B, considered as a diagram in A with scheme
• −→• ←−•.
Shortly (and imprecisely) pullbacks are limits of diagrams with
scheme • −→• ←−•.
(2) If the square (∗) is a pullback, then (P, (f, g)) is a extremal mono-source.
This
follows from (1) and Proposition 11.6.
11.10 PROPOSITION
Let
•
/

•
/

•

•
/ •
/ •
commute in A. Then
(1) if the squares are pullback squares, then so is the outer rectangle; i.e., pullbacks can
be composed by “pasting” them together,
(2) if the outer rectangle and right-hand square are pullback squares, then so is the
left-hand square.

RELATIONSHIP OF PULLBACKS TO OTHER LIMITS
11.11 PROPOSITION (Canonical Construction of Pullbacks)
Let A
f
−→C
g
←−B be a pair of morphisms with common codomain.
If A
πA
←−−A × B
πB
−−→B is a product of A and B, and E
e
−→A × B is an equalizer of
A × B
f◦πA /
g◦πB / C , then
E
πA◦e /
πB◦e

A
f

B
g
/ C
is a pullback square.
18th January 2005

Sec. 11]
Limits and colimits
197
Proof: Let
P
s
/
r

A
f

B
g
/ C
be a commuting square. Then P
⟨s,r⟩
−−−→A × B is a morphism for which f ◦πA ◦⟨s, r⟩=
g ◦πB ◦⟨s, r⟩. Since e is an equalizer of (f ◦πA, g ◦πB), there is a morphism P
k
−→E for
which ⟨s, r⟩= e ◦k. Thus πA ◦e ◦k = s and πB ◦e ◦k = r. That k is the only morphism
with this property follows from the fact that A
πA◦e
←−−−−E
πB◦e
−−−−→B is, as a composition
of mono-sources, a mono-source.

11.12 EXAMPLES
Application of the above construction provides concrete descriptions of pullbacks in many
cases:
(1) Let A
f
−→C
g
←−B be a pair of maps in Set, let P = {(a, b) ∈A × B | f(a) = g(b)},
and let P
g
−→A and P
f
−→B be the domain restrictions of the projections from
A × B. Then
P
g
/
f

A
f

B
g
/ C
is a pullback square.
(2) In any of the constructs Pos, Top, or Vec pullbacks can be constructed as for sets
by supplying P in each case with the initial structure with respect to its inclusion
into the product A × B; i.e.,
(a) for Pos, by the pointwise order,
(b) for Top, by the subspace topology,
(c) for Vec, by deﬁning operations coordinatewise.
11.13 PROPOSITION
If T is a terminal object, then the following are equivalent:
(1)
P
pA /
pB

A

B
/ T
is a pullback square,
(2) (P, (pA, pB)) is a product of A and B.

18th January 2005

198
Sources and Sinks
[Chap. III
11.14 PROPOSITION (Construction of Equalizers via Products and Pullbacks)
If A
f /
g / B are morphisms, (A × B, πA, πB) is a product of (A, B), and
P
p1
/
p2

A
⟨idA,f⟩

A ⟨idA,g⟩
/ A × B
is a pullback square, then p1 = p2 is an equalizer of f and g.
Proof: Since ⟨idA, f⟩◦p1 = ⟨idA, g⟩◦p2, we have
p1 = πA ◦⟨idA, f⟩◦p1 = πA ◦⟨idA, g⟩◦p2 = p2.
Similarly, f ◦p1 = πB ◦⟨idA, f⟩◦p1 = πB ◦⟨idA, g⟩◦p2 = g ◦p2 = g ◦p1.
Suppose that K
k
−→A is a morphism such that f ◦k = g ◦k. Then
πB ◦⟨idA, f⟩◦k = πB ◦⟨idA, g⟩◦k,
and
πA ◦⟨idA, f⟩◦k = πA ◦⟨idA, g⟩◦k.
Since the product is a mono-source, we obtain ⟨idA, f⟩◦k = ⟨idA, g⟩◦k, so that since
the square is a pullback square, there is a unique h : K →P such that k = p1 ◦h.

PULLBACKS RELATED TO SPECIAL MORPHISMS
11.15 LEMMA
Suppose that the diagram
•
1
/

•

~~~~~~~
•
h
@
@
@
@
@
@
@
•
?~
~
~
~
~
~
~
/ •
commutes.
(1) If the outer square is a pullback square, then so is 1 .
(2) If 1 is a pullback square and h is a monomorphism, then the outer square is a
pullback square.

18th January 2005

Sec. 11]
Limits and colimits
199
11.16 PROPOSITION
A
f
−→B is a monomorphism if and only if
A
idA /
idA

A
f

A
f
/ B
is a pullback square.

11.17 DEFINITION
A class M of morphisms in a category is called pullback stable (or closed under the
formation of pullbacks) provided that for each pullback square
P
f
/
g

B
g

A
f
/ C
(∗)
with f ∈M, it follows that f ∈M.
11.18 PROPOSITION
Monomorphisms, regular monomorphisms, and retractions are pullback stable.
Proof: Let f be a monomorphism in the above pullback square (∗).
(1). If h, k : Q →P are morphisms such that f ◦h = f ◦k, then
f ◦(g ◦h) = g ◦(f ◦h) = g ◦(f ◦k) = f ◦(g ◦k),
so that g ◦h = g ◦k. Since pullbacks are mono-sources, this implies that h = k.
(2). Suppose that f is an equalizer of p and q. Then (p ◦g) ◦f = (q ◦g) ◦f. To show
that f is an equalizer of p ◦g and q ◦g, let t : Q →B be a morphism such that
(p ◦g) ◦t = (q ◦g) ◦t. Then, by the deﬁnition of equalizer, there is some u : Q →A
with f ◦u = g ◦t. Thus, by the deﬁnition of pullback, there is some h : Q →P such
that t = f ◦h. Uniqueness of h follows from the fact that f is a monomorphism.
(3). If f is a retraction, then there is some C
s
−→A with f ◦s = idC. Hence f ◦(s ◦
g) = g ◦idB, so that by the deﬁnition of pullback there is some h : B →P with
idB = f ◦h.

11.19 REMARK
If (A, m) is a subobject of B, C
g
−→B is an arbitrary morphism and
P
m
/
g

C
g

A
m
/ B
18th January 2005

200
Sources and Sinks
[Chap. III
is a pullback square, then by the above proposition (P, m) is a subobject of C. It is called
an inverse image of (A, m) under g, since it corresponds to the concept of “inverse
image” in familiar constructs. In particular, in Set, if C
g
−→B is a function and A is
a subset of B, considered as a subobject of B via its inclusion function, then g−1[A],
considered as a subobject of C via its inclusion function, is an inverse image of A under
g.
CONGRUENCES
If f : A →B is a group homomorphism, then the group-theoretic congruence relation
determined by f is the subset C of A × A consisting of all pairs (a, b) with f(a) = f(b).
Obviously, C can be regarded as a subgroup of A × A, and if m : C ,→A × A is the
inclusion and A × A
π1 /
π2 / A are the projections, then (according to Proposition 11.11)
the square
C
π1◦m /
π2◦m

A
f

A
f
/ B
is a pullback square.
This motivates our next deﬁnition.
11.20 DEFINITION
(1) If
•
p
/
q

•
f

•
f
/ •
is a pullback square, then the pair (p, q) is called a congruence relation of f.
(2) A pair (p, q) of morphisms is called a congruence relation provided that there
exists some morphism f such that (p, q) is a congruence relation of f.
11.21 LEMMA
Let (p, q) be a congruence relation of A
f
−→B. Then
(1) (p, q) is a congruence relation of A
m◦f
−−−→C, for each monomorphism B
m
−−→C,
(2) if f = g ◦h and h ◦p = h ◦q, then (p, q) is a congruence relation of h.
Proof: Apply Lemma 11.15.

18th January 2005

Sec. 11]
Limits and colimits
201
11.22 PROPOSITION
(1) If (p, q) is a congruence relation and c is a coequalizer of p and q, then (p, q) is a
congruence relation of c.
(2) If c is a regular epimorphism and (p, q) is a congruence relation of c, then c is a
coequalizer of p and q.
Proof:
(1). Immediate from Lemma 11.21(2).
(2). Let c be a coequalizer of r and s. By the pullback property there exists a morphism
k with p ◦k = r and q ◦k = s. To show that c is a coequalizer of p and q, let f be
a morphism with f ◦p = f ◦q. Then f ◦r = f ◦s. Hence, since c is a coequalizer
of r and s, there exists a unique morphism f with f = f ◦c.

INTERSECTIONS
11.23 DEFINITION
Let A be a family of subobjects (Ai, mi) of an object B, indexed by a class I. A subobject
(A, m) of B is called an intersection of A provided that the following two conditions
are satisﬁed:
(1) m factors through each mi; i.e., for each i there exists an fi with m = mi ◦fi,
(2) if a morphism C
f
−→B factors through each mi, then it factors through m.58
11.24 EXAMPLES
(1) Let B be a set and let (Ai)I be a family of subsets of B, considered (via inclusions)
as subobjects of B in Set. Then T
i∈I Ai, considered as a subobject of B, is an
intersection in the sense of Deﬁnition 11.23. Similarly for Vec, Top, Σ-Seq, etc.
(2) In a poset, considered as a category, intersections are meets.
(3) For two subobjects (A1, m1) and (A2, m2) of B, an intersection is the diagonal mor-
phism of a pullback of A1
m1
−−→B
m2
←−−A2.
11.25 REMARKS
(1) Intersections can be regarded as limits (cf. Exercises 11F and 11L).
(2) Any two intersections of a family of subobjects of B are isomorphic subobjects of
B.
(3) Let A
h
−→B be a morphism. Then (A, h) is an intersection of the empty family of
subobjects of B if and only if h is an isomorphism.
58Observe that any intersection (A, m) of a family of subobjects (Ai, mi) of an object B, indexed by
a class I, depends only on the class {(Ai, mi) | i ∈I} of subobjects of B and not on the indexing
function. Hence we sometimes also speak of an intersection of a class of subobjects of B.
18th January 2005

202
Sources and Sinks
[Chap. III
11.26 DEFINITION
A class M of monomorphisms is said to be closed under the formation of intersec-
tions provided that whenever (A, m) is an intersection of a family of subobjects (Ai, mi)
of B and each mi belongs to M, then m belongs to M.
COLIMITS
The notion of colimit is dual to that of limit; namely,
11.27 DEFINITION
Let D : I →A be a diagram.
(1) An A-sink (Di
fi
−−→A)i∈Ob(I) is said to be natural for D provided that for each
I-morphism i
d
−→j, the triangle
Di
Dd /
fi
 B
B
B
B
B
B
B
B
Dj
fj

A
commutes.
(2) A colimit of D is a natural sink (Di
ci
−−→K)i∈Ob(I) for D with the (universal )
property that each natural sink for D uniquely factors through it.
11.28 EXAMPLES
(1) Coproducts are precisely the colimits of diagrams with discrete schemes. In par-
ticular, initial objects are the colimits of empty diagrams.
(2) For a pair of morphisms A
f /
g / B , considered as a diagram D with scheme • ⇒•,
B
c−→C is a coequalizer of f and g if and only if (B
c−→C
c◦f
←−−−A) is a colimit of
D.
(3) The dual of the concept of an intersection of a family of subobjects of B is the
concept of a cointersection of a family of quotient objects of B. In particular,
(a) If B is a set and if (ρi)I is a family of equivalence relations on B considered (as in
7.86) as quotient objects of B in Set, then the smallest equivalence relation ρ on
B generated by S
i∈I ρi, considered as a quotient object of B, is a cointersection
of the family in Set.
(b) In a poset, considered as a category, cointersections are joins.
18th January 2005

Sec. 11]
Limits and colimits
203
(4) The dual of the concept of projective limit is that of directed colimit (also called
inductive limit). That is, directed colimits are colimits of diagrams whose schemes
are up-directed posets.
Every diagram D : I →Set, whose scheme is an up-directed poset, has a canonical
colimit. Denote D(i →j) by Di
dij
−−→Dj, let C = S
i∈I(Di × {i}) be the disjoint
union of the family (Di)i∈I, and let (Dj
µj
−−→C)j∈Ob(I) be the canonical coproduct
of the family (Di)i∈Ob(I) in Set, as constructed in 10.67(1). Deﬁne an equivalence
relation ∼on C by: (x, i) ∼(y, j) if and only if there exists k ≥i, j with dik(x) =
djk(y). If C
q−→Q is the natural map from C onto the set Q = C/∼of equivalence
classes under ∼, then (Di
q◦µi
−−−→Q)i∈Ob(I) is a colimit of D.
Observe that directed colimits in any construct of the form Alg(Ω) can be con-
structed as in Set: Let Ω= (nk)k∈K and let D : I →Alg(Ω) be a diagram for
an up-directed poset I. Denote D(i →j) by (Di, (ωi
k)k∈K)
dij
−−→(Dj, (ωj
k)k∈K) and
form (as above) the colimit (Di
q◦µi
−−−→Q)i∈Ob(I) of the diagram I
U◦D
−−−−→Set, where
Alg(Ω)
U
−−→Set is the forgetful functor. Since I is up-directed, for each k ∈K
and each (x1, . . . , xnk) ∈Qnk there exists some i ∈Ob(I) and (y1, . . . , ynk) ∈Dnk
i
with (q ◦µi)nk(y1, . . . , ynk) = (x1, . . . , xnk). Deﬁne ωk(x1, . . . , xnk) =
q ◦µi ◦ωi
k(y1, . . . , ynk). Then up-directedness of I implies that the so-deﬁned map
Qnk
ωk
−−→Q is the unique function that makes the following diagram commute for
each i ∈Ob(I):
Dnk
i
(q◦µi)nk
/
ωi
k

Qk
ωk

Di
q◦µi
/ Q
It follows that the sink ((Di, (ωi
k)k∈K)
q◦µi
−−−→(Q, (ωk)k∈K))i∈Ob(I) is a colimit of D.
(5) The dual of the concept of pullback is that of pushout, explicitly described below.
11.29 PROPOSITION
Colimits are essentially unique and each colimit is an extremal epi-sink.
D
11.30 DEFINITION
(1) The square
C
f
/
g

A
g

B
f
/ P
(∗)
18th January 2005

204
Sources and Sinks
[Chap. III
is called a pushout square provided that it commutes and that for any commuting
square of the form
C
f
/
g

A
ˆg

B
ˆf
/ ˆP
there exists a unique morphism P
k
−→ˆP for which the diagram
C
f
/
g

A
ˆg

g

B
f
/
ˆf
+
P
k
?
?
?
?
?
?
?
?
ˆP
commutes.
(2) If (∗) is a pushout square, the 2-sink ((g, f), P) is called a pushout of the 2-source
(C, (f, g)), and f is called a pushout of f along g.
Pullback and Pushout
18th January 2005

Sec. 11]
Limits and colimits
205
11.31 REMARK
Since pushouts are dual to pullbacks, there is a canonical construction of pushouts via
coequalizers and coproducts (cf. 11.11).
11.32 DEFINITION
A square that is simultaneously a pullback square and pushout square is called a pula-
tion square.
11.33 PROPOSITION
Consider a commuting square
•
p
/
q

•
c

•
c
/ •
(∗)
(1) If (∗) is a pushout square, then c is a coequalizer of p and q.
(2) If (p, q) is a congruence relation of c, and c is a regular epimorphism, then (∗) is a
pulation square.
Proof:
(1). Immediate.
(2). Let
•
p
/
q

•
ˆq

•
ˆp
/ •
be a commutative square. Since (∗) is a pullback square and c ◦id = c ◦id, there
exists a morphism k such that id = p ◦k = q ◦k. Hence ˆp ◦q = ˆq ◦p implies that
ˆp = ˆp ◦q ◦k = ˆq ◦p ◦k = ˆq.
Hence ˆp ◦p = ˆp ◦q. Since by Proposition 11.22, c is a coequalizer of p and q, there
exists a unique morphism h with ˆp = h ◦c; i.e., with ˆp = h ◦c and ˆq = h ◦c. Hence
(∗) is a pushout square.

Suggestions for Further Reading
Maranda, J. M. Some remarks on limits in categories. Canad. Math. Bull. 5 (1962):
133–146.
Eckmann, B., and P. J. Hilton. Group-like structures in general categories II: Equal-
izers, limits, length. Math. Ann. 151 (1962): 150–186.
18th January 2005

206
Sources and Sinks
[Chap. III
Kelly, G. M. Monomorphisms, epimorphisms, and pullbacks. J. Austral. Math. Soc. 9
(1969): 124–142.
Tholen, W. Amalgamations in categories. Algebra Univ. 14 (1982): 391–397.
EXERCISES
11A. Schemes With Initial Objects
Show that for categories A the following conditions are equivalent:
(1) A has an initial object,
(2) the diagram A
idA
−−−→A has a limit,
(3) each diagram with scheme A has a limit.
11B. Products as Projective Limits of Finite Products
Let (Ai)i∈J be a family of objects in A, indexed by an inﬁnite set J. Let I be the
set of all ﬁnite subsets of J, ordered by: M ≤N ⇔N ⊆M. For each M ∈I let
(Q
M Ai, (pM
i )) be a product of (Ai)i∈M in A (where Q
{i} Ai
p{i}
i
−−−→Ai = Ai
id
−−→Ai for
each i ∈J). Show that
(a) There exists a diagram D : I →A that associates with M ≤N in I the unique
morphism Q
M Ai
fMN
−−−−→Q
N Ai that satisﬁes pN
i ◦fMN = pM
i
for each i ∈N.
(b) If (P, (pN)N∈I) is a (projective) limit of D, then (P, (p{i})i∈J) is a product of (Ai)i∈I.
11C. Pullbacks as Products in Comma Categories
Show that a commuting square
P
pA /
pB

A
f

B
g
/ C
with f ◦pA = g ◦pB = p
is a pullback square in A if and only if ((P, p), (pA, pB)) is a product of f and g in the
comma category (A ↓C).
11D. Products of Morphisms as Pullbacks
Show that each diagram of the form
A × B
πB /
idA×f

B
f

A × C
πC / C
is a pullback square.
18th January 2005

Sec. 11]
Limits and colimits
207
11E. Kernels as Pullbacks
Show that in a category A with a zero-object 0, k is a kernel of f if and only if
•
/
k

0

•
f
/ •
is a pullback square.
11F. Intersections as Pullbacks
Let m1 and m2 be monomorphisms and let
A
m2 /
m1

A1
m1

A2
m2
/ B
be a commuting square with m = m1◦m2 = m2◦m1. Show that the square is a pullback
square if and only if (A, m) is an intersection of the family ((Ai, mi))i∈{1,2} of subobjects
of B.
11G. Pushouts as Pullbacks
Show that in a group, considered as a category, the pushout squares are precisely the
pullback squares.
11H. Pullback Stability of Special Monomorphisms
Show that
(a) in any category the class of strict monomorphisms is pullback stable,
(b) in Set the class of sections is not pullback stable,
(c) in DRail the class of extremal monomorphisms is not pullback stable.
11I. Pullback Stability of Epi-Sinks in Set
For each i ∈I let
Bi
ki
/
gi

Ai
fi

B
f
/ A
be a pullback square in Set. Show that whenever (Ai
fi
−−→A)I is an epi-sink, then so is
(Bi
gi
−−→B)I.
11J. Stable Epimorphisms
A morphism f is called a stable epimorphism provided every pullback of f is an
epimorphism. Show that
18th January 2005

208
Sources and Sinks
[Chap. III
(a) Every retraction is a stable epimorphism.
(b) Every stable epimorphism is an epimorphism.
* (c) In Cat not all regular epimorphisms are stable.
* (d) In Haus and in Met: ExtrEpi ⊊StableEpi = SurjMorph ⊊Epi.
(e) Stable epimorphisms are pullback stable.
(f) If A has pullbacks of all 2-sinks, then in A stable epimorphisms are closed under
composition.
11K. Intersections
Show that
(a) in Set an intersection of two sections need not be a section,
(b) if A has products, then in A an intersection of a set-indexed family of regular
subobjects is a regular subobject.
[Hint: If (A, m) is an intersection of the family (Ai, mi)I, where each mi is an
equalizer of B
ri /
si / Ci , then m is an equalizer of B
⟨ri⟩/
⟨si⟩
/ Q Ci .]
11L. Multiple Pullbacks
A pair (f, S), consisting of a morphism A
f
−→B and a source S = (A
fi
−−→Ai)I, is called
a multiple pullback of a sink (Ai
gi
−−→B)I provided that
(1) f = gi ◦fi for each i ∈I, and
(2) for each pair (f′, S′), with A′
f′
−−→B a morphism and S′ = (A′
f′
i
−−→Ai)I a source
for which f′ = gi ◦f′
i for each i ∈I, there exists a unique morphism A′
g
−→A with
f′ = f ◦g and f′
i = fi ◦g for each i ∈I.
(a) Interpret multiple pullbacks as limits.
(b) Interpret pullbacks as multiple pullbacks of 2-sinks.
(c) Interpret intersections as multiple pullbacks. In particular, show that whenever
R = ((Ai, mi))I is a family of subobjects of B and A
f
−→B is a morphism, then
the following are equivalent:
(1) (A, f) is an intersection of R,
(2) there exists a (unique) source S such that (f, S) is a multiple pullback of
the sink (Ai
mi
−−→B)i∈I.
(d) Show that each sink that consists of isomorphisms alone has a multiple pullback.
18th January 2005

Sec. 11]
Limits and colimits
209
11M. Products as Multiple Pullbacks
Let A have a terminal object T, and let (Ai)I be a family of A-objects. Show that a
source P = (P
pi
−−→Ai)I is a product of (Ai)I if and only if (P →T, P) is a multiple
pullback of the sink (Ai →T)I.
11N. A Characterization of Monomorphisms by Multiple Pullbacks
Show that a morphism A
m
−−→B is a monomorphism if and only if, for each class I, the
sink (Ai
mi
−−→B)I, deﬁned by mi = m for each i ∈I, has a multiple pullback.
11O. Directed Colimits in Ab
Show that an abelian group is torsion free if and only if it is a directed colimit in Ab of
free abelian groups.
11P. Pushout Stability of Monomorphisms and Mono-Sources in Set
(a) Show that in Set the class of monomorphisms is pushout stable.
(b) For each i ∈I let
A
f
/
mi

B
ni

Ai
gi
/ Bi
be a pushout square in Set. Show that the fact that (A
mi
−−→Ai)I is a mono-source
does not imply that the source (B
ni
−−→Bi)I is a mono-source. [Contrast this with
11I.]
11Q. Epimorphisms and Pulation Squares
(a) Let (p, q) be a congruence relation of e. Show that e is a regular epimorphism if and
only if the square
•
p
/
q

•
e

•
e
/ •
is a pulation square (cf. 11.32).
(b) Dualize part (a).
11R. A Characterization of Monomorphisms
Show that a morphism is a monomorphism if and only if it has a congruence relation of
the form (p, p).
18th January 2005

210
Sources and Sinks
[Chap. III
11S. A Construction of Equalizers
Show that if
•
p2
/
p1

B
⟨id,id⟩

A
⟨f,g⟩
/ B × B
is a pullback square, then p1 is an equalizer of f and g.
18th January 2005

12 Completeness and cocompleteness
In this section we consider the existence of limits in a given category A. Only rarely
does every diagram in A have a limit. [Recall that any such A must be thin (cf. 10.32
and 10.33).] However, in many familiar categories A, every small diagram has a limit,
and for each object A in A every (possibly large) family of subobjects of A has an
intersection. This leads to the following deﬁnitions:
12.1 DEFINITION
A category is said to
(1) have (ﬁnite) products provided that for each (ﬁnite) set-indexed family of objects
there exists a product (cf. Deﬁnition 10.29),
(2) have equalizers provided that for each parallel pair of morphisms there exists an
equalizer,
(3) have pullbacks provided that for each 2-sink there exists an pullback,
(4) have (ﬁnite) intersections provided that for each object A, and every (ﬁnite)
family of subobjects of A, there exists an intersection.
Dual Notions: have (ﬁnite) coproducts, have coequalizers, and have (ﬁnite)
cointersections.
12.2 DEFINITION
A category A is said to be
(1) ﬁnitely complete if for each ﬁnite diagram in A there exists a limit,
(2) complete if for each small diagram in A there exists a limit,
(3) strongly complete if it is complete and has intersections.
Dual Notions: ﬁnitely cocomplete, cocomplete, and strongly cocomplete cat-
egories.
12.3 THEOREM
For each category A the following conditions are equivalent:
(1) A is complete,
(2) A has products and equalizers,
(3) A has products and ﬁnite intersections.
211

212
Sources and Sinks
[Chap. III
Proof:
(1) ⇒(3) is immediate.
(3) ⇒(2) follows from Proposition 11.14 and Example 11.24(3).
(2) ⇒(1).
Suppose that A has products and equalizers, and let D : I →A be a
small diagram. For each morphism t : i →j in I let d(t) = i and c(t) = j. Form the
products (Q
i∈Ob(I) Di
πj
−−→Dj)j∈Ob(I) and (Q
t∈Mor(I) Dc(t)
ˆπs
−−→Dc(s))s∈Mor(I). For each
t ∈Mor(I) there is a pair of morphisms πc(t), Dt◦πd(t) : Q
i∈Ob(I) Di →Dc(t), and these
deﬁne a pair of morphisms
⟨πc(t)⟩, ⟨Dt ◦πd(t)⟩:
Y
i∈Ob(I)
Di
−→
Y
t∈Mor(I)
Dc(t).
Let e : E →Q Di be an equalizer of this pair. We claim that (E
πi◦e
−−−→Di)i∈Ob(I) is a
limit of D in A. Indeed,
(a) It is a natural source for D because for each morphism i
s
−→j in I, we have
πj ◦e = πc(s) ◦e = ˆπs ◦⟨πc(t)⟩◦e = ˆπs ◦⟨Dt ◦πd(t)⟩◦e = Ds ◦πd(s) ◦e = Ds ◦πi ◦e.
(b) Suppose that (A
fi
−−→Di) is a natural source for D and let f = ⟨fi⟩: A →Q Di.
For each morphism s of I, naturality of the source implies that fc(s) = Ds ◦fd(s).
Consequently,
ˆπs ◦⟨πc(t)⟩◦f = πc(s) ◦f = fc(s) = Ds ◦fd(s) = Ds ◦πd(s) ◦f = ˆπs ◦⟨Dt ◦πd(t)⟩◦f.
Since the product is a mono-source, ⟨πc(t)⟩◦f = ⟨Dt ◦πd(t)⟩◦f. Thus there is a
unique A
f′
−−→E such that f = e◦f′. Thus fi = πi ◦e◦f′ for each i, and f′ is clearly
seen to be unique with respect to the latter property.

12.4 THEOREM
For each category A the following conditions are equivalent:
(1) A is ﬁnitely complete,
(2) A has ﬁnite products and equalizers,
(3) A has ﬁnite products and ﬁnite intersections,
(4) A has pullbacks and a terminal object.
Proof: (1) ⇔(2) ⇔(3) can be proved as in Theorem 12.3.
(1) ⇒(4) is immediate.
(4) ⇒(3).
Recall that products of pairs of objects can be formed via pullbacks of
morphisms to a terminal object (11.13) and that intersections of pairs of subobjects are
formed via pullbacks [11.24(3)].

18th January 2005

Sec. 12]
Completeness and cocompleteness
213
12.5 PROPOSITION
Each complete and wellpowered category is strongly complete.
Proof: Let A be complete and wellpowered. For each family (Ai
mi
−−→A)I of subobjects
of some object A, there exists a subset J ⊆I such that each subobject Ai
mi
−−→A, i ∈I,
is isomorphic to some Aj
mj
−−→A, j ∈J. Obviously, any intersection (B, m) of the small
sink (Aj
mj
−−→A)J is an intersection of the original sink (Ai
mi
−−→A)I.

12.6 EXAMPLES
(1) Each of the categories Set, Vec, Top, HComp, Pos, Grp, Cat, and Σ-Seq is
strongly complete and strongly cocomplete.
Observe however that the quasicategory CAT fails to have coequalizers.
(2) Met has equalizers, but not products. JPos has products, but not equalizers.
(3) Every non-trivial group, considered as a category, has pullbacks and pushouts, but
not equalizers or coequalizers, nor products or coproducts of pairs, nor terminal or
initial objects.
(4) A poset, considered as a category, is (co)complete if and only if it is a complete
lattice. Thus, for posets, completeness and cocompleteness coincide.
However, the partially ordered class Ord of all ordinal numbers is not complete (it
has no terminal object) even though it is cocomplete (but not strongly cocomplete).
(5) The categories CLat and CBoo (= complete boolean algebras and boolean homo-
morphisms) are strongly complete, but not cocomplete (cf. Exercise 12I).
(6) The category of ﬁnite sets is ﬁnitely complete and ﬁnitely cocomplete, but is neither
complete nor cocomplete.
(7) The category Field is neither ﬁnitely complete nor ﬁnitely cocomplete.
COCOMPLETENESS ALMOST IMPLIES COMPLETENESS
Although completeness and cocompleteness are not equivalent, the constructions of limits
and colimits are intimately related. In fact, as is shown below, under suitable “smallness
conditions”, completeness and cocompleteness are equivalent.
12.7 THEOREM
A small category is complete if and only if it is cocomplete.
Proof: Immediate from Theorem 10.32(2).

12.8 PROPOSITION (Canonical Construction of Limits via Large Colimits)
For a small diagram D : I →A, let SD be the category whose objects are all natural
sources (A, fi) for D, whose morphisms (A, fi)
g
−→(A′, f′
i) are all those A-morphisms
18th January 2005

214
Sources and Sinks
[Chap. III
A
g
−→A′ with (A, fi) = (A′, f′
i) ◦g, and whose identity morphisms and composition law
are as in A. If D∗: SD →A is the diagram given by:
D∗((A, fi)
g
−→(A′, f′
i)) = A
g
−→A′,
then for each A-object L, the following conditions are equivalent:
(1) D has a limit L = (L
ℓi
−−→Di)i∈Ob(I),
(2) D∗has a colimit K = (D∗(S)
kS
−−→L)S∈Ob(SD),
(3) SD has a terminal object L = (L
ℓi
−−→Di)i∈Ob(I).
Proof: (1) ⇔(3) is immediate.
(3) ⇒(2) follows from the dual of Example 11.4(5).
(2) ⇒(3). Given an object j of I and an object S = (A, fi) in SD let D∗(S)
fS
−−→Dj be
the morphism A
fj
−−→Dj in the source S that is indexed by j. Then for each j ∈Ob(I)
(D∗(S)
fS
−−→Dj)S∈Ob(SD)
is a natural sink for D∗, so that by the deﬁnition of colimit there is a unique morphism
L
ℓj
−−→Dj with the property that fj = fS = ℓj ◦kS for each S in SD.
To see that the source L = (L
ℓi
−−→Di)i∈Ob(I) is natural for D, let i
d
−→j be any morphism
in I. If S is any natural source for D, then fj = D(d)◦fi, so that ℓj ◦kS = D(d)◦ℓi ◦kS.
Since K, being a colimit, is an epi-sink, it follows that ℓj = D(d) ◦ℓi. Consequently, L
is an object of SD.
To see that L is a terminal object, ﬁrst notice that if S = (A
fi
−−→Di)i∈Ob(I) is a natural
source for D, then the A-morphism A
kS
−−→L is also a morphism S
kS
−−→L in SD.
Moreover if S
g
−→L is any SD-morphism, then since K is a natural sink for D∗, this
implies that kL ◦g = kS. In particular, if for each object S in SD one lets g take on the
role of kS, this yields:
kL ◦kS = kS = idL ◦kS
for each S in SD.
Since K is an epi-sink, this gives kL = idL. Consequently, g = idL ◦g = kL ◦g = kS, so
that kS is the unique morphism from S to L.

12.9 PROPOSITION
A cocomplete category A has a terminal object if and only if it has a weak terminal
object K; i.e., for each A-object A, there exists at least one morphism from A to K.
18th January 2005

Sec. 12]
Completeness and cocompleteness
215
Proof: Let K be a weak terminal object in a cocomplete category A. Then let K be
the full subcategory of A that consists of the single object K, let D : K →A be the
inclusion functor, and let (K
k
−→T) be a colimit of D. We shall prove that T is a
terminal object of A.
For each A-object A there is some morphism f : A →K, and hence a morphism g =
k ◦f : A →T. Suppose that g′ : A →T. Then to show that g = g′, form a coequalizer
T
c−→C of A
g /
g′ / T . One need only show that c is an monomorphism. Indeed, there
exists a morphism f′ : C →K, and since f′ ◦c ◦k is an element of hom(K, K), the
naturality of the colimit of D implies that k ◦f′ ◦c ◦k = k.
Furthermore, k is an
epimorphism (since it is a singleton colimit sink) and, hence, k ◦f′ ◦c = idT ; so c is a
section, and thus a monomorphism.

12.10 DEFINITION
A full subcategory B of a category A with embedding E : B →A is called colimit-
dense in A provided that for every A-object A there exists a diagram D : I →B such
that the diagram E ◦D : I →A has a colimit with codomain A.
12.11 EXAMPLES
(1) A full subcategory of Set is colimit-dense in Set if and only if it contains at least
one nonempty set as an object. [Observe that every set X is a coproduct of card(X)
copies of {0}.]
(2) A full subcategory of Pos is colimit-dense in Pos if and only if it contains at least
one nondiscrete poset as an object.
(3) A full subcategory of Vec is colimit-dense in Vec if and only if it contains at least
one nonzero vector space as an object.
(4) Any full subcategory of Ab that contains Z × Z × Z is colimit-dense in Ab.
(5) The full subcategory of Top that consists of all zero-dimensional Hausdorﬀspaces is
colimit-dense in Top. [Observe that every topological space is a (regular) quotient
of a zero-dimensional Hausdorﬀspace.]
12.12 THEOREM
Every cocomplete category with a small colimit-dense subcategory is complete.
Proof: Let B be a small, colimit-dense subcategory of a cocomplete category A. For
each small diagram D : I →A, consider the category SD of all natural sources for D
(cf. 12.8).
First we establish that SD is cocomplete. Let D0 : J →SD be a small diagram (such
that for each object j of J, D0(j) = (Aj, fji)I) and let D∗: SD →A be the diagram
of Proposition 12.8.
Form the colimit (Aj
cj
−−→K)j∈Ob(J) of the composite diagram
J
D0
−−→SD
D∗
−−→A. Since for each object i of I (Aj
fji
−−→Di)Ob(J) is a natural sink
18th January 2005

216
Sources and Sinks
[Chap. III
for D∗◦D0, we have the existence of a unique morphism gi : K →Di such that gi ◦
cj = fji. Since (cj, K)Ob(J) is an epi-sink, (K, gi)Ob(I) is a natural source for D and
((Aj, fji)
cj
−−→(K, gi))Ob(J) is a colimit of D0. Thus SD is cocomplete.
Now to show that the small diagram D : I →A has a limit, by Propositions 12.8 and
12.9 it is suﬃcient to prove that the category SD has a weak terminal object. Let I∗
be the full subcategory of SD given by all those natural sources S = (A, fi)Ob(I) whose
domain A is a member of B. Since B is small, so is I∗, and since SD is cocomplete, the
inclusion I∗,→SD has a colimit (S
cS
−−→K)S∈Ob(I∗) in SD. We claim that K = (K, pi)
is a weak terminal object in SD.
To see this, let ˆS = (A, fi)Ob(I) be any object of SD. By the colimit density, there exists
a small diagram ˆD : K →B with a colimit ( ˆDk
ak
−−→A)Ob(K) in A. Now for each object
k of K, Sk = ( ˆDk , fi◦ak)Ob(I) is an object of I∗. Thus cSk : Sk →K is an SD-morphism,
and since (cS, K) is a colimit, for each K-morphism k
g
−→k′ we have cSk = cSk′ ◦ˆD(g).
Thus (cSk, K)k∈Ob(K) is natural for ˆD, so that since (ak, A)Ob(K) is a colimit of ˆD, there
is a unique A
tA
−−→K such that tA ◦ak = cSk. Since (ak, A) is an epi-sink, it follows that
tA is a morphism in SD. Thus K is a weak terminal object.

12.13 THEOREM
Every co-wellpowered cocomplete category with a separator is wellpowered and complete.
Proof: Let A be a co-wellpowered cocomplete category with a separator S. First we
prove the following two facts about A:
(1) For every source S there exist an epimorphism e and a mono-source M with S =
M ◦e.
(2) If M = (A
mi
−−→Ai)I is a small mono-source, then A is a quotient object of
ΠI hom(S,Ai)S or a quotient object of ∅S.
(1). Let (ej)J be the collection of those epimorphisms ej, for which there exists a source
Sj with S = Sj ◦ej. If e is a cointersection of (ej)J, then there exists a source M
with S = M ◦e. To show that M is a mono-source, let r and s be morphisms with
M ◦r = M ◦s. If c is a coequalizer of r and s, then there exists a source T with
M = T ◦c. This implies that S = T ◦(c ◦e). Thus there exists some ˆ∈J with
c ◦e = eˆ. By the deﬁnition of e, there exists a morphism fˆwith e = fˆ◦eˆ. Since e is
an epimorphism, the equations (fˆ◦c) ◦e = fˆ◦eˆ= e = id ◦e imply that fˆ◦c = id.
Thus c is a section and, consequently, an isomorphism. Hence r = s.
(2).
Since M is a small mono-source, the map ϕ : hom(S, A) →Q
i∈I hom(S, Ai),
given by (ϕ(f))(i) = mi ◦f, is injective. Thus either hom(S, A) = ∅or there exists
an epimorphism ΠI hom(S,Ai)S →hom(S,A)S. (Cf. the dual of Exercise 10K.) Since S is
a separator, there exists an epimorphism hom(S,A)S →A (cf. the proof of Proposition
10.38). Thus A is a quotient object of ∅S or a quotient object of ΠI hom(S,Ai)S.
18th January 2005

Sec. 12]
Completeness and cocompleteness
217
Since A is co-wellpowered, (2) immediately implies that A is wellpowered. It remains to
be shown that every small diagram D : I →A has a limit. Let D be such a diagram and
let Z be a set that represents all quotient objects of ∅S and of Πi∈Ob(I) hom(S,D(i))S. Then
the collection G = { Sj | j ∈J } of all natural sources Sj = (Qj
fji
−−→D(i))i∈Ob(I) for D,
whose domain Qj belongs to Z, is a set. Let (µj, ` Qj)j∈J be a coproduct of the small
family (Qj)j∈J. Then there exists a unique source T = (` Qj
fi
−−→D(i))i∈Ob(I) such
that Sj = T ◦µj for each j ∈J. By (1) there exist an epimorphism e and a mono-source
L with T = L ◦e. Since each Sj is natural for D, so are T and L. To verify that L is
a limit of D it remains to be shown that every natural source S for D factors uniquely
through L. By (1) there exist an epimorphism e and a mono-source M with S = M ◦e.
Since S is natural for D, so is M. By (2) there exist ˆ∈J and an isomorphism h with
M = Sˆ◦h. Thus f = e ◦µˆ◦h ◦e is a morphism with S = L ◦f. That f is uniquely
determined by S = L ◦f follows from the fact that L is a mono-source.

12.14 REMARK
For slight modiﬁcations of the last two theorems see Exercise 12N.
Suggestions for Further Reading
Isbell, J. R. Structure of categories. Bull. Amer. Math. Soc. 72 (1966): 619–655.
Trnkov´a, V. Limits in categories and limit preserving functors. Comment. Math. Univ.
Carolinae 7 (1966): 1–73.
Trnkov´a, V. Completions of small categories.
Comment. Math. Univ. Carolinae 8
(1967): 581–633.
Isbell, J. R. Small subcategories and completeness. Math. Systems Theory 2 (1968):
27–50.
Kennison, J. Normal completions of small categories.
Canad. J. Math.
21 (1969):
196–201.
Pumpl¨un, D., and W. Tholen. Covollst¨andigkeit vollst¨andiger Kategorien.
Manuscr.
Math. 11 (1974): 127–140.
B¨orger, R., W. Tholen, M. B. Wischnewsky, and H. Wolﬀ. Compact and hypercom-
plete categories. J. Pure Appl. Algebra 21 (1981): 129–144.
Ad´amek, J., and V. Koubek. Completion of concrete categories. Cahiers Topol. Geom.
Diﬀ. 22 (1981): 209–228.
Herrlich, H. Universal completions of concrete categories. Springer Lect. Notes Math.
915 (1982): 127–135.
Kelly, G. M. A survey of totality for enriched and ordinary categories. Cahiers Topol.
Geom. Diﬀ. Cat. 27 (1986): 109–132.
18th January 2005

218
Sources and Sinks
[Chap. III
EXERCISES
12A. Regular Monomorphisms vs. Strict Monomorphisms
Show that
(a) The class of strict monomorphisms is closed under the formation of intersections.
Neither the class of regular monomorphisms nor the class of extremal monomor-
phisms need be closed under the formation of intersections.
(b) Intersections of regular monomorphisms are strict monomorphisms.
(c) If A has equalizers, then in A strict subobjects are precisely the intersections of
families of regular subobjects.
(d) If A is strongly complete, then in A StrictMono = RegMono.
(e) If A has pushouts, then in A StrictMono = RegMono.
12B. Regular Monomorphisms via Extremal Monomorphisms
Show that
(a) If A is strongly complete and in A regular monomorphisms are closed under com-
position, then in A RegMono = ExtrMono [cf. Corollary 14.20].
(b) If A has equalizers and pushouts and in A regular monomorphisms are closed under
composition, then in A RegMono = ExtrMono [cf. Proposition 14.22].
12C. Multiple Pullbacks and Completeness
Show that:
(a) A category is complete if and only if it has a terminal object and multiple pullbacks
of small sinks.
(b) A group, considered as a category, has multiple pullbacks for all (even large) sinks,
but — if nontrivial — it fails to have equalizers or ﬁnite products.
12D. Dense Subcategories
A full subcategory B of a category A is called dense provided that each A-object A is
a colimit of its “canonical diagram” with scheme B ↓A (see 3K) given on objects by
(X →A) 7→X and on morphisms by h 7→h (with the canonical colimit sink).
(a) Verify that the colimit-dense subcategories of Example 12.11(1), (2), (4), and (5)
are in fact dense.
(b) Verify that R is colimit-dense in Vec, but is not dense in Vec.
(c) Let B be a small subcategory of A. Deﬁne E : A →[Bop, Set] by assigning to each
A-object A the restriction of hom(−, A) : Aop →Set to Bop. Prove that E is full
and faithful if and only if B is dense.
12E. Limit-Dense and Codense Subcategories
(a) Formulate the concepts of limit-density (dual to 12.10) and codensity (dual to 12D).
18th January 2005

Sec. 12]
Completeness and cocompleteness
219
(b) Let A be the full subcategory of Set that consists of all ﬁnite sets, and let B be the
full subcategory of A that consists of ∅and of all ﬁnite sets that have cardinality a
power of 2. Show that:
(1) A has no proper limit-closed subcategory (cf. 13.26) that contains {0, 1}. How-
ever, {0, 1} is not limit-dense in A.
(2) {0, 1} is limit-dense in B, but is not codense in B.
* (c) Prove the equivalence of the following statements:
(1) the monoid of all functions from N to N is a codense subcategory of Set,
(2) no cardinal is measurable; i.e., every ultraﬁlter that is closed under the formation
of countable meets is closed under the formation of all meets.
[Hints: For (1) ⇒(2), let F be an ultraﬁlter on X that is closed under the formation
of countable meets. For each function f : X →N deﬁne ˆf : {0} →N by: ˆf(0) = n,
where n is the unique member of N with f−1(n) ∈F. For each natural source
(X
fi
−−→N)I the source ( ˆfi)I is also natural. Thus, it factors through (fi)I by a
unique g : {0} →X. Then g(0) ∈T F.
For (2) ⇒(1), notice that given a set X, a natural source of the canonical diagram
X ↓{N} →Set is a set A and a function ϕ : hom(X, N) →hom(A, N) with
ϕ(p ◦f) = p ◦ϕ(f) for all p : N →N. Given a ∈A, prove that the collection of all
subsets Y ⊆X with ϕ(fY )(a) = 1 (where fY (x) = 1 if x ∈Y , else 0) is an ultraﬁlter
closed under countable meets. Deﬁne h : A →X by {h(a)} = T{ Y | ϕ(fY )(t) = 1 },
then ϕ(f) = f ◦h for each f.]
* (d) Prove that the following statements are equivalent:
(1) Set has a small codense subcategory,
(2) there do not exist arbitrarily large measurable cardinals; i.e., for some n, every
ultraﬁlter closed under n-meets is closed under all meets.
12F. Weakly Terminal Sets of Objects
Deﬁne the concept of weakly terminal set of objects.
Prove that a cocomplete
category has a terminal object if and only if it has a weakly terminal set of objects.
12G. Existence of Coproducts
Let A be complete and wellpowered. Show that:
(a) If an A-object A has an Ith copower IA, then it has a Kth copower KA for each
nonempty subset K of I.
(b) If A is connected and `
I Xi exists for some family (Xi)I, then `
K Xi exists for
each subset K of I (including the case K = ∅).
* 12H. Copowers and Cocompleteness
Let A be complete, wellpowered, co-wellpowered, and have a separator S. Prove that
the following are equivalent:
18th January 2005

220
Sources and Sinks
[Chap. III
(1) A is cocomplete,
(2) for each set I there exists an Ith copower IS of S in A.
* 12I. Strongly Complete but not Cocomplete
(a) Show that the categories CBoo and CLat are each complete, wellpowered, and
extremally co-wellpowered, but not cocomplete. (Cf. 8E and 10S.)
(b) Show that the construct A, whose objects are triples (X, λ, µ), where X
λ
−→X and
PX \ {∅}
µ
−→X are functions, and whose morphisms (X, λ, µ)
f
−→(X′, λ′, µ′) are
those functions X
f
−→X′ that make the diagram
PX \ {∅}
µ
/
f[ ]

X
f

λ
/ X
f

PX′ \ {∅}
µ′
/ X′
λ′
/ X′
commute, is complete, wellpowered, and co-wellpowered, but not cocomplete.
12J. Completeness and Coequalizers
Show that a category A has coequalizers whenever A is complete, wellpowered, and
extremally co-wellpowered. (Cf. 15.25 and 15.7.)
* 12K. Cocomplete Subcategories of HComp
Show that a full subcategory of HComp is reﬂective in HComp if and only if it is
cocomplete.
* 12L. Completions of Abstract Categories
(a) Show that the following category A cannot be fully embedded into a category B
such that the pair (A, B) has a product in B and the embedding preserves products
of pairs:
A
A
/ Aα
Cβ
@A
GF
ED
rβ

GF
@A
BC
sβ
O
O
fαβ
/

Aα × Bα
gα
/
O

D
B
/ Bα
where α and β are ordinals and gα ◦fαβ =
(
rβ,
if α = β
sβ,
if α ̸= β.
18th January 2005

Sec. 12]
Completeness and cocompleteness
221
[Hint: If (P, (πA, πB)) were a product of (A, B) in B, then homB(P, D) would be a
proper class.]
(b) Show that the following category A cannot be fully embedded into a category B such
that the pair (r, s) has an equalizer in B and the embedding preserves equalizers:
A
D
Cβ
fαβ

 A
A
A
A
A
A
A
A
A
A
A
/
GF
ED
pβ
o
qβ
o
A
fα

r
/
s
/ B
Eα
gα
`@@@@@@@@@@@
/ Aα
rα
?~
~
~
~
~
~
~
~
~
~
~
sα
?~
~
~
~
~
~
~
~
~
~
~
where α and β are ordinals, r = rα ◦fα, s = sα ◦fα, and
gα ◦fαβ =
(
pβ,
if α = β
qβ,
if α ̸= β.
[Hint: If E
e
−→A were an equalizer of r and s in B, then homB(E, D) would be a
proper class.]
(c) Show that for every category A that has a separating set there exists a full limit-
dense embedding, A
E
−−→B, where B is complete and E preserves small limits.
(d) Show that every category can be fully embedded into a complete quasicategory.
* 12M. Universal Completions of Concrete Categories
A full concrete embedding (A, U)
E
−−→(B, V ) is called a universal completion of
(A, U) provided that the following conditions are satisﬁed:
(1) (B, V ) is concretely complete [i.e., every small diagram has a concrete limit in
(B, V )] and is uniquely transportable,
(2) E preserves concrete limits of small diagrams,
(3) E is concrete limit-dense, i.e., for every B-object B there exists a small diagram
D : I →A, such that B is (the object part of) a concrete limit of E ◦D,
(4) for every concretely complete and uniquely transportable category (C, W) and every
concrete functor (A, U)
G
−−→(C, W) that preserves concrete limits of small diagrams,
there exists a unique concrete functor (B, V )
G
−−→(C, W) that preserves concrete
limits of small diagrams, with G = G ◦E.
Show that
(a) Every amnestic concrete category over a complete category has a universal comple-
tion that is uniquely determined up to concrete isomorphism.
(b) If A is the construct of ﬁnite Boolean spaces (equivalently: the construct of ﬁnite
sets), then the inclusion A ,→BooSp is a universal completion.
18th January 2005

222
Sources and Sinks
[Chap. III
* 12N. Re: Theorems 12.12 and 12.13
(a) Show that every cocomplete category with a small colimit-dense subcategory is
strongly complete.
(b) Show that a strongly cocomplete category with a separating set is strongly complete.
(c) Construct a strongly cocomplete category with a separator that is neither well-
powered nor co-wellpowered.
12O. Completeness of Functor-Categories
(a) Show that limits and colimits in the category [A, B] are formed componentwise.
(b) Show that for each small category A and each strongly (co)complete category B,
[A, B] is strongly (co)complete.
18th January 2005

13 Functors and limits
In this section the behavior of limits with respect to functors A
F
−−→B is investigated.
The following problems receive special attention:
(A) Does F “preserve” limits?
The information that a functor A
F
−−→B preserves limits is particularly useful if the do-
main category A is known to have enough limits. See, e.g., the adjoint functor theorems
in §18.
In many cases, particularly for embedding functors of full subcategories and for forgetful
functors of concrete categories, it is not immediately clear whether or not the domain
category A of the functor A
F
−−→B in question has enough limits, but it is known that
the codomain category B does. In these cases the following questions arise naturally:
(B) Can limits in B be lifted along F to limits of A?
If so, to which extent is the lifting unique?
If not, are there suitable properties of F that at least guarantee the existence of
limits in A provided that limits exist in B?
PRESERVATION OF LIMITS
13.1 DEFINITION
(1) A functor F : A →B is said to preserve a limit L = (L
ℓi
−−→Di) of a diagram
D : I →A provided that FL = (FL
Fℓi
−−−→FDi) is a limit of the diagram
F ◦D : I →B.
(2) F is said to preserve limits over a scheme I provided that F preserves all limits
of diagrams D : I →A with scheme I.
(3) F preserves equalizers if and only if F preserves all limits over the scheme • ⇒•;
F preserves products if and only if F preserves all limits over small discrete
schemes; F preserves small limits if and only if F preserves limits over all small
schemes; F preserves strong limits if and only if F preserves small limits and
arbitrary intersections; etc.
Dual Notions: F preserves colimits (over a scheme I), coequalizers, coprod-
ucts, small colimits, strong colimits, etc.
13.2 EXAMPLES
(1) For the constructs Top, Rel, and Alg(Σ), the forgetful functors preserve limits and
colimits.
223

224
Sources and Sinks
[Chap. III
(2) For constructs of the form Alg(Ω) the forgetful functors preserve limits and directed
colimits [see Example 11.28(4)], but generally fail to preserve coproducts or coequal-
izers. Also for the following constructs, the forgetful functors preserve limits and
directed colimits, but neither coproducts nor coequalizers: Vec, Grp, Sgr, Mon,
Rng, and Σ-Seq.
(3) For the constructs AbTor and (Ban,U) the forgetful functors preserve equalizers,
but not products (cf. 10.55).
(4) The full embeddings Haus →Top and Pos →Rel preserve limits and coproducts,
but not coequalizers.
(5) The covariant power-set functor P : Set →Set preserves neither products (of pairs),
nor coproducts (of pairs), nor equalizers, nor coequalizers.
13.3 PROPOSITION
If F : A →B is a functor and A is ﬁnitely complete, then the following conditions are
equivalent:
(1) F preserves ﬁnite limits,
(2) F preserves ﬁnite products and equalizers,
(3) F preserves pullbacks and terminal objects.
Proof: Immediate from the characterizations of ﬁnite limits (12.4).

13.4 PROPOSITION
For a complete category A, a functor F : A →B preserves small limits if and only if it
preserves products and equalizers.
Proof: This follows immediately from the construction of small limits via products and
equalizers, presented in the proof of Theorem 12.3.

13.5 PROPOSITION
(1) If a functor preserves ﬁnite limits, then it preserves monomorphisms and regular
monomorphisms.
(2) If a functor preserves (small) limits, then it preserves (small) mono-sources.
Proof: (1) follows from Proposition 11.16.
(2) follows from the observation that a source (A
fi
−−→Ai)I is a mono-source if and only
if the source
A
idA /
idA

fi
 @
@
@
@
@
@
@
A
A
Ai
(i ∈I)
18th January 2005

Sec. 13]
Functors and limits
225
is a limit of the diagram
A
fi

A
fi
/ Ai
(i ∈I)

13.6 REMARK
If a functor F preserves equalizers, then F (obviously) preserves regular monomorphisms.
The converse is not true: the forgetful functors from the categories Vecop, Grpop, Posop,
and Hausop to Setop preserve regular monomorphisms, but don’t preserve equalizers.
13.7 PROPOSITION
Hom-functors preserve limits.
Proof: Let F = hom(A, −) : A →Set be a hom-functor, let D : I →A be a diagram,
and let L = (L
ℓi
−−→Di) be a limit of D. Then FL is obviously a natural source for
F ◦D. Let S = (X
fi
−−→hom(A, Di)) be an arbitrary natural source for F ◦D. Then,
for each element x of X, (A
fi(x)
−−−−→Di) is a natural source for D. Hence for each x ∈X
there exists a unique morphism f(x) : A →L with fi(x) = ℓi ◦f(x) for each i ∈Ob(I).
This deﬁnes a function f : X →hom(A, L) which is the unique function f : X →FL
that satisﬁes S = FL ◦f.

13.8 PROPOSITION
If F and G are naturally isomorphic functors, then F preserves limits over a scheme I
if and only if G does.
Proof: Straightforward computation.

13.9 COROLLARY
Representable functors preserve limits.

13.10 REMARK
Since the forgetful functors for constructs are quite often representable, the above corol-
lary explains why limits in constructs are much more often concrete (Deﬁnition 13.12)
than are colimits. In §18 we will show that adjoint functors (in particular embeddings
of reﬂective subcategories) preserve limits. Next we will show that embeddings of “suf-
ﬁciently big” subcategories preserve limits as well.
13.11 PROPOSITION
Embeddings of colimit-dense subcategories preserve limits.
18th January 2005

226
Sources and Sinks
[Chap. III
Proof: Let A be a colimit-dense subcategory of B with embedding E : A →B, and let
D : I →A be a diagram with a limit L = (L
ℓi
−−→Di). Then L is a natural source for
E ◦D. Let S = (B
fi
−−→Di) be an arbitrary natural source for E ◦D. By colimit-density
there exists a diagram G : J →A and a colimit (Gj
cj
−−→B) of E ◦G. For each object
j of J, (Gj
fi◦cj
−−−−→Di)i∈ObI is a natural source for D. Hence for each j ∈Ob(J) there
exists a unique morphism gj : Gj →L with fi ◦cj = ℓi ◦gj for each i ∈I.
Gj
cj
/
gj

B
fi

L
ℓi
/ Di
Since L is a mono-source in A, it follows that (Gj
gj
−−→L) is a natural sink for G and
hence for E◦G. Consequently, there exists a unique morphism f : B →L with gj = f◦cj
for each j. Since (Gj
cj
−−→B) is an epi-sink, this implies that fi = ℓi ◦f for each i. To
show that f is the unique morphism with this property, let f′ : B →L be a morphism
with fi = ℓi ◦f′ for each i. Since (L
ℓi
−−→Di) is a mono-source in A, this implies that
gj = f′ ◦cj for each j, and hence that f′ = f.

CONCRETE LIMITS
13.12 DEFINITION
(1) Let (A, U) be a concrete category. A limit L of a diagram D : I →A is called a
concrete limit of D in (A, U) provided that it is preserved by U.
(2) A concrete category (A, U) has (small) concrete limits, resp. concrete prod-
ucts, etc., if and only if A has (small) limits, resp. products, etc., and U preserves
them.
Dual Notions: (has) (small) concrete colimits, concrete coproducts, etc.
13.13 EXAMPLES
(1) The constructs Top, Rel, Prost, and Alg(Σ) have small concrete limits and small
concrete colimits. So have all constructs of the form Spa(T).
(2) The constructs Vec, Grp, Pos, and Haus have small concrete limits and non-
concrete small colimits.
Alg(Ω) has small concrete limits; it has small concrete
colimits only if the deﬁning operations are all unary.
(3) The construct Σ-Seq has ﬁnite concrete limits and ﬁnite colimits that are not con-
crete.
(4) The concrete category Aut over Set×Set×Set has small concrete limits and small
colimits that are not concrete.
18th January 2005

Sec. 13]
Functors and limits
227
13.14 PROPOSITION
A concrete category has small concrete limits if and only if it has concrete products and
concrete equalizers.
A 12.3
13.15 PROPOSITION
If (A, U) is a concrete category and D : I →A is a diagram, then L = (L
ℓi
−−→Di)i∈Ob(I)
is a concrete limit in (A, U) if and only if U(L) is a limit of U ◦D and L is an initial
source in (A, U).
A 10.53
13.16 REMARK
By the above, a concrete limit can be constructed in two steps: ﬁrst form the limit
of the underlying diagram in the base category, and then provide an initial lift of this
(underlying) limit.
LIFTING OF LIMITS
13.17 DEFINITION
A functor F : A →B is said to
(1) lift limits (uniquely) provided that for every diagram D : I →A and every limit
L of F ◦D there exists a (unique) limit L′ of D with F(L′) = L,
(2) create limits provided that for every diagram D : I →A and every limit L of
F ◦D there exists a unique source S = (L
fi
−−→Di) in A with F(S) = L, and that,
moreover, S is a limit of D.
Similarly, one has lifts small limits, lifts products, creates equalizers, creates
ﬁnite limits, etc.
Dual Notions: lift colimits (uniquely), create colimits, etc.
13.18 EXAMPLES
The forgetful functors for the constructs
(1) of the form Alg(Σ) create limits and colimits,
(2) of the form Alg(Ω) create limits and directed colimits [see Example 11.28(4)],
(3) Vec, Grp, Sgr, Mon, Lat, CATof, and HComp create limits,
(4) Top, Rel, and Prost lift limits and colimits uniquely, but create neither,
(5) Metc and Banb lift ﬁnite limits, but do not lift them uniquely,
(6) Σ-Seq lifts ﬁnite limits uniquely.
18th January 2005

228
Sources and Sinks
[Chap. III
13.19 THEOREM
If a functor A
F
−−→B lifts limits and B is (strongly) complete, then A is (strongly)
complete and F preserves small limits (and arbitrary intersections).
Proof: If F lifts limits and B is complete, then obviously A is complete and F preserves
small limits. Hence, by Proposition 13.5, F preserves monomorphisms. Thus, if B has
arbitrary intersections, so does A, and F preserves them.

Lifting of limits
13.20 REMARKS
(1) The obvious implications
F creates limits ⇒F lifts limits uniquely ⇒F lifts limits
cannot be reversed.
(2) If B has certain limits and F : A →B lifts them, then A has these limits and
F preserves them. Hence the concepts of lifting and creating limits are useful for
functors A
F
−−→B with range categories B that have enough limits. In general,
functors that create limits need not even preserve them. An example of this is the
embedding of the terminal category 1 = {•} = A into B = • ⇒◦.
13.21 PROPOSITION
For functors F : A →B the following conditions are equivalent:
18th January 2005

Sec. 13]
Functors and limits
229
(1) F lifts limits uniquely,
(2) F lifts limits and is amnestic.
Proof: (1) ⇒(2). To show amnesticity, let A′
f
−→A be an isomorphism in A with
Ff = idB.
The 1-indexed sources (A′
f
−→A) and (A
idA
−−−→A) are products of the
1-indexed family (A). Since they are mapped via F to the product (B
idB
−−−→B) of the
1-indexed family (B) = (FA), uniqueness implies that f = idA.
(2) ⇒(1). If L = (L
ℓi
−−→Di) and L′ = (L′
ℓi′
−−→Di) are limits of a diagram D : I →A,
then there exists an isomorphism h : L →L′ with L = L′ ◦h. If F(L) = F(L′) is a limit
of F ◦D, then Fh = idFL. Hence, by amnesticity, h = idL. Consequently, L = L′.

13.22 DEFINITION
A functor F : A →B is said to
(1) reﬂect limits provided that for each diagram D : I →A an A-source S =
(A
fi
−−→Di)i∈Ob(I) is a limit of D whenever F(S) is a limit of F ◦D,
(2) detect limits, provided that a diagram D : I →A has a limit whenever F ◦D has
one.
Similarly, one has reﬂect equalizers, detect products, etc.
Dual Notions: reﬂect colimits, detect colimits, etc.
13.23 EXAMPLES
(1) Every functor that lifts limits, detects them.
(2) The forgetful functor U : Top →Set lifts limits uniquely (and detects and preserves
them), but does not reﬂect them.
(3) Full embeddings reﬂect limits, but they need not lift, preserve, nor detect them.
13.24 PROPOSITION
A functor that reﬂects equalizers is faithful.
Proof: Let F : A →B be a functor and let A
f /
g / B be a pair of A-morphisms with
Ff = Fg. Then S = (A
idA
−−−→A) is a 1-source and FS is an equalizer of Ff and Fg. If
F reﬂects equalizers, then S is an equalizer of f and g. Hence f = idA◦f = idA◦g = g.
13.25 PROPOSITION
For any functor F : A →B the following conditions are equivalent:
(1) F creates limits,
(2) F lifts limits uniquely and reﬂects limits,
18th January 2005

230
Sources and Sinks
[Chap. III
(3) F lifts limits, is faithful and amnestic, and reﬂects isomorphisms in the sense that
whenever Ff is a B-isomorphism, then f is an A-isomorphism.
Proof: (1) ⇔(2) is obvious.
(2) ⇒(3) follows from Propositions 13.21, 13.24, and Example 10.20(8).
(3) ⇒(2). To show that F reﬂects limits, let D : I →A be a diagram and let S =
(A
fi
−−→Di)i∈Ob(I) be a source in A such that F(S) is a limit of F ◦D. Since F lifts
limits, there exists a limit L = (L
ℓi
−−→Di) of D with F(L) = F(S).
Since F is
faithful, S is a natural source for D.
Hence there exists a morphism A
f
−→L with
S = L ◦f. Consequently, F(L) = F(S) = F(L) ◦Ff, which implies that Ff = idFL.
Since F reﬂects isomorphisms, f is an isomorphism. Hence, by amnesticity, f = idL.
Consequently, S = L. Thus S is a limit of D.

13.26 REMARK
Embeddings E : A →B of full subcategories obviously reﬂect limits. Hence they lift
limits if and only if they create them. A more suggestive term for such full subcategories
is that they are closed under the formation of limits (or just limit-closed) in B.
13.27 PROPOSITION
A full reﬂective subcategory A of B is limit-closed in B if and only if A is isomorphism-
closed in B.
Proof: If A is limit-closed in B, then obviously A is isomorphism-closed in B. For
the converse, consider a diagram D : I →A such that E ◦D : I →B has a limit
L = (L
ℓi
−−→Di), where E : A →B denotes the embedding.
Let L
r
−→A be an
A-reﬂection arrow for L. Then for each i there exists a morphism fi : A →Di with
ℓi = fi◦r. By the uniqueness property of reﬂection arrows and the fact that all Di belong
to A, S = (A
fi
−−→Di) must be a natural source for D resp. for E ◦D. Consequently,
there exists a morphism f : A →L with S = L ◦f. Hence L = S ◦r = L ◦f ◦r, which
implies that f ◦r = idL. Therefore (r ◦f) ◦r = r ◦idL = idA ◦r, which implies that
r ◦f = idA. Hence r is an isomorphism, and, consequently, L belongs to A.

13.28 COROLLARY
If a category has certain limits, then so does each of its isomorphism-closed full reﬂective
subcategories.

13.29 REMARK
Isomorphism-closed full reﬂective subcategories A of B usually fail to be colimit-closed.
However, the following proposition shows that the associated inclusion functors detect
colimits.
18th January 2005

Sec. 13]
Functors and limits
231
13.30 PROPOSITION
Let A be a full subcategory of B with embedding E : A →B, and let D : I →A be a
diagram. If C = (Di
ci
−−→C) is a colimit of E ◦D, and if C
r
−→A is an A-reﬂection
arrow for C, then C′ = r ◦C is a colimit of D.
Proof: Obviously, C′ is a natural sink for D. Let S = (Di
fi
−−→A′) be an arbitrary
natural sink for D. Then S is a natural sink for E ◦D. Hence there exists a unique
morphism C
f
−→A′ with S = f ◦C. Since r is an A-reﬂection arrow, there exists a
unique morphism A
g
−→A′ with f = g ◦r. Hence S = f ◦C = g ◦r ◦C = g ◦C′.
Uniqueness of g is obtained by retracing the steps of the above construction.

13.31 EXAMPLES
(1) HComp is a full reﬂective subcategory of Top. The construction of coproducts in
HComp given in Example 10.67(5) is a special case of the above result.
(2) AbTor is a full coreﬂective subcategory of Ab. The construction of products in
AbTor given in Example 10.20(3) is a special case of the dual of the above result.
13.32 COROLLARY
Embeddings of full reﬂective subcategories detect colimits.

13.33 REMARKS
(1) Embeddings of nonfull reﬂective subcategories may be quite awkward. See Exercise
13K.
(2) As will be seen in Chapter VI, all “reasonable” forgetful functors of concrete cate-
gories lift limits uniquely and detect colimits.
13.34 PROPOSITION
If a functor A
F
−−→B preserves limits, then the following conditions are equivalent:
(1) F lifts limits (uniquely),
(2) F detects limits and is (uniquely) transportable.
Proof: (1) ⇒(2) follows immediately from the fact that isomorphisms are products of
1-indexed families.
(2) ⇒(1).
Let D : I →A be a diagram and let S = (L
ℓi
−−→FDi)I be a limit of
F ◦D. Since F detects limits, D has a limit L = (A
fi
−−→Di)I. Since F preserves
limits, FL = (FA
Ffi
−−−→FDi)I is a limit of F ◦D. Hence there exists a B-isomorphism
FA
h
−→L with S = h ◦FL. By transportability, h can be lifted to an A-isomorphism
A
k
−→B. Hence (B
fi◦k−1
−−−−−→Di)I is a limit of D that lifts S. The uniqueness part follows
from Proposition 13.21.

18th January 2005

232
Sources and Sinks
[Chap. III
CREATION AND REFLECTION OF ISOMORPHISMS
Since isomorphisms can be regarded as the limits of diagrams with scheme 1, the concepts
of creation and reﬂection of limits specialize to the following concepts:
13.35 DEFINITION
A functor A
G
−−→B is said to
(1) create isomorphisms provided that whenever h : X →GA is a G-structured B-
isomorphism, there exists precisely one A-morphism ˆh : B →A with G(ˆh) = h,
and, moreover, ˆh is an isomorphism,
(2) reﬂect isomorphisms provided that an A-morphism f is an A-isomorphism when-
ever Gf is a B-isomorphism.
13.36 PROPOSITION
(1) If G creates (resp. reﬂects) limits, then G creates (resp. reﬂects) isomorphisms.
(2) G creates isomorphisms if and only if G reﬂects isomorphisms and is uniquely trans-
portable.
(3) If G creates isomorphisms, then G reﬂects identities.

13.37 EXAMPLES
(1) Let E : A →B be the embedding of a full subcategory. Then E reﬂects isomor-
phisms. E creates isomorphisms if and only if A is isomorphism-closed in B.
(2) Let A be a monoid, considered as a category. Then the unique functor A
G
−−→1
reﬂects isomorphisms if and only if A is a group. G creates isomorphisms if and
only if A is a trivial (one-element) group.
(3) Each of the forgetful functors from Vec, Grp, and Mon to Set creates isomor-
phisms.
None of the forgetful functors from Top, Rel, and Pos to Set reﬂects
isomorphisms.
13.38 REMARK
The following diagram summarizes some of the relationships between functors and limits.
HHHH
j
creates limits
creates isomorphisms
reﬂects identities
amnestic
↓
↓
↓
reﬂects limits
reﬂects isos
lifts limits uniquely
uniquely transportable
transportable










HHHH
j
HHH
j
lifts limits
detects limits
↓









↓
↓
↓
18th January 2005

Sec. 13]
Functors and limits
233
Suggestions for Further Reading
Trnkov´a, V. Some properties of set functors.
Comment. Math. Univ. Carolinae 10
(1969): 323–352.
Trnkov´a, V. When the product-preserving functors preserve limits. Comment. Math.
Univ. Carolinae 11 (1970): 365–378.
Ad´amek, J., J. Rosick´y, and V. Trnkov´a. Are all limit-closed subcategories of locally
presentable categories reﬂective? Springer Lect. Notes Math. 1348 (1988): 1–18.
EXERCISES
13A. Preservation of Multiple Pullbacks
Let A be a complete category. Show that a functor A
F
−−→B preserves small limits if
and only if F preserves small multiple pullbacks and terminal objects.
13B. Preservation of Limits by Set-Valued Functors
Show that
(a) If a functor A
G
−−→Set has a G-universal arrow with a nonempty domain, then G
preserves limits. Deduce Corollary 13.9.
(b) If A is a full subcategory of Set that contains at least one nonempty set, then the
embedding A →Set preserves limits.
* (c) Every functor Set →Set preserves nonempty ﬁnite intersections.
(d) A functor Set →Set preserves products if and only if it is representable.
(e) A functor Set →Set preserves coproducts if and only if it is naturally equivalent,
for some set A, to the functor A × −: Set →Set, deﬁned by
(A × −)(X
f
−→Y ) = A × X
idA×f
−−−−→A × Y.
13C. Reﬂection of Concrete Limits
Let (A, U) have small concrete limits. Show that U reﬂects small limits if and only if U
reﬂects isomorphisms.
13D. Lifting of Limits and Faithfulness
Show that
(a) A functor that lifts equalizers is faithful if and only if it reﬂects epimorphisms.
(b) A functor that lifts limits need not be faithful.
13E. Lifting of Limits and Transportability
Show that a functor that lifts limits (uniquely) is (uniquely) transportable.
18th January 2005

234
Sources and Sinks
[Chap. III
13F. Reﬂection of Isomorphisms
Show that a functor that reﬂects equalizers (or ﬁnite products) reﬂects isomorphisms.
13G. Initial Mono-Sources and Reﬂection of Limits
Show that if mono-sources are G-initial, then G reﬂects limits. [Cf. Proposition 10.60.]
13H. Hom-Functors and Limits
Show that
(a) If D : I →A is a diagram, then a source S = (L
ℓi
−−→Di)i∈Ob(I) is a limit of D if
and only if, for each A-object A, hom(A, −)(S) is a limit of hom(A, −) ◦D.
(b) If A is a nonempty set, then hom(A, −) : Set →Set reﬂects limits.
13I. Limit- and Colimit-Closed Full Subcategories
(a) Show that
(1) Set has no proper full subcategory that is both limit-closed and colimit-closed.
* (2) Top has no proper full subcategory that is both limit-closed and colimit-closed.
(3) Vec has precisely two full subcategories that are both limit-closed and colimit-
closed.
(b) Determine all full subcategories of Rel that are both limit-closed and colimit-closed.
13J. Limit-Closed vs. Reﬂective Full Subcategories
Show that
(a) Every full subcategory of the partially ordered set Z, considered as a category, is
limit- and colimit-closed in Z, but generally fails to be either reﬂective or coreﬂective
in Z.
(b) A full subcategory of a complete lattice A, considered as a category, is reﬂective in
A if and only if it is limit-closed in A.
* (c) There exist limit-closed full subcategories of Top that are not reﬂective in Top.
[Cf. 16D.]
13K. A Misbehaved Nonfull Reﬂective Embedding
Consider the following nonfull embedding A
E
−−→B of preordered sets, considered as
categories:
•
•
•
?~
~
~
~
~
~
~
_@@@@@@@
 
E
/
•
@
@
@
@
@
@
@
/ •
o
~~~~~~~
•
?~
~
~
~
~
~
~
_@@@@@@@
Show that
(a) A is reﬂective in B,
(b) B is complete and cocomplete,
18th January 2005

Sec. 13]
Functors and limits
235
(c) A is neither complete nor cocomplete,
(d) E detects neither limits nor colimits.
13L. Colimit-Dense Full Embeddings
Show that colimit-dense full embeddings preserve limits.
13M. Creation of Isomorphisms
Show that
(a) G creates limits if and only if G is faithful, lifts limits, and creates isomorphisms.
(b) G creates isomorphisms if and only if G creates 1-indexed products.
(c) If G creates isomorphisms, then G reﬂects identities.
(d) If G reﬂects identities, then G is amnestic.
13N. Creation of Limits of T -Algebras
Prove that for each functor T : X →X the forgetful functor of Alg(T) creates limits.
18th January 2005


Chapter IV
FACTORIZATION STRUCTURES
Every function A
f
−→B can be factored through its image, i.e., written as a composite
A
f
−→B = A
e
−→f[A]
m
−−→B, where A
e
−→f[A] is the codomain-restriction of f and
f[A]
m
−−→B is the inclusion. This fact, though simple, is often useful. Similarly, in
constructs such as Vec, Grp, and Top every morphism can be factored through its
“image”. Since
(a) for categories in general, no satisfactory concept of “embedding of subobjects” and
hence of “image of a morphism” is available,
and
(b) for certain constructs, factorizations of morphisms diﬀerent from the one through
the image are of interest (e.g., in Top the one through the closure of the image:
A
f
−→B = A →clBf[A] ,→B),
categorists have created an axiomatic theory of factorization structures (E, M) for mor-
phisms of a category A.
Here E and M are classes of A-morphisms59 such that
each A-morphism has an (E, M)-factorization A
f
−→B = A
e∈E
−−−→C
m∈M
−−−−→B.
Naturally, without further assumptions on E and M such factorizations might be quite
useless. A careful analysis has revealed that the crucial requirement that causes (E, M)-
factorizations to have appropriate characteristics is the so-called “unique (E, M)-diago-
nalization” condition, described in Deﬁnition 14.1.
Such factorization structures for
morphisms have turned out to be useful, especially for “well-behaved” categories (e.g.,
those having products and satisfying suitable smallness conditions). They have been
transformed into powerful categorical tools by two successive generalizations
(a) factorization structures for sources in a category, and
(b) factorization structures for G-structured sources with respect to a functor G.
Instead of describing the most general concept ﬁrst and then specializing to the others,
our presentation will follow the historical development described above.
59The requirements E ⊆Epi(A) and M ⊆Mono(A) were originally included, but later dropped.
18th January 2005
237


14 Factorization
structures
for
mor-
phisms
In this section factorization structures for morphisms are deﬁned and investigated. In
particular, it is shown that every strongly complete category is simultaneously (ExtrEpi,
Mono)-structured and (Epi, ExtrMono)-structured (see 14.21).
14.1 DEFINITION
Let E and M be classes of morphisms in a category A.
(E, M) is called a factorization structure for morphisms in A and A is called
(E, M)-structured provided that
(1) each of E and M is closed under composition with isomorphisms,60
(2) A has (E, M)-factorizations (of morphisms); i.e., each morphism f in A has a
factorization f = m ◦e, with e ∈E and m ∈M, and
(3) A has the unique (E, M)-diagonalization property; i.e., for each commutative
square
A
e
/
f

B
g

C
m
/ D
(∗)
with e ∈E and m ∈M there exists a unique diagonal, i.e., a morphism d such that
the diagram
A
e
/
f

B
d
~~~~~~~~
g

C
m
/ D
commutes (i.e., such that d ◦e = f and m ◦d = g).
14.2 EXAMPLES
(1) For any category, (Iso, Mor) and (Mor, Iso)61 are (trivial) factorization structures
for morphisms.
60 Condition (1) can be replaced by the following conditions (1a) and (1b):
(1a) if e ∈E and h ∈Iso(A), and h ◦e exists, then h ◦e ∈E,
(1b) if m ∈M and h ∈Iso(A), and m ◦h exists, then m ◦h ∈M.
This follows from Proposition 14.6 below since for its proof not the full strength of (1) but only that
of (1a) and (1b) is used. When generalizing factorization structures to sources or to functors, the
formulation in terms of (1a) and (1b) turns out to be more appropriate.
61Recall that Iso resp. Iso(A) is the class of all isomorphisms (in the category A); similarly for Mor,
Mono, etc. See the Table of Symbols.
239

240
Factorization Structures
[Chap. IV
(2) For Set, Vec, Grp, Mon, Σ-Seq, each Alg(Ω) and many other categories of alge-
bras, (RegEpi, Mono) is a factorization structure for morphisms.
(3) For Cat, (RegEpi, Mono) is not a factorization structure for morphisms. [Regu-
lar epimorphisms are not closed under composition (cf. 14.6 and 7.76).] However,
(ExtrEpi, Mono) is a factorization structure for morphisms in Cat.
(4) Set has precisely four factorization structures for morphisms: besides the three
mentioned above, namely, (Epi, Mono) = (RegEpi, RegMono) and the two trivial
ones, the following (pathological) (E, M), where
E = {X
e
−→Y | X = ∅
⇒
Y = ∅};
and
M = {X
m
−−→Y | m
is a bijection or
X = ∅}.
(5) Top has a proper class (even an illegitimate conglomerate) of factorization structures
for morphisms. Each of
(Epi, RegMono) = (surjection, embedding),
(RegEpi, Mono) = (quotient, injection),
(dense, closed embedding), and
(front-dense, front-closed embedding),
is a factorization structure for morphisms in Top, but (Epi, Mono) is not.
(6) (dense C∗-embedding, perfect map) is a factorization structure for morphisms in
Tych.
14.3 PROPOSITION
A is (E, M)-structured if and only if Aop is (M, E)-structured.

14.4 PROPOSITION
If A is (E, M)-structured, then (E, M)-factorizations are essentially unique, i.e.,
(1) if A
ei
−−→Ci
mi
−−→B are (E, M)-factorizations of A
f
−→B for i = 1, 2, then there
exists a (unique) isomorphism h, such that the diagram
A
e1
/
e2

C1
h
~||||||||
m1

C2
m2
/ B
commutes,
(2) if A
f
−→B = A
e
−→C
m
−−→B is an (E, M)-factorization and C
h
−→D is an
isomorphism, then A
f
−→B = A
h◦e
−−−→D
m◦h−1
−−−−−→B is also an (E, M)-factorization.
18th January 2005

Sec. 14]
Factorization structures for morphisms
241
Proof:
(1). By the diagonalization-property there exist morphisms h and k such that the dia-
grams
A
e1
/
e2

C1
h
~||||||||
m1

C2
m2
/ B
and
A
e2
/
e1

C2
k
~||||||||
m2

C1
m1
/ B
commute. Hence, also the diagrams
A
e1
/
e1

C1
k◦h
~||||||||
m1

C1
m1
/ B
and
A
e2
/
e2

C2
h◦k
~||||||||
m2

C2
m2
/ B
commute. By uniqueness we conclude k ◦h = idC1 and h ◦k = idC2. Therefore h is
an isomorphism.
(2). This follows directly from the assumption that each of E and M is closed under
composition with isomorphisms.

14.5 LEMMA
Let A be (E, M)-structured and let e ∈E and m ∈M. If the diagram
•
e
/
id

•
d
~~~~~~~
m

•
f
/ •
commutes, then e is an isomorphism and f ∈M.
Proof: The diagram
•
e
/
e

•
x
~~~~~~~
m

•
m
/ •
commutes for x = id and for x = e ◦d. Hence, by uniqueness, e ◦d = id. Consequently,
e is an isomorphism. Thus f = m ◦e belongs to M by our assumptions on M.

14.6 PROPOSITION
If A is (E, M)-structured, then the following hold:
(1) E ∩M = Iso(A),
(2) each of E and M is closed under composition,
18th January 2005

242
Factorization Structures
[Chap. IV
(3) E and M determine each other via the diagonalization-property;62 in particular, a
morphism m belongs to M if and only if for each commutative square of the form
(∗) (see Deﬁnition 14.1) with e ∈E there exists a diagonal.
Proof:
(1). For any f ∈E ∩M there exists a diagonal d that makes the diagram
•
f
/
id

•
d
~~~~~~~
id

•
f
/ •
commute.
Hence f ∈Iso(A).
Conversely, if f ∈Iso(A) and f = m ◦e is an
(E, M)-factorization of f, then for d = f−1 ◦m the diagram
•
e
/
id

•
d
~~~~~~~
m

•
f
/ •
commutes. Hence, by Lemma 14.5, f ∈M. By duality f ∈E.
(2). Let A
m1
−−→B and B
m2
−−→C be morphisms in M. If m2 ◦m1 = m ◦e is an (E, M)-
factorization, then diagonals d1 and d2 can be constructed successively such that
the diagrams
A
e
/
m1

•
d1
~~~~~~~~~
m

B
m2 / C
and
A
e
/
id

•
d2
~~~~~~~~
d1

A
m1 / B
and hence
A
e
/
id

•
d2
~~~~~~~~
m

A m2◦m1/ C
commute. By Lemma 14.5 this implies m2 ◦m1 ∈M. By duality, E is also closed
under composition.
(3). This follows for M immediately from Lemma 14.5, and for E via duality.

14.7 PROPOSITION
If E and M are classes of morphisms in A, then A is (E, M)-structured if and only if
the following conditions are satisﬁed
(1) Iso(A) ⊆E ∩M,
(2) each of E and M is closed under composition,
62Here the diagonal needn’t be required to be unique.
18th January 2005

Sec. 14]
Factorization structures for morphisms
243
(3) A has the (E, M)-factorization property, unique in the sense that for any pair of
(E, M)-factorizations m1 ◦e1 = f = m2 ◦e2 of a morphism f there exists a unique
isomorphism h, such that the diagram
•
e1
/
e2

•
h
~~~~~~~
m1

•
m2 / •
commutes.
Proof: By Propositions 14.4 and 14.6, conditions (1)–(3) are necessary. To show that
they suﬃce, the unique (E, M)-diagonalization property must be established. Let
•
e
/
f

•
g

•
m
/ •
(∗)
be a commutative square with e ∈E and m ∈M. Let f = m′ ◦e′ and g = m′′ ◦e′′
be (E, M)-factorizations. Then there exists a unique isomorphism h that makes the
diagram
•
e′

e
/ •
e′′

•
m′

•
h
o
m′′

•
m
/ •
(∗∗)
commute. Hence d = m′ ◦h ◦e′′ is a diagonal for (∗). To show uniqueness, let ˜d be a
diagonal for (∗). If ˜d = ˜m ◦˜e is an (E, M)-factorization, then there exist isomorphisms
h′ and h′′ such that the diagrams
•
˜e◦e /
e′

•
h′
~~~~~~~
˜m

•
m′ / •
and
•
e′′
/
˜e

•
h′′
~~~~~~~
m′′

• m◦˜m
/ •
commute. Hence in (∗∗) h can be replaced by h′ ◦h′′, which implies that h = h′ ◦h′′.
Consequently, ˜d = ˜m ◦˜e = m′ ◦h′ ◦h′′ ◦e′′ = m′ ◦h ◦e′′ = d.

14.8 REMARK
If condition (3) in the above proposition would be weakened by just requiring the
existence but not the uniqueness of h, then (1)–(3) would not imply that (E, M)-
factorizations are unique. To see this, let A be a category with three objects A, B,
18th January 2005

244
Factorization Structures
[Chap. IV
and C, and four non-identity morphisms, three of which are depicted in the commuta-
tive diagram
A
f
 @
@
@
@
@
@
@
e
/
e

B
m

B
m
/ C
and for which the fourth is B
h
−→B with h ◦h = h. If E = Iso(A) ∪{e} and M =
Iso(A) ∪{m}, then both h and idB serve as diagonals of the above square. See also
Exercise 14B.
14.9 PROPOSITION
Let A be (E, M)-structured and let f ◦g ∈M.
(1) If f ∈M, then g ∈M.
(2) If f is a monomorphism, then g ∈M.
(3) If g is a retraction, then f ∈M.
Proof:
(1). Let g = m ◦e be an (E, M)-factorization. Then (f ◦m) ◦e and (f ◦g) ◦id are
(E, M)-factorizations of f ◦g. By Proposition 14.4 there is an isomorphism h with
h ◦e = id. Consequently, e is an isomorphism, and thus g = m ◦e belongs to M.
(2). Let g = m◦e be an (E, M)-factorization. Then there exists a diagonal d that makes
the diagram
•
e
/
id

•
d
~~~~~~~
f◦m

•
f◦g
/ •
commute. Since f is a monomorphism, the diagram
•
e
/
id

•
d
~~~~~~~
m

•
g
/ •
commutes as well. Hence Lemma 14.5 implies that g ∈M.
(3). Let f = m ◦e be an (E, M)-factorization, and let s be a morphism with id = g ◦s.
Then there exists a diagonal d that makes the diagram
•
e
/
s

•
d
~~~~~~~
m

•
f◦g
/ •
18th January 2005

Sec. 14]
Factorization structures for morphisms
245
commute. Hence
•
e
/
id

•
g◦d
~~~~~~~
m

•
f
/ •
commutes, so that, by Lemma 14.5, f ∈M.

RELATIONSHIP TO SPECIAL MORPHISM CLASSES
14.10 PROPOSITION
If A is (E, M)-structured, then the following hold:
(1) E ⊆Epi(A) implies that ExtrMono(A) ⊆M.
If, moreover, A has (Epi,Mono)-factorizations, then
(2) Epi(A) ⊆E implies that M ⊆ExtrMono(A).
(3) Epi(A) = E implies that M = ExtrMono(A).
Proof:
(1). If f = m ◦e is an (E, M)-factorization of an extremal monomorphism, then
e ∈Epi(A) implies that e ∈Iso(A). Hence f ∈M.
(2). We will show that whenever m ∈M is factored as m = f ◦e, where e is an epimor-
phism, then e is an isomorphism. This will imply that: (a) m is a monomorphism
(consider an (Epi, Mono)-factorization of m), and (b) m is extremal. It is clearly
suﬃcient to show that e is a section, and this follows from the existence of a diagonal
d for the diagram
•
e
/
id

•
d
~~~~~~~
f

•
m
/ •
(3) follows from (1) and (2).

14.11 PROPOSITION
If A is (E, M)-structured and has products of pairs, then the following conditions are
equivalent:
(1) E ⊆Epi(A),
(2) ExtrMono(A) ⊆M,
(3) Sect(A) ⊆M,
(4) for each object A, the diagonal morphism ∆A = ⟨idA, idA⟩: A →A × A belongs to
M,
18th January 2005

246
Factorization Structures
[Chap. IV
(5) f ◦g ∈M implies that g ∈M,
(6) f ◦e ∈M and e ∈E imply that e ∈Iso(A),
(7) M = {f ∈Mor(A) | f = g ◦e and e ∈E imply that e ∈Iso(A)}.
Proof: The implication (1) ⇒(2) follows from Proposition 14.10(1). The implications
(2) ⇒(3) ⇒(4), are obvious.
(4) ⇒(1). Consider A
e
−→B in E and B
r /
s / C with r ◦e = s ◦e (= h). Then there
exists a diagonal morphism d that makes the diagram
A
e
/
h

B
d
{wwwwwwwww
⟨r,s⟩

C
∆C
/ C × C
commute. Hence r = d = s, so that e is an epimorphism.
Therefore conditions (1)–(4) are equivalent.
(1) ⇒(6). If e ∈E and f ◦e ∈M, then there exists a diagonal morphism d that makes
the diagram
•
e
/
id

•
d
~~~~~~~
f

•
f◦e
/ •
commute. Hence e is a section and an epimorphism, i.e., an isomorphism.
(6) ⇒(7) is obvious.
(7) ⇒(5). If f◦g ∈M and g = m◦e is an (E, M)-factorization, then e is an isomorphism.
Hence g ∈M.
(5) ⇒(3) follows from Iso(A) ⊆M.

14.12 COROLLARY
If A is (E, Mono)-structured and has products of pairs, then E = ExtrEpi(A).
Proof: Immediate from the Proposition 14.11 and the dual of Proposition 14.10(3). 
14.13 REMARKS
(1) If A does not have products of pairs, the conditions of the above proposition need
no longer be equivalent. Consider, e.g., a category A with Ob(A) = Z, and
homA(n, m)
having exactly





0
2
1





elements if





m < n
m = n + 1
otherwise
18th January 2005

Sec. 14]
Factorization structures for morphisms
247
If E = Mor(A) and M = Iso(A) = Mono(A) = Epi(A), then A is (E, M)-structured
and conditions (2), (3), (5), (6), and (7) of Proposition 14.11 are satisﬁed, but (1)
is not.
The fact that A is (M, E)-structured also shows that the results (2) and (3) of
Proposition 14.10 need not hold for factorization structures for morphisms in arbi-
trary categories.
(2) As will be seen in Theorem 15.4, factorization structures (E, M) for sources in a
category A always satisfy E ⊆Epi(A).
14.14 PROPOSITION
If A has (RegEpi, Mono)-factorizations, then the following hold:
(1) A is (RegEpi, Mono)-structured,
(2) RegEpi(A) = ExtrEpi(A),
(3) the class of regular epimorphisms in A is closed under composition,
(4) if f ◦g is a regular epimorphism in A, then so is f.
Proof:
(1). Obviously, every category has the unique (RegEpi, Mono)-diagonalization property.
(2). This follows from the dual of Proposition 14.10(3).
(3). This follows from (1) and Proposition 14.6(2).
(4). This follows from (2).

RELATIONSHIP TO LIMITS
14.15 PROPOSITION
If A is (E, M)-structured, then M is closed under the formation of products and pull-
backs, and M ∩Mono(A) is closed under the formation of intersections.63
Proof:
(1). Let Q Ai
Πmi
−−−→Q Bi be a product of morphisms mi in M, and let
Q Ai
Πmi
−−−→Q Bi = Q Ai
e
−→C
m
−−→Q Bi be an (E, M)-factorization. Then for
each index j there exists a diagonal morphism dj that makes the following diagram
commute (where πj and ρj are the projection morphisms):
Q Ai
e
/
πj

C
dj
}zzzzzzzzz
ρj◦m

Aj
mj
/ Bj
63 In fact, M is closed under the formation of multiple pullbacks (cf. Exercise 11L).
18th January 2005

248
Factorization Structures
[Chap. IV
This implies that ⟨di⟩◦e = idΠAi and Πmi ◦⟨di⟩= m. Therefore Lemma 14.5
implies that Πmi ∈M.
(2). Let the diagram
A
m
/
f

B
f

D
m
/ C
be a pullback with m ∈M, and let A
m
−−→B = A
e
−→A′
˜m
−−→B be an (E, M)-
factorization. Then there exists a diagonal morphism d that makes the diagram
A
e
/
f

A′
d
~}}}}}}}
f◦˜m

D
m
/ C
commute. By the pullback-property there exists a morphism A′
g
−→A with ˜m =
m ◦g and d = f ◦g. This implies that m ◦(g ◦e) = m and f ◦(g ◦e) = f and hence
that g ◦e = idA. By Lemma 14.5 this implies that m ∈M.
(3). Let A
f
−→B = A
fi
−−→Ai
mi
−−→B be an intersection with each mi being a monomor-
phism in M, and let A
f
−→B = A
e
−→C
m
−−→B be an (E, M)-factorization. Then
for each index i there exists a diagonal morphism di that makes the diagram
A
e
/
fi

C
di
~}}}}}}}
m

Ai
mi / B
commute. Thus m factors through each mi. Hence there exists a morphism C
d
−→A
with m = f ◦d. Consequently, f ◦d ◦e = f, which implies that d ◦e = idA. So, by
Lemma 14.5, f ∈M.

We conclude this section with several results showing that the existence of suitable
limits or colimits in a category guarantees the existence of distinguished factorization
structures for morphisms.
14.16 FACTORIZATION LEMMA
Let A have intersections and equalizers, let C
f
−→D be an A-morphism, and let M ⊆
Mono(A) satisfy the following conditions:
(a) intersections of families of M-subobjects of D belong to M,
(b) if f = ˆm ◦g ◦h with ˆm ∈M and g ∈RegMono(A), then ˆm ◦g ∈M.
Then there exist m ∈M and e ∈Epi(A), such that
18th January 2005

Sec. 14]
Factorization structures for morphisms
249
(1) f = m ◦e,
(2) if f = m ◦g with m ∈M, then there exists a diagonal d that makes the diagram
•
e
/
g

•
d
~~~~~~~
m

•
m
/ •
commute,
(3) if e = m ◦g, where m ◦m ∈M, then m ∈Iso(A).
Proof: Let S be the sink consisting of all M-subobjects Di
mi
−−→D of D through which
f factors (i.e., f = mi ◦gi for some gi), and let (B, m) be the intersection of S. Then
m ∈M and there exists a morphism e with f = m◦e. By construction, (2) is immediate.
To establish (3) consider a factorization e = m ◦g of e with m ◦m ∈M. Then, by (2),
there exists a diagonal d that makes the diagram
•
e
/
g

•
d
~~~~~~~
m

• m◦m
/ •
commute. Since m is a monomorphism, this implies that m ◦d = id. Hence m is a
retraction and, being the ﬁrst factor of the monomorphism m ◦m, a monomorphism;
thus an isomorphism. Hence (3) holds. It remains to be shown that e is an epimorphism.
Consider a pair (r, s) of morphisms with r ◦e = s ◦e, and let g be an equalizer of (r, s).
Then there exists a morphism h with e = g ◦h. Hence f = m ◦g ◦h. By (b) m ◦g ∈M,
so that by (3) g is an isomorphism. Thus r = s.

14.17 THEOREM
If A has ﬁnite limits and intersections, then A is (ExtrEpi, Mono)-structured.
Proof: Application of Lemma 14.16 to M =
Mono(A) yields that A is (ExtrEpi,
Mono)-factorizable. To show that A has the (automatically unique) (ExtrEpi, Mono)-
diagonalization property, consider a commutative diagram
•
e
/
f

•
g

•
m
/ •
with e an extremal epimorphism and m a monomorphism. Let
•
ˆm
/
ˆg

•
g

•
m
/ •
18th January 2005

250
Factorization Structures
[Chap. IV
be a pullback. Then there exists a unique morphism h such that the diagram
•
e
/
h
@
@
@
@
@
@
@
f

•
•
•
ˆg
o
ˆm
O
commutes. Since e is an extremal epimorphism and ˆm (being a pullback of a mono-
morphism) is a monomorphism, ˆm must be an isomorphism. Hence d = ˆg ◦ˆm−1 is the
desired diagonal.

14.18 PROPOSITION
If A has the (Epi, ExtrMono)-diagonalization property, then the class of extremal mono-
morphisms in A is closed under composition and intersections.
Proof: Since monomorphisms are closed under composition and intersections, only the
stability of the extremal-property needs to be veriﬁed. If m and m are extremal mono-
morphisms and m ◦m = f ◦e for some epimorphism e, then by assumption there exists
a diagonal d that makes the diagram
•
e
/
m

•
d
~~~~~~~
f

•
m
/ •
commute. Hence m = d ◦e implies that e is an isomorphism.
Now let A = (Ai
mi
−−→A)I be a family of extremal subobjects of A. If D
d
−→A =
D
di
−−→Ai
mi
−−→A is an intersection of A, and if d = f ◦e for some epimorphism e, then
for each i ∈I there exists a diagonal ki that makes the diagram
•
e
/
di

•
ki
~~~~~~~
f

•
mi / •
commute. Since the intersection (being a limit) is an extremal mono-source, the epimor-
phism e must be an isomorphism.

14.19 THEOREM
If A has equalizers and intersections, then A is (Epi, ExtrMono)-structured.
Proof: First we show that A has the (Epi, ExtrMono)-diagonalization property. Let
A
c
/
g

B
h

C
f
/ D
18th January 2005

Sec. 14]
Factorization structures for morphisms
251
be a commutative diagram, where c is an epimorphism and f is an extremal monomor-
phism. Let M be the class of all subobjects (Dm, m) of D with the property that there
exist (necessarily unique) morphisms fm and hm that make the diagram
A
c
/
g

B
hm
}{{{{{{{{
h

Dm
m
!C
C
C
C
C
C
C
C
C
fm
=|
|
|
|
|
|
|
|
f
/ D
commute. Then M satisﬁes the conditions (a) and (b) of Lemma 14.16, so that there
exists an (Epi, M)-factorization f = m ◦e. Since f is an extremal monomorphism, this
implies that e (= fm) is an isomorphism. Thus d = e−1 ◦hm is the desired diagonal.
Consequently, A is (Epi, ExtrMono)-diagonalizable. This fact, together with Proposition
14.18, implies that the class M = ExtrMono(A) satisﬁes conditions (a) and (b) of Lemma
14.16 for every A-morphism f. Hence A is (Epi, M)-factorizable.

14.20 COROLLARY
In a category with equalizers and intersections the class of extremal monomorphisms is
the smallest class of morphisms that contains all regular monomorphisms and is closed
under composition and intersections.
Proof: By the above results (14.18 and 14.19) and Corollary 7.63, ExtrMono(A) con-
tains all regular monomorphisms and is closed under composition and intersections. If
ˆ
M is a class of morphisms with these properties, then M =
ˆ
M ∩Mono(A) satisﬁes
conditions (a) and (b) of Lemma 14.16 for every A-morphism f, which implies that
A is (Epi, M)-factorizable. If f = m ◦e is an (Epi, M)-factorization of an extremal
monomorphism f, then e is an isomorphism, and so belongs to M. Thus f = m◦e ∈M.
14.21 COROLLARY
Every strongly complete category is (ExtrEpi, Mono)-structured and (Epi, ExtrMono)-
structured.

14.22 PROPOSITION
A category with pullbacks and coequalizers is (RegEpi, Mono)-structured if and only if
regular epimorphisms are closed under composition.
Proof: The composition closure is a necessary condition, by Proposition 14.6(2). To
show that it is suﬃcient, observe that by Proposition 14.14 it need only be shown that
every morphism f has a (RegEpi, Mono)-factorization.
Let (p, q) be a congruence-
relation of f, and let c be a coequalizer of (p, q). Then there exists a unique morphism
m with f = m◦c. To show that m is a monomorphism, let (r, s) be a pair of morphisms
with m ◦r = m ◦s and let c be a coequalizer of (r, s). Then there exists a unique
18th January 2005

252
Factorization Structures
[Chap. IV
morphism g with m = g ◦c. Since (p, q) is a congruence relation of f = g ◦c◦c and since
c ◦p = c ◦q, (p, q) is a congruence relation of c and of c ◦c. Since c and c ◦c are both
regular epimorphisms, each (by Proposition 11.22) is a coequalizer of (p, q). Hence, by
essential uniqueness of coequalizers, c must be an isomorphism. So r = s. Thus m is a
monomorphism.

14.23 EXAMPLES
(1) Many familiar categories are (RegEpi, Mono)- and (Epi, RegMono)-structured, e.g.,
Set, Vec, Grp, Pos, Top, Aut, Σ-Seq, and HComp. So are any of the constructs
Alg(Ω) and Spa (T).
(2) Cat is (ExtrEpi, Mono)-structured, but it has extremal epimorphisms that are not
regular (cf. 7.76).
(3) Sgr is (Epi, ExtrMono)-structured, but it has extremal monomorphisms that are
not regular (cf. 14I).
Suggestions for Further Reading
Kennison, J. F. Full reﬂective subcategories and generalized covering spaces. Illinois J.
Math. 12 (1968): 353–365.
Ringel, C. M. Diagonalisierungspaare I, II. Math. Z. 117 (1970): 249-266, and 122
(1971): 10–32.
Freyd, P. J., and G. M. Kelly. Categories of continuous functors I. J. Pure Appl. Alge-
bra 2 (1972): 169–191.
Bousﬁeld, A. K. Constructions of factorization systems in categories.
J. Pure Appl.
Algebra 9 (1977): 207–220.
Manes, E. G. Compact Hausdorﬀobjects. Topol. Appl. 4 (1979): 341–360.
Cassidy, C., M. H´ebert, and G. M. Kelly. Reﬂective subcategories, localizations and
factorization systems. J. Austral. Math. Soc.
38 (1985): 287–329, Corrigenda
41 (1986): 286.
EXERCISES
14A. Factorization Structures for Morphisms in Special Categories
Let A
f
−→B be a morphism in one of the categories Set, Vec, Top, Pos, Sgr, or Rng.
Show that the familiar “image”-factorization A
f
−→B = A
e
−→f[A]
m
−−→B is
(a) an (Epi, ExtrMono)-factorization in Set, Vec, Top, and Pos,
(b) an (ExtrEpi, Mono)-factorization in Set, Vec, Sgr, and Rng.
18th January 2005

Sec. 14]
Factorization structures for morphisms
253
14B. Diagonals
1. Show that Set has
(1) (Mono, Epi)-factorizations and -diagonalizations, but not unique ones,
(2) (Section, Projection)-factorizations and -diagonalizations, but not unique ones.
2. Show that every category that has pullbacks has the unique (ExtrEpi, Mono)-
diagonalization property.
14C. Strong Monomorphisms
A monomorphism m in A is called strong provided A has the unique (Epi, {m})-
diagonalization property. Show that
(a) Every strict monomorphism is strong, but not vice versa.
(b) Every strong monomorphism is extremal, but not vice versa.
(c) The class of strong monomorphisms is closed under composition, intersections, pull-
backs, products, and left-cancellation.
(d) If A has pushouts, then in A StrongMono = ExtrMono.
(e) If A has equalizers and intersections, then in A StrongMono = ExtrMono [cf. The-
orem 14.19].
(f) If A is (Epi, M)-structured for some class M of monomorphisms, then
M = StrongMono = ExtrMono.
(g) If A is (Epi, M)-structured, then M need not consist of monomorphisms alone [cf.
Remark 14.13(1)].
14D. (RegEpi, Mono)-Structured Categories
Let A have pullbacks and coequalizers. Show that
(a) A is (RegEpi, Mono)-structured if and only if RegEpi(A) = ExtrEpi(A). [Cf. Propo-
sitions 14.22 and 7.62(1).]
(b) If regular epimorphisms are stable in A(cf. Exercise 11J), then A is (RegEpi, Mono)-
structured.
(c) If there exists a faithful functor from A into a (RegEpi, Mono)-structured cate-
gory that preserves and reﬂects regular epimorphisms, then A is (RegEpi, Mono)-
structured.
14E. Regular Categories
A category A is called regular provided that it satisﬁes the following conditions:
(1) A has ﬁnite limits,
(2) A is (RegEpi, Mono)-structured,
(3) In A regular epimorphisms are stable (cf. 11J).
18th January 2005

254
Factorization Structures
[Chap. IV
Show that
(a) If A has coequalizers, then A is regular provided that it satisﬁes (1) and (3) above.
(b) If A is regular and X is small, then [X, A] is regular.
14F. Exact Categories
Pointed categories that are (NormalEpi, NormalMono)-structured are called exact.
Show that
(a) A pointed category is exact if and only if it has (NormalEpi, NormalMono)-factoriza-
tions.
(b) If A is exact, then so is Aop.
(c) In an exact category every monomorphism is normal.
(d) An exact category has kernels and ﬁnite intersections.
(e) A nonempty exact category has a zero-object.
(f) An exact category is wellpowered if and only if it is co-wellpowered.
(g) Exact constructs are wellpowered and co-wellpowered.
(h) Vec and Ab are exact, but none of Grp, Mon, or pSet is exact.
14G. Closure Properties
Let A be (E, M)-structured. Show that
(a) M is closed under the formation of multiple pullbacks (cf. Proposition 14.15).
(b) M is closed under formation of retracts in the arrow category A2 (cf. Exercise
3K(b)).
* 14H. (E, −)-structured Categories
A is called (E, −)-structured provided that there exists some M such that A is
(E, M)-structured. Show that a cocomplete category A is (E, −)-structured if and only
if E ⊆Mor(A) satisﬁes the following conditions:
(1) Iso(A) ⊆E,
(2) E is closed under composition,
(3) E is closed under the formation of pushouts,
(4) E is closed under the formation of colimits,
(5) if e = f ◦e with e and e in E, then f ∈E,
18th January 2005

Sec. 14]
Factorization structures for morphisms
255
(6) (solution set condition) for each A-morphism f there exists a set of factorizations
f = gi ◦ei, i ∈I, with ei ∈E such that for each factorization f = g ◦e with e ∈E
there is some i ∈I and some morphism h such that the following diagram commutes:
•
e
/
ei

•
h
~~~~~~~
g

•
gi
/ •
14I. Regular Monomorphisms in the Category of Semigroups
Let C = {0, a, b, c, d, e} and consider the following multiplication table:
·
0
a
b
c
d
e
0
0
0
0
0
0
0
a
0
0
0
0
b
c
b
0
0
0
0
c
0
c
0
0
0
0
0
0
d
0
b
c
0
e
0
e
0
c
0
0
0
0
(a) Prove that C with the above multiplication · is a semigroup.
(b) A = {0, a, b} and B = {0, a, b, c} are subsemigroups of C. Let f : A ,→B and
g : B ,→C be the inclusion homomorphisms.
Prove that f and g are regular
monomorphisms and that g ◦f is an extremal monomorphism in Sgr.
(c) Prove that if C
h /
k
/ D are morphisms in Sgr that coincide on A, then h and k
coincide on B. [Hint: Use the equalities b = da and c = bd.] Conclude that g ◦f is
not a regular monomorphism in Sgr.
(d) Let ˆB be the free semigroup on three generators {ˆa,ˆb, ˆc}; let ˆA be the subsemigroup
of ˆB generated by {ˆa,ˆbˆa, ˆaˆc}; let ˆC be the quotient semigroup obtained by identifying
the words ˆa and ˆbˆaˆc; and let i : ˆA ,→ˆB and p : ˆB →ˆC be the inclusion map and
natural map, respectively.
(1) Construct a semigroup ˆD and homomorphisms
ˆC
r /
s / ˆD such that p ◦i is an
equalizer of r and s.
(2) Show that i is not a regular monomorphism in Sgr.
(e) Conclude that for the complete, wellpowered category Sgr, the following hold:
(1) The class of regular monomorphisms coincides with the class of strict monomor-
phisms.
(2) There exist extremal monomorphisms that are not regular.
(3) The class of regular monomorphisms is not closed under composition.
(4) Sgr is not (Epi, RegMono)-factorizable.
18th January 2005

256
Factorization Structures
[Chap. IV
(5) The ﬁrst factor of a regular monomorphism is not necessarily regular.
14J. Dominions
Let A be a wellpowered complete category, and let X
f
−→Y be an A-morphism. Prove
that
(a) X
f
−→Y has a factorization X
g
−→D
d
−→Y , where d is a regular monomorphism
that is characterized uniquely by any of the following equivalent conditions:
(1) for all morphisms r and s, r ◦f = s ◦f implies that r ◦d = s ◦d,
(2) (D, d) is the smallest regular subobject of Y through which f can be factored,
(3) d is the intersection of all regular subobjects of Y through which f can be
factored.
(D, d) is called a dominion of f.
(b) Any two dominions of f are isomorphic subobjects of Y .
(c) In A the extremal monomorphisms are precisely the regular monomorphisms if and
only if the (Epi, ExtrMono)-factorization of any morphism is the same as its domin-
ion factorization.
(d) f is an epimorphism if and only if (Y, idY ) is a dominion of f.
(e) f is a regular monomorphism if and only if (X, f) is a dominion of f.
(f) If f = r ◦s, where s is an epimorphism, then the dominions of f and r coincide.
(g) Consider the pushout square
•
f
/
f

•
p

•
q
/ •
Then (D, d) is a dominion of f if and only if d is an equalizer of p and q.
18th January 2005

15 Factorization structures for sources
Because of their generality, factorization structures for sources are frequently a more
powerful categorical tool than factorizations for morphisms. However, in two respects
they are more restrictive. Namely, if (E, M) is a factorization structure for sources in
A, then
(1) E must be contained in the class of epimorphisms of A (15.4), and
(2) certain colimits of diagrams in A involving morphisms in E must exist (15.14).
Such source factorization structures occur quite frequently (15.10 and 15.25), and for
co-wellpowered categories with products there is no essential diﬀerence between these
two approaches to factorization since for such categories A every factorization structure
for morphisms, with E ⊆Epi(A), has a unique extension to a factorization structure
for sources (15.21). In particular, every strongly complete, co-wellpowered category has
both (Epi, ExtrMono-Source) and (ExtrEpi, Mono-Source) as factorization structures
for sources (15.25).
15.1 DEFINITION
Let E be a class of morphisms and let M be a conglomerate of sources in a category A.
(E, M) is called a factorization structure on A, and A is called an (E, M)-category
provided that
(1) each of E and M is closed under compositions with isomorphisms in the following
sense:
(1a) if e ∈E and h ∈Iso(A) and h ◦e exists, then h ◦e ∈E,
(1b) if S ∈M and h ∈Iso(A) and S ◦h exists, then S ◦h ∈M,
(2) A has (E, M)-factorizations (of sources); i.e., each source S in A has a factor-
ization S = M ◦e with e ∈E and M ∈M, and
(3) A has the unique (E, M)-diagonalization property; i.e., whenever A
e
−→B and
A
f
−→C are A-morphisms with e ∈E, and S = (B
gi
−−→Di)I and M = (C
mi
−−→Di)I
are sources in A with M ∈M, such that M ◦f = S ◦e, then there exists a unique
diagonal, i.e., a morphism B
d
−→C such that for each i ∈I the diagram
A
e
/
f

B
d
~}}}}}}}}
gi

C
mi / Di
commutes.
257

258
Factorization Structures
[Chap. IV
Factorization of sources
15.2 REMARKS
(1) As opposed to the concept of factorization structures for morphisms the concept
of factorization structures (for sources) is not self-dual. The dual concept, that of
factorization structures for sinks, will not be explicitly formulated here.
(2) Another distinction from factorization structures for morphisms is the fact that the
uniqueness requirement for diagonals in the deﬁnition of factorization structures (for
sources) is redundant. Cf. Exercise 14B on the one hand, and the proof of Theorem
15.4 on the other.
(3) If (E, M) is a factorization structure on A and M is the class of those A-morphisms
that (considered as 1-sources) belong to M, then (E, M) is a factorization structure
for morphisms on A. (Cf. footnote to Deﬁnition 14.1) Hence all the results of §14
apply.
(4) Factorization of sources applies to empty sources too. If (E, M) is a factorization
structure on A, and AM is the class of all A-objects A such that the empty source
(A, ∅) with domain A belongs to M, then conditions (2) and (3) in Deﬁnition 15.1
translate into:
(2∅) for every object A there exists a morphism A
e
−→B in E with B ∈AM,
(3∅) for every morphism A
e
−→B in E and every morphism A
f
−→C with C ∈AM
there exists a unique morphism B
d
−→C with f = d ◦e.
18th January 2005

Sec. 15]
Factorization structures for sources
259
15.3 EXAMPLES
(1) Every category is an (Iso, Source)-category.64 This factorization structure is called
trivial. Also, every category has the (unique) (RegEpi, Mono-Source)-diagonaliza-
tion property, although not all categories are (RegEpi, Mono-Source)-categories
(cf. Proposition 15.13).
(2) Set is an (Epi, Mono-Source)-category. For Set this is the only nontrivial factor-
ization structure. (Epi, Mono-Source)-factorizations of a source (A
fi
−−→Ai)I in Set
can be obtained via either of the following two constructions:
(a) Deﬁne an equivalence relation on A by: “a ∼b if and only if fi(a) = fi(b) for
each i ∈I”, and let A
e
−→A/∼be the naturally associated surjection. Then for
each i ∈I there exists a unique map A/∼
mi
−−→Ai with fi = mi ◦e. Then
A
fi
−−→Ai = A
e
−→A/∼
mi
−−→Ai
is an (Epi, Mono-Source)-factorization of (fi) in Set.
(b) Consider the cartesian product (Q Ai, πi)I of the codomain (Ai)I — that is, the
conglomerate65 of all functions x with domain I such that x(i) ∈Ai for each
i ∈I. The function A
f
−→Q Ai deﬁned by a 7→f(a), where (f(a))(i) = fi(a)
for each i ∈I, has a factorization A
f
−→Q Ai = A
e
−→B
m
−−→Q Ai, with e
a surjective function and m an injective one. Since A is a set and A
e
−→B
is surjective, B is codable by a set; i.e., there exists a set B′ and a bijection
B′
b−→B. Then for B
mi
−−→Ai deﬁned by mi(b) = (m(b))(i), it follows that
A
fi
−−→Ai = A
b−1◦e
−−−−→B′
mi◦b
−−−−→Ai
is an (Epi, Mono-Source)-factorization of (fi) in Set.
For various constructs, one of the above constructions can be used to obtain (Epi,
Mono-Source)-factorizations.
(3) Many algebraic constructs such as Vec, Grp, Mon, Rng, and Alg(Ω) are
(RegEpi, Mono-Source)-categories.
(4) Cat is an (ExtrEpi, Mono-Source)-category.
64Source (resp. Source(A)) is the conglomerate of all sources (in the category A). Similarly, Mono-Source
is the conglomerate of all mono-sources in the given category, etc. See the Table of Symbols.
65One might be tempted to describe this construction more categorically by forming the quasicategory
Class of all classes and all functions, and by letting (Q Ai, πi)I be the product of (Ai)I in that
quasicategory. This, however, is not possible, since the conglomerate (Q Ai)I frequently fails to be a
class and, hence, to be an object of the quasicategory Class. In fact, the quasicategory Class behaves
badly with respect to many familiar constructions (recall, e.g., that there is a largest class, U). This
problem could be resolved, e.g., by introducing in addition to “sets”, “classes”, and “conglomerates”,
one higher level of entities, say, “collections”.
Then the collection of all conglomerates and all
functions between them would form a rather well-behaved “quasi-quasicategory”. Since there are
only a few occasions in this text where the use of something like this would be advantageous, we have
refrained from complicating the foundations by introducing it.
18th January 2005

260
Factorization Structures
[Chap. IV
(5) Aut is an (RegEpi, Mono-Source)-category.
(6) Top has a proper class (even an illegitimate conglomerate) of factorization structures
(cf. Exercise 15L). In particular, Top is an (Epi, ExtrMono-Source)-category, an
(ExtrEpi, Mono-Source)-category, and a (Bimorphism, Initial-Source)-category.
15.4 THEOREM
If A is an (E, M)-category, then E ⊆Epi(A).
Proof: Consider e ∈E and a pair (r, s) of morphisms with r ◦e = s ◦e. The source
(hf)f∈Mor(A), deﬁned by hf = r ◦e, has an (E, M)-factorization (hf) = (mf) ◦e. The
source (gf)f∈Mor(A), deﬁned by
gf =
(
r,
if mf ◦f = s
s,
otherwise,
satisﬁes the equation (mf) ◦e = (gf) ◦e. Hence there exists a diagonal d that makes the
diagram
•
e
/
e

•
d
~~~~~~~
gf

•
mf / •
commute for each f ∈Mor(A). In particular,
md ◦d = gd =
(
r,
if md ◦d = s
s,
otherwise.
This is possible only for r = s. Thus e is a epimorphism.

15.5 PROPOSITION
If A is an (E, M)-category, then the following hold:
(1) (E, M)-factorizations are essentially unique,
(2) E ⊆Epi(A) and ExtrMono-Source(A) ⊆M,
(3) E ∩M = Iso(A),
(4) each of E and M is closed under composition,
(5) if f ◦g ∈E and g ∈Epi(A), then f ∈E,
(6) if f ◦g ∈E and f ∈Sect(A), then g ∈E,
(7) if (Si) ◦S ∈M, then S ∈M,
(8) if a subsource of S belongs to M, then S belongs to M,
(9) E and M determine each other via the diagonalization-property; moreover,
18th January 2005

Sec. 15]
Factorization structures for sources
261
(a) a source belongs to M if and only if every E-morphism through which it factors
is an isomorphism,
(b) if M consists of mono-sources only, then a morphism f belongs to E if and only
if f = m ◦g with m ∈M implies that m ∈Iso(A).
Proof: (8) follows from (9). All other conditions are proved as in §14 by use of Theorem
15.4.

RELATIONSHIP TO SPECIAL MORPHISMS
AND SPECIAL SOURCES
15.6 PROPOSITION
If A is a (RegEpi, M)-category, then M contains all mono-sources of A.
Proof: Let S be a mono-source and S = M ◦e be a (RegEpi, M)-factorization of S.
Let e be a coequalizer of r and s. Then S ◦r = M ◦e ◦r = M ◦e ◦s = S ◦s. Since S
is a mono-source, this implies that r = s. Hence e is an isomorphism, so that S ∈M.
15.7 PROPOSITION
For (E, M)-categories A, the following are equivalent:
(a) M ⊆Mono-Source(A),
(b) A has coequalizers and RegEpi(A) ⊆E.
Proof: (a) ⇒(b). Let A
r /
s / B be a pair of morphisms. Consider the source S =
(B
fi
−−→Bi)I that consists of all morphisms fi with fi ◦r = fi ◦s. If S = M ◦e is
an (E, M)-factorization, then, since M is a mono-source, e is a coequalizer of (r, s).
Hence A has coequalizers. If c is a coequalizer of some pair (r, s), and c = m ◦e is an
(E, M)-factorization, then e is a coequalizer of (r, s). Hence m ∈Iso(A), so that c ∈E.
(b) ⇒(a). Let M belong to M and let (r, s) be a pair of morphisms with M◦r = M◦s.
Then M factors through the coequalizer c of (r, s). Hence c ∈E implies, by Proposition
15.5(9)(a), that c is an isomorphism. So r = s.

15.8 PROPOSITION
For (E, M)-categories A the following hold:
(1) if M = Mono-Source(A), then E = ExtrEpi(A),
(2) if M = ExtrMono-Source(A), then E = Epi(A),
(3) if E = Epi(A), then the following conditions are equivalent:
(a) M = ExtrMono-Source(A),
18th January 2005

262
Factorization Structures
[Chap. IV
(b) A has coequalizers,
(4) if E = ExtrEpi(A) or E = RegEpi(A), then the following conditions are equivalent:
(a) M = Mono-Source(A),
(b) A has coequalizers.
Proof:
(1). Apply Theorem 15.4 and Proposition 15.5(9)(b).
(2). E ⊆Epi(A) by Theorem 15.4. If f is an epimorphism and f = m ◦e is an (E, M)-
factorization, then m is an extremal monomorphism and (as the second factor of
an epimorphism) an epimorphism; hence an isomorphism. Thus f ∈E.
(3a) ⇒(3b) and (4a) ⇒(4b) follow from Proposition 15.7.
(3b) ⇒(3a) follows from Propositions 15.5(9)(a) and 15.7.
(4b) ⇒(4a). By Proposition 15.7, M ⊆Mono-Source(A). If S is a mono-source and
S = M ◦e is an (E, M)-factorization, then e is an extremal epimorphism and a mono-
morphism; hence an isomorphism. Thus S ∈M.

15.9 EXAMPLE
The category A described in Example 14.13(1) is simultaneously an (Epi, Source)-
category, an (ExtrEpi, Source)-category and a (RegEpi, Source)-category. But in A
not every source is a mono-source.
Also, every group, considered as a category, is an (Epi, Source)-category; but for a
nonzero group the empty source is not a mono-source.
EXISTENCE OF FACTORIZATION STRUCTURES
15.10 THEOREM
Every category that has (Epi, Mono-Source)-factorizations is an (ExtrEpi, Mono-Source)-
category.
Proof: Let A have (Epi, Mono-Source)-factorizations and let S = (A
fi
−−→Ai)I be a
source in A. Consider the source T = (A
ej
−−→Bj)J that consists of all epimorphisms
ej for which there exists a (necessarily unique) mono-source Mj = (Bj
mij
−−−→Ai)I with
S = Mj ◦ej.
Let T = N ◦e = (A
e
−→B
nj
−−→Bj)J be an (Epi, Mono-Source)-
factorization. Then the sources (Mj) ◦nj do not depend upon j and thus each can
be denoted by M = (B
mi
−−→Ai)I.
Hence S = M ◦e is an (Epi, Mono-Source)-
factorization.
To show that e is an extremal epimorphism, consider a factorization
e = m ◦g with monomorphic m. Let g = n ◦e be an (Epi, Mono)-factorization of
g.
Then S = (M ◦m ◦n) ◦e is an (Epi, Mono-Source)-factorization of S.
Hence
there exists some j in J with M ◦m ◦n = Mj and e = ej. For this j, the equations
m◦n◦nj◦e = m◦n◦ej = m◦n◦e = m◦g = e hold. Since e is an epimorphism, we conclude
18th January 2005

Sec. 15]
Factorization structures for sources
263
that m ◦n ◦nj = id. Hence m is a monomorphic retraction, i.e., an isomorphism. Thus
A is (ExtrEpi, Mono-Source)-factorizable. To show that A has the (ExtrEpi, Mono-
Source)-diagonalization property, consider morphisms ej and sources Sj, for j = 1, 2,
such that e1 is an extremal epimorphism, S2 is a mono-source, and S1 ◦e1 = S2 ◦e2. If
(A
ej
−−→Bj)j∈{1,2} = (A
e
−→B
mj
−−→Bj)j∈{1,2} is an (Epi, Mono-Source)-factorization,
then S1 ◦m1 ◦e = S1 ◦e1 = S2 ◦e2 = S2 ◦m2 ◦e. Hence S1 ◦m1 = S2 ◦m2.
•
e1
/
e
@
@
@
@
@
@
@
e2

•
S1

•
m2
~~~~~~~
m1
?~
~
~
~
~
~
~
•
S2
/ •
Let C
r /
s / B be a pair of morphisms with m1 ◦r = m1 ◦s. Then
S2 ◦m2 ◦r = S1 ◦m1 ◦r = S1 ◦m1 ◦s = S2 ◦m2 ◦s.
Since S2 is a mono-source, this implies that m2 ◦r = m2 ◦s. Since (B
mj
−−→Bj)j∈{1,2} is
a mono-source, this implies that r = s. Thus m1 is a monomorphism. Since e1 = m1 ◦e
is an extremal epimorphism, this implies that m1 is an isomorphism.
Consequently,
d = m2 ◦m−1
1
is the desired diagonal.

15.11 REMARK
As the above result shows, every (Epi, Mono-Source)-factorizable category is an
(E, Mono-Source)-category for a suitable class E. However, it need not be an (Epi,
M)-category for any conglomerate M:
Every poset, considered as a category, is an (ExtrEpi, Mono-Source)-category. But a
poset with a smallest element is an (Epi, M)-category for some M if and only if it is a
complete lattice.
15.12 DEFINITION
A category is said to have regular factorizations provided that it is (RegEpi, Mono-
Source)-factorizable.
15.13 PROPOSITION
If a category has regular factorizations, then it is a (RegEpi, Mono-Source)-category.
Proof: Every category has the (RegEpi, Mono-Source)-diagonalization property.

15.14 THEOREM
If E is a class of morphisms in A, then A is an (E, M)-category for some M if and
only if the following conditions are satisﬁed:
18th January 2005

264
Factorization Structures
[Chap. IV
(1) Iso(A) ⊆E ⊆Epi(A),
(2) E is closed under composition,
(3) for every A
e
−→B in E and every morphism A
f
−→C there exists a pushout square
A
e
/
f

B
f

C
e
/ D
for which e ∈E,
(4) for every source (A
ei
−−→Ai)I that consists of E-morphisms, there exists a cointer-
section
A
e
−→B = A
ei
−−→Ai
pi
−−→B
for which e ∈E.
Proof: Necessity: (1) and (2) follow from Theorem 15.4 and Proposition 15.5. To
see (3), let A
e
−→B and A
f
−→C be morphisms with e ∈E.
Consider the source
S = (C
fi
−−→Ci)I consisting of those morphisms fi for which there exists a (necessarily
unique) morphism gi with fi ◦f = gi ◦e. Let S = M ◦e be an (E, M)-factorization.
Then there exists a diagonal that makes the diagram
A
e
/
e◦f

B
d
~~~~~~~~~
gi

•
M
/ Ci
commute. As can be seen easily, the diagram
A
e
/
f

B
d

C
e
/ •
is a pushout.
To establish (4), let (A
ei
−−→Ai)I be a source consisting of E-morphisms. Consider the
source S = (A
fj
−−→Bj)J that consists of those morphisms fj that have the property
that for each i ∈I there exists a (necessarily unique) morphism fij with fj = fij ◦ei,
and proceed as in the proof of part (3).
Suﬃciency: Deﬁne M to be the conglomerate of all sources that do not factor through
a non-isomorphic morphism in E. In order to show that A has (E, M)-factorizations,
let (A
fi
−−→Ai)I be a source in A. Consider the source S = (A
ej
−−→Bj)J that consists
18th January 2005

Sec. 15]
Factorization structures for sources
265
of those morphisms ej ∈E that have the property that for every i ∈I there exists a
(necessarily unique) morphism fij with fi = fij ◦ej. Let
A
e
−→B = A
ej
−−→Bj
pj
−−→B
be a cointersection of S such that e ∈E. Then for each i ∈I there exists a morphism
mi that makes the diagram
A
fi
/
ej
?
?
?
?
?
?
?
?
e
///////////////
Ai
Bj
pj

fij
>}
}
}
}
}
}
}
B
mi
F
commute for each j ∈J. To show that the source M = (B
mi
−−→Ai)I belongs to M, let
M = T ◦ˆe be a factorization with ˆe ∈E. Then there exists some j ∈J with ˆe ◦e = ej.
Hence, for this j the equality e = pj ◦ej = pj ◦ˆe ◦e implies that pj ◦ˆe = id. Thus ˆe is
an epimorphic section; hence an isomorphism.
To show that A has the (E, M)-diagonalization property, let e and f be morphisms with
e ∈E, and let M = (mi)I and S = (fi)I be sources with M ∈M and M ◦f = S ◦e.
Let
•
e
/
f

•
ˆf

•
ˆe
/ •
be a pushout square for which ˆe ∈E. Then for each i ∈I there exists a morphism gi
that makes the diagram
•
e
/
f

•
fi

ˆf
~~~~~~~
•
gi
@
@
@
@
@
@
@
•
ˆe
?~
~
~
~
~
~
~
mi
/ •
commute. Hence M factors through ˆe ∈E, which implies that ˆe is an isomorphism.
Thus ˆe−1 ◦ˆf is the desired diagonal.

15.15 COROLLARY
Let A be a category with pushouts and cointersections. Then a class E of A-morphisms
is part of a factorization structure on A (i.e., A is an (E, M)-category for some M)
if and only if Iso(A) ⊆E ⊆Epi(A) and E is closed under composition, pushouts, and
cointersections.

18th January 2005

266
Factorization Structures
[Chap. IV
15.16 COROLLARY
(1) A is an (Epi, M)-category for some M if and only if A has cointersections and has
a pushout for every 2-source of the form •
f
←−•
e
−→• with epimorphic e.
(2) A is an (Epi, ExtrMono-Source)-category if and only if A has cointersections,
pushouts for 2-sources of the form •
f
←−•
e
−→• with epimorphic e, and has co-
equalizers.

15.17 COROLLARY
Every strongly cocomplete category is an (Epi, ExtrMono-Source)-category.

15.18 EXAMPLE
The partially ordered class of all ordinals, considered as a category, is a cocomplete
(ExtrEpi, Mono-Source)-category, but is not (Epi, ExtrMono-Source)-factorizable. [Con-
sider empty sources.] See also Exercise 15D.
Further results concerning the existence of factorization structures will follow after some
necessary preparations, cf., e.g., Theorem 15.25.
EXTENSIONS OF FACTORIZATION STRUCTURES
Factorization structures may be considered for certain speciﬁed sources only; e.g., for
(1) empty sources (= objects), see Exercise 15G,
(2) 1-sources (= morphisms), see §14,
(3) 2-sources, see Exercise 15I,
(4) set-indexed sources (= small sources), see Exercise 15J.
Here we are concerned with the question: Under which conditions is it possible to
extend factorization structures (E, M) for morphisms to factorization structures (E, M)
for sources, or at least for small sources?
15.19 PROPOSITION
(1) If A has products, then every factorization structure (E, M) for morphisms on A
can be uniquely extended to a factorization structure (E, M) for small sources.
(2) Conversely, if A has an initial object and each factorization structure (E, M) for
morphisms on A can be extended to a factorization structure (E, M) for small
sources, then A has products.
Proof:
(1). Let (E, M) be a factorization structure for morphisms.
If M is the class of all
small sources of the form P ◦m, where P is a product and m ∈M, then (E, M)
18th January 2005

Sec. 15]
Factorization structures for sources
267
is a factorization structure for small sources. Indeed, if S = (A
fi
−−→Ai)I is a set-
indexed source, let ⟨fi⟩= A
e
−→B
m
−−→Q Ai be an (E, M) factorization. Then
S = (B
πi◦m
−−−−→Ai)I ◦e is an (E, M)-factorization.
Uniqueness of the extension follows from the observation that M is determined by
E as in Proposition 15.5(9).
(2). Let (Mor(A), M) be an extension of the factorization structure (Mor(A), Iso(A))
for morphisms to a factorization structure for small sources.
Then M consists
precisely of the set-indexed products in A. In fact, if (Ai)I is a set-indexed family
of objects, Q is an initial object, S = (Q →Ai)I is the associated source, and
S = M ◦e is a (Mor(A), M)-factorization, then M is a product of (Ai)I.

15.20 PROPOSITION
If (E, M) is a factorization structure for small sources on A and A is co-wellpowered,
then the following conditions are equivalent:
(1) (E, M) can be uniquely extended to a factorization structure (E, N) on A,
(2) E ⊆Epi(A),
(3) Sect(A) ⊆M,
(4) for each object A the 2-source (idA, idA) belongs to M,
(5) whenever a subsource of a small source S belongs to M, then so does S.
Proof: (1) ⇔(2). By Theorem 15.4, (1) implies (2). For the converse it suﬃces to
verify that E satisﬁes the conditions (1)–(4) of Theorem 15.14.
That 15.14(1) and
15.14(2) hold follows from Proposition 14.6. The validity of 15.14(3) can be established
as in the corresponding part of the proof of Theorem 15.14 by replacing the source
S = (C
fi
−−→Ci)I by a small subsource that contains a representative for each fi ∈E.
Likewise the validity of 15.14(4) can be established as in the corresponding part of the
proof of Theorem 15.14 by replacing the source S = (A
fj
−−→Bj)J by a small subsource
that contains a representative for each fj ∈E.
The equivalence of the conditions (2)–(5) can be established as in Proposition 14.11 by
using the fact that the assumption made there that products of pairs exist is not needed
here, since we have (E, M)-factorizations for 2-sources. Details are left to the reader.
15.21 COROLLARY
In a co-wellpowered category A with products, every factorization structure (E, M) for
morphisms with E ⊆Epi(A) can be uniquely extended to a factorization structure (E, M)
for sources.

15.22 EXAMPLE
The factorization structure (dense maps, closed embeddings) for morphisms
• cannot be extended to a factorization structure (dense maps, M) on Top, but
18th January 2005

268
Factorization Structures
[Chap. IV
• can be uniquely extended to a factorization structure (dense maps, M) on Haus.
The latter is one of the most important factorization structures on Haus.
15.23 REMARK
Proposition 15.19 shows that products are a suitable tool for extending factorization
structures for morphisms to those for small sources. Proposition 15.20 shows that co-
wellpoweredness is a suitable tool for extending factorization structures for small sources
to those for sources. The next proposition shows that factorization structures themselves
can be used to extend factorization structures of morphisms to those for sources.
15.24 PROPOSITION
In an (E, M)-category A every factorization structure (C, N) for morphisms with
C ⊆E can be uniquely extended to a factorization structure (C, N) for sources.
Proof: Let N be the conglomerate of all sources of the form M ◦n with M ∈M and
n ∈N. If S is a source with (E, M)-factorization S = M ◦e and e = n ◦c is a (C, N)-
factorization, then S = (M ◦n) ◦c is a (C, N)-factorization. If f and c are morphisms
with c ∈C, and N = M ◦n and S are sources with n ∈N and M ∈M (i.e., N ∈N)
and if N ◦f = S ◦c, then diagonals d1 and d2 can be successively constructed such that
the diagrams
•
c
/
n◦f

•
d1
~~~~~~~
S

•
M
/ •
and
•
c
/
f

•
d2
~~~~~~~
d1

•
n
/ •
and hence
•
c
/
f

•
d2
~~~~~~~
S

•
N
/ •
commute. Uniqueness follows from c ∈C ⊆E ⊆Epi(A).

FACTORIZATION STRUCTURES AND LIMITS
The fact that in an (E, M)-category every extremal mono-source belongs to M [cf. 15.5(2)]
implies that all limit sources belong to M (cf. Proposition 11.6). Below, we further ex-
plore the relationship between factorization structures and limits.
15.25 THEOREM
Let A be a strongly complete, extremally co-wellpowered category. Then the following
hold:
(1) A is an (ExtrEpi, Mono-Source)-category.
(2) If A is co-wellpowered, then A is an (Epi, ExtrMono-Source)-category.
(3) If in A regular epimorphisms are closed under composition, then A is a
(RegEpi, Mono-Source)-category.
18th January 2005

Sec. 15]
Factorization structures for sources
269
Proof:
(1). Let S = (A
fi
−−→Ai)I be a source.
By Theorem 14.17, for each i ∈I there is
an (ExtrEpi, Mono)-factorization A
fi
−−→Ai = A
ei
−−→Bi
mi
−−→Ai.
Since A is
extremally co-wellpowered, there exists a subset J of I, and for each i ∈I there is
a j(i) ∈J and an isomorphism hi with ei = hi ◦ej(i) (where for i ∈J we can choose
j(i) = i and hi = id). The family (Bj)j∈J has a product (P
pj
−−→Bj)J. Let
A
⟨ej⟩
−−−→P = A
e
−→B
m
−−→P
be an (Epi, Mono)-factorization. Then
A
fi
−−→Ai = A
e
−→B
mi◦hi◦pj(i)◦m
−−−−−−−−−−→Ai
is an (Epi, Mono-Source)-factorization of S. Hence (1) follows from Theorem 15.10.
(2). Since A has equalizers and intersections, it is (Epi, ExtrMono)-structured (14.19).
By Corollary 15.21, A is an (Epi, M)-category for a suitable conglomerate M of
sources. Moreover, by (1), A is an (ExtrEpi, Mono-Source)-category. Hence by
Proposition 15.8(4), A has coequalizers. Thus by Proposition 15.8(3), M is the
conglomerate of all extremal mono-sources.
(3). By (1) and Proposition 15.7, A has coequalizers. Thus by Proposition 14.22, A is
(RegEpi, Mono)-structured. By Proposition 15.24 this implies that A is a (RegEpi,
M)-category for some conglomerate M. By 15.8(4) it follows that M is the con-
glomerate of all mono-sources in A.

15.26 REMARK
If A is a strongly complete, extremally co-wellpowered category, there need not be any
M for which A is an (Epi, M)-category. See Exercise 15D.
Suggestions for Further Reading
Strecker, G. E. Perfect sources. Springer Lect. Notes Math. 540 (1976): 605–624.
Hoﬀmann, R.-E. Factorization of cones. Math. Nachr. 87 (1979): 221–238.
Herrlich, H., G. Salicrup, and R. Vazquez. Dispersed factorization structures. Canad.
J. Math. 31 (1979): 1059–1071.
Tholen, W. Factorizations, localizations, and the orthogonal subcategory problem. Math.
Nachr. 114 (1983): 63–85.
18th January 2005

270
Factorization Structures
[Chap. IV
EXERCISES
15A. Swell Epimorphisms
A morphism f in A is called a swell epimorphism provided that A has the unique
({f}, Mono-Source)-diagonalization property. Show that
(a) Every strict epimorphism is swell, but not vice versa.
(b) Every swell epimorphism is an epimorphism.
(c) Every swell epimorphism is a strong epimorphism (cf. 14C), but not vice versa.
(d) The class of swell epimorphisms is closed under right-cancellation, composition, and
the formation of cointersections, pushouts, and coproducts.
(e) Under each of the following assumptions the equality SwellEpi = ExtrEpi holds in
A:
(e1) In A 2-sources are (Epi, Mono-Source)-factorizable [but cf. Exercise 15B(b)].
(e2) A is strongly complete and extremally co-wellpowered.
(e3) A is complete and in A every mono-source contains a small mono-source.
(e4) A is strongly cocomplete. [Cf. (d), Corollary 15.15, Proposition 15.7, and (f).]
(f) If A is an (E, Mono-Source)-category, then E = SwellEpi = ExtrEpi.
15B. (E, −)-Categories
A is called an (E, −)-category provided it is an (E, M)-category for some M. Show
that
(a) Every (Epi,−)-category is a (SwellEpi,−)-category [cf. Theorem 15.14].
(b) The category
•
/

@
@
@
@
@
@
@
@
@
@
@
@
@
@
•
•
•
O
o
is a (SwellEpi, −)-category, but neither an (Epi, −)-category nor an (ExtrEpi, −)-
category. In particular, SwellEpi ̸= ExtrEpi.
(c) Every partially ordered set, considered as a category, is an (ExtrEpi, Mono-Source)-
category [and SwellEpi = ExtrEpi].
But a partially ordered set (X, ≤) is an
(Epi, −)-category if and only if for each x ∈X the set {y ∈X | x ≤y} is a
complete lattice. [E.g.,
•

999
•
L
L
L
L
L
•
sssss
•
•
is an (Epi, −)-category, but the addition of a smallest element destroys this property.]
18th January 2005

Sec. 15]
Factorization structures for sources
271
(d) Let A be an (E, −)-category. Show that for any D ⊆E, A is a (D, −)-category if and
only if Iso(A)⊆D and D is closed under composition, pushouts, and cointersections.
15C. (ExtrEpi, Mono-Source)- vs. (Epi, ExtrMono-Source)-Categories
Show that
(a) Every (Epi, ExtrMono-Source)-category is an (ExtrEpi, Mono-Source)-category [cf.
Ex. 15B(a) and 15A(e)].
(b) Not every (ExtrEpi, Mono-Source)-category is an (Epi, ExtrMono-Source)-category
[cf. Ex. 15B(c), 15D, or 16A(b)].
* 15D. A Strongly Complete, Extremally Co-wellpowered,
Non-(Epi, –)-Category
Let Λ-CCPos be the construct that has as objects all triples (X, ≤, λ) with (X, ≤) a
partially ordered set in which each nonempty chain has a join and λ : X →X a unary
(not necessarily order-preserving) operation, and as morphisms all λ-homomorphisms
that preserve joins of nonempty chains. Show that
(a) Λ-CCPos is complete, cocomplete, and wellpowered, hence strongly complete.
(b) Λ-CCPos is extremally co-wellpowered but not concretely co-wellpowered, hence
not co-wellpowered. [Hint: Consider for each limit ordinal α the natural injection
B0
eα
−−→Aα, where B0 = (N, =, λ) with λ(n) = n + 1 and where Aα = (Xα, ≤, λα)
with (Xα, ≤) the ordered set of all ordinals less than or equal to α and λα : Xα →Xα
deﬁned by λα(β) = Min{β + 1, α}.]
(c) Λ-CCPos is an (ExtrEpi, Mono-Source)-category [cf. Theorem 15.25].
(d) Λ-CCPos does not have cointersections. [Hint: Consider for each ordinal α the
natural injection B0
eα
−−→Bα, where Bα = (Yα, ≤, λα) with (Yα, ≤) the set of all
ordinals less than α + ω, ordered by β < γ ⇔(β < γ ≤α w.r.t. the natural order of
ordinals), and λα(β) = β + 1.]
(e) Λ-CCPos is not an (Epi, −)-category [cf. 15.16(2)], but (Epi, Small ExtrMono-
Source) is a factorization-structure for small sources on Λ-CCPos [cf. Proposition
15.19 and Corollary 14.21].
15E. Re: Theorem 15.14
Consider the three-element chain {0, 1, 2} with its natural order as a category A and let
E consist of all A-morphisms except 0 →2. Show that A and E satisfy conditions (1),
(3), and (4) of Theorem 15.14, but not condition (2).
15F. Existence of Coequalizers
(a) Show that each category A that satisﬁes one of the following conditions, has co-
equalizers:
(1) A has (Epi, Mono-Source)-factorizations,
(2) A is strongly complete and extremally co-wellpowered [cf. Theorem 15.25].
18th January 2005

272
Factorization Structures
[Chap. IV
(b) Construct a strongly complete category that does not have coequalizers.
15G. Factorization Structures for Empty Sources
(a) Let (E, M) be a factorization structure for empty sources on A. Show that
(1) An empty source (A, ∅) belongs to M if and only if A is E-injective.
(2) The full subcategory of A that consists of all E-injective objects is reﬂective in
A.
(b) Let E be a class of epimorphisms in A that is closed under composition with iso-
morphisms. Show that the following are equivalent:
(1) There exists a class M of empty sources such that (E, M) is a factorization
structure for empty sources on A.
(2) A has enough E-injectives, i.e., for each A-object A there exists an E-
injective object B and a morphism A
e
−→B in E.
(c) Let (E, M) be a factorization structure for morphisms on a category A with a
terminal object T. Let N be the class of all empty sources (A, ∅) with A →T ∈M.
Show that (E, N) is a factorization structure for empty sources on A.
15H. E-Injectives
Show that every (E, M)-category has enough E-injectives.
15I. Factorization Structures for 2-Sources and 1-Sources
Let (E, M) be a factorization structure for 2-sources and 1-sources on A. Show that
(a) Conditions (1), (2), (3), (5), and (6) of Proposition 14.11 are equivalent to each
other and to each of the following conditions:
(7a) a morphism f belongs to M iﬀf = g ◦e and e ∈E imply e ∈Iso(A).
(7b) a 1-source or 2-source F belongs to M iﬀF = G◦e and e ∈E imply e ∈Iso(A).
(8) for each object A the 2-source A
id
←−−A
id
−−→A belongs to M,
(9) for each 1-source A
m
−−→B in M the 2-source B
m
←−−A
m
−−→B belongs to M,
(10) for each 1-source A
m
−−→B in M and each morphism A
f
−→C the 2-source
B
m
←−−A
f
−→C belongs to M.
(b) The full subcategory B of A that consists of those objects A for which the 2-source
A
id
←−−A
id
−−→A belongs to M is closed under the formation of products and M-
subobjects.
15J. Factorization Structures for Small Sources
Show that
(a) (Mor, Small Product) is a factorization structure for small sources on Set, but Set
is not a (Mor, −)-category.
18th January 2005

Sec. 15]
Factorization structures for sources
273
(b) (Epi, Small ExtrMono-Source) is a factorization structure for small sources on
Λ-CCPos, but Λ-CCPos is not an (Epi, −)-category.
15K. Source-Sink-Diagonals
Show that if (Xi
ei
−−→X)I is an epi-sink, (Xi
fi
−−→Y )I is an arbitrary sink, (Y
mj
−−→Yj)J
is a mono-source, and (X
gj
−−→Yj)J is an arbitrary source in Set, then there exists a
unique function X
d
−→Y such that the following diagram commutes:
Xi
ei
/
fi

X
d
~~~~~~~~~
gj

Y
mj / Yj
* 15L. Dispersed Factorization Structures
Let (E, M) be a ﬁxed factorization structure on A. For a full subcategory B of A call
an A-morphism f B-concentrated provided that f ∈E and each B-object is {f}-
injective, and call an A-source S with domain A B-dispersed provided that the source
obtained from S by adding all morphisms with domain A and codomain in B belongs
to M. Show that
(a) A is a (B-Concentrated, B-Dispersed)-category.
(b) If B is E-reﬂective, then the following are equivalent for each A-object A:
(1) A belongs to B,
(2) the empty source with domain A is B-dispersed,
(3) A is B-Concentrated-injective.
(c) There are at least as many factorization structures on A as there are E-reﬂective
subcategories of A.
(d) Each of the categories Top and Rere has a proper class of factorization structures.
(e) If (C, D) is a factorization structure on A with C ⊆E, then the following are
equivalent:
(1) there exists a full subcategory B of A with C = B-Concentrated morphisms
and D = B-Dispersed sources,
(2) if g ◦f ∈C and f ∈E, then f ∈C.
15M. Factorization Structures on Cat
Show that
(a) Cat is an (Epi, ExtrMono-Source)-category.
(b) Cat is an (ExtrEpi, Mono-Source)-category.
(c) Cat is not a (RegEpi, −)-category.
18th January 2005

274
Factorization Structures
[Chap. IV
15N. Factorization Structures on Set2 and (Set2)op
Show that Set2 and (Set2)op have regular factorizations.
15O. Re: Proposition 15.19
Show that one cannot omit the hypothesis in Proposition 15.19(2) that an initial object
exists. [Consider discrete categories.]
18th January 2005

16 E-reﬂective subcategories
In this section we will demonstrate that factorization structures provide a convenient
tool to investigate reﬂective subcategories. The typical situation is this: B is an (E, M)-
category and A is an isomorphism-closed full E-reﬂective subcategory of B.
16.1 DEFINITION
Let B be a category and let E be a class of B-morphisms. An isomorphism-closed, full
subcategory A of B is called E-reﬂective in B provided that each B-object has an
A-reﬂection arrow in E. In particular, we use the terms epireﬂective (resp. monore-
ﬂective, bireﬂective) in case E is the class of epimorphisms (resp. monomorphisms, bi-
morphisms) in B. Likewise, we use the terms regular epireﬂective (resp. extremally
epireﬂective) in case E is the class of regular (resp. extremal) epimorphisms in B.
Dual Notion: E-coreﬂective subcategory.
16.2 EXAMPLES
(1) In Met the full subcategory of complete metric spaces is bireﬂective [cf. 4.17(8)].
(2) HComp is reﬂective but not epireﬂective in Top, even though HComp is epire-
ﬂective in Haus, and Haus is epireﬂective in Top.
(3) Ab is regular epireﬂective in Grp [cf. 4.17(4)] and Pos is regular epireﬂective in
Prost [cf. 4.17(3)].
(4) An isomorphism-closed full concrete subcategory of a concrete category B is (identity
carried)-reﬂective in B if and only if it is concretely reﬂective in B (cf. 5.22).
(5) The construct of minimal acceptors is regular epireﬂective in the construct of reach-
able acceptors [cf. 4.17(7)].
Haus is epireﬂective in Top
275

276
Factorization Structures
[Chap. IV
16.3 PROPOSITION
Every monoreﬂective subcategory of B is bireﬂective in B.
Proof: Let A be a monoreﬂective (hence by Deﬁnition 16.1 a full) subcategory of B.
Consider an A-reﬂection-arrow B
r
−→A for some B-object B and a pair A
p /
q / B′ of
B-morphisms with p ◦r = q ◦r. Let B′
r′
−−→A′ be an A-reﬂection arrow for B′. Then
(r′ ◦p) ◦r = (r′ ◦q) ◦r and A′ ∈Ob(A) imply that r′ ◦p = r′ ◦q. Since r′ is assumed to
be a monomorphism, this implies that p = q. Hence r is an epimorphism.

16.4 PROPOSITION
Every coreﬂective isomorphism-closed full subcategory of B that contains a B-separator
is bicoreﬂective in B.
Proof: Let S be a separator in B, let A be a coreﬂective full subcategory of B that
contains S, and let A
c−→B be an A-coreﬂection arrow. By the dual of Proposition 16.3
it suﬃces to show that c is an epimorphism. Let B
p /
q / B′ be distinct morphisms. Then
there exists a morphism S
h
−→B with p ◦h ̸= q ◦h. Since S belongs to A, there exists a
unique morphism S
h′
−−→A with h = c◦h′. Consequently, p◦c◦h′ = p◦h ̸= q◦h = q◦c◦h′,
which implies that p ◦c ̸= q ◦c.

16.5 EXAMPLES
The above proposition immediately implies that
(1) Every coreﬂective isomorphism-closed full subcategory of Top (resp. Pos) that con-
tains a nonempty space (resp. a nonempty poset) is bicoreﬂective in Top (resp. Pos);
hence it is a coreﬂective modiﬁcation.
(2) Every reﬂective isomorphism-closed full subcategory of Top0 (resp. Pos) that con-
tains the Sierpinski space (resp. a two-element chain) is bireﬂective in Top0 (resp.
Pos); hence it is a reﬂective modiﬁcation.
(3) Set (resp. Vec) contains precisely one proper coreﬂective, isomorphism-closed, full
subcategory — namely, the one consisting of the empty set (resp. the zero vector
spaces).
(4) Set contains precisely two proper reﬂective, isomorphism-closed, full subcategories
— namely, the one consisting of all one-element sets and the one consisting of all sets
with at most one element. Vec contains precisely one proper reﬂective, isomorphism-
closed, full subcategory — namely, the one consisting of all zero vector spaces.
16.6 REMARK
It is not always easy to determine whether or not a given subcategory is reﬂective. (For
example, which of the full subcategories consisting of regular spaces, or of connected
spaces, or of compact spaces is reﬂective in Top?) Fortunately, for E-reﬂectivity we
have powerful and easily applied criteria, as will be seen in the next results.
18th January 2005

Sec. 16]
E-reﬂective subcategories
277
16.7 DEFINITION
Let M be a conglomerate of sources in a category B. A subcategory A of B is said to
be closed under the formation of M-sources provided that whenever (B
fi
−−→Ai)I
is a source in M such that all Ai belong to A, then B belongs to A.
16.8 THEOREM
If A is a full subcategory of an (E, M)-category B, then the following conditions are
equivalent:
(1) A is E-reﬂective in B.
(2) A is closed under the formation of M-sources in B.
In the case that B has products and is E-co-wellpowered, the above conditions are equiv-
alent to:
(3) A is closed under the formation of products and M-subobjects66 in B.
Proof: (1) ⇒(2).
Let S = (B
mi
−−→Ai)I be a source in M such that all Ai belong to
A. If B
e
−→A is an A-reﬂection arrow for B in E, then S factors through e. Hence, by
Proposition 15.5(9)(a), e is an isomorphism. Thus B belongs to A.
(2) ⇒(1). For any B-object B, consider the source S with domain B, consisting of all
morphisms with domain B and codomain in A. If S = M◦e is an (E, M)-factorization,
then e is an A-reﬂection arrow for B.
(2) ⇒(3). Obvious.
(3) ⇒(2).
Consider a source M = (B
mi
−−→Ai)I in M such that all Ai belong to A.
For each i ∈I let B
mi
−−→Ai = B
ei
−−→Bi
ni
−−→Ai be an (E, M)-factorization. Then each
Bi, being an M-subobject of Ai, belongs to A. Since B is E-co-wellpowered, we can
select a subset J of I and for each i ∈I a j(i) ∈J and an isomorphism hi : Bj(i) →Bi
with ei = hi ◦ej(i). If (P, πj)J is a product of the family (Bj)j∈J, then P belongs to A.
If
B
⟨ej⟩
−−−→P = B
e
−→C
m
−−→P
is an (E, M)-factorization, then C belongs to A, and we have commutativity of the
diagram
B
e
|zzzzzzzzzzzzzzzzzzz
⟨ej⟩














ej(i)

ei
55555555555555
mi
"F
F
F
F
F
F
F
F
F
F
F
F
F
F
F
F
F
F
F
C
m
/ P
πj(i)
/ Bj(i)
hi
/ Bi
ni
/ Ai
Since M factors through e, and e ∈E, by Proposition 15.5(9)(a), e is an isomorphism.
Thus B belongs to A.

66An M-subobject is simply a singleton M-source. It need not be a monomorphism.
18th January 2005

278
Factorization Structures
[Chap. IV
16.9 COROLLARY
A full subcategory of a co-wellpowered, strongly complete category B is epireﬂective in B
if and only if it is closed under the formation of products and extremal subobjects in B.
Proof: Immediate from Theorems 16.8 and 15.25(2).

16.10 EXAMPLE
The full subcategory B of BiTop that consists of all bitopological spaces with both
topologies Hausdorﬀis strongly complete (but not co-wellpowered). The full subcate-
gory BiComp of B [cf. 4F(b)] is closed under the formation of products and extremal
subobjects in B, but is not reﬂective in B.
SUBCATEGORIES DEFINED BY
EQUATIONS AND IMPLICATIONS
16.11 MOTIVATING REMARK
Many familiar mathematical objects (e.g., semigroups, monoids, groups, abelian groups,
rings, lattices, boolean algebras, vector spaces, etc.) can be deﬁned by means of opera-
tions and equations. Moreover, the corresponding categories (Sgr, Mon, Grp, etc.) can
be obtained as full subcategories of categories of the form Alg(Ω), consisting of those
objects that satisfy suitable equations. This singling out of subcategories by equations
(or, more generally, by implications) will be described here in some detail in order to
motivate the much simpler and far more elegant categorical concepts introduced below.
As an example, consider Sgr, which is the full subcategory of the category Alg(2) of
algebras with one binary operation (usually written as multiplication) consisting of those
algebras that satisfy the equation:
∀x ∀y ∀z
x · (y · z) = (x · y) · z.
(e)
In order to ﬁnd a categorical description of the above equation (e) and of those al-
gebras that satisfy (e), observe that the expressions x · (y · z) and (x · y) · z can be
interpreted as elements t and s of the free algebra F on the set {x, y, z} of generators. If
η : {x, y, z} →F is the corresponding universal arrow, then, for any algebra A in Alg(2),
the following conditions are equivalent:
(1) A is a semigroup,
(2) A satisﬁes equation (e),
(3) for every map f : {x, y, z} →|A| (i.e., for every interpretation of the variables x,y,
and z), the unique homomorphism f : F →A, determined by f = f ◦η, satisﬁes
f(t) = f(s).
There is a further characterization: if ρ is the congruence on F generated by (t, s), (i.e.,
the smallest congruence relation on the algebra F such that tρ s) and F
e
−→F/ρ is the
natural map onto the quotient algebra F/ρ, then (3) is equivalent to
18th January 2005

Sec. 16]
E-reﬂective subcategories
279
(4) A is {e}-injective (i.e., every homomorphism from F to A factors through e).
Hence an algebra satisﬁes equation (e) if and only if it is injective with respect to a
suitable morphism e. In general, an equation in Alg(Ω) is a pair (t, s) of elements in
some free Ω-algebra F. An Ω-algebra A satisﬁes the equation (t, s) if and only if A is
{e}-injective, where F
e
−→F/ρ is the quotient map corresponding to the congruence
relation ρ on F generated by (t, s).
Slightly more complicated — but in its categorical formulation even simpler (!) — is the
concept of implications. An implication P ⇒K consist of a set P of equations, called
premises, and a set K of equations, called conclusions. For example, the implication
∀x ∀y ∀z
x · y = x · z
⇒
y = z
(i)
describes, together with above equation (e), the left-cancellative semigroups. It is clear
what it means to satisfy implication (i): whenever an interpretation of variables satisﬁes
the premise, then it also satisﬁes the conclusion.
(In this example, both the set of
premises and the set of conclusions are singletons.) Formally, an implication P
X⇒K in
Alg(Ω) consists of a set X (of “variables”), a subset P of |F| × |F| (called the set of
“premises”), and a subset K of |F|×|F| (called the set of “conclusions”), where F denotes
the canonical free Ω-algebra on X. (Cf. Example 8.23(6).) An Ω-algebra A satisﬁes the
implication P
X⇒K provided that under each interpretation of variables (i.e., for each
map f : X →|A|) such that each premise (p, q) ∈P becomes true (i.e., such that the
homomorphic extension f : F →A of f satisﬁes f(p) = f(q) for each (p, q) ∈P), each
conclusion (t, s) ∈K must be true (i.e., f(t) = f(s) for each (t, s) ∈K). If π resp.
γ are the congruence relations on F generated by P resp. by P ∪K, if F
eP
−−→F/π
and F
eK
−−→F/γ are the associated quotient maps, and if F/π
e
−→F/γ is the unique
homomorphism satisfying eK = e ◦eP , then the following conditions are easily seen to
be equivalent for any Ω-algebra A:
(1) A satisﬁes the implication P
X⇒K,
(2) A is {e}-injective in Alg(Ω).
Since in Alg(Ω) morphisms of the form F/π
e
−→F/γ are, up to isomorphism, precisely
the surjective homomorphisms (= epimorphisms = regular epimorphisms), we are led to
the following deﬁnition:
16.12 DEFINITION
(1) (Regular) epimorphisms are called (regular) implications.
(2) An object Q satisﬁes the implication A
e
−→B provided that Q is {e}-injective
(i.e., provided that for each morphism A
f
−→Q there exists a morphism B
f
−→Q
with f = f ◦e).
(3) A full subcategory A of B is called implicational provided that there exists a class
C of implications in B such that A consists precisely of those B-objects that satisfy
18th January 2005

280
Factorization Structures
[Chap. IV
each implication in C. Constructs that are concretely isomorphic to implicational
subconstructs of Alg(Ω) for some Ωare called ﬁnitary quasivarieties.67
In case C can be chosen to be a subclass of some class E of implications in B, A is called
E-implicational.
16.13 EXAMPLES
(1) Pos is an implicational subcategory of Rel. Consider the following implications:
REFLEXIVITY: ({x}, ∅)
id
−−→({x}, {(x, x)}),
TRANSITIVITY: ({x, y, z}, {(x, y), (y, z)})
id
−−→({x, y, z}, {(x, y), (y, z), (x, z)}),
ANTISYMMETRY: ({x, y}, {(x, y), (y, x)})
e
−→({x}, {(x, x)}),
where e(x) = e(y) = x.
A binary relation satisﬁes the above implications if and only if it is a poset.
(2) T1-spaces form an implicational subcategory of Top. If P is the Sierpinski space
and P ′ is a singleton space, then a topological space is T1 if and only if it satisﬁes
the implication P →P ′.
(3) In Σ-Seq, Σ = {σ}, consider all the automata with permutation transition (i.e.,
δ(σ, x) = δ(σ, y) ⇒x = y). These form an implicational class given by Pn →P ′
n
(n = 1, 2, . . .), where Pn has states x, y, 1, . . . , n such that δ(σ, x) = δ(σ, y) = 1 and
1, . . . , n form a cycle, and P ′
n is the quotient of Pn obtained by merging x with y.
(4) The constructs Vec, R-Mod, Ab, Grp, Mon, Sgr, Rng, Lat, DLat, SLat, Boo,
pSet, and AbTop (= abelian topological groups) are ﬁnitary quasivarieties. How-
ever, Field is not a ﬁnitary quasivariety.
16.14 THEOREM
A full subcategory of an (E, M)-category B is E-implicational if and only if it is E-
reﬂective in B.
Proof: Let C be a subclass of E and let A be the full subcategory of B determined
by C; i.e., given by those objects that satisfy each implication in C. Consider a source
(B
mi
−−→Ai)I in M such that all Ai belong to A. By Theorem 16.8, it is suﬃcient to
show that B belongs to A. Let Q
e
−→R be an element of C and let Q
f
−→B be a
morphism. Then for each i ∈I there exists a morphism R
gi
−−→Ai with gi ◦e = mi ◦f.
Hence there exists a diagonal d that makes the diagram
Q
e
/
f

R
d
~~~~~~~~
gi

B
mi / Ai
commute. In particular f = d ◦e. Hence B belongs to A.
67Recall that in Alg(Ω), Epi = RegEpi = surjective homomorphisms.
18th January 2005

Sec. 16]
E-reﬂective subcategories
281
Conversely, let A be a E-reﬂective full subcategory of B. Consider the class C of all
A-reﬂection arrows for B-objects, and let C be the implicational subcategory of B
determined by C. Obviously, A ⊆C. For the converse, let D be an object of C and
let D
c−→A be an A-reﬂection arrow for D. Since D satisﬁes the implication c, there
exists a morphism f with idD = f ◦c. Thus c is an epimorphic section (cf. 15.4); hence
an isomorphism.
Since A is isomorphism-closed, this implies that D belongs to A.
Therefore C = A.

16.15 REMARK
As indicated in Remark 16.11, equations in Alg(Ω) are those implications that have
the empty set P of premises; equivalently, they are those implications A
e
−→B whose
domain A is a free Ω-algebra. The concept of free Ω-algebras, unfortunately, refers to the
construct Alg(Ω) and not to the abstract category Alg(Ω). Fortunately, however, as we
will see below, a full subcategory A of Alg(Ω) is E-implicational, where E is the class of
all (regular) implications in Alg(Ω) with free domain, if and only if A is E-implicational,
where E is the class of all (regular) implications in Alg(Ω) with (regular-) projective
domain. This motivates the following deﬁnition:
16.16 DEFINITION
(1) Let E be a class of epimorphisms in a category B. An implication in E with E-
projective domain is called an E-equation. Regular epimorphic equations are called
regular equations. A full subcategory A of B is called E-equational provided
that there exists a class C of E-equations in B such that A consists precisely of
those B-objects that satisfy each E-equation in C.
(2) Let B be a construct. Regular implications with free domain are called equations.
A full subcategory A of B is called equational provided that it can be deﬁned as
above by a class C of equations in B.
(3) Constructs that are concretely isomorphic to equational subconstructs of Alg(Ω)
for some Ωare called ﬁnitary varieties.
16.17 THEOREM
Let B be an (E, M)-category with enough E-projectives (9.22 dual). Then the following
conditions are equivalent for any full subcategory A of B:
(1) A is E-equational in B.
(2) A is closed under the formation of M-sources and E-quotients in B.
In the case that B has products and is E-co-wellpowered, the above conditions are equiv-
alent to:
(3) A is closed under the formation of products, M-subobjects, and E-quotients in B.
18th January 2005

282
Factorization Structures
[Chap. IV
Proof: (1) ⇒(2).
By Theorems 16.8 and 16.14, A is closed under the formation of
M-sources in B. Let A be in A and be A
e
−→B be in E. To show that B is in A we will
verify that B satisﬁes any E-equation C
c−→D that is satisﬁed by all A-objects. Since
C is E-projective, for each morphism C
f
−→B there exists a morphism f with f = e◦f.
Since A is in A, there exists a morphism ˜f with f = ˜f ◦c. Hence f = (e ◦˜f) ◦c. Thus
B belongs to A.
C
c
/
f
 @
@
@
@
@
@
@
f

D
˜f

B
A
e
o
(2) ⇒(1). By Theorem 16.8, A is E-reﬂective in B. Let C be the class of all A-reﬂection
arrows for E-projective objects P, and let C be the subcategory of B determined by C.
Obviously, A ⊆C. For the converse, let D be an object of C. Then there exists an
E-projective object P and a morphism P
e
−→D in E. Let P
c−→A be an A-reﬂection
arrow for P. Since D satisﬁes the E-equation c, there exists a morphism A
f
−→D with
e = f ◦c. Since c is an epimorphism, this implies, by Proposition 15.5(5), that A
f
−→D
belongs to E. Thus D is an E-quotient of an A-object, and so belongs to A.
(2) ⇔(3). Immediate from Theorem 16.8.

16.18 THEOREM
Let B be a ﬁbre-small, transportable, complete construct that has free objects and for
which the surjective morphisms, extremal epimorphisms and regular epimorphisms coin-
cide. Then for full subconstructs A of B the following conditions are equivalent:
(1) A is equational in B,
(2) A is regular-equational in B,
(3) A is regular epireﬂective and closed under the formation of regular quotients (=
homomorphic images) in B,
(4) A is closed under the formation of products, subobjects, and homomorphic images
in B.
Proof: In B the extremal epimorphisms are precisely the surjective morphisms, and, by
Proposition 8.28 the monomorphisms are precisely the injective morphisms. Thus ﬁbre-
smallness and transportability imply wellpoweredness and extremal co-wellpoweredness.
Hence completeness implies strong completeness. Since surjective morphisms are closed
under composition, by Theorem 15.25(3), B is a (RegEpi, Mono-Source)-category. Con-
sequently, Theorem 16.8 and Theorem 16.17 imply the equivalence of the conditions (2),
(3), and (4). Since by Proposition 9.29 every free object is regular projective, (1) implies
(2). To show that (3) implies (1), let C be the class of all A-reﬂection arrows F
c−→A
for free objects F in B, and let C be the subcategory of B determined by C. Since in
B every object is a homomorphic image of a free object, the same argument as in the
proof of Theorem 16.17 shows that C = A.

18th January 2005

Sec. 16]
E-reﬂective subcategories
283
16.19 COROLLARY
For full subcategories A of Alg(Ω), the following hold:
(1) A is implicational in Alg(Ω) if and only if A is closed under the formation of
products and subalgebras.
(2) A is equational in Alg(Ω) if and only if A is closed under the formation of products,
subalgebras and homomorphic images.

E-REFLECTIVE HULLS
16.20 PROPOSITION
For (E, M)-categories B, the following hold:
(1) The intersection of any conglomerate of E-reﬂective subcategories of B is E-reﬂec-
tive in B.
(2) For every full subcategory A of B there exists a smallest E-reﬂective subcategory of
B that contains A.
Proof: (1) follows from Theorem 16.8. (2) follows from (1).

16.21 DEFINITION
If A is a full subcategory of an (E, M)-category B, then the smallest E-reﬂective sub-
category of B that contains A is called the E-reﬂective hull of A in B.
16.22 PROPOSITION
If A is a full subcategory of an (E, M)-category B, then a B-object B belongs to the
E-reﬂective hull of A in B if and only if there exists a source (B
fi
−−→Ai)I in M with
all Ai in A.

16.23 Examples
B
A
Epireﬂective hull
of A in B
Top
S (= Sierpinski-space)
Top0
Top
[0, 1]
Tych
Haus
[0, 1]
HComp
Rel
({0, 1}, ≤)
Pos
Set
{0, 1}
Set
Vec
R
Vec
18th January 2005

284
Factorization Structures
[Chap. IV
16.24 PROPOSITION (Reﬂectors as Composites of Epireﬂectors)
If A is a full reﬂective subcategory of an (Epi, Mono-Source)-factorizable category B,
and if C is the extremally epireﬂective hull of A in B, then A is epireﬂective in C and
C is epireﬂective in B.
Proof: By Theorem 15.10, B is an (ExtrEpi, Mono-Source)-category. Hence A has an
ExtrEpi-reﬂective hull C. Obviously, C is epireﬂective in B, and A is reﬂective in C. For
any C in C there exists, by Proposition 16.22, a mono-source M = (C
mi
−−→Ai)I with all
Ai in A. Let C
r
−→A be an A-reﬂection arrow for C. Then M factors through r, which
implies that r is a monomorphism in B, hence also in C. Thus A is monoreﬂective in
C, so that by Proposition 16.3 it is epireﬂective in C.
16.25 REMARK
If we generalize the situation that we are working in just slightly, our results may break
down completely. Here are two examples, the ﬁrst very simple, the second very deep:
(1) Consider the ordered set of all natural numbers as a category A. Then A almost
satisﬁes the assumptions of Theorem 15.25: A is well-powered, co-wellpowered, and
“almost” strongly complete (every nonempty diagram has a limit). But A is not an
(Epi, M)-category for any M. If B (resp. C) is the isomorphism-closed, epireﬂective
subcategory consisting of all even (resp. all odd) numbers, then B ∩C is empty —
hence not even reﬂective.
(2) The category Top is strongly complete, wellpowered, and co-wellpowered. However,
there exist two isomorphism-closed full reﬂective subcategories of Top whose inter-
section is not reﬂective in Top. [For a corresponding example in the category of
bitopological spaces see Exercise 4F(b).]
If in a category B the intersection of two (epi)reﬂective isomorphism-closed full subcat-
egories is not (epi)reﬂective, then this intersection obviously has no (epi)reﬂective hull
in B.
If there is an isomorphism-closed full subcategory of B that does not have an (epi)reﬂec-
tive hull in B, then (epi)reﬂective subcategories of B cannot be characterized among the
isomorphism-closed full subcategories of B by suitable closure properties.
Suggestions for Further Reading
Kennison, J. F. Reﬂective functors in general topology and elsewhere. Trans. Amer.
Math. Soc. 118 (1965): 303–315.
Baron, S. Reﬂectors as compositions of epi-reﬂectors. Trans. Amer. Math. Soc.
136
(1969): 499–508.
Hatcher, W. S. Quasiprimitive subcategories. Math. Ann. 190 (1970): 93–96.
Ringel, C. M. Monofunctors as reﬂectors. Trans. Amer. Math. Soc. 161 (1971): 293–
306.
18th January 2005

Sec. 16]
E-reﬂective subcategories
285
Banaschewski, B., and H. Herrlich. Subcategories deﬁned by implications. Houston J.
Math. 2 (1976): 149–171.
Huˇsek, M. Lattices of reﬂections and coreﬂections in continuous structures. Springer
Lect. Notes Math. 540 (1976): 404–424.
Nyikos, P. Epireﬂective categories of Hausdorﬀspaces. Springer Lect. Notes Math. 540
(1976): 452–481.
Marny, T. On epireﬂective subcategories of topological categories. Gen. Topol. Appl.
10 (1979): 175–181.
Hoﬀmann, R.-E. Reﬂective hulls of ﬁnite topological spaces. Archiv Math. 33 (1979):
258–262.
N´emeti, I., and I. Sain. Cone-implicational subcategories and some Birkhoﬀ-type the-
orems. Universal Algebra (Esztergom, 1977), Colloq. Math. Soc. J´anos Bolyai 29,
North Holland, Amsterdam, 1982, 535–578.
Hoﬀmann, R.-E. Cowell-powered reﬂective subcategories. Proc. Amer. Math. Soc. 90
(1984): 45–46.
Giuli, E., and M. Huˇsek. A diagonal theorem for epireﬂective subcategories of Top and
cowell-poweredness. Anal. Math. Pure Appl. 145 (1986): 337–346.
EXERCISES
16A. Epireﬂective Subcategories with Bad Behavior
(a) Let I be a proper class, and let the category B have as objects A0
0, A1
1, Ai
2 for i ∈I,
A3
3, and A4
4; and morphism-sets such that
homB(Ai
n, Aj
m) has





no element, if m < n or (m = n and i ̸= j)
precisely two elements, if (n, m) = (0, 1) or (n, m) = (2, 3)
precisely one element, otherwise.
Let A be the full subcategory obtained from B by removing object A3
3.
Show that
(1) A is regular epireﬂective in B.
(2) B is co-wellpowered, but A is not even extremally co-wellpowered.
(3) The inclusion functor A ,→B sends certain extremal epimorphisms to non-
epimorphisms.
(b) Let the category B have as objects A0
2n for n ∈N, and A1
n, for n ∈N; and morphism-
sets such that
homB(Ai
n, Aj
m) has





precisely two elements, if n = m and i < j
no elements, if m < n or j < i
precisely one element, otherwise.
18th January 2005

286
Factorization Structures
[Chap. IV
Let A be the full subcategory of B whose objects are all A0
2n and all A1
2n.
Show that
(1) A is epireﬂective in B.
(2) B has regular factorizations, but A is not even (Epi, Mono-Source)-factorizable.
[Consider empty sources.]
(3) The inclusion functor A ,→B sends certain regular epimorphisms to non-
extremal epimorphisms.
16B. Inheritance of Factorization Structures
Let E : A ,→B be the embedding of a subcategory. Show that
(a) If B has regular factorizations and A is regular epireﬂective in B, then A has regular
factorizations and E preserves and reﬂects regular epimorphisms.
(b) If B is an (ExtrEpi, Mono-Source)-category and A is extremally epireﬂective in B,
then A is an (ExtrEpi, Mono-Source)-category and E preserves and reﬂects extremal
epimorphisms.
(c) If B is an (Epi, ExtrMono-Source)-category and A is epireﬂective in B, then E need
not preserve epimorphisms [cf. Haus and Top].
(d) If B has regular factorizations and A is epireﬂective in B, then A need not be an
(ExtrEpi, Mono-Source)-category and E need neither preserve regular nor preserve
extremal epimorphisms [cf. Exercise 16A(b)].
16C. Co-wellpoweredness and (Epi)Reﬂective Hulls
Let A be an isomorphism-closed full subcategory of a complete, well-powered, and co-
wellpowered category C, and let B be the epireﬂective hull of A in C. Show that
(a) A is epireﬂective in C if and only if A is closed under the formation of products and
regular subobjects in C.
(b) The embedding A ,→B preserves epimorphisms.
(c) If D is an isomorphism-closed full subcategory of B that contains A, then the
following are equivalent:
(1) D is reﬂective in C,
(2) D is epireﬂective in B.
(d) B is strongly complete.
(e) If B is co-wellpowered, then the epireﬂective hull of A in B is a reﬂective hull of
A in C, i.e., the smallest isomorphism-closed full reﬂective subcategory of C that
contains A.
(f) The following are equivalent:
(1) A is reﬂective in C and co-wellpowered,
18th January 2005

Sec. 16]
E-reﬂective subcategories
287
(2) A is limit-closed in C and B is co-wellpowered.
(g) The following are equivalent:
(1) A has a co-wellpowered reﬂective hull in C,
(2) A has a co-wellpowered epireﬂective hull in C.
* 16D. Subcategories of Top
(a) Show that a full reﬂective subcategory of Top is co-wellpowered if and only if its
epireﬂective hull in Top is co-wellpowered.
(b) Construct an epireﬂective, non-co-wellpowered subcategory of Top. [Cf. Example
7.90(3).]
(c) Construct a full, limit-closed, non-reﬂective subcategory of Top.
16E. Smallest E-Reﬂective Subcategories
Let (E, M) be a factorization structure for empty sources (resp. for morphisms) on a
category A (with a terminal object T). Show that
(a) A is E-injective if and only if (A, ∅) ∈M (resp. A →T ∈M).
(b) The full subcategory B of A that consists of all E-injective objects is the smallest
E-reﬂective subcategory of A. Moreover, a morphism A
r
−→B is a B-reﬂection
arrow if and only if (A, ∅) = A
r
−→(B, ∅) is an (E, M)-factorization [resp. if and
only if A →T = A
r
−→B −→T is an (E, M)-factorization].
16F. The ˇCech-Stone Compactiﬁcation
Show that if E is the class of dense C∗-embeddings and M is the class of perfect maps,
then (E, M) is a factorization structure for morphisms on Tych. Apply the results of
Exercise 16E.
16G. A Generalized BirkhoﬀTheorem
Let A be a full subcategory of an (E, M)-category B and let Q be a class of epimorphisms
in B such that
(α) B has enough Q-projectives,
(β) if g ◦e ∈Q and e ∈E, then g ∈Q.
(a) Show that the following conditions are equivalent:
(1) A is closed under the formation of M-sources and Q-quotients.
(2) A is deﬁnable by implications B
e
−→C in E with Q-projective domain B.
(b) Show that in the case that A is co-wellpowered and has products, the above condi-
tions are equivalent to
(3) A is closed under the formation of products, M-subobjects, and Q-quotients.
18th January 2005

288
Factorization Structures
[Chap. IV
16H. Epireﬂective Subcategories Are Closed Under Extremal Mono-Sources
Let A be an epireﬂective subcategory of B and let (B
mi
−−→Bi)I be an extremal mono-
source in B. Show that whenever all Bi belong to A, then so does B.
16I. The Lattice of Regular Epireﬂective Subcategories
Show that the lattice of regular epireﬂective subcategories of
(a) Set has precisely two elements,
(b) Set2 has the form
5
xxx
3
4
xxx
1
2
xxx
0
(c) (Set2)op has the form
4

:::
3
1
//////
2

0
* 16J. Injective Hulls for Finitary Varieties
Show that in a ﬁnitary variety (A, U) every object has an injective hull if and only if
the following conditions (cf. 9C) are satisﬁed:
(1) Monomorphisms are pushout stable,
(2) A is M-co-wellpowered, where M is the class of essential monomorphisms.
* 16K. Finitary Quasivarieties Isomorphic to Finitary Varieties
Show that a ﬁnitary quasivariety (A, U) is a ﬁnitary variety if and only if there exists a
ﬁnitary variety (B, V ) and an isomorphism A
H
−−→B.
* 16L. Strongly Limit-Closed vs. Epireﬂective Subcategories
A full subcategory A of B is called strongly limit-closed in B provided that whenever
(L
fi
−−→Di)Ob(I) is a limit of a diagram D : I →B and for each i ∈Ob(I) there exists a
j ∈Ob(I) with Dj in A and homI(j, i) ̸= ∅, then L belongs to A. Show that:
(a) If A is epireﬂective in B, then A is strongly limit-closed in B.
18th January 2005

Sec. 16]
E-reﬂective subcategories
289
(b) If B is complete, wellpowered, and co-wellpowered, then a full subcategory A of B
is epireﬂective in B if and only if A is strongly limit-closed in B.
16M. A Characterization of Extremally Epireﬂective Subcategories
Show that a full subcategory of an extremally co-wellpowered, strongly complete category
B is extremally epireﬂective in B if and only if it is closed under the formation of products
and subobjects in B.
16N. Finitary Varieties and Finitary Quasivarieties
Show that
(a) All the ﬁnitary quasivarieties exhibited in Example 16.13(4) are ﬁnitary varieties.
(b) The full subconstruct TfAb of Ab is a ﬁnitary quasivariety, but is not a ﬁnitary
variety. [Cf. 20.41(2) and 24.7.]
(c) Every regular epireﬂective subconstruct of a ﬁnitary quasivariety is a ﬁnitary quasi-
variety.
(d) The ﬁnitary variety Grp is a full, isomorphism-closed, reﬂective subconstruct of the
ﬁnitary variety Sgr. However, Grp is not even implicational in Sgr.
18th January 2005

17 Factorization structures for functors
In §8 we have generalized the concept of morphisms to that of G-structured arrows,
where G is a functor.
Here we will generalize, in an analogous way, the concept of
sources to that of G-structured sources. Many (but by no means all) of the results on
factorization structures of sources can be carried over to the context of G-structured
sources. Sometimes even proofs of the more general results can be readily obtained by
adapting the corresponding proofs from §15.
This section contains the basic results on factorization structures for functors. Special
classes of functors, deﬁned by means of particular factorization properties, will be studied
in greater detail in the remaining chapters; especially: adjoint functors (Chapter V); and
topological, algebraic, and topologically algebraic functors (Chapter VI).
Domain and codomain of a source
17.1 DEFINITION
Let G: A →X be a functor. A G-structured source S is a pair (X, (fi, Ai)i∈I) that
consists of an X-object X and a family of G-structured arrows X
fi
−−→GAi with domain
X, indexed by some class I.
X is called the domain of S and the family (Ai)i∈I is called the codomain of S.
17.2 REMARKS
(1) Whenever it is convenient, we use notations for G-structured sources such as
(X
fi
−−→GAi)i∈I or (X
fi
−−→GAi)I (which is reminiscent of notations used for sources
in §15).
290

Sec. 17]
Factorization structures for functors
291
(2) As with sources, we use, whenever convenient, such expressions as
(a) G-structured empty sources (i.e., X-objects),
(b) G-structured 1-sources (i.e., G-structured arrows),
(c) G-structured 2-sources (when the cardinality of the index class is 2), and
(d) G-structured small sources (when the index class is a set).
(3) As with sources, every pair (X, S) that consists of an X-object X and a class S of
G-structured arrows with domain X can be considered to be a G-structured source
via indexing S by itself.
17.3 DEFINITION
Let G : A →X be a functor, let E be a class of G-structured arrows, and let M be a
conglomerate of A-sources. (E, M) is called a factorization structure for G, and G
is called an (E, M)-functor provided that
(1) E and M are closed under composition with isomorphisms in the following sense:
(1a) if X
e
−→GA ∈E and A
h
−→B ∈Iso(A), then X
e
−→GA
Gh
−−→GB ∈E,
(1b) if (A
mi
−−→Ai)I ∈M and B
h
−→A ∈Iso(A), then (B
h
−→A
mi
−−→Ai)I ∈M.
(2) G has (E, M)-factorizations, i.e., for each G-structured source (X
fi
−−→GAi)I
there exists X
e
−→GA ∈E and M = (A
mi
−−→Ai)I ∈M such that
X
fi
−−→GAi = X
e
−→GA
Gmi
−−−→GAi
for each
i ∈I.
(3) G has the unique (E, M)-diagonalization property, i.e., whenever X
f
−→GA
and X
e
−→GB are G-structured arrows with (e, B) ∈E, and M = (A
mi
−−→Ai)I
and S = (B
fi
−−→Ai)I are A-sources with M ∈M, such that (Gmi) ◦f = (Gfi) ◦e
for each i ∈I, then there exists a unique diagonal, i.e., an A-morphism B
d
−→A
with f = Gd ◦e and S = M ◦d, which will be expressed (imprecisely) by saying
that the following diagram commutes:
X
e
/
f

GB
Gd
|xxxxxxxx
Gfi

GA
Gmi
/ GAi
17.4 REMARKS
(1) A category A is an (E, M)-category if and only if the identity functor on A is an
(E, M)-functor (provided that we identify each A-morphism A
e
−→B with the idA-
structured arrow (e, B)). Hence (E, M)-categories can be considered as special cases
of (E, M)-functors.
18th January 2005

292
Factorization Structures
[Chap. IV
(2) The dual of a factorization structure on G is a factorization structure on Gop, hence
it concerns factorizations of G-costructured sinks.
(3) A functor G is called an (E, −)-functor provided that there exists some M for which
G is an (E, M)-functor. Analogously for (−, M)-functors.
(4) Whereas every category is an (E, M)-category for suitably chosen E and M, a
functor is an (E, M)-functor for suitably chosen E and M if and only if it is an
adjoint functor (cf. 18.3).
17.5 EXAMPLES
(1) The forgetful functor U : Top →Set is a (Generating, Initial Mono-Source)-functor.
The desired factorizations of U-structured sources of the form (X
fi
−−→(Xi, τi))I
can be obtained in two steps: First, let X
fi
−−→Xi = X
e
−→Y
mi
−−→Xi be an
(Epi, Mono-Source)-factorization in Set. Second, let τ be the initial topology on Y
with respect to the mi and τi. Then
X
fi
−−→(Xi, τi) = X
e
−→(Y, τ)
mi
−−→(Xi, τi)
provides a factorization with the desired properties. By using similar arguments, U
can be seen to be an (Extremally Generating, Mono-Source)-functor and a (Bijection,
Initial Source)-functor.
(2) The forgetful functor U : Grp →Set is an (Extremally Generating, Mono-Source)-
functor. (Recall that X
e
−→UG is extremally generating if and only if the set e[X]
generates the group G in the familiar algebraic sense.) The desired factorizations of
U-structured sources (X
fi
−−→UGi)I can be obtained by either of the following two
constructions, each being of independent interest:
(a) Let X
u
−→UF be a universal arrow in Grp. Then each fi can be uniquely
extended to a homomorphism F
fi
−−→Gi. Let
F
fi
−−→Gi = F
e
−→G
mi
−−→Gi,
i ∈I,
be an (Epi, Mono-Source)-factorization of the source (fi)I in the category Grp.
Then the factorization
X
fi
−−→UGi = X
Ue◦u
−−−−→UG
Umi
−−−→UGi,
i ∈I,
has the desired properties.
(b) Form the cartesian product conglomerate Q
I Gi and consider this as a (possibly
illegitimate) group by deﬁning the operation coordinate wise. [That is, the mem-
bers of Q
I Gi are functions x : I →S Gi with x(i) ∈Gi, and (x·y)(i) = x(i)·y(i)
and x−1(i) = (x(i))−1.] Deﬁne a function f : X →Q
I Gi by (f(x))(i) = fi(x).
Then f[X] is a subset of Q
I Gi, and it clearly generates a (small) subgroup
H of the (possibly illegitimate) group Q
I Gi. Thus the codomain restriction
18th January 2005

Sec. 17]
Factorization structures for functors
293
e : X →UH of f together with the functions mi : H →Gi, deﬁned by
mi(x) = x(i), form the desired factorization.68
Observe that the second construction is more elementary than the ﬁrst one, even
though it uses the generalized group Q
I Gi (which often fails to be a group because
it often fails to be a set).
(3) The forgetful functors U of many familiar constructs are (Extremally Generating,
Mono-Source)-functors, e.g., those of Top, Haus, Pos, Rel, Vec, Grp, Rng, Sgr,
Mon, Lat, Boo, HComp, Cat, and Alg(Ω). In each case a construction anal-
ogous to one of those given in (1) and (2) yields the desired factorizations. The
diagonalization property holds automatically: cf. Theorem 17.10.
17.6 THEOREM
If G is an (E, M)-functor, then each member of E is generating.
A 15.4
17.7 PROPOSITION
If G : A →B is an (E, M)-functor, then the following hold:
(1) (E, M)-factorizations are essentially unique,
(2) M determines E via the unique diagonalization property,
(3) if A is an ( ˜E, M)-category, (e, A) ∈E and A
˜e
−→B ∈˜E, then ((G˜e) ◦e, B) ∈E.
A 15.5
17.8 REMARK
Even though (E, M)-functors are analogous to (E, M)-categories, not all of the prop-
erties of (E, M)-categories carry over to (E, M)-functors.
In particular, for (E, M)-
functors
(1) M need not be determined by E [cf. 15.5(9)].
[The canonical forgetful functor
U : Top →Set is simultaneously an (E, Mi)-functor for i = 1, 2, where E consists
of all U-structured arrows (e, A) with e bijective and A discrete, M1 consists of all
sources in Top, and M2 consists of all sources in Top with discrete domain.]
(2) Extremal mono-sources need not all belong to M[cf. 15.5(2)]. [In (1) above, there are
limit sources — even isomorphisms (considered as 1-sources) — that do not belong
to M2.]
(3) M need not be closed under composition [cf. 15.5(4)]. [If U and E are as in (1)
above, and M3 = M2 ∪{Q ,→R, R ,→C}, then U is an (E, M3)-functor, but
Q ,→C does not belong to M3.]
68If I is a set, then the entire construction above is just the image factorization of f = ⟨fi⟩(as f = m◦e)
composed with the product source (πi), i.e., mi = πi ◦m. Even if I is a proper class, the construction
could be performed in the quasicategory of “large groups”, but in order to introduce this entity we
would need to enrich our foundations.
18th January 2005

294
Factorization Structures
[Chap. IV
17.9 PROPOSITION
If G is an (E, Mono-Source)-functor, then E consists precisely of those structured arrows
that are extremally generating.
A 15.8(1)
17.10 THEOREM
If a functor G has (Generating, Mono-Source)-factorizations, then G is an
(Extremally Generating, Mono-Source)-functor.
A 15.10
FACTORIZATION STRUCTURES AND LIMITS
17.11 THEOREM
Let A be a strongly complete category and let A
G
−−→X be a functor that preserves strong
limits.
(1) If G is extremally co-wellpowered or if A has a coseparator, then G is an (ExtrGen,
Mono-Source)-functor.
(2) If G is faithful and concretely co-wellpowered, then G is a (ConGen, Initial Mono-
Source)-functor.
Proof:
(1). In case G is extremally co-wellpowered, the result is a straightforward generaliza-
tion of Theorem 15.25(1). In case A has a coseparator C, we conclude as above
that G has (ExtrGen, Mono-Source)-factorizations for set-indexed G-structured
sources. As in Theorem 15.10 this implies that G has the (ExtrGen, Mono-Source)-
diagonalization property (for arbitrary sources). Let X be an arbitrary X-object.
For each G-structured morphism X
h
−→G(Chom(X,GC)) select an (ExtrGen, Mono)-
factorization:
X
h
−→G(Chom(X,GC)) = X
gh
−−→GAh
Gmh
−−−−→G(Chom(X,GC)).
Likewise for each G-structured morphism X
k
−→G(C∅) select an (ExtrGen, Mono)-
factorization:
X
k
−→G(C∅) = X
gk
−−→GAk
Gmk
−−−−→G(C∅).
Then M = {(gh, Ah)
 h ∈hom(X, G(Chom(X,C)))} ∪{(gk, Ak)
 k ∈hom(X, G(C∅))}
is a set. Next we show that every G-structured morphism X
f
−→GA has an
(M, Mono)-factorization. Analogous to Theorem 15.25(1) this implies that G is
(ExtrGen, Mono Source)-factorizable. Let X
f
−→GA = X
e
−→GB
Gm
−−−→GA be a
(Gen, Mono)-factorization. Since C is a coseparator, there exists a monomorphism
B
n
−→ChomA(B,C). In case homA(B, C) = ∅, choose k = Gn ◦e. Then there exists
18th January 2005

Sec. 17]
Factorization structures for functors
295
a diagonal Ak
d
−→B such that the diagram
X
gk
/
e

GAk
Gd
{wwwwwwwww
Gmk

GB
Gn
/ G(C∅)
commutes. Since mk is a monomorphism, so is d. Thus
X
f
−→GA = X
gk
−−→GAk
G(m◦d)
−−−−−→GA
is an (M, Mono)-factorization. In case homA(B, C) ̸= ∅, there exists a monomor-
phism ChomA(B,C)
˜n
−→ChomX(X,GC), since the map
ϕ : homA(B, C) →homX(X, GC),
deﬁned by ϕ(ℓ) = Gℓ◦e, is injective (cf. Exercise 10K). By choosing h = G(˜n◦n)◦e
and proceeding as before, one obtains an (M, Mono)-factorization of X
f
−→GA.
(2). This follows as a ready adaptation of the proof of Theorem 15.25 since regular
monomorphisms are G-initial [cf. Proposition 8.7(3)].

FACTORIZATIONS OF STRUCTURED 2-SOURCES
17.12 PROPOSITION
If G-structured 2-sources have (Generating, −)-factorizations,
then G preserves
mono-sources.
Proof: Let A
G
−−→X be a functor. Let M = (A
mi
−−→Ai)I be a mono-source in A, and
let X
r1 /
r2 / GA be a pair of X-morphisms with GM ◦r1 = GM ◦r2. If
X
ri
−−→GA = X
e
−→GB
Gsi
−−−→GA,
i ∈{1, 2}
is an (Generating, −)-factorization of the structured 2-source (X
ri
−−→GA)i∈{1,2}, then
G(mi ◦s1) ◦e = Gmi ◦Gs1 ◦e = Gmi ◦r1 = Gmi ◦r2 = Gmi ◦Gs2 ◦e = G(mi ◦s2) ◦e
for each i ∈I. Since (e, B) is generating, this implies that mi ◦s1 = mi ◦s2 for each
i ∈I. Since (A
mi
−−→Ai)I is a mono-source, this implies that s1 = s2. Thus r1 = r2.

17.13 PROPOSITION
If G : A →B is a functor such that G-structured 2-sources have (Generating, Mono-
Source)-factorizations, then the following conditions are equivalent:
(1) G reﬂects isomorphisms,
18th January 2005

296
Factorization Structures
[Chap. IV
(2) each mono-source is G-initial,
(3) G is faithful and reﬂects extremal epimorphisms,
(4) G reﬂects limits,
(5) G reﬂects equalizers.
Proof: (1) ⇒(2). Let M = (A
mi
−−→Ai)I be a mono-source in A, let S = (B
fi
−−→Ai)I
be a source in A, and let GB
f
−→GA be an B-morphism with GS = GM ◦f. Consider
a (Generating, Mono-Source)-factorization:
GB
GB
f
"F
F
F
F
F
F
F
F
idGB
<x
x
x
x
x
x
x
x
g
/ GC
Gm
O
Gn

GA
of the G-structured 2-source GB
id
←−−GB
f
−→GA. Then G(M ◦n) ◦g = G(S ◦m) ◦g
implies that M ◦n = S ◦m. Thus, since (n, m) and M are mono-sources, this implies
that m is a monomorphism. Hence, by Proposition 17.12, Gm is a monomorphism and a
retraction, so an isomorphism. By (1), m is an isomorphism. Thus f = n◦m−1 : B →A
is an A-morphism with Gf = f and S = M ◦f. It is the unique morphism with these
properties, since M is a mono-source.
(2) ⇒(3).
By Proposition 10.60 G is faithful and reﬂects isomorphisms.
Let e be
an A-morphism such that Ge is an extremal epimorphism.
By faithfulness, e is an
epimorphism. If e = m ◦g is a (−, Mono)-factorization of e, then, by Proposition 17.12,
Ge = Gm ◦Gg is a (−, Mono)-factorization of Ge. Hence Gm is an isomorphism in B.
Thus m is an isomorphism in A.
(3) ⇒(1).
G reﬂects extremal epimorphisms and, by faithfulness, monomorphisms.
Hence, by the dual of Proposition 7.66, G reﬂects isomorphisms.
(2) ⇒(4). By Proposition 10.60 G is faithful. Let D : I →A be a diagram and let
L = (L
ℓi
−−→Di)I be a source in A such that GL is a limit of G ◦D. By faithfulness L
is a natural source for D. Let S = (A
fi
−−→Di)I be an arbitrary natural source for D.
Then GS is a natural source for G ◦D. Hence there exists a B-morphism GA
g
−→GL
with GS = GL ◦g. Since GL, being a limit, is a mono-source, the faithfulness of G
implies that L is a mono-source; hence it is G-initial. Thus there exists an A-morphism
A
f
−→L with Gf = g and S = L◦f. Since L is a mono-source, f is uniquely determined
by the latter property. Hence L is a limit of D.
(4) ⇒(5). Obvious.
(5) ⇒(1). Immediate, since a morphism A
f
−→B is an equalizer of (idB, idB) if and
only if f is an isomorphism.

18th January 2005

Sec. 17]
Factorization structures for functors
297
17.14 REMARK
Observe that in the diagram below, all arrows indicate implications that hold without any
assumptions, whereas those labeled 1, 2, 3, and 4 are equivalences under the hypothesis
of the preceding Proposition (cf. 17G).
monosources
are initial
reﬂects limits
reﬂects equalizers
faithful
reﬂects
isomorphisms
faithful and
reﬂects extremal
epimorphisms
?
?
-
?

6
1
2
3
4
17.15 PROPOSITION
A functor A
G
−−→X is faithful if and only if for each A-object A the G-structured source
(GA
id
←−−GA
id
−−→GA) is (Generating, Initial Source)-factorizable.
Proof: If G is faithful, then
GA
GA
idGA
"E
E
E
E
E
E
E
E
idGA
<y
y
y
y
y
y
y
yidGA / GA
GidA
O
GidA

GA
is, by Proposition 8.16(3) and Proposition 10.59, a (Generating, Initial Source)-factori-
zation. Conversely, if A
r /
s / B is a pair of A-morphisms with Gr = Gs and
GA
GA
idGA
"F
F
F
F
F
F
F
F
idGA
<y
y
y
y
y
y
y
y
g
/ GC
Gm
O
Gn

GA
is a (Generating, Initial Source)-factorization, then there exists an A-morphism
A
g
−→C with Gg = g and m ◦g = idA = n ◦g.
Since (g, C) is generating, the
18th January 2005

298
Factorization Structures
[Chap. IV
equalities G(r ◦m) ◦g = Gr ◦Gm ◦g = Gr = Gs = Gs ◦Gn ◦g = G(s ◦n) ◦g imply
that r ◦m = s ◦n. Thus r = r ◦idA = r ◦m ◦g = s ◦n ◦g = s ◦idA = s.

17.16 COROLLARY
If G-structured 2-sources are (Generating, Initial Source)-factorizable, then G is faith-
ful.

Suggestions for Further Reading
Tholen, W. Factorizations of cones along a functor. Quaest. Math. 2 (1977): 335–353.
Herrlich, H., and G. E. Strecker. Semi-universal maps and universal initial completions.
Paciﬁc J. Math. 82 (1979): 407–428.
Nakagawa, R. A note on (E, M)-functors. Springer Lect. Notes Math.
719 (1979):
250–258.
EXERCISES
17A. A Characterization of Generating Arrows
Let (A, U) be a concrete category that has concrete equalizers. Show that a structured
arrow is
(a) generating if and only if it does not factor through a non-isomorphic regular mono-
morphism,
(b) concretely generating if and only if it does not factor through a non-isomorphic
embedding,
(c) extremally generating if and only if it does not factor through a non-isomorphic
monomorphism.
17B. Composites of (Generating,−)-Factorizable Functors
Show that whenever A
F
−−→B is (Generating, Mono-Source)-factorizable and B
G
−−→C
is (Generating, −)-factorizable, then A
G◦F
−−−→C is (Generating, Mono-Source)-factoriza-
ble.
Conclude that a functor with an (Epi, Mono-Source)-factorizable domain is (Generating,
Mono-Source)-factorizable if and only if it is (Generating,−)-factorizable.
17C. Existence of Factorization Structures
Let (A, U) be a concrete category over X. Show that
(a) If (A, U) has concrete equalizers and concrete intersections, then structured arrows
have (Extremally Generating, Mono)-factorizations.
18th January 2005

Sec. 17]
Factorization structures for functors
299
(b) If X is strongly complete and if U lifts limits and is concretely co-wellpowered, then
U is a (Concretely Generating, Initial Mono-Source)-functor.
17D. Uniqueness of Diagonals
Show that a functor is an (E, M)-functor if it has (E, M)-factorizations and the (not
necessary unique) (E, M)-diagonalization property.
17E. Properties of (E, M)-Functors
Consider the following properties of an (E, M)-functor A
G
−−→B:
(1) If GA
e
−→GA′ is a B-morphism and (e, A′) belongs to E, then there exists an
A-morphism A
e
−→A′ with Ge = e.
(2) E is closed under composition.
(3) (idGA, A) ∈E for each A-object A.
(4) Any source in M is G-initial.
(5) A source (A
mi
−−→Ai)I belongs to M if and only if for every commutative diagram
B
e
/
f

GA
Gfi

GA
Gmi
/ GAi
with (e, A) ∈E there exists a unique diagonal.
Show that
(a) (1) implies (2), but not conversely.
(b) (2) implies (3) if each A-object is the codomain of a member of E.
(c) (3) and (4) are equivalent.
(d) (4) implies (5), but not conversely.
(e) (5) implies that every A-isomorphism, considered as source, belongs to M.
(f) (3) implies that G is faithful and that all extremal mono-sources belong to M.
17F. Factorizations of Structured 2-Sources
Show that
(a) If G has (Generating, Mono-Source)-factorizations for structured 2-sources, then G
has the unique (Extremally Generating, Mono-Source)-diagonalization property (for
all structured sources).
(b) If G has (Concretely Generating, Initial Mono-Source)-factorizations for structured
2-sources, then G has the unique (Concretely Generating, Initial Mono-Source)-
diagonalization property.
18th January 2005

300
Factorization Structures
[Chap. IV
(c) If G has the (E, Extremal Mono-Source)-diagonalization property for structured
2-sources, then each (e, A) in E is generating.
(d) If G has the (E, Mono-Source)-diagonalization property for structured 2-sources,
then each (e, A) in E is extremally generating.
(e) If G is faithful and G has the (E, Initial Mono-Source)-diagonalization property for
2-sources, then each (e, A) in E is concretely generating.
17G. Re: Remark 17.14
Show that
(a) A functor need not be faithful even though it reﬂects every type of monomorphism
and every type of epimorphism introduced above (extremal, regular, strict, strong,
section, retraction, isomorphism, etc.). [Hint: Consider the functor G from 0 ⇒1
to 0 →1 with G(0) = 0 and G(1) = 1.]
(b) A faithful functor that reﬂects isomorphisms and extremal epimorphisms need not
reﬂect equalizers. Hint: Consider the inclusion functor from
0
>
>
>
>
>
>
>
'N
N
N
N
N
N
N
N
N
N
N
N
N
N
2
// 3
1
@       7p
p
p
p
p
p
p
p
p
p
p
p
p
p
into
0
>
>
>
>
>
>
>
'N
N
N
N
N
N
N
N
N
N
N
N
N
N

2
// 3
1
@       7p
p
p
p
p
p
p
p
p
p
p
p
p
p
(c) A functor that reﬂects equalizers need reﬂect neither limits nor regular monomor-
phisms. Hint: For limits consider the inclusion functor from the discrete category
with objects 0 and 1 into 0 →1; for regular monomorphisms consider the inclusion
functor from
0

1
into
0

>
>
>
>
>
>
>
1
// 2
(d) If a functor A
G
−−→B reﬂects limits, then mono-sources in A need not be G-initial.
Hint: Consider the inclusion functor from
0
>
>
>
>
>
>
>
1

2
into
0
/
>
>
>
>
>
>
>
1

2
(e) If mono-sources are G-initial, then G need not reﬂect extremal epimorphisms. Hint:
Consider the inclusion functor from
0

1
into
2
//
>
>
>
>
>
>
>
0

1
18th January 2005

Sec. 17]
Factorization structures for functors
301
* 17H. A Generalization of Theorem 17.11
Let A be a strongly complete category with a coseparating set. Show that every functor
A
G
−−→B that preserves strong limits is an (ExtrGen, Mono-Source)-functor.
17I.
Prove that if A has equalizers and intersections and G : A →B preserves these lim-
its, then G-structured arrows have (Extremal Generating, Mono)-factorizations.
Cf.
Theorem 14.19.
17J.
Let (A, U) be a concrete category over a strongly complete category X. Show that if
U is concretely co-wellpowered and preserves and detects limits, then U is (Concretely
Generating, Initial Mono-Source)-factorizable, thus a (−, −)-functor.
17K.
Let (A, U) be a ﬁbre-small, transportable concrete category over a wellpowered category
X.
Prove that if (A, U) has concrete limits and bounded generation, then U is an
(Extremal Generating, Mono-Source)-functor.
17L.
Show that the nonfull embedding
3

:::
1 :::
2

0
 
/
3
2
1
0
satisﬁes all of the conditions of Proposition 17.13 except condition (2). Cf. also Propo-
sition 10.60.
18th January 2005


Chapter V
ADJOINTS AND MONADS
18th January 2005
303


18 Adjoint functors
Perhaps the most successful concept of category theory is that of adjoint functor. Adjoint
functors occur frequently in many branches of mathematics and the “adjoint functor
theorems” have a surprising range of applications.
18.1 DEFINITION
A functor G: A →B is said to be adjoint provided that for every B-object B there
exists a G-universal arrow with domain B (cf. 8.30).
Dually, a functor G: A →B is said to be co-adjoint provided that for every B-object
B there exists a G-co-universal arrow with codomain B (cf. 8.40).
18.2 EXAMPLES
(1) A subcategory A of a category B is (co)reﬂective in B if and only if the associated
inclusion A ,→B is a (co-)adjoint functor [cf. 8.31(2) and 8.41(1)].
(2) The forgetful functor U of a concrete category (A, U) over X is adjoint if and only
if for each X-object X there exists a free object over X. In particular, the forgetful
functors:
(a) of the constructs Rel, Top, and Alg(Σ) are both adjoint and co-adjoint (cf. 8.23
and 8.41),
(b) of the constructs Vec, Grp, Pos, and Cat are adjoint but not co-adjoint,
(c) of the constructs CLat and CBoo are neither adjoint nor co-adjoint,
(d) of the concrete categories of the form Spa(T) are both adjoint and co-adjoint,
(e) TopGrp →Grp, TopGrp →Top, and TopGrp →Set are adjoint.
(3) O: Ban →Set is adjoint, but U : Ban →Set is not [cf. 8.23(12)].
(4) Each equivalence is adjoint and co-adjoint.
(5) If A is a category, then the unique functor A →1 is adjoint if and only if A has an
initial object [cf. 8.31(3)].
(6) A hom-functor hom(A, −): A →Set is adjoint if and only if there exist arbitrary
copowers of A in A [cf. 8.31(4)].
(7) For each set M, the endofunctor (M × −) : Set →Set that sends A
f
−→B to
M × A
idM×f
−−−−−→M × B is co-adjoint. “Evaluation” ev : M × AM →A deﬁned by
(m, f) 7→f(m) is an (M × −)-co-universal arrow for A (cf. §27).
(8) The minimal realization functor M : Beh →Autr is adjoint [cf. 8.31(5)].
305

306
Adjoints and Monads
[Chap. V
18.3 PROPOSITION
For a functor G: A →B the following conditions are equivalent:
(1) G is adjoint,
(2) G has (Generating69,−)-factorizations,
(3) G is an (E, M)-functor for some E and M,
(4) G is a (Universal69, Source)-functor.
Proof: (1) ⇒(4) ⇒(3). Obvious.
(3) ⇒(2). Theorem 17.6.
(2) ⇒(1).
For any B-object B let B
fi
−−→GAi = B
e
−→GA
Gmi
−−−→GAi be a
(Generating,−) factorization of the G-structured source that consists of all G-structured
arrows (fi, Ai) with domain B. Then the G-structured arrow (e, A) is universal for B.
18.4 PROPOSITION
If A is an (Epi, M)-category, then for any functor G : A →B the following are equiv-
alent:
(1) G is adjoint,
(2) G is a (Generating,M)-functor.
Proof: (1) ⇒(2).
Let (B
fi
−−→GAi)I be a G-structured source.
If B
u
−→GA is
a universal arrow, then for each i ∈I there exists an A-morphism A
fi
−−→Ai with
fi = Gfi ◦u.
If A
fi
−−→Ai = A
e
−→A
mi
−−→Ai is an (Epi,M)-factorization, then
B
fi
−−→GAi = B
(Ge)◦u
−−−−−→GA
Gmi
−−−→GAi is a (Generating,M)-factorization. To show
the (Generating,M)-diagonalization property, consider a commutative diagram
B
g
/
f

GA
Gfi

GA′
Gmi
/ GAi
(∗)
with (g, A) generating and (A′
mi
−−→Ai)I in M. If B
u
−→GA is a universal arrow, then
there exist A-morphisms A
f
−→A′ and A
g
−→A with f = Gf ◦u and g = Gg ◦u. This
implies that mi ◦f = fi ◦g for each i ∈I. Since (g, A) is generating, g must be an
epimorphism. Hence there exists an A-morphism A
d
−→A′ that makes
A
g
/
f

A
d
~~~~~~~~~
fi

A′
mi / Ai
69“Generating” in this context denotes the class of all generating G-structured arrows; likewise, “Uni-
versal” denotes the class of all universal G-structured arrows.
18th January 2005

Sec. 18]
Adjoint functors
307
commute. Obviously, d is a diagonal for (∗). Uniqueness follows from the fact that (g, A)
is generating.
(2) ⇒(1). Proposition 18.3.

PROPERTIES OF ADJOINT FUNCTORS
18.5 PROPOSITION
If A
G1
−−→B and B
G2
−−→C are adjoint, then so is A
G2◦G1
−−−−−→C.
Proof: If C
u
−→G2B is universal for C, and B
v
−→G1A is universal for B, then
C
(G2v)◦u
−−−−−−→G2G1A is universal for C.

18.6 PROPOSITION
Adjoint functors preserve mono-sources.
Proof: Let G: A →B be an adjoint functor, let S = (A
mi
−−→Ai)I be a mono-source in
A, and let B
r /
s / GA be a pair of B-morphisms with GS ◦r = GS ◦s. If B
u
−→GA is a
universal arrow, then there exist A-morphisms A
r /
s
/ A with r = Gr◦u and s = Gs◦u.
This implies that G(S ◦r) ◦u = G(S ◦s) ◦u; hence S ◦r = S ◦s, so that r = s, and thus
r = s.

18.7 COROLLARY
Embeddings of reﬂective subcategories preserve and reﬂect mono-sources.

18.8 REMARK
(1) As shown in Example 7.33(5) embeddings of full subcategories need not preserve
monomorphisms, hence they need not preserve mono-sources.
(2) Full, reﬂectiveembeddings preserve extremal monomorphisms. (Cf. 7F.)
18.9 PROPOSITION
Adjoint functors preserve limits.
Proof: Let G: A →B be an adjoint functor, let D: I →A be a diagram, and let
L = (L
ℓi
−−→Di)I be a limit of D. Then GL is a natural source for G ◦D. Let S =
(B
fi
−−→GDi)I be a natural source for G ◦D. If B
u
−→GA is a universal arrow for B,
then for each i ∈I there exists an A-morphism fi : A →Di with fi = Gfi ◦u. Since
(u, A) is generating, the source S = (A
fi
−−→Di) is natural for D. Hence there exists
an A-morphism f : A →L with S = L ◦f. Consequently, f = Gf ◦u : B →GL is a
B-morphism with S = GL ◦f. Uniqueness follows from the fact that, by Proposition
18.6, GL is a mono-source.

18th January 2005

308
Adjoints and Monads
[Chap. V
18.10 COROLLARY
If (A, U) is a concrete category over X that has free objects, then the following hold:
(1) all limits in (A, U) are concrete,
(2) U preserves and reﬂects mono-sources,
(3) if (A, U) is ﬁbre-small and transportable, then wellpoweredness of X implies well-
poweredness of A.

18.11 PROPOSITION
If G : A →B is an adjoint functor and A is co-wellpowered, or extremally co-well-
powered, then so is G.
Proof: Immediate from Proposition 8.36.

ADJOINT FUNCTOR THEOREMS
We have seen above that adjoint functors preserve limits. Next we will see that this
property in conjunction with certain completeness and smallness conditions actually
characterizes such functors. We have seen before that both general constructions and
smallness conditions are essential ingredients of category theory. The adjoint functor
theorems of this section are prime examples of this fact. Below we will see that each of
them contains a completeness condition and a smallness condition, neither of which can
be eliminated.
18.12 ADJOINT FUNCTOR THEOREM
A functor G : A →B, whose domain A is complete, is adjoint if and only if G satisﬁes
the following conditions:
(1) G preserves small limits,
(2) for each B-object B there exists a G-solution set, i.e., a set-indexed G-structured
source (B
fi
−−→GAi)I through which each G-structured arrow factors (in the sense
that given any B
f
−→GA, there exists a j ∈I and a Aj
g
−→A in A such that
B
fj /
f
!C
C
C
C
C
C
C
C
GAj
Gg

GA
commutes).
Proof: If G is an adjoint functor, then, by Proposition 18.9, G preserves limits.
If
B
u
−→GA is a G-universal arrow for B, then the G-structured source SB consisting
of (u, A) alone is a G-solution set for B. Hence conditions (1) and (2) are necessary.
18th January 2005

Sec. 18]
Adjoint functors
309
To show the converse, suppose that (1) and (2) are satisﬁed.
Let B be a B-object
and let SB = ((ui, Ai))I be a G-solution set for B.
If (P, πi)I is a product of the
family (Ai)I in A, then by (1) (GP, Gπi)I is a product of (GAi)I in B.
Thus u =
⟨ui⟩: B →GP is a G-structured arrow such that the G-structured source, consisting
of (u, P) alone, is a G-solution set for B. Consider the family (gj)J consisting of all
A-morphisms P
gj
−−→P with (Ggj) ◦u = u.
If E
e
−→P is a multiple equalizer of
(gj)J, then by (1) GE
Ge
−−→GP is a multiple equalizer of (Ggj)J.
Thus there is a
B-morphism B
v
−→GE with u = Ge ◦v. The G-structured source, consisting of the
G-structured arrow (v, E) alone, is a G-solution set for B. Thus to prove that (v, E) is
a G-universal arrow, it need only be shown that (v, E) is G-generating. Let E
r /
s / A
be a pair of A-morphisms with Gr ◦v = Gs ◦v. If E
e
−→E is an equalizer of r and s,
then by (1) GE
Ge
−−→GE is an equalizer of Gr and Gs. Thus there exists a B-morphism
B
f
−→GE with v = Ge ◦f. Since ((u, P)) is a G-solution set for B, there exists an
A-morphism P
g
−→E with f = Gg ◦u. Hence P
e◦e◦g
−−−−→P is an A-morphism with
G(e ◦e ◦g) ◦u = G(e ◦e) ◦f = Ge ◦v = u. Therefore there exists some j ∈J with
gj = e ◦e ◦g. There also exists some k ∈J with gk = idP . Thus gj ◦e = gk ◦e implies
e ◦e ◦g ◦e = e. Since e is a monomorphism, this implies that e ◦g ◦e = idE. Thus e
is a retraction, which by Proposition 7.54 implies that r = s. Consequently, (v, E) is a
G-universal arrow for B. Thus G is an adjoint functor.

18.13 EXAMPLES
The following functors have complete domains and preserve limits, but fail to be adjoint:
(1) the unique functor Ordop →1, where Ord is the partially ordered class of all ordinal
numbers, considered as a category,
(2) the forgetful functors CLat →Set and CBoo →Set [cf. 8.23(7)].
Whereas the “limit-preservation” condition in the above theorem is usually easy to check,
the “solution set” condition is often rather cumbersome, particularly since the theorem
gives no idea of how to ﬁnd such a set. In the next results, attention is focused on
“canonical” candidates for solution sets.
18.14 THEOREM
If A is strongly complete and (extremally) co-wellpowered, then the following conditions
are equivalent for any functor A
G
−−→B:
(1) G is adjoint,
(2) G preserves small limits and is (extremally) co-wellpowered.
Moreover the implication (2) ⇒(1) holds without the assumption that A be (extremally)
co-wellpowered.
Proof: (1) ⇒(2). Immediate from Propositions 18.9 and 18.11.
(2) ⇒(1). Immediate from Proposition 18.3 and Theorem 17.11(1).

18th January 2005

310
Adjoints and Monads
[Chap. V
18.15 COROLLARY
Fibre-small, concretely co-wellpowered constructs that are concretely complete have free
objects.

An adjoint functor is co-wellpowered and preserves small limits
18.16 EXAMPLES
The conditions in the above theorem are carefully balanced as the following examples
show:
1. There exist full embeddings A
G
−−→B such that A is complete and co-wellpowered
and G preserves limits and is extremally co-wellpowered, but G is neither adjoint
nor co-wellpowered. [Let C be the partially ordered class of all ordinals, considered
as a category, let A = Cop, let B be obtained from A by adding an initial object,
and let A
G
−−→B be the inclusion.]
2. There exist strongly complete categories A that are not co-wellpowered, even
though the unique functor A
G
−−→1 is adjoint and co-wellpowered.
[Consider
Λ-CCPos.]
For suitable categories A the somewhat cumbersome solution set condition completely
vanishes, as the following result shows:
18.17 SPECIAL ADJOINT FUNCTOR THEOREM
If A is a strongly complete category with a coseparator, then for any functor G : A →B,
the following conditions are equivalent:
(1) G is adjoint,
18th January 2005

Sec. 18]
Adjoint functors
311
(2) G preserves strong limits.
Proof: Immediate from Theorem 17.11, Proposition 18.3, and Proposition 18.9.

18.18 REMARK
The categories Set, Vec, Pos, Top, and HComp are complete, wellpowered, and have
coseparators (cf. 7.18), so that the above theorem applies to them. Since many familiar
categories have separators but fail to have coseparators, the dual of the Special Adjoint
Functor Theorem is applicable even more often than the theorem itself.
18.19 CONCRETE ADJOINT FUNCTOR THEOREM
Let G : (A, U) →(B, V ) be a concrete functor.
If (A, U) is complete, wellpowered,
co-wellpowered, and has free objects, then G is adjoint if and only if G preserves small
limits.
Proof: As before, it suﬃces to show that the above assumptions imply that G is co-
wellpowered.
Let B be a B-object and let V B
u
−→UAB be a (ﬁxed) universal U-
structured arrow with domain V B.
It suﬃces to show that for every generating G-
structured arrow B
g
−→GA, A can be considered (via a suitable epimorphism) as a
quotient-object of AB. By universality there exists a unique A-morphism g : AB →A
such that the triangle
V B
u
/
V g
&M
M
M
M
M
M
M
M
M
M
M
UAB
Ug

V GA = UA
commutes. Since (g, A) is a generating G-structured arrow, g is an epimorphism; hence
A is a quotient-object of AB.

18.20 REMARKS
(1) Faithfulness of U is not needed for the above result, but faithfulness of V is essential.
(2) If (A, U) and (B, V ) satisfy the assumptions of the above result and if V reﬂects
limits, then every concrete functor (A, U) →(B, V ) preserves limits, and hence
must be adjoint. Similar situations will be investigated in §23. (Observe that the
reﬂection of limits is typical for forgetful functors of “algebraic” concrete categories.)
Suggestions for Further Reading
Kan, D. N. Adjoint functors. Trans. Amer. Math. Soc. 87 (1958): 294–329.
Freyd, P. Functor theory. Ph. D. dissertation, Princeton University, 1960.
Felscher, W. Adjungierte Funktoren und primitive Klassen. Sitzungsberichte Heidel-
berger Akad. Wiss. 4 (1965): 447–509.
18th January 2005

312
Adjoints and Monads
[Chap. V
Ehresmann, C. Sur l’existence de structures libres et de foncteurs adjoints.
Cahiers
Topol. Geom. Diﬀ. 9 (1967): 33–180.
EXERCISES
18A. Functors that are Simultaneously Adjoint and Co-adjoint
Let A
G
−−→B be a functor. Show that
(a) If G is an equivalence then G is adjoint and co-adjoint.
(b) If G is adjoint and co-adjoint and A = B = Set, then G is an equivalence.
(c) If A and B are monoids, considered as categories, then G is adjoint iﬀG is co-adjoint.
(d) If A has an initial and a terminal object and B = 1, then G is adjoint and co-adjoint.
(e) If A = 1 and G maps the single object of A to a zero object in B, then G is adjoint
and co-adjoint.
(f) The forgetful functor Top →Set is adjoint and co-adjoint.
(g) The forgetful functor Alg(1) →Set is adjoint and co-adjoint, where the η : X →
(X × N, λ), deﬁned by η(x) = (x, 0) and λ(x, n) = (x, n + 1), are universal arrows,
and the ε : (XN, µ) →X, deﬁned by ε(xn) = x0 and µ(xn) = (xn+1) are couniversal
arrows.
(h) If A is small and C is a category that is complete and cocomplete, then the functor
[B, C]
[G,id]
−−−−→[A, C] is adjoint and co-adjoint.
18B. Smallness Conditions For Adjoints
(a) Let A
G
−−→B be a faithful adjoint functor. Show that A is co-wellpowered if and
only if G is co-wellpowered.
(b) Let A
G
−−→B be an adjoint functor such that mono-sources are G-initial. Show that
A is extremally co-wellpowered if and only if G is extremally co-wellpowered.
(c) Show that the unique functor Λ-CCPos →1 is adjoint and co-wellpowered, even
though Λ-CCPos is not co-wellpowered. Cf. Exercise 15D.
18C. Adjoints via Representable Functors
Show that
(a) A functor A
G
−−→Set is adjoint if and only if G is representable by an object for
which arbitrary copowers exist (cf. Exercise 10R).
(b) A functor A
G
−−→B is adjoint if and only if for each B-object B the functor
A
G
−−→B
hom(B,−)
−−−−−−−→Set is representable.
18th January 2005

Sec. 18]
Adjoint functors
313
18D. (Co-)Adjoints and Colimits
(a) Show that a functor Set →A is co-adjoint if and only if it preserves coproducts.
(b) Let A
G
−−→Set be a faithful and representable functor whose domain is a complete,
wellpowered, and co-wellpowered category A. Show that G is adjoint if and only if
A is cocomplete.
18E. Power-Set Functors
Show that the covariant power-set functor P : Set →Set is neither adjoint nor co-
adjoint, but that the contravariant power-set functor Q : Setop →Set is adjoint.
18F. Upper Semicontinuity as Adjointness
Let A be a complete totally ordered set and let R be the ordered set of real numbers.
Let G : A →R be an order-preserving map, considered as a functor. Show that G is
adjoint if and only if G is upper semicontinuous.
18G. Complete Boolean Algebras
Show that (cf. Exercises 8E, 8F, and 10R):
(a) CBoo is complete, well-powered, and extremally co-wellpowered.
(b) CBoo is not cocomplete.
(c) The forgetful functor CBoo −→Set is not adjoint.
18H. Adjoint Functors between Posets
Consider order-preserving functions A
f
−→B between posets as functors and show that
(a) f is adjoint if and only if for each b ∈B, the set { a ∈A
 b ≤f(a) } has a smallest
element.
(b) If A = B = N (with the usual order), then
(1) f is adjoint if and only if it is unbounded.
(2) f is co-adjoint if and only if it is unbounded and f(0) = 0.
(c) If A = B = Z (with the usual order), then f is adjoint if and only if it is co-adjoint.
18I. Stable Epimorphisms and Adjoints
Show that faithful adjoints reﬂect stable epimorphisms.
* 18J. Extremal Monomorphisms and Adjoints
Show that adjoint functors need not preserve extremal monomorphisms.
18K. Compact Categories
A category A is called compact provided that each functor with domain A that pre-
serves colimits is co-adjoint. Prove that
(a) Each cocomplete co-wellpowered category that has a separator is compact.
18th January 2005

314
Adjoints and Monads
[Chap. V
(b) Each compact category is complete. [Hint: For each small diagram D in A the
functor F : A →Setop that assigns to each A-object A the set of all natural sources
for D with domain A preserves colimits. Thus F op is representable.]
18L. Coseparating Sets
(a) Prove that a set S of objects of a category A that has products is an (extremally)
coseparating set for A if and only if every A-object is an (extremal) subobject of
some product of objects in S (cf. Proposition 10.38).
(b) Using (a) prove that the Special Adjoint Functor Theorem (18.17) holds also for all
strongly complete categories A that have a coseparating set.
18th January 2005

19 Adjoint situations
With every adjoint functor A
G
−−→B there can be naturally associated (in an essentially
unique way) a functor B
F
−−→A and two natural transformations idB
η
−→G ◦F and
F ◦G
ε
−→idA. There is an intricate web of relationships between the functors G and F
and the natural transformations η and ε, including an inherent duality, that is largely
responsible for the importance of adjoint functors.
19.1 THEOREM
Let G : A →B be an adjoint functor, and for each B-object B let ηB : B →G(AB) be a
G-universal arrow. Then there exists a unique functor F : B →A such that F(B) = AB
for each B-object B, and idB
η=(ηB)
−−−−−→G ◦F is a natural transformation.
Moreover, there exists a unique natural transformation F ◦G
ε
−→idA that satisﬁes the
following conditions:
(1) G
ηG
−−→GFG
Gε
−−→G = G
idG
−−−→G,
(2) F
Fη
−−→FGF
εF
−−→F = F
idF
−−−→F.
Proof:
(a). The existence of a unique F with the required properties follows analogously to the
proof of Proposition 4.22.
(b). For each A-object A, there exists a unique A-morphism FGA
εA
−−→A such that
GA
ηGA/
idGA
$I
I
I
I
I
I
I
I
I
GFGA
GεA

GA
commutes. Thus if ε = (εA) is a natural transformation from FG to idA, it is the
unique one that satisﬁes (1). To show naturality, consider an A-morphism A
f
−→A′.
Then it follows that G(f ◦εA) ◦ηGA = Gf ◦GεA ◦ηGA = Gf = GεA′ ◦ηGA′ ◦Gf =
GεA′ ◦GFGf ◦ηGA = G(εA′ ◦FGf) ◦ηGA by the naturality of η. Hence f ◦εA =
εA′ ◦FGf.
(c). Since η : idB →GF is natural, we get ηGF ◦η = GFη ◦η. Hence (1) implies that
G(idF ) ◦η = idGF ◦η = GεF ◦ηGF ◦η = GεF ◦GFη ◦η = G(εF ◦Fη) ◦η. Thus
idF = εF ◦Fη, i.e., (2) holds.

19.2 REMARK
Below (cf. 19.7) it is shown that conditions (1) and (2) of Theorem 19.1 play a crucial
role. In particular, given functors A
G
−−→B and B
F
−−→A and natural transformations
idB
η
−→GF and FG
ε
−→idA that satisfy the above conditions, the following hold:
315

316
Adjoints and Monads
[Chap. V
• G is adjoint.
• F is co-adjoint.
• Each B
ηB
−−→G(FB) is a G-universal arrow.
• Each F(GA)
εA
−−→A is an F-co-universal arrow.
19.3 DEFINITION
An adjoint situation (η, ε) : F
 G : A →B consists of functors A
G
−−→B and
B
F
−−→A and natural transformations idB
η
−→GF (called the unit) and FG
ε
−→idA
(called the co-unit) that satisfy the following conditions:
(1) G
ηG
−−→GFG
Gε
−−→G = G
idG
−−−→G,
(2) F
Fη
−−→FGF
εF
−−→F = F
idF
−−−→F.
19.4 EXAMPLES
By Theorem 19.1 every adjoint functor gives rise to an adjoint situation. (Cf. Examples
18.2 of adjoint functors.) In particular:
(1) every embedding A
E
−−→B of a full reﬂective subcategory gives rise to an adjoint
situation (η, ε) : R
 E : A →B, where R is a reﬂector, the ηB’s are A-reﬂection
arrows, and the εA’s are isomorphisms,
(2) every concrete category (A, U) over X with free objects gives rise to an adjoint
situation (η, ε) : F
 U : A →X, where F is called a free functor, the ηX’s are
universal arrows (also called insertions of generators), and each εA expresses A
as a retract of the free object generated by UA,
(3) for each set M, (η, ε) : (M×−)
 hom(M, −) : Set →Set is an adjoint situation,
where (M ×−) is the endofunctor of Example 18.2(7), each B
ηB
−−→hom(M, M ×B)
is deﬁned by (ηB(b))(m) = (m, b), and each M × hom(M, A)
εA
−−→A is deﬁned by
εA(m, f) = f(m).
19.5 REMARK
We have seen that every adjoint functor gives rise to an adjoint situation. Below it will
be shown that
(1) every adjoint situation arises in this way (cf. 19.7),
(2) every adjoint situation (η, ε) : F
 G : A →B is, up to a natural isomorphism,
uniquely determined by G (cf. 19.9).
First, however, we exhibit a duality that is inherent in the concept of adjoint situations.
19.6 DUALITY THEOREM FOR ADJOINT SITUATIONS
If (η, ε) : F
 G : A →B is an adjoint situation, then
(εop, ηop) : Gop
 F op : Bop →Aop is an adjoint situation.
18th January 2005

Sec. 19]
Adjoint situations
317
Proof: If A
G
−−→B and B
F
−−→A are functors, then so are Aop
Gop
−−−→Bop and
Bop
F op
−−−→Aop.
If idB
η
−→GF and FG
ε
−→idA are natural transformations, then
so are GopF op
ηop
−−−→idBop and idAop
εop
−−−→F opGop. If Gε ◦ηG = idG, it follows that
ηopGop ◦Gopεop = idGop, and if εF ◦Fη = idF , it follows that F opηop ◦εopF op = idF op.
19.7 PROPOSITION
If (η, ε) : F
 G : A →B is an adjoint situation, then the following hold:
(1) G is an adjoint functor,
(2) for each B-object B, B
ηB
−−→GFB is a G-universal arrow,
(3) F is a co-adjoint functor,
(4) for each A-object A, FGA
εA
−−→A is a F-co-universal arrow.
Proof: It suﬃces to prove (2), since (2) implies (1), and (3) and (4) follow by the
Duality Theorem 19.6 from (1) and (2). Let B
f
−→GA be a G-structured arrow. Then
the commutative diagram
B
f
/
ηB

GA
ηGA

idGA
$I
I
I
I
I
I
I
I
I
GFB GFf
/ GFGA
GεA
/ GA
shows that FB
εA◦Ff
−−−−−→A is an A-morphism f with f = Gf ◦ηB.
Conversely, if
FB
f
−→A is an A-morphism with f = Gf ◦ηB, then the commutative diagram
FB
FηB
$J
J
J
J
J
J
J
J
J
Ff
'
idB
!
FGFB
FGf
/
εF B

FGA
εA

FB
f
/ A
shows that f = εA ◦Ff.

19.8 REMARKS
(1) Observe that Theorem 19.1 and Proposition 19.7 imply that G : A →B is an adjoint
functor if and only if there exists an adjoint situation (η, ε) : F
 G : A →B.
(2) A functor G : A →B is an equivalence if and only if there exists an adjoint situation
(η, ε) : F
 G : A →B with natural isomorphisms η and ε. Cf. Proposition 6.8.
18th January 2005

318
Adjoints and Monads
[Chap. V
(3) If G : A →B and F : B →A are concrete functors over X, then (F, G) is a Galois
correspondence if and only if there exist concrete natural transformations η and ε
for which (η, ε) : F
 G : A →B is an adjoint situation. (Cf. 6.24 and 6.25.)
19.9 PROPOSITION
Adjoint situations associated with a given adjoint functor G : A →B are essentially
unique, i.e., for each adjoint situation (η, ε) : F
 G : A →B, the following hold:
(1) if (η, ε) : F
 G : A →B is an adjoint situation, then there exists a natural
isomorphism F
τ−→F for which η = Gτ ◦η and ε = ε ◦τ −1G,
(2) if F : B →A is a functor and F
τ−→F is a natural isomorphism, then
(Gτ ◦η , ε ◦τ −1G) : F
 G : A →B is an adjoint situation.
Proof:
(1). By Proposition 19.7, for each B-object B, B
ηB
−−→GFB and B
ηB
−−→GFB are
G-universal arrows for B. Hence by Proposition 8.25 there exists an isomorphism
FB
τB
−−→FB with GτB ◦ηB = ηB.
It follows that F
τ=(τB)
−−−−−→F is a natural
isomorphism with η = Gτ ◦η. For each A-object A the equalities GεA ◦ηGA =
idGA = GεA◦ηGA = GεA◦GτGA◦ηGA = G(εA◦τGA)◦ηGA imply that εA = εA◦τGA.
Hence ε = ε ◦τG.
(2). Straightforward computations show that G(ε ◦τ −1G) ◦(Gτ ◦η)G = idG and that
(ε ◦τ −1G)F ◦F(Gτ ◦η) = idF .

19.10 DEFINITION
Let A
G
−−→B and B
F
−−→A be functors. Then F is called a co-adjoint for G and
G is called an adjoint for F (in symbols: F
 G) provided that there exist natural
transformations η and ε such that (η, ε) : F
 G : A →B is an adjoint situation.
19.11 REMARKS
(1) Every adjoint functor G has, by Theorem 19.1, a co-adjoint F; and any two co-
adjoints F and F of G are, by Proposition 19.9, naturally equivalent. Thus every
adjoint functor has, up to natural equivalence, a unique co-adjoint. Conversely, if a
functor G has a co-adjoint, then, by Proposition 19.7, G is an adjoint functor. Thus
a functor is adjoint if and only if it has a co-adjoint. Moreover, by Proposition 19.7,
the co-adjoint of a functor is a co-adjoint functor.
(2) By duality, a functor is co-adjoint if and only if it has an (essentially unique) adjoint.
A functor F is a co-adjoint for G if and only if G is an adjoint for F. Thus adjoint
functors and co-adjoint functors naturally come in pairs, and these pairs are parts
of adjoint situations.
(3) The reader should be aware that the following alternative terminology is also used:
G is right adjoint = G has a left adjoint = G is adjoint.
F is left adjoint = F has a right adjoint = F is co-adjoint.
18th January 2005

Sec. 19]
Adjoint situations
319
19.12 EXAMPLES
(1) Let A be a reﬂective subcategory of B. Then a functor B
R
−−→A is a co-adjoint for
the inclusion functor A ,→B if and only if R is a reﬂector for A.
(2) Let A be a coreﬂective subcategory of B. Then a functor B
C
−−→A is an adjoint for
the inclusion functor A ,→B if and only if C is a coreﬂector for A.
(3) If a construct (A, U) has free objects, i.e., if U is an adjoint functor, then co-adjoints
for U are the free functors for (A, U).
(4) The discrete functor D : Set →Top is a co-adjoint for the forgetful functor
U : Top →Set, and the indiscrete functor I : Set →Top is an adjoint for U.
(5) If a functor G is an isomorphism, then G−1 is simultaneously an adjoint and a co-
adjoint for G. More generally, for every equivalence A
G
−−→B there exists a functor
B
F
−−→A that is simultaneously an adjoint and a co-adjoint for G. Cf. Proposition
6.8.
(6) Let A be a category with a zero-object. Then the zero-functor 1 →A is simultane-
ously an adjoint and a co-adjoint for the functor A →1. Cf. Exercise 4H(b).
(7) A co-adjoint for the minimal realization functor [cf. 18.2(8)] is the behavior functor
B : Autr →Beh that assigns to each reachable automaton its behavior function
[cf. 8.31(5)].
19.13 PROPOSITION
Adjoint situations can be composed; speciﬁcally, if (η, ε) : F
 G : A →B and
(η, ε) : F
 G : B →C are adjoint situations, then so is
(GηF ◦η , ε ◦FεG) : F ◦F
 G ◦G : A →C.

19.14 THEOREM
If (η, ε) : F
 G : A →B is an adjoint situation, then the following hold:
(1) The following are equivalent:
(a) G is faithful,
(b) G reﬂects epimorphisms,
(c) ε is an Epi-transformation.
(2) The following are equivalent:
(a) G is faithful and reﬂects isomorphisms,
(b) G reﬂects extremal epimorphisms,
(c) ε is an (Extremal Epi)-transformation.
(3) G is full if and only if ε is a Section-transformation.
18th January 2005

320
Adjoints and Monads
[Chap. V
(4) G is full and faithful if and only if ε is a natural isomorphism.
(5) If G reﬂects regular epimorphisms, then each mono-source is G-initial.70
Proof: (1a) ⇒(1b) ⇒(1c) is immediate, since Gε is a Retraction-transformation.
(1c) ⇒(1a).
If A
f /
g / ˆA is a pair of A-morphisms with Gf = Gg, then the equations
f ◦εA = ε ˆ
A ◦FGf = ε ˆ
A ◦FGg = g ◦εA imply that f = g.
(2a) ⇒(2b) ⇒(2c) is immediate, since G, being adjoint, preserves monomorphisms.
(2c) ⇒(2a).
By (1), G is faithful. Let A
f
−→ˆA be an A-morphism such that Gf
is an isomorphism. Since f ◦εA = ε ˆ
A ◦FGf is a composite of an isomorphism with
an extremal epimorphism, and so is an extremal epimorphism, the dual of Proposition
7.62(2) implies that f is an extremal epimorphism. By the faithfulness of G, f is a
monomorphism as well; hence it is an isomorphism.
(3). Let G be full. Then for each A-object A there exists an A-morphism A
sA
−−→FGA
with GsA = ηGA. Hence the equations G(sA ◦εA) ◦ηGA = GsA ◦GεA ◦ηGA = GsA =
G(idFGA) ◦ηGA imply that sA ◦εA = idFGA. Thus εA is a section. Conversely, let ε
be a Section-transformation, let A and ˆA be A-objects, and let GA
f
−→G ˆA be a B-
morphism. Then there exists an A-morphism A
r
−→FGA with r ◦εA = idFGA. Hence
A
ˆf
−→ˆA = A
r
−→FGA
Ff
−−→FG ˆA
ε ˆ
A
−−→ˆA is an A-morphism. Since ε ˆ
A is an F-co-
universal arrow, the equalities ε ˆ
A ◦FG ˆf = ˆf ◦εA = ε ˆ
A ◦Ff ◦r ◦εA = ε ˆ
A ◦Ff imply
that G ˆf = f. Thus G is full.
(4). This follows from (1) and (3).
(5).
If G reﬂects regular epimorphisms, then ε is a (Regular Epi)-transformation. Let
(A
mi
−−→Ai)I be a mono-source, ( ˆA
fi
−−→Ai)I be a source in A, and G ˆA
f
−→GA be a
B-morphism such that Gfi = Gmi ◦f for each i ∈I. Then the equalities fi ◦ε ˆ
A =
εAi ◦FGfi = εAi ◦FGmi ◦Ff = mi ◦εA ◦Ff imply that for each i ∈I the diagram
FG ˆA
ε ˆ
A
/
εA◦Ff

ˆA
fi

A
mi
/ Ai
commutes. Since every category has the (Regular Epi, Mono-Source)-diagonalization
property, there exists a diagonal ˆA
d
−→A. In particular fi = mi ◦d. Since, by (1), G is
faithful, this implies that the mono-source (A
mi
−−→Ai)I is G-initial.

70See Exercise 19B(c) for a characterization of adjoint functors G with the property that each mono-
source is G-initial.
18th January 2005

Sec. 19]
Adjoint situations
321
Suggestions for Further Reading
Booth, P. I. Sequences of adjoint functors. Archiv Math. 23 (1972): 489–493.
Hoﬀmann, R.-E. Sequences of adjoints for Ens-valued functors. Manuscr. Math. 32
(1980): 191–210.
EXERCISES
19A. Alternative Description of Adjoint Situations
Show that functors A
G
−−→B and B
F
−−→A yield an adjoint situation if and only if there
exists an isomorphism hom(FA, B) ∼= hom(A, GB) that is natural in the variables A
and B; more precisely,
Let A
G
−−→B and B
F
−−→A be functors. Deﬁne functors hom(F−, −): Bop × A →Set
and hom(−, G−): Bop × A →Set by
hom(F−, −)(B, A) = homA(FB, A)
hom(F−, −)(f, g) = hom(Ff, g), where hom(Ff, g)(k) = g ◦k ◦Ff
hom(−, G−)(B, A) = homB(B, GA)
hom(−, G−)(f, g) = hom(f, Gg), where hom(f, Gg)(k) = Gg ◦k ◦f.
(a) Let (η, ε) : F
 G be an adjoint situation.
Deﬁne τ(B,A) : homA(FB, A) →homB(B, GA) by τ(B,A)(f) = Gf ◦ηB and show
that τ = (τB,A) : hom(F−, −) →hom(−, G−) is a natural isomorphism.
(b) Let τ : hom(F−, −) →hom(−, G−) be a natural isomorphism. Deﬁne η = (ηB) by
ηB = τ(B,FB)(idFB) and ε = (εA) by εA = τ −1
(GA,A)(idGA) and show that
(η, ε) : F
 G is an adjoint situation.
(c) The constructions described in (a) and (b) are essentially inverse to each other.
19B. Adjoints Reﬂecting Special Epimorphisms
Let (η, ε) : F
 G: A →B be an adjoint situation. Show that
(a) If f is G-ﬁnal and Gf is an extremal (resp. a regular) epimorphism, then f is an
extremal (resp. a regular) epimorphism.
(b) G reﬂects regular epimorphisms if and only if every A-morphism f, for which Gf is
a regular epimorphism, is G-ﬁnal.
(c) The following are equivalent:
(1) mono-sources are G-initial,
(2) G reﬂects swell epimorphisms,
(3) ε is a (Swell Epi)-transformation.
18th January 2005

322
Adjoints and Monads
[Chap. V
(d) Each of the following conditions implies but is not equivalent to its immediate suc-
cessor:
(1) G reﬂects regular epimorphisms,
(2) G reﬂects swell epimorphisms,
(3) G reﬂects extremal epimorphisms,
(4) G reﬂects epimorphisms.
(e) If G reﬂects swell epimorphisms, then G reﬂects limits.
(f) If G reﬂects isomorphisms and A has equalizers, then G is faithful.
(g) If G reﬂects isomorphisms, then G need not be faithful.
19C. Hom-functors Reﬂecting Epimorphisms
Let hom(A, −) : A →Set be a covariant hom-functor that reﬂects epimorphisms. Show
that
(a) If in A arbitrary copowers IA of A exist, then hom(A, −) is faithful.
(b) In general hom(A, −) need not be faithful.
19D. Galois Adjunctions
An adjoint situation (η, ε) : F
 G is called a Galois adjunction provided that ηG
is a natural isomorphism. Show that
(a) For adjoint situations the following conditions are equivalent:
(1) (η, ε) : F
 G is a Galois adjunction,
(2) Fη is a natural isomorphism,
(3) ηG is an Epi-transformation,
(4) Fη is an Epi-transformation,
(5) GFη = ηGF.
(b) If (η, ε) : F
 G is a Galois-adjunction, then so is (εop, ηop) : Gop
 F op.
(c) If (η, ε) : F
 G is an adjoint situation and if η is an Epi-transformation or if G
is full, then (η, ε) : F
 G is a Galois-adjunction.
(d) If (η, ε) : F
 G is a Galois-adjunction, then G and GFG are naturally isomorphic.
19E. Galois Correspondences
(a) Let (A, U)
G
−−→(B, V ) and (B, V )
F
−−→(A, U) be concrete functors over X. Show
that (F, G) is a Galois correspondence if and only if there exists an adjoint situation
(η, ε) : F
 G with concrete natural transformations η and ε.
* (b) Construct a concrete functor G that has a concrete co-adjoint, but is not a part of
a Galois correspondence (F, G). Cf. Exercise 21E(b).
18th January 2005

Sec. 19]
Adjoint situations
323
* 19F. Adjoint Sequences
Consider the poset N as a category and show that
(a) There is a sequence of functors Gn : N →N, no two of which are naturally isomor-
phic, such that G0(x) = x + 1 and Gn+1
 Gn for each n ∈N.
(b) If Gn : N →N is a sequence of functors such that Gn
 Gn+1 for each n ∈N,
then Gn = idN for each n ∈N.
19G. Self-Adjoints
(a) Let A
G
−−→A be an endofunctor of A with G
 G. Show that
(1) If A is a poset, considered as a category, then G is an isomorphism.
(2) If A = Set, then G is an equivalence.
(b) Let A be a category with a zero object A and let G : A →A be the constant functor
with value A. Show that G
 G.
19H. Adjoint Situations and Equivalences
(a) Show that a functor A
G
−−→B is an equivalence if and only if there exists an adjoint
situation (η, ε) : F
 G : A →B with natural isomorphisms η and ε.
(b) Let (A, U) be a construct. Show that F
 U
 F implies that F is an equiva-
lence.
* 19I.
Show that if F
 G
 H, then F is full and faithful if and only if H is full and
faithful.
19J. Units and Co-units
Let (η, ε) : F
 G : A →B be an adjoint situation. Show that
(a) GFη ◦η = ηGF ◦η.
(b) ε ◦εFG = ε ◦FGε.
(c) If B
f
−→GA is a G-structured arrow, then f = εA ◦Ff is the unique A-morphism
FB
f
−→A with f = Gf ◦ηB.
19K. Swell Separators
In A an object S is called a swell separator provided that mono-sources in A are
hom(S, −)-initial. Show that
(a) Every swell separator is an extremal separator.
(b) If S is a swell separator, then hom(S, −) reﬂects limits.
(c) If in A arbitrary copowers IS of S exist, then the following hold:
(1) S is a swell separator if and only if hom(S, −) reﬂects swell epimorphisms.
18th January 2005

324
Adjoints and Monads
[Chap. V
(2) S is an extremal separator if and only if hom(S, −) reﬂects extremal epimor-
phisms.
(3) S is a separator if and only if hom(S, −) reﬂects epimorphisms. [But cf. 19C(b).]
(4) If hom(S, −) reﬂects regular epimorphisms, then S is a swell separator.
(d) In Set every separator is swell.
18th January 2005

20 Monads
Algebraic constructs (A, U), such as Vec, Grp, Mon, and Lat, can be fully described
by the following data, called the monad associated with (A, U):
1. the functor T : Set →Set, where T = U ◦F and F : Set →A is the associated
free functor (19.4(2)),
2. the natural transformation η : idSet →T formed by universal arrows, and
3. the natural transformation µ : T ◦T →T given by the unique homomorphism
µX : T(TX) →TX that extends idTX.
In fact, in the above cases, there is a canonical concrete isomorphism K between (A, U)
and the full concrete subcategory of Alg(T) consisting of those T-algebras TX
x
−→X
that satisfy the equations x ◦ηX = idX and x ◦Tx = x ◦µX. The latter subcategory is
called the Eilenberg-Moore category of the monad (T, η, µ).
The above observation makes it possible, in the following four steps, to express the
“degree of algebraic character” of arbitrary concrete categories that have free objects:
Step 1: With every concrete category (A, U) over X that has free objects (or, more gen-
erally, with every adjoint functor A
U
−−→X) one can associate, in an essentially
unique way, an adjoint situation (η, ε) : F
 U : A →X. (See Theorem 19.1
and Proposition 19.9.)
Step 2: With every adjoint situation (η, ε) : F
 U : A →X one can associate a
monad T = (T, η, µ) on X, where T = U ◦F : X →X. (See Proposition 20.3.)
Step 3: With every monad T = (T, η, µ) on X one can associate a concrete subcategory
of Alg(T) denoted by (XT, UT) and called the category of T-algebras. (See
Deﬁnition 20.4.)
Step 4: With every concrete category (A, U) over X that has free objects one can
associate a distinguished concrete functor (A, U)
K
−−→(XT, UT) into the asso-
ciated category of T-algebras called the comparison functor for (A, U). (See
Proposition 20.37 and Deﬁnition 20.38.)
Concrete categories that are concretely isomorphic to a category of T-algebras for some
monad T have a distinct “algebraic ﬂavor”. Such categories (A, U) and their forgetful
functors U are called monadic. It turns out that a concrete category (A, U) is monadic if
and only if it has free objects and its associated comparison functor (A, U)
K
−−→(XT, UT)
is an isomorphism.
Thus, for concrete categories (A, U) that have free objects, the
associated comparison functor can be considered as a means of measuring the “algebraic
character” of (A, U); and the associated category of T-algebras can be considered to be
the “algebraic part” of (A, U). In particular,
(a) every ﬁnitary variety (see Deﬁnition 16.16) is monadic,
325

326
Adjoints and Monads
[Chap. V
(b) the category TopGrp, considered as a concrete category
(1) over Top, is monadic,
(2) over Set, is not monadic; the associated comparison functor is the forgetful
functor TopGrp →Grp, so that the construct Grp may be considered as the
“algebraic part” of the construct TopGrp,
(c) the construct Top is not monadic; the associated comparison functor is the forgetful
functor Top →Set itself, so that the construct Set may be considered as the
“algebraic part” of the construct Top; hence the construct Top may be considered
as having a trivial “algebraic part”.
Among constructs, monadicity captures the idea of “algebraicness” rather well (as will
be demonstrated in §24). Unfortunately, however, the behavior of monadic categories in
general is far from satisfactory. Monadic functors can fail badly to reﬂect nice properties
of the base category (e.g., the existence of colimits or of suitable factorization structures),
and they are not closed under composition. Such deﬁciencies are shown near the end of
this section. Better behaved (and, moreover, simpler) concepts of “algebraicity” will be
developed in §23.
MONADS AND ALGEBRAS
20.1 DEFINITION
A monad on a category X is a triple T = (T, η, µ) consisting of a functor T : X →X
and natural transformations
η : idX →T
and
µ : T ◦T →T
such that the diagrams
T ◦T ◦T
Tµ /
µT

T ◦T
µ

T ◦T
µ
/ T
and
T
Tη /
id
"F
F
F
F
F
F
F
F
F
T ◦T
µ

T
ηT
o
id
|yyyyyyyyy
T
commute.
20.2 EXAMPLES
(1) On every category X there is the trivial monad T = (T, η, µ) with T = idX and
η = µ = idT .
(2) In Set the word-monad T = (T, η, µ) is deﬁned as follows:
(a) T : Set →Set assigns to each set X the set TX = S
n∈N Xn of tuples or
“words” over X and to each function X
f
−→Y the function TX
Tf
−−→TY that
sends the empty word (∈X0) to the empty word and for n > 0 sends each word
(x1, . . . , xn) to (f(x1), . . . , f(xn)),
18th January 2005

Sec. 20]
Monads
327
(b) ηX : X →TX is deﬁned by ηX(x) = (x), i.e., ηX interprets each member of X
as a one-letter word,
(c) µX : T(TX) →TX is given by concatenation:
µX ((x11, . . . , x1n1), (x21, . . . , x2n2), . . . , (xk1, . . . , xknk)) =
(x11, . . . , x1n1, x21, . . . , x2n2, . . . , xk1, . . . , xknk),
i.e., µX interprets each word of words in the natural way, as a word.
(3) In Set the power-set monad T = (P, η, µ) is deﬁned as follows:
(a) P : Set →Set is the power-set functor,
(b) ηX : X →PX is deﬁned by ηX(x) = {x},
(c) µX : P(PX) →PX is deﬁned by µX(Z) = S Z.
(4) Let X be a poset, considered as a category. A monad T on X consists of an order-
preserving function T : X →X with s ≤Ts (due to η) and T = T ◦T (since
(T ◦T)s ≤Ts due to µ) — in other words, T is a closure operator on X.
20.3 PROPOSITION
Each adjoint situation (η, ε) : F
 G : A →X gives rise to the associated monad
(T, η, µ) on X, deﬁned by
T = G ◦F : X →X
and
µ = GεF : T ◦T →T.
Proof:
(1). µ◦Tµ = GεF ◦GFGεF = G(ε◦FGε)F = G(ε◦εFG)F = GεF ◦GεFGF = µ◦µT,
since ε ◦FGε = ε ◦εFG, in view of the fact that ε is a natural transformation.
(Cf. Exercise 19J.)
(2). µ ◦Tη = GεF ◦GFη = G(εF ◦Fη) = G(id) = id.
(3). µ ◦ηT = GεF ◦ηGF = (Gε ◦ηG)F = (id)F = id.

20.4 DEFINITION
Let T = (T, η, µ) be a monad on X. The full concrete subcategory of Alg(T) consisting
of all algebras TX
x
−→X that satisfy
(1) x ◦ηX = idX, and
(2) x ◦Tx = x ◦µX : T(TX) →X
is denoted by (XT, UT) and is called the Eilenberg-Moore category of the monad
T, or the category of T-algebras.
20.5 EXAMPLES
(1) If T is the trivial monad on X, then (XT, UT) is concretely isomorphic to (X, idX).
18th January 2005

328
Adjoints and Monads
[Chap. V
(2) If T is the word-monad on X = Set, then (XT, UT) is concretely isomorphic to the
construct Mon of monoids. [If TX
x
−→X is a T-algebra, multiplication in X is
deﬁned by a·b = x((a, b)), and if e is the value of x at the empty word, then (X, ·, e)
is a monoid.]
(3) If T is the power-set monad on X = Set, then (XT, UT) is concretely isomorphic
to the construct JCPos. [If TX
x
−→X is a T-algebra, then a ≤b if and only if
x({a, b}) = b deﬁnes a partial order on X with x(A) = sup A for each A ⊆X; the
T-morphisms are precisely the join-preserving maps.] Cf. Exercise 5N(a).
(4) If T = (T, η, µ) is a monad on a partially ordered set X, considered as a category,
and if E : Y →X is the embedding of the full subcategory Y of X, whose objects
are the ﬁxed points of T, then (XT, UT) is concretely isomorphic to (Y, E).
(5) The construct Vec is concretely isomorphic to the construct AbT for the following
monad T = (T, η, µ) on abelian groups: for each abelian group X, let TX = R ⊗X
be the tensor product, with morphisms ηX : X →R ⊗X given by x 7→1 ⊗x, and
µX : R ⊗R ⊗X →R ⊗X given by r1 ⊗r2 ⊗x 7→(r1r2) ⊗x.
20.6 REMARK
As outlined in the introduction of this section, with each concrete category (A, U) over
X that has free objects (or, more generally, with every adjoint functor A
U
−−→X) one
can associate a category (XT, UT) of T-algebras in three steps. Since the ﬁrst of these
steps does not yield a unique result, (XT, UT) is not uniquely determined by (A, U).
However, any two categories of algebras that are obtained from (A, U) in this manner
are concretely isomorphic. (See Exercise 20A.) Thus, by “abuse of language”, we will
sometimes designate any category of algebras that is obtained from (A, U) via the proce-
dure outlined above as the category of algebras associated with (A, U) (resp. with
the functor U).
20.7 PROPOSITION
Every monad T = (T, η, µ) on X gives rise to an associated adjoint situation
(η, ε) : F T
 UT : XT →X, where
(1) XT and UT are deﬁned as in Deﬁnition 20.4,
(2) X
F T
−−−→XT is deﬁned by F T(X
f
−→Y ) = (TX, µX)
Tf
−−→(TY, µY ),
in particular, (TX, µX) is a free object over X in (XT, UT),
(3) F TUT
ε
−→idXT is deﬁned by ε(X,x) = x.
Moreover, the monad associated with the above adjoint situation (20.3) is T itself.
Proof: Straightforward computations.

18th January 2005

Sec. 20]
Monads
329
MONADIC CATEGORIES AND FUNCTORS
20.8 DEFINITION
(1) A concrete category over X is called monadic provided that it is concretely isomor-
phic to (XT, UT) for some monad T on X.
(2) A functor A
U
−−→X is called monadic provided that U is faithful and (A, U) is
monadic.
20.9 REMARK
In Proposition 20.40 it will be shown that every monadic category is concretely isomor-
phic to its associated category of algebras.
20.10 EXAMPLES
(1) Every isomorphism is monadic [cf. 20.5(1)].
(2) The construct Mon is monadic [cf. 20.5(2)]. So is every ﬁnitary variety (cf. 20.20).
(3) The construct JCPos is monadic [cf. 20.5(3)].
(4) An embedding of a full subcategory A of X into X is monadic if and only if A is
isomorphism-closed and reﬂective in X. (See Proposition 20.12, Theorem 20.17, and
Exercise 20F.) A concrete category (A, U) over a partially ordered set X is monadic
if and only if, up to isomorphism, A
U
−−→X is the embedding of a full reﬂective
subcategory of X [cf. 20.5(4)]. In particular, a partially ordered set, considered as a
concrete category over 1, is monadic if and only if it contains precisely one element.
(5) None of the constructs Top, Rel, or Pos is monadic since the corresponding forgetful
functors don’t reﬂect isomorphisms (cf. 20.12).
20.11 LEMMA
The Eilenberg-Moore category of a monad T = (T, η, µ) is closed under the formation of
mono-sources in Alg(T).
Proof: Let T = (T, η, µ) be a monad on X, and suppose that the diagram
TX
Tmi /
x

TXi
xi

X
mi
/ Xi
commutes for each i ∈I, where (X
mi
−−→Xi)I is a mono-source in X, and each (Xi, xi)
is a T-algebra. To show that (X, x) is a T-algebra, ﬁrst notice that the commutativity
18th January 2005

330
Adjoints and Monads
[Chap. V
of the diagram
X
mi
/
ηX

Xi
ηXi

TX
Tmi
/
x

TXi
xi

X
mi
/ Xi
and the fact that xi ◦ηXi = idXi imply mi ◦(x ◦ηX) = xi ◦Tmi ◦ηX = xi ◦ηXi ◦mi =
idXi ◦mi = mi ◦idX, and thus x ◦ηX = idX.
The commutativity of the ﬁve inner
quadrangles in the diagram
T 2X
Tx
/
T 2mi
#G
G
G
G
G
G
G
G
G
µX

TX
Tmi
|yyyyyyyyy
x

T 2Xi
Txi /
µXi

TXi
xi

TXi
xi
/ Xi
TX
Tmi
:v
v
v
v
v
v
v
v
v
x
/ X
mi
cFFFFFFFFF
implies that mi ◦(x ◦µX) = mi ◦(x ◦Tx) and thus x ◦µX = x ◦Tx.

20.12 PROPOSITION
For monadic functors A
U
−−→X the following hold:
(1) U is faithful,
(2) (A, U) is ﬁbre-small,
(3) U is adjoint, i.e., (A, U) has free objects,
(4) (A, U) is uniquely transportable, hence amnestic,
(5) U creates isomorphisms, hence reﬂects them,
(6) U reﬂects epimorphisms and extremal epimorphisms,
(7) U preserves and reﬂects mono-sources,
(8) in (A, U) mono-sources are initial,
(9) U detects wellpoweredness, i.e., if X is wellpowered, then so is A,
(10) U creates limits.
Proof: Since all of the properties mentioned above are invariant under concrete iso-
morphisms, we may assume that (A, U) = (XT, UT) for some monad T = (T, η, µ) on
X.
18th January 2005

Sec. 20]
Monads
331
(1) and (2) follow immediately from the deﬁnition of monadicity.
(3) follows from Proposition 20.7.
(7) follows from (1) and (3).
(8) is immediate by straightforward computation.
(9) follows from (7) and (8).
(10). Let D : I →XT be a diagram and let L = (L
ℓi
−−→Di)Ob(I) be a limit of UT◦D. For
each i ∈Ob(I) let Di = (Xi, xi). Then the source S = (TL
Tℓi
−−−→TXi
xi
−−→Xi)Ob(I)
is natural for UT ◦D. Hence there exists a unique X-morphism TL
y
−→L with
S = L ◦y, i.e., such that each diagram
TL
Tℓi /
y

TXi
xi

L
ℓi
/ Xi
commutes. Thus it remains to be shown that (L, y) is a T-algebra and that the
source

(L, y)
ℓi
−−→Di

Ob(I) is a limit of D. The former follows from the fact that
L is a mono-source and from Lemma 20.11. The latter follows from (7) and (8)
via Proposition 13.15.
(4) and (5) follow immediately from (10), by Proposition 13.36.
(6) follows immediately from (1), the preservation of monomorphisms (7) and the
reﬂection of isomorphisms (5).

20.13 REMARK
Even though monadic functors behave perfectly with respect to limits, their relationship
to colimits is rather complex. For example, if A
U
−−→X is a monadic functor with X
cocomplete and if A has coequalizers, then A is cocomplete (see Exercise 20D); but
A needn’t have coequalizers (see 20.47). In fact, monadic functors are characterized
by their (somewhat strange) behavior with respect to coequalizers, as will be seen in
Theorem 20.17.
20.14 DEFINITION
1. A fork A
p /
q / B
c / C
is called a congruence fork provided that (p, q) is a
congruence relation of c, and c is a coequalizer of p and q.
18th January 2005

332
Adjoints and Monads
[Chap. V
2. A fork A
p /
q / B
c / C is called a split fork and c is called a split coequalizer
of (p, q) provided that there exist morphisms s and t such that the diagram
B
c
/
id

t
@
@
@
@
@
@
@
C
s
~~~~~~~~
id

A
p
/
q
~~~~~~~
B
c
 @
@
@
@
@
@
@
B
c
/ C
commutes.
3. A colimit K of a diagram D : I →A is called an absolute colimit provided that
for each functor A
G
−−→B the sink GK is a colimit of G ◦D.
In particular, c is called an absolute coequalizer of p and q in A provided that
for each functor A
G
−−→B, Gc is a coequalizer of Gp and Gq in B.
4. A functor A
G
−−→B is said to create absolute colimits provided that for each
diagram I
D
−−→A and each absolute colimit K of G ◦D there exists a unique sink
C = (Di
ci
−−→C)Ob(I) such that GC = K and, moreover, C is a (not necessarily
absolute) colimit of D.
A monadic functor creating colimits
20.15 EXAMPLES
(1) If A is a category, f is an A-morphism, (p, q) is a congruence relation of f in A,
18th January 2005

Sec. 20]
Monads
333
and c is a coequalizer of p and q in A, then •
p /
q / •
c / • is a congruence fork in
A. (Cf. Proposition 11.22.)
(2) A congruence fork •
p /
q / •
c / • is a split fork if and only if c is a retraction.
(3) If •
p /
q / •
c / • is a split fork, then c is an absolute coequalizer of p and q.
(4) If (η, ε) : F
 U : A →X is an adjoint situation, then for each A-object A
UFUFUA
UFUεA /
UεF UA
/ UFUA
UεA
/ UA
is a split fork in B since the diagram
UFUA
UεA
/
ηUF UA
'O
O
O
O
O
O
O
O
O
O
O
id

UA
ηUA
zuuuuuuuuu
id

UFUFUA
UεF UA
wppppppppppp
UFUεA
/ UFUA
UεA
$I
I
I
I
I
I
I
I
I
UFUA
UεA
/ UA
commutes.
(5) If T = (T, η, µ) is a monad on X, then for each T-algebra (X, x)
T 2X
Tx
/
µX
/ TX
x
/ X
is a split fork in X. Hence, in particular, for each X-object X
T 3X
TµX /
µT X / T 2X
µX
/ TX
is a split fork in X.
20.16 PROPOSITION
Each monadic functor U creates absolute colimits.
Proof: Let T = (T, η, µ) be a monad on X and let (XT, UT) be the associated category
of T-algebras. Let D : I →XT be a diagram and let K = (UTDi
ci
−−→C)Ob(I) be an
absolute colimit of UT◦D. Then TK = (TUTDi
Tci
−−−→TC)Ob(I) is a colimit of T ◦UT◦D.
If Di = (Xi, xi) for each i ∈Ob(I), then S = (TXi
xi
−−→Xi
ci
−−→C)Ob(I) is a natural sink
18th January 2005

334
Adjoints and Monads
[Chap. V
for T ◦UT ◦D. Hence there exists a unique morphism TC
c−→X with S = c ◦TK, i.e.,
such that for each i ∈Ob(I) the diagram
TXi
Tci /
xi

TC
c

Xi
ci
/ C
commutes. Thus it remains to be shown that (C, c) is a T-algebra and that the sink
(Di
ci
−−→(C, c))Ob(I) is a colimit of D. The former follows from the fact that K and T 2K,
being colimits, are epi-sinks and from the equations
(c ◦ηC) ◦ci = c ◦Tci ◦ηXi = ci ◦xi ◦ηXi = ci ◦idXi = idC ◦ci
and
(c◦Tc)◦T 2ci = c◦Tci ◦Txi = ci ◦xi ◦Txi = ci ◦xi ◦µXi = c◦Tci ◦µXi = (c◦µC)◦T 2ci.
For the latter, consider a natural sink X = (Di
fi
−−→(X, x))Ob(I) for D. Then UTX =
(Xi
fi
−−→X)Ob(I) is a natural sink for UT ◦D. Thus there exists a unique X-morphism
C
f
−→X with fi = f ◦ci for each i ∈Ob(I). Hence Tfi = Tf ◦Tci for each i ∈Ob(I)
and so x ◦Tf ◦Tci = x ◦Tfi = fi ◦xi = f ◦ci ◦xi = f ◦c ◦Tci. Since TK is an epi-sink,
this implies that x ◦Tf = f ◦c, i.e., (C, c)
f
−→(X, x) is the unique T-homomorphism
with X = f ◦K.

20.17 CHARACTERIZATION THEOREM FOR MONADIC FUNCTORS
For any functor A
U
−−→X the following conditions are equivalent:
(1) U is monadic,
(2) U is adjoint and creates absolute coequalizers,
(3) U is adjoint and creates split coequalizers (as deﬁned in 20.14).
Proof: (1) ⇒(2) follows from Propositions 20.12 and 20.16.
(2) ⇒(3) follows from Example 20.15(3).
(3) ⇒(1). Since U is adjoint, there is an adjoint situation (η, ε) : F
 U : A →X. Let
T = (T, η, µ) be the associated monad and let (XT, UT) be the associated category of T-
algebras. It suﬃces to construct functors A
K
−−→XT and XT
L
−−→A with U = UT ◦K,
L ◦K = idA, and K ◦L = idXT; since then U would be faithful, (A, U) would be a
concrete category, and (A, U)
K
−−→(XT, UT) would be a concrete isomorphism.
Construction of K: For each A-object A the pair (UA, UεA) is a T-algebra [cf. 20.15(4)],
and for each A-morphism A
f
−→B, (UA, UεA)
Uf
−−→(UB, UεB) is an T-homomorphism.
18th January 2005

Sec. 20]
Monads
335
Thus there exists a unique functor A
K
−−→XT with K(A) = (UA, UεA) for each A-object
A.
Construction of L: For each XT-object (X, x) the fork
T 2X
Tx /
µX / TX
x / X
=
U(FUFX)
U(Fx)
/
U(εF X)
/ U(FX)
x
/ X
is a split fork [cf. 20.15(5)]. Hence, by condition (3), U(FX)
x
−→X has a unique U-lift
FX
x
−→L(X) and x is a coequalizer of εFX and Fx in A. For each T-homomorphism
(X, x)
f
−→(Y, y) the following equalities hold:
(y ◦Ff) ◦εFX = y ◦εFY ◦FUFf = y ◦Fy ◦FTf = (y ◦Ff) ◦Fx.
Since x is a coequalizer of εFX and Fx in A, there exists a unique A-morphism
L(X)
L(f)
−−−→L(Y ) with y ◦Ff = L(f) ◦x.
Since x is an epimorphism, the equali-
ties UL(f) ◦x = UL(f) ◦Ux = Uy ◦UFf = y ◦Tf = f ◦x imply that UL(f) = f,
i.e., U(L(X, x)
L(f)
−−−→L(Y, y)) = X
f
−→Y = UT((X, x)
f
−→(Y, y)). Thus L deﬁnes a
concrete functor XT
L
−−→A. The equation L◦K = idA immediately follows (via concrete-
ness) from the fact that, for each A-object A, FUA
εA
−−→A U-lifts UFUA
UεA
−−−→UA,
so that L ◦K(A) = A. To show that K ◦L = idXT, let (X, x) be an T-algebra. Then
(K ◦L)(X, x) = (UL(X, x), UεL(X,x)).
Since UL(X, x) = X, it remains (in view of
concreteness) to be shown that x = εL(X,x). By the universality of η, the equations
Ux ◦ηX = x ◦ηX = idX = UεL(X,x) ◦ηUL(X,x) = UεL(X,x) ◦ηX imply that x = εL(X,x)
and hence that x = Ux = UεL(X,x).

20.18 PROPOSITION
Each construct of the form Alg(Ω) is monadic.
Proof: By Example 8.23(6) the forgetful functor Alg(Ω)
U
−−→Set is adjoint, so by the
above theorem it suﬃces to show that U creates absolute coequalizers. Consider a pair
(A, (αi)I)
p /
q / (B, (βi)I) of Ω-homomorphisms and an absolute coequalizer B
c−→C
of p and q in Set. For each i ∈I, the functor Sni : Set →Set [3.20(10)] preserves
this coequalizer.
Thus Bni
cni
−−−→Cni is a coequalizer of pni and qni in Set.
Since
(c◦βi)◦pni = c◦p◦αi = c◦q◦αi = (c◦βi)◦qni, there exists a unique function Cni
γi
−−→C
with c ◦βi = γi ◦cni. Thus (B, (βi)I)
c−→(C, (γi)I) is the unique U-lift of the costruc-
tured map (B, (βi)I)
c−→C. It follows easily that (B, (βi)I)
c−→(C, (γi)I) is a coequalizer
of (A, (αi)I)
p /
q / (B, (βi)I) in Alg(Ω). Thus U creates absolute coequalizers.

20.19 PROPOSITION
Let (A, U) be a monadic category over X. Then each concrete full reﬂective subcategory
of A that is closed under the formation of regular quotients is also monadic over X.
18th January 2005

336
Adjoints and Monads
[Chap. V
Proof: Immediate from Theorem 20.17.

20.20 PROPOSITION
Each ﬁnitary variety is a monadic construct.
Proof: Immediate from Propositions 20.18 and 20.19.

E-MONADS AND E-MONADIC
CATEGORIES AND FUNCTORS
20.21 DEFINITION
(1) A monad T = (T, η, µ) on X is called an E-monad provided that X is an (E, M)-
category for some M and T[E] ⊆E.
RegEpi-monads in categories with regular factorizations are called regular monads.
(2) A concrete category (A, U) over X (or a faithful functor A
U
−−→X) is called E-
monadic (resp. regularly monadic) provided that (A, U) is concretely isomorphic
to (XT, UT) for some E-monad (resp. regular monad) T on X.
20.22 PROPOSITION
Every monad on Set is regular.
Proof: This follows from the facts that in Set every regular epimorphism is a retraction
and that every functor preserves retractions.

20.23 DEFINITION
A functor A
U
−−→X lifts (E, M)-factorizations uniquely provided that for any source
S in A and any (E, M)-factorization US = M◦e in X there exists a unique factorization
S = ˆ
M ◦ˆe in A with U ˆ
M = M and Uˆe = e.
20.24 PROPOSITION
If X is an (E, M)-category and A
U
−−→X is E-monadic, then U lifts (E, M)-factoriza-
tions uniquely.
Proof: Assume that (A, U) = (XT, UT) for some E-monad T = (T, η, µ) on X. Let
S = ((X, x)
fi
−−→(Xi, xi))I be a source in XT and (X
fi
−−→Xi)I = (X
e
−→Y
mi
−−→Xi)I
be an (E, M)-factorization of UTS in X. Since Te ∈E, there exists a unique diagonal
18th January 2005

Sec. 20]
Monads
337
TY
y
−→Y in X that makes the diagram
TX
x

Tfi
/
Te
"E
E
E
E
E
E
E
E
TXi
xi

TY
Tmi
<x
x
x
x
x
x
x
x
y

Y
mi
"F
F
F
F
F
F
F
F
F
X
e
<y
y
y
y
y
y
y
y
y
fi
/ Xi
(i ∈I)
commute. That (Y, y) is a T-algebra follows from the fact that e and T 2e are epimor-
phisms [15.5(2)] and from the equations
y ◦ηY ◦e = y ◦Te ◦ηX = e ◦x ◦ηX = e ◦idX = idY ◦e
and
(y ◦Ty) ◦T 2e = y ◦T(y ◦Te) = y ◦T(e ◦x) = y ◦Te ◦Tx = e ◦x ◦Tx = e ◦x ◦µX
= y ◦Te ◦µX = (y ◦µY ) ◦T 2e.

20.25 PROPOSITION
Let A be a full subcategory of an (E, M)-category B. Then the inclusion functor A
U
−−→B
is E-monadic if and only if the following conditions are satisﬁed:
(1) A is reﬂective in B,
(2) if A
e
−→B
m
−−→A′ is an (E, M)-factorization of an A-morphism A
m◦e
−−−→A′, then
B belongs to A.
Proof: If U is E-monadic, then by Propositions 20.12(3) and 20.24, conditions (1) and
(2) are satisﬁed. Conversely, let (1) and (2) be satisﬁed, and let (η, ε) : F
 U : A →B
be an adjoint situation. If T = (T, η, µ) is the associated monad, then (A, U) can be
shown to be concretely isomorphic to (BT, UT). To see this consider the concrete functor
K : (A, U) →(BT, UT) given by KA = (A, η−1
A ). K is an isomorphism since for each
T-algebra (B, b) we have b ◦ηB = idB (where ηB is an A-reﬂection for B) and hence
ηB ◦b ◦ηB = ηB implies that ηB ◦b = id. Thus b = η−1
B , and B ∈Ob(A) since, by (2),
A is isomorphism-closed. It remains to be shown that T[E] ⊆E. Consider a morphism
B
e
−→B′ in E. Let TB
Te
−−→TB′ = TB
ˆe
−→B′′
ˆm
−−→TB′ be an (E, M)-factorization of
Te. Then there exists a diagonal B
d
−→B′′ that makes the following diagram commute:
B
e
/
ˆe◦ηB

B′
d
|yyyyyyyy
ηB′

B′′
ˆm
/ TB′
18th January 2005

338
Adjoints and Monads
[Chap. V
By the universal property of η there exists a morphism TB′
ˆd
−→B′′ with d = ˆd ◦ηB′.
Thus ˆm ◦ˆd ◦ηB′ = ˆm ◦d = ηB′ implies that ˆm ◦ˆd = id. Moreover, ˆd ◦ˆm ◦ˆe ◦ηB =
ˆd ◦ˆm ◦d ◦e = ˆd ◦ηB′ ◦e = d ◦e = ˆe ◦ηB implies that ˆd ◦ˆm ◦ˆe = ˆe. Thus, since ˆe is
an epimorphism, ˆd ◦ˆm = id. Hence ˆm is an isomorphism and, consequently, Te = ˆm ◦ˆe
belongs to E.

20.26 COROLLARY
If A is an E-reﬂective subcategory of an (E, M)-category B, then the inclusion-functor
A →B is E-monadic.
Proof: Immediate from Theorem 16.8 and Proposition 20.25.

20.27 EXAMPLES
As the following examples show, there exist full subcategories A of (E, M)-categories B
such that the inclusion functor A →B is E-monadic, but such that A is neither closed
under the formation of M-subobjects nor under the formation of E-quotient objects:
(1) Sgr is a (RegEpi, Mono-Source)-category, the full embedding Grp →Sgr is regu-
larly monadic, and Grp is closed under the formation of regular quotients in Sgr.
But Grp is not closed under the formation of subobjects in Sgr.
(2) Top is an (Epi, ExtrMono-Source)-category and the full embedding of HComp into
Top is Epi-monadic. But HComp is neither closed under the formation of quotients
nor closed under the formation of extremal subobjects in Top.
20.28 PROPOSITION
If (A, U) is an E-monadic category over an (E, M)-category X, then the following hold:
(1) Every A-morphism f with Uf ∈E is ﬁnal in (A, U).
(2) A is an (U−1[E], U−1[M])-category.
Proof:
(1). Assume that (A, U) = (XT, UT) for some E-monad T = (T, η, µ) on X.
Let
(X, x)
e
−→(Y, y) be a T-homomorphism with X
e
−→Y in E, and let Y
f
−→Z be
an X-morphism such that (X, x)
f◦e
−−−→(Z, z) is a T-homomorphism. Since Te is an
epimorphism, the equalities
(f ◦y) ◦Te = (f ◦e) ◦x = z ◦T(f ◦e) = (z ◦Tf) ◦Te
imply that f ◦y = z ◦Tf, i.e., that (Y, y)
f
−→(Z, z) is a T-homomorphism.
(2). By Proposition 20.24, A has (U−1[E], U−1[M])-factorizations. By (1) and the fact
that U−1[E] ⊆Epi(A), A has the unique (U−1[E], U−1[M])-diagonalization prop-
erty.

18th January 2005

Sec. 20]
Monads
339
20.29 COROLLARY
If (A, U) is E-monadic over an E-co-wellpowered category, then A is U−1[E]-co-well-
powered.

20.30 PROPOSITION
If (A, U) is regularly monadic, then A has regular factorizations and U preserves and
reﬂects regular and extremal epimorphisms.
Proof: By Proposition 20.28, A is an (E, Mono-Source)-category, where E is the class
U−1[RegEpi(X)]. Thus, by Proposition 15.8(1), E = ExtrEpi(A). It suﬃces to show
that in A every extremal epimorphism A
e
−→B is regular. Since Ue is an extremal
epimorphism and hence a regular epimorphism in the base category X, it is a coequalizer
of some pair X
r1 /
r2 / UA of X-morphisms. If X
η
−→UC is a universal arrow over X,
then for each i = 1, 2 there exists an A-morphism C
ˆri
−−→A with ri = (U ˆri)◦η. Since Ue
is a coequalizer of r1 and r2 in X, the ﬁnality of e [cf. Proposition 20.28(1)] implies that
e is a coequalizer of ˆr1 and ˆr2 in A(cf. Exercise 8O). Hence e is a regular epimorphism
in A.

20.31 COROLLARY
Regularly monadic functors detect extremal co-wellpoweredness.

20.32 CHARACTERIZATION THEOREM FOR
REGULARLY MONADIC FUNCTORS
A functor A
U
−−→X is regularly monadic if and only if the following conditions hold:
(1) U is monadic,
(2) X has regular factorizations,
(3) U preserves regular epimorphisms.
Proof: By Proposition 20.30 every regularly monadic functor satisﬁes the above condi-
tions. Conversely, assume that (A, U) = (XT, UT) for some monad T = (T, η, µ) on X,
and that conditions (2) and (3) are satisﬁed. Then F T and hence T = UT ◦F T preserve
regular epimorphisms. Thus T is a regular monad and (A, U) is regularly monadic. 
20.33 PROPOSITION
Regularly monadic functors detect colimits.
Proof: Let (A, U) be a regularly monadic category over X, let D : I →A be a diagram,
and let (UDi
ci
−−→C)i∈Ob(I) be a colimit of U ◦D.
Consider the structured source
(C
fj
−−→UAj)j∈J) consisting of all structured morphisms for which each UDi
fj◦ci
−−−−→UAj
is an A-morphism . If C
ηC
−−→UA is a universal arrow over C, then for each j ∈J
18th January 2005

340
Adjoints and Monads
[Chap. V
there exists a unique A-morphism A
gj
−−→Aj with fj = gj ◦ηC. Let (A
gj
−−→Aj)J =
(A
e
−→B
mj
−−→Aj)J be a (RegEpi, Mono-Source)-factorization.
UDi
ci
/
*T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
C
fj
!C
C
C
C
C
C
C
C
ηC
/ UA
gj
|yyyyyyyy
e
/ UB
mj
tiiiiiiiiiiiiiiiiiiiiii
UAj
Since mono-sources are initial and each UDi
fj◦ci
−−−−→UAj is an A-morphism, each
UDi
e◦ηC◦ci
−−−−−→UB is an A-morphism.
It follows easily that (Di
e◦ηC◦ci
−−−−−→B)i∈Ob(I)
is a colimit of D.

MONADIC CONSTRUCTS
20.34 PROPOSITION
Monadic constructs are complete, cocomplete, wellpowered, extremally co-wellpowered,
and have regular factorizations.
Proof: Let (A, U) be a monadic construct. By Proposition 20.12, A is complete and
wellpowered.
By Proposition 20.22, U is regularly monadic.
Hence Corollary 20.31
implies that A is extremally co-wellpowered, Proposition 20.30 implies that A has regular
factorizations, and Proposition 20.33 implies that A is cocomplete.

20.35 CHARACTERIZATION THEOREM FOR
MONADIC CONSTRUCTS
For constructs (A, U) the following conditions are equivalent:
(1) U is monadic,
(2) U is regularly monadic,
(3) U is adjoint and creates ﬁnite limits and coequalizers of congruence relations,
(4) U is extremally co-wellpowered and creates limits and coequalizers of congruence
relations.
Proof: (1) ⇔(2) by Proposition 20.22.
(1) ⇒(3). It suﬃces to show that U creates coequalizers of congruence relations. Let
A
p /
q / B be a pair of A-morphisms and let UA
Up /
Uq
/ UB
c
/ C be a congruence fork
in Set. By Example 20.15(2) it is a split fork. Thus the result follows from Theorem
20.17.
18th January 2005

Sec. 20]
Monads
341
(3) ⇒(1). By Theorem 20.17 it suﬃces to show that U creates coequalizers of split
forks. Let A
p /
q / B be a pair of A-morphisms and let
UB
id

t
"F
F
F
F
F
F
F
F
c
/ C
s
}{{{{{{{{
id

UA
Uq
|xxxxxxxx
Up / UB
c
!C
C
C
C
C
C
C
C
UB
c
/ C
be a commutative diagram in Set. Let (c1, c2) be a congruence relation of c in Set and
let (p1, p2) be a congruence relation of p in A. Then (Up1, Up2) is a congruence relation
of Up in Set. Thus there exist unique functions u and v that make the diagrams
UP
Up1
/
Up2

u
"
UA
Uq

Q
c2

c1
/ UB
c

UA
Uq
/ UB
c
/ C
and
Q
c1
/
c2

v
"
UB
t

UP
Up1 /
Up2

UA
Up

UB
t
/ UA
Up
/ UB
commute.
The equations ci ◦(u ◦v) = Uq ◦Upi ◦v = Uq ◦t ◦ci = ci = ci ◦id for i = 1, 2 imply that
u◦v = id. Thus, if L
ℓ1 /
ℓ2
/ UP is a congruence relation of u, then u is a coequalizer of ℓ1
and ℓ2. A straightforward computation shows that the source (L, (ℓi)) can be considered
as a limit of the diagram
L
ℓ1
/
ℓ2

UP
U(q◦p2)
.....................
U(q◦p1)

UP
U(q◦p1)
/
U(q◦p2)
*U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
UB
UB
Since U creates ﬁnite limits, there is a unique lift (ˆL
ˆℓi
−−→P) for the structured source
(L
ℓi
−−→UP). Since U ˆL
U ˆℓ1 /
U ˆℓ2
/ UP
u
/ Q is a congruence fork, UP
u
−→Q has a unique
18th January 2005

342
Adjoints and Monads
[Chap. V
lift P
ˆu
−→ˆQ and ˆu is a coequalizer of ˆℓ1 and ˆℓ2 in A. Thus the equations ci ◦U ˆu =
ci ◦u = U(q ◦pi) and the faithfulness of U imply that each ci can be lifted uniquely to an
A-morphism ˆQ
ˆci
−−→B. Since U ˆQ
Uˆc1 /
Uˆc2
/ UB
c
/ C is a congruence fork, UB
c−→C has
a unique lift B
ˆc−→ˆC and ˆc is a coequalizer of ˆc1 and ˆc2 in A. It remains to be shown
that ˆc is a coequalizer of p and q. Since ˆc ◦p = ˆc ◦q, this follows from the fact that
whenever ˆC
f
−→D is an A-morphism with f ◦p = f ◦q, then f ◦ˆc1 ◦ˆu = f ◦q ◦p1 =
f ◦p ◦p1 = f ◦p ◦p2 = f ◦q ◦p2 = f ◦ˆc2 ◦ˆu, and hence that f ◦ˆc1 = f ◦ˆc2.
(3) ⇒(4). In view of Proposition 18.11 this follows from (3) ⇒(1) and Proposition 20.34.
(4) ⇒(3). Since U creates limits and Set is strongly complete, so is A. Hence by
Theorem 17.11(1), U has (Generating,−)-factorizations, i.e., it is adjoint.

20.36 EXAMPLES
(1) The construct HComp is monadic. Condition (3) of the above theorem is easily
seen to hold.
(2) Neither of the constructs Catof and (Ban,O) is monadic. The corresponding for-
getful functors don’t preserve extremal epimorphisms [cf. 7.72(5)].
THE COMPARISON FUNCTOR
Next we will show that every monadic category is not only concretely isomorphic to
some category of algebras, but even to its associated category of algebras (cf. Remark
20.6). Moreover, for every concrete category (A, U) that has free objects, there exists a
distinguished concrete functor into its associated category of algebras; and that functor
turns out to be an isomorphism if and only if (A, U) is monadic. (See Proposition 20.40.)
20.37 PROPOSITION
If (η, ε) : F
 U : A →X is an adjoint situation and (XT, UT) is the associated
category of algebras, then there exists a unique functor A
K
−−→XT such that the diagram
X
F
/
F T

A
K
}||||||||
U

XT
UT / X
commutes.
Proof: Existence: The functor A
K
−−→XT, deﬁned by
K(A
f
−→B) = (UA, UεA)
Uf
−−→(UB, UεB),
has the desired properties.
18th January 2005

Sec. 20]
Monads
343
Uniqueness: Let A
ˆ
K
−−→XT be a functor satisfying U = UT ◦ˆK and F T = ˆK ◦F.
Consider an A-morphism A
f
−→B, and denote ˆK(A
f
−→B) by (X, x)
g
−→(Y, y). Then
U = UT ◦ˆK implies that UA
Uf
−−→UB = X
g
−→Y . Thus X = UA, Y = UB, and
g = Uf. It remains to be shown that x = UεA. Since FUA
εA
−−→A is an A-morphism,
ˆK(FUA
εA
−−→A) = F TUA
UεA
−−−→ˆKA is a T-homomorphism. Thus the diagram
TUA
id
!
TηUA
%K
K
K
K
K
K
K
K
K
id
'
TTUA
TUεA /
UεF UA

TUA
x

TUA
UεA
/ UA
commutes.
This implies that x = UεA, so that ˆK = K.

20.38 DEFINITION
(1) For each adjoint situation (η, ε) : F
 U : A →X, the unique functor A
K
−−→XT
of the above proposition is called its comparison functor.
(2) For each adjoint functor A
U
−−→X (resp. each concrete category (A, U) that has
free objects) the comparison functor of an associated adjoint situation is called a
comparison functor for U (resp. for (A, U)).
20.39 REMARKS
(1) In view of the essential uniqueness of comparison functors for U (cf. 20A) we will,
by “abuse of language”, usually speak of the comparison functor for U.
(2) Let (η, ε) : F
 U : A →X be an adjoint situation. Then Proposition 20.37 can
be interpreted as saying that the adjoint situation (ηT, εT) : F T
 UT : XT →X
induced from the associated monad T is the “largest” one with the same associated
monad.
In Exercise 20B it is indicated that every monad also has a “smallest
realization”, called its Kleisli category.
20.40 PROPOSITION
An adjoint functor is monadic if and only if the associated comparison functor is a
concrete isomorphism.
Proof: If the comparison functor for an adjoint functor U is an isomorphism, then U is
obviously monadic. Conversely, let A
U
−−→X be a functor, let T be a monad on X, and let
(A, U)
H
−−→(XT, UT) be a concrete isomorphism. Let (η, ε) : F T
 UT : XT →X be
18th January 2005

344
Adjoints and Monads
[Chap. V
the adjoint situation associated with T. Then (η, H−1εH) : H−1 ◦F T
 U : A →X
is an adjoint situation whose associated monad is T. Since the diagram
X
H−1◦F T/
F T

A
H
}{{{{{{{{
U

XT
UT / X
commutes, H is the associated comparison functor for U. Thus the comparison functor
is an isomorphism.

20.41 EXAMPLES
(1) The constructs Grp and TopGrp induce the same monads on Set. Thus the forget-
ful functor TopGrp →Grp is the comparison functor for the construct TopGrp.
(2) Since the constructs TfAb and Ab of torsion-free abelian groups and of abelian
groups induce the same monads in Set, the full embedding TfAb →Ab is the
comparison functor for TfAb.
(3) The construct Catof is not monadic. If Grph (= the category of oriented graphs)
is the full subconstruct of Alg(1, 1) that consists of all objects (X, c, d) that satisfy
the equations c ◦c = d ◦c = c and d ◦d = c ◦d = d, then the concrete functor
Catof
K
−−→Grph, deﬁned by KC = (Mor(C), c, d) (where Mor(C)
c /
d
/ Mor(C)
are given by d(A
f
−→B) = idA and c(A
f
−→B) = idB), is the comparison functor
for Catof. K is not full.
(4) The full concrete embedding of the construct (Ban, O) into the construct TConv
of totally convex spaces is the comparison functor for (Ban, O).
(5) Since the constructs Top and Set induce the same monad on Set, the forgetful
functor Top →Set is the comparison functor for Top.
20.42 THEOREM
Let (A, U)
K
−−→(XT, UT) be a comparison functor. If A has coequalizers, then K is
adjoint.
Proof: Let (η, ε) : F
 U : A →X be an adjoint situation and let T = (T, η, µ) be
the associated monad. Let (X, x) be a T-algebra and let FX
c−→C be a coequalizer of
FUFX
Fx
−−→FX and FUFX
εF X
−−−→FX. Then (X, x)
Uc◦ηX
−−−−−→KC is a K-universal
arrow as shown below:
(a).
Since (Uc ◦ηX) ◦x = Uc ◦UFx ◦ηUFX = Uc ◦UεFX ◦ηUFX = Uc ◦idUFX =
Uc ◦UidFX = Uc ◦U(εFX ◦FηX) = U(c ◦εFX) ◦UFηX = U(εC ◦FUc) ◦UFηX =
UεC ◦T(Uc ◦ηX), it follows that (X, x)
Uc◦ηX
−−−−−→(UC, UεC) is an T-homomorphism.
18th January 2005

Sec. 20]
Monads
345
(b).
Let (X, x)
f
−→KA be an arbitrary K-structured arrow.
Then FX
ˆf
−→A =
FX
εA◦Ff
−−−−−→A is the unique A-morphism with f = U ˆf ◦ηX (cf.
19J). The equations
U( ˆf ◦Fx) ◦ηUFX = U ˆf ◦UFx ◦ηUFX = U ˆf ◦ηX ◦x = f ◦x = UεA ◦UFf = U ˆf =
U ˆf◦UεFX◦ηUFX = U( ˆf◦εFX)◦ηUFX imply that ˆf◦Fx = ˆf◦εFX. Since c is a coequalizer
of Fx and εFX in A, there exists an A-morphism C
˜f
−→A with ˆf = ˜f ◦c. This implies
that (X, x)
f
−→KA = (X, x)
Uc◦ηX
−−−−−→KC
K ˜f
−−−→KA, since f = U ˆf ◦ηX = U ˜f ◦Uc ◦ηX
and K ˜f = U ˜f. Uniqueness of ˜f follows from the fact that c is an epimorphism in A. 
20.43 THEOREM
Let (η, ε) : F
 U : A →X be an adjoint situation with associated comparison functor
A
K
−−→XT. Then:
(1) K is faithful if and only if U is faithful,
(2) K is full and faithful if and only if ε is a RegEpi-transformation.
Proof:
(1). Obvious.
(2). Let ε be a RegEpi-transformation. Then, by Theorem 19.14(1), U is faithful. Thus
K is faithful as well.
Let A and B be objects in A and let KA
f
−→KB be
an XT-morphism.
If εA is a coequalizer of
C
r /
s / FUA , then the equations
UεB ◦UFf ◦Ur = f ◦UεA ◦Ur = f ◦UεA ◦Us = UεB ◦UFf ◦Us imply that
εB ◦Ff ◦r = εB ◦Ff ◦s by the faithfulness of U.
Thus there exists an A-
morphism A
ˆf
−→B with εB ◦Ff = ˆf ◦εA.
Since UεA as a retraction is an
epimorphism, the equations K ˆf ◦UεA = U ˆf ◦UεA = UεB ◦UFf = f ◦UεA imply
that K ˆf = f. Thus K is full. Conversely, let K be full and faithful and let A be an
A-object. Then εA ◦εFUA = εA ◦FUεA. To see that εA is a coequalizer of εFUA
and FUεA, let FUA
f
−→B be an A-morphism with f ◦εFUA = f ◦FUεA. The
equalities (Uf ◦ηUA) ◦UεA = Uf ◦UFUεA ◦ηUFUA = Uf ◦UεFUA ◦ηUFUA =
Uf = Uf ◦UεUFA ◦UFηUA = UεB ◦UFUf ◦UFηUA = UεB ◦T(Uf ◦ηUA)
imply that KA
Uf◦ηUA
−−−−−−→KB is an T-homomorphism.
By the fullness of K,
there exists an A-morphism A
ˆf
−→B with K ˆf = Uf ◦ηUA.
The equalities
Uf ◦ηUA = K ˆf = U ˆf = U ˆf ◦UεA ◦ηUA = U( ˆf ◦εA) ◦ηUA imply that f = ˆf ◦εA.
Uniqueness follows from the fact that (due to the faithfulness of K and hence of U)
εA is an epimorphism [cf. Theorem 19.14(1)].

20.44 COROLLARY
The comparison functor (A, U)
K
−−→(XT, UT) of a uniquely transportable concrete cat-
egory, for which U reﬂects regular epimorphisms, is an isomorphism-closed full embed-
ding.

18th January 2005

346
Adjoints and Monads
[Chap. V
DEFICIENCIES OF MONADIC FUNCTORS
20.45 EXAMPLE
A composite of two regularly monadic functors need not be monadic. Consider
TfAb
U
/
V ◦U
$I
I
I
I
I
I
I
I
I
Ab
V

Set
20.46 EXAMPLE
Concrete functors between monadic categories need not be adjoint. Consider
Ab∞
E /
U
$I
I
I
I
I
I
I
I
I
Grp∞
V

Set∞
where (in each case) A∞is the full subcategory of A that consists of those objects of A
that have inﬁnite underlying sets, where U and V are the forgetful functors, and E is
the inclusion functor.
20.47 EXAMPLE
Monadic functors need not detect colimits. The following yields a monadic category over
Pos that is not cocomplete.
Denote by P0 : Set →Pos the power-set functor equipped with the ordering of PX such
that ∅is the least element, and PX−{∅} is discretely ordered. Denote by H : Pos →Set
the functor that assigns to each poset (X, ≤) the set
H(X, ≤) = { (x, y, z) ∈X3  x < y < z} ∪{α}
(where α ̸∈X3)
and to each order-preserving function f : (X, ≤) →(Y, ≤), the map Hf with Hf(α) =
α, and
Hf(x, y, z) =
(
(f(x), f(y), f(z)),
if
f(x) ̸= f(y) ̸= f(z)
α,
otherwise.
(a) The functor T = P0 ◦H : Pos →Pos is such that Alg(T) has free objects. In fact,
for each poset A we have TA = T(A + TA) and, hence, the free T-algebra over A
is (A + TA, ϕ), where TA
ϕ
−→A + TA is the second coproduct injection, whereas
the universal arrow A
η
−→A + TA is the ﬁrst coproduct injection. Hence, Alg(T) is
monadic over Pos.
(b) Alg(T) does not have the coproduct of the following T-algebra (X, x) with itself:
X is the 3-chain a < b < c, and x : TX →X is the constant map to a.
18th January 2005

Sec. 20]
Monads
347
To prove this, for each ordinal i deﬁne T-homomorphisms fi, gi : (X, x) →(Yi, yi) as
follows: Yi is the following poset
c1
@
@
@
@
@
@
@
@
c2
0
        1
...
ppppppppppppppp
. . .
j
...
ggggggggggggggggggggggggggggg
. . .
b
a
(j < i)
and for each j < i,
j = yi({ (a, b, k)
 k < j } ∪{ (a, b, ci)
 i = 1, 2 }),
and otherwise, yi is constant to a. Finally, fi(a) = gi(a) = a, fi(b) = gi(b) = b, and
fi(c) = c1, gi(c) = c2. It is easy to verify that fi and gi are homomorphisms such that
whenever (X, x)+(X, x) exists, the factorizing homomorphism (X, x)+(X, x) →(Yi, yi)
is surjective. This is impossible.
20.48 EXAMPLE
Monadic categories over co-wellpowered categories need not be extremally co-wellpowered.
See Exercise 16A(a).
20.49 EXAMPLE
Monadic categories over categories with regular factorizations need not have (Epi, Mono-
Source)-factorizations. See Exercise 16A(b).
20.50 EXAMPLE
Monadic functors need not preserve either extremal epimorphisms or regular epimor-
phisms. In fact they can map regular epimorphisms into non-extremal epimorphisms
[see Exercise 16A(b)] and extremal epimorphisms into non-epimorphisms [see Exercise
16A(a)].
20.51 EXAMPLE
In monadic categories, regular epimorphisms need not be ﬁnal. The comparison functor
Catof
K
−−→Grph for the construct Catof, described in Example 20.41(3), is monadic.
The functor F, described in Example 7.40(6), is a regular epimorphism in Catof that is
not ﬁnal in (Catof, K).
20.52 EXAMPLE
Monadic functors need not reﬂect regular epimorphisms.
As above, the comparison
functor Catof
K
−−→Grph is monadic. The functor A
G◦F
−−−→C, described in Remark
7.76(1), is not a regular epimorphism in Catof, but K(G ◦F) is a regular epimorphism
in Grph.
18th January 2005

348
Adjoints and Monads
[Chap. V
VARIETORS AND FREE MONADS
We now explain the role that the categories of the form Alg(T) play among monadic
categories. They are, up to isomorphism, precisely the Eilenberg-Moore categories of
free monads (introduced below).
20.53 DEFINITION
A functor T : X →X is called a varietor provided that the concrete category Alg(T)
has free objects.
20.54 EXAMPLES
(1) Sn : Set →Set is a varietor. Each set generates a free Sn-algebra (i.e., an algebra
with one n-ary operation; cf. 8.23(6)).
(2) If X has countable colimits, then idX is a varietor. Each object X generates a free
idX-algebra whose underlying object is a coproduct of countably many copies of X.
More generally, every functor T : X →X that preserves colimits of ω-chains is a
varietor (cf. Exercise 20P).
(3) The power-set functor P is not a varietor. If Alg(P) would have an initial object
(X, x), then x : PX →X would be an isomorphism (cf. Exercise 20I). However,
card PX > card X.
20.55 DEFINITION
(1) Given monads T = (T, η, µ) and T′ = (T ′, η′, µ′) over X, a natural transformation
τ : T →T ′ is called a monad morphism (denoted by τ : T →T′) provided that
η′ = τ ◦η and τ ◦µ = µ′ ◦τT ′ ◦Tτ.
(2) A free monad generated by a functor T : X →X is a monad T# = (T #, η#, µ#)
together with a natural transformation λ : T →T # that has the following universal
property: for every monad T′ = (T ′, η′, µ′) and every natural transformation
τ : T →T ′ there exists a unique monad morphism τ # : T# →T′ with τ = τ # ◦λ.
20.56 THEOREM
If T : X →X is a varietor, then Alg(T) is monadic over X and the associated monad
is a free monad generated by T.
Proof: Let U : Alg(T) →X denote the forgetful functor, let F : X →Alg(T) be the
free functor, let T # = U ◦F, and let T# = (T #, η#, µ#) be the associated monad.
(1). U is monadic because it creates absolute coequalizers (20.17). If (X, x)
f1 /
f2
/ (Y, y)
are T-homomorphisms and X
f1 /
f2
/ Y
c / Z is an absolute coequalizer in X, then
Tc is a coequalizer of Tf1 and Tf2, and since
(c ◦y) ◦Tf1 = c ◦f1 ◦x = c ◦f2 ◦x = (c ◦y) ◦Tf2,
18th January 2005

Sec. 20]
Monads
349
there is a unique TZ
z
−→Z for which c : (Y, y) →(Z, z) is a T-homomorphism.
The fact that Tc is a (regular) epimorphism makes it easy to see that
(X, x)
f1 /
f2
/ (Y, y)
c / (Z, z) is a coequalizer in Alg(T).
(2). If FX = (X#, ϕX), then the morphisms
TX
λX
−−−→T #X
=
TX
TηX
−−−→TX#
ϕX
−−−→X#
obviously satisfy the naturality condition; i.e., they form a natural transformation
λ : T →T #. To verify the universal property, let (T ′, η′, µ′) be a monad, and let
τ : T →T ′ be a natural transformation. For each X-object X we have a T-algebra
T(T ′X)
(τT ′)X
−−−−−→(T ′)2X
µ′
X
−−−→T ′X.
Furthermore, there exists a unique T-homomorphism τ #
X : FX →(T ′X, [µ′◦τT ′]X)
with τ #
X ◦ηX = η′
X. It is a straightforward computation to verify that the morphisms
Uτ #
X form a natural transformation τ # : T # →T ′ that satisﬁes all the required
equalities.

20.57 COROLLARY
If T : X →X is a varietor, then the category Alg(T) is concretely isomorphic to XT#
for a free monad T#.

20.58 REMARK
The following theorem provides a partial converse to the above (in the case where X is
strongly complete).
20.59 THEOREM
If X is a strongly complete category, then every functor T : X →X that generates a
free monad is a varietor.
Proof: Let (T #, η#, µ#) together with λ : T →T # be a free monad over T.
To
prove that the forgetful functor U : Alg(T) →X is adjoint, it is suﬃcient to verify
the solution-set condition of Theorem 18.12, since Alg(T) is complete and U preserves
limits (13N). We will show that for each X-object X the T-algebra
T(T #X)
λT #X
−−−−→(T #)2X
µ#
X
−−−→T #X
together with the X-morphism η#
X : X →T #X forms a singleton solution set.
In
other words, for each T-algebra (Y, y) and each X-morphism f : X →Y there is a
T-homomorphism
g : (T #X, µ#
X ◦λT #X) →(Y, y)
with
f = g ◦η#
X.
18th January 2005

350
Adjoints and Monads
[Chap. V
Denote by (B, U′) the full concrete subcategory of Alg(T) consisting of all subalgebras
of products of the T-algebra (Y, y). Then B is closed under the formation of limits in
Alg(T). Thus B is strongly complete and U′ preserves limits. Moreover, (Y, y) is a
coseparator of B (10.38), and hence, U′ is adjoint (18.17). Let F ′ : X →B denote the
free functor, F ′X = (X∗, ϕX), and let (T ′, η′, µ′) be the associated monad. Then the
morphisms
TX
TηX
−−−→TX∗
ϕX
−−−→X∗
clearly form a natural transformation τ : T →T ′. By the universal property of λ there
exists a unique natural transformation τ # : T # →T ′ with (a) τ = τ # ◦λ,
(b)
η′ = τ # ◦η#, and (c)
τ # ◦µ# = µ′ ◦τ #T ′ ◦T #τ #.
If f : X →Y is a morphism, then since (Y, y) lies in B, there is a unique T-homomor-
phism f∗: T ′X →(Y, y) with f = f∗◦η′
X. Then g = f∗◦τ #
X : T #X →Y is the
desired morphism. In fact, from (b) it follows that f = g ◦η#
X, and from (a) and (c)
and the properties of monads it is easy to verify that g is a T-homomorphism (i.e., that
y ◦Ty = g ◦µ#
X ◦λT #x).

Suggestions for Further Reading
Eilenberg, S., and J. C. Moore. Adjoint functors and triples.
Illinois J. Math.
9
(1965): 381–398.
Kleisli, H. Every standard construction is induced by a pair of adjoint functors. Proc.
Amer. Math. Soc. 16 (1965): 544–546.
Maranda, J. M. On fundamental constructions and adjoint functors.
Canad. Math.
Bull. 9 (1966): 581–591.
Beck, J. Triples, algebras and cohomology. Ph. D. dissertation, Columbia University,
1967.
Manes, E. G. A triple miscellany: Some aspects of the theory of algebras over a triple.
Ph. D. dissertation, Wesleyan University, 1967.
Linton, F. E. J. Coequalizers in categories of algebras. Springer Lect. Notes Math. 80
(1969): 75–90.
Duskin, J. Variations on Beck’s tripleability criterion. Springer Lect. Notes Math. 106
(1969): 74–129.
Applegate, H., and M. Tierney. Iterated cotriples. Springer Lect. Notes Math.
137
(1970): 56–99.
Pumpl¨un, D. Eine Bemerkung ¨uber Monaden und adjungierte Funktoren. Math. Ann.
185 (1970): 329–337.
Gabriel, P., and F. Ulmer. Lokal pr¨asentierbare Kategorien. Springer Lect. Notes Math.
221 (1971): 1–200.
18th January 2005

Sec. 20]
Monads
351
Par´e, R. On absolute colimits. J. Algebra 19 (1971): 80–95.
Ad´amek, J. Colimits of algebras revisited. Bull. Austral. Math. Soc. 17 (1977): 433–
450.
Mac Donald, J. L., and A. Stone. The tower and regular decomposition. Cahiers Topol.
Geom. Diﬀ. 23 (1982): 197–213.
Pumpl¨un, D., and H. R¨ohrl. Banach spaces and totally convex spaces I. Commun. Alg.
12 (1984): 953–1019.
EXERCISES
20A. Associated Categories of T-Algebras Are Essentially Unique
Show that
(a) If (η, ε) : F
 U : A →X and (η, ε) : F
 U : A →X are adjoint situations
that are isomorphic in the sense of Proposition 19.9, then the associated monads
T = (T, η, µ) and T = (T, η, µ) are isomorphic in the following sense: there exists
a natural isomorphism T
σ
−→T that is a monad morphism (20.55).
(b) If monads T = (T, η, µ) and T = (T, η, µ) in X are isomorphic in the above sense,
then the associated categories of T-algebras and T-algebras are concretely isomor-
phic.
(c) If (A, U) is a concrete category over X with free objects and if (A, U)
K
−−→(XT, UT)
and (A, U)
K
−−→(XT, UT) are associated comparison functors, then there exists a
concrete isomorphism (XT, UT)
H
−−→(XT, UT) with K = H ◦K.
20B. The Kleisli Category of a Monad
The Kleisli category of a monad T = (T, η, µ) in X is the following concrete category
(XT, UT) over X: Ob(XT) = Ob(X), homXT(X, Y ) = homX(X, TY ), (idX)XT = ηX,
and the composition of X
f
−→TY with Y
g
−→TZ in XT is given by µZ ◦Tg ◦f (in X).
Furthermore, UT(X
f
−→TY ) = TX
µY ◦Tf
−−−−−→TY.
(a) Prove that UT has a co-adjoint FT with FT(X
f
−→Y ) = (X
ηY ◦f
−−−−→TY ), and that
the associated monad of this adjoint situation is T.
(b) Prove that for each adjoint situation F
 G : A
 X with the associated monad
T, there exists a unique functor K∗: XT →A with F = K∗◦FT and UT = G◦K∗.
(c) Describe the Kleisli category of the power-set monad as the category of “sets and
relations”.
(d) Show that UT need not detect ﬁnite limits. [Consider (c).]
18th January 2005

352
Adjoints and Monads
[Chap. V
* 20C. Algebraic Theories
(a) Let T be a monad over Set. Verify that in the Kleisli category XT (20B) each object
(set) X is a coproduct of X copies of 1 = {0} with coproduct injections kx : 1 →X
in XT corresponding to ηX(x) ∈TX. Prove that for each T-algebra A the functor
FA : XTop →Set given by
FA(X
f
−→Y ) = hom((TX, µX), A)
FAf
−−−→hom((TY, µY ), A)
[where FAf(h) = h ◦µX ◦Tf (in Set)] preserves products.
(b) Conversely, prove that every product-preserving functor F : (XT)op →Set is nat-
urally isomorphic to FA for some T-algebra A. [Hint: Choose A to be (F(1), ϕ),
where ϕ : TF(1) →F(1) assigns to each element of TF(1) represented by an XT-
morphism f : 1 →F(1), the element of F(1) that the function Ff : F 2(1) →F(1)
assigns to id ∈(F(1))F(1).] Conclude that SetT is equivalent to the quasicategory
of all product-preserving functors from (XT)op to Set.
(c) An algebraic theory is a category L whose objects are precisely all sets and such
that each object X is a coproduct of X copies of 1. A model of L is a product-
preserving functor from Lop into Set.
The quasicategory Mod(L) of models of
L is the full subcategory of [Lop, Set] that has models as objects.
Prove that
Mod(L) is equivalent to a monadic construct.
Moreover, show that the Kleisli
category of the corresponding monad is equivalent to L.
(d) Verify that the above transitions between monads and algebraic theories are essen-
tially inverse to each other (i.e., inverse up to isomorphism of monads and up to
equivalence of algebraic theories).
* 20D. Cocompleteness of Monadic Categories
Let (A, U) be a monadic category over X and let A have coequalizers. Show that
(a) A has colimits over each scheme over which colimits exist in X.
(b) If X is cocomplete then so is A.
* 20E. Concrete Functors Between Monadic Categories
Let (A, U)
G
−−→(B, V ) be a concrete functor between monadic categories. Show that
(a) If A has coequalizers, then G is monadic.
(b) If (A, U) and (B, V ) are regularly monadic, then G is regularly monadic.
20F. Idempotent Monads
A monad T = (T, η, µ) is called idempotent provided that T 2
µ
−→T is a natural
isomorphism. Show that
(a) For a monad T = (T, η, µ) the following conditions are equivalent:
(1) T is idempotent,
18th January 2005

Sec. 20]
Monads
353
(2) Tη is an Epi-transformation,
(3) XT
UT
−−−→X is full,
(4) XT
UT
−−−→X is an isomorphism-closed full reﬂective embedding.
(b) If A
U
−−→X is an isomorphism-closed full reﬂective embedding, then the associated
monad is idempotent.
(c) The monad associated with the forgetful functor Top →Set is idempotent.
* 20G. Monads With Rank
A monad T = (T, η, µ) is said to have rank k, where k is a regular cardinal, provided
that T preserves k-directed colimits, i.e., colimits of diagrams whose schemes are posets
in which every subset of cardinality less than k has an upper bound.
(a) Prove that for each variety of ﬁnitary algebras the corresponding monad in Set has
rank ℵ0.
(b) Let B be an isomorphism-closed, full reﬂective subcategory of a category A. Prove
that the corresponding idempotent monad in A has rank k if and only if B is closed
under the formation of k-direct colimits in A.
(c) For each small category A prove that the forgetful functor [A, Set] →[Ob(A), Set]
(where the set Ob(A) is considered to be a discrete category) is monadic, and that
the corresponding monad has rank ℵ0.
* 20H. Locally Presentable Categories
An object A of a category A is called presentable provided that hom(A, −) : A →Set
preserves k-directed colimits for some regular cardinal k. A category A is called locally
presentable provided that it is cocomplete and has a dense (see 12D) subcategory
formed by presentable objects.
(a) Show that every object A is presentable in Set, Vec, Pos, and Aut. [Choose any
regular cardinal k larger than card A.] Show that in Top the only presentable objects
are the discrete spaces, and in HComp only the empty space is presentable.
(b) Show that Set, Vec, Pos, and Aut are locally presentable categories. Furthermore,
show that [A, Set] is locally presentable for each small category A.
(c) Show that for each monad T with rank over a locally presentable category X the
category XT is locally presentable.
In particular, if Setm denotes the category
Setm for some cardinal number m, then
Setm, SetmT1, (SetmT1)T2, . . .
are locally presentable categories for arbitrary monads T1, T2, . . . with rank.
(d) Conversely, prove that every locally presentable category A is equivalent to a cat-
egory (SetmT1)T2 for some monads T1, T2 with rank; in fact, let B be a dense
subcategory of A formed by presentable objects, then show that
18th January 2005

354
Adjoints and Monads
[Chap. V
(1) the full and faithful functor E : A →[Bop, Set] of Exercise 12D(c) maps A onto
a reﬂective subcategory E[A], and the corresponding idempotent monad T2 on
[Bop, Set] has rank,
(2) [Bop, Set] is monadic with rank ℵ0 over Setn = Setn for n = card B [20G(c)].
(e) Let us call an object A strongly n-generated provided that hom(A, −) preserves
colimits of n-directed diagrams whose connecting morphisms are strong monomor-
phisms. Prove that then every quotient of A is also strongly n-generated.
In a locally n-presentable category X the strongly n-generated objects are precisely
the quotients of n-presentable objects. And given a monad T with rank n prove that
a T-algebra is strongly n-presentable in XT iﬀit is a quotient of the free algebra
TX for some strongly n-generated object X.
(f) In every locally presentable category X prove that every object is strongly n-pre-
sentable for some n. Conclude that if X has, for every regular cardinal n, only a
set of strongly n-generated objects up to isomorphism, then X is co-wellpowered.
Moreover, XT is also co- wellpowered for every monad T with rank.
(g) Conclude that every locally presentable category is complete, wellpowered, and co-
wellpowered.
20I. Initial T -algebras
For an initial object (X, x) of Alg(T) prove that x is an isomorphism. [Hint: Use the
T-algebra (TX, Tx).]
* 20J. Monadic Towers
Let A be cocomplete and let A
U
−−→X be an adjoint functor. Call the associated monad
T1 and the associated comparison functor A
U1
−−→XT1.
Then U = UT1 ◦U1.
By
Theorem 20.42, U1 is adjoint. Denote the associated monad by T2 and the associated
comparison functor by U2. Then the diagram
XT2
UT2

A
U2
o
U1
}||||||||
U

XT1
UT1 / X
commutes. This process can be iterated over all ordinals (with limit-steps obtained by
forming a limit in the quasicategory CAT).
(a) Show that UT2 is an equivalence whenever U maps regular epimorphisms to epimor-
phisms.
(b) Let An (n a natural number) be the construct whose objects are pairs (X, (αi)i≤n),
where X is a set and αi is a partial endofunction of X deﬁned on x ∈X if and only if
αj(x) = x for all j < i. Morphisms from (X, (αi)i<n) to (X′, (α′
i)i<n) are functions
f : X →X′ such that f(αi(x)) = α′
i(f(x)) whenever αi(x) is deﬁned. Describe
18th January 2005

Sec. 20]
Monads
355
the free algebras, comparison functors, etc.
in detail and prove that the iteration
described above takes precisely n steps. That is, if U0 is the forgetful functor of An
and Uk+1 is the comparison functor associated with the kth step (k = 0, 1, 2, . . .),
then Un is an equivalence but Un−1 is not.
(c) Show that there exists a construct for which the above iteration does not stop.
20K. The Constructs Topop
0
and Fram
Show that (cf. 5L)
(a) Fram is monadic.
(b) Topop
0
has free objects.
(c) The concrete functor Topop
0
T
−−→Fram described in Exercise 5L is a comparison
functor.
20L. Regularly Monadic Functors Lift Regularity
Show that
(a) If X is regular and A
U
−−→X is regularly monadic, then A is regular.
(b) Monadic constructs are regular.
20M. Extremally Monadic Functors
A functor A
U
−−→X (resp. a concrete category (A, U) over X) is called extremally
monadic provided that X is an (ExtrEpi, Mono-Source)-category and U is ExtrEpi-
monadic. Show that a concrete category (A, U) over X is regularly monadic if and only
if it is extremally monadic and X has regular factorizations.
20N. When Are Order Preserving Maps Monadic?
(a) Show that a morphism in Pos, considered as a functor between thin categories, is
monadic if and only if it is an embedding of a full reﬂective subcategory.
(b) For any function A
f
−→B consider PA
Pf
−−→PB as a functor (cf. Exercise 6G).
Show that Pf is monadic if and only if f is surjective.
20O. Monadic Functors and Extremal Monomorphisms
Determine whether or not monadic functors preserve extremal monomorphisms.
* 20P. Varietors and Colimits of ω-chains
Let T : X →X be a functor with X having countable colimits. For each object X deﬁne
a diagram D : N →X (where N is the thin category of natural numbers) by
D0 = X,
Dn+1 = X + TDn,
D(0 →1) = X →X + TX,
the ﬁrst coproduct injection,
D(n + 1 →m + 1) = X + TDn
idX+TD(n→m)
−−−−−−−−−−−→X + TDm.
18th January 2005

[Chap. V
(a) If T preserves the colimit of D, prove that X generates a free T-algebra. [Hint: If
(Dn
dn
−−→C)N is a colimit of D, then there is a unique c : TC →C with c ◦Tdn =
dn+1 ◦un, where un : TDn →X +TDn is the second injection. Then X
d0
−−→|(C, c)|
is universal.]
(b) Conclude that each functor T : X →X that preserves colimits of ω-chains (i.e.,
diagrams with the scheme N) is a varietor.
(c) Find a varietor that does not preserve colimits of ω-chains.
18th January 2005

Chapter VI
TOPOLOGICAL
AND
ALGEBRAIC
CATEGORIES
As demonstrated in §5, the vague concept of “structure” has a formalization in the
concept of a “concrete category” — the idea being that the forgetful or underlying
functor “forgets” the structure in question. Many structures can be decomposed into
more basic ones, which often can be classiﬁed as “topological” or “algebraic”. The nature
of a structure is reﬂected not so much in properties of its abstract category, but rather
in properties of its underlying functor. For example, topological groups can be regarded:
(a) as topological structures via the forgetful functor TopGrp
U
−−→Grp, i.e., as topo-
logical structures over Grp, or
(b) as algebraic structures via the forgetful functor TopGrp
V
−−→Top, i.e., as algebraic
structures over Top, or
(c) as topologically algebraic structures via the forgetful functor TopGrp
W
−−→Set, i.e.,
as topologically algebraic structures over Set.
Since it is the underlying functor rather than the abstract category that determines
the character of a structure (= concrete category), in each case we study properties of
functors ﬁrst. Surprisingly, each of the crucial properties under investigation (U being
topological, algebraic, or topologically algebraic ) implies that the functor U in question
is faithful, i.e., is the forgetful functor of a concrete category.
We choose terminology such that a concrete category (A, U) has a certain property P
if and only if its forgetful functor U has the property P. A desirable characteristic of
such properties will be that they are closed under composition. Moreover, for “algebraic”
properties P, it will be desirable that concrete functors between concrete categories with
property P will automatically have property P as well.
Most properties under investigation can be deﬁned either in a rigid (uniquely trans-
portable) version or in a more ﬂexible (closed under equivalences) one. We have found
it somewhat more convenient and consistent with the current usage to choose the rigid
version in the topological and algebraic cases, and the ﬂexible version in the topologically
algebraic case.
18th January 2005
357


21 Topological categories
The following phenomena are typical for topological categories (A, U):
(1) (A, U) is initially complete, i.e., every structured source (X
fi
−−→UAi)I has a unique
initial lift (A
fi
−−→Ai)I,
(2) (A, U) is ﬁnally complete, i.e., every structured sink (UAi
fi
−−→X)I has a unique
ﬁnal lift (Ai
fi
−−→A)I,
(3) (A, U) is ﬁbre-complete, i.e., every ﬁbre is a (possibly large) complete lattice (cf. Def-
inition 5.7),
(4) (A, U) has discrete structures, i.e., every X-object has a discrete lift,
(5) (A, U) has indiscrete structures, i.e., every X-object has an indiscrete lift.
As we will see, the above conditions are not independent of each other. In fact, (1)
and (2) are equivalent [Topological Duality Theorem (21.9)], and imply all the others.
Moreover, (1) and (2) have many other pleasant consequences. For example, they imply
that U lifts limits (and colimits) uniquely. The unique lifting of limits implies, together
with (5), all of the other conditions (21.18). However, forgetful functors of algebraic
categories also lift limits uniquely (see §23). Hence the very simple condition (5) in
some sense may be considered to be at the heart of topology.
TOPOLOGICAL FUNCTORS
21.1 DEFINITION
A functor A
G
−−→B is called topological provided that every G-structured source
(B
fi
−−→GAi)I has a unique G-initial lift (A
fi
−−→Ai)I.
21.2 EXAMPLES
(1) The forgetful functors of the constructs Top, Unif, PMet, Rel, and Prost are
topological, but those of the constructs Haus, Met, Vec, and Pos are not topolog-
ical.
(2) For a thin category A, the unique functor to 1 is topological if and only if A is a
(possibly large) complete lattice.
21.3 THEOREM
Topological functors are faithful.
359

360
Topological and Algebraic Categories
[Chap. VI
Proof: Let A
r /
s / A′ be a pair of A-morphisms with Gr = Gs. Consider the source
S = (GA
fh
−−→GAh)h∈Mor(A) with (fh, Ah) = (Gr, A′) for each h ∈Mor(A).
Let
ˆS = ( ˆA
ˆfh
−−→A′)h∈Mor(A) be a G-initial lift of S. Deﬁne a source T = (A
gh
−−→A′) by
gh =
(
r,
if ˆfh ◦h = s
s,
otherwise.
Then GT = G ˆS ◦idGA. By G-initiality of ˆS there exists a morphism A
k
−→ˆA with
T = ˆS ◦k, i.e., gh = ˆfh ◦k for each h ∈Mor(A). In particular, we obtain gk = ˆfk ◦k,
which — by the deﬁnition of the gh’s — is possible only for r = s.

Lifting of a source in a topological category
21.4 REMARK
We will see below that “to be topological” is a very strong and pleasant property. Much
of the strength lies in the fact that the G-structured sources are allowed to be large
(as can be discerned from the preceding proof). For example, the natural “forgetful”
functor G from the category of modules to the category of rings is not faithful, hence not
topological, even though each small G-structured source has a G-initial lift (see Exercise
21D).
21.5 PROPOSITION
If A
G
−−→B is a functor such that every G-structured source has a G-initial lift, then the
following conditions are equivalent:
18th January 2005

Sec. 21]
Topological categories
361
(1) G is topological,
(2) (A, G) is uniquely transportable,
(3) (A, G) is amnestic.
Proof: (1) ⇒(2) is immediate from Proposition 8.14, once it is observed that G is
faithful. The latter follows as in the proof of Theorem 21.3.
(2) ⇒(3) follows from Proposition 5.29.
(3) ⇒(1). If (A
fi
−−→Ai)I and ( ˜A
˜fi
−−→Ai)I are initial lifts of (X
fi
−−→GAi)I, then A ≤˜A
and ˜A ≤A; hence by (3), A = ˜A.

21.6 PROPOSITION
If A
G
−−→B and B
F
−−→C are topological, then so is A
F◦G
−−−→C.
Proof: Immediate by Proposition 21.5, since amnesticity and existence of initial liftings
are compositive properties.

TOPOLOGICAL CATEGORIES
21.7 DEFINITION
A concrete category (A, U) is called topological provided that U is topological.
21.8 EXAMPLES
(1) The constructs Top, Unif, PMet, Rel, and Prost are topological.
(2) All functor-structured categories Spa(T) and all functor-costructured categories
(Spa(T))op are topological.
(3) A partially ordered set, considered as concrete category over 1, is topological if and
only if it is a complete lattice.
(4) TopGrp is topological if it is considered as a concrete category over Grp, but not
if it is considered as a concrete category over Top or over Set.
(5) The construct Top1 is not topological, even though for every structured source
(X
fi
−−→(Xi, τi))I there exists a largest Top1-structure (= the smallest T1-topology)
τ on X making each (X, τ)
fi
−−→(Xi, τi) continuous.
The following theorem generalizes the well-known fact that each meet-complete poset is
also join-complete.
21.9 TOPOLOGICAL DUALITY THEOREM
If (A, U) is topological over X, then (Aop, Uop) is topological over Xop (i.e., the existence
of unique U-initial lifts of U-structured sources implies the existence of unique U-ﬁnal lifts
of U-structured sinks).
18th January 2005

362
Topological and Algebraic Categories
[Chap. VI
Proof: Let (A, U) be topological. It must be shown that in (A, U) every structured
sink S = (UAi
fi
−−→X)I has a ﬁnal lift (since uniqueness follows from amnesticity).
Consider the structured source T = (X
gj
−−→UBj)J consisting of all structured arrows
(gj, Bj) with the property that UAi
fi
−−→X
gj
−−→UBj is an A-morphism for each i ∈I.
If (A
gj
−−→Bj)J is an initial lift of T , then (Ai
fi
−−→A)I is a ﬁnal lift of S.

21.10 REMARK
The above Topological Duality Theorem implies that (as was the case for abstract and
for concrete categories) there is also a Duality Principle available for topological cat-
egories. However, observe that, since the dual of a concrete (resp. topological) category
over X is a concrete (resp. topological) category over Xop, this does not imply a Duality
Principle for (topological) concrete categories over a ﬁxed category X (unless Xop = X,
as for X = 1). In particular, there is not a Duality Principle available for topological
constructs.
21.11 PROPOSITION
Topological categories are ﬁbre-complete. The smallest (resp. largest) member of each
ﬁbre is discrete (resp. indiscrete).
Proof: Let (A, U) be topological over X, let X be an X-object, and let (Ai)I be a
family of A-objects with UAi = X. If (A
idX
−−−→Ai)I is an initial lift of (X
idX
−−−→UAi)I,
then A = inf(Ai) in the ﬁbre of X. For I = ∅, we have that A is the largest element of
the ﬁbre of X. It is an indiscrete object, since (A, ∅) is an initial source [cf. 10.42(1)].
By duality, the smallest element of the ﬁbre of X must be discrete.

21.12 PROPOSITION
If (A, U) is topological over X, then
(1) U is an adjoint functor; its co-adjoint X
F
−−→A (the discrete functor) is a full
embedding, satisfying U ◦F = idX.
(2) U is a co-adjoint functor; its adjoint X
G
−−→A (the indiscrete functor) is a full
embedding, satisfying U ◦G = idX.
Proof: Immediate from Proposition 21.11.

21.13 PROPOSITION
If (A, U) is topological over X, then the following hold:
(1) U preserves and reﬂects mono-sources and epi-sinks.
(2) An A-morphism is an extremal (resp. regular) monomorphism if and only if it is
initial and an extremal (resp. regular) X-monomorphism.
(3) An A-morphism is an extremal (resp. regular) epimorphism if and only if it is ﬁnal
and an extremal (resp. regular) X-epimorphism.
18th January 2005

Sec. 21]
Topological categories
363
In particular, in topological constructs, the following hold:
(4) embeddings = extremal monomorphisms = regular monomorphisms.
(5) quotient morphisms = extremal epimorphisms = regular epimorphisms.
Proof:
(1). Since U is faithful and (co)adjoint, it reﬂects and preserves mono-sources (epi-sinks).
(2). Let A
m
−−→B be an extremal monomorphism in A. Then, by (1), UA
m
−−→UB is
a monomorphism in X. Let UA
m
−−→UB = UA
e
−→X
f
−→UB be an (Epi,−)-
factorization in X. Then UA
e
−→X has a ﬁnal lift A
e
−→C. Consequently, by (1),
A
m
−−→B = A
e
−→C
f
−→B is an (Epi,−)-factorization in A. Therefore, e is an
isomorphism in A and hence in X. Thus UA
m
−−→UB is an extremal monomorphism
in X. To show initiality of A
m
−−→B, let A′
m
−−→B be an initial lift of UA
m
−−→UB.
Then A
m
−−→B = A
idUA
−−−→A′
m
−−→B is an (Epi,−)-factorization. Thus A
idUA
−−−→A′
is an isomorphism; hence by amnesticity A = A′. So A
m
−−→B = A′
m
−−→B is initial.
For the converse, let A
m
−−→B be an initial morphism such that UA
m
−−→UB is an
extremal monomorphism in X. Then, by (1), A
m
−−→B is a monomorphism in A.
Let A
m
−−→B = A
e
−→C
f
−→B be an (Epi,−)-factorization in A. Then UA
e
−→UC
is an X-isomorphism and A
e
−→C is initial. Hence, by Proposition 8.14, A
e
−→C is
an isomorphism. Thus A
m
−−→B is an extremal monomorphism in A.
Next, let A
m
−−→B be a regular monomorphism in A. Then it is extremal and hence
initial. By adjointness, UA
m
−−→UB is a regular monomorphism in X. Conversely,
let A
m
−−→B be an initial morphism such that UA
m
−−→UB is an equalizer of
UB
r
/
s / X in X. If B
r /
s / C is a ﬁnal lift, then by Proposition 13.15, m is an
equalizer of r and s in A.
(3) follows by duality (21.9).
(4) and (5) are immediate from (2) and (3).

21.14 PROPOSITION
If (A, U) is topological over an (E, M)-category X, then the following hold:
(1) A is an (E, Minit)-category, where Minit consists of all initial sources in M.
(2) A is an (Efin, M)-category, where Efin consists of all ﬁnal E-morphisms.

21.15 PROPOSITION
If (A, U) is topological over X, then U uniquely lifts both limits (via initiality) and
colimits (via ﬁnality), and it preserves both limits and colimits.
Proof: The unique lifting follows immediately from Proposition 13.15 and its dual; the
preservation from (co)adjointness of U.

18th January 2005

364
Topological and Algebraic Categories
[Chap. VI
21.16 THEOREM
If (A, U) is topological over X, then the following hold:
(1) A is (co)complete if and only if X is (co)complete.
(2) A is (co-)wellpowered if and only if (A, U) is ﬁbre-small and X is (co-)wellpowered.
(3) A is extremally (co-)wellpowered if and only if X is extremally (co-)wellpowered.
(4) A is (Epi, Mono-Source)-factorizable if and only if X is (Epi, Mono-Source)-factori-
zable.
(5) A has regular factorizations if and only if X has regular factorizations.
(6) A has a (co)separator if and only if X has a (co)separator.
Proof: Let G : X →A be the indiscrete functor.
(1). If X is complete, then A is complete, since U lifts limits.
Conversely, if A is
complete, D : I →X is a small diagram, and L is a limit of G ◦D : I →A, then
UL is a limit of U ◦G ◦D = D.
(2). Let (A, U) be ﬁbre-small and X be wellpowered. For any A-object A consider a set
M = { Xi
mi
−−→UA | i ∈I } of X-subobjects of UA such that every subobject of UA
is isomorphic to some member of M. If
ˆ
M consists of all possible lifts Ai
mi
−−→A
of members of M, then, by ﬁbre-smallness,
ˆ
M is a set. By transportability each
subobject of A is isomorphic to some member of
ˆ
M. Hence A is wellpowered.
Conversely, let A be wellpowered. For every X-object X, it is clear that the class
A = { A ∈Ob(A) | UA = X } is a set, since otherwise { A
idX
−−−→GX | A ∈A }
would by amnesticity be a proper class of pairwise non-isomorphic subobjects of
GX.
Thus (A, U) is ﬁbre-small.
If (Xi
mi
−−→X)I would be a proper class of
pairwise non-isomorphic subobjects of X, then (GXi
mi
−−→GX)I would be a proper
class of pairwise non-isomorphic subobjects of GX in A. Hence X is wellpowered.
(3). Let X be extremally wellpowered. For any A-object A let M = { Xi
mi
−−→UA }i∈I
be a set of extremal subobjects of UA such that every extremal subobject of UA
is isomorphic to some member of M. For each i ∈I let Ai
mi
−−→A be the unique
initial lift of Xi
mi
−−→UA. Then every extremal subobject of A is isomorphic to
some member of the set { Ai
mi
−−→A | i ∈I }. Hence A is extremally wellpowered.
Conversely, let A be extremally wellpowered. If (Xi
mi
−−→X)I were a proper class of
pairwise non-isomorphic extremal subobjects of some X-object X, it would follow
that (GXi
mi
−−→GX)I would be a proper class of pairwise non-isomorphic extremal
subobjects of GX in A. Hence X is extremally wellpowered.
(4). If (A
fi
−−→Ai)I is a source in A, (UA
fi
−−→UAi) = (UA
e
−→X
mi
−−→UAi) is
an (Epi, Mono-Source)-factorization in X, and (B
mi
−−→Ai)I is an initial lift of
(X
mi
−−→UAi)I, then (A
fi
−−→Ai) = (A
e
−→B
mi
−−→Ai) is an (Epi, Mono-Source)-
factorization in A. Conversely, if (X
fi
−−→Xi)I is a source in X and GX
fi
−−→GXi =
GX
e
−→A
mi
−−→GXi is an (Epi, Mono-Source)-factorization in A, then X
fi
−−→Xi =
X
e
−→UA
mi
−−→Xi is an (Epi, Mono-Source)-factorization in X.
18th January 2005

Sec. 21]
Topological categories
365
(5). This follows as in (4) by means of Proposition 21.13(3).
(6). If A is an A-separator, then UA is an X-separator. If X is an X-separator, then
the discrete object A with UA = X is an A-separator.
The “co”-parts follow by duality.

21.17 COROLLARY
Each topological construct
(1) is complete and cocomplete,
(2) is wellpowered (resp. co-wellpowered) if and only if it is ﬁbre-small,
(3) is an (Epi, Extremal Mono-Source)-category,
(4) has regular factorizations,
(5) has separators and coseparators.

21.18 INTERNAL TOPOLOGICAL CHARACTERIZATION THEOREM
A concrete category (A, U) over X is topological if and only if it satisﬁes the following
conditions:
(1) U lifts limits uniquely,
(2) (A, U) has indiscrete structures, i.e., every X-object has an indiscrete lift.
Proof: By Propositions 21.11 and 21.15 topological categories satisfy (1) and (2).
Conversely, let (A, U) satisfy (1) and (2). Then (A, U) is uniquely transportable. Hence,
by Proposition 21.5 and by duality (21.9), it suﬃces to show that every structured sink
(UAi
fi
−−→X)I has a ﬁnal lift. Let B0 be the indiscrete object with UB0 = X and
let (Bj)J be the family of all A-objects Bj such that UBj = X and UAi
fi
−−→UBj
is an A-morphism for each i ∈I. The family (UBj
idX
−−−→UB0)J has an intersection
X
idX
−−−→UB0 in X. By (1) this intersection can be lifted to an intersection B
idX
−−−→B0
of the family (Bj
idX
−−−→B0)J. Consequently, S = (Ai
fi
−−→B)I is a sink in A. To show
that it is ﬁnal, let UB
g
−→UC be an X-morphism such that each UAi
fi
−−→UB
g
−→UC
is an A-morphism. Let C0 be the indiscrete object with UC0 = UC. Then the pullback
in X
X
g
/
idX

UC
idUC

UB
g
/ UC0
can be lifted to a pullback in A
P
g
/
idX

C
idUC

B
g
/ C0
18th January 2005

366
Topological and Algebraic Categories
[Chap. VI
Since, for each i ∈I, the diagram
Ai
g◦fi /
fi

C
idUC

B
g
/ C0
commutes, by the pullback-property each UAi
fi
−−→UP is an A-morphism.
Conse-
quently, P is a member of (Bj)J. This implies that B ≤P. Hence, by amnesticity,
B = P. Thus B
g
−→C = P
g
−→C is an A-morphism. Consequently, (Ai
fi
−−→B)I is a
ﬁnal lift of (UAi
fi
−−→X)I.

21.19 REMARK
As we will see later, the unique lifting of limits is a widespread property shared by many
reasonable forgetful functors not only in topology, but also in algebra. Hence the above
theorem shows that the existence of indiscrete structures is the crucial condition that
makes (A, U) topological.
21.20 EXAMPLE
For any construct of the form Alg(Σ) the forgetful functor Alg(Σ) →Set lifts limits
and colimits uniquely. But Alg(Σ) is topological only if Σ is the empty family, i.e., only
if Alg(Σ) is concretely isomorphic to the construct Set.
21.21 EXTERNAL TOPOLOGICAL CHARACTERIZATION THEOREM
Let CAT(X) be the quasicategory of all concrete categories and concrete functors over
a ﬁxed category X. If M is the conglomerate of all full functors in CAT(X), then for
each concrete category (A, U) over X the following are equivalent:
(1) (A, U) is topological over X.
(2) (A, U) is an M-injective object in CAT(X).
Proof: (1) ⇒(2).
Suppose that (A, U) is topological over X, (B, V )
E
−−→(C, W)
belongs to M, and (B, V )
G
−−→(A, U) is a concrete functor over X. For each C-object
C consider the E-structured source (C
fi
−−→EBi)I consisting of all pairs (fi, Bi) with
Bi ∈Ob(B) and C
fi
−−→EBi ∈Mor(C). Application of W yields the U-structured
source (WC
fi
−−→UGBi)I. By hypothesis it has a U-initial lift (AC
fi
−−→GBi)I. Let
(C, W)
ˆG
−−→(A, U) be the unique concrete functor with ˆGC = AC for each C-object C.
Then G = ˆG ◦E.
(2) ⇒(1). Suppose that (A, U) is M-injective in CAT(X). By Proposition 5.33 there
exists an amnestic (B, V ) and a functor (A, U)
P
−−→(B, V ) that is surjective on objects
and belongs to M. By injectivity, P is a section, hence an isomorphism. Thus (A, U) is
18th January 2005

Sec. 21]
Topological categories
367
amnestic. It remains to be shown that every U-structured source S = (X
fi
−−→UAi)I has
a U-initial lift. Embed (A, U) as a concrete and full subcategory of a concrete category
(B, V ) by adding one object B with V B = X and adding the following morphisms (for
A-objects A and X-morphisms f):
UA
f
−→V B ∈Mor(B)
⇐⇒UA
fi◦f
−−−→UAi ∈Mor(A)
for each i ∈I,
V B
f
−→UA ∈Mor(B)
⇐⇒there exists i ∈I and an A-morphism
Ai
g
−→A with f = g ◦fi,
V B
f
−→V B ∈Mor(B)
⇐⇒V B
fi◦f
−−−→UAi ∈Mor(B)
for each
i ∈I.
By M-injectivity, (A, U) is a retract of (B, V ), i.e., the identity on A can be extended
to a concrete functor (B, V )
G
−−→(A, U). Then (GB
fi
−−→Ai)I = (GB
fi
−−→GAi)I is a
U-initial lift of S.

21.22 REMARKS
(1) The above result remains true if only ﬁbre-small or only amnestic concrete categories
are considered. In the amnestic case M consists precisely of the concrete full em-
beddings [cf. 5.10(4)]. Application of the ﬁbre-small amnestic case to X = 1 yields
the result that the injectives in Pos are precisely the complete lattices [cf. 9.3(2)].
(2) From the above proof it is easily seen that topological categories have an alternative
external characterization as precisely the M-absolute retracts in CAT(X). For a
description of M-essential extensions and M-injective hulls in CAT(X) see Exercise
21J.
INITIALITY-PRESERVING CONCRETE FUNCTORS
An important property of abstract functors is the preservation of limits. Recall that every
adjoint functor preserves limits and that, under suitable assumptions, this preservation
property characterizes adjoints (see the adjoint functor theorems of §18). For concrete
categories a similar condition is that of the preservation of initial sources. (See Deﬁnition
10.47.) Among other things, we will show that for Galois correspondences (F, G) the
concrete functor G preserves initial sources, and that if G has a topological domain, this
preservation property characterizes those concrete functors G that are part of a Galois
correspondence.
21.23 PROPOSITION
Initiality-preserving concrete functors preserve indiscrete objects.
Proof: Immediate by Example 10.42(1).

21.24 GALOIS CORRESPONDENCE THEOREM
For concrete functors (A, U)
G
−−→(B, V ) with topological domain (A, U) the following
conditions are equivalent:
18th January 2005

368
Topological and Algebraic Categories
[Chap. VI
(1) G preserves initial sources,
(2) G is adjoint and has a concrete co-adjoint (B, V )
F
−−→(A, U),
(3) there exists a (unique) (B, V )
F
−−→(A, U) such that (F, G) is a Galois correspon-
dence.
Proof:
(1) ⇒(2). For any B-object B consider the G-structured source SB = (B
fi
−−→GAi)I
consisting of all pairs (fi, Ai) with Ai ∈Ob(A) and B
fi
−−→GAi ∈Mor(B). Appli-
cation of V yields the U-structured source ˆSB = (V B
fi
−−→UAi)I. Let (AB
fi
−−→Ai)I
be a U-initial lift of ˆSB. By (1), (GAB
fi
−−→GAi)I is V-initial.
Since each V B
idV B
−−−−→V GAB
fi
−−→V GAi is a B-morphism, V B
idV B
−−−−→V GAB must be a
B-morphism. Thus (idV B, AB) is a G-universal arrow for B. Since it is identity-carried,
the associated co-adjoint F of G satisﬁes V = U ◦F.
(2) ⇒(3). Let (B, V )
F
−−→(A, U) be a concrete co-adjoint of G, induced by G-universal
arrows B
ηB
−−→GFB.
By Theorem 19.1 each FB
ηB
−−→FGFB is a section in A;
hence V B
ηB
−−→UFB is a section in X. To show that it is an epimorphism in X, let
UFB
r
/
s
/ X be a pair of X-morphisms with r ◦ηB = s ◦ηB. If A is an indiscrete
object in (A, U) with UA = X, then FB
r
/
s
/ A is a pair of A-morphisms.
Since
(ηB, FB) is G-generating, the equality Gr ◦ηB = Gs ◦ηB implies that r = s. Thus
V B
ηB
−−→UFB is an X-isomorphism.
Let AB
ηB
−−→FB be a U-initial lift.
Then,
by Proposition 8.14, AB
ηB
−−→FB is an A-isomorphism. Hence, by Proposition 8.35,
B
idV B
−−−−→GAB = B
ηB
−−→GFB
G(ηB)−1
−−−−−−→GAB is a G-universal arrow for B. If ˆF is the
associated co-adjoint of G, then ( ˆF, G) is a Galois-correspondence. Uniqueness follows
from the amnesticity of U.
(3) ⇒(1). Immediate from Proposition 10.49.

21.25 REMARK
If (A, U) is not topological, then conditions (1) and (2) of the above theorem do not
imply (3). See Exercise 21E(b).
21.26 DEFINITION
Let A
U
−−→X and B
V
−−→Y be functors. An adjoint situation (ˆη, ˆε) : ˆF
 ˆG : ˆA →ˆB
is said to lift an adjoint situation (η, ε) : F
 G : X →Y along U and V provided
that the following conditions are satisﬁed:
(1) the diagrams
A
ˆG
/
U

B
V

X
G
/ Y
and
B
ˆF
/
V

A
U

Y
F
/ X
18th January 2005

Sec. 21]
Topological categories
369
commute.
(2) V ˆη = ηV,
(3) U ˆε = εU.
21.27 REMARKS
(1) In the presence of (1), conditions (2) and (3) in the above deﬁnition imply each
other. They have both been included to make the symmetry apparent. If (1) and
(2) hold, then (3) can be deduced from the equations GU ˆεA◦ηGUA = V ˆGˆεA◦ηV ˆGA =
V ˆGˆεA ◦V ˆη ˆGA = V ( ˆGˆεA ◦ˆη ˆGA) = V (id ˆGA) = idV ˆGA = idGUA = GεUA ◦ηGUA, since
ηGA is G-generating.
(2) The following theorem, applied to G = idX, provides a new proof of the equivalence
of conditions (1) and (3) in Theorem 21.24.
21.28 TAUT LIFT THEOREM
Let (A, U) be a topological category over the base category X and (B, V ) be a concrete
category over the base category Y. If A
ˆG
−−→B is a functor and X
G
−−→Y is an adjoint
functor with V ◦ˆG = G ◦U, then the following conditions are equivalent:
(1) ˆG sends U-initial sources into V-initial sources,
(2) every adjoint situation (η, ε) : F
 G : X →Y can be lifted along U and V to
an adjoint situation (ˆη, ˆε) : ˆF
 ˆG : A →B.
Proof:
(1) ⇒(2). For each B-object B consider the ˆG-structured source SB = (B
fi
−−→ˆGAi)
consisting of all pairs (fi, Ai) with Ai ∈Ob(A) and B
fi
−−→ˆGAi ∈Mor(B). For each
i ∈I let FV B
ˆfi
−−→UAi be the unique X-morphism with
V B
V fi
−−−→GUAi = V B
ηV B
−−−→GFV B
G ˆfi
−−−→GUAi.
Then the U-structured source (FV B
ˆfi
−−→UAi)I has a U-initial lift TB = (AB
˜fi
−−→Ai)I.
By (1), ˆGTB is V-initial. Since V SB = V ˆGTB ◦ηV B
V B
ηV B /
V fi

GFV B
G ˆfi

GUAB
GU ˜fi

V ˆGAB
V ˆG ˜fi

V ˆGAi
GUAi
GUAi
V ˆGAi
there exists a unique B-morphism B
ˆηB
−−→ˆGAB with V ˆηB = ηV B and SB = ˆGTB ◦ˆηB.
To show that the ˆG-structured arrow (ˆηB, AB) is ˆG-generating and hence ˆG-universal,
let AB
r
/
s / A be a pair of A-morphisms with ˆGr ◦ˆηB = ˆGs ◦ˆηB. Then GUr ◦ηV B =
V ˆGr ◦ηV B = V ( ˆGr ◦ˆηB) = V ( ˆGs ◦ˆηB) = V ˆGs ◦ηV B = GUs ◦ηV B implies that
18th January 2005

370
Topological and Algebraic Categories
[Chap. VI
Ur = Us. Hence r = s by the faithfulness of U. If (ˆη, ˆε) : ˆF
 ˆG : A →B is the
adjoint situation determined by ˆG and the ˆG-universal arrows (ˆηB, AB), then V ˆηB = ηV B
and U ◦ˆF(B) = U(AB) = F ◦V (B) for each B-object B. Thus for each B-morphism
B
f
−→B the equality GU ˆFf◦ηV B = V ( ˆG ˆFf◦ˆηB) = V (ˆηB◦f) = ηV B◦V f = GFV f◦ηV B
implies that U ˆFf = FV f. Hence U ◦ˆF = F ◦V .
(2) ⇒(1). Let (η, ε) : F
 G : X →Y be an adjoint situation, let the adjoint situa-
tion (ˆη, ˆε) : ˆF
 ˆG : A →B be a lift along U and V, and let S = (A
fi
−−→Ai)I be a
U-initial source. To show that ˆGS is V-initial, let T = (B
gi
−−→ˆGAi)I be a B-source and
V B
h
−→V ˆGA be a Y-morphism with V T = V ˆGS ◦h. For each i ∈I let ˆFB
ˆgi
−−→Ai
be the unique A-morphism with gi = ˆGˆgi ◦ˆηB. Furthermore, let FV B
ˆh
−→UA be the
unique X-morphism with h = Gˆh ◦ηV B.
GUA
GUfi
$J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
V ˆGA
V ˆGfi
$J
J
J
J
J
J
J
J
J
V B
h
O
V gi /
V ˆηB

ηV B

V ˆGAi
GUAi
V ˆG ˆFB
V ˆGˆgi
:t
t
t
t
t
t
t
t
t
GFV B
Gˆh
F
GU ˆFB
GUˆgi
:u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
u
Then G(Ufi ◦ˆh) ◦ηV B = GUˆgi ◦ηV B implies that Ufi ◦ˆh = Uˆgi. Since S is U-initial,
there exists a unique A-morphism ˆFB
˜h
−→A with U˜h = ˆh. Thus h∗= ˆG˜h ◦ˆηB is a
B-morphism with V h∗= V ˆG˜h ◦V ˆηB = GU˜h ◦ηV B = Gˆh ◦ηV B = h. Consequently,
V (B
h∗
−−→ˆGA) = V B
h
−→V ˆGA. Thus ˆGS is V-initial.

TOPOLOGICAL SUBCATEGORIES
21.29 DEFINITION
A full concrete subcategory (A, U) of a concrete category (B, V ) is called initially
closed in (B, V ) provided that every V-initial source whose codomain is a family of
A-objects has its domain in A.
Dual Notion: ﬁnally closed subcategory.
21.30 PROPOSITION
An initially closed subcategory of a topological category is topological.

18th January 2005

Sec. 21]
Topological categories
371
21.31 PROPOSITION
For any full concrete subcategory (A, U) of a topological category (B, V ) the following
conditions are equivalent:
(1) (A, U) is initially closed in (B, V ),
(2) (A, U) is concretely reﬂective in (B, V ).
Proof: (1) ⇒(2) follows from Theorem 21.24 applied to the inclusion functor G.
(2) ⇒(1).
Let S = (B
fi
−−→Ai)I be a V-initial source with each Ai in A, and let
B
idV B
−−−−→A be an identity-carried A-reﬂection arrow for B. Then each A
fi
−−→Ai is a
morphism. Thus, by initiality of S, it follows that A
idV B
−−−−→B is a morphism. Hence, by
amnesticity of (B, V ), A = B. Thus B belongs to A.

21.32 PROPOSITION
If a topological category (A, U) is a ﬁnally dense full concrete subcategory of (B, V ),
then (A, U) is concretely reﬂective in (B, V ).
Proof: For each B-object B consider the source (B
fi
−−→Ai), consisting of all morphisms
B
fi
−−→Ai with Ai in A, and let S = (A
fi
−−→Ai)I be a U-initial lift of the U-structured
source (V B
fi
−−→UAi)I. By Proposition 10.71, S is V-initial. Thus V B
idV B
−−−−→V A is a
morphism; hence it is an identity-carried A-reﬂection arrow for B.

21.33 THEOREM
For a full concrete subcategory (A, U) of a topological category (B, V ) the following
conditions are equivalent:
(1) (A, U) is topological,
(2) there exists a concretely reﬂective subcategory (C, W) of (B, V ) such that (A, U) is
concretely coreﬂective in (C, W),
(3) there exists a concretely coreﬂective subcategory (C, W) of (B, V ) such that (A, U)
is concretely reﬂective in (C, W),
(4) there exists a concrete functor (B, V )
R
−−→(A, U) that leaves each A-object ﬁxed.
Proof: (1) ⇒(2). Let (C, W) be the full concrete subcategory of (B, V ) that consists of
all B-objects B for which there exists a V-initial source (B
fi
−−→Ai)I with domain B and
codomain in A. Then (C, W) is initially closed in (B, V ), hence concretely reﬂective in
(B, V ). Moreover, (A, U) is initially dense in (C, W), so that by the dual of Proposition
21.32 it is concretely coreﬂective in (C, W).
(2) ⇒(4). If (B, V )
R1
−−→(C, W) is a concrete reﬂector and (C, W)
R2
−−→(A, U) is a
concrete coreﬂector, then R = R2 ◦R1 has the desired properties.
18th January 2005

372
Topological and Algebraic Categories
[Chap. VI
(4) ⇒(1).
Let S = (X
fi
−−→UAi)I be a U-structured source.
Considered as a V-
structured source it has a V-initial lift T = (B
fi
−−→Ai)I. Then RT = (RB
fi
−−→Ai)I is
easily seen to be a U-initial lift of S.
(1) ⇔(3) follows from (1) ⇔(2) by duality (21.9).

FIBRE-SMALL TOPOLOGICAL CATEGORIES
21.34 PROPOSITION
For ﬁbre-small concrete categories (A, U), the following conditions are equivalent:
(1) (A, U) is topological,
(2) every small structured source (X
fi
−−→UAi)I has a unique initial lift,
(3) every small structured sink (UAi
fi
−−→X)I has a unique ﬁnal lift.
Proof: (1) ⇒(2) is obvious.
(2) ⇒(1). Let (X
fi
−−→UAi)I be a structured source. For each i ∈I there exists an
initial lift Bi
fi
−−→Ai of X
fi
−−→UAi. By ﬁbre-smallness { Bi
 i ∈I } is a set. Thus
there exists a subset J of I with { Bj
 j ∈J } = { Bi
 i ∈I }. Let (A
fj
−−→Aj)J be the
initial lift of (X
fj
−−→UAj)J. Then A ≤Bj for each j ∈J; hence A ≤Bi for each i ∈I.
Thus each A
fi
−−→Ai is a morphism. Consequently, by Proposition 10.46, (A
fi
−−→Ai)I is
initial. Uniqueness is immediate.
(1) ⇔(3) follows from (1) ⇔(2) by duality.

21.35 PROPOSITION
A ﬁbre-small concrete category (A, U) over a category X with products is topological if
and only if it satisﬁes the following conditions:
(1) (A, U) has concrete products,
(2) (A, U) has initial subobjects, i.e., every structured X-monomorphism X
m
−−→UA
has a unique initial lift,
(3) (A, U) has indiscrete objects.
Proof: The conditions (1) – (3) are obviously necessary. To see that they are suﬃcient,
suppose that (X
fi
−−→UAi)I is a small structured source. Choose an element j0 with
j0 ̸∈I, use Aj0 to denote the indiscrete object with UAj0 = X, let fj0 = idX, let
J = I ∪{j0}, and let (P
pj
−−→Aj)J be a concrete product.
Then X
⟨fj⟩
−−−→UP is
a structured X-section, and so has an initial lift A
⟨fj⟩
−−−→P. By 10.53 and 10.45(1)
18th January 2005

Sec. 21]
Topological categories
373
the source (A
fj
−−→Aj)J is initial. Since Aj0 is indiscrete, (A
fi
−−→Ai)I is initial too.
Uniqueness follows from the uniqueness requirement in condition (2). Thus Proposition
21.34 implies that (A, U) is topological.

21.36 PROPOSITION
In a ﬁbre-small topological category, a source (A
fi
−−→Ai)I is initial if and only if there
exists a subset J of I such that (A
fj
−−→Aj)J is initial.
Proof: Immediate from the proof of (2) ⇒(1) in Proposition 21.34.

21.37 PROPOSITION
Let (A, U) be a full concrete subcategory of a ﬁbre-small topological category (B, V ) over
a category X with products. Then (A, U) is concretely reﬂective in (B, V ) if and only if
it is closed under the formation of
(a) products,
(b) initial subobjects, and
(c) indiscrete objects.
Proof: By Proposition 21.31, (A, U) is concretely reﬂective in (B, V ) if and only if it is
initially closed in (B, V ). The latter is the case if and only if (A, U) is closed under the
formation of (a)–(c) in (B, V ). (Cf. the proof of Proposition 21.35.)

M-TOPOLOGICAL AND MONOTOPOLOGICAL CATEGORIES
Many familiar full subconstructs of Top, Unif, or Rel, deﬁned by “separation axioms”,
e.g., Top0, Top1, Haus, Tych, Reg1, HUnif, or Pos fail to be topological even though
they are “almost” so. This leads to a natural generalization of the concept of topological
categories over X that depends, however, on a distinguished factorization structure on
X. In particular, for constructs this leads to the concept of monotopological constructs,
since Set has only one interesting factorization structure:
21.38 DEFINITION
A concrete category (A, U) over an (E, M)-category X is said to be M-topological
provided that every structured source in M has a unique initial lift. If M = Mono-
Sources, the term monotopological is used.
21.39 EXAMPLES
(1) The topological functors are precisely the Source-topological functors.
(2) The construct Pos is monotopological since it is closed under the formation of initial
mono-sources in Rel.
18th January 2005

374
Topological and Algebraic Categories
[Chap. VI
(3) The constructs Top0, Top1, Haus, Tych, and Reg1 (regular T1 topological spaces)
are monotopological (since they are closed under the formation of initial mono-
sources in Top).
(4) The construct HUnif of separated uniform spaces is monotopological.
(5) Let PAlg(Ω) denote the construct of partial algebras of type Ω= (ni), i.e., pairs
of the form (X, {ωi}), where X is a set and the ωi : Xni →X are partial func-
tions, i.e., functions ωi : Di →X, whose domains Di are subsets of Xni. Partial
algebra homomorphisms (X, {ωi})
f
−→(Y, {ω′
i}) are functions f : X →Y satisfying
f(ωi(g)) = ω′
i(fni(g)) whenever ωi(g) is deﬁned. Then PAlg(Ω) is monotopological.
(6) For concrete categories over 1, monotopological = topological.
(7) Unif, considered as a concrete category over Top is M-topological, where M is the
collection of initial mono-sources in Top.
21.40 M-TOPOLOGICAL CHARACTERIZATION THEOREM
A concrete category (A, U) over an (E, M)-category X is M-topological if and only if
(A, U) is an E-reﬂective concrete subcategory of some topological category over X.
Proof: If (B, V ) is topological over X, then by Proposition 21.14, B is an (E, Minit)-
category. Thus if (A, U) is an E-reﬂective subcategory of B, then by Theorem 16.8, A
is closed under Minit-sources in B. Hence (A, U) is M-topological.
Conversely, let (A, U) be M-topological.
Deﬁne a concrete category (A∗, U∗) over
X as follows.
A∗-objects are triples (X, e, A) with X ∈Ob(X), A ∈Ob(A), and
X
e
−→UA ∈E. A∗-morphisms from (X, e, A) to (X′, e′, A′) are pairs (f, g) consist-
ing of an X-morphism X
f
−→X′ and an A-morphism A
g
−→A′ such that the diagram
X
f
/
e

X′
e′

UA
g
/ UA′
commutes. A∗-composition is deﬁned coordinatewise. Let U∗: A∗→X be deﬁned by
U∗((X, e, A)
(f,g)
−−−→(X′, e′, A′)) = X
f
−→X′.
Since E ⊆Epi(X) (15.4), U∗is faithful. Hence (A∗, U∗) is a concrete category over
X. Moreover every U∗-structured source S = (X
fi
−−→U∗(Xi, ei, Ai))I has an initial lift
that can be constructed as follows: Let X
fi
−−→Xi
ei
−−→UAi = X
e
−→Y
mi
−−→UAi be an
(E, M)-factorization and let (A
mi
−−→Ai)I be a U-initial lift of the U-structured M-source
(Y
mi
−−→UAi)I. By the (E, M)-diagonalization-property, it is easily seen that the source
((X, e, A)
(fi,mi)
−−−−−→(Xi, ei, Ai))I is a U∗-initial lift of S. However, initial lifts need not
be uniquely determined. By Proposition 5.33 there exists an amnestic concrete category
18th January 2005

Sec. 21]
Topological categories
375
(B, V ) and a surjective concrete equivalence (A∗, U∗)
P
−−→(B, V ). By Proposition 21.5,
(B, V ) is topological. Now deﬁne a concrete full embedding (A, U)
E∗
−−→(A∗, U∗) by
E∗(A
f
−→B) = (UA, idA, A)
(f,f)
−−−−→(UB, idB, B).
Then E∗[A] is E-reﬂective in A∗, since for each A∗-object (X, e, A) the A∗-morphism
(X, e, A)
(e,idA)
−−−−−→E∗A is an E∗[A]-reﬂection arrow. Thus
(A, U)
E
−−→(B, V ) = (A, U)
E∗
−−→(A∗, U∗)
P
−−→(B, V )
is a full concrete embedding, whose image is an E-reﬂective subcategory of the topolog-
ical category (B, V ).

21.41 REMARKS
(1) Let (A, U)
E
−−→(B, V ) be the concrete embedding constructed in the above proof.
Then the following hold, as can be seen easily:
(a) E preserves M-initial sources. Thus E[A] is M-initially closed in (B, V ).
(b) If X is E-co-wellpowered and (A, U) is ﬁbre-small, then (B, V ) is ﬁbre-small.
(c) If (A, U) is topological, E needn’t be an isomorphism. For example, if Set is
considered as a monotopological construct (A, U) via the identity functor, then
(B, V ) is the construct of equivalence relations.
(2) Whereas M-topological categories, i.e., E-reﬂective concrete subcategories of topo-
logical categories, still have a typical topological ﬂavor, full reﬂective concrete sub-
categories of topological categories can have a completely diﬀerent character. As we
will see in §25 the constructs Vec, Grp, and Rng are examples of this kind.
21.42 THEOREM
Let (A, U) be a ﬁbre-small concrete category over an E-co-wellpowered (E, M)-category
with products.
Then (A, U) is M-topological if and only if it satisﬁes the following
conditions:
(1) (A, U) has concrete products,
(2) (A, U) has M-initial subobjects, i.e., every structured M-morphism X
m
−−→UA
has a unique initial lift.
Proof: If (A, U) is M-topological, then it has concrete products, since X-products,
being extremal mono-sources, belong to M.
Conversely, let (A, U) satisfy the conditions (1) and (2).
If S = (X
mi
−−→UAi)I
is a small structured M-source and (Q Ai
πj
−−→Aj)I is a concrete product of (Aj)I,
then the structured M-morphism X
⟨mi⟩
−−−→UP has an initial lift A
⟨mi⟩
−−−→P. Thus
18th January 2005

376
Topological and Algebraic Categories
[Chap. VI
(A
mi
−−→Ai)I = (A
⟨mi⟩
−−−→P
πi
−−→Ai)I is an initial lift of S. If S = (X
mi
−−→UAi)I is a
large structured M-source, for each i ∈I let
X
mi
−−→UAi = X
ei
−−→Xi
ni
−−→UAi
be an (E, M)-factorization and let Bi
ni
−−→Ai be an initial lift of Xi
ni
−−→UAi. Since X
is E-co-wellpowered and (A, U) is ﬁbre-small, the structured source T = (X
ei
−−→UBi)I
is representable by a small source, i.e., there exists a subset J of I such that for each
i ∈I there is a j(i) ∈J and an isomorphism hi : Bj(i) →Bi with ei = hi ◦ej(i).
By Proposition 15.5(7), T belongs to M, and hence so does the small source T ′ =
(X
ej
−−→UBj)J. Thus T ′ has an initial lift (A
ej
−−→Bj)J. It follows immediately that
the source
(A
mi
−−→Ai)I = (A
ej(i)
−−−→Bj(i)
hi
−−→Bi
ni
−−→Ai)I
is an initial lift of S.

21.43 COROLLARY
A ﬁbre-small construct is monotopological if and only if it has concrete products and
initial subobjects.

21.44 EXAMPLES
(1) The constructs Vec and Grp have concrete products but fail to have initial subob-
jects.
(2) The constructs Met and Metc have initial subspaces but fail to have concrete
products.
Suggestions for Further Reading
Huˇsek, M. S-categories. Comment. Math. Univ. Carolinae 5 (1964): 37–46.
Gray, J. W. Fibred and coﬁbred categories. Proceedings of the Conference on Categor-
ical Algebra (La Jolla 1965), Springer, Berlin–Heidelberg–New York, 1966, 21–83.
Antoine, P. ´Etude ´el´ementaire des cat´egories d’ensembles structur´es. Bull. Soc. Math.
Belgique 18 (1966): 142–164 and 387–414.
Roberts, J. E. A characterization of initial functors. J. Algebra 8 (1968): 181–193.
Wyler, O. On the categories of general topology and topological algebra. Archiv Math.
22 (1971): 7–17.
Herrlich, H. Topological functors. Gen. Topol. Appl. 4 (1974): 125–142.
Hoﬀmann, R.-E. Topological functors and factorizations.
Archiv Math.
26 (1975):
1–7.
Herrlich, H. Initial completions. Math. Z. 150 (1976): 101–110.
18th January 2005

Sec. 21]
Topological categories
377
Br¨ummer, G. C. L., and R.-E. Hoﬀmann. An external characterization of topological
functors. Springer Lect. Notes Math. 540 (1976): 136–151.
Hoﬀmann, R.-E. Topological functors admitting generalized Cauchy-completions. Sprin-
ger Lect. Notes Math. 540 (1976): 286–344.
Porst, H.-E. Characterizations of Mac Neille completions and topological functors. Bull.
Austral. Math. Soc. 18 (1978): 201–210.
Tholen, W. On Wyler’s taut lift theorem. Gen. Topol. Appl. 8 (1978): 197–206.
Herrlich, H. Categorical topology 1971-1981.
General Topology and its Relations to
Modern Analysis and Algebra V. Proceedings of the Fifth Prague Topological Sym-
posium 1981 (ed. J. Novak), Heldermann, Berlin, 1982, 279–383.
Br¨ummer, G. C. L. Topological categories. Topol. Appl. 18 (1984): 27–41.
Nakagawa, R. Categorical Topology. Topics in General Topology (eds. K. Morita and
J. Nagata), North Holland, Amsterdam, 1989, 563–623.
EXERCISES
21A. Existence of Indiscrete Structures
For transportable concrete categories, (A, U), prove that the following conditions are
equivalent:
(1) (A, U) has indiscrete structures,
(2) U has an adjoint G with U ◦G = idX,
(3) U has an adjoint G that is a full embedding,
(4) there exists a Galois correspondence (U, G) : (X, idX) →(A, U).
21B. Fibre-Smallness
Show that in ﬁbre-small topological categories (resp. constructs) a sink (Ai
fi
−−→A)I
is ﬁnal (resp. is a ﬁnal epi-sink) if and only if there exists a subset J of I such that
(Aj
fj
−−→A)J is ﬁnal (resp. is a ﬁnal epi-sink).
21C. Characterization of Topological Categories
Show that a concrete category (A, U) over X is topological if and only if the following
conditions are satisﬁed:
(a) (A, U) is ﬁbre-complete,
(b) in (A, U) each structured arrow X
f
−→UA has a unique initial lift B
f
−→A,
(c) in (A, U) each co-structured arrow UA
f
−→X has a unique ﬁnal lift A
f
−→B.
18th January 2005

378
Topological and Algebraic Categories
[Chap. VI
21D. Non-topological Functors and Categories
* (a) Consider the functor from Mod →Rng described as follows: Mod, the category
of modules, has as objects all pairs (R, M) consisting of a ring R and a left R-
module M, and as morphisms (R, M)
(f,g)
−−−→(R′, M ′) all pairs (f, g) consisting of
a ring homomorphism R
f
−→R′ and an (abelian) group homomorphism M
g
−→M′
satisfying the identity g(r·m) = f(r)·g(m). Let Mod
G
−−→Rng be the “forgetful”
functor, deﬁned by
G((R, M)
(f,g)
−−−→(R′, M ′)) = R
f
−→R′.
Show that
(1) Each small G-structured source has a G-initial lift.
(2) There exists a functor Rng
F
−−→Mod that is simultaneously an adjoint and a
co-adjoint for G.
(3) G is not faithful.
(4) G is not topological.
(b) Let A be the full subconstruct of Top consisting of all discrete and all indiscrete
spaces. Show that
(1) For each structured source (X
fi
−−→(Xi, τi))I there exists a largest A-structure
τ on X making all (X, τ)
fi
−−→(Xi, τi) continuous.
(2) For each structured sink ((Xi, τi)
fi
−−→X)I there exists a smallest A-structure
τ on X making all (Xi, τi)
fi
−−→(X, τ) continuous.
(3) A is ﬁbre-complete.
(4) A has discrete and indiscrete structures.
(5) A is neither complete nor cocomplete.
(6) A is not topological.
(c) Show that the unique functor G from •
/ •
o
to • is not topological, even though
G is faithful and each G-structured source has an initial lift.
21E. Concrete Co-adjoints and Galois Correspondences
(a) Let X be a category consisting of a single object X and two morphisms idX and s
with s2 = idX; let A be the concrete category over X, consisting of two objects A0
and A1 and the following morphism sets:
homA(Ai, Aj) =
(
{idX},
if i = j
{s},
if i ̸= j;
and let G and F be concrete functors from A to A over X deﬁned by GAi = Ai and
FAi = A1−i. Show that
18th January 2005

Sec. 21]
Topological categories
379
(1) F is a co-adjoint for G.
(2) (F, G) is not a Galois correspondence between A and itself over X.
* (b) Show that a concrete functor A
G
−−→B may have a concrete co-adjoint without being
part of a Galois correspondence (F, G). [Hint: Consider the concrete embedding
A −→B constructed in Exercise 5E(d).] Cf. Theorem 21.24.
21F. Comma Categories
(a) Let (A, U) be topological over X, and let B be an A-object. Show that A ↓B is
topological over X ↓UB via the obvious forgetful functor induced by U.
(b) Consider
A ↓B
W
/
T

A
U

X ↓UB V
/ X
where V, W, T are the obvious forgetful functors. Show that
(1) If U is topological, then so is T.
(2) W preserves initiality (i.e., sends T-initial sources into U-initial sources), but in
general does not preserve ﬁnality.
* 21G. Initial Completions
A full concrete embedding (A, U)
E
−−→(B, V ) is called an initial completion of (A, U)
provided that (B, V ) is topological and E[A] is initially dense in (B, V ). [Dual Notion:
ﬁnal completion.] An initial completion (A, U)
E1
−−→(B1, U1) is said to be smaller
than an initial completion (A, U)
E2
−−→(B2, U2) of (A, U) — in symbols: E1 ≤E2,
provided that there exists a full concrete embedding (B1, U1)
E
−−→(B2, U2) with E2 =
E ◦E1. Show that for initial completions E1 of (A, U) the following hold:
(a) The relation ≤is reﬂexive and transitive.
(b) E1 ≤E2 and E2 ≤E1 hold simultaneously if and only if there exists a concrete
isomorphism (B1, U1)
H
−−→(B2, U2) with E2 = H ◦E1.
(c) The following conditions are equivalent:
(1) E1 ≤E2,
(2) there exists a (unique) initiality-preserving concrete functor
(B2, U2)
G
−−→(B1, U1) with E1 = G ◦E2,
(3) there exist (unique) concrete functors (B1, U1)
E
−−→(B2, U2) and
(B2, U2)
G
−−→(B1, U1) with E2 = E ◦E1, E1 = G ◦E2 and G ◦E = id.
18th January 2005

380
Topological and Algebraic Categories
[Chap. VI
* 21H. Mac Neille Completions
A completion of (A, U) that is simultaneously an initial completion and a ﬁnal comple-
tion is called a Mac Neille completion of (A, U). Show that
(a) [Uniqueness]
If (A, U)
E1
−−→(B1, V1) and (A, U)
E2
−−→(B2, V2) are Mac Neille
completions, then there exists a concrete isomorphism (B1, V1)
H
−−→(B2, V2) with
E2 = H ◦E1.
(b) [Minimality] If (A, U)
E
−−→(B, V ) is a Mac Neille completion and if
(A, U)
E′
−−→(B′, V ′) is a full concrete embedding of (A, U) into a topological category
(B′, V ′), then there exists a full concrete embedding (B, V )
H
−−→(B′, V ′) with V ′ =
H ◦V .
In particular, Mac Neille completions of (A, U) are the smallest initial
completions of (A, U).
(c) [Construction]
If (A, U) is a full concrete subcategory of a topological category
(B, V ), if (B′, V ′) is the concretely reﬂective hull of A in (B, V ), and if (B′′, V ′′)
is the concretely coreﬂective hull of A in (B′, V ′), then (B′′, V ′′) is a Mac Neille
completion of (A, U).
(d) [Existence] Let (A, U) be an amnestic concrete category over X.
(1) If A is small, then (A, U) has a Mac Neille completion.
In particular, each
poset, considered as a concrete category over 1, has a Mac Neille completion (=
its familiar Dedekind-Mac Neille completion).
(2) If (A, U) is M-topological, then it has a Mac Neille completion.
(e) [Non-existence] Let C be a proper class. Order X = C × {0, 1} by
(x, i) ≤(y, j) ⇔





(x, i) = (y, j)
or
i = 0 and j = 1 and x ̸= y.
Then (X, ≤), considered as concrete category over 1, has no Mac Neille completion.
* 21I. Universal Initial Completions
An initial completion (A, U)
E
−−→(B, V ) of (A, U) is called a universal initial com-
pletion of (A, U) provided that the following hold:
(1) E preserves initiality,
(2) whenever (C, W) is topological and (A, U)
F
−−→(C, W) is an initiality-preserving
concrete functor, then there exists a unique initiality-preserving concrete functor
(B, V )
G
−−→(C, W) with F = G ◦E.
Show that
(a) [Uniqueness] If (A, U)
E1
−−→(B1, V1) and (A, U)
E2
−−→(B2, V2) are universal initial
completions, then there exists a concrete isomorphism (B1, V1)
H
−−→(B2, V2) with
V2 = H ◦V1.
18th January 2005

Sec. 21]
Topological categories
381
(b) [Maximality] Universal initial completions of (A, U) are the largest initiality-preser-
ving initial completions of (A, U).
(c) Every M-topological category has a universal initial completion.
(d) The construct Prox of (not necessarily T1) proximity spaces is a universal initial
completion (but not a Mac Neille completion) of HComp.
(e) If A is small and (A, U) is amnestic, then (A, U) has a universal initial completion.
In particular, if A is a ﬁnite set with n ≥2 elements, ordered by equality and
considered as a concrete category over 1, then the universal initial completion of A
has 2n elements, whereas the Mac Neille completion of A has n + 2 elements.
(f) A proper class, ordered by equality and considered as concrete category over 1, has
a Mac Neille completion, but no universal initial completion.
* 21J. Essential Full Concrete Embeddings
Show that in the quasicategory CAT(X) of amnestic concrete categories and concrete
functors over X, a full concrete embedding (A, U)
E
−−→(B, V ) is
(a) essential [with respect to full concrete embeddings; cf. Deﬁnition 9.22(2)] if and only
if it is initially dense and ﬁnally dense,
(b) a Mac Neille completion of (A, U) if and only if it is an injective hull (with respect
to full concrete embeddings).
21K. M-Topological Functors
Let M be a conglomerate of sources in X. A functor G : A →X is called M-topological
provided that every G-structured source in M has a unique G-initial lift.
Prove that if X is an (E, M)-category, then every M-topological functor G : A →X is
faithful and uniquely transportable.
21L. Uniqueness of Forgetful Functors
Show that whenever (A, U) and (A, V ) are topological constructs, then U and V are
naturally isomorphic.
21M. Topological Functors and Bimorphisms
Show that if A
U
−−→X is a topological functor, then E = U−1[Iso(X)] satisﬁes:
(1) E ⊆Bimor(A) (= the class of bimorphisms in A),
(2) if X is balanced, then E = Bimor(A),
(3) A is an (E, −)-category and Aop is an (E, −)-category.
21N. Balanced Topological Categories
Show that a topological category (A, U) over X is balanced if and only if X is balanced
and U is an isomorphism.
18th January 2005

22 Topological structure theorems
Universal algebra can be understood as the branch of mathematics in which “nice” sub-
constructs of the fundamental algebraic constructs Alg(Ω) of Ω-algebras are investigated.
Among these are the ﬁnitary varieties and quasivarieties. These “nice” subconstructs are
determined either internally (by means of suitable equations or implications) or exter-
nally (by means of certain closure properties). It turns out that an analogous situation
exists in the realm of topological categories over arbitrary (!) base categories. The role
of the fundamental topological categories is played by the functor-structured categories
Spa(T) of T-spaces. “Nice” subcategories are determined either internally (by topolog-
ical axioms) or externally (by suitable closure properties). In addition, duality provides
a dual structure theorem.
TOPOLOGICAL AXIOMS
Functor-structured categories Spa(T) have been deﬁned in Deﬁnition 5.40. By Example
21.8(2) they are ﬁbre-small topological categories. Hence, by Proposition 21.30, each of
their initially closed (= concretely reﬂective) full concrete subcategories is a ﬁbre-small
topological category as well. The main result of this section states that — conversely —
every ﬁbre-small topological category can be obtained in this way. Since, moreover, by
Theorem 16.14 the isomorphism-closed E-reﬂective subcategories of an (E, M)-category
B are precisely the E-implicational subcategories of B, concretely reﬂective subcategories
of topological categories B are precisely the identity-carried implicational subcategories
of B. This justiﬁes the following terminology (cf. Deﬁnition 16.12):
22.1 DEFINITION
Let (A, U) be a concrete category over X.
(1) Each identity-carried morphism P
p
−→P ′ is called a topological axiom in (A, U).
An A-object A is said to satisfy the axiom p provided that A is {p}-injective; that
is, each A-morphism f : P →A is also an A-morphism f : P ′ →A.
(2) A full subcategory B of A is said to be deﬁnable by topological axioms in (A, U)
provided that it is E-implicational in A, where E is a class of topological axioms in
(A, U); i.e., the objects in B are precisely those A-objects that satisfy each of the
axioms in E.
22.2 EXAMPLES
(1) The construct Prost is deﬁnable by the following two topological axioms in Rel =
Spa(S2). Cf. Example 16.13(1).
(A1)
•
−→
• q
382

Sec. 22]
Topological structure theorems
383
(A2)
•
/ • q
•Q
−→
•
/
@@@@@
• q
•Q
(2) Let Bor denote the construct of bornological spaces, i.e., pairs (X, β), where X is
a set and β is a bornology (i.e., a cover of X such that U ∈β implies V ∈β for all
V ⊆U and U1, U2 ∈β implies U1 ∪U2 ∈β). Morphisms f : (X, β) →(X′, β′) are
functions f : X →X′ such that U ∈β implies f[U] ∈β′. Bor is deﬁnable by the
following (proper) class of topological axioms in Spa(P):
(A0)
(∅, ∅) →(∅, P(∅)),
(A1)
({1}, ∅) →({1}, P{1}),
(AX,M,N)
(X, {M, N}) →(X, P(M ∪N))
for any set X and any M, N ⊆X.
Bor cannot be deﬁned by a set of topological axioms in Spa(P).
(3) Let Simp denote the construct of simplicial complexes, i.e., pairs (X, α), where X
is a set and α is a complex (i.e., a set of ﬁnite subsets of X that contains all subsets
with at most one member and has the property that U ∈α implies V ∈α for all
V ⊆U). Morphisms f : (X, α) →(X′, α′) are functions f : X →X′ such that
U ∈α implies f[U] ∈α′. Let Pfin : Set →Set be the ﬁnite power-set functor that
associates with each set X the set Pfin(X) of all ﬁnite subsets of X. Then Simp is
deﬁnable by the following (proper) class of topological axioms in Spa(Pfin):
(A0)
(∅, ∅) →(∅, P(∅)),
(A1)
({1}, ∅) →({1}, P{1}),
(AX,M)
(X, {M}) →(X, P(M)) for every set X and every ﬁnite subset M of X.
(4) Let U : Set →Set be the ultraﬁlter functor deﬁned as follows: For each set X,
U(X) is the set of all ultraﬁlters on X, and for each function f : X →Y , Uf(F) =
{ M ⊆Y
 f−1[M] ∈F }.
Let F : Set →Set be deﬁned by F(X
f
−→Y ) =
UX × X
Uf×f
−−−−→UY × Y . Then the construct PsTop of pseudotopological spaces is
deﬁnable by one topological axiom in Spa(F). An object (X, α) of Spa(F) is given
by a set α ⊆U(X) × X of pairs (F, x), where F is an ultraﬁlter and x is a point.
[Think of F →x if and only if (F, x) ∈α.] Such an object is a pseudotopological
space if and only if for each point x, α contains the pair ( ˙x, x) (where ˙x is the trivial
ultraﬁlter induced by x).
Thus PsTop is deﬁnable by the following topological axiom in Spa(F):
({1}, ∅) →({1}, F{1}).
(5) Also Top is deﬁnable by topological axioms in Spa(F). However, a proper class of
such axioms is needed.
18th January 2005

384
Topological and Algebraic Categories
[Chap. VI
22.3 TOPOLOGICAL STRUCTURE THEOREM
For concrete categories (A, U), the following conditions are equivalent:
(1) (A, U) is ﬁbre-small and topological,
(2) (A, U) is concretely isomorphic to an initially closed full subcategory of a functor-
structured category,
(3) (A, U) is concretely isomorphic to an isomorphism-closed concretely reﬂective sub-
category of some functor-structured category,
(4) (A, U) is concretely isomorphic to a subcategory of a functor-structured category
Spa(T) that is deﬁnable by topological axioms in Spa(T).
Proof:
(1) ⇒(2). Let (A, U) be a ﬁbre-small topological category over X. Let T : X →Set be
the associated ﬁbre-functor, deﬁned on objects X by: TX = { A ∈Ob(A)
 UA = X }
and on morphisms X
f
−→Y by:
Tf(A) = B ⇔A
f
−→B is ﬁnal. Then for each A-
object A the pair (UA , { B ∈TUA
 B ≤A }) is a T-space EA. The unique concrete
functor E : (A, U) →Spa(T), deﬁned on objects as just described, is easily seen to
be a full embedding. Hence it remains to be shown that its image is initially closed in
Spa(T). To see this, consider an initial source ((X, α)
fi
−−→EAi)I in Spa(T), and let
(A
fi
−−→Ai)I be the initial lift of the structured source (X
fi
−−→UAi)I in (A, U). Then
by Example 10.42(4) the following conditions are equivalent for elements B of TX:
(a) B ∈α,
(b) Tfi(B) ≤Ai for each i ∈I,
(c) B
fi
−−→Ai is an A-morphism for each i ∈I,
(d) B ≤A.
Thus (X, α) = EA.
(2) ⇒(1) is immediate from Proposition 21.30 and the fact that each functor-structured
category is topological.
(2) ⇔(3). Proposition 21.31.
(3) ⇔(4) is immediate from Theorem 16.14, since each functor-structured category is
an (Identity-Carried, Initial Source)-category.

22.4 COROLLARY
For a construct (A, U) the following conditions are equivalent:
(1) (A, U) is ﬁbre-small and topological,
(2) (A, U) can be concretely embedded in a functor-structured construct as a full sub-
construct that is closed under the formation of:
(a) products,
18th January 2005

Sec. 22]
Topological structure theorems
385
(b) initial subobjects, and
(c) indiscrete objects.
Proof: This follows from Theorem 22.3 and Proposition 21.37.

22.5 REMARK
If (A, U) is a topological category over X, then (Aop, Uop) is a topological category over
Xop. Thus, by the above structure theorem, there exists a functor T : Xop →Set, such
that (Aop, Uop) is concretely isomorphic (over Xop) to a full concrete subcategory of
Spa(T) that is deﬁnable by topological axioms. Thus, by duality, (A, U) is concretely
isomorphic over X to a full concrete subcategory of the functor-costructured category
Spa(T)op, deﬁnable by the dual of topological axioms, called topological co-axioms.
Such a representation of a topological category is sometimes more natural than the one
provided directly by the Topological Structure Theorem (22.3).
Below we formulate
these results more explicitly and provide several examples.
22.6 DEFINITION
Let (A, U) be a concrete category over X.
(1) Each identity-carried morphism P ′
p
−→P is called a topological co-axiom in
(A, U).71 An A-object A is said to satisfy the co-axiom p provided that A is {p}-
projective; that is, each A-morphism f : A →P is also an A-morphism f : A →P ′.
(2) A full subcategory B of A is said to be deﬁnable by topological co-axioms in A
if there exists a class of topological co-axioms in A such that an A-object A satisﬁes
each of these co-axioms if and only if A ∈Ob(B).
22.7 EXAMPLES
(1) The construct Sym of symmetric relations is deﬁnable in Rel either
(a) by the topological axiom
• →•
id
−−→
• ↔•
or
(b) by the topological co-axiom
• o
/

• qO
•Q
−→
•
@@@@@o
/

• qO
•Q
71Observe that f is a topological co-axiom if and only if it is a topological axiom. However, the concept
“A satisﬁes the topological co-axiom f” is dual to the concept “A satisﬁes the topological axiom f”.
18th January 2005

386
Topological and Algebraic Categories
[Chap. VI
(2) The construct Top is deﬁnable by the following (proper) class of topological co-
axioms in Spa(Q)op:
(C1) ({0}, {{0}, ∅}) →({0}, ∅),
(C2) ({0, 1, 2, 3}, {{0, 1}, {0, 2}, {0}}) →({0, 1, 2, 3}, {{0, 1}, {0, 2}}),
(CA
X) (X, A ∪{S A}) →(X, A), for each set X and each family A of subsets of X.
22.8 THEOREM
For a concrete category (A, U) the following are equivalent:
(1) (A, U) is ﬁbre-small and topological,
(2) (A, U) is concretely isomorphic to a ﬁnally closed full subcategory of some functor-
costructured category,
(3) (A, U) is concretely isomorphic to a full concretely coreﬂective subcategory of some
functor-costructured category,
(4) (A, U) is concretely isomorphic to a subcategory of some functor-costructured cate-
gory Spa(T)op that is deﬁnable by topological co-axioms in Spa(T)op.
D
M-TOPOLOGICAL STRUCTURE THEOREMS
22.9 M-TOPOLOGICAL STRUCTURE THEOREM
For concrete categories (A, U) over an E-co-wellpowered (E, M)-category the following
conditions are equivalent:
(1) (A, U) is ﬁbre-small and M-topological,
(2) (A, U) is concretely isomorphic to an M-initially closed full subcategory of a functor-
structured category,
(3) (A, U) is concretely isomorphic to an isomorphism-closed E-reﬂective subcategory
of a functor-structured category,
(4) (A, U) is concretely isomorphic to an E-implicational subcategory of a functor-
structured category.
Proof: (1) ⇒(2). By Theorem 21.40 and Remark 21.41(1) there exists a full concrete
embedding (A, U)
E
−−→(B, V ) of (A, U) into a ﬁbre-small topological category such
that E[A] is M-initially closed in (B, V ). By Theorem 22.3 there exists a full concrete
embedding (B, V )
F
−−→Spa(T) of (B, V ) into some functor-structured category such
that F(B) is initially closed in Spa(T). Thus (A, U)
F◦E
−−−→Spa(T) is a full concrete
embedding such that (F ◦E)[A] is M-initially closed in Spa(T).
(2) ⇒(1) is obvious.
(2) ⇔(3) follows from Theorem 16.8 in view of Proposition 21.14(1).
(3) ⇔(4) follows from Theorem 16.14.

18th January 2005

Sec. 22]
Topological structure theorems
387
22.10 COROLLARY
For constructs (A, U) the following conditions are equivalent:
(1) (A, U) is ﬁbre-small and monotopological,
(2) (A, U) is concretely isomorphic to a full subconstruct of a functor-structured con-
struct that is closed under the formation of products and initial subobjects,
(3) (A, U) is concretely isomorphic to an implicational subconstruct of a functor-struc-
tured construct.
Proof: This follows immediately from Theorem 22.9 and the observation that in a ﬁbre-
small construct, for each initial mono-source (A
fi
−−→Ai)I, there exists a subset J of I
such that (A
fj
−−→Aj)J is an initial mono-source (cf. Proposition 21.36).

Suggestions for Further Reading
Wyler, O. Top categories and categorical topology. Gen. Topol. Appl. 1 (1971): 17–28.
Menu, J., and A. Pultr. On categories determined by poset- and set-valued functors.
Comment. Math. Univ. Carolinae 15 (1974): 665–678.
Ad´amek, J., H. Herrlich, and G. E. Strecker. The structure of initial completions.
Cahiers Topol. Geom. Diﬀ. 20 (1979): 333–352.
Herrlich, H Universal topology. Categorical Topology. Proceedings of the International
Conference, Toledo, Ohio, 1983 (ed. H. L. Bentley et. al.), Heldermann, Berlin,
1984, 223–281.
Ad´amek, J., and J. Reiterman. Topological categories presented by small sets of ax-
ioms. J. Pure Appl. Algebra 42 (1986): 1–14.
EXERCISES
22A. Characterization of Functor-Structured Categories
Show that a concrete category (A, U) is concretely isomorphic to some functor-structured
category Spa(T) if and only if the following conditions are satisﬁed:
(1) (A, U) is a topological category,
(2) (A, U)-ﬁbres are complete atomic Boolean algebras,
(3) if A
f
−→B is ﬁnal in (A, U), then the following hold:
(a) if A is an atom (in its ﬁbre), then so is B,
(b) if B is discrete, then so is A.
18th January 2005

388
Topological and Algebraic Categories
[Chap. VI
22B. Topological Theories
A topological theory in X is a functor X
T
−−→JCPos. For each topological theory
T in X denote by Top(T) the concrete category over X whose objects are pairs (X, t)
with X ∈Ob(X) and t ∈T(X), and whose morphisms (X, t)
f
−→(Y, s) are those X-
morphisms X
f
−→Y that satisfy Tf(t) ≤s.
(a) Show that if T is a topological theory in X, then Top(T) is a ﬁbre-small topological
category over X.
(b) Let (A, U) be a topological category over X. Consider the so-called ﬁbre-functor
T : X →JCPos that assigns to each X-object X the U-ﬁbre of X, and to each
X-morphism X
f
−→Y the unique function TX
Tf
−−→TY such that A
f
−→Tf(A) is
a ﬁnal morphism in (A, U) for each A ∈TX. Prove that T is a topological theory
in X and that (A, U) is concretely isomorphic to Top(T).
(c) Show that if G : X →Set is a functor and P : Set →JCPos is the covariant
power-set functor, then P ◦G is a topological theory in X and Top(P ◦G) =
Spa(G).
* 22C. Sets of Axioms
Prove that Top cannot be axiomatized by a set of axioms in a functor-structured cate-
gory.
22D. Co-Axiomatization
Find a co-axiomatization of Prost in a functor-costructured category.
18th January 2005

23 Algebraic categories
In this section we introduce the concept of algebraic category, which is aimed at capturing
the intuitive concept of “algebras over a base category”. An attempt to describe algebraic
structures, via monads, has been presented in §20. For constructs this approach has been
quite successful. Unfortunately, however, besides being rather complicated, the concepts
of monadic functors and monadic categories have the severe deﬁciencies pointed out in
§20.
Here we provide the concepts of essentially algebraic, algebraic, and regularly algebraic
functors and concrete categories. They are free from the above-mentioned deﬁciencies of
monadic functors and categories. Moreover, as we will see in §24, the regularly algebraic
functors form the compositive hull of the regularly monadic functors.
ESSENTIALLY ALGEBRAIC FUNCTORS
Each of the following concepts, which under rather mild assumptions are equivalent (see
17.13), captures the “essence of algebraicity” of a functor G:
(1) G reﬂects isomorphisms,
(2) G reﬂects limits,
(3) G reﬂects equalizers,
(4) G is faithful and reﬂects extremal epimorphisms,
(5) mono-sources are G-initial.
Each of these concepts is too weak to have many striking consequences. However, when
any of them is combined with a suitably chosen factorization condition, such as (Generat-
ing, Mono-Source)-factorizability (which by itself has nothing to do with “algebraicity”),
a theory emerges that is surprisingly close to intuitive notions of what concrete categories
of algebras should be. Just for convenience we will also require unique transportability.
This, however, is an inessential requirement.
23.1 DEFINITION
A functor is called essentially algebraic provided that it creates isomorphisms and is
(Generating, Mono-Source)-factorizable.
23.2 PROPOSITION
For a uniquely transportable (Generating, Mono-Source)-factorizable functor
G : A →B, the following conditions are equivalent:
(1) G is essentially algebraic,
(2) G reﬂects isomorphisms,
389

390
Topological and Algebraic Categories
[Chap. VI
(3) G reﬂects limits,
(4) G reﬂects equalizers,
(5) G is faithful and reﬂects extremal epimorphisms,
(6) every mono-source in A is G-initial.
Proof: Immediate from Propositions 17.13 and 13.36.

23.3 PROPOSITION
Each essentially algebraic functor is a faithful adjoint functor.
Proof: Immediate from Propositions 23.2 and 18.3.

23.4 PROPOSITION
Essentially algebraic functors are closed under composition.

ESSENTIALLY ALGEBRAIC CATEGORIES
23.5 DEFINITION
A concrete category (A, U) is called essentially algebraic provided that U is essentially
algebraic.
23.6 EXAMPLES
(1) All monadic constructs, e.g., Alg(Ω), Vec, Grp, and HComp, are essentially alge-
braic. However, the monadic category over Pos exhibited in Example 20.47 is not
essentially algebraic (since it is not cocomplete, cf. Theorem 23.11).
(2) The constructs BooSp, TfAb, Catof, and (Ban,O) are essentially algebraic, but
not monadic.
(3) Categories of topological algebras (e.g., topological groups, topological semigroups,
etc.), considered as concrete categories over Top, are essentially algebraic.
(4) A topological category (A, U) is essentially algebraic only if U is an isomorphism.
(5) A partially ordered class, considered as a concrete category over 1, is essentially
algebraic if and only if it has precisely one element.
23.7 PROPOSITION
In any essentially algebraic category, the embeddings are precisely the monomorphisms.
Proof: Immediate from Proposition 23.2.

18th January 2005

Sec. 23]
Algebraic categories
391
23.8 CHARACTERIZATION THEOREM FOR
ESSENTIALLY ALGEBRAIC CATEGORIES
A concrete category (A, U) is essentially algebraic if and only if the following conditions
are satisﬁed:
(1) U creates isomorphisms,
(2) U is adjoint,
(3) A is (Epi, Mono-Source)-factorizable.
Proof:
(a). If (A, U) is essentially algebraic, then conditions (1) and (2) are clearly satisﬁed
(cf. 23.2 and 23.3). To show (3), let S = (A
fi
−−→Ai)I be a source in A, and let
UA
Ufi
−−−→UAi = UA
g
−→UB
Umi
−−−→UAi
be a (Generating, Mono-Source)-factorization of the corresponding structured source.
Since by Proposition 23.2 each mono-source is U-initial, A
g
−→B is an A-morphism.
Hence A
fi
−−→Ai = A
g
−→B
mi
−−→Ai is an (Epi, Mono-Source)-factorization of S.
(b). Let conditions (1), (2), and (3) be satisﬁed, and let S = (X
fi
−−→UAi)I be a
structured source. If X
u
−→UA is a universal arrow, then for each i ∈I there exists
an A-morphism A
gi
−−→Ai with fi = (Ugi)◦u. If A
gi
−−→Ai = A
e
−→B
mi
−−→Ai is an
(Epi, Mono-Source)-factorization, then X
fi
−−→UAi = X
(Ue)◦u
−−−−−→UB
Umi
−−−→UAi is
a (Generating, Mono-Source)-factorization of S.

23.9 REMARKS
(1) Condition (3) in the above theorem is surprising since it is a requirement on A and
not on U. In particular, the identity functor on a category A is essentially algebraic
if and only if A has (Epi, Mono-Source)-factorizations.
(2) Monadic categories satisfy conditions (1) and (2) of the above theorem, but may
fail to satisfy (3). Hence a monadic category (A, U) is essentially algebraic if and
only if A has (Epi, Mono-Source)-factorizations. In particular, regularly monadic
categories are essentially algebraic.
23.10 COROLLARY
If (A, U) is essentially algebraic, then A has coequalizers.
Proof: Immediate since (Epi, Mono-Source)-factorizable categories have coequalizers.
(Cf. Proposition 15.7 and Theorem 15.10.)

23.11 THEOREM
Every essentially algebraic functor
(1) detects colimits,
18th January 2005

392
Topological and Algebraic Categories
[Chap. VI
(2) preserves and creates limits.
Proof: Let (A, U) be an essentially algebraic category.
(1). Let D : I →A be a diagram, and let (UDi
ci
−−→K)I be a colimit of U ◦D.
Consider the structured source S = (K
fj
−−→UAj)J consisting of those structured
arrows (fj, Aj) with the property that UDi
fj◦ci
−−−−→UAj is an A-morphism for each
i ∈I. Let K
fj
−−→UAj = K
g
−→UA
Umj
−−−−→UAj be a (Generating, Mono-Source)-
factorization of S. Since mono-sources in A are initial, each UDi
g◦ci
−−−→UA is an
A-morphism. Hence (Di
g◦ci
−−−→A)I is a colimit of D.
UDi
ci
/
fj◦ci
#F
F
F
F
F
F
F
F
K
fj

g
/ UA
Umj
|yyyyyyyy
UAj
(2). As an adjoint functor, U preserves limits. To show creation, let D : I →A be a
diagram and let L = (L
ℓi
−−→UDi) be a limit of the composite functor U ◦D. If
L
ℓi
−−→UDi = L
g
−→UA
Umi
−−−→UDi is a (Generating, Mono-Source)-factorization,
then M = (A
mi
−−→Di)I is a natural source for D. Let S = (B
fi
−−→Di)I be an
arbitrary natural source for D. Then US is a natural source for U◦D. Consequently,
there exists a morphism UB
f
−→L with US = L ◦f.
UB
f

Ufj
#F
F
F
F
F
F
F
F
L
ℓi
/
g

UDi
UA
Umi
;x
x
x
x
x
x
x
x
Since M is a mono-source and, hence, is initial, UB
g◦f
−−−→UA is an A-morphism
with S = M ◦(g ◦f). Thus M is a limit of D. Since U preserves limits, UM is a
limit of U ◦D. Hence L
g
−→UA is an isomorphism. Therefore, transportability of
U implies that U lifts limits. Hence, by Proposition 13.25, U creates limits.

23.12 PROPOSITION
If (A, U) is essentially algebraic over X, then the following hold:
(1) If X is (strongly) complete, then A is (strongly) complete.
(2) If X has coproducts, then A is cocomplete.
(3) If X is wellpowered, then A is wellpowered.
18th January 2005

Sec. 23]
Algebraic categories
393
Proof: (1) follows from Theorem 23.11 and the fact that U, being adjoint, preserves
monomorphisms.
(2) follows from Theorem 23.11 and Corollary 23.10.
(3) follows from the fact that monomorphisms are initial and U preserves and reﬂects
them.

23.13 COROLLARY
Every essentially algebraic construct is complete, cocomplete, and wellpowered.

23.14 PROPOSITION
For essentially algebraic categories, the following conditions are equivalent:
(1) A is extremally co-wellpowered,
(2) U is extremally co-wellpowered,
(3) U is concretely co-wellpowered.
Proof: (1) ⇒(2) follows from Proposition 18.11.
(2) ⇔(3) is immediate by Proposition 23.7.
(3) ⇒(1) is immediate by Remark 8.18(3).

23.15 THEOREM
If (A, U) is a concretely co-wellpowered category over a strongly complete category X,
then the following conditions are equivalent:
(1) (A, U) is essentially algebraic,
(2) U creates limits.
Proof: (1) ⇒(2) follows from Theorem 23.11.
(2) ⇒(1). By Theorem 13.19, A is strongly complete and U preserves strong limits.
Thus (1) follows from Theorem 17.11(2).

23.16 COROLLARY
Concretely co-wellpowered monadic categories over strongly complete categories are es-
sentially algebraic.

23.17 THEOREM
Concrete functors between essentially algebraic categories are essentially algebraic.
18th January 2005

394
Topological and Algebraic Categories
[Chap. VI
Proof: Let (A, U)
G
−−→(B, V ) be a concrete functor between essentially algebraic cat-
egories over X.
G reﬂects isomorphisms since V preserves and U reﬂects them.
G
is faithful and amnestic since U is. G is transportable since U is transportable, V is
amnestic, and B-monomorphisms are V-initial.
Hence G creates isomorphisms.
Let
S = (B
fi
−−→GAi)I be a G-structured source. Consider a (Generating, Mono-Source)-
factorization
V B
V fi
−−−→UAi
=
V B
g
−→UA
Umi
−−−→UAi
of the U-structured source (V B, (V fi, Ai)I). Since U preserves and V reﬂects mono-
sources, (GA
Gmi
−−−→GAi)I is a mono-source, and hence is V-initial. Thus there exists a
B-morphism B
ˆg
−→GA with V ˆg = g and fi = Gmi ◦ˆg for each i ∈I. The G-structured
morphism (ˆg, A) is generating, since the U-structured morphism (V ˆg, A) is generating.
Hence
B
fi
−−→GAi = B
ˆg
−→GA
Gmi
−−−→GAi
is a (Generating, Mono-Source)-factorization of the G-structured source S.

23.18 COROLLARY
The forgetful functors Rng →Ab and Rng →Mon are essentially algebraic functors;
in particular, they are adjoint functors.

ALGEBRAIC FUNCTORS AND CATEGORIES
Since (Epi, Mono-Source)-factorizable categories are (Extremal Epi, Mono-Source) cat-
egories (15.10), there is a certain symmetry between mono-sources on the one hand and
extremal epimorphisms on the other. Unfortunately, essentially algebraic functors, as
nice as they are otherwise, may not interact well with this symmetry. In particular,
(1) they preserve mono-sources, but may fail to preserve extremal epimorphisms, e.g.,
Ban
O
−−→Set or Catof
U
−−→Set, cf. Example 7.72(5),
(2) they detect wellpoweredness, but may fail to detect extremal co-wellpoweredness, cf.
Exercise 23I,
(3) mono-sources must be initial, but extremal epimorphisms may fail to be ﬁnal, e.g,
Ban
O
−−→Set or Catof
U
−−→Set, cf. Example 8.11(4).
The following condition, which is quite often satisﬁed, restores a proper interaction with
this symmetry.
23.19 DEFINITION
(1) A functor is called algebraic provided that it is essentially algebraic and preserves
extremal epimorphisms.
(2) A concrete category (A, U) is called algebraic provided that U is algebraic.
18th January 2005

Sec. 23]
Algebraic categories
395
23.20 EXAMPLES
(1) Each regularly monadic category and, in particular, each monadic construct is alge-
braic (cf. 20.30).
(2) Every full subconstruct of a monadic construct that is closed under the formation of
products and subobjects is algebraic. In particular, BooSp and TfAb are algebraic.
Neither, however, is monadic.
(3) The constructs Catof and (Ban, O) are essentially algebraic, but not algebraic
[cf. 7.72(5)].
(4) Catof, considered as a concrete category over Alg(1, 1) via the functor that forgets
composition, is essentially algebraic and monadic but is not algebraic.
(5) TopGrp, considered as a concrete category over Top, is algebraic. The category of
Hausdorﬀsemigroups, considered as a concrete category over Haus, is essentially
algebraic and monadic, but is not algebraic.
(6) The embedding Reg ,→Top of the full subcategory of Top that consists of all regu-
lar spaces (the T1-condition not being required) is essentially algebraic and monadic,
but is not algebraic.
23.21 PROPOSITION
Algebraic functors are closed under composition.

23.22 PROPOSITION
Each concrete functor between algebraic categories is algebraic.
Proof: This follows from Theorem 23.17 and the fact that (essentially) algebraic func-
tors reﬂect extremal epimorphisms.

23.23 PROPOSITION
In algebraic categories every extremal epimorphism is ﬁnal.
Proof: Suppose that A
e
−→B is an extremal epimorphism in an algebraic category
(A, U) over X. Let UB
f
−→UC be an X-morphism and A
g
−→C be an A-morphism
with Ug = f ◦Ue. If
B
A
e
>~
~
~
~
~
~
~ e
/
g
 @
@
@
@
@
@
@
D
m
O
n

C
is an (ExtrEpi, Mono-Source)-factorization of the 2-source B
e
←−A
g
−→C (which exists
in view of Theorems 23.8 and 15.10), then Un ◦Ue = Ug = f ◦Ue = f ◦Um ◦Ue.
Since U is algebraic, Ue is an (extremal) epimorphism in X, which implies that Un =
18th January 2005

396
Topological and Algebraic Categories
[Chap. VI
f ◦Um. Since (Um, Un) is a mono-source, Um is a monomorphism in X, so that m is a
monomorphism in A. Since e is an extremal epimorphism, m must be an isomorphism.
Thus B
n◦m−1
−−−−−→C is the unique A-morphism with U(n ◦m−1) = f.

23.24 COROLLARY
Algebraic functors reﬂect regular epimorphisms.
Proof: This follows from Proposition 23.23, as in the proof of Proposition 20.30.

23.25 REMARK
Algebraic functors need not preserve regular epimorphisms. See Exercise 23J.
23.26 COROLLARY
In any algebraic category over a balanced category, the quotient morphisms are precisely
the extremal epimorphisms.

23.27 COROLLARY
If (A, U) is algebraic over an extremally co-wellpowered category X, then A is extremally
co-wellpowered.

23.28 PROPOSITION
If (A, U) is algebraic over X, then the following hold:
(1) If extremal epimorphisms are closed under the formation of pullbacks (resp. products)
in X, then they are closed under the formation of pullbacks (resp. products) in A.
(2) If X has enough extremal projectives, then so does A.
Proof:
(1). This follows from the fact that U preserves limits and preserves and reﬂects extremal
epimorphisms.
(2). Let A be an A-object. Then in X there exists an extremal epimorphism P
e
−→UA
with extremally projective domain P. If P
u
−→U ˆP is a universal arrow, then there
exists a unique A-morphism ˆP
ˆe
−→A with e = Uˆe ◦u. Since e is an extremal
epimorphism, so is Uˆe. Since U reﬂects extremal epimorphisms, ˆe is an extremal
epimorphism in A. It remains to show that ˆP is extremally projective. Let B
g
−→C
be an extremal epimorphism in A and ˆP
f
−→C be an arbitrary A-morphism. Since
Ug is an extremal epimorphism in X, there exists some X-morphism P
k
−→UB
such that the square
P
u
/
k

U ˆP
Uf

UB
Ug
/ UC
commutes. If ˆP
ˆk
−→B is the unique A-morphism with k = Uˆk ◦u, then f = g ◦ˆk.
18th January 2005

Sec. 23]
Algebraic categories
397
23.29 COROLLARY
Any algebraic construct is complete, cocomplete, wellpowered, and extremally co-well-
powered. It has enough extremal projectives, and its extremal epimorphisms are closed
under composition and the formation of pullbacks and products.

23.30 CHARACTERIZATION THEOREM FOR
ALGEBRAIC CATEGORIES
A concrete category (A, U) is algebraic if and only if the following conditions are satisﬁed:
(1) A is (Epi, Mono-Source)-factorizable,
(2) U is adjoint,
(3) U is uniquely transportable,
(4) U preserves and reﬂects extremal epimorphisms.
Proof: The necessity of these conditions has already been established. Conversely, it
need only be shown that for any concrete category (A, U) with the above properties,
U must reﬂect isomorphisms. This follows immediately from the fact that U reﬂects
extremal epimorphisms and monomorphisms.

23.31 THEOREM
For a concrete category (A, U) over an (Extremal Epi, Mono-Source)-category X the
following conditions are equivalent:
(1) (A, U) is algebraic,
(2) U is an adjoint functor and lifts (Extremal Epi, Mono-Source)-factorizations uniquely,
(3) U is an adjoint functor and creates (Extremal Epi, Mono-Source)-factoriza-
tions, i.e., U lifts these factorizations uniquely and reﬂects extremal epimorphisms
and mono-sources.
Proof: (1) ⇒(3). Since, by Theorem 23.30 and Theorem 15.10, A has (Extremal Epi,
Mono-Source)-factorizations and U preserves these and is transportable, U lifts such
factorizations.
Since, moreover, U reﬂects extremal epimorphisms and mono-sources
and is amnestic, the liftings are uniquely determined.
(3) ⇒(2). Trivial.
(2) ⇒(1). Since U, being faithful, reﬂects epimorphisms and mono-sources, A has (Epi,
Mono-Source)-factorizations. Observe that U reﬂects identities, i.e., any A-morphism
A
f
−→B with Uf = idX must be idA, since the (Extremal Epi, Mono-Source)-factorization
UA
Uf
−−→
UB
=
UA
idX
−−−→
X
idX
−−−→
UB has the lifts A
f
−→
B
idB
−−−→
B
and A
idA
−−−→A
f
−→B. Next consider the class E of A-morphisms that are mapped
by U into extremal epimorphisms. To show that any element A
e
−→B of E is ﬁnal, let
18th January 2005

398
Topological and Algebraic Categories
[Chap. VI
UB
f
−→UC be an X-morphism and let A
g
−→C be an A-morphism with Ug = f ◦Ue.
Then the (Extremal Epi, Mono-Source)-factorization in X
UB
UA
Ue
<x
x
x
x
x
x
x
x Ue /
Ug
"F
F
F
F
F
F
F
F
UB
idUB
O
f

UC
has a lift
B
A
e
?






 e
/
g
?
?
?
?
?
?
?
?
B
k
O
f

C
in A.
Since Uk = idUB, we conclude that k = idB; in particular, B = B. Hence B
f
−→C is an
A-morphism with Uf = f. This ﬁnality-property implies that A is an (E, M)-category,
where M is the conglomerate of all A-sources that are mapped via U to mono-sources
in X. Since U is faithful and adjoint, M consists precisely of the mono-sources in A.
Thus, by Proposition 15.8(1), E consists precisely of the extremal epimorphisms in A.
Hence U preserves and reﬂects extremal epimorphisms. It remains to be shown that U is
transportable. If X
h
−→UA is a structured isomorphism, then the (Extremal Epi, Mono-
Source)-factorization UA
U(idA)
−−−−−→UA = UA
h−1
−−−→X
h
−→UA has a lift A
f
−→B
g
−→A.
Hence B
g
−→A is a morphism with Ug = h. Since U reﬂects extremal epimorphisms
and monomorphisms, g is both, i.e., an isomorphism.

23.32 COROLLARY
A full concrete subcategory (A, U) of an algebraic category (B, V ) is algebraic if and only
if A is reﬂective in B and contains with every source its (Extremal Epi, Mono-Source)-
factorization in B.
Proof: By Propositions 23.21 and 23.22, (A, U) is algebraic if and only if the inclusion
functor A →B is algebraic. Since B has (Epi, Mono-Source)-factorizations and hence is
an (Extremal Epi, Mono-Source)-category, the desired result follows immediately from
Theorem 23.31.

23.33 COROLLARY
Each extremally epireﬂective concrete subcategory of an algebraic category is algebraic.
23.34 EXAMPLES
(1) The constructs Grp and Sgr are algebraic, but Grp is not closed under the forma-
tion of subobjects in Sgr.
(2) HComp and Top, considered as concrete categories over Top, are algebraic, but
HComp is closed neither under the formation of subobjects nor under the formation
of extremal quotient objects in Top.
(3) Epireﬂective full concrete subcategories of algebraic categories need not be algebraic.
See Exercise 16A.
18th January 2005

Sec. 23]
Algebraic categories
399
REGULARLY ALGEBRAIC FUNCTORS AND CATEGORIES
Algebraic functors whose codomains have regular factorizations are particularly well-
behaved. They are closely related to regularly monadic functors — in fact, they form
the compositive hull of the regularly monadic functors (see Theorem 24.2). This suggests
the following terminology:
23.35 DEFINITION
(1) A functor A
U
−−→X is called regularly algebraic provided that U is algebraic and
X has regular factorizations.
(2) A concrete category (A, U) is called regularly algebraic provided that U is regu-
larly algebraic.
23.36 PROPOSITION
Regularly monadic functors are regularly algebraic.
Proof: Immediate from Proposition 20.24 and Theorem 23.31.

23.37 COROLLARY
Monadic constructs are regularly algebraic.

23.38 CHARACTERIZATION THEOREM FOR
REGULARLY ALGEBRAIC CATEGORIES
A concrete category (A, U) over X is regularly algebraic if and only if the following
conditions are satisﬁed:
(1) A has coequalizers,
(2) X has regular factorizations,
(3) U is adjoint,
(4) U is uniquely transportable,
(5) U preserves and reﬂects extremal epimorphisms.
Proof: By Theorem 23.30 it suﬃces to show that conditions (1) – (5) imply that A is
(Epi, Mono-Source)-factorizable. Let (A
fi
−−→Ai)I be a source in A and let
UA
Ufi
−−−→UAi = UA
e
−→X
mi
−−→UAi
be a (RegEpi, Mono-Source)-factorization in X. Then e is a coequalizer of some pair
Y
p1 /
p2 / UA of morphisms in X. Let Y
ηY
−−→UB be a universal arrow for Y . Then there
exist A-morphisms B
ˆpj
−−→A with pj = (U ˆpj) ◦ηY for j = 1, 2. Let A
c−→C be a
coequalizer of ˆp1 and ˆp2 in A. For each i ∈I the equalities U(fi ◦ˆp1) ◦ηY = Ufi ◦p1 =
mi ◦e ◦p1 = mi ◦e ◦p2 = Ufi ◦p2 = U(fi ◦ˆp2) ◦ηY imply that fi ◦ˆp1 = fi ◦ˆp2.
18th January 2005

400
Topological and Algebraic Categories
[Chap. VI
Thus for each i ∈I there exists a unique A-morphism C
ni
−−→Ai with fi = ni ◦c.
It remains to be shown that (C
ni
−−→Ai)I is a mono-source in A.
Since Uc ◦p1 =
U(c ◦ˆp1) ◦ηY = U(c ◦ˆp2) ◦ηY = Uc ◦p2, there exists a unique X-morphism X
f
−→UC
with Uc = f ◦e. Since, by (5), Uc is an extremal (and hence a regular) epimorphism
in X and (X
mi
−−→Ai)I is a mono-source in X, there exists a unique diagonal d in the
following diagram:
UA
Uc /
e

UC
d
|xxxxxxxxx
Uni

X
mi / UAi
Thus f ◦d◦Uc = f ◦e = Uc implies that f ◦d = idUC and d◦f ◦e = d◦Uc = e implies that
d ◦f = idX. Hence d is an isomorphism and U(C
ni
−−→Ai)I = (UC
d
−→X
mi
−−→UAi)I
is a mono-source. By faithfulness, (C
ni
−−→Ai)I is a mono-source.

23.39 COROLLARY
If (A, U) is a regularly algebraic category, then A has regular factorizations and U
preserves and reﬂects regular epimorphisms.
Proof: In the proof of Theorem 23.38 regular factorizations have been constructed.
Since in categories with regular factorizations every extremal epimorphism is regular
(cf. 14.14), U preserves and reﬂects regular epimorphisms.

23.40 COROLLARY
Concrete functors between regularly algebraic categories are regularly algebraic.

23.41 THEOREM
A construct (A, U) is monadic if and only if it is algebraic and U reﬂects congruence
relations.
Proof: (1). Let (A, U) be a monadic construct. By Corollary 23.37, (A, U) is alge-
braic. That U reﬂects congruence relations follows easily from the facts that U creates
coequalizers of congruence relations (20.35) and that every point-separating 2-source in
A is a mono-source and, hence, is initial.
(2). Let (A, U) be an algebraic construct and let U reﬂect congruence relations. By
Theorem 20.35 it suﬃces to show that U creates coequalizers of congruence relations.
Let A
p /
q / B be a pair of A-morphisms and let UA
Up /
Uq
/ UB
c−→C be a congruence
fork in Set. Let B
ˆc−→ˆC be a coequalizer of p and q in A. Since U reﬂects congru-
ence relations, Proposition 11.22(1) implies that A
p /
q / B
ˆc−→ˆC is a congruence fork
in A. Since Uˆc is an extremal (and hence a regular epimorphism) in Set and since
18th January 2005

Sec. 23]
Algebraic categories
401
U preserves pullbacks, Proposition 11.22(2) implies that UA
Up /
Uq
/ UB
Uˆc
−−→U ˆC is a
congruence fork in Set. Thus there is an isomorphism C
h
−→U ˆC with Uˆc = h ◦c.
By transportability, h lifts to an isomorphism ˜C
˜h
−→ˆC in A. Thus
B
˜c−→˜C = B
ˆc−→ˆC
˜h−1
−−−→˜C
is a lift of UB
c−→C to a coequalizer of p and q in A. Let B
c′
−−→C′ be an arbitrary
lift of UB
c−→C. Then faithfulness implies that c′ ◦p = c′ ◦q. Thus there exists an
A-morphism ˜C
k
−→C′ with c′ = k ◦˜c.
Application of U yields c = Uk ◦c.
Thus
Uk = idC. Amnesticity yields ˜C
k
−→C′ = ˜C′
id
−−→˜C. Therefore U creates coequalizers
of congruence relations.

23.42 REMARK
The following diagram exhibits some of the results on the “algebraic character” of func-
tors A
U
−−→X:
regularly monadic
?
creates regular factorizations
regularly algebraic
preserves regular epis

-
?
creates
(Extremal Epi, Mono-Source)-
factorizations
algebraic
reﬂects regular epis
detects extremal co-wellpoweredness
detects stability properties
of extremal epis
extremal epis are ﬁnal
preserves extremal epis

-
    	
@
@
@@
R
%
&

-
?
mono-sources are initial
essentially algebraic
reﬂects extremal epis
domain category is
(Epi, Mono-Source)-factorizable
creates limits (cf. 13.38)

-
   	
@
@
R
        	
@
@
@
@
@
@
@@
R






A
A
A
A
A
AAU
detects wellpoweredness
faithful
adjoint
detects colimits
18th January 2005

402
Topological and Algebraic Categories
[Chap. VI
An algebraic construct (A, U) is monadic iﬀU reﬂects congruence relations
Suggestions for Further Reading
Dubuc, E. Adjoint triangles. Springer Lect. Notes Math. 61 (1968): 69–91.
Huq, S. A. An interpolation theorem for adjoint functors. Proc. Amer. Math. Soc. 25
(1970): 880–883.
Herrlich, H. Regular categories and regular functors.
Canad. J. Math.
26 (1974):
709–720.
Tholen, W. Adjungierte Dreiecke, Colimites und Kan-Erweiterungen. Math. Ann. 217
(1975): 121–129.
Bargenda, H., and G. Richter. Varietal hulls of functors.
Quaest. Math.
4 (1980):
121–158.
Richter, G. Algebraic categories of topological spaces. Springer Lect. Notes Math. 962
(1982): 263–271.
Herrlich, H. Essentially algebraic categories. Quaest. Math. 9 (1986): 245–262.
Bargenda, H. Algebraische H¨ullen rechtsadjungierter Funktoren.
Ph. D. dissertation,
Bremen University, 1987.
Im, G. B., and G. M. Kelly. Adjoint triangle theorems for conservative functors. Bull.
Austral. Math. Soc. 36 (1987): 133–136.
18th January 2005

Sec. 23]
Algebraic categories
403
EXERCISES
23A. Weakly Algebraic Functors
A functor G : A →B is called weakly algebraic provided that it is an adjoint and
mono-sources in A are G-initial. Show that
(a) G is weakly algebraic if and only if G is an adjoint functor that reﬂects swell epi-
morphisms. (Cf. Exercise 15A).
(b) Weakly algebraic functors
(1) reﬂect extremal epimorphisms, swell epimorphisms, epimorphisms, and isomor-
phisms,
(2) are faithful,
(3) preserve and reﬂect mono-sources,
(4) preserve and reﬂect limits,
(5) detect wellpoweredness.
(c)
(1) Every monadic functor is weakly algebraic.
(2) Every essentially algebraic functor is weakly algebraic.
(3) Every full reﬂective embedding is weakly algebraic.
(4) Weakly algebraic embeddings need not be full. [A = pointed sets and all maps,
B = pSet.]
(5) A poset, considered as a concrete category over 1, is weakly algebraic if and
only if it contains exactly one element.
(d) G : A →B is essentially algebraic if and only if G is uniquely transportable and
weakly algebraic and A is (Epi, Mono-Source)-factorizable.
(e) Weakly algebraic functors are closed under composition.
(f) Concrete functors between weakly algebraic categories need not be weakly algebraic.
(Cf. Example 20.46.)
(g) If G : A →B is weakly algebraic and B has (Epi, Mono-Source)-factorizations,
then each co-adjoint for G preserves extremal epimorphisms.
23B. Essentially Algebraic Embeddings
(a) Prove that the embedding E : A →B of a full subcategory is essentially algebraic
if and only if the following two conditions hold:
(1) E is monadic; i.e., A is reﬂective and isomorphism-closed in B.
(2) A is (Epi, Mono-Source) factorizable.
18th January 2005

404
Topological and Algebraic Categories
[Chap. VI
(b) Show that embeddings of extremally epireﬂective, full, isomorphism-closed subcate-
gories into (Epi, Mono-Source)-factorizable categories are essentially algebraic.
(c) Prove that embeddings of epireﬂective, full, isomorphism-closed subcategories into
(Epi, Mono-Source)-factorizable categories need not be essentially algebraic. [See
Exercise 16A(b).]
23C. Essentially Algebraic vs. Monadic Functors
Prove that a monadic functor with an extremally co-wellpowered domain and strongly
complete codomain is essentially algebraic. [Cf. Theorem 23.16 and Proposition 18.11.]
23D. Algebraic Categories
(a) Let (A, U) be a concrete category over an (E, M)-category and let U lift (E, M)-
factorizations uniquely. Show that
(1) each A-morphism f with Uf ∈E is a ﬁnal epimorphism,
(2) A is an (U−1[E], U−1[M])-category.
(b) Prove that algebraic functors reﬂect regular epimorphisms.
[Hint:
Proposition
23.23.]
23E. Regularly Algebraic Functors and Categories
Show that
(a) If B has regular factorizations, then the following are equivalent for any functor
G : A →B:
(1) G is regularly algebraic,
(2) G is essentially algebraic and preserves regular epimorphisms,
(3) G is essentially algebraic and preserves swell epimorphisms,
(4) G is adjoint and creates regular factorizations,
(5) A has regular factorizations and G is adjoint, uniquely transportable, and pre-
serves and reﬂects regular epimorphisms.
(b) Regularly algebraic functors are closed under composition.
(c) Regular epireﬂective full isomorphism-closed subcategories of regularly algebraic cat-
egories are regularly algebraic.
(d) If B has regular factorizations and G : A →B is an embedding of a full, reﬂective
subcategory, then the following are equivalent:
(1) G is regularly algebraic,
(2) A contains with any source its regular factorization in B,
(3) A contains with any morphism its regular factorization in B,
18th January 2005

Sec. 23]
Algebraic categories
405
(4) A contains any B-object that is simultaneously a subobject of some A-object
and a regular quotient object of some A-object,
(5) A is isomorphism-closed in B, and G preserves regular epimorphisms.
(e) If B has regular factorizations, then the following conditions are equivalent for any
functor G : A →B:
(1) G is regularly monadic,
(2) G is regularly algebraic and monadic.
* 23F. Varietal Functors and Varietal Categories
A functor G : A →B is called varietal provided that G is regularly algebraic, B has
pullbacks, and G reﬂects congruence relations.
A concrete category (A, U) is called
varietal provided that U is varietal. Show that
(a) A concrete category (A, U) over a category with pullbacks and regular factorizations
is varietal if and only if (A, U) is algebraic and U creates coequalizers of congruence
relations.
(b) A regularly algebraic category (A, U) over a category with pullbacks is monadic if
and only if U creates those coequalizers of congruence relations that are retractions.
(c) Every varietal functor is regularly monadic.
(d) A construct is varietal if and only if it is monadic.
(e) The full embeddings TfAb ,→Ab and BooSp ,→Top are regularly monadic, but
are not varietal.
(f) Varietal functors are closed under composition.
(g) Concrete functors between varietal categories are varietal.
(h) If A
G
−−→B is varietal, then A has pullbacks and regular factorizations.
23G. Extremal Epimorphisms and Quotients
Prove that for algebraic constructs, quotients = extremal epimorphisms = swell epimor-
phisms = strict epimorphisms = regular epimorphisms.
23H. Extremal Projectives
Show that if A
G
−−→B is algebraic with co-adjoint F and if P is extremally projective in
B, then FP is extremally projective in A.
* 23I. Extremal Co-wellpoweredness
Show that the following (legitimate quasi-)construct (A, U) is essentially algebraic but
is not extremally co-wellpowered:
A-objects are pairs (X, (λβ)), consisting of a set X and a family (λβ), indexed by all
ordinals, of maps λβ : Xβ →X, where
Xβ = { x ∈X | λγ(x) = x for each λ < β }.
18th January 2005

406
Topological and Algebraic Categories
[Chap. VI
A-morphisms (X, (λβ))
f
−→(X′, (λ′
β)) are functions X
f
−→X′ that satisfy the following
conditions:
(a) f[Xβ] ⊆X′
β, for all ordinals β,
(b) x ∈Xβ implies that f(λβ(x)) = λ′
β(f(x)).
23J. Algebraic Functors Need Not Preserve Regular Epimorphisms
Show that the full embedding of
•
'O
O
O
O
O
O
O
O
O
O
O
O
O
O
// •
@
@
@
@
@
@
@
•
into
◦

•
'O
O
O
O
O
O
O
O
O
O
O
O
O
O
// •
@
@
@
@
@
@
@
?~
~
~
~
~
~
~
◦
~~~~~~~
_@@@@@@@
_@@@@@@@
•
is algebraic, but does not preserve regular epimorphisms.
* 23K. Algebraic Hulls
Let (A, U) be a concrete category over X. A concrete functor (A, U)
G
−−→(B, V ) is called
an algebraic hull of (A, U) provided that (B, V ) is algebraic and for every concrete
functor (A, U)
G′
−−→(B′, V ′) with algebraic (B′, V ′) there exists a unique concrete functor
(B, V )
F
−−→(B′, V ′) with G′ = F ◦G.
Let X have regular factorizations and enough RegEpi-projective objects, let (A, U) be
amnestic, and let U be adjoint. Show that:
(a) (A, U) has an essentially unique algebraic hull.
(b) The algebraic hull of (A, U) is a full embedding if and only if U reﬂects regular
epimorphisms.
(c) The algebraic hull of (A, U) is a full reﬂective embedding if and only if A has
coequalizers and U reﬂects regular epimorphisms.
(d) If X has coproducts, (A, U) is ﬁnitary and (A, U)
G
−−→(B, V ) is the algebraic hull
of (A, U), then (B, V ) is ﬁnitary.
23L. Full Reﬂective Restrictions of Algebraic Functors
Show that a functor A
U
−−→X into a category X that has regular factorizations and
enough RegEpi-projective objects is a restriction of an algebraic functor B →X to a
full, reﬂective subcategory A if and only if A has coequalizers and U is faithful, amnestic,
and reﬂects regular epimorphisms.
23M. Regularly Algebraic Functors Lift Regularity
Show that
18th January 2005

Sec. 23]
Algebraic categories
407
(a) If X is regular and A
U
−−→X is regularly algebraic, then A is regular.
(b) Algebraic constructs are regular.
23N. Extremally Monadic Functors Are Algebraic
Show that the title statement is true.
18th January 2005

24 Algebraic structure theorems
In the preceding sections the “algebraic nature” of concrete categories has been described
in various ways:
(a) via operations and implications resp. equations in §16, which leads to the concepts
of ﬁnitary quasivarieties and ﬁnitary varieties,
(b) via monads in §20, which leads to the concepts of monadic categories and regularly
monadic categories,
(c) via axiomatic descriptions in §23, which leads to the concepts of algebraic categories
and regularly algebraic categories.
Here we analyze the relationships among the various descriptions of “algebraicness”.
REGULARLY ALGEBRAIC VIA
REGULARLY MONADIC FUNCTORS
24.1 PROPOSITION
If A
U
−−→X is a regularly algebraic functor, then the associated monad T is regular and
the associated comparison functor A
K
−−→XT is an embedding whose image is a regular
epireﬂective subcategory of XT.
Proof: Let F be a co-adjoint for U. Then F preserves regular epimorphisms (dual of
Proposition 18.9) as does U (Corollary 23.39) and, hence, so does T = U ◦F. Thus T
is a regular monad and (XT, UT) is a regularly monadic category over X. By Proposi-
tion 20.30, XT has regular factorizations. By Corollary 20.44, the comparison functor
A
K
−−→XT is an isomorphism-closed full embedding.
Hence (by Theorem 16.8) it
remains to be shown that (X, x) belongs to K[A] for any K-structured mono-source
((X, x)
mi
−−→KAi)I. Consider such a mono-source. Then (X
mi
−−→UAi)I is a mono-
source in X, and the diagram
TX
Tmi /
x

TUAi
UεAi

X
mi
/ UAi
commutes for each i ∈I. Let (FX
Fmi
−−−→FUAi
εAi
−−−→Ai)I = (FX
e
−→B
ni
−−→Ai)I be a
(RegEpi, Mono-Source)-factorization in A. Then Ue is a regular epimorphism in X and
Uni ◦Ue = UεAi ◦Tmi = mi ◦x. Thus there exists a diagonal d in X that makes the
diagram
TX
Ue /
x

UB
d
{xxxxxxxxx
Uni

X
mi / UAi
408

Sec. 24]
Algebraic structure theorems
409
commute.
Since x is a retraction, so is d.
Since (Uni)I is a mono-source, d is a
monomorphism and thus an isomorphism. Since (mi)I is a mono-source, the equations
mi ◦(d ◦UεB) = U(ni ◦εB) = U(εAi ◦FUni) = UεAi ◦Tmi ◦Td = mi ◦(x ◦Td) imply
d ◦UεB = x ◦Td, i.e., that K(B)
d
−→(X, x) is a morphism in XT. Since UT is known
to reﬂect isomorphisms, K(B)
d
−→(X, x) is an isomorphism in XT. Finally, since K[A]
is isomorphism-closed in XT, the object (X, x) must belong to K[A].

24.2 DECOMPOSITION THEOREM FOR
REGULARLY ALGEBRAIC FUNCTORS
For a functor A
U
−−→X into a category X that has regular factorizations, the following
conditions are equivalent:
(1) U is (regularly) algebraic,
(2) U is the restriction of a regularly monadic functor to a regular epireﬂective
subcategory,
(3) U is a composite of regularly monadic functors.
Proof: (1) ⇒(2) follows from Proposition 24.1.
(2) ⇒(3) follows from Corollary 20.26.
(3) ⇒(1) follows from Proposition 23.36 and Proposition 23.21.

24.3 COROLLARY
Algebraic constructs are precisely the regular epireﬂective subconstructs of monadic con-
structs.

FINITARY (QUASI)VARIETIES
Finitary (quasi)varieties are characterized axiomatically below. The crucial concept that
describes “ﬁniteness” in the realm of algebra is the following:
24.4 DEFINITION
(1) A functor A
U
−−→X is called ﬁnitary provided that it maps directed colimits into
epi-sinks; i.e., whenever (Di
ci
−−→K)i∈I is a colimit of a diagram D : I →A with
scheme an up-directed partially ordered set, then (UDi
Uci
−−−→UK)i∈I is an epi-sink
in X.
(2) A concrete category (A, U) is called ﬁnitary provided that U is ﬁnitary.
(3) A monad T = (T, η, µ) is called ﬁnitary provided that T is ﬁnitary.
24.5 EXAMPLES
(1) Topological functors preserve all colimits, and hence are ﬁnitary.
18th January 2005

410
Topological and Algebraic Categories
[Chap. VI
(2) Constructs of the form Alg(Ω) are ﬁnitary. In fact the associated forgetful functors
Alg(Ω) →Set preserve directed colimits [see Example 11.28(4)].
Since by Proposition 13.30 every U−1[Epi]-reﬂective concrete subcategory of a ﬁni-
tary concrete category (A, U) is obviously ﬁnitary, all ﬁnitary (quasi)varieties are
ﬁnitary. For ﬁnitary varieties (A, U) the functor U even preserves directed colimits.
However, for ﬁnitary quasivarieties this need not be the case. (See Exercise 24A(b).)
(3) Neither HComp nor JCPos is ﬁnitary.
24.6 PROPOSITION
A monad T in Set is ﬁnitary if and only if the Eilenberg-Moore category (SetT, UT) is
ﬁnitary.
Proof: Let T = (T, η, µ) be a monad in Set, and let (A, U) = (SetT, UT) be the
Eilenberg-Moore category.
(1). Suppose that T is ﬁnitary. Let D : I →A be a diagram in A with directed scheme,
denote Di by (Xi, xi) for each I-object i, let ((Xi, xi)
ci
−−→(C, c))Ob(I) be a colimit
of D, and let (Xi
ki
−−→K)Ob(I) be a colimit of U ◦D. Then there exists a unique
function K
f
−→C with ci = f ◦ki for each i ∈Ob(I). Let K
f
−→C = K
e
−→X
m
−−→C
be an (Epi, Mono)-factorization in Set. Since e is a retraction, so is Te. Since T is
ﬁnitary, (TXi
Tki
−−−→TK)Ob(I) is an epi-sink in Set. Thus (TXi
Te◦Tki
−−−−−→TX)Ob(I)
is an epi-sink in Set. Since m is a monomorphism in Set, there exists (by Exercise
15K) a diagonal map x that makes the diagram
TXi
Tci
/
T(e◦ki) #F
F
F
F
F
F
F
F
xi

TC
c

TX
x

Tm
<y
y
y
y
y
y
y
y
X
m
"E
E
E
E
E
E
E
E
E
Xi
e◦ki
;x
x
x
x
x
x
x
x
x
ci
/ C
commute. By Lemma 20.11, (X, x) is a T-algebra, and thus
((Xi, xi)
ci
−−→(C, c))Ob(I) = ((Xi, xi)
e◦ki
−−−→(X, x)
m
−−→(C, c))Ob(I)
is a (−, Mono)-factorization of a colimit in A. Since each colimit is an extremal
epi-sink, m must be an isomorphism, and hence
(Xi
ci
−−→C)Ob(I) = (Xi
ki
−−→K
e
−→X
m
−−→C)Ob(I)
is an epi-sink in Set.
18th January 2005

Sec. 24]
Algebraic structure theorems
411
(2). Let UT be ﬁnitary. Then T = UT ◦F T is ﬁnitary, since F T (being a co-adjoint)
preserves all colimits.

24.7 CHARACTERIZATION THEOREM FOR FINITARY VARIETIES
For any construct (A, U) the following conditions are equivalent:
(1) (A, U) is a ﬁnitary variety,
(2) (A, U) is ﬁnitary and monadic.
Proof: (1) ⇒(2) follows from Proposition 20.20 and Example 24.5(2).
(2) ⇒(1). By Proposition 24.6 we can assume that (A, U) = (SetT, UT) for some
ﬁnitary monad T = (T, η, µ) in Set. For notational convenience we assume that n =
{0, 1, . . . , n −1} for each n ∈N. Deﬁne
I = { (i, n)
 n ∈N and i ∈Tn }
and
Ω= (n(i,n))(i,n)∈I ,
where n(i,n) = n.
For each T-algebra (X, x) and each (i, n) ∈I deﬁne a map ωx
(i,n) : Xn →X by
ωx
(i,n)(g) = (x ◦Tg)(i) (where g ∈Xn is considered as a map from n = {0, 1, . . . , n −1}
to X). Then E(X, x) = (X, (ωx
(i,n))(i,n)∈I) is an Ω-algebra. To show that this construc-
tion determines a full concrete embedding (A, U)
E
−−→Alg(Ω), it needs to be veriﬁed
that for any function (X, x)
f
−→(Y, y) between A-objects the following conditions are
equivalent:
(a) (X, x)
f
−→(Y, y) is an A-morphism (i.e., a T-homomorphism),
(b) E(X, x)
f
−→E(Y, y) is an Ω-homomorphism.
First, assume that (a) holds. Then f ◦x = y ◦Tf. Hence for any (i, n) ∈I and any
g ∈Xn the following equations hold:
(f ◦ωx
(i,n))(g) = f(ωx
(i,n)(g)) = f((x ◦Tg)(i)) = (f ◦x ◦Tg)(i) = (y ◦Tf ◦Tg)(i)
= (y ◦T(f ◦g))(i) = ωy
(i,n)(f ◦g) = ωy
(i,n)(fn(g)) = (ωy
(i,n) ◦fn)(g).
Thus f ◦ωx
(i,n) = ωy
(i,n) ◦fn, i.e., (b) holds.
Next, assume that (b) holds. Then for each n ∈N, g ∈Xn, and i ∈Tn, we have the
following equations:
(f ◦x ◦Tg)(i) = f((x ◦Tg)(i)) = f(ωx
(i,n)(g)) = ωy
(i,n)(fn(g))
= ωy
(i,n)(f ◦g) = (y ◦T(f ◦g))(i) = (y ◦Tf ◦Tg)(i).
Therefore (f ◦x)◦Tg = (y ◦Tf)◦Tg. Since the set X is a colimit of the directed system
of its ﬁnite subsets and since T is ﬁnitary, it follows that the sink (Tn
Tg
−−→TX)n∈N,g∈Xn
is an epi-sink in Set. Thus f ◦x = y ◦Tf, i.e., (a) holds.
18th January 2005

412
Topological and Algebraic Categories
[Chap. VI
Thus (A, U)
E
−−→Alg(Ω) is a full concrete embedding. Hence, by Corollary 16.19, it
suﬃces to show that E[A] is closed under the formation of mono-sources and of ho-
momorphic images in Alg(Ω). Let ((X, (ω(i,n))(i,n)∈I)
mj
−−→E(Xj, xj))j∈J be a mono-
source in Alg(Ω).
For each n ∈N and g ∈Xn deﬁne a map f(n,g) : Tn →X by
f(n,g)(i) = ω(i,n)(g). Then for each j ∈J the following equations hold:
(mj ◦f(n,g))(i) = mj(ω(i,n)(g)) = ωxj
(i,n)(mn
j (g)) = ωxj
(i,n)(mj ◦g) = (xj ◦Tmj ◦Tg)(i).
Thus mj ◦f(n,g) = xj ◦Tmj ◦Tg.
Since (X
mj
−−→Xj)j∈J is a mono-source and
(Tn
Tg
−−→TX)n∈N,g∈Xn is an epi-sink (as seen earlier), this implies (see Exercise 15K)
that there exists a diagonal map x that makes the diagram
Tn
Tg /
f(n,g)

TX
x
}zzzzzzzz
xj◦Tmj

X
mj
/ Xj
commute (for every n ∈N and every g ∈Xn). By Lemma 20.11, (X, x) is a T-algebra.
Thus both (E(X, x)
mj
−−→E(Xj, xj))j∈J and ((X, (ω(i,n))(i,n)∈I)
mj
−−→E(Xj, xj))j∈J are
mono-sources in Alg(Ω). Thus amnesticity and the initiality of mono-sources in Alg(Ω)
imply that E(X, x) = (X, (ω(i,n))(i,n)∈I).
Hence E[A] is closed under the formation
of mono-sources in Alg(Ω). Finally let E(X, x)
c−→(Y, (ω(i,n))(i,n)∈I) be a surjective
Ω-homomorphism. Then c is a regular epimorphism and thus a coequalizer of its con-
gruence relation P
p/
q/ E(X, x) in Alg(Ω). Since pullbacks are mono-sources, the above
implies that P belongs to E[A], i.e., there exists a T-algebra (Z, z) with E(Z, z) = P.
Since U(Z, z)
p /
q / U(X, x)
c−→Y is a congruence fork and hence a split fork in Set,
and since, by Theorem 20.17, U = UT creates coequalizers of split forks, U(X, x)
c−→Y
can be lifted via U to a coequalizer (X, x)
c−→(Y, y) of (Z, z)
p /
q / (X, x) in A. Thus
E(X, x)
c−→E(Y, y) and E(X, x)
c−→(Y, (ω(i,n))(i,n)∈I) are surjective morphisms in
Alg(Ω).
Hence amnesticity and ﬁnality of surjective (= regular epi) morphisms in
Alg(Ω) imply that E(Y, y) = (Y, (ω(i,n))(i,n)∈I.

24.8 REMARK
In view of the above theorem, the Characterization Theorem for Monadic Constructs
(20.35), as well as Theorem 23.41, provides axiomatic descriptions of ﬁnitary varieties.
24.9 CHARACTERIZATION THEOREM FOR
FINITARY QUASIVARIETIES
For constructs (A, U) the following conditions are equivalent:
(1) (A, U) is a ﬁnitary quasivariety,
(2) (A, U) is ﬁnitary and algebraic,
18th January 2005

Sec. 24]
Algebraic structure theorems
413
(3) (A, U) is a regular epireﬂective subconstruct of some ﬁnitary variety,
(4) (A, U) is a regular epireﬂective subconstruct of some ﬁnitary monadic construct.
Proof: (1) ⇔(3) is immediate by Corollary 16.19.
(3) ⇔(4) follows from Theorem 24.7.
(2) ⇒(4). Let (A, U) be algebraic. If T is the associated monad, then by Proposition
24.1 the associated comparison functor (A, U)
K
−−→(SetT, UT) is the embedding of a
regular epireﬂective subcategory. If U is ﬁnitary, then so is T and hence, by Proposition
24.6, (SetT, UT) is ﬁnitary as well.
(4) ⇒(2). By Theorem 23.41 a regular epireﬂective subconstruct (A, U) of a monadic
construct (B, V ) is algebraic.
If (B, V ) is ﬁnitary, then so is (A, U) in view of the
construction of colimits in reﬂective subcategories (see Proposition 13.30) and the fact
that U preserves regular epimorphisms.

24.10 REMARK
Because of the above theorem, Theorems 23.30, 23.31, and 23.38 provide axiomatic
descriptions of ﬁnitary quasivarieties.
VARIETIES AND QUASIVARIETIES
24.11 REMARK
In the characterization theorems 24.7 and 24.9 the concept ﬁnitary plays an important
role. This, however, does not mean that the concepts algebraic and ﬁnitary are closely
related — in fact, they are not related at all. The correspondence is due to the fact that
in the deﬁnition of Alg(Ω) the operations were assumed to be ﬁnitary. If this restriction
is dropped (which can be done naturally in two steps), Theorems 24.7 and 24.9 can be
generalized to inﬁnitary algebras. Whereas the ﬁrst step is straightforward, the second
one involves tricky problems of size:
First Generalization: For any family Ω= (ni)i∈I of cardinal numbers ni, indexed by a set
I, one may deﬁne Alg(Ω) as in Example 3.3(2)(e). Bounded (quasi)varieties can be
deﬁned as constructs that are concretely isomorphic to equational (resp. to implicational)
subconstructs of some Alg(Ω). Constructs (A, U) can be called bounded provided that
there exists some inﬁnite cardinal number k such that U maps k-directed colimits72
into epi-sinks.
Then the following two theorems can be proved in a way completely
analogous to the proofs of Theorems 24.7 and 24.9:
Theorem A
Bounded varieties are precisely the bounded monadic constructs.
72A partially ordered set is called k-directed provided that each subset of cardinality less than k has
an upper bound. Colimits of those diagrams whose schemes are k-directed partially ordered sets are
called k-directed colimits.
18th January 2005

414
Topological and Algebraic Categories
[Chap. VI
Theorem B
Bounded quasivarieties are precisely the bounded algebraic constructs.
Second Generalization:
For any family Ω= (ni)i∈I of cardinal numbers, indexed by
some class I, one may deﬁne Alg(Ω) as in Example 3.3(2)(e). However several problems
arise:
(a) Alg(Ω) will generally be a quasiconstruct only — often an illegitimate one.
(b) In the illegitimate case, Alg(Ω) fails to have free objects, so that a careful redeﬁnition
of “equation” is needed. However, this is possible under suitable assumptions on the
set theory involved.
(c) Legitimate equational or implicational subquasiconstructs of some Alg(Ω) may fail
to have free objects, as the constructs CBoo, CLat, and Λ-JCPos demonstrate [cf.
Examples 8.23(7) and (8)].
However, the following result holds:
Theorem C
A construct is monadic (resp. algebraic) if and only if it is concretely isomorphic to
a concretely co-wellpowered equational (resp. implicational) subquasiconstruct of some
Alg(Ω).
This justiﬁes the following terminology:
24.12 DEFINITION
Monadic constructs are called varieties. Algebraic constructs are called quasivarieties.
24.13 EXAMPLES
(1) TConv is a bounded variety.
For every regular inﬁnite cardinal number k, the
construct that consists of those partially ordered sets for which each subset of car-
dinality less than k has a join (where morphisms are those functions between them
that preserve such joins) is a bounded variety.
(2) Fram, JCPos, and HComp are (unbounded) varieties.
(3) BooSp is an (unbounded) quasivariety.
(4) CBoo, CLat, and Λ-JCPos fail to be quasivarieties.
24.14 REMARK
Constructive descriptions of essentially algebraic constructs by means of monads or
by means of partial operations and equations are possible, but are more complicated.
Roughly speaking, a co-wellpowered construct (A, U) is essentially algebraic if and only
if U can be expressed, as described in Exercise 20J, as a (possibly inﬁnite) composite of
monadic functors. Precise formulations of such structure theorems are beyond the scope
of this book. The description of the essentially algebraic construct Catof by means
of partial operations and equations, given in Exercise 24D, may however provide some
insight.
18th January 2005

Sec. 24]
Algebraic structure theorems
415
Suggestions for Further Reading
Birkhoﬀ, G. On the structure of abstract algebras.
Proc. Cambridge Phil. Soc.
31
(1935): 433–454.
Lawvere, F. W. Functorial semantics of algebraic theories. Ph. D. dissertation, Colum-
bia University, 1963.
Isbell, J. R. Subobjects, adequacy, completeness and categories of algebras. Rozprawy
Mat. 36 (1964): 1–33.
Linton, F. E. J. Some aspects of equational categories. Proceedings of the Conference
on Categorical Algebra (La Jolla, 1965), Springer, Berlin–Heidelberg–New York,
1966, 84–95.
Felscher, W. Kennzeichnung von primitiven und quasiprimitiven Kategorien von Alge-
bren. Archiv Math. 19 (1968): 390–397.
Felscher, W. Birkhoﬀsche und kategorische Algebra. Math. Ann. 180 (1969): 1–25.
Porst, H. E. On underlying functors in general and topological algebra. Manuscr. Math.
20 (1977): 209–225.
Ad´amek, J., H. Herrlich, and J. Rosick´y. Essentially equational categories.
Cahiers
Topol. Geom. Diﬀ. 29 (1988): 175–192.
Herrlich, H. Remarks on categories of algebras deﬁned by a proper class of operations.
Quaestiones Math. 13 (1990): 385–393.
EXERCISES
24A. Directed Colimits in Finitary Quasivarieties
(a) Show that the forgetful functor of a ﬁnitary variety preserves directed colimits.
(b) Let A be the epireﬂective hull of all ﬁnite abelian groups in Ab and let A
U
−−→Set
be the associated forgetful functor. Show that (A, U) is a ﬁnitary quasivariety, but
that U does not preserve directed colimits. [Hint: Consider the directed diagram of
all ﬁnite subgroups of Q/Z.]
* 24B. Finitary Quality of Extremally Epireﬂective Concrete Subcategories
(a) Show that an extremally epireﬂective concrete subcategory of a ﬁnitary algebraic
category over X is ﬁnitary algebraic.
(b) Construct a non-ﬁnitary extremally epireﬂective concrete subconstruct of some ﬁni-
tary construct.
24C. Cat and Ban
(a) Show that the construct Cat is ﬁnitary.
(b) Show that the construct (Ban, O) is not ﬁnitary.
18th January 2005

416
Topological and Algebraic Categories
[Chap. VI
24D. Categories and Banach Spaces as Equational Partial Algebras
(a) Let I be the ordered set {1, 2, 3} and let Ω= (ni)i∈I be deﬁned by n1 = n2 = 1 and
n3 = 2. Let (B, V ) be the full subconstruct of PAlg(Ω) (21.39) consisting of those
partial Ω-algebras (X, (ωi)i∈I) that satisfy the conditions
(1) domain ω1 = domain ω2 = X = { x ∈X
 x = x },
(2) domain ω3 = { (x, y) ∈X2  ω1(x) = ω2(y) },
(3) ω1 ◦ω1 = ω2 ◦ω1 = ω1,
(4) ω2 ◦ω2 = ω1 ◦ω2 = ω2,
(5) ω1(ω3(x, y)) = ω1(y),
(6) ω2(ω3(x, y)) = ω2(x),
(7) ω3(x, ω3(y, z)) = ω3(ω3(x, y), z),
(8) ω3(x, ω1(x)) = x,
(9) ω3(ω2(x), x) = x.
Show that the concrete functor (B, V )
H
−−→(Catof, U), deﬁned by H(X, (ωi)i∈I) =
(X, ω3), is a concrete isomorphism.
(b) Provide a description of (Ban, O) analogous to the one given in (a) for Catof.
18th January 2005

25 Topologically algebraic categories
In this section we investigate a common generalization of topological and algebraic func-
tors, namely, functors that
(a) forget some topological structure, e.g., Top →Set, or
(b) forget some algebraic structure, e.g., Grp →Set, or
(c) simultaneously forget some topological and some algebraic structure, e.g.,
TopGrp →Set.
Such functors share several pleasant properties. In particular they are adjoint functors
that detect limits and colimits. Also, they often can be decomposed into topological and
algebraic functors, as the following diagram suggests:
TopGrp
/
%K
K
K
K
K
K
K
K
K
K

Grp

Top
/ Set
Throughout this section we ﬁnd it slightly more convenient to treat the more ﬂexible
form of functors by requiring neither transportability nor amnesticity.
TOPOLOGICALLY ALGEBRAIC FUNCTORS AND CATEGORIES
25.1 DEFINITION
(1) A functor is called topologically algebraic provided that it is (Generating, Initial
Source)-factorizable.
(2) A concrete category (A, U) is called topologically algebraic provided that U is
topologically algebraic.
25.2 EXAMPLES
(1) Topological (even M-topological) functors are topologically algebraic.
(2) Essentially algebraic functors are topologically algebraic.
(3) Full reﬂective embeddings are topologically algebraic. However, nonfull reﬂective
embeddings need not be topologically algebraic. Consider, e.g., the natural injection
of the preordered set
•
•
•
_@@@@@@@
?~
~
~
~
~
~
~
into the preordered set
• o
/ •
•

_@@@@@@@

?~
~
~
~
~
~
~
both considered as categories. Cf. Exercise 13K.
417

418
Topological and Algebraic Categories
[Chap. VI
(4) Equivalences are topologically algebraic.
(5) The constructs TopGrp and HausVec (of Hausdorﬀtopological vector spaces) are
topologically algebraic.
(6) A partially ordered set, considered as a concrete category over 1, is topologically
algebraic if and only if it is a complete lattice. Hence adjoint functors may fail badly
to be topologically algebraic.
(7) Monadic constructs are topologically algebraic.
However, the monadic functor
Alg(T) −→Pos, exhibited in Example 20.47, fails to be topologically algebraic
since it does not detect colimits (see Theorems 25.11 and 25.14).
25.3 PROPOSITION
Every topologically algebraic functor is faithful and adjoint.
Proof: Immediate from Corollary 17.16 and Proposition 18.3.

25.4 DEFINITION
A structured arrow (e, A) in a concrete category (A, U) is called strongly generating
provided that U has the ({(e, A)}, Initial Source)-diagonalization property.
25.5 PROPOSITION
Strongly generating structured arrows are generating.
Proof: Let X
e
−→UA be strongly generating and let A
f1 /
f2
/ B be A-morphisms with
Uf1 ◦e = Uf2 ◦e = f. The source B
m1 /
m2 / B , deﬁned by m1 = m2 = idB, is initial by
Proposition 10.59. Hence there exists a diagonal d
X
e
/
f

UA
Ud
|xxxxxxxx
Ufi

UB
Umi
/ UB
which implies that f1 = m1 ◦d = m2 ◦d = f2.

25.6 CHARACTERIZATION THEOREM FOR
TOPOLOGICALLY ALGEBRAIC CATEGORIES
For concrete categories (A, U) the following conditions are equivalent:
(1) (A, U) is topologically algebraic,
(2) U is a (Strongly Generating, Initial Source)-functor,
(3) U is an (E, M)-functor for some E and M, such that every identity-carried struc-
tured morphism belongs to E,
18th January 2005

Sec. 25]
Topologically algebraic categories
419
(4) U is an (E, M)-functor for some E and M, such that every source in M is initial,
(5) U is an adjoint functor and A is (Epi, Initial Source)-factorizable.
Proof: (1) ⇒(2). It need only be shown that U is (Strongly Generating, Initial Source)-
factorizable. Let S = (X
fi
−−→UAi)I be a structured source and let S = (X
fj
−−→UAj)J
be the smallest structured source with the following properties:
(a) S contains S, i.e., I ⊆J and (fi, Ai)I is the corresponding restriction of (fj, Aj)J,
(b) if (f, A) belongs to S and A
g
−→B is an A-morphism, then (g ◦f, B) belongs to S,
(c) if (A
mk
−−−→Ak)K is an initial source and X
f
−→UA is a structured arrow such that
each (mk ◦f, Ak) belongs to S, then (f, A) belongs to S.
Let X
fj
−−→UAj = X
e
−→UA
Ugj
−−−→UAj be a (Generating, Initial Source)-factorization
of S. Then, by condition (c), the structured arrow X
e
−→UA belongs to S. This implies
that X
e
−→UA is strongly generating. Also, the initiality of (A
gj
−−→Aj)J immediately
implies the initiality of the restriction (A
gi
−−→Ai)I. Hence
X
fi
−−→UAi = X
e
−→UA
Ugi
−−−→UAi
(i ∈I)
is the desired factorization of S.
(2) ⇒(3) is immediate since every identity-carried structured arrow X
idX
−−−→UA is
strongly generating.
(3) ⇒(4). Let U be an (E, M)-functor such that every identity-carried structured arrow
belongs to E. It suﬃces to show that every source (A
mi
−−→Ai)I in M is initial. Let
UB
f
−→UA be an X-morphism such that all B
mi◦f
−−−−→Ai are A-morphism.
Since
(idUB, B) belongs to E, there exists a diagonal d:
UB
idUB /
f

UB
d
|xxxxxxxxx
mi◦f

UA
mi / UAi
Thus B
f
−→A = B
d
−→A is an A-morphism.
(4) ⇒(5). Let U be an (E, M)-functor such that every source in M is initial. It follows
from Proposition 18.3 that U is adjoint. Let S = (A
fi
−−→Ai)I be a source in A, and let
UA
Ufi
−−−→UAi = UA
e
−→UB
Umi
−−−→UAi be an (E, M)-factorization of U[S], considered
as a structured source. Since (B
mi
−−→Ai)I is initial, UA
e
−→UB is an A-morphism.
Hence A
fi
−−→Ai = A
e
−→B
mi
−−→Ai is an (Epi, Initial Source)-factorization of S.
(5) ⇒(1).
Let S = (X
fi
−−→UAi)I be a structured source, and let X
u
−→UA be
a universal arrow.
Then for each i ∈I there exists a unique morphism A
gi
−−→Ai
18th January 2005

420
Topological and Algebraic Categories
[Chap. VI
with fi = Ugi ◦u.
Let A
gi
−−→Ai = A
e
−→B
mi
−−→Ai be an (Epi, Initial Source)-
factorization. Then X
fi
−−→UAi = X
(Ue)◦u
−−−−−→UB
Umi
−−−→UAi is a (Generating, Initial
Source)-factorization of S.

SOLID FUNCTORS AND SOLID CATEGORIES
Topologically algebraic functors have several pleasant properties, such as detecting lim-
its and colimits. However, they fail to be closed under composition (see Exercise 25E
and Theorem 26.1). Those functors that can be expressed as composites of topologically
algebraic functors share such properties as detection of limits and colimits and, in addi-
tion, are closed under composition. Hence they form a more convenient family than do
the topologically algebraic functors. They are called solid and can be deﬁned by means
of semiﬁnal solutions:
25.7 DEFINITION
Let A
G
−−→B be a functor and let S = (GAi
fi
−−→B)I be a G-structured sink. Then
a pair (B
e
−→GA , (Ai
gi
−−→A)I) is called a semiﬁnal solution for S provided that
Ggi = e ◦fi for each i ∈I, and whenever (B
e
−→GA , (Ai
gi
−−→A)I) is a pair with
Ggi = e ◦fi for each i ∈I, then there exists a unique A-morphism A
g
−→A with
e = Gg ◦e and gi = g ◦gi for each i ∈I.
GA
Gg

GAi
Ggi
6m
m
m
m
m
m
m
m
m
m
m
m
m
m
fi /
Ggi
(Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
B
e
=|
|
|
|
|
|
|
|
e
 B
B
B
B
B
B
B
B
GA
25.8 REMARK
For faithful functors A
U
−−→X, resp. for concrete categories (A, U) over X, the concept of
semiﬁnal solutions can be expressed more succinctly as follows: a semiﬁnal arrow for a
U-structured sink S = (UAi
fi
−−→X)I is a structured arrow X
e
−→UA with the property
that each UAi
e◦fi
−−−→UA is an A-morphism, and for each structured arrow X
e
−→UA
such that each UAi
e◦fi
−−−→UA is an A-morphism, there exists a unique A-morphism
A
g
−→A with e = Ug ◦e. Then S has a semiﬁnal solution if and only if it has a semiﬁnal
arrow. [The semiﬁnal solution is formed by the pair (X
e
−→UA, (Ai
e◦fi
−−−→A)I).] Notice
that semiﬁnal arrows are generating. See Exercise 25C.
25.9 EXAMPLES
(1) Let S = (UAi
fi
−−→X)I be a structured sink in the construct
18th January 2005

Sec. 25]
Topologically algebraic categories
421
(a) Top. If (Ai
fi
−−→A)I is the ﬁnal lift of S, then X
id
−−→UA is a semiﬁnal arrow for
S. Similarly, semiﬁnal arrows can be constructed in all topological categories.
(b) Pos.
Consider Pos as an epireﬂective subcategory of Prost.
Let the sink
(Ai
fi
−−→A)I be a ﬁnal lift of S in Prost, and let A
e
−→B be a Pos-reﬂection
for A. Then X
e
−→UB is a semiﬁnal arrow for S. Similarly, semiﬁnal arrows
can be constructed in all M-topological categories.
(c) TopGrp. Consider the structured source T = (X
kj
−−→UAj)J consisting of all
(kj, Aj) such that UAi
kj◦fi
−−−−→UAj is an A-morphism for each i ∈I.
Let
X
kj
−−→UAj = X
e
−→UA
Umj
−−−−→UAj be a (Generating, Initial Source)-
factorization of T .
Then X
e
−→UA is a semiﬁnal arrow for S.
Similarly,
semiﬁnal arrows can be constructed in all topologically algebraic categories.
(2) If (A, U) is a concrete category over X, then
(a) X
e
−→UB is a universal arrow over X if and only if it is a semiﬁnal arrow for
the empty structured sink with codomain X,
(b) (idUA, A) is a semiﬁnal arrow for the structured 1-sink (UA
id
−−→UA).
25.10 DEFINITION
(1) A functor G is called solid provided that each G-structured sink has a semiﬁnal
solution.
(2) A concrete category (A, U) is called solid provided that U is solid.
25.11 PROPOSITION
Topologically algebraic functors are solid.
Proof: Let A
G
−−→B be a topologically algebraic (and hence faithful) functor and let
S = (GAi
fi
−−→B)I be a G-structured sink.
Consider the G-structured source T =
(B
kj
−−→GAj)J consisting of all (kj, Aj) such that GAi
kj◦fi
−−−−→GAj is an A-morphism
for each i ∈I. Let B
kj
−−→GAj = B
e
−→GA
Gmj
−−−−→GAj be a (Generating, Initial
Source)-factorization of T . Then B
e
−→GA is a semiﬁnal arrow for S.

25.12 PROPOSITION
Solid functors are faithful and adjoint.
Proof: Let A
G
−−→B be a solid functor.
(1). To show faithfulness, let A
r /
s / B be a pair of A-morphisms with Gr = Gs = f.
Consider the G-structured sink S = (GAi
fi
−−→X)I with I = Mor(A), X = GA, and
18th January 2005

422
Topological and Algebraic Categories
[Chap. VI
(Ai, fi) = (A, idX) for each i ∈I. Let (X
e
−→GC , (Ai
gi
−−→C)I) be a semiﬁnal solution
for S. Consider (X
e
−→GC , (Ai
gi
−−→C)I) with (e, C) = (f, B) and
gi =
(
r,
if
i ◦gi = s
s,
otherwise.
Then Ggi = f ◦fi for each i ∈I. Hence there exists a unique A-morphism C
g
−→C
with e = Gg ◦e and gi = g ◦gi for each i ∈I. By choosing i = g we obtain gg = g ◦gg,
which is possible only in the case that r = s.
(2). Adjointness follows immediately from Example 25.9(2)(a).

25.13 PROPOSITION
Solid functors are closed under composition.
Proof: If A
G
−−→B and B
F
−−→C are solid, then G, F, and hence F ◦G are faithful. Let
S = (FGAi
fi
−−→C)I be an (F ◦G)-structured sink. Let C
e
−→FB be a semiﬁnal arrow
for S, considered as an F-structured sink. Then (FGAi
e◦fi
−−−→FB)I can be considered
as a sink (GAi
e◦fi
−−−→B)I in B, hence as a G-structured sink. If B
e
−→GA is a semiﬁnal
arrow for this sink, then C
Fe◦e
−−−−→FGA is a semiﬁnal arrow for S.

25.14 THEOREM
Solid functors detect colimits and preserve and detect limits.
Proof: Let (A, U) be a solid category over X and let I
D
−−→A be a diagram.
(1). Let S = (UDi
ci
−−→K)I be a colimit of U ◦D. If K
e
−→UA is a semiﬁnal arrow for
the structured sink S, then (Di
e◦ci
−−−→A)I is a colimit of D.
(2). Preservation of limits follows from adjointness. Let (L
ℓi
−−→UDi)I be a limit of
U ◦D. Consider the structured sink S = (UAj
fj
−−→L)J consisting of all costructured
arrows (Aj, fj) such that UAj
ℓi◦fj
−−−−→UDi is a morphism for each i ∈I. Let L
e
−→UA be
a semiﬁnal arrow for S. Then, for each i ∈I, there exists a unique morphism A
fi
−−→Di
with ℓi = Ufi ◦e. The source (A
fi
−−→Di)I is easily seen to be a limit of D.

25.15 COROLLARY
Every solid category over a complete (resp. strongly complete, resp. cocomplete) category
is complete (resp. strongly complete, resp. cocomplete).

25.16 COROLLARY
Solid constructs are strongly complete and cocomplete.

18th January 2005

Sec. 25]
Topologically algebraic categories
423
25.17 REMARK
(1) A solid construct need be neither topologically algebraic nor strongly cocomplete.
The construct Λ-CCPos is neither strongly complete nor topologically algebraic,
since the source (B0
eα
−−→Bα) described in Exercise 15D(d), has no cointersection,
and the structured source (|B0|
eα
−−→Aα) described in Exercise 15D(b) has no (Gen-
erating, Initial Source)-factorization. However, Λ-CCPos is solid. The latter follows
from the observation that Λ-CCPos is a full reﬂective concrete subcategory of the
topologically algebraic construct that is deﬁned in the same way as Λ-CCPos except
that λ is required only to be a partial unary operation.
(2) Although there exist solid categories that are not topologically algebraic, the con-
cepts of solid and topologically algebraic categories coincide under rather natural
assumptions, as the following results and Exercise 25D demonstrate.
25.18 THEOREM
Let (A, U) be a concrete category over a strongly complete category X. If U is concretely
co-wellpowered, then the following conditions are equivalent:
(1) (A, U) is topologically algebraic,
(2) (A, U) is solid,
(3) U detects and preserves limits.
Proof: (1) ⇒(2) ⇒(3) has already been established.
(3) ⇒(1) is an immediate consequence of Theorem 17.11.

25.19 CHARACTERIZATION THEOREM FOR SOLID CATEGORIES
Let (A, U) be a concrete category. If A is an (Epi,−)-category (in particular, if A is
strongly cocomplete), then the following conditions are equivalent:
(1) (A, U) is topologically algebraic,
(2) (A, U) is solid,
(3) U is adjoint.
Proof: (1) ⇒(2) ⇒(3) has already been established.
(3) ⇒(1).
Let A be an (Epi, M)-category.
By adjointness it follows that U is a
(Generating, M)-functor. By faithfulness, every identity-carried structured morphism is
generating. Hence, by Theorem 25.6, (A, U) is topologically algebraic.

25.20 REMARKS
(1) A partially ordered set with a smallest element, considered as a concrete category
(A, U) over 1, may fail badly to be cocomplete and hence solid, even though A is
co-wellpowered and U is adjoint.
(2) Monadic categories over Pos may fail to be cocomplete and hence to be solid (cf.
Example 20.47).
18th January 2005

424
Topological and Algebraic Categories
[Chap. VI
25.21 PROPOSITION
Solid functors preserve extremal monomorphisms.
Proof: Let (A, U) be a solid category over X. If A
m
−−→B is an extremal monomorphism
in A, then UA
m
−−→UB is a monomorphism in X. To show that it is extremal, let
UA
m
−−→UB = UA
e
−→X
f
−→UB be an (Epi,−)-factorization in X. If X
e
−→UC
is a semiﬁnal arrow for the structured 1-sink (UA
e
−→X), then UA
e◦e
−−−→UC is an
A-morphism and there exists a unique A-morphism C
f
−→B with f = f ◦e. Thus
A
m
−−→B = A
e◦e
−−−→C
f
−→B is a factorization in A. Since A
e◦e
−−−→C is (easily seen to
be) an epimorphism in A, it is an isomorphism in A and hence in X. Thus e is a section
in X and, consequently, an isomorphism in X.

25.22 REMARK
The following diagram exhibits several results of this section in diagrammatic form.
M-topological
essentially
algebraic (cf. 23.42)
full reﬂective
embedding
equivalence
PPPPPPPPP
q
@
@@
R
   	








)
topologically algebraic
?
solid














9







?
HHHHHH
j
XXXXXXXXXXXXXX
z
adjoint
detects limits
preserves
extremal monos
detects colimits
faithful
Suggestions for Further Reading
Hong, S. S. Categories in which every mono-source is initial. Kyungpook Math. J. 15
(1975): 133–139.
Trnkov´a, V. Automata and categories. Springer Lect. Notes Comp. Sci.
32 (1975):
132–152.
Hoﬀmann, R.-E. Semi-identifying lifts and a generalization of the duality theorem for
topological functors. Math. Nachr. 74 (1976): 295–307.
Fay, T. H. An axiomatic approach to categories of topological algebras. Quaest. Math.
2 (1977): 113–137.
18th January 2005

Sec. 25]
Topologically algebraic categories
425
Tholen, W. Semi-topological functors I. J. Pure Appl. Algebra 15 (1979): 53–73.
B¨orger, R., and W. Tholen. Remarks on topologically algebraic functors. Cahiers Top.
Geom. Diﬀ. 20 (1979): 155–177.
Herrlich, H., R. Nakagawa, G. E. Strecker, and T. Titcomb. Equivalence of topolog-
ically algebraic and semi-topological functors. Canad. J. Math. 32 (1980): 34–39.
Porst, H.-E. T-regular functors. Categorical Topology. Proceedings of the International
Conference, Toledo, Ohio, 1983 (ed. H. L. Bentley et. al.), Heldermann, Berlin,
1984, 425–440.
EXERCISES
25A.
Prove that
(a) Every faithful (Generating, −)-functor is topologically algebraic.
(b) Set →1 is a (Generating, Source)-functor that is not faithful.
25B. M-Topological =⇒Topologically Algebraic
Show that if X is an (E, M)-category and A
U
−−→X is M-topological, then U is topo-
logically algebraic.
25C. Semiﬁnal Solutions and Semiﬁnal Arrows
Show that
(a) Semiﬁnal arrows are concretely generating.
(b) If (B
e
−→GA, (Ai
gi
−−→A)I) is a semiﬁnal solution for a G-structured sink, then
B
e
−→GA need not be G-generating.
[Hint:
Consider the nonfaithful functor
A
G
−−→B indicated by
A1
f
/
rf
3333333333333
sf
3333333333333
A2
r

s

A3
G
−−→
GA1
G(rf)=G(sf)
555555555555555
k
#G
G
G
G
G
G
G
G
G
Gf
/ GA2
Gr=Gs
															
B
e
;w
w
w
w
w
w
w
w
w
ℓ

GA3
and the semiﬁnal solution (B
e
−→GA2 , (A1
f
−→A2)) of the G-structured 1-sink
(GA1
k
−→B).]
* 25D. Solid = Topologically Algebraic
Show that in any of the following situations, A
G
−−→B is solid if and only if G is
topologically algebraic:
18th January 2005

426
Topological and Algebraic Categories
[Chap. VI
(a) A is ﬁnite,
(b) A is strongly complete and co-wellpowered,
(c) B = 1,
(d) G is full.
* 25E. Solid ̸= Topologically Algebraic
(a) Let B be the following subcategory of Set:
B1
gn
&N
N
N
N
N
N
N
N
N
N
N
N
N
r

B3
hn
t
B2
s
O
kn
8p
p
p
p
p
p
p
p
p
p
p
p
p
with B1 = {1}, B2 = {2}, B3 = N, r(1) = 2, s(2) = 1, gn(1) = kn(2) = n, and
hn(m) = n + m. Let A be the subcategory of B obtained by removing r and g0.
Show that the inclusion functor A
G
−−→B is solid but is not topologically algebraic.
(b) Denote by ∆Pos the category of ∆-complete partially ordered sets (i.e., partially
ordered sets in which each nonempty up-directed subset has a join) and ∆-continuous
functions (i.e., functions preserving up-directed joins).
(1) Verify that ∆Pos is a solid construct (cf. Theorem 25.18).
(2) If T : ∆Pos →∆Pos is the “discretization” concrete functor that sends each
partially ordered set to the discrete partially ordered set on its underlying set,
verify that Alg(T) is a solid concrete category over ∆Pos. [Hint: Alg(T) is a
reﬂective subcategory of the category of partial T-algebras, deﬁned analogously
to Alg(T) except that objects (X, x) are given by partial maps x : TX →X.
The latter category is topologically algebraic over ∆Pos.]
(3) If U is the composite of the forgetful functors Alg(T) →∆Pos →Set, conclude
that the construct (Alg(T), U) is solid. Show, however, that it is not topologi-
cally algebraic since the source ((N, x)
fi
−−→(Yi, yi))O deﬁned below has no (Epi,
Initial Source)-factorization:
O is the class of all inﬁnite ordinals;
N has the discrete ordering, with x(n) = n + 1;
Yi is the set of all ordinals smaller than i + ω with the natural linear order
on i (= {j
 j < i}) and with i + n incompatible to any other element for
all n ∈N, yi(j) = j + 1;
fi(n) = n.
18th January 2005

Sec. 25]
Topologically algebraic categories
427
(4) Verify that Alg(T) is not strongly cocomplete by showing that the source in (3)
consists of epimorphisms and has no cointersection.
* 25F. Solid vs. Monadic Functors
A solid functor whose associated monadic functor is not solid:
(a) For the non-cocomplete monadic category Alg(T) over Pos of Example 20.47 denote
by A the full subcategory of all T-algebras (X, x) such that x(∅) lies in no 3-chain
of X [more precisely, if (p1, p2, p3) ∈H(X), then x(∅) ̸= pi]. Verify that A contains
all free T-algebras, and conclude that its underlying functor is an adjoint functor
A
U
−−→Pos whose associated monadic functor is not solid [it being just the forgetful
functor of Alg(T)].
(b) Prove that A is closed under the formation of limits in Alg(T), and conclude that
A is strongly complete.
(c) Prove that U is co-wellpowered, and hence is solid (cf. Theorem 25.18).
* 25G. Solid Categories and Mac Neille Completions
Show that the following conditions are equivalent for amnestic concrete categories (A, U):
(1) U is solid,
(2) (A, U) has a Mac Neille completion (A, U)
E
−−→(B, V ) and E[A] is reﬂective in B,
(3) If (A, U)
E
−−→(B, V ) is an initially dense and ﬁnally dense full concrete embedding,
then E[A] is reﬂective in B.
* 25H. Topologically Algebraic Categories and Universal Initial Completions
Show that the following conditions are equivalent for amnestic concrete categories (A, U):
(1) (A, U) is topologically algebraic,
(2) (A, U) has a universal initial completion (A, U)
E
−−→(B, V ) and E[A] is reﬂective
in B(cf. Exercise 21I),
(3) if (A, U)
E
−−→(B, V ) is an initiality-preserving and initially dense full concrete em-
bedding, then E[A] is reﬂective in B.
25I. A Characterization for Solid Categories
Let (A, U) be a concrete category over a cocomplete category X. Prove that if A is
co-wellpowered, then the following conditions are equivalent:
(1) (A, U) is topologically algebraic,
(2) (A, U) is solid,
(3) A is cocomplete and U is adjoint.
18th January 2005

428
Topological and Algebraic Categories
[Chap. VI
25J. Solid vs. Topological
Prove that a solid category is topological if and only if it is uniquely transportable and
has indiscrete structures.
25K. Alternative Proof of Theorem 12.13
Use results of this section to obtain a short proof that every strongly cocomplete cate-
gory A with a separating set S is strongly complete (cf. Exercise 12N). [Deﬁne a faithful
functor A
U
−−→[Sop, Set] by restricting the contravariant hom-functors and the corre-
sponding natural transformations. Use cocompleteness to show that U is adjoint and
Theorem 25.19 to show that it is solid. Apply Corollary 25.15.]
25L. Topologically Algebraic Functors and Lifting Adjoints
Let G, ˆG, U, and V be functors with V ◦ˆG = G ◦U. Let U be topologically algebraic,
V faithful, and let ˆG send U-initial sources into V -initial sources. Show that adjointness
of G implies adjointness of ˆG. [Cf. Theorem 21.28.]
18th January 2005

26 Topologically algebraic structure the-
orems
26.1 THEOREM
For a functor G the following conditions are equivalent:
(1) G is solid,
(2) G can be expressed as the composite G = F ◦K of two topologically algebraic functors,
(3) G can be expressed as the composite G = T ◦H ◦E of a topological functor T, an
equivalence H, and a full reﬂective embedding E,
(4) G belongs to the smallest conglomerate of functors that contains all topologically
algebraic functors and is closed under composition,
(5) G belongs to the smallest conglomerate of functors that contains all topological func-
tors, all equivalences, all full reﬂective embeddings, and is closed under composition.
Proof: (1) ⇒(3). If A
G
−−→X is a solid functor, consider (A, G) as a concrete category
over X, and let (B, U) be the following concrete category over X: objects are pairs
(X, (e, A)), consisting of an X-object X and a semiﬁnal G-structured arrow X
e
−→GA;
morphisms (X, (e, A))
f
−→(X′, (e′, A′)) are those X-morphisms X
f
−→X′ for which there
exists a (necessarily unique) A-morphism A
g
−→A′ with e′ ◦f = Gg ◦e. The concrete
functor (A, G)
E
−−→(B, U) deﬁned by E(A) = (GA, (idGA, A)) is a full embedding.
Moreover, for each B-object (X, (e, A)), the E-structured arrow (X, (e, A))
e
−→EA is
E-universal. Hence A
E
−−→B is a full reﬂective embedding. In (B, U) every structured
source S = (X
fi
−−→U(Xi, (ei, Ai)))I has a (not necessarily unique) initial lift. This can
be seen as follows: in (A, G) consider the structured sink T = (GAk
gk
−−→X)K that
consists of all pairs (Ak, gk) such that GAk
ei◦fi◦gk
−−−−−−→GAi is an A-morphism for each
i ∈I. Let the G-structured arrow X
e
−→GA be a semiﬁnal arrow for T . It follows
that ((X, (e, A))
fi
−−→(Xi, (ei, Ai)))I is a U-initial lift of S. Hence (B, U) may fail to be
topological only by not being amnestic. By Proposition 5.33 there exists an amnestic
concrete category (C, T) over X and a surjective concrete equivalence (B, U)
H
−−→(C, T).
Obviously, T is topological. Hence G = T ◦H ◦E is the desired factorization.
(3) ⇒(5) is obvious.
(5) ⇒(4) is immediate from the fact that topological functors, equivalences, and full
reﬂective embeddings are topologically algebraic.
(4) ⇒(1) is immediate from the fact that topologically algebraic functors are solid and
solid functors are closed under composition.
(3) ⇒(2) and (2) ⇒(4) are obvious.

429

430
Topological and Algebraic Categories
[Chap. VI
26.2 COROLLARY
A concrete category is solid and amnestic if and only if it is a full reﬂective concrete
subcategory of a topological category.
Proof: In the proof of Theorem 26.1 amnesticity of G implies that A
H◦E
−−−−→C is a full
reﬂective embedding.

26.3 DECOMPOSITION THEOREM FOR SOLID FUNCTORS
For any functor G between (Epi, Mono-Source)-factorizable categories, the following
conditions are equivalent:
(1) G is solid and uniquely transportable,
(2) G can be expressed as a composite G = T ◦A of a topological functor T and an
essentially algebraic functor A,
(3) G belongs to the smallest conglomerate of functors that contains all topological and
all essentially algebraic functors and is closed under composition.
Proof: (1) ⇒(2). By Theorem 26.1 G can be expressed as a composite G = T ◦H ◦E of
a topological functor T, an equivalence H, and a full reﬂective embedding E. In the case
that G is uniquely transportable, the above constructed A = H ◦E is an isomorphism-
closed full reﬂective embedding. Hence, by Theorem 23.8, it is an essentially algebraic
functor.
(2) ⇒(3) ⇒(1) is obvious.

26.4 THEOREM
For any functor A
G
−−→X into a category X that has regular factorizations the following
conditions are equivalent:
(1) G is solid, uniquely transportable, and preserves regular epimorphisms,
(2) G can be expressed as a composite G = T ◦R of a topological functor T and a
regularly monadic functor R,
(3) G belongs to the smallest conglomerate of functors that contains all topological and
all regularly monadic functors and is closed under composition.
Proof: (1) ⇒(2). In view of Theorem 20.32 it suﬃces to show that the full reﬂec-
tive embedding A
E
−−→B constructed in the proof of Theorem 26.1 preserves regular
epimorphisms. Let B
c−→C be a regular epimorphism in A, and thus a coequalizer
of some pair A
p /
q / B of A-morphisms. Then GB
Gc
−−→GC is a regular epimorphism
in X, and so is a coequalizer of some pair X
r /
s / GB of X-morphisms. Consider the
G-structured sink S = (GAi
fi
−−→X)I that consists of those G-costructured arrows
GAi
fi
−−→X, for which GAi
r◦fi
−−−→GB and GAi
s◦fi
−−−→GB are A-morphisms, and
18th January 2005

Sec. 26]
Topologically algebraic structure theorems
431
let X
e
−→GA be a semiﬁnal arrow for S.
Then there exist A-morphisms A
r
−→B
and A
s
−→B with r = Gr ◦e and s = Gs ◦e. Thus (X, (e, A))
r
/
s
/ E(B) is a pair
of B-morphisms.
It suﬃces to show that E(B
c−→C) = E(B)
Gc
−−→E(C) is a co-
equalizer of this pair in B.
Obviously, Gc ◦r = Gc ◦s.
Let E(B)
f
−→(X, (e, B))
be a B-morphism with f ◦r = f ◦s.
Since Gc is a coequalizer of r and s in X,
there exists a unique X-morphism GC
f
−→X with f = f ◦Gc. Hence it suﬃces to
show that E(C)
f
−→(X, (e, B)) is a B-morphism.
Since E(B)
f
−→(X, (e, B)) is a
B-morphism, there exists an A-morphism B
g
−→B with e ◦f = Gg ◦idGB.
Thus
G(g ◦p) = e ◦f ◦Gp = e ◦f ◦Gc ◦Gp = e ◦f ◦Gc ◦Gq = e ◦f ◦Gq = G(g ◦q).
Hence g ◦p = g ◦q. Since c is a coequalizer of p and q in A, there exists an A-morphism
C
g
−→B with g = g◦c. Thus the equations Gg◦Gc = Gg = e◦f = e◦f ◦Gc and the fact
that Gc is an epimorphism in X imply that Gg = e ◦f, i.e., that E(C)
f
−→(X, (e, B))
is a B-morphism.
GAi
fi
/ X
r

s

e
/ GA
Gr

Gs

GB
id
/
Gc

f
                  GB
Gc

Gg
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
GA
Gp
o
Gq
o
GC
id
/
f
wppppppppppppp
GC
Gg
'N
N
N
N
N
N
N
N
N
N
N
N
X
e
/ GB
(2) ⇒(3) ⇒(1) obvious.

Next we wish to characterize those concrete categories that can be embedded as full
reﬂective concrete subcategories of ﬁbre-small topological categories. By Theorem 22.3
this will provide a characterization of full reﬂective subcategories of functor-structured
categories. By the above theorem they must be solid and, obviously, ﬁbre-small. But
ﬁbre-smallness is not enough. We now introduce a slightly stronger condition than ﬁbre-
smallness, and show that for concrete categories that have this property, solidness is
equivalent to being a reﬂective subcategory of some functor-structured category.
26.5 DEFINITION
(1) Structured arrows X
f1
−−→UA1 and X
f2
−−→UA2 in a concrete category (A, U) are
said to be equivalent if for each costructured arrow UB
g
−→X the following holds:
B
f1◦g
−−−→A1 is an A-morphism if and only if B
f2◦g
−−−→A2 is an A-morphism.
(2) A concrete category over X is said to be strongly ﬁbre-small provided that for
each X-object X there exists no proper class of pairwise non-equivalent structured
arrows with domain X.
18th January 2005

432
Topological and Algebraic Categories
[Chap. VI
26.6 EXAMPLES
(1) Each strongly ﬁbre-small amnestic concrete category is ﬁbre-small.
(2) A topological category is strongly ﬁbre-small if and only if it is ﬁbre-small. This
follows immediately from the fact that each structured arrow X
f
−→UA is equivalent
(via its initial lift) to a structured arrow of the form X
idX
−−−→UA′.
(3) Each ﬁbre-small hereditary (i.e., monomorphisms have initial lifts) construct (e.g.,
each of Pos, Top, Haus, and Met) is strongly ﬁbre-small: for each structured
arrow X
f
−→UA consider the factorization of f as a surjective function X
f′
−−→UA′
followed by an initial monomorphism A′ →A. Then two such arrows X
fi
−−→UAi,
i = 1, 2, are equivalent if and only if X
f′
i
−−→UA′
i are equivalent.
(4) Each ﬁbre-small uniquely transportable construct that has (surjective, injective)-
factorizations is strongly ﬁbre-small. Thus Vec, Grp, HComp, Ban, Boo, Σ-Seq,
etc. are strongly ﬁbre-small constructs.
(5) For concrete categories over X = 1, smallness, ﬁbre-smallness, and strong ﬁbre-
smallness are equivalent.
(6) Let A be a large discrete category and let U : A →Set be an injective functor with
card(UA) = 1 for all A-objects A. Then (A, U) is ﬁbre-small, but not strongly
ﬁbre-small.
26.7 STRUCTURE THEOREM FOR SOLID CATEGORIES
For a concrete category (A, U) the following conditions are equivalent:
(1) (A, U) is amnestic, solid, and strongly ﬁbre-small,
(2) (A, U) is a full reﬂective concrete subcategory of a ﬁbre-small topological category,
(3) (A, U) is concretely isomorphic to a full reﬂective subcategory of some functor-
structured category.
Proof: (1) ⇒(2).
Let (A, G) be a solid category and let (A, G)
E
−−→(B, U) and
(B, U)
H
−−→(C, T) be the concrete functors constructed in the proof of Theorem 26.1.
If G is amnestic, then H ◦E is a full reﬂective embedding. Thus it suﬃces to show
that strong ﬁbre-smallness of (A, G) implies ﬁbre-smallness of (C, T).
For this it is
suﬃcient to show that for any two B-objects (X, (e, A)) and (X, (e′, A′)) that are equiv-
alent when considered as G-structured arrows X
e
−→GA and X
e′
−−→GA′, the equality
H(X, (e, A)) = H(X, (e′, A′)) holds. This follows immediately from the fact that for any
such pair (X, (e, A))
idX
−−−→(X, (e′, A′)) is a B-isomorphism.
(2) ⇒(3) follows from Theorem 22.3.
(3) ⇒(1) follows immediately from Corollary 26.2, Example 26.6(2), and the fact that
every full concrete subcategory of a strongly ﬁbre-small category is strongly ﬁbre-small.
18th January 2005

Sec. 26]
Topologically algebraic structure theorems
433
26.8 COROLLARY
For a co-wellpowered concrete category (A, U) over a cocomplete base category, the fol-
lowing are equivalent:
(1) (A, U) is cocomplete, amnestic, and has free objects,
(2) (A, U) is concretely isomorphic to a full reﬂective subcategory of a functor-structured
category.
Proof: (1) ⇒(2). By Proposition 18.11, U is co-wellpowered. By Corollary 15.17, A
is an (Epi, ExtrMono-Source)-category, so that by Theorem 25.19, U is topologically
algebraic, and thus has (Generating, InitialSource)-factorizations. These two facts im-
mediately imply that (A, U) is strongly ﬁbre-small.
Thus (2) follows from Theorem
26.7.
(2) ⇒(1) is immediate from the fact that full reﬂective embeddings detect colimits
(cf. 13.32).

Suggestions for Further Reading
Hoﬀmann, R.-E. Note on semi-topological functors. Math. Z. 160 (1978): 69–74.
Rosick´y, J. Concrete categories and inﬁnitary languages.
J. Pure Appl. Algebra 22
(1981): 309–338.
Rosick´y, J. Semi-initial completions. J. Pure Appl. Algebra 40 (1986): 177–183.
Herrlich, H., Mossakowski, T., and G. E. Strecker. Algebra ∪Topology. Category The-
ory at Work (eds. H. Herrlich and H.-E. Porst), Heldermann Verlag 1991, 137–148.
EXERCISES
* 26A. Decomposition of Functors and Factorization Structures
Let A
G
−−→B be a uniquely transportable, solid functor, and let B have regular factor-
izations. Show that:
(a) A need not have (Epi, Mono-Source)-factorizations. [Cf. Exercise 16A(b).]
(b) There need not exist a decomposition G = T ◦A with T topological and A essentially
algebraic.
26B. Composites are Topologically Algebraic
Show that each composite G = A ◦T of a monotopological functor T and an essentially
algebraic functor A is topologically algebraic.
26C. Topological-Algebraic via Algebraic-Topological Decompositions
(a) Consider the conditions:
18th January 2005

[Chap. VI
(1) there exist a topological functor T and an essentially algebraic functor A with
G = A ◦T,
(2) there exist a topological functor T and an essentially algebraic functor A with
G = T ◦A.
Show that:
(i) (1) implies (2).
(ii) If (A, U) is a non-topological, monotopological construct and there exists an
A-object A such that UA has at least 2 points, then U satisﬁes (2) but not
(1).
(iii) The forgetful functor for Λ-CCPos satisﬁes (2) but not (1). Cf. Exercise 26B.
(b) Let (A, U) be a concrete category over a category X with regular factorizations. Let
U be uniquely transportable, solid, and preserve regular epimorphisms. Let E be the
class of those A-morphisms whose underlying morphisms are regular epimorphisms
in X. Show that the following conditions are equivalent:
(1) A is an (E, InitMono-Source)-category,
(2) U can be expressed as a composite U = A ◦T of a monotopological functor T
and a regularly monadic functor A,
(3) the comparison functor for U is monotopological.
26D. Strong Fibre-Smallness
(a) Verify that a construct is strongly ﬁbre-small if and only if it can be fully embedded
into a ﬁbre-small topological construct. Under what assumptions on X does the
same result hold for concrete categories over X?
(b) Show that in Corollary 26.8 it is not possible to delete the (co-)wellpoweredness
hypothesis. [Hint: Consider Ord as a concrete category over itself.]
18th January 2005

Chapter VII
CARTESIAN
CLOSEDNESS
AND
PARTIAL MORPHISMS
18th January 2005
435


27 Cartesian closed categories
In some constructs, we can form objects BA by structuring the set of all morphisms from
A to B in such a way that the evaluation map
ev : A × BA →B
given by:
(x, f) 7→f(x)
becomes a co-universal arrow. For example, in Set we have the set BA of all functions
from A to B, in Pos we have the poset BA of all order-preserving functions from A to
B (ordered pointwise), etc. We will study this phenomenon ﬁrst for abstract categories,
then for concrete ones, and ﬁnally for constructs.
If a category A has ﬁnite products, then for each A-object A we can deﬁne a functor
(A × −) : A →A by (B
f
−→B′) 7→(A × B
idA×f
−−−−→A × B′). (Since products are
not unique, such a rule usually gives a large collection of pairwise naturally isomorphic
endofunctors of A. By an “abuse of language” we will, however, speak about the functor
(A × −), meaning that a certain product A × B has been chosen for each B.)
27.1 DEFINITION
A category A is called cartesian closed provided that it has ﬁnite products and for
each A-object A the functor (A × −) : A →A is co-adjoint.
27.2 NOTATION
The essential uniqueness of products and of co-universal arrows allows us to introduce
the following standard notation for cartesian closed categories: “The” adjoint functor
for (A × −) is denoted on objects by B 7→BA, and “the” associated co-universal arrows
are denoted by
ev: A × BA →B.
Thus, a category with ﬁnite products is cartesian closed if and only if for each pair (A, B)
of objects there exists an object BA and a morphism ev: A×BA →B with the following
universal property: for each morphism f : A × C →B there exists a unique morphism
ˆf : C →BA such that
A × C
idA× ˆf

f
#G
G
G
G
G
G
G
G
G
A × BA ev
/ B
commutes. We call the objects BA power objects, the morphisms ev : A × BA →A
evaluation morphisms, and the ˆf, associated with f, the exponential morphism
for f.
437

438
Cartesian Closedness and Partial Morphisms
[Chap. VII
A power object in a cartesian closed category
27.3 EXAMPLES
(1) The following categories are cartesian closed:
(a) Set: BA is the set of all functions from A to B; ev is the usual evaluation map;
( ˆf(c))(a) = f(a, c).
(b) Rel: (B, σ)(A,ρ) is (BA, τ) with fτg ⇔[aρa′ ⇒f(a)σg(a′)]; ev is the usual
evaluation map; ( ˆf(c))(a) = f(a, c).
(c) Pos: (B, ≤)(A,⪯) is the set of all order-preserving functions from A to B, ordered
as follows: f ≤g ⇔f(a) ≤g(a) for all a ∈A; ev is the usual evaluation map;
( ˆf(c))(a) = f(a, c).
(d) Alg(1) (algebras with one unary operation): BA is the set of all homomorphisms
from A × N to B [where N denotes the algebra of all natural numbers with
the successor operation], together with the unary operation that sends each
h : A×N →B to h′ : A×N →B, where h′(a, n) = h(a, n+1); ev(a, f) = f(a, 0);
and for each homomorphism f : A × C →B, ˆf(c) sends (a, n) to f(a, γn(c)),
where γ is the unary operation for C.
(e) Cat: BA is the functor category [A, B]; ev: A × BA →B is deﬁned on objects
by ev(A, F) = FA and on morphisms by ev(h, τ) = τA′ ◦Fh [where A
h
−→A′];
for F : A × C →B we have ˆFC : A →B deﬁned by
ˆFC(A
h
−→A′) = F(A, C)
F(h,id)
−−−−−→F(A′, C).
18th January 2005

Sec. 27]
Cartesian closed categories
439
(2) Top is not cartesian closed (since (Q×−) : Top →Top does not preserve quotients,
and hence does not preserve coequalizers). However, Top has cartesian closed su-
percategories [e.g., Conv and PsTop, where the power objects carry the structure
of “continuous convergence” (see Exercise 27G)] as well as cartesian closed subcate-
gories [e.g., the category kTop of (compact Hausdorﬀ)-generated topological spaces,
where the power objects are formed by the kTop-coreﬂections of the compact-open
topologies].
(3) A poset A, considered as a category, is cartesian closed if and only if A has ﬁnite
meets and for each pair (a, b) of elements, the set { x ∈A
 a ∧x ≤b } has a largest
member. In particular, a complete lattice is cartesian closed if and only if it satisﬁes
the distributive law: a ∧W bi = W(a ∧bi); i.e., if and only if it is a frame.
27.4 CHARACTERIZATION THEOREM FOR
CARTESIAN CLOSED CATEGORIES
Let A be a cocomplete and co-wellpowered category that has a separator. Then A is
cartesian closed if and only if it has ﬁnite products, and for each A-object A the functor
(A × −) preserves colimits.
Proof: Immediate from the Special Adjoint Functor Theorem (18.17).

27.5 DEFINITION
Let A be a cartesian closed category. For each object C
(1) “the” covariant exponential functor for C, denoted by (−)C : A →A, is “the”
adjoint functor for (C × −) and is deﬁned (for an A-morphism A
f
−→B) by:
(−)C(A
f
−→B) = AC
fC
−−→BC,
where fC is the unique A-morphism that makes the diagram
C × AC ev
/
id×fC

A
f

C × BC ev
/ B
commute;
(2) “the” contravariant exponential functor for C, denoted by C(−) : Aop →A,
is deﬁned (for an A-morphism A
f
−→B) by
C(−)(A
f
−→B) = CB
Cf
−−→CA,
where Cf is the unique A-morphism that makes the diagram
A × CB
f×id /
id×Cf

B × CB
ev

A × CA
ev
/ C
18th January 2005

440
Cartesian Closedness and Partial Morphisms
[Chap. VII
commute.
27.6 REMARK
Observe that exponential functors are not determined uniquely, but that any two covari-
ant (resp. contravariant) exponential functors for an A-object C are naturally isomor-
phic.
27.7 PROPOSITION
In a cartesian closed category A, every contravariant exponential functor C(−) is an
adjoint functor and has its own dual (C(−))op as a co-adjoint.
Proof: Let A be an A-object and let s : CA × A →A × CA be the isomorphism that
is determined by interchanging the projections. Then the unique A-morphism
uA : A →C(CA) that makes the diagram
CA × A
s
/
id×uA

A × CA
ev

CA × C(CA)
ev
/ C
commute is a C(−)-universal arrow for A. To see this let f : A →CB be a C(−)-structured
arrow, let s: A × B →B × A be the isomorphism determined by interchanging the
projections, and let f : B →CA be the unique A-morphism that makes the diagram
A × B
(id×f)◦s/
id×f

B × CB
ev

A × CA
ev
/ C
commute. Then id×f = s◦(f ×id)◦s implies that in the following diagram 1 commutes:
B × A
id×uA
}||||||||||||||||||||||||||||||||||||||||||||||
id×f
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
f×id

CA × A
id×uA
~}}}}}}}}}}}}}}}}}}}}
2
s
$H
H
H
H
H
H
H
H
H
4
1
A × CA
ev
 @
@
@
@
@
@
@
@
CA × C(CA)
ev
/
3
C
B × C(CA)
id×Cf
/
f×id
6m
m
m
m
m
m
m
m
m
m
m
m
m
B × CB
ev
eJJJJJJJJJJJ
18th January 2005

Sec. 27]
Cartesian closed categories
441
2 commutes by the deﬁnition of u, 3 commutes by the deﬁnition of C(−), and 4
commutes trivially. Thus f = C(f◦uA). That f is determined by this equality follows
immediately by retracing the steps from Cf via f to f in the above diagram. Thus
uA : A →C(CA) is a C(−)-universal arrow. In order to see that (C(−))op : A →Aop is a
co-adjoint for C(−) it need only be shown that for any A-morphism f : A →B the equal-
ity uB ◦f = C(C(−))op(f) ◦uA holds. This follows immediately from the commutativity of
the following diagram, where s, s, and ˜s are isomorphisms determined by interchanging
the projections
CB × A
id×f
sgggggggggggggggggggggggggg
s
|xxxxxxxxx
Cf×id
"F
F
F
F
F
F
F
F
id×uA
+X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
CB × B
id×uB

s
$J
J
J
J
J
J
J
J
J
J
A × CB
f×id
|xxxxxxxxx
id×Cf
"F
F
F
F
F
F
F
F
F
CA × A
s
|yyyyyyyyy
id×uA
$I
I
I
I
I
I
I
I
I
CB × C(CA)
Cf×id
xqqqqqqqqqq
id×C(Cf )

CB × C(CB)
ev
+W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W B × CB
ev
)S
S
S
S
S
S
S
S
S
S
S
S
S
S
S
S
S
A × CA
ev

CA × C(CA)
ev
ujjjjjjjjjjjjjjjjjj
CB × C(CB)
ev
rfffffffffffffffffffffffffffffff
C

27.8 PROPOSITION
In a cartesian closed category the following hold:
(1) First Exponential Law: AB×C ∼= (AB)C,
(2) Second Exponential Law: (Q Ai)B ∼= Q(AB
i ),
(3) Third Exponential Law: A⨿Bi ∼= Q(ABi),
(4) Distributive Law: A × ` Bi ∼= `(A × Bi),
(5) Finite products of epimorphisms are epimorphisms.
Proof:
(1). This follows from the deﬁnition of covariant exponential functors (27.5) and the
fact that, up to natural equivalence, the functor ((B × C) × −) is the composite of
(B × −) with (C × −).
(2). (−)B preserves products since it is an adjoint functor.
(3). A(−) : Aop →A preserves products since it is an adjoint functor.
(4). (A × −) preserves coproducts since it is a co-adjoint functor.
(5). This follows from the fact that the functors (A × −), as co-adjoints, preserve epi-
morphisms and the fact that
A1 × A2
f1×f2
−−−−→B1 × B2 = A1 × A2
f1×id
−−−−→B1 × A2
id×f2
−−−−→B1 × B2.

18th January 2005

442
Cartesian Closedness and Partial Morphisms
[Chap. VII
CARTESIAN CLOSED SUBCATEGORIES
27.9 PROPOSITION
Let A be an isomorphism-closed full subcategory of a cartesian closed category B.
(1) If A is reﬂective in B and the A-reﬂector preserves ﬁnite products, then A is closed
under the formation of ﬁnite products and powers in B, and hence is cartesian
closed.
(2) If A is coreﬂective in B and is closed under the formation of ﬁnite products in B,
then A is cartesian closed.
Proof:
(1). Let A and B be A-objects and let r: BA →A be an A-reﬂection arrow for BA.
Then by assumption id × r : A × BA →A × A is an A-reﬂection arrow for A × BA.
Thus there exists a unique morphism e: A × A →B with ev = e ◦(idA × r).
Furthermore, there exists a unique morphism s : A →BA with e = ev ◦(idA × s).
A × A
e
#G
G
G
G
G
G
G
G
G
A × BA
idA×r
O
ev
/ B
A × A
e
#G
G
G
G
G
G
G
G
G
idA×s

A × BA ev
/ B
This immediately implies that s ◦r = idBA. Hence r ◦s ◦r = idA ◦r, so that
r ◦s = idA. Consequently, r : BA →A is an isomorphism; i.e., BA belongs to A.
(2). If A and B are A-objects, ev : A × BA →B is an evaluation morphism in B, and
c : A →BA is an A-coreﬂection arrow for BA, then ev ◦(idA × c) : A × A →B is
easily seen to be an evaluation morphism in A.

27.10 EXAMPLES
(1) The full subcategory Sym of Rel is cartesian closed (and is closed under the for-
mation of power objects in Rel) since it is a reﬂective subcategory of Rel and
the reﬂector preserves products. In contrast, Pos, although it is cartesian closed,
is not closed under the formation of power objects in Rel. Also, the full (reﬂec-
tive) subcategory that consists of all transitive relations is not cartesian closed: for
A = ({0, 1}, {0, 1}) the functor (A×−) does not preserve the quotient of A+A that
identiﬁes 1 of the ﬁrst copy of A with 0 of the second copy.
(2) Top is not cartesian closed even though it is a reﬂective subcategory of Conv, which
is cartesian closed.
CARTESIAN CLOSED CONCRETE CATEGORIES
27.11 DEFINITION
A concrete category (A, U) over X is called concretely cartesian closed provided
that the following hold:
18th January 2005

Sec. 27]
Cartesian closed categories
443
(1) A and X are cartesian closed,
(2) U preserves ﬁnite products, power objects, and evaluation; in particular, whenever
A × BA
ev
−−→B is an evaluation in A, then
U(A × BA
ev
−−→B) = UA × UBUA
ev
−−→UB
is an evaluation in X.
27.12 EXAMPLES
(1) Rel is a concretely cartesian closed construct. Cf. Example 27.3(1)(b).
(2) Pos and Alg(1) are constructs that are cartesian closed but not concretely so. Cf.
Examples 27.3(1)(c) and (d).
(3) A partially ordered set, considered as concrete category over 1, is cartesian closed if
and only if it is concretely so.
(4) Spa(P) is concretely cartesian closed. More generally, a functor-structured category
is cartesian closed if and only if it is concretely so (cf. Exercise 27I).
27.13 REMARK
For topological categories, concrete cartesian closedness is well understood, as the fol-
lowing results indicate.
27.14 PROPOSITION
If (A, U) is a topological category over X and if A is cartesian closed, then so is X.
Proof: X is isomorphic to the full subcategory of A consisting of all indiscrete objects,
which by Proposition 27.9(1) is cartesian closed.

27.15 CHARACTERIZATION THEOREM FOR CONCRETELY
CARTESIAN CLOSED TOPOLOGICAL CATEGORIES
For a topological category (A, U) over a cartesian closed category X the following are
equivalent:
(1) (A, U) is concretely cartesian closed,
(2) A is cartesian closed and every A-morphism with a discrete codomain has a discrete
domain,
(3) for each A-object A the functor (A × −) preserves ﬁnal sinks.
Proof: (1) ⇒(3).
Let S = (Bi
fi
−−→B)I be a ﬁnal sink.
To show that A × S =
(A × Bi
idA×fi
−−−−−→A × B)I is ﬁnal, let U(A × B)
f
−→UC be an X-morphism such that
all A × Bi
f◦(idA×fi)
−−−−−−−→C are A-morphisms. Let A × CA
ev
−−→C be an evaluation in A.
Then by (1), UA × UCUA
ev
−−→UC is an evaluation in X. Thus in A, for each i ∈I,
there exists a unique morphism Bi
gi
−−→CA with f ◦(idA × fi) = ev ◦(idA × gi), and
18th January 2005

444
Cartesian Closedness and Partial Morphisms
[Chap. VII
in X there exists a unique morphism UB
g
−→UCUA with f = ev ◦(idUA × g). Hence
ev ◦(idA × (g ◦fi)) = ev ◦((idA × g) ◦(idA × fi)) = f ◦(idA × fi) = ev ◦(idA × gi) implies
that g◦fi = gi, so that since S is ﬁnal, UB
g
−→U(CA) is an A-morphism. Consequently,
U(A × B)
f
−→UC = U(A × B)
idA×g
−−−−→U(A × CA)
ev
−−→UC is an A-morphism as well.
(3) ⇒(1). Let A and B be A-objects and let UA × UBUA
ev
−−→UB be an evaluation
morphism in X. Consider the structured sink S = (UAi
fi
−−→UBUA)I consisting of all X-
morphisms fi such that U(A×Ai)
ev◦(idA×fi)
−−−−−−−−→UB is an A-morphism. Let (Ai
fi
−−→BA)I
be a ﬁnal lift of S. Then, by (3), the sink (A × Ai
idA×fi
−−−−−→A × BA)I is ﬁnal too. Thus
U(A × BA)
ev
−−→UB is an A-morphism. It is easily seen to be the desired evaluation in
A.
(1) ⇒(2). Let A
f
−→D be an A-morphism with discrete codomain D. To show that A
is discrete, consider an X-morphism UA
g
−→UB. Let (A × D , (πA, πD)) be a product.
Since an object C is discrete if and only if the empty sink with codomain C is ﬁnal,
(3) implies that A × D is discrete. Hence U(A × D)
g◦πA
−−−−→UB is an A-morphism.
Consequently, UA
g
−→UB = UA
⟨idA,f⟩
−−−−−→U(A × D)
g◦πA
−−−−→UB is an A-morphism.
(2) ⇒(1). Let A × BA
ev
−−→B be an evaluation in A. To establish that its image
UA×U(BA)
ev
−−→UB is an evaluation in X, let UA×X
f
−→UB be an X-morphism and
let D be the discrete object with UD = X. By condition (2), A × D is discrete since the
projection A×D
πD
−−→D is an A-morphism. Thus U(A×D)
f
−→UB is an A-morphism.
Hence there exists a unique A-morphism D
g
−→BA with f = e ◦(idA × g). Thus, by
discreteness of D, X
g
−→U(BA) is the unique X-morphism with f = e ◦(idUA × g).

CARTESIAN CLOSED CONSTRUCTS
Relatively few of the familiar cartesian closed constructs are concretely cartesian closed.
More frequently, the underlying sets U(BA) of powers in cartesian closed constructs
(A, U) are not of the form UBUA, but rather of the form homA(A, B). As we will see,
this phenomenon is closely related to the fact that the terminal objects are often discrete,
or, equivalently, that all constant maps between A-objects are A-morphisms.
27.16 PROPOSITION
Every concretely cartesian closed amnestic construct with discrete terminal object is, up
to concrete isomorphism, a full subconstruct of Set.
Proof: In Theorem 27.15 the implication (1) ⇒(2) holds without the assumption that
(A, U) is topological. Thus the discreteness of the terminal object implies that every
object is discrete.

27.17 DEFINITION
A construct (A, U) is said to have function spaces provided that the following hold:
18th January 2005

Sec. 27]
Cartesian closed categories
445
(1) (A, U) has ﬁnite concrete products,
(2) A is cartesian closed and the evaluation morphisms A × BA
ev
−−→B can be chosen
in such a way that U(BA) = homA(A, B) and ev is the restriction of the canonical
evaluation map in Set.
27.18 PROPOSITION
Let (A, U) be a construct with ﬁnite concrete products. If A is cartesian closed, then the
following conditions are equivalent:
(1) (A, U) has function spaces,
(2) terminal A-objects are discrete,
(3) each constant function73 between A-objects is an A-morphism.
Proof: (1) ⇒(2). Let T be a terminal object in A and let UT
f
−→UA be a function.
Then f is a constant function, whose value will be denoted by a. Consider the evaluation
T × AT
ev
−−→A as speciﬁed by Deﬁnition 27.17. Since the projection T × A
π
−→A is a
morphism, A
ˆπ
−→AT is a morphism. Hence ˆπ(a) ∈hom(T, A). Since ˆπ(a) agrees with
f, it follows that UT
f
−→UA is a morphism. Thus T is discrete.
(2) ⇒(1). Let A × BA
ev
−−→B be an evaluation morphism in A and let T be a terminal
A-object. Since empty products are concrete, UT is a singleton set, say, {t}. Since T
is terminal, it is clear that the function h : homA(A, B) →homA(A × T, B) deﬁned
by h(A
f
−→B) = A × T
πA
−−→A
f
−→B is a bijection.
Also, we have the bijection
k : homA(A × T, B) →homA(T, BA) that associates with any morphism A × T
f
−→B
the unique morphism T
k(f)
−−−→BA with f
= ev ◦(idA × k(f)).
The function
ℓ: homA(T, BA) →U(BA) deﬁned by ℓ(f) = f(t) is a bijection since T is termi-
nal, hence discrete by (2).
Let C
ℓ◦k◦h
−−−−→BA be an initial lift of the bijection homA(A, B)
ℓ◦k◦h
−−−−→U(BA) and set
ev = ev ◦(idA × (ℓ◦k ◦h)). Then A × C
ev
−−→B is an evaluation with UC = homA(A, B).
A simple calculation shows that ev(a, f) = f(a) for a ∈UA and f ∈homA(A, B). Thus
(A, U) has function spaces.
(2) ⇔(3) is obvious.

27.19 REMARK
In topological constructs, terminal objects are discrete if and only if the ﬁbres of each
one-element set contain exactly one element. To avoid uninteresting pathologies we will
require a little more:
27.20 DEFINITION
A construct is called well-ﬁbred provided that it is ﬁbre-small and for each set with at
most one element, the corresponding ﬁbre has exactly one element.
73A function is called constant provided that it factors through a one-element set.
18th January 2005

446
Cartesian Closedness and Partial Morphisms
[Chap. VII
27.21 EXAMPLES
The following topological constructs are well-ﬁbred and have function spaces: Conv of
convergence spaces, PsTop of pseudotopological spaces, sTop of sequential topological
spaces, kTop of (compact Hausdorﬀ)-generated topological spaces, Bor of bornological
spaces, Simp of simplicial complexes, Prost of preordered sets, and Rere of reﬂexive
relations.
27.22 THEOREM
For well-ﬁbred topological constructs the following conditions are equivalent:
(1) A is cartesian closed,
(2) (A, U) has function spaces,
(3) for each A-object A the functor (A × −) preserves ﬁnal epi-sinks,
(4) for each A-object A the functor (A × −) preserves colimits,
(5) for each A-object A the functor (A × −) preserves (a) coproducts and (b) quotients.
Proof:
(1) ⇔(2). Immediate from Proposition 27.18.
(1) ⇔(4). Theorem 27.4.
(4) ⇒(5) follows from the fact that quotient maps are regular epimorphisms.
(Cf.
Proposition 21.13.)
(5) ⇒(3) follows from the facts that: (a) a sink (Bi
fi
−−→B)I is a ﬁnal epi-sink if and only
if there exists a subset J of I such that the small sink (Bj
fj
−−→B)J is a ﬁnal epi-sink,
and (b) a small sink (Bj
fj
−−→B)J is a ﬁnal epi-sink if and only if `
J Bj
[fj]
−−−→B is a
quotient map.
(3) ⇒(4) follows from concreteness of both colimits and ﬁnite products in (A, U) and
the fact that the functor (UA × −) : Set →Set preserves colimits.

27.23 EXAMPLES
(1) Top is a well-ﬁbred topological construct that satisﬁes the above condition (5)(a),
but not (5)(b).
(2) Unif is a well-ﬁbred topological construct that satisﬁes the above condition (5)(b),
but not (5)(a).
(3) Alg(1) and Cat [considered as a construct via the functor U : Cat →Set, deﬁned
by U(A
F
−−→B) = Mor(A)
FM
−−−→Mor(B)] are cartesian closed well-ﬁbred non-
topological constructs that have ﬁnite concrete products, but don’t have function
spaces.
27.24 PROPOSITION
For cartesian closed, well-ﬁbred topological constructs the following hold:
18th January 2005

Sec. 27]
Cartesian closed categories
447
(1) products with discrete factors A are coproducts:
A × B ∼= |A|B =
a
x∈|A|
B,
(2) power objects with discrete exponents A are powers:
BA ∼= B|A| =
Y
x∈|A|
B.
Proof: This follows immediately from A ∼= `
x∈X T, where T is a terminal object, and
from Proposition 27.8(3) and (4).

Suggestions for Further Reading
Eilenberg, S., and G. M. Kelly. Closed categories.
Proceedings of the Conference on
Categorical Algebra (La Jolla, 1965), Springer, Berlin–Heidelberg–New York, 1966,
421–562.
Day, B. J., and G. M. Kelly. On topological quotient maps preserved by pullbacks or
products. Proc. Cambridge Phil. Soc. 67 (1970): 553–558.
Day, B. A reﬂection theorem for closed categories. J. Pure Appl. Algebra 2 (1972):
1–11.
Wyler, O. Convenient categories for topology. Gen. Topol. Appl. 3 (1973): 225–242.
Herrlich, H. Cartesian closed topological categories. Math. Coll. Univ. Cape Town 9
(1974): 1–16.
Nel, L. D. Initially structured categories and cartesian closedness. Canad. J. Math. 27
(1975): 1361–1377.
Isbell, J. R. Function spaces and adjoints. Math. Scand. 36 (1975): 317–339.
Herrlich, H., and L. D. Nel. Cartesian closed topological hulls. Proc. Amer. Math. Soc.
62 (1977): 215–222.
Wyler, O. Function spaces in topological categories. Springer Lect. Notes Math. 719
(1979): 411–420.
Fr¨olicher, A. Cat´egories cart´esienne ferm´ees engendr´ees par des monoids. Cahiers Topol.
Geom. Diﬀ. 21 (1980): 367–375.
Schwarz, F. Powers and exponential objects in initially structured categories and ap-
plications to categories of limit spaces. Quaest. Math. 6 (1983): 227–254.
Ad´amek, J., and H. Herrlich. Cartesian closed categories, quasitopoi and topological
universes. Comment. Math. Univ. Carolinae 27 (1986): 235–257.
18th January 2005

448
Cartesian Closedness and Partial Morphisms
[Chap. VII
Herrlich, H., and G. E. Strecker. Cartesian closed topological hulls as injective hulls.
Quaest. Math. 9 (1986): 263–280.
Isbell, J. R. General function spaces, products and continuous lattices.
Math. Proc.
Cambridge Phil. Soc. 100 (1986): 193–205.
EXERCISES
27A. Cartesian Closed Categories With Zero-Objects
Let A be cartesian closed. Show that
(a) If I is an initial object, then A × I ∼= I for each A-object A.
(b) The following are equivalent:
(1) A is pointed,
(2) A has a zero-object,
(3) A is equivalent to 1.
27B. ∆Pos is Cartesian Closed
Show that the category ∆Pos is cartesian closed. [Analogously to the situation in Pos,
BA is the pointwise-ordered set of all ∆-continuous functions from A to B.]
27C. Coreﬂective Hulls and Cartesian Closedness
Let (A, U) be a cartesian closed topological construct and let B be a full subcategory
of A that is closed under the formation of ﬁnite products. Show that the bicoreﬂective
hull of B in A is cartesian closed.
27D. Cartesian Closed Constructs
Let T be a terminal object in a cartesian closed topological construct (A, U), and for
each A-object A let A∗denote the discrete object with UA∗= UA. Show that
(a) Power objects BA and evaluation morphisms A×BA
ev
−−→B can be chosen such that
U(BA) = {UA
f
−→UB
 A × T ∗
πA
−−→A
f
−→B
is an A-morphism}
ev(a, f) = f(a).
(b) (A, U) has function spaces if and only if A × T ∗
πA
−−→A is an isomorphism for each
A-object A.
(c) (A, U) is concretely cartesian closed if and only if A × T ∗= (A × T)∗for each
A-object A.
(d) (A, U) is concretely cartesian closed and has function spaces if and only if U is an
isomorphism.
18th January 2005

Sec. 27]
Cartesian closed categories
449
27E. Composition as a Morphism
In cartesian closed constructs describe explicitly the unique morphism
comp : BA × CB →CA that makes the diagram
A × (BA × CB)
ev×idCB /
idA×comp

B × CB
ev

A × CA
ev
/ C
commute.
* 27F. (Concretely) Cartesian Closed Topological Categories
as Injective Objects
Let X be a cartesian closed category and let CATp(X) be the quasicategory whose
objects are the amnestic concrete categories over X with ﬁnite concrete products, and
whose morphisms are the concrete functors over X that preserve ﬁnite products.
(a) Show that the injective objects in CATp(X) (with respect to full embeddings) are
precisely the concretely cartesian closed topological categories over X.
Let CONSTp be the quasicategory whose objects are the amnestic well-ﬁbred con-
structs with ﬁnite concrete products, and whose morphisms are the concrete functors
that preserve ﬁnite products.
(b) Show that the injective objects in CONSTp (with respect to full embeddings) are
precisely the well-ﬁbred topological constructs that have function spaces.
* 27G. (Concretely) Cartesian Closed Topological Hulls
Let X be a cartesian closed category. A morphism (A, U)
E
−−→(B, V ) in CATp(X) is
called a concretely cartesian closed topological hull (shortly: a CCCT hull) of
(A, U) provided that the following conditions are satisﬁed:
(1) E is a full embedding,
(2) E[A] is ﬁnally dense in (B, V ),
(3) { EAEA  A, A ∈Ob(A) } is initially dense in (B, V ),
(4) (B, V ) is a concretely cartesian closed topological category.
(a) Show that the injective hulls in CATp(X) are precisely the CCCT hulls.
A morphism (A, U)
E
−−→(B, V ) in CONSTp is called a cartesian closed topo-
logical hull (shortly: a CCT hull) of (A, U) provided the above conditions (1),
(2), (3), and the following (4∗) hold:
(4∗) (B, V ) is a cartesian closed topological category.
Show that
(b) The injective hulls in CONSTp are precisely the CCT hulls.
18th January 2005

450
Cartesian Closedness and Partial Morphisms
[Chap. VII
(c) The concrete embedding PrTop ,→PsTop is a cartesian closed topological hull of
PrTop.
27H. Well-Fibred Topological Constructs
Show that
(a) In well-ﬁbred topological constructs extremal subobjects of discrete objects are dis-
crete. [Cf. Exercise 8M(a).]
(b) A functor-structured construct Spa(T) is well-ﬁbred only if T is the constant functor,
deﬁned by T(X
f
−→Y ) = ∅
id∅
−−→∅, i.e., only if Spa(T) is concretely isomorphic to
the construct Set.
27I. Cartesian Closed Functor-Structured Categories
(a) Prove that if Spa(T) is cartesian closed, then it is concretely cartesian closed.
(b) Prove that Spa(T) is (concretely) cartesian closed whenever X is cartesian closed
and T weakly preserves pullbacks, i.e., for each 2-sink •
f
−→•
g
←−• the fac-
torizing morphism of the T-image of the pullback of (f,g) through the pullback of
(Tf, Tg) is a retraction.
(c) Verify that the Set-functors Sn and P weakly preserve pullbacks.
27J. Re: Theorem 27.15
Prove that the equivalence of 27.15(1) and 27.15(3) follows from the dual of the Galois
Correspondence Theorem (21.24).
18th January 2005

28 Partial morphisms, quasitopoi, and
topological universes
A partial morphism from A to B is a morphism from a subobject of A to B. Sometimes it
is possible to “represent” partial morphisms into B by ordinary morphisms into a suitable
extension B∗of B in such a way that partial morphisms from A into B are precisely
the pullbacks of ordinary morphisms from A to B∗along a distinguished embedding
B
mB
−−−→B∗. Since there is no satisfactory categorical concept of subobject or of em-
bedding, partial morphisms will be deﬁned with respect to an arbitrary class M of
morphisms, acting as “embeddings of subobjects”. The most interesting cases will be
those where M consists of all extremal monomorphisms resp. of all monomorphisms. As
in §27 we ﬁrst will consider abstract categories, then topological categories, and, ﬁnally,
topological constructs.
REPRESENTATIONS OF PARTIAL MORPHISMS
28.1 DEFINITION
Let M be a class of morphisms in A.
(1) A 2-source (A
m
←−−•
f
−→B) with m ∈M is called an M-partial morphism
from A into B. (Extremal) Mono-partial morphisms are called (extremal) partial
morphisms.
(2) An M-morphism B
mB
−−−→B∗is said to represent M-partial morphisms into B
provided that the following two conditions are satisﬁed:
(a) for every morphism •
f
−→B∗there exists a pullback
◦
m
/
f

•
f

B
mB / B∗
and every such m belongs to M,
(b) for every M-partial morphism (•
m
←−−◦
f
−→B) there exists a unique morphism
•
f∗
−−→B∗such that
◦
m
/
f

•
f∗

B
mB / B∗
is a pullback.
451

452
Cartesian Closedness and Partial Morphisms
[Chap. VII
(3) A is said to have representable M-partial morphisms provided that for each
A-object B there exists some B
mB
−−−→B∗that represents M-partial morphisms into
B.
28.2 EXAMPLES
(1) Set has representable (extremal) partial morphisms. For each set B the one-point
extension B ,→B ⊎{∞} represents both types of partial morphisms into B: given
A0 ⊆A and A0
f
−→B, deﬁne f∗: A →B ⊎{∞} by
f∗(x) =
(
f(x),
for x ∈A0
∞,
otherwise.
(2) The category Alg(1) of algebras with one unary operation has representable (ex-
tremal) partial morphisms. For each object (B, β) the extension
(B, β)
m
−−→((B × N) ∪{∞} , β∗), deﬁned by m(b) = (b, 0) and
β∗(x) =





∞,
if x = ∞
(b, n),
if x = (b, n + 1)
(β(b), 0),
if x = (b, 0),
represents (extremal) partial morphisms into (B, β).
(3) Rel has representable extremal partial morphisms. For each object (X, ρ) the one-
point extension
(X, ρ) ,→(X ⊎{∞} , ρ ∪(X × {∞}) ∪({∞} × X) ∪{(∞, ∞)})
represents extremal partial morphisms into (X, ρ).
However, Rel does not have
representable partial morphisms.
(4) Top has neither representable extremal partial morphisms nor representable partial
morphisms. However, for the class M of all closed [resp. open] embeddings, it does
have representable M-partial morphisms. The one-point extension
(X, τ) ,→(X ⊎{∞} , {∅} ∪{ A ⊎{∞}
 A ∈τ })
[resp. (X, τ) ,→(X ⊎{∞} , τ ∪{X ⊎{∞}})]
represents M-partial morphisms into (X, τ).
(5) Every category has representable Iso-partial morphisms, since these are essentially
just morphisms.
In particular, every partially ordered set, considered as a cate-
gory, has representable extremal partial morphisms. However, such a category has
representable partial morphisms only if the order relation is equality.
28.3 PROPOSITION
If A has representable M-partial morphisms, then the following hold:
18th January 2005

Sec. 28]
Partial morphisms, quasitopoi, and topological universes
453
(1) Iso(A) ⊆M ⊆RegMono(A).
(2) Pullbacks of M-morphisms exist and belong to M.
Proof:
(1). Let A
f
−→B be a morphism and let B
mB
−−−→B∗represent M-partial morphisms
into B. If f belongs to M, then there exists a morphism B
g
−→B∗such that
A
f
/
f

B
g

B
mB / B∗
is a pullback. This implies that f is an equalizer of g and mB, and hence is a regular
monomorphism.
If f is an isomorphism, then the square
A
f
/
f

B
mB

B
mB / B∗
is a pullback since mB, by the above, is a monomorphism. Thus f ∈M.
(2). Let (A
m
−−→B
f
←−C) be a 2-sink with m ∈M, and let A
mA
−−−→A∗represent
M-partial morphisms into A. Then there exist pullbacks
A
m
/
idA

B
g

A
mA / A∗
and
•
m
/
f

C
g◦f

A
mA / A∗
with m ∈M. Thus there exists a unique morphism •
k
−→A such that
•
m
/
k
>>>>>>>>
∗
f
///////////////
C
f

A
idA

m
/ B
g

A
mA / A∗
commutes. By Proposition 11.10(2) the square designated by ∗is a pullback.

28.4 REMARK
If A has representable M-partial morphisms, then M need not be closed under compo-
sition, as the following example shows: A is the category of sets and injective maps, and
M consists of all injective maps f : A →B such that B \ f[A] has at most one element.
18th January 2005

454
Cartesian Closedness and Partial Morphisms
[Chap. VII
28.5 PROPOSITION
If A has ﬁnite products and representable M-partial morphisms, where M is a family
that contains all sections, then the following hold:
(1) A is ﬁnitely complete.
(2) M = RegMono(A).
Proof:
(1). In view of Theorem 12.4 it suﬃces to show that any pair of A-morphisms A
f /
g / B
has an equalizer. Since ⟨idA, f⟩: A →A × B is a section, it belongs to M. Hence
by Proposition 28.3 there exists a pullback
•
m
/

A
⟨idA,g⟩

A
⟨idA,f⟩
/ A × B
with m ∈M. By Proposition 11.14, m is an equalizer of f and g.
(2). By Proposition 28.3(1) it suﬃces to show that every regular monomorphism belongs
to M. Let A
e
−→B be an equalizer of B
f /
g / C . Then
A
e
/
e

B
⟨idB,g⟩

B
⟨idB,f⟩
/ B × C
is a pullback.
Since ⟨idB, f⟩is a section, and so belongs to M, by Proposition
28.3(2), e belongs to M.

28.6 COROLLARY
If A has ﬁnite products and representable (extremal) partial morphisms, then the follow-
ing hold:
(1) A is ﬁnitely complete.
(2) (Extr)Mono(A) = RegMono(A).
(3) In A regular monomorphisms are closed under composition.
Proof: (1) and (2) follow from Proposition 28.5, and (3) follows from (2) and Proposition
7.62(1).

18th January 2005

Sec. 28]
Partial morphisms, quasitopoi, and topological universes
455
QUASITOPOI
28.7 DEFINITION
Let M be a class of morphisms in a category A. Then A is called an M-topos provided
that it:
(1) has representable M-partial morphisms,
(2) is cartesian closed, and
(3) is ﬁnitely cocomplete.
Mono-topoi are called topoi, and ExtrMono-topoi are called quasitopoi.
28.8 PROPOSITION
Topoi are precisely the balanced quasitopoi.
Proof: Immediate from Proposition 28.5(2) and Proposition 7.67.

28.9 EXAMPLES
(1) Set, Alg(1), the category of ﬁnite sets, and all functor categories of the form
[A, Set], where A is small, are topoi.
(2) Rel, Conv, and PsTop are quasitopoi, but are not topoi.
(3) A linearly ordered set, considered as a category, is
(a) cartesian closed if and only if it has a largest element,
(b) a quasitopos if and only if it has a largest element and a smallest element,
(c) a topos if and only if it has precisely one element.
(4) Cat and kTop are cartesian closed and cocomplete, hence Iso-topoi; but they are
not quasitopoi.
(5) pSet, and PrTop (equivalently: Clos, see 5N) are complete and cocomplete and
their extremal partial morphisms are representable, but they fail to be cartesian
closed.
28.10 PROPOSITION
Each quasitopos is (Epi, RegMono)-structured.
Proof: Immediate from Proposition 28.6(3) and the dual of Proposition 14.22.

28.11 REMARKS
Quasitopoi have a rich inner structure:
18th January 2005

456
Cartesian Closedness and Partial Morphisms
[Chap. VII
(1) There is an “extremal-subobject classiﬁer”, i.e., a morphism T →Ωthat represents
extremal partial morphisms into a terminal object T.
Cartesian closed categories with subobject classiﬁers are automatically topoi. But
cartesian closed categories with extremal-subobject classiﬁers may fail badly to be
quasitopoi. For example,
(a) Prost, Cat, and kTop are cartesian closed, cocomplete, and have extremal-
sub-object classiﬁers, but fail to be quasitopoi,
(b) the ordered sets
•
•
•
•
...
...
1
2
3
n
and
•
•
•
•
...
...
1
2
3
n
  @
@
•
•
•
considered as categories, are cartesian closed and have representable extremal
partial morphisms, but fail to be ﬁnitely cocomplete.
(2) For each object A there is an “elementhood-morphism” εA, deﬁned by the pullback
•

εA
/ A × ΩA
ev

T
/ Ω
(3) For each object A there is a “singleton-morphism” σA : A →ΩA, deﬁned by the
diagram
A
⟨idA,idA⟩/
pullback

A × A
idA×σA /

A × ΩA
ev
vnnnnnnnnnnnnnn
T
/ Ω
(4) For each morphism A
f
−→B there is a “preimage-morphism” f∗: B →ΩA, deﬁned
by the diagram
A
⟨idA,f⟩/
pullback

A × B
idA×f∗/

A × ΩA
ev
vnnnnnnnnnnnnnn
T
/ Ω
18th January 2005

Sec. 28]
Partial morphisms, quasitopoi, and topological universes
457
(5) For each morphism A
f
−→B there is a “power-set-morphism” ΩB
Ωf
−−→ΩA, deﬁned
by the diagram
A × ΩB
f×id /
idA×Ωf

B × ΩB
ev

A × ΩA
ev
/ Ω
(6) For each morphism A
f
−→B there is a “pullback along f” functor
(A ↓B) →(A ↓A) between the corresponding comma categories that is simultane-
ously an adjoint and a co-adjoint functor.
CONCRETE QUASITOPOI
If a topological category (A, U) has representable partial morphisms, then, by Propo-
sition 28.3(1), A is balanced, so that U is an isomorphism (cf. Exercise 21N). Thus
for topological categories the concepts of representability of partial morphisms, and in
particular of topoi, are not interesting.
However, the concepts of representability of
extremal partial morphisms (and in particular of quasitopoi) are fruitful.
28.12 PROPOSITION
Let (A, U) be a topological category over X, let M be a class of morphisms in X, and let
Minit be the class of all initial A-morphisms m with Um ∈M. If A has representable
Minit-partial morphisms, then X has representable M-partial morphisms. U preserves
these representations if and only if Minit-subobjects of discrete objects are discrete.
Proof:
(1). To show that X has representable M-partial morphisms, consider the full sub-
category B of A that consists of all indiscrete objects.
Since U restricts to an
isomorphism from B to X, and since B is closed under the formation of pullbacks
in A, it suﬃces to show that B is closed under representations B
mB
−−−→B∗of Minit-
partial morphisms in A, i.e., that B ∈B implies that B∗∈B. For this purpose
let UA
f
−→UB∗be an X-morphism. Let D be the discrete object with UD = UA,
and let
P
ˆm
/
ˆf

D
f

B
mB / B∗
be a pullback in A. Then ˆm ∈Minit. Since B
mB
−−−→B∗represents Minit-partial
morphisms into B and since D is discrete, UD
f
−→UB∗is the only X-morphism g
18th January 2005

458
Cartesian Closedness and Partial Morphisms
[Chap. VII
that makes
UP
ˆm
/
ˆf

UD
g

UB
mB / UB∗
(∗)
a pullback in X. Let C
ˆm
−−→A be an initial lift of UP
ˆm
−−→UA. Then C
ˆm
−−→A
belongs to Minit. Moreover, UC
ˆf
−→UB is an A-morphism, since B is indiscrete.
Hence A
ˆm
←−−C
ˆf
−→B is an Minit-partial morphism from A to B. Thus there exists
an A-morphism A
g
−→B∗that makes
C
ˆm
/
ˆf

A
g

B
mB / B∗
a pullback in A. Hence
UC
ˆm
/
ˆf

UA
g

UB
mB / UB∗
a pullback in X. By (∗) this implies that g = f. Hence UA
f
−→UB∗is an A-
morphism.
(2). That U preserves representations if and only if Minit-subobjects of discrete objects
are discrete follows by a straightforward calculation.

28.13 DEFINITION
(1) Let B
m
−−→A be a morphism and let S = (Ai
fi
−−→A) be a sink. If for each i ∈I the
diagram
Bi
mi /
ˆfi

Ai
fi

B
m
/ A
is a pullback, then the sink (Bi
ˆfi
−−→B)I is called a pullback of S along m.
(2) Let M be a class of morphisms and let C be a conglomerate of sinks in a category
A. C is called stable under pullbacks along M provided that every pullback of
a sink in C along a M-morphism is a member of C.
In particular, C is called pullback-stable provided that C is stable under pullbacks
along Mor(A). In the case that M is a class of monomorphisms, C is called re-
ducible provided that it is stable under pullbacks along M. When M is the class
of all extremal monomorphisms, we say that C is extremally reducible.
18th January 2005

Sec. 28]
Partial morphisms, quasitopoi, and topological universes
459
28.14 REMARK
In view of the fact that diagrams of the form
A × B
πB
/
idA×f

B
f

A × C πC
/ C
are pullbacks (see Exercise 11D), Theorem 27.15 can be restated as follows:
If X is cartesian closed, then for each topological category (A, U) over X the following
conditions are equivalent:
(1) (A, U) is concretely cartesian closed,
(2) ﬁnal sinks in (A, U) are stable under pullbacks along projections.
28.15 THEOREM
If X has representable M-partial morphisms, then for each topological category (A, U)
over X the following conditions are equivalent:
(1) A has representable Minit-partial morphisms and U preserves these representations,
(2) ﬁnal sinks in (A, U) are Minit-reducible.
Proof: (1) ⇒(2). Let S = (Ai
fi
−−→A)I be a ﬁnal sink and let B
m
−−→A belong to Minit.
Then for each i ∈I there exists a pullback
Bi
mi /
ˆfi

Ai
fi

B
m
/ A
with mi ∈Minit. To show that the sink T = (Bi
ˆfi
−−→B)I is ﬁnal, let UB
g
−→UC be an
X-morphism such that all UBi
g◦ˆfi
−−−→UC are A-morphisms. Let C
mC
−−−→C∗represent
Minit-partial morphisms into C.
Then, by (1), UC
mC
−−−→UC∗represents M-partial
morphisms into UC. Hence there exists a unique X-morphism UA
ˆg
−→UC∗such that
UB
m
/
g

UA
ˆg

UC
mC / UC∗
is a pullback in X, and for each i ∈I there is a unique A-morphism Ai
gi
−−→C∗such
that
Bi
mi /
g◦ˆfi

Ai
gi

C
mC / C∗
18th January 2005

460
Cartesian Closedness and Partial Morphisms
[Chap. VII
is a pullback in A. Thus, for each i ∈I,
UBi
mi /
g◦ˆfi

UAi
gi

UC
mC / UC∗
and
UBi
mi /
g◦ˆfi

UAi
ˆg◦fi

UC
mC / UC∗
are pullbacks in X. Hence UAi
gi
−−→UC∗= UAi
fi
−−→UA
ˆg
−→UC∗. Since S is ﬁnal,
UA
ˆg
−→UC∗is an A-morphism. Thus UB
g
−→UC
mC
−−−→UC∗= UB
m
−−→UA
ˆg
−→UC∗
is an A-morphism. Since C
mC
−−−→C∗is initial, UB
g
−→UC is an A-morphism.
(2) ⇒(1). Let B be a B-object and let UB
mB
−−−→X represent M-partial morphisms
into UB. Consider the family (Ai
mi
←−−Bi
fi
−−→B)I of all Minit-partial morphisms into
B. Then for each i ∈I there exists a unique X-morphism UAi
gi
−−→X such that
UBi
mi /
fi

UAi
gi

UB
mB
/ X
is a pullback in X. Let (Ai
gi
−−→B∗)I be a ﬁnal lift of the structured sink (UAi
gi
−−→X)I.
In order to prove that B
mB
−−−→B∗represents Minit-partial morphisms into B it suﬃces
to show that UB
mB
−−−→UB∗belongs to Minit. Since
UB
idB /
idUB

UB
mB

UB
mB
/ X
is a pullback, there exists an i ∈I with (Ai, gi) = (B, mB). Thus UB
mB
−−−→UB∗=
UAi
gi
−−→UB∗is an A-morphism. If A
mB
−−−→B∗is an initial lift of UB
mB
−−−→UB∗, then
B ≤A (cf. 5.4). So it remains to be shown that A ≤B. For each i ∈I the diagram
Bi
mi /
fi

Ai
gi

A
mB / B∗
is a pullback in A since it is a pullback in X and Bi
mi
−−→Ai is initial. Hence, by (2),
the sink (Bi
fi
−−→A)I is ﬁnal. Thus UBi
fi
−−→UB = UBi
fi
−−→UA
idUA
−−−→UB implies
that UA
idUA
−−−→UB is an A-morphism, i.e., that A ≤B.

28.16 DEFINITION
A concrete category is called universally topological provided that it is topological
and ﬁnal sinks are pullback-stable.
18th January 2005

Sec. 28]
Partial morphisms, quasitopoi, and topological universes
461
28.17 EXAMPLES
(1) Rel is a universally topological construct.
(2) If a functor T : X →Set weakly preserves pullbacks [cf. Exercise 27I], then Spa(T)
is universally topological over X. In particular, Spa(P) is universally topological.
(3) Frames are (cartesian closed and hence) universally topological over 1.
(4) The construct of compactly generated topological spaces is not universally topolog-
ical (although it is cartesian closed and topological). In fact, a “non-concretely”
cartesian closed construct cannot be universally topological:
28.18 THEOREM
For topological categories (A, U) over a quasitopos X the following conditions are equiv-
alent:
(1) (A, U) is universally topological,
(2) (A, U) is a concrete quasitopos, i.e., A is a quasitopos and U preserves evaluation,
power objects, and representations of extremal partial morphisms.
Proof: (1) ⇒(2).
Immediate from Remark 28.14, Theorem 28.15, and Proposition
28.12.
(2) ⇒(1). By the above-mentioned results, (2) implies that in (A, U) ﬁnal sinks are
stable under pullbacks along projections and along extremal monomorphisms. Since each
A-morphism A
f
−→B can be expressed as A
f
−→B = A
⟨idA,f⟩
−−−−−→A × B
πB
−−→B, since
⟨idA, f⟩is a section and hence is an extremal monomorphism, and since pullbacks can be
composed [cf. Proposition 11.10(1)], this implies that (A, U) is universally topological.
TOPOLOGICAL UNIVERSES
28.19 THEOREM
For well-ﬁbred topological constructs, the following conditions are equivalent:
(1) extremal partial morphisms are representable,
(2) ﬁnal sinks are extremally reducible,
(3) ﬁnal epi-sinks are extremally reducible,
(4) coproducts and quotients are extremally reducible.
Proof: (1) ⇔(2) is immediate from Theorem 28.15. Cf. Exercise 28B(a).
(2) ⇒(3) is obvious.
18th January 2005

462
Cartesian Closedness and Partial Morphisms
[Chap. VII
(3) ⇒(2). Let O (resp. T) be the unique object with underlying set ∅(resp. {0}). If
S = (Ai
fi
−−→A)I is a ﬁnal sink, enlarge S to a ﬁnal epi-sink T = (Aj
fj
−−→A)J by adding
all morphisms from T to A. Let B
m
−−→A be an extremal monomorphism and let
Bj
ˆmj /
ˆfj

Aj
fj

B
m
/ A
be a pullback for each j ∈J. Then (Bj
ˆfj
−−→B)J is a ﬁnal epi-sink. Since for each
j ∈J \ I the morphism ˆfj has a discrete domain (namely, O or an object isomorphic to
T), the restricted sink (Bi
ˆfi
−−→B)I is ﬁnal as well.
(3) ⇔(4) as in Theorem 27.22.

28.20 EXAMPLES
(1) Extremal partial morphisms are representable in each of the following well-ﬁbred
topological constructs: Conv, PsTop, PrTop (= pretopological spaces = closure
spaces), Bor, Simp, and Rere.
(2) Extremal partial morphisms are not representable for any of the following well-ﬁbred
topological constructs: Top, Unif, PMet, sTop, kTop, and Prost.
28.21 DEFINITION
A well-ﬁbred topological construct (A, U) for which A is a quasitopos is called a topo-
logical universe.
A topological universe
18th January 2005

Sec. 28]
Partial morphisms, quasitopoi, and topological universes
463
28.22 THEOREM
For a well-ﬁbred topological construct (A, U) the following conditions are equivalent:
(1) (A, U) is a topological universe,
(2) (A, U) has function-spaces and representable extremal partial morphisms,
(3) in (A, U) ﬁnal epi-sinks are pullback-stable.
Proof: (1) ⇔(2) is immediate from Theorem 27.22.
(2) ⇔(3) can be established as in the proof of Theorem 28.18.

28.23 EXAMPLES
Conv, PsTop, Simp, Bor, and Rere are topological universes.
Suggestions for Further Reading
Lawvere, F. W. Introduction. Springer Lect. Notes Math. 274 (1972): 1–12.
Freyd, P. Aspects of topoi. Bull. Austral. Math. Soc. 7 (1972): 1–76 and 467–480.
Par´e, R. Co-limits in topoi. Bull. Amer. Math. Soc. 80 (1974): 556–561.
Wyler, O. Are there topoi in topology? Springer Lect. Notes Math. 540 (1976): 700–
719.
Penon, J. Sur les quasi-topos. Cahiers Topol. Geom. Diﬀ. 18 (1977): 181–218.
Booth, P. I., and R. Brown. Spaces of partial maps, ﬁbred mapping spaces and the
compact-open topology. Gen. Topol. Appl. 8 (1978): 181–195.
Dubuc, E. J. Concrete quasitopoi. Springer Lect. Notes Math. 753 (1979): 239–254.
Lambek, J., and P. Scott. Algebraic aspects of topos theory.
Cahiers Topol. Geom.
Diﬀ. 22 (1981): 129–140.
Nel, L. D. Topological universes and smooth Gelfand-Naimark duality. Contemp. Math.
30 (1984): 244–276.
Dyckhoﬀ, R., and W. Tholen. Exponentiable morphisms, partial products and pull-
back complements. J. Pure Appl. Algebra 49 (1987): 103–116.
Herrlich, H. On the representability of partial morphisms in Top and in related con-
structs. Springer Lect. Notes Math. 1348 (1988): 143–153.
Schwarz, F. Description of the topological universe hull. Springer Lect. Notes Comp.
Sci. 393 (1989): 325–332.
18th January 2005

464
Cartesian Closedness and Partial Morphisms
[Chap. VII
EXERCISES
28A. Injectivity in Topological Constructs
Let (A, U) be a well-ﬁbred topological construct with representable extremal partial
morphisms. Show that in (A, U)
(a) An object B is injective if and only if there exists some A
m
−−→B that represents
extremal partial morphisms into A.
(b) A
m
−−→B is an injective hull if and only if either
(1) A is injective and m is an isomorphism, or
(2) A is not injective and A
m
−−→B represents extremal partial morphisms into A.
28B. Extensional Topological Constructs
A well-ﬁbred topological construct (A, U) is called extensional provided that it has
representable extremal partial morphisms.
(a) Show that if (A, U) is extensional then U preserves representations of extremal
partial morphisms. [Cf. Proposition 28.12 and Exercise 27H(a).]
(b) For each A-object B denote by B∗the ﬁnal lift of the structured sink consisting of
all A
a
−→|B| ⊎∞whose restriction a′ to the initial subobject A′ of A on the set
a−1[|B|] is an A-morphism A′
a′
−−→B. If the inclusion map B ,→B∗is an initial
(= extremal) monomorphism, we call B∗the canonical one-point extension of
B. Prove that a well-ﬁbred topological construct is extensional if and only if every
A-object has a canonical one-point extension.
* (c) Let CONSTs be the quasicategory, whose objects are the well-ﬁbred constructs
in which every injective structured arrow has a unique initial lift, and whose mor-
phisms are the concrete functors that preserve embeddings. Show that the injective
objects in CONSTs (with respect to full embeddings) are precisely the extensional
topological constructs.
* 28C. Extensional Topological Hulls
A morphism (A, U)
E
−−→(B, V ) in CONSTs is called an extensional topological hull
of (A, U) provided that the following conditions are satisﬁed:
(1) E is a full embedding,
(2) E[A] is ﬁnally dense in (B, V ),
(3) the image under E of
{ BA
 A ∈Ob(A) and A
mA
−−−→BA represents extremal partial morphisms into A }
is initially dense in (B, V ),
(4) (B, V ) is an extensional topological construct.
18th January 2005

Sec. 28]
Partial morphisms, quasitopoi, and topological universes
465
Show that
(a) Injective hulls in CONSTs are precisely the extensional topological hulls.
(b) Every object in (A, U) has an injective hull.
(c) The concrete embedding Top ,→PrTop is an extensional topological hull of Top.
28D. Posets as Quasitopoi
Let A be a poset, considered as a category. Show that:
(a) A is a topos if and only if A contains precisely one element.
(b) If A is complete, then A is a quasitopos if and only if A is a frame.
28E. A Characterization of Topoi
(a) Show that A is a topos if and only if A is cartesian closed and has representable
partial morphisms.
(b) Show that the category A of nonempty sets has the following properties:
(1) A is cartesian closed,
(2) for each A-object B there exists a monomorphism B
mB
−−−→B∗such that for
every partial morphism •
m
←−−◦
f
−→B there exists a unique morphism •
f∗
−−→B
such that
◦
m
/
f

•
f∗

B
mB / B∗
is a pullback,
(3) in A partial morphisms are not representable.
28F. Regular Monomorphisms in (Quasi)Topoi
Show that:
(a) In a quasitopos pushouts of regular monomorphisms are monomorphisms.
(b) In a topos monomorphisms and regular monomorphisms are pushout-stable.
(c) In a (quasi)topos every (extremal) monomorphism is regular.
* 28G. Universally Topological Categories as Injective Objects
Let X be a quasitopos and let CATps be the quasicategory whose objects are the con-
crete categories over X with ﬁnite concrete products and unique initial lifts of regular
monomorphic structured arrows, and whose morphisms are the concrete functors that
preserve ﬁnite products and those embeddings that are carried by regular monomor-
phisms.
18th January 2005

466
Cartesian Closedness and Partial Morphisms
[Chap. VII
(a) Show that the injective objects in CATps (with respect to full embeddings) are
precisely the universally topological categories.
(b) Describe injective hulls in CATps(X).
(c) Show that the concrete embedding Top ,→PsTop is an injective hull in the quasi-
category CATps(Set).
28H. Relational Categories
For every small concrete category (A, U) over X the concrete category Rel(A, U) of
(A, U)-ary relations over X is Spa(F(A,U)), where F(A,U) : X →Set is the functor,
deﬁned by
F(A,U)(X) = { (A, a) | A ∈Ob(A) and UA
a
−→X ∈Mor(X) }
and F(A,U)(f)(A, a) = (A, f ◦a). A concrete category that is concretely isomorphic to
some Rel(A, U) is called relational. Show that
(a) Rel is a relational construct.
(b) Every relational category is functor-structured.
(c) If a functor-costructured construct (A, U) is relational, then U is an isomorphism.
(d) Top is not concretely isomorphic to a full subconstruct of some relational construct.
(e) Relational categories are universally topological.
28I. Functor-Costructured Constructs
Prove that for functor-costructured constructs (A, U), the following conditions are equiv-
alent:
(1) (A, U) is relational,
(2) (A, U) is functor-structured,
(3) (A, U) is universally topological,
(4) (A, U) is cartesian closed and there exists only one A-object A with UA = ∅,
(5) (A, U) is well-ﬁbred,
(6) U is an isomorphism.
28J. Products of Final Morphisms
Prove that
(a) In relational categories, products of ﬁnal morphisms are ﬁnal.
(b) In universally topological categories, ﬁnite products of ﬁnal morphisms are ﬁnal.
(c) If T : Set →Set is deﬁned by T(X) is the set of all ﬁnite subsets of X, and Tf(Y ) =
f[Y ], then Spa(T) is universally topological, but in Spa(T) countable products of
ﬁnal morphisms can fail to be ﬁnal.
18th January 2005

Sec. 28]
Partial morphisms, quasitopoi, and topological universes
467
(d) In concretely cartesian closed topological categories, ﬁnite products of ﬁnal maps
are ﬁnal.
(e) In a well-ﬁbred topological construct (A, U), ﬁnite products of ﬁnal maps are ﬁnal
if and only if U is an isomorphism.
(f) In a topological construct with function spaces, ﬁnite products of quotient maps are
quotient maps.
(g) A topological full subconstruct (A, U) of Top has function spaces if and only if in
(A, U) ﬁnite products of quotient maps are quotient maps.
28K. Functor-Structured Categories
Prove that Spa(T) is universally topological if and only if the base category is a qua-
sitopos and T weakly preserves pullbacks (cf. Exercise 27I).
28L. Re: Theorems 27.22 and 28.19
Let A (resp. B) be the full subconstruct of Rel (resp. Rere) that consists of all objects
(X, ρ) that have no proper cycles; i.e., x1ρx2, x2ρx3, · · · , xn−1ρxn and x1 = xn imply
that x1 = x2 = · · · = xn. Show that the following hold:
(a) A (resp. B) is closed under the formation of mono-sources in Rel (resp. Rere),
(b) A and B are monotopological constructs,
(c) A and B are wellpowered and co-wellpowered (epimorphisms are surjective),
(d) A and B are locally presentable,
(e) B is well-ﬁbred; A is not,
(f) in A ﬁnal sinks are pullback stable; in B ﬁnal epi-sinks are pullback stable,
(g) in B all functors of the form (B × −) preserve colimits; in A some functors of the
form (A × −) don’t preserve coequalizers,
(h) B is cartesian closed; A is not,
(i) neither A nor B has representable extremal partial morphisms; neither even has an
extremal-subobject classiﬁer,
(j) neither A nor B is a quasitopos.
28M. Re: Theorem 28.19
Show that for a topological construct A the following are equivalent:
(1) in A ﬁnal sinks are extremally reducible,
(2) in A
(i) ﬁnal epi-sinks are extremally reducible, and
(ii) subobjects of discrete objects are discrete.
Observe that condition (2)(ii) is automatically satisﬁed whenever the ﬁbre of the empty
set has exactly one element.
18th January 2005


BIBLIOGRAPHY
Ad´amek, J. Theory of Mathematical Structures. Reidel, Dordrecht–Boston–Lancaster,
1983.
Ad´amek, J., and J. Rosicky. Locally Presentable and Accessible Categories. Cambridge
University Press, 1993.
Corrections under http://www.iti.cs.tu-bs.de/~adamek/corrections.ps.
Ad´amek, J., and V. Trnkov´a. Automata and Algebras in Categories.
Kluwer, Dor-
drecht, 1989.
Arbib, M. A. Theories of Abstract Automata.
Prentice-Hall, Englewood Cliﬀs, NJ,
1969.
Arbib, M. A., and E. G. Manes. Arrows, Structures and Functors.
The Categorical
Imperative. Academic Press, New York, 1975.
Barr, M. ∗-Autonomous Categories. Lecture Notes in Mathematics, Vol. 752. Springer,
Berlin–Heidelberg–New York, 1979.
Barr, M., P. A. Grillet, and D. H. van Osdol. Exact
Categories
and
Categories
of
Sheaves. Lecture Notes in Mathematics, Vol. 236. Springer, Berlin–Heidelberg–
New York, 1971.
Barr, M., and C. Wells. Category Theory for Computer Science. Third edition, CRM
Montreal, 1999.
Toposes, Triples and Theories. Springer, Berlin–Heidelberg–New York, 1985. Re-
vised and corrected version:
http://www.cwru.edu/artsci/math/wells/pub/ttt.html
Bell, J. L. Toposes and Local Set Theories — An Introduction. Oxford Logic Guides,
Vol. 14. Clarendon Press, New York–Oxford, 1988.
B´enabou, J. Introduction to Bicategories.
Lecture Notes in Mathematics, Vol. 47.
Springer, Berlin–Heidelberg–New York, 1967.
Structures Alg´ebriques dans les Cat´egories. Cahiers Topol. G´eom. Diﬀ. 10 (1968):
1–126.
Blyth, T. S. Categories. Wiley, New York, 1986.
Borceaux, F. Handbook of Categorical Algebra. Three volumes, Cambridge University
Press, 1994.
Borceaux, F., and G. Janelidze. Galois Theories. Cambridge University Press, 2001.
Brinkmann, H.-B., and D. Puppe. Kategorien und Funktoren. Lecture Notes in Math-
ematics, Vol. 18. Springer, Berlin–Heidelberg–New York, 1966.
Abelsche und exakte Kategorien, Korrespondenzen. Lecture Notes in Mathematics,
Vol. 96. Springer, Berlin–Heidelberg–New York, 1969.
469

470
BIBLIOGRAPHY
Bucur, I., and A. Deleanu (with the collaboration of P. J. Hilton and N. Popescu).
Introduction to the Theory of Categories and Functors. Wiley, New York, 1968.
Budach, L. Quotientenfunktoren und Erweiterungstheorie. Mathematische Forschungs-
berichte, Vol. 22. Deutscher Verlag der Wissenschaften, Berlin, 1967.
Budach, L., and H.-J. Hoehnke. Automaten und Funktoren. Akademie Verlag, Berlin,
1975.
Budach, L., and H.-P. Holzapfel. Localizations and Grothendieck Categories, Deutscher
Verlag der Wissenschaften, Berlin, 1975.
Burmeister, P., and H. Reichel. Introduction to Theory and Application of Partial Al-
gebras. Akademie Verlag, Berlin, 1986.
Castellini, G. Categorical Closure Operators. Birkh¨auser, Boston–Basel–Berlin, 2003.
Diers, Y. Categories of Commutative Algebras. Oxford University Press, Oxford, 1992.
Dubuc, E. Kan Extensions in Enriched Category Theory. Lecture Notes in Mathemat-
ics, Vol. 145. Springer, Berlin–Heidelberg–New York, 1970.
Ehresmann, C. Cat´egories et Structures. Dunod, Paris, 1965.
Prolongements Universels d’un Foncteur par Adjonction de Limites. Diss. Math.
Rozprawy Mat., Vol. 64, 1969.
Oevres Compl´etes et Comment´ees I-IV (ed. by A. C. Ehresmann). Cahiers Topol.
G´eom. Diﬀ., Vols. 20-24, (1979–83): Supplements.
Ehrig, H., K. D. Kiermeier, H.-J. Kreowski, and W. K¨uhnel. Universal Theory of Au-
tomata. Teubner, Stuttgart–Leipzig, 1974.
Eilenberg, S. Automata, Languages and Machines Vol.I. Academic Press, New York,
1974.
Eilenberg, S., and S. Mac Lane. Collected Works. Academic Press, New York, 1986.
Freyd, P. Abelian Categories. An Introduction to the Theory of Functors. Harper &
Row, New York, 1964.
Freyd, P., and A. Scedrov. Categories, Allegories. North-Holland, Amsterdam, 1990.
Fr¨olicher A., and A. Kriegl. Linear Spaces and Diﬀerentiation Theory.
Wiley, New
York, 1988.
Gabriel, P., and F. Ulmer. Lokal pr¨asentierbare Kategorien. Lecture Notes in Mathe-
matics, Vol. 221. Springer, Berlin–Heidelberg–New York, 1971.
Goldblatt, R. Topoi. North Holland, Amsterdam, 1984.
Gorey, E. Categor y. Adama Books, 1973.
Gr¨atzer, G. Universal Algebra. Van Nostrand, New York, 1968.
18th January 2005

BIBLIOGRAPHY
471
Grothendieck, A. Cat´egories Coﬁbr´ees Additives et Complexe Cotangent Relatif. Lec-
ture Notes in Mathematics, Vol. 79. Springer, Berlin–Heidelberg–New York, 1968.
Hasse, M., and L. Michler. Theorie der Kategorien.
Mathematische Monographien,
Vol. 7. Deutscher Verlag der Wissenschaften, Berlin, 1966.
Henkin, L., J. D. Monk, and A. Tarski. Cylindric Algebras Part II. North Holland, Am-
sterdam, 1985.
Herrlich, H. Topologische Reﬂexionen und Coreﬂexionen. Lecture Notes in Mathemat-
ics, Vol. 78. Springer, Berlin–Heidelberg–New York, 1968.
Herrlich, H., and G. E. Strecker. Category Theory. Allyn Bacon, Boston, 1973, 2nd
ed. Heldermann, Berlin, 1979.
Isbell, J. R. Subobjects, Adequacy, Completeness and Categories of Algebras. Diss. Math.
Rozprawy Mat., Vol. 36, 1964.
Johnstone, P. T. Topos Theory. Academic Press, New York, 1977.
Stone Spaces. Cambridge Univ. Press, Cambridge–New York–Melbourne, 1982.
Sketches of an Elephant. A Topos Theory Compendium. Two volumes, Oxford
University Press, Oxford, 2002.
Kelly, G. M. Basic Concepts of Enriched Category Theory.
Cambridge Univ. Press,
Cambridge–New York–Melbourne, 1982.
Kuroˇs, A. G., A. H. Livˇsic, E. G. ˇSul’geifer, and M. S. Calenko. Zur Theorie der Kat-
egorien, Mathematische Forschungsberichte, Vol. 15. Deutscher Verlag der Wis-
senschaften, Berlin, 1963.
Lambek, J. Completions of Categories. Lecture Notes in Mathematics, Vol. 24. Springer,
Berlin–Heidelberg–New York, 1966. tablecat.tex
Lambek, J., and P. J. Scott. Introduction to Higher-Order Categorical Logic.
Cam-
bridge Univ. Press, Cambridge–New York–Melbourne, 1986.
Leinster, Tom. Higher Operads, Higher Categories, Cambridge University Press, 2003.
Available from http://www.arxiv.org/abs/math.CT/0305049
Mac Lane, S. Categories for the Working Mathematician. Springer, Berlin–Heidelberg–
New York, 2nd ed., 1997.
Mac Lane, S., and I. Moerdijk. Sheaves in Geometry and Logic. Springer, Berlin–Hei-
delberg–New York, 1992.
Mal’cev, A. I. Algebraic Systems. Die Grundlehren der mathematischen Wissenschaften,
Vol. 192. Springer, Berlin–Heidelberg–New York, 1972.
McLarty, C. Elementary Categories, Elementary Toposes. Oxford University Press, Ox-
ford, 1992.
Makkai, M., and R. Par´e. Accessible Categories: The Foundations of Categorical Model
Theory. American Mathematical Society, 1989.
18th January 2005

472
BIBLIOGRAPHY
Manes, E. G. Algebraic Theories. Springer, Berlin–Heidelberg–New York, 1976.
Michor, P. W. Functors and Categories of Banach Spaces. Lecture Notes in Mathe-
matics, Vol. 651. Springer, Berlin–Heidelberg–New York, 1978.
Mitchell, B. Theory of Categories. Pure and Applied Mathematics 17. Academic Press,
New York, 1965.
Morita, K., and J. Nagata (editors). Topics in General Topology. North Holland, Am-
sterdam, 1989.
Pareigis, B. Categories and Functors. Academic Press, New York, 1970.
Popescu, N. Abelian Categories with Applications to Rings and Modules.
Academic
Press, New York, 1973.
Preuss, G. Theory of Topological Structures. Reidel, Dordrecht–Boston–Lancaster, 1988.
Pultr, A., and V. Trnkov´a. Combinatorial, Algebraic and Topological Representations
of Groups, Semigroups and Categories. North Holland, Amsterdam, 1980.
Richter, G. Kategorielle Algebra. Akademie Verlag, Berlin, 1979.
Rivano, N. S. Cat´egories Tannakiennes. Lecture Notes in Mathematics, Vol. 265. Sprin-
ger, Berlin–Heidelberg–New York, 1972.
Rosenthal, K. I. The Theory of Quantaloids. Pitman Research Notes in Mathematics
348, Longman, Harlow, 1996.
Salicrup, G. Categorical Topology – The Complete Work of Graciela Salicrup (ed. by
H. Herrlich and C. Prieto). Aportaciones Matem´atica, Vol. 2, 1988.
Schubert, H. Categories. Springer, Berlin–Heidelberg–New York, 1972.
Semadeni, Z. Projectivity, Injectivity, and Duality. Diss. Math. Rozprawy Mat., Vol.
35, 1963.
Banach Spaces of Continuous Functions.
Polish Scientiﬁc Publishers, Warsaw,
1971.
Semadeni, Z., and A. Wiweger. Einf¨uhrung in die Theorie der Kategorien und Funk-
toren. Teubner, Stuttgart–Leipzig, 1979.
S lominsky, J. The Theory of Abstract Algebras with Inﬁnitary Operations. Diss. Math.
Rozprawy Mat., Vol. 18, 1959.
Taylor, P. Practical Foundations of Mathematics. Cambridge University Press, 1999.
Wyler, O. Lecture Notes on Topoi and Quasitopoi.
World Scientiﬁc, Singapore-New
Jersey-London-Hong Kong, 1991.
18th January 2005

TABLES
FUNCTORS AND MORPHISMS: PRESERVATION PROPERTIES
monos
extr. monos
reg. monos
epis
extr. epis
reg. epis
topological
+
+
+
+
+
+
monadic
+
?
+
−
−
−
reg. monadic
+
+
+
−
+
+
reg. algebraic
+
+
+
−
+
+
algebraic
+
+
+
−
+
−
ess. algebraic
+
+
+
−
−
−
solid
+
+
+
−
−
−
full reﬂ. emb.
+
+
+
−
−
−
adjoint
+
−
+
−
−
−
faithful
−
−
−
−
−
−
FUNCTORS AND MORPHISMS: REFLECTION PROPERTIES
monos
extr. monos
reg. monos
epis
extr. epis
reg. epis
isos
topological
+
−
−
+
−
−
−
monadic
+
−
−
+
+
−
+
reg. monadic
+
−
−
+
+
+
+
reg. algebraic
+
−
−
+
+
+
+
algebraic
+
−
−
+
+
+
+
ess. algebraic
+
−
−
+
+
−
+
solid
+
−
−
+
−
−
−
full reﬂ. emb.
+
−
−
+
+
+
+
adjoint
−
−
−
−
−
−
−
faithful
+
−
−
+
−
−
−
473

474
TABLES
FUNCTORS AND LIMITS
creates
lifts uniquely
preserves
reﬂects
topological
−
+
+
−
monadic
+
+
+
+
ess. algebraic
+
+
+
+
solid, uniquely transp.
−
+
+
−
adjoint
−
−
+
−
FUNCTORS AND COLIMITS
lifts uniquely
preserves
detects
topological
+
+
+
monadic
−
−
−
solid
−
−
+
STABILITY PROPERTIES OF SPECIAL EPIMORPHISMS
composition
pushouts
cointersections
isomorphisms
+
+
+
retractions
+
−
−
reg. epis
−
+
−
strict epis
−
+
+
swell epis
+
+
+
strong epis
+
+
+
extr. epis
−
−
−
epis
+
+
+
18th January 2005

TABLE OF CATEGORIES
(A ↓K), 3K (objects over K)
Ab, 3.26 (abelian groups) 3.39, 4.17, 7.18, 7.69, 8.23, 9.3, 9.13, 9.17, 9.24, 9.28, 9A,
10G, 11O, 12.11, 14F, 16.13, 24A
AbTop, 16.13 (abelian topological groups)
AbTor, 10.20 (abelian torsion groups) 10.55, 13.2
Alg(1), 27.3 (algebras with one unary operator) 4K, 5O, 9.3, 27.12, 28.2, 28.9
Alg(S2), 5.38 (binary algebras)
Alg(T), 5.37 (T-algebras) 5G, 10U, 13N, 20.56, 20I
Alg(Σ), 3.26 (Σ-algebras) 8.41, 18.2, 21.20
Alg(Ω), 3.3 (Ω-algebras) 5O, 6I, 7.2, 7.40, 7.69, 7.72, 7O, 8.23, 8H, 9.28, 10.67, 10U,
16.19, 20.18, 24.5
Aut, 3.3 (automata) 4K, 5.2, 7.15, 13.13, 15.3, 20H
Autr, 8.31 (reachable automata) 18.2, 19.12
Ban, 3.3 (Banach spaces with linear contractions) 7.9, 7.18, 7.40, 7.50, 7.58, 9.3, 10.20,
10.31, 10J, 26.6
Banb, 3.3 (Banach spaces with bounded linear maps) 5.6, 7.9, 7.18, 7.40, 7.50, 7.58, 8.8,
8.23, 10.31, 10J, 13.18
(Ban, O), 5.2 (Banach spaces as a construct with unit ball functor) 6.11, 6E, 7.72, 8.8,
8.11, 8.23, 8K, 10.55, 10J, 20.36, 20.41, 23.20, 24C
(Ban, U), 5.2 (Banach spaces as a construct with usual forgetful functor) 6.11, 6E, 8.8,
8.23, 8K 10.55, 10J, 13.2, 18.2
Beh, 8.31 (behaviors) 18.2, 19.12
BiComp, 4F (bicompact spaces) 16.10
BiTop, 4F (bitopological spaces) 16.10
Boo, 3.20 (boolean algebras) 3.26, 3.39, 7.2, 7.18, 9.3, 9.13, 9A, 26.6
BooRng, 3.26 (boolean rings)
BooSpa, 3.39 (boolean spaces) 9.3, 9.18, 9.28, 10C, 12M, 23.6, 24.13
Bor, 22.2 (bornological spaces) 27.21, 28.20, 28.23
Cat, 3.47 (small categories); 5I, 7.40, 7.72, 7.76, 7S, 8.11, 8.23, 8C, 11J, 14.2, 14.23,
15.3, 15M, 24C, 27.3, 27.23, 28.9, 28.11
475

476
TABLE OF CATEGORIES
CAT, 3.50 (categories) 7.18, 7.33
CAT(X), 5.15 (concrete categories over X) 7.5, 9.24, 21.21, 21.22, 21J
Catof, 3.55 (object-free small categories); 5I, 20.36, 20.41 20.51, 20.52, 23.6, 23.20, 24D
CATof, 3.55 (object-free categories) 13.18
CBoo, 8E (complete boolean algebras) 8F, 8.23, 10S, 12.6, 12I, 18.13, 18G
Class, 15.3 (classes)
CLat, 4.3 (complete lattices with join- and meet-preserving maps) 8.23, 8G, 10S, 12.6,
12I, 18.13
Clos 5N (closure spaces)
Comp, 5A (compact spaces)
CONST, 5.15 (constructs)
Conv, 5N (convergence spaces) 27.3, 27.21, 28.9, 28.20, 28.23
∆Pos, 25E (∆-complete partially ordered sets) 27B
DivAb, 7.33(5) (divisible abelian groups)
DLat, 9.3 (distributive lattices)
DRail, 8.8 (derailed spaces) 11H
(F ↓G), 3K (comma category F over G)
FHaus, 7.65 (functionally Hausdorﬀspaces) 7I, 7J, 8.8
Field, 9.8 (ﬁelds) 9.17, 10I, 12.6, 16.13
Fram, 5L (frames) 8G, 20K, 24.13
Grp, 3.3 (groups) 4.17, 7.18, 7.58, 7C, 7H, 8.8, 9.3, 10.67, 14F, 16N, 17.5, 20.27, 23.34,
26.6
Grph, 20.41 (oriented graphs) 20.51, 20.52
Haus, 4.3 (Hausdorﬀspaces) 5O, 7.18, 7.40, 7.58, 8.8, 9.3, 9E, 11J, 13.2, 21.39
HausVec, 25.2 (Hausdorﬀtopological vector spaces)
HComp, 3.39 (compact Hausdorﬀspaces) 4.17, 4D, 7.58, 9.3, 9.18, 9.28, 9A, 9D, 10.18,
10.67, 10C, 12K, 20.27, 20.36, 21I, 23.13, 23.34, 24.5, 26.6
HCompop, 5M (as a construct)
hTop, 5J(d) (topological spaces and homotopy equivalence classes of maps) 7.33, 7.40
HUnif, 21.39 (separated uniform spaces)
JCPos, 4.3(3) (complete lattices and join-preserving maps) 4.17, 5N, 8.23, 8G, 9.3, 20.5,
22B, 24.5, 24.13
18th January 2005

TABLE OF CATEGORIES
477
JPos, 4.17(10) (posets and join-preserving maps) 8G, 12.6
(K ↓A), 3K (objects under K)
kTop, 27.3 ((compact Hausdorﬀ)-generated topological spaces) 7.52, 27.21, 28.9, 28.11,
28.20
Λ-CCPos, 15D (chain complete λ-posets and chain join-preserving λ-homomorphisms)
15.26, 15J, 18.16, 18B, 25.17, 26C
Lat, 4.3 (lattices) 7.40, 7.72, 9.13, 9H
Loc 5L (locales)
M-Act, 3.26 (M-actions)
Mat, 3.3 (matrices (as morphisms)) 3.35
MCPos, 5N (complete lattices and meet-preserving maps)
Met, 3.3 (metric spaces and non-expansive maps) 8.8, 9.3, 9.13, 9.17, 9.24, 10.31, 10.70
Metc, 3.3 (metric spaces and continuous maps) 3.35, 5.6, 5.34, 10.31
Metu, 3.3 (metric spaces and uniformly continuous maps) 10.31
Mod, 21D (modules)
Mod-R, 3.26 (right R-modules)
Mon, 4.3 (monoids) 4.17, 8.23, 14F, 20.5
Neigh, 5N (neighborhood spaces)
1, 3.3 (terminal category (with only one morphism))
Ord, 7.83 (ordinal numbers) 7.90, 12.6, 15.8, 18.13, 18.16
PAlg(Ω), 21.39 (partial algebras of type Ω)
pGrp, 3B (pointed groups)
PMet, 8.2 (pseudometric spaces) 8.11, 10.31, 10.42, 21.8
Pos, 4.3 (partially ordered sets = posets) 4.17, 6I, 7.18, 8.8, 8.23, 9.3, 9.13, 9.17, 10.39,
10.55, 10.64, 10.65, 10.66, 10.67, 10.68, 10.70, 11.12, 12.6 12.11, 13.2, 16.13, 20H,
21.22, 21.39, 25.9, 27.3, 27.10, 27.12
Prost, 4.3 (preordered sets) 4.17, 21.8, 22.2, 27.21, 28.11, 28.20
Prox, 21I (proximity spaces)
PrTop, 5N (pretopological spaces) 27G, 28.9, 28.20, 28C
pSet, 3B (pointed sets) 14F, 16.13, 23A, 28.9
PsTop, 4F (pseudotopological spaces) 22.2, 27.3, 27.21, 27G, 28.9, 28.20, 28.23, 28G
18th January 2005

478
TABLE OF CATEGORIES
pTop, 3B (pointed spaces)
Reg, 23.20 (regular topological spaces)
Reg1 21.39 (regular T1 topological spaces)
Rel, 3.3 (relations) 4.7, 4E, 5K, 5.12, 7.69, 8.8, 8.11, 13I, 18.2, 21.8, 21.37, 27.3, 28.2,
28.9, 28L
Rere, 27.21 (reﬂexive relations) 15L, 27.21, 28.20, 28.23, 28L
R-Mod, 3.26 (left R-modules)
Rng, 5.11 (rings) 7.2, 7.18, 7.40, 7.58, 8.8, 8.23, 21D, 23.18
Set, 3.3 (sets) 3.39, 4D, 4E, 6F, 6I, 7.18, 7.40, 7.48, 7.69, 9.3, 9.13, 9.17, 9A, 10.6, 10.20,
10.28, 10.64, 10.67, 11.4, 11.28, 11K, 11P, 12.11, 12E, 13.2, 13B, 13I, 14.2, 14B,
15.3, 15K, 15J, 16.5, 18.2, 18A, 18E, 19G, 20.22, 20H, 27.3, 28.2
Setop, 5.2(4) (as a construct)
Set2, (arrow category of Set, i.e., functions) 9E, 15N, 16I
Sgr, 4.3 (semigroups) 4.7, 6I, 7.18, 7.40, 7.58, 7.60, 8.23, 8B, 14.23, 14I, 16N
Σ-Seq, 3.3 (Σ-acceptors) 3.35, 4.17, 4.26, 4K, 7.2, 7.33, 7.58, 7.69, 8.8, 8.23, 8P, 9I,
10.20, 10.64, 10.70, 16.13, 26.6
Σ-Seq0, 10.18 (observable Σ-acceptors with no initial state)
Simp, 22.2 (simplicial complexes) 27.21, 28.20, 28.23
SLat, 4.3(3) (semi-lattices)
Spa(T), 5.40 (T-spaces) 5H, 6C, 6I, 7.2, 7R, 8.41, 10.42, 10.68, 13.13, 14.23, 18.2, 21.8,
22A, 22B, 27H, 27I, 28.17, 28H, 28J, 28K
sTop, 27.21 (sequential topological spaces) 4.26, 7.52, 27.21, 28.20
Sym, 4.26 (symmetric relations) 4E, 22.7, 27.10
TConv, 20.41 (totally convex spaces) 24.13
TfAb, 4.17 (torsion-free abelian groups) 7.40, 16N, 20.41, 20.45, 23.6
Top, 3.3 (topological spaces) 4E, 5.12, 5D, 7.18, 7.58, 7.60, 7.69, 7L, 8.8, 8.11, 8.23,
8.41, 9.3, 9.24, 9.26, 9E, 10.18, 10.42, 10.64, 10.66, 10.67, 10.70, 12.11, 13I, 13J,
14.2, 15.22, 15L, 16.25, 16D, 16L, 17.5, 18.2, 21.8, 21D, 22.7, 22C, 27.3, 27.23, 28.2
Topop, 3.20
Top0, 4.17 (T0 topological spaces) 5L, 7.18, 9.3, 9.24, 21.39
Top0op, 5L (as a construct) 20K
Top1, 7.73 (T1 topological spaces) 8.5, 9.3, 9F, 16.13, 21.8, 21.39
18th January 2005

TABLE OF CATEGORIES
479
Topm, 3.35 (metrizable topological spaces) 5.34
TopGrp, 5.2 (topological groups) 5A, 8.8, 18.2, 20.41, 21.8, 23.6, 23.20, 25.2, 25.9
TopVec, 5.2 (topological vector spaces)
Tych, 4.3 (Tychonoﬀspaces) 7.18, 9.3, 9.13, 9.21, 10.18, 10C, 14.2, 16F, 21.39
Unif, 9.3 (uniform spaces) 21.8, 21.39, 27.23
Vec, 3.3 (vector spaces) 3.20, 4H, 6I, 7.40, 7.58, 8.8, 8.23, 9.3, 9.13, 9.17, 9.28, 10.67,
10.70, 12.11, 13I, 14F, 16.5, 20.5, 20H, 26.6
18th January 2005

TABLE OF SYMBOLS
{x ∈X | P(x)}, 2.1
P(X), 2.1 (power set)
{X, Y }, 2.1
(X, Y ), 2.1 (ordered pair)
X ∪Y , 2.1 (binary union)
X ∩Y , 2.1 (binary intersection)
X × Y , 2.1 (binary cartesian product)
X \ Y , 2.1 (relative complement)
Y X, 2.1
{Xi | i ∈I}, 2.1
S
i∈I Xi, 2.1 (union)
T
i∈I Xi, 2.1 (intersection)
Q
i∈I Xi, 2.1 (cartesian product)
U
i∈I Xi, 2.1 (disjoint union)
N, 2.1 (natural numbers)
Z, 2.1 (integers)
Q, 2.1 (rational numbers)
R, 2.1 (real numbers)
C, 2.1 (complex numbers)
hom(A, B), 3.1 (hom-set)
id, 3.1 (identity)
◦, 3.1 (composition)
A
f
−→B, 3.1 (morphism)
Ob(A), 3.2 (class of A-objects)
Mor(A), 3.2 (class of A-morphisms)
dom(f), 3.2 (domain of f)
cod(f), 3.2 (codomain of f)
480

TABLE OF SYMBOLS
481
1, 3.3(4) (terminal category)
A × B, 3.3(4) (product of categories)
Aop, 3.5 (dual category)
(end of proof)
D, 3.7 (proof by duality)
A , 8.25 (footnote) (proof by analogy)
f−1, 3.12 (inverse of f)
P, 3.20(8) (covariant power-set functor)
Q, 3.20(9) (contravariant power-set functor)
Sn, 3.20(10) (nth power functor)
F n, 3.23 (nth composite of F)
F op, 3.41 (dual functor)
(F ↓G), 3K (comma category F over G)
(A ↓K), 3K (category of objects over K)
(K ↓A), 3K (category of objects under K)
A2 3K (arrow category of A)
| |, 5.3 (underlying functor)
A ≤B, 5.4 (order in a ﬁbre)
F ≤G, 5.18 (order of concrete functors)
τ op, 6.3 (dual natural transformation)
[A, B], 6.15 (functor quasicategory)
( ˆF, ˆG) ◦(F, G), 6.27 (composition of Galois correspondences)
(A, m) ≤(A′, m′), 7.79 (order of subobjects)
(e, B) ≥(e′, B′), 7.85 (order of quotient objects)
X
f
−→|A| = (f, A), 8.15 (structured arrow)
(A
fi
−−→Ai)I = (A, fi)I = (A, fi) = (A, (fi)i∈I), 10.1, 10.2 (source)
(Q Ai, πj)j∈I, 10.23 (product of objects)
⟨fi⟩, 10.23 (morphism induced by product)
A × B, 10.23 (binary product)
Πfi, f × g 10.34 (product of morphisms)
18th January 2005

482
TABLE OF SYMBOLS
AI, 10.37 (I-th power of A)
(µj, ` Ai)j∈I, 10.63 (coproduct of objects)
[fi], 10.63 (morphism induced by coproduct)
⨿fi, 10.63 (coproduct of morphisms)
A + B, f + g, 10.63 (binary coproduct)
IA, 10.63 (I-th copower of A)
∆A, 10V (diagonal morphism of A)
(X
fi
−−→GAi)i∈I, 17.2 (structured source)
ev: A × BA →B, 18.2, 27.2 (evaluation)
(η, ε) : F
 G : A →B, 19.3 (adjoint situation)
T = (T, η, µ), 20.1 (monad)
(XT, UT), 20.4 (category of T-algebras)
ConGen = ConGen(A) = the class of concretely generating structured arrows (in A)
Emb = Emb(A) = the class of embeddings (in A)
Epi = Epi(A) = the class of epimorphisms (in A)
ExtrEpi = ExtrEpi(A) = the class of extremal epimorphisms (in A)
ExtrGen = ExtrGen(A) = the class of extremally generating structured arrows (in A)
ExtrMono = ExtrMono(A) = the class of extremal monomorphisms (in A)
ExtrMono-Source = ExtrMono-Source(A) = the conglomerate of extremal
mono-sources (in A)
Final = Final(A) = the class of ﬁnal morphisms (in A)
Gen = Gen(A) = the class of generating structured arrows (in A)
Init = Init(A) = the class of initial morphisms (in A)
Iso = Iso(A) = the class of isomorphisms (in A)
Mono = Mono(A) = the class of monomorphisms (in A)
Mono-Source = Mono-Source(A) = the conglomerate of mono-sources (in A)
Mor = Mor(A) = the class of morphisms (in A)
NormalEpi = NormalEpi(A) = the class of normal epimorphisms (in A)
NormalMono = NormalMono(A) = the class of normal monomorphisms (in A)
Quot = Quot(A) = the class of quotient morphisms (in A)
18th January 2005

TABLE OF SYMBOLS
483
RegEpi = RegEpi(A) = the class of regular epimorphisms (in A)
RegMono = RegMono(A) = the class of regular monomorphisms (in A)
Retr = Retr(A) = the class of retractions (in A)
Sect = Sect(A) = the class of sections (in A)
Source = Source(A) = the conglomerate of sources (in A)
StableEpi = StableEpi(A) = the class of stable epimorphisms (in A)
StrictMono = StrictMono(A) = the class of strict monomorphisms (in A)
StrongMono = StrongMono(A) = the class of strong monomorphisms (in A)
Surj = Surj(A) = the class of surjective morphisms (in A)
SwellEpi = SwellEpi(A) = the class of swell morphisms (in A)
18th January 2005

INDEX
Absolute coequalizer, 20.14
Absolute colimit, 20.14
Absolute retract, 9.6
vs. enough injectives, 9.10
Adjoint, for a functor,19.10
Adjoint functor, 18.1 ﬀ
characterizations, 18.3
characterization theorems, 18.12,
18.14, 18.17, 18.19
comparison functor for, 20.38, 20.42
composition of, 18.5
monadic functor is, 20.12
between posets, 18H
preserves mono-sources and limits,
18.6, 18.9
smallness conditions for, 18B
theorem, concrete, 18.19
theorem, ﬁrst, 18.12
theorem, special, 18.17
vs. adjoint situation, 19.1, 19.4, 19.8
vs. algebraic category, 23.31
vs. co-adjoint functor, 18A, 19.1
vs. colimit, 18D
vs. co-wellpoweredness, 18.11, 18.14,
18.19
vs. completeness, 18.12, 18.14, 18.17,
18.19
vs. essentially algebraic functor, 23.8
vs. exponential functor, 27.7
vs. extremal monomorphism, 18J
vs. free object, 18.19
vs. full, faithful functor, 19I
vs. (Generating, M)-functor, 18.4
vs. monadic category, 20.46
vs. monadic functor, 20.12, 20.17
vs. reﬂection of epimorphisms, 18I,
19B
vs. regularly algebraic category, 23.38
vs. representable functor, 18C
vs. solid functor, 25.12, 25.19
vs. topologically algebraic functor,
25.3, 25.6, 25.19
vs. wellpoweredness, 18.19
Adjoint sequence, 19F
Adjoint situation, 19.3 ﬀ
alternative description, 19A
associated with a monad, 20.7
composition of, 19.13
consequences of, 19.14
duality for, 19.6
gives rise to a monad, 20.3
induced by (co-)adjoint functor, 19.7
lifting of, 21.26, 21.28
uniqueness, 19.9
vs. adjoint functor, 19.1, 19.4, 19.8
vs. equivalence functor, 19.8, 19H
vs. free object, 19.4
vs. Galois correspondence, 19.8
vs. indiscrete structure, 21A
vs. monad, 20A
vs. reﬂective subcategory, 19.4
vs. universal arrow, 19.7
Algebra, partial binary, 3.52
Algebraic category, 23.19 ﬀ, 23D
characterization theorem for, 23.30,
23.31
concrete functor between, 23.22
implies extremal epimorphisms are
ﬁnal, 23.23
vs. adjoint functor, 23.31
vs. (Epi, Mono-Source)-factorizable
category, 23.30, 23.31
vs. extremal co-wellpoweredness,
23.27
vs. extremal epimorphism, 23.30
vs. unique lift of (ExtrEpi,
Mono-Source)-factorizations, 23.31
Algebraic construct, = regular
epireﬂective subconstruct of monadic
construct, 24.3
484

INDEX
485
bounded, vs. bounded quasivariety,
24.11
vs. monadic construct, 23.41
Algebraic functor, 23.19 ﬀ
closed under composition, 23.21
need not preserve regular
epimorphisms, 23.25, 23J
reﬂects regular epimorphisms, 23.24
restrictions of, 23L
vs. composite of regular monadic
functors, 24.2
vs. regular epimorphism, 23J
vs. regular factorization, 24.2
vs. uniquely transportable functor,
23.30
Algebraic hull of a concrete category, 23K
Algebraic subcategory, conditions for,
23.32, 23.33
vs. extremally epireﬂective
subcategory, 23.33
Algebraic theory, 20C
Algebraic-topological decompositions,
26C
Algebraic-type functors, relationships
among, 23.42
Amnesticity, vs. lifting of limits, 13.21
Amnestic concrete category, 5.4 ﬀ
vs. Galois correspondence, 6.29–6.36
vs. topological functor, 21.5
vs. transportable concrete category,
5.29, 5.30
Amnestic functor, 3.27, 5.6, 13.21, 13.25,
13.28
Amnestic modiﬁcation, of a concrete
category, 5.6, 5.33, 5.34, 5F
Arrow,
costructured, = costructured arrow,
8.40
co-universal, = co-universal
costructured arrow, 8.40
reﬂection, = reﬂection arrow, 4.16
structured, = structured arrow, 8.15
universal, = universal structured
arrow, 8.22
Arrow category, 3K, 6.17
Associativity, composition of morphisms
has, 3.1, 3.53, 3C
Axiom, topological, 22.6
Axiom of choice, 2.3, 9A
Axiom of replacement, 2.2
Balanced category, 7.49 ﬀ
topological, scarcity of, 21N
vs. extremal monomorphism, 7.67
vs. mono-source, 10.12
Base category, 5.1 ﬀ
Bicoreﬂective subcategory,
vs. coreﬂective subcategory, 16.4
vs. separator, 16.4
Bimorphism, 7.49
vs. topological functor, 21M
Bireﬂective subcategory, 16.1
monoreﬂective subcategory is, 16.3
Birkhoﬀ-theorem, 16G
Boolean ring, 3.26, footnote
Cartesian closed category, 27.1 ﬀ
characterization theorem, 27.4
vs. coreﬂective hull, 27C
vs. products of epimorphisms, 27.8
vs. zero object, 27A
Cartesian closed construct, 27.16 ﬀ, 27D
vs. well-ﬁbred topological construct,
27.22
Cartesian closed subcategory, 27.9
vs. (co)reﬂective subcategory, 27.9
Cartesian closed topological category,
implies base category is cartesian
closed, 27.14
as injective object, 27F
Cartesian closed topological construct,
vs. powers with discrete exponents
(resp. factors), 27.24
18th January 2005

486
INDEX
Cartesian closed topological hull, 27G
Cartesian product of sets, 2.1
Categorical statement involving functors,
dual of, 3.40, 3.42
Category, 3.1 ﬀ
algebraic, = algebraic category,
23.19 ﬀ
of all categories, can’t be formed
because of set-theoretical
restrictions, 3.48
with all products must be thin, 10.32
alternative deﬁnition, 3C
arrow, 3K
base, = base category, 5.1 ﬀ
cartesian closed, = cartesian closed
category, 27.1
(co)complete, = (co)complete
category, 12.2
comma, 3K, 5.38, 21F
compact, 18K
of concrete categories, 5.15, 5C
concretely cartesian closed, =
concretely cartesian closed category,
27.11
concretizable, 5J
co-wellpowered, = co-wellpowered
category, 7.87
discrete, 3.26
dual, = opposite category, 3.5
Eilenberg-Moore, 20.4
(E, M), = (E, M)-category, 15.1 ﬀ
empty, 3.3(4)
essentially algebraic, = essentially
algebraic category, 23.5 ﬀ
(E, −)-structured, 14H
exact, 14F
extremally co-wellpowered, =
extremally co-wellpowered category,
7.87
extremally wellpowered, = extremally
wellpowered category, 7.82
ﬁnitary, 24.4, 24.7
ﬁnitely (co)complete, 12.2
free, 3A
functor-costructured, 5.43
functor-structured, =
functor-structured category, 5.40
graph of, 3A
isomorphic, 3.24
Kleisli, 20.39, 20B
large, 3.44
locally presentable, 20H
monadic, = monadic category, 20.8 ﬀ
non-co-wellpowered, 7L
object-free, = object-free category,
3.53
of objects over (resp. under) an
object, 3K
opposite, = opposite category, 3.5
pointed, 3B, 7B
product, 3.3(4)
is a quasicategory, 3.51
regular co-wellpowered, 7.87–7.89
regular wellpowered, 7.82, 7.88, 7.89
regularly algebraic, = regularly
algebraic category, 23.35 ﬀ
skeleton of a, 4.12–4.15, 4I
small, 3.44–3.45
of small categories, 3.47
— is a large category, 3.48
— vs. concrete category, 5I
solid, = solid category, 25.10 ﬀ
strongly (co)complete, = strongly
(co)com- plete category, 12.2
sub-, see Subcategory
terminal, 3.3(4)
thin, 3.26, 3.29, 3G
topological, = topological category,
21.7 ﬀ
topologically algebraic, =
topologically algebraic category,
25.1 ﬀ
total, 6I
of type 2, 3C
universal, 4J
universally topological, 28.16, 28.18,
28G
wellpowered, = wellpowered category,
18th January 2005

INDEX
487
7.82
Category theory, “object-free version”,
3.55
Choice, axiom of, 2.3, 9A
Class, 2.2
of all sets, = universe, 2.2
as a category, (is not a construct),
3.3(4)
large, = proper class, 2.2
preordered, 3.3(4)
proper, 2.2
small, = set, 2.2
Closed under the formation of
intersections, 11.26
Closed under the formation of M-sources,
16.7
and E-quotients, vs. E-equational
subcategory, 16.17
vs. E-reﬂective, 16.8
Closed under the formation of products,
and extremal subobjects, vs.
(epi)reﬂective subcategory, 16.9, 16.10
vs. E-equational subcategory, 16.17
Closed under the formation of pullbacks,
11.17
Closure space, 5N
Co-, see Dual concept
Co-adjoint, for a functor, 19.10
Co-adjoint functor, 18.1 ﬀ
vs. adjoint functor, 18A, 19.1, 19.2,
19.11
vs. colimit, 18D
vs. contravariant exponential functor,
27.7
Coarser than, (preorder) relation on
concrete functors, 5.18
Co-axiom, topological, 22.6
Cocomplete category, 12.2 ﬀ
almost implies complete, 12.7 ﬀ
with a small colimit-dense
subcategory is complete, 12.12
vs. cartesian closed category, 27.4
vs. colimit-dense subcategory, 12.12
vs. complete category, 12.13, 25K
vs. copower, 12H
vs. essentially algebraic category,
23.12, 23.13
vs. solid category, 25.15, 25.16
vs. topological category, 21.16, 21.17
Cocomplete subcategory, vs. reﬂective
subcategory, 12K
Cocone, = natural sink, 11.27
Codomain,
of a function, 2.1
of a morphism, 3.2
of a source, 10.1
of a sink, 10.62
of a structured source, 17.1
Coequalizer, 7.68 ﬀ
absolute, 20.14
as a colimit, 11.28
existence, 12.1, 15F
preservation, 13.1
split, 20.14
uniqueness, 7.70
vs. completeness, 12J
vs. epimorphism, 7M
vs. forgetful functor, 7.73
vs. isomorphism, 7.70
vs. monomorphism, 7.70
vs. pushout square, 11.33
Coessential morphism, w.r.t. a class of
morphisms, 9.27
Coessential quotient map, 9.27
Cointersection, 11.28
existence, 12.1
vs. (E, M)-category, 15.14, 15.15,
15.16
Colimit, 11.27 ﬀ
absolute, 20.14
concrete, 13.12
creation, 13.17
detected by regularly monadic
functor, 20.33
18th January 2005

488
INDEX
detection, = detection of colimit,
13.22
directed, = directed colimit, 11.28
domain of, 11.27
lifting of, 13.17
— vs. topological functor, 21.15
preservation, 13.1
— vs. topological functor, 21.15
reﬂection, 13.22
uniqueness, 11.29
vs. (co-)adjoint functor, 18D
vs. coproduct, 11.28
vs. monadic functor, 20.13
vs. reﬂection arrow, 13.30
Colimit-closed subcategory, vs. reﬂective
subcategory, 13.29
Colimit-dense full embedding, preserves
limits, 13L
Colimit-dense subcategory, 12.10
embedding of preserves limits, 13.11
vs. (co)completeness, 12.12
Comma category, 5.38, 3K, 21F
Commuting triangle and square, 3.4
Compact category, 18K
Comparison functor, 20.37 ﬀ
vs. adjoint functor, 20.42
vs. faithful functor, 20.43
vs. full functor, 20.43, 20.44
Complete category, 12.2 ﬀ
characterization, 12.3
and wellpowered category, is strongly
complete, 12.5
vs. adjoint functor, 18.12, 18.14,
18.17, 18.19
vs. cocomplete category, 12.13, 25K
vs. coequalizer, 12J
vs. colimit-dense subcategory, 12.12
vs. essentially algebraic category,
23.12, 23.13
vs. solid category, 25.15
vs. strongly complete category, 12.5,
12I
vs. topological category, 21.16, 21.17
Complete lattice, vs. has products, 10.32
Completion,
of abstract categories, 12L
regarded as reﬂection, 4.17
universal, 12M
Complex numbers, 2.1
Composite,
of (concrete) functors, 3.23, 5.14
— vs. natural transformation, 6.3
of epimorphisms, is epimorphism, 7.41
of essential embeddings, 9.14
of functions, 2.1
of isomorphisms, is isomorphism, 3.14
of monomorphisms, is
monomorphism, 7.34
of morphisms, 3.1
of natural transformations, 6.13
of sources, 10.3
— vs. (E, M)-category, 15.5
Composition, as a morphism, 27E
Composition of morphisms, 3.1 ﬀ
is associative, 3.1
in a quasicategory, 3.49
vs. (E, M)-category, 15.14, 15.15
vs. (E, M)-structured category, 14.6
Concept, (self-)dual, 3.7
Concrete adjoint functor, vs. concrete co-
adjoint functor, 21.24
Concrete category, 5.1 ﬀ
amnestic, = amnestic concrete
category, 5.4 ﬀ
amnestic modiﬁcation, 5.6, 5.33, 5.34
(A, U) has property P means A (or
U) has property P, 5.3
“concretely isomorphic” is stronger
than “isomorphic”, 5.12
duality principle for, 5.20
ﬁbre-complete, 5.7, 5.42
ﬁbre-discrete, 5.7, 5.8, 5.39
monadic, 20.8 ﬀ
over 1, vs. concrete functors, 5.11
over Set, = construct, 3.3(2), 5.1 ﬀ
solid, = solid concrete category,
18th January 2005

INDEX
489
25.10 ﬀ
strongly ﬁbre-small, 26.5
topological, = topological concrete
category, 21.7 ﬀ
(uniquely) transportable, 5.28, 5.35,
5.36
vs. Cat, 5I
Concrete co-adjoint functor,
vs. concrete adjoint functor, 21.24
vs. Galois correspondence, 21E
Concrete colimit, 13.12
Concrete coproduct, 13.12
Concrete coreﬂector, i.e., coreﬂector
induced by identity-carried
coreﬂection arrows, 5.22
Concrete co-wellpoweredness, 8.19
vs. extremal co-wellpoweredness, 8E
Concrete embedding, essential, 21J
Concrete equivalence, 5.13
Concrete functor, 5.9 ﬀ
between algebraic categories is
algebraic, 23.22
composite, 5.14
between constructs, 5D
between essentially algebraic
categories is essentially algebraic,
23.17
existence of a concrete natural
transformation between, 6.24
between regularly algebraic categories
is regularly algebraic, 23.40
speciﬁed by its values on objects,
5.10, 5.11
vs. embedding functor and equivalent
objects, 5.10
vs. monadic category, 20E
Concrete generation of an object, 8.15
vs. extremal epimorphism, 8.18
vs. (extremal) generation, 8.16
vs. universal arrow, 8.24
Concrete isomorphism, 5.12, 5N
Concrete limit, 13.12
characterized, 13.15
reﬂection of, 13C
two step construction, 13.16
vs. concrete colimit, 13.10
Concrete limit dense, 12M
Concretely cartesian closed category,
27.11
vs. discrete objects, 27.15
vs. topological category, 27.15
Concretely cartesian closed construct, vs.
subconstruct of Set, 27.16
Concretely complete, 12M
Concretely coreﬂective subcategory, 5.22
vs. topological subcategory, 21.33
Concretely co-wellpowered concrete
category, 8.19
Concretely co-wellpowered functor, 8.37
vs. (ConGen, Initial Mono-Source)
functor, 17.11
Concretely equivalent, is not symmetric,
5.13
Concretely generating structured arrow,
see Concrete generation of an object
Concretely reﬂective concrete
subcategory, 5.22
of amnestic category is full, 5.24
of non-amnestic concrete category
need not be full, 5.25, 4.21
vs. ﬁnally dense subcategory, 21.32
vs. initial source, 10.50
vs. initially closed subcategory, 21.31
vs. reﬂector, 5.26, 5.27, 5.31, 5.32
vs. topological (sub)category, 21.32,
21.33
Concrete natural transformation, 6.23
vs. concrete functors, 6.24
Concrete product, 10.52
as a concrete limit, 13.12
preserved by composition, 10.56
vs. has M-initial subobjects, 21.42
vs. initial source, 10.53
vs. monotopological construct, 21.42
18th January 2005

490
INDEX
Concrete quasitopos, vs. universally
topological category, 28.18
Concrete reﬂector, = reﬂector induced by
identity-carried reﬂection arrows,
5.22, 5E
vs. concrete functors that are
reﬂectors, 5.22
Concrete subcategory, 5.21 ﬀ
concretely (co)reﬂective, = concretely
(co)reﬂective subcategory, 5.22
Concretizable category, 5J, 10L
vs. separating set, 7Q
Cone, = natural source, 11.3
(ConGen, Initial
Mono-Source)-factorizable category,
17J
(ConGen, Initial Mono-Source)-functor,
vs. concretely co-wellpowered, 17.11
Conglomerate, 2.3
of all classes, 2.3
codability by, 2.3
(il)legitimate, 2.3
of morphisms between two objects in
a quasicategory, 3.49
of objects in a quasicategory, 3.49
small, 2.3
Congruence fork, 20.14
Congruence relation, 11.20
coequalizer of, vs. monadic construct,
20.35
vs. equalizer, 11.20
vs. monomorphism, 11.20, 11R
vs. pulation square, 11.33
Constant functions are morphisms, vs.
has function spaces, 27.18
Constant functor, 3.20(2)
Constant morphism, 7A, 10W
Construct, 3.3(2), 5.1 ﬀ
bounded, 24.11
concretely co-wellpowered, 8D
monadic, = monadic construct,
20.34 ﬀ
must be regular wellpowered and
regular co-wellpowered, 7.88
not determinated by object class,
3.3(2)
Contraction, 3.3(3)
Contravariant exponential functor, 27.5
vs. (co-)adjoint functor, 27.7
Contravariant hom-functor, 3.20(5)
Contravariant power-set functor, 3.20(9)
Copower, of an object, 10.63
non-existence, 10S
vs. cocompleteness, 12H
vs. free object, 10R
Coproduct, 10.63 ﬀ
concrete, 13.12
existence, 10I, 12.1, 12G
of functors, 10U
preservation of, 13.1
vs. colimit, 11.28
Coreﬂection, Galois, 6.26
Coreﬂection arrow, 4.25 ﬀ
Coreﬂective hull, vs. cartesian-closed
category, 27C
Coreﬂective modiﬁcation, of a concrete
category, 5.22, 5K
Coreﬂective subcategory, 4.27, 16.1 ﬀ
vs. bicoreﬂective subcategory, 16.4
vs. cartesian closed subcategory, 27.9
Coreﬂector for a coreﬂective subcategory,
4.27
Coreﬂector, concrete, 5.22
Coseparating set, 18L
Coseparator, 7.16
category with, is regular wellpowered
and regular co-wellpowered, 7.89
extremal, 10.17
is extremal in balanced category,
10.18
vs. faithful hom-functor, 7.17
vs. power of an object, 10.38
vs. topological category, 21.16, 21.17
18th January 2005

INDEX
491
Costructured arrow, 8.40
Costructured sink, 17.4
Co-unit of an adjunction, 19.3, 19J
Co-universal arrow, 8.40
vs. universal arrow, 19.1, 19.2
Covariant exponential functor, 27.5
Covariant hom-functor, 3.20(4)
Covariant power-set functor, 3.20(8)
Cover, projective, 9.27
Co-wellpowered category, 7.87 ﬀ
concrete, 8.19
vs. adjoint functor, 18.11, 18.14, 18.19
vs. cartesian closed category, 27.4
vs. (E, M)-category, 15.25, 15.26
vs. epireﬂective hulls, 16C
vs. essentially algebraic category,
23.14
vs. extensions of factorization
structures, 15.20, 15.21
vs. monadic category, 20.29
vs. topological category, 21.16, 21.17
vs. wellpoweredness, 12.13
Co-wellpowered functor, 8.37
concrete, 8.37
extremal, 8.37
implies domain is co-wellpowered, 8.38
vs. adjoint functor, 18.11, 18.14
vs. essentially algebraic category,
23.14
Creation of absolute coequalizers, vs.
monadic functor, 20.17
Creation of absolute colimits, 20.14
monadic functor does, 20.16
Creation of colimits, 13.17
Creation of (Extremal Epi,
Mono-Source)- factorizations, 23.31
Creation of ﬁnite limits, vs. monadic
construct, 20.35
Creation of isomorphisms, 13.35, 13M
vs. creation of limits, 13.36
vs. essentially algebraic functor, 23.8
vs. monadic functor, 20.12
vs. reﬂection of identities &
isomorphisms, 13.36
Creation of limits, 13.17, 13N
monadic functor does, 20.12
vs. creation of isomorphisms, 13.36
vs. essentially algebraic functor, 23.15
vs. lifts limits uniquely and reﬂects
limits, 13.20, 13.25
vs. reﬂection of isomorphisms, 13.25
Creation of split coequalizers, vs.
monadic functor, 20.17
Decomposition of functors, 3N
vs. factorization structure, 26A
Decomposition of Galois correspondence,
6.35
Decomposition theorems for solid
functors, 26.3, 26.4
Dense subcategory, 12D
Detection of colimits, 13.22
vs. reﬂective subcategory, 13.32
vs. solid functor, 25.14
Detection of limits, 13.22
vs. lifting of limits, 13.34
vs. solid functor, 25.14
Detection and preservation of limits,
vs. solid functor, 25.18, 25.19
vs. topologically algebraic functor,
25.18, 25.19
Detection of wellpoweredness, vs.
monadic functor, 20.12
Diagonal, 14.1, 14B, 15.1, 15K, 17.3, 17D
Diagonal morphism, 10V, 10W
Diagonalization property,
causes E and M to determine each
other, 15.5
(E, M), = (E, M)-diagonalization
property, 15.1
w.r.t. a functor, 17.3
Diagram, = functor, 11.1 ﬀ
18th January 2005

492
INDEX
limit of, 11.3
Directed colimit, 11.28, 11O
vs. ﬁnitary quasivariety, 24A
Discrete category, 3.26
Discrete functor, vs. topological functor,
21.12
Discrete object, 8.1, 8M
must be smallest element in the ﬁbre,
8.4
vs. concretely cartesian closed
subcategory, 27.15
vs. topological category, 21.11
Discrete quasicategory, 3.51
Discrete space functor, is a full
embedding, 3.29
Discrete terminal object, vs. has function
spaces, 27.18
Disjoint union, of a family of sets, 2.1
Dispersed factorization structure, 15L
Distributive law for cartesian closed
category, 27.8
Domain,
of a diagram, = scheme, 11.1
of a function, 2.1
of a morphism, 3.2
of a sink, 10.62
of a source, 10.1
of a structured source, 17.1
Dominion, 14J
Down-directed poset, 11.4
Dual of a categorical statement involving
functors, 3.40, 3.42
Dual category, = opposite category, 3.5
Dual concept, of a “categorical concept”,
3.7
Dual functor, = opposite functor, 3.41
Duality principle,
for categories, 3.7, 3E
for concrete categories, 5.20
for topological category, 21.10
Duality theories, vs. representability, 10N
Dually equivalent categories, 3.37, 3.38
Dual property, 3.7
Dual statement, of a “categorical
statement”, 3.7
(E, −)-category, 15B, 15D
E-equation, 16.16
E-equational subcategory, 16.16
vs. closed under the formation of M-
sources and E-quotients, 16.17
vs. closed under the formation of
products, 16.17
(E, −)-functor, 17.4
Eilenberg-Moore category, 20.4
E-implicational subcategory, 16.12
vs. E-reﬂective subcategory, 16.14
Elementhood-morphism, 28.11
Embeddable, fully, 4.6
Embedding functor, 3.27
closed under composition and ﬁrst
factor, 3.30
ﬁnally dense, 10.72
is (up to isomorphism) inclusion of
subcategory, 4.5
vs. faithful functor, 3.28, 4.5
vs. full functor, 3.29
vs. preservation of limit, 13.11
Embedding morphism, 8.6 ﬀ
in Cat, 8C
composition, 8.9
essential, 9.12
ﬁrst factor of, 8.9
vs. monomorphism, 8.7
vs. regular monomorphism, 8.7, 8A
vs. section, 8.7
Embedding, Yoneda, 6.19, 6J
(E, M)-category, 15.1
conditions on E, 15.14, 15.15
consequences of, 15.5
implies E ⊆Epi, 15.4
18th January 2005

INDEX
493
values for E and M, 15.8
vs. co-wellpowered category, 15.25,
15.26
vs. (E, M)-factorization, 15.10
vs. (E, M)-functor, 17.4
vs. extremally co-wellpowered
category, 15.25, 15.26
vs. mono-source, 15.6–15.9
vs. regular epimorphism, 15.7
vs. strongly complete category, 15.25,
15.26
vs. topological category, 21.14
(E, M)-diagonalization property, 14.1
(E, M)-diagonalization property, 15.1
(E, M)-factorization, 14.1
vs. (E, M)-structured category, 14.7
(E, M)-factorization, 15.1
uniqueness, 15.5
vs. (E, M)-category, 15.10
vs. faithful functor, 17.15, 17.16
vs. topological category, 21.16, 21.17
(E, M)-functor, = adjoint functor, 17.3,
18.3, 18.4
implies E ⊆Gen, 17.6
implies factorizations are essentially
unique, 17.7
implies M determines E, 17.7
M need not be closed under
composition nor determined by E,
17.8
not every functor is, 17.4
properties of, 17E
vs. (E, M)-category, 17.4
vs. has (E, M)-factorizations, 17.10
vs. topologically algebraic functor,
25.6
E-monad, 20.21 ﬀ
E-monadic functor, 20.21 ﬀ
lifts (E, M)-factorizations uniquely,
20.24
vs. reﬂective subcategory, 20.25
(E, Mono-Source)-category, vs. (Epi,
M)-category, 15.11
(E, Mono-Source)-functor, implies E ⊆
ExtrGen, 17.9
(E, Mono)-structured category, vs.
regular epimorphism, 14.14
Empty category, 3.3(4)
Empty source, 10.2
vs. product, 10.20
(E, M)-structured category, 14.1 ﬀ
consequences of, 14.6, 14.9, 14.11
duality for, 14.3
relationship to limits, 14.15 ﬀ
relationship to special morphisms,
14.10 ﬀ
uniqueness of factorizations, 14.4
vs. composition of morphisms, 14.6
vs. (E, M)-factorization property, 14.7
vs. (extremal) epimorphisms,
14.10–14.14
vs. extremal monomorphisms, 14.10
vs. isomorphisms, 14.5
Enough injectives, 9.9
vs. absolute retract, 9.10
vs. injective hull, 9D
(Epi, ExtrMono-Source)-category, vs.
(ExtrEpi, Mono-Source)-category,
15C
characterization, 15.16
strongly complete category is, 15.17
(Epi, ExtrMono)-structured category,
vs. equalizer, 14.19
vs. intersection, 14.19
(Epi, Initial Source)-factorizable category,
vs. topologically algebraic category,
25.6
(Epi, M)-category, characterization, 15.16
vs. (E, Mono-Source)-category, 15.11
(Epi, Mono-Source)-factorizations, vs.
monadic category, 20.49
(Epi, Mono-Source)-factorizable category,
vs. algebraic category, 23.30, 23.31
vs. essentially algebraic category, 23.8,
18th January 2005

494
INDEX
23.9
(Epi, Mono-Source)-factorizations, imply
(ExtrEpi, Mono-Source)-category,
15.10
Epimorphism, 7.38 ﬀ
closed under composition, 7.41
equals implication, 16.12
extremal, = extremal epimorphism,
7.74
as extremal monomorphism is
isomorphism, 7.66
for groups, 7H
preserved and reﬂected by equivalence
functor, 7.47
products of, 10D
reﬂected by faithful functor, 7.44
regular, = regular epimorphism, 7.71
as section is isomorphism, 7.43
split, = retraction, 7.24
stable, 11J
swell, 7.76, 15A
types, 7.76
vs. coequalizer, 7M
vs. (E, M)-category, 15.8, 15.14, 15.15
vs. (E, M)-structured category, 14.10
vs. equalizer, 7.54
vs. generating structured arrows, 8.16,
8.18, 8.36
vs. hom-functor, 19C
vs. quotient morphism, 8.12
vs. regular epimorphism, 7O
vs. retraction, 7.42
Epireﬂective hulls, vs.
co-wellpoweredness, 16C
Epireﬂective subcategory, 16.1 ﬀ
with bad behavior, 16A
regular, 16I
vs. closure under the formation of
products and extremal subobjects,
16.9, 16.10
vs. extremal mono-source, 16H
vs. strongly limit-closed subcategory,
16L
Epi-sink, 10.63
vs. pullback, 11I
Epi-transformation, 6.5, 7R
vs. adjoint situation, 19.14
Equalizer, 7.51 ﬀ
existence, 12.1
preservation of, 13.1, 13.3
and product, vs. pullback square,
11.11, 11.14
reﬂection of, 17.13
uniqueness, 7.53
vs. congruence relation, 11.20
vs. (Epi, ExtrMono)-structured
category, 14.19
vs. epimorphism and isomorphism,
7.54
vs. product and pullback square,
10.36, 11.14, 11S
vs. regular monomorphism, 13.6
Equation, = regular implication with free
domain, 16.16
Equational subcategory, 16.16
of Alg(Ω), char. 16.19
Equational subconstruct, vs. epireﬂective
subconstruct, 16.18
Equivalence,
natural, = natural isomorphism, 6.5
of quasicategories, 3.51
of “standard” and “object-free”
versions of category theory, 3.55
Equivalence functor, = full, faithful, and
iso-morphism-dense functor, 3.33, 3H
concrete, 5.13
is topologically algebraic, 25.2
preserves and reﬂects special
morphisms, 7.47
properties of, 3.36
vs. adjoint situation, 19.8, 19H
vs. natural isomorphism, 6.8
Equivalence relation on a conglomerate,
2.3
Equivalent categories, 3.33
18th January 2005

INDEX
495
dually, 3.37, 3.38
vs. isomorphic categories, 3.35
Equivalent objects, in a concrete
category, 5.4
E-reﬂective hull, = smallest E-reﬂective
subcategory, 16.21
characterization of members, 16.22
E-reﬂective subcategory, 16.1
intersection of, 16.20
vs. closure under the formation of
M-sources, 16.8
vs. E-implicational subcategory, 16.14
vs. E-monadic functor, 20.25
Essential embedding, 9.12
properties of, 9.14
Essential extension, 9.11, 9H
types of, 9.20
vs. injective object, 9.15
Essentially algebraic category, 23.5 ﬀ
characterization, 23.8
concrete functor between, 23.17
has coequalizers, 23.10
implies embeddings =
monomorphisms, 23.7
vs. completeness & cocompleteness,
23.12, 23.13
vs. co-wellpoweredness, 23.14
vs. monadic category, 23.16
vs. wellpoweredness, 23.12, 23.13
Essentially algebraic embedding, 23B
Essentially algebraic functor, 23.1 ﬀ
closed under composition, 23.4
detects colimits, 23.11
equivalent conditions, 23.2
is faithful adjoint functor, 23.3
preserves and creates limits, 23.11
is topologically algebraic, 25.2
vs. creates limits, 23.15
vs. monadic functor, 23C
vs. solid functor, 26.3
Essential morphism, w.r.t. a class of mor-
phisms, 9.22
Essential uniqueness, of universal arrow,
8.25, 8.35
(E, −)-structured category, 14H
Evaluation morphism, 27.2
Exact category, 14F
Exponential functors, 27.5
Exponential law for cartesian closed
category, 27.8
Exponential morphism, 27.2
Extension, injective, 9.11
Extensional topological construct & hull,
28B, 28C
Extension of a factorization structure,
15.19 ﬀ
equivalent conditions for, 15.20
vs. has products, 15.19, 15.21
Extension of an object, 8.6
Extremal coseparator, 10.17
characterization, 10B, 10C
Extremal co-wellpoweredness, 7.87 ﬀ, 23I
detected by regularly monadic
functor, 20.31
vs. concrete co-wellpoweredness, 8E
vs. monadic category, 20.48
Extremal epimorphism, 7.74 ﬀ
is ﬁnal morphism in algebraic
category, 23.23
preservation & reﬂection of, vs.
regularly monadic category, 20.30
preservation & reﬂection of, vs.
regularly algebraic category, 23.38
reﬂection of, 17.13
vs. concrete generation, 8.18
vs. (E, M)-category, 15.8
vs. (E, M)-structured category, 14.12,
14.13, 14.14
vs. extremally generating structured
arrows, 8.16, 8.18, 8.36
vs. ﬁnal morphism, 8.11(5)
vs. pullbacks and products, 23.28,
23.29
vs. quotient morphism in algebraic
18th January 2005

496
INDEX
category, 23.26, 23G
vs. regular epimorphism, 7.75, 21.13
vs. topological category, 21.13
Extremal epi-sink, 10.63
Extremal generation of an object, 8.15
vs. concrete generation, 8.16
vs. extremal epimorphism, 8.16, 8.18
Extremally co-wellpowered category, 7.87
vs. algebraic category, 23.27
vs. (E, M)-category, 15.25, 15.26
Extremally co-wellpowered functor, 8.37
Extremally epireﬂective subcategory,
16.1 ﬀ
characterization, 16M
vs. algebraic subcategory, 23.33
Extremally generating structured arrow,
8.15
with respect to a functor, 8.30
Extremally monadic construct, is
topologically algebraic, 25.2
Extremally monadic functor, 20M, 23N
Extremally projective object, 23H
Extremally reducible conglomerate of
sinks, 28.13
Extremally wellpowered category, 7.82 ﬀ
vs. wellpowered category, 7.83
Extremal monomorphism, 7.61 ﬀ
closure under composition and
intersections, 14.18
composite need not be extremal, 7N
as epimorphism is isomorphism, 7.66
preserved by solid functors, 25.21
products of, 10D
vs. adjoint functor, 18J
vs. balanced category, 7.67
vs. (E, M)-diagonalization property,
14.18
vs. (E, M)-structured category, 14.10
vs. extremal mono-source, 10.26
vs. monadic functor, 20O
vs. regular monomorphism, 7.62, 7.63,
12B, 14.20, 14I, 21.13
vs. topological category, 21.13
Extremal mono-source, 10.11 ﬀ
characterization, 10A
not preserved by composition, 10.14,
7N
preserved by ﬁrst factor, 10.13
vs. (E, M)-category, 15.8
vs. epireﬂective subcategory, 16H
vs. extremal monomorphism, 10.26
vs. product, 10.21
vs. pullback square, 11.9
vs. subsource, 10.15
Extremal partial morphism, 28.1
Extremal quotient object, 7.84
Extremal reducibility of ﬁnal sinks, 28.19
Extremal separator, 10.63
characterization, 10B, 10C
Extremal subobject, 7.77
Extremal-subobject classiﬁer, 28.11
(ExtrEpi, Mono-Source)-category, vs.
(Epi, ExtrMono-Source)-category,
15C
(ExtrGen, Mono)-factorization, 17I
(ExtrGen, Mono-Source)-functor, 17K
vs. preservation of strong limits,
17.11, 17H
Factorization lemma, 14.16
Factorization structure for morphisms,
14.1 ﬀ, 14A
extension of, to a factorization
structure for sources, 15.24
Factorization structure, 15.1 ﬀ
dispersed, 15J
for empty sources, 15.2, 15G
extensions of, 15.19 ﬀ
w.r.t. a functor, 17.3
— existence, 17C
— two methods, 17.5
inheritance, 16B
for sinks, 15.2
for small sources, 15J
18th January 2005

INDEX
497
for 2-sources, 15I
vs. decomposition of functors, 26A
vs. monadic category, 20.28
Faithful functor, 3.27 ﬀ, 7G
characterization, 8N
closed under composition, 3.30
is isomorphism iﬀfull and bijective on
objects, 3.28
means epimorphisms are generating,
8.32
monadic functor is, 20.12
reﬂects epimorphisms, 7.44
reﬂects monomorphisms, 7.37
reﬂects mono-sources, 10.7
topological functor is, 21.3
vs. adjoint situation, 19.14
vs. comparison functor, 20.43
vs. concrete functor, 5.10
vs. embedding functor, 3.28, 3.29, 4.5
vs. (E, M)-factorization, 17.15, 17.16
vs. essentially algebraic functor, 23.2
vs. inclusions of subcategories, 4.5
vs. initial source, 10.59
vs. reﬂection of equalizers, 13.24,
17.13, 17.14
vs. reﬂection of (extremal)
epimorphisms, 19.14
vs. reﬂection of products, 10.60
vs. reﬂection of special morphisms,
17G
vs. solid functor, 25.12
vs. thin category, 3.29, 3G
vs. topologically algebraic functor,
25.3
Fibre of a base object, 5.4, 5A
largest element need not be discrete,
8.5
order on, 5.4
Fibre-complete concrete category, 5.7
functor-structured categories are, 5.42
Fibre-discrete concrete category, means
ﬁbres are ordered by equality, 5.7
categories of T-algebras are, 5.39
concrete category is, iﬀforgetful
functor reﬂects identities, 5.8
Fibre-small concrete category, 5.4, 5.6
monadic category is, 20.12
Fibre-small topological category, 21.34 ﬀ,
21B
Final lift, vs. topological category, 21.34
Finally closed subcategory, 21.29
vs. concretely coreﬂective
subcategory, 22.8
Finally dense embedding, 10.72
Finally dense subcategory, 10.69
vs. concretely reﬂective subcategory,
21.32
vs. preserves initial sources, 10.71
vs. topological category, 21.32
Final morphism, 8.10 ﬀ
composition of, 8.13
is extremal epimorphism in algebraic
category, 23.23
ﬁrst factor of, 8.13
products of, 28J
vs. extremal epimorphism, 8.11(5)
vs. isomorphism, 8.14
vs. monadic category, 20.28
vs. regular epimorphism, 8.11(4), 8O,
20.51
Final quotient object, 8.10
Final sink, 10.63 ﬀ
reducibility of, vs. representable
partial morphisms, 28.15
Finer than, (preorder) relation on
concrete functors, 5.18
Finitary category, 24.4
= ﬁnitary variety, if monadic, 24.7
Finitary functor, 24.4
Finitary monad, 24.4
Finitary quasivariety, 16.12
axiomatic descriptions, 23.30, 23.31,
23.38, 24.9, 24.10,
characterization theorem, 24.9
18th January 2005

498
INDEX
= ﬁnitary and algebraic category, 24.9
= regular epireﬂective subconstruct of
some ﬁnitary monadic construct,
24.9
vs. directed colimit, 24A
vs. ﬁnitary variety, 16K, 16N, 24.9
Finitary variety, 16.16
axiomatic descriptions, 20.35, 23.40,
24.7, 24.8
characterization theorem for, 24.7
is monadic, 20.20
vs. ﬁnitary quasivariety, 16K, 16N,
24.9
vs. monadic category, 24.7
Finitely (co)complete category, 12.2
characterization, 12.4
Finitely complete category, vs. has ﬁnite
products and representable M-partial
morphisms, 28.5, 28.6
Finite product, 10.29
vs. product and projective limit, 11B
Forgetful functor, 3.20(3), 5.1 ﬀ
vs. coequalizer, 7.73
vs. regular epimorphism, 7.73
vs. topological construct, 21L
Fork, congruence, 20.14
split, 20.14
Frame, 5L, 8G
Free automata, 8P
Free category, 3A
Free functor, 19.4
Free monad, 20.55
vs. varietor, 20.56, 20.57, 20.58
Free object, 8.22, 8F–8L
existence, 18.15
retract of, 9.29
vs. adjoint functor, 18.19
vs. adjoint situation, 19.4
vs. copower, 10R
vs. initial object, 8.23
vs. monomorphism, 8.28, 8.29
vs. preservation and reﬂection of
mono-sources, 18.10
vs. projective object, 9.29, 9.30
vs. representable forgetful functor,
8.23
vs. wellpoweredness, 18.10
Full embeddability of familiar constructs,
4.7, 4K
Full embedding functor, 4.6
vs. comparison functor, 20.44
vs. inclusion of a full subcategory, 4.5,
4.6
Full faithful functor,
is isomorphism iﬀbijective on objects,
3.28
properties of, 3.31
reﬂects isomorphisms, 3.32
vs. adjoint situation, 19.14
Full functor, 3.27 ﬀ
closed under composition, 3.30
second factor of is not always full, 3.30
vs. comparison functor, 20.43
Full reﬂective embedding,
is topologically algebraic, 25.2
vs. solid functor, 26.1
Full reﬂective subcategory,
characterization, 4.20
Full subcategory, 4.1 ﬀ, 4C
isomorphism-closed, 4.9, 4B
isomorphism-dense, 4.9
vs. concretely reﬂective subcategory
of amnestic category, 5.24
Function,
between classes, 2.2
between conglomerates, 2.3
between sets, 2.1
Functor, 3.17 ﬀ
adjoint, = adjoint functor, 18.1 ﬀ
algebraic, = algebraic functor, 23.19 ﬀ
co-adjoint, = co-adjoint functor,
18.1 ﬀ
comparison, = comparison functor,
20.37 ﬀ
18th January 2005

INDEX
499
composite of, 3.23
concretely co-wellpowered, 8.37
constant functor, 3.20(2)
contravariant hom-functor, 3.20(5)
contravariant power-set functor,
3.20(9)
coproduct of, 10U
coreﬂector for a coreﬂective
subcategory, 4.27
covariant hom-functor, 3.20(4)
covariant power-set functor, 3.20(8)
co-wellpowered, implies domain
co-well- powered, 8.37, 8.38
decomposition of, 3N
discrete space, 3.29
dual, = opposite functor, 3.41
duality functor for vector spaces,
3.20(12)
(E, −), = (E, −)-functor, 17.4
embedding, = embedding functor,
3.27
is embedding iﬀfaithful and injective
on objects, 3.28
(E, M), = (E, M)-functor, 17.3 ﬀ
E-monadic, = E-monadic functor,
20.21 ﬀ
equivalence, = equivalence functor,
3.33
essentially algebraic, = essentially
algebraic functor, 23.1 ﬀ
exponential, 27.5
extremally co-wellpowered, 8.37
faithful, = faithful functor, 3.27
as family of functions between
morphism classes, 3.19
ﬁnitary, 24.4
forgetful functor, = underlying or
forgetful functor, 3.20(3), 5.1
free, 19.4
full, = full functor, 3.27
fundamental group, 3.22
identity, 3.20(1)
inclusion, 4.4
indiscrete space, 3.29, 21.12
inverse, 3.25
isomorphism, 3.24
is isomorphism iﬀfull, faithful, and
bijective on objects, 3.28
isomorphism-dense, 3.33
monadic, = monadic functor, 20.8 ﬀ
M-topological, 21K
naturally isomorphic to idA, 6D
need not reﬂect isomorphisms, 3.22
notation, 3.18
nth power functor, 3.20(10)
object-free, 3.55
object-part determined by the
morphism-parts, 3.19
opposite, = opposite functor, 3.41
preserves isomorphisms, 3.21
between quasicategories, 3.51
regularly algebraic, = regularly
algebraic functor, 23.35 ﬀ
regularly monadic, = regularly
monadic functor, 20.21 ﬀ
representable, = representable
functor, 6.9
solid, = solid functor, 25.10 ﬀ
Stone-functor, 3.20(11)
topologically algebraic, =
topologically algebraic functor,
25.1 ﬀ
topological, = topological functor,
21.1 ﬀ
underlying, = forgetful functor,
3.20(3), 5.1
vs. reﬂection of identities, 3D
Functor-costructured category, 5.43
Functor quasicategory, 6.15, 6H
full embedding of any category into,
6.20
Functors, relationships among, 25.22
Functor-structured category, 5.40, 6C,
28K
cartesian closed, 27I
characterization, 22A
reﬂective subcategory of, vs. solid
18th January 2005

500
INDEX
strongly ﬁbre-small category, 26.7
Galois adjoint, = residual functor, 6.25
Galois adjunction, 19D
Galois co-adjoint, = residuated functor,
6.25
Galois connection, 6.26, 6G
composition of, 6.27(1)
dual of, 6.27(2)
Galois coreﬂection, 6.26, 6.35
Galois correspondence, 6.25, 19E
between amnestic concrete categories,
6.29–6.36
decomposition of, 6.35
equivalently described, 6.28
for constructs, 6.26
theorem, 21.24
vs. adjoint situation, 19.8
vs. concrete co-adjoint, 21E
vs. initial source preservation, 10.49,
21.24
Galois isomorphism, 6.26, 6.35
Galois reﬂection, 6.26
characterization, 6.34
vs. decomposition of Galois
correspondence, 6.35
(Generating, −)-factorizable functor,
composites of, 17B
(Generating, −)-factorization, for
2-sources implies preservation of
mono-sources, 17.12
(Generating, M)-functor, vs. adjoint
functor, 18.4
(Generating, Mono-Source)-factorizations
of 2-sources, vs. reﬂection of
isomorphisms, 17.13
Generating structured arrow, 8.15 ﬀ
characterization, 17A
concretely, 8.15
extremally, 8.15
strongly generating structured arrow
is, 25.5
w.r.t. a functor, 8.30
Generation,
vs. concrete generation, 8.16
vs. epimorphism, 8.16, 8.18
Graph of a category, 3A
Has a separator, vs. cartesian closed
category, 27.4
Has coequalizers, 12.1
vs. regularly algebraic category, 23.38
Has concrete (co)limits, 13.12
Has concrete products, 10.54
Has (E, M)-factorizations, vs.
(E, M)-functor, 17.10
w.r.t. a functor, 17.3
vs. adjoint functor, 18.3
Has enough injectives, 9.9, 9.22
Has equalizers, 12.1
and (ﬁnite) products, means (ﬁnitely)
complete, 12.3, 12.4
Has (ﬁnite) (co)intersections, 12.1
Has (ﬁnite) (co)products, 10.29, 12.1
Has ﬁnite intersections,
and ﬁnite products, means ﬁnitely
complete, 12.4
and products, means complete, 12.3
Has ﬁnite products, and representable
M-partial morphisms, vs. ﬁnitely
complete, 28.5, 28.6
Has free objects, 8.26
Has function spaces, 27.17
vs. constant functions are morphisms,
27.18
vs. discrete terminal objects, 27.18
vs. topological category, 27.22
Has limits, vs. (E, M)-structured, 14.17
Has M-initial subobjects, vs. concrete
products, 21.42
Has products, 10.29
of all sizes, implies thin category,
10.32
18th January 2005

INDEX
501
and equalizers (resp. intersections),
means complete, 12.3
vs. extension of factorization
structure, 15.19, 15.21
Has pullbacks, 12.1
and a terminal object, means ﬁnitely
complete, 12.4
Has pushouts, 12.1
Has regular factorizations, 15.12
vs. regularly monadic functor, 20.32
Has representable M-partial morphisms,
28.1
consequences of, 28.3
Has small concrete colimits,
characterized, 13.14
Hewitt, E. see Duality principle
Hom-functor, 3.20(4), 3.20(5)
preserves limits, 13.7
vs. (co)separator, 7.12, 7.17
vs. epimorphism, 19C
vs. limit, 13H
vs. product, 10E, 10F
vs. quasicategory, 3.51
vs. set-valued functor, 6.18
Hull,
algebraic, 23K
E-reﬂective, = E-reﬂective hull, 16.21
injective, 9.16
Idempotent monad, 20F
Identity-carried A-morphism, 5.3
Identity-carried reﬂection arrow, see
Concretely reﬂective concrete
subcategory
Identity functor, 3.20(1), 5.14
Identity morphism, 3.1 ﬀ
in a category, as unit in the
corresponding object-free category,
3.54
reﬂection, 3D
vs. isomorphism, 3.13
vs. object, 3.19
vs. subcategory, 4A
Identity natural transformation, 6.6
Illegitimate conglomerate, 2.3
Illegitimate quasicategory, 6.16
Image of the indexing function, 2.1
Image, inverse 11.19
Implication, = epimorphism, 16.12
satisfaction of, 16.12
Implicational subcategory, 16.12
Inclusion functor, 4.4
Indiscrete object, 8.3
must be largest element in the ﬁbre,
8.4
preservation, 21.23
vs. initial source, 10.42
vs. initial subobjects, 21.35
vs. topological category, 21.11, 21.35
Indiscrete space functor,
is a full embedding, 3.29
vs. topological functor, 21.12
Indiscrete structure, vs. adjoint situation,
21A
vs. topological functor, 21.18, 21.19,
21.20
Inductive limit, 11.28
Initial completion, 21G
Initiality-preserving concrete functor,
preserves indiscrete objects, 21.23
Initial lift, vs. topological category, 21.34
Initially closed subcategory, 21.29
of a topological category is
topological, 21.30
vs. concretely reﬂective subcategory,
21.31, 22.3, 22.4
Initially dense subcategory, 10.69
Initial morphism, 8.6
composition of, 8.9
ﬁrst factor of, 8.9
universally, 10P
vs. injective morphism, 8B
vs. isomorphism, 8.14
18th January 2005

502
INDEX
Initial object, 7.1
uniqueness, 7.3
vs. free object, 8.23
vs. limit, 11A
Initial source, 10.41
composition of, 10O
domain of, 10.43
preservation, 10.47
— vs. Galois correspondence, 21.24
preserved by composition, 10.45
preserved by ﬁrst factor, 10.45
vs. concrete product, 10.53
vs. concretely reﬂective subcategory,
10.50
vs. faithful functor, 10.59
vs. ﬁnally dense subcategory, 10.69
vs. indiscrete object, 10.42
vs. initial subsource, in a ﬁbre-small
topological category, 21.36
vs. mono-source, 17.13
vs. subsource, 10.46
w.r.t. a functor, 10.57
Initial subobject, 8.6
vs. indiscrete object, 21.35
vs. monotopological construct, 21.42
vs. topological category, 21.35
Initial T-algebra, 20I
Injection morphism, 10.63
Injective, enough, 9.9, 15H
Injective automata, 9I
Injective extension, 9.11
types of, 9.20
Injective hull, 9.16
w.r.t. a class of morphisms, 9.22
existence, 9C
for ﬁnitary varieties, 16J
uniqueness, 9.19
vs. enough injectives, 9D
Injective morphism, vs. initial morphism,
8B
Injective object, 9.1
is an absolute retract, 9.7
in CAT, vs. topological category,
21.21
characterization, 9B
w.r.t. a class of morphisms, 9.22
preserved by product, 10.40
terminal object is, 9.4
in topological construct, 28A
vs. essential extension, 9.15
vs. maximal essential extension, 9F
vs. reﬂective subcategory, 9.25
vs. retract, 9.5
Injectivity class, 9.26
Insertion of generators, 19.4
Intersection, of a family of sets, 2.1
Intersection of subobjects, 11.23
closure under the formation of, 11.26
existence, 12.1
as pullback, 11F
vs. (E, M)-structured category, 14.15
vs. (Epi, ExtrMono)-structured
category, 14.19
vs. isomorphism, 11.25
vs. limit, 11.25
vs. regular subobject & section, 11K
Inverse functor, unique determination,
3.25
Inverse image, of a subject, 11.19
Inverse of an isomorphism, notation, 3.12
Inverse limit, 11.4
Inverse of a morphism, 3.8
uniqueness, 3.11
“is equivalent to”, is equivalence relation
on categories, 3.34
“is isomorphic to” is an equivalence
relation on categories, 3.25
Isomorphic, “is isomorphic to” is an
equivalence relation on categories,
3.25
concretely, 5.12
naturally, 6.5
Isomorphic categories, 3.24, 3.25
vs. equivalent categories, 3.35
18th January 2005

INDEX
503
Isomorphic objects, 3.15
yields equivalence relation on the
object class, 3.16
Isomorphic structured arrows, 8.19, 8.34
Isomorphism, 3.8 ﬀ, 3F
in a category, vs. isomorphic objects,
3.15
composite of, is an isomorphism, 3.14
concrete, 5N
creation, 13.35, 13M
functor is isomorphism iﬀfull,
faithful, and bijective on objects,
3.28
functors need not reﬂect, 3.22
Galois, 6.26
inverse is an isomorphism, 3.14
natural, 6.5
non-concrete, 5B
is 1-product, 10.20
preserved and reﬂected by equivalence
functor, 7.47
preserved by functors, 3.21
preserved by products, 10.35
reﬂection of, 13.35, 13F
vs. coequalizer, 7.70
vs. (E, M)-category, 15.5
vs. epimorphism, 7.43, 7.66
vs. equalizer, 7.54
vs. extremal monomorphism, 7.66
vs. ﬁnal morphism, 8.14
vs. identity morphism, 3.13
vs. initial morphism, 8.14
vs. intersection, 11.25
vs. monomorphism, 7.36
vs. product source, 10.26
vs. retraction, 7.36
vs. section, 7.43
Isomorphism-closed (full) subcategory,
4.9, 4B
Isomorphism-closed full subcategory, vs.
limit-closed, 13.27
Isomorphism-dense full subcategory, 4.9,
4.10, 4.12
Isomorphism-dense functor, 3.33
Isomorphism functor, 3.24
closed under composition, 3.30
is isomorphism in CAT, 3.51
Iso-transformation, 6.5
Kernel, 7C
vs. pullback, 11E
Kleisli category, 20.39, 20B
Large category, 3.44
Large class, 2.2
Largest essential extension, 9.20
Left adjoint, = co-adjoint, 19.11
Left inverse of a morphism, vs. right
inverse, 3.10
Legitimate conglomerate, 2.3
Legitimate quasicategory, 6.16
Lifting of an adjoint situation, 21.26
vs. topological category, 21.28
Lifting of colimits, 13.17
Lifting of (E, M)-factorizations, uniquely,
20.23
vs. E-monadic functor, 20.24
Lifting of (Extremal Epi,
Mono-Source)-factorizations uniquely,
vs. algebraic category, 23.31
Lifting of limits, 13.17
uniquely, and reﬂect limits, vs. create
limits, 13.25
vs. amnesticity, 13.21
vs. create limits, 13.20
vs. detect limits, 13.34
vs. preserve small limits, 13.19
vs. reﬂect limits, 13.23
vs. transportability, 13E
Limit-closed subcategory, 13.26, 13I, 13J
vs. isomorphism-closed subcategory,
13.27
Limit-dense subcategory, rarity, 12E
18th January 2005

504
INDEX
Limit (of a diagram), 11.3 ﬀ
concrete, = concrete limit, 13.12
construction via large colimits, 12.7
creation, 13.17
detection, = detection of limit, 13.22
is extremal mono-source, 11.6
inductive, 11.28
inverse, 11.4
lifting of, 13.17, 13D, 13E
— vs. topological functor, 21.15
preservation of, = preservation of
limit, 13.1 ﬀ, 13B
— vs. preservation of monos, 13.5
— vs. preservation of strong limits,
13.1
— vs. topological functor, 21.15
projective, 11.4, 11B
reﬂection of, 13.22, 13G, 17.13
uniqueness, 11.7
vs. factorization, 14.16
vs. hom-functors, 13H
vs. initial object, 11A
vs. intersection, 11.25
vs. pullback square, 11.9
vs. reﬂective subcategory, 13.28
Locally presentable category, 20H
Mac Neille completion, 21H
vs. solid category, 25G
M-action, category of all M-actions and
action homomorphisms, 3.26
Map, quotient, = quotient map, 9.27
Matching condition, see Object-free
category
Maximal essential extension, 9.20
vs. injective object, 9F
Minimal injective extension, 9.20
vs. smallest injective extension, 9G
M-initially closed subcategory, vs.
concretely E-reﬂective subcategory,
22.9
Modiﬁcation, amnestic, = amnestic
modiﬁcation, 5.6, 5.33, 5.34, 5F
Modiﬁcations of structure, vs.
(co)reﬂective subcategory, 4.17, 4.26
Monad, 20.1 ﬀ
associated with an adjoint situation,
20.3, 20A
ﬁnitary, 24.4
gives rise to an adjoint situation, 20.7
idempotent, 20F
on Set, is ﬁnitary if and only if the
associated construct is ﬁnitary, 24.6
— is regular, 20.22
regular, 20.21
trivial, 20.2
with rank, 20G
Monadic concrete category, 20.8 ﬀ
cocompleteness of, 20D
∼= its associated category of algebras,
20.40
properties of, 20.12
vs. adjoint functor, 20.46
vs. concrete functor, 20E
vs. co-wellpoweredness, 20.29
vs. (Epi,Mono-Source)-factorization,
20.49
vs. essentially algebraic category,
23.16
vs. extremal co-wellpoweredness,
20.48
vs. factorization structure, 20.28
vs. ﬁnal morphism, 20.28
vs. ﬁnitary variety, 24.7
vs. monadic subcategory, 20.19
vs. reﬂective subcategory, 20.18
vs. varietor, 20.56, 20.57, 20.58
Monadic construct, 20.34 ﬀ
bounded, vs. bounded variety, 24.11
characterization theorem for, 20.35
is complete, cocomplete, wellpowered,
co-wellpowered, and has regular
factorizations, 20.34
is regularly algebraic, 23.37
vs. algebraic construct, 23.41
18th January 2005

INDEX
505
vs. coequalizer of congruence relation,
20.35
vs. creation of ﬁnite limits, 20.35
Monadic functor, 20.8 ﬀ
characterization theorem for, 20.17
composition of, need not be monadic,
20.45
creates absolute colimits, 20.16
deﬁciencies of, 20.45 ﬀ
need not detect colimits, 20.47
need not reﬂect regular epimorphisms,
20.52
properties of, 20.12
regularly, = regularly monadic
functor, 20.21 ﬀ
vs. colimit, 20.13
vs. essentially algebraic functor, 23C
vs. extremal monomorphism, 20O
vs. order preserving map, 20N
vs. preservation of extremal
epimorphisms, 20.50
vs. preservation of regular
epimorphisms, 20.50
vs. regularly monadic functor, 20.32,
20.35
vs. solid functor, 25F
Monadic subcategory, vs. monadic
category, 20.18
Monadic towers, 20J
Monad morphism, 20.55
Monoid (as a category), 3.3(4)
M-actions as functors from a monoid
M to Set, 3.20(13)
Monomorphism, 7.32 ﬀ
closed under composition, 7.34
extremal, = extremal monomorphism,
7.61 ﬀ
normal, 7C
preserved by products, 10.35
preserved and reﬂected by equivalence
functor, 7.47
preserved by representable functor,
7.37
is pullback stable, 11.18
reﬂected by faithful functor, 7.37
regular, = regular monomorphism,
7.56 ﬀ
as retraction means isomorphism, 7.36
split, = section, 7.19 ﬀ
strict, = strict monomorphism, 7.76,
7D
types of, 7.76
vs. coequalizer, 7.70
vs. congruence relation, 11.20, 11R
vs. embedding, 8.7
vs. (E, M)-structured category, 14.9
vs. free object, 8.28, 8.29
vs. mono-source, 10.26
vs. preservation of limits, 13.5
vs. pullback square, 11.15, 11.16
vs. regular monomorphism, 7O
vs. section, 7.35, 7P
Monoreﬂective subcategory, 16.1
is bireﬂective, 16.3
Mono-source, 10.5 ﬀ
characterization, 10A
extremal, = extremal mono-source,
10.11
is extremal in balanced category,
10.12
is initial, vs. essentially algebraic
functor, 23.2
— vs. monadic category, 20.12
— vs. reﬂection of limits, 17.13, 17.14
preservation, by representable
functors, 10.7
— implied by (Generating,
−)-factoriza- tion for 2-sources,
17.12
preserved by composition, 10.9
preserved by ﬁrst factor, 10.9
reﬂection, by faithful functors, 10.7
vs. balanced category, 10.12
vs. (E, M)-category, 15.6–15.9
vs. initial source, 17.13
vs. monomorphism, 10.26
vs. point-separating source, 10.8, 10T
18th January 2005

506
INDEX
vs. preservation of limits, 13.5
vs. pushout, 11P
vs. subsource, 10.10
Monotopological category, 21.38 ﬀ
Monotopological construct,
characterization of ﬁbre-small, 22.10
vs. concrete products, 21.42
vs. initial subobjects, 21.42
vs. subconstruct of a
functor-structured construct, 22.10
Mono-transformation, 6.5, 7R
Morphism, 3.1 ﬀ
(co)domain of, 3.2
coessential, 9.27
composite of, see Composition of
morphisms
constant, 7A, 10W
diagonal, 10V, 10W
epi-, see Epimorphism
evaluation, 27.2
exponential, 27.2
ﬁnal, = ﬁnal morphism, 8.10 ﬀ
initial, = initial morphism, 8.6 ﬀ
isomorphism, 3.8
mono-, see Monomorphism
in an object-free category, 3.53
partial, 28.1
product of, 10.34
quotient, = quotient morphism, 8.10
retraction, 7.24 ﬀ
section, 7.19 ﬀ
zero, 7A
Morphism class of a category, 3.2
as corresponding object-free category,
3.54
of small category is a set, 3.45
M-reducible, 28.13
M-sources, closed under the formation of,
16.7
M-subobject, = singleton M-source, 16.8
M-topological category, 21.38 ﬀ
characterization theorem, 21.40
is E-reﬂective in some topological
category, 21.40
ﬁbre-small, characterization, 22.9
vs. subcategory of a
functor-structured category, 22.9
M-topological functor, 21K
M-topological structure theorem, 22.9
M-topos, 28.7
M-transformation, 6.5
Multiple equalizer, 11.4
Multiple pullback, 11L–11N, 12C
preservation, 13A
Natural equivalence, = natural
isomorphism, 6.5
Natural isomorphism, 6.5
Natural numbers, 2.1
Naturality condition, 6.1
Naturally isomorphic, 6.5
Natural sink, 11.27
Natural source, 11.3
is natural transformation, 11.5
Natural transformation, 6.1 ﬀ
cardinality of, 6B
composition, 6.13, 6A
concrete, 6.23, 6.24
identity-carried, = concrete natural
transformation, 6.23
M-transformation, 6.5
vs. composition of functors, 6.3
vs. opposite functor, 6.3
vs. Set-valued functor, 6.18
Neighborhood space, 5N
Normal monomorphism, 7C
nth power functor, 3.20(10)
n-tuple of sets or classes, 2.1, 2.2
Object, 3.1 ﬀ
copower of, 10.63
discrete, = discrete object, 8.1
18th January 2005

INDEX
507
equivalent to another, in a concrete
category, 5.4
free, = free object, 8.22
indiscrete, = indiscrete object, 8.3
initial, = initial object, 7.1
injective, = injective object, 9.1
isomorphic, 3.15, 3.16
power, 27.2
power of, 10.37
projective, = projective object, 9.27
quotient, = quotient object, 7.84 ﬀ
terminal, = terminal object, 7.4
zero, 7.7, 27A
Object class of a category, 3.1, 3.2
vs. identity morphisms, 3.19
Object-free category, 3.53
corresponding to a category, 3.54, 3.55
Object-free functor, 3.55
Opposite category, 3.5
dually equivalent means opposite
category is equivalent, 3.38
vs. contravariant hom-functor, 3.20(5)
vs. contravariant power-set functor,
3.20(9)
vs. dual functor for vector spaces,
3.20(12)
vs. Stone-functor, 3.20(11)
Opposite functor, 3.41
vs. Galois connection, 6.27 (2)
vs. natural transformation, 6.3
Ordered pair of sets, 2.1
Order on concrete functors, 5.18
vs. concretely reﬂective subcategory,
5.26
Order on objects, in a concrete category,
5.4, 5.5
Order preserving map, = morphism in
Pos, 4.3
vs. monadic functor, 20N
Partial binary algebra, 3.52
Partial binary operation, 3.52
Partial morphism, 28.1
Pointed category, 3B, 7B
Point-separating source, 10.5
vs. mono-source, 10.8, 10T
Posets, category of, 4.3
down-directed & up-directed, 11.4
Power object, 27.2
Power-set, = set of all subsets, 2.1
Power-set functor, 3.20(8), 3.20(9)
representability of, 6F
vs. adjoint functor, 18E
Power-set monad, 20.2
Power-set-morphism, 28.11
Power (of an object), 10.37
with discrete exponent is product, vs.
cartesian closed topological
construct, 27.24
comparison of, 10K
vs. coseparator, 10.38
Preimage-morphism, 28.11
Preordered class, as a category, 3.3(4)
Preorder relation on the ﬁbres, in a
concrete category, 5.5
Preservation of coequalizers, 13.1
Preservation of colimits, 13.1
Preservation of coproducts, 13.1
Preservation of equalizers, 13.1, 13.3
Preservation of extremal epimorphisms,
vs. monadic functor, 20.50
Preservation of initial sources, 10.47
vs. ﬁnally dense subcategory, 10.71
Preservation of limits & colimits,
§13
Preservation of limits,
adjoint functor does, 18.9
vs. adjoint functor, 18.12, 18.14,
18.17, 18.19
vs. embedding, 13.11
vs. hom-functor, 13.7
vs. monomorphism & mono-source,
13.5
18th January 2005

508
INDEX
vs. representable functor, 13.9
vs. solid functor, 25.14
Preservation of mono-sources, implied by
(Generating, −)-factorization for
2-sources, 17.12
Preservation of products, 13.1, 13.3
Preservation of pullbacks, 13.3
Preservation and reﬂection of
mono-sources, vs. free object, 18.10
vs. monadic functor, 20.12
Preservation of regular epimorphisms, vs.
(regularly) monadic functor, 20.32,
20.50
Preservation of small limits, vs. lift
limits, 13.19
Preservation of strong limits, vs.
(ExtrGen, Mono-Source) functor,
17.11, 17H
Preservation of terminal object, 13.3
Pretopological space, 5N
Product (of morphisms), 10.34
of epimorphisms, vs. cartesian closed
category, 27.8
Product (of objects), 10.19 ﬀ
in abelian groups, 10G
for Banach spaces, 10J
characterization, 10Q
composition of, 10.25
concrete, = concrete product, 10.52,
13.12
with discrete factors are coproducts,
vs. cartesian closed topological
construct, 27.24
existence, 10.29, 10I, 12.1
is extremal mono-source, 10.21
notation for, 10.23
of pairs, 10.30
preservation of, 13.1
preserved by ﬁrst mono-factor, 10.56
and pullback square, vs. equalizer,
11.11, 11.14
uniqueness, 10.22
vs. empty source, 10.20
vs. (E, M)-structured category, 14.15
vs. equalizer, 10.36
vs. ﬁnite product, 11B
vs. ﬁrst factor, 10.25
vs. hom-functor, 10E, 10F
vs. isomorphism, 10.20
vs. projective limit, 11B
vs. pullback square, 11.13, 11C, 11D
vs. retraction, 10.28
vs. terminal object, 10.20, 10.30, 10H
Product category, 3.3(4)
Product source, vs. isomorphism, 10.26
Projection morphism, 10.23
vs. retraction, 10.27
Projective cover, 9.27
Projective hull, w.r.t. a class of
morphisms, 9.27
Projective limit, 11.4
vs. (ﬁnite) product, 11B
Projective object, 9.27
w.r.t. a class of morphisms, 9.27
extremal, in algebraic category, 23.28,
23.29
regular, 9E
vs. free object, 9.29, 9.30
Proper class, 2.2 See also Large category
Proper quasicategory, 3.50, 3.51
quasicategory of all categories is, 3.51
Property, dual, 3.7
universal, 4.16, 4.25
Property of objects, as
(isomorphism-closed) full subcategory,
4.8
Pulation square, 11.32, 11Q
vs. congruence relation, 11.33
Pullback, 11.8 ﬀ. See also Pullback
square
closure under the formation of, 11.17
existence, 12.1
of a morphism, 11.8
multiple, 11L–11N
18th January 2005

INDEX
509
of a sink along a morphism, 28.13
of a 2-sink, 11.8
vs. (E, M)-structured category, 14.15
vs. epi-sink, 11I
vs. equalizer, 11S
vs. kernel, 11E
vs. product, 11C, 11D
vs. section, 11H
vs. strict monomorphism, 11H
Pullback square, 11.8 ﬀ. See also
Pullback
cancellation of, 11.10, 11.15
composition of, 11.10
and product, vs. equalizer, 11.14
vs. equalizer and product, 11.11
vs. extremal mono-source, 11.9
vs. limit, 11.9
vs. monomorphism, 11.15, 11.16
vs. product, 11.13
vs. terminal object, 11.13
Pullback stable, 11.17, 28.13
Pushout, 11.30 ﬀ
existence, 12.1
of a 2-source, 11.30
vs. (E, M)-category, 15.14, 15.15,
15.16
vs. mono-source, 11P
Pushout square, 11.30 ﬀ
vs. coequalizer, 11.33
Quasicategory, 3.49 ﬀ
of all categories, is not a category, 3.5,
3.51
of all concrete categories over a given
base category, 5.14, 5.15
of all object-free categories, 3.55
of all quasicategories, yields
Russell-like paradox, 3.51, 3L
category is, 3.51
functor quasicategory, 6.15, 6H
(il)legitimate, 6.16
proper, 3.50, 3.51
vs. hom-functor, 3.51
Quasiconstruct of quasitopological
spaces, 5.6
Quasitopos, 28.7
is (Epi, RegMono)-structured, 28.10
Quasivariety, = algebraic construct, 24.12
ﬁnitary, = ﬁnitary quasivariety, 16.12
Quotient map, 9.27
coessential, 9.27
Quotient morphism, 8.10
composition & ﬁrst factor of, 8.13
vs. extremal epimorphism, 23G
vs. (regular) epimorphism &
retraction, 8.12
Quotient object, 7.84 ﬀ
extremal, = extremal quotient object,
7.84
order on, 7.85
regular, = regular quotient object,
7.84
Rational & real numbers, 2.1
Realization = full, concrete embedding,
5O
Reﬂection arrow, 4.16 ﬀ
uniqueness, 4.19
vs. colimit, 13.30
Reﬂection, See also Reﬂector
concrete, 5.22, 5E
Galois, 6.26
Reﬂection of colimits, 13.22
Reﬂection of equalizers, 17.13
vs. essentially algebraic functor, 23.2
vs. faithful functor, 13.24, 17.13, 17.14
vs. reﬂection of limits, 17.13, 17.14
Reﬂection of (extremal) epimorphisms,
17.13
vs. adjoint situation, 19.14
vs. essentially algebraic functor, 23.2
vs. faithful functor, 19.14
vs. monadic functor, 20.12
Reﬂection of identities, vs. creation of
isomorphisms, 13.36
18th January 2005

510
INDEX
Reﬂection of isomorphisms, 13.35
functors need not, 3.22
vs. creation of isomorphisms, 13.36
vs. creation of limits, 13.25
vs. essentially algebraic functor, 23.2
vs. (Generating,
Mono-Source)-factoriza- tions of
2-sources, 17.13
vs. reﬂection of limits, 17.13, 17.14
Reﬂection of limits, 13.22, 13G, 17.13
vs. essentially algebraic functor, 23.2
vs. lifting of limits, 13.23
vs. mono-sources are initial, 17.13,
17.14
vs. reﬂection of equalizers, 17.13,
17.14
vs. reﬂection of isomorphisms, 17.13,
17.14
Reﬂection of products, vs. faithful
functor, 10.60
Reﬂection of regular epimorphisms, vs.
initiality of mono-sources, 19.14
Reﬂective embedding, misbehaved, 13K
Reﬂective modiﬁcation, of a concrete
category, 5.22, 5K
Reﬂective subcategory, 4.16, 16D, 16E
characterization of fullness, 4.20
embedding of, preserves and reﬂects
mono-sources, 18.7
full, 4.20, 7F
of a functor-structured category, vs.
cocomplete category that has free
objects, 26.8
intersections, 4F
nonfull, with reﬂection arrows
isomorphisms, example, 4.21, 13K
reﬂectors are naturally isomorphic, 6.7
of special categories, 4D
vs. adjoint situation, 19.4
vs. cartesian closed subcategory, 27.9
vs. cocomplete subcategory, 12K
vs. colimit-closed subcategory, 13.29
vs. detection of colimits, 13.32
vs. E-monadic subcategory, 20.25
vs. injective objects, 9.25
vs. limits, 13.28
vs. monadic category, 20.18
Reﬂector (for a reﬂective subcategory),
4.23, 4H
as composite of epireﬂectors, 16.24
concrete, 5.22, 5E
existence, 4.22
naturally isomorphic to others, 6.7
uniqueness 4.24, 6.7
vs. concretely reﬂective subcategory,
5.26, 5.27, 5.31, 5.32
(RegEpi, Mono-Source)-category,
characterization, 15.25
vs. regular factorization, 15.13
(RegEpi, Mono)-structured category,
14.22, 14D
Regular category, 14E
Regular co-wellpowered category, 7.87
vs. category with separator or
coseparator, 7.89
vs. construct, 7.88
Regular epimorphism, 7.71 ﬀ
closed under composition, vs.
(RegEpi, Mono-Source)-category,
15.25
composition of, 14.22
is extremal epimorphism, 7.75
preservation and reﬂection, vs.
regularly algebraic category, 23.39
vs. (E, M)-category, 15.7, 15.8
vs. (E, Mono)-structured category,
14.14
vs. (extremal) epimorphism, 7O, 21.13
vs. ﬁnal morphism, 8.11(4), 8O, 20.51
vs. forgetful functor, 7.72(5), 7.73
vs. monadic functor, 20.51, 20.52
vs. quotient morphism, 8.12
vs. retraction, 7.75
Regular epireﬂective subcategory, 16.1
Regular epireﬂective subconstruct, vs.
(regular) equational subconstruct,
18th January 2005

INDEX
511
16.18
Regular equation, 16.16
Regular equational subconstruct, vs.
regular epireﬂective subconstruct,
16.18
Regular factorization, 15.12, 20.32
vs. algebraic functor, 24.2
vs. (RegEpi,Mono-Source)-category,
15.13
vs. regularly algebraic category, 23.38,
23.39
vs. regularly monadic category, 20.30
Regular monomorphism, 7.56 ﬀ
composition of, 7J, 10M, 14I, 28.6
is (extremal) monomorphism, 7.59,
7.63
ﬁrst factor, 14I
in functionally Hausdorﬀspaces, 7J
preserved by products, 10.35
is pullback stable, 11.18
in semigroups, 14I
vs. embedding, 8.7, 8A
vs. equalizer, 13.6
vs. extremal monomorphism, 7.62,
7.63, 7.65, 7J, 12B, 14.20, 14I, 21.13
vs. monomorphism, 7O
vs. section, 7.59
vs. strict monomorphism, 12A
vs. topos, 28F
Regular projective object, 9E
Regular quotient object, 7.84
Regular subobject, 7.77
vs. intersection, 11K
Regular wellpowered category, 7.82
vs. category with separator or
co-separator, 7.89
vs. construct, 7.88
vs. wellpowered category, 7.83
Regularly algebraic category, 23.35 ﬀ
characterization theorem for, 23.38
vs. adjoint functor, 23.38
vs. regular factorization, 23.39
vs. uniquely transportable functor,
23.38
Regularly algebraic functor, 23.35 ﬀ, 23E,
23M
decomposition theorem for, 24.2
implies associated monad is regular,
24.1
implies comparison functor is a
regular epireﬂective embedding, 24.1
Regularly monadic category, vs. regular
factorization, 20.30
Regularly monadic functor, 20.21 ﬀ, 20L
characterization theorem for, 20.32
composition of, 24.2
detects colimits, 20.33
detects extremal co-wellpoweredness,
20.31
is regularly algebraic, 23.36
vs. monadic functor, 20.35
vs. solid functor, 26.4
Relation, congruence, = congruence
relation, 11.20
Relational category, 28H
Representable extremal partial
morphisms, 28.19
Representable functor, 6.9, 6K
preserves limits, 13.9
preserves monomorphisms, 7.37
preserves mono-sources, 10.7
vs. adjoint functor, 18C
vs. duality, 10N
vs. free object, 8.23
Representable M-partial morphisms, vs.
topological category, 28.12
Representable partial morphisms,
vs. ﬁnal sinks are reducible, 28.15
vs. topological category, 28.15
Represent M-partial morphisms, 28.1
Retract, 7.24
absolute, 9.6
in an isomorphism-closed full
reﬂective subcategory, 7.31
18th January 2005

512
INDEX
vs. injective object, 9.5
Retraction, 7.24 ﬀ
is epimorphism, 7.42
as monomorphism means
isomorphism, 7.36
preserved by all functors, 7.28
preserved by products, 10.35
preserved and reﬂected by equivalence
functor, 7.47
is pullback stable, 11.18
reﬂected by full, faithful functor, 7.29
is regular epimorphism, 7.75
vs. (E, M)-structured category, 14.9
vs. product, 10.28
vs. projection morphism, 10.27
vs. quotient morphism, 8.12
Right adjoint, = adjoint, 19.11
Right inverse of a morphism, vs. left
inverse, 3.10
Russell’s paradox, 2.2, 2.3, 3.51, 3L
Satisfaction of an implication, =
e-injective, 16.11, 16.12
Satisfaction of topological (co-)axiom,
22.1, 22.6
Scheme, = domain of a diagram, 11.1
Section, 7.19 ﬀ, 7E
as epimorphism is isomorphism, 7.43
preserved by all functors, 7.22
preserved by products, 10.35
reﬂected by full, faithful functor, 7.23
is (regular) monomorphism, 7.35, 7.59
vs. embedding, 8.7
vs. equivalence functor, 7.47
vs. intersection, 11K
vs. monomorphism, 7P
vs. pullback, 11H
Self-adjoint endofunctor, 19G
Self-dual concept, 3.7 See also Pulation
square
Self-dual properties for functors, 3.43
Semiﬁnal arrow, for a structured sink,
25.8, 25C
Semiﬁnal solution, for a structured sink,
25.7, 25C
Separating set, 7.14
vs. concretizable category, 7Q
Separator, 7.10 ﬀ
category with, is regular
(co-)wellpowered, 7.89
extremal, 10.63
vs. bicoreﬂective subcategory, 16.4
vs. (co)wellpoweredness and
(co)complete- ness, 12.13
vs. faithful hom-functor, 7.12
vs. topological category, 21.16, 21.17
Set,
constructions that can be performed
with sets, 2.1
morphism class of small category is a
set, 3.45
separating, = separating set, 7.14
is a (small) class, 2.2
underlying, = underlying set, see
Forgetful functor
Set-indexed family of sets, 2.2
Set-indexed source, 10.2
Set-valued functor, vs. hom-functor, 6.18
vs. natural transformation, 6.18
Singleton-morphism, 28.11
Sink, 10.62 ﬀ
costructured, 17.4
ﬁnal, 10.63, 28.15
natural, 11.27
Situation, adjoint, = adjoint situation,
19.3 ﬀ
Skeleton of a category, 4.12–4.15, 4I
Small category, 3.44. See also
Fibre-small
is a set, 3.45
Small class, 2.2
Small conglomerate, 2.3
Smallest containing E-reﬂective
18th January 2005

INDEX
513
subcategory, = E-reﬂective hull,
16.20, 16.21
Smallest injective extension, 9.20
vs. minimal injective extension, 9G
Smallness of hom-class condition, see
Object-free category
Small object-free category, 3.55
Small source, 10.2
Solid concrete category, 25.10 ﬀ
is almost topologically algebraic,
25.18, 25.19
characterization theorems, 25.19, 25I
structure theorem, 26.7
vs. (co)complete category, 25.15, 25.16
vs. Mac Neille completion, 25G
vs. subcategory of topological
category, 26.2
vs. topological category, 25J
Solid construct, need not be topologically
algebraic nor strongly cocomplete,
25.17
Solid functor, 25.10 ﬀ
is almost topologically algebraic,
25.18, 25.19
composite of topological and
essentially algebraic functors, 26.3
composite of topologically algebraic
functors, 26.1
composite of topological and regularly
monadic functors, 26.3
composition of, 25.13
detects colimits and preserves and
detects limits, 25.14
is faithful and adjoint, 25.12
preserves extremal monomorphisms,
25.21
topologically algebraic functor is,
25.11
vs. adjoint functor, 25.12, 25.19
vs. detection and preservation of
limits, 25.18, 25.19
vs. essentially algebraic functor, 26.3
vs. faithful functor, 25.12
vs. full reﬂective embedding, 26.1
vs. monadic functor, 25F
vs. regularly monadic functor, 26.4
vs. topologically algebraic functor,
25D, 25E, 26.1
vs. topological functor, 26.1, 26.3, 26.4
Solution set condition, 18.12
Source, 10.1 ﬀ
codomain of, 10.1
composite of, 10.3
domain of, 10.1
empty, 10.2
initial, = initial source, 10.41, 10.57
natural, 11.3
notation for, 10.2, 10.4
set-indexed, 10.2
small, 10.2
structured, w.r.t. a functor, 17.1
Split coequalizer, 20.14
Split epimorphism, = retraction, 7.24 ﬀ
Split fork, 20.14
Split monomorphism, = section, 7.19 ﬀ
Square,
commutes, 3.4
pulation, 11.32, 11.33, 11Q
pullback, = pullback square, 11.8 ﬀ
Stability under pullbacks, 11.17, 28.13
Stable epimorphism, 11J
vs. adjoint functor, 18I
Statement, dual, = dual statement, 3.7
Stone-functor, 3.20(11)
Strict monomorphism, 7D
vs. other types of monomorphisms,
7.76
vs. pullback, 11H
vs. regular monomorphism, 12A
Strong ﬁbre-smallness, 26D
Strongly cocomplete category, 12.2
is (Epi,ExtrMono-Source)-category,
15.17
vs. (co)complete category, 12.5, 12I,
18th January 2005

514
INDEX
12N, 12O
Strongly complete category, 12.2
is (E, M)-structured, 14.21
vs. (co)complete category, 12.5, 12I,
12N, 12O
vs. (E, M)-category, 15.25, 15.26
vs. free monad & varietor, 20.59
Strongly ﬁbre-small concrete category,
26.5
(Strongly Generating, Initial
Source)-functor, is topologically
algebraic functor, 25.6
Strongly generating structured arrow,
25.4
is generating, 25.5
Strongly n-generating object, 20H
Strongly limit-closed subcategory, vs.
epireﬂective subcategory, 16L
Strong monomorphism, 7.76, 14C
Structure, factorization:
— for morphisms, 14.1 ﬀ
— for sources, 15.1 ﬀ
— w.r.t. a functor, 17.3 ﬀ
Structured arrow, 8.15
equivalence for, 26.5
(extremally) generating, vs.
(extremal) epimorphism, 8.36
generating, = generating structured
arrow, 8.15
isomorphic, 8.19, 8.34
strongly generating, 25.4, 25.5
universal, 8.30
w.r.t. a functor, 8.30
Structured source,
w.r.t. a functor, 17.1
notation for, 17.2
self-indexed, 17.2
Structured 2-source, factorizations of, 17F
Subcategory, 4.1 ﬀ
algebraic, = algebraic subcategory,
23.32
bireﬂective, 16.1, 16.3
colimit-closed, 13I
colimit-dense, = colimit-dense
subcategory, 12.10
concrete, 5.21 ﬀ
coreﬂective, = coreﬂective
subcategory, 4.25, 16.1 ﬀ
deﬁnable by topological (co-)axioms,
22.1, 22.3, 22.4, 22.6
dense, 12D
E-equational, 16.16
epireﬂective, 16.1
E-reﬂective, 16.1
extremally epireﬂective, 16.1
ﬁnally closed, 21.29
ﬁnally dense, 10.69, 10.69
full, 4.1(2) ﬀ
of a functor-costructured category, vs.
topological category, 22.8
of a functor-structured category, vs.
(M-) topological category, 22.3,
22.4, 22.9
implicational, 16.12
initially closed, 21.29
initially dense, 10.69
isomorphism-dense, 4.9
limit-closed, 13.26, 13.27, 13I, 13J
limit-dense, 12E
M-initially closed, vs. concretely
E-reﬂec- tive subcategory, 22.9
monadic, conditions for, 20.19
monoreﬂective, 16.1
nonfull, 4.3(3)
reﬂective, = reﬂective subcategory,
4.16, 16.1 ﬀ
regular epireﬂective, 16.1
simultaneously reﬂective and
coreﬂective, 4E
of subcategories, 4G
topological, = topological
subcategory, 21.29 ﬀ
vs. identities, 4A
Subconstruct, 5.21
of a functor-structured construct, vs.
monotopological construct, 22.10
18th January 2005

INDEX
515
of Set vs. concretely cartesian closed
construct, 27.16
Subobject, 7.77 ﬀ
extremal, = extremal subobject, 7.77
initial, = initial subobject, 8.6
intersection of, 11.23
non-isomorphic, 7K
order on, 7.79
regular, = regular subobject, 7.77
vs. M-subobject, 16.8
Subset, 2.1. See also Power set
Swell epimorphism, 7.76, 15A
Swell separator, 19K
T-algebra, 5.37
T-algebra, category of, 20.4, 5G
— closed under the formation of
mono-sources, 20.11
— three-step construction, 20.6
Taut lift theorem, 21.28
Terminal, weakly terminal set of objects,
12F
Terminal category, 3.3(4)
Terminal object, 7.4
uniqueness, 7.6
vs. product, 10.20, 10.30, 10H
vs. pullback square, 11.13
vs. weak terminal object, 12.9
Thin category, 3.26
vs. faithful functor, 3.29, 3G
Thin quasicategory, 3.51
T-homomorphism, 5.37
Topological axiom, 22.1
Topological characterization theorems,
external, 21.21
internal, 21.18
Topological (co-)axiom, 22.6
Topological concrete category, 21.7 ﬀ
characterization, 21C
duality for, 21.9
is ﬁbre-complete, 21.11
ﬁbre-small, 21.34 ﬀ
— characterization of, 22.3, 22.4, 22.8
— vs. closure under the formation of
indiscrete objects, initial subobjects,
and products, 21.37
ﬁbre-small reﬂective subcategory, vs.
solid strongly ﬁbre-small category,
26.7
subcategory of, vs. solid category, 26.2
vs. (co)completeness, 21.16, 21.17
vs. concretely cartesian closed
subcategory, 27.15
vs. concretely reﬂective subcategory,
21.32
vs. coseparator, 21.16, 21.17
vs. co-wellpoweredness, 21.16, 21.17
vs. discrete object, 21.11
vs. (E, M)-category, 21.14
vs. (E, M)-factorization, 21.16, 21.17
vs. extremal morphism, 21.13
vs. ﬁnal lift, 21.34
vs. ﬁnally dense subcategory, 21.32
vs. has function spaces, 27.22
vs. indiscrete object, 21.11, 21.35
vs. initial lift, 21.34
vs. initially closed subcategory, 21.30,
21.31
vs. initial subobjects, 21.35
vs. injective object, 21.21
vs. lift of an adjoint situation, 21.28
vs. representable (M-)partial
morphisms, 28.12, 28.15
vs. separator, 21.16, 21.17
vs. solid category, 25J
vs. subcategory of a
functor-(co)structured category,
22.3, 22.4, 22.8
vs. wellpoweredness, 21.16, 21.17
Topological construct, ﬁbre-small,
characterization of, 22.4
vs. forgetful functor, 21L
Topological functor, 21.1 ﬀ
is (co-)adjoint, 21.12
composition of, 21.6
18th January 2005

516
INDEX
is faithful, 21.3
lifts limits and colimits, 21.15
preserves limits and colimits, 21.15
preserves and reﬂects mono-sources
and epi-sinks, 21.13
is topologically algebraic, 25.2
vs. amnestic concrete category, 21.5
vs. bimorphism, 21M
vs. discrete and indiscrete functors,
21.12
vs. indiscrete structures, 21.18, 21.19,
21.20
vs. solid functor, 26.1, 26.3, 26.4
vs. topologically algebraic functor,
25B
vs. unique lifting of limits, 21.18,
21.20
vs. uniquely transportable concrete
category, 21.5
Topologically algebraic category, 25.1 ﬀ
characterization theorem, 25.6
vs. universal initial completion, 25H
Topologically algebraic functor, 25.1 ﬀ
almost is solid, 25.18, 25.19
is composite of other types, 26B
composites yield solid functor, 26.1
is faithful and adjoint, 25.3
is solid, 25.11
vs. adjoint functor, 25.3, 25.6, 25.19
vs. detection and preservation of
limits, 25.18, 25.19
vs. solid functor, 25D, 25E
vs. topological functor, 25B
Topological structure theorem, 22.3
Topological subcategory, 21.29 ﬀ
vs. concretely (co)reﬂective
subcategory, 21.33
Topological theory, 22B
Topological universe, 28.21
equivalent conditions, 28.22
Topology, three approaches, 5N
Topos, 28.7
is balanced quasitopos, 28.8
characterization, 28E
vs. regular monomorphism, 28F
Total category, 6I
Transformation, natural, = natural
transformation, 6.1 ﬀ
Transportable concrete category, 5.28
vs. amnestic concrete category, 5.29,
5.30
vs. concrete category, 5.35, 5.36
Transportable functor, monadic functor
is, 20.12
vs. lifting of limits, 13E
Triangle, commutes, 3.4
Trivial factorization structure, 15.3
Trivial monad, 20.2
T-space, 5.40, 5H
Underlying function, see Forgetful
functor
Underlying functor, = forgetful functor,
3.20(3), 5.1 ﬀ
Union, of a family of sets, 2.1
Unique diagonalization property, 14.1,
15.1
Unique lifting of limits, vs. topological
functor, 21.18, 21.20
Uniquely transportable concrete category,
5.28
vs. topological functor, 21.5
Uniquely transportable functor,
vs. algebraic functor, 23.30
vs. regularly algebraic category, 23.38
Unit of an adjunction, 19.3
Unit ball functor, 5.2
Unit existence condition, see Object-free
category
Unit of a partial binary algebra, 3.52, 19J
Universal arrow, 8.22
must be extremally generating, 8.33
uniqueness, 8.25, 8.35
18th January 2005

INDEX
517
vs. concrete generation, 8.24
vs. co-universal arrow, 19.1, 19.2
Universal category, 4J
Universal completion, 12M
Universal initial completion, 21I
vs. topologically algebraic category,
25H
Universally initial morphism, 10P
Universally topological category, 28.16
as injective object, 28G
vs. concrete quasitopos, 28.18
Universal property, 4.16, 4.25, 8.22, 8.30
Universal structured arrow, 8.30
Universe, 2.2
Up-directed poset, 11.4
Upper semicontinuity, as adjointness, 18F
Varietal category & functor, 23F
Varietor, 20.53
vs. colimits of ω-chains, 20P
vs. free monad & monadic category,
20.56–20.58
Variety, = monadic construct, 24.12
bounded, vs. bounded monadic
construct, 24.11
ﬁnitary, = ﬁnitary variety, 16.16,
20.20
vs. equational subquasiconstruct of
some Alg(Ω), 24.11
Weakly algebraic functor, 23A
Weakly terminal set of objects, 12F
Weak terminal object, vs. terminal
object, 12.9
Well-ﬁbred construct, 27.20
Well-ﬁbred topological construct, vs.
cartesian closed construct, 27.22
Wellpowered category, 7.82 ﬀ
and complete category, is strongly
complete, 12.5
is regular wellpowered and extremally
wellpowered, 7.83
vs. adjoint functor, 18.19
vs. co-wellpoweredness, 12.13
vs. essentially algebraic category,
23.12, 23.13
vs. free object, 18.10
vs. topological category, 21.16, 21.17
Word-monad, 20.2
Yoneda embedding, 6J
Yoneda Lemma, 6.19
Zero morphism, 7A
Zero object, 7.7
vs. Cartesian closed category, 27A
18th January 2005

GNU Free Documentation License
Version 1.2, November 2002
Copyright c⃝2000,2001,2002 Free Software Foundation, Inc.
59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
Everyone is permitted to copy and distribute verbatim copies of this license document, but
changing it is not allowed.
Preamble
The purpose of this License is to make a manual, textbook, or other functional and useful doc-
ument “free” in the sense of freedom: to assure everyone the eﬀective freedom to copy and
redistribute it, with or without modifying it, either commercially or noncommercially. Secondar-
ily, this License preserves for the author and publisher a way to get credit for their work, while
not being considered responsible for modiﬁcations made by others.
This License is a kind of “copyleft”, which means that derivative works of the document must
themselves be free in the same sense. It complements the GNU General Public License, which
is a copyleft license designed for free software.
We have designed this License in order to use it for manuals for free software, because free
software needs free documentation: a free program should come with manuals providing the
same freedoms that the software does. But this License is not limited to software manuals; it
can be used for any textual work, regardless of subject matter or whether it is published as a
printed book. We recommend this License principally for works whose purpose is instruction or
reference.
1. APPLICABILITY AND DEFINITIONS
This License applies to any manual or other work, in any medium, that contains a notice placed
by the copyright holder saying it can be distributed under the terms of this License. Such a
notice grants a world-wide, royalty-free license, unlimited in duration, to use that work under
the conditions stated herein. The “Document”, below, refers to any such manual or work. Any
member of the public is a licensee, and is addressed as “you”. You accept the license if you
copy, modify or distribute the work in a way requiring permission under copyright law.
A “Modiﬁed Version” of the Document means any work containing the Document or a portion
of it, either copied verbatim, or with modiﬁcations and/or translated into another language.
A “Secondary Section” is a named appendix or a front-matter section of the Document that
deals exclusively with the relationship of the publishers or authors of the Document to the Docu-
ment’s overall subject (or to related matters) and contains nothing that could fall directly within
that overall subject. (Thus, if the Document is in part a textbook of mathematics, a Secondary
Section may not explain any mathematics.) The relationship could be a matter of historical con-
nection with the subject or with related matters, or of legal, commercial, philosophical, ethical
or political position regarding them.
The “Invariant Sections” are certain Secondary Sections whose titles are designated, as being
those of Invariant Sections, in the notice that says that the Document is released under this
License. If a section does not ﬁt the above deﬁnition of Secondary then it is not allowed to be
518

GNU Free Documentation License
519
designated as Invariant. The Document may contain zero Invariant Sections. If the Document
does not identify any Invariant Sections then there are none.
The “Cover Texts” are certain short passages of text that are listed, as Front-Cover Texts or
Back-Cover Texts, in the notice that says that the Document is released under this License. A
Front-Cover Text may be at most 5 words, and a Back-Cover Text may be at most 25 words.
A “Transparent” copy of the Document means a machine-readable copy, represented in a
format whose speciﬁcation is available to the general public, that is suitable for revising the
document straightforwardly with generic text editors or (for images composed of pixels) generic
paint programs or (for drawings) some widely available drawing editor, and that is suitable for
input to text formatters or for automatic translation to a variety of formats suitable for input to
text formatters. A copy made in an otherwise Transparent ﬁle format whose markup, or absence
of markup, has been arranged to thwart or discourage subsequent modiﬁcation by readers is not
Transparent. An image format is not Transparent if used for any substantial amount of text. A
copy that is not ”Transparent” is called “Opaque”.
Examples of suitable formats for Transparent copies include plain ASCII without markup, Tex-
info input format, LaTeX input format, SGML or XML using a publicly available DTD, and
standard-conforming simple HTML, PostScript or PDF designed for human modiﬁcation. Ex-
amples of transparent image formats include PNG, XCF and JPG. Opaque formats include
proprietary formats that can be read and edited only by proprietary word processors, SGML or
XML for which the DTD and/or processing tools are not generally available, and the machine-
generated HTML, PostScript or PDF produced by some word processors for output purposes
only.
The “Title Page” means, for a printed book, the title page itself, plus such following pages as
are needed to hold, legibly, the material this License requires to appear in the title page. For
works in formats which do not have any title page as such, “Title Page” means the text near the
most prominent appearance of the work’s title, preceding the beginning of the body of the text.
A section “Entitled XYZ” means a named subunit of the Document whose title either is
precisely XYZ or contains XYZ in parentheses following text that translates XYZ in another
language. (Here XYZ stands for a speciﬁc section name mentioned below, such as “Acknowl-
edgements”, “Dedications”, “Endorsements”, or “History”.) To “Preserve the Title”
of such a section when you modify the Document means that it remains a section “Entitled
XYZ” according to this deﬁnition.
The Document may include Warranty Disclaimers next to the notice which states that this
License applies to the Document. These Warranty Disclaimers are considered to be included by
reference in this License, but only as regards disclaiming warranties: any other implication that
these Warranty Disclaimers may have is void and has no eﬀect on the meaning of this License.
2. VERBATIM COPYING
You may copy and distribute the Document in any medium, either commercially or noncom-
mercially, provided that this License, the copyright notices, and the license notice saying this
License applies to the Document are reproduced in all copies, and that you add no other con-
ditions whatsoever to those of this License. You may not use technical measures to obstruct or
control the reading or further copying of the copies you make or distribute. However, you may
accept compensation in exchange for copies. If you distribute a large enough number of copies
you must also follow the conditions in section 3.
You may also lend copies, under the same conditions stated above, and you may publicly display
copies.
18th January 2005

520
GNU Free Documentation License
3. COPYING IN QUANTITY
If you publish printed copies (or copies in media that commonly have printed covers) of the
Document, numbering more than 100, and the Document’s license notice requires Cover Texts,
you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-
Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also
clearly and legibly identify you as the publisher of these copies. The front cover must present the
full title with all words of the title equally prominent and visible. You may add other material
on the covers in addition. Copying with changes limited to the covers, as long as they preserve
the title of the Document and satisfy these conditions, can be treated as verbatim copying in
other respects.
If the required texts for either cover are too voluminous to ﬁt legibly, you should put the ﬁrst
ones listed (as many as ﬁt reasonably) on the actual cover, and continue the rest onto adjacent
pages.
If you publish or distribute Opaque copies of the Document numbering more than 100, you must
either include a machine-readable Transparent copy along with each Opaque copy, or state in or
with each Opaque copy a computer-network location from which the general network-using public
has access to download using public-standard network protocols a complete Transparent copy of
the Document, free of added material. If you use the latter option, you must take reasonably
prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this
Transparent copy will remain thus accessible at the stated location until at least one year after
the last time you distribute an Opaque copy (directly or through your agents or retailers) of that
edition to the public.
It is requested, but not required, that you contact the authors of the Document well before
redistributing any large number of copies, to give them a chance to provide you with an updated
version of the Document.
4. MODIFICATIONS
You may copy and distribute a Modiﬁed Version of the Document under the conditions of sections
2 and 3 above, provided that you release the Modiﬁed Version under precisely this License, with
the Modiﬁed Version ﬁlling the role of the Document, thus licensing distribution and modiﬁcation
of the Modiﬁed Version to whoever possesses a copy of it. In addition, you must do these things
in the Modiﬁed Version:
A. Use in the Title Page (and on the covers, if any) a title distinct from that of the Document,
and from those of previous versions (which should, if there were any, be listed in the History
section of the Document). You may use the same title as a previous version if the original
publisher of that version gives permission.
B. List on the Title Page, as authors, one or more persons or entities responsible for authorship
of the modiﬁcations in the Modiﬁed Version, together with at least ﬁve of the principal
authors of the Document (all of its principal authors, if it has fewer than ﬁve), unless they
release you from this requirement.
C. State on the Title page the name of the publisher of the Modiﬁed Version, as the publisher.
D. Preserve all the copyright notices of the Document.
E. Add an appropriate copyright notice for your modiﬁcations adjacent to the other copyright
notices.
18th January 2005

GNU Free Documentation License
521
F. Include, immediately after the copyright notices, a license notice giving the public permis-
sion to use the Modiﬁed Version under the terms of this License, in the form shown in the
Addendum below.
G. Preserve in that license notice the full lists of Invariant Sections and required Cover Texts
given in the Document’s license notice.
H. Include an unaltered copy of this License.
I. Preserve the section Entitled “History”, Preserve its Title, and add to it an item stating
at least the title, year, new authors, and publisher of the Modiﬁed Version as given on the
Title Page. If there is no section Entitled “History” in the Document, create one stating
the title, year, authors, and publisher of the Document as given on its Title Page, then
add an item describing the Modiﬁed Version as stated in the previous sentence.
J. Preserve the network location, if any, given in the Document for public access to a Trans-
parent copy of the Document, and likewise the network locations given in the Document
for previous versions it was based on. These may be placed in the “History” section. You
may omit a network location for a work that was published at least four years before the
Document itself, or if the original publisher of the version it refers to gives permission.
K. For any section Entitled “Acknowledgements” or “Dedications”, Preserve the Title of the
section, and preserve in the section all the substance and tone of each of the contributor
acknowledgements and/or dedications given therein.
L. Preserve all the Invariant Sections of the Document, unaltered in their text and in their
titles. Section numbers or the equivalent are not considered part of the section titles.
M. Delete any section Entitled “Endorsements”. Such a section may not be included in the
Modiﬁed Version.
N. Do not retitle any existing section to be Entitled “Endorsements” or to conﬂict in title
with any Invariant Section.
O. Preserve any Warranty Disclaimers.
If the Modiﬁed Version includes new front-matter sections or appendices that qualify as Sec-
ondary Sections and contain no material copied from the Document, you may at your option
designate some or all of these sections as invariant. To do this, add their titles to the list of
Invariant Sections in the Modiﬁed Version’s license notice. These titles must be distinct from
any other section titles.
You may add a section Entitled “Endorsements”, provided it contains nothing but endorsements
of your Modiﬁed Version by various parties–for example, statements of peer review or that the
text has been approved by an organization as the authoritative deﬁnition of a standard.
You may add a passage of up to ﬁve words as a Front-Cover Text, and a passage of up to 25
words as a Back-Cover Text, to the end of the list of Cover Texts in the Modiﬁed Version. Only
one passage of Front-Cover Text and one of Back-Cover Text may be added by (or through
arrangements made by) any one entity. If the Document already includes a cover text for the
same cover, previously added by you or by arrangement made by the same entity you are acting
on behalf of, you may not add another; but you may replace the old one, on explicit permission
from the previous publisher that added the old one.
The author(s) and publisher(s) of the Document do not by this License give permission to use
their names for publicity for or to assert or imply endorsement of any Modiﬁed Version.
18th January 2005

522
GNU Free Documentation License
5. COMBINING DOCUMENTS
You may combine the Document with other documents released under this License, under the
terms deﬁned in section 4 above for modiﬁed versions, provided that you include in the combi-
nation all of the Invariant Sections of all of the original documents, unmodiﬁed, and list them
all as Invariant Sections of your combined work in its license notice, and that you preserve all
their Warranty Disclaimers.
The combined work need only contain one copy of this License, and multiple identical Invariant
Sections may be replaced with a single copy. If there are multiple Invariant Sections with the
same name but diﬀerent contents, make the title of each such section unique by adding at the
end of it, in parentheses, the name of the original author or publisher of that section if known,
or else a unique number. Make the same adjustment to the section titles in the list of Invariant
Sections in the license notice of the combined work.
In the combination, you must combine any sections Entitled “History” in the various original
documents, forming one section Entitled “History”; likewise combine any sections Entitled “Ac-
knowledgements”, and any sections Entitled “Dedications”. You must delete all sections Entitled
“Endorsements”.
6. COLLECTIONS OF DOCUMENTS
You may make a collection consisting of the Document and other documents released under this
License, and replace the individual copies of this License in the various documents with a single
copy that is included in the collection, provided that you follow the rules of this License for
verbatim copying of each of the documents in all other respects.
You may extract a single document from such a collection, and distribute it individually under
this License, provided you insert a copy of this License into the extracted document, and follow
this License in all other respects regarding verbatim copying of that document.
7. AGGREGATION WITH INDEPENDENT WORKS
A compilation of the Document or its derivatives with other separate and independent documents
or works, in or on a volume of a storage or distribution medium, is called an “aggregate” if the
copyright resulting from the compilation is not used to limit the legal rights of the compilation’s
users beyond what the individual works permit. When the Document is included in an aggre-
gate, this License does not apply to the other works in the aggregate which are not themselves
derivative works of the Document.
If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if
the Document is less than one half of the entire aggregate, the Document’s Cover Texts may be
placed on covers that bracket the Document within the aggregate, or the electronic equivalent
of covers if the Document is in electronic form. Otherwise they must appear on printed covers
that bracket the whole aggregate.
8. TRANSLATION
Translation is considered a kind of modiﬁcation, so you may distribute translations of the Doc-
ument under the terms of section 4.
Replacing Invariant Sections with translations requires
special permission from their copyright holders, but you may include translations of some or
all Invariant Sections in addition to the original versions of these Invariant Sections. You may
include a translation of this License, and all the license notices in the Document, and any War-
18th January 2005

GNU Free Documentation License
523
ranty Disclaimers, provided that you also include the original English version of this License and
the original versions of those notices and disclaimers. In case of a disagreement between the
translation and the original version of this License or a notice or disclaimer, the original version
will prevail.
If a section in the Document is Entitled “Acknowledgements”, “Dedications”, or “History”, the
requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual
title.
9. TERMINATION
You may not copy, modify, sublicense, or distribute the Document except as expressly provided
for under this License. Any other attempt to copy, modify, sublicense or distribute the Document
is void, and will automatically terminate your rights under this License. However, parties who
have received copies, or rights, from you under this License will not have their licenses terminated
so long as such parties remain in full compliance.
10. FUTURE REVISIONS OF THIS LICENSE
The Free Software Foundation may publish new, revised versions of the GNU Free Documentation
License from time to time. Such new versions will be similar in spirit to the present version, but
may diﬀer in detail to address new problems or concerns. See http://www.gnu.org/copyleft/.
Each version of the License is given a distinguishing version number. If the Document speciﬁes
that a particular numbered version of this License “or any later version” applies to it, you
have the option of following the terms and conditions either of that speciﬁed version or of any
later version that has been published (not as a draft) by the Free Software Foundation. If the
Document does not specify a version number of this License, you may choose any version ever
published (not as a draft) by the Free Software Foundation.
ADDENDUM: How to use this License for your documents
To use this License in a document you have written, include a copy of the License in the document
and put the following copyright and license notices just after the title page:
Copyright c⃝YEAR YOUR NAME. Permission is granted to copy, distribute and/or
modify this document under the terms of the GNU Free Documentation License,
Version 1.2 or any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. A copy of the
license is included in the section entitled “GNU Free Documentation License”.
If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace the “with. . .
Texts.” line with this:
with the Invariant Sections being LIST THEIR TITLES, with the Front-Cover Texts
being LIST, and with the Back-Cover Texts being LIST.
If you have Invariant Sections without Cover Texts, or some other combination of the three,
merge those two alternatives to suit the situation.
18th January 2005

524
GNU Free Documentation License
If your document contains nontrivial examples of program code, we recommend releasing these
examples in parallel under your choice of free software license, such as the GNU General Public
License, to permit their use in free software.
18th January 2005

