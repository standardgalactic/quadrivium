Alex Aiken 
Compilers 
Implementing Type Checking 

Alex Aiken 
Implementing TC 
• COOL type checking can be implemented in a single 
traversal over the AST 
 
• Type environment is passed down the tree 
– From parent to child 
 
• Types are passed up the tree 
– From child to parent 

Alex Aiken 
Implementing TC 
TypeCheck(Environment, e1 + e2) = { 
 
T1 = TypeCheck(Environment, e1); 
 
T2 = TypeCheck(Environment, e2); 
 
Check T1 == T2 == Int; 
 
return Int; } 
O,M,C ` e1: Int   O,M,C ` e2: Int   
O,M,C ` e1 + e2 : Int 
[Add] 

Alex Aiken 
Implementing TC 
TypeCheck(Environment, let x:T e0 in e1) = { 
 
T0 = TypeCheck(Environment, e0); 
 
T1 = TypeCheck(Environment.add(x:T), e1); 
 
Check  subtype(T0,T1); 
 
return ; T1} 
O ` e0: T0 
O[T/x] ` e1: T1 
T0 T  
O ` let x:T e0 in e1 : T1 
[Let-Init] 

