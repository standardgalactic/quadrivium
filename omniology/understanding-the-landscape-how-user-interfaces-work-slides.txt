@danappleman   danappleman.com
Dan Appleman
UNDERSTANDING THE LANDSCAPE:
HOW USER INTERFACES WORK
Getting Started with JavaScript in 
Salesforce










Components you create 
will appear here

I Have to Learn What???

JavaScript
The core language for 
lightning components
Lightning 
Framework
LWC and Aura
Apex
Lightning Controllers
CSS
Lightning Design 
System
HTML
Lightning tags and 
templating
Lightning Development Skills





By the end of this course 
you’ll be able to look at 
Lightning Component 
JavaScript and understand 
exactly what it is doing

Some programming experience
- Apex
- Other object oriented block structured 
language (Java, C#, etc.)
Prerequisites

Just Visualforce 
and Lightning
No Node.js or 
server 
technologies
No Angular, React 
or other 
frameworks
JavaScript on Salesforce

Some programming experience
- Apex
- Other object oriented block structured 
language (Java, C#, etc.)
Some familiarity with Salesforce
- Database and UI
- Lightning or Visualforce
Basic Salesforce development skills
- Developer console
- SFDX Recommended
Prerequisites


From Server to Client and Back Again

<html>
<head>
<title>Ancient HTML</title>
</head>
<body>
<p id="sometext" style="font-size: larger">
Hardcoded styles?
</p>
<script type="text/javascript">
function handleTextClick()
{
window.alert('You clicked me');
}
var e = document.getElementById("sometext");
e.addEventListener("click", handleTextClick, false);
</script>
</body>
</html>
Ancient Static HTML

Visualforce

DOM
JavaScript can modify the DOM –
And thus what you see in the browser!



VF
Apex

VF
Apex
DOM

Each Visualforce Page Has Its Own URL
VF
VF
VF
VF
Apex

The Age of the Client – Lightning Strikes

Traditional Web Applications
VF
VF
VF
VF
Apex

Could there be a better 
way?

Apex
DOM

Aura Components
Based on an open source 
framework called Aura
Lightning Web 
Components (LWC)
Based on industry standard 
web components
Salesforce Has Two SPA Frameworks

Visualforce (Classic)
HTML generated from Visualforce 
markup. HTML defines the DOM
Most user interaction results in a  
request to the server, and requires the 
server to return all or part of a page
You can create complex web 
applications with no JavaScript
Lightning (Lightning Experience)
HTML provided by Lightning framework. 
JavaScript defines the DOM
User interaction is processed by 
JavaScript, that only requests the data it 
needs from the server (if any)
You need JavaScript to go beyond trivial 
applications
One Platform – Two Web Architectures

A Brief History of JavaScript 
(The Parts You Really Need to Know)

A JavaScript Timeline
Netscape
Navigator
1995
JavaScript
JScript
(IE)
JavaScript
1996
2011
JavaScript/
ECMAScript
5.1
2015
JavaScript/
ECMAScript
6
The Dark 
Ages
(Incompatible 
browsers, 
HTML and 
scripting)
20??
ES 20??

We want to upgrade 
our website to ES-
2021
It has some great new 
features!
Sorry – you can’t
48% of our customers use 
browsers that only support ES6 
– and they can’t or won’t 
upgrade

A Library Can Help with Cross-browser Issues
JQuery

At Some Point, You’ll Drop Older Browsers

Or Use a Transpiler
ES7
ES6
ES5.1
Transpiler
(Babel, 
Traceur)
ES6
ES5
ES5
ES5

Or Use a Transpiler
ES7
ES6
ES5.1
Transpiler
(Babel, 
Traceur)
ES6
ES6
ES6
ES5

Visualforce
ES5 is safest
Use later versions at 
your own risk
Aura Components
ES5 – Strict Mode
(supports some ES6 
features)
Lightning Web 
Components
ES6+
(ES7 + some 
ECMAScript 2017 and 
2018)
Which Version of JavaScript Should You Use?

Focus will be on ES6+
- Lightning Web Components (LWC)
Some coverage of ES5
Terminology for this course:
- ES5 = ECMAScript 5.1
- ES6 = ECMAScript 6 (2015) and later as 
supported by LWCs
- We will not be breaking down later 
features by version

Hello World – JavaScript in Four Acts

Hello World (it’s traditional)
- You can build an app
- You can compare technologies
- You have a development environment
• VS-Code + SFDX
• Visualforce page editor
Let the 
Demos Begin

Demo
“Hello World” in Simple HTML

Housekeeping


Hello Visualforce

Hello Lightning Aura Components

Hello Lightning Web Components

Laying the Groundwork

You learned about the relationship 
between JavaScript and web pages
You saw the simplest possible “Hello 
World” application in a static web page.
You set up your org for web development
You implemented “Hello World” in 
Visualforce, Aura and LWC
Summary

Up Next:
Introducing JavaScript Data Types and 
Language Features

