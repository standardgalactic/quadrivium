Wei-Meng Lee
Join the discussion @ p2p.wrox.com
Wrox Programmer to Programmer™
Building 
Applications for
the Mac App 
Store
Building 
Applications for
the Mac App 
Store
www.allitebooks.com

CONTENTS
Obtaining the Mac App Store on your Mac	
2
Accessing the Mac App Store	
2
Writing for the Mac App Store	
4
Requirements to Get Started	
4
Creating Mac App IDs	
5
Obtaining Developer Certificates	
6
Into the App Store!	
9
Developing Your Application	
9
Preparing iTunes Connect	
13
Preparing Your Application for Submission	
15
Validating Your Application before Submission	
19
Testing the Installation of Your Application	
21
Submitting the Application	
22
Summary	
23
About the Author	
23
www.allitebooks.com

Building Applications 
for the Mac App Store
WHAT YOU WILL LEARN 
➤
➤
How to use the Mac App Store to download and purchase 
applications
➤
➤
The tools you need to develop for the Mac App Store
➤
➤
How to obtain the various developer certificates
➤
➤
How to prepare your application for submission to the 
Mac App Store
➤
➤
How to test your applications
Apple announced the Mac App Store October 20, 2010, during Apple’s “Back to the Mac” 
event. Encouraged by the success of the iOS App Store, Apple built the Mac App Store as a 
digital distribution platform for Mac OS X applications. This enables users to easily search 
and purchase applications from a single source, much like users purchase apps from the 
App Store from the iPhone or iPad. Apple began accepting app submissions November 3, 
2010, and the Mac App Store opened for business January 6, 2011. Within 24 hours, Apple 
reported more than a million downloads.
In this eBook, you learn how to obtain and access the Mac App Store from your Mac. You 
also learn about the available opportunities for developers who want to venture into the Mac 
market. And the second part of this eBook walks you through the steps you need to perform 
to publish your apps in the Mac App Store. 
www.allitebooks.com

Building Applications for the Mac App Store
2
OBTAINING THE MAC APP STORE ON YOUR MAC
The Mac App Store is only available with version 10.6.6 or above for Mac OS X. If you run Snow 
Leopard (10.6), be sure to perform a software update to update your Mac OS X to the latest version.
After you update your Mac, you can find the App Store icon located on the Dock (see Figure 1). 
FIGURE 1 
Accessing the Mac App Store
You can directly access the Mac App Store in two ways:–Launch it through the App Store icon or 
through the Apple ➪ App Store menu.
After the Mac App Store launches, you see the window shown in Figure 2. 
FIGURE 2
www.allitebooks.com

Obtaining the Mac App Store on Your Mac
3
Similar to the iOS App Store (for the iPhone, iPod touch, and iPad), the Mac App Store has five 
sections: Featured, Top Charts, Categories, Purchases, and Updates. 
To make purchases (or download free apps) on the Mac App Store, you need an Apple ID. You can 
use the existing Apple ID that you use for your iOS App Store or apply for one if you do not have 
one. To sign in to the Mac App Store (or to apply for an Apple ID), in the Quick Links box on the 
right of the window, click Sign In. In the pop-up that appears, enter your Apple ID, or click the 
Create Apple ID button. 
To install an application, click the gray button below the application that you want to purchase 
or download; the application automatically downloads onto your computer. The application 
icon then appears on the Dock. You can also find the installed application in the Applications 
folder.
On the Mac App Store application window, if you click the Updates tab, you see a list of 
applications you previously have purchased or downloaded. For those applications installed on the 
current computer, you can see the grayed out Installed button (see Figure 3). For those applications 
you installed on another computer, you can click the Install button to download and install them on 
the current computer again. 
FIGURE 3
www.allitebooks.com

Building Applications for the Mac App Store
4
WRITING FOR THE MAC APP STORE
Now that you are sufficiently motivated with the potential success that you might enjoy with the 
Mac App Store, it’s time to take stock of what you need to have and, most important, know to 
publish your apps in the Mac App Store. 
The greatest hurdle to most developers who are new to Mac OS is the language used for Mac 
development: Objective-C. Although Objective-C is an extension of the C language, with object-
oriented features, its syntax is not quite the same as most modern programming languages such as 
Java, C#, and Visual Basic.NET. In particular, its arcane syntax for declaring and calling methods 
(known as message parsing in Objective-C) often trips up beginning programmers. Therefore, the 
first thing aspiring Mac developers should invest in is getting a good foundation in the Objective-C 
language. For this, you can get a copy of Stephen Kochan’s Programming in Objective-C 2.0 book, 
published by Addison Wesley, 2009.
Besides learning Objective-C, you should also have a basic understanding of the development 
framework used in Mac OS development: the Cocoa Framework. For a good grounding in the 
Cocoa Framework, check out Objective-C, Cocoa, and Xcode All-in-One For Dummies, by Robert 
Holcomb, published by Wiley, 2010.
Requirements to Get Started
To write for the Mac, you obviously need a Mac — any Intel Mac will do — from the entry level 
MacBook to the high-end Mac Pro. The tool for writing Mac OS X and iOS applications is Xcode, 
which you can obtain for free from http://developer.apple.com/technologies/xcode.html. 
(You do need to register for a free Apple Developer Connection [ADC] membership.) 
SETTING YOUR APP STORE EXPECTATIONS
The success of the iOS App Store has inspired many iOS developer wannabes to 
start learning and writing iOS apps. In the early days, it was much easier to make 
money selling apps on the App Store, but as more and more apps populate the 
App Store , it’s a challenge to stand out among the crowd. Although you may have 
heard of many success stories of people making millions of dollars a month selling 
apps in the App Store, behind every success story there are probably a few hundred 
sad stories as well. Most developers can’t make enough to justify the time and 
effort they spend on building the apps. 
That said, you can make some money from the Mac App Store if you have realistic 
expectations. Do not expect the earnings from the App Store to keep you alive. 
Instead, treat it as a supplement to your income from your full-time job. Do it 
in your spare time, such as at night or during the weekends. Gauge the response 
from customers, and add more features as time goes by. When you are sure your 
application has a group of followers, you can then dedicate more time to it and 
slowly make it your main source of income if the customer base is sufficient. 
www.allitebooks.com

Writing for the Mac App Store
5
To publish your applications in the Mac App Store, you need to enroll in the Mac Developer 
Program, which costs $99 per year (allowing you to publish an unlimited number of apps). You can 
enroll for the Mac Developer Program at http://developer.apple.com/programs/mac/. 
After you enroll in the Mac Developer Program, you can log in to the Mac Dev Center at 
https://developer.apple.com/devcenter/mac/index.action. 
If you have not downloaded Xcode yet, this is the time to do so. Ensure that you download Xcode 
and install it into the default /Developer directory. (Use the default settings during installation and it 
automatically does it for you.)
After installing Xcode, you also need to download an additional tool: the Application 
Tools 1.1. This can be downloaded directly from https://developer.apple.com/devcenter/
download.action?path=/ios/ios_sdk_4.2__final/application_tools_1.1.dmg.
Creating Mac App IDs
The first step toward publishing your apps in the Mac App Store is to create App IDs. App IDs are 
identifiers that uniquely identify your applications so that they can update your applications in 
the future. 
To create Mac App IDs for your applications, log in to the Mac Dev Center, and in the Developer 
Certificate Utility section, click Get Started.
You now see the Developer Certificate Utility screen (see Figure 4). To create a Mac App ID, on the 
left portion of the window, click Mac App IDs.
FIGURE 4
www.allitebooks.com

Building Applications for the Mac App Store
6
On the right portion of the window, click Create App ID. Enter the App ID name and the App ID 
Bundle Identifier, as shown in Figure 5. For the App ID name, use something descriptive, such as 
MyMacAppID. For the bundle identifier, use the reverse domain name of your company, followed by 
the app name, such as net.learn2develop.HelloMacAppStore. Click Continue to proceed to the 
next step.
FIGURE 5
In the preceding example, you created a Mac App ID that you can use later when you create a 
Mac application using Xcode. For illustration purposes, this application is a simple “Hello World”-
style application, hence the name of the Mac App ID.
After you confirm the App ID, click the Submit button to register it with Apple. 
Obtaining Developer Certificates
After you create the Mac App ID, the next step is to create the certificates needed to sign your Mac 
application. There are two certificates you need to create: one for the application itself and one for 
the installer for your application. The following steps walk you through the process.
www.allitebooks.com

Writing for the Mac App Store
7
	 1.	
On the left of the Developer Certificate Utility window, click the Mac Certificates item, and 
then on the top-right corner, click the Create Certificate button. 
	 2.	
You will be asked to select the types of certificates you want to create. Because this is the 
first time you are creating the certificates, select both (see Figure 6), and click the Create 
Certificate button.
FIGURE 6
	 3.	
You are now instructed to generate a certificate signing request using the Keychain Access 
application. Follow the instructions as shown on the page and click Continue.
	 4.	
Click the Choose File button to select the certificate signing request file that you generated 
in the previous step. Click Generate.
	 5.	
Your Mac App signing certificate will now be generated. Click Continue.
	 6.	
You can now download the certificate by clicking the Download button.
	 7.	
After the certificate downloads, double-click it, and it installs onto the Keychain Access 
application. Click the Add button to add the certificate to a keychain.
If you look at the My Certificates category of the Keychain Access application, you see the installed 
certificate, as shown in Figure 7.
www.allitebooks.com

Building Applications for the Mac App Store
8
FIGURE 7
Continuing with the certificate creation process, you can now create the certificate to be used for 
signing your installer package. You will be asked to create a certificate signing request again. You 
can use the existing certificate signing request file that you previously generated. 
Select the certificate signing request file; then click the Generate button to generate the certificate. 
When it is generated, download it and double-click to install it into the Keychain Access 
application. 
When it is done, your Keychain Access application should now contain the two certificates, as 
shown in Figure 8.
FIGURE 8
www.allitebooks.com

Into the App Store!
9
INTO THE APP STORE!
Until this point, you have downloaded the tools (Xcode and the Application Tools 1.1), configured 
iTunes connected with the App ID, and downloaded and installed the two certificates needed to sign 
your application and its associated installer. Now, you can write the actual application and then 
learn how to prepare it for submission to Apple’s Mac App Store. 
Developing Your Application
With all the preparatory work completed, it is time to develop your application and publish it on the 
Mac App Store. In this section, you create a simple application that demonstrates the steps you need 
to perform to publish your own application on the Mac App Store. 
The easiest way to launch Xcode is to type Xcode at the Spotlight. When Xcode launches, create a 
new project, and select the Cocoa Application project template, as shown in Figure 9. Click Choose 
and name the project as follows:
➤
➤
Product Name — HelloMacAppStore
➤
➤
Company Identifier — net.learn2develop
➤
➤
App Store Category — Education
FIGURE 9
Xcode now displays the various files that make up your project. Click the MainMenu.xib file, and 
then select the Window item (see Figure 10).

Building Applications for the Mac App Store
10
FIGURE 10
Select View ➪ Utilities ➪ Object Library to reveal the Object Library (see Figure 11). 
FIGURE 11 

Into the App Store!
11
Drag and drop the Label view onto the window with the HelloMacAppStore title. Double-click the 
Label view and type Hello Mac App Store!. Then, right–click it and select Font ➪ Show Fonts (see 
Figure 12).
FIGURE 12
Change the font as shown in Figure 13.
FIGURE 13 
Next, you need to prepare an icon of type ICNS. You can use the Icon Compose (comes with Xcode) 
application to convert a PNG file to the ICNS format. For this example, I dragged an ICNS file 
named icon.icns and dropped it into the project folder, as shown in Figure 14. 

Building Applications for the Mac App Store
12
NOTE  For an application to be accepted for publication in the Mac App Store, 
Apple requires it to have an application icon of size 512 3 512 pixels.
FIGURE 14
After the icon is added to the project folder, select the HelloMacAppStore-Info.plist file, and set 
the Icon file key to the name of the icon file, that is, icon.icns (see Figure 15).
FIGURE 15

Into the App Store!
13
Press Command-R to test the application. Figure 16 shows the simplest Mac application ever created!
FIGURE 16 
Preparing iTunes Connect
Now that your application is up and running, the next logical step is to get it ready for publication 
in the Mac App Store. 
First, you need to go to the iTunes Connect page (https://itunesconnect.apple.com/) to provide 
details of the application that you plan to submit. When you log in to iTunes connect, click Manage 
Your Applications.
You see your current list of applications (see Figure 17). If you previously published iPhone/
iPad applications, you should see them listed on this page. Click Add New App to add details of 
the application you plan to submit.
FIGURE 17 

Building Applications for the Mac App Store
14
Select the Mac OS X App category by clicking the icon (see Figure 18).
FIGURE 18
Now supply information for your application. Enter the following information (as shown in Figure 19):
	 1.	
In the App Name field, enter HelloMacAppStore.
	 2.	
In the SKU Number field, enter Learn2DevelopMacApp1.
	 3.	
In the Bundle ID field, select MyMacAppID – net.learn2develop.HelloMacAppStore 
(you should see the one that you have applied earlier).
	 4.	
Click Continue.
FIGURE 19

Into the App Store!
15
You are then asked to set the availability of your application and the price for your application. For 
the purposes of keeping this exercise simple, make it available immediately, and make it available as 
a free app (see Figure 20).
FIGURE 20
Next, you must enter some other information about the app and answer some questions about 
the content of the application. The answers to these questions determine the age rating for the 
application. If you answer “None” to all the questions, you receive a 4+ age rating. Finally, you also 
need to prepare a screenshot for your application so that your potential customers at least know 
what your application looks like. As the saying goes, first impression counts. So make sure you 
capture a good representation of your application at its best. 
NOTE  Apple requires the screenshot to be the following size: 1280 3 800 pixels 
or 1440 3 900 pixels. After uploading the screenshot, click Save. 
You now see a summary of the information you entered. Click Done.
Preparing Your Application for Submission
After you supply the information for your application on the iTunes connect, you need to prepare 
your application for submission. This section walks you through those steps.
First, in Xcode, change your application’s configuration from Debug to Release. To do so, select 
Product ➪ Edit Scheme. 
Then, change the Build Configuration for the Run HelloMacAppStore item from Debug to Release 
(see Figure 21).

Building Applications for the Mac App Store
16
FIGURE 21
Select the project name (HelloMacAppStore) in Xcode to reveal the Info window (see Figure 22). 
Click the Build Settings tab, and locate the Code Signing Identity setting. Set the Code Signing 
Identity setting to “3rd Party Mac Developer Application: Wei-Meng Lee” (you should see your own 
name here; see Figure 22). This is the certificate you obtained earlier for signing your application.
FIGURE 22

Into the App Store!
17
Next, locate the Debug Information Format setting and set it to DWARF with dSYM file (see Figure 23).
FIGURE 23 
Back in the HelloMacAppStore-Info.plist file, right-click any of the keys and select Show Raw 
Keys/Values (see Figure 24).
FIGURE 24

Building Applications for the Mac App Store
18
Add a new key named LSApplicationCategoryType, and set it to public.app-category.education 
(see Figure 25).
FIGURE 25
Set the key named CFBundleIdentifier to net.learn2develop.HelloMacAppStore (see Figure 26). This 
is the bundle identifier you set earlier when creating your Mac App ID.
FIGURE 26
Finally, set a new key named NSHumanReadableCopyright, and set it to a string (see Figure 27).
www.allitebooks.com

Into the App Store!
19
FIGURE 27 
You can now build your application by going to Build ➪ Archive.
Validating Your Application before Submission
When you select the Archive option in the Build menu, Xcode builds your application and then 
launches the Organizer application, as shown in Figure 28.
Before you submit your application to Apple for approval, you should validate your application to 
make sure it contains the prerequisites for submission (such as containing a valid icon file, and so 
on). Therefore, click the Validate button.
FIGURE 28

Building Applications for the Mac App Store
20
You will be asked to enter your credentials (username and password) for iTunes Connect. When 
entered, click Login. You are then asked to select the certificate that you installed earlier (for the 
Installer). Click Next (see Figure 29).
FIGURE 29
If the application validates successfully, you should see a message, as shown in Figure 30. Click Finish.
 FIGURE 30

Into the App Store!
21
Testing the Installation of Your Application
After the application has been successfully validated, the next stage is to test the installation process 
to make sure that the application can be installed correctly on the computer. To do so, execute the 
following steps:
	 1.	
In the Organizer application, click Share.
	 2.	
You will be asked to select the certificate to use for signing your application. Do so, and 
click Next (see Figure 31). 
	 3.	
Name the package HelloMacAppStore.pkg and save it onto your home directory. The 
application package is now available in your home directory.
FIGURE 31
When you build the project, Xcode saves a copy of the project files in the ~/Library/Developer/
Xcode/DerivedData/ folder. 
NOTE  In the folder containing your project, delete the build folder. This is to 
ensure that later, when you install the application, the application will install in 
the Applications folder instead of the Build folder. 

Building Applications for the Mac App Store
22
Launch the Terminal application from Spotlight, and enter the following command (see also Figure 32):
sudo installer -store -pkg HelloMacAppStore.pkg -target /
FIGURE 32
You can now find the application installed in the Applications folder (see Figure 33).
FIGURE 33
Submitting the Application
If you have been following the steps until now and everything works as described, you are finally 
ready to submit the application to Apple for approval. 
In Organizer, click Submit. You need to log in to iTunes Connect; then select the certificate to use 
and the application to submit. Click Next (see Figure 34).

About the Author
23
FIGURE 34
The submission process can take several minutes. When the application has been successfully 
submitted, you see the message indicating that the application has been submitted.
That’s it! Your application is now pending for approval from Apple. After Apple approves your 
application (which takes from one to three weeks, usually), it will be available on the Mac App Store.
SUMMARY
This eBook showed you how to obtain the Mac App Store and how to use it to download or 
purchase Mac applications. You have also gone through the various steps involved in getting your 
applications submitted to the Mac App Store. 
ABOUT THE AUTHOR
Wei-Meng Lee is a technologist and founder of Developer Learning Solutions 
(www.learn2develop.net), a technology company specializing in hands-on training for the 
latest mobile technologies. Wei-Meng has many years of training experiences, and his training 
courses place special emphasis on the learning-by-doing approach. His hands-on approach to 
learning programming makes understanding the subject much easier than reading books, 
tutorials, and documentations. 
Wei-Meng is also the author of Beginning iOS 4 Application Development (Wrox, 2010), Beginning 
Android Application Development (Wrox, 2011), and Beginning Android Tablet Application 
Development (Wrox, 2011). You can contact Wei-Meng at weimenglee@learn2develop.net.

Building Applications for the Mac App Store
Published by
Wiley Publishing, Inc.
10475 Crosspoint Boulevard
Indianapolis, IN 46256
www.wiley.com
Copyright © 2011 by Wiley Publishing, Inc., Indianapolis, Indiana
ISBN: 978-1-118-14535-7
ISBN: 978-1-118-14536-4 (ebk) 
ISBN: 978-1-118-14537-1 (ebk)
ISBN: 978-1-118-14538-8 (ebk)
No part of this publication may be reproduced, stored in a retrieval system or transmitted in any form or by any means, 
electronic, mechanical, photocopying, recording, scanning or otherwise, except as permitted under Sections 107 or 108 
of the 1976 United States Copyright Act, without either the prior written permission of the Publisher, or authorization 
through payment of the appropriate per-copy fee to the Copyright Clearance Center, 222 Rosewood Drive, Danvers, MA 
01923, (978) 750-8400, fax (978) 646-8600. Requests to the Publisher for permission should be addressed to the 
Permissions Department, John Wiley & Sons, Inc., 111 River Street, Hoboken, NJ  07030, (201) 748-6011, fax (201) 
748-6008, or online at http://www.wiley.com/go/permissions.
Limit of Liability/Disclaimer of Warranty: The publisher and the author make no representations or warranties with respect 
to the accuracy or completeness of the contents of this work and specifically disclaim all warranties, including without 
limitation warranties of fitness for a particular purpose. No warranty may be created or extended by sales or promotional 
materials. The advice and strategies contained herein may not be suitable for every situation. This work is sold with the 
understanding that the publisher is not engaged in rendering legal, accounting, or other professional services. If professional 
assistance is required, the services of a competent professional person should be sought. Neither the publisher nor the author 
shall be liable for damages arising herefrom. The fact that an organization or Website is referred to in this work as a citation 
and/or a potential source of further information does not mean that the author or the publisher endorses the information 
the organization or Website may provide or recommendations it may make. Further, readers should be aware that Internet 
Websites listed in this work may have changed or disappeared between when this work was written and when it is read.
For general information on our other products and services please contact our Customer Care Department within the 
United States at (877) 762-2974, outside the United States at (317) 572-3993 or fax (317) 572-4002.
Trademarks: Wiley, the Wiley logo, Wrox, the Wrox logo, Wrox Programmer to Programmer, and related trade dress are 
trademarks or registered trademarks of John Wiley & Sons, Inc. and/or its affiliates, in the United States and other coun­
tries, and may not be used without written permission. All other trademarks are the property of their respective owners. 
Wiley Publishing, Inc., is not associated with any product or vendor mentioned in this Wrox Blox.
This PDF should be viewed with Acrobat Reader 6.0 and later, Acrobat Professional 6.0 and later, or Adobe Digital Editions.
Usage Rights for Wiley Wrox Blox. Any Wiley Wrox Blox you purchase from this site will come with certain restrictions 
that allow Wiley to protect the copyrights of its products. After you purchase and download this title, you: 
• Are entitled to three downloads 
• Are entitled to make a backup copy of the file for your own use 
• Are entitled to print the Wrox Blox for your own use
• Are entitled to make annotations and comments in the Wrox Blox file for your own use
• May not lend, sell or give the Wrox Blox to another user 
• May not place the Wrox Blox file on a network or any file sharing service for use by anyone other than yourself or 
allow anyone other than yourself to access it
• May not copy the Wrox Blox file other than as allowed above
• May not copy, redistribute, or modify any portion of the Wrox Blox contents in any way without prior permission 
from Wiley
If you have any questions about these restrictions, you may contact Customer Care at (877) 762-2974 (8 a.m. - 5 p.m. 
EST, Monday - Friday). If you have any issues related to Technical Support, please contact us at 800-762-2974 
(United States only) or 317-572-3994 (International) 8 a.m. - 8 p.m. EST, Monday - Friday).
Executive Editor
Robert Elliott
Senior Project Editor
Ami Frank Sullivan
Technical Editor
Kunal Mittal
Senior Production Editor
Debra Banninger
Copy Editor
San Dee Phillips
Editorial Director
Robyn B. Siesky
Editorial Manager
Mary Beth Wakefield 
Production Manager
Tim Tate
Vice President and Executive 
Group Publisher
Richard Swadley
Vice President and Executive 
Publisher
Barry Pruett
Proofreader
Nancy Carrasco
www.allitebooks.com

