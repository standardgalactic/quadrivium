2	
CO M PUTE R  P U B L I S H E D B Y T H E I E E E CO M P U T E R S O C I E T Y
0 0 1 8 - 9 1 6 2 / 1 5 / $ 3 1 . 0 0  ©  2 0 1 5  I E E E
COMPUTING CONVERSATIONS
C
ombining simplicity and ease of learning with 
powerful capabilities and strong performance, 
Python is one of the most popular program-
ming languages in the world. Created by Guido 
van Rossum in 1989, Python is the leading application lan-
guage in important emerging areas such as natural lan-
guage processing and big data. It fills a very important gap 
between high-level applications like spreadsheets and sta-
tistical analysis packages and systems-oriented languages 
like C, C++, and Java. You can see my full interview with 
Guido at www.computer.org/computingconversations.
A NEW OPERATING SYSTEM
In the late 1980s, Guido was working at Centrum Wiskunde 
& Informatica (CWI), a mathematical and computer science 
research center in Amsterdam, devel-
oping a distributed operating system 
called Amoeba. Amoeba intended to 
make a network of computers appear 
as a single computer using a distrib-
uted kernel:
We wanted it to be self-host-
ing, and in order to do that, 
we realized we needed a large 
amount of user-level tools like 
an editor, a mail program, a login utility, or a backup 
tool. Because the file system model on Amoeba 
was very different from those on Unix systems, we 
couldn’t use an existing suite of Unix utilities. We 
had a small team of people working on those tools, 
but it was very slow-going writing it all in C.
Guido wondered if there might be a quicker way to get 
all of the OS utilities built:
I had this idea that given how much time we had 
available for Amoeba, I could actually build a whole 
new language, design and implement it from scratch, 
and then use it to implement our suite of tools and still 
Guido van Rossum: 
The Early Years of 
Python
Charles Severance, University of Michigan
Guido van Rossum discusses the initial 
development of Python, which has increasingly 
become the programming language of choice 
for many scientific fields due to its extensibility 
and ease of use. 

	
 F E B RUA RY 2 0 1 5
3
EDITOR CHARLES SEVERANCE 
University of Michigan, csev@umich.edu
be ahead of the game compared 
to a situation where we would 
have just clunked on writing the 
things we wanted to write in C.
For an earlier project, Guido had 
worked on a language called ABC:
I wondered if the ABC language 
would be a much better language 
to write these utility tools for 
Amoeba. But ABC was very high 
level and abstract, and it wasn’t 
well suited to talking to servers, 
file systems, and processes. In an 
alternate universe, ABC could 
have become the language of 
spreadsheets, as it was very good 
for talking about a user’s data and 
doing all sorts of clever stuff using 
general-purpose data structures 
like lists and dictionaries. ABC 
also had nice code structuring 
devices, like a few simple state-
ments that could be combined 
to create other constructs. 
Over a long holiday break in De-
cember 1989, Guido started develop-
ing an ABC-like language that could 
talk to the OS and would be suitable 
for quickly developing OS utilities for 
Amoeba. He named his nascent proj-
ect Python, taking inspiration from 
the Monty Python’s Flying Circus televi-
sion program. After the holiday break, 
he continued to evolve the new lan-
guage in his spare time:
For three months I did my day job, 
and at night and whenever I got a 
chance I kept working on Python. 
After three months I was to the 
point where I could tell people, 
“Look here, this is what I built.” It 
had an interactive interpreter loop, 
so the first demos were all, “Let’s 
assign an expression to a vari-
able and print it back,” or “Let’s 
define a small function and call 
it,” or “Let’s put some things in an 
array and iterate over the array.”
Though Python wasn’t yet ready to 
be used to develop Amoeba OS utili-
ties, the language was very appealing 
for programmers who were tired of 
writing C programs or Unix shell pro-
grams for various tasks:
My two office mates were almost 
instantly taken with [Python] 
and started helping out. A few 
others within the institute were 
also excited about Python. We 
didn’t use it on Amoeba right 
away because it wasn’t mature 
enough to actually develop 
the system utilities that we 
wanted. But it worked well on 
our Unix system, and people 
outside my department at CWI 
started using it because it was 
fun and productive to use.
After a year of development and use 
within CWI, Guido and his colleagues 
decided that Python might have a 
broader use and so decided to release 
it as free software. This was before the 
term “open source” was coined, so they 
simply looked to the MIT X-11 license 
as an example of how to release free 
software. But they needed permission 
from CWI management to release the 
product. Guido’s manager sent him to 
the legal affairs department: 
She asked me questions like, 
“Did someone pay for this to be 
developed?,” and my answer was 
“No, I started this all on my own 
time as part of some research 
projects and my manager’s fine 
with it.” So she said, “Sure, go 
ahead,” and we did it. That was 
an incredibly lucky stroke.
The first version of Python came 
out in February 1991 and was distrib-
uted using the alt.sources newsgroup 
on Usenet: 
I immediately started getting use-
ful, positive feedback from people 
who picked up Python from 
Usenet, and we quickly got into a 
routine of doing new Python re-
leases. There were the obvious im-
provements to the language, and 
the library, and bug fixes. An im-
portant category of contributions 
were ports where people had dif-
ferent architectures and different 
compilers since the Unix world 
was much less homogenous at 
the time. There were a lot of small 
Unix vendors that had their own 
compilers or their own hardware, 
all sorts of incompatibilities. 
From the initial release of Python 
through the early 1990s, the size of the 
Python community grew and numerous 
organizations started depending on the 
Python is the leading application language 
in important emerging areas such as natural 
language processing and big data.
See www.computer.org/computer-multimedia 
for multimedia content related to this article.

4	
CO M PUTE R  
W W W. C O M P U T E R . O R G / C O M P U T E R
COMPUTING CONVERSATIONS
language. With broadening adoption, 
there was a concern among users that 
“Guido might get run over by a bus.” 
Some of the adopters were US govern-
ment agencies that wanted to help grow 
and stabilize the Python community.
I got an invitation from NIST 
[National Institute of Standards 
and Technology] to come to the 
United States for a couple of 
months. We organized and hosted 
the first Python workshop at 
NIST in Gaithersburg, Maryland, 
in November 1994. Through the 
Python workshop I met people 
from the Corporation for National 
Research Initiatives (CNRI), and 
they offered me a job working on 
Python. I went back to the Neth-
erlands for a few months and then 
from 1995 to 2000 I worked in the 
US in northern Virginia at CNRI. 
Now Guido could focus on building 
Python and evolving the user com-
munity with solid support from CNRI. 
During the late 1990s, Python moved 
through a series of 1.x releases:
When I started at CNRI, Python 
1.3 was about to be released, and 
then while I was there we released 
several subsequent versions 
leading up to 1.5.2, which re-
mained sort of the gold standard of 
Python for a long time afterward.
T
he growth of the Python com-
munity from its creation in De-
cember 1989 and the maturation 
of Python 1.x in the late 1990s laid the 
groundwork for the even broader ex-
pansion of Python 2.x and now 3.x. It’s 
an excellent example of organizations 
like CWI, NIST, and CNRI making in-
vestments in an open source “com-
mons,” leading to significant positive 
value in computing. 
CHARLES SEVERANCE, Computing 
Conversations column editor and 
Computer’s multimedia editor, is 
a clinical associate professor and 
teaches in the School of Information 
at the University of Michigan. Follow 
him on Twitter @drchuck or contact 
him at csev@umich.edu.
Selected CS articles and 
columns are also available for 
free at http://ComputingNow 
.computer.org.
Fill ad

