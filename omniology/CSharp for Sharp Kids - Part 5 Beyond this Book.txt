
Table of Contents
Part V – Beyond This Book
 
                                                                                                                                  
 
 
.................................................................................................................................
 
 3  

Part V – Beyond This Book
We don't have the means to download all the information we need directly into our heads. Besides, what fun 
would that be - half the enjoyment is in the learning. Remember how you felt when you got your first 
program running? Well, there's a lot more out there waiting to be conquered.
This book has not tried to teach you everything about C# programming. It has rather tried to give you 
grounding in the basic concepts and enough exposure to real examples for you to now take yourself forward.

The Code that Visual C# Express Puts Down For You
The examples we’ve used in this book have always used single file to write the code in. Visual C# 
Express sometimes splits the code across a few files. We should point out particularly what it does 
when you start a new “Windows Application” project, so that you know where to start writing your 
form code.
The screen grab below illustrates what happens in that case – we’ve arranged the windows a bit 
differently from the default in order to show you clearly what is created for you.
Let’s discuss the four windows above:
1. Code view of Form1.cs – this holds the file where you will add code that does things on the 
form. You will, for example, add an event handler for a button here.
2. Designer view of Form1.Designer.cs – this is where you can drag-and-drop controls such as 
buttons from the toolbox. That saves you having to hand-code everything.

3. Code view of the Form1.Designer.cs – when a button, for example, is dropped on the 
designer surface, Visual C# Express writes some code for you to declare a button instance. 
That code gets put in this file. So this file is really for the system’s own use – to represent in 
code the things that you do on the design surface. You will not normally change or add code 
in this file. In fact, the system draws the designer view out of the information it finds in this 
file. (The designer view doesn’t have another file – this is its file).
4. Code view of Program.cs. This file contains the familiar Main() method and some code to 
automatically create an instance of your Form class. So it’s the file responsible for starting the 
whole program. In the case of a Windows Application you will not normally change this file.
This splitting of code across files is made possible by something called partial classes – you can have 
bits of your class in different physical files. Why on earth does the class above have to be split 
across files? It doesn’t, but there’s a good reason for doing it – to keep code apart that has different 
basic purposes. Although it may seem complex to have three files, what it’s achieved is giving you a 
single, clean file, Form1.cs, where you can write all the code that you’re interested in. The system 
often creates code for you and you’d get quite offended if it dumped that code in the file you’re trying 
to write in. Similarly, Visual C# Express could get horribly confused if you started messing with the 
files that it thinks it owns. The “partial” scheme allows everyone to have their own space to work 
in. Your territory is the top two windows in the view above – the designer view and the code 
view of Forms1.cs.
Of course, you can always choose to delete Program.cs and Form1.cs and start with your own files 
instead.
Some Further Tips
As with any new field that you learn, many questions will arise as you continue. These will often fall within 
the following areas:
1. What do I do when I get an error message in Visual C# express?

Calm down and listen to what the computer is trying to tell you. Admittedly, it's sometimes not clear 
enough, but trying to put yourself in its shoes helps.
Read more about "debugging" in Visual C# Express - it allows you to do a slow-motion step through 
a program one line at a time, even inspecting the values of your variables, behind the scenes, along 
the way. This doesn't do the fixing for you, but helps your own brain by exposing more information. 
The real detective work is up to you.
If it's not making sense, try doing a search for that error message in the help, or on your favorite 
Internet search engine. Often you will get clues which make you think differently and so grasp the 
nature of the problem. 
  
2. In the .NET Framework Class Library ...
  
a.
How do I know what classes I can find? 
b. How do I know what methods those classes have? 
c.
How do I know what parameters to pass to those methods?
  
Visual C# Express includes a thorough reference to all the classes in the .NET Framework Class 
Library. Select Help -> Contents to call up the help and then locate the topic ".NET Framework 
SDK". In the example below, suppose we were looking for information on what classes are available 
in the System.Windows.Forms namespace. We'd select "Class Library" and then scroll down the 
right-hand page to "System.Windows.Forms".

When you click the Systems.Windows.Forms hyperlink, a list of classes (in this case things like 
Button, Label, ComboBox, etc) will be displayed. Once you select a specific class (like ComboBox) 
you'll be shown something similar to the picture below. Then clicking the "Members" hyperlink will 
take you to a page which lists all the methods, properties and events available in that class and 
specifies their details. 

What's really great is the huge number of examples that are included in the reference. The cold 
reference can sometimes seem a bit meaningless, but click "Example" and suddenly things start to fall 
into place. If you don't find a suitable example by navigating the reference, do a search in the general 
help and you will often turn up useful examples that are stored in other places.
  
3. Where can I find out more?
You'll get to a point where you can't figure out more on your own. Then it's time to hit the community 
out there, see what other people are up to with C# and look at how they solve various problems with 
C#.

You would do well to spend some time on websites such as these :
  
o
http://msdn.microsoft.com/vstudio/express/visualcsharp/learning/
 
 
o
http://msdn.microsoft.com/coding4fun
 
  
o
http://msdn.microsoft.com/vcsharp/community/forums
 
  or 
http://forums.microsoft.com/MSDN/ShowForum.aspx?ForumID=160&SiteID=1 
o
www.gotdotnet.com
 
  
o
www.codeproject.com/csharp
 
  
Don't be afraid to ask some "newby" questions at the discussion forums but make sure you browse 
through first to see whether someone else has already asked such a question. 
 
Enjoy your learning journey!

About the Book
Microsoft’s newest programming language, C#, (pronounced “c-sharp”) is both powerful and easy to use. It 
presents a great opportunity for the new generation of developers to start out with a language that is highly 
respected in the modern workplace.
This text introduces object-oriented programming to the young developer (core target age is 12-16) in a 
lightweight fashion, allowing them to get started with real programs in a Windows environment.
About the Author
Martin Dreyer is an ex-high school teacher who now 
heads a team of software developers in South Africa. 
His formal qualifications are a Higher Diploma in 
Education : Physical Science and a Bachelor of Science 
Degree : Computer Science and Information Systems.
 

