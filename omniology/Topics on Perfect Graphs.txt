
TOPICS ON PERFECT GRAPHS 

annals of 
disc re t e 
mat hematics 
General Editor 
Peter L. HAMMER, Rutgers University, New Brunswick, NJ, U.S.A. 
Advisory Editors 
C. BERGE, UniversitC de Paris, France 
M.A. HARRISON, University of California, Berkeley, CA, U.S.A. 
V. KLEE, University of Washington, Seattle, WA, U.S.A. 
J.H. VAN LINT, California Institute of Technology, Pasadena, CA, U.S.A. 
G.-C. ROTA, Massacbusetts Institute of Technology, Cambridge, MA, U.S.A. 
NORTH-HOLLAND - AMSTERDAM 0 NEW YORK 0 OXFORD 

NO RTH-HO LLAND 
MATHEMATICS STUDIES 
88 
Annals of Discrete Mathematics (21) 
General Editor: Peter L. Hammer 
Rutgers University, New Brunswick, U.S.A. 
Topics on Perfect Graphs 
Edited by 
C. BERGE 
E. R. Combinatoire, 
Centre de Mathhatique Sociale, 
Paris, France 
v. CHVATAL 
Department of Computer Science, 
McGill University, 
Montreal, Canada 
1984 
NORTH-HOLLAND - AMSTERDAM 0 NEW YORK 0 OXFORD 

@ Elsevier Science Publishers B.V. 1984 
All rights reserved. No part of this publication may be reproduced, stored in a retrieval 
sysiem or transmitted, in any form or by any means, electronic, mechanical, photocopying, 
recording or otherwise, without the prior permission of the copyright owner. 
ISBN: 0 444 86587 X 
Pitblisliers: 
ELSEVIER SCIENCE PUBLISHERS B.V. 
P. 0 .  BOX 1991 
1000 BZ AMSTERDAM 
THE NETHERLANDS 
Sole distributors for the U.S. A. and Carinda: 
ELSEVIER SCIENCE PUBLISHING COMPANY, INC 
52 VANDERBILTAVENUE 
NEWY0RK.N.Y. 10017 
U.S.A. 
Library of Cougres Cataloging in Publication Data 
Main entry under title: 
Topics on perfect graphs. 
(North-Holland mathematics studies; 88) (Annals of 
1. Perfect graphs. 1. Berge, Claude. 11. Chvatal, 
discrete mathematics; 21) 
V. (Valclav) 111. Series. IV. Series: Annals of 
discrete mathematics; 21. 
QA166.16.T66 1983 
51 1’5 
8-3-2353 
ISBN 0-444-86587-X (US.) 
PRINTED IN THE NETHERLANDS 

CONTENTS 
Introduction 
PART I. General results 
C. BERGE, Minimax theorems for normal hypergraphs and balanced 
hypergraphs - A survey 
J.-C. FOURNIER 
and M. LAS VERGNAS, 
A class of bichromatic hyper- 
graphs 
L. LOVASZ, Normal hypergraphs and the Weak Perfect Graph Conjecture 
PART 11. Special classes of perfect graphs 
C. BERGE, Diperfect graphs 
C. BERGE and P. DUCHET, Strongly perfect graphs 
V. CHVATAL, 
Perfectly ordered graphs 
P. DUCHET, Classical perfect graphs 
C. GRINSTEAD, 
The Perfect Graph Conjecture for toroidal graphs 
W.-L. Hsu, The Perfect Graph Conjecture on special graphs - A 
survey 
H. MEYNIEL, 
The graphs whose odd cycles have at least two chords 
E. OLARU and H. SACHS, Contributions to a characterization of the 
structure of perfect graphs 
G. RAVINDRA, 
Meyniel’s graphs are strongly perfect 
A. TUCKER, The validity of the Perfect Graph Conjecture for &-free 
graphs 
PART 111. Polyhedral point of view 
R. GILES, L.E. TROTTER, 
Jr. and A. TUCKER, 
The Strong Perfect Graph 
Theorem for a class of partitionable graphs 
M.W. PADBERG, 
A characterization of perfect matrices 
vii 
1 
3 
21 
29 
43 
45 
57 
63 
67 
97 
103 
115 
121 
145 
149 
159 
161 
169 

vi 
Conrents 
PART IV. Which graphs are imperfect 
179 
R.G. BLAND, H.-C. HUANG and L.E. TROITER, 
JR. Graphical properties 
related to minimal imperfection 
Conjecture 
Combinatorial designs related to the Perfect Graph Conjecture 
imperfection properties 
V. CHVATAL, An equivalent version of the Strong Perfect Graph 
V. CHVATAL, R.L. GRAHAM, A.F. PEROLD and S.H. WHITESIDES, 
S.H. WHITESIDES, A classification of certain graphs with minimal 
PART V. Which graphs are perfect 
R.E. BIXBY, A composition for perfect graphs 
M. BURLET and J. FONLUFT, Polynomial algorithm to recognize a 
Meyniel graph 
M. BURLET and J.-P. UHRY, Parity graphs 
V. CHVATAL, A semi-strong Perfect Graph Conjecture 
S.H. WHITESIDES, A method for solving certain graph recognition and 
optimization problems, with applications to perfect graphs 
PART VI. Optimizaiion in perfect graphs 
M.C. GOLUMBIC, 
Algorithmic aspects of perfect graphs 
M. GROTSCHEL, 
L. LovAsz and A. SCHWVER, 
Polynomial algorithms for 
perfect graphs 
W.-L. Hsu and G.L. NEMHAUSER, 
Algorithms for maximum weight 
cliques, minimum weighted clique covers and minimum colorings of 
claw-free perfect graphs 
181 
193 
197 
207 
219 
22 1 
225 
253 
279 
28 1 
299 
301 
325 
357 

INTRODUCTION 
Many challenging problems in graph theory involve at least one of the 
following four invariants: 
(i) the stability number a ( G )  (also called the independence number), 
defined as the largest number of pairwise nonadjacent vertices in G ;  
(ii) the clique covering number 8(G), defined as the least number of cliques 
which cover all the vertices of G ;  
(iii) the clique number w(G), defined as the largest number of pairwise 
adjacent vertices in G ;  
(iv) the chromatic number y ( G )  (sometimes denoted also by x(G)), defined 
as the least number of colors needed to color all the vertices in such a way that 
no two adjacent vertices have the same color. 
The inequality a ( G )  S O(G) holds trivially for all graphs G :  if k cliques cover 
all the vertices then no more than k vertices can be pairwise nonadjacent. (A 
similar observation shows that w ( G ) S  y(G). In fact, if G denotes the comple- 
ment of G then o ( G )  = a (G) and y(G) = 8(C?).) Graphs which satisfy this 
inequality with the equality sign played an important role in Claude Shannon’s 
1956 paper concerning the ‘zero error capacity of a noisy channel’. In this paper, 
Shannon remarked that the smallest graph G with a ( G ) <  8(G) is G, the cycle 
of length five. 
It was Shannon’s work which motivated Claude Berge to make a conjecture 
(first presented at a graph theory meeting organized by Horst Sachs in Halle an 
der Saale in March 1960) concerning graphs with a ( G )  = 8(G). This conjecture 
may be stated in many different ways which are easily seen to be equivalent. 
Three of them go as follows. 
(Sl) If a graph G has no induced subgraph isomorphic to either the chordless 
cycle C, whose length p is odd and at least five or the complement c, of such a 
cycle, then a ( G )  = 8(G). 
(S2) The only minimal graphs G with a ( G )  < 8(G) are the Cp’s and the cp’s 
with p odd and at least five. 
(S3) A graph G satisfies a(GA) = f3(GA) for every set A of vertices (with GA 
standing for the subgraph of G induced by A )  if and only if no GA is isomorphic 
to a C, or a c, with p odd and at least five. 
An early effort by Alain Ghouila-Houri failed to produce a counterexample to 
this conjecture. Despite this encouraging sign, Berge felt that the conjecture 
might be too ambitious. Therefore he restricted himself to a weaker conjecture 
in the hope that it might be easier to settle. Again, this conjecture may be stated 
in many different ways which are easily seen to be equivalent; we list only three. 
vii 

viii 
Introduction 
(W1) If a graph G satisfies a(GA) = B(GA) for every set A of vertices then it 
satisfies y ( G ) =  w(G). 
(W2) If a graph G satisfies y(GA) = w ( G A )  for every set A of vertices then it 
satisfies a(G) = B(G). 
(W3) The class of graphs satisfying a(GA) = O(GA) for all A is closed under 
complementation. 
Clearly, the conjecture (W) is weaker than the conjecture (S). For this reason, 
(S) and (W) became known as The Strong Perfect Graph Conjecture and The 
Weak Perfect Graph Conjecture, respectively. (Anticipating in this brief histori- 
cal sketch, we note that the Weak Perfect Graph Conjecture was proved by 
Lovslsz in 1971. Nowadays, it is known as the Perfect Graph Theorem.) Yet 
another way of phrasing (W) is to say that ‘a graph is a-perfect if and only if it is 
y-perfect’, with ‘a -perfect’ and ‘ y-perfect’ defined as ‘satisfying the hypotheses 
of (Wl) and (W2)’, respectively. (LovBsz’s proof of (W) made this terminology 
obsolete: since ‘a-perfect’ and ‘ y-perfect’ are synonymous, both of them may be 
replaced by ‘perfect’.) 
The evolution of the theory of perfect graphs may be traced back to the first 
international meeting on graph theory held at Dobogoko (Hungary) in October 
1959. At this meeting, A. Hajnal and J. SurBnyi presented an elegant result: 
Every triangulated graph G satisfies a (G) = B(G). (An immediate corollary of 
this theorem states that every triangulated graph G is a-perfect.) Berge 
complemented this result by showing that every triangulated graph G satisfies 
y(G) = w(G). (Now the easy corollary states that every triangulated graph is 
y-perfect.) Berge also noticed that there are other interesting classes of graphs 
which are simultaneously a-perfect and y-perfect. For instance, the comparabil- 
ity graphs are a-perfect by virtue of Dilworth’s theorem and y-perfect by an 
easy ad hoc argument. Similarly, the line graphs of bipartite graphs are a-perfect 
and y-perfect by two different theorems of Konig. 
After the meeting at Halle an der Saale in 1960, the Strong Perfect Graph 
Conjecture received the enthusiastic support of G. HBjos and T. Gallai. In fact, 
Gallai provided further evidence in support of the conjecture by strengthening 
the results on triangulated graphs: he proved that a graph is a-perfect and 
y-perfect whenever each of its odd cycles of length at least five has at least two 
non-crossing chords. 
Nevertheless, Berge still felt that the weak conjecture was more promising. At 
a conference at Rand Corporation in the summer of 1961, he had fruitful 
discussions with Alan Hoffman, Ray Fulkerson and others. Later on, discussions 
between Alan Hoffman and Paul Gilmore led Gilmore to a rediscovery of the 
Strong Perfect Graph Conjecture and to an attempt to axiomatize the relevant 

Introduction 
ix 
properties of cliques in perfect graphs. Ray Fulkerson attacked the weak 
conjecture from a linear programming point of view, which led to the develop- 
ment of his theory of ‘antiblocking polyhedra’. He proved that the conjecture 
was equivalent to another statement, which he found too strong to be true. For 
this reason, he concentrated his efforts on attempts to find a counterexample: 
even though he had reduced the conjecture to a certain ‘duplication lemma’, he 
missed its proof. (Later, when informed by Berge that the validity of the 
conjecture had just been established by Loviisz, he was able to supply the 
missing link independently in only a few hours.) Lovhsz’s beautiful proof of the 
Weak Perfect Graph Conjecture was found in 1971 independently of Fulkerson’s 
work. 
After more than twenty years, the Strong Perfect Graph Conjecture remains 
open. The question of its validity alone (or the problem of describing all minimal 
imperfect graphs) has become only secondary when compared with the impor- 
tant body of work stimulated by the conjecture over the years. Much of this work 
has an intrinsic interest independent of the Strong Perfect Graph Conjecture: it 
would not become obsolete even if the conjecture were proved. The purpose of 
this book is to present selected results on perfect graphs in a single volume. 
These are reprinted classical papers (sometimes with slight simplifications), 
survey papers written for this collection or new results. They concern different, 
and often overlapping, aspects of perfect graphs. We shall now comment on 
some of these aspects. 
Part I. General Results 
When described by a reference to its cliques, a perfect graph becomes a 
normal hypergraph. LovBz’s proof of the Perfect Graph Theorem (1972) is given 
on pp. 29-42 of this volume in its original form, first in the context of hypergraph 
theory, and then with another characterization. A proof of Lovhsz’s theorem 
also appears in the article on pp. 3-19, together with various minimax equalities 
for normal hypergraphs - and, more specifically, for balanced hypergraphs, 
which motivated, since 1970,. the development of hypergraph theory. The 
elegant framework of hypergraph theory is also the setting of a work by Fournier 
and Las Vergnas (pp. 21-27), who proved in 1972 an interesting property of 
cliques in perfect graphs conjectured by Lovhsz. 
Part II. Special Classes of Perfect Graphs 
Three classical examples (triangulated graphs, comparability graphs and line 
graphs of bipartite graphs) have been mentioned above. Results in this direction 
are surveyed in the papers by Duchet (pp. 67-96) and Golumbic (pp. 301-323). 

X 
Introduction 
Another classical example is provided by the theorem of Gallai: A graph is 
perfect whenever each of its odd cycles of length at least five has two non-crossing 
chords. A companion theorem, in which ‘non-crossing’ is replaced by ‘crossing’, 
was proved by Olaru and may be found in the paper by Olaru and Sachs 
(pp. 121-144). Both of these results were generalized by Meyniel in 1976 (see 
article this volume, pp. 115-119): A graph is perfect if each of its odd cycles of 
length at least five has two (or more than two) chords. 
Other special classes of perfect graphs may be obtained by forbidding, in 
addition to all the Cp’s and cp’s with p odd and at least five, an extra graph F. 
This has been done for F = K4 by Tucker (see pp. 149-157), and for F = K1,3 by 
Parthasarathy and Ravindra (see articles on pp. 103-113 and pp. 161-167). The 
paper by Hsu (see pp. 103-113) generalizes various techniques used in this 
direction. 
As examples of ‘ad hod classes, we have included the paper of Grinstead (pp. 
97-101), concerning toroidal graphs. In the first article in this volume, the reader 
will also find the main results about another class, the balanced graphs, whose 
perfectness follows from a theorem of Berge and Las Vergnas (1970): A graph is 
perfect whenever each odd cycle has an edge inducing only maximal cliques which 
contain three vertices of the cycle. 
Finally, a new class, the ‘strongly perfect’ graphs, is introduced by Berge and 
Duchet (pp. 57-61): In every induced subgraph of a strongly perfect graph, some 
stable set meets all the maximal cliques. This class includes the comparability 
graphs, the triangulated graphs, and the complements of triangulated graphs. 
Ravindra (pp. 145-148) and Chv6tal (pp. 63-65) have shown that it includes also 
the Meyniel graphs and the ‘perfectly orderable’ graphs, respectively. 
Part III. Polyhedral Point of View 
With each graph G on n vertices, we may associate two polytopes P ( G )  and 
Q(G). The first polytope P ( G )  is the convex hull of all the incidence vectors of 
stable sets in G (a stable set being a set of pairwise nonadjacent vertices). The 
second polytope is obtained by associating a variable x, with each vertex of G 
and then defining O(G) 
by the system of inequalities 
xu s 1 for each clique C, 
V E C  
x, 3 0  for each vertex u. 
Trivially, P ( G ) C  Q(G) for every graph G. The unique character of perfect 
graphs is illuminated by the fact that P ( G )  = Q(G) if and only if G is perfect. 
This statement has been proved first by Fulkerson and then independently by 
Chvital; yet another proof may be found in Berge (pp. 3-19). Further results in 

Introduction 
xi 
this direction have been found by Padberg (see pp. 169-178). Padberg’s results 
are used by Giles, Trotter and Tucker (pp. 161-167) to establish a class of graphs 
for which the Strong Perfect Graph Conjecture holds true. 
Part IV. Which Graphs are Imperfect? 
If the Strong Perfect Graph Conjecture holds true, then the answer is ‘those 
containing a C, or a c, with p odd and at least five’; in any case, the question is 
equivalent to asking which graphs are minimal imperfect. A major breakthrough 
in this direction is due to Lovhsz (see article on pp. 29-42): Every minimal 
imperfect graph G with n uertices has n = (Y (G)w(G) + 1. 
This result led Bland, Huang and Trotter (pp. 181-192) to call a graph G 
partitionable if there are integers r, s greater than one and such that 
(i) G has precisely rs + 1 vertices; 
(ii) for each vertex u of G, the vertex-set of G - u can be partitioned into r 
disjoint cliques of size s and into s disjoint stable sets of size r. 
Bland, Huang and Trotter observed that a graph is imperfect if and only if it 
contains an induced partitionable subgraph. (The ‘only if’ part follows instantly 
from Lovisz’s theorem; to see the ‘if’ part, note that (ii) along with r,s 2 2  
implies (Y(G)= 
r, w ( G ) =  s.) Jack Edmonds and Kathie Cameron (K. B, 
Cameron, Polyhedral and Algorithmic Ramifications of Antichains, Ph.D. 
Thesis, University of Waterloo, 1982) pointed out an immediate corollary of this 
observation: the class of imperfect graphs belongs to NP. 
Building up on Lovhsz’s theorem, Padberg (pp. 169-178) was able to establish 
additional properties of minimal imperfect graphs. Each of them (with n 
vertices) has precisely n stable sets S1, S2,. . . , S, of size (Y = a ( G )  and precisely 
n cliques C1, C,, . . . , C, of size w = w ( G ) .  Furthermore, each vertex is in 
precisely (Y stable sets S, and in precisely w cliques C,. Finally, S, n C, = 0 if and 
only if i = j  (for some appropriate choice of indexing). 
For every choice of a and w greater than one, a graph satisfying Padberg’s 
conditions may be constructed by taking vertices ul, uz, . . . , v, ( n  = a w  + 1) and 
making u, adjacent to u, if and only if 1 i - j 1 < w (with arithmetic modulo n ) .  
The resulting graph is denoted by CZil. A theorem found by ChvGtal (see 
pp. 193-195) shows that the Perfect Graph Conjecture may be restated as 
follows: 
(S4) Every minimal imperfect graph G has a spanning subgraph isomorphic 
to C:::l 
with (Y = (Y ( G )  and w = w ( G ) .  
Unfortunately, Padberg’s conditions may be satisfied by graphs radically 
different from CZ:l; Chvhtal, Graham, Perold and Whitesides (see pp. 197-206) 
described ways of constructing infinite families of graphs which, in spite of their 

xii 
Introduction 
unwieldy structure, do satisfy Padberg’s conditions. Two of these graphs were 
found independently by Bland, Huang and Trotter (see pp. 181-192). The case of 
a = 4 and w = 3 is studied in detail by Whitesides (see pp. 207-218). 
Part V. Which Graphs are Perfect? 
From the point of view of computational complexity, this question is definitely 
not just another way of asking which graphs are imperfect. To this day, nobody 
has even guessed at a ‘certificate of perfection’ which could be attached to every 
perfect graph and whose validity could be checked in polynomial time. We 
believe that even just a correct guess at such a certificate (a companion to the 
Strong Perfect Graph Conjecture) would bring us a long way towards settling the 
Strong Perfect Graph Conjecture itself. Still, the question as to whether such a 
certificate exists at all is rarely asked. 
Analogous questions are answered satisfactorily for many special classes of 
perfect graphs; the details may be found in Golumbic (pp. 301-323). For 
instance, there is a polynomial-time algorithm which, given an arbitrary graph G, 
will find out whether G is a comparability graph or not. In fact, this algorithm 
will also furnish a certificate for its output: either a certain way of putting arrows 
on the edges of G, which certifies that G is a comparability graph, or a certain 
sequence of vertices in G, which certifies that G is not a comparability graph. A 
companion polynomial-time algorithm will accept any comparability graph along 
with its certificate (directions on edges), producing a largest clique and a 
minimum coloring as the output. It is tempting to speculate that the same pattern 
could be followed by a proof of the Strong Perfect Graph Conjecture. A 
polynomial-time algorithm, given any graph G, would produce either a certifi- 
cate of perfection for G or one of the forbidden induced subgraphs (C, or c, 
with p odd and at least five in case the Strong Perfect Graph Conjecture is valid). 
Then a companion polynomial-time algorithm, given any perfect graph along 
with its certificate of perfection, would produce a largest clique and a minimum 
coloring. (Of course. the existence of the first of these two algorithms would 
imply that the class of perfect graphs belongs to P rather than merely to NP.) 
It is conceivable that every perfect graph can be built from ‘primitive’ perfect 
graphs by simple operations which preserve perfection. For instance, the role of 
the primitive perfect graphs could be played by comparability graphs or line 
graphs of bipartite graphs; the operations could consist of pasting two perfect 
graphs together along a clique or taking their ‘join’, as in the paper by Bixby 
(pp. 221-224). If the initial class of ‘primitive’ perfect graphs belonged to NP and 
if the operations could be carried out in a polynomial time, then the desired 
‘certificate of perfection’ would follow immediately. This idea was put forth by 
Sue Whitesides in conversations with Chvgtal in the fall of 1977 (although it is so 

... 
Introduction 
Xlll 
natural that we would not be surprised if others had proposed it earlier). in fact, 
it motivated her to design the algorithm for recognizing graphs with clique- 
cutsets, which is reproduced here (pp. 281-297). 
A systematic and steady progress towards answering the question ‘which 
graphs are perfect?’ is being made by the Grenoble School. First, Michel Burlet 
and Jean-Pierre Uhry (pp. 253-277) designed a polynomial-time algorithm to 
recognize the graphs whose perfection was established by Olaru (every odd cycle 
of length at least five has two crossing chords), then Burlet, and independently 
Whitesides, found an analogous result for the graphs of Gallai (every odd cycle 
of length at least five has two non-crossing chords) and quite recently Burlet and 
Fonlupt (pp. 225-252) designed a polynomial algorithm to recognize the Meyniel 
graphs (every odd cycle of length at least five has two chords). This last result 
implies that every Meyniel graph can be built from ‘primitive Meyniel graphs’ by 
an interesting new operation which preserves perfection. 
An intriguing sidelight to the question ‘which graphs are perfect?’ is provided 
by speculations about its possible interplay with the Perfect Graph Theorem: a 
certificate of perfection for G provides a certificate of perfection for the 
complement c. This point of view led Chvatal (pp. 279-290) to propose a 
‘Semi-strong Perfect Graph Conjecture’ which suggests that a certificate of 
perfection could be formulated in terms of induced P4’s, and therefore apply 
automatically to a graph and its complement at the same time. 
Part VI. Optimization in Perfect Graphs 
The four invariants cu(G), 8(G), y(G) and w ( G )  are difficult to evaluate: 
each of the four problems of recognizing graphs G and integers k with 
a ( G ) a  k, B(G)S k, w ( G ) >  k and y ( G ) S  k, respectively, is NP-complete. (In 
fact, the second and the fourth problems remain NP-complete even if the value 
of k is fixed, as long as it is at least three.) Nevertheless, polynomial-time 
algorithms for solving the four optimization problems (finding a largest set of 
pairwise nonadjacent vertices, etc.) in restricted classes of perfect graphs have 
been known for a long time. The classical ones, involving triangulated graphs 
and comparability graphs, are surveyed in Golumbic (pp. 301-323). Recent 
results of Burlet and Fonlupt, applying to the wide class of Meyniel graphs, are 
as yet unpublished and will appear elsewhere in a companion paper to that on 
pp. 225-252; nevertheless, the algorithms of Burlet and Uhry (see pp. 253-277) 
for solving the four optimization problems in the class of Olaru-Sachs graphs 
may be found in this volume. Hsu and Nemhauser (see pp. 357-369) treat the 
class of claw-free perfect graphs. 
A fundamental result in this direction is due to Grotschel, Lovasz and 
Schrijver (see pp. 325-356), who designed polynomial-time algorithms for 

xiv 
Introduction 
solving the four optimization problems in arbitrary perfect graphs. Their 
algorithms are ingenious variations on the celebrated ‘ellipsoid method’ for 
linear programming, and therefore very much unlike the typical combinatorial 
optimization procedures. Can they be replaced by polynomial-time algorithms of 
a more transparent combinatorial nature? 

PART I 
GENERAL RESULTS 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 3-19 
@ Elsevier Science Publishers B.V. 
MINIMAX THEOREMS FOR NORMAL HYPERGRAPHS 
AND BALANCED HYPERGRAPHS - A SURVEY 
C. BERGE 
C. 
N. R.S. Paris 
1. Introduction 
By definition, a minimax property can be written as follows: “the minimum of 
something is equal to the maximum of something else”. For the perfect graph G, 
the properties “ y ( G )  = u(G)” and “cu(G) = 6(G)” are of that type. In fact, the 
perfect graphs have several other minimax properties which are usually stated in 
the terminology of “normal hypergraphs”. 
In 1969, we introduced a special class of perfect graphs defined as follows: for 
every odd cycle (el, e2,. . . , elk+,), and every sequence of distinct maximal cliques 
(C,, C,, 
. . . , Czk+I), 
where Ci 
contains the two end-points of ei, at least one of the 
C,’s contains three vertices of the cycle. This concept, also called “balanced 
hypergraph”, has been of some importance for the theory of linear programming 
in integers and generalizes the totally unimodular (0, 1)-matrices. 
This paper is intended to survey and to complete the collection of minimax 
properties for normal hypergraphs and balanced hypergraphs. We shall remain 
in the context of Hypergraph Theory, but the reader can easily translate all the 
results in terms of graphs. 
In Section 2, we recall the definitions of Hypergraph Theory which are related 
to packing problems. In Section 3, we give the main minimax equalities for 
normal hypergraphs in only one theorem; a unified proof is given for Lovkz’s 
theorem [19], Chviital’s theorem [5], and other results. This section is mainly 
based on results of LOV~SZ, 
which give a more elegant presentation than the 
theory of antiblocking polyhedra (see [13]). In Section 4, we study the hyper- 
graphs with the Menger property. These hypergraphs are not normal but have 
similar properties. In Section 5, we study the paranormal hypergraphs. In 
Section 6, we prove several minimax theorems concerning balanced hyper- 
graphs. In particular we give an answer to a problem raised by Fulkerson, 
Hoffman and Oppenheim [14]. 
3 

4 
C. Berge 
2. General definitions 
A hypergraph H is a family (El, E2.. 
..,Em) of non-empty subsets, called 
edges; U E ,  = X is the vertex-set, and H is often described by its incidence 
matrix, i.e., a (0, 1)-matrix A with m columns representing the edges and n rows 
representing the vertices. This matrix A has no 0-vector as a row or as a column. 
The rank of H is r ( H )  = max, I E, 1, and the anti-rank is s ( H )  = min, I E, 1 .  The 
maximum degree A ( H )  is the maximum number of edges having a point in 
common. A partial hypergraph of H is a hypergraph H’ obtained from H by 
removing some of the edges (and the vertices which become isolated), or, 
equivalently, by removing some columns of the incidence matrix A, and the rows 
which become 0-vectors. The subhypergraph of H induced by a set S C X is the 
hypergraph Hs obtained by replacing each edge E, by E, fl 
S, and by removing 
an edge E, if E, n S = 0. The dual hypergraph of H is the hypergraph H* 
defined by the transpose A* of the incidence matrix A. A set T C X is a 
transversal set of H if T meets all the edges; the family of all the minimal 
transversal sets is called the transversal hypergraph, and is denoted by TrH. 
min{ I TI I T E TrH} is called the transuersal number, and is denoted by r(H). A 
matching is a partial hypergraph H’ of maximum degree 1. The matching 
number v ( H )  is the maximum number of edges in a matching. If v ( H )  = T(N), 
the hypergraph H is said to have the Kiinigproperty. A transversal T can also be 
defined by its characteristic vector t = ( t l ,  tz, . . . , t”), where t, = 1 if T 3 x,, and 
t, = O  otherwise; such a vector t is a (0,l)-vector of the polytope 
P = { t  I t E R”, t 2 0, tA 
1). 
Similarly, a matching H‘ can be defined by a characteristic vector z = 
(z,, zl,. . ., zm); such a vector z is a (0, 1)-vector of the polytope 
O = { z  I z E R ” .  2 2 0 ,  A r S 1 ) .  
Hence, P is called the transversal polytope and 0 is called the matchingpolytope. 
If p = (p,, p 2 , .  . . , p.) is a vector with non-negative integral coordinates, we 
define a p-matching as an integral vector of the polytope 
0, 
= { z  l z  ER“, z S O ,  Az S p f .  
If 9 = (4,. 
92,. . . ,9,,,) is a vector with non-negative integral coordinates, we 
define a q-transversal as an integral vector of the polytope 
P , = { t I t E R ” ,  ( 3 0 ,  t A s q } .  
The maximum 9-value of a p-matching is denoted by 
v
(
~
;
 
p. 4) = max{(q, z )  I z E N” n 0,). 

Minimax theorems 
5 
The minimum p-value of a q-transversal is denoted by 
T ( H ;  p, q ) = min{(p, t ) I t E N" fl P,}. 
Clearly, T ( H ;  1,1) = T ( H )  and v(H; 
1,l) = v(H). 
Proposition 2.1. We have 
w ; P? 4 )  s 7 * ( H ;  
P, 4 )  s 7w ; P, q 1, 
where 7 * ( H ; p , q )  = max{(q, z )  I z E Q,} = min{(p, t )  I t E P,}. 
This follows immediately from the duality principle of linear programming. 
3. Normal hypergraphs 
Let H be a hypergraph. Denote by &(x) the degree of a vertex x, put 
A ( H )  = max dH ( x ) ,  and denote by q ( H )  the chromatic index, that is, the least 
number of colors needed to color the edges so that no two intersecting edges 
have the same color. Clearly, q ( H )  2 A (H). H is called a normal hypergraph if 
every partial hypergraph H' of H satisfies q (H') = A (H'). 
It is not difficult to see that H is a normal hypergraph if and only if its dual is 
the clique-hypergraph of a perfect graph. To study the properties of normal 
hypergraphs, the basic result is the following (LovBsz's) lemma: 
Lemma (Lovasz [19]). Let H =  (E1,E2, 
..., Em) be a hypergraph on X =  
{ x l ,  x 2 , .  . . , x"}, and let y = ( y l ,  y 2 , .  . . , y m )  E N". Then the hypergraph obtained 
from H by multiplying each E, by yi is also normal. 
Proof. Consider the hypergraph fi = (EI, El, E2, E,, . . . , E m )  where E ;  = El; it 
suffices to show that q ( f i )  = A (fi). Put q ( H )  = A ( H )  = q. 
Case 1. The edge El contains a vertex x with dH ( x )  = A (H). Then, A (I?) = 
q + 1, and 
A (fi) < q (B) < q ( H )  + 1 = q + 1 = A (R). 
So q ( f i )  = A ( f i )  and the proof is achieved. 
Case 2. The edge El contains no vertex x with d H ( x )  = A ( H ) .  
Consider an optimal q-coloring of the edges of H. Let (1) be the color received 
by the edge El. Let HI be the family of edges of H having color (1) which are 
different from El. Each vertex x with d H ( x )  = A ( H )  belongs to an edge of HI, so 
Since H is normal, q (H - HI) = q - 1; therefore, we can color with q - 1 
A ( H  - Hi) = 4 - 1. 

6 
C. Beige 
colors the edges in H - H I ,  and with one new color for H I  +EI, we obtain a 
q-coloring of H. SO 
q ( H ) S  q = A ( f i ) s  q ( H ) .  
Hence, q ( H )  = A(I?). 0 
In order to include also the results of Chvatal [5] and of Fulkerson [ 131, we 
rephrase the theorem of Lovasz as follows: 
Theorem 3.1. Let H = (El, E2,. . . , E m )  be a hypergraph on X with incidence 
matrix A. The following conditions are equivalent: 
(1) H is normal, i.e.. q(H') = A(H') for every H' C H ;  
(2) every uertex of matching polytope Q = {y I y E R m, y 3 0, Ay S 1) has 
(3) every vertex of the matching polytope Q has integral coordinates ; 
(4) v(H;l,q)=7*(H;l,q)forevery 
q E N " ;  
( 5 )  v ( H ; I , q ) = ~ ( H ; l , q )  
forevery q E N ' " ;  
(6) every partial hypergraph H' satisfies v(H') = T(H'). 
(0, 1)-coordinates ; 
Proof. (1) implies (2). Let z be a vertex of the polytope Q ; since z is determined 
by a system of equalities with integral coefficients, its coordinates are rational, 
and the.re exist integers k,pl,p2 ,... ,pm s 0 SO that kz = ( p l , p z , .  . . , 
p m ) .  
In the hypergraph fi obtained from H by multiplying each edge E, by p i ,  we 
have 
Hence, A ( H ) S  k, and, by the lemma, q ( H ) S  k. 
matching GAS 
Put 
1 
Thus there exists a k-coloring of the edges of fi, and each color A defines a 
if one copy of E, is in H A ,  
i 0 otherwise. 
y: = 
The vector y A  = ( y ; ,  y:, . . . , y i), 
with (0, 1)-coordinates, belongs to Q; further- 
more 
Since z is a vertex of 0, 

Minimax theorems 
7 
This shows that z is a vector with (0, 1)-coordinates. 
(2) implies (3). Obvious. 
(3) implies (4). Since max{(q, y) I y E Q} is reached by a vertex of the polytope 
Q, we have 
(4) implies (5). Put 
O,={z l z E Q , ( z , q ) = y ; ( Y , q ) ] .  
Since Q1 is a face of the polytope Q, there exists a row-vector a'l of the incidence 
matrix A such that 
z E Ql 3 
( u j l , z )  = 1. 
It follows from (4) that each matching of H with maximum q-values covers the 
vertex xjl. Put 
qi - 1 if xi, E Ei, 
qi 
otherwise. 
q ;  = 
Thus 
v ( H ; l , q ' ) =  v ( H ; l , q ) - 1 .  
As above, there exists a vertex x, of H and a vector q2 = (q;, q:, . . . ,qL) such 
that 
v ( H ;  1, q2) = v ( H ;  1, ql)- 1. 
We continue to define a sequence a = (xi,, x,, . . . , x j k )  until we have 
v ( H ; l , q k ) = O .  
The vector t = (tl, tZ, . . . , tn), where tj is the number of appearances of xj in the 
sequence a, is a q-transversal of H such that 
" 
(t,l)= 
tj = k = v ( H ; l , q ) .  
j = l  
Hence t is a q-transversal of minimum value, and 
T(H; 4, 
I)= V ( H ;  1,q). 

8 
C. Berge 
(5) implies (6). Let H' be a partial hypergraph of H, and put 
1 
if E, E H', 
0 otherwise. 
ql = {  
The vector q = (ql, q2,. . . , q m )  satisfies 
U(H;l,q)= V ( H ' ) ,  T(H;l,q)=T(H'). 
Thus (5) implies u(H') = T(H'). 
(6) implies (1). It suffices to show that a hypergraph H which satisfies (6) is 
such that q ( H )  = A ( H ) .  
Let 
be a hypergraph whose vertices are the matchings of H, and where an 
edge E, denotes the set of all matchings of H containing E,. Clearly, E, 17 E, = 0 
if and only if E, f l  E, # 0. Since H satisfies (6), it has the Helly property, hence 
v ( H )  = A(H). 
Also, 
9(H) = ~(ff), T(G) 
= q(H), d(H) = v ( H ) .  
Hence l? is normal; since we have already shown that (1) implies (6), we get 
v(z?) = T(H), or, equivalently, 
q (HI = A (H). 
This achieves the proof. 0 
Let G be a graph, and let A be the incidence matrix whose columns represent 
the vertices of G and whose rows represent the maximal cliques of G. 
Let S ( G)  be the set of the characteristic vectors of all the stable sets of G; 
clearly, the convex hull [S(G)] of S(G) is contained in the matching polytope 
Q = {z I z E R", z 3 0. Az s 1). Theorem 3.1 shows something more: 
Corollary (Chvatal [5]). [S(G)] = Q if and only if G is a perfect graph. 
Proof. Clearly, a vector s = (sl, s2,. . . , s,,) belongs to S(G) if and only if s is a 
(0, 1)-vector of Q. Consequently, the result follows from the equivalence 
between (1) and (2) in Theorem 3.1. 0 
Another proof based on the powerful theory of antiblocking polyhedra [13] 
has been discovered by Fulkerson and can be found in [34]. 

Minimax theorems 
9 
4. The Menger property 
A hypergraph H on X =(xI,x2, ..., x n }  has the Menger property 
if 
u(H;p, 1) = 7 ( H ; p ,  1) for every n-dimensional vector p with non-negative 
integral coordinates. 
Lemma. Let H = (El, E2,. . . , E m )  be a hypergraph of order n, and let q E N". 
The following conditions are equivalent: 
(i) 7 * ( H ; p ,  q )  is an integer for every p E N" ; 
(ii) ~ * ( H ; p , q ) = ~ ( H ; p , q )  
for everypEN". 
Proof. Clearly, (ii) implies (i). Now we shall show that (i) implies (ii). 
A = ((a:)); let X be a vertex of the polytope 
Let H be a hypergraph with the property (i) and with incidence matrix 
P, ={x I x  E R " ,  x ~ 0 ,  
xA a q } .  
We write: X E Extr(P,). It suffices to show that all the coordinates of X are 
integral. Let us show, for instance, that XI is integral. Put 
For j < n, put 
C a',+l 
i f j E J .  
dl = I 
k E K  
For every x E P,, the vector d = (d,, d2,. . . , d,) satisfies 
For x = X, this yields 
If x E P,, x #  2, the vector x cannot be in all of the bounding hyperplanes 
{X I x, = o}, ; 
E J, Or {X I (&, X )  = qk}, k E K, SO that 
Let A be a positive integer; put 
d ( h )  = (Ad, + 1, Adz, Ad3,. . . , Ad,). 

10 
C. Rerge 
Clearly, the minimum of (d(A), x) for x E P, is obtained for at least one vertex 
of the polytope P,. say x ( A ) .  Since the set Extr(P,) is finite, there exists a vertex 
2 E Extr(P,) which satisfies 
= x (A) for an infinity of values of A. Since 
( d, I) 
+ I, (d, X ) + 
X, 
A 
A 
for an infinity of A's, we get 
(d, i) 
s (d, x). 
From (2) and (3), it follows that 
Thus the minimum of the linear function ( d ( A ) ,  x )  = A(d, x) + xI is obtained 
= X. 
for x = X with an infinity of values of A. So for some integer h, we have 
h(d, 2 )  + il = min (d(h), x) = T * ( H ;  d(h), 4 ) .  
X € P S  
From (2) and (3), we obtain also 
h(d, X) = min (Ah, x) = T*(H; id, 4). 
X€Pq 
So X, = T * ( H ; d ( h ) , q ) -  T*(H;hd,q), and XI is an integer. 0 
Theorem 4.1 (Hoffman). Let H be a hypergraph. The following conditions are 
equivalenr (and characterize the Menger property): 
(i) v ( H ;  p, 1) = T ( H ;  p, 1) for euery p E N" ; 
(ii) v(H;p, 1) = T * ( H ; ~ ,  
1) for every p EN". 
Proof. (i) implies (ii) by Proposition 2.1, and (ii) implies (i) by the lemma. 0 
To recognize the hypergraphs satisfying the Menger property consider a 
hypergraph H = (El, E2,. . . ,Ern) on X = {xl, x2,. . . , x,} and an integer p, 2 1. 
Define a hypergraph H ( x , , p , )  obtained from H by replacing x, by a set 
X = {x:, xf, . . . , x?} and by replacing each edge E, containing x, by p, new 
edges: 
(E, -{~,})U{.K;}, k = 1,2 ,... ,pt. 
For p, = 0, define H ( x , , p , )  by removing from H all the edges containing xi. We 
shall refer to H ( x , , p , )  as the ''multiplication'' of the vertex x, by p,. For an 
integral vector p = (p,, p2,. . . , p") 3 0, let H(p) be the hypergraph obtained from 
H by multiplying x1 by pl, and then x2 by pz, etc. Clearly, 
T(H"') = T ( H ;  p, l), v(H"') = v ( H ; p ,  1). 
So, if X is a family of hypergraphs H satisfying v ( H )  = T(H), and if H E  X 

Minimax theorems 
11 
implies H@’E X, we know that every hypergraph in X satis,fies the Menger 
property. 
Example 1. Let G be a multigraph, and let a, b be two of its vertices. Consider 
the hypergraph H whose vertices are the edges of G, and whose edges are the 
sets of edges constituting an elementary chain connecting a and b in G. In fact, 
the multiplication of a vertex e, of H by pt is equivalent to considering a 
multigraph obtained from G by replacing the edge. e, by pr parallel edges (or 
removing e, if p, =O). 
Since the Menger theorem asserts that v ( H )  = T ( H ) ,  the multiplication 
principle shows that H has the Menger property. 
Example 2 (Edmonds [6]). Generalizing Example 1, consider a set S of vertices 
in G, with I S 12 2, and a hypergraph H whose edges are the chains connecting in 
G two distinct vertices of S. 
A theorem of Edmonds [6] asserts that v ( H )  = T(H); therefore, H has the 
Menger property (by the multiplication principle). 
Example 3. Let G be a directed graph and let a be a vertex. Consider the 
hypergraph H whose vertices are the arcs of G, whose edges are spanning 
arborescences rooted in a. A theorem of Edmonds [7] asserts that v ( H )  = 7 ( H )  
(see an elegant proof by LovAsz [20]). Therefore H satisfies the Menger property 
(by the multiplication principle). 
Example 4 (Schrijver [30]). Generalizing Example 3, consider a directed graph 
G = (X, U), and a directed graph K = (X, V )  on X such that each pair of source 
and sink of K is connected by a directed path of K. The family (W,, Wz, . . .) of 
subsets Wi 
of U such that K + Wi 
is strongly connected (and which are minimal) 
constitute a hypergraph H on U, and Schrijver [30] has proved that v ( H ) =  
T(H). Therefore H satisfies the Menger property. 
This result implies, by constructing appropriate graphs K, many known 
results, such as Menger’s Theorem for directed graphs, Gupta’s Theorem for 
bipartite graphs [15], Edmonds’ branching Theorem (Example 3), a special case 
of a conjecture of Edmonds and Giles [8] (also proved independently by 
D. Younger), and a theorem of Frank [lo]. 
Example 5 (Rothschild and Whinston [25]). Consider a multigraph G with only 
even degrees, and let a, a‘, b, b’ be four vertices. Consider the hypergraph H 
whose vertices are the edges of G, and whose edges are the chains linking a and 
a’, or b and b‘. Rothschild and Whinston 1251 have shown that H has the 
Menger property. 

12 
C. Beige 
Example 6. Let G be a simple graph, and let a and b be two vertices. Consider 
the hypergraph H whose vertices are the vertices of G different from a, b, and 
whose edges are the chains linking a and b in G. 
By the theorem of Menger and by the multiplication principle, H satisfies the 
Menger property. 
An equivalent way to study the Menger property is to consider the transversal 
hypergraphs. For a hypergraph H on X = {xl, 
x2,. . . , x n } ,  and for a non-negative 
integer-valued vector p = (p,, p 2 , .  . . , p"), let H P  denote the hypergraph obtained 
from H by replacing each vertex x, by a set X, with IX, I = p,, and by replacing 
each edge E, by u{X, Ix, EE,}. 
Theorem 4.2. Let H be a hypergraph on X ={xI,x2 ,..., x,,}, and let p = 
( p l , p 2 , .  . . , p n )  E N". Then 
Tr[H'"] = [Tr HI", Tr[H"] = [Tr HI"'. 
The proof is easy. 
Let a ( H )  denote the maximum number of colors needed to color the vertices 
of H ss that every edge contains all the colors. Clearly 
cr(H)sminIE, I = s ( H ) .  
We shall say that H satisfies the Gupta property if a ( H P )  
= s(HP) for every 
p EN". For instance, if G is a bipartite multigraph, the dual G* satisfies the 
Gupta property by a theorem of Gupta [ 151. 
Theorem 4.3. A hypergraph satisfies the Gupta property if and only if its 
transversal hypergraph satisfies the Menger property. 
Proof. By Theorem 4.2, 
a ( ~ ~ )  
= v[Tr(HP)] 
= V [ ( T ~ H ) ' ~ ' ] ,  
s ( H ~ )  
= T [ T ~ ( H ~ ) ]  
= T[(T~H)"']. 
Hence the result follows. 
5. Paranormal hypergraphs 
A hypergraph H of order n is paranormal if 7 ( H ; p ,  1) = 7 * ( H ; p ,  1) for every 
n-dimensional vector p 3 0. By Proposition 2.1, every hypergraph with the 

Minimax theorems 
13 
Menger property is paranormal. The converse is not true. For instance, the dual 
K :  of the 4-clique K4 is paranormal, but v(K:) = 1 and T ( K $ )  
= 2; hence K $  
does not have the Menger property. 
Proposition 5.1. Let H be a hypergraph on X = {x,, x2,. . . , x,} with incidence 
matrix A. The following conditions are equivalent (and characterize the paranor- 
mal hypergaphs): 
(i) ~ ( H ; p , l ) = ~ * ( H ; p , l )  
for allp E N " ;  
(ii) T * ( H ; ~ ,  
1 )  is integral for all p E N "  ; 
(iii) every vertex of the transversal polytope P = { t 1 t E R ', t > 0, tA 3 1) has 
(0, 1)-coordinates. 
Proof. This follows immediately from Theorem 4.1 and its lemma. 0 
Several examples of paranormal hypergraphs arise in matroid theory (see 
Woodall [35]). Other examples follow from the theory of T-joins developed by 
Edmonds and Johnson [9] to generalize the famous Chinese Postman problem of 
Guan Megu. 
Let G = (X, E )  be a multigraph without loops, and let T be a non-empty 
subset of X. A T-join is a minimal subset F C  E such that the partial graph 
G' = (X, F )  satisfies 
{ x  I d&)= 
1 modulo 2} = T. 
A T-cut is an elementary cocycle w ( A ) ,  A C X, such that 
/ A  n TI = 1 modulo 2. 
It is easy to show that the transversal hypergraph of the T-join hypergraph is 
the T-cut hypergraph, and vice versa. Edmonds and Johnson have proved that 
every T-join hypergraph is paranormal (see also Seymour [31]). 
Example 1. Let G be a simple connected graph on X where I X I is even. An 
X-join of G is a spanning forest with only odd degrees. An X-cut is a cocycle 
w ( A )  where [ A  I is odd. 
Example 2. Let a, b be two vertices of G. Let T = {a, b}. A T-join is an 
elementary chain connecting a and b. A T-cut is a cut between the vertices a 
and b. 
Example 3. Let T = { x  I x E X, dG ( x )  3 1 modulo 2). A T-join is a minimal set 
of edges which need to be duplicated to get an eulerian graph. For A C X ,  

Hence I o ( A ) J  is odd if and only if I T n A I is odd. So a T-cut is an elementary 
cocycle w ( A )  with an odd number of edges. 
6. Balanced hypergraphs 
Let H = ( E l ,  E2,. . . , Em) be a hypergraph with incidence matrix A. 
A cycle is a sequence (xI1, E,,, xQ, E,, . . . , xIk, E,,, x,J, where k 2 2, the x,,,’s are 
distinct vertices, the E p ’ s  are distinct edges, and each edge Elp contains the two 
vertices which are before and after it in the sequence. 
A hypergraph H is balanced if every cycle with an odd number of edges 
admits an edge containing at least three vertices of the sequence - or, 
equivalently, if the incidence matrix A does not contain an odd square 
submatrix of the the following type: 
1
1
 0
0
.
.
 .
0
0
 
0
0
0
0
 . . .  1 1  
1
0
0
0
 . . .  0 1  
We introduced this concept to extend theorems about hypergraphs with no 
odd cycles and totally unimodular matrices. 
Proposition 6.1. Let H be a balanced hypergraph ; then every partial hypergraph 
H’ is also balanced. 
Proof. See [l]. 0 
Proposition 6.2. Let H be a balanced hypergraph on X, and let S C X ;  then the 
subhypergraph Hs induced by S is also balanced. 
Proof. See [l]. 
Proposition 6.3. Let H be a balanced hypergraph, then its dual H* is also 
balanced. 
Proof. See [l]. 0 

Minimax theorems 
15 
Proposition 6.4. Let H be a balanced hypergraph on X = {xl, x2,. . . , x"}; then H P  
is also balanced, p E N". 
Proof. It suffices to prove the result for p = (0,1,1,. . . ,1) and for p = 
(2,1,1,. . . ,l). In the first case, H P  = Ha, where A = X - {xl}, and the result 
follows from Proposition 6.2. In the second case, H P  is obtained from H by 
replacing x ,  by a set X1 = {xi, x;}. Let p be an odd cycle of H P  which does not 
have an edge containing three vertices of the sequences. If p contains both xl 
and x;, then p = (. .., z,E,xl, ..., xY) and the edge E which precedes x; 
contains the vertices z, x i  and x;, which is a contradiction. If p does not contain 
x;, say, then p induces on H an odd cycle with no edge containing three 
vertices, which is a contradiction. 0 
Proposition 6.5. A hypergraph H is balanced if and only if every induced 
subhypergraph Hs is bicolorable (i.e., there exists a bipartition (S1, S2) of S such 
that every edge of Hs with more than one point meets both S1 and S,). 
Proof. See [l]. 0 
Proposition 6.6. Let H be a balanced hypergraph on X = {xl, x2,. . . , x,,}; then 
H@) is also balanced, p EN". 
Proof. It suffices to prove the result for p = (0,1,1,. . . , 1 )  and p = (2,1,1,. . . , 1). 
In the first case, the result follows from Proposition 6.1. In the second case, H(") 
is obtained from H by replacing x1 by two additional vertices x I and xY, and each 
edge E containing x1 by two edges E'= ( E  -{xl})U{xl} 
and 
El'= 
Every bicoloring of H induces a bicoloring of H(p) (by giving the same color to 
x I and x:'), and every bicoloring of H@) in which x i  and x; have the same color 
induces a bicoloring of H. So, if an induced subhypergraph K of H@) has no 
bicoloring, then K contains both x i  and x;' and K is induced by a subhypergraph 
Hs. Since Hs has a bicoloring, the contradiction follows. 0 
( E  - {XJ) u (x9. 
Proposition 6.7. A hypergraph H is balanced if and only if q (Hk) = A (Hk) for 
every partial subhypergraph H;. 
Proof. See [l]. 
Proposition 6.8. A hypergraph H is balanced if and only if every induced 
subhypergraph Hs is normal. 

16 
C. Berge 
Proof. This follows from Proposition 6.7 and the definition of normality. 0 
Proposition 6.9. A hypergraph H is balanced if and only if every partial 
subhypergraph HL satisfies the Konig property 
v(HL)= 7(Hk). 
Proof. This follows immediately from Proposition 6.8 and Theorem 3.1. 0 
The first proof of this result was due to Berge and Las Vergnas [3], but a 
simpler proof was found later by LovBsz. 
Proposition 6.10. A hypergraph H is balanced if and only if 
v ( H s ; I , q ) = T ( H s ; l , q )  ( S C X ,  qEN"'). 
Proof. From Proposition 6.8 and Theorem 3.1. 0 
Proposition 6.11. A hypergraph H is balanced if and only if 
v ( H s ; l , q ) = ~ * ( H s ; l , q )  
( S C X , q E N " ' ) .  
Proof. From Proposition 6.8 and Theorem 3.1. 0 
Proposition 6.12. A hypergraph H is balanced i f  and only if every partial 
hypergraph H' has the Menger property. 
Proof. Let H be a balanced hypergraph on X = {xl, x2,. . . , x.} and let p E N". 
By Proposition 6.6, H'p' is balanced. By Proposition 6.9, 
v ( H ;  p. 1) = v(H"') = T ( H ( ~ ) )  
= T ( H ; ~ ,  
1). 
So every partial hypergraph H' C H also satisfies v(H'; p, 1 )  = T(H'; p, 1). Hence 
H' has the Menger property. 
Conversely, let H be a hypergraph whose partial hypergraphs have the 
Menger property. Assume that H is not balanced; there exists an odd cycle, say 
(xl, El, xZ. E2,. 
. . , X 2 k + l r  EZk+l, 
x,), with no edge containing three vertices. Put 
H' = (El, E2,. 
. . , Ezk+J and p, = 1 if i S 2k + 1 ,  p, = + r: if 2k + 1 < i 6 n. We 
have 
v(H'; p, 1) = k, T ( H ' ; ~ ,  
1) = k + 1. 
So H' does not have the Menger property, which is a contradiction. 0 
The fact that every balanced hypergraph has the Menger property was first 
proved (by different methods) by Fulkerson, Hoffman and Oppenheim [14]. 

Minimax theorems 
17 
Proposition 6.13. A hypergraph H is balanced if and only if every partial 
hypergraph H’ is paranormal. 
Proof. Let H be a balanced hypergraph. By Proposition 6.12, H’ is paranormal. 
Now, let H be a hypergraph whose partial hypergraphs are paranormal. There 
exists an odd cycle (XI, El,. . . , EZk+1, XI) with no E, containing three x,’s. Define 
(as above) H’ and p. Then 
T(H‘; p, 1 )  = k + 1, T*(H‘; p, 1 )  = (2k + 1)/2. 
Hence by Proposition 5.1, H’ is not paranormal, which is a contradiction. 0 
Proposition 6.14. A hypergraph is balanced if and only if every partial hyper- 
graph has the Gupta property. 
Proof. As above, it suffices to show that a balanced hypergraph H of order n 
satisfies the Gupta property. 
Since H P  is also balanced for every p E N ”  (Proposition 6.4), it suffices to 
show that a ( H )  = s(H). 
Let k = min I E, 1, and let (SI, Sz, . . . , s k )  be a partition of the vertex-set X into 
k classes. Denote by k ( i )  the number of classes which meet E,. 
If k ( i )  = k for all i, all the classes are transversal sets of H, and the proof is 
achieved; otherwise, there exists an index j S m with k ( j )  < k. Since k ( j )  < k c 
(E, 1, there exists a class S, such that 
Is, n~,I==2. 
Furthermore, there exists a class S, such that 
1 S, f l  E, 1 = 0. 
The subhypergraph HspuSq is balanced, and therefore has a bicoloring (Sb, S:). 
Put S :  = S, for r# p, q. The partition (Sl, S:, . . . , S:) determines as above new 
coefficients k’(i), and 
k’(i)* k ( i )  ( i  S m ) ;  k ’ ( j )  = k ( j ) +  1. 
With this method, it is always possible to improve a partition (Sr, S:, . . . , S ; )  
until we have k ’ ( i )  = k for all i ;  then we have a partition of X into k = s ( H )  
transversal sets, and the proof is achieved. 0 
Proposition 6.15. Let H be a balanced hypergraph. Then the transversal hyper- 
graph Tr H has the Menger property. 
Proof. This follows from Proposition 6.14 and Theorem 4.3. 0 

18 
C. Berge 
Note that this result is an answer to one open problem raised by Fulkerson, 
Hoffman and Oppenheim [14], who found a balanced hypergraph whose 
transversal hypergraph is not balanced, and asked if such a transversal hyper- 
graph has similar properties. 
The above results can be applied to the class of graphs defined in the 
introduction, and to many hypergraphs arising in graph theory. In particular, 
every hypergraph whose incident matrix is totally unimodular is balanced 
(because this class is characterized by the Ghouila-Houri property: every 
subhypergraph admits a bicoloring which splits every edge in two equal parts). 
For instance, the dual of a bipartite multigraph is balanced. Also, if T is an 
arborescence on X, and if H is a hypergraph on X whose edges E, are subsets of 
X such that TE, is a path, it is clear that H is unimodular and, consequently, 
balanced. Other balanced hypergraphs have been considered by Frank [12]. 
We can also summarize the above results by considering the property 
v(H;p,q) = T ( H ; ~ ,  
4). This equality holds for every p E N "  and every q EN" 
if and only if h is a unimodular hypergraph. If H is a balanced hypergraph, 
Proposition 6.10 states that the above equality holds for every p EN" with 
(1. + 1;)-coordinates, and every q E N". Also, Proposition 6.12 states that the 
above equality holds for every p E N", and every q EN" with (0, 1)-coordinates. 
But the above equality does not hold for every p E N" and every 4 E N". For 
instance, let H be a hypergraph with edges E ,  = {1,4}, E, = {2,4}, E, = {3,4}, 
E, = {1,2,3,4}. Let p = (2,2,2,3), q = (1,1,1,2). It is easy to see that t = ( ~ , 2 , 2 , ~ )  
belongs to the q-transversal polytope of H, and z = (f,f,f,i) belongs to the 
p-matching polytope. Since (p, 1 )  = (q, z )  = 4.5, we have (by Proposition 2.1) 
T * ( H ; ~ ,  
q) = 4.5. Hence 
I
I
I
I
 
V ( f f ; p ,  4 ) = 4  < 4.5 = T * ( H ; p ,  q)< 5 = T ( H ; p ,  4 ) .  
We do not know what are all the pairs (p, q )  such that v ( H ;  p, q) = T ( H ;  p, q) 
for every balanced hypergraph H with n vertices and m edges, i.e., if there is a 
common generalization to Proposition 6.10 and Proposition 6.12. 
References 
[I] C. Berge, Balanced matrices, Math. Program. 2 (1972) 19-31. 
[2] C. Berge. Balanced matrices and property G, Math. Program. Study 12 (1980) 16>175. 
(31 C. Berge, C.C. Chein, V. Chvital and C.S. Seow, Combinatorial properties of polyominoes, 
[4] C. Berge and M. Las Vergnas, Sur un thCortme du type Konig pour hypergraphes, Ann. N.Y. 
Combinatorica 1 (1981) 217-224. 
Acad. Sci. 175 (1970) 32-40. 
[S] V. Chvatal, On certain polytopes associated with graphs, J. Comb. Theory, Ser. R, 18 (1975) 
13RlS4. 
[6] J. Edmonds, Submodular functions, matroids and certain polyhedra, Combinatorial Structures 
and their Applications (Gordon and Breach, 1969) 6%87. 

Minimax theorems 
19 
[7] J. Edmonds, Edge disjoint branchings, Combinatorial Algorithms, New York, 1973, 91-96. 
[8] J. Edmonds and R. Giles, A min-max relation for submodular functions on graphs, Studies in 
[9] J. Edmonds and E.L. Johnson, Matching, Euler Tours and the Chinese Postman, Math. 
Integer Programming, Ann. Discrete Math. 1 (1977) 185-204. 
Program. 5 (1973) 88-124. 
[lo] A. Frank, Kernel systems of directed graphs, Acta Sci. Math. (Szeged) 4 (1979) 63-76. 
[ll] A. Frank, Covering branchings, mimeo, Janos Bolyai Institute, 1979. 
[12] A. Frank, On a class of balanced hypergraphs, mimeo, Research Inst. for Telecom., Budapest, 
[13] D.R. Fulkerson, Blocking and anti-blocking pairs of polyhedra, Math. Program. 1 (1071) 
[I41 D.R. Fulkerson, A.J. Hoffman and R. Oppenheim, On balanced matrices, Math. Program. 
[15] R.P. Gupta, An edge-coloration theorem for bipartite graphs, Discrete Math. 23 (1978) 
[16] A.J. Hoffman, A generalization of max-flow min-cut, Math. Program. 6 (1974) 352-359. 
[17] A. Lehman, On the width-length inequality, mimeo, 1965. 
[18] L. LovLsz, 2-matchings and 2-covers of hypergraphs, Actes Math. Acad. Sci. Hung. 26 (1975) 
[19] L. Lovisz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
[20] L. LovLsz, On two min-max theorems in graphs, J. Comb. Theory, Ser. B, 21 (1976) 96103. 
[21] J. F. Maurras, Polytopes i sommets dans [O, l]“, These doctorat d’etat, Paris VII, 1976. 
[22] M.W. Padberg, On the facial structure of set packing polyhedra, Math. Program. 5 (1973) 
[23] M.W. Padberg, Perfect zero-one matrices, Math. Program. 6 (1974) 18&196. 
[24] M.W. Padberg, Almost integral polyhedra related to certain combinatorial optimization 
[25] B. Rothschild and A. Whinston, On 2-commodity network flows, Oper. Res. 14 (1966) 377-387. 
[26] M. Sakarovitch, Quasi-balanced matrices, Math. Program. 8 (1975) 382-386. 
[27] M. Sakarovitch, Sur quelques problemes d’optimisation combinatoire, These doctorat d’etat. 
[28] A. Schrijver, Fractional packing and covering, Packing and Covering (Sti. Math. Centrum 
[29] A. Schrijver and P.D. Seymour, A proof of total dual integrability of matching polyhedra, 
[30] A. Schrijver, Min-max relations for directed graphs, Report AE 21/80, University of Amster- 
[31] P.D. Seymour, On multicolorings of cubic graphs and conjectures of Fulkerson and Tutte, 
[32] P.D. Seymour, The forbidden minors of binary clutters, J. London Math. Soc. 12 (1976) 
[33] P.D. Seymour, Discrete Optimization, Lectures Notes, Univ. Oxford, 1977. 
[34] L. E. Trotter, Solution characteristics and algorithms for vertex packing problems, Thesis, 
[35] D.R. Woodall, Menger and Konig systems, Theory and Applications of Graphs; Springer 
1979. 
16&194. 
Study 1 (North-Holland, Amsterdam, 1974) 120-132. 
229-233. 
433444. 
253-267 (this volume, pp. 29-42). 
199-215. 
problems, Linear Algebra & Appl. 15 (1976) 69-88. 
Grenoble, 1975. 
Amsterdam, 1978) 175-248. 
Math. Centrum report ZN, 1977. 
dam, 1980. 
mimeo, Oxford, 1977. 
356-360. 
Cornell University, 1973. 
Verlag Lecture Notes in Math. 642 (1978) 620-635. 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 21-27 
@ Elsevier Science Publishers B.V. 
A CLASS OF BICHROMATIC HYPERGRAPHS 
Jean-Claude FOURNIER 
Universitt Paris-Val de Maine, U.E.R. de Sciences Economiques et de Gestion, 94210 La 
Varenne St-Hilaire, France 
Michel LAS VERGNAS* 
Universitt Pierre el Marie Curie, U.E.R. 48 - Mathtmatiques, 7.5005 Paris, France 
We give a sufficient condition for bichromatic hypergraphs in terms of properties of cycles. 
Application: The set of inclusion-maximal cliques of a perfect graph can be partitioned into 
two classes such that both classes are represented at every vertex contained in at least two 
inclusion-maximal cliques. 
1. Bichromatic hypergraphs and perfect graphs 
Let G be a graph with vertex-set V. A clique of G is a subset of V inducing a 
complete subgraph of G. We denote by K ( G )  the hypergraph with vertex-set V 
whose edges are inclusion-maximal cliques of G. 
We recall that a hypergraph H is normal ([l], [5]) if v ( H ’ ) =  7 ( H ‘ )  for all 
partial hypergraphs H‘ of H, where v(H’) 
is the maximal number of pairwise 
disjoint edges of H’ and T(H’) is the minimal cardinality of a set of vertices 
meeting all edges of H’. A partial hypergraph H’ of H is constituted by a subset 
of the edge-set of H [l]. 
It is easily seen that a graph G is perfect if and only if K(G)*, the dual 
hypergraph of K(G), is normal. By definition of a dual hypergraph [l], vertices 
of K(G)* are inclusion-maximal cliques of G and edges of K(G)* are all sets 
K,(G), 
x E V, where Kx (G) is the set of inclusion-maximal cliques of G 
containing the vertex x. 
A hypergraph H = (X, ‘8) is bichromatic if there is a partition X = B + R, 
called a bicoloring, such that every edge E E 8 with lE 12 2 meets both B and 
R. 
In relation with his work on perfect graphs Lovasz asked: Is every normal 
hypergraph bichromatic? [5]. We answered positively this question in the 
following more general form: 
Theorem 1 [2]. A hypergraph with no odd cycles of maximal degree two is 
bichromatic. 
* C.N.R.S. 
21 

22 
3.-C. Foumier, M. Las Vergnas 
In a hypergraph a cycle (with length k )  is defined by a sequence 
( x l .  E l ,  x2. E2,. 
. . , X k ,  E k , x l )  of pairwise distinct vertices x I ,  xZ,. . . , Xk and pair- 
wise distinct edges El, E z , .  . . , E, such that x, € E,-l 
n E, for i = 2,3,. . . , k and 
xI E Ek 
f l  El. A cycle is of maximal degree two if any three of its edges have an 
empty intersection. An odd cycle is a cycle with an odd length k 2 3 .  
Clearly a normal hypergraph contains no odd cycles of maximal degree two. 
Hence by Theorem 1 every normal hypergraph is bichromatic. Equivalently we 
have the following corollary: 
Corollary. The set of inclusion-maximal cliques of a perfect graph can be 
partitioned into two classes such that both classes are represented at each vertex 
contained in at least two inclusion -maximal cliques. 
Theorem 1 can be equivalently stated: A hypergraph with no odd cycles of 
maximal degree two such that any two non-consective edges of the cycle are 
disjoint is bichromatic (see [2]). A conjecture due to Sterboul [6] proposes a 
strengthening of this form of Theorem 1: 
Conjecture [6]. A hypergraph with no odd cycles ( x , ,  El, x Z ,  E2,. . . , x k ,  Ek, x , )  
such that any two non-consecutive edges are disjoint and I E, fl E,+l 
1 = 1 for 
i = 1,2,. . . , k - 1 is bichromatic. 
Clearly a cycle with length > 3 such that any two non-consecutive edges are 
disjoint is of 
maximal degree two. On the other hand a 3-cycle 
( x , ,  El, xZ, EZ, 
x,, E3, xl) such that I El r l  E,I = I E2 fl Ejl = 1 is also of maximal 
degree two. Hence Sterboul’s conjecture implies Theorem 1. 
We emphasize that in Sterboul’s conjecture the condition 1 El fl Ek I = 1 is not 
required. Actually there are non-bichromatic hypergraphs containing no odd 
cycles such that any two non-consecutive edges are disjoint and any two 
consecutive edges have exactly one common vertex (for example, the collection 
of ( n  + 1)-subsets of a set with 2 n  + 1 elements). In other words Sterboul’s 
conjecture is not true if we require I El fl Ek I = 1. 
In the present note we prove a theorem intermediate between Sterboul’s 
conjecture and Theorem 1. The main results were first published in French by 
the same authors in [3]. 
All hypergraphs considered in this paper are finite and without multiple edges. 
2. A sufficient condition for bichromatic hypergraphs 
Theorem 2. A hypergraph with no odd cycles (XI, EI, 
X Z ,  E2,. . . , x k ,  Ek, X I )  Of 

A class of bichromatic hypergraphs 
23 
maximal degree two such that IE, n E,+l\ = 1 for 
i = 1,2,. . . , k - 1, is 
bichroma tic. 
The following lemma immediately implies Theorem 2 by induction on the 
number of vertices: 
Lemma. Let H = (X, 8 )  be a hypergraph containing an edge Eo E 8, I Eo 1 3 2, 
such that H \Eo = ( X ,  % \{E,,}) is bichromatic. Suppose further that there is a vertex 
z E Eo such that every odd cycle (xl, El, xz, E2,. . . , xk, Ek, xl) with maximal 
degree two satisfying 1 E, n E,+I 
1 = 1 for i = 1,2,. . . , k - 1 contains Eo, suy 
El = Eo, and has xi, xz # z. Then H is bichromatic. 
Proof. Let X = B + R (blue and red) be a bicoloring co of H\Eo. We assume 
notations such that Eo C B (if E, meets both B and R there is nothing to prove). 
The central idea of the proof is to construct inductively a sequence co, cl, . . . , c, 
of bipartitions of X, c,: X = B, + R,, by interchanging colors blue and red on a 
set meeting all edges of H monochromatic in c,-,. Thus at each step the edges 
not bicolored by c , - ~  become bicolored by c,. The hypothesis of the lemma 
ensures that this algorithm does not cycle: Let 8, denote the set of edges 
monochromatic in c,. We will prove that the 8,’s are pairwise disjoint. Hence by 
finiteness %, 
=B for some p, i.e., c, is a bicoloring of H. 
More precisely: At the beginning go = (Eo}. We set To = ( z }  and define c1 by 
B1 = B \ To and R I  = R + To. In general suppose c , - ~  has been defined, i 3 2. We 
have E,g 8,-1 (the set of edges monochromatic in c , - ~ ) ;  this fundamental 
property will be proven inductively. Hence B, resp. R, meets all edges in 8,-l. 
For i even, resp. i odd, let T,-, be a set contained in R, resp. in B, meeting all 
edges in 
and minimal with respect to inclusion with these properties. We 
define c, by B, = B,_,+ T-,, R, = R,-,\T,-, if i is even, and B, = B,-l\T,-,, 
R, = 
+ T,-I if i is odd. 
We prove the following properties by induction on p 2 1: 
(1.p) gP is disjoint from go, 
( 2 . p )  every edge in gp meets Tv-l and is blue in c, (i.e., contained in B,,) 
for p 
(3.p) T, is disjoint from Eo, T1,. .., Tp-l. 
The case p = 1 is immediate. Suppose p 3 2  and (l.i), (2.i), (3.i) hold for 
,..., 8p-i; 
even, and red for p odd; 
i=1,2 ,..., p - 1 .  
Proof of (1.p). An edge E E 8,, 1 C i G p - 1, meets T,-I by (1.i) and meets 
also T, by definition of T,. Now by (3.1), . . . , (3.p - 1) the sets Eo, TI,. . . , T+ are 
pairwise disjoint, hence all T, with an even index i < p - 1 are red in c, and all T 
with an odd index are blue. It follows that all edges in g1, g2, ..., 
are 

24 
J.-C. Fournier, M. Lm Vergnas 
bicolored in c,. On the other hand, Eo is also bicolored since Eo\ T ,  is blue in c, 
and T ,  is red. Hence gP is disjoint from 8", 8,, . . . , 
Proof of (2.p). An edge E E '8, 
is bicolored in 
by (1.p). Since E is 
monochromatic in c,,, necessarily E meets Tp-I and its color is that of Tp-l in c,, 
hence (2.p). 
Proof of (3.p). It is easily seen that T, is disjoint from To, TI,. . . , Tp-l. 
Suppose for instance p even. The edges in E, are blue in c, by (2.p) and 
T,, Tz,. .. , Tp-2 are red by (3.1), . . . ,(3.p - 1). Hence T, does not meet 
T,, T2,. . .. Tp-2. On the other hand T, is contained in B and TI, T3,. . . , T,-, in 
R. The case p odd is analogous. 
We have thus to prove that T, n (&\ To) = 0. This is clear for p odd since 
Eo C B and T, C R in this case. Suppose p is even. We show that E,, fl E = 0 for 
all edges E E gP. 
Let E, E 8, and suppose for a contradiction that there is xo E E, f l  (Eo\{z}). 
Let x, E Tp-l f l  E,. By the minimality of T,-, there is Ep-l E 
such that 
E,-, fl T,-, = {x,}. Since 
is red in c,-~ by (2.p - I), and €, is blue in c, by 
(2.p) we have 
n E, c Tp-I, hence E,-, n E, C EP-, n Tn-, = { x p } ,  and thus 
E,-, n E, = {x,}. Repeating this procedure with 
instead of E,, and induc- 
tively, we get a sequence E P , ~ P , E p - l r ~ P  
,,. . . ,xI 
= z, Eo with E, E g,, 
x, E 7'-, 
and E, n 
= {x,-J of pairwise distinct edges and pairwise distinct vertices, 
hence an odd cycle (xu, Eo, x I ,  El,. . . , x,, E,, xo). 
By the hypothesis of the lemma this cycle is not of maximal degree two - 
there are three edges E,, El, E,, 0 s i < j < k G p, such that E, f l  El n E, # @. 
Suppose i, j, k are chosen with this property such that k - i is minimal. 
Let y E E, n El n €5. We first show that y #  x,+,, xlrZ,. . . , xk. Suppose k is 
even. The edge E, being blue in c k  by (l.k), y is different from xl, xsr.. . , 
& - I  
which are red in c, by (3.1), . . . , (3.k - 1). Suppose y = x,, s even, i + 1 S s S k. 
If s < k the cycle (xs, Es,xs+l, E,,,,. . . , Xk,&,xs) is an odd cycle with maximal 
degree two (by the minimality of k - i )  contradicting the hypothesis of the 
lemma. Hence s = k. Necessarily i and j are odd - 
if i is even, i7 being blue 
in 
c, cannot contain 
xk 
which is red 
in 
c,. But then the cycle 
( x k ,  E,, x , + ~ ,  E,+I,. 
. . , x,, El, & )  is odd with maximal degree two, contradicting the 
hypothesis of the lemma. The case k odd is similar. 
The indices i and j have necessarily different parities - 
otherwise the cycle 
(y, E,, x,+,, E,,,, . . . , x,, El, y )  is odd with maximal degree two, contradicting the 
hypothesis of the lemma. Similarly j and k have different parities. 
A final contradiction arises as follows: suppose i even, j odd, k even (the case 

A class of bichromatic hypergraphs 
25 
i odd, j even, k odd is similar). Since E, is blue in c, and El n R is red in c,, we 
have E, n El C B. Similarly El n Ek C R. Therefore E, n El fl El, = 0. 0 
Theorem 2 implies Sterboul’s conjecture for hypergraphs with 2- or 3-element 
edges: 
Corollary. Let H be a hypergraph with rank S 3  containing no odd cycle 
(xl, El, x2, Ez,. . . , X k ,  Ek, xl) such that any two non-consecutive edges are disjoint 
and 1 E, n E,+I 
1 = 1 for i = 1,2,. . . , k - 1. Then H is bichromatic. 
Proof. We show that H satisfies the hypothesis of Theorem 2. Suppose, for a 
contradiction, that there is an odd cycle (xl, El, x2, E2,. . . , 
x k ,  Ek, xl) with 
maximal degree two such that I E, n E,+, 
I = 1 for i = 1,2,. . . , k - 1. We consider 
such a cycle with minimal length k. By hypothesis there are two non-consecutive 
edges, say El and El, 3 S j S k - 1, such that I El fl 
El I # 0. Let y E El n El ; 
y is different from xl, x 2 , .  . . , X I ,  since the maximal degree is two. As I El 1, 
IE, I s 3 necessarily 
El = {y, xl, x2}, El = {y, x,, x,+J 
and 
El n El = {y}. 
Hence one of the two cycles (xl, El, y, El, x,+I, EI+2, x,+2,. . . , X k ,  Ek, XI) and 
(y,E1,x2, E2,x,,. . . , x,, E,, y )  is odd and thus contradicts the minimality of k. 0 
This proof still works if H contains a unique edge with more than three 
vertices. However, if H contains several edges with cardinality 3 4  the above 
proof cannot be used, as an odd cycle (xl, El, x2,. . . , 
x k ,  Ek, xl) with maximal 
degree two such that 1 Ei n Ei+, I = 1 may not contain any odd cycle with this 
property such that, furthermore, non-consecutive edges are disjoint. An 
example is the hypergraph with edges 01, 067, 1289, 23, 34, 4589, 567. 
3. Minimal non-bichromatic hypergraphs 
A hypergraph H = (X, 8) is minimal non-bichromatic if H is non-bichromatic 
and H \ E is bichromatic for every E E 8. Clearly a hypergraph H = (X, ‘i9) is 
bichromatic if and only if there is no partial hypergraph of H which is minimal 
non-bichromatic. 
Theorem 1 and Theorem 2 have the following equivalent statements as 
properties of minimal non-bichromatic hypergraphs: 
Theorem 1. In a minimal non-bichromatic hypergraph there is an odd cycle with 
maximal degree two such that any two non-consecutive edges are disjoint. 
Theorem 2. In a minimal non-bichromatic hypergraph there is an odd cycle with 

26 
J.-C. Foumier, M. Las Vergnas 
maximal degree two such that, with at most one exception, all intersections of two 
consecutive edges are of cardinality one. 
This form of Theorem 1 has the following strengthening: 
Theorem 1' ([4]). Let H = ( X ,  a) be a minimal non-bichromatic hypergraph. For 
every E E % and z E E  there is an odd cycle (xl,El = E x 2  = z,E2, ..., xk,Ek,xl) 
with maximal degree two such that any two non-consecutive edges are disjoint and 
E, n E~ = { z } .  
The corresponding statement for Theorem 2 does not hold: The hypergraph 
with edges 12, 179,235, 34,356, 45,679, 78,89 is minimal non-bichromatic. The 
edge 12 is not contained in any odd cycle with maximal degree two. 
We have the following theorem: 
Theorem 3. In a minimal non-bichromatic hypergraph which is not a graph 
(odd) cycle there are at least two different odd cycles with maximal degree two such 
that, with at most one exception, all intersections of two consecutive edges are of 
cardinality one. 
Proof. Let H be a minimal non-bichromatic hypergraph, different from a graph 
(odd) cycle. By Theorem 2, H contains an odd cycle (xl, El, x2, E?, . . . , x k ,  Ek, 
x,) 
with maximal degree two such that IE, f l  E,,, I = 1 for i = 1,2,. . . , k - 1. Sup- 
pose there is no other such cycle. If IElnEk 132 we set Eo=El; let 
z E El n Ek \{xl}, I f  ] E l  f l  Ek I = 1, since H is not a graph there is an edge E, 
with IE, I > 3. We set En = E, ; let z E E, \{x,, x,+~}. 
Note that z is in no other 
edge of the cycle (otherwise we could form a second odd cycle with the required 
properties). In both cases, for these choices of En and z the hypergraph H 
satisfies the hypothesis of the lemma of Theorem 2. Hence H is bichromatic, a 
contradiction. 0 
The number two in Theorem 3 is best possible: in the above example of a 
minimal non-bichromatic hypergraph there are only two odd cycles with the 
required properties. 
Remark. The proof of Theorem 2 is constructive and provides a polynomial 
algorithm for constructing either a bicoloring of a hypergraph or an odd cycle 
with maximal degree two such that, with at most one exception, all intersections 
of two consecutive edges are of cardinality one. A rough estimate of the 
complexity of this algorithm is in O(mzn'), where m is the number of edges of 
the hypergraph and n its number of vertices. 

A class of bichromaric hypergraphs 
27 
References 
[I] C .  Berge, Graphes et hypergraphes, 26me id. (Dunod, Paris, 1973). 
[2] J-C. Fournier et M. Las Vergnas, Une classe d’hypergraphes bichromatiques, Discrete Math. 2 
[3] J-C. Fournier et M. Las Vergnas, Une classe d’hypergraphes bichromatiques 11, Discrete Math. 7 
[4] M. Las Vergnas, Sur les hypergraphes bichromatiques, Hypergraph Seminar, C. Berge and D.K. 
[5] L. Lovasz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
[6] F. Sterboul, Communication at the Graph Theory Seminar, Paris, 1973. 
(1972) 407-410. 
(1974) 99-106. 
Ray-Chaudhuri, eds., Springer Lecture Notes in Math. No. 411 (Springer, Berlin, 1974) 102-1 10. 
253-267 (this volume, pp. 29-42). 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 29-42 
0 
Elsevier Science Publishers B.V. 
NORMAL HYPERGRAPHS AND THE WEAK 
PERFECT GRAPH CONJECTURE* 
L. LOVASZ 
Mathematical Institute, Eotvos L. University, H. 1088 Budapest, Hungary 
A hypergraph is called normal if the chromatic index of any partial hypergraph H' of it 
coincides with the maximum valency in H'. It is proved that a hypergraph is normal iff the 
maximum number of disjoint hyperedges coincides with the minimum number of vertices 
representing the hyperedges in each partial hypergraph of it. This theorem implies the 
following conjecture of Berge: The complement of a perfect graph is perfect. A new proof is 
given for a related theorem of Berge and Las Vergnas. Finally, the results are applied on a 
problem of integer valued linear programming, slightly sharpening some results of Fulkerson. 
Introduction 
Let G be a finite graph and let x ( G )  and w(G) denote its chromatic number 
and the maximum number of vertices forming a clique in G, respectively. 
Obviously, 
x ( G ) s  @(GI- 
(1 1 
There are several classes of graphs such that 
x ( G )  = w(G), 
(21 
e.g., bipartite graphs, their line graphs and complements, interval graphs, 
transitively orientable graphs, etc. Obviously, relation (2) does not say too much 
about the structure of G ;  e.g., adding a sufficiently large clique to an arbitrary 
graph, the arising graph satisfies (1). 
Berge [l, 21 has introduced the following concept: a graph is perfect ( y -  
perfect) if the equality holds in (2) for every induced subgraph of it. The 
mentioned special classes of graphs have this property, since every induced 
subgraph of them belongs to the same class. He formulated the following two 
conjectures in connection with this notion: 
Conjecture 1. A graph is perfect if and only if neither itself nor its complement 
contains an odd circuit without diagonals. 
* Reprinted from Discrete Math. 2 (1972) 253-267. 
29 

30 
L. Looas2 
Conjecture 2. Let a ( G )  denote the stability number of G, let 6(G) denote the 
minimum number of cliques which partition the set of all the vertices. A graph G 
is perfect if and only if a(G') = 6(G') for any induced subgraph G' of G. 
This conjecture is an attempt to explain some similarities between the 
properties of the chromatic number and the stability number; his next conjecture 
is proved in the present paper, formulated as follows. 
Perfect Graph Theorem. The coniplemeitt of c1 perfect graph is perfect as well. 
Obviously, thc second conjecture of Berge would follow from the first one. 
However, due to its simpler form, it has more interesting applications and has 
been more investigated. Partial results are due to Berge [3], Berge and Las 
Vergnas [4], Sachs and OIaru (61. Fulkerson [S] reduced the problem to the 
following conjecture, using the theory of anti-blocking polyhedra: 
Conjecture 3. Duplicating an arbitrary vertex of a perfect graph and joining the 
obtained two vertices by an edge, the arising graph is perfect. 
In 91 we prove a theorem which contains Conjecture 3. 
Berge has observed that the perfect graph conjecture has an equivalent in 
hypergraph theory, interesting for its own sake too. The correspondence 
between graphs and hypergraphs is simple and enables us to translate proofs 
formulated in terms of graphs into proofs with hypergraphs, and conversely. In 
$2 we deduce the hypergraph version of the perfect graph theorem from the 
above-mentioned conjecture of Fulkerson; the proof is short and docs not use 
the theory of anti-blocking polyhedra. It could be formulated in terms of graphs 
as well; however, the hypergraph version shows the idea more clearly. It should 
be pointed out that thus the proof consists of two steps and the more difficult 
second step was first carried out by Fulkerson. 
In $3, wc give a new proof of a related theorem of Berge. Finally, in $4 we give 
some formulations of the results in terms of linear programming. Most of them 
have been observed to be equivalent to the perfect graph theorem already 
proved by Fulkerson. 
1. 
Let G, H be two vertex-disjoint graphs and let x be a vertex of G. By 
substituting H for x we mean deleting x and joining every vertex of H to those 
vertices of G which have been adjacent with x. 

Normal hypergraphs and the Weak Perfect Graph Conjecture 
31 
Theorem 1. Substituting perfect graphs for some vertices of a perfect graph the 
obtained graph is also perfect. 
Proof. We may assume that only one perfect graph H is substituted for a vertex 
x of a perfect graph G. Let G’ be the resulting graph. It is enough to show that 
since for the induced subgraphs of G’, which arise by the same construction from 
perfect graphs, this follows similarly. 
We use induction on k = w ( G ‘ ) .  For k = 1 the statement is obvious. 
Assume k > 1. It is enough to find a stable set T of G‘ meeting all k-element 
cliques, since then coloring these vertices by the same color and the remaining 
vertices by k - 1 other colors (which can be done by the induction hypothesis), 
we obtain a k-coloring of G’. 
Put m = w ( G ) ,  n = w ( H ) ,  and let p denote the maximum cardinality of a 
clique of G containing x. Then, obviously, 
k =max{m,n+p-1). 
Consider an m-coloring of G and let K be the set of vertices having the same 
color as x. Let, further, L be a set of independent vertices of H meeting every 
n-element clique of H. Then T = L U ( K  \{x}) is a stable set in G‘. Moreover, T 
intersects every k-element clique of G‘. Really, if C is a k-element clique of G’ 
and it meets H then, obviously, it contains an n-element clique of H and thus a 
vertex of L. On the other hand, if C does not meet H, then C must be an 
m-element clique of G, and thus C contains a vertex of K\{x}. 0 
As has been mentioned in the introduction, in view of Fulkerson’s results, the 
perfect graph theorem already follows from Theorem 1. However, to make the 
paper self-contained, we give a proof of the perfect graph conjecture (which 
seems to be different from that of Fulkerson). 
2. 
A hypergraph is a non-empty finite collection of non-empty finite sets called 
edges. The elements of edges are the vertices. Multiple edges are allowed, i.e., 
more (distinguished) edges may have the same set of vertices. The number of 
edges with the same vertices is called the multiplicity of them. The number of 
edges containing a given vertex is the degree of it. The maximum degree of 
vertices of a hypergraph H will be denoted by 8(H). 
A partial hypergraph of H is a hypergraph consisting of certain edges of H. 

32 
L. Loua'sz 
The subhypergraph induced by a set X of vertices means the hypergraph 
H [x 
= { E  n x  1 E EH, E nx~ra). 
A partial subhypergraph is a subhypergraph of a partial hypergraph (or, 
equivalently, a partial hypergraph of a subhypergraph). 
The chromatic number x ( H )  of a hypergraph H is the least number of colors 
sufficient to color the vertices (so that every edge with more than one vertex has 
at least two vertices with different colors). The chromatic index q ( H )  of H is the 
least number of colors by which the edges can be colored so that edges with the 
same color are disjoint. 
Obviously, 
4 (HI 2 8 (HI. 
(4) 
Let a hypergraph be called normal if the equality holds in (4) for every partial 
hypergraph of it. 
A set T of vertices of H is called a transversal if it meets every edge of H ;  
T ( H )  is the minimum cardinality of transversals. Denoting by v ( H )  the 
maximum number of pairwise disjoint edges of H, we obviously have 
U(H) T(H). 
(5) 
Let a hypergraph be called 7-normal if the equality holds in (5) for every partial 
hypergraph of it. 
A hypergraph is said to have the Helly property if any collection of edges 
whose intersection is empty contains two disjoint edges. It is easily seen that 
normal and T-normal hypergraphs have the Helly property. 
Given a hypergraph H, we can consider its edge-graph G ( H )  defined as 
follows: the vertices of G ( H )  are the edges of H and two edges of H are joined 
iff they intersect. On the other hand, for a given graph G we can construct a 
hypergraph H ( G )  by considering the maximal cliques of G (in the set- 
theoretical sense) as vertices of H and, for any vertex x of G, the set of maximal 
cliques containing x, as an edge of H(G). It is easily shown that if G has no 
multiple edges (which can be assumed throughout this paper) then 
G(H(G))= G. 
(6) 
Furthermore, H (  G) always has the Helly property. 
It is easily seen that 
- 
( G ( H )  is the complement of G(H)). Moreover, if H has the Helly property then 

Normal hypergraphs and the Weak Perfect Graph Conjecture 
33 
Hence by (6), 
X(G) = s(H(G)), w ( G )  = s(H(G)), 
x(G) = T(H(G)), 4) 
= u(H(G))7 
for any graph G. Equalities (7), (8) and (9) imply the following theorem: 
(9) 
Theorem 2. Let H be a hypergraph with the Helly property. H is normal iff G ( H )  
is perfect; G is perfect if H (  G )  is normal. His r-normal iff G ( H )  is perfect; 
is 
perfect if H ( G )  is 7-normal. 
As a corollary to Theorems 1 and 2 we have the following theorem: 
Theorem 1‘. Multiplying some edges of a normal hypergraph, the obtained 
hypergraph is normal. 
Theorem 2 implies that the perfect graph theorem is equivalent to the 
following: 
Theorem 3. A hypergraph is r-normal iff it is normal. 
Proof. Parts “if” and “only if” of this theorem are equivalent (by Theorem 2). 
Thus it is enough to show that if H is normal then 
7 ( H )  = v(H)7 
since for the partial hypergraphs this follows similarly. We use induction on 
n = r(H). For n = O  the statement can be considered to be true. 
It is enough to find a vertex x with the property that the partial hypergraph H’ 
consisting of the edges not containing x has v(H‘) < u(H), since then H’ has an 
(n - 1)-element transversal T and then T U {x} is an n-element transversal of 
H’, showing that 
T ( H ) ~  
n = v(H). 
Assume indirectly that for any vertex x there is a system F, of n disjoint edges 
not covering x. Let 
Ho= U Fx7 
x 
where the edges occurring in more F,’s are taken with multiplicity. Ho arises 
from H by removing and multiplying edges, hence by Theorem 1’ it is also 
normal, i.e., 
q (Ho) = s (Ho). 

34 
L. Lovrisz 
But obviously H,, has n . m edges, where m is the number of vertices of H. Since 
there are at most n disjoint edges in Ho, we have 
q (Ho) 2 m. 
On the other hand, a given vertex x is covered by at most one edge of F, ( y  = x )  
and by no edge of F,. Hence 
S ( H o ) s  m - 1, 
a contradiction. 0 
3. 
A subhypergraph of a normal hypergraph is not always normal as shown, e.g., 
by the hypergraph 
{{a, b, d},{b, c, d},Ia, c, 41; 
here {a, 6, c} spans a non-normal subhypergraph. Hypergraphs with the property 
that every subhypergraph of them is normal are described in the following 
theorem. A hypergraph is balanced if no odd circuit occurs among its partial 
hypergraphs (an odd circuit is a hypergraph isomorphic with the hypergraph 
((1.2). {2,3}, . . . , (2n. 2n + 1),11,2n + 1))). 
Theorem 4. The following statements are equivalent : 
(i) H is balanced; 
(ii) every subhypergraph of H has chromatic number 2; 
(iii) every subhypergraph of H is normal. 
Obviously, Theorem 3 gives more equivalent formulations of (iiii). The 
theorem is actually due to Berge [3]. In what follows, we are going to give a new 
proof for the non-trivial parts of it. 
Proof of Theorem 4. (iii) 3 (i) being trivial, it is enough to show (i) 3 (ii) and 
(ii) + (iii). 
(I) Assume that H is balanced, though it has subhypergraphs which are not 
2-chromatic. Let Ho be such a subhypergraph with minimum number of vertices. 
Consider the graph G consisting of the two-element edges of Ho: every vertex of 
H,, is considered to be a vertex of G. 
Now G is connected. Really, if V(G) = X U Y, X f l  Y = 0, X, Yf 0, and no 
edge of G joins a vertex of X to a vertex of Y, then considering a 2-coloration of 
Ho 1 X and one of Hc, I Y (by the minimality of Ho such 2-colorations exist) these 

Normal hypergraphs and the Weak Perfect Graph Conjecture 
35 
form together a 2-coloration of Ho, since every edge E of Ho with 1 E I > 1 has at 
least two points in one of X, Y, and then even in this part of it there are two 
vertices with different colors. 
Since H is balanced, G is obviously bipartite. Let G be colored by two colors. 
Since Ho cannot be colored by two colors, there is an edge E, with I E I > 1, of HI 
having only vertices of the same color. Let x, y E E, x # y. Since G is connected, 
there is a path P of G connecting x and y. We may assume that no further vertex 
of E belongs to P. Then the subhypergraph spanned by the vertices of P 
contains an odd circuit, a contradiction. 
(11) Now let H be a hypergraph with property (ii); we show it has property 
(iii). Obviously it is enough to show 
T(H) = V(H). 
Let T ( H )  = t and consider a minimal partial subhypergraph Ho of H with the 
property 7(Ho) = t. If we show that Ho consists of independent edges, we are 
ready. Suppose indirectly El : E2 E Ho, x E El n E2. By the minimality of Ho, 
there is a ( t  - 1)-element transversal T, of Ho\{E,}, i = 1,2. Put Q = TI fl T,, 
R, =T,\Q, S = R I U R 2 U { x } .  Obviously, X E T , ,  hence ISI=21R,(+l. Since 
Ho I S is 2-chromatic by (ii), there are two disjoint subsets of S both meeting 
every edge E of Ho 1 S with IE I > 1. One of them, say M, has at most 
[$I S I] = I R1 1 elements. 
Now M U Q is a transversal of Ho. Indeed, if an edge E is not represented by 
Q then it meets both R1 and R, if E Z  E, and meets RIP, and {x} if E = E, ; thus, 
I E n S 12 2, whence E is represented by M. 
But I M U Q I s I R I I + I Q I = t - l ,  a contradiction. 0 
We conclude this section with the remark that bipartite graphs are, obviously, 
balanced (and thus normal). On the other hand, Theorem 4 shows that balanced 
hypergraphs have chromatic number 2. Recently, Las Vergnas and Fournier 
sharpened this statement and showed that normal hypergraphs have chromatic 
number 2. 
4. 
Let 
be a (0, 1)-matrix, no row or column of which is the 0 vector, and consider the 
optimization programs 

L. Lovdsz 
yA 3 w 
v 2 0  
36 
min y . 1  
Ax 6 1 
x 2 0  
maxw.x 
where 1 denotes the vector 
It is well-known that if x, y run through non-negative real vectors, (10) and (11) 
have a common optimum. But now we are interested in integer vector solutions. 
Let B be a (0, 1)-matrix such that 
(i) any column u of B satisfies Au C 1, 
(ii) every maximal (0, 1)-vector with this property is a column of B. 
Consider two further programs: 
yB 3 w 
min y * 1 
y 3 0  
Bx s 1 
x 2 0  
rnaxw-x 
Theorem 5. Assume that the optimum of (10) ( =  the optimum of (11)) is an 
integer for any (0, 1)-vector w. Then, for any non-negative integer vector w, each of 
(10)-(13) has an integer optimum and an integer solution vector. 
Remark. The greatest part of this theorem is formulated in Fulkerson [5] as a 
consequence of the perfect graph conjecture and the theory of anti-blocking 
polyhedra. 
Proof of Theorem 5. (1) First we show that (11) has a solution vector with 
integral entries for any (0, 1)-vector wo. For let xo be a solution of it with the 
greatest possible number of 0’s. Put 
wn= ( w , , .  . . , W k ) ,  
xu = (XI) 
x k  
Obviously, x:S 
WO. We show that xo is an integer vector. 

Normal hypergraphs and the Weak Perfect Graph Conjecture 
Assume indirectly 0 < x 1  < 1, say; then w1 = 1. Put 
1 if x,#Oand i > l ,  
{ 0 otherwise, 
w :  = 
and 
w ’ = ( w I, . . . , w ;). 
37 
Let x’ be a solution of (11) with w = w’, then 
w ’ x ’ s  wox’s woxo 
and 
w ’x‘ 3 w ’xo > W”X0 - 1. 
Hence, both w’x’ and woxo being integers, 
w‘x‘ = W(,X’ = woxo, 
i.e., x’ is a solution of (11) with w = wo too, and has, obviously, more 0’s than xo 
has, a contradiction. 
( 2 )  Now we prove that also (10) has an integer solution vector for any 
(0, 1)-vector w. Assume indirectly that there are (0, 1)-vectors w failing to have 
this property and let wo be one with minimum number of 1’s. Let yo be a solution 
of (10) with w = wo. Obviously, we may assume that y l s  1. Put 
WO = (wl,. . . 9 Wk)r 
Y O  = (yl,. . . ?  yk), 
y l  # 0, 
say, and define a (0, 1)-vector w’ = ( w  I,. . . , w;) by 
w, 
if al, =0, 
0 
otherwise. 
w: = 
We show first that yo is not a solution of (lo), with w = w‘. For let x’ be a 
solution of (11) with w = w’; we may assume x I T S  w’. Then 
or 
yo(l - AX’) 
= 0, 
but this is impossible since both yo and 1 - A x ’  are non-negative and their first 
entries are yl and 3 1 -x:=l a,,w: = 1, i.e., the inner product is non-zero. 
Thus, considering a solution y’ = (y I,. . . , y:) of (10) with w = w‘ we have 

L. Lovdsz 
38 
y ' . l < y * l  
and these being integers, 
y" 1 c y * 1-1. 
This implies w' # wo, i.e., by the minimality property of wo, y '  can be chosen to 
be an integer vector. Let 
y " =  (1, y ; ,  . . ., Y:)? 
then 
since 
Since 
y " A  3 w 
y " -  1 s 1 + y ' .  1 
yo' 1, 
y" is an integer vector solution of (10). 
(3) Put 
B = ( ;  
bii * * * bik : )  
* * * brk 
Let H be a hypergraph on vertices 1 , .  . . , s; for any 1 S i s k it has an edge 
E, ={j;b,, = 1). 
Now H is normal. For consider a partial hypergraph H' of it; let 
1 if Ei E H ' ,  
0 otherwise, 
wO=(wl, ..., wk). 
Let xo, yo be integer solution vectors of (11) and (lo), respectively. Since 
AX,) 1, 
there is a column u of B with x o s  u by property (ii) of it. Then the vertex 
corresponding to u has degree wou 3 woxo in H', i.e., 

Normal hypergraphs and the Weak Perfect Graph Conjecture 
39 
S(H’) 2 wuxn. 
On the other hand, associate a color with every 1 entry of yo. For a given edge 
E,, consider a 1 S j S r with yla,, S 0 and give the color associated with y, to E,. 
If El and E, have the same color, then there is a j with a,, = a, = 1, i.e., no 
column of B can have 1’s on both the ith and tth place by (i). Hence E,, E, are 
disjoint, i.e., the coloring defined above is a good one, showing that 
p (H’) yo. 1 = ~ 0 x 0 ,  
whence p ( H ’ ) =  s(H’). 
graph H’ consisting of those E,’s for which w, = 1. By Theorem 3, 
(4) Let now w o  = ( w l , .  . . , wk) be a (0, 1)-vector. Consider the partial hyper- 
T(H’) = V(H’) = V ,  
i.e., there are v columns u,,, . . . , ulv of B such that every row corresponding to an 
edge of H’ has a 1 in at least one of them. Let 
1 i f j = j ,  ,..., j”, 
0 otherwise, 
Y t = [  
yo = 0%. 
. ., ys). 
Then 
yoB z= Wo, 
yo 3 0, yo. 1 = v. 
On the other hand, there are u rows b,,, . . . , b,” of B such that they correspond to 
edges of H’ and every column has at most one 1 in them. Putting 
1 i f i = i ,  ,..., i,, 
0 otherwise, 
x, = [ 
xo = (XI,. . . , 
X k )  
we have 
Bxo 
1, xo 3 0, 
woxo = V ,  
showing that xo, yo are solution vectors of (12) and (13). 
(5) Finally, let wn = (w,, 
. . . , wk) 
be an arbitrary non-negative integer vector. 
We show that (10)-(13) have integer solution vectors. It is enough to deal with 
(10) and (11). Let us multiply the edge E, of H by w,, 
i = 1,. . . , k ;  let H‘ denote 
the arising hypergraph. Then 
6 (H’) = p (H’l 

40 
L. Lovasz 
since by Theorem 1’ H’ is normal. Let j be a vertex with maximum valency in H‘ 
and u, the corresponding column of 23. Then 
Au, S 1, 
u, 2 0 ,  
and 
wou, = 8(H’). 
(14) 
On the other hand, let the edges of H‘ be colored by p = p ( H ’ )  colors. This 
means that there are p (0, 1)-vectors u l , .  . . , up such that a l  +. . . + up = w0 and 
Ax s 1, x 3 0 implies arx S 1 for any 1 S 1 S p. Hence there is a (0, 1)-vector yl 
by part (2) of the proof such that 
yrA 3 ar, yl 3 0 ,  yl . 1 = 1. 
Putting 
y = y 1 + . . . + y , ,  
this vector satisfies 
yA 2 w,,, y 2 0, y . 1 = p, 
i.e., by (14) the theorem is proved. 0 
Appendix. A characterization of perfect graphs 
Let 
be the complement of G. We prove the following theorem: 
Theorem. A graph G is perfect if and only if 
w ( G ’ ) w ( G ’ ) S  IG’J 
for every induced subgraph G’ of G. 
Proof. Part “only if” is trivial. To prove part “if” we use induction on I G I. Thus 
we may assume that any proper induced subgraph of G, as well as its 
complement, is perfect. 
Let multiplication of a vertex x by h ( h  S O )  mean substituting for it h 
independent vertices, joined to the same set of vertices as x. This notion is 
closely related to the notion of pluperfection, introduced by D. R. Fulkerson. 
(I) As a first step of the proof we show that if Go arises from G by 
multiplication of its vertices then Go satisfies 
(G& (Go) 3 I co 
I . 

Normal hypergraphs and the Weak Perfect Graph Conjecture 
41 
Assume this is not the case and consider a Go failing to have this property and 
with minimum number of vertices. Obviously, there is a vertex y of G which is 
multiplied by h 2 2; let yl, . . . , yh be the corresponding vertices of Go. Then 
w ( ~ o  
- yl)w(Go - YJ 2 1 
- 1 
by the minimality of Go; hence 
w(Go) = w (Go - yl) = p, w (Go) = w (Go - yl) = r 
and 
( Go( = pr + 1. 
Put G, = Go - {y,, . . . , yh}. Then GI arises from G - y by multiplication of its 
vertices, hence by [1, Theorem 11, GI is perfect. Thus, GI can be covered by 
~((2,)s 
w ( G o )  = r disjoint cliques of GI; let C,, . . . , C, be these cliques, 
I CII3 I CZI 2 .  . .2= 1 c, I. 
Obviously, k s r. Since 1 GI I = 1 Go1 - h = pr + 1 - h, 
1 c11 = . . . = 1 C,-h +I 1 = p. 
Let G2 be the subgraph of Go induced by C1 U * * U C,-I,+~ 
U {y,}, then 
IG2( = ( r  - h + 1)p + 1 < I G I ;  
thus, by 
Since w 
the minimality of GO, 
w (G2)w (G2) 2 I GzI. 
GZ) s w (Go) = p, this implies 
w ( G z ) 2  r - h + 2 .  
Let F be a stable set of 
r - h + 2  vertices of G,; then l F f l  CIS 1 
(1 s i s r - h + l), hence yl E F. This implies that F U {y2,. . . , y h }  is stable in Go. 
On the other hand 
I F U { y ~ , . . . , y h } l  = r + l > w ( G O ) ,  
a contradiction. 
(11) We show that x(G) = w ( G ) .  It is enough to find a stable set F such that 
w (G - F )  < w (G) since then, by the induction hypothesis, G - F can be colored 
by w (G) - 1 colors and, adding F as a further one, we obtain a p (G)-coloring of 
G. 
Assume indirectly that G - F contains a o(G)-clique CF for any stable set F 
in G. Let, for x E G, h ( x )  denote the number of CF’s containing x. Let GO arise 
from G by multiplying each x by h(x). 
Then, by Part I above, 

42 
w ( G o ) w ( G o ) a  I Go\. 
On the other hand, obviously 
L. Loua'sz 
where f denotes the number of all stable sets in Go, and 
a contradiction. 0 
References 
[ 1 ] C. Berge, Farbung von Graphen deren samtliche bzw, ungerade Kreise starr sind (Zusarnmenfas- 
[2] C. Berge, Sur un conjecture relative au probleme des codes optimaux, Commun. 13ime 
[3] C. Berge, Graphes et hypergraphes (Dunod, Paris, 1970). 
[4] C. Berge and M. Las Vergnas, Sur un theoreme du type Konig pour hypergraphes, Ann N.Y. 
[5] D.R. Fulkerson, Blocking and anti-blocking pairs of polyhedra, Math. Program 1 (1971) 168-194. 
[6] H. Sachs, On the Berge conjecture concerning perfect graphs, Combinatorial Structures and 
sung), Wiss, 2. Martin Luther Univ. Halle Wittenberg, Math. Nat. Reihe (1961) 114. 
Assemblte Gtn. URSI, Tokyo, 1962. * 
Acad. Sci. 175 (1970) 32-40. 
their Applications (Gordon and Breach, New York, 1969) 377-384. 

PART I1 
SPECIAL CLASSES OF PERFECT GRAPHS 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 45-56 
@ Elsevier Science Publishers B.V. 
DIPERFECT GRAPHS 
Claude BERGE 
C. N. R. S. Paris 
Dedicated to Tibor Gallai for his 70th Birthday 
Gallai and Milgram have shown that the vertices of a directed graph with stability number 
a(G) can be covered by exactly a ( G )  disjoint paths. However, the various proofs of this 
result do not imply the existence of a maximum stable set S and of a partition of the vertex set 
into paths p i ,  F ~ ,  
. . . , p, such that 1 p, fl S 1 = 1 for all i. Later, Gallai proved that in a directed 
graph, the maximum number of vertices in a path is at least equal to the chromatic number; 
here again, we do not know if there exists an optimal coloring ( S , ,  S,, . . . , S , )  and a path p 
such that lp fl S, 1 = 1 for all i. In this paper we show that many directed graphs, like the 
perfect graphs, have stronger properties, such as (i) for every maximum stable set S there 
exists a partition of the vertex set into paths which meet the stable set in only one point, and 
(ii) for every optimal coloring there exists a path which meets each color class in only one 
point. This suggests several conjectures similar to the perfect graph conjecture. 
1. Path partitions 
Let G be a (directed) graph defined by a set X of vertices and a set U C X x X 
of arcs (directed edges). A path p will be defined as a sequence ( x l ,  x 2 , .  . . , 
x k )  of 
distinct vertices, such that ( x l ,  x2) E U, . . . , ( X k - 1 ,  x k )  E u. Every path p = 
( x 1 , x 2 , .  . . , 
x k )  defines a set that we denote by p = { x , ,  x 2 , .  . . , x k } .  
A family M = {pl, p2,. . .} is a path partition of G if the pi are pairwise 
vertex-disjoint, and u 
pi = X. 
Denote by a ( G )  the stability number of G, that is, the maximum number of 
independent vertices in G. The purpose of this paper is to enlarge the field of 
applications of the following classical result: 
Theorem of Gallai-Milgram. Every directed graph G satisfies min I M 1 < cr (G), 
where the minimum is taken over all path partitions M. 
In other words, one can always cover the vertex set with exactly a ( G )  paths 
The above theorem has many applications. Let us mention the following ones: 
which are pairwise disjoint. 
Application 1 (Theorem of RCdei). Every tournament (complete anti-symmetric 
graph) contains a path which meets each vertex exactly once. 
45 

46 
C. Berge 
This follows immediately, since a tournament G satisfies a (G) = 1, and 
therefore min I M I = 1. 0 
Application 2 (Theorem of Dilworth). Every transitive graph G satisfies 
minIMI = a ( G ) .  
A graph G = (X, U )  is transitive if (x, y )  E U, ( y ,  2 )  E U implies (x, z) E U. 
Let 8(G) denote the least number of cliques needed to cover X. Then, by 
RCdei's Theorem, the cliques of G and the paths of G define the same sets, so 
a (G) 
s e(G) = min I M I s a (G). 
The required equality follows. 0 
Application 3 (Theorem of Erdos-Szekeres). Let n, p, q be positive integers with 
n > pq, and let u = (a,, az, . . . , a.) be a sequence of n distinct integers. Then there 
exists either a decreasing subsequence with more than p integers or an increasing 
subsequence with more than q integers. 
Let G=(X,U)beagraphwithX={al,a2 ,..., a,},and(a,,a,)EUif i < j  
and a, < a,. If {pl, 
p 2 , .  . .} is a partition of X into a ( G )  paths, 
So we have either a ( G )  > p (and there exists a decreasing subsequence with 
more than p integers), or max I p I > q (and there exists an increasing subse- 
quence with more than 4 integers). 
[7 
Many other applications are possible, and show the usefulness of the 
Gallai-Milgram theorem. 
In this section we shall give a stronger statement which combines an idea of 
Las Vergnas [8] and an idea of Linial [lo]. The proof is essentially the same as in 
the Gallai-Milgram theorem, but we obtain as corollaries results which could not 
be obtained directly. 
For an arborescence H, the root is the vertex x with dH,(x) = 0, and a sink is a 
vertex y with d & ( y )  = 0. If y is a sink, the maximal path of HI leading to y 
which does not contain a vertex z with dL,(z) 2 2 is called a terminal branch of 
HI. Let H be an arborescence forest of G, that is, a partial graph of G whose 
connected components are arborescences HI, H,, . . . . We denote by R (H) the 
set of the roots of the arborescences Hi, and by S ( H )  the set of the sinks of these 
arborescences. So a vertex in R ( H )  n S ( H )  is an isolated vertex of H. 
Theorem 1. Let Ho be an arborescence forest of G with R(Ho) = R,, and 

Diperfecr graphs 
47 
S(HII) 
= So. For every arborescence forest H with R ( H )  C Rtr, S ( H )  C So and 
1 S ( H ) (  minimum, there exists a stable set which meets every terminal branch of H. 
Proof. Assume that the result holds for all graphs of order less than n, and 
consider a graph G of order n. Let H be an arborescence forest of G with 
R ( H ) C  RO, S(H)C So, IS(H)I minimum. If S ( H )  is stable, the theorem is 
proved. If S ( H )  is not stable, there exists in G an arc ( b , a )  connecting two 
vertices a and b in S ( H ) .  
We have a C R ( H ) ,  because otherwise, H‘ = H + (b, a )  satisfies R (H’) C Ro, 
S ( H ’ ) =  S ( H ) - { b } C  SO, IS(H’)I<IS(H)I, a contradiction. So H has an arc 
incident to a, say (al,a). 
Furthermore, dL(al) = 1, because otherwise a l  has at least two descendents in 
H which belong to S ( H ) ,  and H‘ = H - (a,, a )  + (b, a )  satisfies R (H’) C Rll, 
S ( H ’ ) c  So, IS(H’)I< IS(H)J, a contradiction. 
The subgraph C? 
of G induced by x = X - { a }  admits fi = HX as an 
arborescence forest with R ( f i )  C Ro, S ( f i ) C  (So-{a}) U {al}. 
Now we shall show that ( S ( f i ) I  is minimum in G. Otherwise, there exists in G 
an arborescence forest H’with R(H’)C Ro, S(H‘)C ( S I I - { U } ) U ( U I } ,  
IS(H’)IS 
I S(fi)I - 1. The following cases can happen: 
Case 1. alES(H’) 
Then H“ = H’+ (al, a )  is an arborescence of G which satisfies R (H“) C R,,, 
Case 2. a l E S ( H ’ ) ,  b ES(H’) 
Then H”=H’+(b,a) satisfies S(H”)C SO, R(H“)C Ro, IS(H”)l = IS(H’)lS 
Case 3. a , E S ( H ‘ ) ,  b E S ( H ’ )  
Then IS(H’)IS IS(fi)l-2, and H”= H’+(al,a) satisfies R(H”)C R,,, 
S ( H ” )  c SO, I S(H”)I s I S(H)I - 1, a contradiction. 
Thus we have proved the minimality of (S(fi)I. So, by the induction 
hypothesis, there exists in G a stable set S which meets every terminal branch of 
H. Clearly, S meets also every terminal branch of H = 
S(H”)C So, I S(H”)I = IS(H‘)I S I S ( f i ) J  - 1 = IS(H)I - 1, a contradiction. 
1 S(H)I - 1, a contradiction. 
+ (al, a). 0 
Corollary 1 (Las Vergnas [8]). Every quasi-strongly connected graph G contains 
a spanning arborescence with at most a ( G )  sinks. 
A graph is quasi-strongly connected if for every x, y EX, there exists an 
ancestor common to x and y. The result follows immediately. 
Corollary 2 (Linial [lo]). Let M = {pl, p2,. . . , pk} be a path partition of G ;  either 
there exists a stable set S which meets each of the pi’s, 
or there exists a path 
partition M’ with S(M’)C S ( M ) ,  S(M’)# S ( M ) .  

38 
C. Berge 
Corollary 3 (Camion [5]). Let G be a strongly connected graph such that every 
pair of vertices is linked with at least one arc (“strong tournament”). Then there 
exists a hamilton circuit. 
Roof. Let p be the largest circuit in G. If p does not cover the vertex set, every 
arc going out of p is the initial arc of a path p’ which comes back into p (since 
the contraction of p gives a graph which is also strongly connected). Let 
a E p n p’ be the terminal vertex of p’; the graph obtained from p + p’ by 
removing the arc ( y ,  a )  E p and the arc ( y ’ ,  a )  E p’ is an arborescence with root 
a and with sinks y and y’. By Theorem 1, G,,,. 
can be covered by an 
arborescence of root a with only one sink, either y or y ’ .  By adding the arc of G 
which goes from that sink to a, we form a circuit larger than p, whjch is a 
contradiction. 0 
Corollary 4. If a graph G has a basis B with 1 B I = IY (G), the vertex set can be 
covered by IY (G ) disjoint paths all starting from B. 
Proof. A basis of G = (X, 
U )  is a set B C X such that each vertex is the terminal 
end of a path starting from B, and no two distinct vertices in B are connected by 
a path. A basis always exists, by a theorem of Konig. Consider the sets 
Bo= B,BI,B2.. . . where B, is the set of all vertices which can be reached by a 
path of length i from B and by no path of length smaller than i. Since B is a 
basis, U B ,  = X. 
Consider a graph Ho with vertex set X, obtained by taking for each x E B,, 
i 3 1, one of the arcs of G going from B,-l to x. Clearly Ho is an arborescence 
forest with R ( H,) = B. By Theorem 1 there exists an arborescence forest H with 
R ( H ) C B ,  I S ( H )Isa(G).  However B is a basis, so R ( H ) = B .  0 
When G is a strongly connected graph, one can expect to prove stronger 
results, that is, the existence of better path partitions. Let us mention the 
following conjectures: 
Conjecture 1 (Las Vergnas). Every strongly connected graph G with (Y (G) 3 2 
has a spanning arborescence H with 1 S(H)I =s Q ( G )  - 1. 
Conjecture 2 (Bermond [2]). Every strongly connected graph G can be covered 
with a(G) circuits. 
One can cover these two conjectures by another one: 
Conjecture 3. Every strongly connected graph can be covered by a circuit C 
and a (G) disjoint paths having at most in common with C this initial end-point. 

Diperfect graphs 
49 
This conjecture has been proved recently for a (G) = 2 by C.C. Chen and P. 
In fact we can apply Theorem 1 to prove the first conjecture for a graph G 
(P): G has a circuit which meets every maximum stable set. 
In fact, many graphs satisfy Property (P). 
Manalastas [18]. 
having the following property: 
Example 1 (P6sa [12]). A symmetric graph satisfies Property (P). 
Let (yo, y , ,  y,, . . . , y k )  be the longest path issuing from yo; all the neighbours of 
yt are of the type yi with 0 S i < k ; let io be the smallest index i 2 0. Then the 
circuit p = (y,, y,+l,. . . , y k ,  y,) contains y k  and all its neighbours; therefore 
every maximal stable set meets the circuit p. 
Example 2 (Meyniel [ll]). Not every strongly connected graph satisfies Property 
(PI. 
Consider a graph G, with vertices 1,2,. . . ,11, whose arcs are (1,2), (2,3), 
(1, 8), (7,8), (7,3), (9, lo), (10, ll), (4, ll), (4,5), (9,5); join all the vertices in 
A = {9,10,11,4,5} to 6 by arcs directed towards 6. Join 6 to all the vertices in 
B = { 1,2,3,7,8} by arcs directed out of 6, also add all possible arcs from A to B, 
but remove the arc (3,9). This graph G has stability number a ( G )  = 2, but no 
circuit meets all the maximum stable sets. 
Theorem 2. Let G = (X, U )  be a strongly connected graph with a (G) > 1 that 
satis,fies Property P; then there exists a spanning arborescence H with I S ( H )  I S 
a ( G ) -  1. 
Proof. Let p be a circuit which meets every maximum stable set. Let G be the 
graph obtained from G by contracting p into a single vertex c. The graph G is 
strongly connected; so, by Theorem 1, it admits a spanning arborescence I? with 
root c, and G has a stable set S with IS 1 = I S(8)I which meets every terminal 
branch of H. 
Clearly, c$Z S ;  so, from the definition of p, we see that S is not a maximum 
stable set of G. Hence IS 1 S a(G) - 1. We can construct in G a spanning 
arborescence H with arcs of p and the images of the arcs of fi so that 
I S(H)( = I S ( f i ) (  S a ( G )  - 1. 
This arborescence H fulfills the conditions of the theorem. I7 
Remark. This result shows that the Las Vergnas conjecture is true for symmetric 

50 
C. Berge 
graphs; the same argument shows also that Bermond’s conjecture is true for 
symmetric graphs. However, we can expect better results and, in fact, Amar, 
Fournier and Germa [l] have conjectured that a symmetric graph G can be 
covered by [;a (G)] cycles. 
By using Theorem 1, we can also extend well known properties of tourna- 
ments to “join” of graphs. The following result has been proved by Las Vergnas 
[9], and later by Linial [lo]: 
Proposition 1. Let G = (X, U )  be a graph, let (A, B,. . . , K )  be a partition of X 
such that GA, GB,. . . , have hamilton paths (a,, a2,. . . , a‘), (h, 6 2 , .  . . , b’), . . . , 
(k,, k2,. . . , k’), respectively. If every pair of vertices in different classes is joined by 
at least one arc, then G contains a hamilton path starting in {a,, bl, . . . , kl} and 
ending in {a’, b’,. . . , k’}. 
Proof. Clearly it suffices to show the result for a partition (A, B) of X in two 
classes. In this case, the two hamilton paths of GA and GB constitute an 
arborescence forest Ho with R(Ho)C {a,, bl}, S(Ho) C {u’, b’}. From Theorem 1, 
this arborescence forest is not minimum, and there exists a unique path H with 
R ( H )  C {at, btl, S ( H )  C {a’, b‘l. 0 
For strongly connected graphs, the same argument shows the existence of 
hamilton circuits. More precisely, we get the following proposition: 
Proposition 2 (Las Vergnas [9]). Let G = (X, U )  be u strongly connected graph; 
let (A, B, . . . , K )  be a partition of X such that GA, G B ,  . . . have hamilton circuits 
(or are reduced to a singleton). If every pair of vertices in different classes is joined 
by at least one arc, then for every integer 1, 3 S 1 C I X 1, the graph G contains a 
circuit of length 1. 
For a tournament G this result was found by Moon in 1969. For a complete 
proof of Proposition 2, see [9]. 
2. a-diperfect graphs 
A directed graph G is a -&perfect if for every optimal stable set S, there exists 
a partition of the vertex set into paths pl, p2,. . . such that I S fl 
p, I = 1 for all i 
(and if every induced subgraph of G has the same property). Many important 
classes of graphs are a-diperfect. 

Diperfect graphs 
51 
Theorem 3. Every perfect graph is a -diperfect. 
Proof. In a perfect graph G, there exist k = a ( G )  cliques C,, Cz,. . . , ck which 
partition the vertex set, and by RCdei’s Theorem, each C, is spanned by a path 
p,. So every optimal stable set S satisfies 
l S n p , l = l  
( i = 1 , 2  ,... ). 0 
Theorem 4. Every symmetric graph is a -diperfect. 
Proof. Let G = (X, U )  be a symmetric graph: 
For an optimal stable set S of G consider a graph G’ obtained from G by 
removing the arcs going into S. By the Theorem of Gallai-Milgram, G’ has a 
partition into k = a ( G )  = a(G’) paths PI, p2,. . . , pk. Clearly, the p,’s are paths 
of G and satisfy IS n p, I = 1. 0 
Proposition 3. A graph G which is an anti-directed cycle is not a-diperfect. 
Proof. An odd cycle of length 2k +1 is given by a set of 2k + 1 arcs 
uI, uz,. . . , u 2 k + l  and determines a sequence of vertices (xl, x2,. . . , XZktl,xI); a 
chord can be either an arc of G joining two non-consecutive x,’s, or an arc of G 
parallel to one of the u,’s. A cycle ( x l ,  xz,. . . , 
X Z k + l ,  xl) is anti-directed if 
(1) its length is odd and 2 5 ;  
(2) it has no chords; 
(3) each of the vertices xl, x2, x3, x4, x6, xs, . . . , 
X Z k  is either a source or a sink. 
There are two anti-directed cycles of length 9, shown in Fig. 1, but there is only 
one anti-directed cycle of length 5 or 7. 
If G is an anti-directed odd cycle of length 2k + 1, the set S = 
{ x l ,  x4, x 6 , .  . . , x z k }  is a maximum stable set. If M is a partition into paths which 
meet S in only one point, then the path of M which contains xz is necessarily 
(xz, x,); so the path of M which contains x3 is necessarily (x4 x3); so the path of M 
which contains xs is necessarily (xs, xh), etc. Thus none of the paths of M can be 
of length 2, which is a contradiction. 0 
The graph in Fig. 2 is not a-diperfect (because the set { a , b }  is an optimal 
stable set which does not have the required property), but it contains anti- 
directed cycles of length 5. This suggests the following conjectures: 
Conjecture 1. A graph G is a-diperfect if and only if G does not contain an 
anti-directed cycle as an induced subgraph. 

52 
C. Eerge 
Fig. 1. 
Fig. 2. 
Conjecture 2. If every odd cycle (of lengths5) has a chord, then G is 
a-diperfect. 
Conjecture 3. If every odd cycle (of length 3 5) has at least two chords, then G 
is (Y -diperfect. 
Each of these conjectures is stronger than the following one. 
3. y-diperfect graph 
Gallai [6] and Roy [13] have proved independently that for a directed graph 
G, max 1 p I 2 
(Y (G). The following stronger statement can be proved by the 
same argument: 

Dipetfect graphs 
53 
Theorem 5. Let k be the maximum number of vertices in a path of G. Then for 
every path p with k vertices, there exists a k-coloring (S,, S 2 , .  . . , S,) such that 
1 Si n p I = 1 for i = 1,2,. . . , k. Furthermore, this k-coloring has the following 
property: for each x E SA, there exists an arc going from x to Ll. 
Proof. Let p be a path with 1 p 1 = k. Let H be a partial graph G obtained from 
p by adding to p as many arcs of G as possible without creating a circuit. 
Put A ( x )  = max{ I p I I p is a path of H issuing from x}; if (x, y )  is an arc of H, 
then A (x) > A ( y )  (because H is acyclic). 
If (x, y )  is an arc of G - H, then A ( y )  > A ( x )  (because H + (x, y )  has a circuit). 
So for every arc (x, y )  of G, we have A (x) # A ( y ) ,  and therefore A (x) is a 
Thus a k-coloring with the required property is defined. 0 
coloring function with max, A ( x )  = k colors. 
Corollary. Let k = max I p 1, and let S be a set of vertices contained in a path p 
with ( p I = k .  Then t h e s e t A = { x ( x E X - p ,  T ( x ) C S } U ( p - S )  induces a 
subgraph with chromatic number y ( G A )  s k - 1 S I. 
Remark. A generalisation of [6] has been obtained by Bondy [3]: If a strongly 
connected graph G has at least 2 vertices, the longest circuit (“directed cycle”) 
has length S y(G). The Gallai-Roy theorem for a graph H can be proved by 
using the Bondy theorem for the graph obtained from G by adding a new vertex 
xo that we join in both directions with every vertex of G. Furthermore, it 
contains also a theorem of Camion [5] which states that a strongly connected 
tournament has a circuit which meets each vertex exactly once. 
Note that the proof given above for Theorem 5 does not imply that every 
graph G has an optimal coloring and a path p which meets each color exactly 
once. However, we have the following proposition: 
Proposition 4. A directed graph G with y ( G )  = 3 has a 3-coloring ( S , ,  Sz, S,) 
and a path p = (a, b, c )  which meets each color class Si exactly once. 
Proof. Suppose that G is a graph for which that proposition does not hold true. 
Let (sI, s,, s,) be a 3-coloring of G, and let p = (a, b, c )  be a path of 3 vertices 
(which exists by the Gallai-Roy Theorem); since p does not meet the 3-color 
classes, we have, say, a, c E sI, 
b E S,. Let S3 be the maximal stable set which 
contains s3, 
and put S1 = 3, - Ss, S2 = s2 - S3. Thus, we have 
u E S I ,  c E S I ,  bES3. 
A vertex x of S1 U S2 is necessarily in GS,,,% 
an isolated vertex, or a source, or a 

54 
C. Berge 
sink. Otherwise, there is a path (y, x, z )  with x E S,, y, z E S2; since x is adjacent 
to a vertex u E S3, there is either a 3-colored path (y, x, u), or a 3-colored path 
(0, x, z), which is a contradiction. 
Let TI be the sources, T2 the sinks (which are not isolated vertices), and To the 
isolated vertices in GslUsl. Thus (TI, T2 U To, S3) is a 3-coloring of G with no 
3-colored path and we may assume 
a, c E T2 U To, 6 E S3. 
Every arc between T2 and S3 is directed from S, (otherwise there would be a 
3-colored path). So a E To, and p = (a, 6, c )  meets the 3 colors of the coloring 
( T I ~ { a } ,  
T ~ u  
To-{a), S3). 
The contradiction follows. 0 
Remark. Among the applications of the Gallai-Roy Theorem, let us mention 
the following ones: 
(1) Rkdei’s Theorem. In every tournament, there exists a path which meets 
each vertex exactly once. 
(2) The Chucitaf-Komlbs Theorem [16]. Let G = (X, 
U )  be a graph, let 
U = U,+ U 2 + .  . .+ U, be a partition of the arc set into q classes, let 
pl,p?, . . . , p, be integers such that pIp2 - * pq < y ( G ) .  Then for some i, the 
partial graph G, = (X, 
U,) contains a path with more than p, vertices. 
(3) The generalized Erdos-Szekeres Theorem [17]. Let cr = (a,, a2,. . .) be a 
sequence of plpz 
* . . pq + 1 distinct integers; let p l ,  p 2 , .  . . , pq be binary relations 
satisfying: for every i < j, there exists a relation p k  with a,pka,. Then for some k, 
there exists a subsequence cr’ = (a,,, a,,, . . . ) of cr of length > p k ,  such that 
a,,pkah, ahpka,,, . . . . 
The proofs are easy and are left to the reader. 
A directed graph G is y-diperfecr if for every optimal coloring (S,, Sz, . . . , 
S k )  
there exists a path p such that I p fl Si I = 1 for all i (and if every induced 
subgraph of G has the same property). 
Theorem 6. Euery perfect graph is y-diperfect. 
Proof. In a perfect graph G there exists a clique C with I C I = y ( G ) ,  and by 
Rtdei’s theorem, C is spanned by a path p. So every optimal coloring 
(S1, S2,. . . , s k )  satisfies 
(SinFI=l ( i = 1 , 2 ,  ...). 

Diperfect graphs 
55 
Theorem 7. Every symmetric graph is y-diperfect. 
Proof. Let (S1, S2,. . . , S,) be an optimal coloring of a symmetric graph G, and 
let G' be the graph obtained from G by removing the arcs going from S, to S, if 
j > i. By the theorem of Gallai-Roy, G' has a path p with k = y(G')= y ( G )  
vertices, therefore it meets each of the Si's exactly once. 0 
The graph in Fig. 3, which is isomorphic to the complement c, of a cycle of 
length 7, is not y-diperfect, because y(c,) = 4 and an optimal 4-coloring is 
represented by the numbers in parentheses. One can see that the only paths of 
length 3 3  which contain the color (3) are agb, egb, agf, egf, and none of them 
meets the four colors. 
Also, it is easy to show that the graphs in Figs. 1 and 2 are not y-diperfect, and 
that the perfect graph conjecture is equivalent to the statement: A simple graph 
is y-diperfect for each orientation of its edges if and only if G is perfect. 
Theorem 8. Let G be a a-diperfect graph on X. Then there exists an optimal 
coloring c : X+{1,2,-. . , y(G)} such that each vertex xo belongs to a path of 
cardinality c(xo) that meets each of the colors 1,2,. . . , c(xo) exactly once. 
Proof. Assume that the result is true for all graphs having chromatic number 
< k ;  we shall show that it is also true for a graph G with y ( G )  = k. 
U S k - ,  = A 
maximal, and let xo E Sk. So 
Let (S1, S2,. . . , S,) be an optimal coloring of G with SI U Sz U . 
y ( G A ) = k - l ;  y(GAU%)=k. 
By the induction hypothesis, each vertex x in A belongs to a path of GA with the 
required properties for some coloring ( S ; ,  S:, . . . , SL-l) of GA. Since the graph 
Fig. 3. 

56 
C. Berge 
GAuId is y-diperfect there exists a path containing xo that meets every 
color-class of the optimal coloring (Si, S:, . . . , SL,, {xo}). Therefore each vertex 
of G belongs to a path with the required property for the optimal coloring 
(Sl, s;,. . . ,s;-*, 
Sr). 0 
This result is similar to a theorem of de Werra about perfect graphs [15]. 
References 
[l] D. Amar, I. Fournier and A. Germa, Private communication, May 1981. 
[2] J.C. Bermond, Private communication, February 1978. 
[3] J.A. Bondy, Disconnected orientations and a conjecture of Las Vergnas, J. London Math. Soc. 
[4] J.A. Bondy and U.S.R. Murty, Graph Theory with Applications (MacMillan, London, 1972). 
[5] P. Camion, Chemins et circuits des graphes complets, C.R. Acad. Sci. Paris 249 (1959) 
[6] T. Gallai, On directed paths and circuits, Theory of Graphs, Erdos and Katona, eds. (Academic 
(71 T. Gallai and A.N. Milgram, Verallgemeinerung eines Graphentheoretischen Satzes von Rtdei, 
[8) M. Las Vergnas, Sur les arborescences dans un graphe orientt, Discrete Math. 1.5 (1976) 27-29. 
[9] M. Las Vergnas, Sur les circuits dans les sommes compltties de graphes orientts, Institut de 
2 (1976) 277-282. 
2151-2152. 
Press, New York, 1968) 115-11. 
Acta Sci. Math. (Szeged) 21 (1960) 181-186. 
Hautes Etudes de Belgique, Colloque sur la Thiorie des Graphes, 1973, 231-244. 
(101 N. Linial, Covering digraphs by paths, Discrete Math. 23 (1978) 257-272. 
[I I] H. Meyniel, Private communication, May 1981. 
(121 L. P&a, On the circuits of finite graphs, Publ. Math. Inst. Hung. Acad. Sci. 8 (1963) 355-3. 
(131 B. Roy, Nombre chromatique et plus longs chemins, Rev. Fr. Automat. Informat. 1 (1967) 
[I41 A. Sache, La Thtorie des Graphes (Presses Universitaires de France 1554, Paris, 1974). 
[15) D. de Werra, On the existence of generalized good and equitable edge colorings, J. Graph 
(16) V. Chvatal and J. Kombs, Some combinatorial theorems on monotonicity, Canad. Math. Bull. 
[I71 P. Erdiis and G. Szekeres. A combinatorial problem in geometry, Compositio Math. 2 (1935) 
[ 181 C.C. Chen and P. Manalastas, Every strongly connected digraph of stability 2 has a hamilton 
127-132. 
Theory 5, No. 1 (to appear). 
14 (1971). 
46-70. 
path, Discrete Math. 44 (1983) 243-250. 

Annals of Discrete Mathematics 21 (1984) 57-61 
@ Elsevier Science Publishers B.V. 
STRONGLY PERFECT GRAPHS 
C. BERGE and P. DUCHET 
C.N.R.S. Paris 
In this paper, we investigate the class of graphs containing a set of vertices which niwts 
exactly once every maximal clique. 
1. Examples of strongly perfect graphs 
Let G = ( X ,  E )  be a simple graph, and let (e be the family of all maximal 
cliques. A set S such that 
/sncl=i ( c E ( ~ )  
is called a stable transversal of G. If G and all its induced subgraphs have a 
stable transversal, we shall say that G is strongly perfect. Clearly, every bipartite 
graph satisfies such a property. Many other classes of perfect graphs are strongly 
perfect, as can be shown by the following theorems: 
Theorem 1. Let G be a graph with no induced Pq (elementary chain of four 
vertices without chords). Then every maximal stable set meets all the maximal 
cliques. Consequently, G is strongly perfect. 
By a theorem of Seinsche [4] every graph with no induced P, is perfect; by the 
same type of argument, we shall show that every maximal clique meets all the 
maximal stable sets. 
Lemma (Seinsche). The following two conditions are equivalent: 
(i) G = ( X ,  E )  has no induced P4; 
(ii) for every A C X ,  either the subgraph GA or its complement GA are 
disconnected. 
If G has an induced P4. then the set A of the four vertices in a P., is such that 
GA and GA are connected, hence (ii) is false. 
Conversely, if (ii) is false, let A be a set of vertices with minimum cardinality 
such that both GA and G,., are connected. Let a be a vertex of A such that 
GA - { a }  contains two distinct connected components, say C and C'; such a 
57 

58 
C. Berge, P. Duchet 
vertex exists by the minimality of A. Since G, is connected, there exists a point b 
in A such that a b E  E; we may assume b E C. Then, by an appropriate choice of 
vertices b, c, c’, we may have 
C‘EC’, c EC, 
ab, bc’, cc’ $Z E, 
ac‘, ac, bc E E. 
For B = {a, c, c ’ ,  b } ,  we have Ge = Pa, which contradicts (i). 
Proof of Theorem 1. Assume that every graph with no induced P4 and of order 
less than n has the following property: “every maximal stable set meets every 
maximal clique”. We shall show that a graph G of order n with no induced P4 
also has the same property. 
By the lemma, either G or G are disconnected; we may assume that G is 
disconnected and has two connected components GI and Gz. By the induction 
hypothesis, a maximal clique C1 of GI, a maximal stable set S1 of G,, a maximal 
clique C2 of G, and a maximal stable set S, of Gz satisfy 
Therefore, every maximal stable set of G, which is of the type S = SI U Sz, 
meets every maximal clique of G, which is of the type C1 or C,. 0 
Theorem 2. Every comparability graph is strongly perfect. 
Proof. Let G be the comparability graph of an ordered set (X, S ); the strongly 
connected components of C are disjoint classes, and some of these are ‘terminal’ 
components (with no edge going out). Choose one vertex in each of the terminal 
components, to define a set S. Clearly, S is stable. By a theorem of Rtdei, a 
maximal clique C is spanned by a directed path, and by the maximality of C this 
path ends in a terminal component; hence C meets S in exactly one point. 0 
Note that the complement of a comparability graph is not necessarily strongly 
perfect, as we can see with c6 (see Fig. 1). 
Theorem 3. Every graph which is the complement of a triangulated graph is 
strongly perfect. 
Proof. It is known that a graph G = (X, 
E) is triangulated if and only if, for 
every A 
X, the subgraph GA has a simplicia1 vertex (i.e., a vertex which 
belongs to only one maximal clique); see, for instance, [l]. 

Strongly perfect graphs 
59 
Let G be a triangulated graph, let x be a simplicia1 vertex, let C be the 
maximal clique containing x. Every maximal stable set S of G satisfies 
S n C# 0; otherwise, S U {x} would be also a stable set, which contradicts the 
maximality of S. Hence, in G, the maximal stable set c meets every maximal 
clique 5. 
Theorem 4. Every triangulated graph is strongly perfect. 
Proof. Let G = (X, 
E )  be a triangulated graph. By a theorem of Hajnal and 
Suranqi 121, it is known that G is perfect. 
We shall index the vertices x I ,  x2,. . . so that for every k, the vertex Xk is a 
simplicial vertex of the subgraph induced by {xk, & + I , .  . . , xn}. Put 
Tx, = {x, / I  > i, [x,, x,] E El 
The directed graph ( X , r )  has no (directed) circuits; furthermore, for each 
maximal clique C there exists a vertex x, such that { x l }  U Tx, = C. 
Since the graph ( X , r )  has no circuit, it has a kernel S ;  the maximal clique 
C = {x,} U Tx, meets S, by the definition of a kernel. Hence there exists a stable 
set S which meets all the maximal cliques. 0 
2. General results 
In this section, we give a characterization of strongly perfect graphs. 
Theorem 5. Every strongly perfect graph is perfect. 
Proof. Since the induced subgraphs of a strongly perfect graph are strongly 
perfect, it suffices to show that a strongly perfect graph G has its chromatic 
number -y(G) equal to w ( G ) ,  the maximum size of a clique. 
Assume that w ( G )  = k, and that the theorem is true for all the graphs G’ with 
w ( G ’ )  < k ; let S be a stable set of G which meets all the maximal cliques. Then 
k - 1 = w ( G ~ - ~ )  
= Y ( G ~ - ~ )  
(by the induction hypothesis). Hence 
y ( G )  S ( k  - 1) + 1 = k = w (G) 
C y(G). 
Hence -y(G)= w ( G ) .  0 
Theorem 6. A perfect graph G = (X, E )  has a stable set S which meets all the 
maximal 
cliques 
iff 
no 
two families 
% =(CI, CZ,.. .,ck) 
and 9 
= 
(Dl, D2,. . . , Dk,) 
of maximal cliques (with possible repeated cliques) satisfy 

60 
C. Berge, P. Ducher 
and 
1 % I = 19 I 
I % I > 1 %  I for all x E X .  
Ce, is the subfamily of the cliques of % which contain x, with possibly repeated 
cliques. The two families can be described by an assignment of an integer 
z (C) E 2 to each clique C of G so that XcEoz(C) = 0 and Xceo, z ( C )  > 0. 
Proof of Theorem 6. Let H = (X, 8) be a hypergraph on X whose edges are the 
maximal cliques of G. It is known that G is perfect iff the dual H* is a normal 
hypergraph, that is, 4(H’) = A(H’) for all H ’ c  H*. 
Clearly, the following conditions are equivalent: 
(1) G has a stable set S which meets all the maximal cliques; 
(2) H has a stable transversal S; 
(3) H* has a ‘perfect’ matching (a matching which covers the vertex set). 
We say that a hypergraph H* is quasi-regularizable if there exists a positive 
integer k and a partial hypergraph H’ of kH* which is ‘regular’ (every vertex of 
H* has the same degree in H‘). 
If H* has a perfect matching, then H* is quasi-regularizable (since a perfect 
matching H‘ is a regular partial hypergraph of H*). For a normal hypergraph, 
the converse is also true, because if H* is normal and has a partial hypergraph 
H’ (with repeated edge) which is regular, then H’ is also normal, so q(H’) = 
A(H’), and each color of an optimal edge-coloring of H‘ defines a perfect 
matching of H*. So (3) is equivalent to the following condition: 
Also, the Farkas lemma shows that (4) is equivalent to the next condition: 
(4) H* is quasi-regularizable. 
(5) there exists no integral valuation z, E 2 (for each vertex i of H*) such that 
& zi > 0 for every edge E of H* 
iE 
Define a family % by taking zi times the clique C, if zi > 0; define the family 9 
by taking I zj I times the clique C, if zj < 0. So the two families % and 9 
satisfy 
Hence the condition of the theorem is equivalent to (5). 0 
Some examples of perfect graphs are presented in Figs. 1, 2 and 3; the 
numbers associated with the maximal cliques show that none of these graphs is 
strongly perfect. 

Strongly perfect graphs 
-3 
61 
-3 
- 
c6 
Fig.1. 
-3 
-3 
+4 
Fig. 2. 
Fig. 3. 
References 
[l] P. Duchet, Classical perfect graphs (this volume, pp. 67-96). 
[2] A. Hajnal and J. Suranj4, h e r  die Auflosung von Graphen, Ann. Univ. Sci. Budapestinensis 1 
[3] H. Meyniel, The graphs whose odd cycles have at least two chords (this volume, pp. 115-119). 
[4] D. Seinsche, On a property of the class of n-colorable graphs, J. Comb. Theory, Ser. B 16 (1974) 
(1958) 113-120. 
191-193. 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 63-65 
@ Elsevier Science Publishers B.V. 
PERFECTLY ORDERED GRAPHS 
v. CHVATAL 
School of Computer Science, McGill University, Montreal, Canada 
This note presents a good characterization of a class of strongly perfect graphs which 
includes all comparability graphs, all triangulated graphs and all complements of triangulated 
graphs. 
This note concerns colouring the vertices of a graph in the usual way, with 
adjacent vertices receiving distinct colours. When the vertices of a graph are 
ordered in a sequence ul, uz, . . . , u,, a natural way of colouring them by positive 
integers consists of scanning the sequence from u1 to u, and assigning to each u, 
the smallest positive integer f(v,) assigned to none of its neighbours u, ( i  < j ) .  
We shall refer to the graph with the linear order on the set of its vertices as an 
ordered graph and to the largest integer appearing as some f (u,) as the Grundy 
number of this ordered graph. (The Grundy function [3] of a directed acyclic 
graph is the unique function assigning to each vertex u the smallest nonnegative 
integer g ( u )  assigned to no vertex u such that there is a directed edge from u to 
u. If, in a graph with a linear order < on the set of its vertices, each edge uu with 
u < u is directed from u to u, then the Grundy function g of the resulting 
directed acyclic graph and the function f defined above satisfy f ( u )  = g(v) + 1 
for all vertices u.) 
Trivially, the Grundy number of an ordered graph is at least its chromatic 
number; to see that the inequality may be strict, consider the graph with vertices 
a, b, c, d, edges ab, bc, cd and a linear order < such that a < 6, d < c. We shall 
refer to any of these (three) ordered graphs as an obstruction. A linear order on 
the set of vertices of a graph will be called (i) admissible if it creates no 
obstruction and (ii) perfect if, for each induced ordered subgraph H, the Grundy 
number of H equals the chromatic number of H. Thus, every perfect order is 
admissible; to prove the converse, we shall rely on the following fact. 
Lemma. Let G be a graph and let C be a set of pairwise adjacent vertices in G such 
that each w E C has a neighbour p(w) E! C ;  let the vertices p ( w )  be pairwise 
nonadjacent. If there is an admissible order < such that p(w ) < w for all w E C 
then some p ( w )  is adjacent to all the vertices in C. 
Proof. Let us proceed by induction on the number of vertices in C. For each 
63 

64 
v. ChUdtd 
w E C, the induction hypothesis guarantees the existence of a vertex w *  E C 
such that p ( w  *) is adjacent to all the vertices in C except possibly w. In fact, we 
may assume that p ( w  *) is not adjacent to w, for otherwise we are done. Now it 
follows that the mapping which assigns w * to w is one-to-one, and therefore it is 
onto. In particular, with u standing for that vertex in C which comes first in the 
admissible order, there are vertices b, c E C such that b* = u and c* = b. But 
then there is a contradiction: the vertices a, b, c, d with a = p ( b )  and d = p ( v )  
constitute an obstruction. 0 
Theorem 1. A linear order of the set of vertices of a graph is perfect if and only if it 
is admissible. 
Proof. The ‘only if’ part is trivial; the ‘if’ part will be proved by induction on the 
number of vertices. Let G be a graph with an admissible order < of the set of its 
vertices and let k stand for the Grundy number of this ordered graph. By virtue 
of the induction hypothesis, it will suffice to show that the chromatic number of 
G is (at least) k. Thus it will suffice to find k pairwise adjacent vertices in G. For 
this purpose, consider the smallest i such that there are pairwise adjacent 
vertices w , + ~ ,  w , + ~ ,  
. . . , wk with f(w,) = j for all j. If i = 0 then we are done; 
otherwise each w, has a neighbour p(w,) such that p(w,)< w, and f(p(w,)) = i. 
But then the lemma implies the existence of a vertex u with f ( v )  = i, adja- bent to 
all the vertices w,, which contradicts the minimality of i. 0 
A graph will be called perfecfly orderable if it admits a perfect order. The proof 
of Theorem 1 shows that every perfectly orderable graph is perfect: the 
chromatic number of each of its induced subgraphs H equals the number of 
vertices in the largest clique in H. A related property has been studied by Berge 
and Duchet [4]: a graph is called strongly perfect if each of its induced subgraphs 
H contains a stable set meeting all the maximal cliques in H. (Here, as usual, 
“maximal” is meant with respect to set-inclusion.) It is easy to show that every 
strongly perfect graph is perfect (see [4]). 
Theorem 2. Every perfectly orderable graph is strongly perfect. 
Proof. It will suffice to find, in an arbitrary graph G with a perfect order < , a 
stable set S meeting all the maximal cliques in G. We claim that S can be found 
by the following greedy algorithm: scan the perfect ordering v I ,  v2,. . . , on from 
u, to v. and place each uj in S if and only if none of its neighbours ui (i < j )  has 
been placed in S. Indeed, if the resulting stable set S is disjoint from some clique 
C then each w E C has a neighbour p ( w ) E S  with p ( w ) <  w. But then the 
lemma implies the existence of a vertex u E S adjacent to all the vertices in C. 
Thus C is not maximal. 0 

Perfectly ordered graphs 
65 
(As Claude Berge and Pierre Duchet pointed out to me, this argument may be 
interpreted as a common generalization of the arguments used in their pioneer- 
ing study [4] to establish strong perfection of various classes of graphs.) 
The converse of Theorem 2 is false: the strongly perfect graph shown in Fig. 1 
is not perfectly orderable. (The decision to set 1 < 2, which can be made without 
loss of generality, sets off a chain reaction forcing 3<4, 5<6, 7<8, 3 < 2 ,  
9<10, 11<12, 13<14, 15<10, 9<1, 16<17, 18<19, 20<21 and 16<1, 
whereupon the vertices 16, 1, 2, 3 constitute an obstruction.) 
On the other hand, it is an easy exercise to show that comparability graphs, 
triangulated graphs and complements of triangulated graphs are perfectly 
orderable. (More precisely, a graph is a comparability graph if and only if its 
vertices can be linearly ordered in such a way that no induced subgraph with 
vertices x, y, z and edges xy, yz has x < y < z. A graph is triangulated if and 
only if its vertices can be linearly ordered in such a way that no induced subgraph 
with vertices x, y, z and edges xy, yz has x < y and z < y. A graph is the 
complement of a triangulated graph if and only if its vertices can be linearly 
ordered in such a way that no induced subgraph with vertices x, y, z and the 
single edge xz has y < x and y < z.) We close with the obvious question: how 
difficult is it to recognize perfectly orderable graphs? 
13 
50 
5 
Fig. 1. 
References 
[l] C. Berge, Farbung von Graphen, deren samtliche bzw. deren ungerade Kreise starr sind, Wiss. 
[2] C. Berge, Sur une conjecture relative au problhe des codes optimaux, comm. 132me assemblee 
[3] C. Berge, Graphs and Hypergraphs (North-Holland, Amsterdam, 1973). 
[4] C. Berge and P. Duchet, Strongly perfect graphs (this volume, pp. 57-61). 
Z. Martin-Luther-Univ. Halle-Wittenberg 114 (1961). 
gtnCrale de I'URSI, Tokyo, 1962. 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 67-96 
@ Elsevier Science Publishers B.V. 
CLASSICAL PERFECT GRAPHS 
An introduction with emphasis on 
triangulated and interval graphs 
Pierre DUCHET 
C. N. R. S. Paris 
Essential results and some new ones are presented on Comparability graphs, triangulated 
graphs, interval graphs, and related classes of perfect graphs. 
1. Introduction 
It is well known that the birth of perfect graphs, in 1960, was closely related to 
the discovery of perfection for comparability graphs [5], for triangulated graphs 
[5], [48], and for interval graphs [5]. These famous classes and subclasses or 
related classes, studied by various authors since the 1960’s, are called classical 
perfect graphs (see Fig. 1). 
In this survey, we restrict our attention to those classes that are ‘good classes’ 
in the following sense: every induced subgraph of a graph in the class is also in 
the class. So these classes may be characterized by forbidden configurations. 
Fortunately, these classes also have a ‘good characterization’ in the sense of 
Edmonds [19]. They are also recognizable in polynomial time. Moreover, these 
graphs are strongly perfect (see articles in this volume, pp. 57-61 and 63-65). 
Hence their perfectness will not be proved here. 
The largest classes of classical perfect graphs are comparability graphs, 
triangulated graphs, and their complements (called cocomparability and cotrian - 
gulated graphs). It would be interesting to include all of them in a wider class. 
Problem 1.1. Find a well characterized class of perfect graphs that contains 
comparability graphs, triangulated graphs, and their complements. 
We summarize in Section 3 the most famous results about the characterization 
problem for classical perfect graphs. Sections 4, 6 and 8 deal with the most 
important classes. We shall try to demonstrate their usefulness from the 
standpoint of representative graphs (see Section 2 for definitions). In particular, 
simple proofs are proposed for triangulated graphs and interval graphs via, 
respectively, subtree hypergraphs and interval hypergraphs (Sections 5 and 7). 
67 

68 
P. Duchet 
The reader who is interested in the algorithmic point of view is referred to 
With slight differences our terminology is taken from [7]. Our graphs are 
undirected simple graphs, finite without loops or multiple edges. Hypergraphs 
will be denoted by the form H = (X, 
8'), where X is the vertex set and 8 is any 
family of subsets of X. ' E  occurs in 8' will often be denoted by E E 8 or by 
E E H. 
1371- 
Clique : 
w ( G ) :  
ll(G): 
stability number. 
Walk : 
set of vertices of a complete subgraph. 
maximum number of vertices of a clique of G. 
sequence xI, . . . , x,, of vertices such that x ~ + ~  
and x, are adjacent 
for all 1 S i S n. In a closed walk, the first and last vertices 
coincide. 
Path : 
(for 
graphs 
and 
hypergraphs) 
alternated 
sequence 
xlE1.. . X.E.X,,+~ 
of edges and vertices that satisfies 
x, E E, and 
x , + ~  E E, for 1 c i s  n, 
E,# E, 
x,#x, 
X " + ~ # X ,  f o r 2 s i i n n ;  
for 1 6  i < j S n, 
for 1 ~i < j s n ,  
the path becomes a cycle when xn+* = x,. 
f ( H )  of a hypergraph H = (X, 
8'): hypergraph on f ( X )  whose 
edges are f ( E )  for E E 8'; here f is a mapping X +  Y. 
mapping c : X-+ 
X \ E U {e} where e is a new element; c is 
defined by 
Image : 
Contraction of H = (X, 
ZP) by E C X: 
x 
if X ~ E ,  
e 
if x E E. 
c(x) = 
The image c ( H )  is also called the contracted hypergraph from H by E or the 
contraction of H by E and is denoted by HIE. HIEl, ..., Em means 
H/EI /. ' . /Em. These hypergraphs are determined up to isomorphism. 
Graphs modulo subset: If V , , .  . ., V, are subsets of vertices in a graph 
G = (V, E), they constitute the vertices of a new graph, denoted by 
G( 
VI, . . . , V,), in which V and V, are joined when they are adjacent in G (i.e. 
rG(v,)n v,z0). 

Classical perfect graphs 
69 
2. Representative graphs 
The representative graph or intersection graph of a hypergraph H = (xl, . . . , x, ; 
El,. . . ,Em) is the graph denoted by L ( H )  whose vertices are the E,, two vertices 
E, and E, being adjacent if and only if E, and E, have a common point. 
When we are interested in a class %' of hypergraphs, any hypergraph 
isomorphic to a member of %' will be called a (e-hypergraph. The representative 
graphs of %'-hypergraphs will be the %'-graphs. 
Helly hypergraphs, in which every (finite) family of edges with no common 
point contains two disjoint edges, play an important role in the domain of 
representative graphs. Every graph G is the representative graph of a Helly 
hypergraph, namely, the hypergraph C*( G) defined as follows: 
the vertices of C*(G) are the maximal cliques of G; 
the edges of C*(G) are the sets of maximal cliques of G that contain a given 
We define a refraction of a hypergraph H = (X, a) as a map r : X +  X 
The range r(H) = ( X ;  (r(E)), E in an edge of H )  is also called the retraction 
An R -class of hypergraphs is a class (e satisfying the following two axioms: 
(2.1) Every Ce-hypergraph is a Helly hypergraph. 
(2.2) Every retraction of a Ce-hypergraph is a Ce-hypergraph. 
Examples of R-classes are normal hypergraphs, balanced hypergraphs, uni- 
modular hypergraphs, subtree hypergraphs (Section 5), and interval hypergraphs 
(Section 7). The above definitions are motivated by the following fundamental 
lemma: 
vertex of G. 
satisfying the following property: r(E) C E for every edge E of H. 
of H by r. 
2.3. Representation lemma (cf. Duchet [15], [16]). Let %' be an R-class. A graph 
G is a %'-graph if and only if C*(G) is a %'-hypergraph. 
Proof. The 'if' part is nothing but the fact that G is isomorphic to L(C*(G)). 
Conversely, if H = (x,, . . . , x,; El,. . . , Em) is a (e-hypergraph with G = L ( H ) ,  
we may associate to each maximal clique C of G the intersection subset 
By axiom (2.1), E, is not empty. Distinct Ec's are disjoint; the contraction by 
a given Ec is clearly a combination of retractions of H. Moreover, it is not 
difficult to see that for every vertex not in any Ec( = isolated vertex in H or 
vertex of degree 1) there is a retraction of H whose range is X \ x. So, by axiom 
(2.2), the hypergraph constructed from H via the contractions by all the Er 
E, = n,,,,E,. 

70 
P. Ducher 
successively and via the elimination of vertices not in any Ec is a %-hypergraph 
and is isomorphic to C * ( L ( H ) ) =  C*(G). 0 
3. Classical perfect graphs 
The most important special classes of classical perfect graphs are classified in 
Fig. 1. In this diagram, all inclusions between classes are indicated by arrows. 
They are strict inclusions. 
What follows is relative to a graph G = (X, E) which is finite, without loops or 
multiple edges. 
3, I .  Comparability graphs 
Definition. There is a partial order S on X such that x and y are adjacent if and 
only if x s y or y s x. See Section 4. 
2.2. Cocomparability graphs 
Definition. A cocomparability graph is the complement of a comparability 
graph. 
PERMUTATION 
INTERVAL 
THRESHOLD 
Fig. 1. Classical perfect graphs. 

Classical perfect graphs 
71 
3.3. Permutation graph 
Definition. There exists a permutation 7~ on X and a labelling 1,. . . , n of X, 
such that i and j are adjacent if and only if 
.r(i) - TO’) < 0. 
i - j  
Characterization (Dushnik and Miller [ 181). Each of the following conditions is 
necessary and sufficient for G to be a permutation graph: 
(i) G and G are both comparability graphs, 
(ii) G is the comparability graph of an order of dimension s 2 ,  
(iii) G is the comparability graph of the inclusion relation between a family of 
(iv) G has no induced subgraph isomorphic to one of the graphs listed in Fig. 
intervals of N, 
8, or to their complements (see Section 4). 
Dushnik and Miller’s result has been rediscovered with an algorithmic 
characterization by Pnueli, Lempel and Even [65]. 
3.4. Circular permutation graphs 
Definition (Rotem and Urrutia [71]). A circular permutation diagram D, con- 
sists of: 
(i) two concentric circles C1 and C2 in the plane, 
(ii) n points l’, . . . , n‘ on C, in the clockwise direction, 
(iii) n points ~ ( l ) ,  
. . . , r ( n )  on C2 in the clockwise direction, 
(iv) n paths 1,. . . , fi respectively from i’ on C1 to T ( i )  on C2. 
Two distinct paths do not intersect in more than one point. 
G is a circular permutation graph when there is a labelling 1,. . . , n of X and a 
permutation diagram D, satisfying the property that i and j are adjacent if and 
only if T and 7 intersect. 
Characterization (Rotem and Urrutia [71]). For a vertex u of G, define the 
graph G,u as follows (where V = r G ( u ) ) :  
G,v and G have the same vertices, 
( G , u ) ~  
= G, 
(G,u)x,v = Gxiv. 
For x E V and y E X \ V, xy is an edge of G * v if and only if x y  is not an edge 
of G. 

72 
P. Duchet 
Theorem 3.4. G is a circular permutation graph if and only if it satkfies both the 
following conditions : 
(i) G is a comparability graph, 
(ii) G,v is a permutation graph for some vertex v. 
3.5. P4-free graphs 
Definition. P4, 
the path with four vertices, is not an induced subgraph of G. 
Characterization (see article in this volume, pp. 57-61). Every induced subgraph 
G’ or its complementary graph is disconnected. 
3.6. Arborescence compurability graph 
Definition. The comparability graph of an ‘arborescent order’ means an order < 
on X such that, for every x E X, { y ,  y .< x )  is a linearly ordered subset. 
Characteriztion (Wolk [84], [85]). G does not contain P4 or C, as an induced 
subgraph (see Fig. 2). 
Another necessary and sufficient condition is the following: 
For every edge x y  of G, we have 
V(X)C V ( Y )  or 
V ( Y ) C W ) .  
(Here V(s) = Tc(s) 
U {s} for s E X.) 
3.7. Threshold graphs 
Definition (Chvatal and Hammer [12]). Put X = 11,. . . , n}. There exists a linear 
inequality 
2 a,x, s a 
, = I  
with a; E aB and n = I X I such that the following holds: S C X is a stable set of G 
if and only if (1) is satisfied by the characteristic vector xs = ( x r ,  x 2 , .  . . , x,) of S 
Fig. 2. 

Classical perfect graphs 
73 
where for all i 
1 if i E S, 
x, =( 0 
if i P  S. 
Characterization (Chvital and Hammer [12]). A necessary and sufficient condi- 
tion for G to be threshold is that G does not have 2Kr, P, or C, as an induced 
subgraph (see Fig. 3). 
Thus 
(a) The complement of a threshold graph is threshold. 
(b) A threshold graph is an arborescence comparability graph and a fortiori a 
Those permutations that produce a threshold graph were characterized by 
Let (T and T be two sequences over some alphabet. The shuffle product is 
permutation graph. 
Golumbic [36]. 
defined as follows: 
(T w T = { ( T I T I , .  . . , (TkTk I CT = @ I , .  . . , 
U k  and T = TI,. . . , Tk}. 
Here the a: and 
are subsequences, k ranges over all integers, and 
juxtaposition means concatenation. 
Theorem 3.7.1 (Golumbic [36]). The threshold graphs are precisely those permu - 
tation graphs corresponding to sequences contained in 
[ 1,2, . . . , p ] ul [ n, n - 1, . . . , p + 11 
where p and n are positive integers and w denotes shufle product. 
As for split graphs, thresholdness is characterized by the degree sequence of 
the graph. Furthermore, the entire graph is completely determined. 
Theorem 3.7.2 (ChvBtal and Hammer [12], [24]). Let G = ( X ,  E )  be a graph. 
The following statements are equivalent: 
( i )  G is a threshold graph. 
(ii) (Henderson and Zalcstein [51]). There exist an integer-valued function 
U : X + N and an integer t such that for distinct vertices x and y 
x and y are adjacent 
V ( x ) +  U ( y ) >  t. 
F
X
 
3% 
%% 
p4 
c4 
Fig. 3. 

74 
P. Duck1 
(iii) There exist a clique C and a stable set S partitioning X and there are 
partitions 
c = c, u 
* * .  u cpu cp+,. 
s = s " u s , u ~ ~ ' u s p ,  
with p 2 0 and Cp+,, 
So possibly empty, such that for all 0 S i, j S p, 
x E C, and y E Sj are adjacent 
i s j .  
3.8. Triangulated graphs 
Definition. Every cycle of length 3 4 in G has a chord, that is, an edge joining 
two non-consecutive vertices of the cycle. In the literature, triangulated graphs 
are also called chordal, rigid -circuit, monotone transitive, and perfect elimination 
graphs. See Sections 5 and 6. 
3.9. Cotriangulated graphs 
Definition. A cotriangulated graph is the complement of a triangulated graph. 
3.10. Split graphs 
Definition. There is a partition X = CU S of the vertex set of G into a clique C 
and a stable set S. 
Characterization (Foldes and Hammer [24]). Each of the following conditions is 
necessary and sufficient for G to be a split graph: 
(i) Both G and its complement 
(ii) G does not have 2K2, C, or C, as induced subgraphs (see Fig. 4). 
are triangulated graphs, 
A nice property of these graphs is that the splitness is completely determined 
by the degree sequence. More precisely, we have the following theorem: 
Fig. 4. 

Classical perfect graphs 
75 
Theorem 3.10 (Hammer and Simeone [50]). Let G = ( X ,  E) be a graph with 
degree sequence dl 5 dZ 3 * - - 5 d,, and put m = max{i 1 d, 5 i - 1). Then G is a 
split graph if and only if 
m 
x d i  = m ( m - 1 ) +  
d,. 
r = l  
i = m + l  
Furthermore, if this is the case, then w ( G )  = m. 
The class of split graphs has been generalized by Peled [63] (matroidal graphs, 
which are possibly imperfect) and Foldes and Hammer [24] (matrogenic graphs, 
which coincide with matroidal perfect graphs). 
3.11. Split comparability graphs 
The class of graphs that are both split graphs and comparability graphs was 
identified by Foldes and Hammer [24] as those graphs that do not contain 2Kz, 
C,, C,, D2, F2 or H (see Fig. 5 )  as an induced subgraph. 
3.12. Interval graphs 
Definition. There is a one-to-one correspondence I between vertices of G and 
intervals of a totally ordered set such that 
X X Y E E  e I ( x ) n r ( y ) # B .  
See Sections 7 and 8. 
3.13. Indifference graphs 
See Section 8. 
3.14. Split cocomparability graphs 
Foldes and Hammer [24a] have shown that a split graph G is an interval graph 
P 
Fig. 5. 

76 
P. Duchel 
if and only if its complement G is a comparability graph. These graphs are 
exactly the graphs having no induced subgraph isomorphic to any of the graphs 
of Fig. 6 ([24a]). 
4. Comparability graphs 
A graph is a comparability graph when it admits a transitive orientation of its 
edges. A weaker condition was found by Ghouila-Houri: 
Theorem 4.1 (Ghouila-Houri [34]). A relation > is said to be a pseudo-order on 
a set X if we have: 
a > 6, b > c 3 a > c or c > a 
a > b  3 n o t b > a  
(antisymmetry ). 
(pseudo-transitivity), 
A graph G is a comparability graph if and only if it admits an orientation of its 
edges that represents a pseudo -order relation. 
This result yields a characterization in terms of odd closed walks which had 
been conjectured by A. Hoffmann: 
Theorem 4.2 (Ghouila-Houri [34], Gilmore and Hoffmann [35]). A graph G is a 
comparability graph if and only if for every closed walk with odd length 
x I .  * - X ~ ~ + ~ X ,  
there exists an edge of the form x,x,+~ (where i is taken modulo 
2p + 1). 
Gallai strengthened this result, considering the following relation between 
adjacent edges : 
ab - ac if and only if b and c are in the same connected component of the 
subgraph GrGc,, 
induced by the neighbours of a (in G )  in the complement of the 
graph G. 
A wreath of G is defined to be a cycle x l . .  x&l that satisfies the following 
two conditions: 
(i) all x, are different, 
2 K 2  
c.4 
c5 
D2 
E l  
Fig. 6. 

Classical perfect graphs 
77 
(ii) xixi-] - xixi+l for all i (modulo p ) ,  where p is the length of the wreath (see 
Fig. 7). 
Theorem 4.3 (Gallai [32]). A graph G is a comparability graph if and only if it 
does not have an odd wreath. 
We shall say nothing of the deep structure of comparability graphs for we 
would plagiarize Gallai’s remarkable work [32], the conclusion of which is the 
following characterization b y  excluded configurations: 
Theorem 4.4 (Gallai [32]). G is a comparability graph if and only if it does not 
contain an induced subgraph isomorphic to one of the graphs C (1 d i d 4) shown 
in Fig. 8(a) or of the complements of the graphs K (5 S i S 19) shown in Fig. 8(b). 
Recently, Comparability graphs were characterized as the complement of 
some intersection graphs: 
Theorem 4.5 (Rotem and Urrutia [72]). The complement of a graph G with n 
vertices is a comparability graph if and only if G is the intersection graph of the 
graphs f,, . . . , f n  of n continuous functions E : (0,l)- R. 
In fact, Rotem and Urrutia proved that the E’s may be chosen linear by 
intervals and intersecting in a finite number of points. 
Arditti et al. [2] studied the comparability graphs that completely determine 
(up to duality) a partial order. These graphs are named uniquely partially 
orderable graphs (U.P.O.). Such graphs have been characterized by Shevrin and 
Filippov [74] and Trotter, Moore and Sumner [78]. 
Theorem 4.6 (Arditti [2]). The comparability graph of an irreducible partial 
order is U.P.O. 
Fig. 7. Wreaths. 

78 
P. Duck1 
2n 0
2
 
2 n t l  
1 
2n+ 
2
$
&
 
1 
1 
2n 
"L/ 
n
1
 
C, n > 6  
,/A 
A1 
dz 
D, n > 2  
En n >  1 
F, n >  1 
A3 
A4 
A5 
A7 
A0 
A9 
A10 
Fig. 8(b). 
Fig. 8. Critical non-comparability graphs @(a)) or their complements (U(b)). 
More generally, the comparability graph of a partially ordered set suffices to 
give much interesting information about this order. 
Theorem 4.7 (Trotter, Moore and Sumner [78]). The dimension of a partial 
order ( = the minimum number of linear orders whose intersection is the given 
order) is determined by its comparability graph. 
Theorem 4.7 also appears in [47]. 
A nice representation of a comparability graph, generalizing the result on 
permutation graphs by Dushnik and Miller (see Theorem 3.3), is given by the 
following theorem: 

Clnssicnl perfect graphs 
79 
Theorem 4.8 (Leclerc [57]). G is the comparability graph of an order of dimen- 
sion < d if and only if it represents the inclusion relation between subtrees of some 
tree that has at most d pendant vertices. 
(In this theorem, a ‘subtree’ means a subset of vertices that induces a subtree; 
see Section 5.) 
Purely graphical strong properties, generalizing perfectness, were obtained by 
Greene and Kleitman [38], [40]. See [39] for a survey of these properties 
involving cliques and stable sets (or, equivalently, chains and antichains for 
partial orders); these results generalize to a great extent the famous Dilworth 
theorem (see [13], [28], [64], [65], [76], [30], [41], [SO]). 
Using the minimal cost flow algorithm of Ford and Fulkerson [25], Frank [28] 
gives a nice formulation and a generalization of Greene and Kleitman’s min-max 
relations. Following Frank, let us say that two families % and Y constituted by 
subsets of a given set X are orthogdnal when they satisfy the following two 
conditions: 
C n S# 0 for every C E % and every S E 9, 
(4.10) 
Theorem 4.11 (Frank [28]). There exist families V1,. . . , Va and Y1,. 
. . ,Yo 
and 
there exist integers a = j ,  > * * > js = 1 and 1 = i, < 
* < is = w with the follow- 
ing properties : 
(i) 
(ii) Y, is a family of i disjoint stable sets of G (for 1 S i S w ) .  
(iii) For every j, jk 2 j 2 jk+,, 
k S s). 
(iv) For every i, ik s i s ik+l, Y, and V1, are orthogonal (1 G k s s). 
is a family of j disjoint cliques of G (for 1 S j d a). 
and Y,, are orthogonal (1 
Corollary 4.12 (Greene and Kleitman [40]). Denote 
where the maximum is taken over all families Y, consisting of i stable sets of G. 
Then 
where the ,first minimum runs over all partitions of X into cliques C1,. . . , C,. 
Corollary 4.13 (Greene [38]). Denote 

80 
P. Duchet 
w, =max 1 u c / ,  
el 
C€’%, 
where the maximum is taken over all families %, consisting of j cliques of G. Then 
w, =min Cmin (lS,I,j) 
t = 1  
where the first minimum runs over all partitions of X into stable sets S,, . . . , S,. 
5. Representation of triangulated graphs 
A subtree means here a subset of vertices that induces a subtree of a given 
A subtree hypergraph is a finite hypergraph H = (X, %) whose edges are 
graph. 
subtrees of some fixed tree having X as set of vertices. 
Theorem 5.1 (Duchet [ 161, Flament [23]). A hypergraph H = (X, %) is a subtree 
hypergraph if and only if it has both of the following properties: 
(S.l.1) H is u Helly hypergraph. 
(5.1.2) Every cycle of H contains three edges with a non-empty intersection. 
It should be noted that a subtree hypergraph is not generally a balanced 
hypergraph. 
Proof of Theorem 5.1. The proof of this theorem uses the following simple 
remark whose verification is left to the reader: 
Lemma 5.2. Let E and F be two intersecting edges of a hypergraph that satisfy 
(5.1.1) and (5.1.2). Then, if we add E U For E f l  F as a new edge, the resulting 
hypergraph also satisfies (5.1.1) and (5.1.2). 
Now, among all hypergraphs containing H as a partial hypergraph and 
satisfying conditions (5.1.1) and (S.1.2), we choose one, say H‘, with a maximal 
number of edges. Let T be the partial hypergraph of H’ constituted by the 
minimal edges that contain at least two vertices (‘minimal’ is relative to the 
inclusion relation). We are going to show that T is the required tree; H’ is a 
family of subtrees of T. 
Let E be an edge of H’, IE 122, and a, b two vertices of E. Suppose 
{ u. b )  E H‘. Then, by maximality of H’, if we add {a, b }  as a new edge of H’, the 
resulting hypergraph contradicts (S.l.1) or (S.1.2). In both cases, noting that if 

Classical perfect graphs 
81 
aElxl 
* . . xk+, Ekb is a path in H‘ from a to b, then E, U * * * U E, is an edge of H’ 
by Lemma 5.2, there exist two edges of H’, say A and B, with the properties 
a € A ,  b E B  and 
A f l B n { a , b } = 0 .  
By (5.1.1) we have A n B n E# 0, hence A n E and B f l  E are edges of H’ 
( I )  If E is in T, then E ={a, b}. Hence, T is a graph and, by (5.1.2), has no 
(2) If E’ is every edge in H’, every two vertices a and b of E‘ are connected 
The conclusion easily follows, by induction on I E’l . 
with at least two vertices each. We may conclude as follows: 
cycle. 
by a path in H’\E‘ whose edges are included in E’. 
0 
A complete description of all trees on which a subtree-hypergraph is repres- 
The above theorem provides a nice characterization of triangulated graphs, 
entable is possible (see [16], [17]). 
many times rediscovered: 
Theorem 5.3 (Buneman [ 101, Gavril [33]). A graph G is a triangulated graph if 
and only if G is a subtree graph, i.e., the intersection graph of a family of subtrees 
of a tree. 
Moreover (see [lo]), a triangulated graph is the intersection graph of subtrees of 
a tree whose vertices are the maximal cliques of G, the subtrees being constituted by 
the set of those maximal cliques that contains a given vertex of G. 
The proof is a simple application of Lemma 2.3 and Theorem 5.2, noting that 
G is a triangulated graph if and only if C*(G) satisfies (5.1.1) and (5.1.2). 
An example of representation by subtrees is shown in Fig. 9. Walter [81], [82] 
studied some graphs that are intersection graphs of subtrees of a prescribed tree. 
6 
4 
5 
Fig. 9. 

a2 
P. Duchet 
Gavril[33] remarked that every triangulated graph is the intersection graph of 
a 'Sperner' family of subtrees of a tree ( = no subtree is included in another). 
Corollary 5.4. A hypergraph H is the set of all maximal cliques of a triangulated 
graph if and only if it satisfies one of the following equivalent properties: 
(5.4.1) No edge of H contains another edge of H and in every cycle of length 
3 3 of H there is an edge that contains three vertices of the cycle (Berge, cited in 
(5.4.2) No edge of H contains another edge of H and the dual hypergraph H* is 
I1 1). 
a subtree hypergraph. 
Analysing a cyclomatic number for hypergraphs, Acharya and Las Vergnas [ 11 
have shown another interesting characterization of these hypergraphs. More 
precisely, let H be a hypergraph: L,(H) is the graph L ( H )  with weighted edges 
(the weight of (E, F) being I E n F I ) ;  w ( H )  denotes the maximal 
forest of L , ( H ) ;  and p ( H ) ,  the cyclomatic number, is defined by 
weight of a 
(5.5) 
Theorem 5.6 (Acharya and Las Vergnas [I]). The cyclomatic number of a 
hypergraph H equals zero if and only if its edges, maximal with respect to 
inclusion. are the maximal cliques of a triangulated graph. 
Theorem 5.7 (Duchet [16]). Euery triangulated graph is representative of a 
family of convex polygons in the plane. 
Proof. Choose a tree T with vertex set X. T admits a planar embedding such 
that the points corresponding to vertices of T are exactly the vertices of a convex 
polygon. Denote by f:X+RZ the vertex embedding. The reader can easily 
verify that, for every two subtrees A and B of T, we have A f l  B# 0 if and only 
if Conv (f(A )) f l  Conv ( f  (B)) # 0, where Conv denotes the ordinary convex hull. 
The conclusion follows by Theorem 5.3. 0 
An interesting problem o n  representative graphs of subtrees has not yet been 
completely solved: 
Theorem 5.8 (Renz [67]). G is the intersection graph of a family of paths in a tree 
if and only if G is triangulated and is the intersection graph of a family F of paths 
of a graph such that F satisfies the Helly property. 

Classical perfect graphs 
83 
6. Graphical properties of triangulated graphs 
Various properties of triangulated graphs have been proposed. The most 
important one was discovered by Dirac [14] who first proved the existence of a 
simplicia1 vertex. This fact is at the origin of an elimination scheme in solving 
linear systems (see Rose [70] and Golumbic [36]). 
Let us give a few basic definitions: 
Definitions. Asimplicial vertex of a graph G is a vertex all of whose neighbours 
are adjacent. 
A minimal relative curser (relative to x and y )  is a subset of vertices whose 
suppression disconnects two fixed vertices of the graph ( x  and y )  and which is 
minimal for the inclusion order with this property. In Fig. 10, {a, b }  is a minimal 
relative cutset. 
A T-orientation (called ‘monotone transitive orientation’ in Rose [70]) of a 
graph G is an orientation of the edges of G such that the following two 
conditions are fulfilled: 
(1) The orientation has no circuit. 
implies 
b-c 
b +. a. 
A path a = x ,  . . . x,, = b from a to b is named a minimal path when it has no 
chords; no edge in the graph is of the form xixj with i + 1 # j. 
Three technical, but simple lemmas will be useful. In what follows, G = ( X ,  E )  
denotes a triangulated graph. 
Lemma 6.1. Every closed walk x 1  * * . x, . . . x,xI with n 3 2 has a triangular chord 
x , x , + ~  or a repetition x, = x , + ~ .  
Fig. 10. 

84 
P. Ducher 
Lemma 6.2. Let a and b be two neighbours of a vertex x in G. lf xi = 
a .. . x, . . . x,, = b is a minimal path not passing through x, then all x, are 
neighbours of x. 
Lemma 6.3. Suppose V and C are disjoint subsets of vertices in G. Suppose V is 
connected and C is a maximal clique. Then C contains a vertex not adjacent to V. 
Proofs. Lemma 6.1 and 6.2 are easy to verify and left to the reader. To prove 
Lemma 6.3, choose in V a subset W that is maximal with the properties that W 
is connected. and C contains a vertex s not adjacent to W. If W# V, consider in 
V \ W a vertex u having a neighbour w in W. C contains a vertex t not adjacent 
to t‘. Clearly, t is distinct from s and has a neighbour w’ in V. Moreover, s is 
adjacent to u. 
A minimal path uw . 
* w, . * .  w‘t, where the w,’s are in W, contradicts Lemma 
6.2. 0 
Theorem 6.4. Each of the following assertions is a necessary and sufficient 
condition for a graph G = ( X ,  E )  to be triangulated: 
(1) (Dirac [14]) Every minimal relative cutset of G is a clique. 
(2) (Frank-Kas [29]) Every induced subgraph of G is either a clique or contains 
(3) (Dirac [ 141, Lekkerkerker and Boland [%I) Every induced subgraph has a 
(4) (Rose [70]) There exists an order x,, . . . , x, of vertices of G such that every x, 
( 5 )  (Rose [70]) G admits a T-orientation of its edges. 
(6) (Duchet [ 151) Every connected subgraph with p 2 2 vertices contains at most 
two non -adjacent simplicia1 vertices. 
simplicia1 vertex. 
is a simplicia1 vertex of the induced subgraph G, 
,xm, for i = 1,. . . , n. 
p - 1 cliques. 
The formulation of (1) makes precise a result of Hajnal and Surangi [48], who 
have shown a weaker property of triangulated graphs (sufficient to prove the 
perfectness): every minimal cutset is a clique. 
Proof of Theorem 6.4. The proofs of (1) and ( I )  3 (2) are simplified versions of 
cited proofs. 
The implication (5) j (6) is new. 
Let x, y be two non-adjacent vertices of a triangulated graph G, S a minimal 
cutset relative to x and y. and a, b two non-adjacent vertices of S. 
If C, and C, denote the connected components of Gx-s containing, respec- 
tively, x and y. there exists, by minimality of S, a minimal path from a to b in 
C, U {a, b }  and a minimal path from a to b in C, U {a, b}. These paths form a 
cycle of length 2 4  with no chord. This contradiction proves (1). 

Classical perfect graphs 
85 
(1) j 
(2) is shown by induction on the number of vertices. If x and y are 
non-adjacent vertices of G, if S is a minimal cutset relative to x and y ,  and if C, 
and C, are the associated connected components, then the induced subgraph 
GcXus has two simplicial vertices that are not adjacent and one of them is a 
simplicial vertex of G. The same argument holds for Gcyus. 
(2) j 
(3) 3 (4) j (5) are trivial. 
(5) j 
(6) does not present any complication. Let G denote a T-orientation of 
G. The sets C, = { x }  U TC(x) are cliques of G. Conversely, a clique of G induces 
a transitive tournament in G and so is contained in a set of the form C,. Thus, all 
the maximal cliques in G are of the form C,. A source in G does not produce a 
maximal clique. The conclusion follows. 
(6) implies trivially that every cycle of G, with length 3 4, has a chord. 0 
Remark. The ratio k(G)/a(G), 
where k ( G )  is the number of maximal cliques 
and a ( G )  is the stability number, is not bounded for triangulated graphs, as 
shown by the graph Gn," having 2n vertices al ,..., a,,, b , , . .  . , b,, and the 
following edges: 
a,a, for all i, j, 
a,b, for i < j, 
6,b, for all i, j. 
For this graph, k(G,.,) = n and a ( G )  = 2. 
In the following corollaries, G = (X, E )  is a triangulated graph. 
Corollary 6.5 (Lekkerkerker and Boland [58]). For every subset A of X, the 
subset X \ A \ rG(A) is either empty or contains a simplicial vertex of G. 
Proof. The proof is easy by 6.4(1) and 6.4(2). 0 
Corollary 6.6 (Laskar and Shier [56]). For every vertex x of G there exists a 
simplicial vertex y at maximum distance : 
d(x, y ) = max d(x, z ) .  
1 € X  
Proof. The proof is by induction on the maximum distance, using the above 
corollary. 0 
Various properties involving distances and centers of triangulated graphs have 

86 
P. Ducher 
been investigated by Laskar and Shier [56]. They conjectured that every odd 
power of a triangulated graph is triangulated. In fact, we prove a slightly stronger 
result. In the following theorem, G k  denotes the k-th power of G, that is, the 
graph with the same vertices as G, two vertices being adjacent in G' when their 
distance in G is at most k. 
Theorem 6.7 (Duchet). Let G be a graph. If G' is triangulated, so is Gk+2. 
Lemma 6.8. If G = ( V , E )  is a triangulated graph, and if VI,. . ., V, 
are 
connected subsets of V, G (  VI, . . . , Vm) is also a triangulated graph. 
Proof of Lemma 6.8. Let c = Cl ... ckcl be a cycle with length 3 4  in 
G( V,, . -. , V,). A closed walk uI * * up of G is called a C-walk if and only if 
u I " ' u p =  WI & wz & ... & Wk & WI 
(& denotes the concatenation of sequences) where W, is a non-empty walk in the 
subgraph induced by G over C,. W, is called the i-th component of the 
C-decomposition W , ,  . . . , W,. 
Consider a C-walk W with minimal length p. Denote by u I ,  . . . , v,, the vertices 
of W and W , ,  . . . , wk 
the C-decomposition of W. By Lemma 6.1, W must 
contain two vertices u,, and uqr2 such that 
u~, 
= uqA2 or 
u, is adjacent to uq+?. 
The minimality of W implies that u, and uq+2 are in different components W, 
and W, with 
I a - P I # l ,  
Therefore W., and 
proved. 0 
Proof of Theorem 6.7. 
( w P ) # ( k , l )  and (a,P)#(l,k). 
W, are linked in G(Vl,. . ., V,) and the lemma is 
f U I . .  . . , u, are vertices of G, Gk" is clearly isomorphic 
to Gk(Vl ,..., Vm) where Vi = r G ( v i ) U { v i } .  So, we are done. 0 
Definition. A block graph is a graph whose blocks are cliques. 
Corollary 6.9 (Jamison [53]). If B is a block graph, B k  is triangulated for all 
k 3 1. 
Corollary 6.10. If G is a triangulated graph, so is G"" for euery integer k. 
The property fails for even powers (see [56]). 

Classical perfect graphs 
87 
7. Representations by intervals 
An interval hypergraph is a hypergraph isomorphic to a (finite) family of 
intervals of N. In other words, there exists a linear order on the vertices of H 
such that every edge of H is an interval for this order. 
Algorithmic characterizations have been proposed by Fulkerson and Gross 
[31], Eswaran [20], and others. 
Theoretical characterizations are due to Tucker [79], Duchet [15], [ 161, 
Fournier [27], and Nebesky 1621. The following form seems to be most pleasant: 
In a hypergraph, a vertex a is said to lie between vertices b and c when every 
path joining b to c contains an edge containing a. 
Theorem 7.1 (Duchet [15]). A hypergraph H is an interval hypergraph i f  and 
only if the following condition is fulfilled: 
For every three vertices H, one of them lies between the other two. 
(1) 
Proof. The proof is similar to that of Theorem 5.1 and is much simpler than in 
1271, 1151, [621. 
The following lemma is useful. 
Lemma 7.2. Let E, F be two intersecting edges of a hypergraph H that satis,fies ( I ) .  
Then, i f  we add E U For E f l  F as a new edge of H, the resulting hypergraph also 
satis,fies ( I ) .  If E,C F and F Z  E, a similar property holds with E \ F. 
The verification of this lemma is straightforward and left to the reader. 
Proof of Theorem 7.1 (continued). Now let H satisfy (I). Among all hyper- 
graphs that satisfy (I) and that contain H as a partial hypergraph, we choose one, 
say H’, with a maximal number of edges. Let T be the hypergraph whose edges 
are the minimal edges of H’ with at least two vertices. 
We are going to show that T is a path and that H is a family of subintervals of 
this path. 
Let E be an edge of H’, I E 12 2, and let a, b be two vertices of E. 
If E # {a, b } ,  the maximality of H‘ implies the existence of three vertices x, y, z 
and three paths xEl * . . E,y, yFI . * Fpz, zG1 
* .  . G,x satisfying 
Z P  Ifi E,, X E  
F,, z E  u G,. 
{a, b }  is one of these edges. Moreover, we may suppose the following: 
, = I  
, = I  
k = i  

88 
P. Duchet 
(*) Property (I) holds when any occurrence of { a ,  b }  in the sequence 
E, . . . F, . . Gk is replaced by every edge of H' that contains both a and b. 
Thus, changing { a ,  b )  to E, we have, for instance, that z lies between x and y .  
Hence a, h. z are different, { a ,  b }  is some F, and z E E. By Lemma 7.2, there are 
edges A and B of H' such that 
a E A, z P A, and A contains, for instance, x. 
b E B, Z P  
B, 
and B contains 
Y- 
Moreover, b e  A, otherwise A may replace E, = { a ,  6) in the path joining x 
and y, in contradiction to our assumption (*). Similarly a @  B. 
Thus E \ B and E \ A  are edges of H' connecting a and b. 
We may therefore conclude with the following statements: 
(1) If E is an edge of T, E = { a ,  b}. Hence, T is a graph. 
(2) Every pair of vertices of an edge E in H' are linked by a path in H' whose 
X being an edge of H'. T is connected and, by (I) applied to T, is a path. By 
cdges are included in E. 
induction on I E I ,  every edge of H' is a connected subset of T. 0 
Theorem 7.3 (Tucker [79]). His an interval hypergraph if and only if it does not 
contain as induced subhypergraph one of the list in Fig. 11. 
Tucker's proof is long. Using the characterization of interval graphs by 
Lekkerkerker and Boland [%I, whose proof is also long, Trotter and Moore [77] 
gave a short proof. We give here a direct short proof as a consequence of the 
above characterization. 
c, n r 3  
01 
N, n >  1 
M, n> 1 
Fig. 11. 

Chsical perfect graphs 
89 
Proof of Theorem 7.3. The hypergraphs of Fig. 10 are clearly not interval 
hypergraphs. 
Conversely, suppose H = (X, ‘8‘) is not an interval hypergraph, every proper 
subhypergraph of H being an interval hypergraph. Let x be a vertex of H. 
Since H does not satisfy (I), there exist two vertices y and z in X \ x and three 
paths xEl . . . E,y, xF, . . . F,z, yG1. . . G,z with the properties 
XP u G,, ye 6 
F,, Z E  6 
E,. 
k = l  
/=I 
,=I 
We choose p and q as short as possible over y, z and all such systems of paths 
If El n Fl = (?, H contains some cycle C,,. 
If El C F, (the case F, C El follows by symmetry), we easily find 01, 
O2 or N, 
as induced subhypergraph. 
If El f l  F1 # 13, FI f El and El( F1 # (?, the minimalities of H, p and q imply 
y E E, \ FI and z E FI \ El. The subhypergraph induced by H over the set 
uL=, 
Gk U (El f l  F,) contains C, or M,, as partial subhypergraph. 0 
(x remaining fixed). 
An interesting property of families of intervals was discovered by Fulkerson 
and Gross [31], namely, that an interval hypergraph is completely determined by 
its ‘intersection pattern’. 
Theorem 7.4 (Fulkerson and Gross [31]). Let (E,),E, be a ,finite family of 
intervals of N, and let (E),El 
be a family of sets. Suppose 
JE, n El 1 = ( E  fl F, 1 
forall i, j E I. 
Then the families E, and E are isomorphic. 
(7.5) 
This theorem was considerably strengthened to more general hypergraphs 
by Fournier [26]. Nevertheless, the problem of characterizing the matrices 
1 E, f l  El I of families of intervals is still open. 
Interval hypergraphs are unimodular (Berge [6]). 
A nice min-max relation for intervals was recently settled by Gyori [46]. 
Other kinds of representation via intervals have been proposed, such as 
‘D-interval hypergraphs’ by Moore [61], ‘dotted-intervals’ by Duchet [ 151, and 
‘interval representability’ by Trotter and Moore [77]. See also Gyarfis and Lehel 
[451. 
8. Interval and indifference graphs 
Hajos [49] was the first to note the deep interest of ‘intersection graphs of 
families of intervals of the real line’. Hajos’ graphs became interval graphs and 

!MI 
P. Ducher 
play a part in various applied fields like psychology (distinguishability in 
hierarchies), zoology (place of species in animal evolution), genetics (gene as 
segment of a chromosome), archeology (seriations), geology (classifications), 
criminology (see [9]), etc., in fact, wherever a chronological ordering is deduced 
from data which only indicates contemporaries. See [3], [42], [43], [44]. [60], [4], 
[54], [69], [7S]. 
Interval graphs have many interesting properties. They are unirnodular graphs 
(see [S]), triangulated graphs (Hajos [49]), and their complements are compara- 
bility graphs [49]. 
A first characterization may be formulated in terms of betweenness, as 
follows. 
In a graph G, a vertex x is said to lie between the vertices y and z when every 
path joining y to z must contain x or a neighbour of x. 
Theorem 8.1 (Lekkerkerker and Boland [%I). 
A graph G is an interval graph if 
and only if it satisfies the following two conditions: 
(i) G is n triangulated graph. 
(ii) Among every three vertices of G, at least one is situated between the others. 
Moreover, condition (ii) may be replaced by the following weaker form: 
(ii') Among every three simplicia1 vertices of G at least one is situated between 
the others. 
Theorem 8.2 (Lekkerkerker and Boland [%I). A necessary and sufficient con- 
dition for a graph G to be an interval graph is: 
(iii) G does not have as induced subgraph one of the graphs listed in Fig. 12. 
Proofs of Theorems 8.1 and 8.2. The class of interval hypergraphs is clearly an 
R-class (see Section 2) and Lemma 2.3 can be applied. Conditions (i) and (ii) are 
clearly necessary for a graph to be an interval graph. Conditions (i) and (ii') 
together obviously imply (iii). For proving the sufficiency of (iii), suppose G is a 
triangulated graph but not an interval graph. Then, by Theorem 7.3, the 
hypergraph C*( G) possesses as induced subhypergraph one of the hypergraphs 
O,, O?, M,, N,, C,, (see Fig. 11). 
Fig. 12. 

Classical perfect graphs 
Thus, applying Lemma 6.3, we have the following: 
If C*(G) contains 01, 
G contains A2 or D2. 
If C*G contains 02, 
G contains A1 or Dz or D3. 
If C*G contains M,, G contains some D,. 
If C*G contains N., G contains some E,. 
If C*G contains C,,, G contains E, or Ez. 0 
91 
Corollary 8.3 (Gilmore and Hoffman [35]). G is an interval graph if and only if 
G is a triangulated graph and the complementary graph 
is a comparability 
graph. 
Proof. None of the graphs Al, A2, 0, and Ep is a comparability graph. This 
proves the ‘if’ part. It is not difficult to verify that the conditions are necessary. If 
G = I!,(%‘), where 8 is a family of intervals in N, put I < J for two members I 
and J of 8 when 
I n J Z 0 ,  
(VX E I)(Vy E J )  x < y. 
The comparability graph associated with the partial order < is G. 0 
Such orders are termed interval orders and have been characterized by 
Fishburn [22] as partial orders < that satisfy 
(8.4) ‘‘x < y and z < t” implies ‘‘x d t or z < y ” for every element x, y, z, t. 
Corollary 8.5 (Duchet [15]). G is an interval graph if and only if it has no 
induced C, and if for every closed walk x I  
* x,xl with n 3 5 there exist partitions 
A = {xPcl . . . xq}, B = {x,+, * 
* x,} (the indices are modulo n )  that satisfy both 
following conditions : 
(1) Every vertex of A has a neighbour in €3. 
(2) Every uertex of B has a neighbour in A. 
Corollary 8.6 (Kotzig [55]). The connected bipartite interval graphs are exactly 
the caterpillars ( = trees that become paths by removing the pendant vertices). 
The proofs are left as exercises. 
We cannot conclude this section without mentioning an important family of 
interval graphs, the indifference graphs. 
Definition. Let 9 be any family of intervals of the real line and X be a finite 

92 
P. Duchet 
subset o f  points of the line. Link x and y by an edge if some member of 5!? 
contains both x and y ("indistingiiishability"). This forms a graph on %. 
The indifference graphs are all the graphs that can be obtained in this way. 
An equivalent definition (using the tcrminology of Berge [7]) is the 2-section 
In the context of Decision Science, Luce [60] introduced the notion of a 
of an interval hypergraph. 
semi-order. 
Definition. A partial order < on a set X is called a semi-order if there exist a 
real number d > 0 and a real-valued function n : X -  R with the following 
property: 
x < y e 
L f ( X ) B  u(y)+d. 
A necessary and sufficient condition for < to be a semi-order is (Scott and 
Suppes 1731) that < satisfies both condition (8.4) and the following condition: 
(8.7) "x i 
y and y < z" + "x < t or t < 2'' for every element x, y, z, 1. 
This was rediscovered by Roberts in the following form: 
Theorem 8.8 (Roberts [6X]). Each of fhe following conditions is necessary and 
sufficient for a graph G to be an indifference graph: 
( 1 )  G is an interval graph and does not contain K,.3 (Fig. 13) as induced 
subgraph. 
(2) G is the representative graph of a family of inlervals pairwise uncomparahle 
by inclusion. 
(3) G is rhe representative graph of a family of intervals of equal length. 
(4) G does not have K,,? or Dr or El as induced subgraph (see Fig. 13) (Wegner 
(5) G is the comparability graph associated with a serni-order. 
~ 3 1 ) .  
Two others characterizations are interesting: 
K1,3 
E2 
Fig. 13. 

Classical perfect graphs 
93 
Corollary 8.9 (Duchet [ 151). G = ( x ,  E )  is an indifference graph if and only if the 
family of neighbours in G, that is, the family 
( V ( x )  = 1, ( x )  u 
{X)),,X, 
constitutes an interval hypergraph. 
Corollary 8.10 (Duchet [15]). G = (X, E )  is an indifference graph if and only i f  
G admits an orientation G that satis,’ies both the following conditions: 
(1) G has no circuit, 
(2) G ( x )  and &(x) 
are complete graphs. 
An orientation satisfying 8.10(1) and 8.10(2) is a T-orientation (see Section 6) 
whose reverse orientation is also a T-orientation. 
Proofs of Corollaries 8.9 and 8-10. The ‘only if’ part of Corollary 8.9 results 
from our definition of indifference graphs. Conversely, if V ( X ) , = ~  
is a family of 
intervals of X ordered by a total order c ,  
put 
V+(x) = { y  E V ( x ) ;  x S y }  and 
x and y are adjacent in G if and only if 
V-(x) = { y  E V(x); y c x}. 
v + ( x )  n V + ( Y )  
# 0 
v-(x) 
n v-(y) z 0. 
or, equivalently, if 
This shows that G is an interval graph. Obviously, K,,? is not a subgraph of G. 
This proves Corollary 8.9, and the ‘only if’ part of Corollary 8.10. The remainder 
of the proof is left as an exercise. 0 
Fine and Harrop [21] have given a necessary and sufficient condition for an 
indifference graph to represent the ‘indistinguishability’ by intervals of the same 
length. 
References 
[l] D. Acharya and M. Las Vergnas, Hypergraphs with cyclomatic number zero, triangulated 
graphs, and an inequality, J. Comb. Theory, Ser. B (to appear). 
[ 2 ]  J.-C. Arditti, Partially ordered sets and their comparability graphs, their dimension and their 
adjacency, Proc. Coil. Int. CNRS no 260 (Orsay 1976), Problkmes Combinatoires et ThCorie des 
Grdphes, Paris (lY78). 
(31 S. Benzer, On the topology of the genetic fine structure, Proc. Nat. Acad. Sci. U.S.A. 45 (1959) 
1607- 1620. 
[4] S. Benzer, The fine structure of the gene, Sci. Amer. 206 (1962) 7&84. 

94 
P. Duchet 
[5] C. Berge. Les problemes de coloration en thtorie des graphes, Publ. Inst. Statist. Univ. Paris 9 
[6] C. Berge, Some classes of perfect graphs, Graph Theory and Theoretical Physics (Academic 
[7] C. Berge, Graphs and Hypergraphs (North-Holland, Amsterdam, 1973). 
[8] C. Berge. Perfect graphs, in: D.R. Fulkerson, ed., Studies in Graph Theory, Part I, MAA 
[91 C. Berge, Les graphes d'intervalles, in: P. Hansen and D. de Werra, eds. Proc. Cerisy 
(1960) 123-160. 
Prcss, London. 1967) 155-165, MR 38 # 1017. 
Studies in Mathematics 11 (1973) 1-22. 
Colloquium, 1980 (Presses Polytechn. Romandes, Lausanne, 1980). 
[lo] P. Buneman, A characterization of rigid circuit graphs, Discrete Math. 9 (1974) 205-212. 
( 11 1 V. Chvatal, Edmonds polytopes and a hierarchy of combinatorial problems, Discrete Math. 4 
( 121 V. Chvatal and P. Hammer, Aggregation of inequalities in integer programming, Ann. Discrete 
[13] R.P. Dilworth. A decomposition theorem for partially ordered sets, Ann. Math., Ser. 2 51 
[ 141 G.A. Dirac, On rigid circuit graphs, Abh. Math. Sem. Univ. Hamburg 25 (1961) 71-76. 
[IS] P. Duchet, Representations, noyaux en thtorie des graphes et hypergraphes, Doct. Diss. Univ. 
Paris 6 (1979). 
[ 161 P. Duchet, ProprietC de Helly et problemes de representation, Problemes combinatoires et 
theorie des graphes, Proc. lnt. Vol. CNRS 260 (Orsay 1976), Paris (1978) 117-1 18. 
[I71 P. Duchet, Combinatorial properties of subtrees of a tree (in preparation). 
[I81 B. Dushnik and E.W. Miller, Partially ordered sets, Amer. J. Math. 63 (1941) 600-610. 
I191 J. Edmonds, Path trees and flowers, Canad. J. Math. 17 (1965) 44-67, 
[20] K.P. Eswaran, Faithful representation of a family of sets by a set of intervals, SIAM J. Comput. 
[21] N. Fine and R. Harrop, Uniformization of linear arrays, J. Symbolic Logic22 (1957) 130-139. 
[22] P.C. Fishburn, Betweenness, orders and interval graphs, J. Pure Appl. Alg. 1 (1971) 159-178. 
[23] C. Flarnent, Hypergraphes arbor&, Discrete Math. 21 (1978) 223-226. 
(241 S. Foldes and P.L. Hammer, Split graphs, Proc. 8th South-Eastern Conference on Com- 
[24a]S. Foldes and P.L. Hammer, Split graphs having Dilworth number two, Canad. J. Math. 39 
[2S] L.R. Ford and D.R. Fulkerson, Flows in Networks (Princeton Univ. Press, Princeton, N.J., 
(261 J.C. Fournier. lsomorphisme d'hypergraphes par intersections equicardinales d'arites et 
[27j J.C. Fournier, Hypergraphes de chaines d'aretes d'un arbre, Discrete Math. 43 (1983) 29-36. 
[28] A. Frank, On chain and antichain families of a partially ordered set, J. Comb. Theory, Ser. B 29 
1291 A. Frank, Some polynomial algorithms for certain graphs and hypergraphs, Proc. 5th British 
(301 D.R. Fulkerson, Note on Dilworth's decomposition theorem for partially ordered sets, Proc. 
[31] D.R. Fulkerson and O.A. Gross, Incidence matrices and interval graphs, Pacific J. Math. 15 
(321 T. Gallai. Transitive orienterbare Graphen, Acta Math. Sci. Hung. 18 (1967) 25-66. 
[33] F. Gavril, The intersection graphs of subtrees in trees are exactly the chordal-graphs, J. Comb. 
1341 A. Ghouila-Houri, Caracterisation des graphes non orientes dont on peut orienter les arites de 
1351 P.C. Gilmore and A.J. Hoffman, A characterization of comparability graphs and of interval 
(1973) 305-337. 
Math. 1 (1973) 145-162. 
(1950) 161-166. 
4 (1975) 56-68, MR51 #14677. 
binatorics, Graph Theory and Computing (1977) 31 1-315. 
(1977) 6-72. 
1962). 
configurations exclues, J. Comb. Theory, Ser. B 29 (1980) 321-327. 
(1980) 17&184. 
Comb. Conf.. Aberdeen (1975) 211-226. 
Amer. Math. SOC. 7 (1956) 701-702. 
(1965) 835-855. 
Theory. Ser. B 16 (1979) 47-56. 
maniere a obtenir le graphe d'une relation d'ordre, C.R. Acad. Sci. Paris 254 (1962) 1370-1371. 
graphs, Canad. J. Math. 16 (1979) 47-56. 

Classical perfect graphs 
95 
[36] M.C. Golumbic, Threshold graphs and synchronizing parallel processes, in: A. Hajnal and V.T. 
[37] M.C. Golumbic, Algorithmic Graph Theory and Perfect Graphs (Academic Press, New York. 
[38] C. Greene, Some partitions associated with a partially ordered set, J. Comb. Theory, Ser. A 20 
[39] C. Greene, Sperner-families and partitions of a partially ordered set, in: M. Hall and J.H. van 
Lint, eds., Adv. Study Inst. Series C, Math and Phys. Sci., Vol. 16, Brenkelen (1974). 
[40] C. Greene and D.J. Kleitman, The structure of Sperner k-families, J. Comb. Theory, Ser. A 20 
[41] J.R. Griggs, On chains and Sperner k-families in ranked posers, J. Comb. Theory (to appear). 
[42] J. Guex, Une nouvelle mtthode d’analyse biochronologique, Note prtliminaire, Bul. SOC. 
Vaud. Sci. Nat. no 351, Vol. 73, Lausanne (1977) 309-321. 
[43] J. Guex, Terminologie et mtthodes de la biostratigraphie moderne: commentaires critiques et 
propositions, Bul. SOC. Vaud. Sci. Nat., no 355, Vol. 74, Lausanne (1979) 169-216. 
[44] J. Guex, Datations paltontologiques et graphes d’intervalle, in: P. Hansen and D. de Werra, 
eds., Regards sur la thtorie des graphes, Col. de Cerisy 1980 (Presses Polytechn. Romandes, 
Lausanne, 1980) 243-248. 
[45] A. Gyarfas and J. Lehel, A Helly type problem in trees, Combinatorial Theory and its 
Applications, Coll. Math. SOC. J. Bolyai 4 (1970) 571-584. 
[46] E. Gyori, A minimax theorem for intervals, J. Comb. Theory, Ser. B (submitted). 
[47] R. Gysin, Dimension transitiv orienteerbaren graphen, Acta Math. Sci. Hungar. 29 (1977) 
[48] A. Hajnal and J. Suranfi, Uber die Auflosung von Graphen in vollstandige Teilgraphen, Ann. 
[49] G. Hajos, Uber eine Art von Graphen, Int. Math. Nachr. 11 (1957) problem 65. 
[SO] P.L. Hammer and B. Simeone, The splittance of a graph, Combinatorica 1 (1981) 375-384. 
[51] P.B. Henderson and Y. Zalcstein, A graph theoretic characterization of the PV chunk class of 
[52] A.J. Hoffman and D.E. Schwartz, On partitions of a partially ordered set, J. Comb. Theory, Ser. 
[53] R. Jamison, Powers of block graphs are chordal (submitted). 
[54] D.G. Kendall, Incidence matrices, interval graphs and seriation in archeology, Pacific J. Math. 
[55] A. Kotzig, Paare Hajos the Graphen, Casop. Pest. Mat. 88 (1963) 23G241. 
[56] R. Laskar and D. Shier, On powers and centers of chordal graphs, Rep. Clemson Univ. 
[57] B. Leclerc, Arbres et dimension des ordres, Discrete Math. 14 (1976) 69-76. 
[58] C. Lekkerkerker and J. Boland, Representation of a finite graph by a set of intervals on the real 
[59] L. Lovisz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
[60] R.D. Luce, Semiorders and a theory of utilitydiscrimination, Econometrica 24 (1956) 178-191. 
[61] J.I. Moore, Graphs and partially ordered sets, Ph.D. Thesis, Univ. of South California, 
[62] L. Nebesky, On a certain numbering of the vertices of a hypergraph 11, Czechoslovak Math. J. 
[63] U.N. Peled, Matroidal graphs, Discrete Math. 20 (1977) 263-286. 
[64] M.A. Perles, On Dilworth’s theorem in the infinite case, Israel J. Math. 1 (1963) 108-109. 
[65] A. Pnueli, A. Lempel and S. Even, Transitive orientation of graphs and identification of 
[66] 0. Pretzel, On the dimension of partially ordered sets, J. Comb. Theory, Ser. A 22 (1977) 
Sos, eds., Combinatorics, Coll. Math. Soc. J. Bolyai 18 (1978) 419-428. 
1980). 
(1976) 69-79. 
(1976) 41-68. 
313-316. 
Univ. Sci. Budapest Eotvos. Sect. Math. 1 (1958) 113-121. 
synchronizing primatives, SIAM J. Comp. 6 (1977) 88-108. 
B 23 (1977) 3-13. 
28 (1969) 565-570. 
(submitted). 
line, Fund. Math. 51 (1962) 45-64. 
255267 (this volume, pp. 29-42). 
Columbia (1975). 
(1981). 
permutation graphs, Canad. Math. J. 23 (1971) 160-175. 
146-152. 

96 
P. Duchef 
[67] P.L. Renz, Intersection representationsof graph by arcs, Pacific J. Math. 34 (1970) 501-510. 
[a] 
F.S. Roberts, Indifference graphs, in: F. Harary, ed., Proof Techniques in Graph Theory 
[h9] F.S. Roberts, Measurement Theory, with Applications to Decision-Making, Utility and the 
[70] D.J. Rose, Triangulated graphs and the elimination process, J. Math. Anal. Appl. 32 (1970) 
[71] D. Rotem and J. Urrutia, Circular permutation graphs, Research Rep. Univ. of Waterloo 
[72] D. Rotem and J. Urrutia, Comparability graphs and intersection graphs, Discrete Math. 43 
1731 D.S. Scott and P. Suppes, Foundation aspects of theories of measurement, J. Symbolic Logic 23 
[74] L.N. Shevrin and N.D. Filippov, Partially ordered sets and their comparability graphs, Siberian 
1751 F.W. Stahl, Circular genetic maps, J. Cell. Physiol., Suppl. 70 (1967) 1-12. 
[76) W.T. Trotter. A note on Dilworth’s embedding theorem, Proc. Amer. Math. Soc. 52 (1975) 
[77] W.T. Trotter and J.I. Moore, Characterization problems for graph partially ordered sets, 
[78] W.T. Trotter, J.l. Moore and D.P. Sumner, The dimension of a comparability graph, Proc. 
[79] A. Tucker. A structure theorem for the consecutive 1’s property, J. Comb. Theory 12 (1972) 
[so] H. Tverberg, On Dilworth’s decomposition theorem for partially ordered sets, J. Comb. Theory 
[Sl] J.R. Walter. Representations of rigid cycle graphs, Ph.D. Thesis, Wayne State Univ. (1972). 
(821 J.R. Walter, Representation of chordal graphs as subtrees of a tree, J. Graph Theory 2 (1978) 
[83] G. Wegner, Eigenschaten der Nerven Homologische-einfacher Familien in R“. Ph.D. Thesis, 
[&I] 
E.S. Wolk, The comparability graph of a tree, Proc. Amer. Math. SOC. 3 (1062) 789-795. 
[85] E.S. Wolk, A note on the comparability graph of a tree, Proc. Amer. Math. SOC. 16 (1965) 
(Academic Press, New York. 1969) 139-146. 
Social Sciences (Addison-Wesley, Reading, Massachusetts, 1979). 
597-609. 
(submitted). 
(1983) 37-46. 
(19%) 113-128. 
Math. J. 11 (1970) 497-509. 
3s39. 
lattices and families of sets, Discrete Math. 16 (1976) 361-381. 
Amer. Math. SOC. 60 (1976) 35-38. 
15S162. 
3 (1967) 305-306. 
265-267. 
Gottingen (1967). 
17-20. 

Annals of Discrete Mathematics 21 (1984) 97-101 
Elsevier Science Publishers B.V. 
THE PERFECT GRAPH CONJECTURE 
FOR TOROIDAL GRAPHS* 
Charles GRINSTEAD 
Department of Maihematics, Swarthmore College, Swarthmore, PA 19081, USA 
1. Introduction 
In what follows, we assume that our graphs are finite without loops or multiple 
edges. We define w ( G )  to be the size of the largest complete subgraph of G, and 
r(G) to be the vertex coloring number of G. We say that G has property P if 
neither G nor G (the complement of G) contains an odd chordless cycle of 
length at least five as an induced subgraph. 
Claude Berge defined a graph G to be perfect if w ( H )  = y ( H )  for all induced 
subgraphs H of G. He then made the following conjecture, which has never 
been proved. 
The Perfect Graph Conjecture. A graph G is perfect if and only if G has 
property P. 
Define a graph G to be critical if G is not perfect but all proper induced 
subgraphs of G are perfect. In 1972, Lovasz [3] proved that G is perfect if and 
only if G is perfect (the Weak Perfect Graph Conjecture of Berge). He did this 
by showing that G is perfect if and only if ( H I  C w ( H ) w ( H )  for all induced 
subgraphs H of G. From this it follows that if G is critical, then 1 G 1 = 
w ( G ) w ( G ) +  1. 
In 1974, Padberg proved the following theorem (see [4]). 
Theorem 1 (Padberg). A critical graph G with n vertices has exactly n cliques of 
size w ( G )  with each vertex in w ( G )  maximal cliques and has exactly n 
independent sets of size w ( G )  with each vertex in w ( G )  maximal independent sets 
of G. Each maximal clique of G intersects all but one maximal independent set of 
G, and vice versa. 
Alan Tucker has proved the following two results (see [5], [6]). 
* Reprinted from J. Comb. Theory, Ser. B 30 (1981) 7C74, @ 1981, Academic Press. 
97 

98 
C. Grinstead 
Theorem 2 (Tucker). If G is planar and G has property P, then G is perfect. 
Theorem 3 (Tucker). If o(G) = 3 and G has property P, then G is perfect. 
We remark that if w ( G )  = 2 and G has property P, then G is bipartite, hence 
In this paper we shall prove that if G is toroidal (i.e., embeddable in the torus) 
perfect. 
and G has property P, then G is perfect. 
2. Proof of the result 
In characterizing critical toroidal graphs G, we can assume that o(G) 
3 4, by 
Theorem 3. The following two lemmas show that in fact we can assume that 
w ( G )  = 4. 
Lemma 1. In a critical graph G, if there exists a vertex of degree at most six, then 
w(G)<4. 
Sketch of proof. The set of neighbors of a vertex in a critical graph generates a 
subgraph which contains w ( G )  cliques of size w ( G ) -  1, but no cliques of size 
w ( G )  (see Theorem 1). No graph with fewer than seven vertices contains five 
cliques of size four, and no cliques of size five. Hence, w ( G ) s 4 .  0 
Lemma 2. In a critical toroidal graph G, either w (  G) < 4, or G is regular of degree 
six and triangulates the torus. 
Proof. Let bi be the number of vertices of degree i in G, and let ri be the number 
of regions with i edges. By a standard counting argument using Euler’s formula, 
we get 
I 
x 
4b2 +3b,+2b4+ bs = 
( i  -6)b, t 
(2j -6)r,. 
, =7 
i =4 
If there exists a vertex of degree less than six, then by a similar argument to 
that used in Lemma 1, we must have w(G)<4. 
If every vertex has degree at least six, then the left side of (*) is zero, so b, = 0 
for i 3 7, and r, = 0 for j 3 4. This means that G is regular of degree six and 
triangulates the torus. 0 
We now state a theorem due to Altshuler which characterizes triangulations of 
the torus which are regular of degree six (see [l]). 

The Perfect Graph Conjecture for toroidal graphs 
99 
II 
I1 
II 
I I  
11 
I I  
a 
a 
a 
al,l-t 
a1,2-t a1,3-t 
1,s.t-1 
1,s-t 
l,s+l-t 
Fig. 1. 
Theorem 4 (Altshuler). Let G be a triangulation of the torus which is regular of 
degree six. Then G can be represented as in Fig. 1, where a,,,+l is identified with al.l 
for i = 1,2,. . . , r, and where a,+],, is identical with aid-,, where the second subscript 
is taken (mods), and t is .fixed. This triangulation is denoted by T(r, s, t). 
Furthermore, s 2 3, r 2 1, and if r S 2, then t f  0, s - 1 (mod s). Finally, 
We can now prove the following theorem. 
I G 1 = rs. 
Theorem 5. If G is toroidal and has property P, then G is perfect. 
Proof. Assume that G is a toroidal critical graph. From Theorem 3, we may 
assume that w ( G )  3 4, so from Lemma 2, we may assume that G is regular of 
degree six and triangulates the torus. From Lemma 1 we get that o(G) 
= 4; so 
from Theorem 1 we get that every vertex is in four cliques of size four. 
Now assume that r > 3. Then the neighbors of u2,2 generate the graph H 
shown in Fig. 2, where not all adjacencies are shown at this point. Since r > 3, 
Fig. 2. 

100 
C. Grinstead 
neither aa, nor a3,z is adjacent to either u12 or a1.3. Also, a2,1 is not adjacent to 
a3.2, and al.2 is not adjacent to a23. 
Since a2.2 must be in four cliques of size four and no cliques of size five, H 
must contain four triangles and no cliques of size four. It is easy to check that this 
implies that every vertex in H must be in at least one triangle. This implies that 
a2 I is adjacent to a1.3, for otherwise a2.1 would be in no triangle in H. This implies 
that s = 2, which contradicts Theorem 4. 
If r = 3, then rs = I G I = 4 w ( G )  + 1; so s must be odd, and since we may 
assume that w ( G )  2 4, from Theorem 3, then we may also assume that s 3 7. 
But then the vertices al.,, for 1 S i S s, form an odd chordless cycle, which 
contradicts the fact that G is critical. 
Since I G I is odd, r #  2, so we may assume that r = 1. We may now drop the 
first subscript on all of the vertices. We have vertices al, az, . . . , us, where a, is 
adjacent to a, if i - j E D = { k 1, * t, 2 (t + l)}, where all arithmetic is modulo 
s. From Theorem 4, we know that f f 0, - 1 (mod s), and since G is regular of 
degree six, tf 1 (mod s). We may also assume without loss that 1 < t < s2 - 1. 
If f > 2, then a, is not adjacent to a, or as-l. Since al must be in a clique of size 
four with a,, either al is adjacent to us-,-l or us-, is adjacent to a,+l. Figure 3 
shows the neighbors of a,. 
So, either s - t - 2 or s - 2t - 1 is in D. If s - f - 2 is in D, 
then it equals either 
t or t + 1. However, since s is odd, we must have s - t - 2 = t + 1, or s = 2t + 3. 
In this case, we can multiply all subscripts by 2, since (2, s )  = 1, and get that a, 
and a, are adjacent if and only if i - j E D‘ = { & 1, k 2, ? 3). We will deal with 
this case at the end of this proof. 
If s - 2t - 1 is in D, then either s - 2t - 1 equals 1, t, or t + 1. It cannot equal 1, 
for s is odd. If it equals t, then s = 3t + 1. In this case, we can multiply all 
subscripts by 3, since (3, s )  = 1, and get that a, and a, are adjacent if and only if 
i - 1  E D’. This is the same conclusion as before. If s - 2t - 1 = t + 1, then 
s = 3 t  + 2 ,  so we can multiply all subscripts by 3, and arrive at the same 
conclusion as before. 
If t = 2, we get the same conclusion again. So, we are left with the case that G 
has s vertices and that a, and a, are adjacent if and only if i - j  ED’. We may 
Fig. 3. 

The Perfect Graph Conjecture for toroidal graphs 
101 
assume that s 
4, o(c) 
2 4. In this case, it is easy to find an 
odd chordless cycle. If s = 4m + 1, then the cycle is given by the vertices a,, a3, 
a+ a,, as, , . . , 
a4m-, a4m-2, a,. This contradicts the fact that G is critical 
and completes the proof. 0 
17, since o(G) 
References 
[l] A. Altshuler, Construction and enumeration of regular maps on the torus, Discrete Math. 4 
(21 C. Grinstead, The strong perfect graph conjecture for a class of graphs, Ph.D. Thesis, UCLA, 
[3] L. LovSsz, A characterization of perfect graphs, J. Comb. Theory, Ser. B 13 (1972) 95-98. 
[4] M. Padberg, Perfect zero-one matrices, Math. Program. 6 (1974) 180-196. 
[5] A. Tucker, The strong perfect graph conjecture for planar graphs, Canad. J. Math. 25 (1973) 
[6] A. Tucker, Critical perfect graphs and perfect 3-chromatic graphs, J. Comb. Theory, Ser. B 23 
(1973) 201-217. 
Los Angeles (1978). 
103-114. 
(1977) 143-149. 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 103-113 
@ Elsevier Science Publishers B.V 
THE PERFECT GRAPH CONJECTURE 
ON SPECIAL GRAPHS - A SURVEY* 
Wen-Lian HSU 
Department of Industrial Engineering and Management Sciences, Northwestern University, 
Evanston, Illinois, USA 
We discuss several basic techniques for proving the strong perfect graph conjecture on 
special classes of graphs. Our discussion is primarily based on the neighborhood structure of 
these graphs. By combining these techniques we are able to prove the conjecture for more 
general graphs. The main classes of graphs we consider are claw-free graphs, 3-chromatic 
graphs, and (K,-e)-free graphs. 
1. Introduction 
In this paper all graphs considered are simple, i.e., finite, undirected, without 
loops or multiple edges. Let graph G = (V, E )  have respective vertex and edge 
sets V and E. Let a (G) denote the maximum size of a stable set of G and w ( G )  
denote the maximum size of a clique of G. Let 8(G) denote the minimum 
number of cliques which cover G, and y ( G )  denote the minimum number of 
stable sets which cover G ( y ( G )  is also called the chromatic number of G ) .  Since 
two vertices of a clique cannot be in the same stable set, we have w ( G )  s y(G). 
Similarly we have (Y (G) < 8 (G). 
A graph G is perfect if w ( H )  = 8 ( H )  for every induced subgraph H of G. An 
odd hole is a cordless odd cycle, and an odd anti-hole is a complementary graph 
of an odd hole. Berge’s (see [l]) strong perfect graph conjecture (SPGC) asserts 
that a graph G is perfect if and only if G contains no odd holes or odd anti-holes. 
Its resolution has eluded researchers for two decades. One line of attack on this 
conjecture has been to look at general properties of critically imperfect graphs 
(p-critical graphs) - 
graphs that are not perfect but all of whose vertex-induced 
subgraphs are perfect. The major results here are as follows: 
Theorem 1 [9]. A graph G with n vertices is perfect if and only if a(H)w(H) s 
1 H 1 for all subgraphs H of G, where 1 H I is the number of vertices in the graph H. 
Thus a critically imperfect graph has n = CY ( G ) w  ( G )  + 1 vertices. 
* This research was supported by National Science Foundation Grant ECS-8105989 to Northwest- 
ern University. 
in3 

104 
W.-L. HSU 
Theorem 2 [lo]. (Let a = a (G), w = w ( G ) . )  A p-critical graph G with n vertices 
has exactly n cliques of size w with each vertex in o maximum cliques and has 
exactly n stable sets of size a with each vertex in a maximum stable sets. Each 
maximum clique intersects all but one maximum stable sets, and vice versa. 
Theorem 3 [2]. For each vertex u of a p-critical graph G, there is a unique partition 
of G - v into a-stable sets. In particular, the induced subgraph on any two 
a-stable sets in G - v must be connected. 
An example discovered independently by Huang [8] and by Chvital et al. [3] 
shows that the above three theorems alone are not sufficient to prove the SPGC 
(note that the addition of Proposition 1 to the properties of p-critical graphs will 
eliminate the counterexample). Therefore further characterization of p-critical 
graphs are desired. 
Another approach has been to look for special graphs which warrant a proof 
of the conjecture. In this paper we will combine several proof-techniques for 
special graphs and apply them to more general graphs with ‘good’ neighborhood 
structure. We will also discuss some relationships among various special graphs. 
2. Some interesting neighborhood structures 
Consider a graph G and a vertex u in G. Let N ( u )  be the set of vertices that 
are adjacent to u. For convenience, we also regard N ( u )  as the induced subgraph 
on the neighbors of u and N(u), its complement. Consider the following four 
neighborhood structures: - 
(i) N ( u )  is bipartite, in which case u is called a b-vertex. 
(ii) N(u) is bipartite, in which case u is called a i-vertex. 
(iii) N ( u )  is complete multipartite, in which case u is called a m-vertex. 
(iv) N ( u )  is complete multipartite, in which case u is called a m-vertex. 
It is clear that these structures are inherent upon induced subgraphs. Corollary 
1 implies that if every vertex of G is one of these four types, then the SPCC is 
true for G. We will prove several propositions and lemmas which together give 
Corollary 1. 
__ 
The following lemma is needed in our later proofs. 
Lemma 1. A n  odd cycle without triangle must contain an odd hole. 
Proposition 1. If a p-critical graph G contains a b-vertex u, then G is an odd hole 
or an odd anti-hole. 

The Perfect Graph Conjecture on special graphs 
105 
Proof. Since N ( u )  is bipartite, a maximum clique containing u has size 9 3 .  
Hence w ( G ) S 3  and the result follows from Tucker [15]. 0 
Proposition 2. If a p-critical graph G contains a m -vertex u, then G is an odd hole 
or an odd anti-hole. 
Proof. Suppose N ( u )  is complete K-partite, then a maximum clique containing 
u has size K + 1. Hence o ( G )  = K + 1 and y ( N ( u ) )  = K + 1. There must exist a 
part of N ( u )  which uses two or more colors. Consider two colors PI, p2 that are 
used in the same part C,. Since N ( u )  is complete multipartite, no other part can 
use p, or p2. Let GPla be the subgraph of G \ u induced on vertices colored pi 
and p2. Since G is p-critical by Theorem 3, Gala must be connected. Let P be a 
shortest (PI, &)-path between two vertices x, y in N ( u )  with colors of x and y 
being p1 and p2 respectively. Since x and y are in C,, they are not adjacent. Since 
P is the shortest possible such path, no other vertices in P are in N(u). 
Therefore we have an odd hole uPu in G. 0 
A claw is a bipartite graph Kl,3 with four vertices vo, vI, u2, v 3  (Fig. 1) such that 
the only edges that exist among them are (vO, u,), (vu,vz), ( u o , ~ s ) .  We use 
{v0, (vl, uz, v3)} to denote a claw rooted at uO. 
Fig. 1. A claw 
Proposition 3. Consider a p-critical graph G. If every vertex of G is a 6-vertex, 
then G is an odd hole or an odd anti-hole. 
~ 
~ 
Proof. For each vertex u in G, N ( u )  is bipartite. Hence N ( u )  does not contain 
triangles. Thus in G, there can be no claw (induced subgraph) rooted at u. 
Therefore G is claw-free and the result follows from [12]. 0 
Before stating a proposition about the m-vertices, we define the following two 
types of vertices. 
Type I. A vertex vo is a Type I vertex if there exist three other vertices 01, 
u2, 
u3 with (uo, uJ, (UO, U Z ) ,  (uo, v3), ( u t ,  %), (u3, u*) E E and (ul, u2) $.Z E (as shown in 
Fig. 2). It is easy to check that such a vertex is a m-vertex. 

106 
W.- 
L. HSU 
Fig. 2. Forbidden subgraph containing uw 
Type 11. A vertex vO is a Type I1 vertex if there does not exist three other 
vertices 
u I ,  
v2, v3 with (VO, v,), (VO, VZ), (v3, vl), (v3, VZ), (vt, ~
2
)
 
E E and 
(oo, v 3 ) e  E (as shown in Fig. 3). We call u a m’-vertex. 
Fig. 3. Forbidden subgraph containing uo. 
It is clear that if every vertex of G is either a m”-vertex or a fi-vertex, then G 
is K4\e (K4 taking out one edge) free. Hence we can derive the following 
proposition from [ 1 I]. 
Proposition 4. Let G be a p-critical graph. If every vertex of G is either a m-vertex 
or a mi’-vertex, then G is an odd hole or an odd anti-hole. 
The distinction between m ‘-vertices and *-vertices will be important when 
we consider more general graphs in the next section. 
Previous SPGC proofs on special graphs rely heavily on the uniformity of 
those special properties (which often follow ChvBtal’s approach [4]) and, hence, 
are difficult to be used for a general proof of the SPGC. Our method is based 
primarily on a simplified version of an alternative proof (see [7]) that the SPGC 
is true for claw-free graphs, which uses the neighborhood approach. 
3. Special graphs with mixed neighborhood properties 
Theorem 4. Let G be a p-critical graph. If every vertex. of G is either a 6-vertex, a 
m-vertex or a m’-vertex, then G is an odd hole or an odd anti-hole. 

The Perfect Graph Conjecture on special graphs 
107 
We will prove this theorem by proving several lemmas. Throughout this 
section we assume the graph G satisfies the assumptions in Theorem 4. 
Furthermore, we only have to consider those G which contain at least one 
6-vertex; otherwise Proposition 4 would apply. Also we can assume w (G) 2 4 by 
Proposition 1. 
Let u be a 6-vertex in G. Consider the unique minimum coloring of G \ u (this 
coloring partitions G \ u into w a-stable sets). Since N ( u )  is bipartite, at most 
two vertices in N ( u )  can have the same color. Let M be the set of edges in N ( u )  
between two vertices with the same color. Then M is an edge matching in N(u). 
Furthermore we have the following lemma. 
~ 
~ 
Lemma 2. M is not a maximum matching. 
__ 
Proof. Suppose M is a maximum matching. Since vertices in N ( u )  which are not 
adjacent to a matching edge are colored singly in N(u), we have, by Konig's 
Theorem, 
- 
1 maximum stable set in N ( u )  1 = I N ( u )  1 - 1 M 1 = y(G \ u )  
= w ( G  \ u ) =  w ( G ) .  
- 
Let S be a maximum stable set in N ( u )  of size w ( G ) .  Thus S U {u} is a clique of 
size w ( G )  f 1 in G, a contradiction. 0 
Given that M is not a maximum matching, there must exist an augmenting 
path in N ( u )  with respect to M. Let P be a shortest such path. Let the endpoints 
of P be xo and yo with colors j and k respectively. Then colors j and k are used 
exactly once in N(u). Let the length 
__ 
of P be 2a f 1 (a S O ) .  Denote P by 
xoy1xIy2x2 
y,x,yo in N ( u )  with colors f(xo) = j, f ( y o )  = k and 
f ( y r )  = f ( x , )  = i,, 1 G 1 s a. Since P is a shortest augmenting path no xi can be 
adjacent to ym VO G 1 S a, m > I + 1. We will show that an odd hole in G can be 
constructed using the path P. 
~ 
xryl+lxr+l. 
Lemma 3. a 2 2 ,  i.e., the length of P is greater than or equal to 5. 
Proof. If a =0, i.e., P consists of exactly one non-matching (xo,yo) edge in 
N(u), then there can be no &&)-path connecting xo and yo in G \ u  (the 
existence of such a path would imply an odd hole containing u in G), 
contradicting Theorem 3. 
Next we consider the case where a =l. The path P is now x o y l x l y o  with 
f ( x o )  = j, f(yo) = k and f(xl) = f ( y l )  = il. Consider the induced subgraph H of G 
on vertices colored j, k or i, and the vertex u. Clearly w ( H )  = 3. Since we assume 
- 

108 
W.-L. Hsu 
w(G)z=4, H is a proper subgraph of G. Therefore, H must be perfect and, 
hence, 3-colorable. This implies that there exists a 3-coloring f’ of H in which 
f ’ ( x l )  = f‘(yo) and f’(Xo) = f ’ ( y , ) ,  contradicting the fact that the coloring in G \ u 
must be unique (by Theorem 3). 0 
___ 
By Lemma 
3, a 2 2 .  Hence we 
can denote P (in 
N ( u ) )  by 
x o y l x I y 2 x 2 y 3 ~  
. . y.xayo ( a  3 2). 
Lemma 4. Each vertex in the path P is a b-vertex. 
Proof. We will prove the lemma by proving several claims. 
Claim I. xi. 0 S i s a - 1 and (let 
= yo) y,, 2 G j s a + 1 are 6-vertices 
Proof. It is sufficient to prove that they cannot be fi or fi’ vertices. 
2 is shown in Fig. 4. 
(i) They are not m-vertices. A complementary graph of the one shown in Fig. 
Fig. 4. Complement of Fig. 2. 
To show that a vertex uo in G is not a fi-vertex we only have to show that in 
there exist vertices ul, u2, v3 such that, together with uo, they form an induced 
subgraph. as shown in Fig. 4. Now, for each x,, 0 S i S a - 1 there exist x , + ~ ,  
Y , + ~  
and u such that the only edge that exists among x,, x , + ~ ,  yli2 and u in G is 
y,+>). Hence these x,’s are not rfi-vertices. Similarly for each y,, 2 S j s 
a + 1 there exists Y,-~, x , - ~  and u such that the only edge that exists among y,, 
Y , - ~ ,  x , - ~  and u in G is (y ,-,, x,-J. 
(ii) They are not m‘-vertices. Fig. 5 shows the complementary graph of the 
one shown in Fin. 3. 
- 
Fig. 5. Complement of Fig. 3. 

The Perfect Graph Conjecture on special graphs 
109 
Now, for each x,, 0 < i < a - 1 there exist x, Y,+~ , 
Y , , ~  and u such that the only 
edge that exists among x,, Y,,~, 
and u in 
is (x,, Y!+~). 
Hence these x,’s are 
not fi’-vertices. Similar argument shows that y,, 2 < j < a + 1 are not m’- 
vertices. 0 
Proof. It is equivalent to show that they are not in G. Suppose (yl, xz) kZ E. Then 
we have an induced subgraph in G, as shown in Fig. 6. Now in G, xl, x2, yl, y2 
i t  
12 
Fig. 6. 
must be connected by some (il, &)-path. Let xiQxyZ be a shortest (il, i2)-path 
connecting xI to yz. Q must contain either x2 or yl, for otherwise uxIQy2u would 
be an odd hole in G. However, Q cannot contain both x2 and yl, because then 
ux2(along Q)ylu would be an odd hole in G. Hence assume Q contains only x2 
(the case of yl is similar). Now y,xlx2(along Q)y2y3 is an odd cycle in G. Since y3 
is a 6-vertex, it cannot be adjacent to vertices coloied il other than xI, yl 
(otherwise this would give a claw). Furthermore if y3 is adjacent to any iz vertex 
y‘ on Q between x2 and y2 then {y3, ( x l ,  y2, y’)} would be a claw, contradicting 
that y3 is a 6-vertex. Hence y3xlxz(along Q)y2y3 is an odd hole. This contradic- 
tion shows that (yl, x2) E E. By symmetry, we have (xa, ya-l) E E. 0 
Claim 3. yl and x, are i-vertices. 
Proof. In G there exist induced subgraphs containing y,, as shown in Fig. 7. 
Hence yl is not a m- or fi’-vertex. Similarly we can argue that x, is not a m- or 
m’-vertex. 0 
@-@ 
Fig. I .  

110 
w.-L. Hsu 
We have shown that every vertex on the path P is a b-vertex. Now let Q1 be a 
shortest (i,,j)-path connecting x1 to yl in G. QI cannot contain xo, for otherwise 
uxo(along QI)yIu would be an odd hole. Let yl’ be the neighbor of yl on Q1. yl’ is 
colored j. 
Lemma 5. (yl’, yz) E E and (yl’, xl) E E. 
Proof. Suppose (y1’, y2) 6Z E. Then consider the induced subgraph H on vertices 
colored il, i2 or j and the vertex u. Being a proper induced subgraph of G, H is 
perfect. Furthermore it is easy to check w ( H )  = 3. Hence we can color H using 
three colors, contradicting that the coloring in G \ u is unique (by Theorem 3). 
Now suppose (y i, xl) 6Z E. Then in G we have a path uy;xoyIx1y2 
whose edge 
connections are shown in Fig. 8, where u and y2 are b-vertices. Compare Fig. 8 
with Fig. 6. We can apply the same argument in the proof for Claim 2 of Lemma 
4 to show that Fig. 8 is impossible. Hence, (yl,xl) must be in E. 0 
Fig. 8. 
Similarly we can argue that there exists a vertex x: colored i, such that its 
Now we are ready for the final conclusion. 
connection in G is shown in Fig. 9. 
Fig. 9. 
Proof of Theorem 4. Following the previous discussion in this section, let us 
consider the odd cycle C* in G, 
uy lxoylxl y2(along P)~,-~y,x.y~x 
:u. 
To avoid an odd hole in G, C* must contain a triangle by Lemma 1. Since N(u) 
is bipartite this triangle must contain either y I or x:. Suppose there is a triangle T 
containing y I (the case of x: is similar); T cannot contain xl, yl or y2. Since x1 is 

The Perfect Graph Conjecture on special graphs 
111 
only adjacent to yl and y2 in C* the existence of such a T would imply a claw 
{x,, (T)} 
rooted at x1 in G. Hence C* 
contains an odd hole. By the p-criticality of 
G, G must be an odd anti-hole. 
It is easy to check that if we assume G is claw-free, then every vertex of G 
must be a 6-vertex. Hence we can obtain a proof that the SPGC is true for 
claw-free graphs by eliminating Lemma 4 and following the rest of the discussion 
in this section. This proof uses the same approach as theone in [7]. However, it is 
much simplified. We summarize the result in Section 2 and Section 3 as follows. 
Corollary 1. The SPGC is true for graphs in which each vertex is one of the 
following types : 
(i) a b-vertex, 
(ii) a 6-vertex, 
(iii) a rn-vertex, 
(iv) a 6 
-vertex 
(v) a m’-vertex. 
4. The SPGC on some other special graphs 
We have illustrated, in previous sections, how to apply known techniques to 
more general graphs. In this section we show that a similar approach can 
produce alternative proofs that the SPGC is true for other special graphs. Those 
proofs turn out to be much simpler than the original ones. 
Corollary 2. If a p-critical graph G is planar, then G is an odd hole or an odd 
anti-hole. 
Proof. By Proposition 1, we can assume w ( G )  = 4. It is well known that a planar 
graph has a vertex of degree 5 or less. Let u be such a vertex in G. By Theorem 
2, u is contained in 4 maximum cliques. This would imply u has degree 5 and 
there exist four 3-cliques in N(u), which can easily be shown to be 
impossible. 0 
A circular-arc graph is defined to be the intersection graph obtained from a 
collection of arcs on a circle. Characterizations of circular-arc graphs are given 
by Tucker [16]. The following corollary is implied by the proof of Tucker [14]. 
However, we will indicate the implication more explicitly here. 
Corollary 3. If a p-critical graph G is circular-arc, then G is an odd hole or an 
odd anti-hole. 

112 
W.-L. HSU 
Proof. We first show that there do not exist two vertices x, y in G such that 
(x, y )  E E and (x, z )  E E .$ (y, z )  E E. Assume such a (x, y) pair exists. Since G 
is p-critical, the size of a maximum clique containing x in G \ y should be w ( G ) .  
But then any such maximum clique together with y would give us a clique of size 
w ( G ) +  1 in G, a contradiction. This implies that in a corresponding circular-arc 
representation of G no arc is properly contained in another arc. Thus G is, in 
fact, claw-free and the result follows from [12]. 
A toroidal graph is a graph which can be drawn on a torus so that no two edges 
intersect. It has been shown that the SPGC holds for toroidal graphs (see [6]). 
We will establish the same result using Proposition 1 and the following results of 
[S] and [6]. 
Lemma 6 [5]. Let G be a p-critical graph. If for each vertex u of G, the partition of 
G \ u into (Y -stable sets has at least two members containing one neighbor of u, then 
G is an odd hole or an odd anti-hole. 
Lemma 7 [6]. In a critical toroidal graph G, either w ( G )  < 4, or G is regular of 
degree six and triangulates the torus. 
Corollary 4. If a p-critical graph G is toroidal, then G is an odd hole or an odd 
anti-hole. 
Proof. By Proposition 1 we can assume w(G)24. Let u be any vertex of G. 
Since y(G \ u )  = w(G)a4, we can color G \ u using w(G) colors, Since G is 
p-critical, N ( u )  must use w(G)24 colors. By Lemma 7, IN(u)l =6. Hence 
there must be at least two vertices which are colored singly in N ( u ) .  This is true 
for every vertex of G. Hence the result follows from Lemma 6. 0 
References 
[ I ]  C. Berge, Graphes et Hypergraphes (Dunod, Paris, 1970). 
[Z] R.G. Bland. H.-C. Huang and L.E. Trotter, Jr., Graphical properties related to minimal 
imperfection, Discrete Math. 27 (1979) t 1-22 (this volume, pp. 181-192). 
131 V. Chvatal. R.L. Graham, A.F. Perold and S.H. Whitesides, Combinatorial designs related to 
the strong perfect graph conjecture, Discrete Math. 26 (1979) 83-92 (this volume, pp. 197-206). 
[I] 
V. Chvatal, On the strong perfect graph conjecture, J. Comb. Theory, Ser. B 20 (1976) 139-141. 
1.51 R. Giles and L.E. Trotter, Jr., On stable set polyhedra for K,,,-free graphs, J. Comb. Theory 31 
[h] C.M. Grinstead. Toroidal graphs and the strong perfect graph conjecture, Ph.D. thesis, UCLA. 
[7] W.-L. Hsu, How to color claw-free perfect graphs, Ann. Discrete Math. 11 (1981) 18Y-197. 
(1981) 313326. 

The Perfect Graph Conjecture on special graphs 
[8] H.-C. Huang, Investigations on combinatorial optimization, Ph.D. thesis, Cornell University. 
[9] L. LovAsz, A characterization of perfect graphs, J. Comb. Theory, Ser. B 13 (1972) 95-98. 
[lo] M. Padberg, Perfect zero-one matrices, Math. Program. 6 (1974) 18C-196. 
[l 11 K.R. Parthasarathy and G. Ravindra, The validity of the strong perfect graph conjecture for 
[12] K.R. Parthasarathy and G. Ravindra, The strong perfect graph conjecture is true for K,,3-free 
[ 131 A.C. Tucker, Critical perfect graphs and perfect 3-chromatic graphs, J. Comb. Theory, Ser. B 23 
[14] A.C. Tucker, Coloring a family of circular-arc graphs, SIAM J. Appl. Math. 29 (1975) 493-502. 
[15] A.C. Tucker, The strong perfect graph conjecture for planar graphs, Canad. J. Math. 25 (1973) 
113 
(I&\ e)-free graphs, J. Comb. Theory, Ser. B 26 (1979) 98-10, 
graphs, J. Comb. Theory, Ser. B 21 (1976) 212-223. 
(1977) 143-149. 
103-114. 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 115-119 
@ Elsevicr Science Publishers B.V. 
THE GRAPHS WHOSE ODD CYCLES 
HAVE AT LEAST TWO CHORDS 
H. MEYNIEL 
ER 175 Combinatoire, Universifi Pierre et Marie Curie, UER 48, 7.5230 Paris, France 
We prove the following theorem: If every odd cycle of length 2 5 has at least two chords, 
then the gruph is perfect.* This generalizes a result of Gallai and Suriinyi and also a result of 
Olaru and Sachs. 
A k-coloring of the vertices of G is a mapping f of the vertex set X of G into 
a set C of k colors such that no two adjacent vertices have the same color. A 
switching (relative to C )  is an operation on f defined as follows: take a 
connected component H of the subgraph G,, induced by the vertices of colors 
a, p E C. If H has at least one vertex of each color a, p, we interchange the 
colors (Y and p for all the vertices in H, the colors of the other vertices remaining 
unchanged. If H has only one vertex, of color a, say, we color this vertex with p 
and we color with p all the connected components of Gm, consisting of a single 
vertex with color a. 
Let 3 be the class of all graphs such that every odd cycle of length 2 5 has at 
least two chords, and let G E '9. For k > y ( G ) ,  let f be a k-coloring of G. We 
shall first show that it is possible to obtain from f a coloring of G with y ( G )  
colors by a sequence of switchings. 
Lemma 1. Let G E 9, let x be a vertex of G, and let r
G
 (x) be the set of its 
neighbors. Consider a k-coloring of X - {x}. If y l  and y 2  are two vertices of rG 
(x) 
with distinct colors a and p, respectively, belonging to a component H of Gap, then 
y ,  and y2 are linked by an (a,P)-chain contained in rG(x). 
Proof. Let p [ y I ,  y2] = (xl = y l ,  xz,. . . , xZp = y2) be a chain of Gap of minimum 
length between yl and y2. The cycle p = p [ y l ,  y2] + [x, y l ]  + [x, y z ]  is odd and has 
only chords issuing from the vertex x. Assume that there exists a vertex a of 
p [ y l ,  yz] which is not in rG 
(x); we shall show that this leads to a contradiction. 
* Edifors' Note. The same result was conjectured by E. Olaru (Elektron. Informationsverarb. 
Kybern. (EIK) 8 (1972) 147-179). Also, we have just learned from E. Olaru that S.E. Markosian and 
I.A. Karapotian have found independently another proof of Theorem 2. 
115 

116 
H. Meyniel 
Let x, be the last vertex in rG 
(x) which is before a on p [ y I ,  y2]. and let x, be 
the first vertex in rG 
(x) which is after a on p [ y I ,  y2]. Clearly, p[x,, x,] is of even 
length because otherwise the cycle (x, x,, x # + ~ ,  
. . . , x,, x )  would be an odd cycle of 
length 2 5  without chords. 
Let x k  be the vertex of r G ( x )  after x, on p [ y l r y 2 ] .  
We have k > j  +1, 
otherwise (x, x,, x , + ~ ,  
. . . , x,, x,+~, 
x )  would be an odd cycle of length 2 5 with only 
one chord. As above, p[x,,xk] is of even length. Thus, all the portions of 
p [ y , ,  y2] between two vertices of I‘G (x) are even, and therefore p[y,. y z ]  is even, 
a contradiction. 0 
Lemma 2. Let G E %, let x be a vertex of G, and let f : X - {x}+ C be a 
k-coloring of the subgraph G - x. Let f be the restriction o f f  to the subgraph G 
induced by TG ( x  ). 
For every k-coloring f l  of G which is obtained from f by a sequence of 
switchings relatively to C there exists a k -coloring g of G - x, obtained from f by a 
sequence of switchings relatively to C, such that g = fl. 
Proof. Each component H of G=@ intersects G either in a single component or 
in several components. In the latter case, Lemma 1 guarantees that each of the 
several components is a single vertex. Hence, each switching on G extends into a 
switching or a sequence of switchings of G. 0 
We remark that if GfZ 3, then the property of Lemma 2 is not always true. 
Consider the graph G with vertices a, b, c, d, x and edges ax, bx, dx, ab, bc, cd. 
The bicoloring 
of G - x has a restriction 
A switching on 7 gives 
which is not the restriction to G of a bicoloring f l  of G - x obtained from f by 
switchings. 
Theorem 1. Lei G E 3, and lei f : X --+ C be a k -coloring of G. Then there exists 
a coloring of G with y ( G )  colors which is obtained from f by a sequence of 
switchings relative to C. 

The graphs whose odd cycles have at least two chords 
117 
Proof. If the order of G is 1, then the theorem is obviously true. Let n > 1. 
Assume that the result is true for all graphs with order < n ; we shall show that it 
is true for every graph G of order n. 
Let C = {aI, a2,. . . , ak}, with k > y ( G )  = 9, and consider a k-coloring 
f : X +  C. There exists in G a vertex x with color a # al, a2,. 
. . , aq (otherwise 
there is nothing to prove). 
Let H be the subgraph of G induced by x and the vertices of color 
a I ,  a2,. . . , aq. Since y ( G )  = q, the subgraph I? of H induced by rH(x) 
satisfies 
By the induction hypothesis, I?, which is of order less than n and belongs to 93, 
has a coloring f, with y(I?) colors obtained from the restriction f of f to H by a 
sequence of switchings relative to {aI, a2,. . . , a,}. 
By Lemma 2, fl can be obtained from f by a sequence of switchings relative to 
{a1, 
a2,. 
. . , aq}. 
After this sequence of switchings, we can recolor x with one of 
the colors al, a2,. . . , aq ; in other words, we can enlarge the set of vertices 
colored with a l ,  az, . . . , aq. This process can be repeated until all the vertices of 
G are colored with aI, 
az,. . . , aq. Thus we obtain a coloring of G with y ( G )  
colors. 0 
y ( H )  s q - 1. 
Theorem 2. Let G be a graph such that every odd cycle of length more than 3 has 
at least two chords. Then G is perfect. 
Proof. Consider a graph G E 3 which is not perfect and of minimal order. So, if 
q = y ( G ) ,  we have w ( G )  < y ( G )  = 9; furthermore, for every set A C X ,  A # X ,  
Let x be a vertex of G; so the subgraph G - x has a (q - 1)-coloring f .  Let 7 
be the restriction of f to the subgraph G induced by rG(x). 
We have y ( G )  3 9 - 1: otherwise, by Theorem 1, G has a (q -2)-coloring fl, 
which is obtained from f by switchings; so, by Lemma 2, there exists a 
(9 - 1)-coloring g of G - x with g = TI. Hence y ( G )  C 9 - 1, a contradiction. 
Let A = {x} U rG 
(x), then y(GA) 3 q ;  so, by (l), A = X, and x is adjacent to 
every other vertex. Since x was chosen arbitrarily, this shows that G is a clique. 
Hence y ( G )  = w ( G ) ,  and the contradiction follows. 0 
Corollary 1 (Gallai [3]). Let G be a graph such that every odd cycle of length > 3 
has at least two non-crossing chords; then G is perfect. 
Corollary 2 (Olaru, Sachs [6]). Let G be a graph such that every odd cycle of 
length > 3 has at least two crossing chords ; then G is perfect. 

I in 
H. Meyniel 
Corollary 3 (Hajnal and Suranyi [4]). Let G be a triangulated graph (that is, every 
cycle of length > 3 has a chord). Then G is perfect. 
Proof. In this case every odd cycle of length 3 5 has at least two chords and the 
theorem follows. 0 
Corollary 4 (Seinsche [7]). If a graph G has no induced P4 (elementary chain with 
-1 verlices and no chords), then G is perfect. 
Proof. Every odd cycle of length at least 5 and with at most one chord contains 
an induced P,. 0 
Corollary 5. I f  a graph G has no induced subgraph isomorphic to Go= 
(nb, ac, bc, cd}, then G is perfect if and only if it has no induced 
k > 1. 
Proof. A graph G with no CZk+, 
and no Go has no odd cycle with only one 
chord: the unique chord would be triangular, which would yield an induced 
Go. 0 
Remark. The method used in Theorem 2 cannot yield a proof of the perfect 
graph conjecture. For example, consider the graph G with vertex set {x, : 1 s i G 
3, 1 S j S 4}, where {x,,x,} 
is an edge iff i f  p and jf q. The graph G is perfect 
(since its complement has a clique-hypergraph which is balanced, and, by a 
theorem of Berge [2, Chapter 161, this implies that this complement is perfect). 
Clearly. G E 3, and from the 4-coloring with classes S, = {x,] I j = 1,2,3) we 
cannot get a 3-coloring by a sequence of switchings. 
Problem. We denote by C,(G) the set of colorings of G with q colors, 
1,2,. . . , q. We say that two colorings f ,  g E C, (G) are q-Kempe-equiualent if 
there exists a sequence of colorings all in C, (G), f n  = f ,  f l ,  . . . , 
f k  = g, such that 
for i = 1,2,. . . , k, the coloring f, is obtained from f,-, by a switching. 
The Kempe-equivalence being an equivalence relation, the classes of this 
relation will be called the q-classes of G. 
If G is the graph with vertex set {1,2,3,4} x {1,2,3,4,5} x{1,2,3,4.5}, where 
the vertices (i, j, k )  and ( i ' ,  j', k') are adjacent iff i #  i f ,  j #  j '  and kf k', we make 
the following observations: 
(1) The projection pl(i,j,k)= i is a 4-coloring of G; the projections 
pz(i, j, k ) = j and ps(i, j, k )  = k are 5-colorings. 
(2) For q 3 4, every q-coloring of G is q-Kernpe-equivalent to pl, or to p2, or 
to p3. 
(3) The colorings pl, p 2  and p3 belong to three different 6-classes. 

The graphs whose odd cycles have at least two chords 
119 
(4) The coloring p2 is q-Kempe-equivalent to pl for q 
Thus, the number of q-classes is 1 for q =4; it is 3 for q = 5  or 6; it is 1 for 
q 3 7. This suggests the following open problem: If in G every odd cycle has at 
least two chords, is the q-class unique for every q 
7. 
y(G)? 
References 
[I] C. Berge, Farbung von Graphen, deren samtliche bzw. deren ungerade Kreise starr sind, Wiss. 2. 
[2] C. Berge, Graphes et hypergraphes (Dunod, Paris, 1970); English translation: Graphs and 
[3] T. Gallai, Graphen mit triangulierbaren ungeraden Vielecken, Magyar Tud. Akad. Mat. Kutato 
[4] A. Hajnal and J. Surinyi, Uber die Auflosung von Graphen in Vollstandige Teilgraphen, Ann. 
[5] M. Las Vergnas and H. Meyniel, Kempe classes and the Hadwiger conjecture, J. Comb. Theory. 
[6] H. Sachs, On the Berge conjecture concerning perfect graphs, Combinatorial Structures and 
[7] D. Seinsche, On a property of the class of n-colorable graphs, J. Comb. Theory, Ser. B 16 (1974) 
[8] L. Surinyi, The covering of graphs by cliques, Studia Sci. Math. Hungar. 3 (1968) 345-349. 
Matin-Luther-Univ. Halle-Wittenberg (1961) 114. 
Hypergraphs (North-Holland, Amsterdam, 1973). 
Int. Kozl. 7 (1962) A 3-36. 
Univ. Sci. Budapestinensis 1 (1958) 113. 
Ser. B 31 (1) (1981) 95-104. 
their Applications (Gordon and Breach, New York, 1970). 
191-193. 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 121-144 
@ Elsevier Science Publishers B.V. 
CONTRIBUTIONS TO A CHARACTERIZATION 
OF THE STRUCTURE OF PERFECT GRAPHS 
Elefterie OLARU and Horst SACHS 
Technische Hochschule Ilmenau, DDR -6300 Ilmenau, German Dem. Rep. 
Characterizing the structure of perfect graphs is one of the important, most actual, and most 
challenging unsolved problems of graph theory. The strong version of Claude Berge’s Perfect 
Graph Conjecture has given rise to numerous investigations of this problem. In this paper, 
results found by E. Olaru since 1969 are summarized. 
1. Introduction 
The graphs G = (X, U )  considered in this paper are finite, undirected, and 
have neither loops nor multiple edges; X and U denote the sets of vertices and 
of edges, respectively. 
We shall use the following general terminology and notation. 
S ’ C S  means: S’ is a subset of S ;  
S’CS means: S‘ is a proper subset of S. 
Let X ’  C X, U’ 5 U ;  G = (X, U), G’ = (X‘, U’). The graph G’ is called a 
partial subgraph of G ;  if any two vertices of X ’  are adjacent in G’ if and only if 
they are adjacent in G, then G‘ is called a subgraph of G or, more precisely, the 
subgraph of G spanned by X‘, and denoted by [X’], ; if X ’  = X then G‘ is called a 
partial graph of G. 
The number of vertices of G, i.e., the cardinality I X I of X, is also denoted by 
A complete subgraph of G is called a clique of (or in) G. The maximum 
number of vertices contained in a clique of G, i.e., the ‘density’ of G, is denoted 
A subset S C X with [SIC = (S,@ is called a set of independent vertices or, 
briefly, an independent set of G. The maximum number of independent vertices 
of G is called the stability number of G and denoted by a(G). Here, a stability 
system of G is an independent set S of G with 1 S I = a(G). 
The complement of G = (X, U )  is the graph G = (X, 0) 
with the property that 
any two vertices of X are adjacent in G if and only if they are non-adjacent in G. 
Clearly, 
n(G). 
by w ( G ) .  
a ( C )  = w ( G ) ,  w ( G )  = a(G). 
(1) 
121 

122 
E. Olanc, H. Sack 
For X' C X and U'C U, we define 
G-X'=[X-X']c, 
G-U'=(X,U-U'); 
f o r x E X , u E U , w e w r i t e G - x  a n d G - u  insteadof G-{x}orG-{u}, 
respectively. 
Let G' be a subgraph of G ;  an edge u of G is called a-critical with respect to 
G' if 
a ( G ' - u ) = a ( G ' ) + l .  
(2) 
The set of all edges of G which are a-critical with respect to G itself is 
denoted by U', and the partial graph G' = (X, U c )  of G is called the &-critical 
skeleron of G. If G = G' then G is called a-critical. 
2. a -partitionable graphs 
Let G = (X, V), let Z = {XI, X,, . . . , X m }  ( m  a 1) denote an arbitrary partition 
of X (i.e., X = XI u X1 u . - . u Xm, X, # 0, Xi n X, = 0 ( i  # j ; i, j = 1,2, . . . , m)), 
and put G, = [X,Ic 
( i  = 1,2,. . . , m). Then, evidently, 
m 
a ( G ) s  
I =  T a ( G t ) ,  
(3) 
m 
w ( G ) s  
w(Gi). 
I= 
Definition 1. The graph G = (X, V )  is called a -partitionable if a ( G )  = 1 or if 
there is a partition Z = {XI, X2,. . . , X,} of X with m > 1 such that 
m 
Z is then called an a-partition of G, and the graphs Gi are called the 
corresponding a -components of G. 
G is called w-partitionable if G is a-partitionable. 
G is called parfirionable if it is both a-partitionable and w-partitionable. 
Of particular interest in graph theory are those a -and w-partitions for which 
all G, 
have a certain prescribed property. An an example, consider the following 
unsolved problem: 
Characterize all graphs G having one of the following two properties: 
(C) G has an a -partition with all a -components being cliques; 
(F) G has an w-partition with no w-component having an edge. 

Structure of perfect graphs 
123 
Remark. If the graph G = (X, U )  has an a -partition Z such that the correspond- 
ing a-components are cliques then, obviously, the number of these components 
equals a (G), 
i.e., G can be covered by a ( G )  cliques. We shall then say: G has a 
perfect clique -covering or G is perfectly a -partitionable. 
If G has an o-partition 2 satisfying (F) then z generates a colouring of X with 
exactly w ( G )  colours. We shall then say: G has a perfect colouring or G is 
perfectly w -partitionable. 
Definition 2. A graph G is called a-perfect (or w-perfect) if each subgraph of G 
(including G )  has a perfect clique covering (or a perfect colouring, respectively). 
G is called perfect if it is both a-perfect and o-perfect. 
Before dealing with perfect graphs, we shall prove some general statements 
concerning a -partitionable graphs. 
Remark. If G is disconnected G is a-partitionable, for, if G has C1, 
C2, 
. . . , C,,, 
( m  > 1) as its components of connectivity, then, clearly, 
rn 
a ( G )  = 
a (C; 
)). 
i = l  
Next we prove 
Theorem 1. Let G = (X, U )  be a connected graph and assume that there is a set 
Q C X  such that 
(i) G - Q is disconnected, 
(ii) [a], is a clique, 
then G is a-partitionable. 
Proof. If 
u(G - Q)= a(G)- 1 
(5) 
then G is a-partitionable since (5) implies a ( G )  = a (G - Q) + a ([ a],). There- 
fore we assume 
a(G - Q)= CY(G). 
(6) 
Because of (i), G - Q is the union of two (non-empty) separated parts 
GI 
= (XI, Ul) 
and Gz = (X2, U2). The set of the stability systems of G - Q is 
obtained by combining in every possible way a stability system of GI with a 
stability system of G,; thus, because of (6), we have 
(GI) + (G2) 
= (G). 
(7) 

124 
E. Olaru, H. 
Sachs 
We shall now show that Q can be partitioned into two parts Ql and Q2 in such 
a way that 
a([X, U Q,IC)= a([X,Ic)= a ( G )  ( i  = 1,2) 
(8) 
where Q1 or Q2 may be empty. From (8) and (7) we deduce 
..([Xi U Q,]C)+(Y([X~U 
Q , ] ~ ) = ~ ~ ( G ~ ) + ( Y ( G ~ ) = ( Y ( G ) ,  
i.e., G is a-partitionable. 
Let x be an arbitrary vertex of Q. We shall show that either in every stability 
system of GI or in every stability system of G2 
there is a vertex which is adjacent 
to x. For suppose that S1 is a stability system of GI, say, with none of its vertices 
adjacent to x : then, if S2 is an arbitrary stability system of G1, 
x is adjacent to at 
least one vertex of S2, for otherwise there would exist a stability system 
S = S ,  U Sz of G with none of its vertices adjacent to x - 
contradicting the 
definition of a stability system. 
Now let QIcQ 
be the set of all those vertices of Q which are adjacent to at 
least one vertex of every stability system of GI: 
then every vertex of Qz= 
Q - QI is adjacent to at least one vertex of every stability system of Gz. Clearly, 
Ql and Q2 satisfy (8), which proves the theorem. 0 
For an arbitrary graph G = (X, V )  and sets A C X, B C X, where A # 0, B # 0, 
A n B = 0, we define 
[A,Blc = { u  ( u  E U ;  u =(a,b), a € A ,  b EB}. 
Theorem 2. Let G be an a -partitionable graph and let {XI, Xz, 
. . . , X,,, } be an 
a-partition of G. Then none of the sets [X,, XjlC (i# j; i, j = 1,2,. . . , m )  contains 
an a-critical edge of G. 
Proof. Assume that u = (a, b) is an a-critical edge of G. Then, by definition, 
G - u has a stability system S with IS I = a ( G ) +  1. From 
/ s / = a ( G ) + i  = l S n x l =  
i = l  
m 
= C  
i = l  Isnx,~ 
we deduce that there is an io such that 1 S f l  X,I > a(G,). This implies that 
a([X,]c-.)=ff(G,)+ 
1, 
which is impossible unless a, b EX,. 0 
Corollary 1. lf G is (Y -partitionable and (Y ( G )  > 1 then the a-critical skeleton G' 

Structure of perfect graphs 
125 
of G is disconnected and each connected component of G' is contained in an 
a -component of G. 
Corollary 2. Each a-critical edge of an a-partitionable graph G belongs to an 
a-component Gb of G and is a-critical with respect to G,. 
Corollary 3. A n  a -critical graph G with a (G) 
> 1 is a -partitionable if and only if 
G is not connected. 
Note that there are a -non-partitionable graphs whose a -critical skele- 
tons are disconnected. As an example consider G = (X, U )  where X = 
{xl, x2, x3, x4, XS, x) and 
U = {XI, XZ), (x2, x3), (x3, x4), (x4, xs), (xs, XI)) 
u {(x, x i )  1 i = 1,2,3,4,5} (the "5-wheel"): 
here G' = (X, 
V c )  with U' = {(XI, XZ), (XZ, x3), (XS, x4), (x4, XS), (XS, XI)), thus G' 
is disconnected. 
Clearly, any graph G = (X, U )  contains a partial graph G' = (X, U') (U'C U )  
with the following properties: 
(a) a (G?= a (GI; 
(b) every edge of G' is a-critical with respect to G'. 
G' is called an a-critical partial graph of G. 
Theorem 3. A graph G with a ( G )  > 1 is a-partitionable if and only if it contains 
at least one a-critical partial graph which is disconnected (i.e., by virtue of 
Corollary 3 of Theorem 2, which is a -partitionable). 
Proof. First suppose that G is a-partitionable; let Z = {Xl,Xz,. . . , X m }  (rn > 1) 
be an a-partition of G. 
If there is, for some i €{2,3,. . ., m}, an edge u1 €[XI,X,], such that 
a ( G  - u;) = a(G), then uI is omitted and G - u1 is denoted by GI. Clearly, Z is 
an a-partition of GI. 
If there is an edge u2 E (XI, Xi),, such that a(G1 - uz) = a (GI) = a(G), then 
uz is omitted and GI - u2 is denoted by Gz, and so on. After a finite number of 
steps we arrive at a partial graph G, of G having the following properties: 
(i) a(Gp)= a(G); 
(ii) Z is an a-partition of G,; 
(iii) every edge contained in lXl,X,]Gp 
is a-critical with respect to G,. 
Corollary 2 of Theorem 2 now yields that [XI, X , ] ,  is empty, which implies 
that not every a-critical partial graph of Gp can be connected. If G contains a 
disconnected a-critical partial graph G' then, according to Corollary 3 of 

126 
E. Olaru, H. Sachs 
Theorem 2, G' is a-partitionable. An arbitrary a-partition Z = {XI, X2, . . . , Xk} 
of G' is an a-partition of G, too, since 
Theorem 3 is now proved. 0 
Definition 3. A graph G is called strongly stable if for each clique C = [a], of 
G, a(C - Q)= a(G). 
Remark 3. If G is a-non-partitionable then G is either strongly stable or 
complete. The converse of this statement, however, is not true: the graph 
consisting of two separated 5-circuits is a -partitionable though it is strongly 
stable. But the following theorem is valid: 
Theorem 4. If a graph C is strongly stable and a-partitionable, then all a- 
components of any a-partition of G are strongly stable. 
Proof. Let G = (X, V )  be a strongly stable graph and let Z = {XI, X,, . . . , X,,} 
be 
an arbitrary partitlon of X such that 
Assume that one of the a-components, say GI, is not strongly stable. Then there 
is at least one clique C = [QlC, of GI satisfying 
a(G1- a) = a(C1)- 1. 
(10) 
Since {XI 
- Q, X 2 , .  . . , X.} is a partition of X - Q, (9) and (10) imply 
(G - Q) C (GI - Q) + (Gz) + 
* + (G,) = ( G )  - 1. 
But this inequality contradicts the hypothesis that G is strongly stable. 0 
As a simple consequence of Theorem 4 we have 
Corollary 1. Let G = (X, 
U) 
be a strongly stable graph. Then there is a partition 
{XI, Xz, . . . , X,} (p 2 1) of X such that 
(a) all G, = [XI, 
(i = 1,2,. . . , p )  are strongly stable and a -non-partitionable, 
(b) xr=l 
a(G,) = cu(G). 
Remark. We shall see that, in the investigation of perfect graphs, the strongly 
stable graphs are of a particular significance. 

Structure of perfect graphs 
127 
3. Perfect graphs 
Let x ( G )  denote the chromatic number of the graph G. Obviously, 
X ( G ) Z  w ( G )  
and, analogously, 
x ( G ) Z  w ( G ) = a ( G ) .  
For many purposes the following reformulation of the definition of perfect 
graphs (see Definition 2) is more appropriate. 
Definition 2’. The graph G is called 
(a) a-perfect if ~ ( c ’ )  
= a(G‘) for every subgraph G’ of G (G’ = G included); 
(b) w-perfect if x(G’) = w(G’) for every subgraph G‘ of G (G’ = G included); 
(c) perfect if G is both a-perfect and o-perfect. 
Note that, in fact, properties (a), (b), and (c) are equivalent: this is the content 
of the weak version of Berge’s Perfect Graph Conjecture and follows easily from 
an important result of L. LOV~SZ 
[lo], [ll]: 
Theorem 5 (Lovisz [lo]). A graph G is perfect if and only iffor every subgraph 
G‘ = [X’], 
(X’CX) 
n ( G ’ ) = I X ’ l s a ( G ’ ) .  w(G’). 
Remark. x ( G )  equals the minimum number of cliques covering the vertex set of 
G :  therefore, x ( G )  is also called the clique-covering number of G denoted by 
O(G). 
We need some notions and results. 
3.1. Odd holes and (Y -critical Hamiltonian circuits 
The graph G = (X, U )  is called a k-circuit (of length k 3 3) and denoted by L k  
if X can be so arranged as a sequence xl, x2,. . . , 
X k  that 
u = {(Xi, Xi+]) I i = 1,2,. . . , k ;  X k + 1  = XI}. 
We shall briefly write 
L k  = ( x l ,  x2,. , . 9 X k ,  XI) 
and say that xi and xi+] (i = 1,2,. . . , k ;  X k c l  = xl) are neighbouring on L k .  If the 
circuit L is contairred in a graph G (as a partial subgraph) we shall say that L is a 

128 
E. Olaru. H. Sachs 
circuit of (or in) G. An edge of G connecting two vertices of a circuit L of G 
which are non-neighbouring on L is called a chord of L. 
Let s = (x, y )  and s‘ = (x’, y’) be two chords of a circuit L in G where the 
vertices x, y, x’, y’ are pairwise distinct. If, on L, the pair x’, y ‘  separates (and is 
separated by) the pair x, y we shall call s, s f  a pair of crossing chords of L. 
Definition 4. A circuit of a graph G of length greater than three which has no 
chord in G is called a hole of G. 
Towards a characterization of the structure of &-perfect graphs the following 
conjecture has already become famous. 
Conjecture 1 (C. Berge and P.C. Gilmore) (strong version). A graph G is 
a-perfect if and only if neither G nor its complement G contains an odd hole. 
For the sake of brevity we introduce the following notation: 
Let G = (X, U )  be an arbitrary graph, let X‘, X ” C X  with X ’  n X” = 0; we 
write X’pcX” if in G every vertex of X’ is adjacent to every vertex of X ” ,  and we 
write X’pCX“ if there is in G no edge connecting a vertex x f  E X ’  with a vertex 
x “ E X ” ;  instead of { x } p c Y  we briefly write xpcY, etc. 
The next theorem yields a necessary and sufficient condition for the existence 
of an odd hole. 
Theorem 6. A graph H = (X, U )  contains an odd hole if and only if there are in 
H two distinct edges (x’,x) and (x,x’) such that 
(i) (xI,x) and (x,x2) are a-critical with respect to some subgraph G of H ;  
(ii) ( x I r x Z ) ~  
U. 
If H satisfies the above condition then there is in H an odd hole L which contains 
both edges (x’, x )  and (x. x’). 
Proof. 1 (“if”): Because of 
a(G - ( x ’ , x ) ) =  a ( G ) +  1 ( i  = 1,2), 
there are two stability systems S ,  and S2 of G such that 
x ’  E s,, XP s,, 
xpCS, - { X I }  
( i  = 1,2). 
(11) 
Now consider the subgraph G‘ of G spanned by SI U Sz U {x}. We have 
a(G’)= a(G), 

Structure of perfect graphs 
129 
a(G’) < x(C’), 
(12) 
o(G’)=2. 
(13) 
The first relation is clear since, by definition, I S, I = a(G). 
Expression (11) implies that (x’, x )  and (x, x2) are a-critical also with respect 
to G‘. If there is an a-partition of G’ with all its a-components being cliques 
then, by Corollary 1 of Theorem 2, the a-critical edges (x’, x) and (x, x2) are 
contained in a clique of G‘, i.e., (XI, x2) is an edge of H, contradicting (ii); thus 
The subgraph spanned by S, U Sz is bipartite, thus using (11) and (ii) we 
conclude that G‘ does not contain a 3-circuit; therefore, w(G’) = 2, i.e., (13) is 
valid. Since a bipartite graph is a-perfect, (12) and (13) imply that G’ contains an 
odd hole, say L*. Necessarily, (xl,x) and (x,x2) belong to L* for GI-(x,x’) 
( i  = 1,2) are bipartite graphs. 
2 (“only if”): If H contains an odd hole L then any two adjacent edges ( x ’ ,  x )  
and (x,x*) of L are a-critical with respect to L and, clearly, satisfy (ii). 
Theorem 6 is now proved. 
(12) follows. 
Corollary. A n  a-critical graph is a-perfect if and only if all of its connected 
components are cliques. 
Definition 5. A Hamiltonian circuit of a graph H which has the property that all 
of its edges are a-critical with respect to H is called an a-critical Hamiltonzan 
circuit of H. 
From Corollary 1 of Theorem 2 we deduce the following statement: 
A graph H which contains an a-critical Hamiltonian circuit and which is 
perfectly a -partitionable is a complete graph. 
This implies the subsequent statement: 
A graph H with a(H) 
2 2 which contains an a-critical Hamiltonian circuit 
cannot be perfectly a -partitionable. 
Definition 5a. A subgraph G of an arbitrary graph H is called an a-critical hole 
of H if 
(i) a ( G )  3 2, 
(ii) G contains an a-critical Hamiltonian circuit. 
Remark. A graph H which contains an a-critical hole cannot be a-perfect. 

130 
E. Ohm, H. Sachs 
Conjecture 2 (see [17]). A graph H is perfect if and only if it has no a-critical 
hole. 
Remark. An odd circuit L 2 k C l  (k 3 2) and its complement z 2 k + l  are a-critical 
holes. 
3.2. Critically a -imperfect graphs 
For the investigation of perfect graphs we have introduced the notion of a 
critically a-imperfect graph and we have shown (see [13]) that, using this notion, 
many propositions concerning perfect graphs - 
new ones and also well-known 
ones - 
can be proved in a unified and relatively simple manner. We hold that 
the notion of a critically a-imperfect graph plays a particular role within the 
theory of perfect graphs and, therefore, believe that it is useful to continue the 
investigation of critically a -imperfect graphs until a reasonable structural 
characterization of perfect graphs is arrived at. (See also the Concluding Remark 
of this paper.) 
Definition 6. A graph G is called critically a-imperfect if 
(A) 8(G)> a(C) (recall: 8(G)= x(G)); 
(B) e(Cr) = a(Gr) for every proper subgraph G' of G. 
Lemma 1. Every a -imperfect graph contains a critically a-imperfect subgraph. 
Proof. (Clear.) 
Lemma 2. A graph H is a-perfect if and only if it contains no strongly stable 
subgraph. 
Proof. If H contains no strongly stable subgraph then every subgraph H' of H 
(including H) 
has a clique-covering of exactly a (H') cliques, i.e., H is perfect. 
To finish the proof just note that a strongly stable graph G cannot be 
partitioned into a ( G )  cliques. 0 
There is a tight relation between strongly stable and critically a -imperfect 
First we give the following definition: 
graphs, to be expressed in the next theorem. 
Definition 7. A strongly stable graph which contains no strongly stable proper 
subgraph is called a minimal strongly stable graph. 
Now we prove the next theorem. 

Structure of perfect graphs 
131 
Theorem 7 .  A graph G = (X, U )  is critically a-imperfect if and only if it is a 
minimal strongly stable graph. 
Proof. If G is critically a-imperfect then it is a-non-partitionable (and, conse- 
quently, strongly stable) for otherwise there would exist an a-partition, say 
{X,, Xz}, with a ( G J  + a(GZ) 
= a ( G ) .  The graphs GI and Gz being proper 
subgraphs of G, GI can be covered with a ( G I )  and G2 can be covered with a (G2) 
cliques, thus G can be covered with a ( G )  cliques - 
contradicting the hypothesis 
that G is critically a-imperfect. From Lemma 2 it follows that G (since it is 
critically a -imperfect) contains no strongly stable proper subgraph: this proves 
that G is a minimal strongly stable graph. 
Conversely, let G be a minimal strongly stable graph. Then, by Lemma 2, G is 
a-imperfect. Now, since G contains no strongly stable proper subgraph, again 
by Lemma 2, every proper subgraph of G is a-perfect. 
Theorem 7 is now proved. 0 
Before LOV~SZ 
published his important result (Theorem 5), we established a 
couple of properties of critically a-imperfect graphs without using Theorem 5 
(see [13]-[18]). In making use of Theorem 5 we shall now simplify the original 
proofs. 
Theorem 8. A graph G = (X, U )  is critically a-imperfect if and only if 
(i) I X I = a ( G ) * w ( G ) + l ,  
(ii) each proper subgraph G’ = [X’], (X’ C X )  of G satisfies 
I X ’  1 G a (G‘) 
* w (G’). 
Proof. Clearly, (i) and (ii) imply that G is critically a-imperfect (see Theorem 5). 
Conversely, if G is critically a-imperfect then Theorem 5 implies that (ii) is 
valid and that 
1 X I S  a ( G ) *  w ( G ) +  1. 
Now, let x be an arbitrary vertex of G. Then, by virtue of Theorem 7 and 
property (B) of G (see Definition 6), e(G - X) = a ( G )  and, since a clique cannot 
have more than o ( G )  vertices, 
n(G - x )  = I X I - 1 G a ( G )  
* w(G). 
Thus (i), too, is valid. 17 
Corollary. A graph G is critically a-imperfect if and only if its complement G is 
critically a -imperfect. 

132 
E. Olary H. Sachs 
Let C = (X, 
U )  be critically a -imperfect and let x be an arbitrary vertex of G. 
Because of property (€3) of C (see Definition 6), G - x is a -partitionable and 
Theorem 7 implies a ( G  - x )  = a(G). Let C,, 
C,, . . . , C, be an arbitrary system 
of cliques covering G - x and satisfying 
n 
c, = [X,],, 
x, cx - { x }  = u x,, 
, = I  
X,#O, 
X,nxl=O ( i # j , ; i , j = l , 2  ,..., a). 
Further, let X:GX, 
- 
( i  = 1,2,. . . ,a) denote the set of all those vertices of X, 
which, in C, are non-adjacent to x, i.e., such that 
x&X! 
and 
xpc(X, - Xf). 
Then we have the following lemma: 
Lemma 3. For every x E X and for every perfect a-partition of G - x, the 
following propositions hold : 
(1) for i = 1,2,. . . , a the set X f  
is non-empty, 
(2) for eoery ser of subscripts J C{l, 2 , .  . . , a }  = I, the equality 
holds. 
Proof. (1) If there is an i with X :  = 0 then C: = EX, U {x}IC is a clique and the 
cliques C,, . . . , C,-,, 
C:, C,,,, . . . , C, generate a perfect a-partition of G, 
contradicting property (A) of critically a-imperfect graphs (see Definition 6). 
(2) The graphs [Xi], being cliques, 
immediately follows. 
Let us assume that there is a set of subscripts J C I (i-e., I J 1 < (Y (C)) such that 
a ( [  I E J  u x:] 
C )SIJl-l. 
This assumption implies 
since a stability system of [ ujGJX, 
U{x}lC either contains x - then, by our 
assumption, it cannot have more that I J I vertices - 
or it does not contain x - 

Structure of perfect graphs 
133 
then, again, the system cannot have more than ( J i  vertices since the graph 
[ u 
j E J X , ] G  is partitioned into exactly I J I cliques having pairwise disjoint vertex 
sets. 
The graph [ U,,,X], 
is covered by a ( G ) -  ( J J  
cliques, therefore 
a( [ i G J  u XI G ) G a ( G ) - I J I .  
The relation I J I < a ( G )  implies that [ ujEIX, 
U {x}], 
and [ u,,JX,]G 
are 
proper subgraphs of G, and using property (B) (see Definition 6) we conclude 
that 
B(G)= B (  [ u X, U { x } U  u Xi] ) 
j € J  
is1 
G 
contradicting (A) of Definition 6. 
Lemma 3 is now proved. 0 
As an easy consequence of Lemma 3, we obtain the following corollary: 
Corollary. (1) Every vertex of a critically a -imperfect graph G is contained in at 
least a(G) (pairwise distinct) stability systems of G. 
(2) A critically a-imperfect graph G has at least a(G)* 
w ( G ) +  1 (pairwise 
distinct) stability systems. 
For every vertex x EX, we define the following sets: 
X' = {xi I x 1  E ( X  - {x}) and x'pcx}, 
xz 
= {xz I xz E ( X  - {x}) and x2pcx}, 
and the corresponding graphs: 
Gtx)= [XI],, G : x ) = [ X 2 ] ~ .  
Lemma 4. The graph Gtx1 is perfectly ( a ( G ) -  1)-partitionable, and each clique 
of any perfect ( a ( G ) -  1)-partition of Gf,) contains at least two vertices. 
Proof. Lemma 3, part ( 1 )  yields 

Lt 
xi= U x:,xt#0, x:nx:=0, 
i - I  
and the graphs [Xl], are cliques ( i # j ;  i, j = 1,2,. . .,a). 
From Lemma 3, part (2) we obtain a(CiX))b 
a ( G ) -  1. If there is a stability 
system S' of Gll, with 1 S' I > a ( G ) -  1 then, because of x&X', the set S' U { x }  is 
a stability system of G with I S' U { X I  1 > a(G), contradicting the definition of a 
stability system. Consequently, a(Gi,))= a(G)- 1; the graph Glx, being a 
proper subgraph of G, property (B) (see Definition 6) implies 
e(G{x)) = a(Cf,)). 
In order to establish the second part of the assertion, we first prove 
a ([XI 
- { x ' } ] ~ )  
= (Y ( G )  - 1 for every x I E XI. 
(**I 
By virtue of (*), X I  belongs to precisely one of the sets Xl, say X I  E X:i; from 
part (2) of Lemma 3 we obtain 
(~([x' 
- Xii],.) = (Y(G)- 1. 
Now, 
a([X' -xli]c)s 
Cr([X'-{x'}]c) 
(Y([X']G) 
= a(C[,,)= a ( G ) -  1, 
hence (**) is valid. 
Let us assume that there is a perfect ( a ( C )  - lkpartition of G:x) such that one 
of the cliques of this partition consists of a single vertex, say X I .  Then the graph 
[ X ' - { X ' } ] ~  
is covered by a(G)-2 cliques,.thus ( Y ( [ X ' - { X ' ) ] ~ ) ~ ( Y ( G ) - ~ ,  
contradicting (**). 
Lemma 4 is now proved. 0 
Corollary 1. Let G be a critically a-imperfect graph, let x be an arbitrary vertex of 
G, and denote the valency of x with respect to G.by r ( x ;  G). Then 
r ( x ; G ) s  n(G)-2a(G)+ 1. 
(14) 
Proof. By Lemma 4, I X1 
I k 2a ( G )  - 2, thus 
r(x; C ) =  ) X z (  
= n(G)-IX'I- 1 S n(G)-2a(C)+ 1. 0 
Corollary 2. For any critically a-imperfect graph G, 
n(G) 2 2a(G) + 20(G)-3. 

Structure of perfect graphs 
135 
Proof. Together with G, its complement G is also critically a-imperfect (see 
Theorem 8), hence, by Lemma 4, 
J X' 13 2a(G)- 2 = 2w(G) - 2; 
(***I 
thus 
n(G) = 1 X' 1 + I X2 
I + 1 3 2a (G) 
+ 2 w ( G )  - 3. 0 
Remark. We shall show (Theorem 11) that equality holds in (15) if and only if the 
critically a-imperfect graph G is an odd circuit LZq+' or the complement LZq+' 
of 
an odd circuit (q 3 2). To prove this, we need some more results. 
Lemma 5. Every vertex x of a critically a-imperfect graph G is contained in an 
odd k-circuit (k 3 5) L of G such that all chords of L (if there are any) are issuing 
from x. 
Proof. Again we consider an arbitrary vertex x of G and the corresponding 
subgraphs GiI) = [X'], 
and G:=) = [X'],. 
By Lemma 4, a(GtX)) 
= a(G)- 1. 
Let X2 
be a subset of X2 
satisfying 
a([X' U PI,) = a ( G )  - 1 
and having, under this condition, the maximum number of vertices: 
a([xl u X' u { y ) ] , )  = .(G) 
for every y E (x' - P). 
(16) 
[X' U PI, is a proper subgraph of G (since x e  X' U X2), 
therefore, because of 
property (B) (see Definition 6), 
The set X 2  - X2 
does not span a clique in G for, otherwise, [(X'- X') U {x}], 
would be a clique and using (17) we should obtain O(G) = a ( G ) ,  contradicting 
property (A) (see Definition 6) of critically a-imperfect graphs. From this and 
from (16) we conclude that there exist two vertices XI, x' E ( X 2  - X') such that 
xpc{x1,xZ1, x'pcx2, 
(18) 
a ([XI U X2 
U {x '}Ic) 
= a (G ) (j = 1,2). 
(19) 
and 
Now we omit all edges of G which connect x with vertices of 
and denote the 
remaining graph by H. 
We have a ( H )  = a ( G )  since a stability system of H that does not contain x is 
a stability system of G as well, and a stability system of H that contains x has, 

136 
E. Olaru, H. Sachs 
because of (17) and because of x p H ( X z  - X') and xpH(X' U X'), exactly a ( G )  
vertices. 
From (18) and (19) we obtain just those conditions formulated in Theorem 6 
(with respect to H), thus H contains an odd hole L passing through x. To such a 
hole of H there corresponds in G an odd k-circuit (k 2 5) passing through x and 
having the property that all its chords (if it has any) issue from x (namely, these 
chords are precisely those edges of G which connect x with those vertices of X2 
that lie on L). x, having been chosen arbitrarily, Lemma 5 is now proved. 
Remark. The following proposition (see [13], Theorem 10) is also valid: 
Proposition. Every edge (x, y )  of a critically a-imperfect graph is contained in an 
odd k-circuit ( k  2 5 )  all of whose chords (if there are any) are issuing from x, 
and, simultaneously, in an odd k'-circuit ( k ' 3  5) all of whose chords (if there are 
any) are issuing from y. 
Corollary 1. If the critically a-imperfect graph G is not an odd circuit Lk (k 3 5) 
then every vertex x of G is contained in a 3-circuit. 0 
Proof. According to Lemma 5, every vertex x of the critically a-imperfect graph 
G lies on an odd circuit L of length 2 5  which, except for those (possibly 
existing) chords issuing from x, has no chords. 
The critically a-imperfect graph G is not an odd k-circuit with k 3 5, hence 
the vertex set of L spans a subgraph of G which contains at least one 3-circuit 
(since, otherwise, G would contain an odd hole as a proper subgraph). 
Evidently, x belongs to this 3-circuit. 
Corollary 2. If every odd k-circuit (k 3 5 )  of a graph H has a pair of crossing 
chords then H is a-perfect. 
Proof. Suppose H were not a-perfect. Then, by Lemma 1, H contains a 
critically a-imperfect subgraph G. Lemma 5 implies that every vertex of G lies 
on a circuit of length 2 5  without crossing chords. This contradicts the 
hypothesis of the corollary. 0 
Remark. In 1968 (see [16]), we conjectured that the existence of two chords in 
every odd k-circuit (k 2.5) of H implies the perfectness of H. 
In 1976, Olaru [17] proved the following statement: 
If a graph H satisfies the following conditions: 

Structure of perfect graphs 
(i) every odd k-circuit (k 3 5 )  of H has at least two chords, 
(ii) no 5-circuit of H has exactly one pair of crossing chords, 
then H is a-perfect. 
137 
Only recently, Markosjan and Karapetjan (see also [12]) proved the above- 
mentioned conjecture: 
Theorem 9 (Olaru, Markosjan and Karapetjan). If every odd k-circuit ( k  2 5 )  of 
a graph H has at least rwo chords then H is perfect. 
Theorem 10. A critically a-imperfect graph G is 
(1) an odd circuit L2k+l (k 3 2) if and only if o(G) 
= 2; 
(2) the complement of an odd circuit L Z k + l  (k 3 2) if and only if a ( G )  = 2. 
Proof. (l)(a) First we show: An odd circuit L 2 k + )  ( k  2 2 )  is critically a- 
imperfect. 
For every vertex x of L Z k + l ,  the graph L2k+l 
- x is bipartite and, therefore, 
a-perfect. 
L2k+l itself, however, is not a-perfect for n(LZk+l) 
= 2k + 1, 
a ( ( L Z k + l )  = k, and @ ( L Z k + l )  = 2 imply 8(L2k+l) > a (L2k+l); thus L 2 k + l  is critically 
a -imperfect. 
(b) Now we assume that G is critically a-imperfect with o(G) 
= 2. If G is not 
an odd circuit then each vertex of G lies on a 3-circuit (see Corollary 1 of Lemma 
5), contradicting w ( G )  = 2; thus G must be an odd circuit. 
(2)(a) First we show: The complement L Z k + l  of an odd circuit L Z k + l  (k 2 2) is 
critically a -imperfect. 
For every vertex x of L Z k + l ,  the graph i 2 k + l -  x is the complement of a 
bipartite graph; therefore, each proper subgraph of 
L 2 k + I  is perfectly a -  
partitionable (and hence a -perfect). &k+I 
itself, however, is nor a-perfect for 
8 ( L Z k + I )  > a ( L 2 k + I ) ;  thus E 2 k + l  is critically a-imperfect. 
(b) Now we assume that G is critically a-imperfect with a ( G )  = 2. Suppose 
that the complement 
If G contains an odd circuit, but no odd hole, then it must contain a 3-circuit; 
but that contradicts the hypothesis o(c) 
= a ( G )  = 2. So G cannot contain an 
odd circuit, i.e., c is a bipartite graph. But that is impossible since it would imply 
that G is a-perfect. 
Consequently, G must contain an odd hole; thus G contains the complement 
i 2 k + l  (k 2 2) of an odd circuit L2k+l as a subgraph. Since iZn+, 
is not perfectly 
a-partitionable this is possible only if G = E Z k + l .  
n(LZk+1)=2k 
1, 
( Y ( L 2 k + 1 ) = 2 ,  
and 
@ ( L 2 k + I ) = ( Y ( L Z k + l ) =  
k 
imply that 
of G does not contain an odd hole. 
Theorem 10 is now proved. 0 

138 
E. Olaru, H. Sack 
Corollary. A graph H with w ( H )  = 2 or a (H) 
= 2 is a-perfect if and only if 
neither H nor H contains an odd hole. 
Proof. The assertion follows from Lemma 1 and Theorem 10. 0 
Now we are able to prove the following theorem: 
Theorem 11. A critically a-imperfect graph G is an odd circuit LZk+, 
( k  2 2), or 
the complement of such a circuit, if and only if 
n(G) = 2 a ( G ) +  2 w ( G )  - 3. 
(20) 
(See also the Remark following Corollary 2 of Lemma 4.) 
Proof. (a) For an odd circuit L Z k + l  (k 3 2), clearly, 
n(Lzk+i)=2k + 1, (Y(Lzk+i)= k 
and O(Lzk+i)=2, 
so L z k + l  satisfies (20). 
If a graph G satisfies (20) then its complement c, too, satisfies (20), for 
a(G)= w ( G )  and w ( G ) =  a(C). 
(b) If G is a critically a-imperfect graph satisfying (20) then, by virtue of 
Theorem 8, n(G) = a ( G )  * w ( C )  + 1, therefore a (G) * o ( G )  + 1 = 2 a  ( C )  + 
2 w ( G ) - 3 ,  implying w ( C ) = 2  or a ( G ) = 2 .  The assertion now follows from 
Theorem 10. 0 
Let G = (X, 
U), Y C X; 
we define 
r , ( Y ) = { x  I x  EX, x$Z Y, and there is a y E Y with (x,y)E U}; 
we write Tc(y) instead of TC({y}). 
Theorem 12. A critically a -imperfect graph G = (X, U )  or its complement G is an 
odd circuit L Z k + l  ( k  3 2) if and only if for every maximum clique C of G (i.e., for 
every clique C = [Q], with I Q I = w ( C ) )  
I rc(Q)ls 
w ( G ) +  1. 
(21) 
Proof. If the critically a-imperfect graph G or its complement 
circuit L 2 k + l  (k 
is an odd 
2 )  then (21) clearly holds. 
We shall show that (21) implies 
n ( C )  = 2 a ( G )  + 2 w ( G ) -  3; 
the assertion then follows from Theorem 11. 0 

Structure of perfect graphs 
139 
From Lemma 4 and the Corollary of Theorem 8 we derive the following 
statement: 
For every vertex x EX, 
(Y([X2]c)= 
a ( G ) - l ,  
i.e., w([X'],) = w(G)- 1, where X 2  = Tc(x). 
From this it follows that every vertex x of G is contained in a maximum 
clique, say C = C(x) = [a],. 
We consider two cases. 
(I) There is a vertex y E Q, y #  x such that 
([XI U {y)]c) = a (G) = 1, 
where XI = I'c(x). 
imperfect graphs (see Definition 6) yields 
[X'U{y}],, being a proper subgraph of G, property (B) of critically a- 
O([X' U{y}]c)= a(G)-l= e([X'],). 
Using Lemma 4 we conclude from this relation that there exist in X' at least two 
vertices which in G are adjacent to y. 
By hypothesis, 
I rc(Q)Is 
w ( G ) +  1, 
implying 
I rc (x)- (Q -{x))I 
I Tc (Q) I - 2  
w(G) - 1, 
thus 
I X 2  I = I TC(X) 
I = I Tc(x)-(Q -{XI) I + I Q - { x }  1 
2 w ( G ) - 2 ,  
and because of Corollary 2 of Lemma 4 (see (***)), 
I X21 = 2 w ( G ) - 2 .  
(11) For every vertex y E Q, we have a ([XI U { y ) ] ~ )  
= a (G). 
Let y E Q, y #  x. By Lemma 4 (see (**)), 
(Y ([ x2 
- { x '}I c ) = (Y (G ) - 1 
or, equivalently, 
~ ( [ X ' - { X ~ } ] ~ ) =  
w(G)-1 
for every x 2 E X 2 .  
This implies the existence of a maximum clique C' = [ Q']c with x E Q', y $Z Q '. 

140 
E. Olaru, H. Sack 
For Q’ either case (I) holds (then 1 X z  I = 2 w ( G )  - 2) or case (11) holds, i.e., 
&([XI U {y‘}],) = a(G) for every y ’  E 0‘. 
Now, in Q’ - { x }  there is a vertex z such that ( y ,  z )  fZ U for, otherwise, 
Q’U{y} would span a clique in G with w ( G ) +  1 vertices, contradicting the 
definition of w ( G ) .  The edges (x, y )  and (x, z )  with ( y ,  z )  U are a-critical with 
respect to G ;  consequently, because of Theorem 6, G is an odd circuit L 2 k + ,  
(k 3 2) and thus, clearly, 
1 X 2 1 = 2 w ( G )  - 2. 
So, in every case, we have obtained 
IX21=2w(G)-2 
1 x’ 
I = 2 w ( G )  - 2  = 2 a ( G ) - 2 .  
and, analogously, 
Hence, 
n ( C )  = I Xi 
I + 1 X21+ 1 = 2 w ( G ) + 2 a ( G ) - 3 ,  
proving Theorem 12. 0 
Remark. Clearly, a critically a -imperfect graph G is a-non-partitionable (see 
proof of Theorem 7); this, in connection with Theorem 1, implies: 
(i) G is connected, 
(ii) no separating vertex set of G can span a clique in G. 
Theorem 13. Let T be a separating vertex set of the critically a-imperfect graph 
C = (X, U )  such that a (C - T )  = a ( C ) .  Then T spans a connected subgraph in 
the complement G of G. 
Proof. Assume that [TIt: is disconnected. Then T can be partitioned into two 
parts A and B such that 
A # 0 ,  B#O, A n B = 0 ,  A U B = T  and ApcB. 
Since, by hypothesis, C - T is disconnected, it can be decomposed into two 
subgraphs GI = [ X , ] ,  and G2 = [X2IG such that 
X ,  # 0, X 2  # 0, X ,  f l  X 2  = 0, X ,  U X ,  = X - T and X,P,X,. 

Structure of perfect graphs 
141 
B # 0 implies that [XI U X2 U AIc is a proper subgraph of G ; therefore, because 
of property (B) of G (see Definition 6), 
8 ([Xi U Xz U A ]G) = ([Xi U X2 U A ] G  ) = (G). 
(23) 
Let 
denote a perfect a-partition of [Xi U X ,  U A]G and let, for i = 1,2, A, 
be the set of all those vertices of A contained in parts (ie., cliques) of the 
partition Z which also contain at least one vertex of X,. Then A, n A, = 0 and 
A1 U A, = A since two vertices x1 E XI and x2 E Xz 
cannot be contained in the 
same clique, and in Z there is no clique all of whose vertices belong to A 
(because of (22) and (23)). It is easily seen that 
a([X UA,],)=a(G,) 
(i =1,2). 
(24) 
By means of a perfect a -partition of [XI U Xz U BIG we define in an analogous 
manner the sets B1 and B2 satisfying: 
B~ n B, = 0, 
B, u = B, 
a ( [ X  UB,].)=a(G,) (i=l,2). 
(25) 
Further, we prove 
a([Xi UAi UB,]G)=a(Gi) (i =1,2). 
Let S be a stability system of [Xl U A, U B1IG. If S C X ,  then, clearly, (26) is 
true (for i = 1); if S n A, # 0, then S n B, = 0 since AlpcBl (because of ApGB); 
analogously, if S n B, # 0, then S n A ,  = 0. 
The subscript 1 can be replaced by 2, and we conclude from (24) and (25) that 
(26) is valid in every case. 
Because of property (B) of G (see Definition 6), we obtain from (26) and (22): 
8(G) = O([Xi U X2 U A U BIG) 
e([x, u A, u B , I ~ ) +  
e([x2 u A, u ~
~
1
~
)
 
= a([Xi U AI U Bi]c)+ (~([xz 
U A2U & ] G )  
= a(G,) + a(G2) = (Y(G), 
contradicting property (A) (see Definition 6) of critically (Y -imperfect graphs. 
Theorem 13 is now proved. 17 
Theorem 13 has some important consequences. As a first conclusion, we 
obtain the following corollary: 
Corollary 1. Let G be a critically a-imperfect graph and let [Q], be an arbitrary 
clique of G. Then G - Q is connected. 

142 
E. Olaru, H. Sack 
Proof. We may assume the clique [QIG to be maximal, so I Q 13 2. We have 
a(G - Q) = a(G). The graph [ Q ] B  consists of isolated vertices only, hence, by 
Theorem 13, Q cannot separate G. 0 
Remark. Corollary 1 of Theorem 13 can be used to immediately prove the 
following well-known theorem (see also [13], Theorem 1 (p. 150) and Folgerung 
aus Satz 4 (p. 153)): 
Theorem (Hajnal and Suriinyi [9], Berge [4]). Every triangulated graph is perfect. 
Let X' denote a separating vertex set of G = (X, U )  and let C = [ YIG be a 
connected component of [X - XrlG. If in G every vertex of X' is adjacent to at 
least one vertex of Y then C is called a normal component with respect to X'; if 
[ X  - X'Ic has at least two components which are normal with respect to X' 
then 
X' is called a normal separating vertex set of G. 
Corollary 2. Let G = (X, U )  be a critically a-imperfect graph and let x be an 
arbitrary vertex of G. Then 
(a) the graph Glxl = [ X ' ] ,  is connected, and 
(b) XI is a normal separating vertex set of G. 
Proof. (a) Clearly, for every x E X the vertex set X' = r c ( x )  is a separating 
vertex set of the critically a-imperfect graph G. Further, a(G - X') = 
a ( [ X 2  U { x } ] ~ )  = a(G) since every vertex of the critically a-imperfect graph 
is contained in at least a(G) stability systeps of c (see Corollary to Lemma 3). 
The assertion now follows from Theorem 13. 
(b) Proposition (a) applied to G says that [X'], is connected: thus X' 
separates G, and G -X' 
has precisely two connected components, namely, 
[X2]a and the isolated vertex x. Since, by definition, xpc;-X' all we have to show is 
that in C every vertex of XI is adjacent to some vertex of X 2 .  
Assume that there is a vertex x ' E X '  which, in G, is not adjacent to any 
vertex of X2. 
Then, in G, x is adjacent to every neighbour of 
X I ,  i.e., the graph 
GixlJ = [Tc(x')lC is disconnected, contradicting (a). 0 
It is convenient to restate Corollary 2 of Theorem 13 in the following 
equivalent form. 
Corollary 2'. For every vertex x of a critically a-imperfect graph G the following 
statements hold : 
(a') the graph Gixl is connected, 
(b') the set X z  of the neighbours of x is a normal separating vertex set of G. 

Structure of perfect graphs 
143 
Remark 1. Corollaries 1 and 2 of Theorem 13 can be proved without using 
LovBsz’ theorem (see Theorem 5). 
Remark 2. Proposition (a) of Corollary 2 of Theorem 13 can be used to prove 
Dilworth’s theorem (see [13], Th. 3 (p. 150 and p. 158)): 
Theorem (Dilworth [S]). Every transitively orientable graph (‘comparability 
graph’) is a -perfect. 
Proposition (b) of the same corollary yields a simple proof of Gallai’s theorem 
(see [13], Th. 2 (p. 150 and pp. 164-165)): 
Theorem (Gallai [7]). Every graph G having the property that each of its odd 
circuits (of length 2 5) is triangulated by some of its chords is a-perfect. 
Concluding Remark. The strong version of the Perfect Graph Conjecture (see 
Conjecture 1) is equivalent to the following: 
Conjecture 1’. The only critically a-imperfect graphs are the odd circuits of 
length 3 5  and their complements. 
By virtue of Theorem 10, Conjecture 1’ can also be given the following 
equivalent formulation: 
Conjecture 1”. The only critically a-imperfect graphs G with a(G)> 3 are the 
odd circuits of length 2 7 .  
Therefore, it remains a central task to investigate the structure of critically 
a -imperfect graphs. 
In this direction, a somewhat weaker result obtained by Olaru in 1969 (see 
[13], Satz 14 and Folgerung (p. 169) or [17], Satz 3.1 (p. 99)) should be 
mentioned: 
An a-imperfect graph G = (X, V) which has the property that G - u is 
a-perfect for every edge u E U is called edge-critically a-imperfect. Clearly, an 
edge-critically a -imperfect graph without isolated vertices is (vertex-) critically 
a -imperfect. 
Theorem 14. Every edge-critically a-imperfect graph consists of an odd circuit of 
length 2 5 and, possibly, some additional isolated vertices. 

144 
E. Oluru. H. Suchs 
References 
[ I ]  C. Bergc, Graphes et Hypergraphcs (Dunod, Paris, 1970). 
121 C. Berge, Firbung von Graphen deren s8mtliche bzw. deren ungerade Kreise starr sind 
[3] C. Berge, Une application de la theorie des graphes a un problkme de codage, in: Caianello. ed.. 
[4] C. Berge, Some classes of perfect graphs, in: Graph Theory and Theoretical Physics, Chapter 5 
[ S ]  R.P. Dilworth, A decomposition theorem for partially ordered sets, Ann. Math. 51 (1950) 161. 
[h] D.R. Fulkerson. Anti-blocking polyhedra, J. Comb. Theory 12 (1972) 50-71. 
171 T. Gallai. Graphen init triangulicrbaren ungeraden Vielecken, Magyar Tud. Akad. Mat. Kutat6 
[ X I  P.C. Gilmore and A.J. Hoffman, A characterization of comparability graphs and of interval 
[9] A. Hajnal and J. Suranyi. IJber die Aufltisung von Graphen in vollstandige Teilgraphen, Ann. 
(Zusamrnenfassung). Wiss. Z. Martin-Luther-Univ. Halle 10 (1961) 114-1 15. 
Automata Theory (Academic Press. New York-London. 1966) 25-34, 
(Academic Press, London-New York, 1967) 355-166. 
Int. K(izl. 7A (1962) 3-37. 
graphs, Canad. J. Math. I6 (I‘J64) 53Y. 
Univ. Sci. Budapest I (19%) 113. 
[lo] L. Lovasz. A characterization of perfect graphs, J. Comb. Theory 13 (1972) 95-98, 
[ I ] ]  L. Lovasz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
(121 S.E. Markosjan and I.A. Karapetjan, Perfect graphs (in Russian), Akad. Nauk Armjan. SSR 
[ 131 E. Olaru, Beitrage m r  Thcorie der perfekten Graphen, Elektronische Informationsverar- 
[14] E. Olaru. Zur Charakterisierung perfekter Graphen, EIK 9 (1973) 543-548. 
[IS] E. Olaru, Uber perfekte und kritisch imperfekte Graphen, Ann. St. Univ. Iagi 9 (1973) 477-486. 
[I61 E. Olaru. Uber die Uberdeckung von Graphen init Cliquen, Wiss. Z. TH Ilmenau 15 (1969) 
117) E. Olaru. Zur Theorie dcr perfekten Graphen, J. Comb. Theory, Ser. B 23 (1977) 94-105. 
[IS] H. Sachs, On the Berge conjecture concerning perfect graphs, in: Cornbinatorial Structures and 
Their Applications (Gordon and Breach. New York. 1970) 377-384. 
[ 191 W. Wessel, Some color-critical equivalents of the strong perfect graph conjecture, in: Beitrage 
zur Graphentheorie und deren Anwendungen (Proc. Int. Koll. “Graphen theorie und deren 
Anwendungen”. Oberhof (DDR), I(kl6 April 1Y77) (Math. Gcs. DDR, TH Ilmenau, 1977) 
30(k309. 
253-267 (this volume, pp. 29-42). 
Dokl. 63 (1976) 292-296. 
beitung und Kybernetik (EIK) S (1972) 147-172. 
115-120. 

Annals of Discrete Mathematics 21 (1984) 145-148 
@ Elsevier Science Publishers B.V. 
MEYNIEL’S GRAPHS ARE STRONGLY PERFECT 
G. RAVINDRA* 
ER 175 Combinatoire, Uniuersite‘ Pierre el Marie Curie, UER 48, 75230 Paris, France 
Meyniel (see article this volume, pp. 115-119) proved that a graph is perfect whenever every 
odd cycle of length at least five has at least two chords. This paper strengthens this result by 
proving that every graph satisfying Meyniel’s condition is strongly perfect (i.e., each of its 
induced subgraphs H contains a stable set which meets all the maximal cliques in H). 
The graph-theoretic notions used here are those of [3]. A graph is called 
perfect if the chromatic number of each of its induced subgraphs H equals the 
number of vertices in the largest clique of H ;  it is called strongly perfect [4] if 
each of its induced subgraphs H contains a stable set which meets all the 
maximal cliques in H. (Here, as usual, ‘maximal’ is meant with respect to 
set-inclusion.) It is easy to show that every strongly perfect graph is perfect. 
Meyniel [5] proved that a graph is perfect whenever each of its odd cycles of 
length at least five has at least two chords. The purpose of this paper is to 
strengthen Meyniel’s result as follows: 
Theorem. If every odd cycle of length at least ,five in a graph G has at least two 
chords then G is strongly perfect. 
The following useful observation has been made by Meyniel. 
Lemma 1. If a graph G = (V, E )  contains an odd cycle [xo, xl,. . . , xzr, xd] such 
that the path [x,, xz, . . . , xZf] is chordless and xo is nonadjacent to at least one x k ,  
then G contains an odd cycle of length at least five with at most one chord. 
Proof. If x o x z E E  then consider the largest i such that xo is adjacent to 
x1x2. - ax, and the smallest j such that j > i and xoxJ E E :  the cycle 
[xo, x,, . . . , x,, xo] has no chords, the cycle [xo, x,-~, x,, . . . , x,] has precisely one 
chord, and one of these two cycles is odd. If xoxz !i! 
E then consider the smallest 
even j such that xoxJ E E and the largest i such that i < j - 2 and xox, E E :  the 
odd cycle [xo,x,, ..., x,,xo] has at most one chord. 0 
* Current address: Regional College of Education, Ajmer 305 004, India. 
145 

146 
G. Ravindra 
By a starter in a graph G, we shall mean a cycle wu0ul * .  . UkW such that 
(i) uo is adjacent to none of the vertices u2, u3,. . . , uk, 
(ii) w is not adjacent to uI, 
(iii) some stable set S, containing uI and u k ,  meets all the maximal cliques in 
G - uO. 
Lemma 2. lf n graph contains a starter then it contains an odd cycle of length at 
least five with at most one chord. 
Proof. We shall present an informal description of an efficient algorithm which, 
given any starter in G = (V, E), finds the desired cycle. No generality is lost by 
assuming that 
(iv) [ ul, u z , .  . . , u k ,  w ]  is the shortest path from u1 to w with the next-to-last 
vertex in S and all the vertices except the first and the last nonadjacent to uo. 
In particular, (iv) implies that 
(v) the path [ul, u2,. . . , uk] has no chords. 
Next, we may assume that 
(vi) every u, adjacent to w has an even subscript r ;  
otherwise the desired cycle can be found at once by applying Lemma 1 to the 
odd cycle WUo * . U,W. 
Write y E S" if y E S and y is adjacent to two consecutive vertices u,, u , + ~  on 
the path [uO, u I , .  . . , u k ] .  We may assume that 
(vii) no y E S" is adjacent to uo; 
otherwise the desired cycle can be found at once by applying Lemma 1 to any 
odd cycle [yuo-. u,y]. Now it follows that 
otherwise (iv) would be contradicted by uoul * * . u,yw such that i is the smallest 
subscript with yo, E E. Next, we may assume that 
otherwise the desired cycle is [w, u,, . . . , u,, y, u , + ~ ,  . . . , u,, w ]  with r standing for 
the largest subscript such that r < j, wu, E E and s standing for the smallest 
subscript such that s 3 j + 1, wu, E E. Now it follows that 
(x) each y E S" is adjacent to precisely three vertices 
u,, u,+] on the path 
otherwise (iv) would be contradicted by uI 
- Dk such that r is the 
smallest subscript with yu, E E and s is the largest subscript with yu, E E. 
u, and u,+~, the substitution 
of y for u, in the original starter yields a new starter with a smaller S*. Repeating 
this operation as many times as possible, we eventually obtain a starter 
wVo& * 
4 
4 Vkw satisfying (iv) and having an empty S*. Since k is even by (vi) and 
since V,, 6k E S, there is an edge fi,Gf+l with j > 0 and neither endpoint in S (it 
(viii) no y E S" is adjacent to w ;  
(ix) each y E S* is adjacent to at least three vertices on the path u0ul 
- Uk ; 
[ U h  01,. . . , u t ] ;  
. u,yu, 
Now observe that, for any y E S* adjacent to 

Meyniel's graphs are strongly perfect 
147 
suffices to set j = i - 2 with i being the smallest even subscript such that 17, E S ) .  
Let C be any maximal clique extending 6,17,+~ in G - uo. Since S* is empty, C is 
disjoint from S, a contradiction. 
Proof of the Theorem. We shall present an informal description of an efficient 
algorithm which, given any graph G, finds either a starter in some induced 
subgraph of G or else a stable set meetirlg all the maximal cliques in G. The set 
of neighbours of a vertex u in G will be denoted by N(u). First, choose a vertex t 
and a component H of G - t - N ( t )  so that the number of vertices in H is 
minimized (over all choices of t and H). If H = 0 then set S = { t } ;  otherwise 
choose a vertex uo in H and denote by F that component of G - uo - N(uo) 
which contains t. (For future reference, note that each vertex x in H - uo - N(uo) 
belongs to F :  otherwise the component of G - uo - N(uo) containing x would be 
fully contained in H - uo, and so it would have fewer vertices than H.) Apply the 
algorithm recursively to G - uo. When a stable set S meeting all the maximal 
cliques in G - vo is returned, search for vertices u l ,  u2 in G - uo such that 
uI E N(uo) fl S 
and 
v2 E N(vl) fl F. 
If such vertices cannot be found then the stable set ( S  - N(uo)) U {uo} meets all 
the maximal cliques in G. (To verify this claim, assume that some maximal clique 
Q in G is disjoint from ( S  - N(uo)) U {uo}. Since uoE? Q, there is a vertex 
x E Q - N(uo) and there is a vertex uI E Q fl S. Of course, u1 E N(uo). If 
u1 E N ( t )  then we may set u2 = t ;  otherwise u1 E H and so x E H U N(t), in 
which case we may set u2 = x.) If uI and u2 are present, search for vertices w and 
z, distinct from uo, u l ,  u2 and each other, such that 
0 
w E N(uo) - N(ul) and z E N ( w )  fl F fl 
S. 
If such vertices cannot be found then S meets all the maximal cliques in G. (To 
verify this claim, assume that some maximal clique Q in G is disjoint from S. 
Since u1 E S, at least one vertex w E Q is nonadjacent to uI. Note that uo E Q, 
and so either (Q - vo) fl H# P, or else Q - v o c  N(t). Let Q" be any maximal 
clique in G - uo which extends Q - uo in the first case and (Q - uo) U { t }  in the 
second case. In either case, we have Q * 
F. The vertex z common to Q * and S must be outside N(uo): otherwise Q could 
have been extended to Q U {z}.) If w and z are present then any path from uz to 
z in F yields a starter with v k  = z. 0 
H U N(t) U {t}, and so Q* - N(uo) 
Acknowledgements 
theorem and rendering the presentation more lucid. 
The author thanks Prof. V. Chvatal for simplifying the proof of the main 
The author is also grateful to Prof. Claude Berge for fruitful discussions. 

148 
G. Ravindra 
References 
[ 11 C. Berge, Farbung von Graphen, deren samtliche bzw. deren ungerede Kreise starr sind, Wiss. 2. 
[2] C. Berge, Sur une conjecture relative au probleme des codes optimaux. comm. t 3 h e  assemblee 
[3] C. Eierge, Graphs and Hypergaphs (North-Holland, Amsterdam, 1973). 
(41 C. Berge and P. Duchet, Strongly perfect graphs (this volume, pp. 57-61). 
[5] H. Meyniel, On the Perfect Graph Conjecture, Discrete Math. 16 (1976) 339-342. 
Martin-Luther-Univ. Halle-Wittenberg 114 (1961). 
gtnerale de I’URSI, Tokyo (1962). 

Annals of Discrete Mathematics 21 (1984) 140-157 
@ Elsevier Science Publishers B.V. 
THE VALIDITY OF THE PERFECT GRAPH CONJECTURE FOR 
K,-FREE GRAPHS 
Alan TUCKER 
Department of Applied Mathematics, State University of New York. Stony Brook, N Y  11 794, 
USA 
1. Introduction 
This paper builds on results based on D.R. Fulkerson's antiblocking polyhedra 
approach to perfect graphs to obtain information about critical perfect graphs 
and related clique-generated graphs. Then we prove that the Perfect Graph 
Conjecture is valid for 3-chromatic graphs. 
Fulkerson felt that a proof of the Perfect Graph Theorem would involve 
exactly the kind of duality that existed in his theory of blocking and antiblocking 
polyhedra [S], [6]. He proved what he called the Pluperfect Graph Theorem [7]. 
Lov6sz [8] independently developed some of the antiblocking theory, stated in 
hypergraph terms, and showed that with a fairly simple lemma, the Pluperfect 
Graph Theorem implied the Perfect Graph Theorem. Lovkz [Y] obtained a 
related result (Theorem 1 below) with a valuable implication about critical 
perfect graphs. A critical perfect graph, p-critical for short, is an imperfect graph 
all of whose proper induced subgraphs are perfect. The major results about 
p-critical graphs, especially those of Padberg [lo], are based on an antiblocking 
polyhedra approach (also see [3]). 
Theorem 1 [Y]. A graph G with n vertices is perfect if and only if a ( C ) w ( G )  
for all induced subgraphs G' of G. Thus a p-critical graph G has ti = 
a(G)w(G)+ 1 vertices. 
11. 
Theorem 2 [lo]. A p-critical graph with n uertices has exactly 11 cliques of size 
w ( G )  with each vertex in w ( G )  maximal cliques and has exactly ri stable sets of 
size a ( G )  with each vertex in a ( G )  maximal stable sets. Each maximal clique 
intersects all but one maximal stable sets, and vice versa. 
We define a graph G to be pseudo-p-critical if 
(a) G has n = a(G)w(G)+ 1 vertices; 
149 

150 
A. Tucker 
(b) for all x in G, a (G - x )  = B(G - x) and w ( G  - x )  = y(G - x), 
(c) G has the properties listed in Theorem 2. 
Clearly a p-critical graph is pseudo-p-critical. 
2. Unique covers and connectivity in G - x 
Throughout this section, we assume that G = (V, A )  is a pseudo-p-critical 
graph with a = a(G), w = w ( G ) ,  and n = I  V (  = a w  + 1. Then for any x E V, 
G - x  is covered by a cliques of size o and also by w stable sets of size a (by 
property (b)). If C is one of the a cliques in the cover of G - x ,  then 
a(G - x - C )  = a - 1 and so if Z is the maximal stable set such that I f l  C = 0, 
then x E Z. On the other hand, for each x E Z, one clique of the a clique cover of 
G - x will not intersect I; so C must be in all those clique covers. Further, C 
cannot be in any other clique cover of G - y for ye Z, or else C would have to 
intersect f just as it intersects all maximal independent sets in G - y. A similar 
argument applies to Z's appearances in stable set covers of G - x. So we have 
proved the following theorem: 
Theorem 3. I f  G is pseudo-p-critical and I and C are an a-stable set and an 
w-clique, respectively, of G with Z fl C = 0, then C is in an a clique cover of G - x 
if and only if x E Z, and Z is in an w stable set cover of G - x if and only if x E C. 
CoroUary 3.1. Let G be pseudo-p-critical and x be any vertex in G. Then the w 
stable set cover (w-coloring) and the a clique cover of G - x are unique. 
Corollary 3.2. Let G be pseudo-p-critical, x be any vertex in G, 
and I,, Zz be two 
color classes in a w-coloring of G - x. Then the subgraph induced by Z, f l  I2 is 
connected. 
Proof. If not connected, the color classes could be interchanged in one compo- 
nent to get a different coloring, violating Corollary 3.1. 0 
Corollary 3.3. Let G be pseudo-p-critical and C be a maximal clique of G. Then 
as y ranges over the w different vertices in C, the clique covers of the G - y contain 
all the other n - 1 ( = a w )  maximal cliques. 
Proof. If the same clique was in covers for different y's, then by Theorem 3 the 
y's must be in a (maximal) stable set. 17 
Let N ( x )  denote the set of x and the vertices adjacent to x. 

The validity of the Perfect Graph Conjecture for K4-free graphs 
151 
Theorem 4. Let G be pseudo-p-critical and x be any vertex in G. Then G - N ( x )  
is connected. 
Proof. Suppose G - N ( x )  is not connected. Let GI be one component of 
G - N ( x )  and let Gz be the rest of G - N(x). Let C1 be a clique of the a clique 
cover of G - x and which is contained in GI U N(x). Let Cz be defined similarly 
for Gz U N ( x ) .  Let a, = a(Gi), for i = 1,2. Clearly, a = (G - N ( x ) ) +  1 = 
al+aZ+1, and a(G-C,)=a, for i = 1 , 2 .  This implies a(G,-C,)=a,, for 
i = 1,2. But 
then 
a -1 = a(G - C1- Cz)= a((G - N ( x ) ) -  C1 -G)+ 1 = 
a (GI - C,) + a (GZ - Cz)+ 1 = a1 + az + 1 = a, a contradiction. 0 
3. Maximal clique graphs 
Let us define M ( G ) ,  the maximal clique graph of the graph G, to have one 
vertex for each maximal clique of G (of size w (G)) and an edge between vertices 
which correspond to intersecting cliques. First we prove a maximal clique duality 
for pseudo-p-critical graphs. Then we prove that M ( G )  is pseudo-p-critical if G 
is pseudo-p-critical. 
Theorem 5. If G is a pseudo-p-critical graph, each maximal clique in M ( G )  
corresponds to a vertex of G. 
Proof. Since by Theorem 2, each vertex x of G is in w maximal cliques, then the 
corresponding w vertices in M ( G )  form a clique of size w. Now suppose that 
there exists a set of m, m 2 w, pairwise intersecting maximal cliques in G with 
no common vertex. Let C,, 
C,, . . . , C,,, be this set of cliques and I,, l2,. 
. . , I,,, be 
the associated maximal stable sets with Ci n Ii = 0. For any two ck, C, there is a 
vertex y E ck n C, and then by Theorem 3 the associated I,, I, are both in the 
stable set cover of G - y and so Ik f l  I, = 0. Since this is true for any two of the 
I’s, the rn I’s are mutually disjoint. Since m 2 w, then it must be that m = w. 
Further, these 1’s must contain all but one vertex of G, call it z, and so form a 
stable set cover of G - z. Then by Theorem 3, each Ck contains z. 0 
Theorem 6. If G is a pseudo-p-critical graph with n = aw + 1 vertices, then 
M ( G )  is also pseudo-p-critical with n vertices and w ( M ( G ) )  = w and 
a ( M (  G)) = a. 
Proof. By Theorems 2 and 5, we know that M ( G )  has n vertices, that 
w ( M ( G ) )  = w, and that M ( G )  has exactly n cliques of size w. Since for any x, 
G - x has a cover of a (disjoint) maximal cliques, it follows that a ( M ( G ) )  = a. 

152 
A. Tucker 
Conversely, any stable set of a disjoint maximal cliques is a cover of G - z, for 
some z, and so by Corollary 3.1 M ( G )  has exactly n maximal stable sets. Clearly 
each maximal clique contains w vertices and by Theorem 3, is in a clique covers 
and so each vertex of M ( G )  is in w maximal cliques and a maximal stable sets. 
Also the maximal clique of M ( G )  corresponding to the set of maximal cliques of 
G containing the vertex x is uniquely disjoint from the maximal stable set of 
M ( G )  corresponding to the a cliques covering G - x. Thus M ( G )  satisfies the 
properties of Theorem 2. 
If C is any maximal clique of G and I is the associated disjoint maximal stable 
set, then every other maximal clique of G contains one of the vertices in I and so 
the a cliques in M ( G )  corresponding to the vertices in I constitute a clique 
cover of M ( G ) -  C of size a. Thus B(M(G)- C)= a. On the other hand, by 
Corollary 3.3, the w stable sets of M ( G ) ,  corresponding to the clique covers of 
G - x  for the w different x’s in the maximal clique C, cover M ( G ) -  C. So 
y ( M ( G ) )  - C )  = w. 
Corollary 6.1. If M ( G )  is the maximal clique graph of a pseudo-p-critical graph 
G, 
then for a vertex C in M(G), M ( G ) -  N ( C )  is connected. 
Proof. This is an immediate consequence of Theorems 4 and 6. 0 
For a given graph G, defined the skeleton S(G) to be the subgraph of G with 
the same vertex set as G and only those edges of G that are part of a maximal 
clique of G. The following theorem follows from Theorems 5 and 6. 
Theorem 7. If G is pseudo-p-critical, then M ( M ( G ) )  = S ( G )  and so S(G) is 
also pseudo -p-critical. 
4. Perfect 3-chromatic graphs 
In this section, we prove that Berge’s Perfect Graph Conjecture is true for 
3-chromatic graphs. First we prove a lemma that is of some interest in its own 
right. 
Lemma 8. Let G be pseudo-critical and let x be a vertex of G. Then, in the 
w -coloring of G - x, each i - j edge is on an i - j path whose terminal vertices are 
in N ( x ) .  
Proof. Let F stand for the subgraph of G induced by x along with all the 
i-vertices and all the j-vertices. If the lemma is false then, by Menger’s theorem, 

The validity ofthe Perfect Graph Conjecture for K,-free graphs 
153 
there is a vertex s such that x and some i - j  edge uv belong to distinct 
components of F - s. Let H stand for that component of F - s which contains 
the edge uu. We may assume that s is an i-vertex. Now consider the cover of 
G - s by CK cliques. Each of these cliques except one includes one vertex of each 
color; the exceptional clique includes x and one vertex of each color distinct 
from i. Thus for each i-vertex w other than s there is a unique j-vertex f (  w ) 
such that w and f ( w )  belong to the same clique in the cover. Since f is 
one-to-one and since f ( w )  E H if and only if w E H, it follows that the number 
of i-vertices in H equals the number of j-vertices in H. 
Choose a j-vertex t in H and consider the cover of G - t by CK cliques. Each of 
these cliques except one includes one vertex of each color; the exceptional clique 
includes x and one vertex of each color distinct from j. Thus for each i-vertex w 
in H there is a unique j-vertex g ( w )  in H such that w and g ( w )  belong to the 
same clique in the cover. Since g is one-to-one, it follows that the number of 
i-vertices in H is at most the number of j-vertices in H - r, a contradiction. 0 
Theorem 9. Every graph containing no holes, no anthiholes, and no K4 is perfect. 
Proof. Assume the theorem false and let G be a counterexample with n vertices 
and rn edges such that no counterexample has fewer than n vertices and no 
counterexample with n vertices has fewer than rn edges. Since n is minimal, G 
is p-critical; since rn is minimal, every edge of G belongs to a triangle. (To 
clarify the second point, assume that an edge e of G belongs to no triangle. Since 
G - e  retains the n triangles covering each vertex three times, we have 
CK (G - e )  s n/3 = a ( G )  + f, and so G - e is imperfect. Furthermore, G - e has 
no holes, for otherwise G would have a hole. Finally, G - e has no antiholes of 
length at least seven, for otherwise G - e  would have a K4. Thus G - e  is 
another counterexample, a contradiction.) 
By Theorem 2, each N ( x )  in G induces three triangles. If these three triangles 
are arranged as in Fig. 1 for every x, then an easy argument (whose details we 
omit) shows that G is completely determined: its vertices can be enumerated as 
u,, vz,. . . , u. 
( n  = 3a(G) + 1 )  in such a way that, with subscript arithmetic 
modulo n, vertices v, and v, are adj icent if and only if I i - j 1 s 2. But then G is 
either an antihole (if a ( G )  = 2) or tqsily seen to contain a hole (if a (G) 2 3). 
(Generalizations of the latter case are given in Tucker [13] and Chv5tal [4].) 
Now choose a vertex x such that the three triangles xcr', xdr and xab are not 
arranged as in Fig. 1 and consider the unique 3-coloring f of G - x. 
By the second part of Theorem 3, we may assume that 
f(c) = 2, f ( r ' )  = 3 and f(d) = 1 ,  f ( r )  = 3 
and f ( a ) = 1 ,  f(b)=2. 

154 
A. Tucker 
X 
Fig. 1. 
Thus we may assume that N ( x )  is arranged as in Fig. 2, possibly with r = r'. 
If e is an edge on a 1-2 path w I ,  w2,.. ., wk with w I ,  wk E N ( x )  and 
w2, w,, . . . , Wk-I fZ N ( x )  then we shall write 
e E SI 
if w I  = a and Wk = d, 
e E S 2  if w I  = b and wk = c, 
e E S 3  if w I = a  and wk = b 
3r 
s&2 
b2 2c r '3 
Fig. 2. 
(see Fig. 2). We claim that every 1-2 edge in G - x belongs to precisely one of 
the three sets S. To justify this claim, we first observe that every 1-2 path 
{ w l ,  wk} = { a , b } ,  { b , c }  or {a, b ) :  otherwise w I ,  wk would be nonadjacent and 
have distinct colors, in which case the shortest path from w I  to wk through 
w2, w3,. . . , wk-1 would, together with x, yield a hole. This observation alone 
implies that SI, S2, S3 are pairwise disjoint; combined with Lemma 8, it shows 
that every 1-2 edge belongs to exactly one S,. In addition, note that Sl and Sz are 
nonempty since (by Corollary 3.2) the 1-2 subgraph of G - x is connected. 
Corollary 6.1 with the triangle abx in place of C guarantees that the 
hypergraph consisting of all the triangles disjoint from abx is connected. In 
particular, some triangle disjoint from abx and with a 1-2 edge in S1 shares its 
3-vertex z with a triangle disjoint from abx whose 1-2 edge does not belong to 
S , .  For simplicity of exposition, let us first assume that 
W I ,  W 2 , .  . . , Wk with 
W l ,  Wk E N(X) and 
W2, W 3 , .  . . , Wk-1 p N(X) must have 
z # r  
and z Z r ' .  
Let the three triangles which contain z be named C1, C2, C3 in such a way that 
one of the following five statements is true. 

The validity of the Perfect Graph Conjecture for &free graphs 
155 
(i) each C, has its 1-2 edge in a different S,. 
(ii) C1 has its 1-2 edge in SI and Cz, C3 have their 1-2 edges in S3, 
(iii) C1 has its 1-2 edge in S1 and Cz, C3 have their 1-2 edges in Sz, 
(iv) C1 has its 1-2 edge in S1 and Cz, C3 have their 1-2 edges in S1, 
(v) C1 has its 1-2 edge in S3 and Cz, C3 have their 1-2 edges in S1. 
In case (i) or (ii), let vI, vz,. . . , us be a shortest path with vI = z, v z  = a and 
v2v3, v3v4,. . . ,vo-lvs E S3, and v,# b for all i. Let w l ,  wz,. . ., w, be a shortest 
path with w, = a, wl = d and w1w2w3,. . . , wl-lwl E S1 and wlwl+l E C1 for some 
k. Now consider the closed walks 
V I V Z " ' V ~ W ~ " '  WkVi 
and 
V r V 2 " ' V S X W ~ W ~ - ~ " '  Wk+IVI 
of lengths s + k - 1 and s + 1 + t - k, respectively. Since t is odd (each w, is 
colored 1 if j is odd and 2 if j is even), precisely one of the two walks is odd. We 
claim that this odd walk L is a hole. To justify this claim, consider first the case 
when the odd walk is 
L = vIv2"' Vsw2. '. Wkvl. 
Since s + k - 1 is odd and s 2 2, k 2 1, we have s + k - 12 3. In fact, we cannot 
have s + k - 1 = 3, for then either s = 2, k = 2 and z is in two triangles with 1-2 
edges in Sl, or else s = 3, k = 1 and s is not minimal. Furthermore, L has no 
chords v,v, (by minimality of s), no chords w,w, (by minimality of t ) ,  no chords 
v,w, (since z is in only one triangle whose 1-2 edge belongs to S,) and no chords 
v,v,, 1 < i < s (for such chords would belong to both Sl and S3). Thus L is a hole. 
Next consider the case when the odd walk is 
L =vIvZ"'~sxwiwi-I"'Wk+lvI. 
Since s + 1 +  t -  k is odd and s 2 2 ,  t - k + 1 3 3 ,  we have s + 1 +  t -  k 3 5 .  As 
before L has no chords QV,, no chords w,w, and no chords v,w,, i < s. There are 
no chords beginning at x since N ( x )  = {a, b, c, d, r, r'}. To prove that there are no 
chords v,w, (i.e., aw,), recall that no vertex of G has four pairwise nonadjacent 
neighbors. Since x, us-, and wz are pairwise nonadjacent neighbors of v,, then 
endpoint w, of chord v,w, would have to be adjacent to x, 
or wz. The first 
two options are easily eliminated; the third is unavailable since the 1- or 2-vertex 
w, cannot be adjacent to both the 1-vertex v, and the 2-vertex w2. Thus L is a 
hole. 
In case (iii), let vl, vz,. . . , v, be a shortest path with vr = z and v, = x, and 
V Z v 3 ,  v3v4,. . . , U , - ~ U , - ~  E S2 and v,# b for all i. Let w,, wz,. . . , wl be as before. By 
the same reasoning used above, one can verify that one of the closed walks 
V i V z '  ' * V,Wi * * 
WkVi and 
V i V z '  . ' V,WrWl-r * * .  Wk+IVI 
is a hole. 

156 
A. Tucker 
Case (iv) reduces to (iii) by symmetry. 
In case (v), let ul, u2,. . . , us be a shortest path with uI = z, us = a and 
u203,. . . , 
E SI. Let wI, 
w2,. . . , wI be a shortest path with w1 = a, w, = b 
and w ,  
w 2 , .  . . , wl-l wI E S,. Note that t is even since a, b have distinct colors and 
that 1 < k < t - 1 since C1 is disjoint from abx. Now one of the two closed walks 
UlU2"' 
U , W I " '  
WklJl 
and 
W I U ~ " ' U , W I W I - I " '  
Wk+iUi 
is odd. Again this odd walk will be a hole. 
Finally, if z = r or z = r', then one of the z's triangles contains x, another, 
which we will call CI, has its 1-2 edge in SI and the third C2 has its 1-2 edge in S2 
or S,. If C2 has its 1-2 edge in S3 then we may proceed as in case (v). If Cz has its 
1-2 edge in S2 then we may assume z = r' (the case z = r reduces to z = r' by 
symmetry; it is also possible that z = r = r') and proceed as in case (iii) with r'x 
in place of u1u2. . . us. 0 
Corollary 9.1. Euery planar graph containing no holes is perfect. 
Proof. It will suffice to prove that every planar graph G containing no holes is 
w(G)-colorable. We shall prove this by induction on the number of vertices in 
G. If o(G) 
s 3 then the conclusion is immediate: since no planar graph contains 
an antihole of length more than five, G satisfies the hypothesis of Theorem 9. If 
w ( G ) = 4  then G is easily seen to be the union of graphs G, 
and GZ, 
each of 
them having fewer vertices than G, such that GI n G2 is a triangle. By the 
induction hypothesis, GI and G2 are four-colorable; now G is easily seen to be 
four-colorable. 0 
References 
[ I ]  C. Berge, Farbung von Graphen, deren samtliche bnv. deren ungerade Kreise starr sind, Wiss. 
121 C. Berge, Introduction a la theorie des hypergraphes, Lecture Notes, UniversitC de Montreal 
[3] V. Chvatal, On certain polytopes associated with graphs, J. Comb. Theory, Ser. B 18 (1975) 
[4] V. Chvatal. On the strong perfect graph conjecture, J. Comb. Theory, Ser. B 20 (1976) 139-141. 
[S] B.R. Fuikerson, Blocking and anti-blocking pairs of polyhedra, Math. Program. 1 (1971) 
[6] D.R. Fulkerson. Anti-blocking polyhedra, J. Comb. Theory 12 (1972) 50-71. 
171 D.R. Fulkerson, On the perfect graph theorem, in: T.C. Hu and S. Robinson, eds. Mathemati- 
181 L. Lovasz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
"41 L. Lovasii, A characterization of perfect graphs, J. Comb. Theory, Ser. B 13 (1972) 95-98. 
2. Martin-Luther-Univ. Halle-Wittenberg Math.-Natut. Reihe 114 (1961). 
(Summer 1971). 
138- 154. 
168- 194. 
cal Programming (Academic Press, New York, 1973) 6%76. 
25F267 (this volume, pp. 29-42). 

The validity of the Perfect Graph Conjecture for K4-free graphs 
151 
[lo] M. Padberg, Perfect zero-one matrices, Math. Program. 6 (1974) 18CL196. 
[ll] K.R. Parthasarathy and G. Ravindra, The strong perfect graph conjecture is true for K,,-free 
[12] A. Tucker, The strong perfect graph conjecture for planar graphs, Canad. J. Math. 25 (1973) 
[13] A. Tucker, Coloring a family of circular arcs, SIAM J. Appl. Math. 29 (1975) 493-502. 
graphs, J. Comb. Theory, Ser. B 22 (1976) 212-223. 
103-114. 

This Page Intentionally Left Blank

PART 111 
POLYHEDRAL POINT OF VIEW 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 161-167 
@ Elsevier Science Publishers B.V. 
THE STRONG PERFECT GRAPH THEOREM 
FOR A CLASS OF PARTITIONABLE GRAPHS 
Rick GILES* 
School of Computer Science, Acadia University, Wolfville, NS, Canada 
L.E. TROTTER, Jr.** 
School of Operations Research and Industrial Engineering, Cornell University, Ithaca, NY 
14853, USA 
Alan TUCKER*** 
Department of Applied Mathematics, State University of New York, Stony Brook, NY 11 794, 
USA 
A simple adjacency criterion is presented which, when satisfied, implies that a minimal 
imperfect graph is an odd hole or an odd antihole. For certain classes of graphs, including 
K,,,-free graphs, it is straightforward to validate this criterion and thus establish the Strong 
Perfect Graph Theorem for such graphs. 
If graph G is imperfect but contains no imperfect proper induced subgraph, 
then G is minimal imperfect. Examples of such graphs are chordless odd cycles 
of length at least five and their complements, respectively termed odd holes and 
odd antiholes; Berge has conjectured that these are the only examples of 
minimal imperfect graphs. 
Conjecture 1 (Strong Perfect Graph Conjecture [l]). G is a minimal imperfect 
graph if and only if G is an odd hole or an odd antihole. 
Whereas the reverse implication (‘if’) here is clearly valid, the forward 
implication (‘only if’) has been verified only for special classes of graphs [2,8, 12, 
13, 15, 16, 17, 18, 191 and its general form has remained unsettled for some 20 
years. 
We shall assume henceforth that G is a minimal imperfect graph. A direct 
approach to establishing Conjecture 1 leads naturally to the consideration of two 
types of information: properties of G which are a direct consequence of minimal 
imperfection and sufficient conditions for a minimal imperfect graph to be an 
* Partially supported by NSF Grant MCS8002987. 
** Partially supported by NSF Grant ENG7809882. 
*** Partially supported by NSF Grant MCS7904489. 
161 

162 
R. Giles el al. 
odd hole or an odd antihole. Considering first the former, let a and w denote the 
respective sizes of a largest stable set and a largest clique of G ; also let n = I V 1, 
where V is the vertex set of G. Certain direct consequences of minimal 
imperfection are immediate, e.g., that G is connected and that a 2 and w 3 2. 
From Lovasz’ characterization of perfect graphs [7] it follows easily that 
n = a w + 1  
(1) 
and 
(2) 
for each u E V, V -  u (denoting the set V - { u } )  may be 
partitioned into cliques of size w and into stable sets of size a. 
A clique of size w (stable set of size a) is termed an w-clique (a-stable set). 
Padberg [9] has established: 
G contains exactly n w-cliques and exactly n a-stable sets. 
(3) 
(4) 
(5) 
To each w-clique C in G there corresponds a unique a -stable 
set S in G such that C n S = 0. 
The n x n incidence matrix of w-cliques with vertices of G is 
nonsingular with all row and column sums equal to w. 
Straightforward consequences of (3)-(5) are the further properties (see [3,18]): 
The partitions described in (2) are unique. 
sense of (4)) to the a-stable sets which partion V - u. 
(6) 
(7) 
For each u E V, the w-cliques containing u correspond (in the 
Additional properties of this type are described in [3, 11, 181. 
Next consider aspects of odd holes and odd antiholes which characterize them 
among minimal imperfect graphs. For example, recalling that G is minimal 
imperfect, clearly 
w = 2 implies G is an odd hole and 
a = 2  implies G is an odd antihole. 
(8) 
Following [4] we denote by C: the graph with vertices uo, u l , .  . . , u,-, and edges 
{u,, a+,}, 
where 0 5 i 5 n - 1, 1 S j  5 k, and the index i + j  is to be computed 
here (and below) modulo n. For n = 5,7,. . . , odd holes are of the form Ci with 
k = 1 and odd antiholes are given by k = (n - 3)/2. The following result (see [lo, 
14, 171) shows that when the cliques of a minimal imperfect graph are ‘circular’ 
as in C:, then the graph must be an odd hole or an odd antihole. 
If G is isomorphic to C: for some k 3 1, then Gsis an odd hole 
or an odd antihole. 
(9 

163 
The Strong Perfect Graph Theorem 
This result has been strengthened by Chvdtal [4]: 
If G contains a (spanning) subgraph isomorphic to Cf: for some 
k 2 1, then G is an odd hole or an odd antihole. 
(10) 
It is evident that the symmetry attributed minimal imperfect graphs by (5) is 
suggestive of the symmetry of graphs of the form Ci. Property (3, 
however, as 
well as properties (3), (4), (6) and (7), also holds (see [3, 181) for any graph which 
is parfitionable in the sense of (1) and (2). Furthermore, imperfect partitionable 
graphs which are not minimal imperfect have been given in [3,51. Thus a proof 
of Conjecture 1 based on (lo), i.e., showing that a minimal imperfect graph must 
contain a spanning subgraph isomorphic to Ci, should require the use of deeper 
information about minimal imperfection than that embodied in (5). 
In this paper we present the following strengthening of (10) which is directly 
linked to the partitioning information of (2). 
Theorem 1. If, for each v E V, the partition of V - v into a-stable sets has (at 
least) two members containing a single neighbor of v, then G is an odd hole or an 
odd antihole. 
Note that if for any v E V, the partition of V - v into a -stable sets has two 
members, S1 and S2, each containing a single neighbor of v, say v1 and u2 
respectively, and v1 and v 2  are not adjacent, then G must be an odd hole. This 
follows from the fact that (6) implies that the subgraph H generated by 
S ,  U Sz U {v} is connected; hence a shortest cycle in H containing u, v1 and u2 is 
an odd hole. 
For certain classes of graphs the hypothesis of Theorem 1 is easily verified. A 
graph is K1,,-free if it does not contain 
as an induced subgraph. Parthasarathy and Ravindra [12] have validated 
Conjecture 1 for K,,-free graphs. If the minimal imperfect graph G is KI.3-free, 
then the neighbor set of each vertex may be partitioned into two cliques, 
implying that each vertex has at most 2 0  -2 neighbors. Since for each u E V, 
V - v partitions into w a-stable sets by (2), at least two of these a-stable sets 
contain only one of the 2w -2 neighbors, and so validity of the hypothesis of 
Theorem 1 follows immediately. This method of obtaining the result of 
Parthasarathy and Ravindra was developed independently in [6, 191. 
Corollary 1 [12]. The Strong Perfect Graph Conjecture is valid for K1,3-free graphs. 

164 
R. Giles et al. 
Proof of Theorem 1. By (lo), it suffices to demonstrate that the vertices of G can 
be ordered uo, u,, . . . , 
so that for each 1 = 0,1,. . . , n - 1, the vertex set 
{ul+,: 0 =s j s w - 1) defines an w-clique of G; i.e., we will show that G contains 
the spanning subgraph C:i:l. 
Arbitrarily select uo E V and let {S,: 1 S j S w }  
denote the a-stable set partition of V - uo described in (2) (see Fig. 1). By 
hypothesis we may assume that uo is adjacent to only one vertex of SI, say 
u , E S , .  Thus u1 is adjacent only to uo among the vertices of the a-stable set 
Sl+m = SI - uI + uo (i.e., where we use the notation S + u for the set S U { u } )  and 
we have that {Sl+, : 1 S j 6 w }  is the a-stable set partition of V - u1 (see Fig. 2). 
Continuing now inductively, suppose that k is fixed, 1 S k < n - 1, and that 
(i)-(iii) hold for 1 C 1 
k. 
(i) uo, u,, . . . , uI are distinct vertices of G. 
(ii) In Sl+, = Sl - uI + ul-l only 
(iii) {S,+,: 1 s j S w }  is the a-stable set partition of V - uI. 
is adjacent to ul. 
To complete the induction we verify (i)-(iii) for I = k + 1. Combining (ii) and (iii) 
for 1 = k with the hypothesis of Theorem 1 shows that some a-stable set St+,, 
1 S j  S w - 1, contains a single neighbor & + I  
of 
Vk. Consider the case k < o 
depicted in Fig. 3 and first suppose u k + l  E Sl+w. 
Since 
is in the a-stable set 
00 
... s, ...o 
Fig. 1. a-stable set partition for V - u,. 
Fig. 2. a-stable set partition for V - u,. 

The Strong Perfect Graph Theorem 
165 
. . . 
s,,, 
. . . 
. . * 
s,,, 
. . . 
. . . s,,, 
. . * 
0) 
. . . s,,, 
, . . 
(0 
0 
0) 
6 . .  
s, 
* . .  
Fig. 3. a-stable set partition for V - uk, with k < w. 
partitions for both V - uo and V - u k ,  it follows from (7) that the o-clique 
corresponding to & + I  
as in (4) contains both uo and u k .  Thus uo and v k  are 
adjacent and uo E Sl+w implies u k + l =  uo. Substituting u k  for uo in Sl+, yields the 
a-stable set partition of 
V - uo given by 
. . , S,, S1+, - vo+ U k ,  
SZ+-, . . . , 
s k + o }  which is distinct from that specified by (iii) for I = 0. As this is in 
contradiction to (6), we conclude u k + l k ? S S l + w .  A similar argument shows that 
u k + l  $Z Si+-, for 1 S i S k - 1. Thus u k + l  is a member of one of the a-stable sets 
& + I , .  . . , S,, and no generality is lost by assuming u k + 1  E S k + l .  Note also that in 
this case (i) clearly holds for I = k + 1. For the case k 2 w, we obtain, arguing as 
above, that if u k + l  E & + j ,  
2 s j s w - 1, then u k + l =  
u k - o - l + j ,  again leading to a 
contradiction of (6) for V - u k - - - l + j .  
Thus in this case also u k + l  E s k + l  and it is 
again clear that (i) holds for 1 = k + 1  (see Fig. 4). Defining Sk+I+, = 
- u k + I +  O k ,  we see immediately that (ii) holds for 1 = k + 1; (iii) follows by 
exchanging u k  for uk+l in s k + 1 .  An application of (iii) now shows that for 
0s I s n - 1, the a-stable set S,+, is a member of the a-stable set partitions for 

. 
Fig. 4. a-stable set partition for V - u,, with k 3 o. 

The Strong Perfect Graph Theorem 
167 
V -  u l , .  . . , V -  
Thus it follows from (7) that for any choice of 
I, 
0 s 1 s n - 1, the vertices uI, . . . , ul+,-l constitute an w-clique of G, which 
completes the proof. 
References 
[l] C. Berge, Farbung von Graphen, deren samtliche bzw. deren ungerade Kreise starr sind, Wiss. 
[2] C. Berge, Graphs and Hypergraphs (North-Holland, Amsterdam and American Elsevier, New 
[3] R.G. Bland, H.-C. Huang and L.E. Trotter, Jr., Graphical properties related to minimal 
[4] V. Chvatal, On the strong perfect graph conjecture, J. Comb. Theory, Ser. B 20 (1976) 139-141. 
[5] V. ChvBtal, R.L. Graham, A.F. Perold and S. Whitesides, Combinatorial designs related to the 
[6] F.R. Giles and L. E. Trotter, Jr., On stable set polyhedra for K,,3-free graphs, J. Comb. Theory, 
[7] L. Lovasz, A characterization of perfect graphs, J. Comb. Theory, Ser. B 13 (1972) 95-98. 
(81 H. Meyniel, On the perfect graph conjecture, Discrete Math. 16 (1976) 339-342. 
[9] M.W. Padberg, Perfect zero-one matrices, Math. Program. 6 (1974) 180-196. 
Z. Martin-Luther Univ. Halle-Wittenberg Math.-Natur. Reihe 114 (1961). 
York, 1973). 
imperfection, Discrete Math. 27 (1979) 11-22 (this volume, pp. 181-192). 
perfect graph conjecture, Discrete Math. 26 (1979) 83-92 (this volume, pp. 197-206). 
Ser. B 31 (1981) 313-326. 
[lo] M.W. Padberg, Characterizations of totally unimodular, balanced and perfect matrices, in: B. 
Roy, ed., Combinatorial Programming: Methods and Applications (Reidel, Boston, MA, 1975) 
[ll] M.W. Padberg, Almost integral polyhedra related to certain combinatorial optimization 
[I21 K.R. Parthasarathy and G. Ravindra, The strong perfect-graph conjecture is true for K,,,-free 
[13] K.R. Parthasarathy and G. Ravindra, The validity of the strong perfect graph conjecture for 
[14] L.E. Trotter, Jr., A class of facet producing graphs for vertex packing polyhedra, Discrete Math. 
[15] L.E. Trotter, Jr., Line perfect graphs, Math. Program. 12 (1977) 255-259. 
[16] A.C. Tucker, The strong perfect graph conjecture for planar graphs, Canad. J. Math. 25 (1973) 
[17] A.C. Tucker, Coloring a family of circular arcs, SIAM J. Appl. Math. 29 (1975) 493-500. 
[18] A.C. Tucker, Critical perfect graphs and perfect 3-chromatic graphs, J. Comb. Theory, Ser. B 23 
[19] A.C. Tucker, Berge’s strong perfect graph conjecture, Ann. New York Acad. Sci. 319 (1979) 
275-284. 
problems, Linear Alg. Appl. 15 (1976) 69-88. 
graphs, J. Comb. Theory, Ser. B 21 (1976) 212-223. 
(K, - e)-free graphs, J. Comb. Theory, Ser. B 26 (1979) 98-100. 
12 (1975) 373-388. 
103-114. 
(1977) 143-149. 
53s.535. 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 169-178 
@ Elsevier Science Publishers B.V. 
A CHARACTERIZATION OF PERFECT MATRICES 
Manfred W. PADBERG 
New York University, New York, N Y  1ooo6, USA 
A zero-one matrix is called perfect if the polytope of the associated set packing problem has 
integral vertices only. By this definition, all totally unimodular zero-one matrices are perfect. 
In this paper we give a characterization of perfect zero-one matrices in terms of forbidden 
submatrices. The notion of a perfect zero-one matrix is closely related to that of a perfect 
graph as well as that of a balanced matrix as introduced by Berge. Furthermore, the results 
obtained here bear on an unsolved problem in graph theory, the Perfect Graph Conjecture. 
1. Introduction 
In this paper, we consider the polytope defined by the constraints of the 
following set packing problem: 
maxc x 
A x s e  
xi =Oor 1 V j i E N = { l ,  ..., n}, 
where A is an m X n matrix of zeroes and ones having no zero columns, 
eT = (1,. . . , 1) is the vector having all m components equal to one, and c is an 
arbitrary vector of reals. This problem has recently obtained much attention, see 
e.g. [l], [2], [6], [14], [18]. By (LP) we denote the linear programming problem 
obtained from (P) by dropping the integrality requirement on x. 
If the matrix A involved in problem (P) is totally unimodular [lo], then all 
basic feasible solutions to (LP) are integral, i.e., for any vector c the integer 
programming problem (P) can be solved as an ordinary linear programming 
problem. Generally, the matrix A encountered in (P) is not totally unimodular. 
Nevertheless, for certain matrices A the property that all basic feasible solutions 
to (LP) are integral, remains true (see Section 2 for relevant examples, also [5]). 
We call such matrices perfect zero-one matrices. Using some results from graph 
theory, we give a complete characterization of perfect matrices A in terms of 
forbidden submatrices. We give examples that show that - as in the case of 
balanced matrices, see [5] - 
it is not possible to characterize perfect zero-one 
matrices by means of forbidden determinantal values (as is the case for totally 
unimodular matrices). Indeed, given any natural number k, there exists a perfect 
zero-one matrix A such that it has a minor with determinant k. 
169 

170 
M. W. 
Padberg 
This paper is an abbreviated version of the original paper [15]; see also [16] 
where the main result of this paper is derived using a different proof technique. 
2. Perfect Zero-One matrices 
Let A be any m x n matrix of zeroes and ones having no zero column, and 
define the polytopes P and PI as follows: 
P = { X E W I A X S ~ , X , ~ O ,  j = 1  ,..., nl, 
P, = conv{x EW" 1 AX c e, x, = o or 1, j = I,. . , n), 
(2.1) 
where eT = (1,. . . , 1 )  has m components all equal to one. The matrix A is called 
perfect if P = PI, i.e., if the polytope P defined in (2.1) has only integral vertices. 
Note that dim P = dim PI = n holds. Denote G the (intersection) graph as- 
sociated with the matrix A, i.e., the nodes of G correspond to the columns of A 
and two nodes of G are linked by an edge if the associated columns a' and a' of 
A have at least one + 1 entry in common, see e.g. [14]. A clique in G is a 
maximal complete subgraph of G. Let C denote the node set of any clique in G. 
Then by Theorem 2.1 of [14], the inequality 
1 i f j E C  
(2.2) 
r 0 if not 
2 afx, G I ,  a; = 
, = I  
yields a facet of PI, i.e., a face of dimension n - 1 of P,. Clearly, every facet of 
the polytope PI is essential in defining PI. Hence it is a necessary condition for A 
to be perfect that A contain the incidence (row-) vectors of all cliques of the 
associated graph G. In order to characterize perfect matrices we can thus restrict 
ourselves to considering 'clique'-matrices, i.e., matrices A which contain the 
incidence vectors of all cliques of the associated graph G. 
Let A be any clique-matrix of size rn x n and let G be the associated graph. 
Let G denote the complement of G and denote B a clique matrix of G. Similarly 
to (2.1) define the polytopes Q and Q,, respectively, as follows: 
Q = { x E R " ( B x < ~ , x , z - o ,  j = 1 ,  ..., n), 
0, = conv1x E R" I BX s e, x, = o or I, j = I,. . . , n), 
(2.3) 
where i?'=(l,. . . , l )  has all components equal to one and is dimensioned 
compatibly with B. Note that B has no zero column and that dim Q = dim QI = 
n holds. The vertices of Q, correspond to complere subgraphs of G, and vice 
versa. Furthermore, every maximal independent node set in G defines a clique 
of d (and vice versa). Consequently, there exists a (incomplete) 'duality' relation 

A characterization of perfect matrices 
171 
between the vertices of PI and the facets of Q (and, hence, between the vertices 
of Ql and the facets of P), see e.g. [ll]. In the terminology of Fulkerson [7], Q 
(P, resp.) is the anti-blocker of Pl ( Q I ,  resp.). 
Let A be any clique-matrix of size m X n. By Theorem 1 of [6], A is perfect if 
and only if the associated graph G is perfect. Consequently, A is imperfect if 
and only if the graph G contains an induced subgraph of G’ which is almost 
perfect, i.e., G’ is imperfect, but every proper induced subgraph G’ is perfect, 
see [13], [15], [17]. Since induced subgraphs of G having k nodes correspond 
uniquely to m X k submatrices of A (and vice versa) we can make, without loss 
of generality, the assumption that G is an almost perfect graph. Denote a ( G )  
the maximum cardinality of a stable (independent) node set in G and define 
C Y ( ~ )  
likewise for G. 
Lemma 1. Let A be a clique-matrix of an almost perfect graph G, LY = a ( G )  and 
o = (Y ( G ) .  Then cY=, 
xi < o provides a facet of QI and x = (l/w)e is a fractional 
vertex of P. 
Proof. Denote by e’ the row vector with n - 1 components equal to + 1 and 
having a zero in the j-th component. Since G is almost perfect it follows from 
Theorem 1 of [13] that 
max e’x = a! 
for j = 1,. . . , n. 
X E P  
Define Hi 
to be the halfspace given by 
H, = { X E W ”  I e ’ x s a }  f o r j = 1 ,  ..., n. 
Consequently P 
Hi for j = 1 , .  . . , n or, equivalently, 
P C H =  n H’. 
j = l  
By definition of e’, j = 1 , .  . . , n, H is a pointed polyhedral convex cone with its 
apex at 
-
f
f
 
x =- 
e. 
n - 1  
By Theorem 1 of [13], we have that a(G)o a! (G) = n - 1 holds, since G is almost 
perfect. Hence it follows that 
wff 
Ai<- 
e = e. 
n - 1  
Consequently, since H is pointed, 
-
f
f
 
1 
n - 1  
w 
e = - e  
x =- 

172 
M. 
W. Padberg 
is a vertex of P, satisfying 0 < f < e. Consequently, the inequality El=, xi s o 
provides a facet of Q,. 0 
Remark 1. By Theorem 1 of [12] it follows that G is almost perfect if and only if 
G is almost perfect. Consequently, we have that 
= (l/cr)e is a fractional vertex 
of 0 and x;=, 
x, 6 cr provides a facet for PI. 
Remark 2. Since ff = ( l / w ) e  is a vertex of P, we can reorder the rows of the 
matrix A as follows: 
A = (2;) 
where the row sums of A, all equal w and the row sums of A, are all (strictly) 
less than w. Furthermore, A, is of size m x n with m 2 riZ 2 n and A, contains a 
(at least one) nonsingular submatrix of size n X n. By Remark 1, we have a 
similar partitioning of B into B1 
and B2, where B, has m rows, m 2 n, having 
row sums equal to cr and B1 
contains a n X n nonsingular submatrix. 
Remark 3. In graphical notation, Remark 2 implies that every almost perfect 
graph G contains at least I G I maximum cliques of the cardinality w = cr (G). 
This has been observed earlier by Sachs and can be found, though without proof, 
in [17]. 
F o r j = l  ...., n define 
P, = P n {X E wn 1 X, = 0) 
(2.4) 
and let 0, be defined analogously with P replaced by Q. Intersecting P with 
x, = 0 corresponds to the operation of deleting from the graph G node j and all 
edges incident to it. Hence we have 
Remark 4. If A is a clique-matrix of an almost perfect graph G, then Pi 
(0, C Q,, resp.) holds for j = 1,. . . , n. 
PI 
Lemma 2. Let A be an m X n clique-matrix of an almost perfect graph G, then A 
contains an n x n nonsingular submatrix A, whose column and row sums are all 
equal to w = a(G). Furthermore, any row of A which is not in Al is either 
componentwise identical to some row of A,, or has a row sum strictly less than o. 
Proof. By Remark 1, the point 3 = ( l / a ) e  is a fractional vertex of Q. The point 
x’ = (l/a )el satisfies x’ E Qi for j = 1,. . . , n where e’ is the vector defined in 
the proof of Lemma 1. Since Qi 
C Q, holds for j = 1,. . . , n it follows by 
convexity that X E 0, 
where 

A characterization of perfect matrices 
173 
n 
2 = ( l / n )  
, = I  C x 1  = (w/n)e. 
(2.5) 
Since c,"=, 
i, = w holds it follows from Carathiodory's theorem [11] that there 
exists a n x n nonsingular submatrix A, of the matrix A, defined in Remark 2 
such that 
n 
i T = y T A , ,  y,>O f o r i = l ,  ..., n 
and 
, = I  
C y = 1  
(2.6) 
holds. Let Bl be any n X n nonsingular submatrix of the matrix B, defined in 
Remark 2. Then we obtain from (2.6) 
Define D = All?:. Then D is an n X n nonsingular matrix of zeroes and ones 
since the columns of B: are (a subset of) vertices of PI (satisfying eTx < a with 
equality). Furthermore, D cannot contain a row consisting of + 1 entries only. 
For, if there were such a row, then necessarily B, would have to be singular since 
the row sums of B, all equal a. Then we have that 
eT 
n - 1  
n 
yTD = - 
where yi 2 0 for i = 1,. . . , n and x:=l 
yi = 1. From (2.7) we obtain 
yTDe = n - 1. 
Consequently, 'yi > 0 implies that the row sum of row i of D equals n - 1, 
since c:=, 
y, = 1. Suppose now that -yl S * .  . < yk with k < n satisfies yl > 0, 
yk+, = * - = yn = 0. Since D is nonsingular we can rearrange the rows and 
columns of D such that D has the form 
with 
0
1
 . . .  
DI=( 
. . :) , D 2 = ( I  
' . ' 
' :) 
.
1
0
 
. . . .  
where Dl is of size k X k and has zeroes only in the main diagonal, D, is of size 
k x (n - k )  and consists entirely of ones. If k < n, obviously, (2.7) cannot 
have a solution satisfying yi 3 0 and z:=l 
y, = 1. On the other hand c:=, 
y, = 1 

174 
M. 
W. Padberg 
implies k 3 1. Consequently, k = n and D has the general form E - R, where E 
is the n X n matrix consisting entirely of ones and R is an n X n permutation 
matrix. Consequently, from (2.7) we have that 
To complete the proof of Lemma 2, we note that the relation A,BT = E - R 
implies that 
A;'=- a E - B:RT. 
n - 1  
Suppose now that the matrix A contains a row aT satisfying are = w which is 
no1 contained in the submatrix A,. Then we have 
0 S aTA = eT - aTB:RT = Z 
eT. 
(2.8) 
From Ze = 1 and the integrality of Z it follows that such a row aT is 
componentwise identical to some row in A, and thus Lemma 2 follows. 
Remark 5. In graphical notation, Lemma 2 implies that every almost perfect 
graph G has exactly I G I maximum cliques of cardinality w = a(G) and 1 G I 
maximal independent node sets of cardinality a = a(G). 
Lemma 2 suggests the following definition: 
Definition. Let A be a zero-one matrix of size m X n, m 2 n. A is said to have 
property 7rB.,, if the following conditions are met: 
(i) A contains an n X n nonsingular submatrix A, whose row and column 
sums are all equal to p. 
(ii) Each row of A which is not a row of Al either is componentwise equal to 
some row of A, or has a row sum strictly less than p. 
Remark 6. Let A be an m X n matrix of zeroes and ones and G its associated 
intersection graph. A is a clique-matrix, i.e., A contains as row vectors the 
incidence vectors of all cliques in G, if and only if A does not contain any m x k 
submatrix A '  having the property 7rp.k with p = k - 1 and p 2 2. 
We will sketch the proof of Remark 6 only, since the assertion of Remark 6 is 
probably a known result. The necessity of the condition is obvious. To prove 
sufficiency, let C be the node set of a clique in G such that the associated 
incidence vector a.1 with aj = 1 if j E C, 
a, = 0 otherwise, is not contained in A. 
Define P ' = P f l { x E B P " I x j = O ,  V j E N - C }  and P ~ = P ' n { x E W " ) x j = O }  
for all j E C. Obviously, P' must have at least one fractional vertex. We now 

A characterization of perfect matrices 
175 
distinguish two cases: (i) Pi has integral vertices only for all j E C or (ii) there 
exists a j E C such that Pi has a fractional vertex. In case (i), we can show by an 
argument completely analogous to the one used in the proof of Lemma 1 that A 
contains an m X k submatrix A’ having property m6.k with p = k - 1, p 3 2 and 
k = 1 C I. In case (ii), we can restrict attention to any Pi having a fractional vertex 
for j E C. Abusing slightly the notation, we redefine C to be C - (i}, redefine the 
polytopes P’, Pi with respect to the new set C and find again the two cases 
mentioned above. (Note that the new set C defines a complete subgraph in G, 
which is no longer a clique in G. 
This, however, does not affect the argument.) 
Clearly, case (ii) can happen only finitely many times and, finally, we obtain a set 
C having at leust three elements and which is such that case (i) prevails. This 
completes the outline of the proof of Remark 6. 
The following theorem states a necessary and sufficient condition for an 
arbitrary zero-one matrix to be perfect: 
Theorem 1. Let A be any zero-one matrix of size m X n. The following two 
conditions are equivalent: 
(i) A is perfect. 
(ii) For p 5 2 and 3 G k C n, A does not contain any m x k submatrix A‘ 
having the property T @ . k .  
Proof. Suppose that A is perfect and that (ii) is violated. Then there exists an 
m X k submatrix A’ of A having property r 6 . k  for some p 3 2 and k 5 3. 
Suppose the columns of A have been ordered such that A’ coincides with the k 
first columns. Then 2 defined by Zj = 1/p for j = 1,. . . , k, Zj = 0 for j = 
k + 1 , .  . . , n, is a fractional vertex of the polytope P defined in (2.1). Hence, by 
definition, A cannot be perfect. 
On the other hand, suppose that A is such that (ii) holds. Then A must be 
perfect. For if not, then by Remark 6 and Theorem 1 of [6] the intersection graph 
G associated with A must be imperfect. Consequently G contains an induced 
subgraph G’ that is almost perfect. Again by Remark 6, the clique-matrix of G’ 
is an m x k submatrix A‘ of A where k = 1 G’l. Let A ”  denote the m ’ x  k 
submatrix of A’ whose rows correspond to the cliques of G’. 
By Lemma 2, A” 
has the property T 6 . k  with p = cr (c’) 
3 2. Since the m - m’ truncated rows of A 
not contained in A” are dominated by some row in A”, the m x k submatrix A’ 
of A must also have property T6.k with p = cr(G’). Thus (ii) cannot be satisfied 
by A. 0 
Corollary 1. L e t A  be a zero-one matrix of size m X n. A is almostperfecf, i.e., A 
is the clique-matrix of an almost perfect graph G, if and only if the following two 
conditions are met: 

176 
M. W. 
Padberg 
(i) A has the property r 6 . k  for some p satisfying 2 S p sz [n/2] and k = n. 
(ii) A does not contain any m X k submatrix having property q , k  for p 2 2 and 
3 G k  S n  - 1. 
Remark 7. The strong perfect graph conjecture [2], [3], if true, now is reduced 
to proving that the only zero-one matrix A of size m X n satisfying the 
conditions (i) and (ii) of Corollary 1 and 2 G p < [n/2] is the circulant of odd size 
having exactly two positive entries in every row and column, i.e., A is the 
clique-matrix of an odd cycle without chords. A characterization of almost 
perfect matrices in graphical terms appears advantageous if one wants to check 
the perfection of a zero-one matrix. For, similarly to the criterion for the total 
unimodularity of a matrix A, a direct check of the perfection of a zero-one 
matrix via the necessary and sufficient criterion of Theorem 1 is - 
computation- 
ally - 
an impossible task, whereas graphical criteria - 
at least in the context of 
total unimodularity - are relatively easily verified or known to be satisfied by 
the physical conditions of a problem under consideration. 
Example 1. Since a zero-one matrix A is perfect if it is the clique-matrix of a 
perfect graph (and vice versa), the clique-matrices of perfect graphs furnish 
examples of zero-one matrices satisfying the condition (ii) of Theorem 1. Among 
the graphs known to be perfect are the rigid circuit graphs [7] (or ‘triangulated’ 
graphs [2]), the comparability graphs and the ‘i-triangulated’ graphs, see e.g. (21. 
The example of rigid circuit graphs provides examples of zero-one matrices 
which are perfect, but nor totally unimodular. (I am indebted to D.R. Fulkerson 
for this example.) 
Example 2. Consider the graph G of Fig. 1 and its associated clique-matrix A in 
Fig. 2. The submatrix A ’, made up of columns 1,2,3 and 4 and rows 1,6, 11 and 
16, has a determinant of 3. Consequently, A is not totally unimodular. Due to 
the simple structure of A, we find by inspection that A is perfect. (Checking 
condition (ii) of Theorem 1 amounts to proving that G does not contain an odd 
cycle without chords.) Furthermore, the matrix A provides us with an example 
where AT, the transpose of a perfect matrix, is not perfect. This is remarkable 
since it is different from total unimodularity. The above example can be 
generalized to prove that given any natural number k there exists a perfect 
matrix A having a minor whose determinant in absolute value equals k. 
(Replace K4 by Kk+, and the G,, i = 1,. . . ,4, by k + 1 copies of GI, say, each of 
which is connected to & + I  
in a similar fashion as done above.) This indicates 
why a characterization of perfect matrices in terms of forbidden matrices is 
appropriate rather than a characterization in terms of forbidden subdetermin- 
ants (which is not possible here, but possible for totally unimodular matrices). 

A characterization of perfect matrices 
I 
0 0 0 
1 
1 0 0 
0 
1 
1 
0 
0 0 
1 
1 
I 
0 0 
I 
0 0 0 0 
0 0 0 0 
0 0 0 0 
0 0 0 0 
0 0 0 0 
18 
17\ 
0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 
1 
1 0 0 0 0 0 0 0 0 0 0 
0 
1 
1 0 0 0 0 0 0 0 0 0 
0 0 
I 
1 0 0 0 0 0 0 0 0 
I 
0 0 
1 0 0 0 0 0 0 0 0 
A =  
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
o 0 
o 
o o o 
Fig. 1. 
I 
2 3 4 S 6 
7 
X 9 
10 11 12 13 14 IS 16 17 I X  19 20 
1
0
 0 0 0 0 0 0 
0 
1 
1 0 0 0 0 0 
0 0 
1 
I 
0 0 0 0 
I 
I 
o o o o o o 
1
1
1
0
 
0 0 0 0 
0 0 0 0 
0
0
0
0
 
0
0
0
0
 
0
1
1
1
 
0
0
0
0
 
0
0
0
0
 
0 0 0 0 
1
0
1
1
 
0
0
0
0
 
0 0 0 0 
0 0 0 0 
0 0 0 0 
1
1
0
1
 
0
0
0
0
 
0 0 0 0 
0
0
0
0
 
0 0 0 0 
1
1
1
1
 
0
0
0
0
 
0 0 0 0 0 0 0 0 
1 
0 0 
1 0 0 0 0 
0 0 0 0 0 0 0 0 - 
0 0 0 0 
1 0 0 0 
0 0 0 0 0 I) 0 0 0 0 0 0 
I 
1 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 
I 
I 
0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 
I 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 Ll 
I 
0 0 
I 
Fig. 2. 

178 
M. 
W. Padberg 
References 
[I] E. Balas and M.W. Padberg, On the set covering problem, Oper. Res. 20 (1972) 1152-1161. 
[2] E. Balas and M.W. Padberg, On the set covering problem 11: an algorithm, Oper. Res. 23 (1975) 
(31 C. Berge, Graphes et hypergraphes (Dunod, Paris, 1970). 
[4] C. Berge, Introduction B la thtorie des hypergraphes, Lecture Notes, Universit6 de Montrtal 
[S] C. Berge, Balanced matrices, Math. Program. 2 (1972) 19-31. 
[6] V. Chvhtal, On certain polytopes associated with graphs, J. Comb. Theory, Ser. B 18 (1975) 
171 D.R. Fulkerson, Blocking and antiblocking pairs of polyhedra, Math. Program. 1 (1971) 
[8] D.R. Fulkerson, On the Perfect Graph Theorem, in: T.C. Hu and S.M. Robinson, eds., 
[9] F.R. Gantmacher, Matrix Theory, Vol. 2 (Chelsea Publishing Company, New York, 1964) 
74-90. 
(Summer 1971). 
138-154. 
168-194. 
Mathematical Programming (Academic Press, New York, 1973) 69-77. 
(translated by K.A. Hirsch). 
1101 R. Garfinkel and G. Nemhauser, Integer Programming (Wiley, New York, 1972). 
(111 B. Griinbaum, Convex Polytopes (Wiley, New York, 1966). 
[12] L. Lovhsz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
[13] L. Lovasz, A characterization of perfect graphs, J. Comb. Theory, Ser. B 13 (1972) 95-98. 
253-268 (this volume, pp. 29-42). 
[14] M.W. Padberg, On the facial structure of the set covering problem, Math. Program. 5 (1973) 
199-215. 
[15] M.W. Padberg, Perfect zero-one matrices, Math. Program. 6 (1974) 18CL196. 
[16] M.W. Padberg, Almost integral polyhedra related to certain combinatorial optimization 
[17] H. Sachs, On the Berge conjecture concerning perfect graphs, Combinatorial Structures and 
[IS] L. Trotter, Solution characteristics and algorithms for the vertex packing problem, Technical 
problems, Linear Algebra & Appl. 15 (1976) 69-88. 
their Applications (Gordon and Breach, New York, 1970) 377-387. 
Report no 168, Ph.D. Thesis, Cornell University (January 1973). 

PART IV 
WHICH GRAPHS ARE IMPERFECT 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 181-192 
@ Elsevier Science Publishers B.V. 
GRAPHICAL PROPERTIES RELATED TO 
MINIMAL IMPERFECTION* 
R.G. BLAND 
School of Operations Research and Industrial Engineering, Cornell University, Ithaca, NY 
14853, USA 
H.-C. HUANG** 
Department of Economics and Statistics, Nanyang University, Singapore 
L.E. TROTTER, Jr.* ** 
School of Operations Research and Industrial Engineering, Cornel Uniuersity, Ithaca, NY 
14853, USA 
Say that the graph G is partitionable if there exist integers a 2 2 ,  w 2 2 ,  such that 
I V ( G )  I = a m  + 1 and for every u E V ( G )  there exist partitions of V(G)\ u into stable sets of 
size a and into cliques of size w. An immediate consequence of Lovasz’ characterization of 
perfect graphs is that every minimal imperfect graph G is partitionable with a = a ( G )  and 
w = w ( G ) .  
Padberg has shown that in every minimal imperfect graph G the cliques and stable sets of 
maximum size satisfy a series of conditions that reflect extraordinary symmetry in G. Among 
these conditions are: the number of cliques of size w ( G )  is exactly I V(G)I; the number of 
stable sets of size a ( G )  is exactly I V ( G ) / ;  
every vertex of G is contained in exactly o ( G )  
cliques of size w(G) and a ( G )  stable sets of size a(G); for every clique Q (respectively, 
stable set S) of maximum size there is a unique stable set S (clique Q )  of maximum size such 
that Q n S = 0. 
Let C: denote the graph whose vertices can be enumerated as u I , .  . . , u, in such a way that 
u, and u, are adjacent in G if and only if i and j differ by at most k, modulo n. Chvital has 
shown that the Perfect Graph Conjecture is equivalent to the conjecture that if G is minimal 
imperfect with a ( G ) =  a and w(G)=w, then G has a spanning subgraph isomorphic to 
Padberg’s conditions are sufficiently restrictive to suggest the possibility of establishing the 
Perfect Graph Conjecture by proving that any graph G satisfying these conditions must 
contain a spanning subgraph isomorphic to C:::,, where a ( G )  = a and w(G) = w. It is shown 
here, using only elementary linear algebra, that all partitionable graphs satisfy Padberg’s 
conditions, as well as additional properties of the same spirit. Then examples are provided of 
partitionable graphs which contain no spanning subgraph isomorphic to C:::,, where 
a ( G )  = a and w(G) = w. 
c::: I .  
* Reprinted from Discrete Math. 27 (1979) 11-22. 
** Research partially supported by NSF Grant ENG 76-09936. 
*** Research partially supported by NSF Grant ENG 76-09936 and Sonderforschungsbereich 21 
(DFG). 
181 

182 
R.G. Bland ef al. 
1. Introduction 
A graph G is called perfect if every induced subgraph H of G has chromatic 
number y ( H )  equal to w(H), the clique number of H (the size of a largest clique 
in H). The notion of perfection is due to Berge (see [l], [2], [3]) who offered two 
conjectures concerning perfect graphs. Lovisz [ll] proved the weaker of the two 
conjectures: 
Theorem 1 (The Perfect Graph Theorem [ll]). A graph G is perfect if and only if 
the complement graph d is perfect. 
Thus G is perfect if and only if for every induced subgraph H of G the 
srability number a ( H ) ,  the size of a largest stable set (or anticlique), is equal to 
6(H), the minimum number of cliques whose union covers H. 
Let n(G) denote the number of vertices in graph G. One of Lovisz’ 1121 
proofs of Theorem 1 established the following stronger result. 
Theorem 2 [12]. G is perfecr if and only if a ( H )  - w ( H )  2 n ( H )  for all induced 
subgraphs H. 
However, the stronger of Berge’s conjectures remains unsettled. 
Conjecture 1 (The Perfect Graph Conjecture [l]). G is perfect if and only if in G 
and 
every odd cycle of length at least five has a chord. 
Chordless odd cycles of length at least five have been termed odd holes and 
their complements odd antiholes. Obviously, any graph that has an odd hole or 
an odd antihole is not perfect. The converse has been established only for special 
classes of graphs [2], [13], [16], [17], [IS], [19], [21], [22], 1231. 
An imperfect graph G is called minimal imperfect if it has no imperfect proper 
induced subgraph. It is evident that every minimal imperfect graph G has the 
following properties. 
G is connected; 
(1.la) 
a ( G ) 2 2  and o ( G ) a 2 ;  
(l.lb) 
w (G) = 2 if and only if G is an odd hole 
(Llc) 
and a (G) = 2 if and only if G is an odd antihole; 
G is minimal imperfect. 
(l.ld) 
It is easy to deduce from LovBsz’ characterization of perfect graphs (Theorem 2 
above) that every minimal imperfect G must have the additional properties 

Graphical properties related to minimal imperfection 
183 
n = a w + 1  
(1.2a) 
for every vertex u of G there is a partition of V \  v into 
cliques of size w and a partition of V \ v into stable sets of size a, (1.2b) 
where a = a(G), w = w(G), n = n(G), and V'= V(G), the vertex set of G. 
Further properties of minimal imperfect graphs have been determined by 
Padberg [14]. Say that a clique (respectively, a stable set) of size k is a k-clique 
(k-stable set). Padberg has shown that if G is minimal imperfect, then 
and 
G has exactly n w-cliques, every vertex of G is in exactly w 
vertices of G is nonsingular. 
w-cliques, and the n x n incidence matrix of o-cliques with 
(1.3) 
By (1.ld) the analogous property for stable sets of a minimal imperfect graph 
also holds. 
Say that a graph G with n vertices is partitionable if there exist integers a 3 2 
and w 3 2 such that G satisfies (1.2). Clearly, G is partitionable if and only if 
is partitionable. The comments above indicate that every minimal imperfect 
graph is partitionable. In fact, it is easy to see that a graph is minimal 
partitionable if and only if it is minimal imperfect. In the next section we show 
that every partitionable graph satisfies (1.3). The proof uses only elementary 
linear algebra. 
Related results of Padberg [15] and some new results of the same spirit are 
also derived from (1.2); these results further emphasize the rigid symmetries of 
partitionable graphs and, therefore, of minimal imperfect graphs. Among the 
new results is one related to adjacency in polyhedra associated with minimal 
imperfect graphs. The algebraic nature of the derivations is in the spirit of the 
previous work of Fulkerson [7], [8], [9] and Padberg [14], [15] on perfect graphs. 
The simplicity of the derivation of (1.3) from (1.2) and the additional generality 
that it affords may further elucidate Padberg's interesting results. 
Chvhtal [5] denotes by Ct the graph whose vertices can be enumerated as 
uI, . . . , un so that u, is adjacent to uj if and only if the indices i and j differ by at 
most k modulo n. (Properties of the complements of graphs of the form Ci are 
studied in [20].) Clearly, for 1 2 2  C:,,, 
is an odd hole and Ci;:, 
is an odd 
antihole. Chvfital [5] proves that Conjecture 1 is equivalent to the following: 
Conjecture 2 [5]. If G is minimal imperfect with a ( G )  = a and w ( G )  = o, 
then 
G has a spanning subgraph isomorphic to CZ:l. 
In light of the apparently stringent symmetries embodied in (1.3), one might 
hope to prove Conjecture 2 and, therefore, Conjecture 1, by showing that any 

184 
R.G. Bland et a1 
graph G on ao + 1 vertices, where a = a(G), w = o(G), 
such that G and G 
satisfy (1.3), has a spanning subgraph isomorphic to CZ:,. 
In Section 3 we give 
two counterexamples, graphs which are partitionable (and hence satisfy 1.3), but 
which have no spanning subgraph isomorphic to CZ:l, where a = a(G), 
w = w ( G ) .  
2. Properties of partitionable graphs 
We will now proceed to derive Padberg’s property (1.3) from (1.2). The 
derivation may lend some insight into what additional structure associated with 
minimal imperfection must be invoked along with (1.3) in order to establish 
Conjecture 1. 
For the remainder of this section it is assumed that G is a partitionable graph 
with V(G) = V and that a 2 2  and w 2 2 are integers such that {G,a,w} 
satisfies (1.2). 
Claim 1. a ( G ) = a  and w ( G ) = w .  
Proof. From (1.2) it is clear that a ( G )  b a and o(G) 
2 w. Suppose that G has a 
stable set S with 1 S I = a + 1. Since a 5 2, w 3 2 property (1.2a) implies that 
n a 2a + 1 > a + 1, so there exists u E V \ S. By (1.2b) there is a partition of 
V \ u into a w-cliques of G, which implies that two distinct vertices of the stable 
sets S are in a common clique, a contradiction. Thus I S 1 s a for all stable sets S 
in G. Similarly 1 Q 1 s w for all cliques Q in G. 
Claim 2. For every clique Q in G there exists an a-stable set S in G such that 
Q n S = @ .  
Roof. For any o E Q there is a partition of V \ u into stable sets SL, 
S2,. . . , S,. 
By Claim 1 10 \ u I < w - 1. Since each vertex in Q is in at most one of 
S , ,  S I , .  . . , S,, we have Q f l  Si = 0 for some 1 S i 6 w. 
In the case where the partitionable graph G is minimal imperfect, the 
following Claims 3-5 culminating in Proposition 6 are either due to Padberg [14] 
or follow easily from his results. In what follows 0, denotes the k-vector 
(0,. . . , O ) ,  lk denotes the k-vector (1,. . . , l), and the superscript t is the 
transpose operator. 
Claim 3. There are n cliques in G whose n X n incidence matrix is nonsingular 
and has all row and column sums equal to w. 

Graphical properties related to minimal imperfection 
185 
Proof. Let Q = {vl,. . . , uw} be any o-clique of G. Let c, be the incidence vector 
of Q and for i = 1,. . . , w, let Mi be the a X n clique-vertex incidence matrix of 
some partition of V \  ui into w-cliques. We then define C to be the matrix 
Since each M, is an a X n matrix and n = aw + 1, C is an n X n matrix. Also 
note that the row and column sums of C are all w. Therefore y = (l/w)l,, is a 
solution of the system yC = 1,. We will prove that C is nonsingular by showing 
that y is the unique solution. Suppose that for some y #  y we have yC = 1,. 
Since j j  > 0, we lose no generality in assuming that y 2 0. For i = 1,. . . , n let e, 
denote the ith unit vector, and let c, denote the ith row of C. By Claim 2 there 
corresponds to each c, an incidence vector a, of an a-stable set such that 
a, . c, = 0. Hence for any i = 1,. . . , n we have 
a = (1, - c l ) .  a, = [(y - e,)C]. a, = (y - er)(Ca:) 
= c y,(c, * az)+(y, - l)(c, . at). 
,=1 
f # I  
But a = (n - l)/w, c, a, = 0 or 1 for i# j, and c, - a, = 0. Therefore, since y 2 0 
we have 
2 y j 3 - .  
n - 1  
w 
i = l  
I # i  
On the other hand, 
11 = 1, * 1, = (yC). 1" = y(C1',) = y . (wl.) = w ( y  * 1.1. 
Hence we have that 
From (2.1) and (2.2) we see that y = (l/w)ln. 

186 
R.G. Bland et al. 
It is important to note that the incidence vectors ai in the proof of Claim 3 
must in fact satisfy ai cj = 1 for all i f  j .  We let Si denote the a -stable set with 
incidence vector ai and denote by A the n X n matrix whose ith row is ai, 
i = l ,  ..., n. 
Claim 4. Let E and I denote the n X n matrix of ones and the n X n identity 
matrix, respectively. Then CA' = E - I, so C-' = ( l / w ) E  - A', i.e., C-' has as 
the entry in its jth row and ith column 
w - 1  , if uj E Si, 
otherwise. 
Proof. This follows immediately from the fact that ai - ci = 1 for i# j and from 
CE = WE, as implied by Claim 3. 
Claim 5. G has exactly n w-cliques. 
Proof. Let c be the incidence vector of any maximum clique in G. Then 
y = cC-' is the unique solution of the system yC = c. From Claim 4 we see that 
0 if ai * c  = 1, 
1 if ai - c =O. 
Yi = 
Also 
w c yi = y (a:) 
= (yC). 1" = c . 1, = w, 
i = l  
implying that cT=, 
y, = 1. Thus y = (y,,. . . , yn) has y, = 1 for some i and y, = 0 
for all j# i, so c = c,. 
It follows from Claim 5 and the proof of Claim 3 that the a-stable set S of 
The results above are summarized in the following proposition. 
Claim 2 having S n Q = 0 for some w-clique Q is unique. 
Proposition 6. Let a 3 2 be integers and let G be a graph that satisfies (1.2). Then 
G has exactly n = (YW + 1 (maximum) w-cliques. There is a 1-1 correspondence 
between w-cliques and a-stable sets, pairing each o-clique Q with the unique 
a -stable set S having S n Q = 0. The incidence martix of @-cliques with vertices is 
nonsingular with all row and column sums equal to w. Furthermore G, the 
complement of G, and 6 = w. W = (Y also satisfy (1.2). 

Graphical properties related to minimal imperfection 
187 
Since minimal imperfect graphs are partitionable, Proposition 6 includes 
Further properties follow from those outlined above. These will be stated in 
Padberg's property (1.3) for minimal imperfect graphs. 
terms of cliques; analogous properties obviously hold for stable sets. 
Claim 7. The partition of the vertices of G\vi into w-cliques is unique. 
Proof. A partition of the n - 1 = a w  vertices of G \ v, into w -cliques represents 
a solution of the system yC = (1, - e!). Since C is nonsingular, y is unique. 
Claim 8. For v E V, the a a-stable sets that contain v correspond (in the sense 
of Proposition 6) to the a w-cliques in the unique partition of the vertices of 
G \ u into w-cliques. 
Proof. Let v E V and let {Ql, Q 2 , .  . . , Q,} be the unique partition of V \ u into 
w-cliques. Recall that for 1 
i G a, Si is the unique a-stable set having 
S, fl Q, = 0. Since IS, n 0, I =  1 for all j #  i, we have 1 S, n (V\{v})i = a  - 1. But 
1 S, I = a, so it must be that v E Si. 
Let B be the p x n incidence matrix of all maximal cliques of G ; p 2 n since 
G may have maximal cliques Q with 1 Q I < w. Let R :  denote the nonnegative 
orthant of R" and let BG and PG be the polytopes 
PG ={x E R :  : Bx'G l;} 
and 
BG = convex hull {X E {0,1}" : Bx'S 1;). 
Clearly BG C PG and the set of integer extreme points of PG is the same as the 
set of extreme points of BG; it is precisely the set of incidence vectors of stable 
sets of G. Furthermore, since C is a nonsingular submatrix of B and Cx' = 1; for 
x = (l/w)l,,, it follows that (l/w)ln is an extreme point of PG. Padberg proved 
the next claim. 
Claim 9 [15]. If G is minimal imperfect, then the point (l/w)ln is the unique 
fractional extreme point of PG. 
The following lemma, which can be easily proved, will be useful in the proof of 
Claim 9. 
Lemma 9.1. Let 
61,. . . , S. 
be 
positive 
with 
S ,  +. . . + 6, s nE. 
Then 
l/S1 +. * - + 1/S, 3 n / s .  

188 
R. G. Bland et al. 
Proof of Claim 9. Note that every x E Pc must satisfy Cx' s lt,, or equivalently, 
s' = 1: - Cx' 3 
From Claim 4 C ' = ((l/w)E - A '), and as already observed, 
C-'l: = (l/w)lk. Let LT = 1, . s. Then 
Observe that 
I 1  
w 
I;x 
=(l-V-+CTa, 
and so 
1, 
' X  z a  if and only if 
CT 4 1. 
1 
c)- lL+ A'S'. 
w 
(2.3) 
Since s 3 0" wc have u 2 0, and from (2.3) and (2.4) we see that 1, . x 3 a if 
and only if I is a convex combination of the extreme point ( l / w ) l n  of Pc and the 
extreme points of PG corresponding to a-stable sets in G. 
Suppose that x = (x,, . . . , x,) is a fractional extreme point of PG. Then clearly 
1 > x, > 0 for j = 1.. . . , n, since G is minimal imperfect. Hence there exist n 
cliques of G yhose n X n incidence matrix D is nonsingular and has Dx' = 1:. 
Let 1,D = 6 = (S,, . ..,an) and for j = 1,. . . , n let 8' = (a;, . . . , a',,) have 6: = 0 
and 6: = 6, for all k #  j .  Since G is minimal imperfect, the linear form 6' . y 
achieves a maximum over PG at an extreme point y = y' that is the incidence 
vector of a stable set in G. Since x #  y' E PG and D is nonsingular, we have that 
n = 6 . x > 6 . v'. and since 6 . y' is an integer, n - 1 2 6 . y' 3 6' . y'. Further- 
more, because y = y' maximizes 6' . y over y € PG, we see that 
n - 1 3 6' . x = 6 . x - 6'X' = n - S'X,. 
Thus 6,x, 3 I ,  and since 6 . x = n we obtain 6,x, = 1. or x, = l/& for j = 1,. . . , n. 
Also note that 6, +. . . + 6, d nw, since w ( G )  = w and each row of D is the 
incidence vector of a clique in G. It now follows from Lemma 9.1 that 
I,, 
x = 1/al + .  . . + 1/6, 2 n / w  > a. 
Thus (2.4) implies that x = (l/w)l,. 
It is easy to derive from Claim 4 another result of Padberg [15]: the fractional 
extreme point ( l / w ) l n  is adjacent to each of a l , .  . . , a, in Pc. While the proof of 
Claim 9 uses minimal imperfection (the result obviously fails if G is not minimal 
imperfect), the following related result is true for all partitionable graphs G. 
Claim 10. The subgraph of G induced by the symmetric difference of any two 
a -stable sets is connected. 

Graphical properfies related to minimal imperfection 
189 
Proof. Suppose that S, and S,, if j, are two maximum stable sets; let a, and a, be 
the associated incidence vectors. Let 
S,, u S,, = S, \ S, with S,l n S,, = 0 
and let 
S,, u S,, = S, \S, with S,, n SJ2 = 0, 
where S,, U S,, is a component of the subgraph induced by (S, \ S,) U (S, \ S,). 
Thus S,l U S,, and S,, U S,, are stable sets, and consequently 
S=S,,US,,U(S,nS,) 
and 
S=S,,uS,,U(S,nS,) 
are a-stable sets. Let 6 and d be the incidence vectors of 
and s, respectively. 
Now, 6 + Ci = u, + a,, so these four vectors are linearly dependent. Hence, by the 
linear independence of the y1 incidence vectors of a-stable sets, it must be that 
either a, = 6 and a, = Ci or a, = 6 and a, = 6. Therefore the subgraph induced 
by (S, \S,) U (S, \S,) is connected. 
Chvatal [4] has shown that if B is a polytope that is the convex hull of the 
incidence vectors of the stable sets in a graph G, then two extreme points of B 
are adjacent if and only if the symmetric difference of the corresponding stable 
sets induces a connected subgraph of G. Thus, Claim 10 together with Chvatal's 
result implies that each pair of extreme points of BG corresponding to a -stable 
sets is adjacent in BG. Claim 9 can then be used to prove that the extreme points 
corresponding to the n incidence vectors of a-stable sets in any minimal 
imperfect graph G and the unique fractional extreme point ( l / w ) l n  arc mutually 
adjacent extreme points of PG; i.e., they form an n-simplex in the skeleton of PG. 
3. Examples 
In light of the stringent symmetries embodied in (1.3), one might hope to 
prove Conjecture 2 by demonstrating that any imperfect graph with property 
(1.3) has a spanning subgraph isomorphic to C':::l, 
where a ( G )  = a, w ( G )  = w. 
We will now describe two counterexamples, partitionable graphs that have no 
spanning subgraphs of the form CZ;,. 
Consider the graph GI of Fig. I ,  having n(G,) = 10 and a ( G , )  = w ( G , )  = 3. 
Table 1 describes for each u E V(GI) partitions of V(GI)\ u into 3-cliques and 
3-stable sets. Thus GI is a partitionable graph and, therefore, satisfies (1.3). Yet 
GI has no spanning subgraph isomorphic to C;", as is evident from the fact that 
there is only one 3-clique Q' in GI, that has I Q n Q' 1 = 2, where Q = {1,2, A } ,  a 
3-clique of GI. A 5-hole is induced by the subset {I, 3,5,7,9} of V(G,). 

R.G. Blander al. 
1 
6 
Fig. I .  The partitionable graph G , .  
Table 1. Partitions of G, \ u 
Vertex 
deleted 
Clique partition 
Stable set partition 
1 
3 
4 
S 
6 
7 
8 
9 
A 
7 - 
234, 678, 59A 
345. 89A, 167 
12A, 456, 789 
123. 678, 59A 
234, 89A. 167 
12A,345, 789 
123. 456, 89A 
234, 167, 59A 
12A,345. 678 
123. 456. 789 
369, 41AA,258 
369, 47A, 158 
47A, 158, 269 
158, 269, 37A 
269, 37A. 148 
37A, 149. 258 
149, 36A. 258 
149, 36A, 257 
36A, 257, 148 
369, 257, 148 
Consider the graph G2 of Fig. 2, which has n(G2) = 13, w ( G 2 )  = 3, and 
(Y (G2) = 4. Table 2 lists partitions for each u E V(G2) of V(G2)\ u into 3-cliques 
and into 4-stable sets. The 3-clique 0 = {1,5,9} in G2 has I 0 
r l  Q' I # 2 for all 
3-cliques Q' in G2, so the partitionable graph G2 has no spanning subgraph 
isomorphic to C%. G2 contains a 5-hole induced by {1,2,5,6,8} and a 7-hole 
induced by {2,3,4,7,9, B, D}. 
Note that the pair {3,8} is in neither a maximum clique nor a maximum stable 
set in GI. The pairs (6, A }  and {S, C} have the same open status in G2. Since (1.2) 
depends only on the cliques and anticliques of maximum size, any such open pair 
can be added as an edge without disturbing property (1.2). Among the 
partitionable graphs of the form C:, 
only odd holes and odd antiholes have no 
such open pairs. 

Graphical properties related to minimal imperfection 
1 
191 
Fig. 2. The partitionable graph G,. 
Table 2. Partitions of G,\ u 
Vertex 
deleted 
Clique partition 
Stable set partition 
1 
2 
3 
4 
5 
6 
7 
8 
9 
A 
B 
C 
D 
23A, 456, 789, BCD 
lCD,345, 678, 9AB 
12D, 456, 789, ABC 
159, 23A, 678, BCD 
lCD,23X, 467, 9AB 
12D, 345, 789, ABC 
lCD,238. 456, 9AB 
159, 23A,467, BCD 
12D, 345, 678, ABC 
159, 238, 467, BCD 
ICD, 23A, 456, 789 
12D, 345, 678, 9AB 
159, 238, 467, ABC 
257B, 369C, 48AD 
148B. 369C, 57AD 
148B, 26YC, S7AD 
137B. 26YC, SXAD 
137B, 269C, 48AD 
137B, 249C, 58AD 
136B, 249C. S8AD 
136B, 249C, 57AD 
136B. 2S7C, 48AD 
148B, 257C. 369D 
148A, 257C, 369D 
148A, 257B, 36YD 
148A, 257B, 369C 
Much of our work here, including the examples GI and Gz, was first 
announced in [lo]. The authors have recently learned of the related work in [6], 
where explicit procedures for constructing partitionable graphs are given. GI 
and Gz are among the partitionable graphs discussed in [6]. 

192 
R.G. Bland et al. 
References 
[ I ]  C. Bcrgr. Firbung von Graphen, deren samtliche hzw. deren ungerade Krcise \tarr sind. Wiss. 
121 C. Berge. Graphs and Hypergraphs (North-Holland, Amsterdam. 1973). 
131 C. Berge. The history of the perfect graph conjecture (to appear). 
141 V. Chvital. On certain polytopes associated with graphs. J. Comb. Theory, Scr. B 18 (1975) 
151 V. Chvatal. On the strong perfect graph conjecture. J. Comb. Theory, Ser B 20 (1Y76) 139-141. 
161 V. Chviral, R.L. Graham. A.F. Perold and S. Whitcsidrs, Combinatorial designs relatcd t o  the 
strong perfect graph conjccture. Centre de Recherches Mathematiques. Univcrsiti. de 
Montreal. Publication 278. 
171 D.R. Fulkerson. Blocking and anti-blocking pairs of polyhedra. Math. Program. 1 (1971) 
1 68- 194. 
[XI D.R. Fulkerson. Anti-blocking polyhedra. J. Comb. Theory I2 (1972) S(k71. 
191 D.R. Fulkcrson. On the perfect graph theorem. in: T.C. Hu and S.M. Robinson. cds.. 
Mathematical Programming (Academic Press, New York, 1973) 69-76. 
101 H.-C. Huang. investigations on combinatorial optimization, Ph.D. Thesis. School of Organiza- 
tion and Management, Yale University (School of OR/IE, Cornell University, Technical Report 
No. 308 (1976)). 
[ 111 1.. Lovrisz. Normal hypergraphs and the perfect graph conjecture. Discrete Math. 2 (1972) 
253-267 (this volume, pp. 29-42). 
[ 121 L. Lovasz. A characterization of perfect graphs, J. Comb. Theory. Scr. B 13 (1972) 95-98. 
[ 131 H. Meyniel. O n  thc perfect graph conjecture. Discrete Math. I6 (1976) 339-342. 
[ 141 M. Padberg. Pcrfcct zero-one matrices, Math. Program. 6 (1974) IX(k196. 
1 IS] M. Padberg. Almost integral polyhedra rclated to certain combinatorial optimization problcms. 
Linear Algebra & Appl. IS (1976) 69-88. 
[ 161 K.R. Parlhasarathay and G. Ravindra, The strong perfect graph conjecture is true for K,,,-free 
graphs. J. Comb. Theory, Ser. B 21 (1976) 212-223. 
[ 171 K.R. Parthasarathay and G. Ravindra, The validity of the strong perfect-graph conjccture for 
(K4 - *)-free graphs, J. Comb. Theory, Ser. B 26 (1079) 98-100. 
[ 181 H. Sachs. On the Berge conjecture concerningperfect graphs. in: Combinatorial Structures and 
Thcir Applications (Proceedings of the Calgary International Conference, 1969) (Gordon and 
Breach, New York, 1970) 377-384. 
Z. Martin-Luther-Univ. Halle-Wittenberg Math.-Natur. Reihe I 14 (1961). 
138- 154. 
1191 L.E. Trotter, Jr.. Line perfect graphs. Math. Program. I2 (1977) 255-259. 
[ZO] L.E. Trotter. Jr.. A class of facet producing graphs for vertex packing polyhedra. Discrete Math. 
[21] A.C. Tucker. The strong perfect graph conjecture for planar graphs, Canad. J. Math. 25 (1973) 
(221 A.C. Tucker, Coloring a family of circular arcs, SlAM J. Appl. Math. 29 (1975) 493-500. 
[23] A.C. Tucker. Critical perfect graphs and perfect 3-chromatic graphs. J. Comb. Theory, Ser. B 23 
12 (1975) 373-388. 
103-114. 
(1077). 

Annals of Discrete Mathematics 21 (1984) 193-195 
0 
Elwvicr Science Publishers B.V. 
AN EQUIVALENT VERSION OF 
THE STRONG PERFECT GRAPH CONJECTURE 
v. CHVATAL 
Sciiool 01 Computer Scieiice. McGill Uiiiuenity, Monrrenl. C~iiiiiih 
When G is a graph, a ( G )  denotes the largest size of a stable (independent) set 
of vertices in G and w ( G )  denotes the largest size of a clique in G. A graph is 
called perfect if each of its induced subgraphs H is w(H)-colorable. This notion 
comes from Claude Berge [I], [2], who conjectured that 
every minimal imperfect graph is isomorphic to a cycle whose length 
is odd and at least five or to the complement of such a cycle. 
This conjecture is known as the Strong Perfect Graph Conjecture. 
An equivalent version of the Strong Perfect Graph Conjecture was proposed 
in [I]; the purpose of this note is to present the argument from [ 11 in a slightly 
different form. We shall denote by C: the graph with vertices u I ,  u2,. . . , u,, such 
that u, is adjacent to u, if and only if 1 i - j I d k, with subscript arithmetic modulo 
n. 
Theorem. Let G be a graph which contains a spanning subgraph isomorphic to 
Czi:l with a = a ( G )  and w = w ( G ) .  If a 3 3 and w a 3 then G is not minirnal 
imperfect. 
Proof. Writing n = a w  + 1, we may enumerate the vertices of G = (V, E )  as 
uI, u?, . . . , u,, in such a way that (with subscript arithmetic modulo n )  
u,u,+, E E 
for all i and for all j = 1,2,. . . , w - 1. 
(1) 
Now we may assume that 
U , ~ , + , < ~ E  
E 
for all i and for all j = 1,2,. . . , a  - 1; 
otherwise the subgraph induced by u,, v , + ~ ,  
. . . , u,+,, is not w-colorable, and so G 
is not minimal imperfect. Next, writing w, = u,, for all i = 1,2,. . . , n, we record 
(2) as 
w,w,+,EE for all i and for all j = 1,2,.. . , a  - 1. 
(3) 
193 

194 
V. Churital 
From (3), we conclude easily that every clique of size w consists of vertices 
w , ,  w , ~ ~ , .  
. . , w,,,,, I)u for some i. To put if differently, 
every clique of size w consists of consecutive u, 's. 
(4) 
Similarly, (1) implies that 
every stable set of size a consists of consecutive wi's. 
(5) 
If P stands for the set of vertices u,, u2, uO+1, uw+3 and 
uku+2 with k = 
2,3,. . . , a - 1 then (4) implies easily that 
every clique of size w includes a vertex from F. 
(6) 
Similarly, if Q stands for the set of vertices W
~
+
I
-
~
~
,
 
w ~ - ~ ~ . ~  
W
~
+
Z
-
~
~
,
 
w ~ + I - ~  
and 
wLu with k = 0, 1,. . . , w - 3 then (5) implies easily that 
every stable set of size a includes a vertex from Q. 
(7) 
Note that uz = 
LL,+~ = w.+~-,, uu+3 = Wn+l-3o, uzw+2 = w
~
+
~
-
~
~
 
and u, = wo. 
Since a 3 3 and w 3 3, these five distinct vertices belong to both P and Q. Hence 
J P  u 01s a + w  - 1. 
(8) 
The rest is easy: it sutiices to consider the subgraph H of G induced by all the 
vertices outside F and 0. By (6), (7) and (S), we have 
w ( H ) s w - l ,  a ( H ) s ( ~ - l  and JHl>(a-l)(u-l), 
respectively. It follows that H is imperfect, and so G is not minimal 
imperfect. 0 
Corollary. The Strong Perfect Graph Conject~tre is true if and only if euery 
minimal imperfect graph G contains a spanning subgraph isomorphic to Czi;, 
wirh a = a ( G )  and w = w ( G ) .  
Proof. To establish the 'if' part, consider a minimal imperfect graph G. By the 
assumption, G contains a spanning subgraph isomorphic to Czil, with LY = 
a ( G )  and w = w ( G ) ;  by the above theorem, a s 2  or w 5 2 .  It is an easy 
exercise to show that G is isomorphic to Czo+l 
in case w S 2  and that G is 
isomorphic to the complement of C2w+l 
in case a s 2 .  
To establish the 'only if' part, it suffices to observe that the cycle of length 
2 k  + 1 with k 2 2  is isomorphic to C:ull. with a = k, w = 2 and that the 
complement of this cycle is isomorphic to Czi;, with a = 2, w = k. 0 

An equivalent version of the Srrong Perfect Graph Conjecture 
195 
References 
[l] C. Berge, Farbung von Graphen, deren samtliche bzw. deren ungerade Kreise starr sind, Wiss. 2. 
[2] C. Berge, Sur une conjecture relative au probltme des codes optimaux, Cornrn. 136me assemblee 
[3] V. Chvatal, On the Strong Perfect Graph Conjecture, J. Comb. Theory 20 (1976) 139-141. 
Martin-Luther Univ. Halle-Wittenberg 114 (1961). 
genCrale de I’URSI, Tokyo (1962). 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 197-206 
@ Elsevier Science Publishers B.V. 
COMBINATORIAL DESIGNS RELATED TO THE 
PERFECT GRAPH CONJECTURE* 
v. CHVATAL 
School of Computer Science, McGill University, Montreal, Canada 
R.L. GRAHAM 
Bell Laboratories, Murray Hill, New Jersey, U.S.A. 
A.F. PEROLD 
Harvard Business School, Boston, Massachusetts, USA 
S.H. WHITESIDES 
School of Computer Science, McGill Uniuersity, Montreal, Canada 
Introduction 
Our graphs are ‘Michigan’ except that they have vertices and edges rather 
than points and lines. If G is a graph then n = n(G) denotes the number of its 
vertices, a = a ( G )  denotes the size of its largest stable (independent) set of 
vertices and w = w ( G )  denotes the size of its largest clique. The graphs that we 
are interested in have the following three properties: 
(i) n = a w + l ,  
(ii) every vertex is in precisely a stable sets of size a and in precisely w cliques 
of size w, 
(iii) the n stable sets of size a may be enumerated as S , ,  Sz,. . . , S, and the n 
cliques of size w may be enumerated as C1,Cz, ..., C, in such a way that 
S, n C, =0 for all i but S, n C,#B whenever i #  j .  
We shall call them (a, 
w)-graphs. This concept, contrived as it may seem at 
first, arises quite naturally in the investigations of imperfect graphs; we are about 
to explain how. 
In the early 1960’s, Claude Berge [I], [2] introduced the concept of a perfect 
graph : a graph is called perfect if and only if, for all of its induced subgraphs H, 
the chromatic number of H equals w ( H ) .  Berge formulated two conjectures 
concerning these graphs: 
* Reprinted from Discrete Math. 26 (1979) 83-92. 
197 

(I) a graph is perfect if and only if its complement is perfect; 
(11) a graph is perfect if and only if it contains no induced subgraph 
isomorphic either to a cycle whose length is odd and at least five or to the 
complement of such a cycle. 
The concept of a perfect graph turned out to be one of the most stimulating 
and fruitful concepts in modern graph theory. The weaker conjecture (I), proved 
in 1971 by Lovasz [lo], became known as the Perfect Graph Theorem. The 
stronger conjecture (II), still unsettled, is known as the Perfect Graph Conjec- 
ture. 
A graph is called minimal imperfect if it is not perfect itself but all of its proper 
induced subgraphs are perfect. Clearly, every cycle whose length is odd and at 
least five is minimal imperfect, and so is its complement. The Perfect Graph 
Conjecture asserts that there are no other minimal imperfect graphs. The first 
step towards a characterization of minimal imperfect graphs was made again by 
Lovasz [Ill: every minimal imperfect graph satisfies n = a w  + 1. 
It follows from this that, in a minimal imperfect graph G, 
for every vertex u E G, the vertex set of G - u  can be 
partitioned into a cliques of size w, and into w stable sets of 
size a. 
Further refinements along this line are due to Padberg [12]: every minimal 
imperfect graph is an (a,w)-graph. (Bland et al. [3] strengthened Padberg's 
result by proving that every graph satisfying (1) in an (a,w)-graph.) Hence 
characterizing (a, 
w )-graphs might help in characterizing minimal imperfect 
graphs. 
It is easy to construct (a,w)-graphs for every choice of a and w such that 
a 2 2 and o 3 2: begin with vertices uI, u2,. . . , 
and join 0, and u, by an 
edge if and only if I i - j I s w - 1, with subscript arithmetic modulo aw + I .  The 
resulting graph, denoted by CZil, is an (a, 
w)-graph. If w = 2 then CEiI is 
simply the odd cycle Czo+,; 
if (Y = 2 then C2i:l is the complement of the odd 
cycle C,,,,. 
If a 2 3 and w 3 3 then CZ:, contains several pairs of nonadjacent 
vertices u, w such that joining u to w by an edge destroys no stable set of size a 
and creates no new clique of size w. Hence the graph obtained by joining u to w 
is again an (a, 
w)-graph. However, calling this graph new smacks of cheating: the 
structure of the largest stable sets and of the largest cliques has remained 
unchanged. To avoid such quibbling, we shall consider normalized (a, w)-graphs 
in which every edge belongs to some clique of size w. (As we shall see in a 
moment, every (a, 
w)-graph contains a unique normalized (a, 
[.')-graph.) The 
purpose of this note is to present two different methods for constructing 
normalized (a, w)-graphs other than C ~ , ~ ~ .  
The smallest of these graphs is the 
(3,3)-graph shown in Fig. 1. (This graph and the (4,3)-graph of Fig. 4 were 

Combinatorial designs related to the Perfect Graph Con]ecture 
199 
Fig. 1. 
independently presented in [3] as examples of (a, o)-graphs different from 
CZll; see also [9].) 
The problem of characterizing all the normalized (a, w)-graphs can be given at 
least two additional interpretations. First, with each (a, o)-graph we may 
associate two zero-one matrices X, Y of dimensions n x n such that the rows of 
X are the incidence vectors of the stable sets S,, Sz, . . . , S, and the columns of Y 
are the incidence vectors of the cliques C1, C,, . . . , C.. If I denotes the n X n 
identity matrix and if J denotes the n X n matrix filled with ones then clearly 
JX = XJ =aJ, JY = YJ = wJ, X Y  = J -  I. 
(2) 
In the terminology of Bridges and Ryser [4], the matrices X and Y form an 
‘(n,O,l)-system on a, o’. 
Conversely, with each pair of zero-one matrices X, Y 
satisfying (2), we may associate a graph G with vertices ul, uz, . . . , u, such that u, 
is adjacent to u, if and only if Yri = Ysi = 1 for some j. Let us show that G is a 
normalized (a, o)-graph. To begin with, each column of Y generates a clique of 
size w in G and, since X Y  is a zero-one matrix, each row of X generates a stable 
set of size a in G. To show that G has no other cliques of size w, consider an 
arbitrary clique of size w and denote its incidence vector by d. Clearly, Xd is a 
zero-one vector. In fact, since J(Xd) = (JX)d = aJd, the vector Xd has a w  = 
n - 1 ones and one zero. Hence Xd is one of the columns of J - I = XY. Finally, 
since X is nonsingular, d must be a column of Y. A similar argument shows that 
every stable set of size a in G arises from some row of X. Hence G is an 
(a, 
w)-graph; since each edge of G belongs to some clique of size w, G is also 
normalized. 

200 
V. Chvcital er al. 
The matrix interpretation makes it easier to clarify the role of normalized 
(a, w)-graphs. Consider an arbitrary (a, 
w)-graph G and delete all those edges 
which belong to no clique of size o. To show that the resulting graph H is an 
(a, 
w)-graph, it will suffice to show that every stable set of size a in H was also 
stable in G. Beginning with G, define X and Y as above; in addition, let d 
denote the incidence vector of an arbitrary stable set of size a in H. Since the 
cliques of size o are the same in G and H, the vector d Y  is zero-one. Since 
(dY)J = d (  YJ) = wdJ, the vector dY is one of the rows of XY. Since Y is 
nonsingular, d is one of the rows of X, which is the desired conclusion. Hence H 
is the unique normalized (a,w)-graph contained in G. 
In the next section, we shall make use of the fact that the equations (2) imply 
YX = X-'XYX = X-'(J - I ) X  = X-IJX - I = J - I. 
(The above observations are due to Padberg [12].) 
Before proceeding, let us point out a simple fact which may be useful in 
constructing (a,w>graphs. For the moment, we shall refer to each pair of 
matrices ( X ,  Y )  satisfying (1) as a solution. Now, let r and s be positive integers 
such that r + s = n. Let A, A * be n X r matrices, let B, B* be n X s matrices, let 
C, C* be r x n matrices and let D, D *  be s x n matrices. Finally, let us write 
XI = (A, B*), Xz 
= (A *, B), X3 = (A, B), X4 = (A *, B*) 
and 
We claim the following: 
if ( X I ,  Y l ) ,  (X2, Yz), (X,, Y3) are solutions then (X+ Y4) is a solution. 
The proof is straightforward: since 
XI Yl= A C  + B * C* = J - I, 
Xz Yz 
X , Y , = A C + B D = J - I ,  
A * C* + BD = J - I, 
we have AC = A * C * ,  BD = B*D* and so 
X4Y4 = A *C* + B*D* = J - I. 
Similarly, the equations JX4 = X4J = (YJ and JY, = Y,J = wJ follow quite 
routinely. It may be also interesting to note that: 
if ( Y,, X I ) ,  ( Y2, Xz), ( Y3, X,) 
are solutions then ( Y4, X4) is a solution. 

Combinatorial designs related to the Perfect Graph Conjecture 
20 1 
The point is that the equations 
imply X k y k  = J - I  for each k = 1,2,3. Now X4Y4 = J - I as above, and so 
An alternative interpretation of (a, w )-graphs concerns a packing problem. 
With a slight abuse of the standard notation, let K, denote the directed graph on 
n vertices such that, for every ordered pair of vertices u and w, there is a 
(unique) directed edge from u to w. Similarly, let Ka,, denote the complete 
bipartite graph in which each edge is directed from the a-set. As above, let n 
stand for aw + 1. We claim that normalized (a, @)-graphs correspond to 
partitions of the edge-set of K,, into n disjoint copies of Ka.u. With every such 
partition, one may associate n X n matrices X, Y such that the j-th column of X 
is the incidence vector of the a-set of the j-th copy and such that the i-th row of 
Y is the incidence vector of the o-set of the i-th copy. It is not difficdt to verify 
that these matrices satisfy (2), Conversely, with every pair of zero-one matrices 
satisfying (2). one may associate a partition of Kn into n disjoint copies of Km,w 
by making the directed edge uiui belong to the k-th copy if and only if 
Xtk = y k j  = 1. Incidentally, if the directions of the edges are ignored then these 
partitions become covers of the undirected K, by n copies of undirected Kn.w 
such that each edge is covered precisely twice. Designs of this kind have been 
studied by C. Huang and Rosa [6], [7], [8]. 
Finally, let us return to the link between the problem of characterizing 
(a, 
&)-graphs and the Perfect Graph Conjecture: it is not clear that a solution to 
the former would indeed help to settle the latter. In fact, Tucker [13] succeeded 
in proving the Perfect Graph Conjecture for all graphs G with w ( G )  = 3 without 
characterizing (a, 3)-graphs. By virture of Padberg’s theorem the Perfect Graph 
Conjecture may be stated as follows: 
Y4X4 = J - I. 
every (a, w)-graph G with a 3 3 and w 2 3 
contains a smaller induced imperfect graph. 
We shall say that an (a, 
w)-graph G is of type I if it contains a set W of a + w - 1 
vertices such that W n S #  P, for all stable sets of size a and W f l  C# 0 for all 
cliques of size w. Otherwise we shall say that G is of type 11. It is easy to see that 
every (a, @)-graph of type I contains a smaller induced imperfect graph (namely, 
the graph 
G - W with (a - l ) ( w  -1)+1 vertices and a(G - W ) S  
a - 1, w ( G  - W ) S  w - 1). Hence the Strong Perfect Graph Conjecture would 
follow if every (a, 
w)-graph with a 3 3 and w 3 3 were of type I. Unfortunately, 
this is not the case: the (4,4)-graph constructed in Section 2 of this paper is of 
type 11. (In [5], it has been shown that every CZ:, with a 2 3  and w a 3  is of 
type 1.1 

202 
V. Chvatal er al. 
1. The 6rst method 
Each graph C&'lb+l can be seen as arising from Ctill by a simple construc- 
tion which, vaguely speaking, leaves most of the graph unchanged and increases 
the total number of vertices by w. We are about to show that the same 
construction applies in a more general setting: if some set of 2 0  - 2 vertices of an 
(a,w)-graph G induces a subgraph resembling a piece of Cz-' then a simple 
local change in G creates an (a + 1, w)-graph H. More specifically, the proper- 
ties required of the 2w - 2 vertices uI, u2,. . . , u2w-2 in G are that 
each Of the Sets c k  = { u k + l ,  u k + 2 , .  . . , 
with k = 0,1,. . . , w - 2 is a clique, 
and that 
for each k = 2,3,. . . , o - 1, either c k - 1  is one 
of the a cliques partitioning G - uk-I or else 
Ck-2 is one of the a cliques partitioning G - u o + k - l .  
The graph H has w new vertices ul, u2,. . . , u, in addition to the old aw + 1 
vertices of G. The adjacencies in H are best described in terms of its cliques of 
size W. First of all, we delete edges which belong to the w - 1 cliques C, specified 
above and no others. Each c k  is replaced by two cliques, 
c; = { 0 k + l r  u k + 2 , .  . . 
9 &-I, 
a2,. . . 3 a k + I } ,  
c ~ = { u k + 2 , u k + 3 ,  . . . . , a ~ , v o , . . . , v w + k } .  
Finally, we introduce the clique C* = {al, u2,. . . , uw}. In case w = 3, the passage 
from G to H is schematically illustrated in Fig. 2. 
Before proving that H is indeed an (a +l,w)-graph, let us consider a few 
examples. To begin with, take G = C: and consider four consecutive vertices in 
the natural cyclic order. If these four vertices are labeled as uI, u2, u3, v4 then 
H = C&; 
however, if they are labeled as ol, v3, u2, u4 then H is the graph of Fig. 
H 
a2 
a3 
v3 
v4 
Fig. 2. 

Combinatorial designs related to the Perfect Graph Conjecture 
203 
1. Next, let G be the graph of Fig. 1. The three choices 
(Ul, uz, 0 3 ,  u4) = @,I, 2,3), 
(Vl, UP, u3,u4) = (2,0,1,9), 
(01, u2,u3,u4) = (3,1,2,0), 
lead to the (4,3>graphs shown in Figs. 3,4 and 5. These three graphs together 
Fig. 3. 
Fig. 4. 

204 
V. Chva'tal et al. 
with C:, and the graph shown in Fig. 6 are in fact the only normalized 
(4,3)-graphs. 
Now, let us establish that: 
for every vertex u E H, the vertex set of H - u 
can be partitioned into a + 1 cliques of size w. 
(3) 
First, we consider the case u E G. By (2), the vertex set of G - u can be 
partitioned into a cliques of size w. If one of these cliques is some c k  then 
replace this C, by C; and C;; otherwise simply add C* to the a cliques. Second, 
we consider the case u6Z G. Now u = ak for some k. If 1 < k < w then, by the 
assumption, either C = Ck-l belongs to the partition of G - uk-I or else C = ck-* 
belongs to the partition of G - t)u+k-l. In either case, replacement of C by CL--2 
Fig. 5. 
Fig. 6. 

Combinatorial designs related to the Perfect Graph Conjecture 
205 
and C[-l yields the desired partition of G - ak. Finally, if k = 1 then add C:I to 
the partition of G - u, ; if k = w then add C L  to the partition of G - u,-,. 
With the help of (3), proving that H is an (a + 1, w)-graph becomes a routine 
matter. Let n stand for (a + 1)w + 1 and let Y denote the n x n zero-one matrix 
whose columns are the incidence vectors of the (a - 1)w + 2 cliques of size w 
inherited by H from G and of the 2w - 1 new cliques C*, C;, C;, 0 s k s 
w -2. By this definition and by construction of H, 
we have JY = YJ = wJ. By 
(3), there is an n X n zero-one matrix X such that YX = J - I and JX = 
(a + 1)J. As we have seen in the preceding section, these equations imply 
XY = J - I. In addition, 
, 
I 
XJ = X( YJ) 
= 
(J - 
0 
w 
n - 1  
I)J 7- 
J = (a + 1)J. 
w 
Since each edge of H belongs to some clique of size w, the rows of X are the 
incidence vectors of stable sets. As in the preceding section, H had no other 
stable sets of size a + 1. Hence H is an (a + 1, w)-graph. 
2. The second method 
It seems that characterizing all the (a,w)-graphs may be a rather difficult 
problem. At the moment, we can’t even characterize those (a, w)-graphs which 
have circular symmetries. For these graphs, the associated matrices X, Y assume 
the form 
x = c  z’, 
Y = C  Z’ 
j € A  
j € B  
where Z is the permutation matrix of a cycle and 
IAI=a, I B ( = w .  
(4) 
A + B  ={1,2, ..., a w }  
(5) 
The condition XY = J - I reduces to 
with addition modulo n = a w  + 1. The graphs CZil correspond to, say, 
A ={1,2 ,..., w }  and B ={O,w,2w ,..., (a -l)w}. We are going to describe a 
more general class of solutions A, B to (4) and (5). Consequently, we shall obtain 
new (a, w )-graphs with circular symmetries. 
When n - 1 = mlm2. 
* - mk for some integers mi greater than one, then we can 
consider the sets MI, M2,. 
. . , Mk defined by 
Clearly, Z=l 
M. 
= (0, 1,. . . , n -21. 
NOW, if niGsmi 
= a for some s 
{1,2,. . . , k }  then 

2ob 
V. Chvatal et al. 
A =c 
M,, B = l + Z s M i  
iES 
satisfy (4) and (5). 
For example, if a = w = 4 then n - 1 = 24 and so we consider 
{0,1}+{0,2}+{0,4}+{0,8}={0,1, 
..., 15). 
Now we might choose 
A = {0,1) + {0,2) = {0,1,2,3], 
B = 1 +{0,4}+{0,8}={1,5,9,13}, 
A = {O, 1) + (0,4} = {0,1,4,5}, 
B = 1 + {0,2} +{0,8} = {1,3,9,11}. 
but instead we shall choose 
The latter choice yields 
X = Z " + Z ' + Z 4 + Z 5 ,  Y =z1+23+zY+z1'. 
The corresponding (4,4)-graph G has vertices o0, u l , .  . . , u16 such that ui and ui 
are adjacent if and only if 
j - i €{2,6,7,8,9,10,11,15} 
with arithmetic modulo 17. Clearly, this graph cannot be obtained by the method 
of the preceding section. 
References 
[I] C. Berge, Farbung von Graphen deren samtliche bnv. ungerade Kreise starr sind (Zusammen- 
fassung), Wiss. 2. Martin Luther Univ. Halle-Wittenberg, Math. Nat. Reihe (1961) 114. 
121 C. Berge, Sur une conjecture relative au probleme des codes optimaux, Commun. 13itme 
AssemblCe GCn. URSI, Tokyo (1962). 
131 R.G. Bland, H.-C. Huang and L.E. Trotter, Jr., Graphical properties related to minimal 
imperfection, Discrete Math. 27 (1979) 11-22 (this volume, pp. 181-192). 
[4] W.G. Bridges, Jr. and H.J. Ryser, Combinatorial designs and related systems, J. Algebra 13 
(1969) 432-446. 
[5] V. ChvBtal, On the strong perfect graph conjecture, J. Comb. Theory, Ser. B 20 (1976) 139-141. 
[6] C. Huang and A. Rosa, On the existence of balanced bipartite designs, Utilitas Math. 4 (1973) 
[7] C. Huang, On the existence of balanced bipartite designs 11, Discrete Math. 9 (1974) 147-159. 
[8] C. Huang, Resolvable balanced bipartite designs, Discrete Math. 14 (1976) 319-335. 
191 H.-C. Huang, Investigations on combinatorial optimization, Cornell University, O.R. Dept., 
1101 L. Lovasz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
[I 11 L. Lovisz, A characterization of perfect graphs, J. Comb. Theory, Ser. B 13 (1972) 95-98. 
[12] M.W. 
Padberg. Perfect zero-one matrices, Math. Program. 6 (1974) 180-196. 
[I31 A. Tucker, Critical perfect graphs and perfect 3-chromatic graphs, J. Comb. Theory, Ser. B 23 
55-75. 
Tech.Report No. 308 (August 1976). 
253-267 (this volume, pp. 29-42). 
(1977) 143-149. 

Annals of Discrete Mathematics 21 (1984) 207-218 
@ Elsevier Science Publishers B.V. 
A CLASSIFICATION OF CERTAIN GRAPHS WITH 
MINIMAL IMPERFECTION PROPERTIES 
S .H. WHITESIDES 
School of Computer Science, McGill University, Montreal, Canada 
The family of (a, w)-graphs are of interest for several reasons. For example, any minimal 
counter-example to the Perfect Graph Conjecture belongs to this family. This paper accounts 
for all (4,3)-graphs. One of these is not obtainable by existing techniques for generating 
(a + 1, w)-graphs from (a, o)-graphs. 
1. Introduction 
A graph G is said to be perfect if for each induced subgraph G' of G the size 
of the largest clique of G' is equal to the chromatic number of G'. The Perfect 
Graph Conjecture of Berge asserts that a graph is perfect if and only if it 
contains no induced subgraphs which are holes or antiholes, where a hole is a 
chordless cycle of odd length at least 5, and an antihole is the complement of a 
hole. Lovasz [12], [13] proved a weaker conjecture of Berge: a graph is perfect if 
and only if its complement is perfect. 
The Perfect Graph Conjecture has been established for several classes of 
graphs, including planar graphs [16], circular arc graphs [17], KIJ-free graphs 
[15], [19], 3-chromatic graphs [18], and graphs with maximum degree at most 6 
Another way to state the Conjecture is to, say that any imperfect graph whose 
proper induced subgraphs are all perfect must be either a hole or an antihole. 
Padberg [14] showed that such a minimally imperfect, or critical, graph must be 
an (a, w)-graph, defined below. 
[71. 
Definition. G is an (a,w)-graph if and only if 
(i) its vertex set has size aw +l; 
(ii) its largest stable set has size a, and its largest clique has size w ;  
(iii) each vertex is in precisely a stable sets of size a and w cliques of size w ; 
(iv) each clique of size w is disjoint from precisely one stable set of a, and 
each stable set of size a is disjoint from precisely one clique of size w. 
From now on, we denote the number aw + 1 by n. 
An (a, w)-graph is said to be normalized if each of its edges belongs to at least 
207 

208 
S. H. Whitesides 
one clique of size w. Each (a,w)-graph contains a unique normalized ( a , w ) -  
subgraph, because removing edges which belong to no cliques of size w does not 
create any new stable sets of size a ((61, [ 181). 
The paper of Chvatal, Graham, Perold, and Whitesides [6] establishes two 
additional contexts in which (a, w)-graphs arise. First of all, there is a correspon- 
dence between normalized (a, w)-graphs and solutions to the system of equa- 
tions 
J X = X J = a J ,  J Y =  Y J = w J ,  X Y  = J - I ,  
(1) 
where X and Y are matrices of 0’s and l’s, J has all entries 1, I is the identity 
matrix, and all these matrices are n x n. Bridges and Ryser [4] call the above 
matrices X and Y an (n, 0,1) system on a, w. Second, there is a correspondence 
between normalized (a, w)-graphs and packings of the complete graph K,, by 
complete bipartite graphs Ka.w with each edge of K, covered exactly twice. 
C. Huang [9], [ 101 and C .  Huang and Rosa [8] have studied such packings. 
The graphs denoted by CZ-’ 
are (a, w)-graphs; they have vertices vo, . . . , v),,, 
with u, adjacent to u, whenever there is a d such that O <  d < w and d = i - j or 
j - i (mod n ) .  Holes and antiholes are of this type. In [6], methods are given for 
constructing (a, w)-graphs which are not of this type. 
The purpose of this paper is to describe all normalized (4,3)-graphs. One of 
these is a graph which is neither C:, nor a graph obtainable by the methods of 
[6]. Of course, none of these graphs is a counterexample to the Perfect Graph 
Conjecture. as Tucker [18] has shown the conjecture holds for graphs with w C 3. 
2. Properties of (a, w)-graphs 
We now list several well known properties of (a, o)-graphs which we will use 
frequently throughout this paper. For convenience, we will use the word clique 
(stable set) to refer to a clique (stable set) of maximum size only. Recall that in an 
(a, wkgraph, the property of being disjoint pairs off the cliques with the stable 
sets. We will denote the stable sets by S , ,  . . . , S, and the cliques by TI,. . . , T,, 
where S, n T, = 0. 
Lemma 1. Zf G is an (a, w )-graph, then G contains exactly n = aw + 1 cliques 
(of size w )  and exactly a w  + 1 stable sets (of size a). 
Proof. This follows easily from the definition of an (a,w)-graph. 0 
Lemma 2. For each vertex v in an (a,w)-graph G, the vertices of G - v are 
partitioned by the stable sets (cliques) which are paired with the cliques (stable 
sets) containing v. 

Certain graphs with minimal imperfection properties 
209 
Proof. Let X be the matrix whose rows are the incidence vectors of the stable 
sets S1,. . . , S,, and let Y be the matrix whose columns are the incidence vectors 
of the cliques TI,. .., T,. Then we know by [6] that 
JX = XJ = aJ, JY = YJ = oJ, and XY = J - I, 
where J is the n x n matrix of l's, Also, 
Y X  = X - ' X Y X = X - ' ( J - I ) X  = X - ' J X - I = J - I .  
The lemma now follows from the fact that YX = J - 1. 0 
Remark 1. A consequence of Lemma 2 is that the pseudo p-critical graphs of 
Tucker [lS] are precisely the (a, w)-graphs. 
Lemma 3. Let G be a graph, and de,fine a graph M ( G )  by making the vertices of 
M ( G )  correspond to the cliques of G and making vertices in M ( G )  adjacent 
whenever the corresponding cliques intersect. If G is an (a, @)-graph, then so is 
M ( G ) .  
Proof. See [MI. 
3. Generation of (4,3)-graphs from (3,3)-graphs 
We assume throughout the rest of this paper that G is a normalized 
(4,3)-graph whose cliques are 'triangles' TI,. . . , TI, and whose stable sets are 
S1, . . . , Sls, where S, n T, = P, if and only if i = j. By an i,, . . . , ik-vertex, we mean 
a vertex which belongs to the stable sets S,,, . . . , Sk. By Axyr, we mean a triangle 
whose vertices are x, y, and z. 
Remark 2. We emphasize that Lemma 2 says the following: if a vertex u 
belongs to distinct triangles T,,, T,, and T,, then each other vertex of G is 
exclusively an il-vertex, an &vertex, or an &vertex. Also, it says that if distinct 
triangles 
and Tk intersect, then there are no j,k-vertices. 
Define a graph K ( G )  from G as follows. Make the vertices of K(G), like the 
vertices of M ( G ) ,  correspond to the triangles of G. This time, however, make 
vertices adjacent whenever the triangles to which they correspond intersect in an 
edge. 
We first show that the maximum degree of K ( G )  is at most 2. Then we use this 
fact to prove that K ( G )  contains a path of length at least 5 if and only if G can 
be generated from a (3,3)-graph by the first construction method of ChvAtal [6]. 

210 
S. H. 
Whitesides 
Lemma 4. The graph K ( G )  has maximum degree at most 2. 
Proof. If a triangle of G met three other triangles in edges, then the four 
triangles together would give rise to a clique of size 4 in M ( G ) .  However, M ( G )  
is a (4,3)-graph according to Lemma 3. 0 
Lemma 5. No edge of G is in three triangles. 
Proof. Suppose triangle T, with vertices a, b, and c shared an edge ab with 
triangles T, and T,. Then since T, would intersect S, and Sk, c would be a 
j ,  k-vertex, which is ruled out by Lemma 2. 0 
Lemma 6. Suppose that H is a (3,3)-graph containing the configuration of four 
vertices shown in Fig. l(a) and that either {UI, 0 2 ,  v3} is one of three triangles 
partitioning H - v4 or {u2, v3, u4} is one of three triangles partitioning H - ul. Then 
replacing the con,figuration shown in Fig.'l(a) by the configuration shown in Fig. 
1 (b) generates a (4,3)-graph. 
Proof. This is the construction of [6] specialized to the generation of (4,3)-graphs 
from (3,3)-graphs. 0 
Lemma 7. If K ( G )  contains a path of length at least 5, then G contains the 
configuration of triangles shown in Fig. 2, and 
(i) d is the only common neighbor of b and f ;  
(ii) vertices b and g can have common neighbors only if b and g are adjacent 
(similarly for a and f ) .  
-----r-r=<-------- '. 
- * - -  --__/- 
-_ 
-- 
-._ .-. 
,-- ,.- 
,, 
,, ____-------- 
____ -... 
*., 
v1 
v2 
v3 
v4 
L
=
s
b
 
v1 
v2 
v3 
v4 
(a) 
(b) 
Fig. 1. Configuration replacement generating a (4,3)-graph. An edge shown dashed is to be included 
provided that, in H, it belongs to a triangle whose third vertex is in H - {u,, u2, u,, u4}. 
Fig. 2. Configuration contained in G, where K(G) 
contains a path of length 5. Some adjacencies 
may not be shown. 

Certain graphs with minimal imperfection properties 
211 
Proof. If K ( G )  contains a path of length at least 5, then Lemma 5 implies that G 
contains the configuration in Fig. 2. 
(i) Suppose that T6 is the third triangle containing b and that T7 is the third 
triangle containing f. Then each vertex u distinct from b and f must be an 
i, j-vertex for some i in {l, 2,6} and j in {4,5,7}. In particular, if u is a 3-vertex, 
then by Remark 2 it must be a 3, 6 ,  7-vertex, as T3 intersects TI, Tz, T4, and Ts. 
Hence T6 and T7 do not intersect, again by Remark 2. Therefore, b and f have 
no common neighbors other than d. 
(ii) Suppose, by way of contradiction, that b and g are not adjacent but have a 
common neighbor h. The intersections of S,, ..., Ss with a,. . . , g  can be 
determined by repeated application of Remark 2: a E S2 f l  Ss, b E S3, c E S4, 
d E SI fl Ss, e E Sz, f E S3, and g E S, f l  S4. Consequently, h must be a 2,5- 
vertex. Hence h is not adjacent to a, as a is also a 2,5-vertex. 
Suppose h = a. Let TG be a triangle containing edge ag. By part (i), the third 
vertex of TG is neither b nor f. The five vertices of G outside TI through T6 must 
include one vertex from S3 and two vertices from each of S1, Sz, S4, Ss, and Sg. 
Remark 2 provides a contradiction: the 4-vertices must be I-vertices, and the 
5-vertices must be 2-vertices, so the 6-vertices must coincide with the 3-vertex. 
Hence h# a. 
By part (i), the 2,5-vertex h is not adjacent to f. Therefore, since G is assumed 
normalized, edge bh belongs to some triangle T6 with a 1,4-vertex i distinct from 
a,. . . , h. Edge gh belongs to some triangle T7 with a 3,6-vertex j distinct from 
a , .  . . , i. Vertices c and f are 6-vertices. If i were a 7-vertex, then either a or c 
would be a 7-vertex. Since c is a 6-vertex, it cannot be a 7-vertex, so a would be a 
7-vertex. Hence d and g would also be 7-vertices. However, g being a 7-vertex 
would contradict the fact that g belongs to T7. Therefore, b must be the 7-vertex 
of Th. Then e is also a 7-vertex. Each of S,, . . . , Sg contains exactly one of the 
unlabelled vertices of G. It follows that there is a 1,4-vertex, a 2,5-vertex, and a 
3,6-vertex. However, two of these must be 7-vertices, which is impossible. 0 
Lemma 8. If K ( G )  contains a path of length at least 5, then G can be obtained by 
the construction in Lemma 6. 
Proof. Assume G contains the configuration shown in Fig. 2. Let H be the 
graph obtained from G by removing c, d, and e, making b adjacent to f and g, 
and making a adjacent to f. Triangles TI,. . . , Ts are destroyed by the removal of 
c, d, and e. 
We need to know that a, b, f, and g do not form a clique in H. If ag were an 
edge of G, then by Lemma 7, af and bg would also be edges. Then a , .  . . , g 
would constitute a component of G, as each of these vertices is on three triangles 
from the set. Also, the remaining six vertices could not possibly have each vertex 

212 
S. H. Whitesides 
in exactly three triangles. Hence, ag is not an edge of G, and vertices a, b, f, and 
g do not form a clique in H. 
It is easy to check, using Lemma 7, that Aabf and Abfg are the only triangles 
which appear in H but not in G. Consequently, H has clique size 3 and contains 
ten triangles. Also, each vertex of H belongs to three triangles. 
Consider how the stable sets of G intersect {a,. . . , g } .  With the exception of 
S:, any stable set containing (I contains d :  if a is an i-vertex, b is a j-vertex, and 
e is a k-vertex, then d must be an i-vertex again, as long as d is not in T,. Hence, 
three stable sets contain both a and d. Similarly, three stable sets contain both d 
and g. Since vertex d belongs to S, and Ss, it follows that the two remaining 
stable sets to which d belongs both contain a and g. Further consideration along 
these lines shows that G has, in addition to S , , .  . . , S5 and the two stable sets 
containing a, d, and g, three stable sets containing b and e and three stable sets 
containing E and f. This accounts for all thirteen of the stable sets S, of G. This 
information. along with other information we are about to produce, is rep- 
resented in Fig. 3. 
Stable sets of G 
Stable sets of H 
1 cf-- I 0 
1 cf-- I 
Fig. 3. Stable sets of G and H, 
where K ( G )  has a path of length at least 5. 

Certain graphs with minimal imperfection properties 
213 
With the exception of S3, each S, loses a vertex of T3 in the formation of H 
from G. The description of the stable sets of G shows that the remaining vertices 
of S , ,  i# 3, continue to be mutually non-adjacent in H, as no stable set of G 
contains both b and g or both a and f. We will call the set of remaining vertices 
of S,, i# 3, the image of S,. Since S3 is the only stable set of G containing both b 
and f, the joining of b to f produces in H two stable sets Sb and Sf of size 3 
containing b and f, respectively. For future reference, let S3 = {b,f,x,y}, and 
note that S6 = (6, x, y} and S, = {f, x, y}. Also, note that {b, e, x, y }  is a stable set 
(one of the s6, . . . , S,,) whose image is Sb and that {e, f, x, y} is a stable set (one of 
the S6,. . . , S,,) whose image is Sf. 
We now check that the stable sets of H have the properties of stable sets in 
(3,3)-graphs. Clearly, the stability number of H is 3. The vertices of each stable 
set of H together with one of c, d, e form a stable set of G. By Remark 2, each 
vertex of G except c is an i-vertex for exactly one i in {1,2,3). Each vertex 
except d is a j-vertex for exactly one j in {2,3,4}. Consequently, each 1-vertex 
except d is also a 4-vertex. It follows that S1 and S4 have the same image. 
Similarly, S2 and Ss have the same image. As previously stated, {b, e, x, y} has 
image Sb and {c,f, x,y} has image S,. By referring to the list of stable sets of G 
given in Fig. 3, we can now deduce that there are no additional agreements 
among the images of these stable sets. This fact is shown in Fig. 3. Hence H 
contains exactly ten stable sets. Each vertex of H is a 1,4-vertex, a 2,5-vertex, or 
a 3-vertex of G. Fig. 3 shows that each of these vertices lies in a pair of stable sets 
of G which have a common image in H. Hence, each vertex of H lies on at most 
three stable sets of H. Then, counting vertex-stable set incidences in H shows 
that each vertex lies in exactly three stable sets. 
Next, we check that each of the ten triangles of H is disjoint from exactly one 
stable set of H, and vice versa. The common image of SI and S4 is the only stable 
set of H disjoint from Aabf, and the common image of Sz and Ss is the only 
stable set disjoint from Abfg. For 6 
13, T, belongs to H, and T, is disjoint 
from a stable set of H if and only if that stable set is the image of the stable set S, 
disjoint from T, in G. Thus, each triangle of H is disjoint from a unique stable 
set. Since the images of s6,. . . , SI3 together with the images of S ,  and S2 account 
for all the stable sets of H, each stable set of H is disjoint from at least one 
triangle of H. It follows that the property of being disjoint pairs the triangles and 
stable sets of H. 
We have now shown that H is a (3,3)-graph. By Lemma 2, H - a  is 
partitioned by the triangles of H disjoint from the stable sets of H containing a. 
Since the common image of S2 and Ss contains a and is disjoint from Abfg, Abfg 
is in this partition of H - a  by cliques. It fdlows that we can generate G from H 
by the construction of Lemma 6 by choosing v,, v2, u3, and u4 to be a, b, f, and g, 
respectively. 0 
i 

214 
S. H. Whitesides 
4. Short chains of triangles 
In this section, we show that if G is a (4,3)-graph, then K ( G )  must contain a 
path of length at least 4. 
Lemma 9. K ( G )  cannot have maximum path length 1 
Proof. If K ( G )  had no paths of length greater than 1, then every vertex of G 
would have degree 6. The union of the vertices of any triangle and their 
neighbors would contain fifteen vertices, which is impossible. 0 
Lemma 10. K ( G )  cannot have maximum path length 2. 
Proof. Suppose K ( G )  had maximum path length 2. Then we could assume G 
contains the configuration shown in Fig. 4. Notice that vertices a,. . . , h are 
distinct. By Remark 2, vertex a, a vertex f of T3, and a vertex h of T4 are 
2-vertices. Vertices e, d, and g are 1-vertices, b is a 4-vertex, and c is a 3-vertex. 
The remaining five vertices of G must consist of a 1-vertex i, a 2-vertex j ,  and 
three 3,4-vertices k, I, and m. Vertex a lies on TI and two additional triangles TS 
and T6- The 1-vertex of T5 and T6 must be i. Vertex d lies on T2 and two 
additional triangles T7 and T8. The 2-vertex of T, and TS must be j .  
Some 3,4-vertex k must lie on two of Ts, T6, T7, 
and T8. Since T5 and T6 meet 
at a and i, and T7 and T, meet at d and j, we may assume that k belongs to T5 
and T7. Vertex i is the 7-vertex of T5. The 6-vertex of T5 must be k, and the 
%vertex of T7 must be k. Thus T6 and TS are disjoint, by Remark 2. Thus the 
3-vertex of T, is a 3,4-vertex not in TS, and the 3-vertex of T8 must be m. Note 
that m must then be the 7-vertex of T,. 
Vertex i is on Ts, T,, and a third triangle whose 3-vertex cannot be c, k, or 1, as 
K(G) has maximum path length 2. Hence this third triangle contains the 
Fig. 4. Configuration contained in G, where K(G) 
has maximum path length 2. Some adjacencies 
may not be shown. 

Certain graphs with minimal imperfection properties 
215 
3,4,7-vertex m. But vertices i and m cannot be adjacent as they are both 
7-vertices. Thus no G exists whose K ( G )  has maximum path length 2. 0 
Lemma 11. K ( G )  cannot have maximum path length 3. 
Proof. Suppose, by way of contradiction, that K ( G )  has maximum path length 
3. Then we may assume that G contains the configuration shown in Fig. 5. It 
follows from Lemma 4 that vertices a,. . . , i are distinct. By Remark 2, a, e, a 
vertex f of T,, and a vertex i of T, are 2-vertices. Furthermore, b is a 3-vertex, d 
is a 1-vertex, c is a 4,5-vertex7 h is a 1,4-vertex, and g is a 3,5-vertex. The 
remaining vertices of G consist of two 1,4-vertices j and k, and two 3,5-vertices I 
and m. 
By Lemma 2, G - h is partitioned by triangles TI, T4, and two additional 
triangles T, and T7. We may assume T, = {e, j ,  1 )  and T7 = {i, k, m } .  Since h is a 
6-vertex, i cannot be a 6-vertex. Vertex m cannot be a 6-vertex because m is a 
3-vertex, and T, meets T6. Thus the 6-vertex of T7 must be k. Since k is a 
1,4,6-vertex, G - k is partitioned by TI, T,, T, and a fourth triangle T8 which 
must be {h, i, m } .  
The 8-vertex of Ts must be b, and consequently, e must be the 8-vertex of T,. 
Since g is a 5-vertex, and Tx meets Ts, f must be the 8-vertex of T,. If c were a 
4,5,6-vertex, then T4, Ts, T6, and {a, k, m }  would partition G - c. However, 
{a, k, m }  cannot be a triangle because it and triangles T,, Tx, and Ts would 
correspond to a path of length 4 in K (G ). Hence the 6-vertex of Ti is not c, but 
a, as 3-vertex b is not a possibility since T3 meets T,. 
Consideration of G -f shows that {a, e, g, j ,  k, 1 )  must be partitioned by two 
triangles. However, 1,4,6,8-vertex k cannot be adjacent to a 2-vertex in this set, 
as a is also a 6-vertex, and e is also an 8-vertex. Thus no G exists whose K ( G )  
has maximum path length 3. 0 
I 
f 
Fig. 5. Configuration contained in G, where K ( G )  has maximum path length 3. Some adjacencies 
may not be shown. 

216 
S. H. Whitesides 
5. The (4,3)-graphs 
The (4,3)-graphs which are obtainable from (3.3)-graphs by the method of 
Lemma 6 are listed in [6]. One of these graphs was discovered independently by 
H.-C. Huang [3], [ 111. The following theorem completes the description of all 
normalized (4,3)-graphs. 
Theorem. The normalized (4,3)-graphs consist of the graph shown in Fig. 6 
together with those graphs which can be Constructed from (3,3)-graphs by the 
method of Lemma 6. 
Proof. Suppose G is a normalized (4,3)-graph which cannot be constructed from 
a (3,3)-graph by the method of Lemma 6. Then by Lemmas 8, 9, 10, and 11, 
K(G) has maximum path length 4. We may assume the configuration shown in 
Fig. 7 appears in G, where a , .  . . , h are distinct vertices. 
e 
C 
i 
a 
m 
k 
Fig. 6. The normalized (4,3)-graph not constructible by the method of [6]. 
Fig. 7. Configuration contained in G, where K ( G )  has maximum path length 4. Some adjacencies 
may not be shown. 

Certain graphs with minimal imperfection properties 
217 
Vertex e lies on T3, T4, and an additional triangle. Since the maximum path 
length of K ( G )  is 4, e has degree 5. If e were adjacent to two vertices not in 
{ a , .  . . , h}, then exactly three vertices of G would not be adjacent to either of b 
or e. Since every stable set which contains b also contains e with the exception of 
S3, there are three stable sets containing both b and e. Thus the three vertices 
adjacent to neither b nor e would be mutually non-adjacent and would form 
with b and e a stable set of size 5. Hence e is adjacent to a fourth vertex in 
{a,. . . , h}. The 1,bvertex h of Ts is the only possibility. Since G is normalized, 
edge eh belongs to some triangle T6 whose remaining vertex i is a 3,s-vertex. 
Consider the remaining vertices. There is a 2,6-vertex j ,  a 3,5-vertex k, and 
two 1,4-vertices 1 and m. These vertices are precisely the ones adjacent to 
neither b nor e, so the subgraph they induce contains exactly three non-edges 
but no stable set of size 3. Since each triangle containing j has a 1-vertex, j must 
be adjacent to at least two 1-vertices by Lemma 5. Both these vertices must in 
fact be 1,4-vertices, as j is not adjacent to d. Similarly, k must be adjacent to two 
1,4-vertices. If neither j nor k were adjacent to h, then both would be adjacent 
to 1 and to m. Then the subgraph induced by {j, k, 1, m }  would contain at least 
four edges, which is impossible. Therefore, we may assume that j is adjacent to h 
(by symmetry). 
The 6-vertex of Ts must be g. Consider the two stable sets containing g other 
than S2 or Sb. Each one either contains c, and hence f and i, or contains d, and 
hence a and i. Hence {g, c,f, if and {g, d, a, i) are both stable sets. Consequently, 
g is not adjacent either to i or to f. Also, i and j must be adjacent, or {g, i, a, d, j }  
would be a stable set: j is not adjacent to d, and since j is a 2-vertex, it is not 
adjacent to 2-vertices a and g. 
Note that at this point, we know all three triangles containing h, namely Ts, 
T6, and a triangle consisting of h, i, and j .  
By Remark 2, G without 1,4-vertex h is partitioned by TI, T,, and two 
additional triangles. The triangle containing g must have k as its 3,S-vertex and 
must contain a 1,4-vertex 1. The vertices i, j ,  and rn form the remaining triangle. 
At the moment, we know only two of the triangles containing g : TS and Agkl. 
No additional adjacencies among b, h, 1, and k can be made, so g must be 
adjacent to a fifth vertex. The only possibility is m, and m must be joined to k to 
form the missing triangle. 
We have now found all three of the edges in { j ,  k, 1, m}, namely, km, kl, and jm. 
Vertices j and k must each have at least one more neighbor. The only possibility 
is that j is adjacent to f, and k is adjacent to a. Vertex m must be the 1-vertex of 
the triangle containing edge j f .  Vertex i is in T6, Ajmi, and Aijh. Hence l cannot 
be adjacent to i. Vertex 1 must then be adjacent to a and f, and a must be the 
common neighbor of f and 1. Hence G is the (4,3)-graph shown inFig. 6. 0 

218 
Acknowledgement 
S. H. Whitesides 
The author wishes to thank V. Chvital for the representation of the graph 
shown in Fig. 6. 
References 
[I] C. Berge, Farbung von Graphen deren siimtliche bzw, ungerade Kreise starr sind (Zusammen- 
fassung), Wiss. Z. Martin Luther Univ. Halle Wittenberg, Math. Nat. Reihe (1961) 114. 
[2] C. Berge, Sur une conjecture relative au probleme des codes optimaux, Commun. 13ibme 
Assemblte Gn. URSl (Tokyo, 1962). 
131 R.G. Bland, H.-C. Huang and L.E. Trotter, Jr., Graphical properties related to minimal 
imperfection, Discrete Math. 27 (1979) 11-22 (this volume, pp. 181-192). 
[4] W.G. Bridges, Jr. and H.J. Ryser, Combinatorial designs and related systems, J. Algebra 13 
(1969) 432-446. 
[5] V. Chvatal, On the strong perfect graph conjecture, J. Comb. Theory, Ser. B 20 (1976) 139-141. 
[6] V. Chvatal, R.L. Graham, A.F. Peroid and S.H. Whitesides, Combinatorial designs related to 
the strong perfect graph conjecture, Discrete Math. 26 (1979) 83-92 (this volume, pp. 197-206). 
[7] C. Grinstead, The strong perfect graph conjecture for graphs with maximum degree six (to 
appear). 
[S] C. Huang and A. Rosa, On the existence of balanced bipartite designs, Utilitas Math. 4 (1973) 
55-75. 
[9] C. Huang, On the existence of balanced bipartite designs 11, Discrete Math. 9 (1974) 147-159. 
(lo] C. Huang, Resolvable balanced bipartite designs, Discrete Math. 14 (1976) 319-335. 
[ 1 I] H.-C. Huang, Investigations on combinatorial optimization, Cornell University O.R. Dept. 
112) L. LOV~SZ, 
Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
[13] L. Lovasz, A characterization of perfect graphs, J. Comb. Theory, Ser. B 13 (1972) 95-98. 
[14] M.W. Padberg, Perfect zero-one matrices, Math. Program. 6 (1974) 180-196. 
[15] K. Parthasarathy and G. Ravindra, The strong perfect graph conjecture is true for K,,,-free 
[16] A. Tucker, The strong perfect graph conjecture for planar graphs, Canad. J. Math. 25 (1973) 
[17] A. Tucker, Coloring a family of circular arcs, SIAM J. Appl. Math. 29 (1975) 493-502. 
[18] A. Tucker, Critical perfect graphs and perfect 3-chromatic graphs, J. Comb. Theory, Ser. B 23 
[19] A. Tucker, Berge’s strong perfect graph conjecture, Ann. N.Y. Acad. Sci. (1979) 530-535. 
Tech. Report #308 (August 1976). 
253-267 (this volume, pp. 29-42). 
graphs, J. Comb. Theory, Ser. B 21 (1976) 213-223. 
103-114. 
(1977) 143-149. 

PART V 
WHICH GRAPHS ARE PERFECT 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 221-224 
@ Elsevier Science Publishers B.V. 
A COMPOSITION FOR PERFECT GRAPHS 
Robert E. BIXBY* 
Department of Mathematical Sciences, Rice University, Houston, TX 77251-1892, USA 
We describe a method, introduced by Cunningham and Edmonds, for composing two 
graphs, and show that this composition preserves perfection. The proof is based on a method 
for converting efficient covering afgorithms on the component graphs into an efficient 
covering algorithm for the composed graph. 
1. Introduction 
Let H and K be disjoint (simple) graphs with distinguished vertices u and U, 
respectively. (For an introduction to our graph-theoretic notation, see [ 11.) 
Define a graph Ho K, called the composition of H and K, by 
V(H0 K )  = ( V ( H )  u V(K))\{U, 81, 
E ( H 0 K )  = E ( H  - U )  U E ( K  - U )  U 
{ X Y  : X U  E E ( H ) ,  VY E E ( K ) } .  
Thus, H o K is constructed from H and K by deleting u and U, and forming a 
complete bipartite subgraph on the neighbor sets of u and u. (This composition 
is one instance of a more general construction studied in great detail in [3].) Our 
main result for H 0 K is the following: 
Composition Theorem. If H and K are perfect, then H 0 K is perfect. 
For an interesting polyhedral generalization of the above theorem see [2]. 
Let G be a graph, and let a ( G )  denote the maximum cardinality of an 
independent set of vertices in G. If G has a distinguished vertex x, let G‘ denote 
G - x, and let G” denote G with x and all its neighbors deleted. Clearly, 
a ( H o  K )  = max{a (H’) + a(K’’), a(H”) + a(K’)}. 
Our proof of the Composition Theorem is based on constructing a size a ( H  0 K )  
clique cover for H 0 K. We begin, in the next section, with a treatment of vertex 
* Research partially supported by Air Force Office of Scientific Research Grant AFOSR-82-0004, 
at Northwestern University. 
221 

222 
R.E. Bixby 
replication. This material is not strictly necessary for the proof of the Composi- 
tion Theorem (in particular, vertex replication is well-known to preserve 
perfection [4]); rather, we present it for algorithmic reasons. In Section 3, the 
Composition Theorem is proved. In Section 4, we examine weighted covering of 
H o K .  
2. Vertex replication 
For a graph H with a distinguished vertex u, and for an integer k 3 1, H k  
denotes the graph obtained by replicating u, k - 1 times. Thus, H k  has k copies 
of u (denoted, below, as ui, . . . , 
u k ) ,  no two of which are joined but each with the 
same neighbor set as u. Note that Hi = H. Note, also, that the construction of H k  
may be viewed as a special case of the composition H o K  - 
letting K be the star 
graph with k + 1 vertices and k edges, and such that u has degree k, yields 
H k  
= H o K .  
Assuming H is perfect and that an efficient algorithm is available for 
constructing minimum clique covers in H (and all its induced subgraphs), we 
show how to efficiently construct a clique cover for any replicate H k .  In 
particular, we show how to construct a cover for Hk+' 
from one for H k ,  k 3 1. 
Let X , , .  . . , X ,  be a minimum clique cover for Hk, and assume u, EX, 
( I s i s  k ) .  Let 
G = H - ((Xi \ {  Ui}) U * ' . U (xk \{ UI, 1)). 
Let Y 1 , .  
. . , Y, be a minimum clique cover for G. There are, then, two cases to 
consider: 
Case 1. s
~
n
 
- k. Then, Y1 ,..., Y,, X ,  ,..., X k ,  (Xl\{ul})u{~~+l} 
is a 
minimum cover of Hk". (Thus, s = n - k.) 
Case 2. s 2 n - k + 1. Then, {u~,~}, 
XI,. . . ,X. 
is a minimum cover of Hktl, 
since { u } ,  
. . , X, is a minimum cover of G. (Thus, s = n - k + 1.) 
Remarks. (a) Case 2 requires some justification. Since H is perfect and G is an 
induced subgraph of H, G is perfect. Hence, the existence of a minimum cover 
{ u } ,  & + I , .  
. . , X ,  for G implies the existence of an independent set I of G, such 
that u E I and I I I = n - k + 1. It follows that 
I' = ( I  \ { u } )  u {Ul, - .  . , Uk+ll 
is independent in Hk+'; but 11'1 = n + 1, and so {&+I}, 
Xi,. . . , X ,  is a minimum 
cover. 
(b) For a particular r 2 2, it will not generally be necessary to carry out the 
above computation for all H k  (2 S k S r) in order to obtain a cover for H', even 

A composition forperfeci graphs 
223 
if r < deg(u). In particular, if Case 2 occurs for some k, then X1,. . .,A,, 
{uk+l}, . . . ,{us} is evidently a minimum cover for H' (s 2 k + 1). 
(c) Note that the graph G changes in a simple way from one value of k to the 
next. The only new Xi \{ui} is the one for i = 1. Hence, to compute G we need 
simply find the Y, (in Case 1) that contains ul, and then delete Y, \{ul} from the 
old G. 
3. Clique covers for H o K  
Assume H and K are perfect, k = (Y (H') - 
(Y (H") 
3 a (K') - a(K"), 
and 
k > 0. (If k = 0, a minimum cover is trivial to construct.) Let X 1 , .  . . , X,, be a 
minimum clique cover for H k ,  where u, EX, 
(1 
i s k ) ,  and let Y I ,  . . . , Y,,, be a 
minimum clique cover for K k ,  where 
u, E Y, (1s i s k). Let Z, = 
(X,\{u,})U(Y,\{u,}) for l s i s k ,  and let 
{ z k + l ,  - .  ., Zm+n-k} = {xk+l,. 
. ., x n ,  y k + I , .  . . 7 Y m } .  
Now, n = (Y (H') and rn = (Y (K") + k, by perfection and the choice of k. Hence, 
rn + n - k = (Y (H') + a (K"), and therefore Z1,. . . , Z,,,+"-k provides a minimum 
covering for H 0 K. This proves the Composition Theorem. 
4. Weighted covers 
Assume H and K are perfect, and let w be a real-valued weight vector defined 
on V ( H  0 K ) .  We sketch a method for efficiently constructing a minimum-weight 
weighted clique cover for H 0 K, given efficient algorithms for the same problem 
on H and K, respectively. The procedure is virtually identical to that described 
in Section 3, but is more difficult to write down. 
We begin with some notation. Let G be a graph, and let c be a real-valued 
vector defined on the vertices of G. Let '23 be a family of cliques in G, and let 8 
be a real-valued vector indexed on the members of '23. For any vertex x of G, let 
Bx 
= { B  E '23 : x E B}. Finally, for B'c '23, we write O('23') = c (0, : B E B'). 
Then, the pair (O,'23) is called a c-couer of G if 
6(Bt) 3 
C, 
( i  E V(G)). 
We also use the notation 
c, : I is independent in G 

224 
R. E. Bixby 
Now, assume fi = a (w, H') - a (w, H") 
P a (w, K') - a (w, K"). Let w. = w, = 
p, and let (T, B) and (p, '3) be w-covers of H and K that minimize T(&) and 
p('3), respectively. We construct a w-cover (&a) 
for HoK that minimizes 
e(B). The construction begins with the application of the following procedure: 
Step 1. If 7rc = 0 for each C E B,, STOP. Otherwise, let C E &,, and D E Bu 
be such that TC, pD >O. 
Step 2. Set B +(C\{u})U(D\{o}), 
B' c 
B' U { B }  (initially 
B' = 0), 
8b+min{.rrc,pD}, 7rc +m - 0; and pD + p D  - 0;. Go to Step 1. 
Now, define B = 8' U @\&) U (6 \ 6"), 
and for B E B define 
e:, 
if B EB', 
eB = 
T,, if BE&\&., 
{ p8 
if BED\%,; 
(&B) can then be proved to be a w-cover of HoK that minimizes O@). 
References 
[I] J.A. Bondy and U.S.R. 
Murty, Graph Theory with Applications (North-Holland, Amsterdam, 
1976). 
[2] W.H. Cunningham, Polyhedra for composed independence systems, in: A. Bachem, M. 
Grotschel and B. Korte, eds., Bonn Workshop on Combinatorial Optimization, Annals of 
Discrete Math. 16 (North-Holland, Amsterdam, 1982) 57-67. 
[3] W.H. Cunningham and J. Edmonds, A combinatorial decomposition theory, Canad. J. Math. 22 
(1980) 734-765. 
[4] L. Lovisz, Normal hypergraphs and the weak perfect graph conjecture, Discrete Math. 2 (1972) 
252-267 (this volume, pp. 2942). 

Annals of Discrete Mathematics 21 (1984) 225-252 
0 
Elsevier Science Publishers B.V. 
POLYNOMIAL ALGORITHM TO RECOGNIZE 
A MEYNIEL GRAPH 
M. BURLET 
U.S.M.G.-IMAG-BP 53 X-38041 Grenoble Cedex, France 
J. FONLUPT 
IMAG-BP 53 X-38041 Grenoble Cedex, France 
We show that the recognition problem of a Meyniel graph is polynomial by presenting a 
polynomial recognition algorithm. The Meyniel graphs are the graphs in which every odd 
elementary cycle ( 3 5) has at least two chords. These graphs are known to be perfect. As a 
by-product we obtain new results concerning some classes contained in Meyniel graphs: 
triangulated graphs, o-triangulated graphs and parity graphs. 
1. Introduction 
For a graph G = (V, E) we denote by a (G) ( w ( G ) ,  respectively) the 
maximum cardinality of a stable set of G (of a clique of G, respectively) and by 
B(G) ( y( G) , respectively) the minimum cardinality of a covering of G by cliques 
(by stable sets, respectively). 
Perfect graphs, introduced by Berge [l], are those graphs G for which 
a(G’)= d(G’) for all induced subgraphs G‘ of G. As a result of the perfect 
graph theorem (Lovhsz [lo]) perfect graphs may also be characterized by the 
following relation: w(G’)= y(G’) for all induced subgraphs G’ of G. An 
interesting aspect of perfect graphs is their algorithmic study, i.e., to solve the 
following problems: maximum weighted stable set of G, minimum weighted 
covering of vertices of G by cliques, maximum weighted clique of G, minimum 
weighted covering of vertices of G by stable sets. All this means that we want to 
find algorithms of polynomial order in I V [  
to solve these four problems. The 
possibility of solving these four optimisation problems for perfect graphs is a 
consequence of the definition of perfect graphs: the relation a(G’) = e(G’) for 
any induced subgraph G’ of G is nothing else than a ‘strong duality relation’. 
The general papers of Grotschel, Lovasz and Schrijver [7,8] give polynomial 
algorithms for the four above-mentioned problems. Their algorithms, which are 
based on the ellipsoid method, unfortunately give no idea of the structure of 
perfect graphs, and, at the present time, appear to have no great combinatorial 
interest. Furthermore, these algorithms may not work if G is not perfect. This 
225 

226 
M. Burlet, J. Fonlupt 
brings us to another equally important basic question - the recognition 
problem, i.e., to recognize in polynomial time whether a graph G is perfect. This 
problem is very difficult (its solution would likely give a positive or negative 
answer to the strong perfect graph conjecture) but has been solved for some 
important classes of perfect graphs: bipartite graphs and their line graphs, 
triangulated graphs, comparability graphs, parity graphs, and their comple- 
ments. The recognition problem has also been solved for a number of subclasses 
of these latter graphs (see Golumbic [6]). 
In this paper we want to give a recognition algorithm which runs in polynomial 
time in I V 1, for an important class of perfect graphs: Meyniel graphs. This will 
imply that we have a good characterization, in the sense of J. Edmonds, of 
Meyniel graphs. 
Definition 1. A Meyniel graph is a graph in which every odd elementary cycle of 
length at least five contains at least two chords. 
Meyniel [ 1 I] has shown that these graphs are perfect. Later, Ravindra [I21 
proved that they are strongly perfect in the sense of Berge and Duchet. 
Note that this definition is not a good characterization of Meyniel graphs, 
since we need to enumerate all the odd elementary cycles to know whether or 
not a graph is a Meyniel graph. A by-product of our algorithm is a good insight 
into the structure of Meyniel graphs. The results of this paper will be used in a 
second paper to design good algorithms for the four optimization problems. 
In Section 2 we introduce some definitions and notation. In Section 3 we 
define an operation (amalgamation) which constructs a Meyniel graph from two 
Meyniel graphs. We also state the main theorem of this paper. In Section 4, we 
give a constructive proof of this theorem. 
In the last section, we show how the main theorem may be used to give not 
only a good characterization of, but also a polynomial recognition algorithm for 
Meyniel graphs. Furthermore, we will show briefly that this characterization and 
this recognition algorithm can be specified for certain classes of perfect graphs 
found in the class of Meyniel graphs. 
2. Notation and definition 
Notation. Let G = (V(G), E(G)) be a graph with vertex set V(G) and edge set 
E(G). When no confusion is possible we will write V and E for V(G) and E( G) . 
The complementary graph of a graph G will be denoted by (?. For a graph 
G = (V, E )  and S C V we shall denote by G(S) the subgraph induced by S, and 
by G ( S )  its complementary graph. 
- 

Polynomial algorithm to recognize a Meyniel graph 
We denote by T ( x )  the set of vertices adjacent to x, i.e., 
W )  
= {Y E v I (x, Y 1 E El. 
227 
For A C V the intersection T(x) n A will be denoted by T(x, A). Occasionally, 
when H = G(A) is a subgraph of G we shall write T(x, H )  for T(x, A). 
Terminology and definition. A minimal chain is an elementary chain which is an 
induced subgraph. The parity of a minimal chain is the parity of the number of 
its edges. 
A hole is an elementary cycle of length at least four without chords. The parity 
of a hole is the parity of the number of its edges. We say that two chords ( x ,  y ) 
and (2, t )  of an elementary cycle cross, if the vertices x, z, y, 1 are different and in 
this order on the cycle. A short chord of an elementary cycle is a chord which 
subtends a triangle. 
For a graph G = (V, E), a universal vertex for a subgraph G(A ) is a vertex x of 
V\A such that T(x, A )  = A. We can also say that x is universal for A. 
A universal vertex of a graph G is a vertex x adjacent to all the vertices in G 
(except itself). A vertex partially adjacent to a subgraph G(A) is a vertex x of 
V \ A  which is adjacent to some but not all vertices in A. 
A simplicia1 vertex of a graph G is a vertex whose neighbours form a clique. 
Let us define two families of graphs belonging to the class of Meyniel graphs: 
Complete multipartite graph. A complete multipartite graph is a graph in 
which the vertices can be partitioned into stable sets, where two vertices are 
adjacent iff they belong to different classes. Furthermore we assume there exist 
at least three classes with cardinality greater than two. 
Basic Meyniel graph (cf. Fig. 1). A basic Meyniel graph G = (V, E )  is a 
connected graph, where V can be partitioned into A, K, S such that: G(A) is a 
two-connected bipartite graph (which is not an edge); G ( K )  is a clique; x E A, 
y E K J ( x , y ) E E ;  S isastablesetof G ; Vx ES, lr(x,A)lSl. 
In the class of Meyniel graphs, the notion of simplicia1 disconnecting clique 
plays a very important role. 
Definition 2. In a graph G = (V, E ) ,  a simplicia/ disconnecting clique is a 
separating set K of G such that 
(i) G ( K )  is a clique, 
(ii) G( V\K) has at least two connected components containing more than 
one vertex and a universal vertex for G(K). 

228 
M. Burlet. J. Fonlupt 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
Basic Meyniel graph 
Fig. 1. 
"3 
Expanded cycle 
Definition 3. An expanded cycle (cf. Fig. 1) is a graph spanned by an odd 
elementary cycle. The only other edges outside this cycle are two short crossing 
chords. In other words, it can be labelled 
U ~ , U ~ , . . . , U ~ ~ + I  
such that 
(ul, u2.. . . , u Z k )  is an even hole and 1)2k+l is adjacent to only ol, u2 and UZk. The 
cardinality of an expanded cycle is its number of vertices. 
3. Amalgamating Meyniel graphs 
Let us define a particular operation which will allow the construction of a 
graph G from two graphs, GI and G2. This operation is essential in this paper. 
3.a. Description of the amalgamation of hvo graphs 
Let xi be a vertex of Gj and K, C T(xi) (i = 1,2) such that 
(a) KI and K ,  are cliques with the same cardinality, 
(b) z E K,, 
t E r(xi)\Ki j (z, t)€E(Gi) (i = 1,2), 
G is the amalgam of GI and G2 (d. 
Fig. 2) if G is obtained from GI and G2 by 
(i) one-to-one identification of the vertices of KI with the vertices of K2, 
(ii) creation of an edge between every vertex of r(xl)\KI and every vertex of 
(iii) deletion of the vertices xi (i = 1,2). 
(c) T(Xl)\KI = o  e T(xz)\K2=0. 
r(xz)\ Kz, 

Fig. 2. 
We shall denote the resulting graph by 
G = (GI, X I ,  Ki)@(G2, ~
2
,
 
Kz). 
Conversely, if for a graph G = (V, E), we can find two triples (Gi, x,, K , )  
( i  = 1,2) which satisfy the conditions (a), (b), (c) such that G = 
(G1,xl,KI)@(Gz,x2,Kz) 
we will say that G has then been decomposed by the 
amalgam operation (amalgam decomposed, @-decomposed) into two graphs GI 
and G2. 
Remark 1. We warn the reader that the special case of amalgamation with 
KI = T(xl) and K2 = r(x2) 
is different from the usual operation of identifying a 
clique Kl in GI with a clique K2 in G2. 
It may be interesting to note that amalgamation preserves perfectness. This 
result is very important in itself. However its proof will be given in a forthcoming 
paper in a more general set up. Here we shall only be concerned by the 
importance of the amalgamation in connection with Meyniel graphs. 
Definition 4. A proper decomposition of G is an amalgam decomposition of G 
into GI and G2 such that 
IV(Gi)I<I V(G)I and IV(G2)I<IV(G)I- 
In Fig. 3 we give an example of a such proper decomposition. 

230 
M. Burlet, J. Fonlupt 
G = (G,, 
x,, K,)@(G,, x,.K,) 
A @-proper decomposition of G 
Fig. 3. 
3.6. Decomposition theorem 
Theorem 1. Zf GI and G, are Meyniel graphs, then G = (GI, xi, KI)@(G2, 
x2, K,) 
is a Meyniel graph, i.e., the amalgamation of two Meyniel graphs is a Meyniel 
graph. 
Proof. We have to prove that every odd cycle ( 2 5 )  of G has two chords. First of 
all we remark that any subgraph of G is either isomorphic to a subgraph of Gi 
(i = 1,2) or the amalgamation of two subgraphs of Gi (i = 1,2), one of GI, the 
other of G2. So if there exists a counter-example G to this theorem, we can take 
one with the smallest number of vertices. So we shall assume that G = 
(GI, xl, K,)@(G2, 
x2, Kz) is either an odd hole or an odd cycle with one short 
chord. 
Let us call K the clique of G obtained by identification of K ,  and Kz, and let 
N, be the vertices of G which are the exact copy of r(xi)\Ki for i = 1,2. By 
inspection of the subgraph of G induced by K U NI U N2 we can eliminate the 
following cases: 
1
~
~
3
,
 
I N I ) > l  and IN21>1, 
INI)=l, IN2(>1 and I K ( a 1 ,  
)N,I=l, ) N I I > l  and IKI31, 
) N I l = 1 ,  INzl=l and IKI>l. 
So we have to study only the following four cases: 

Polynomial algorithm to recognize a Meyniel graph 
23 1 
= 1 and IN2/ = 1, 
NII=O and lN21=0, 
= 1  and IN21G3, 
= 1 and IN21>3. 
(a) Let us call y the vertex of K obtained by identification of y l  E T (xl) and 
yz E T(xz) (cf. Fig. 4). Let z, be the unique vertex of T(xi)\{y,} 
for i = 1,2 and let 
2’ and z” be respectively the exact copy of zI and z2 in G. Suppose that there 
exists a vertex of G, nonadjacent to x I  and a vertex of G2 nonadjacent to x 2 .  
Then (y, z’) is a separating set for these two vertices, similarly for ( y ,  2”). This is 
impossible in our situation for G. So we may assume that GI is a clique defined 
on the three vertices ( x l ,  yl, zl). Therefore the amalgamation G, of Gt and Gz, is 
isomorphic to G2, which is impossible since Gz is supposed to be a Meyniel 
graph. (Fig. 4 shows that the amalgamation (GI, x I ,  K,)@(G2, 
xz. Kz), where G I  
and G2(x2, 
yz, z 2 )  are triangles, gives a graph G isomorphic to G2.) 
Cases (b), (c) and (d) are treated in a similar way. 0 
We now state the main theorem of this paper. 
Theorem 2 (Decomposition Theorem). A connected graph G = (V, E ) ,  which is 
not a basic Meyniel graph, is a Meyniel graph if and only if G can be @-properly 
decomposed into two Meyniel graphs GI and G2. 
The preceding theorem has shown that the condition is sufficient. The proof 
that the condition is necessary will be quite long and will constitute all of the next 
section. Note that in the proof of this theorem, we will use the fact that when G 
is decomposed into GI and G2, GI and G2 are isomorphic to certain subgraphs of 
G. If G is Meyniel, then GI and Gz are also Meyniel. 
Fig. 4. 

232 
M. Burlet, J. Fonlupt 
4. Proof of the main theorem 
To prove Theorem 2, we present a sequence of polynomial time procedures. 
Combining appropriately all these procedures, we get a constructive proof of 
Theorem 2 by an algorithm polynomial in 1 VI. For each procedure, when 
necessary, some remarks or special results are established before the full 
description of this procedure. The outputs of each procedure are followed by 
‘stop’ or ‘execute procedure P,’. Instruction ‘stop’ is always accompanied either 
by a proof that G is not a Meyniel graph or by a proof that G satisfies Theorem 
2. lnstruction ‘execute procedure P,’ means that we need to enter into procedure 
P, and the results obtained up to this point are the inputs of the procedure Pi. 
The algorithm to prove Theorem 2, which is proposed in this section, begins 
by verifying whether the graph G is a basic Meyniel graph. If it is not one, it tries 
to properly decompose G, by a special case of @ (G = (Gl,xl, K1)@(G2,xZ,K2), 
with K ,  = T(xI) and K ,  = r(x2)). 
If such a decomposition exists, Theorem 2 is 
proven; if not, then there exists a hole. The algorithm detects such a hole, 
verifies whether this hole is even, and then examines the ‘neighbourhood’ of this 
hole. It may detect either of the two following configurations: a certain 
‘multipartite structure’ or a certain ‘expanded basic Meyniel subgraph’ (cf. 
Definitions 6 and 8); if not then G is not Meyniel. The configuration detected 
permits the algorithm to properly decompose this graph by the operation @. For 
the @-decomposition found in the algorithm, i.e., G = G1@G2, GI and G, are 
isomorphic to certain subgraphs of G. 
4.a. Is G a basic Meyniel graph? 
Procedure PI. In this procedure we verify if G is a basic Meyniel graph. 
input : 
G = ( V , E ) .  
output : 
complexity : 
description: 
(i) G is a basic Meyniel graph; stop. 
(ii) G is not a such graph; execute procedure P2. 
O ( I V 1’). 
Delete S, the set ,of all the simplicia1 vertices. 
Detect then K, the set of all the universal vertices. 
Verify if G(V\(K U S)) is two-connected bipartite. 
Verify that S is a stable set of G and x E S 3 IT(x,A)I 1. 
4.b. 1s G properly decomposable by a special case of @? 
In this subsection, we want to detect if G can be @-properly decomposed, 
G = (Gl,x,,KI)@(G2,x2,K2), 
where @ is restricted to the case where K ,  = 
I’(x,) and K 2  = T(x,). 
Proposition 3. Let G = (V, E )  be a Meyniel graph and a disconnecting clique K 

Polynomial algorithm to recognize a Meyniel graph 
233 
of G such that: there exists a universal vertex x for G(K) and G(V\ K) has at 
least two connected components with more than one vertex, then there exists a 
simplicial disconnecting clique K1 included in K. 
Proof. Let K1 be a clique included in K which is minimal for this property: 
G( V \  K1) has at least two connected components with more than one vertex. 
Let GI = (Vl,E1) be the connected component of G(V\ K1) containing x. Let 
G2 = ( V2, E2) be another component of G( V \  K,) containing more than one 
vertex. Let y be a vertex of GZ such that T(y, Kl) is maximal by inclusion among 
the sets T(z,K1) where z ranges over the vertices of GZ. 
We claim that 
r(y, K )  = KI. 
Suppose not, then there exists z E Vz such that T(z, K1)Z T(y, K1), and also a 
minimal chain C(y, z )  joining y to z with all its vertices in G2. We can now find a 
chain (ul = y, u2, . . . , u,) whose vertices are in C(y, z )  such that: 
T(u,, K1)C T(y, KI) V i Z  t 
and T(u,, K l ) f  T(y, KI). 
Let 
u E T(ut, K1)\T(y, Kl) 
and 
u E T(y, K,)\T(u,, Kl). 
Let 
I = 
max{i I u E T(ui, K1), i = 1 , .  . . , t } .  Note that 1 < t. The induced subgraph by 
(ur, ultl,. . . , u,, u, u )  is a hole. 
If G is a Meyniel graph this hole is even, but adding x to this hole we obtain 
an odd cycle with only one chord. So T(y,K1)= K,. 
This proves the proposition for G2, and similarly for all the connected 
components of G( V \  K,) with more than one vertex. 0 
Procedure PZ. In this procedure we check if G contains a simplicial disconnect- 
ing clique K. 
input : 
output : 
A non-basic Meyniel graph G = (V, E). 
(i) A simplicia1 disconnecting clique K, G is properly 0- 
decomposable, G = G1@GZ (cf. Remark 2); stop. 
(ii) The non-existence of such a clique K ;  execute procedure P,. 
O ( I v I"). 
For each pair of nonadjacent vertices yl and y,, find out if 
K = T(yJ n T(yz) is a disconnecting clique such that yl, y2 are in 
different components HI, Hz of G( 
V \ K )  with I V(H1)I > 1 and 
complexity : 
description: 
1 V(H*)I > 1. 
Remark 2. If Pz succeeds in finding a disconnecting clique K then G decom- 
poses. More precisely, consider yi and Hi as defined in procedure Pz ( i  = 1,2). 
Let G1 be an exact copy of G({yl} U K U V(H2)) 
where x1 corresponds to yl. Let 
G2 be an exact copy of G({ yz} U K U ( V  \ ( V(Hz) U K))) where xz corresponds to 
y2. We have G = (GI, x l ,  T(xl))@(Gz, X Z ,  ~ ( x z ) ) .  

234 
M. 
Burlet, J. Fonlupt 
4.c. Detection of a hole 
The following proposition shows that a graph G = (V, E), which is neither a 
basic Meyniel graph nor decomposable by Pz, is non-triangulated, and thus 
contains a hole. Recall that a triangulated graph is a graph in which every cycle 
of length at least four has at least a chord. A triangulated graph is a Meyniel 
graph. 
Definition 5. A basic triangulated graph G = (V, E) is a graph wherein there 
exists a partition of its vertex set into a stable set S and a clique K (cf. Fig. 5). 
These graphs are also called split graphs. They are a particular class of basic 
Meyniel graphs. 
Basic triangulated graph 
Fig. 5. 
Proposition 4. A triangulated graph G = (V, E), with no simplicial disconnecting 
clique K, is a basic triangulated graph. 
Proof. Induction on I V I .  The proposition is true for I V 1 = 1,2,3. Assume that 
the proposition is true for I V J  = n - 1. We want to prove it true for I VI = n. 
The graph G contains a simplicia1 vertex u. Thus G(V\{u)) satisfies the 
hypothesis of the proposition. By the induction hypothesis, the set V\{u} can be 
partitioned into a stable set S, and a clique K,. If T(u)C K , ,  the proposition is 
true, if not, let u be the only vertex of T ( u )  not found in K , ;  the subgraph 
induced by ( { u } U T ( o ) \ { u } )  is a clique denoted K2. We have T ( u ) C  
If the vertices of V\K2 form a stable set, the proposition is true; otherwise, 
there exists a component of G(V\K2) containing at least two vertices, thus 
K2\{u} is a separating set of G and G({u},{u}) is another connected component 
with more than one vertex of G(V\(K2\{u))). Moreover u is a universal vertex 
€or K2\{u}, we can apply Proposition 3. We have a contradiction. 
Cl 
({u 1 u n u  1)- 

Polynomial algorithm to recognize a Meyniel graph 
235 
Procedure P3. In this procedure we detect a hole in G. 
input : 
output : 
G = (V, E )  after an unsuccessful application of P2. 
(i) There is an odd hole, G is not a Meyniel graph; stop. 
(ii) There is an even hole C = (u,, u2, . . . , 
u 2 k ) ;  execute proce- 
dure P4. 
O ( I V I"). 
Choose an edge (x, y )  of G. Delete from G the edge (x, y ) and 
the vertices T ( x ) n  T ( y ) .  If x and y are linked by a chain in the 
resulting graph, take a minimal chain in that graph from x to y. 
This chain with the edge (x, y )  forms a hole (even or odd). 
Repeat the procedure, until we have found a hole. 
complexity : 
description : 
4.d. Detection of an expanded cycle 
Proposition 5. Let C = (u,, u2,. . . , u 2 k )  be an even hole in a Meyniel graph 
G = (V, E )  and let x E V\ V(C). One and only one of the following is true (see 
Fig. 6): 
(i) G (  V(C) U {x}) is a bipartite graph, 
(ii) x is a universal vertex for C, 
(iii) G( V(C) U {x}) is an expanded cycle. 
Proof. The first two cases are mutually exclusive. 
Suppose that G(V(C)U{x}) is not a bipartite graph, and that x is not 
universal for C. Then since G is a Meyniel graph, x is adjacent to two adjacent 
vertices of C and is not adjacent to at least a vertex of C. By a suitable 
relabelling of vertices of C, we can assume that x is adjacent to u, and u2 and not 
adjacent to u3. Let U, be the vertex of C with the least index (t > 3) adjacent to x. 
If t < 2k, G(x, uz, u3,. . . , u,) is a hole of G; if this hole is odd, G is not a Meyniel 
graph. If this hole is even (x, u,, uz, . . . , u,) is an odd cycle with exactly one chord. 
Therefore t = 2k, which means that G( V(C) U {x}) is an expanded cycle. 0 
Fig. 6. 

236 
M. Burlet, J. Fonlupi 
Proposition 6. Let GI = ( V,, El) be a two-connected bipartite induced subgraph 
of a Meyniel graph G = ( V, E), and x E V \ V,. One and only one of the following 
is true : 
(i) G( 
V, U { x } )  is a bipartite graph, 
(ii) x is a uniuersal verrex for G( V,), 
(iii) G( V, U {x}) contains an expanded cycle. 
Proof. Suppse that the first two assertions are false. An edge of El will be called 
a red edge, if x is adjacent to the two ends of this edge, otherwise it will be called 
a black edge. There exists a red edge (u, u,) adjacent to a black edge (u, uz), since 
G( V,) is a connected graph. Since G (  VI \ {  u } )  is a connected graph, there exists a 
minimal chain in G( V, \ {  u } )  linking u ,  and u2. Let C, be a subchain of this one 
linking a vertex u‘ to a vertex u” such that (u, u’) is red, (u, u”) is black, and u is 
not adjacent to any other vertex of C,. Then G( 
V(C,) U { u } )  is an even hole of 
(3. By Ihc preceding proposition G({x} U{u} U V(C,)) is an expanded cycle of 
G. 0 
We can remark that this proof is algorithmic (in O( I V 12)). 
To color the edges 
of G, takes at most O( I V 1’) 
steps. To find the chain joining u, and u2 requires at 
most O( I V 1:) 
elementary operations. Now, to find o f  and u” requires O( I Vl) 
operations. Then we have to check that G({x} U { u }  U V(C,)) is an expanded 
cycle (if not, G is not a Meyniel graph). We can now describe procedure P.,. 
Procedure P4. 
input: 
output : 
G = ( V , E )  and an even hole of G, C=(ulr uz,. . ., uzk). 
One and only one of the following: 
(a) A complete multipartite induced subgraph; execute Ps. 
(b) A subgraph which is an expanded cycle of cardinality 5 ;  
execute P5. 
(c) A subgraph whose set of vertices is partitioned into C and K, 
I C I > 5 and G ( C )  an expanded cycle. K is a clique containing all 
the universal vertices of G for G(C); 
execute P,. 
(d) G is not a Meyniel graph (a forbidden subgraph found); stop. 
o ( I v 13). 
V’ : = V(C). 
complexity : 
description : 
Step 1. If there exists a non-universal vertex x for G( V’), adjacent to the 
vertices of an edge of G(V’), go to step 2; else, if there exists a non-universal 
vertex x for G( V’), such that Ir(x, V’)I 2 2, go to step 3; else, go to step 4. 
Step 2. We can apply here Proposition 6. After at most O( 1 VI2) operations, 
we find either an odd hole, we have output (d), or an expanded cycle whose 
vertices (u,, i = 1,2,. . . ,2k + 1) are contained in V’ U { x } ,  ( u , , .  . . , u
~
~
)
 
an even 
hole, and k k + l  adjacent to u,, u2, u2k. 

Polynomial algorithm to recognize a Meyniel graph 
237 
If k =2, we have output (b). 
If k > 2 and if all the universal vertices of G for the given expanded cycle 
induce a clique, we have output (c). 
If k > 2  and there exist two non-adjacent universal vertices w and w ’ ,  then 
(u,, us, u4, w, w‘) is an expanded cycle of cardinality 5, we have output (b). 
Step 3. If G( V‘U {x}) is bipartite, V’:= V’U {x} go to step 1; else, G is not a 
Meyniel graph, we have output (d). 
Step 4. Let V, be the set of all universal vertices for G(V’). Find a minimal 
chain (u,, uz, . . . , u,) whose vertices are in V\(V’ U V,) and, among these 
vertices, only u, and u, are adjacent to some vertices in V’. 
If such a chain does not exist go to step 5; else, V‘:= V’ U (u,, u2,. . . , u,). 
If G (  V’) is bipartite, go to step 1; else, G is not Meyniel, we have output (d). 
Step 5. At this point, as will be shown in the following remark, the universal 
vertices for G( V’) do not induce a clique, or else, G is not a Meyniel graph, we 
have output (d). Let (ul,u 
2 r . . .  ,uzk) be a hole of G(V’), w and w’, two 
non-adjacent universal vertices for G( V’). If k = 2, then G(ul, uz, u3, u4, w, w ‘ )  
is a complete multipartite induced subgraph, we have output (a). If k > 2, then 
G(ul, u3, u4, w, w’) is an expanded cycle, we have output (b). 
Complexity. Each step of this algorithm requires at most O( I VI‘) elementary 
operations. We can enter at most I VI times into step 1. This procedure requires 
at most O( I V 1’) 
operations. 
Remark 3. Let V, be the universal vertices for G(V’) when we enter step 5 of 
this algorithm. At this point, G (  V‘) is a two-connected (bipartite) component of 
G ( V \  V,). Therefore, if G(V2) is a connected component of G(V\(V, U V’)) 
there exists at most one vertex x of V’ such that V, U {x} disconnects V2 from 
V’\{x}. If such a vertex exists, let y be a vertex of V’ adjacent to x. Otherwise let 
y be any vertex of V’. Note that 1 V’I > 1, and y is universal for Vl or V, U {x}. 
Thus if VI is a clique and G is a Meyniel graph, Proposition 3 may be applied; 
this implies 1 V21 = 1 otherwise procedure Pz would have found a proper 
decomposition of G by operation @. On the other hand, if all the connected 
components of G(V\(V, U V’)) have exactly one vertex, G is a basic Meyniel 
graph which is impossible on entering procedure P4. 
This implies that if we enter 
step 5 of the preceding procedure, and if moreover V, induces a clique, G is not 
a Meyniel graph. 
4.e. Multipartite structure 
Definition 6. An induced subgraph G( V,) of a graph G = (V, E )  will be called a 
multipartite structure (m-structure) if V1 can be partitioned into k subclasses 
( k  a 2) W1, W2,. . . , Wk 
such that G( Wi) is a connected component of G( V,), 

238 
M. Burlet, J. Fonlupt 
1 s i s k, and at least two subclasses of the partition contain at least two vertices 
each (clearly this partition is unique). The subclasses with more than one vertex 
will be called proper subclasses. By a suitable indexing of the subclasses we shall 
always assume that W,, W2,. . . , W, are proper subclasses of the m-structure. We 
shall denote the partition of an m-structure ( W,, W,, . . . , W,, K) where K is the 
union of all the non-proper subclasses. 
Lemma 7. A n  m-structure G(V,) of G = (V,E) is maximal (with respect to 
uertex inclusion) if and only if 
there does not exist a uertex x E V ‘I V, such that x is 
universal for a proper subclass of G (  V,). 
Proof. Let x E V \  V,, not universal for any proper subclass of G(V,). Suppose 
that G( 
VI U { x } )  is an m-structure, so there exists an edge in G( V, U {x}) linking 
x to at least one vertex of any proper subclass of the m-structure G(VI). This 
implies that there exists exactly one connected component of G( V, U { x } )  with 
more than one vertex, so that G(VI U {n}) is not an m-structure. 
On the other hand, if x is universal, say for WI, a proper subclass of G(V,), 
G( W,), will be a connected component of G (  V, U { x ) )  and G((V, U {x})\ W , )  
contains at least a connected component of more than one vertex. 0 
We now give some results concerning maximal m-structures in Meyniel 
graphs. 
Proposition 8. If G ( V,) is a maximal m -structure of a Meyniel graph G = ( V, E) 
and x E V \  V,, then x cannot be adjacent to two proper subclasses. 
Proof. Let W, and W, be two proper subclasses of G( V,). Suppose T(x, W,) # 0 
and T(x, W2) # 0. Since x is not universal for Wl and G( W,) is connected, there 
exist two vertices u,, u2 in W, such that (u,, u2) E E, (u,, x) E E and (u2, x )  E E. 
Similarly there exist two vertices w , ,  w2 in W2 such that (w,, w2) 6Z E, (wl, x )  E E 
and (w2, x )  P E. Then (x, u,, w2, 
u2, wl) is an odd cycle with only one chord 
(u,, w,), which gives a contradiction. 0 
Proposition 9. If G( 
V,) is a maximal m-structure of a Meyniel graph G = 
(V, E), whose partition is ( W,, W2, . . . , W,, K )  with r > 2, there does nor exist a 
chain in V \  V, 
joining two distinct vertices respectively adjacent to two distinct 
proper subclasses. 
Proof. If this proposition is false, let us consider the chain with the least number 
t of vertices contradicting this theorem. Let (u,, . . . , u,) be such a chain. By the 
preceding proposition t > 1. We can suppose that 

Polynomial algorithm to recognize a Meyniel graph 
239 
U U l ,  WJZ 0, 
r(u’, 
W2)Z 0, 
I‘(uj,Wi)=fl V l < j < t  and l S i S r .  
Choose uo E T(u,, W,) and uc+l E T(u,, W2) and x E W,. Then (x, xo, ul,. . . , 
u,, ur+]) is an odd cycle with exactly one chord (uo, urcl). This is impossible. 
Remark 4. Let G(VI) be a subgraph of G = (V,E). If G(V,) is a complete 
multipartite graph it is obvious that G(VI) is an m-structure. If G(V,) is an 
expanded cycle of cardinality 5, G(V,) is also an m-structure. Moreover a 
maximal m-structure containing a complete multipartite graph or an expanded 
cycle with 5 vertices cannot be a graph composed of a complete bipartite graph 
and a clique K universal for this complete bipartite graph. 
Procedure Ps. 
input: 
A graph G = (V, E) with the initial m-structure M given by 
procedure P4 (a complete multipartite graph or an expanded 
cycle with 5 vertices). 
(i) G is not a Meyniel graph; stop. 
(ii) A maximal m-structure with at least 3 proper subclasses. If G 
is @-properly decomposable then G = G1@G2; else G is not a 
Meyniel graph (cf. Remark 5); stop. 
(iii) A maximal m-structure with exactly 2 proper subclasses W,, 
W, such that W1 and W2 are not both stable sets; execute 
Procedure P6. 
O( 1 V 1’). 
While there exists in V\ V ( M )  a universal vertex x for a proper 
subclass of M do M:= G(V(M)U {x}). If there exists in 
V\ V ( M )  a vertex u adjacent to two proper subclasses of M, G is 
not a Meyniel graph, we have output (i); else we have output (ii) 
or (iii). 
output : 
complexity : 
description: 
Remark 5. If G(V,) is a maximal m-structure of a Meyniel graph with at least 
three proper subclasses, then the main theorem is true. Let ( W,, W2, . . . , W,, K) 
be the partition of the maximal In-structure. Delete from G the clique K and all 
the edges joining any vertex of Wl to any vertex of (W,, . . . , W,). By the 
preceding propositions W, and u:=, 
W ,  do not belong to the same connected 
component of this new graph. Let V’ be the connected component containing 
W, and V” the vertices of the other connected components. Consider the graph 
GI obtained by adding to an exact copy of G (  V’ U K) a new vertex xl, such that 
r(xl) 
is the entire image of WI U K. Similarly let G2 be the graph obtained by 

240 
M. Burlet, J. Fonlupt 
adding a vertex x2 to an exact copy of G(V”U K), where r(x,) 
is the entire 
image of ((U :=, W, u K ). 
If G is a Meyniel graph we have 
G = (GI, xi, Ki)@(Gz, ~
2
,
 
K2), 
where we have chosen for K, the image of K in G, (i = 1,2). 
and 9 (in O(l VI2)), which then permits the @-decomposition. 
If we want to verify that G is Meyniel it is necessary to verify Propositions 8 
4.f. Expanded basic Meyniel graph 
Definition 7. Let G(V,) be an induced subgraph of G = ( V , E ) .  A subgraph 
G(V2) will be called a partitive subgraph if 
(i) Vz is strictly included in V, and I V,l> 1, 
(ii) G(V2) is connected, 
(iii) u E V, \ V, j I‘( u. V2) = 0 or T(u, V2) = V2. 
Definition 8 (cf. Fig. 7). An induced subgraph G( V’) of a graph G = (V, E) will 
be called an expanded basic Meyniel subgraph if V’ can be partitioned into 
K, U , , .  . . , U, ( f  3 2 )  such that: 
(a) u E K 3 V‘C { u }  U T(u) (note that this implies that K is a clique), 
(b) if I U, 122, 1 s i zz f then G ( U )  is a partitive subgraph of G(V’), 
(c) there exists at least a partitive subgraph G(U,) of G(V‘), 1 S i S t, 
(d) if we choose a vertex w, in each U,, the subgraph induced by u , ,  u2,. . . , U, 
(e) for all LIE! V’, u is not adjacent, at the same time, to some vertex of U, and 
is a bipartite connected graph called the skeleton of G(V’), 
to some vertex of 
adjacent vertices. 
U,, where Ui and V, are represented in the skeleton by two 
m-structure 
W 
v3 
Expanded basic Meyniel graph 
Fig. 7. 

Polynomial algorithm to recognize a Meyniel graph 
231 
The partition of G (  V’), mentioned above, will be denoted by (K, U1, . . . . , U,) 
and we will assume that U1 is a partitive subgraph of G( V’). It is important to 
note that an expanded basic Meyniel subgraph is not necessarily a Meyniel 
graph. 
We present here two procedures permitting us to detect, from certain P4 and 
P5 output configurations, an expanded basic Meyniel subgraph in a Meyniel 
graph. 
Procedure Ps. 
input : 
output : 
A graph G = (V, E )  and a maximal m-structure with exactly two 
proper subclasses ( W1, W2, K )  given by P,. 
An expanded basic Meyniel subgraph G (  V’). If G is @-properly 
decomposable then G = GI@Gz; else G is not a Meyniel graph. 
(Refer to Remark 7;); stop. 
0 ( 1 V 1’). 
G(K U W1 U W2) is a disguised expanded basic Meyniel sub- 
graph (cf. Remark 6). Detect the connected components of 
G(W,) and of G(Wz) which together with K constitute the 
partition of Definition 8. 
complexity : 
description: 
Remark 6. The only nontrivial point in order to prove that G( V’) given by P, is 
effectively an expanded basic Mayniel subgraph of G is the condition (e) of 
Definition 8. But Ps assures us that this condition is satisfied when we enter P,. 
Procedure P7. 
input : 
ouput: 
complexity : 
description : 
A graph G = (V, E )  and a subgraph G(ul, u2,. . . , V 2 k + l )  ( k  > 2) 
composed of an even hole (u1,u2, ..., uzn) and a vertex U 2 k i l  
adjacent to ul, uz, UZk. Furthermore, all the universal vertices of 
G for this subgraph induce a clique K. 
(i) G is not a Meyniel graph; stop. 
(ii) An expanded basic Meyniel subgraph G(V‘). If G is @- 
properly decomposable then G = G,@G,; else G is not a 
Meyniel graph; stop. (Refer to Remark 7.) 
For a vertex ui, 1 s i S 2 k ,  consider the subset of vertices 
adjacent to ui-l and ui+, (with the subscript arithmetic taken 
modulo 2 k ) ;  consider the connected component U, containing u, 
induced by this subset. I f  G ( K  U u:El U,) is not an expanded 
basic Meyniel subgraph we have output (i); else we have output 
(ii). 
o(i ~ 1 3 1 .  

242 
M. Burlet, J. Fonlupt 
Proposition 10. In a Meyniei graph G = (V, E) ,  the subgraph G(K U u?:l U , )  
detected by Procedure P, is an expanded basic Meyniel subgraph. 
Proof. Note that uZk+, E U1. 
Let u E K and u, E U,. Since ( v , , . .  ., u,+ u,, a+,,. . . , v Z k )  is an even 
hole and u is adjacent to each v,, u is also adjacent to u,. This proves the first 
condition of the Definition 8. Let us show that u, E U, and u,+, E U,+, implies 
(u,, u,+,)E E. Suppose it is not true: we can find u:+, and uY+, E U,+, such that 
(u,'+,, u,'+,)E E, 
(u,, 
u,',,)E E 
and 
(u,, u,'+,)g E. 
But 
then 
the 
cycle 
(ul, u2,. . . , or-,, u,, u,'+,, u,':~, u,,~, . . . , uZk) is an odd cycle containing exactly one 
chord. This is a contradiction, thus we have proven the second condition of the 
definition. Suppose there exists a vertex z P K U u?:, U, and z is adjacent to 
u, E U, and u,-, E L. 
Consider the hole C = (q,. 
. . , u,-~, 
Y-,, u,, u , + ~ ,  
. . . , UN). 
The vertex z cannot be universal for C otherwise z would be universal for 
the given hole (u,,uz, ..., uZk) and thus z would beiong to K. Proposition 5 
proves that the vertex z is adjacent to three consecutive vertices of C, say 
u,-,, u,, vl+,. Hence (2, u,-,)E E, otherwise the subgraph induced by 
(u,, . . . , u,-,, u,, u,+,, . . . , u2&, z) is an odd cycle with only one chord. Thus z E U, 
and we have a contradiction. 0 
Lemma 11. Let G( V , )  be a connected subgraph of a Meyniel graph G = (V, E )  
with I V, 1 > 1, and let z be a universal vertex for G( V,). If there exists a chain 
C(x, z )  in G( 
V \ V,) joining a vertex x to z where x is partially adjacent to V,, then 
there exists a minimal chain C,(y, z )  joining y to z where y is partially adjacent to 
V, and all the other vertices on C,(y,z) are universal for VI. 
Proof. By deleting eventually some vertices of the initial chain C(x,z), we 
obtain a minimal chain cl = (0, = y, uz, . . . , u k  = 2) whose vertices are in c(x, 2 )  
such that y is partially adjacent to V1 and f(o,, V,) = 0 or r ( v , ,  V,) = V,, V i #  1. 
We prove now that this chain C, is the desired chain of the lemma. 
If k =2, the lemma is proven. 
Suppose k > 2  and that 
u2 is not universal for G(VI). Let 
i o =  
min{i 1 I'(u,, V,) = V1, uI E C,}. Consider two adjacent vertices (w, w') in V1 such 
that (y, w') $Z E and ( y ,  w )  E E. The subgraph induced by (w, w',uI,u2,.. ., u,) 
contains an odd cycle ( 3  
5 )  with at most one chord. This is a contradiction. 
Suppose now that there exists a vertex of CI which is not adjacent to any 
vertex of G( V,). We then can find a chain (v,, .. . , v,,,+,) Go, t 3 2) whose vertices 
are in C,, such that only v, and ub+, are universal for G( V,). Furthermore u,-] is 
adjacent to at least one vertex w of 
V,. The subgraph induced by 
(uX,-,, u,, . . . , u,,,, w )  contains an odd cycle (3 
5) with at most one chord. This 
completes the proof. 17 

Polynomial algorithm to recognize a Meyniel graph 
243 
Theorem 12. Let G(V’) ( V =  
K U uf=, 
V,) be an expanded basic Meyniel 
subgraph of a Meyniel graph G = (V, E ) .  Then there exists no chain in G( V \ V‘) 
joining a vertex x to a uertex y where x is partially adjacent to U,, and y is adjacent 
to a vertex of U :=, u,. 
Proof. Let C(x, y )  be a chain which contradicts the theorem. The skeleton of the 
expanded basic Meyniel subgraph is connected, so we can concatenate the chain 
C(x, y )  to a suitable chain C(y, z )  to obtain a chain (vl = x, v2,. . . , u, = z )  whose 
vertices belong to V\(K U U,) and where z, a vertex of (uf=, 
V,), is universal 
for G( U,). Moreover, by the preceding lemma we can suppose all vertices of this 
chain are universal for G(Ul) except ul. Let ui be the vertex of this chain with 
the smallest index belonging to (ul=, 
U,). We have I < i o S r .  But v+ 
is 
adjacent to ui, and also adjacent to some vertex of U1, which is impossible by 
definition of an expanded basic Meyniel subgraph. 0 
Notation (cf. Fig. 8). Let G( V’) be an expanded basic Meyniel subgraph. Recall 
that we have V’ = (K U Cut=, 
U,)) where K and U, satisfy Definition 8. For the 
remainder of this section, let us define: 
(i) e, is the union of U, and the set of vertices belonging to some connected 
component of G(V\(K U U,)) such that this component contains at least a 
subgraph G(U,) i #  1, 
(ii) v2 is the set of elements of V \  vl contained in some connected 
component of G(V\(K U U,)) such that this component is adjacent to U1, 
(iii) K = { u  E K 1 ~ ( u ,  
P2) z 01. 

244 
M. Burlet, J. Fonlupt 
Theorem 13. Let G (  V‘) be an expanded basic Meyniel subgraph, and V,, Vz, K 
as defined aboue. Then: 
(a) U, 
is a partitive subgraph of G (  el), 
(b) each uertex of K is adjacent to all the vertices of v, universal for U,. 
Proof. (a) This part is a reformulation of the preceding theorem. 
linking z, and zz such that 
(b) Let z I  be a vertex of K. Let z z E  UI be such that there exists a chain e 
0#(V(C)\{Zl,22~)C Qz. 
(* 1 
Let C be the shortest among those chain satisfying (*). 
Let z be a universal vertex of G (  V’\K) for UI. Note that z is adjacent to 2, 
and zz and to no other vertex of C. Therefore if I V(C) fl 
v21 > 1 the subgraph 
induced by (V(C) U {z}) contains either an odd hole 5 5 or an odd cycle 3 5 
with only one chord. So we can assume that V(C) n vz = {z3}. 
Suppose that part (b) of the theorem is false. Consider a shortest chain 
C(yl, y z )  joining y ,  E v, to some y2 E V‘\(K U U , )  where y l  is universal for U, 
and not adjacent to a vertex z, E I% Let zz and z3 be defined relatively to z1 as 
stated above. Since the skeleton of G(V’) is connected, consider a chain 
C(yZry3) 
joining y2 to y?, whose vertices are in V‘\(K U U , )  and where y l  is 
universal for U,. Concatenating C(yl,y2) and C(yz,y3) we obtain a chain 
CI = ( u , , .  . . , u,, . . . , uI) with u, = y , ,  u, = yz and of = y3. We can suppose that 
C(y,, y3) is a minimal chain, which obviously implies that CI itself is a minimal 
chain. If r =2, u, cannot be adjacent to Ul (cf. Definition 8). Therefore 
G(zl,z2,z3,ul, 
uz) is an odd cycle with only one chord; this is impossible. 
Suppose r > 2 and uz not universal for UI. Let u, be the vertex of Cl with the 
smallest index such that (ub, zr)E E; note jos r. The vertices u, with 1 < i S j,, 
cannot be adjacent to UI by the way we chose the chain C ( y l , y 2 ) .  If u,, is 
universal for U,, the subgraph induced by (zl, 1 2 ,  uI, uz,. . . , u,) is not Meyniel. If 
u, is not universal for U,, the subgraph induced by (z3, zzr z,, uI, uz, . . . , uk,) is not 
Meyniel. Thus uz has to be universal for U,. This enables us to show that all the 
vertices of the chain (u,,. . . , u,) are universal for U,. If this were not the case, we 
could find two vertices of CI, ub and u, UO > io + 1 b 3) such that u,, D,, u2,. . . , u,, 
are universal for U, but not u,,,, . . . , u,-,. The subgraph induced by the vertices 
(zz, u,-,,. . . , u,) is not Meyniel, which leads to a contradiction. Therefore u,-, 
(which 
V’) is universal for U ,  and adjacent to U, (which P V’ and is universal 
for U , )  and this is impossible by definition of an expanded basic Meyniel graph. 
This completes the proof. 
Remark 7 (see Fig. 9). Take an exact copy of G( V \  e2) 
and let GI be this copy 
where the set of vertices corresponding to those of U ,  reduced to a single vertex, 

Polynomial algorithm to recognize a Meyniel graph 
245 
which we will call x,. Let K1 be the clique of GI which is the exact copy of K. 
Take an exact copy of G( v2 U UI U I?) and let Gz be this copy to which we add a 
new vertex xz, adjacent only to all the vertices corresponding to those of K U UI. 
Let K2 be the clique of Gz which is the exact copy of I?. If G is Meyniel, 
G = (GI,x,,Kl)~(G2,xZ,KZ). 
If we want to verify that G is Meyniel, it is 
necessary to verify that UI is a partitive subgraph of G( vl) and that every vertex 
of I? is adjacent to every universal vertex of el for G (  V , )  (in O( 1 V IZ)), which 
would then permit the @-proper decomposition. 
5. Polynomial recognition algorithm of a Meyniel graph and applications 
5.a. Polynomial recognition algorithm 
We are going to give the description of a polynomial recognition algorithm of 
a Meyniel graph. Let Go=(V",E") be the graph to be recognized. The 
preceding algorithm enables us in polynomial time to detect for Go one and only 
one of the following situations: 
(i) Go is not a Meyniel graph, 
(ii) G" is a basic Meyniel graph, 
(iii) Go is not a basic Meyniel graph, but there exists a @-proper decomposi- 
tion into two graphs G '  = (VI, El) and GZ = (V', EZ) 
and, moreover, Go is a 
Meyniel graph if and only if G '  and GZ 
are Meyniel graphs. 
The idea of the recognition algorithm presented below will be to apply the 
algorithm of the preceding section to the graph Go and, inductively, to each new 
graph possibly obtained by this algorithm. 

216 
M. Burlei. J. Fonlupi 
Definition 9. Let Ce be the family of graphs obtained by the recognition 
algorithm applied to G". At the start of the algorithm, the family Ce contains only 
one element, G". When the algorithm stops the graphs of Ce will have been 
denoted G' ( i = O , l ,  ..., ICeI-l), where G ' = ( V ' , E ' ) .  
The recognition algorithm 
Begin 
%:=(GOj. 
k:=O. 
while some graphs in % have not yet been examined by the decom- 
position algorithm 
Apply the algorithm of Section 4 on this graph. 
If this graph is not Meyniel, GO is not Meyniel; stop. 
If this graph is a basic Meyniel graph go to continue. 
If this graph is decomposed into two new graphs, call them Gk+', 
GktZ. 
%:= 92 U{Gk+'} 
U {Gk+'}. 
k : =  k + 2 .  
continue: 
Begin 
end 
end 
Since the algorithm permits only proper decompositions, it is obvious that it 
will stop. 
Definition 10. Let k(G") be the cardinality of the largest family % which can be 
obtained by applying the recognition algorithm on Go. The graphs contained in 
this family are indexed from 0 to k(Go)- 1. 
If a graph G' of a family 9 is decomposed by a @-decomposition into G' and 
G', G' and G h  are called successors of G'. 
Let K' be a clique of maximum cardinality of G', and let r, = 1 V ' l - / K ' l .  
To prove that the recognition algorithm is polynomial we only have to show 
that k(G") is of polynomial order in I VoJ. 
Theorem 14. If G' and G k  are successors of G' then 
(a) I V'I < I V'I and I V k  
I <  1 V' 1, 
1 K' 1 ,  
1 K J  I 
r, c r, and rk d r,. 
I K' I and 1 K k  I 
(b) r, + rk S r, + 1. 
Proof. (a) This part is a direct consequence of the definition of a @-proper 
decomposition. 

Polynomial algorithm to recognize a Meyniel graph 
247 
(b) We shall prove part (b) for Go, G '  and G2. 
Let Go = (GI, xl, K1)@(G', x2, K2). Let K be the clique of G" obtained by the 
identification of K ,  and K2 of the operation Qi. Let V? (resp. V:) be the subset of 
vertices 
of 
Go corresponding 
to the vertices 
V1\({xl} U Kl) (resp. 
V'\({x,} U K2)) of G '  (resp. G'). 
Let N': (resp. N:) be the subset of vertices of Go corresponding to the vertices 
T(xl)\K1 (resp. r(x2)\K2) of GI (resp. G2). 
Note that ro= I V?l+ I GI+ IKI - IK'I. 
First case : V? n K" # 0 and @ n K" # 0. 
By definition of the amalgam operation, V? n KO and 
Again, by definition of @, KO = (KO n N?) U (KO n Nz) U K. 
The subgraph of G' induced by {xl}, K I  and the subset of vertices of G' 
corresponding to NY n KO is a clique of cardinality: I K 1 + 1 + 1 N': n KO 1 .  There- 
fore r, s I V(G')l-(lKl+ 1 + 1N':n K o l ) =  I V?l- I N? n K"1. Similarly 
r z S  
I V':l- I Ny n K" 1 .  As ro = 1 fll+ 
1 El - IN': n KO1 - IN; n K"I, we get 
n KO lie respectively 
in NY and N:. 
rl + r2 s ro. 
Second case: V; r) K" = 0. (The case V? n KO = 0 is similar). 
There exists in GI a clique of cardinality I K'I. As I V(G')I = I K I + I V?l+ 1, 
we have 
rl S 1 V':l+ IKI + 1 - IK"I. 
Moreover ({x2} U K2) induces a clique of cardinality IK 1 + 1 in G'. Therefore 
r z d ) V ( G 2 ) ) - ) K J - 1 = I V ~ I ,  
and we get 
r l + r 2 < r o + 1 .  0 
Theorem 15. We have k (G") d I V" I (rg + 1). 
Proof. Let %* be a family of cardinality k(G") obtained by the recognition 
algorithm applied on Go. The cardinality of the family of 'descendants' of G' 
(a graph of %*) is equal to k(G'). 
This theorem is obviously true if 1 Vo1 = 1 or 1 V") = 2. So we shall suppose 
I V" I 3 3 and we shall prove this theorem by induction on I Vo 1 .  
If Go is a basic Meyniel graph, k(G") = 1 and the theorem is true. 
If Go is not a basic Meyniel graph, but its two successors in %* are basic 
If Go is not a basic Meyniel graph and exactly one of the two successors, for 
Meyniel graphs, k(Go) = 3 and the theorem is true. 
instance G2, a basic Meyniel graph in %*, 
k(G") = 2 + k(G') < 2 + 1 V' I (r: + 1). 

248 
M. Burlet, J. Fonlupt 
Since I V1 1 < I V"J and r1 S Tor 
k(Go) S 1 Vol(r:+ 1) (since G' is not a basic Meyniel graph, rl 3 1). 
If G' and G' are not basic Meyniel graphs, 
k(Go) = 1 + k(G1)+ k(G'), 
k( G') s 1 V' I (r? + 1) < I v"J 
(r: + l), 
k ( G 2 ) s [  
V'l(rg+ 1)<[ V"l(r:+l), 
k (GO) s I V" 1 ( r  f + r: + 2), 
but we already know 2 S rl S To, 2 s r, S ro and rl + r2 S ro + 1. Therefore 
rf + r: + 2 S ri + 1 and the theorem is proven. 0 
Theorem 16. The recognition algorithm proposed in this section is polynomial. 
Proof. The cardinality of 9 is bounded by 1 V"I'. Note that the bound given by 
the last theorem is very rough, but it already suffices to prove that the algorithm 
is polynomial. 0 
5. b. Applications 
Theorem 17. Characterization of Meyniel graphs. A graph is a connected 
Meyniel graph if and only if it can be built from basic Meyniel graphs by repeated 
applications of the amalgam operation. 
Proof. The sufficient condition is true by Theorem 1, because a basic Meyniel 
graph is a Meyniel graph, The necessary condition is given by Theorem 2. 0 
Remark 8. The recognition algorithm given in this section allows us to detect, in 
a non-Meyniel graph, an odd cycle ( 5  
5 )  not containing two chords. 
Let us define two particular cases of amalgamation which are already known. 
Debition 11. If in the operation @, where G = (Gl,xl,KI)~(G2,~z,Kz), 
we 
restrict K, = 0 (i = 1,2) we obtain an operation sometimes called composition of 
GI and G2. 
For this operation, we will note simply G = ( G I , ~ ~ ) @ l ( G 2 , ~ 2 )  
(cf. 
Fig. 10). If we restrict K, = T(x,), 
i = (1,2), we obtain this time a particular case 
of the usual operation of identifying a clique Kl in GI with a clique K2 
in G2. For 
this operation we will note simply G = (GI, x ~ ) @ ~ ( G ~ ,  
xz). Such a relation will 
presume, from now on, that T(xl) and r(xz) are cliques of the same cardinality. 

Polynomial algorithm to recognize a Meyniel graph 
249 
\ 
I 
I 
Bipartite 
G* 
Fig. 10. 
It is well known that the operation cD2 preserves perfectness. That is, if G, and 
G2 are perfect graphs, G is also a perfect graph. This result is also true for @,, as 
given to us by Chvital [4] (cf. Remark 1). 
The results and algorithms obtained for the class of Meyniel graphs generate 
some properties for other classes of perfect graphs (which are also Meyniel) as 
we now outline. 
One of the earliest known classes of perfect graphs was the class of 
triangulated graphs. We know (Hajnal and Surinyi [9]) that every minimal 
separating set of a triangulated graph is a clique. Dirac and others characterized 
these graphs in terms of simplicial vertices: a graph G is triangulated if and only 
if G and all its induced subgraphs contain a simplicia1 vertex. This last result 
yields a procedure for constructing all triangulated graphs: we can obtain all of 
them from a single vertex by iterated additions of simplicial vertices. We now 
give a new characterization theorem of this class. 
Theorem 18 (Characterization of triangulated graphs). A graph is a connected 
triangulated graph, if and only if it can be obtained from basic triangulated graphs 
by repeated applications of operation dj2. 
Proof. Remark 2 and Proposition 4 show that a non-basic triangulated graph G 
is @2-decomposable into GI and G2, both triangulated, where I V(G,)J < I V(G)I 
and I V(G2)) < I V(G)I. Conversely, we know that Q2 applied on two triangu- 
lated graphs produces another triangulated graph. 0 

250 
M. Burlet, J. Fonlupt 
Another class found within the class of Meyniel graphs which contains the 
triangulated graphs is the class of o-triangulated graphs, a class extensively 
studied by Gallai [5]: An o-triangulated graph is a graph wherein every odd 
elementary cycle contains at least two uncrossing chords. Gallai [ S ] ,  and later 
Surgnyi [14], showed that these graphs are perfect. Their proofs, however, do 
not give us polynomial recognition algorithms. Burlet and Fonlupt (see Burlet 
[2]) provided a constructive characterization of these graphs, which led to a 
polynomial recognition algorithm. We give here a characterization theorem for 
this class of graphs, whose proof (quite similar to that of Theorem 17) gives a 
polynomial recognition algorithm of these graphs. 
Definition 12. A basic o -triangulated graph is (1) a basic Meyniel graph, or (2) a 
connected graph G = (V, E) where V can be partitioned into A, K, S such that: 
(i) A can be partitioned into at least three stable sets, each containing at 
least two vertices, and two vertices of A are adjacent if they belong to different 
stable sets, 
(ii) G ( K )  is a clique, 
(iii) x E A, y E K 3 
(x, y) E E, 
(iv) S is a stable set of G and x € S  j / r ( x , A ) l s l .  
Theorem 19 (Characterization of o-triangulated graphs). A graph is a connected 
o-triangulated graph if and only if it can be built from basic o-triangulated graphs 
by repeated applications of operation G2. 
Proof. We use a similar proof to that of Theorem 17. 
Necessary condition. We have to show that if G, ( i  = 1,2) is o-triangulated and 
G = G1!D2G2, then G is o-triangulated. This part of the proof is similar to that of 
Theorem 1. 
Suficient condition. This part consists in showing that an o-triangulated graph 
G, which is not a basic o-triangulated graph, can be dj2-properly decomposed 
into two o-triangulated graphs, G = G1dj2G2. To prove this let us follow the 
steps in the algorithm of Section 4. The procedure PI detects whether G is a 
basic Meyniel graph; a basic Meyniel graph is o-triangulated. 
Procedure P2 detects the existence of a simplicia1 disconnecting clique leading 
to a G2-proper decomposition of G, G = G1cD2G2. The graphs GI and G2 are 
isomorphic to some subgraphs of G; therefore, they are o-triangulated. 
Procedure P4 applied to an o-triangulated graph G can only give, for a result, 
G(Vl), a complete multipartite subgraph of G (output (a)). 
Procedure Ps, using G(VI), can only give a maximal m-structure G(V') 
(V, 
V') which is a complete multipartite graph. This can be seen by showing 
that a proper subclass of this m-structure cannot contain an edge (u,, u2). For 

Polynomial algorithm to recognize a Meyniel graph 
25 1 
then let u3 be a vertex of this subclass such that ul E r(u3) 
and v,E T(u3) (u3 
always exists); let u4 and us be two non-adjacent vertices of another proper 
subclass of G (  V’). So the subgraph G(u,, u,, us, u4, us) is an expanded cycle, 
which is not possible. The m-structure G (  V’) is then a complete multipartite 
graph, containing at least three proper subclasses (cf. Remark 4). 
Let ( W,, Wz, . . . , W,, K )  be the partition of V‘ satisfying Definition 6. Let us 
show that there does not exist a chain C( 
w :, w ’:) linking two vertices of W,, w :  
and w‘:, and whose other vertices do not belong to V’. Let Cl be such a minimal 
chain, let w, E W, (j# 
i )  and wk E Wk 
( k #  i, k# j ) .  The subgraph 
G (  V(C,) U { w,} U { wk}) is a cycle containing only two chords, which are two 
short crossing chords, and this is impossible. Thus, for all w E u;=, 
W,, w may 
be a cutnode of G(V\K). In this case K U { w }  is a disconnecting clique 
satisfying Proposition 3, and the connected components of G( 
V\(K U { w})) not 
containing any vertices of V’, contain at most one vertex. This latter result 
follows because procedure P2 has not @,-properly decomposed G. The graph G 
is clearly a basic o-triangulated graph. This completes the proof. 0 
Remark 9. The polynomial algorithm briefly described in the preceding proof 
enables us to detect an odd cycle ( 3 5) not containing two non-crossing chords in 
a non-o-triangulated graph. 
There exists also a third important class of graphs related to the Meyniel 
graphs: parity graphs. These are the graphs in which every odd cycle of length at 
least five contains two crossing chords. Olaru-Sachs [13] have shown that these 
graphs are perfect. Burlet and Uhry [3] provided a constructive characterization 
(and a polynomial recognition algorithm of these graphs), as follows: 
Theorem 20 (Characterization of parity graphs). A graph is a connected parity 
graph if and only if it can be built from bipartite graphs and cliques by repeated 
applications of operation GI. 
Acknowledgement 
The authors wish to acknowledge Professor V. Chvtital and an unknown 
referee for their helpful comments regarding the presentation of this paper. 
References 
[l] C. Berge, Farbung von Graphen deren samtliche bzw. ungerade kreise starr sind (Zusammen- 
fassung), Wiss. 2. Martin-Luther-Univ. Halle-Wittenberg Math.-Natur. Reihe (1961) 114-1 15. 

252 
M. 
Burlet, J. Fonlupr 
[21 M. Burlet, Etude algorithmique de certaines classes de graphes parfaits, These troisitme cycle, 
[3] M. Burlet and J.P. Uhry, Panty graphs (this volume, pp. 253-277). 
[4] V. Chvatal, private communication. 
151 T. Gallai, Graphen mit triangulierbaren ungeraden Vielecken, Magyar Tud. Akad. Mat. Kutato 
[6] M.C. Golumbic. Algorithmic Graph Theory and Perfect Graphs (Academic Press, New York, 
[7] M. Grotschel, L. Lovisz and A. Schrijver, The ellipsoid method and its consequences in 
[S] M. Grotschel, L. Lovisz and A. Schrijver, Polynomial algorithms for perfect graphs (this 
[9] A. Hajnal and J. Suranyi, Uber die Auflosung von Graphen in vollstandige Teilgraphen, Ann. 
[lo] L. Lovisz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
[ll] H. Meyniel, On the perfect graph conjecture, Discrete Math. 16 (1976) 339-342. 
1121 G. Ravindra, Meyniel's graphs are strongly perfect (this volume, pp. 145-148). 
[13] H. Sachs, On the Berge conjecture concerning perfect graphs, Combinatorial Structures and 
[I41 L. Surinyi, The covering of graphs by cliques, Studia Sci. Math. Hungar. 3 (1968) 345-349. 
Grenoble (septembre 1981). 
In!. Kii71. 7 (1962) A .%Xi. 
1980). 
combinatorial optimization, Cornbinatorica 1 (1981) 169-197. 
volume, pp. 325-356). 
Univ. Sc. Budapestinensis 1 (1958) 113. 
253-267 (this volume, pp. 29-42). 
their Applications (Gordon and Breach, New York, 1970) 377-384. 

Annals of Discrete Mathematics 21 (1984) 253-277 
0 
Elsevier Science Publishers B.V. 
PARITY GRAPHS 
M. BURLET 
U. S. M. G.- IMA G -BP 53X-38041 Grenoble Cedex. France 
J.P. UHRY 
C.N.R.S.-IMAG-BP 53X-38041 Grenoble Cedex. France 
A graph G = (V, E )  is a parity graph if and only if for every pair of vertices (x, y )  of G all 
the minimal chains joining x and y have the same parity. A characterization of these graphs is 
given by a condition on odd cycles. This characterization shows that these graphs are perfect. 
These graphs are then studied from the algorithmic viewpoint. Polynomial algorithms are 
defined to recognize them. and for the following problems: maximum stable set, minimum 
coloring, minimum covering by cliques, maximum clique. 
1. Introduction 
If some classes of perfect graphs have been characterized, it is rather strange 
that the algorithmic aspect is seldom studied. In particular, there are the classical 
problems of perfect graphs (maximum stable set, minimum coloring), but also 
the main problem of the recognition of these classes of graphs in polynomial 
time. 
These problems remain unsolved for many classes of perfect graphs (Meyniel’s 
graphs [9], claw-free perfect graphs [7], perfect 3-chromatic graphs [13], perfect 
planar graphs [12]) with the exception of the general paper of Grotschell, Lovasz 
and Schrijvers [6], which gives a polynomial algorithm of maximum weighted 
independent set for all perfect graphs. This algorithm based on the ellipsoid 
method unfortunately gives no idea of the structure of perfect graphs, and at the 
present time appears to be of no great combinatorial interest. 
In this study, we have dealt with parity graphs, a particular class of perfect 
graphs which is a fairly natural extension of bipartite graphs. 
Definition 1. A minimal chain is an elementary chain which is a subgraph. 
In the following, we will simply write minimal chain so that there is no 
In the graph of Fig. 1, only chains (x, z, t, u, y )  and (x, z, u, u, y )  are minimal. 
ambiguity. 
253 

254 
M. Bwkt, J.-P. Uhry 
Fig. 1. 
DeBhition 2. We call parity of a minimal chain the parity of its number of edges. 
In particular, if two vertices x and y are adjacent and the only minimal chain 
joining them is the chain reduced to the edge (x, y ) ,  this chain is odd. 
Definition 3. A graph G = (V, 
E), 
simple, undirected is called a parity graph if 
and only if for every pair of vertices x and y of V, all the minimal chains joining 
x and y have the same parity. 
We notice immediately that this notion of parity graph is a generalization of 
The graph in Fig. 2 is an example of a non-bipartite parity graph. 
bipartite graph. 
Fig. 2. 
In Section 2, we give a characterization of these graphs, specifying the 
structure of the odd cycles they contain. A theorem of Sachs [lo] enables us to 
confirm that these graphs are perfect. In Section 3, we prove some properties of 
these graphs, and we specify their minimal separating sets. These results can be 
compared to those of Gallai [5] for o-triangulated graphs. In Section 4, a 
polynomial algorithm for parity graph recognition is given. It is also shown that 
these graphs are in fact built with two classes of perfect graphs: bipartite graphs, 
and cographs studied by Corneil, Lerchs and Stewart [3], here called 2-parity 
graphs. In Section 5, polynomial algorithms are defined for the four above- 

Parity graphs 
255 
mentioned problems (in cardinality and in weight). This is another proof of the 
fact that these graphs are perfect. 
2. Characterization 
Definition 4. We say that two chords (x, y ) and (z, t )  of an elementary cycle cross 
if the vertices x, 2, y ,  t are in this order on the cycle. 
Theorem 1. A condition which is necessary and sufficient for a graph G = ( V, E )  
to be a parity graph, is that every odd elementary cycle have two crossing chords. 
Proof. Necessary condition. The condition is necessary for a cycle of 5. Suppose 
we admit the property on an odd cycle of cardinality k ( k  > 5) and prove it is still 
true for a cycle of cardinality k + 2 .  
It is easy to check that such an odd cycle contains at least two chords, and two 
chords which do not cross make at least one odd cycle, whose cardinality is lower 
or equal to k, and in which the induction gives the property. 
SufJicient condition. Take a graph G which verifies the condition and which is 
not a parity graph. As the structure we want for G is hereditary, we shall choose 
a counter-example which is minimal with respect to the vertices. This counter- 
example has two vertices x and y joined by an even minimal chain C,(x, y )  and 
an odd minimal chain C2(x, y ) with separate vertices (cardinality of C2(x, y ) 3 3). 
As the counter-example is minimal, all the vertices of G are on the elementary 
cycle A made up for C,(x, y )  and C2(x, y ) .  
The proof refers to Fig. 3. 
V 
Fig. 3. 
I 

256 
M. 
Burlet, J.-P. Uhry 
The chords of cycle A join a vertex of C,(x, y )  to a vertex of C,(x, y ) .  
Let us consider an edge joining 1 to the vertex of C,(x, y )  which is the nearest 
to y. This vertex cannot be z '  because the chains (1,2,3,. . . , z, y )  and (1, z', y )  
would have different parities, which contradicts the fact that G is minimal. 
This vertex cannot be t' for the same reason, with (x, l', 2', . . . , t') and (x, 1, t'); 
and so on. We realize the only possible chord coming from 1 ( 2  respectively) is 
the chord (1, 1') ((z, z ' )  respectively). 
Now let us look at the chords coming from a vertex, different from 1, and as 
near as possible to x, on chain C,(x, y). Let u be this vertex, and let us consider 
the chord joining v to u' where u' is the nearest to y .  This chord cannot end on a 
vertex at an odd distance from y (as in Fig. 3); in this case, the two minimal 
chains (x, 1,. . . , u, u ' )  and (x, 1',2', . . . , u') would have different parities and this 
contradicts the minimality of the counter-example. 
This chord cannot end on a vertex which is at an even distance to y for the 
same reason. We should consider (u,. . . , t, z , y )  and (v, u', . . . , z', y). 
It has therefore been shown that a vertex different from 1 and t could not be 
the initial end of a chord. 
The cycle A cannot contain more than two chords (1,l') and (2, 2'). So cycle A 
does not contain 2 crossing chords, leading to the contradiction. 0 
Theorem 2 (Sachs [lo]). Parity graphs are perfect. 
Without proof. we will quote an obvious corollary. 
Corollary 2.1. A graph G = (V, E )  is a parity graph if and only if it does not 
contain any of the following con,figurations : 
(1) A,, .I: infinite family of odd cycles, without chord, on 2k + 1 vertices, 
(2) Azk+,: in,finite family of odd cycles, with only one short chord, 
(3) As: cycle on 5 vertices with two adjacent chords at the same vertex. 
Here, it would seem interesting to recall two connected results: 
(a) o-triangulated graphs. A graph G in which every odd elementary cycle 
contains at least two short uncrossing chords is a perfect graph (see Gallai [5] 
and Suranyi [ll]). 
(b) A more general result ofMeynie1 [9]. A graph G, which has two chords in 
every elementary cycle, is a perfect graph. 
In Fig. 4. we give the example of a graph which contains two chords in each of 
its odd cycles but which is, however, neither an o-triangulated graph nor a parity 
graph. 

Parity graphs 
251 
Fig. 4. 
3. Description and properties 
Notation. We shall denote, for a graph G = ( V , E )  and S C V, G ( S ) ,  the 
subgraph induced by S. 
We shall denote by T(x) the vertices adjacent to x, 
T'(x) ={y E v I ( X , Y ) E  El. 
For A C V, T(x) n A will be denoted by C (A). 
Occasionally, when H = G(A) is a subgraph of G, we will write 
E ( H )  for r X ( A ) .  
Definition 5. We call true twins two vertices x and y joined by an edge and 
having the same adjacents, i.e., T(x) = T(y). 
We call false twins two vertices x and y which are not joined but have the 
same adjacents. 
We know from Lovasz [8] that the operation which consists in adding one 
twin, true or false, of a vertex to a perfect graph is an operation which builds a 
new perfect graph. 
In addition, this operation applied to a parity graph retains this property. This 
is wrong, however, for an o-triangulated graph (Fig. 5), but true for a Meyniel 
graph [91. 
Definition 6. A graph without twins will be called primal. 
In Fig. 6, we give an example of the reduction of a parity graph, and a primal 
parity graph. 
Definition 7. In a parity graph G = ( V, E), we call partition induced by a vertex 
x, the ordered partition of the vertices of G, denoted ( P x , L ) ,  where P, (Ix 

258 
M. Burlet, J.-P. Uhry 
respectively) is the set of vertices of V joined to x by an even minimal chain (odd 
minimal chain respectively). We consider that x is joined to x by an even 
minimal chain. 
Notation. We may consider only the restriction of the bipartition, induced by x, 
to a subset A of V. 
We put 
P x ( A ) = P ,  n A ,  
Z,(A)=Z,nA. 

Parity graphs 
259 
Lemma 1. Any minimal separating set A of a parity graph G = (V, E) can be 
partitioned in two parts denoted R and B which have the following property. The 
vertices of R induce the same partition of vertices V - A, and the vertices of B the 
opposite partition of V - A. 
Vrl, V r 2 € R  P,l(V-A)=P,2(V-A) 
and then 
LI( V - A ) = Z,( V - A); 
Vrl E R, Vbl E B 
P,l( V - A )  = Ibl( V - A )  
and then 
Itl( V - A )  = pbl( V - A). 
Proof. We suppose IA 1 > 1 (otherwise, it would be obvious). Let CXI and CX2 
be two different connected components of the subgraph built on V - A (see Fig. 
7). 
CX1 
Let xI belong to CXI, x2 belong to CX2 and two different vertices z and t to A. 
As A is minimal, there exists a minimal chain C1(xI, 
x2) joining xI and x2 only 
containing the vertex z in A and a minimal chain C2(xI, xz) only containing t in 
A. It is easy to conclude, because chains CI(xI, 
x z )  and C2(xl, x2) have the same 
parity, that z and t have the same or a different parity for x1 and x2. 
By changing first xI then x2, the property easily follows. 0 
Lemma 2. Let A be a minimal separating set partitioned in R and B as in Lemma 
1. Then 
V n E R ,  V r 2 € R ,  (rl,r2)EE 3 T,,(V-A)=T,*(V-A). 

260 
M. Burlet, 3.-P. Uhry 
Proof. Suppose the property is false. Let x E r,,( 
V - A ) and x $Z r,2( 
V - A). 
From the definition, a minimal odd chain which does not contain r,, joins r2 to 
We have therefore found the odd cycle (TI, r2, u , .  . . , x )  (see Fig. 8). The only 
possible chords on this cycle are chords issuing from r l .  Thus this graph is not a 
parity graph (see Theorem 1). 
X. 
0 
Fig. 8. 
Lemma 3. With the same hypotheses as those of the preceding lemma 
rl E R, rz E R, (rl, r2)E E 3 T J B )  = T,(B). 
Proof. If (r2, b l )  does not exist, since ( r l . x )  and (rz, x )  do not exist, there is one 
minimal chain from rl to x whose length is two and another from rz to x whose 
length is three (see Fig. 9). This is a contradiction to Lemma 1. El 
Lemma 
Fig. 9. 
With the same hypothesis us before, u connected component of the 
subgraph induced by the vertices of R has no minimal chain of length three. 
Proof. Suppose there is such a chain (r,, r2, r3, r4). Let us consider a vertex x of 
V - A which is adjacent to r l .  From Lemma 2, we know that x is also adjacent 
to r2, r7, and r4. The subgraph induced by these vertices is a 5-cycle, whose chords 
may only be those issuing from x. Here, there is a contradiction. 0 
Remark 1. This property remains true if for the set R we take the adjacents of 
any one of the vertices of a parity graph. (They form a separating set which need 
not be minimal.) 

Parity graphs 
26 1 
Definition 8. We shall call a 2-parity graph a graph of which the length of all 
minimal chains is less than or equal to two. As an example, a clique is a 2-parity 
graph. 
A complete multipartite graph is a 2-parity graph. (We call a complete 
multipartite graph a graph in which we can separate the vertices into stable sets, 
and where two vertices are joined if they belong to different stable sets. Such a 
graph is an o-triangulated graph Gallai' [5].) 
We give below a property characteristic of a 2-parity graph (for other 
properties, see Corneil, Lerchs and Stewart [3]). 
Lemma 5. In a 2-parity graph G = (V, E), there are always at least two twins, 
true or false. 
Proof. For a clique, it is obviously true. Otherwise, let x and y be two vertices 
which are not joined. There exists a minimal separating set A which separates x 
from y .  
Let CX, and CX, be their respective connected components, in the subgraph 
induced on V -  A. 
For each vertex z of CX,, z is adjacent to all the vertices of A, otherwise there 
would be a minimal chain of length three. 
When CX, = {x} and CX, = { y }  then x and y are false twins, else at least one 
has cardinality greater than one. Suppose, for example, I CX, I > 1. The proof 
continues by induction in CX,. Twins in subgraph CX, will effectively be twins 
in the initial graph, because they have the same adjacents in A. 0 
From Lemma 5, we immediately obtain an algorithm for building all 2-parity 
graphs (see Fig. lo). 
? 
I 
0
-
 
- I  -h 
Fig. Iff. 

262 
M. Burlet, J.-P. Uhry 
Theorem 3. In a primal parity graph, every minimal separating set is a bipartite 
graph (one of the two parts can be empty). 
Proof. This theorem directly follows the preceding lemmas, where we have 
shown that a connected component of the graph G ( R )  (or G(B)) was a 2-parity 
graph and that for every rl and rz, two vertices of such a component, 
T.,(B) = TJB) and T J V -  A )  = C2(V- A). 
True or false twins, relating to this component, are therefore twins in graph G. 
Thus, by removing true or false twins, we can reduce this component to only one 
vertex. D 
Two properties below are given without proof. 
Theorem 4. A necessary and sufficient condition for a graph G = (V, E )  to be a 
parity graph is that every relatively minimal separating set A can be divided into 
two parts denoted R and B (one of them can be empty). In this partition, the 
vertices of R ( B  respectively) must induce the same ordered partition (I, P )  of 
V - A ((P, I )  respectively). 
Lemma 6. In a parity graph, if two adjacent vertices x and y have distinct 
neighbourhoods, then I, = Py. 
4. A constructive polynomial algorithm for recognition 
To recognize a parity graph, we shall ‘hang’ it by a vertex, and study the 
structure of the different levels (defined below). It will not only lead us to the 
polynomial algorithm, but also to a theorem which gives a very easy construction 
characterization of parity graphs. This is at the basis of the optimization 
algorithm described in Section 5. 
We shall study here the partition (Pa, I.) induced by a well-defined vertex a of 
a parity graph G = (V, E ) .  
Definition 9. We shall call C(x, y )  a shorter chain (in number of edges) joining x 
to y. 
Definition 10. We shall call level i (denoted N , )  of G, the set of vertices of V at a 
distance i from a: 
N, = {x E v 1 I c ( a , x ) l =  i). 

Parity graphs 
263 
The vertices of N, are linked to a by minimal chains of the parity of i. No only 
contains vertex a. N1 is the set of neighbourhoods of a. rn will be the cardinality 
of the longest minimal chain issuing from a. 
Remark 2. Dijkstra's shortest path algorithm enables the partition of V into 
levels to be determined in polynomial time. 
Remark 3. An edge (x, y )  E E has its extremities either on the same level, or on 
two successive levels. 
In Fig. 11 we give two possible 'hangings' of the graph of Fig. 6. 
11 a 
10 - 
Fig. 11. 
Lemma 7. All vertices of a connected component of the subgraph G(Ni) have the 
same adjacents at the level Ni-,. 
Proof (see Fig. 12). Let x E N, and y E Ni and (x, y )  E E. Let x' E I', (Ni-,) and 
y' E r, (N$-,). Suppose that (y, x') E E. 
As the edge (x', y )  does not exist, by concatenating a chain C(a, x') to the 
chain (x', x, y), it is possible to find a chain joining a to y which has the same 
parity as i + 1. As there exists, by definition, one chain from a to y having the 
same parity as i, we have a contradiction. 0 

264 
M. Burlet, J.-P. Uhry 
NO 
a 
Ni-1 
Y '  
X 
Y 
Ni 
Fig. 12. 
This lemma shows that the subgraph induced by a level is a 2-parity graph (see 
Lemmas 4 and 5). 
We remove the level N,, 
and we denote by G! , G:, Gf the different 
connected components obtained in the subgraph induced by the lower le6els: 
N+, 
u N,+* u N,. 
We denote also by X!' 
the vertices of N, adjacent to component G,k (see the 
example of Fig. 11). 
Remark 4. The sets X: are not necessarily disjointed and do not necessarily 
cover all the vertices of Ni. 
Lemma 8. For every x E Xf 
and for every y E X:, we have 
( x , y ) E E  + K(G:)=f,(G:). 
Proof. If the property is false, there exists a configuration, illustrated by Fig. 13, 
where (x, u )  $Z E. 
There exists a chain C(a, u )  of the parity of i + 1. 
(u, y, x) is a minimal chain of length two; this means that we can find a minimal 
even chain (u, . . . , v, x )  having all its vertices in G: . Linking this chain to a chain 
C(a,x), we obtain a chain of parity of i which connects u to a. This is a 
contradiction. 0 
Lemma 9. For every x EX," and every y E X : ,  we have 
r, (N, - x:) = r, (N, - x;). 
Proof. First case: x and y non-adjacent (see Fig. 14). There exists an even 
minimal chain joining x and y and having its other vertices in G: (otherwise, by 

Parity graphs 
265 
Fig. 13. 
Fig. 14. 
linking this chain with a chain C(a, x )  we would obtain a minimal chain joining a 
and y whose parity would be different from the parity of i). 
If this chain is lengthened by the edge (y, z )  we obtain an odd minimal chain 
joining x and z. 
Consider the level N, ( j  < i )  where j is chosen as large as possible, in such a 
way that there exists a vertex 6 EN, connected to x (to y respectively) by a 
chain C(b, x )  (C(b, y )  respectively). 

266 
M. Burkt, J.-P. Uhry 
By linking these two chains we obtain a minimal chain. Indeed this last chain 
can have only horizontal chords by selection of j .  Moreover, if this last chain 
contained a horizontal chord (u, u )  then u and u would have the same adjacents 
below (see lemma S), contradicting the choice of j .  
This chain is even; thus there is a contradiction. 
Second case: x and y are adjacent (see Fig. 15). There exists u E N,,, such that 
u is adjacent to x and to y (see Lemma 8). The vertices x, y, and z have a 
common adjacent u at level N,-, (see Lemma 7). (x, u, z, y, u )  is an odd cycle. It 
must contain two crossing chords (Theorem 1). This is impossible. Hence there is 
a contradiction. 5 
Fig. 15. (x. y ) E  E, (x, z ) E  E 
Definition 11. Associate at a given level N, a graph G' = (V', E'). The vertices 
of V' are in one-to-one correspondence with the Xf. Two vertices of V' are 
connected by an edge of E' if the corresponding Xf and Xf' have a non-empty 
intersection, and are not included one in the other: 
(xf- 
n x: ) # 0, xf 
- (x: n x: ) #  0, 
x:'- x: n x: # 0. 
We shall denote Vl = u, (Xf) where k covers the set of vertices of a 
connected component. It will be assumed that G' has p connected components. 
It I S  easy to check that the family %IL of the sets V!, where 1 covers (1,2,. . . , p), is 
a nested family, partially ordered by inclusion. 
Lemma 10. (a) Let a given CJf be minimal by inclusion. Define K = 
An edge (z, w ) in E cannot exist where z E Xf - X!' and w E Xf' for 1 and 1' 
{ k /x: 
E Vf}. 
belonging to K. 

Parity graphs 
267 
By removing true or false twins, we can then reduce into a stable level the 
subgraph G (Uf). 
(b) If, in addition, there exists an edge (x, y )  in E on the level N, with y $Z U :  
and x E U:, then all vertices of U !  are false twins of the subgraph G induced by 
the level indicated by 0,1,2,. . . , i - 1, i (after the reduction described in (a)). 
Proof. For a U :  only composed of one X f , ,  the proof is obvious. The proof is 
given only in the case where U, is composed of two X:, namely X,' and X f .  
There is no difficulty in generalizing the proof. 
Suppose the edge (x, y )  exists. The same reasoning applies to the edge ( 2 ,  y ) .  
The existence of (x, y )  involves that of ( 2 ,  y). On the other hand, there exist u 
and v, two vertices of N,,, with (u, z )  E E, (u, x )  E E, (v, x )  E E and (v, y )  E E 
(see Lemma 8). 
A five cycle has been noted without any crossing chords (z, u, x, v, y ). Hence 
(see Fig. 16), a connected component of the induced subgraph G(Uf) has the 
same set of successors in N,,, (see Lemma 8); remember that U: is minimal in 
the family %. 
Fig. 16 
Such a connected component has the same set of predecessors at level N,-, 
(Lemma 7). This connected component is thus a 2-parity graph. In addition, as 
soon as there exists a vertex y E N, - U,' and an edge ( y ,  x )  E E with x E U,', all 
vertices of U :  have y in their adjacents (Lemma 9). 
We can therefore reduce every one of the connected components of the 
subgraph G ( U : )  into single vertices, by successive removal of true and false 
twins. 
If there is no edge ( y , x )  as above, the proof is finished. 
If such an edge exists, then the vertices just created have the same adjacents in 
N,. They belong therefore to the same connected component of G(N,). They 
have the same adjacents in the above level (Lemma 7). They are thus false twins 
of the subgraph G( Ul=(,N,). 
This completes the proof. 0 
The previous lemma is the fundamental argument of the recognition algorithm 
given later on, which will allow us to demonstrate Theorem 5 below. 

268 
M. Burlet, .I.-P. Uhry 
Definition 12. We define extension of a graph G by a bipartite graph B = 
( X ,  U X z ,  A ), the operation of which consists in generating a new graph obtained 
by identification of certain vertices of XI with a set of false twins of G (possibly 
formed of a single vertex). 
Theorem 5. Every parity connected graph G = (V, E )  is obtained from a single 
tiertex by the following operations : 
4, creation of a false twin, 
42 creation of a true twin, 
d3 extension by Q bipartite graph, 
applied successively and in any order. 
It is obvious that a graph obtained by the three operations +,, #2, (p3 indicated 
in Theorem 5 is a parity graph. 
The following algorithm will in fact check that a graph which satisfies Lemmas 
7 , 8 ,  10(a) and 10(b) can be obtained by these three operations beginning with a 
single vertex (see Fig. 17). 
. 
Parity graph 
false twins 
I 
rartite graph 
I 
Fig. 17. 
The algorithm consists in looking for bipartites which eventually extend (as in 
(p3) a graph hung by a vertex a. 
We carry out this research by beginning from the lower level N,,, and then 
climbing from level to level. As soon as we detect that one of these bipartites 
extends the remainder of the graph, we suppress this bipartite. It is the inverse 
operation of 43. 
More precisely, beginning at the level N,, we are going to reduce into a stable 

Parity graphs 
269 
level, in every iteration, one of the levels successively met, and this by the 
inverse of &, +2 and 43. 
It is clear that the level N, can be reduced to a stable set by the sole 
operations of reduction of a 2-parity graph (4, and &). 
Lemma 11. If every level N, (j > i )  is a stable set, then all the graphs Gf are 
bipartite. 
Proof. Obvious. 0 
Let us imagine that the levels N,, j > i, are reduced into independent sets. We 
describe the iteration which consists in reducing N, into a stable set. Consider 
(Xt , Xf , . . . , Xf), where we suppose that we create q connected components 
G!, Gf,. . . , GP, by deleting N,. 
Let the family "11 = { U!, 1 E (1,2,. . . , p ) }  be 
defined as in Definitions 11. On the level N,, vertices can be found which do not 
belong to one of X:, 
k E (1,2,. . . ,q). We regroup these vertices in a set denoted 
by UP". 
One iteration of the algorithm consists in checking that these U! satisfy the 
properties of Lemma 10, and in this case reducing them to stable sets. To be able 
to reduce them to stable sets, it is necessary that any connected component of 
G(U!) has the same adjacents at the levels N-,, 
N, and N,,,. 
It is the level N,,, which forces us to handle the U! in the order of inclusion 
(see Fig. 11). If once reduced to a stable set a U! confirms Lemma 10(b), then the 
vertices of this U: are false twins for the subgraph G( u;-olV,). 
We must then 
delete the bipartites which correspond to them. The iteration on the level i is 
then continued until the level N, is itself reduced to a stable set. 
Recognition algorithm for a parity graph 
0 - Do i : = m  go to 2. 
1 - Take one minimal Ui' in the family %. Let K = {k 1 X," E U!}. 
- Check that the family X:, k E K (which can be reduced to a single X:, 
- Reduce this Ut to a stable set by 4;' and 4;'. 
- If there exists an edge as in Lemma 10(b), check Lemma 9, and by 4;' 
- Delete this U f  
from the family %.* 
containing only one vertex) satisfies Lemmas lO(a), 7 and 8. 
delete the bipartite Gf where k EK. 
* Check in this step that this CJ: is a maximal element of the family 2. 
This should allow us to 
discover more easily the Xf-,. 

270 
M. Burlet, J.-P. Uhry 
- If the family !& 
is not empty, go to 1. 
2 - The only vertices from level N, belonging to a connected component of 
G ( N , )  are vertices without successors at the level Nil. (They can contain, 
among other vertices, vertices of U?+'.) 
- Check that the connected components of level N, on these last vertices 
satisfy Lemma 7. Then reduce them to stable sets by the inverse of 4, and 
(62. 
If if 0 then do i:= i - 1 go to 1. 
If i = 0 End. 
It is clear that this algorithm stops at a finite number of iterations, and it 
reduces any parity graph to a single vertex. We have just established that a parity 
graph can be constructed following the operations indicated in Theorem 5. 
The main operation of this algorithm is to recognize that a graph is a 2-parity 
graph. This operation, itself polynomial, is repeated a polynomial number of 
times (in [3] an algorithm is indicated to recognize a 2-parity graph whose 
running time is H'). 
Remark 5. We have just demonstrated that a graph is a parity graph, if and only 
if it verifies Lemmas 7, 8. 9 and 10. If the graph is not a parity graph, the 
algorithm finds the lemma in fault. The proof of the lemma in question then 
allows us to detect an odd cycle which does not have two crossing chords. 
We may use this algorithm to exhibit in any non-parity graph an odd cycle 
which does not verify the hypothesis of Theorem 1. 
Remark 6. A new problem, apparently similar to that of recognizing a parity 
graph, is as follows: 
Let G be a graph, and (x, y )  a pair of vertices of G. 'Are all minimal chains 
joining x to y even?'. A polynomial time algorithm for this problem would result 
in a polynomial time algorithm for determining whether a graph G has no 
chordless odd cycle. 
In fact, enumerate all the minimal chains of cardinality 2. This is polynomial. 
Let (x, 2, y )  be such a chain. Remove the vertex z, and the vertices r, - {x} -{y}. 
If all the minimal chains now joining x to y are even, then x and y do not 
belong to a chordless cycle, otherwise x and y do belong to an odd chordless 
cycle. 
The same algorithm, in the complementary of G, would allow us to check the 
hypothesis of the strong perfect graph conjecture. 
This problem appears much more difficult. 

Parity graphs 
271 
5. Polynomial algorithms of optimization 
Interest in the characterization in the previous section aims at yielding the 
construction of polynomial algorithms for the four problems of perfect graphs. 
These algorithms are not related to the more general algorithms, such as that 
proposed in [6], since they are based on the algorithm of the maximum weighted 
independent set in a bipartite graph (Ford and Fulkerson [4]). This is also the 
case, for example, for the algorithms proposed in this book [4] for comparability 
graphs. 
Here, we try to solve the problems with weight function: c non-negative, 
integral, defined on V. We might think, in fact, that it is sufficient to solve the 
problem of maximum cardinality, as the transformation of a vertex into false or 
true twins enables a problem with an integer-valued cost function to be 
transformed into a cardinality problem. 
This transformation constructs a parity graph from a parity graph. Unfortu- 
nately, this transformation is not polynomial and, consequently, we shall study 
general problems of optimization. 
Let K be the matrix of all maximal cliques of G = (V, E )  where 1 V I = n. Each 
line of K is a characteristic vector of a maximal clique of G in {0, l}". Also, S is 
the matrix of all the maximal stable sets of G. 
The four problems paired by duality are as follows: 
yt 2 0 ,  
I Kx G 1, 
x, 3 0 ,  
I yK 3 c, 
c,x, = z (Max); 1 2 
yi = W (Min); 
x, 
0, 
We solve each pair simultaneously: 
Maximum weighted stable, 
Maximum weighted clique, 
Minimum covering by cliques, 
Minimum covering by stable sets. 
The method used is classical since the works of Edmonds on matching, for 
example [2], and consists in finding for any non-negative integral weight function 
c, defined on V, a pair of dual integral solutions, x and y, which satisfy the 
complementary slackness theorem. 
For the three operations which transform G* into graph G, we are content 

272 
M. Burlei, J.-P. Uhry 
here to give the transformation on the weight. Starting from a dual optimal 
integral pair defined on G*, x *  and y * ,  we shall also give the indications which 
enable a dual optimal integral pair, x and y defined on G, to be obtained. 
Notations. We shall denote by (Y the vertex of G* with respect to operations 
bl, &, 43, and by c, its weight; KP, KP, . . . , KP are all the maximal cliques of G* 
containing the vertex a, and when associated with the components of y * strictly 
positive, they are denoted respectively by y *(KP), y *(K;), . . . , y *(KP). 
These I cliques are the restrictions of 21 maximal cliques of graph G in the 
case of false twins, denoted respectively KY, K4,. . . , KT, K t , K ; ,  . . . , K f .  They 
are the restrictions of 1 maximal cliques in the case of true twins, denoted 
respectively KY", Kfh,. . . , Kpb. 
5.a. Maximum weighted independent set. Maximum covering by maximal clique 
5.a.l. False twins a and b. This is a particular case of 5.a.3, where 
B = ( X , u X z , A ) ,  X , = ( { a } . { b ) ) ,  X 2 = + ,  A =4. 
s.a.2. True fwins a and b (see Fig. 18). We define c, = max(c,, cb) = c,. 
Fig. 18. 
Transformation on the pair of optimal solutions. 
(i) Case where x * ( ( Y ) =  1, x ( a )  = 1, x(b)=O, 
y ( K f b )  = y *(KP), . . . , y(KY4 = y *(KP) 
(ii) Case where x * ( a ) = O ,  x ( a ) = O ,  x(b)=O, 
Y ( K ' ; ~ ) = ~ * ( K ~ ) ,  
. . . , y (  KY>= y*(KY). 
The components of x and y which are not defined are unchanged. This pair x 
and y fulfills the complementary slackness conditions. 
S.a.3. Extension by a bipartite. We suppose the bipartite B = (XI U X,, A )  is 
only fixed by two false twins, a arld b. 

Panty graphs 
213 
The reader will be released from this constraint without any difficulty. 
We define c, = 
s s ,  where s:ax 
stands for the value of a maximum 
weighted stable in B, denoted SL,, and s f b  stands for the value of a maximum 
weight stable in B, where vertex a and vertex b have been eliminated. 
(In general, we shall denote the sets in capital letters, and the value in lower 
case letters.) 
The idea of this transformation is quite simple (see Fig. 19). As soon as a 
vertex in the neighbourhood r,(G*) of a or b is in the maximum weight 
independent set of G, 
it contains Sfb. In the other case, it contains SL,. We 
translate therefore by c, 
the regret which results from putting a in the maximum 
weighted stable of G*. 
a 
Fig. 19. 
Transformation on the pair of optimal solutions. 
(i) Case where x * ( a )  = 1. We obtain x by withdrawing from x * its component 
(ii) Case where x * ( a )  = 0. We complete in this case by a representative vector 
To obtain y, the process is slightly more elaborate. It is necessary to find an 
x *(a), and by extending this vector by a characteristic vector of S:ax. 
of s,",. 
integer solution to the linear system 
(iii) Case where x*((u)= 1. We know that y*(K:)+y*(K;)+.-.+y*(KY)= 
c,. We shall take ta +tb 
= c,. 

274 
M. B~ le t, 
J.-P. Uhv 
This linear system is of the transportation type. If its right-hand side is 
It remains to determine 5. and tb in order that the solutions x and y found 
Let us construct from B =(XI 
U X z , A )  a new bipartite graph B ' =  
integral, an integer solution to the linear system may be found easily. 
satisfy the Complementary slackness conditions. 
(X; 
U Xi, A'), 
Xi = X2 
U {PI, Xi= XI, A ' =  A U ((p, a),(P,b)). 
We define cg = c,. Solve the maximum weighted stable set in B' and let x' and y' 
be the integer optimal pair of dual solutions obtained. 
There exists in B' a stable set of maximum weight containing f?: 
and such that 
€3' 
Smax = S L .  
The complementary slackness theorem applied to B' allows us to affirm 
(b) only the edges of bipartite B', with one of their extremities always in a 
We shall define 
(a) Y '((P, a 1) + Y '((P, b 1) = c, 
? 
maximum weighted stable set, have a possible positive component. 
6. = Y '((BY a 11, 
(b = Y '(@, 1)- 
It is easily proved that the vector x previously described and the vector y 
obtained by solving the system (1) and restricting y' on the edges of B, fulfills the 
complementary slackness conditions. 
(iv) Case where x *(a) 
= 0. This case is identical to the preceding case in 
everything, except for the quantity y *(KP) + y *(G) 
+ . + y *(KP), which can 
be greater than c, and no longer equal. 
We shall substitute in this case for la and &, 
any integer solution of the 
following linear system of inequalities: 
[a a c a ,  
(a 
Cbr 
6 + (b = y *(KP) y *(K;) 
* ' * + y *(KP). 
In both cases, we were able to obtain a pair of dual integer solutions, x and y, 
satisfying the complementary slackness conditions. 
5.6. Maximum weighted clique. Minimum covering by maxim.al cliques 
The notations used here are very similar to those in the preceding section. 

Parity graphs 
5.b.l. False twins a and b. Identical with 5.b.3. 
215 
5.b.2. True twins a and b. We define c, = c, + c b .  
(i) Case where x * ( a ) =  1, then x ( a ) =  1 and x ( b ) =  1. 
(ii) Case where x * ( a ) = O ,  then x ( a ) = O  and x(b)=O. 
By a similar procedure to 5.a.1, we obtain in both cases an integer vector y 
which satisfies with x the conditions of the complementary slackness theorem. 
5.b.3. Extension by a bipartite. We shall mention only the case where the 
maximum weighted clique is in G*. We define c, = max(c,, c b )  = c,. 
We find the maximum weighted clique in G*, and in B. We take for the primal 
solution x the characteristic vector on G = (V, E )  of the clique which has the 
heavier weight. 
In order to find a dual solution y defined on G, we shall proceed as in 5.a.3 by 
starting from a dual solution for the maximum weighted clique problem on graph 
B'. 
(B' is defined as before; the vertex p of B' supports the weight of the 
maximum clique defined by x and reduced by c,.) 
The y' dual solution on B' has strictly positive components on stables which 
are the restrictions of stables in B. The latter ones can be partitioned, due to the 
fact that they contain, or do not contain, the vertices a and b in three families, 
denoted by Y ; b ,  Y%, and Y:b. 
The dual solution y * on graph G* has strictly positive components on stable 
sets which can be partitioned into two families, denoted by Y:* and 9';'. 
A value is assigned to each of the stable sets of these families. This value is 
initially the (integer) component of vector y '  or vector y *  corresponding to the 
stable set. 
We shall now juxtapose two stable sets, one from a family defined in B, the 
other from a family defined in G*, in such a way as to obtain a stable set defined 
in G. 
Each one of the stable sets thus obtained will correspond to a component of 
the vector y which is sought. This component is defined by the minimum of the 
values associated with the two stable sets forming it. We now deduct the value of 
this minimum from the quantities corresponding to the two stable sets. The 
stable sets associated with a zero value are then removed. 
We continue to define y in the same way, for the remainder of the families. It 
is, however, necessary to proceed in a fixed order. We first juxtapose the family 
Y : b  with the family 92' (a is replaced by a and b), then the family 9'2 with 9':' 
(a is now replaced by a). At this stage, the dual constraints corresponding to 
vertices a and b are satisfied. 
We can then juxtapose Yp,"' (a is removed) with 9': and finally juxtapose the 

276 
M. Burlet, J.-P. Uhry 
rest of the latter with Y$*. This procedure allows us to find an integer dual 
solution y which satisfies with x the complementary slackness theorem. 
Remark 7. Subsection 5.b.3 supposes an algorithm is known for covering the 
vertices of a bipartite graph by stable sets (dual problem of maximum weighted 
clique). Such an algorithm, apparently never described, is not difficult to 
imagine. 
The final section S.b, very short and very technical, obscures the fact that the 
two problems, maximum cardinality clique and minimum coloring, have an 
almost greedy solution. Yet, here again, we find that a parity graph is very much 
like a bipartite graph: the maximum cardinality clique problem is easier than the 
maximurn cardinality independent set problem. 
A general theorem follows from subsections 5.a.3 and S.b.3. 
Theorem 6. if we extend a perfect graph by a bipartite graph, we obtain a new 
perfect graph. 
Proof. Subsections S.a.3 and 5.b.3 are two proofs of this theorem. Indeed, they 
do not take into account the fact that G* is a parity graph, only that G* is a 
perfect graph. 
This theorem is even easier to deduce. It suffices in fact to prove that the 
cardinality of a maximum clique is equal to the chromatic number in all perfect 
graphs extended by a bipartite. It gives a direct demonstration of Theorem 2 
(when we know Theorem 5). 
References 
[I ] C. Berge. Graphes et hypergraphes (Dunod, Paris, 1970); English translation: Graphs and 
[2) M. Boulala and J.P. Uhry, Polytopes des indtpendants d’un graphe serie-parallele, Discrete 
131 D.G. Corneil. H. Lerchs and L. Stewart. Cographs: a new class of perfect graphs, Discrete 
[4] L.R. Ford and D. R. Fulkerson, Flows in Networks (Princeton University Press, Princeton, NJ, 
[S] T. Gallai. Graphen mit triangulerbaren ungeraden vielecken, Magyar Tud. Akad. Mat. Kutato 
[6] M. Grotschell, L. Lovisz and A. Schrijver, Polynomial algorithms for perfect graphs (this 
[7] Wen Lian Hsu. How to color claw free perfect graphs, Ann. Discrete Math. 11 (1981) 189-197. 
[XI L. Lovisz. Normal hypergraphs and the perfect graph conjecture. Discrete Math. 2 (1972) 
(91 H. Meyniel. On the perfect graph conjecture, Discrete Math. 16 (1976) 33%342. 
Hypergraphs (North-Holland, Amsterdam. 1973). 
Math. 27 (1979) 225-243. 
Appl. Math. (to appear). 
1962). 
Int. Kozl. 7 (1962) A.3-36. 
volume. pp. 325-356). 
253-267 (this volume, pp. 29-42). 

Parity graphs 
277 
[lo] H. Sachs, On the Berge conjecture concerning perfect graphs, Combinatorial Structures and 
[l l ] L. Surinyi, The covering of graphs by cliques, Studia Sci. Math. Hungar. 3 (1968) 345-349. 
[12] A.C. Tucker, The strong perfect graph conjecture for planar graphs, Canad. J. Math. 25 (1973) 
[13] A.C. Tucker, Critical perfect graphs and perfect 3-chromaticgraphs, J. Comb. Theory, Ser. B 23 
their Applications (Gordon and Breach, New York, 1970) 377-384. 
103-114. 
(1977) 143-149. 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 279-280 
@ Elsevier Science Publishers B.V. 
A SEMI-STRONG PERFECT GRAPH CONJECTURE 
v. CHVATAL 
School of Computer Science, McGill University, Montreal, Canada 
A graph is called perfecr if, for each of its induced subgraphs F, the chromatic 
number of F equals the number of vertices of the largest clique in F. This notion 
has been introduced by Claude Berge [l], [2], who proposed the following two 
conjectures: 
(1) a graph is perfect if and only if its complement is perfect, 
(2) a graph is perfect if and only if it has no induced subgraph isomorphic to 
an odd cycle of length at least five or to the complement of such a cycle. 
The first of these conjectures has been proved by Lovasz [3]; the second, 
known as the Strong Perfect Graph Conjecture, remains open. The purpose of 
this note is to interpose a new conjecture between (1) and (2). Let us say that a 
graph G has the P4-structure of a graph H if there is a bijection f between the set 
of vertices of G and the set of vertices of H such that a set S of four vertices in G 
induces the path P4 of length three in G if and only if f ( S )  induces a P4 in H. The 
conjecture interposed between (1) and (2) is: 
(1;) if G has the P4-structure of a perfect graph then G is perfect. 
Trivially, (1;) implies (1); to show that (2) implies (l;), it will suffice to establish 
the following fact. 
Theorem. The only graphs having the P4-structure of an odd cycle of length at 
least ,fiue are the cycle itself and its complement. 
Sketch of Proof. When the cycle has length five or seven, the assertion can be 
verified by an exhaustive search. Now let n be an integer greater than eight and 
let a graph G have the P4-structure of the cycle C, of length n. The vertices of G 
may be labeled as u,, uzr.. . , u. in such a way that, with the subscript arithmetic 
taken modulo n, a set S induces a P4 in G if and only if S = {?I,+,, 
u , + ~ ,  
u , + ~ ,  
for some i. Now each subgraph G, of G induced by {a+,, 
u , + ~ ,  
. . . , u , + ~ }  
has the 
P4-structure of the path P8 of length seven. Further exhaustive search reveals 
that there are precisely four such graphs: P8 itself, its complement p8, the graph 
F shown in Fig. 1, and its complement I? 
Now it is easy to verify that 
279 

280 
v. Chvcitaf 
Fig. 1 
G, 
2 Pa implies G,,, 
= Pa, 
G, = p, implies G,,, = Pa, 
G, 2 F implies G,+, 
= F, 
G, I( P implies G,+, 
= E 
- 
In particular, if some G, 
is isomorphic to Pa then every G, 
is isomorphic to Pa. In 
this case, it is easy to verify that G is isomorphic to C.. Similarly, if some G, 
is 
isomorphic to pa then G is isomorphic to cn. The remaining two options are 
excluded whenever n is odd: in this case, we would have G,,, = GI whenever k 
is odd, which is incompatible with G,,, = GI. 
References 
[l] C. Berge, Fiirbung von Graphen deren samtliche bzw. ungerade Kreise starr sind (Zusammenfas- 
[2] C. Berge, Sur me conjecture relative au problbme des codes optirnaux, Commun. 13ibme 
[3] L. Lovhz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
sung), Wiss. Z. Martin-Luther-Univ. Halle-Wittenberg, Math.-Natur. Reihe (l%l), 114. 
Assemblte Gtn. URSI, Tokyo (1%2). 
253-267 (this volume, pp. 29-42). 

Annals of Discrete Mathematics 21 (1984) 281-297 
@ Elsevier Science Publishers B.V. 
A METHOD FOR SOLVING CERTAIN GRAPH 
RECOGNITION AND OPTIMIZATION PROBLEMS, 
WITH APPLICATIONS TO PERFECT GRAPHS* 
Sue H. WHITESIDES 
School of Computer Science, McGill University, Montreal, Canada 
In this paper, a polynomial time algorithm for finding clique cutsets is used to provide 
polynomial time algorithms for testing membership in certain families of graphs and for 
solving certain optimization problems in them. These optimization problems are: finding a 
maximum weight clique or stable set, a minimum coloring, and a minimum weight fractional 
cover by cliques or stable sets. The method of the paper is quite general. Applications arc 
given for perfect graphs: The recognition and optimization problems above are solved for 
clique separable graphs, and a recognition algorithm for i-triangulated graphs is given. 
answering questions of Gavril. 
1. Introduction 
In this paper, we will show how to use a polynomial time algorithm for 
determining whether a graph has a clique cutset (Whitesides [IS]) to obtain a fast 
(i.e., polynomial time) test for membership in certain families of graphs. In these 
families, we then provide fast solutions to the following optimization problems: 
finding a minimum coloring, a maximum weight clique, a maximum weight 
stable set, a minimum weight clique cover, and a minimum weight stable set 
cover. In particular, we will show that for any hereditary family F of graphs, 
these problems, with the exception of finding minimum weight stable set and 
clique covers, can be solved in polynomial time for arbitrary members of F 
whenever they can be solved in polynomial time for those members that have no 
clique cutsets. The same is true for recognizing members of a given family. If 
graphs in F are perfect, then the minimum weight cover problems can also be 
solved by our method. 
The motivation for seeking a fast way to find clique cutsets came from the 
problem of recognizing perfect graphs. It is well known that joining two perfect 
graphs along a clique contained in both is a perfection-preserving operation; 
hence, a natural first step in testing a graph for perfection would be to look for a 
* This work was supported by a Dartmouth College Junior Faculty Fellowship. 
281 

282 
S. H. Whitesides 
clique cutset, and in case of success, to test the graphs joined together along the 
cutset for perfection. While we do not have a general test for perfection, we can 
nevertheless show how to recognize some subfamilies of perfect graphs using this 
idea. 
As an application of our general methods, we will answer several questions 
raised by Gavril [lo]. In particular, we will show how to solve the optimization 
problems mentioned above for ‘clique separable’ graphs. These graphs, studied 
by Gallai [8] and Gavril [lo], are perfect and include as a proper subfamily the 
‘i-triangulated’ graphs of Gallai [8]. Gallai’s graphs are defined by the property 
that their odd cycles of length at least five always have a pair of noncrossing 
chords. Chordal (‘triangulated’) graphs, which include bipartite graphs, are 
examples of Gallai graphs. 
Grotschel, Lovlsz and Schrijver [ 131 have given a polynomial time algorithm, 
based on the ellipsoid method, for finding a maximum weight stable set and a 
minimum coloring for perfect graphs in general. Hence, fast ways to solve those 
two problems are already known for the clique separable graphs in our 
application. Nevertheless, one might ask for a more structure related solution. 
The method in this paper is quite general and does not depend on having the 
property of perfection, except in the case that a minimum weight cover by stable 
sets or cliques is desired. It is hoped that the reader will find the general 
approach given here to be not only conceptually simple but also structurally 
elucidating for particular families of graphs of interest. 
We will begin in Section 2 by reviewing the way in which any graph gives rise 
to a ‘clique cutset tree’ that represents the structure of the graph with regard to 
its clique cutsets. The clique cutset tree can be constructed quickly using the 
algorithm of Whitesides [19] for finding clique cutsets, which we briefly describe 
at the end of Section 2. In Section 3, we will give an algorithm for reconstructing 
a graph from its clique cutset tree. At each step in the algorithm, a ‘primitive’ 
subgraph is ‘glued’ onto the partially reconstructed graph at a clique. In Section 
4, we will use the fact that every graph can be built up in this way to show how to 
solve recognition and certain optimization problems for graphs when solutions 
to these problems are known for their clique cutset-free subgraphs. We will turn 
to applications in Section 5, where we review clique separable and Gallai graphs 
and show how to solve various optimization problems for these. In Section 6, we 
will give recognition algorithms for clique separable and Gallai graphs. Section 7 
is devoted to concluding remarks. 
Throughout this paper, we will assume that our graphs are finite, undirected, 
and connected, and that they have no loops or multiple edges. A graph with 
vertex set V and edge set E will be denoted G, G( V), or G (V, E ) .  The number 
of vertices in G will be denoted by n. A clique of G is a set of mutually adjacent 
vertices of G, but need not be a maximal such set. A cufset of G is a set of 

Solving certain graph recognition and optimization problems 
283 
vertices whose removal disconnects G, and a clique cutset is a cutset that is also a 
clique. The weight w(S) of the graph induced by a set S of vertices is the sum of 
the weights of the vertices in S. A hereditary family is called an h-family. 
Given an h-family F of graphs, the problems for which we will seek solutions 
are the following: 
(I) membership: determine whether a given graph G is a member of the 
family F. 
(11) maximum clique : Given a graph G that belongs to F and whose vertices 
have been assigned nonnegative integer weights, find a clique in G of maximum 
weight. 
(111) minimum coloring: Given a graph G belonging to F, find a coloring of 
the vertices of G, adjacent vertices being assigned different colors, that uses the 
minimum possible number of colors. 
(IV) maximum stable set: Given a graph G that belongs to F and whose 
vertices have been assigned nonnegative integer weights, find a stable set of 
maximum possible weight. 
In case the graphs in the family F are all perfect, then two additional problems 
that will interest us are: 
(V) minimum couer by cliques: Given a graph G( V) that belongs to a family 
F of perfect graphs and that has nonnegative integer weights on its vertices, find 
an assignment of numbers yi ( Ci) 
to the maximal cliques Ci 
such that the sum of 
the yi’s is as small as possible subject to the following condition. For each vertex 
0 E v, 
(VI) minimum cover by stable sets: This problem is the same as (V) above, 
except that ‘clique’ is replaced by ‘stable set’. 
2. Constructing clique cutset trees 
Suppose that A is a cutset of G( V), and let Vi be the vertex set of any of the 
connected components of G( V - A). Then we say that the graph G( V, U A ) is 
a child of G produced by A. (This terminology differs from that of Gavril [lo], 
where G( V, U A )  is called a ‘leave’ of G. We have changed this terminology 
because we will want to use the term ‘leaves’ to mean degree 1 vertices of a tree 
other than the root.) 
Following Gavril [lo], we now construct a labeled tree T(G) from G as 
follows. Let the root of T ( G )  be labeled (G,A), where A is a minimal clique 
cutset of G. (See Fig. 1.) Then for each child of G produced by A, create in the 
tree T ( G )  a child of the root. Once these new vertices have been added to the 

284 
S. H. Whitesides 
G 
2 
15 
3 
Fig. I A graph G and a cutset tree T ( G )  for G. Here, G = ( I , .  . . , IS} and A = (4, S}; G, = {l,. . . ,S}, 
a chordless cycle of length 5 ;  G2 ={4,. ... IS} and A,=(7}; G,=(4 ,..., 8}, a clique; G,= 
{7,Y. 10.1 I )  and A, = {Y. 10); G, = {7,12,13, I4.15) and A, = {12.13); G, = (7.9, lo), G, = (9,10, ll}, 
G, = (7.12.13). and G, = (12,13,14.15}, where G,. . . . . G, are cliques. (We have denoted induced 
subgraphs of G by their vertex sets.) 
tree, look for minimal clique cutsets for the corresponding subgraphs of G so 
that the new vertices can be labeled with a pair consisting of the name of the 
subgraph and the name of the clique cutset. Then continue this process, making 
a vertex in the tree a leaf whenever the subgraph of G to which it corresponds 
contains no clique cutset. Give the label of such a leaf a dash, ‘-’, for a second 
component. If in using this notation it should happen that some tree vertex 
denofed (H, B), say, turns out to be a leaf, interpret ‘B’ 
as a dash. We call this 
tree a clique cutsef tree for G. In general, of course, a graph has several clique 
cutset trees. 
The following observation will be needed to show that the algorithms given in 
later sections are polynomial. 
Lemma 1 (Gavril [lo]). Any clique cufsef tree T(G) for a graph G has at most n2 
vertices, where n is the number of vertices of G. 
Proof. Note that each nonleaf of T ( G )  has at least two children, so that for each 
tree vertex other than the root, there is at least one other tree vertex with the 
same parent. Suppose that tree vertices (H,,A,) and (H,,A,), which might be 
leaves, are both children of (23, A). Then there is an ordered pair of nonadjacent 
vertices (a, u,) in G such that 0, E H, - A  and u, E H, -A, if i. To each vertex 

Solving certain graph recognition and optimization problems 
285 
(H,,A,) of T ( G )  other than the root, associate such an ordered pair (v,, u,). No 
ordered pair can possibly be associated with more than one tree vertex. Hence 
the number of vertices in T ( G )  is at most one more than twice the number of 
nonedges in G, so n2 is certainly an upper bound for the size of T(G). 0 
Another useful fact about clique cutset trees is given in the following Lemma. 
Lemma 2 (Gavril [lo]). If (H’, A ’) is a vertex in a clique cuset tree T( G )  of a 
graph G, then A’ is a clique curset of G as well as of HI. 
Proof. Note that if (H’, A’) is a child of (H, A )  in T(G), then any clique cutset 
of H‘ is a clique cutset of H in G also. 0 
We now give a brief description of the algorithm of Whitesides [19] for finding 
whether a graph has a clique cutset in time O(n3). See [19] for further details, 
including a proof of correctness. 
Algorithm 1 (Whitesides [19]). Finding whether a graph G ( V )  has a clique 
cutset. 
Step (0). Look for a chordless cycle of length at least four. If no such cycle 
exists, then either it’s easy to find a clique cutset, or G must be a clique and has 
no clique cutset. If the desired cycle is found, denote its vertex set by S. 
Step (1). Find a component C of G ( V - S ) ,  and then find the set R 
consisting of each vertex in S that has at least one neighbor in C. (Since G (  V )  is 
connected, R is not empty.) 
Step (2). Search for a pair of nonadjacent vertices u and u in R. If no such 
pair exists, R must be a clique cutset of G(V), as R separates C from the 
nonempty set S - R in G (  V). 
Step (3). Find a chordless path P whose end vertices are u and u and whose 
intermediate vertices all lie in C. 
Step (4). Adjoin the intermediate vertices of P to S. 
Step (5). Repeat steps (1)-(4) until either a clique cutset has been found or S 
has been enlarged to all of V, in which case G ( V )  has no clique cutset. 
Now it is easy to give the main result of this section. 
Theorem 1. A clique cutset tree can be constructed for a graph G ( V )  with n 
uertices in O(n5) time. 
Proof. By Lemma 1, there are at most n* vertices in such a tree. By Algorithm 1, 
the children of each tree vertex can be found in O(nJ) time. 0 

286 
S. H. Whitesides 
The time complexity given in Theorem 1 may be too pessimistic. Our main 
point, however, is that a clique cutset tree can be found in polynomial time. 
3. Reconstructing graphs from primitive subgraphs 
The purpose of this section is to show how to reconstruct a graph G in O(nS) 
time by a sequence of ‘gluing’ operations. Each of these operations consists of 
adjoining a ‘primitive’ subgraph to a partial reconstruction R of graph G. The 
primitive subgraph is adjoined to R at some clique of G that is contained in 
both. By a primitive subgraph, we mean a connected subgraph that has no clique 
cutset. We will later make use of this reconstruction process to find, given some 
h-family F of graphs, polynomial time solutions to problems (I)-(IV) of Section 
The basic idea of the reconstruction algorithm is simple. Begin with a 
primitive subgraph Gf G that is associated with a leaf of a clique cutset tree T ( G )  
for G, and then one by one, adjoin the other primitive subgraphs associated with 
the leaves of T(G). The order in which this is done is such that the partially 
reconstructed graph R and the primitive subgraph being adjoined always have a 
clique in common. At each stage, R is connected. Hence the addition of a new 
primitive subgraph never connects several components at once. 
The reconstruction algorithm will have a step in which the leaves of a clique 
cutset tree are numbered. These numbers will give the order in which the 
primitive subgraphs associated with the leaves are to be adjoined to the partial 
construction R of G. In this context, we will say that a maximal subtree with root 
r in T ( G )  has been numbered if, and only if, all its leaves have been assigned 
numbers. 
Algorithm 2. Reconstruction of a graph G from primitive subgraphs. 
Step (0). Check whether G is primitive. If so, stop. 
Step (1). Construct a clique cutset tree T ( G )  for G. 
Step (2). Number T ( G )  by the following procedure. (See Fig. 2.) 
Fig. 2. A numbering for the leaves of the tree T ( G )  of Fig. I. The numbers on the edges represent 
the order in which the Algorithm visits the children. The numbers on the leaves represent the ‘gluing’ 
order assigned to the leaves. 

Solving certain graph recognition and optimization problems 
287 
(i) Initialize variable r to be the root of T ( G )  and counter i to 1. 
Next repeat (ii) and (iii) below until the root of T ( G )  has been numbered. 
(ii) If all children of r = (H, A )  have been numbered, mark r as numbered; 
(iii) Otherwise, choose an unnumbered child c of r. 
If c is a leaf of T ( G ) :  label c with the cutset A associated with r ;  label c with 
the current value of i ;  mark c as numbered; increment i ;  return to (ii). 
If c = (HI, A’) is not a leaf: find the (unique) leaf (H”, -) such that (H”, -) is 
a descendant (although not necessarily a child) of (H’,A’) and such that the 
cutset A associated with r belongs to H”; label (H”, -) with A and with the 
current value of i ;  mark (H”, -) as numbered; increment i ;  reset r to the parent 
of (H”, 
-); return to (ii). 
Step (3). Find the leaf (H, -) numbered 1 during step (2), and set the initial 
partial reconstruction R of G equal to H. Then process the remaining leaves of 
T ( G )  from the smallest numbered leaf to the largest. To process a leaf (H, -) 
labeled with cutset A during step (2), adjoin H to R by identifying the copy of A 
belonging to H with the copy of A belonging to R. (See Fig. 3.) 
In step (2), note that each time the program returns to (ii), another node of 
T ( G )  has been marked as numbered. Also note that a node is not marked as 
numbered until all of its descendants have been so marked. Consequently step 
(2) terminates after I T ( G ) (  iterations with a numbering of the leaves of T(G). 
It is easy to show inductively that after the first leaf has been numbered, each 
time the program returns to step (2ii), the cutset associated with the current 
value of r belongs to the union of the graphs corresponding to the leaves of 
T(G) that have already been numbered. Also note that if a leaf is numbered 
while r = ro = (Ho, A@), 
then the leaf contains the cutset A. associated with ro. 
reset r to the parent of r (stop if r is the root of T(G)); return to (ii). 
4. Solving optimization problems in graphs 
In this section, we show how the optimization problems (11)-(VI) listed at the 
end of Section 1 can be solved in polynomial time once these problems can be 
solved in polynomial time for the primitive (i.e., clique cutset-free) members of 
an h-family F of graphs. We begin with problems (11)-(IV), €or which the 
property of perfection is immaterial. 
Theorem 2. Let F be an h-family of graphs, and let F’ denote the set of its 
primitive members. Suppose there is a polynomial time algorithm for finding a 
maximum weight clique for graphs in F’. Then there is a polynomial time 
algorithm for finding a maximum weight clique for graphs in F. 

288 
S. H. Whitesides 
Fig. 3. Reconstructing the graph G of Fig. 1 according to the gluing order shown in Fig. 2. 
Proof. Let G be a graph in F, and suppose that G has n vertices. Then 
according to Theorem 1, a clique cutset tree T ( G )  can be constructed using 
Algorithm 1 in O(n5) time. By Lemma 1, there are at most n z  leaves in T(G), so 
maximum weight cliques for each of the subgraphs of G associated with a leaf of 
T ( G )  can be found in time O(n2p(n)), where p ( n )  is a polynomial bound for the 
time to find a maximum weight clique for an n-vertex primitive graph in F’. 
Suppose that (HI A )  is a nonleaf vertex of T(G), and denote its children, some 
of which may be leaves, by (Hl,Al), . . . ,(Hk, Ak). For 1 d i S k, let Ci be a 
maximum weight clique for Hi. Then the C, of largest weight among these 
cliques is a maximum weight clique for H. Consequently, finding a maximum 
weight clique for G is simply a matter of processing T( G)  from its lowest level 

Solving certain graph recognition and optimization problems 
289 
up to its root, selecting at each nonleaf vertex the maximum weight clique found 
among the graphs associated with its children. This can be done in O ( n 2 )  time, so 
a maximum weight clique for G can be found in polynomial time. 0 
The argument just given in the proof of Theorem 2 applies to finding a 
minimum coloring, so we have the following result. 
Theorem 3. Suppose there is a polynomial time algorithm for,finding a minimum 
coloring for graphs in the set F' of primitive members of some h-family Fof graphs. 
Then there is a polynomial time algorithm for finding a minimum coloring for all 
graphs in F. 
To find a maximum weight stable set, we use a result of Boulala and Uhry 
which we describe in the next Remark. 
Remark 1 (Boulala and Uhry [2]). Let G( V, E )  be a graph whose vertices are 
weighted with nonnegative integers, and suppose that G is composed of two 
subgraphs GI( V1, El) and G2( 
V2, E2), 
where V, U V, = V, El U Ez = E, and 
V, n V2 is the vertex set of a clique A of G. Consider the stable sets of GI that 
contain no vertex of A, and let 3, be one of maximum weight. Also, consider for 
each vertex a in A the stable sets of GI that contain a, and let S, be one of 
maximum weight. Now change the weights on the vertices in A : Assign to each 
vertex a the new weight max(0, w(S,)- ~ ( 3 , ) ) .  
Let ST be a maximum weight 
stable set for Gz once the weights in A have been changed. Finally, denote by S 
the following set of vertices of G: If ST n A is empty, let S = ST U 3,; 
otherwise, let S = S :  U S,, where S2 n A =a. According to Remark 4.3 of 
Boulala and Uhry [2], S is a maximum weight stable set of G with respect to the 
original weighting of the vertices, and its weight is w (ST) + w (gl). 
Now we are ready to find maximum weight stable sets using the clique cutset 
tree method. 
Theorem 4. Suppose there is a polynomial time algorithm for ,finding a maximum 
weight stable for graphs in the set F' of primitive members of some h-family F of 
graphs. Then there is a polynomial time algorithm for finding a maximum weight 
stable set for all graphs in F. 
Proof. Let G be a graph in F. Using Algorithm 2, reconstruct G from primitive 
subgraphs, gluing one primitive subgraph at a time to the most recent partial 
reconstruction of G. At each step after the initial one, let the graph GI of 
Remark 1 be the primitive subgraph just glued onto the partial reconstruction of 

290 
S. H. Whitesides 
G, and let G2 
be the graph onto which GI was glued. Thus the graph GI, in which 
several maximum weight stable set problems must be solved in order to compute 
new weights for the vertices in the clique, is primitive. Hence, s, and the S,’s can 
be found in O ( p ( n ) n )  time, where p ( n )  is a polynomial bound on the time 
needed to find a maximum weight stable set for a primitive graph with n vertices. 
Then from these stable sets, compute new weights for the vertices of A = 
G, 
n G2, 
and recursively solve the problem of finding the stable set S: of 
Remark 1. Since there are fewer than n2 primitive graphs involved in the 
reconstruction process, a maximum stable set for G can be found in polynomial 
time. 0 
Having solved optimization problems (II)-(IV) for families of graphs whose 
primitive members have solutions to these problems, we turn to families of 
graphs whose members are all perfect. A graph G is perfect if, and only if, each 
induced subgraph H of G has chromatic number equal to the size of the largest 
clique in H. See Berge [l] for a discussion of these graphs. 
Chvatal[6] has shown that precisely for the perfect graphs can the problem of 
finding a maximum weight stable set be formulated as the following linear 
programming problem: 
n 
maximize 2 w,x, subject to 
i = l  
Kx s 1, 
x b O ,  where K is the maximal clique versus vertex incidence 
matrix, and the w,’s are the weights for the vertices. 
If the weights w, are nonnegative integers, solving the dual LP problem, 
minimize x y ,  subject to 
yK 2 w, 
y 301 
amounts to finding a minimum weight clique cover. 
Since the complement of a perfect graph is also perfect (Lovisz [15]), the 
problem of finding a maximum weight clique can also be formulated as an LP 
problem. Solving the dual of this problem amounts to finding a minimum weight 
cover by stable sets. 
These facts, in conjunction with Theorems 2 and 4, give us a way to solve 
problems (V) and (VI). 
Corohry to Theorem 4. Suppose the graphs in the h-family F of Theorem 4 are 

Solving certain graph recognition and optimization problems 
291 
all perfect. Then there is a polynomial time algorithm for finding a minimum 
weight clique couer for graphs in F. 
Proof. Let G be a graph in F, and reconstruct G from primitive subgraphs, 
using Algorithm 2 as before. At each stage of the reconstruction, let G1 be the 
last primitive piece added, and let GZ 
be the partial reconstruction to which GI 
was adjoined. Let A denote the clique G1 n Gz, and change the weights on the 
vertices of A as follows. To each a E A, assign a new weight max (0, w ( S o )  - 
w ( s ) } ,  where, of all the stable sets of GI containing a, So is one of maximum 
weight and of all the stable sets of G1 containing no vertex of A, 
is one of 
maximum weight. Then, recursively find a minimum weight clique cover for G, 
once these new weights have been assigned. By LP duality, the weight of this 
cover will be the weight of a maximum weight stable set for G,. 
Next, change the weights on the vertices of A again. This time, assign to each 
a E A the nonnegative weight w ( a )  - (w (So) - w (s)), 
where the weights are the 
original ones. This makes all maximum weight stable sets of G1 containing a 
have weight equal to w ( s ) .  Now find a minimum weight clique cover for G1 with 
these new vertex weights. The weight of this cover will be equal to w (3). Finally, 
take the union of the clique covers for GI and Gz. 
This union is indeed a clique 
cover for G. The cover has minimum weight because its weight is equal to that of 
a maximum weight stable set for G. Again, the subgraph in which multiple 
subproblems must be solved is primitive, so the algorithm runs in polynomial 
time. 0 
Of course, a proof analogous to the one just given holds for finding a minimum 
weight cover by stable sets, so Theorem 2 has a similar corollary. 
5. Applications to clique separable and Gallai graphs 
A chord (u, u )  of a cycle in a graph is a pair of adjacent but nonconsecutive 
vertices of the cycle. Two chords (u, u )  and (x, y )  are said to cross if u, x, u and y 
are distinct and appear in this order on the cycle. In [8], Gallai studied the family 
of graphs defined by the property that odd cycles of length at least five always 
have a pair of noncrossing chords. The chordal (sometimes called ‘triangulated’) 
graphs of Dirac [7], for example, satisfy this condition; these graphs, which have 
been studied algorithmically by Gavril [9] and Rose [17], are defined by the 
property that every cycle of length at least four has a chord. Gallai gave several 
characterizations of his graphs and showed them to be a-perfect. Suranyi [18] 
later gave a simpler proof of the same result. A review of Gallai’s graphs, called 
‘i-triangulated’, appears in Berge [l]. 

292 
S. H. Whitesides 
In order to describe a result of Gallai’s that we use, we need to define two 
special types of graphs. We say that a graph G is a type 1 graph if its vertices can 
be partitioned into two disjoint sets V, and V2 such that G(VJ is a connected 
bipartite graph, G(V2) is a clique, and every vertex of Vl is adjacent in G to 
every vertex of V,. Here, one of V1, V2 may be empty. We say that G is a type 2 
graph if it is a complete k-partite graph for some k. 
Remark 2. Problems (I)-(VI) can be solved in polynomial time for graphs that 
are type 1 or 2; also, it is easy to see that these graphs are perfect. 
To see that a graph G can be quickly tested for being type 1, find all vertices of 
degree n - 1, where n is the number of vertices of G, and then check that the 
induced subgraph on the remaining vertices is connected and bipartite. If this 
induced subgraph is a stable set, a vertex of degree n - 1 can be added to it to 
make it connected and bipartite. Suppose that G has been found to be type 1. 
Then talung the vertex of maximum weight on each side of the bipartite 
subgraph of G together with all the vertices of degree n - 1 gives a maximum 
weight clique for G. A maximum weight stable set can be obtained by choosing 
the heavier side of the bipartite subgraph of G or the vertex of degree n - 1 that 
has maximum weight, as appropriate. 
It is easy to check whether a given graph is type 2 because in type 2 graphs, 
nonadjacency is an equivalence relation on the vertices. 
Burlet and Uhry [5] give polynomial time algorithms for solving problems (II), 
(IV), (V), and (VI) for the family of ‘parity’ graphs; this family includes the 
bipartite graphs. Using this fact, it is easy to see that these problems have 
polynomial time solutions for the type 1 graphs. 
It is easy to check that the remaining problems concerning type 1 and type 2 
graphs can be solved in polynomial time. 
A result of Gallai’s that we need is given in the next Remark. 
Remark 3 (Gallai IS]). A Gallai graph that is primitive must be a type 1 or type 
2 graph. 
Gavril [ 101 calls a graph clique separable if each of its primitive subgraphs is 
type 1 or type 2. The Gallai graphs are a strict subfamily of the clique separable 
graphs as Fig. 4 shows. 
The clique separable graphs form quite a large family. Note, for example, that 
since any chordal graph that is not a clique must have a clique cutset (Hajnal and 
Surinyi [14]), the chordal graphs are certainly Gallai and hence clique separable. 
Also, connected bipartite graphs are clique separable, as they are tvue 2. 

Solving certain graph recognition and optimization problems 
293 
2 
Fig. 4. A clique separable graph G that is not Gallai (i-triangulated). Vertices 3, 4, 6, 8, and 7 
constitute an odd cycle that has only (3,6) as a chord. Nevertheless, A = (3,5,6} is a clique cutset, 
where the children of G produced by A are GI = 11,. . . ,6} and G, = {3,5,6,8}. Both GI and G, are 
complete 3-partite graphs. 
It is easy to see that clique separable graphs are perfect, as they can be 
reconstructed from primitive perfect pieces by gluing these onto cliques of the 
partial reconstructions, an operation that preserves perfection. 
Now we are ready to apply the results of Section 4. 
Theorem 5. Let F be the family of clique separable graphs. Then for F there are 
polynomial time algorithms for solving problems (I)-(VI). 
Proof. To test whether a graph G belongs to F, build a clique cutset tree T(G), 
and test that each subgraph of G associated with a leaf of T ( G )  is type 1 or 2. All 
this can be done in polynomial time, by Lemma 1, Theorem 1, and Remark 2. 
If G is known to be clique separable, then by Remark 2 and Theorems 2, 3, 
and 4 and their corollaries, there are polynomial time algorithms for solving 
problems (11)-(VI). 0 
Theorem 5 satisfies Gavril’s [lo] request for polynomial time solutions to the 
minimum clique cover and maximum stable set problems €or clique separable 
graphs. He solved the recognition problem and the problem of finding a 
minimum coloring and a maximal solution. His algorithm depends on finding 
clique cutsets with special properties. Algorithm 1 makes these properties 
unnecessary, and thus simplifies the details of his algorithm. Gavril also asked 
for a fast recognition algorithm for the family of graphs whose primitive 
members can be type 1, type 2, or ‘transitive orientable’ (‘comparatability’) 
graphs. Such an algorithm is easy to provide, as Gilmore and Hoffman [ll] and 
Pnueli, Lempel and Even [16] have given fast recognition algorithms for these 
latter graphs. 
6. Gallai graphs 
Since the family of clique separable graphs strictly contains the Gallai graphs, 
we already have solutions to (11)-(IV) for Gallai graphs. Gavril [lo] asked for a 

294 
S. H. Whitesides 
polynomial time membership test for this strict subfamily, and we are about to 
give such a test. We need the next theorem in order to do this. 
Theorem 6. Suppose that G is a clique separable graph, and suppose that C is an 
elementary cycle in G of odd length at least 5. Then either C has a pair of 
noncrossing chords or C has exactly one chord. In the latter case, the chord is 
‘short’, meaning that it joins two vertices that are two steps apart around the cycle. 
Proof. Suppose C fails to have a pair of noncrossing chords. Then in any clique 
cutset tree T ( G )  for G, C is not a subgraph of a graph associated with a leaf, 
because type 1 and type 2 graphs are Gallai. Hence there must be a tree vertex 
(H, A )  in T ( G )  with children (HI, Al), . . . , (Hkr Ae), where possibly some of the 
(H,, A,)% are leaves, such that C is not a subgraph of H, for any i, 1 S i S k. In 
fact, there must be i and j ,  1 S i f  j i 
k, such that C contains a vertex of H, - A 
and a vertex of H, - A. Of course, C must then contain at least two vertices of A 
and hence a chord. Cycle C cannot contain more than two vertices of A because 
it fails to have a pair of noncrossing chords. Hence C is a subgraph of H, U H,. 
One of C fl H,, C n H, must be an induced chordless odd cycle and the other, a 
chordless even cycle. The chordless odd cycle must have length 3, since we 
already know that longer odd cycles always have chords. Hence the chord given 
by C n A is ‘short’. 0 
Now we can give a membership test for Gallai graphs. It runs in O ( n S )  time. 
Algorithm 3. Testing membership of a graph G in the family of Gallai graphs. 
Step (1). Check whether G is clique separable, using Algorithm 2 to con- 
struct a clique cutset tree T(G) for G. 
Step (2). If G is clique separable, process each nonleaf vertex of T ( G )  as 
follows. Suppose the children of (H, A )  are ( H I ,  A1), . . . ,(Ilk, Ak), some of 
which may be leaves. Consider pairs of the form (e, u), where e is an edge of A ; 
is a vertex of H, - A for some i, 1 s i s k, and is adjacent to both endpoints x 
and y of e. For each if 
i, 1 S j s k, construct a graph S, as follows. Begin with 
S, = Hi - A, but then remove all vertices adjacent to both x and y .  Finally, add 
in x and y to S,, putting in all induced edges except edge e. 
Next, test whether there is a path from x to y in Sfi If there is, G is not Gallai: 
The existence of a path from x to y in S, implies the existence of a chordless path 
from x to y. If this chordless path has an odd number of vertices, it forms with e 
a chordless path of length at least 5 in G, as x and y have no common neighbors 
in S,. If the chordless path has even length, then in G it forms with the vertex II 
of H, a cycle of odd length at least 5 that has only one chord. 
Repeat step 2 until all nonleaf vertices have been processed. If the processing 

Soloing certain graph recognition and optimization problems 
295 
of these vertices did not yield a proof that G fails to be Gallai, then by Theorem 
5, G is indeed a Gallai graph. The total time to process all the nonleaf vertices of 
T(G) is at most O(n5). 
Burlet [3] has extensively studied Gallai graphs from an algorithmic point of 
view and has independently given a recognition algorithm for them as well as 
algorithms for solving the Optimization problems. His algorithms depend on 
finding clique cutsets with special properties, which are not necessary from our 
point of view. Burlet works with simplicia1 clique cutsets, meaning clique cutsets 
that have no edge on a chordless even length cycle. In the next theorem, we 
again illustrate the usefulness of the clique cutset idea as a tool for structure 
elucidation by showing in a different way from Burlet that these simplicia1 
cliques exist. Also see Burlet and Fonlupt [4]. 
Theorem 7. Suppose that G is a Gallai graph and that T ( G )  is a clique cutset tree 
for G that has been constructed subject to the following rules: 
(i) At each stage of the construction, choose a minimal cutset. 
(ii) Construct children for a tree uertex (H,A) if, and only if, H fails to be a 
2-connected graph of type 1 or 2. 
Then if (H, A )  is a tree vertex whose children are all leaves, A is a simplicial clique 
of G. 
Proof. Suppose by way of contradiction that ( H , A )  is a tree vertex whose 
children (HI, -), . . . , (Hk, -) all are leaves, but that the clique cutset A as- 
sociated with vertex (H,A) contains an edge e whose endpoints x and y are 
consecutive vertices on a chordless even length cycle C. Then A n C = e. Let 
K = A U C, and note that K has no clique cutset: Such a cutset would have to 
separate a vertex u E A - e from a vertex u E C - e. But C U u is an odd cycle 
of length at least 5 and so must have another chord in addition to e, because G is 
Gallai. The existence of this additional chord prevents the separation of u from u 
by a clique cutset. 
Now imagine ‘percolating’ K through T ( G ) .  That is, observe which graphs 
associated with tree vertices have K as a subgraph. Since K has no clique cutset, 
it must be a subgraph of one of the children Hi of H. In other words, the cycle C 
belongs to Hj. Note that in each child H, of H, 
j #  i, any vertex u adjacent to 
both x and y must in fact belong to A. This means that if H,, which is type 1 or 
type 2, contains a chordless even cycle in which x and y appear consecutively, 
then H, must be a bipartite graph completely connected to the clique A -e. 
Consequently, there must be some Hi, 
j #  i, in which x and y do not appear 
consecutively on a chordless cycle of even length. Otherwise, H itself would 
consist of a connected bipartite graph completely connected to the clique A - e, 
and H would be 2-connected. This contradicts the properties of T(G). 

296 
S. H. Whitesides 
Let H, be a child of H in which x and y do not appear as consecutive vertices 
on a chordless cycle of even length. This means that if H, is a type 2 graph, one of 
x and y must be the lone vertex in its class, and so this vertex is adjacent to all 
other vertices of H,. If H, is type 1, then again, one of x and y must be adjacent 
to all the other vertices of H,. Otherwise, one of x and y would be an articulation 
point for the bipartite piece of H, and would form with A - e a smaller clique 
cutset for H, contradicting minimality of A. 
Say x is the endpoint of e that is adjacent to all other vertices of H,. Then y is 
adjacent to no vertex of H, - A. This is because any common neighbor of x and 
v in H, would form with C and the chordless even cycle in H, a cycle of odd 
length at least 5 containing only one chord. But this means that x together with 
A - e is a clique cutset for H, contradicting the minimality of A. 0 
7. Conclusions 
We have seen that having a quick way to find clique cutsets proves polynomial 
time algorithms for testing membership in families of graphs whose primitive 
members can be recognized in polynomial time. We have also seen that certain 
optimization problems can be solved quickly in these families by using the clique 
cutset tree approach. As a application, we pointed out that for clique separable 
graphs there are polynomial time algorithms for all these problems. Also, we 
provided a recognition algorithm for Gallai graphs which is different from the 
one of Burlet [3] and Burlet and Fonlupt [4]. 
We have seen that the clique cutset tree approach can provide a powerful tool 
for structure elucidation. Again, we point out that this approach is in no way 
restricted to perfect graphs. 
We close with two questions, one in the realm of perfect graphs. First, can all 
perfect graphs be obtained from some collection of ‘primitive’ perfect graphs by 
a sequence of perfection preserving operations? The second question is simply a 
more general version of a question posed by Gavril [lo], who asked for a 
characterization of clique separable graphs in terms of conditions on cycles. We 
ask for choices of ‘primitive’ graphs giving rise to interesting families that can be 
defined in another way, by conditions on cycles, for example. 
Acknowledgement 
The author wishes to thank V. Chvatal for numerous stimulating and 
enlightening discussions about this work. Among other things, he suggested that 
Theorem 4 might be true and pointed out several of the references. Also, the 
author wishes to thank the Computer Science Department at Cornell University 
for its hospitality during the academic year 1981-1982. 

Soloing certain graph recognition and optimization problems 
297 
References 
[ 11 C. Berge, Graphs and Hypergraphs (North-Holland, Amsterdam, 1972). 
[2] M. Boulala and J.P. Uhry, Polytope des indipendants d’un graphe strie-parallkle, Discrete 
Math. 27 (1979) 225-243. 
[3] M. Burlet, Etude algorithmique de certaines classes de graphes parfaits, thesis, I’Universitk 
Scientifique et MCdicale de Grenoble and I’Institut National Polytechnique de Grenoble (1981). 
[4] M. Burlet and J. Fonlupt, Polynomial algorithm to recognize a Meyniel graph, Research Report 
303, Laboratoire d’hformatique et de MathCmatiques Appliquees de Grenoble (1982). 
[5] M. Burlet and J. P. Uhry, Parity graphs (this volume, pp. 253-277). 
[6] V. Chvital, On certain polytopes associated with graphs, J. Comb. Theory, Ser. B 18 (1975) 
(71 G.A. Dirac, On rigid circuit graphs, Abh. Math. Sem. Univ. Hamburg 25 (1961) 71-76. 
[8] T. Gallai, Graphen mit triangulierbaren ungeraden vielecken, Magyar Tud. Akad. Mat. Kutato 
Int. Kozl. 7 (1962) 3-36. 
[Y] F. Gavril, Algorithms for minimum coloring, maximum clique, minimum covering by cliques 
and maximum independent set of a chordaI graph, SIAM J. Comput. 1 (1972) 18&187. 
[lo] F. Gavril, Algorithms on clique separable graphs, Discrete Math. 19 (1977) 159-165. 
[ll] P.S. Gilmore and A.J. Hoffman, A characterization of comparability graphs and of interval 
[12] M.C. Golumbic, Algorithmic Graph Theory and Perfect Graphs (Academic Press, New York, 
[13] M. Grotschel, L. Lovasz and A. Schrijver, The ellipsoid method and its consequences in 
[14] A. Hajnal and J. Suranyi, Uber die auflosung von graphen in vollstandige teilgraphen, Ann. 
[15] L. Lovasz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
(161 A. Pnueli, A. Lempel and S. Even, Transitive orientation of graphs and identification of 
[17] D.J. Rose, Triangulated graphs and the elimination process, J. Math. Anal. Appl. 32 (1970) 
[18] L. Surinyi, The covering of graphs by cliques, Studia Sci. Math. Hungar. 3 (1968) 345-349. 
[19] S.H. Whitesides, An algorithm for finding clique cut-sets, Inf. Process. Lett. 12 (1981) 31-32. 
138-154. 
graphs, Canad. J. Math. 16 (1964) 539-548. 
1980). 
combinatorial optimization, Combinatorica 1 (1981) 169-197. 
Univ. Sci. Budapestinensis 1 (1958) 113-121. 
253-267 (this volume, pp. 2942). 
permutation graphs, Canad. J. Math. 23 (1971) 160-175. 
597-609. 

This Page Intentionally Left Blank

PART VI 
OPTIMIZATION IN PERFECT GRAPHS 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 301-323 
@ Elsevier Science Publishers B.V. 
ALGORITHMIC ASPECTS OF PERFECT GRAPHS 
Martin Charles GOLUMBIC* 
IBM Israel Scientific Center, Technion City, Haifa, Israel 
1. Introduction 
Consider a collection C = (c#} of courses being offered by a major university. 
Let T, be the time interval during which course c, is to take place. We would like 
to assign courses to classrooms so that no two courses meet in the same room at 
the same time. 
This problem can be solved by properly coloring the vertices of the graph 
G = (C, E) where cici E E e T, f l  T, # 0. We may interpret each color as 
corresponding to a different classroom. The graph G is an interval graph, since it 
is represented by intersecting time intervals. 
This example is especially interesting because efficient, linear-time algorithms 
are known for coloring interval graphs with a minimum number of colors. (The 
minimum coloring problem is NP-complete for general graphs.) 
In this paper we will survey a number of topics in algorithmic graph theory 
which involve classes of perfect graphs. We will also discuss some recent 
applications of perfect graphs to computer science. The intention of this article is 
to provide an understanding of the main research directions which have been 
investigated and to suggest possible new areas of research. The sections of this 
paper are numbered to correspond with the chapters of the author’s book, 
Algorithmic Graph Theory and Perfect Graphs. The interested reader is 
referred to this book for further study. 
2. The design of efficient algorithms 
Algorithmic complexity analysis deals with the quantitative aspects of prob- 
lem solving. It addresses the issue of what can be computed within a practical or 
reasonable amount of time and space by measuring the resource requirements 
exactly or by obtaining upper and lower bounds for them. Complexity is actually 
* This work was supported in part by the National Science Foundation under Grant No. MCS 
78-83820. 
301 

302 
M.C. Golurnbic 
determined at three levels: the problem, the algorithm, and the implementation. 
Naturally, we want the best algorithm which solves our problem, and we want to 
choose the best implementation of that algorithm. 
Consider the problem of determining whether an undirected graph G is 
connected. A mathematically elegant solution is the following: G is connected if 
and only if I + M + M 2  
+ M3 + - - + M"-' 
has no zero entries where M is the 
adjacency matrix of G, I is the identity matrix, and n is the number of vertices of 
G. However, using this theorem as an algorithm would require much more work 
(matrix multiplication and addition) than is actually needed to test connectivity. 
A better way would be to traverse the edges of the graph. The following 
algorithm will test connectivity and find a spanning tree efficiently. 
Standard Spanning Tree Algorithm (SST) 
Step I. Start with a tree T consisting of one arbitrary vertex and no edges. 
Step ZZ. If T contains all the vertices of G, then STOP [ T is a spanning tree]. 
Otherwise, do step 111. 
Step 111. Add to T an edge ( x , y )  which joins a vertex y not yet in T to a 
vertex x already in T. If no such edge exists, then STOP [there is no spapning 
tree; G is not connected]. Otherwise, go to step 11. 
In Step 111 of our algorithm there may be several edges (x, y) eligible to be 
added to T. We call such an edge a candidate edge. Various priorities can be 
established to guide the choice of candidates, and each priority will yield a 
slightly different algorithm. If candidates are stored in a queue, then SST gives a 
breadth-first search (BFS) of G. Storing candidates in a stack SST does a 
depth-first search (DFS). If the edges have costs associated with them, and if the 
candidate with minimum cost is always chosen, then SST produces a minimum 
cost spanning tree (MST). Similarly, shortest path algorithms and critical path 
algorithms can also be designed by adapting SST with a suitable priority for 
choosing candidates. 
The complexity of the spanning tree algorithm depends on how the graph is 
stored and whether anything special is done to the candidate edges. Table 1 
summarizes these complexities. 
A graph problem is said to be linear in the size of the graph if it has an 
algorithm which can be implemented to run in O(n + e )  steps on a graph with n 
vertices and e edges. Thus testing connectivity is a linear graph problem. This is 
usually the best that one could expect for any nontrivial graph problem since 
every vertex and every edge would probably have to be examined at least once. 
A problem is called polynomial if it has an algorithm which can run in O@(n)) 
steps where p is a polynomial function. 

Algorirhmic aspects ojperfecr graphs 
303 
Table 1 
Complexity of the standard spanning tree algorithm 
Candidates 
Adjacency matrix 
Adjacency sets 
in 
stored as an 
stored as lists 
a 
array 
or sequentially 
Stack 
(DFS) 
O(nZ) 
O(n + e )  
Queue 
(BFS) 
O(n2) 
O(n + e) 
Reverse heap 
(MST) 
O(n2 + e log e )  
O(n + e  loge) 
The algorithmic graph problems that we will examine in this survey paper 
include recognizing various classes of perfect graphs and finding minimum 
colorings, minimum clique covers, maximum cliques, and maximum stable sets. 
We will be particularly interested in special purpose polynomial algorithms 
designed to solve these problems for particular classes of perfect graphs. The 
reason such algorithms are important is that for arbitrary graphs these last four 
problems are NP-complete, that is, they are in a large class of problems which all 
currently require an exponential amount of running time and which are all 
related in such a way that if any one of them could be solved in polynomial time, 
then so could all problems in this class. 
3. Perfect graphs 
An undirected graph G = ( V , E )  is perfect if it satisfies any of the following 
equivalent conditions: 
w(GA) =,y(GA) 
(for all A C V), 
(PI 1 
a(GA)= e(GA) 
(for all A C V), 
(P2) 
o(GA)a(GA)alA 
1 
(for all A C V). 
(P3) 
The equivalence of (PI)-(P3) is known as the Perfect Graph Theorem. 
prove or disprove the following conjecture of Claude Berge. 
An open question whose solution has eluded researchers for two decades is to 
Strong Perfect Graph Conjecture (SPGC). An undirected graph G is perfect if 
and only if in G and in G every odd cycle of length 2 5  has a chord. 
Although proving the SPGC seems to be a mathematical rather than an 
algorithmic problem, it does raise an interesting algorithmic question. 

304 
M.C. Golumbic 
Is there a polynomial algorithm which recognizes whether or not an undi- 
We have no answer to this question. However, if there is such an algorithm 
rected graph G has an odd chordless cycle of length 3 5 ?  
and if the SPGC is true, then it would answer another open question: 
Is there a polynomial algorithm which recognizes whether or not an undi- 
rected graph G is perfect? 
In a very recent paper, Grotschel, Lovasz and Schrijver [16] have shown that 
the ellipsoid method of solving linear programming problems can be applied to 
obtain a polynomial algorithm to find maximum stable sets and minimum 
colorings for perfect graphs. Also, since G is perfect if and only if its 
complement G is perfect, this same approach can be used to find maximum 
cliques and minimum clique covers. The major importance of this result is that it 
generalizes what had been known for certain classes of perfect graphs. Although 
the complexity of the algorithm is polynomial, it may not be practical to 
implement. As the authors point out, it is not intended to compete with the 
special purpose algorithms designed to solve these problems for interval graphs, 
comparability graphs, triangulated graphs, and other classes of perfect graphs 
which so often arise in applications. 
4. Triangulated graphs 
An undirected graph G is called triangulated if every cycle of length strictly 
greater than 3 possesses a chord, that is, an edge joining two nonconsecutive 
vertices of the cycle. In the literature, triangulated graphs have also been called 
chordal, rigid -circuit, monotone transitive and perfect elimination graphs. 
A vertex x of G is called simplicial if its adjacency set Adj(x) induces a 
complete subgraph of G, i.e., Adj(x) is a clique (not necessarily maximal). Dirac 
[4], and later Lekkerkerker and Boland [18], proved that a triangulated graph 
always has a simplicial vertex (in fact at least two of them), and using this fact 
Fulkerson and Gross [7] suggested an iterative procedure to recognize triangu- 
lated graphs based on this and the hereditary property, namely, repeatedly locate 
a simplicial vertex and eliminate it from the graph, until either no vertices remain 
and the gruph is triangulated or at some stage no simplicial vertex exists and the 
gruph is not triangulated. The correctness of this procedure is given in Theorem 
4.1. Let us state things more algebraically. 
Let G = (V, E) be an undirected graph and let cr = [u,, v2,. . . , urn] be an 
ordering of the vertices. We say that u is a perfect vertex elimination scheme (or 
perfect scheme) if each ui is a simplicial vertex of the induced subgraph G{”,. 

Algorithmic aspects of perfect graphs 
305 
In other words, each set 
Ai = {vj E Adj(vi) I j > i }  
is complete. For example, the graph G1 in Fig. 4.1 has a perfect vertex 
elimination scheme u = [a, g, b, f ,  c, e, d ] .  It is not unique; in fact G, has 06 
different perfect elimination schemes. In contrast to this, the graph G2 has no 
simplicial vertex, so we cannot even start constructing a perfect scheme - 
it has 
none. 
r 
GI 
G2 
Fig. 4.1. Two graphs, one triangulated and one not triangulated. 
Theorem 4.1. A n  undirected graph G is triangulated if and only if it has a perfect 
vertex elimination scheme. Moreover, any simplicial vertex can start a perfect 
scheme. 
A proof of this theorem can be found in Golumbic [ 131 and uses the following 
important lemma of Dirac [4]. 
Lemma 4.2. Every triangulated graph G = (V, E )  has a simplicial vertex. 
Moreover, if G is not a cliqae, then it has two nonadjacent simplicial vertices. 
From Lemma 4.2 we learn that the Fulkerson-Gross recognition procedure 
affords us a choice of at least two vertices for each position in constructing a 
perfect scheme for a triangulated graph. Therefore, we can freely choose a 
vertex v, to avoid during the whole process, saving it for the last position in a 
scheme. Similarly, we can pick any vertex vn-l adjacent to u, to save for the 
(n - 1)st position. If we continued in this manner, we would be constructing a 
scheme backwards! This is exactly what Rose, Tarjan, and Lueker [23] have 
done in order to give a linear time algorithm for recognizing triangulated graphs 
using lexicographic breadth-first search. This method can be found in Golumbic 
[13]. In an unpublished work, R. E. Tarjan [26] has shown that maximum 
cardinality search (MCS) can also be used to recognize triangulated graphs. 

306 
M. C. Golumbic 
Algorithm 4.1. Maximum cardinality search. 
Input: The adjacency sets of an undirected graph G = (V, E). 
Output: An ordering v of the vertices. 
Method: The vertices are numbered from n to 1 in the order that they are 
selected in line 3. This numbering fixes the positions of an elimination scheme u. 
For each unnumbered vertex x, the label of x will consist of the number of 
numbered vertices adjacent to x. The vertices can then be ordered according to 
their labels. Ties are broken arbitrarily. The algorithm is as follows: 
1. 
2. 
3. select: 
4. 
5. update: 
6. 
assign the label 0 to each vertex; 
for i + n  to 1 by -1 do 
pick an unnumbered vertex u with largest label; 
u ( i ) t u ;  [this assigns to o the number i ]  
for each unnumbered vertex w EAdj(o) do 
end 
add 1 to label ( w ) ;  end 
The fact that maximum cardinality search can be used to recognize triangu- 
lated graphs is demonstrated by the next theorem. 
Theorem 4.3. An undirected graph G = (V, E )  is triangulated if and only if the 
ordering u produced by Algorithm 4.1 is a perfect vertex elimination scheme. 
Proof. If G has only one vertex, then the proof is trivial. Assume that the 
theorem is true for all graphs with fewer than n vertices and let u be the 
ordering produced by Algorithm 4.1 when applied to a triangulated graph G. By 
induction, it is sufficient to show that v = a(1) is a simplicia1 vertex of G. 
Claim. G may not contain a chordless path j~ = [u, 01, u z , .  . . , ok, w ]  with k 3 1 
satisfying the property 
Suppose G contains such a path p, and choose p such that u - ' ( K )  is largest 
possible. Since u was numbered before -uk and since U k ,  but not u, is adjacent to 
w. there must be some vertex x such that u-'(u) < a - ' ( x )  which is adjacent to u 
but not to uk. Let j be the largest index such that x is adjacent to u, where we let 
uo = u. Then the path p' = [x, u,, . . . , 
u k ,  w ]  must be chordless, since its only 
possible chord xw would give a chordless cycle of length 2 4 .  If a-'(x)< 
u-'(w), then p' would satisfy (1) and contradict the maximality of a - ' ( u )  since 
&'(ok)< u-'(u)< u - ' ( x ) .  So it must be that a - ' ( w ) <  u - ' ( x ) .  But this implies 

Algorithmic aspects of perfect graphs 
307 
that p" = [ w, uk, . . . , u,, x ]  satisfies (1) and also contradicts the maximality. It 
follows that no such path ,u can exist in G, which proves the claim. 
Now let u = (~-'(l) 
and suppose that u is not simplicia]. Choose u, w E Adj(u) 
with uw $.Z E so that (T-'(u) < a-'(w). Then the path [u, u, w ]  satisfies (l), which 
contradicts the claim. Therefore, u is simplicia1 and, by induction, cr is a perfect 
elimination scheme. The converse follows from Theorem 4.1. 0 
The complexity of Algorithm 4.1 is linear in the size of G. One such efficient 
implementation is the following. Let Si be the set of unnumbered vertices whose 
label is i, and let Si be represented by a doubly linked list. For each vertex we 
store its label i and a pointer to its position in the set Si. When a vertex u is 
numbered it is removed from its set, and we move each adjacent vertex w up by 
one set; this can be executed in O(1 +degree(u)) steps. Thus, the entire 
algorithm will be O(l VI + IE I). 
In order to use MCS to recognize triangulated graphs, we need an efficient 
method to test whether or not a given ordering cr of the vertices is a perfect 
elimination scheme. Such an algorithm is given in Rose, Tarjan and Lueker [23] 
and has complexity O(l V (  + ( E  I). (See also Golumbic [13], pp. 88-91.) 
Fast algorithms for the coloring, clique, stable set and clique couer problems on 
triangulated graphs 
Let G = (V, E )  be a triangulated graph, and let cr be a perfect elimination for 
G. It was first pointed out by Fulkerson and Gross [7] that every maximal clique 
was of the form {u}UA, where 
A, = {x E Adj(u) I cr-'(u)< cr-'(x)}. 
However, some of these sets { u }  U A, will not be maximal, and we would like 
to filter them out. This can be accomplished in order to find the chromatic 
number and maximal cliques of a triangulated graph in O( I V I + I E I) time. 
The problem of finding the stability number (Y (G) of a triangulated graph and 
a clique cover of size a ( G )  is solved by Gavril [8]. A linear implementation of 
his algorithm can be obtained by using techniques of Rose, Tarjan and Lueker 
Let u be a perfect elimination scheme for G = ( V, E). We define inductively a 
sequence of vertices yl, y2,. . . , yt in the following manner: yl = (~(1); 
y, is the 
first vertex in (T which follows yz-l and which is not in A,, U A, U . . . U Ay,-,; all 
vertices following y, are in A,, U . . . U A,,. Hence, V = {yl, y2,. . . , y l }  U A,, 
u . . . U A,,. The following theorem applies. 
~ 3 1 .  
Theorem 4.4 (Gavril [8]). The set {y,, y2,. . . , y l }  is a maximum stable set of G, 

308 
M.C. Golumbic 
and the collection of sets Yi 
= {yi} U A, ( i  = 1,2,. . . , t )  comprises a minimum 
clque cover of G. 
Proof. The set {y,, y2,. . . , y I }  is stable since if yjyi E E for j < i, then yi E A ,  
which cannot be. Thus, a ( G ) a  t. On the other hand, each of the sets 
Y, ={yi)U A ,  is a clique, and so { Y1,. 
. . , Yl} is a clique cover of G. Thus, 
a(G) = B(G) = t, and we have produced the desired maximum stable set and 
minimum clique cover. 0 
5. Comparability graphs 
An undirected graph G = (V, E) is a comparability graph if there exists an 
orientation (V, F) of G satisfying 
F f l F - ' = 0 ,  F + F - ' = E ,  F2CF, 
where F2 = {ac I ab, bc E F for some vertex b} and F-' is the reversal of F. The 
relation F is a strict partial ordering of V whose Comparability relation is exactly 
E, and F is called a transitive Orientation of G (or of E). Comparability graphs 
are also known as transitively orientable graphs and partially orderable graphs. 
Examples of some comparability graphs can be found in Fig. 5.1. 
Let us see what happens when we try to assign a transitive orientation to the 
4-cycle (Fig. 5.2(a)). Arbitrarily choosing ab E F forces us to orient the bottom 
edge toward b and the top edge toward d (for otherwise transitivity would be 
violated). These in turn force the remaining edge to be oriented toward d. 
A 
The A graph 
The suspension bridge graph 
A 
Fig. 5.1. Transitive orientations of two comparability graphs. 

b alI 
Algorithmic aspects of perfect graphs 
"Tt 
d 
e 
309 
Fig. 5.2. Examples of forcing. The arbitrary choice of ab E F forces the other indicated orienta- 
tions. 
Applying the same idea to the graph in Fig. 5.2(b) we find that a contradiction 
arises, namely, choosing ab E F forces successively the orientations cb, cd, cf, ef, 
bf, ba. This graph is not a comparability graph. We now make the notion of 
forcing more precise. 
Define the binary relation r on the edges of an undirected graph G = (V, E) 
as follows: 
either a = a' and bb'E E, 
[ or 
b = b' and a a ' g  E. 
ab 
a'b' iff 
We say that ab directly forces a'b' whenever ab r a'b'. Since E is irreflexive, 
ab T a b ;  however, a b f  ba. The reader should not continue until he is convinced 
of this fact. 
The reflexive, transitive closure f * of r is easily shown to be an equivalence 
relation on E and hence partitions E into what we shall call the implication 
classes of G. Thus edges ab and cd are in the same implication class if and only 
if there exists a sequence of edges 
ab = aobo r albl r . . . r akbk = cd, with k t 0. 
Such a sequence is called a r-chain from ab to cd, and we say that ab 
(eventually) forces cd whenever ab r* cd. 
Examples. The graph G of Fig. 5.3 has 8 implication classes: 
A l  = {ab}, 
A, = {ac, ad, ae}, 
A ; ' = { b a } ,  A ; ' = { d c } ,  A;'={ca,da,ea}, A;'={cb,db,eb}. 
A, = {cd}, 
A., = {bc, bd, be}, 
Fig. 5.3. 

310 
M.C. Golumbic 
On the other hand, the graph in Fig. 5.2(b) has only one implication class: 
A = {ab, cb, cd, cf, ef, bf, ba, bc, dc, fc, fe, f b } .  
Let A be an implication class of an undirected graph, G, and let A = A U A - I  
denote the symmetric closure of A. It can be shown that if G has a transitive 
orientation F, then either F n A  = A  (F completely agrees with A )  or 
F n A = A - I  (F completely disagrees with A )  and, in either case, A f l  A-' = 0. 
The converse of this is also valid, namely, if A f l  A-' = 0 for every implication 
class A, then G has a transitive orientation. 
Remark. Many readers may wonder whether an arbitrary union of implication 
classes F = u, A, satisfying F fl F-' = 0 and F + F-' = E is necessarily a 
transitive orientation of G. The answer is no. As a counterexample, consider a 
triangle which has 8 = 23 such orientations two of which fail to be transitive. 
Methods for determining the exact number of transitive orientations t ( G )  of a 
given undirected graph G have been developed by Shevrin and Filippov [24] and 
Golumbic [ 111, and a characterization of uniquely partially orderable graphs 
(i.e., t ( G )  = 2) is given in Shevrin and Filippov [24] and Trotter, Moore and 
Sumner [27]. These results and others are discussed in detail in Golumbic [ 131. 
We shall now describe an algorithm for calculating transitive orientations and 
for determining whether or not a graph is a comparability graph. This technique 
is a modification of one first presented by Pnueli, Lempel and Even [20]. A 
discussion of its computational complexity will follow. 
Let G = (V, E) be an undirected graph. A partition of the edge set E = 
8, + 8, + . . . + & is called a G-decomposition of E if B, is an implication class 
of &, + . . . + Bk for all i = 1,2,. . . , k. A sequence of edges [xlyl, x2, y2,. . . , x t y k )  
is called a decomposition scheme for G if there exists a G-decomposition 
E = 8, + +. . . + Bk satisfying x,y, E B, for all i = 1,2,. . . , k. In this section 
the term scheme will always mean a decomposition scheme. 
For a given G-decomposition there will be many corresponding schemes (any 
set of representatives from the Bi). However, for a given scheme there exists 
exactly one corresponding G-decomposition. A scheme and G-decomposition 
can be constructed by the following procedure: 
Algorithm 5.1. Decomposition Algorithm. Let G = (V, E) be an undirected 
graph. Initially let i = 1 and El = E. 
Step 1. Arbitrarily pick an edge e, = x,y, E E,. 
Step II. Enumerate the implication class B, of E, containing x,y,. 
Step III. Define E,,, = E, - b,. 

Algorithmic aspects ofperfect graphs 
311 
Step IV. If E,,' = 0, then let k = i and STOP; otherwise, increase i by 1 and 
go back to step I. 
Clearly, the Decomposition Algorithm yields a scheme [xIyl,. . . , 
x k y k ]  and 
corresponding G-decomposition L?, + - - . + & for any undirected graph G. 
Moreover, if y,x, had been chosen instead of x,y, for some i, then B;' would 
replzce B, in the G-decomposition. Applying the algorithm to the graph in Fig. 
5.3, the scheme [ac, bc, dc] gives the G-decomposition for which Bl = A3, 
B2 = A4 + A ?  and B, = A;'. In this example notice that although ba and bc 
were not r-related in the original graph, once B1 is removed they become 
r-related in the remaining subgraph and their implication classes merge. In 
general, it can be shown that each implication class of E,,, will be the union of 
either one or two implication classes of E,. 
The next theorem legitimizes the use of G-decompositions as a constructive 
tool for deciding whether an undirected graph is a comparability graph, and, if 
so, producing a transitive orientation. Proofs of this theorem can be found in 
Golumbic [ll] or Golumbic [13]. 
Theorem 5.1 (The TRO Theorem). Let G = (V, E )  be an undirected graph with 
G-decomposition E = 8, + . * + Bk. The following statements are equivalent: 
(i) G = (V, E )  is a comparability graph ; 
(ii) A n A 
(iii) Bi n B;' = 0 fur i = 1,. . . , k. 
= 0 for all implication classes A of E ; 
Furthermore, when these conditions hold, B, + . + B, is a transitive orienta- 
tion of E. 
By combining the TRO Theorem with the Decomposition Algorithm, we 
obtain an algorithm for recognizing comparability graphs and assigning a 
transitive orientation. 
Algorithm 5.2. TRO Algorithm. 
Input: An undirected graph G = (V, E). 
Output: A transitive orientation F of edges of G if FLAG has final value 0, or a 
message that G is not a comparability graph if FLAG has final value 1. 
Method: The entire algorithm is as follows: 
initialize: 
i t l ;  E, c E ;  F t g ;  F L A G t O ;  
I: arbitrarily pick an edge x,y, E E, ; 
11: enumerate the implication class B, of E, containing x,y, ; 
if B, r7 B;' = 0 then 
add B, to F ;  

312 
M.C. Golumbic 
else 
F L A G c l ;  [G is not a comparability graph]; 
111: define E,+, + E, - 8, ; 
IV: if E+, = 0  then 
k t i ;  STOP [F is a transitive orientation of GI: 
i t
i
 + 1; go to I; 
else 
The sequence of arbitrary choices made in line I of the algorithm determines 
which of the many transitive orientations of G is produced by the algorithm. A 
different scheme may give a different transitive orientation. But, when you try 
out a few different schemes you will notice a remarkable phenomenon: No 
matter how the arbitrary choices for G are made, the number of iterations k will 
always be the same. This phenomenon is actually true for any graph G. A 
characterization of the underlying mathematical structure which causes it is 
given in Golumbic [ll], 1131. 
A more detailed version of Algorithms 5.1 and 5.2 will suggest how we may 
construct a G-decomposition and test transitive orientability of an undirected 
graph C = ( V , E )  in O ( 6 l E l )  time and 0(( 
V l + l E J )  space where 8 is the 
maximum degree of a vertex. Let G = (V, E) be an undirected graph with 
vertices uI, u 2 , .  . . , u,. In the algorithm below we use the function 
if u,u,E E, 
if u,u, has been assigned to Bk, 
if u,u, has been asigned to B i ' ,  
if u,u, E E  has not yet been assigned, 
CLASS(i, j )  = [ 4 
undefined 
and ICLASS(i, j ) l  denotes the absolute value of CLASS(i, j). 
Algorithm 5.3. Decomposition Algorithm (detailed version). 
Input: The adjacency sets of an undirected graph G = (V, E )  with vertices 
UI, u2,. . . , 0,. 
Output: A G-decomposition of the graph given by the final value of CLASS, 
and a variable FLAG which is 0 if the graph is a comparability graph and 1 
otherwise. If the algorithm terminates with FLAG equal to 0, then a transitive 
orientation of G is obtained by combining all edges having positive CLASS. 
Method: The algorithm proceeds until all edges have been explored. In the 
k th iteration an unexplored edge is placed in Bk (its CLASS is changed to k). 
Whenever an edge is placed into Bk it is explored using the recursive procedure 
of Fig. 5.4 by adding to Bk those edges r-related to it in the graph Ek. (Notice 
that uiu, E Ek if and only if either (CLASS(I, j)l equals k or is undefined 
throughout the k th iteration.) The variable FLAG is changed from 0 to 1 the 
first time a B, is found such that Bk n Bi' # 8. At that point it is known that G is 

Algorithmic aspecrs of perfect graphs 
313 
not a comparability graph (by Theorem 5.1). The algorithm is as follows. 
initialize: 
k + O ;  
FLAGcO; 
if CLASS(i,j) is undefined then do 
for each edge v,v, in E do 
k + k + l ;  
CLASS(( j )  + k ; CLASS(j, i) + - k ; 
EXPLORE(i, j ) ;  
end; 
end : 
procedure EXPLORE(( j): 
loop 1: 
for each m EAdj(i) such that [mEAdj(j) 
if CLASS(i, m )  is undefined then do 
or JCLASS(j, m)l< k] do 
CLASS(i, m)+ k; CLASS(m, i)+- k ;  
EXPLORE(i, m ) ;  end 
else if CLASS(i, m )  = - k then do 
CLASS(i, rn)+k; 
F L A G c l ;  
EXPLORE(i, m ) ;  end 
for each m EAdj(j) such that 
end loop I 
loop 2: 
[mPAdj(i) or lCLASS(i,m)l< k] do 
CLASS(m, j) + k ; 
EXPLORE(m, j); end 
else if CLASS(m, j) = - k then do 
CLASS(m,j)+k; 
FLAGc1; 
EXPLORE(m, j); end 
if CLASS(m, j) is undefined then do 
CLASS(j, m )  + - k ; 
end loop 2 
return 
end 
Fig. 5.4. 
Complexity analysis. We begin by specifying an appropriate data structure. 
The adjacency sets are stored as linked lists sorted into increasing order. The 
element of the iist Adj(i) which represents edge u,u, will contain j, CLASS(i, j ) ,  a 
pointer to CLASS(j, i), and a pointer to the next element on Adj(i). The storage 
requirement for this data structure is O(1 V ( +  lE I), and the entire initialization 
of the data structure can be accomplished in linear time. 
The crucial factor in the analysis of our algorithm is the time required to access 
or assign the CLASS function. Consider the first loop of EXPLORE(i, j ) .  Two 
temporary pointers simultaneously scan Adj(i) and Adj(j) looking for values of 
m which satisfy the condition in the for statement. This loop can be executed in 
O(d, + d,) steps. The second loop is done similarly, hence the time complexity of 
EXPLORE( i, j )  is 0 (d, + d, ). 

314 
M.C. Golumbic 
In the main program, a pointer scans each adjacency list successively in the for 
loop implying a time complexity of O( IE I). Finally, the algorithm calls 
EXPLORE once for each edge or its reversal (both if their implication classes 
are not disjoint). Therefore, since 
it follows that the time complexity for the entire algorithm (including preproces- 
sing the input) is at most 0 ( 6  1 E I). 
Coloring and other probiems on comparability graphs 
Suppose that G is a comparability graph, and let F be a transitive orientation 
of G. A height function h can be placed on V as follows: h(u) = 0 if u is a sink; 
otherwise, h ( u )  = 1 + max{h(w)(,uw E F}. The height function can be assigned 
in linear time using a recursive depth-first search, and it is a proper vertex 
coloring of G. The number of colors used will be equal to the number of vertices 
in the longest path of F, and since, by transitivity, every path in F corresponds to 
a clique of G, the height function will yield a coloring which uses exactly w ( G )  
colors which is the best possible. Therefore, from the transitive orientation F we 
can assign a minimum coloring to G using the height function in O( 1 V I + 1 E I) 
steps, and, at the same time, calculate a maximum clique of G. We will illustrate 
this by solving the more general problem of finding a maximum weighted clique 
of a comparability graph. 
(If all vertices have the same weight, then the problem is reduced to the usual 
problem of finding a clique of maximum cardinality.) In general the maximum 
weighted clique problem is NP-complete, but when restricted to comparability 
graphs it becomes tractable. 
Algorithm 5.4. Minimum Coloring and Maximum Weighted Clique of a Com- 
parability Graph. 
Inpur: The adjacency sets of a transitive orientation F of a comparability graph 
G = (V, E) and a weight function w defined on V. 
Output: A minimum coloring of G and a clique K of G whose weight is 
maximum. 
Method : We use a modification of the height calculation technique employing 
the recursive depth-first search procedure SEARCH in Fig. 5.5. To each vertex u 
we associate its COLOR and its cumulative weight W ( u )  which equals the 
weight of the heaviest path from u to some sink. A pointer is assigned to u 
designating its successor on that heaviest path. Once the cumulative weights are 

Algorithmic aspects of perfecr graphs 
315 
assigned the clique K is calculated beginning the line labeled retrace. The 
algorithm is given in the form of a procedure. 
procedure MAXWEIGHT CLIQUE (V, F): 
for all u E V do 
SEARCH (V); 
if u is unsearched then 
end 
select y E V such that W(y) = max{ W ( u )  1 u E V); 
K -{y}; 
y +-POINTER(),); 
while y # A  do 
end 
return K ; 
retrace: 
K +-K U {y}; y +POINTER(y); 
end 
procedure SEARCH( 0 ) :  
if Adj(u) = 0 then do 
else do 
W(u)= w ( u ) ;  POINTER(u)+A; 
COLOR(u)+O; 
end 
for all x EAdj(u) do 
if x is unsearched then 
SEARCH(x); end 
select y E Adj(u) such that W(y) = max{ W ( x )  I x E Adj(u)}; 
W(u)+ w ( u ) +  W(y); POINTER(u)+y; 
select z E Adj(u) such that COLOR(z) = max{COLOR(z)I z E Adj(u)}; 
COLOR(u)- 1 +COLOR(z); 
end 
return 
end 
Fig. 5.5. 
We conclude with an interesting polynomial-time method for finding a(G), 
the size of the largest stable set of a comparability graph G. We transform a 
transitive orientation (V, F )  of G into a transportation network by adding two 
new vertices s and t and edges sx and y t  for each source x and sink y of F. 
Assigning a lower capacity of 1 to each vertex, we initialize a compatible 
integer-valued flow and then call a minimum-flow algorithm. The value of the 
minimum flow will equal the size of the smallest covering of the vertices by 
cliques which in turn will equal the size of the largest independent set since every 
comparability graph is perfect. Such a minimum flow algorithm can run in 
polynomial time. 

316 
M.C. Golumbic 
6. Split graphs 
An undirected graph G = (V,E) is a split graph if there is a partition 
V = S + K of its vertex set into a stable set S and a complete set K. Since a 
stable set of G is a complete set of the complement G, and vice versa, G is a split 
graph if and only if its complement G is a split graph. Fddes and Hammer [6] 
have given the following characterization of split graphs. 
Theorem 6.1. Let G be an undirected graph. The following conditions are 
rquiualen t : 
(i) G is a split graph, 
(ii) G and G are triangulated graphs, 
(iii) G contains no induced subgraph isomorphic to 2K2, C., or C,. 
An alternate characterization of split graphs in terms of degree sequences is 
the following result of Hammer and Simeone [ 171. 
Theorem 6.2. Let G = (V, E )  be an undirected graph with degree sequence 
d ,  3 dz 3 .  
. . 2 d,, and let m = max{i I d, z= i - 1). Then, G is a split graph if’ and 
only if 
2: d, = m(m - I ) +  2 d,. 
, = I  
, = r n + l  
Furthermore, if this is the case, the m vertices of largest degree wit1 be a maximum 
complete set of G. 
A simple recognition algorithm for split graphs can be designed by applying 
Theorem 6.2. If this is done, it can easily be seen that the complexity of 
recognizing split graphs is O(n logn). The same complexity applies for the 
clique problem and the stable set problem on split graphs. However, the 
Hamiltonian circuit problem on split graphs is NP-complete. 
7. Permutation graphs 
Let r = [rl, 
m 2 , .  . . , r n ]  
be a permutation of the numbers 1,2,. . . , n. We 
define the undirected graph G [ T ]  = (V, E) as follows: 
v = { u 1 . u 2  ,..,, u,,] 
and 
(u,, u,) E E 
iff 
( i  -j)(r;I - m y ’ )  < 0. 

Algorithmic aspects of perfect graphs 
317 
Two vertices are joined by an edge if they occur out of their proper order 
reading the sequence T left to right (see Fig. 7.1). 
Fig. 7.1. The graph G[4,1,3,5,2]. 
If we reuerse the sequence T, each pair of numbers which occur in the correct 
order in 7i- will now be in the wrong order, and vice versa. Thus, the permutation 
graph we obtain will be the complement of G [ T ] .  This shows that the 
complement of a permutation graph is also a permutation graph. 
Another property of the graph G [ r ]  is that it is transitively orientable. If we 
orient each edge toward its larger endpoint, then we will obtain a transitive 
orientation E For, suppose (ui, uj)E F and (uj, ut)E F, then i < j < k and 
T;' > my' > TL', which implies that (ui, uk) E E This is only half of the story; we 
actually have the following result of Pneuli, Lempel and Even [20]. 
Theorem 7.1. A n  undirected graph G is a permutation graph if and only if G and 
G are comparability graphs. 
Theorem 7.1 suggests an algorithm for recognizing permutation graphs, 
namely, applying the transitive orientation algorithm to the graph and to its 
complement. If we succeed in finding transitive orientations, then the graph is a 
permutation graph. To find a suitable permutation we can follow the construc- 
tion procedure in the proof of the theorem, which can be found in Golumbic 
[13]. The entire method requires O(n3) time and O(nZ) space. 
Permutation graphs are useful in a number of applications (Even, Pnueli and 
Lempel [5], Tarjan [25], Golumbic [ 131). Of particular interest in this context is 
the following very efficient coloring algorithm for G [ T ] .  
Algorithm 7.1. Coloring a Permutation Graph. 
Input: A permutation T = [T,, 
T ~ , .  
. . , T"] of the numbers {1,2,. . . , n } .  
Output: A coloring of the vertices G [ T ]  and the chromatic number ,y of G [ T ] .  
Method: The vertices of G [ T ]  are assigned colors in the order m, 
7r2,. . . , rn, 
although the graph itself is never actually calculated. A counter k will keep track 
of the total number of colors used so far, and an array LAST(c) will contain the 
number of the vertex which was the last to receive color c. During the jth time 

318 
M. 
C. Golumbic 
through the loop we color T, with the smallest color q satisfying rj 2 LAST(q). 
The entire algorithm is as follows: 
procedure 
1. initialize: 
2. loop: 
3. 
4. 
COLOR(rj)+m; 
5. 
6. 
k t o ;  for i + 1 to n do LAST(i)+O; 
end 
for j + l  to n do 
m t 
rnin{q [ nj 3 LAST(q)}; 
LAST( m) 
t 
rj ; 
k + max{ k, m}; 
end loop 
7. 
X + k ;  
end 
Example. Let us illustrate Algorithm 7.1 on the permutation T = [4,1,3,5,2]. 
After the initializations in line 1 the fotlowing assignments will be made in the 
loop: 
j-I 
j +Z 
I +3 
j t 4  
j--S 
m t l  
rn +2 
rn +2 
m + l  
m -3 
COLOR(4)c 1 
COLOR(l)+2 
COLOR(3)+2 
COLOR(S)+1 
COLOR(2)+3 
LAST(l)t4 
LAST(2)tl 
LAST(2)+3 
LAST(l)+5 
LAST(3)+2 
k - 1  
k +2 
k +2 
k 6 2  
k + 3  
Thus the chromatic number of G [ r ]  is 3 and a 3-coloring has been assigned. 
The complexity of Algorithm 7.1 is O ( n  logx) if line 3 is implemented using 
binary search. A proof of the correctness of this algorithm can be found in 
Golumbic [13]. Algorithm 7.1 can be used to color any permutation graph G in 
O(rz log n )  time provided we are given the permutation r and the isomorphism 
G + G [ r ] .  If we do not have r, then we should use Algorithm 5.4. 
8. Interval graphs 
An undirected graph G is called an interval graph if its vertices can be put into 
one-to-one correspondence with a set of intervals 9 of a linearly ordered set 
(like the real line) such that two vertices are connected by an edge of G if and 
only if their corresponding intervals have nonempty intersection. We call 9 an 
interoal representation for G. (It is unimportant whether we use open intervals or 
closed intervals; the resulting class of graphs will be the same.) 
The following characterization of interval graphs is due to Gilrnore and 
Hoffman [lo]. 

Algorithmic aspects of perfect graphs 
319 
Theorem 8.1. An undirected graph G is an interval graph if and only if G is a 
triangulated graph and its complement G is a comparability graph. 
The coloring, clique, stable set, and clique cover problems can be solved in 
polynomial time for interval graphs by using the algorithms of Sections 4 or 5, 
and a recognition algorithm could be obtained by combining the algorithms for 
triangulated graphs and comparability graphs. However, the recognition al- 
gorithm presented in Booth and Lueker [3] is asymptotically more efficient. 
They have shown that a data structure called a PQ-tree can be used to obtain a 
linear algorithm. 
Interval graphs have become particularly useful mathematical structures for 
modeling real world problems. The line, on which the intervals rest, may 
represent anything that is normally regarded as one-dimensional. The linearity 
may be due to physical restriction such as blemishes on a microorganism, speed 
traps on a highway, or files in sequential storage in a computer. It may arise from 
time dependencies as in the case of the life span of persons or cars, or jobs on a 
fixed time schedule. A cost function may be the reason as with the approximate 
worth of some fine wines or the potential for growth of a portfolio of securities. 
The task to be performed on an interval graph will vary from problem to 
problem. If what is required is to find a coloring or a maximum weighted stable 
set or a large clique, then fast algorithms are available. If a Hamiltonian circuit 
must be found, then there are no known efficient algorithms (unless the graph 
has more structure than just being an interval graph). Also, the speed with which 
such a problem can be solved will depend partially on whether we are given 
simply the interval graph G, or, in addition, an interval representation of G. 
We have already seen one application of interval graphs in the opening 
paragraph of this article. The interested reader is referred to Roberts [21], [22] 
and Golumbic [13] for numerous other applications. We will discuss here a 
recent application of interval graphs to optimal macro substitutions suggested by 
Golumbic, Goss and Dewar [ 151. 
The compiler or interpreter for a microcomputer system may be regarded as a 
byte sequence which resides in main memory. Due to restrictions on the size of 
main memory, it is desirable to compact this byte sequence. One technique is to 
define a set of macro substitutions which allow occurrences of specified byte 
subsequences to be replaced by single bytes. The subsequences are restored 
dynamically at run time by use of an associated table. 
Fig. 8.1 shows a sequence of hexidecimal digits of length 36. Since the digits E 
and F do not appear, they may be used to indicate macros. Choosing E = 6A2 
and F = 43B96 the original sequence may be reduced to length 20. Notice that 
when two macros overlap, only one can be replaced. This overlapping phenome- 
non, therefore, restricts how the macro table may be applied. 

320 
M.C. Golumbic 
~ 
Original Sequence: 6&C43B%OD60661C78-243B96&3C&25 
T 
Macro Table: E = 6A2 
F = 43B96 
\ OVERLAP 
Abbreviated Sequence: ECFOD6OElC78EFA23CE5 
Fig. 8.1. Macro substitution. 
The problem to be solved is to choose an optimal set of macro substitutions 
and an order for performing the substitutions which minimizes the total length of 
the byte sequence and associated table. Formally we require the following. 
Input: 
Output: 
A byte sequence B of length n. 
A set of m macros each of length s k and an order for performing the 
substitutions such that the total length of the abbreviated sequence 
and macro table is minimized. 
The reason for specifying a bound on the length of the macros is that in practice 
we may want them to be very short compared to the length of the original 
sequence. 
Notice that there are actually two aspects to the problem: 
(1) choosing a macro set, and 
(2) using the macro set optimally. 
Let B = (b,, bz,. . . , b,) be a sequence of bytes and let k be a fixed constant. 
The length of B is denoted by I B I = n. A subsequence (h,. . . , b,) of B is 
denoted by B [ i . j ] .  Clearly, lB[i,J]l = J  - i  + 1. The weighred interval graph 
G = (V, E, w )  that we will associate with B is defined as follows: The vertex set 
V consists of all intervals [i, j ]  satisfying 1 s J - i 
k - 1 ; two vertices u = [ i , J ]  
and u = [ i ' ,  j ' ]  are connected by an edge iff they intersect, i.e., either i f  d j d j' 
or i S J ' s j ;  the weight w ( u )  of a vertex u = [ i , J ]  is equal to j - i  which 
represents the number of bytes that would be saved by replacing B [ i , j ]  by a 
single byte. 
I t  is easy to see that the number of vertices of G is slightly less than kn and the 
number of edges is less than but on the order of k'n. Furthermore, the graph 
does not actually have to be calculated and stored since any query about 
adjacency of vertices can be answered by a simple comparison of the indices of 
their corresponding subsequences. 
Let M be a subset of V and let 
B [ M ]  = { B [ i , j ]  1 [ i . J ]  E M ) .  
We may think of B [ M ]  as the macro table generated by M. To perform the 

Algorithmic aspects of perfect graphs 
32 I 
macro substitutions we would find all occurrences of these macros and then 
choose a subset of the occurrences, no two of which intersect, to be abbreviated. 
Such a subset corresponds precisely to a stable set of the interval graph G. 
(Notice that this model does not permit embedding one macro in another 
macro.) Moreover, to make the abbreviated sequence as short as possible, we 
would like a stable set whose weight is maximum. (The weight of a subset of 
vertices is the sum of the weights of its members.) This method is summarized in 
Fig. 8.2. 
procedure SUBSTITUTION(A4): 
C ( M ) t { [ i ,  
j ]  E V I B[i, j ]  = B[ 
i ‘ ,  j ’ ]  for some [ i ’ ,  j ’ ]  E M}; 
X(M)tMAXIMUM WEIGHTED STABLE SET OF THE 
INDUCED SUBGRAPH GC(M); 
SAVINGS(M)+ c w ( u ) -  c w ( u ) ;  
“ E X ( M )  
“ E M  
end 
Fig. 8.2. Finding an optimal macro substitution for a given set of macros, 
The set C ( M )  consists of all intervals representing candidate subsequences 
which may be replaced using the macro table B [ M ] .  Of these candidates only 
the subsequences represented by X ( M )  will be replaced. The SAVINGS is 
calculated by summing the savings obtained for each macro substitution and 
subtracting the cost of storing the macro table. 
Using SUBSTITUTION we obtain the following algorithm which gives an 
optimal solution to the general problem. 
Algorithm 8.1. 
loop: 
for all M 
end loop 
return the M and X ( M )  whose SAVINGS(M) is maximum; 
V such that IM I = rn do 
call SUBSTITUTION(M); 
The number of passes through the loop in Algorithm 8.1 is on the order of (?:) 
since G has O(kn) vertices. (In practice, some of the subsets M may be ruled 
out due to other criteria, for example, by requiring that macros begin with 
certain designated bytes. This would lower the number of passes.) The complex- 
ity of SUBSTITUTION depends on how efficiently we are able to find C ( M )  
and X ( M )  for a given M. Using a modification of the deterministic pattern 
matching algorithm of Morris and Pratt [19’], C ( M )  can be calculated in 
O(rn(k + n ) )  time. See also Aho, Hopcroft and Ullman [l], Chapter 9. Since a 
maximum stable set of an interval graph G = (V, E )  may be found in time 
O(l VI + IE I), X ( M )  can be calculated in O(k’n) time. Hence, we conclude 

322 
M. 
C. Golumbic 
that the worst case complexity of SUBSTITUTION is O(m(k + n ) +  k'n) and 
the worst case complexity of Algorithm 8.1 is 
which is, in terms of the length of the input sequence, a polynomial whose degree 
depends on the constant m. 
Notice that our model has not allowed the embedding of macros in other 
macros. A reason for this could be that it is impractical to implement the stack 
nccessary to allow embedding. In some applications one may choose to allow 
embedding. If this is the case, a similar model can be designed which uses 
overlap graphs rather than interval graphs. An overlap graph is the same as an 
interval graph in which there are no edges between pairs of vertices whose 
corresponding intervals have one properly contained in the other. 
Our Algorithm 8.1 and SUBSTITUTION will also be optimal using the 
overlap graph model. Their respective complexities, in this case, will each be 
raised by one power of kn. This follows from the fact that a maximum weighted 
stable set of an overlap graph G = (V, E) can be calculated in O( I V 1 .  I E I) time 
(see Gavril [Y] and Golumbic [13], Chapter 1 I). 
The problem of macro substitution was recently applied to MICRO SPITBOL 
for an Incoterm SPD20/40 supporting 64K of main memory. The byte sequence 
for MICRO SPITBOL required 23,110 bytes of storage. There were 176 unused 
opcodes which were designated to represent macros. That is, n = 23110 and 
m = 176 and we set k =20. 
Since the time complexity of Algorithm 8.1 would be high for this application, 
an effective technique for finding a near optimal solution was needed. A 
combination of heuristics and SUBSTITUTE reduced the size of the sequence to 
17.920 bytes and produced a macro table of 962 bytes. This represents a saving of 
4,228 bytes of main storage, a saving of 20%. It should be pointed our that an 
increased cost of obtaining a very good macro substitution may be justified by 
the fact that this is done only once per compiler and machine and the result 
presumably will be used many, many times. 
References 
[ I  I A.V. Aho, J.E. Hopcroft and J.D. Ullman, The Design and Analysis of Computer Algorithms 
[2] C. Berge, Graph and Hypergraphs (North-Holland, Amsterdam, 1973). 
[ 3 ]  K.S. Booth and G.S. Lueker, Testing for the consecutive ones property, interval graphs, and 
graph planarity using PQ-tree algorithms, J. Comput. Systems Sci. 13 (1976) 335-379. 
141 G.A. Dirac, On rigid circuit graphs, Abh. Math. Sem. Univ. Hamburg 25 (1961) 71-76. 
(Addison-Wesley, Reading, MA, 1976). 

Algorithmic aspects of perfect graphs 
323 
[5] S. Even, A. Pnueli and A. Lempel, Permutation graphs and transitive graphs, J. Assoc. Comput. 
Mach. 19 (1972) 4 W 1 0 .  
[6] S. Foldes and P.L. Hammer, Split graphs, in: F. Hoffman et al., eds., Proc. 8th Southeastern 
Conf. on Combinatorics, Graph Theory and Computing (Congressus Numerantiurn XIX, 
Utilitas Math., Winnipeg, 1977) 311-315. 
[7] D.R. Fulkerson and O.A. Gross, Incidence matrices and interval graphs, Pacific J. Math. 15 
IS] F. Gavril, Algorithms for minimum coloring, maximum clique, minimum covering by cliques, 
and maximum independent set of a chordal graph, SIAM J. Comput. 1 (1972) 180-187. 
[9] F. Gavril, Algorithms for a maximum clique and a minimum independent set of a circle graph, 
Networks 3 (1973) 261-273. [The class of circle graphs is equivalent to the class of overlap 
graphs.] 
[lo] P.C. Gilmore and A.J. Hoffman, A characterization of comparability graphs and of interval 
graphs, Canad. J. Math. 16 (1964) 539-548. 
[ll] M.C. Golumbic, Comparability graphs and a new matroid, J. Comb. Theory, Ser. B 22 (1977) 
68-90, 
[ 121 M.C. Golumbic, The complexity of comparability graph recognition and coloring, Computing 
1131 M.C. Golumbic, Algorithmic Graph Theory and Perfect Graphs (Academic Press, New York, 
(1965) 835-855. 
18 (1977) 199-208. 
. .  
1980). 
1141 M.C. Golumbic, A remark on the NP-completeness of the threshold dimension problem, Bell 
. -  
Laboratories Technical Memorandum (1982). 
[15] M.C. Golumbic, C.F. Goss and R.B.K. Dewar, Macro substitutions in MICRO SPITBOL - 
A 
combinatorial analysis, in: F. Hoffman et al., eds., Proc. 11th Southeastern Conf. on Com- 
binatorics, Graph Theory, and Computing, Congressus Numerantium (Utilitas Math., Win- 
nipeg, 1980) 485-495. 
[16] M. Grotschel, L. Lovrisz and A. Schrijver, The ellipsoid method and its consequences in 
combinatorial optimization, Combinatorica 1 (1981) 169-197. 
[17] P.L. Hammer and B. Simeone, The splittance of a graph, Combinatorica 1 (1982) 275-284. 
[18] C.G. Lekkerkerker and J. Ch. Boland, Representation of a finite graph by a set of intervals on 
[19] J.H. Morris and V. R. Pratt, A linear pattern matching algorithm (Tech. Report No. 40, 
[20] A. Pnueli, A. Lempel and S. Even, Transitive orientation of graphs and identification of 
(211 F.S. Roberts, Discrete Mathematical Models, with Applications to Social, Biological and 
[22] F.S. Roberts, Graph Theory and Its Application to Problems of Society, NSF-CBMS Mono- 
[23] D.J. Rose, R.E. Tarjan and G.S. Lueker, Algorithmic aspects of vertex elimination on graphs, 
[24] L.N. Shevrin and N.D. Filippov, Partially ordered sets and their comparability graphs, Siberian 
[25] R.E. Tarjan, Sorting using networks of queues and stacks, J. Assoc. Comput. Mach. 19 (1972) 
[26] R.E. Tarjan, Maximum cardinality search and chordal graphs (Stanford Univ. Lecture Notes CS 
[27] W.T. Trotter, Jr., J.I. Moore and D.P. Sumner, The dimension of a comparability graph, Proc. 
the real line, Fund. Math. 51 (1962) 45-64. 
Computing Center, University of California, Berkeley, Calif., 1970). 
permutation graphs, Canad. J. Math. 23 (1971) 160-175. 
Environmental Problems (Prentice-Hall, Englewood Cliffs, New Jersey, 1976). 
graph No. 29 (SIAM Publ., Philadelphia, Pa., 1978). 
SIAM J. Comput. 5 (1976) 266-283. 
Math. J. 11 (1970) 497-509. 
341-346. 
259, unpublished, 1976). 
Amer. Math. SOC. 60 (1976) 35-38. 

This Page Intentionally Left Blank

Annals of Discrete Mathematics 21 (1984) 325-356 
@ Elsevier Science Publishers B.V. 
POLYNOMIAL ALGORITHMS FOR PERFECT GRAPHS 
M. GROTSCHEL 
Institut fur Mathematik, Universifiit Augsburg, Augshurg, W. Germany 
L. LOVASZ 
Institute of Mathematics, Eiitviis Lorand University, H -  1088 Budapest, Hungary 
A. SCHRIJVER 
Department of Econometrics, Tilburg University, Tilburg, The Netherlands 
We show that the weighted versions of the stable set problem, the clique problem. the 
coloring problem and the clique covering problem are solvable in polynomial time for perfect 
graphs. Our algorithms are based on the ellipsoid method and a polynomial time separation 
algorithm for a certain class of positive semidefinite matrices related to Lovasz’s bound 8(G) 
on the Shannon capacity of a graph. We show that 9(G) can be computed in polynomial time 
for all graphs G and also give a new characterization of perfect graphs in terms of this number 
9(G). In addition we prove that the problem of verifying that a graph is imperfect is in NP. 
Moreover, we show that the computation of the stability number and the fractional stability 
number of a graph are unrelated with respect to hardness (if P# NP). 
1. Introduction and notation 
It is well known that the stable set problem, the clique problem, the chromatic 
number problem and the clique cover problem are NP-complete problems for 
general graphs, cf. [3]. The purpose of this paper is to show that these problems, 
and even their weighted versions, are solvable in polynomial time for perfect 
graphs. The algorithms presented here are based on the ellipsoid method (cf. [XI, 
[2], [4]) and on a computationally tractable characterization of the number 8 ( G )  
introduced by Lovasz 1101 in connection with the Shannon capacity of a graph. 
In the remaining part of this section we shall introduce our notation and state 
the problems we shall investigate. The second section gives a brief review of the 
ellipsoid method and some properties of this method which are important for 
our purposes. In Section 3 we show that the stable set problem is unrelated to the 
fractional stable set problem with respect to hardness for general graphs. The 
Shannon capacity and the numbers 6(G), &,(G), which are important for the 
design of our algorithms, are treated in Section 4, and a polynomial separation 
algorithm for a certain class of positive semidefinite matrices related to 6 ( G )  is 
presented in Section 5. This algorithm is utilized together with the ellipsoid 
325 

326 
M. 
Grotschel et a/. 
method in Sections 6 and 7 to obtain polynomial time algorithms for the 
weighted versions of the stable set problem, clique problem, coloring problem 
and clique cover problem on perfect graphs. 
All graphs in this paper are finite and undirected. Since loops and multiple 
edges do not play a role for the concepts we consider, we assume that all graphs 
are without such edges, i.e., are simple. A graph is denoted by G = 
(V(G), E(G)) where V(G) (or just V) is the vertex set and E(G) (or just E) is 
the edge set of G. An edge connecting two vertices i and j is denoted by ij, and 
we say that two vertices are adjacent if they are equal or connected by an edge. 
The complementary graph of a graph G is defined as the graph G with 
V(G) = V(G) and in which two different vertices are adjacent if and only if they 
are nonadjacent in G. 
A stable set of a graph G is a set of vertices W C V(G) such that any two 
vertices of W are nonadjacent in G, and a clique of G is a set of vertices 
C c  V(G) such that any two vertices of C are adjacent in G. The maximum 
cardinality of a stable set in G is called the stability number of G and is denoted 
by a(G). The maximum cardinality of a clique in G is called the clique number 
of G and is denoted by w ( G ) .  Clearly, a stable set of G is a clique of G, and vice 
versa, thus a ( G )  = w ( G )  and o ( G )  = a(G) hold. 
A k-coloration of G is a partition of V(G) into k stable sets of G, and the 
least integer k for which G admits a k-coloration is called the chromatic number 
of G, denoted by x(G). A k-clique couer of G is a partition of V(G) into k 
cliques of G, and the least k for which G admits a k-clique cover is called the 
clique couer number of G which is denoted by p(G). By definition, every 
k-coloration of G is a k-clique cover of c, and vice versa, which implies 
x(G)= p ( G )  and p ( G )  = x(G). 
The problem of finding the stability number (clique number, chromatic 
number, clique cover number) of a graph is called the srable set (clique, coloring, 
clique couer) problem. These four problems have natural weighted versions. 
Given a graph G = (V, E) and a ‘weight’ w, E E ,  for all u E V (H, is the set of 
positive integers), then the weighted srable set problem (weighted clique problem) 
is to find a stable set W (a clique C) of G such that the sum of the weights of the 
vertices in W (in C) is as large as possible. The weighted coloring problem 
(weighted clique problem) is the following: find stable sets W,, Wz,.. ., W, 
(cliques C1, Cz,. . . , C,) 
and positive integers y l ,  y z , .  . . , y, such that for all u E V, 
c,,, 
y, 3 w, (c,,, 
y, 2 w , )  holds, and such that c:=, 
y, is as small as possible. 
The optimum values of these four problems are denoted by a, (G), ow (G), 
xW (G), pw (G) and are called the weighted stability, weighred clique, weighted 
chromatic, weighred clique couer number. 
It is obvious that for any graph G, a ( G ) S  p ( G )  and w ( G ) S  x ( G )  hold. A 
graph G is called perfect if 

Polynomial algorithms for perfect graphs 
327 
a ( G [  W ] )  = p(G[ W ] )  for all W C V ( G )  
where G [  W ]  denotes the subgraph of G induced by the vertex set W C V(G). 
Lovasz [9] has shown the so-called perfect graph theorem, namely, that a graph G 
is perfect if and only if its complement G is perfect. So the perfect graph 
theorem is equivalent to the following: a graph G is perfect if and only if 
w ( G [ W ] ) = x ( G [ W ] )  for all W C  V(G). 
Due to the perfect graph theorem it suffices to design polynomial time 
algorithms only for the weighted stable set and the weighted clique cover 
problem in order to obtain polynomial time algorithms for all the four problems 
described above on perfect graphs. Namely, suppose we have a polynomial time 
algorithm for the weighted stable set problem on perfect graphs and we want to 
find the maximum weighted clique in a perfect graph G. Then, obviously, the set 
of maximum weighted cliques of G equals the set of maximum weighted stable 
sets of G. Since by the perfect graph theorem G is perfect, we can apply our 
polynomial time algorithm to calculate a maximum weighted stable set in G and 
thereby obtain a maximum weighted clique in G. Similarly, if we have a 
polynomial time algorithm for the weighted clique cover problem in perfect 
graphs we can obtain a minimum weighted coloring of a perfect graph G by 
applying our polynomial time algorithm to the (perfect) complementary graph 
G. 
Therefore, we shall concentrate in the sequel on designing polynomial time 
algorithms for the weighted stable set and clique cover problem on perfect 
graphs, keeping in mind that these also yield polynomial time algorithms for the 
weighted clique and coloring problem on perfect graphs. 
There are various classes of graphs known for which the weighted versions of 
the stable set, the clique, the coloring or the clique cover problem can be solved 
in polynomial time. For a survey of such results see [3]. These classes of graphs 
include several classes of perfect graphs, e.g., bipartite, triangulated and 
comparability graphs as well as line graphs of bipartite graphs. Recently, Hsu [6] 
has shown that the coloring problem, and Hsu and Nemhauser [7] have shown 
that the clique and clique cover problem, are solvable in polynomial time for 
claw-free perfect graphs. 
- 
2. The ellipsoid method 
Based on an algorithm due to Shor [13], Khachiyan [S] recently devised a 
method which solves linear programming problems in polynomial time; for 
nrnofs. see 121. This so-called ellipsoid method can be used to derive the 

328 
M. Grotschel er al. 
polynomial solvability of a more general class of problems, in particular to 
obtain a powerful tool for solving combinatorial optimization problems as was 
described by Grotschel et al. [4]. In this section we give a brief survey of this 
method and state those theorems of Grotschel et al. [4] which are of interest for 
the design of polynomial time algorithms on perfect graphs. 
A conuex body is a closed, bounded, fully dimensional, and convex subset of 
R", n 3 2. More precisely, if we speak of a convex body K we always assume that 
the following information is known: the integer n 3 2 with K C R", two rational 
numbers 0 < r S R, and a vector a. E K such that 
S(a,, r )  C K 5 S(ao, R ) ,  
where S(a,,, s )  = {x E R" IIIx - aoII S s }  (11. 
(1 is the euclidean norm), denotes the 
ball with center ao and radius s. Therefore, we also denote a convex body by the 
quintuple (K; n, ao, r, R) where we assume that n 5 2, a. E Q", 0 < r G R are 
given explicitly. 
The following two problems are of particular interest and - as we shall see 
later - polynomially related. 
Assume that a convex body (K; n, a,,, r, R )  is given. 
(2.1) Optimization Problem. Given a vector c E QD" and a rational number E > 0, 
find a vector y E 6)" such that d(y, K) =z E and cTx =z cTy + E for all x E K (i.e. 
y is almost in K and almost maximizes cTx on K). 
(2.2) Separation Problem. Given a vector y E Q" and a rational number S > 0, 
conclude with one of the following: 
(i) asserting that d(y, K) 
4 6 (i.e., y is almost in K); or 
(ii) finding a vector c E Q" such that IIc 11 2 1 and for every x E K, cTx 6 
cTy + S (i.e. finding an almost separating hyperplane). 
(Here d ( .  ,.)denotes the distance function, i.e., d ( x ,  y) = \\x - y 11 and d(y, K) = 
inf{d(x, y ) J  x E K ) . )  
The method of Yudin and Nemirovskii [14], section 4.5, would enable us to 
show that the following third problem is also polynomially related to problems 
(2.1) and (2.2) above: 
(2.2') Feasibility Problem. Given a vector y E Q" and a rational number S > 0. 
conclude with one of the following: 
(i) asserting that d(y, K) S 6, or 
(ii) asserting that d (y, R" \ K )  s 6. 
Clearly this problem is easier than the separation problem. However, in the 

Polynomial algorithms for perfect graphs 
329 
applications in this paper, we shall obtain almost separating hyperplanes 
automatically. 
To speak of a polynomial time algorithm for a convex body K we have to 
specify how we measure the input length of K. Whenever something is encoded 
we assume that the (usual) binary encoding is used. A rational number is 
encoded by encoding the numerator and the denominator. 
If x E Q" (Q is the set of rational numbers) then Ilx )II denotes the maximum of 
the absolute values of the integers appearing as numerator or denominator in the 
coefficients of x. In other words, to encode x at least log IIx 111 + n places are 
necessary. (In this paper all logarithms have base two.) 
For a convex body ( K ;  n, a,,, r, R )  we assume that the parameters n, all E Q", 
r E 4p and R E Q are coded. If X is a class of convex bodies then the input of the 
optimization (or separation) problem for Yt is the code of some member 
( K ;  n, acl, r, R )  E X, of a vector c E Q" and of a rational number F > 0 (of a 
vector y E q" and a rational number 6 > 0). The length or size of the input is the 
length of this (binary) encoding. Thus, the length of the input is at least 
+ 1% It r 113 + log It R It= + log It Y 11% 
where y = E or y = 6. An algorithm to solve the optimization (separation) 
problem for the class Yt is called polynomial if its running time is bounded by 
some polynomial of the size of the input. 
(2.3) The ellipsoid method. Given a convex body ( K ;  n, all, r, R ) ,  a linear 
objective function cTx with IIc (1 3 1 and a number E > 0 (the required accuracy). 
We assume that there is a subroutine SEP(K, y, 6) which for the given convex 
body K, a vector y E Q" and a rational 6 > 0 either concludes that y E S(K, 6 )  = 
{x E R" 1 d ( x ,  K )  s 8 )  or yields a vector d E Q" such that dTx S dTy + 6 for all 
x E K, i.e. SEP solves the separation problem for K. We first define the 
following numbers: 
(2.3.1) N:=4n2 [logm], r& 
R 24-N 
(2.3.2) a:=- 300n 
(2.3.3) p : = 5 N  (log 7 
12Gl 
and then proceed as follows: 
(2.3.4) Set x , ~  
= a. 
(center 
A,i:= R'I, 
(I,, 
of the first ellipsoid), 
is the (n, n)-identity matrix); 

330 
M. Griirschel et al. 
(2.3.5) for k = 0 to N - 1 do; 
(2.3.6) Run the subroutine SEP(K, xk, 6). 
(2.3.7) If SEP(K, &, 6) concludes that Xk E S(K, a), 
we say that k is a feasible index and set a:= c. 
(Id (1 3 1 and sup{dTx 1 x E K }  s dTxk + 8, we call k 
an infeasible index and set a:= - d. 
(2.3.8) If SEP(K, xk, 6 )  yields a vector d E R" such that 
(2.3.9) bk: = Aka IdaTAka, 
1 
(2.3.10) x::=x~ +- n + 1 bkt 
Above, the sign 
means that the left-hand side is obtained by rounding the 
Since by construction xoE K, the set of feasible indices is nonempty; 
binary expansion of the right-hand side after p places behind the point. 
moreover, we can show the following theorem, cf. (41. 
(2.4) Theorem. Let j be a feasible index for which 
C'X, 
= max{cTxk 10s k < N, k feasible}. 
Then 
C'X, 3 
S U ~ { C ~ X  
1 x E K} - E. 0 
Cleai.j, the number N of iterations of the ellipsoid met..od is polynomial in 
the size of the input. One can also show that the entries of the intermediate 
vectors Xk and matrices Ak, 0 S k S N, are polynomially bounded. Furthermore, 
the number 6 used to run the separation subroutine is polynomial in the input 
length. Thus, the ellipsoid method is a polynomial algorithm for the optimization 
problem for K if and only if the subroutine SEP is a polynomial algorithm for 
the separation problem for K. This implies, in particular, that whenever there is 
a polynomial separation algorithm for a class of convex bodies X there is also a 
polynomial optimization algorithm for .X (via the ellipsoid method). It is of 
particular importance that this implication also holds the other way round, 
namely: 

Polynomial algorithms for perfect graphs 
331 
(2.5) Theorem. Let X be a class of convex bodies. There is a polynomial algorithm 
to solve the separation problem for the members of YC, if and only if there is a 
polynomial algorithm to solve the optimization problem for the members of 3%. 0 
Note that according to our definition neither the optimization nor the 
separation problem are solved exactly; in both cases we allow for a small error. 
This is necessary because the problem classes that are covered by Theorem (2.5) 
may also contain instances with a unique optimal solution which has irrational 
coefficients. But irrational numbers cannot be represented exactly. 
In case our class of convex bodies X is a class of polytopes, then the 
optimization problem for X is nothing but a linear programming problem. If in 
addition all members of X have a rational defining inequality system, then both 
the separation and the optimization problem can be solved precisely, we shall 
say in the strong sense. Moreover, it is also possible to construct a dual optimal 
solution in polynomial time. 
If P C R" is a polytope with rational vertices, define T ( P )  to be the maximum 
of the absolute values of numerators and denominators occurring in the entries 
of vertices of P. The pair (P, T )  is called a rational polytope if T ( P )  < T. The 
input size of a rational polytope is at least n + [log TI. 
It is not difficult to prove that if (P, T )  is a rational polytope, then P C 
S(0, n T )  and if P is fully dimensional then S(ao, (nT)-2"3) C P for some point a". 
(2.6) Theorem. Let ?€be a class of fully dimensional rational polytopes such that 
the optimization (or equivalently the separation) problem for YC can be solved in 
polynomial time. Then the following holds : 
(a) There is a polynomial optimization algorithm for YC in the strong sense, i.e., 
which for every member P E YC and every rational vector c finds a vector y E P 
such that cTy = max{cTx I x E P}. 
(b) There is a polynomial separation algorithm for Yl in the strong sense, i.e., 
which for every member P E X, 
P C R", and every rational vector y either asserts 
that y E P or finds a rational vector c with Ilc I( 3 1 such that cTx < cTy for all 
x E P. In case y E P the algorithm also yields vertices xu, xI, . . . , x, of P and 
rational numbers A,,, A l ,  . , . , A, 3 0 such that c:=,, 
A, = 1 and x:=,, 
A,x, = y. 
(c) There exists a polynomial algorithm which for every P EX, PCR" and 
c E Z" provides facets aTx G b, ( i  = 1,. . . , n )  of P and rational numbers A, 2 0 
( i  = 1,. . . , n )  such that c:=, 
A,a, = c and c:'=, 
A h ,  = max{cTx 1 x E P}. 0 
Case (c) of Theorem 2.6 will play an important role in the sequel, since it will 
provide us with a method to construct a minimum weighted clique cover from a 
maximum weighted stable set. 
A further class of convex bodies will be of interest for our purposes. Let R': be 

332 
M. Grotschel et al. 
the nonnegative orthant and K C R" be a convex body such that there are reals r 
and R, O <  r S R, witl- 
Rw:flS(O,r)CKcR:nS(O. R ) ,  
(2.7) 
0 s  x 
y E K + x E K. 
(2.8) 
The anti-blocker A ( K )  of K is defined by 
A(K):={yER':(yTxS1 foreveryxEK). 
(2.9) 
It is easy to see that A ( A ( K ) )  = K for a K satisfying (2.7) and (2.8), and that in 
case K is a polytope with vertices xI, x2,. . . , xk then A ( K )  = {y E R: 1 yTxi s I, 
i = 1.. . . , k } .  Moreover, if X is a class of convex bodies satisfying (2.7) and (2.8) 
we set A ( x )  
= {A ( K )  1 K E XI. 
(2.10) Theorem. Let .X be a class of convex bodies satisfying (2.7) and (2.8). 
Then the optimization problem for X can be solved in polynomial time i f  and only 
if the optimization problem for A ( X )  can be solved in polynomial time. 0 
3. The fractional stable set problem 
To be able to utilize the ellipsoid method for combinatorial optimization 
problems one has to associate a class of convex bodies with the problem class 
under consideration. Natural candidates are usually the convex hulls of the 
incidence vectors of feasible solutions. In case of the stable set problem this is 
done as follows. Let G = ( V , E )  be a graph with n vertices. For every 
W 
the (node-) incidence vector of W, i.e. x ," = 1 if u E W 
and x,"=O if LIE W. Then 
V(G) denote by x 
P(G):=conv{xWER" I W C  V(G)isastablesetof G} 
(3.1) 
is called the stable ser polyrope of G. Clearly, every weighted stable set problem 
on G can be solved as a linear programming problem over P(G). The polytope 
P(G) is fully dimensional, has O/l-vertices, and is contained in the unit 
hypercube, thus P ( G )  is a rational polytope. If we were able to design a 
polynomial separation algorithm for P (G ) ,  then by Theorem (2.5) the weighted 
stable set problem would be solvable in polynomial time. Since this problem is 
NP-complete, we cannot expect to find a polynomial separation algorithm for 
P(G) in general. 
A usual approach to solve difficult optimization problems is to consider tight 
relaxations of the problem in question which are polynomially solvable, and then 
proceed by branch-and-bound methods. A natural relaxation of the stable set 

Polynomial algorithms for perfect graphs 
333 
problem is the so-called fractional stable set problem. By definition, no two 
vertices of a stable set are adjacent. Thus, given any clique C of a graph G, at 
most one vertex of a stable set can belong to C. This implies that for every clique 
C C  V(G) and every incidence vector x w  of a stable set W G  V ( G )  the 
so-called clique inequality 
is satisfied. For any graph G with n vertices we call 
P*(G):=( 
x E R" 1 x, a 0 for all u E V(G) and 
the fractional stable set polytope of G. P*(G) is clearly a rational polytope. Since 
obviouly P(G) C P*(G), the LP-solution over P*(G) provides an upper bound 
for the weight of the optimal stable set in G. For a given graph G and an 
objective function w : V+Z+ let us define the following parameters: 
a,(G):=max{wTx I x  EP(G)}, 
a*,(G):=max{wTx I x  EP*(G)}, 
a*(G):=max 
x, I x  EP*(G)} . 
{ "E" 
The number a *(G) is called the fractional stability number of G, a *,(G) is called 
the fractional weighted stability number of G, and as mentioned earlier a, (G) is 
called the weighted stability number of G. By definition we have a ( G )  6 a *(G) 
and a, (G) s a *,(G). 
At first sight the polytope P*(G) looks rather innocent. It is easy to see that its 
facets are the trivial inequalities xu S O  for all u E V(G) and the clique 
inequalities & e C ~ v  6 1 for all maximal cliques C 
V(G) (maximal with respect 
to set inclusion). However, it is not known how to find all maximal cliques 
efficiently, even worse, there are classes of graphs (even perfect ones) such that 
the number of maximal cliques grows exponentially in I V(G)I. So there is no 
way to represent the constraint system of P*(G) efficiently. By Theorem (2.5) 
this is not necessarily crucial, since it is not the number of inequalities which 
matters; what matters is whether one can find a violated hyperplane in 
polynomial time. Since the constraint system of P*(G) looks quite simple one 
might hope to find a polynomial time separation algorithm for P*(G). But this is 
very unlikely as the complexity of the separation problem for P*(G) is closely 
related to the complexity of the weighted clique problem. More precisely: 

334 
M. Grotschel et al. 
(3.3) Proposition. Let % be a class of graphs. Then there is a polynomial algorithm 
to solve the weighted fractional stable set problem for every member of % if and only 
if there is a polynomial algorithm to solve the weighted clique problem for every 
member of %. 
Proof. For every member G of %, the weighted clique problem can be solved in 
polynomial time if and only if the linear program max w'x, x E Q(G) can be 
solved in polynomial time, where Q(G):=conv{xC ER" ( C C  V ( G )  is a 
clique}. By definition, the anti-blocker of O(G) is A (Q(G)) = { y  E R: I yTx' s 1 
for all cliques C C V(G)}, 
i.e. A (Q(G)) equals P*(G). Thus by Theorem (2.10) 
the linear program max wTx, x E Q ( G )  can be solved in polynomial time for 
every G E % if and only if the linear program max wTx, x E P*(G) can be 
polynomially solved for every G E %. 0 
It follows from the examples in [3] that there are various classes of graphs for 
which the weighted clique, and hence the fractional stable set problem, are 
solvable in polynomial time. However, since the weighted clique problem is 
NP-complete for the class of all graphs, Proposition (3.3) implies that the 
weighted fractional stable set problem is NP-equivalent. Proposition (3.3) 
therefore states that considering the fractional stable set problem instead of the 
stable set problem does not offer considerable advantages. Moreover, the 
problems of computing a, (G) and a :(G) seem to be unrelated with respect to 
difficulty. For planar graphs ow (G) (the weighted clique number) and hence 
a*,(G) can be computed easily in polynomial time, while the determination of 
a, (G) for planar (even cubic planar) graphs is NP-complete; cf. [3]. So for the 
complementary graphs of planar graphs the determination of o, (G) and hence 
a Z(G) is NP-equivalent, while a, (G) can be computed in polynomial time. 
Although for general graphs the fractional stable set problem does not seem to 
be useful for computing aw(G), the situation for perfect graphs is quite 
particular. Namely, Fulkerson has shown the following (see also [ 11): 
(3.4) Theorem. Let G be a graph. Then P(G) = P*(G) holds if and only if G is 
perfect. 0 
In other words, Theorem (3.4) implies that for every perfect graph G and 
every objective function w, a, (G) = a*,(G) holds. Therefore a computationally 
efficient procedure determining a Z(G) would yield the desired weighted stabil- 
ity number. As we shall see later a,(G) and a*,(G) can be computed in 
polynomial time for perfect graphs, however, we do not make direct use of P(G) 
resp. P*(G), but rather obtain this result via a detour which will be described in 
the next section. 

Polynomial algorithms for perfect graphs 
335 
4. The Shannon capacity, 6(G) and 6,(G) 
The stable set problem has found some nontrivial applications in coding 
theory, in particular in finding the zero error capacity of a discrete memoryless 
channel; cf. [12]. Let us denote by G * H the Cartesian product of the graphs G 
and H, i.e. V(G .I€)= V(G)x V ( H )  and two vertices (u, u), (u', u ' ) E  
V(G . H )  are adjacent if and only if u is adjacent to u' in G and u is adjacent to 
u' in H. G denotes the Cartesian product of k copies of G. As an interpretation, 
consider a graph G whose vertices are letters in an alphabet and in which two 
vertices are adjacent if and only if they are 'confoundable'. Then the maximum 
number of one-letter messages which can be sent without danger of confusion is 
clearly a(G), moreover, a ( G k )  is the maximum number of k-letter messages 
such that any two of them are inconfoundable in at least one coordinate place. It 
is easy to see that there are at least C Y ( G ) ~  
inconfoundable k-letter words, but in 
general there may be many more such words. To measure the largest rate at 
which one can transmit information with an error probability exactly equal to 
zero, Shannon [ 121 introduced the following number: 
which is now called the Shannon capacity of graph G. 
From the fact that a ( G k " ) 3  a ( G k ) a ( G e )  it directly follows that 
O(G) = lim 
k -m V a ( G k )  
(4.2) 
and, since ( Y ( G ) ~  
s a(Gk), that 
Shannon f12] obtained an upper bound for O(G) by showing 
O(G)S a*(G). 
(4.4) 
However, both inequalities a(G)< O(G)C a*(G) may be strict; e.g., for the 
pentagon C5 we have a(C5) = 2 and a *(C,) = 5/2, while O(Cs) = vj; cf. Lovhsz 
[lo]. For a perfect graph G, Theorem (3.4) implies that a ( G )  = O(G) = a *(G) 
holds, Thus for calculating the stability number of a perfect graph, it would 
suffice to compute its Shannon capacity. Unfortunately, also the determination 
of O(G) seems to be a difficult problem, and its value is unknown for large 
classes of rather simple graphs. Since a (G) and cr *(G) are not very tight bounds 
for O(G) in general, moreover, they are difficult to compute, as we have seen in 
the previous section, several authors have introduced parameters which give 

336 
M. Grotschel et al. 
better bounds for the Shannon capacity. One such parameter, called d(G), 
introduced by Lovasz [ 101, will play a key role in our further development. 
Let G be a graph and assume that its vertices are labeled 1,2,. . . , n. We say 
that a system ( u , , ~  
* , . . . , u r n )  
of vectors in an Euclidean vector space is an 
orthonormal representation of G if each vector ui has length one and if, for every 
pair i, j of nonadjacent vertices of G, the vectors ui and uj are orthogonal. It is 
obvious that every graph has an orthonormal representation, e.g., take a set of n 
orthonormal vectors. Let %(G) be the set of all orthonormal representations of 
G, and U be the set of vectors of unit length, then set 
Lovasz [lo] has given various characterizations of this number which we shall list 
in the sequel. Using the complementary graph C?, 
6(G) can be defined 
alternatively as follows: 
This formula can be used to show that 6(G) is not greater than the fractional 
stability number. Let (u,, . . . , u.) be an orthonormal representation of 
and d 
be a vector of unit length such that these vectors maximize (4.6), i.e., 6(G)= 
6.:,, (dT~,)2. 
Let C be any clique of G. Then, by definition, the vectors u,, i E C, 
are pairwise orthogonal, and so 
dTd = 1. Defining the vector 
x = (xl,. . . , x , ) ~  by x,:= (d’u,)’a 0 we obtain X I E C x l  S 1 for all cliques C C 
V(G), and thus x E P*(G). This implies 
(dTu,)’ 
6(G) = 
( d ” ~ , ) ~  
= 2 xI 
a*(G). 
, = I  
, = I  
(4.7) 
The formulas (4.5) and (4.6) do not seem to be very handy computationally, but 
there are other characterizations of d(G) which use representations of G by 
means of symmetric matrices. For any graph G with n vertices we set 
d ( G ) : = { A  
=(a,,)IA is a symmetric (n,n)-matrix such that ali = 1 
if i = j or if i and j are nonadjacent}; 
(4.8) 
then 6(G) can be described as the following minimum: 
d(G) = min{A(A )I A E d ( G ) }  
(4.9) 
where A ( A  ) denotes the largest eigenvalue of A. Equation (4.9) implies that 
6(G) is an upper bound on the stability number and on the Shannon capacity of 
G. Namely. suppose a(G) 
= k, then by definition (4.8) every matrix A E d ( G )  
has a principal (k, k)-submatrix, say Ak, all of whose entries are one. Since 

Polynomial algorithms for perfect graphs 
337 
A ( A ) s  A(A,) and k is an eigenvalue of Ak, we have A(A) 2 k for all 
A E d ( G ) ,  i.e., 6 ( G ) a a ( G ) .  Now Lovasz proved 
6(G - H )  = 6 ( G ) a ( H )  
(4.10) 
for all graphs G and H, which implies that 
a ( G * ) G 6 ( G k ) =  
6(G)k 
and hence 
O ( G ) s  6(G). 
(4.1 1) 
The number 6(G) can also be characterized as a maximum of the sum of the 
entries of certain matrices representing G. Denoting the trace x:=, 
b,, of a matrix 
B by tr(B), we define 
B(G):={B = (b,,) I B is a symmetric positive semidefinite 
(n, n)-matrix with tr(B) = 1 such that 
b,, = O  whenever i,j EE(G)}; 
(4.12) 
then Lovasz [lo] showed that 
6(G) = max { ,$, b, I B E w3)) . 
(4.13) 
Thus, 6(G) can be considered as a maximum (cf. (4.6) and (4.13)), and as a 
minimum (cf. (4.5) and (4.9)). Among these characterizations of 6(G), (4.13) will 
be the most important one in our subsequent investigations. 
As a side remark we want to mention that a complementary slackness relation 
links the two characterizations (4.9) and (4.13) of 6(G). Namely, suppose 
B E 93(G), A E d ( G )  and A(A) is the largest eigenvalue of A, then 
B(A(A)I. - A )  = 0 e 
B is optimal for (4.13) 
and A is optimal for (4.9). 
(4.14) 
The inequalities (4.3), (4.7) and (4.11) imply that 
a ( G ) < @ ( G ) ~ 6 ( G ) s c r * ( G )  
(4.15) 
holds for all graphs G. We remarked earlier that for the pentagon C,, 
a (C,) 
= 2 < O(C5) = V's < a *(C,) 
= I. Since for the pentagon O(C5) equals 
d(Cs), the last inequality in (4.15) may also be strict. Haemers [5] showed the 
existence of graphs G with O(G) < 6(G). Therefore all these four numbers, 
a(G), 6(G), O(G) and a*(G), are different in general. However, for a perfect 
graph G, Theorem (3.4) implies that equality holds in all inequalities (4.15). 
A graph G = (V, E )  is called critically imperfect if G is not perfect but if the 
vertex deleted subgraph G - ZI is perfect for all u E V. There are only two 

338 
M. Grotschel et al. 
classes of critically imperfect graphs known, namely, the cycles of odd length and 
their complementary graphs. We shall now prove that for critically imperfect 
graphs, a(G) < 8 ( G )  < a *(G). 
Padberg [ll] showed that if G is a critically imperfect graph with n vertices 
then n = a (G)w(G) + 1, and that every critically imperfect graph has exactly n 
stable sets of cardinality a(G) and n cliques of cardinality w(G). He also proved 
that every vertex of G is contained in exactly a(G) 
maximum stable sets and in 
exactly w ( G )  maximum cliques. 
Moreover, Padberg [l 11 showed that the so-called stable set-vertex incidence 
matrix of a critically imperfect graph is nonsingular, i.e., S = (s,)) is an (n, 
n)- 
matrix whose rows correspond to the n maximum stable sets of size a(G), 
whose columns correspond to the n vertices of G, and where s,, = 1 (s,, = 0) if 
vertex j belongs (does not belong) to the maximum stable set i. By the properties 
of critically imperfect graphs mentioned above, S is an (n, n)-matrix such that 
every row and every column contains exactly a(G) ones. 
Now consider for a critically imperfect graph the matrix B':=STS. The 
properties of S imply that B' is positive define. An entry bl; of B' counts the 
number of maximum stable sets to which both i and j belong. Hence bh = a (G), 
and b:, = 0 if ij E E. Moreover, the sum of the entries of each row (or column) of 
B' equals (Y (G )'. Let A I 2 A: 2, . - 2 A L be the eigenvalues of B'. Since B ' is 
positive definite we have A A > 0; moreover, since B' is integral, det(B') 3 1. It 
follows that 
2 A: = tr(8') = na(G) and fi A: = det(B')a 1 
i = l  
i = l  
Using a rough estimate we obtain A L 2 (fly:,: 
A :)-I 
2 (na (G))-"+'. 
These obser- 
vations imply that the matrix 
is a positive definite matrix contained in B ( G )  whose smallest eigenvalue A{ is 
not smaller than (na(G))-" and for which c:l=l 
b: = a(G). Hence, if we subtract 
(na(G))-" from every element of the main diagonal of B" and then multiply the 
resulting matrix by (na(G))"/((na(G))" 
- n )  we obtain a matrix B which has 
trace one, is positive semidefinite, and satisfies b,) = 0 if i,j E E(G). Thus 
B E  SB(G), and since a ( G ) 2 2  
and it follows from (4.13) that for a critically imperfect graph G 
(4.16) 

Polynomial algorithms for perfect graphs 
339 
We now prove that 6 ( G ) <  a*(G). Padberg [ll] has shown that for a 
critically imperfect graph G, a *(G) = cu(G)+ l/w(G), and that there is a unique 
point y E P*(G), namely, 
which satisfies c:=, 
y, = a*(G). B y  (4.6) there exists an orthonormal representa- 
tion ol,. . . , u, of G and a vector d of unit length such that 6 ( G )  = c:=, 
(dTu,)2. 
As shown in the section following formula (4.6), the vector x E R "  with 
x, = (dTo,)', i = 1 , .  . . , n is contained in the fractional stable set polyhedron 
P*(G). Now suppose that 6 ( G )  = a *(G), then 
hence by the uniqueness of y we have 
, 
1 
-- - yi = xi = (d'u,P, 
4 G )  
i = 1,. . . , n. 
Thus for the orthogonal representation u,, . . . , ZI, of G and the vector d E U we 
have 
and therefore formula (4.5) implies that 6(C?)S w(G) = a(G). However, the 
complementary graph of a critically imperfect graph is critically imperfect too, so 
6(G) s a(G) contradicts (4.16). This implies that 6 ( G )  cannot equal a *(G). 
Summing up we have shown that for any critically imperfect graph G 
1 
a ( G )  < 6 ( G )  < LY *( G )  = ( G )  + - 
w(G) 
a 
(4.17) 
Every imperfect graph contains an induced subgraph which is critically 
imperfect, i.e., a subgraph for which (4.17) holds, while for every induced 
subgraph G' of a perfect graph G, a(G') = 6(G') = a *(G') 
is satisfied. This 
implies the following characterization of perfect graphs. 
(4.18) Theorem. A graph G is perfect if and only if the following holds: 
a ( G [ W ] ) = 6 ( G [ W ] )  
forall W c V ( G ) .  0 
Our discussion above yields a further characterization, namely, a graph G is 
perfect if and only if a *(G[ W ] )  = 6(G[ W ] )  for all W C V(G). 
The number 6 ( G )  is not necessarily equal to a(G), even worse, Konjagin 
(unpublished) has constructed a sequence of graphs G, with n vertices such that 

340 
M. Grotschel el al. 
a(Gn) = 2 and 8(Gm)-+m. 
This implies that there is no function f at all such that 
6 ( G ) S  f(cr(G)) holds for all graphs G. It seems to be an interesting problem if 
there exists a polynomially computable function q ( G )  and a function f such that 
An efficient way to calculate 8(G) provides us only with a good algorithm for 
the unweighted stable set problem in perfect graphs. In order to cover the 
weighted case too we now generalize 8 ( G )  to a weighted version 8,(G). 
Assume that a graph G = (V, E )  and a weight function w : V-+ Z, are given. 
Define the graph G, to be the graph arising from G by replacing each vertex u 
of G by w. pairwise nonadjacent new vertices and where two vertices of G, are 
adjacent if and only if their originals in G are different adjacent vertices. This 
construction implies that a, (G) = (Y (G, ) holds. Moreover, Lovdsz [9] has 
shown that if G is perfect, then G, is also perfect (in fact, this is the key lemma 
for the perfect graph theorem). Hence for perfect graphs we have a,(G)= 
8(G,) = a*,(G). Therefore we define 
a ( G )  S d G )  f(Q(G)). 
O,(G):= S(G,). 
(4.19) 
Note, however, that the existence of a polynomial algorithm for calculating 
9 ( G )  does not give a polynomial algorithm for 6,(G) by applying this 
algorithm to G,, since no algorithm making up G, from G and w is polynomial 
in the input length O( I E I + log 11 w ]Im). A characterization of 8, ( G )  using the set 
SB(G) defined in (4.12) and avoiding this construction is given in the following 
theorem. 
(4.20) Theorem. Let G = ( V, E )  be a graph and w : V -+ B ,  a weight funcfion, 
then 
(4.21) 
Proof. Let M be the maximum in (4.21). We first prove M 6 6, (G) using 
formula (4.13) for 8(G). Suppose B = (6,) E 9(G). Replace every entry bij by a 
(wi, wj)-matrix all of whose entries are (wiwj)-i'2bij 
to obtain an (r, r)-matrix B', 
where r = c:=, 
wi. B' is clearly symmetric and satisfies 
tr(B') = 2 bii = 
bii = 1; 
, = I  
i = l  
moreover, the definition implies that bh = 0 if i,jE E(G). It is also easy 
that B' is positive semidefinite. Furthermore, simple calculation shows 
to see 
" 
2 bii = 
G j b i j  
#.I = 1 
i.j = I  

Polynomral algorithms for perfecr graphs 
341 
which implies M G 6, (G). 
Conversely, with each matrix B'E B(G,) 
we can associate a matrix B E 
%(G) such that c:,,=, 
b:, s c:,=, 
G J 6 ,  
holds, which proves 6, (G)< 
M. 
Namely, take B' E B(G,). Replace the (w,, w,)-submatrix induced by the copies 
of i and j, by the sum of its entries divided by VF,, and eventually add a 
nonnegative number to any diagonal entry to make the trace equal to one. 
5. A separation algorithm for a class of positive semidefinite matrices with trace 
one 
In this section we shall describe a polynomial time separation algorithm for 
the class of positive semidefinite matrices %(G) defined in (4.12). Every set 
9 ( G )  is clearly convex and bounded, but not fully dimensional. Since the 
ellipsoid method, as described in Section 2, can only be applied to convex bodies, 
we have to replace the sets B(G) for technical reasons by fully dimensional 
ones. 
For every (n, a)-matrix B = (b,,), i.e., B E R""", and every graph G we define 
the following projection operation R""" + R" where ii:= 
n + (z) - I E(G)I - 1. 
Discard from B all elements below the main diagonal; all lE(G)I elements b,,, 
i < j, corresponding to different adjacent vertices i,j E V ( G ) ;  and the element 
b,,,,. Denote the vector of R" obtained from B in this way by B, i.e., B is an 
ii-vector whose components are indexed by F = {ii 1 i = 1,. . . , n - 1) U {zj 1 i < j 
and ij$Z E(G)}. 
Conversely, for every vector B E R E  we define an extension operation 
R" + R n x n  by setting b,,:= 6,, i = 1,. . , , y1 - 1; b,.:= 1 - c,=, 
b,, ; b,, = bJZ = 0 for 
i,j E E (G ); b,, = b,, = 6, 
for i,jE E (G),  i < j. By definition the (n, n)-matrix B 
obtained by extending B E RE is a symmetric matrix with trace one. Now set 
n-1 - 
%I(G):={B 
E R x  I B E B(G)}; 
(5.1) 
a ( G )  is convex, since it is the projection of a convex set. We now prove that 
g ( G )  is fully dimensional and bounded, i.e. that a ( G )  is a convex body. 
Denote by. B, the projection of the matrix 
1 
B.:=; 
I,, E B(G) 
(Zn is the (n,n)-identity matrix); then the following holds: 
Set r = (nZ<n)-'. 
To prove that S(E,,r)E a ( G )  we show that for any 
B E S(&, r )  the extension B E R""" is in B(G). First observe the following. If 

342 
M. Grotschel et al. 
B EW" 
and B E R""" is the extension of B then IIB - B, 1) S r implies 
llB - B, 11 =s Vir. Now take any B E S(B., r )  and let B be its extension. If bij, 
i# j, is any nonzero entry of B, then because of symmetry bii = bji# 0. Now 
11 B - B. (1 G VGr implies fi 
bij s <r, 
i.e., } 6, I S ( n 2 f i ) - ' .  If bii is a diagonal 
element of B, then IIB - B, (1 S V%r implies 
It follows that 
Now by Gershgorin's theorem, all eigenvalues of the extension B of 
are 
positive, hence B f %(G), which proves that B E $?(G). Using the fact that for 
positive semidefinite matrices b,,b,J z b; holds and that the trace of B E %(G) is 
one, it easily follows that B(G)C S(B., 1). 
Expression (5.2) shows that the logarithms of the radii r = l/nZ-\m and R = 1 
as well as the numerators and denominators of the interior point B,, are 
bounded in absolute value by a polynomial in n which is fixed over all graphs G, 
i.e., given a graph G with n vertices, these numbers can be computed in 
polynomial time. So we may apply Theorem (2.5) to compute 6,(G) via 
Theorem (4.20) by using the projection @(G) 
of B(G). More precisely, define 
the following class of convex bodies: 
C%: = { a ( G )  I G is a graph with 1 V(G) I 3 2). 
(5.3) 
In order to solve the optimization problem for B it is sufficient to find a 
polynomial separation algorithm for 5. We shall now show that the separation 
problem for 8 is solvable in pdynomial time, even in the strong sense. Given a 
graph G, then this problem is the following: 
(5.4) Problem. Given a vector I? ERE, conclude with one of the following: 
(i) asserting that B E a(G), 
or 
(ii) finding a vector D E W" such that IIfill2 1 and for every x E B(G), 
DTX s DTB. 
In principle, this separation problem reduces to checking the positive 
semidefiniteness of a symmetric (n, n)-matrix. Thus, given B E R" we extend B 
to a symmetric (n,n)-matrix B = ( b , )  with trace one and biJ = bji = O  if 
I , j  E E ( G ) .  To assert that B E B(G) 
we have to prove that B is positive 
semidefinite. There are various characterizations of positive semidefiniteness 
which can be used for the design of an efficient proof of this property. For 

Polynomial algorithms for perfect graphs 
instance, polynomial time algorithms can be obtained from Gaussian elimination 
and Cholesky decomposition. In Gaussian elimination we allow pivots on the 
main diagonal only; if the rank of the matrix is found and only positive pivots 
have been carried out, then the matrix is positive semidefinite. Cholesky 
decomposition can be used in a similar way. A further method is to compute the 
smallest eigenvalue A. ; if A. 
is nonnegative then the matrix is positive 
semidefinite. This algorithm may be fast in practice but is not necessarily 
polynomially bounded. The method we shall describe now is based on Gaussian 
elimination and certain determinant calculations. In the following we assume 
that a graph G with n vertices is given. B(G) and @(G) 
are the sets defined in 
(4.12) resp. (5.1) 
343 
(5.5) Separation algorithm for B(G), 
SEP(G, B). Given a vector B E Q', where 
ii=n+(;)-[E(G)I-l. 
(5.5.1) Extend B to a symmetric (n,n)-matrix B with trace 1. 
(5.5.2) Use Gaussian elimination to compute the rank, say k, of B 
and a principal (k, k)-submatrix of B having full rank. 
(Note that Gaussian elimination automatically gives a nonsingular (k, k )- 
submatrix, say BIJ (where I is a row- and J a column-index set with I I I = I J I = 
k), of B. Since tr(B) = 1, k is nonzero. It is well-known that if E1J is nonsingular 
and has the same rank as B, then both principal (k, k>submatrices Blr and Bjj 
are nonsingular, in fact 
de t(Bl, )det( Bjj ) = det( BIJ )'. 
Let us denote the principal (i, i)-submatrix of B consisting of the first i rows and 
columns of B by Bi. For ease of exposition we assume that the principal 
(k, k)-submatrix Bk of B has rank k and is the one obtained in step (5.5.2). One 
can easily show that B is positive semidefinite if and only if B, is positive 
definite. Moreover, positive definiteness is easy to check, namely, B.4 is positive 
definite if and only if det(Bi)>O for i = 1,. . . , k. Therefore our algorithm 
continues as follows.) 
(5.5.3) Compute det(Bi) for i = 1,. . . , k. 
(5.5.4) If det(Bi) > 0 for i = 1,. . . , k, then B is positive 
semidefinite and hence B E @(G) is proved. stop! 
(If the test in (5.5.4) is failed, then B is not positive semidefinite and we have to 
calculate a separating hyperplane.) 

344 
M. GrotscheI ei al. 
(5.5.5) Let t be the smallest index such that det(B,) S 0 
and define a vector d = (d,, . . . , d,)T as follows: 
di:=O for all i > r, 
d , : = - l  
if t = 1, 
d,:= ( -  l)'det(B,), 
i = 1,. . . , t, 
where Biz denotes the (r -1,r-1)-submatrix 
of B, obtained by 
removing the i-th row and r-th column from B,. 
if t > 1, 
(53.6) Define the following vector D E Q" 
dii:= d; - d f  , i = 1,. . . , n - 1, 
dij:= -2didj, for i , j e E ( G )  and i < j ,  
and return D (if 111) 11 < 1 we have to scale such that 110 11 2 1). 0 
The vector D E W" gives the desired separating hyperplane in case B does not 
belong to B(G). More exactly 
Dx s d : s  DB for all X E L%(G). 
(5.6) 
To prove (5.6) define the (n, n)-matrix D = (d,,) by setting d,, = d,d,, i.e., 
D = dd'. It is obvious from the definitions of D and 0 that for every vector 
X E R" and its extension X E R""" we have 
n 
D'X = d,,, - C d,X,d, = dZ.- dTXd. 
r., = I 
Now if 
E @(G), then the extension X is positive semidefinite, i.e., dTXd 2 0, 
which implies D ' x S d : .  If x =  
B and B is the extension of 6 then the 
following holds: 
d'Bd = 2 didjbij = det(B,)det(B,-JG 0, 
t.j = 1 
(5.7) 
where in case t = 1, det(Bo) is assumed to be one. (5.7) can be obtained by 
exploiting the definition of d, cf. (5.5.9, and using determinant expansions. 
Thus, (5.7) shows that DB == d: and (5.6) is proved. 
Altogether we have used Gaussian elimination once in (5.5.2) and we have 
performed at most 2n determinant calculations in (5.5.3) and (5.5.5). Since 
Gaussian elimination and determinant calculation can be done in O(n3) time the 
overall running time of our separation algorithm is at most O(n") (not 
considering the length of numbers). Summarizing the discussion above we get 
the following theorem. 

Polynomial algorithms for perfect graphs 
345 
(5.8) Theorem. There exists an algorithm SEP( . , . ) such that for any graph G 
with n vertices and any vector B E Q', 6 = n + (2)- IE(G)I - 1 ,  SEP(G, B) 
asserts whether B E B(G) 
or produces a vector D E Q E  such that Dx < BB for 
all x E a(G). 
The running time of SEP(G,B) is bounded by a polynomial in n and in 
r 1% It B 11-1 ' 
To give an example for the sets 93(G), &(G) and the separation algorithm for 
&(G) we consider the graph K2 which has two vertices and no edges. Then 
4 (K2) 
= {(a, b)T 1 0 s a s 1, ( a  - f)' + 6' 6 i}, 
i.e., B((K2) is the ball in R2 around the point (f,O)' with radius f. 
Consider the point B = (4,l)'E [wz. The extension of B is the matrix 
B = j i  
,1 I ) .  
f 
B has rank 2 and det(B1)=$, det(Bz)=det(B)= -:. 
So B is not positive 
semidefinite and the smallest index t with det(B,) < 0 is t = 2. Using (5.5.5) and 
(5.5.6) we obtain d ,  = - 1 ,  det(B12) = - 1, d2 = det(BZz) = i, and hence d,, = 
d:-d:=-$,d,2=1,i.e.,D=(-~,1)T.Thus,by(5.6)wehave 
- -  
- -  
D X =  - i a + b < d : = f < D B = ( - i , 1 )  j!) 
-I 
- 8  
for all 2 E 3(K2). 
The set %((Kz), the hyperplane fix = f and the point B are 
shown in Fig. 5.1. 
'b - 
1- 
B-. 
a 
/ 
Fig. 5.1. 

346 
M. Gliitschel el al. 
6. Polynomial algorithms to compute &(G) for all graphs and to solve the 
weighted stable set and clique problem in perfect graphs 
We shall now use the separation aigorithm SEP( . , . ) for B ( G )  described in 
the foregoing section as a subroutine of the ellipsoid method to compute 6, ( G )  
for every graph G and to find a maximum weighted stable set (or clique) of a 
perfect graph. Recall that for any graph G with a weight function w : V+Z+ 
Theorem (4.20) implies 
&(G)=max { i j = l  G j b i j  IB = ( b i j ) E 9 ? ( G ) ) ,  
i.e. 6,(G) is the maximum value of a programming problem with a convex 
feasible region and with a linear objective function (having a particular form). 
We saw that it is necessary to replace B(G) by the convex body B(G) (cf. (4.12) 
and (5.1)) for technical reasons. We therefore have to replace the optimization 
problem over B(G) by a corresponding optimization problem over B(G). 
So, given an objective function c,.,c,,b,, such that c,, = c,, for B(G) as above, 
we then define the following objective function C for a ( G )  by setting 
E,,:=c,, - c,,, 
C,,:=2c,, 
i = 1,. . . , n - 1, 
if i,jP E(G), i < j. 
Defining 
it is then easy to see that 
Therefore, - 
in order to approximate 6, (G) it is sufficient to approximate &c (G) 
for c,, = V w,w,. 
Since the numbers d G  
occurring in the objective function are not necessar- 
ily rational, we have to approximate these numbers in such a way that the 
optimum of the problem with the perturbed objective function does not differ 
too much from the true optimum. 
Suppose we want to calculate 6, (G) up to an error E > 0, then we claim that 
the following approximation of the V'G, is sufficient. Using, e.g., the method of 
continued fractions, determine rational numbers u,, with 

Polynomial algorithms for perfect graphs 
347 
where, in addition, the denominators of the u,, are at most 2n(n + l)/e. Then we 
solve the program 
Assume that B E B ( G )  is the true optimum solution of this program, then since 
1) B 1) Q 1, no component & of B is larger than one in absolute value. This implies 
that the error we make with respect to the original objective function is 
com pone n t wise 
As the number of components ti of B is at most n(n + 1)/2 - 1 and the error in 
u,, is also at most ~ / 2 n ( n  
+ 1 )  we have from (6.1) that 
1 8 u  (G ) + u n n  - 6, ( G )  
1 < E /2. 
In other words, if the u,, are chosen according to (6.2) then the desired number 
19, (G) is contained in the interval (8, ( G )  + u,, - ~ / 2 ,  
&,, (G) + u,, + ~ / 2 ) .  
This 
implies that if we compute 8,(G)+u,, up to an error ~ / 2  
we obtain 6,(G) 
within an accuracy of 
E. Such an approximation can be achieved with the 
ellipsoid method. 
So suppose a graph G, 1 V ( G )  
1 = n, with weight function w : V(G)-+ Z, and a 
required accuracy E > 0 for 9, ( G )  are given, then the following algorithm 
THETA (G, w, E, 7 )  finds a number T with 17 - aW (G)( < E. 
(6.3) Algorithm. THETA(G, w, E, 7). The graph G = (V(G), E(G)), 1 V ( G ) )  = 
n 3 2, the natural numbers w,, 
i E V(G), and the rational number F > 0 are the 
input of the algorithm, while the number 7 is the output of the algorithm. 
fying (6.2) and whose denominators are at most 2n(n + 1)/~. Set 
ri,, : = u,, - u,,, 
i = 1, . . . , n - 1 and ri,j: = 2u,, for i < j, i, j E  E (  G ) .  
(We now approximate the optimum value of 
the program 
max{GTB 1 B E B(G)} + unn up to an error ~ / 2  
using the ellipsoid 
method.) 
(6.3.2) Set r = l / n z f i ,  R = 1, E : =  ~ / 2 -  
~ / 2 n ( n  
+ 1) and define the param- 
ters N, 6, p as in the ellipsoid method (2.3). (For the choice of the radii, 
cf. (5.2), the accuracy E is chosen according to the previous discussion.) 
(6.3.3) Set Ao:=RZZ, and choose as center xo of the first ellipsoid the 
projection B, E B(G) of (l/n)Zn. 
(6.3.1) Approximate the numbers vGj, 
1 
i s j s n, by rationals u,j satis- 

348 
M. Grotschel et al. 
(Recall that ii = n + (;) - [ E(G)( - 1, and that by (5.2) B, is an interior 
point of $%(G).) 
(6.3.4) for k = 0 to N - 1 do; 
1. Run the separation algorithm SEP(G,xk) defined in (5.5). 
2. If xk E&(G) then set a:= a. 
3. If X k E  B ( G )  and if 0 is the vector returned by SEP(G,xk), 
cf. (5.5.6), then set a:= - D. 
4. Make the updates of the ellipsoid method as described in 
(2.3.9)-(2.3.11). 
End; 
rnax{z'i'B I B E a(G)} found in (6.3.4). 
Set T:= m + u,, and return T. 0 
(6.3.5) Let cr be the value of the best feasible solution of 
Algorithm (6.3) describes how we can approximte 9, (G) in polynomial time. 
Letting w be the vector all of whose components are one, we can use algorithm 
THETA to compute 6(G) up to any given accuracy in polynomial time for every 
graph G. So 9(G) is not only well-characterized by the formulas (4.3, 
(4.6), (4.9) 
and (4.13), it is also well-behaved computationally. 
Theorem (3.2) and Theorem (4.20) imply that for perfect graphs the numbers 
a,(G) and &(G) coincide. Moreover, since our weight function w is integer 
valued, we know that the value a, (G) of the optimum weighted stable set is an 
integer. Therefore, in order to find the optimum value of a weighted stable set 
problem on a perfect graph we only need to approximate 6, (G) up to an error 
E c f with the algorithm THETA(G, w, E, T )  and round T to the next integer to 
obtain a, (G). 
We can also use the algorithm THETA to find a maximum weighted stable set 
explicitly. This goes as follows. 
Let a graph G = (V, E) with n z= 2 vertices, weights wi E Z, for all i E V and 
an accuracy O <  E s $  be given. 
(6.4) Algorithm. STABLESET(G, w, E ) .  
(6.4.1) Initialization and first guess for a(G): 
1. Run THETA(G, w, E, T )  and round T to the next integer, say f. 
(Clearly, r 3 a ( G )  and if G is perfect then t = a (G).) 
2. If 1 r - T 13 E, then stop and conclude that G is not perfect. 
3. Call all vertices of G unlabeled. 
(6.4.2) Termination check 
If all vertices of the present graph G are labeled, then do: 

Polynomial algorithms for perfect graphs 
349 
1. If V ( G )  is not stable then stop and conclude that G is not perfect. 
2. If V ( G )  is stable then V(G) constitutes a maximum weighted stable 
set of the original graph. stop! 
i.e., set G‘ = G - u and set w L = w, for all u E V \{ u } .  
(6.4.3) Choose an unlabeled vertex z, E V and tentatively remove u from G, 
(6.4.4) Run THETA(G’, w ’ ,  E, T )  and round T to the next integer, say s. 
If I s  - T 12 E, then stop and conclude that G is not perfect. 
(6.4.5) If s = t, then remove u definitely, i.e., set G = G’ and w = w’. 
(6.4.6) If I V(G)I = 1, then label the remaining node. 
(6.4.7) If s < t, then label u. 
(6.4.8) Go to (6.4.2). 0 
To prove the correctness of the algorithm suppose first that G is a perfect 
graph. Then for every induced subgraph G’ of G, 6,.(G’) = a,.(G’). In step 
(6.4.1) we approximate &(G) by F G $ ,  and, therefore, rounding 7 to the next 
integer gives the true value t for a(G). Now we remove a vertex u from G. If the 
number s calculated in (6.4.4) satisfies s = f then we know that G - u contains a 
stable set which is a maximum weighted stable set of G, so we can remove u 
without distroying all optjmum solutions of the stable set problem for G, and we 
can continue with this procedure. If however s # t, then all optimum stable sets 
of G necessarily contain vertex u. Thus we label u, keep u in our vertex set and 
continue. This way we will finally end up with a graph G’ whose set of vertices is 
labeled, i.e., none of the vertices can be removed without reducing s = a,.(G‘) = 
a, (G) = c. This means that every vertex of G’ is contained in all optimum stable 
sets of G’. In other words, the vertex set of G’ is itself a stable set, and since 
a,.(G’) = a, (G), this vertex set is a maximum weighted stable set of G. Thus if 
G is perfect, then STABLESET will produce an optimum weighted stable set of 
G. 
If however G is not perfect, then STABLESET may detect the imperfectness 
of G but may also deliver a maximum weighted stable set (without recognizing 
the imperfectness of G). If in step (6.4.1) or (6.4.4) we find that ] t - T I 3 
E resp. 
I s  - T 1 2 E then the interval (T - E, T + E )  contains no integer. Since cu,.(G’) is an 
integer for all induced subgraphs G‘ of G and THETA guarantees 6,.(G‘)E 
(T - E ,  T + E )  this implies a,.(G’)# IL(G‘), i.e., by Theorem (4.18) we can 
conclude that G is not perfect. It may however happen that in every step (6.4.1) 
and (6.4.4) the approximation 7 of 6,JG’) is in the &-neighborhood of an integer 
and we will end up in step (6.4.2) with an induced subgraph G’ of G whose 
vertex set V’ is labeled. If V‘ is not a stable set, then V’ is not a solution of our 

350 
M. Grotschel et nl. 
stable set problem. Since the algorithm works for perfect graphs, we can 
conclude that G is not perfect. If V' is a stable set we have to show that V' is in 
fact a maximum weighted stable set of G. This can be seen as follows. Suppose 
G" is the last subgraph of G created during the algorithm such that a vertex, say 
u, was definitely removed from G". Then we know that all other vertices of G" 
will finally be labeled, so V(G") = V' U { u } .  Moreover, u was removed because 
the number s obtained in (6.4.4) by running THETA(G"- u, w ' , E ,  T )  satisfies 
s = t. Since V' is stable, G' = G"- u is a perfect graph, so we have s = a,.(G'), 
and since t is an upper bound for LZ, (G), s is the weighted stability number of G. 
This proves our claim. 
The following (imprecise) argument shows that in case of imperfect graphs all 
outcomes described above are possible. Consider the pentagon G, then 
9(C,) = L 5 = 2.236.. . . Suppose we run STABLESET with E = 4, then the T we 
get in step (6.4.1) may equal 2.1 or 2.6. If T = 2.1 then t = 2 and the algorithm 
will continue finding a maximum stable set of C5. 
If T = 2.6 then t = 3, and since 
the removal of every vertex from Cc results in a perfect graph we shall get s = 2 
every time we execute step (6.4.4). This means that finally all vertices of C, will 
be labeled, but these of course do not solve our problem. If however we had 
chosen E =0.1, then ~€(.\/5-0.1,V'~+O.I)andweobtain t = 2 a n d l r - ~ I s  
0.13 > E. This implies that the algorithm would stop in step (6.4.1) concluding 
that C, is not perfect. 
Thus algorithm STABLESET has two possible outcomes. Either a maximum 
weighted stable set of G is found or imperfectness of G is proved. Note that in 
the former case it does not prove perfectness. 
STABLESET can also be used to find a maximum weighted clique of a perfect 
graph G. We simply run STABLESET on the complementary graph G which by 
the perfect graph theorem is perfect again. 
Summarizing the observations of this section we obtain the following theorem. 
(6.5) Theorem. (a) There exists an algorithm which for any graph G = (V, E ) ,  
1 VI 2 2, any weight function w : V-, 8, and any rational E > 0 ,finds a number r 
such that I T  - a,(G)J < F holds. 
The running time of this algorithm is polynomial in I V ( ,  [log(( w 11-1 and 
(b) There exists an algorithm which for any perfect graph G = (V, E ) ,  I V I 3 2 
and any weight function w : V+H+ finds a maximum stable sef (resp. maximum 
weighfed clique) and the running time of which is polynomial in I VI and 
rlog I1 f 11-1 . 
[log It w 11-1 ' 
Algorithm THETA and inequality (4.16) can be combined to design a 
polynomial time nondeterministic algorithm which checks the imperfectness of a 

Polynomial algorithms for perfect graphs 
35 1 
given graph. Namely, suppose G' is a critically imperfect graph with n vertices, 
then choosing a suitable E, e.g., E = in-'", we run THETA(G', e, E ,  T )  where e is 
the vector all of whose components are one. By Theorem (2.4), the choice of F ,  
and inequality (4.16) the number T we obtain satisfies 
T E (8(G') - E , ~ ( G ' ) +  
E ) ,  
1 
T <a(G)+- 
W ( G ) + €  
and therefore T - F > a(G'), T + E < cu(G)+ 1. Since log((€ 
( I x  is polynomial in 
n, THETA runs in time polynomial in n. In other words, given a critically 
imperfect graph, we can verify its imperfectness in polynomial time. As every 
imperfect graph contains a critically imperfect graph, say G', we can guess this 
graph G '  and then apply the algorithm described above. This shows that 
verification of imperfectness is an NP-problem, hence verification of perfectness 
is a co-NP problem. Note that if the strong perfect graph conjecture is true, then 
this fact is trivial, since checking imperfectness would then be possible by 
guessing an odd hole or antihole. 
7. A polynomial algorithm for the weighted clique cover and coloring problem for 
perfect graphs 
The separation algorithm for g ( G )  presented in Section 5 provides us - as 
shown in Section 6 - 
via the ellipsoid method with a polynomial time algorithm 
for solving the weighted stable set problem for perfect graphs. Seen from a 
different point of view this means that the class of linear programming problems 
maxcTx, x E P(G) = conv{x 
1 W stable set in G}, G a perfect graph, is 
solvable in polynomial time. Since P ( G )  is a fully dimensional rational polytope, 
Theorem (2.6) implies that the optimization problem as well as the separation 
problem for P(G), G perfect, are solvable in polynomial time, even in the strong 
sense. By Theorem (3.2), for a perfect graph G the stable set polytope P(G) 
equals the fractional stable set polytope P*(G), thus for this class of graphs we 
can decide in polynomial time whether a given vector y belongs to 
P ( G ) = P * ( c ) = ( ~ ( ~ , ~ o ~ ~ ~  
all ~ E v ,  
c x, s I for all cliques c c v(G)/ . 
"EC 
A different approach to solving the separation problem for P(G) not using 
Theorems (2.5) and (2.6) is of course to apply the algorithm which finds a 
maximum weighted clique, where the given vector y 3 0  is used as the vector 
defining the objective function. If the maximum clique, say C, satisfies y r
~
'
 
= 

352 
M. Grotschel et al. 
cuEcyu 
d 1 then y E P(G), otherwise this clique inequality provides a separat- 
ing hyperplane. Since the optimum clique algorithm is nothing but the optimum 
stable set algorithm applied to the complementary graph G (which is also 
perfect), we can use the algorithm STABLESET directly to solve the separation 
problem for P(G), G perfect. 
Theorem (2.6) has a further important consequence. Since the optimization 
problem for the class of rational polytopes P(G), G perfect, is solvable in 
polynomial time we can find facets of P(G) and rationals A, 2 0  satisfying the 
conditions of statement (c) of (2.6). Since the facets of P(G) are of the form 
-xu SO, u E V ( G ) ,  and cvGcx, 
G 1, C c  V ( G )  a maximal clique, Theorem 
(2.6) (c) implies that for any objective function w : V(G)-+Z+ we can find in 
polynomial time (maximal) cliques C C V(G) and positive rational numbers A,, 
i = l ,  ..., r S l V ( G ) l  such that 
Suppose for a node u E V ( G )  strict inequality holds in the above inequality, say 
u,:=C:=l,,,c,A, - w, > 0, then pick a clique, say C,, which contains u. If A, s u, 
then replace C, by the clique C, \ { u } ,  otherwise add the new clique C, \ { u }  as 
clique C,&, 
to our list of cliques and define new parameters as follows: 
A,:= 
A, - uL, A,,, := u,. Then the sum of the A,'s still equals a, (G) and the gap u, 
of the inequality corresponding to u is either zero or is strictly reduced. By 
continuing this process we end up wirh a list of cliques C,, , . . , C, and positive 
rationals A,, . . . . A, such that 
2 A, = a,(G). 
I = I  
A, = w ,  
8 = I .  C i E C ,  
for all u E V(G). 
Note that in the algorithm described above only those vertices u E V ( G )  were 
considered for which the inequality - x, d 0 had a positive multiplier A,. Since 
for every such vertex at most one additional clique was added, we still have 
r 6 
1 V(G)\. 
By definition, for a perfect graph G the stability number a ( G )  equals the 
clique cover number p ( G ) .  Moreover. since for a perfect graph G the graph G, 
(cf. Section 3) is also perfect and as a,(G)= a(G,), pw(G)= p(G,), the 
weighted clique cover number pw (G) equals the weighted stability number 
aw(G). This implies that for a perfect graph G, algorithm THETA (or 
STABLESET) also calculates pw (G), thus, by definition, there exist integers 
A, > 0 which satisfy (7.1). Note that the numbers constructed by the algorithm of 
Theorem (2.6) (c) (plus scaling afterwards) need not be integral in general. 

Polynomial algorithms for perfect graphs 
353 
However, we can find such integers for perfect graphs. We first show how this 
can be done in the cardinality case, i.e., w = (1,. . . , l)T. 
Assume that G = (V, E), I V 1 3 2, is a perfect graph and we want to find a 
clique cover of G. 
(7.2) Algorithm. Cardinality clique cover. 
(7.2.1) Apply the algorithm of Theorem (2.6) (c) to find cliques Ci 
C V and 
(possibly nonintegral) rationals hi > 0, i = 1,. . . , t satisfying (7.1). 
(We claim that every clique C, with hi > 0 intersects every stable set of 
G of cardinality a(G). Suppose C, is such a clique and W C V is a 
maximum stable set with W f l  Ci 
= 0. Then (7.1) implies 
i # /  
a contradiction. Therefore we continue as follows.) 
(7.2.2) Remove clique CI from G, i.e., set G:= G - CI. If V ( G )  = 0. stop. 
Otherwise go to (7.2.1). 
(Note that the graph G' obtained from G by removing clique CI satisfies 
a (G') = a (G) - 1 since every maximum stable set of G will lose one vertex. So 
after exactly a(G) executions of (7.2.1) and (7.2.2) we have found a(G) cliques 
which cover G. These cliques are those which have been removed in (7.2.2). 
Note also that every vertex of V is contained in exactly one such clique and that 
these cliques are not necessarily maximal cliques of G.) 0 
Since the algorithm of Theorem (2.6) (c) can be shown to be polynomial in I V I 
the overall running time of algorithm (7.2) is also polynomial in I V I. We shall 
now extend this algorithm to the weighted case. 
Assume that a perfect graph G = (V, E )  and a weight function w : V + H, are 
given. 
(7.3) Algorithm. Weighted clique cover. 
(7.3.1) Apply the algorithm of Theorem (2.6) (c) to find cliques C C V and 
(7.3.2) Set A ::= LA, J, i = 1,. . . , t, 
(possibly nonintegral) rationals hi =- 0, i = 1,. . . , f, satisfying (7.1). 
and construct the graph G,.. 
(Since hi - A :  < 1 we obtain from (7.1) 

M. Grotschel el al. 
so the graph G,. obtained by replacing every node of v by w l  
nonadjacent copies and linking two nodes in G,. by an edge if their 
originals in G are adjacent has less than I V )z vertices. This implies that 
G,, can be constructed from G in time polynomial in I V (  and 
[log II w 11-1 
(7.3.3) Apply algorithm (7.2) to G,, to obtain cliques D : ,  i = 1,. . . , a(G,.) 
covering each vertex of G,, exactly once. 
(Since every clique D ;  
of G,. contains at most one copy of every vertex 
u E V(G), every DI corresponds to a clique, say D,, of G. Note that 
for 0: 
# 0; 
the corresponding cliques D,, 0, of G may be identical.) 
(7.3.4) Construct the cliques DI, . . . , Do(G,,) 
of G corresponding to the cliques 
DI,. . . , DL(G,.) 
of G,.. Let BI,. . . , B, be the different cliques occurring 
in the sequence D,, i = 1 , .  . . , a(G,.) and let p,, j = 1,. . . , r, be the 
number of times clique B, occurs in the sequence D,, i = 1,. . . , a(G,.). 
Then proceed as follows: Set k = t and for j = 1 to r do; If B, is equal 
to one of the cliques C,, i E 11,. . . , I } ,  then set A: : = A + p,. Otherwise 
set k : = k + l ,  AL:=p, and Ck:=B,. 0 
We claim that the cliques C, and integers A:, i = 1,. . . , s, defined in step 
(7.3.4) solve the clique cover problem considered. Obviously, in the above 
algorithm every vertex u E V is covered w, - w :  times after the execution of 
step (7.3.2). By applying algorithm (7.2) to the graph G,. and making the 
construction described in (7.3.4) every vertex will be covered a further w L times. 
So the cliques C1, . . . , C, and integers A :, . . . , A I satisfy 
Similarly, note that G,. is designed in such a way that a(G,.)= 
a,(G)-C:=I(A, - [ A , ] )  holds. Since G is perfect G,, is also perfect, so 
p(G,.) = XI=, 
p, = a(G,.) which implies that the A: defined in (7.3.4) satisfy 
A', = a,(G) = p, (G). 
, = 1  
Thus algorithm (7.3) produces the desired solution of the clique cover problem 
for a perfect graph. 
Since the algorithm STABLESET, the algorithm of Theorem (2.6) (c) and the 
algorithm (7.2) run in time polynomial in 1 V(G)1 and [logl) w 11-1 the overall 

Polynomial algorithms for perfect graphs 
355 
running time of algorithm (7.3) is polynomial in I V(G)I and [log\( w 11-1 for every 
perfect graph G and every objective function w : V(G)+Z+. 
As before it is now easy to obtain a polynomial time algorithm for the 
weighted coloring problem for perfect graphs. Since the weighted chromatic 
number xw(G) equals the weighted clique cover number p , ( G )  of the com- 
plementary graph G we simply apply algorithm (7.3) to the perfect graph G 
which will yield the desired optimum weighted coloring of G. 
8. Conclusions 
In the previous section we have described polynomial time algorithms for 
various linear programming problems on perfect graphs. All these algorithms 
are based on the ellipsoid method and use a polynomial time separation 
algorithm for a convex, nonpolyhedral set. Although these algorithms are 
polynomial (and thus are theoretically good) we do not recommend them for 
practical use. 
Just for curiosity we have done some computational experiments with the 
separation algorithm for G(G) described in Section 5. As expected, the 
numerical problems were such that even for small problem sizes, say I V(G)I 
equal to 10 or 20, it was almost impossible to obtain a correct answer. An 
alternative approach is to use (4.9) for the design of a polynomial algorithm to 
compute 6(G). This amounts to minimizing a convex function on an affine 
space. In principle, this can be done by the ellipsoid method in polynomial time. 
In practice, it is probably better to use some simpler descent method. The first 
experiments with this dual approach seem to be more promising. 
Our analysis of these problems should be viewed as a theoretical contribution 
showing that certain programming problems for perfect graphs are indeed 
polynomially solvable. Future research should be directed toward finding 
practically good algorithms for these problems. These algorithms should have a 
more combinatorial nature and should not suffer from the numerical instability 
(due to our present-day computer technology of fixed precision arithmetic) of 
the ellipsoid method and the separation problem for B(G). 
References 
[l] V. Chvital, O n  certain polytopes associated with graphs, J. Comb. Theory, Ser. B 18 (1075) 
[2] P. Gacs and L. Lovasz, Khachian’s algorithm for linear programming, Math. Program. Studies 
138-154. 
14 (1981) 61-68. 

356 
M. Grotschel et al. 
131 M.R. Carey and D.S. Johnson, Computers and Intractability, A Guide to the Theory of 
[4] M. Grotschel, L. Lovasz and A. Schrijver, The ellipsoid method and its consequences in 
[5] W. Haemers, On some problems of Lovasz concerning the Shannon capacity of a graph, IEEE 
[6] W.-L. Hsu, How to color claw-free perfect graphs, Ann. Discrete Math. 11 (1981) 189-197. 
[7] W.-L. Hsu and G.L. Nemhauser, Algorithms for minimum coverings by cliques and maximum 
cliques in claw-free perfect graphs, Discrete Math. 37 (1981) 181-191 (this volume, pp. 357-369). 
[8] L.G. Khachiyan, A polynomial algorithm in linear programming, Dokl. Akad. Nauk SSSR 244 
(1979) 1093-1096 (English transl. Soviet Math. Dokl. 20 (1979) 191-194). 
[9] L. Lovasz, Normal hypergraphs and the perfect graph conjecture, Discrete Math. 2 (1972) 
253-267 (this volume, pp. 29-42). 
NP-Completeness (Freeman, San Francisco, 1979). 
combinatorial optimization, Combinatorica 1 (1981) 169-197. 
Trans Inform. Theory IT-25 (1979) 231-232. 
[lo] L. Lovasz, On the Shannon capacity of a graph, IEEE Trans. Inform. Theory IT-25 (1979) 1-7. 
[I I] M.W. Padberg, Almost integral polyhedra related to certain combinatorial optimization 
problems, Linear Algebra & Appl. 15 (1976) 6Y-88. 
[ 121 C. Shannon, The zero error capacity of a noisy channel, IRE Trans. Inform. Theory IT-2 (1956) 
8-19. 
[I31 N.Z. Shor, Convergence rate of the gradient descent method with dilatation of the space, 
Kibernetika 2 (1970) 80-85 (English transl. Cybernetics 6 (1970) 102-108). 
[ I41 D.B. Yudin and A. S. Nemirovskii, Informational complexity and effective methods of solution 
for convex extremal problems, Ekonomika i Mat. Metody 12 (1976) 357-369 (English transl.: 
Matekon: Transl. of Russian and East European Math. Economics 13 (1976) 24-25). 

Annals of Discrete Mathematics 21 (1984) 357-369 
@ Elsevier Science Publishers B.V. 
ALGORITHMS FOR MAXIMUM WEIGHT CLIQUES, 
MINIMUM WEIGHTED CLIQUE COVERS AND MINIMUM 
COLORINGS OF CLAW-FREE PERFECT GRAPHS* 
Wen-Lian HSU 
Department of Industrial Engineering and Management Science, Northwestern Universiry. 
Evanston, Illinois, V.S.A. 
George L. NEMHAUSER 
School of Operations Research and Industrial Engineering, Cornell University, Ithaca, New 
York, U. S.A. 
For the class of claw-free perfect graphs with weights on the vertices, we give efficient 
algorithms for finding a maximum weight clique and a minimum weighted clique cover. We 
also present an algorithm for minimum cardinality coloring of these graphs, but the minimum 
weighted coloring problem remains unsolved. 
1. Introduction 
One of the unsolved problems for perfect graphs is to find efficient com- 
binatorial algorithms for the maximum weight independent set, maximum 
weight clique, minimum clique cover and minimum vertex coloring problems. * * 
Graphs that do not contain claws, odd holes and odd anti-holes are known to be 
perfect (see [13], [9], [3]). We consider this family of perfect graphs. 
Efficient combinatorial algorithms for the maximum independent set problem 
on claw-free graphs, including the weighted case, have been given by Minty [ 121 
and Sbihi [14]. However, one cannot expect to have efficient algorithms for the 
maximum clique or minimum clique cover problems on claw-free graphs because 
these problems are NP-hard ([7]). 
The edge coloring problem on general graphs can be reduced to vertex 
coloring on claw-free graphs [7]. Holyer [15] has shown that minimum edge 
* This research has been supported, in part, by National Science Foundation Grant ECS-8005350 
to Cornell University. The results of this paper have appeared in Hsu’s unpublished Ph.D. 
Dissertation 17) and also in Refs. [6], [8]. 
** Grotschel, Lovasz and Schrijver [4] use Khachian’s ellipsoid method [ll] to obtain polynomial 
algorithms for a number of combinatorial optimization problems including the four problems just 
noted on perfect graphs. Although these results are theoretically very significant, the ellipsoid 
algorithm is not practically efficient. 
351 

358 
W.-L. Hsy G.L. 
Nemhauscr 
coloring of general graphs is NP-hard and consequentially minimum vertex 
coloring on claw-free graphs is NP-hard as well. However, when we assume 
perfection as well as claw-freeness, these problems become tractable, as we have 
shown in our recent papers ([6], [8]). Here we present the combinatorial 
algorithms of these papers for maximum weight cliques, minimum weighted 
clique covers and minimum cardinality vertex-colorings of claw-free perfect 
graphs. The coloring problem in the weighted case remains unsolved. 
2. An algorithm for maximum weight cliques on claw-free perfect graphs 
The algorithm is a simple consequence of the following lemma. 
Lemma 1. Let G be a claw-free perfect graph and let u be any vertex of G. Let 
N ( u )  be the neighbors of u and let Gn be the subgraph of G induced on N(u). a", 
the complement of G O ,  is bipartite. 
Proof. Since the subgraph induced by N(u) U { u }  is claw-free and every vertex 
of G" is adjacent to u, Gn cannot have triangles. Furthermore, Gn has no odd 
anti-holes so that Go has no odd holes. A graph without triangles or odd holes 
has no odd cycles. 0 
Since G" is bipartite, we can find a maximum weight vertex packing 
(independent set) P, on Go efficiently by the O(n3) maximum flow algorithm of 
Karzanov [lo]. f, U { u }  is a maximum weight clique in G that contains u. Thus 
by enumerating over all u E G we can find a maximum weight clique of G in 
O(n4) time. 
3. An algorithm for minimum weighted clique covers 
Let A be the clique-vertex incidence matrix (abbreviated as clique matrix) of 
the perfect graph G, i.e., each column of A corresponds to a vertex of G and 
each row of A corresponds to a clique of G. Chvital [l] proved that every 
extreme point of the polyhedron P = {x E R :  1 Ax d 1) is a (0, 1)-vector, from 
which it easily follows that there is a one-to-one correspondence between 
extreme points of P and packings of G. Hence we can formulate the maximum 
weight vertex packing problem on a perfect graph as the linear program* 
' Rows of A that correspond to non-maximal cliques are obviously superfluous. However, we 
retain them in the problem description because our clique cover algorithm uses non-maximal cliques. 

Algorithms 
359 
( W W  
max w . x, 
Ax s 1, 
x 30, 
where w is the vector whose components are the vertex weights wt(u) for all 
u E V. Without loss of generality, we will assume that w is strictly positive since 
vertices with non-positive weights can always be assigned a value of zero in some 
optimal solution. 
The dual of the above program is the linear programming formulation of the 
weighted clique cover problem 
WCC) 
min 1 . y, 
yA 2 w, 
y 30. 
When w is an integer vector, perfection implies that (WCC) always has an 
integral optimal solution (see [2]). However, our approach can solve (WCC) for 
any real w 3 0. Of course, if an integral y is required then w is also required to 
be an integer vector. 
Since G is claw-free, Minty’s algorithm can be used to find a maximum weight 
packing P of G. Our approach is to begin with P and then to find a feasible 
solution y * to (WWC) with the property that 1 . y * = wt(P), which implies (by 
weak duality) that y *  is an optimal solution to the weighted clique cover 
problem.* We use the fact, also implied by duality, that for u E P there exists a 
clique C containing u and an E, 0 < E < wt(u), such that P is a maximum weight 
packing on graph G with weights given by wt(u)- E for u E C and wt(u) 
otherwise. 
The difficult problem is to find such a weighted clique efficiently. A recursive 
application of the weighted clique-finding procedure on reduced graphs will 
yield an optimal weighted clique cover for graph G. To make this idea precise, 
we first define graph reduction and then the construction of the clique cover for 
G from the weighted cliques. Finally, we will give the algorithm for finding the 
weighted cliques. 
Let HI, Hz be two graphs such that V(H2) C V(H1) and E(H2) C E(HI). Let 
wtl( .) and wtz(. ) be weight functions on the vertices of H1 and Hz respectively. 
Define the reduced graph of HI by H2, HIIH2, to be the graph H’ with 
V(H’) = { u  I u E V ( H I )  and wtl(u) > wt2(u) if u E V(H2)}, 
E(H’) = { e  1 e = (x, y )  E E ( H ~ ) ,  
x, y E v(H’)I, 
* We also used this approach in the unweighted case [9]; however, the technique used here to 
construct the clique cover is quite different from the technique that we gave in [9]. 

360 
W.-L. Hsu, G.L. Nemhauser 
and weight function wt'( - ) defined on V ( H ' )  by 
wt,(u) 
if u E V(HI)\ V(H2), 
wtl(u)-wt2(u) 
if u E V(H,)n V(H2). 
wt'(u) = 
Given a maximum weight packing P and u f P, the algorithm finds a clique 
C:, 
with weight yc: > 0 such that p is a maximum weight packing on the reduced 
graph GICf,. The algorithm continues the clique finding and reduction proce- 
dure until the weight of u is reduced to zero. At each step the optimality of P is 
maintained. Let C, be the set {C:}rA;'of weighted cliques containing u that have 
been deleted during the process and call the reduced graph at this stage G,. By 
construction 
and P\{w} is a maximum weight packing in G,. Then we replace G by G, and P 
by P \ { u }  and apply the algorithm recursively. When P becomes empty, the 
reduced graph will also be empty. Hence a recursive application of the algorithm 
will give rise to I P 1 sets { C",}, u, E P, of weighted cliques such that each vertex u 
of G is covered by at least wt(o) cliques and for each u, E P 
K ( u  c' yr;,= wt(uJ) in G. 
, = I  
Thus 
so that the set u,",{Cu,} is an optimal solution to the weighted clique cover 
problem. 
During the procedure, we also have to consider a graph with weights on the 
edges, which is defined as follows. Let G be a weighted claw-free perfect graph 
with positive weight on each vertex. Let u be a vertex in a maximum weight 
packing P in G. Since G is claw-free, 10 n N(u)l S 2 for any packing Q in G. 
From Lemma 1, we know that Go is bipartite. 
For all (x, y) E E(G") define edge weights by 
wt((x,y))=max{wt(Q)( Q is a packing in G, { x , y } E  0)-wt(P\{u}) 
and for all u E N ( u ) ,  define tower vertex weights by 
wt(u) = max{wt(Q) 1 Q is a packing in G, Q n N ( u )  = { u } }  
-wt(P\{u}). 

Algorithms 
361 
Note that wt((x,y)) and wt(u) can be found by Minty's algorithm [4]. 
G and edge weights and lower vertex weights as above. 
Construct a weighted graph H, as the graph Go with usual vertex weights as in 
It is easy to show that P is optimal if and only if 
(1) wt(u) s wt(u) for all u E N ( u ) ;  
(2) wt((x, y ) ) s  wt(u) for all (x, y) E E(H,). 
Therefore to maintain the optimality of P for the reduced graphs, we select the 
cliques {Cl} and their weights {yc;,} so that in the reduced graphs (1) and (2) are 
satisfied. 
The following algorithm selects the collection of cliques C,, : 
begin 
let G" be the subgraph of G induced on N ( u ) ;  
construct H, from G; 
C" +0; 
while wt(u)>O do 
begin 
w ,  +maximum lower vertex weight in H,; 
wz +maximum edge weight in H, ; 
Wmax + max{ w 1, wzj; 
if w,,, < wt(u) then 
comment this is case 1 in the proof; 
begin 
let C be the clique { u } ;  yc +wt(u)- 
w,,,; 
Cu + Cu U {C}; wt(u)+ Wmax; 
end 
else 
comment now w,,, = wt(u); this is case 2 in the proof; 
begin 
A ,  +{v 
1 u E V(H.) and wt(v) = wmax}; 
comment A, is the set of vertices that must be included in the next clique; 
Ar+{x 1 x E V ( H , )  and 3 y  E V(H,) s.t. wt((x, y)) = w,J; 
comment our next clique must include one end point of each edge in EZ; 
HI + a  graph with V(HI)= A, U A2 and E ( H , ) =  Ez with the same 
vertex weights and edge weights as in H, 
if A ,  = 0  then 
E~ + {(x, y I wt((x, Y 1) = W m a J ;  
begin 
comment now w,,, = w 2 >  wI and E,#0; 
Fix an arbitrary bipartite partition of G'' and partition HI accord- 
ingly; 

362 
W.-L. Hsu, G.L. Nemhauser 
end: 
begin 
else 
comment from linear programming duality there exists a clique in 
N ( u )  containing Al and one end point of each edge in E,. 
Hence the vertex set of HI can be partitioned into Vi and 
V2 such that all edges of Hi have one end in V, and the 
other in V2, and AI C V,. Furthermore, Vl is an indepen- 
dent set in G"; the procedure for constructing this partition, 
called PART(A,, HI, G"), is given in the Appendix; 
PART(A,, HI, G"); 
let the LHS (left-hand side) of HI be V , ;  
end ; 
514--W,,,-max{wt(v)I 
~ P L H S  of H , } ;  
s1+- w,,, - max{wt((x, y)) 1 (x, y )  E E(HI) but {x, y} n (LHS of HI) = 81; 
s* +-min{sl,sz}; 
let C be the clique (LHS of HI)U{u} in G with weight s * ;  
C,+C, U{C}; yc+-s* 
H,, +H,,/C; wt(u)+-wt(u)-s*; 
for each u of H, in C \ { u }  do wt(u)+wt(u)-s*; 
for each ( x , y )  of E(H.) with either x or y in C do 
wt((x, y )) + wt((x9 y 1) - s *; 
end; 
end; 
comment C,, is now the output of the algorithm; 
end. 
Theorem 1. The algorithm outputs a ,finite collection of cliques {CL} such that 
P\!{U} is a maximum weight packing in the graph reduced by these cliques. 
Furthermore. z, yc;, = wt( u ). 
Proof. By definition, w,,,+wt(P\{u}) 
is the weight of a maximum weight 
packing in G that does not contain vertex u. Since P is a maximum weight 
packing in G, we have wmsr s wt(u). 
Consider two cases: 
(1) w,,,,< wt(u). Let C be the clique { u }  in G with weight (wt(u)- wmaX). 
(2) w,,,.,~ = wt(u). The optimality conditions (1) and (2) are satisfied in the 
Clearly P still is a maximum weighted packing in GIC since now wt(u) = w,,, . 
reduced graph by the construction of C with weight y, = s*. 

Algorirhms 
363 
To show the finiteness of the algorithm, we observe that s * > 0 and at each 
(i) The weight of u will be reduced so that Al U A2 # 0 in H,, (case (1)). 
(ii) At least one more vertex u of H, with wt(u) > 0 will be added to Al in the 
next iteration (when s * = sl in case (2)). It should be noted that once a vertex u is 
added to A1 it will remain there until wt(u) is reduced to zero (since 
wt(u) = wt(u) at that stage). 
(iii) At least one more edge (x, y ) of H,, 
with wt((x, y)) > 0 will be added to E2 
in the next iteration (when s * = s2 in case (2)). Again, once an edge (x, y )  is 
added to E2 it will remain there until wt(u) is reduced to zero (since wt((x, y)) = 
wt(u) at that stage). 
Finally, once all vertices u of H ,  with wt(u) > 0 are added ta Al and all edges 
(x, y) of H,, with wt((x, y)) > 0 are added to E2, 
then s * = s1 = sz = w,,,.~ = wt(u). 
One more deletion of a clique with weight s *  will reduce wt(u) to zero. Hence 
the number of iterations ( = number of Cl's) is bounded by O(l V(Ht)I + 
IE(H'$I). Since W(u) is reduced by s * > O  at each step, we have x,yc: = 
clique addition into C., one of the following will happen: 
wt(u). 
Consider the efficiency of the algorithm. Since the final clique collection is 
composed of a set { C. 1 u E P}, we only have to consider the construction of each 
C,,. 
The construction of H,, requires at most O(l V(d'))I') calculations of edge 
weights and lower vertex weights. Each such calculation requires an application 
of Minty's weighted packing algorithm, which is polynomially bounded. By 
Theorem 1, the number of iterations in constructing C,, 
is bounded by 
O( 
1 V(HO.)) + IE(H;)I). The procedure PART takes no more than O(l V(H.)21) 
time; the calculation of sI, s2 and s *  takes at most O(max(1 V(Hu)l,lE(Hy)l)) 
time. Therefore, the entire algorithm is polynomially bounded. 
4. An algorithm for minimum cardinality colorings on claw-free perfect graphs* 
Let f be a function mapping each vertex of G to a color. f is said to be a 
coloring of G if for any two vertices x and y, (x, y ) E  E j f ( x ) # f ( y ) .  Now 
consider a coloring f of G. Let i, j be two colors in f and consider the subgraph 
Gij induced on vertices colored i or j .  An (i,j>path in G is a simple path with 
vertices colored alternately in i and j such that no two non-consecutive vertices 
are adjacent. Note that such a path may be a simple cycle. 
Ropition 1. Each component of Gi, is either a single vertex or an (i, j>parh. 
Actually, the presentation of this section only assumes that our graphs are clawdrtc and without 
odd holes or odd anti-holes. The algorithm gives yet another proof that this class of graphs is perfect. 

364 
W.-L. Hsu, G.L. Nemhauser 
Roof. It suffices to show that each vertex in a component of Gij has at most two 
neighbors. Suppose not, and assume without loss of generality that y has at least 
three neighbors and f (y ) = i. Then since f is a coloring, all the neighbors of y are 
colored j and form an independent set. But then y and its neighbors contain at 
least one claw centered at y. 
By switching of colors in an (i, j>component, we mean changing all i's to j and 
all j ' s  to i. Note that such a switching will still result in a coloring of G. Hence if x 
and y do not have the same color and are in distinct (f(x),f(y))-components, 
then we can switch the colors in one component so that x and y will have the 
same color. 
We use the fact that the number of colors in a minimum cardinality coloring is 
equal to the size of a maximum clique, w ( G ) ,  which can be found by the 
algorithm of Section 2. The algorithm colors the vertices successively to maintain 
a coloring that uses no more than o(G) 
colors. Thus a vertex is assigned an 
arbitrary color different from those of its already colored neighbors so long as 
these neighbors have used fewer than w ( G )  colors. However, if these neighbors 
have already used w ( G )  colors then we switch colors along appropriate 
(i, j)-paths. These paths are identified from the solution of an edge-matching 
problem as described below. 
Suppose that in a coloring of G \{u), N ( u )  uses w ( G )  colors. As in Section 2, 
let Go be the bipartite graph which is the complement of the graph G" induced 
on N(u). Since G is claw-free, at most two vertices in N ( u )  can have the same 
color. Let A4 be the set of edges in c" 
between two vertices with the same color. 
Then M is an edge-matching in G". 
kmma 2. If N ( u )  uses w ( G )  colors then M is nor a maximum cardinality 
matching in c". 
Roof. Let K be the set of colors that color two vertices of N ( u ) .  Let 
V, = { u I u E N(u), f ( u )  E K } .  
Then IV,I=21KI and J N ( U ) \ V I I = W ( G ) - I K J .  
Hence 
I N( 
u ) I = 1 Vi I f 1 N (  u ) \ Vi I = 2 I K I + 0 (G ) - I K 1 
= w ( G ) +  I K 1. 
Since Gu is bipartite and the size of a maximum packing S in 
by Konig's theorem, the size of a maximum matching in G" is equal to 
is =s w ( G )  - 1, 
IN(u)l- Is 123 4 G ) +  IK I - ( w ( G ) -  1) 
= IKl+ 1. 

Algorithms 
365 
But IM 1 = 1 K 1 .  Hence M is not maximum. 0 
By Lemma 2 we have an augmenting path P in G" with respect to the 
matching M. Our theorems show how this augmenting path identifies (i, ;)-paths 
for color switching so that the number of colors for N ( u )  is reduced by one. 
Theorem 2. If P consists of a single edge (x, y ) where f ( x )  = i and f ( y  ) = j, then 
by switching colors along the (i, j)-path in G containing y and assigning vertex u 
the color j, we obtain a coloring for G that uses w ( G )  colors. 
Proof. It suffices to show that the (i,j)-path in G containing y does not contain 
x. Since (x, y )  kZ E(G), an (i,j)-path joining x to y must contain at least two 
intermediate vertices. Since (x, y )  $Z M, none of the intermediate vertices is in 
N ( u ) .  But this implies that the cycle formed by the (i,j)-path together with the 
two edges ( u , x )  and ( u , y )  is an odd-hole. 0 
Theorem 3. Let P = (xoylxlyz 
* * . xlyl+I 
' . . x,yo) be an augmenting path with 
respect to M with a 3 1 and suppose that P cannot be shortened by the existence of 
an edge ( x i ,  ym), 13 1 ,  m > 1 + 1 .  Then by switching colors along an (i, j)-path we 
can obtain a different coloring of G \ { u }  with a corresponding matching M '  and 
augmenting path P' such that P' is shorter than P. 
A constructive proof of this theorem is given in [6]. Here we will just show the 
color switches that we require without justifying that they are valid. 
Three types of switches are required as shown in Figs. 1 , 2  and 3. In each case 
the figure gives the relevant part of Go with matching edges indicated by heavy 
lines. 
Fig. 1 is for a = 1. It can be shown that there does not exist an (i,j)-path 
joining xo and y ,  and an (i, k)-path joining x I  and yo. It there is no (i,j)-path 
joining xu and yl, then by switching colors along an (i,j)-path containing y l  and 
revising the matching accordingly, we obtain the augmenting path consisting of 
the single edge (yo, xl). 
Fig. 1. 

366 
W.-L. Hsu, G.L. Nemhauser 
Figs. 2 and 3 are for a > 1. The vertex coloring on P is given by f ( x o )  = j, 
f ( y o )  = k and  XI) = f ( y r )  = irr 1 sz I S a. In Fig. 2 it is assumed that there exists t, 
1 g t S a, such that ( y I , x l + l ) E  E ( c o ) .  It can be shown that the ( i l ,  il+l)-path 
containing ( y l ,  y I c l )  contains neither xI nor x,+~. Thus by switching colors along 
this (it, I+l)-path and revising the matching accordingly, we obtain the shorter 
augmenting path through x,-~ 
y , ~ ~ + ~  
yI +2- 
W 
Yt+2 it+2 
i t r 1  Xt+1 
Yt.1 
it 
4-1 
it @ 
xt-1 
x t  
Yt 
it.1 
Fig. 2. 
Fig. 3. 
In the final case, as shown in Fig. 3, it is assumed that Vt, 1 S 1 G a, 
(y,, x ~ + ~ )  
E E ( G )  so that the switch shown in Fig. 2 is not possible; furthermore, it 
is assumed that there is an (il,j)-path 0 from y r  through x 1  and Xo so that setting 
f ( y , )  = j as in Fig. 1 is also not permissible. Then it can be shown that the colors 
can be switched as follows: f(Xo) = f ( y l )  = i2, f ( y 2 )  = j, f ( x z )  = il, and switch 
colors on the (il,j)-path Q. The new matching yields an augmenting path 
(x2y3 . . x,yo) that has four fewer edges than P. 
The inductive application of these color changes ultimately yields an augment- 
ing path of length one so that Theorem 2 can be used to color u. The running 
time of the algorithm is determined by 
(1) the number of iterations, which is O(n); 
(2) finding an augmenting path in the complement graph of a neighbor of a 
vertex, which can be done in O(n2') time, see [5]; 
(3) shortening an augmenting path, which is done by testing for the existence 
of certain (i,j)-paths in G", which can be done in O ( n 2 )  time; the number of 
shortening is at most O(n). 

Algorithms 
367 
At each iteration we might have to do both (2) and (3), which can be bounded 
by O(n’). Hence the entire algorithm is bounded by O(n4). 
Appendix 
To find an appropriate partition of the vertices of HI in the case of A, # 0, our 
algorithm uses the procedure PART(A, H, K )  where A is an independent set of 
K ;  H = ( VH ; E H )  and K = ( VK ; EK) are bipartite graphs such that VH = V K ,  
EH C EK and the vertex set of H can be partitioned into V1 and V2 
such that all 
edges of H have one end in V1 and the other in Vz, and A C Vl. Furthermore, 
Vl is an independent set in K. The procedure PART will make a correct 
bipartite partion of the vertex set of H and output V1 (the LHS of H). 
procedure PART(A, H, K): 
begin 
1 
2 
3 
I=1; 
V, t { u  E VH 1 there is an even length path in H leading from v to some 
Q +a list of components of H which have not been partitioned; 
while I# 0 do 
u €A}; 
begin 
4 
I = O ;  
5 
6 
for each component B in Q do 
begin 
then do 
begin 
if there exists an edge (v, x )  in K connecting v E V1 to x E B 
comment the vertex x must be placed on the RHS of H ;  
comment it is easy to determine a partition of a connected 
bipartite graph according to whether the length of a 
path between two vertices is even or odd; 
7 
delete B from Q; 
8 
9 
arrange the vertex set of B such that x is on the RHS; 
if (LHS of B )  # 0 then do 
begin 
10 
11 
f t l ;  
V1+ VI U (LHS of B ) ;  
end 
end 

368 
W.- L. Hsu, G. 
L. Nemhauser 
else comment restore this component to Q for future considera- 
tion; 
end 
comment ‘ I  = 0 indicates that V, has not been augmented in this loop; 
end 
12 
13 
K ’ t t h e  subgraph of K induced on U Q; 
Make an arbitrary bipartite partition of K’; 
14 
Vi + Vi U (LHS of K‘); 
end 
The correctness of the algorithm can be argued as follows. In line I we have 
that A C V, and VI is an independent set in K. Each time VI is augmented in 
line 10, the LHS of B is independent of the old V, since otherwise there cannot 
exist a correct partition. In line 14 no vertex of K’ is adjacent to any vertex of the 
old V,. Hence the final V, is an independent set in K. 
Let m be the initial size of Q. Then we have to execute line 6 through line 11 
at most m(m + 1)/2 times. Therefore, this algorithm is polynomially bounded. 
References 
\I] V. Chvdtai. On certain polytopes associated with graphs, J. Comb. Theory, Ser. B. 18 (1972) 
[2] D.R. Fulkerson. On the perfect graph theorem, in: T.C. Hu and S.P. Robinson, eds., 
[3] R. Giles and L.E. Trotter, On stable set polyhedra for K,,3-free graphs, J. Comb. Theory, Ser. B 
(41 M. Grotschel, L. Lovasz and A. Schrijver, The ellipsoid method and its consequences in 
[S] J.E. Hopcroft and R.M. Karp, An nS’* algorithm for maximum matching in bipartite graphs, 
161 W.-L. Hsu, How to color claw-free perfect graphs, Ann. Discrete Math. 11 (1981) 189-197. 
171 W.-L. Hsu. Efficient algorithms for some packing and covering problems on graphs, Ph.D. 
Dissertation, School of Operations Research and Industrial Engineering (Cornell University, 
Ithaca, New York. 1980). 
181 W.-L. Hsu and G.L. Nemhauser, A polynomial algorithm for the minimum weighted clique 
cover problem on claw-free perfect graphs, Discrete Math. 38 (1982) 65-71. 
[Y] W.-L. Hsu and G.L. Nemhauser. Algorithms for minimum colorings by cliques and maximum 
cliques on claw-free perfect graphs, Discrete Math. 37 (1981) 181-191. 
1101 A.V. Karzanov, Determining the maximal Row in a network by the method of preflow, Soviet 
Math. Dokl. 15 (1974) 434-437. 
[ 111 L.G. Khachian, A polynomial algorithm in linear programming, Soviet Math. Dokl. 20 (1979) 
13S154. 
Mathematical Programming (Academic Press, New York, 1973). 
31 (1981) 313-326. 
combinatorial optimization, Combinatorica 1 (1981) 169-197. 
SIAM J. Comput. 2 (1973) 225-231. 
19 1-194 

Algorithms 
369 
(I21 G.J. 
Minty, On maximal independent sets of vertices in claw-free graphs, J. Comb. Theory, Ser. 
[13] K.R. Parthasarathy and G. Ravindra, The strong perfect graph conjecture is true for K,,,-free 
[14] N. Sbihi, Algorithmes de recherche d'un stable de cardinalitt maximum dans un graphe sans 
1151 I. Holyer, The NP-completeness of some edge-partition problems, SIAM J. Comput. 10 (1981) 
B 28 (1980) 284-304. 
graphs, J. Comb. Theory, Ser. B 21 (1976) 212-223. 
ttoile, Discrete Math. 29 (1980) 53-76. 
7 13-7 17. 

This Page Intentionally Left Blank

