Mechanical Engineering Series 
Frederick F. Ling 
Editor- in- Chief 

Mechanical Engineering Series 
J. Angeles, Fundamentals of Robotic Mechanical Systems: 
Theory, Methods, and Algorithms, 3rd ed. 
P. Basu, C. Kefa, and L. Jestin, Boilers and Burners: Design and Theory 
J.M. Berthelot, Composite Materials: 
Mechanical Behavior and Structural Analysis 
I.J. Busch-Vishniac, Electromechanical Sensors and Actuators 
J. Chakrabarty, Applied Plasticity 
K.K. Choi and N.H. Kim, Structural Sensitivity Analysis and Optimization 1: 
Linear Systems 
K.K. Choi and N.H. Kim, Structural Sensitivity Analysis and Optimization 2: 
Nonlinear Systems and Applications 
G. Chryssolouris, Manufacturing Systems 
G. Chryssolouris, Laser Machining: Theory and Practice 
V.N. Constantinescu, Laminar Viscous Flow 
G.A. Costello, Theory of Wire Rope, 2nd Ed. 
K. Czolczynski, Rotordynamics of Gas-Lubricated Journal Bearing Systems 
M.S. Darlow, Balancing of High-Speed Machinery 
W. R. DeVries, Analysis of Material Removal Processes 
J.F. Doyle, Nonlinear Analysis of Thin-Walled Structures: Statics, 
Dynamics, and StabiUty 
J.F. Doyle, Wave Propagation in Structures: 
Spectral Analysis Using Fast Discrete Fourier Transforms, 2nd ed. 
P. A. Engel, Structural Analysis of Printed Circuit Board Systems 
A.C. Fischer-Cripps, Introduction to Contact Mechanics 
A.C. Fischer-Cripps, Nanoindentations, 2nd ed. 
J. Garcia de Jalon and E. Bayo, Kinematic and Dynamic Simulation of 
Multibody Systems: The Real-Time Challenge 
W.K. Gawronski, Advanced Structural Dynamics and Active Control of 
(continued after index) 

Jorge Angeles 
Fundamentals of Robotic 
Mechanical Systems 
Theory, Methods, and Algorithms 
Third Edition 
^ Spri 
ringer 

Jorge Angeles 
Department of Mechanical Engineering 
and Center for Intelligent Machines 
McGill University 
Montreal, Quebec, Canada 
Editor-in-Chief 
Frederick F. Ling 
Earnest F. Gloyna Regents Chair Emeritus in Engineering 
Department of Mechanical Engineering 
The University of Texas at Austin 
Austin, TX 78712-1063, USA 
And 
Distinguished William Howard Hart 
Professor Emeritus 
Department of Mechanical Engineering 
Aeronautical Engineering and Mechanics 
Rensselaer Polytechnic Institute 
Troy, NY 12180-3590, USA 
Fundamentals of Robotic Mechanical Systems: Theory, Methods, and Algorithms, 3'^ Edition 
Library of Congress Control Number: 2006927795 
ISBN 0-387-29412-0 
e-ISBN 0-387-34580-9 
ISBN 978-0-387-29412-4 
Printed on acid-free paper. 
Â© 2007 Springer Science+Business Media, LLC 
All rights reserved. This work may not be translated or copied in whole or in part without 
the written permission of the publisher (Springer Science+Business Media, LLC, 233 Spring 
Street, New York, NY 10013, USA), except for brief excerpts in connection with reviews or 
scholarly analysis. Use in connection with any form of information storage and retrieval, 
electronic adaptation, computer software, or by similar or dissimilar methodology now 
know or hereafter developed is forbidden. 
The use in this publication of trade names, trademarks, service marks and similar terms, 
even if they are not identified as such, is not to be taken as an expression of opinion as to 
whether or not they are subject to proprietary rights. 
9 8 7 6 5 4 3 2 1 
springer.com 

To Anne-Marie, who has given me 
not only her love, but also her precious time, 
without which this book would not have been possible. 

Mechanical Engineering Series 
Frederick F. Ling 
Editor-in-Chief 
The Mechanical Engineering Series features graduate texts and research monographs to 
address the need for information in contemporary mechanical engineering, including 
areas of concentration of applied mechanics, biomechanics, computational mechanics, 
dynamical systems and control, energetics, mechanics of materials, processing, produc-
tion systems, thermal science, and tribology. 
Advisory Board/Series Editors 
Applied Mechanics 
Biomechanics 
Computational Mechanics 
Dynamic Systems and Control/ 
Mechatronics 
Energetics 
Mechanics of Materials 
Processing 
Production Systems 
Thermal Science 
Tribology 
F.A. Leckie 
University of California, 
Santa Barbara 
D. Gross 
Technical University of Darmstadt 
V.C. Mow 
Columbia University 
H.T. Yang 
University of California, 
Santa Barbara 
D. Bryant 
University of Texas at Austin 
J.R. Welty 
University of Oregon, Eugene 
I. Firmie 
University of California, Berkeley 
K.K. Wang 
Cornell University 
G.-A. Klutke 
Texas A&M University 
A.E. Bergles 
Rensselaer Polytechnic Institute 
W.O. Winer 
Georgia Institute of Technology 

Series Preface 
Mechanical engineering, and engineering discipline born of the needs of the indus-
trial revolution, is once again asked to do its substantial share in the call for indus-
trial renewal. The general call is urgent as we face profound issues of productivity 
and competitiveness that require engineering solutions, among others. The Me-
chanical Engineering Series is a series featuring graduate texts and research mono-
graphs intended to address the need for information in contemporary areas of me-
chanical engineering. 
The series is conceived as a comprehensive one that covers a broad range of 
concentrations important to mechanical engineering graduate education and re-
search. We are fortunate to have a distinguished roster of consulting editors, each 
an expert in one of the areas of concentration. The names of the consulting editors 
are listed on page vi of this volume. The areas of concentration are applied me-
chanics, biomechanics, computational mechanics, dynamic systems and control, 
energetics, mechanics of materials, processing, thermal science, and tribology. 

Contents 
Preface to the Third Edition 
xv 
Preface to the First Edition 
xix 
1 An Overview of Robotic Mechanical Systems 
1 
1.1 
Introduction 
1 
1.2 
The General Architecture of Robotic Mechanical Systems . . . . 
3 
1.2.1 
Types of Robots by Function 
6 
1.2.2 
Types of Robots by Size 
7 
1.2.3 
Types of Robots by Application 
7 
1.3 
Manipulators 
7 
1.3.1 
Robotic Arms 
9 
1.3.2 
Robotic Hands 
10 
1.4 
Motion Generators 
12 
1.4.1 
Parallel Robots 
12 
1.4.2 
SCARA Systems 
16 
1.5 
Locomotors 
17 
1.5.1 
Legged Robots 
17 
1.5.2 
Wheeled Robots 
19 
1.6 
Swimming Robots 
22 
1.7 
Flying Robots 
23 
1.8 
Exercises 
24 
2 Mathematical Background 
27 
2.1 
Preamble 
27 
2.2 
Linear Transformations 
28 
2.3 Rigid-Body Rotations 
33 
2.3.1 
The Cross-Product Matrix 
36 
2.3.2 
The Rotation Matrix 
38 
2.3.3 
The Linear Invariants of a 3 x 3 Matrix 
42 
2.3.4 
The Linear Invariants of a Rotation 
43 
2.3.5 
Examples 
45 
2.3.6 
The Euler-Rodrigues Parameters 
51 
2.4 
Composition of Reflections and Rotations 
54 

Contents 
2.5 
Coordinate Transformations and Homogeneous Coordinates . . . 
56 
2.5.1 
Coordinate Transformations Between Frames 
with a Common Origin 
56 
2.5.2 
Coordinate Transformation with Origin Shift 
60 
2.5.3 
Homogeneous Coordinates 
62 
2.6 
Similarity Transformations 
65 
2.7 Invariance Concepts 
71 
2.7.1 
Applications to Redundant Sensing 
75 
2.8 Exercises 
79 
Fundamentals of Rigid-Body Mechanics 
89 
3.1 
Introduction 
89 
3.2 
General Rigid-Body Motion and Its Associated Screw 
89 
3.2.1 
The Screw of a Rigid-Body Motion 
93 
3.2.2 
The Pliicker Coordinates of a Line 
95 
3.2.3 
The Pose of a Rigid Body 
98 
3.3 
Rotation of a Rigid Body About a Fixed Point 
102 
3.4 
General Instantaneous Motion of a Rigid Body 
103 
3.4.1 
The Instant Screw of a Rigid-Body Motion 
104 
3.4.2 
The Twist of a Rigid Body 
107 
3.5 
Acceleration Analysis of Rigid-Body Motions 
110 
3.6 
Rigid-Body Motion Referred to Moving Coordinate Axes 
112 
3.7 
Static Analysis of Rigid Bodies 
114 
3.8 
Dynamics of Rigid Bodies 
118 
3.9 
Exercises 
122 
Geometry of Decoupled Serial Robots 
129 
4.1 Introduction 
129 
4.2 
The Denavit-Hartenberg Notation 
129 
4.3 The Geometric Model of Six-Revolute Manipulators 
138 
4.4 
The Inverse Displacement Analysis of Decoupled Manipulators . 141 
4.4.1 
The Positioning Problem 
142 
4.4.2 
The Orientation Problem 
157 
4.5 Exercises 
162 
Kinetostatics of Serial Robots 
167 
5.1 
Introduction 
167 
5.2 
Velocity Analysis of Serial Manipulators 
168 
5.3 
Jacobian Evaluation 
175 
5.3.1 
Evaluation of Submatrix A 
175 
5.3.2 
Evaluation of Submatrix B 
178 
5.4 
Singularity Analysis of Decoupled Manipulators 
180 
5.4.1 
Manipulator Workspace 
182 
5.5 
Acceleration Analysis of Serial Manipulators 
186 
5.6 
Static Analysis of Serial Manipulators 
190 
5.7 
Planar Manipulators 
192 

Contents 
xi 
5.7.1 
Displacement Analysis 
193 
5.7.2 
Velocity Analysis 
195 
5.7.3 
Acceleration Analysis 
198 
5.7.4 
Static Analysis 
199 
5.8 
Kinetostatic Performance Indices 
201 
5.8.1 
Positioning Manipulators 
207 
5.8.2 
Orienting Manipulators 
210 
5.8.3 
Positioning and Orienting Manipulators 
211 
5.8.4 
Computation of the Characteristic Length: Applications 
to Performance Evaluation 
218 
5.9 
Exercises 
227 
6 Trajectory Planning: Pick-and-Place Operations 
233 
6.1 
Introduction 
233 
6.2 
Background on PPO 
234 
6.3 
Polynomial Interpolation 
236 
6.3.1 
A 3-4-5 Interpolating Polynomial 
236 
6.3.2 
A 4-5-6-7 Interpolating Polynomial 
240 
6.4 
Cycloidal Motion 
243 
6.5 
Trajectories with Via Poses 
245 
6.6 
Synthesis of PPO Using Cubic Splines 
246 
6.7 
Exercises 
252 
7 Dynamics of Serial Robotic Manipulators 
257 
7.1 Introduction 
257 
7.2 
Inverse vs. Forward Dynamics 
257 
7.3 
Fundamentals of Multibody System Dynamics 
259 
7.3.1 
On Nomenclature and Basic Definitions 
259 
7.3.2 
The Euler-Lagrange Equations of Serial 
Manipulators 
260 
7.3.3 
Kane's Equations 
. 268 
7.4 
Recursive Inverse Dynamics 
269 
7.4.1 
Kinematics Computations: Outward Recursions 
269 
7.4.2 
Dynamics Computations: Inward Recursions 
275 
7.5 
The Natural Orthogonal Complement in Robot Dynamics . . . . 280 
7.5.1 
Derivation of Constraint Equations and 
Twist-Shape Relations 
285 
7.5.2 
Noninertial Base Link 
288 
7.6 
Manipulator Forward Dynamics 
289 
7.6.1 
Planar Manipulators 
293 
7.6.2 
Algorithm Complexity 
306 
7.6.3 
Simulation 
310 
7.7 Incorporation of Gravity Into the Dynamics Equations 
312 
7.8 
The Modeling of Dissipative Forces 
313 
7.9 
Exercises 
316 

xii 
Contents 
8 Special Topics in Rigid-Body Kinematics 
323 
8.1 
Introduction 
323 
8.2 
Computation of Angular Velocity from Point-Velocity Data . . . 324 
8.2.1 
A Robust Formulation 
330 
8.3 
Computation of Angular Acceleration from Point-Acceleration 
Data 
331 
8.3.1 
A Robust Formulation 
337 
8.4 
Exercises 
339 
9 Geometry of General Serial Robots 
343 
9.1 
Introduction 
343 
9.2 
The IDP of General Six-Revolute Manipulators 
344 
9.2.1 
Preliminaries 
345 
9.2.2 
Derivation of the Fundamental Closure Equations 
. . . . 349 
9.3 
The Univariate-Polynomial Approach 
357 
9.3.1 
The Raghavan-Roth Procedure 
357 
9.3.2 
The Li-Woernle-Hiller Procedure 
364 
9.4 
The Bivariate-Equation Approach 
367 
9.4.1 
Numerical Conditioning of the Solutions 
369 
9.5 
Implementation of the Solution Method 
370 
9.6 
Computation of the R,emaining Joint Angles 
371 
9.6.1 
The Raghavan-Roth Procedure 
372 
9.6.2 
The Li-Woernle-Hiller Procedure 
373 
9.6.3 
The Bivariate-Equation Approach 
374 
9.7 
Examples 
375 
9.8 
Exercises 
384 
10 Kinematics of Alternative Robotic Mechanical Systems 
387 
10.1 Introduction 
387 
10.2 Kinematics of Parallel Manipulators 
388 
10.2.1 Velocity and Acceleration Analyses of Parallel 
Manipulators 
401 
10.3 Multifingered Hands 
408 
10.4 Walking Machines 
413 
10.5 Rolling Robots 
416 
10.5.1 Robots with Conventional Wheels 
417 
10.5.2 Robots with Omnidirectional Wheels 
422 
10.6 Exercises 
426 
11 Trajectory Planning: Continuous-Path Operations 
429 
11.1 Introduction 
429 
11.2 Curve Geometry 
430 
11.3 Parametric Path Representation 
435 
11.4 Parametric Splines in Trajectory Planning 
449 
11.5 Continuous-Path Tracking 
454 
11.6 Exercises 
463 

Contents 
xiii 
12 Dynamics of Complex Robotic Mechanical Systems 
469 
12.1 Introduction 
469 
12.2 Classification of Robotic Mechanical Systems with Regard to Dy-
namics 
470 
12.3 The Structure of the Dynamics Models of Holonomic Systems . . 471 
12.4 Dynamics of Parallel Manipulators 
474 
12.5 Dynamics of Rolling Robots 
484 
12.5.1 Robots with Conventional Wheels 
485 
12.5.2 Robots with Omnidirectional Wheels 
493 
12.6 Exercises 
502 
A Kinematics of Rotations: A Summary 
507 
B Numerical Equation-Solving 
513 
B.l The Overdetermined Linear Case 
514 
B.1.1 The Numerical Solution of an Overdetermined 
System of Linear Equations 
515 
B.2 The Underdetermined Linear Case 
519 
B.2.1 The Numerical Solution of an Underdetermined 
System of Linear Equations 
520 
B.3 Nonlinear-Equation Solving: The Determined Case 
521 
B.3.1 The Newton-Raphson Method 
522 
B.4 Overdetermined Nonlinear Systems of Equations 
524 
B.4.1 The Newton-Gauss Method 
525 
B.4.2 Convergence Criterion 
525 
References 
529 
Index 
543 

Preface to the Third 
Edition 
The broad area of robotic mechanical systems continues developing at an impres-
sive pace. The Third Edition of Fundamentals of Robotic Mechanical Systems 
does not claim to give a comprehensive account of developments up-to-date. 
The book still aims at establishing the fundamentals of a multidiscipline that 
is nowadays more active than it was in 2002, the year of publication of the 
Second Edition. In doing this, however, I have tried to give an account of cur-
rent trends and to include references to a representative sample of developments 
up to 2005. An invaluable source on the state of the art is the International 
Conference on Robotics and Automation (ICRA), one of the best attended and 
most respectable conferences on the subject. I have thus given, in Chapter 1, 
an account of the pertinent topics and trends reported in the Proceedings of 
ICRA 2005. 
Among the most remarkable trends, I can cite: the intensive research recorded 
in medical applications of robotics, which include surgery and rehabilitation; 
micro-robots, which are intimately related to medical applications; and hu-
manoids. On the downside, space apphcations showed a stagnation in the last 
five years, probably due to the emerging security applications. 
In producing the Third Edition, I undertook an in-depth revision of Chap-
ters 4 and 8 of the Second Edition, which appeared to be disproportionately 
long. In this vein, I split each of these chapters into two, which led to 12 chap-
ters in the current edition. Moreover, I took the opportunity to thoroughly 
revise the first part of old Chapter 8, which is now included in Chapter 9. In 
fact, I looked, in the Second Edition, for inaccuracies or ambiguities that needed 
rectification. This work led to an in-depth revision of text and developments in 
various chapters, besides new exercises. 
A feature of the Third Edition is an accompanying CD that includes various 
items: code intended to help the reader better understand the most cumber-
some derivations, and to provide useful tools when working out the exercises or 
simply to assist the curious reader in exploring alternative examples or alterna-
tive methods; animations; and film. An important feature of the code provided 
is that it allows for either symbolic manipulations, using Maple, or numerical 
computations, using Matlab. The rough estimates of the solutions to systems of 

xvi 
Preface to the Third Edition 
bivariate equations, arising in various chapters, but most intensively in Chap-
ter 9, is facilitated by the inclusion of a Matlab graphic user interface. Further 
refinements of these estimates are implemented by means of a Newton-Gauss 
least-square approximation to an overdetermined system of nonlinear equations, 
as implemented in Matlab. 
The excellent work done by Dr. Kourosh Etemadi Zanganeh, Canmet (Ne-
pean, Ontario, Canada), was instrumental in completing the Second Edition. 
This work comprises the development of algorithms and code for the solution of 
the inverse displacement problem of serial robots with architectures that prevent 
a decoupling of the positioning from the orientation problems. The material in 
Chapter 9 is largely based on that work. 
I would like to thank all those who provided valuable advice in the Sec-
ond Edition: Profs. Carlos Lopez-Cajiin, Universidad Autonoma de Queretaro 
(Mexico), and J. Jesus Cervantes-Sanchez, Universidad de Guanajuato (Mex-
ico) , pointed out many inconsistencies in the first edition; Dr. Zheng Liu, Cana-
dian Space Agency, St .-Hubert (Quebec, Canada), who is teaching a course 
based on the first six chapters of the book at McGill University, pointed out 
mistakes and gave valuable suggestions for improving the readability of the 
book. In the Third Edition, further suggestions received from Dr. Liu were 
incorporated. Additionally, the valuable suggestions received from Prof. Pierre 
Larochelle, Florida Institute of Technology, were also incorporated. Needless to 
say, the feedback received from students throughout some 20 years of using this 
material in the classroom, is highly acknowledged. 
Not the least, I am planning to port the C-code RVS, developed on Silicon 
Graphics' IRIXâa dialect of UNIXâin the nineties, into Windows. The code 
should be available on the book website in the fall 2006. RVS, introduced already 
in the First Edition, is the software system I have used at McGill University's 
Centre for Intelligent Machines to visualize robot motions in projects on design, 
control and motion-planning. 
Chapter 1 has undergone a thorough facelift, besides an in-depth revision 
to reflect the state of the art. In this light, I included new photographs on: a 
modern industrial robot of the serial type; parallel robots; affordable Mekanum 
wheels; legged robots; and an underwater robot. For the magnificent new pho-
tos, absent in the first two editions, I am indebted to: ABB Robotics; Prof. 
CM. Gosselin, Universite Laval; Kornylak Corporation; and Prof. G. Dudek, 
McGill University. For the magnificent animation of space robots, included in 
the accompanying CD, I am indebted to the Canadian Space Agency and MDA, 
the Brampton, Ontario-based manufacturer of Canadarm and Canadarm2. 
Since there is always room for improvement, I welcome suggestions from the 
readership, to the address below. Updates on the book will be posted at 
www.cim.mcgill.ca/~rmsl 
The Solutions Manual has been expanded to include more solutions of sam-
pled problems. By the same token, the number of exercises has been expanded 
as well. Moreover, the exercises have now been placed more appropriatedly, at 

Preface to the Third Edition 
xvii 
the end of each chapter. The manual is typeset in I^TE^ with Autocad drawings; 
it is available from the publisher upon request. 
In closing, I would like to thank Dr. Svetlana Ostrovskaya, who assisted me 
not only with the editing of the whole book, but also with the excellent tech-
nical work behind the many changes in Chapters 4 and 9. Waseem A. Khan, 
a Ph.D. candidate at McGill University, is to be thanked for the excellent ad-
ditional drawings required by the third edition, besides some coding, while Dr. 
Stephane Caro, a postdoctoral fellow, provided expertise in Matlab coding. 
Montreal, June 2006 
Jorge Angeles 
angeles@cim.mcgill.ca 

Preface to the First Edition 
No todos los pensamientos son algorttmicos. 
âMario Bunge^ 
The beginnings of modern robotics can be traced back to the late sixties with 
the advent of the microprocessor, which made possible the computer control 
of a multiaxial manipulator. Since those days, robotics has evolved from a 
technology developed around this class of manipulators for the replaying of a 
preprogrammed task to a multidiscipline encompassing many branches of science 
and engineering. Research areas such as computer vision, artificial intelligence, 
and speech recognition play key roles in the development and implementation 
of robotics; these are, in turn, multidisciplines supported by computer science, 
electronics, and control, at their very foundations. Thus we see that robotics 
covers a rather broad spectrum of knowledge, the scope of this book being only 
a narrow band of this spectrum, as outlined below. 
Contemporary robotics aims at the design, control, and implementation of 
systems capable of performing a task defined at a high level, in a language re-
sembling those used by humans to communicate among themselves. Moreover, 
robotic systems can take on forms of all kinds, ranging from the most intangible, 
such as interpreting images collected by a space sound, to the most concrete, 
such as cutting tissue in a surgical operation. We can, therefore, notice that 
motion is not essential to a robotic system, for this system is meant to replace 
humans in many of their activities, moving being but one of them. However, 
since robots evolved from early programmable manipulators, one tends to iden-
tify robots with motion and manipulation. Certainly, robots may rely on a 
mechanical system to perform their intended tasks. When this is the case, we 
can speak of robotic mechanical systems, which are the subject of this book. 
These tasks, in turn, can be of a most varied nature, mainly involving motions 
such as manipulation, but they can also involve locomotion. Moreover, manipu-
lation can be as simple as displacing objects from a belt conveyor to a magazine. 
Not all thinking processes are algorithmicâtranslation 
of the authorâpersonal commu-
nication during the Symposium 
on the Brain-Mind 
Problem. 
A Tribute to Professor 
Mario 
Bunge on His 75th Birthday, Montreal, September 30, 1994. 

XX 
Preface to the First 
Edition 
On the other hand, manipulation can also be as complex as displacing these ob-
jects while observing constraints on both motion and force, e.g., when cutting 
live tissue of vital organs. We can, thus, distinguish between plain manipulation 
and dextrous manipulation. Furthermore, manipulation can involve locomotion 
as well. 
The task of a robotic mechanical system is, hence, intimately related to mo-
tion control, which warrants a detailed study of mechanical systems as elements 
of a robotic system. The aim of this book can, therefore, be stated as establish-
ing the foundations on which the design, control, and implementation of robotic 
mechanical systems are based. 
The book evolved from sets of lecture notes developed at McGill University 
over the last twelve years, while I was teaching a two-semester sequence of 
courses on robotic mechanical systems. For this reason, the book comprises two 
partsâan introductory and an intermediate part on robotic mechanical systems. 
Advanced topics, such as redundant manipulators, manipulators with flexible 
links and joints, and force control, are omitted. The feedback control of robotic 
mechanical systems is also omitted, although the book refers the reader, when 
appropriate, to the specialized literature. An aim of the book is to serve as a 
textbook in a one-year robotics course; another aim is to serve as a reference to 
the practicing engineer. 
The book assumes some familiarity with the mathematics taught in any 
engineering or science curriculum in the first two years of college. Familiarity 
with elementary mechanics is helpful, but not essential, for the elements of this 
science needed to understand the mechanics of robotic systems are covered in 
the first three chapters, thereby making the book self-contained. These three 
chapters, moreover, are meant to introduce the reader to the notation and the 
basics of mathematics and rigid-body mechanics needed in the study of the 
systems at hand. The material covered in the same chapters can thus serve 
as reading material for a course on the mathematics of robotics, intended for 
sophomore students of science and engineering, prior to a more formal course 
on robotics. 
The first chapter is intended to give the reader an overview of the subject 
matter and to highlight the major issues in the realm of robotic mechanical 
systems. Chapter 2 is devoted to notation, nomenclature, and the basics of 
linear transformations to understand best the essence of rigid-body kinematics, 
an area that is covered in great detail throughout the book. A unique feature 
of this chapter is the discussion of the hand-eye calibration problem: Many a 
paper has been written in an attempt to solve this fundamental problem, al-
ways leading to a cumbersome solution that invokes nonlinear-equation solving, 
a task that invariably calls for an iterative procedure; moreover, within each 
iteration, a singular-value decomposition, itself iterative as well, is required. In 
Chapter 2, a novel approach is introduced, which resorts to invariant proper-
ties of rotations and leads to a direct solution, involving straightforward matrix 
and vector multiplications. Chapter 3 reviews, in turn, the basic theorems of 
rigid-body kinetostatics and dynamics. The viewpoint here represents a major 
departure from most existing books on robotic manipulators: proper orthogonal 

Preface to the First Edition 
xxi 
matrices can be regarded as coordinate transformations indeed, but they can 
also be regarded as representations, once a coordinate frame has been selected, 
of rigid-body rotations. I adopt the latter viewpoint, and hence, fundamental 
concepts are explained in terms of their invariant properties, i.e., properties that 
are independent of the coordinate frame adopted. Hence, matrices are used first 
and foremost to represent the physical motions undergone by rigid bodies and 
systems thereof; they are to be interpreted as such when studying the basics 
of rigid-body mechanics in this chapter. Chapter 4 is the first chapter entirely 
devoted to robotic mechanical systems, properly speaking. This chapter covers 
extensively the kinematics of robotic manipulators of the serial type. However, 
as far as displacement analysis is concerned, the chapter limits itself to the 
simplest robotic manipulators, namely, those with a decoupled architecture, i.e., 
those that can be decomposed into a regional architecture for the positioning of 
one point of their end-effector (EE), and a local architecture for the orientation of 
their EE. In this chapter, the notation of Denavit and Hartenberg is introduced 
and applied consistently throughout the book. Jacobian matrices, workspaces, 
singularities, and kinetostatic performance indices are concepts studied in this 
chapter. A novel algorithm is included for the determination of the workspace 
boundary of positioning manipulators. Furthermore, Chapter 5 is devoted to 
the topic of trajectory planning, while limiting its scope to problems suitable 
to a first course on robotics; this chapter thus focuses on pick-and-place oper-
ations. Chapter 6, moreover, introduces the dynamics of robotic manipulators 
of the serial type, while discussing extensively the recursive Newton-Euler algo-
rithm and laying the foundations of multibody dynamics, with an introduction 
to the Euler-Lagrange formulation. The latter is used to derive the general al-
gebraic structure of the mathematical models of the systems under study, thus 
completing the introductory part of the book. 
The intermediate part comprises four chapters. Chapter 7 is devoted to 
the increasingly important problem of determining the angular velocity and 
the angular acceleration of a rigid body, when the velocity and acceleration of 
a set of its points are known. Moreover, given the intermediate level of the 
chapter, only the theoretical aspects of the problem are studied, and hence, 
perfect measurements of point position, velocity, and acceleration are assumed, 
thereby laying the foundations for the study of the same problems in the presence 
of noisy measurements. This problem is finding applications in the control of 
parallel manipulators, which is the reason why it is included here. If time 
constraints so dictate, this chapter can be omitted, for it is not needed in the 
balance of the book. 
The formulation of the inverse kinematics of the most general robotic manip-
ulator of the serial type, leading to a univariate polynomial of the 16th degree, 
not discussed in previous books on robotics, is included in Chapter 8. Like-
wise, the direct kinematics of the platform manipulator popularly known as the 
Stewart platform, a.k.a. the Stewart-Gough platform, leading to a 16th-degree 
monovariate polynomial, is also given due attention in this chapter. Moreover, 
an alternative approach to the monovariate-polynomial solution of the two fore-
going problems, that is aimed at solving them semigraphically, is introduced in 

xxii 
Preface to the First Edition 
this chapter. With this approach, the underlying multivariate algebraic system 
of equations is reduced to a system of two nonlinear bivariate equations that 
are trigonometric rather than polynomial. Each of these two equations, then, 
leads to a contour in the plane of the two variables, the desired solutions being 
found as the coordinates of the intersections of the two contours. 
Discussed in Chapter 9 is the problem of trajectory planning as pertaining to 
continuous paths, which calls for some concepts of differential geometry, namely, 
the Frenet-Serret equations relating the tangent, normal, and binormal vectors 
of a smooth curve to their rates of change with respect to the arc length. The 
chapter relies on cubic parametric splines for the synthesis of the generated 
trajectories in joint space, starting from their descriptions in Cartesian space. 
Finally, Chapter 10 completes the discussion initiated in Chapter 6, with an 
outline of the dynamics of parallel manipulators and rolling robots. Here, a 
multibody dynamics approach is introduced, as in the foregoing chapter, that 
eases the formulation of the underlying mathematical models. 
Two appendices are included: Appendix A summarizes a series of facts from 
the kinematics of rotations, that are available elsewhere, with the purpose of 
rendering the book self-contained; Appendix B is devoted to the numerical 
solution of over- and underdetermined linear algebraic systems, its purpose being 
to guide the reader to the existing robust techniques for the computation of 
least-square and minimum-norm solutions. The book concludes with a set of 
problems, along with a list of references, for all ten chapters. 
On Notation 
The important issue of notation is given due attention. In figuring out the 
notation, I have adopted what I call the C^ norm. Under this norm, the notation 
should be 
1. Comprehensive, 
2. Concise, and 
3. Consistent. 
Within this norm, I have used boldface fonts to indicate vectors and matrices, 
with uppercases reserved for matrices and lowercases for vectors. In compliance 
with the invariant approach adopted at the outset, I do not regard vectors solely 
as arrays, but as geometric or mechanical objects. Regarding such objects as 
arrays is necessary only when it is required to perform operations with them 
for a specific purpose. An essential feature of vectors in a discussion is their 
dimension, which is indicated with a single number, as opposed to the convention 
whereby vectors are regarded as matrix arrays of numbers; in this convention, 
the dimension has to be indicated with two numbers, one for the number of 
columns, and one for the number of rows; in the case of vectors, the latter 
is always one, and hence, need not be mentioned. Additionally, calligraphic 
literals are reserved for sets of points or of other objects. Since variables are 

Preface to the First Edition 
xxlli 
defined every time that they are introduced, and the same variable is used in 
the book to denote different concepts in different contexts, a list of symbols is 
not included. 
How to Use the Book 
The book can be used as a reference or as a text for the teaching of the mechanics 
of robots to an audience that ranges from junior undergraduates to doctoral 
students. In an introductory course, the instructor may have to make choices 
regarding what material to skip, given that the duration of a regular semester 
does not allow to cover all that is included in the first six chapters. Topics 
that can be skipped, if time so dictates, are the discussions, in Chapter 4, of 
workspaces and performance indices, and the section on simulation in Chapter 6. 
Under strict time constraints, the whole Chapter 5 can be skipped, but then, 
the instructor will have to refrain from assigning problems or projects that 
include calculating the inverse dynamics of a robot performing pick-and-place 
operations. None of these has been included in Section 6 of the Exercises. 
If sections of Chapters 4 and 5 have been omitted in a first course, it is highly 
advisable to include them in a second course, prior to discussing the chapters 
included in the intermediate part of the book. 
Acknowledgements 
For the technical support received during the writing of this book, I am indebted 
to many people: First and foremost, Eric Martin and Ferhan Bulca, Ph.D. can-
didates under my cosupervision, are deeply thanked for their invaluable help and 
unlimited patience in the editing of the manuscript and the professional work 
displayed in the production of the drawings. With regard to this task, Dr. Max 
A. Gonzalez-Palacios, currently Assistant Professor of Mechanical Engineering 
at Universidad Iberoamericana at Leon, Mexico, is due special recognition for 
the high standards he set while working on his Ph.D. at McGill University. 
My colleagues Ken J. Waldron, Clement Gosselin, and Jean-Pierre Merlet con-
tributed with constructive criticism. Dr. Andres Kecskemethy proofread major 
parts of the manuscript during his sabbatical leave at McGill University. In 
doing this. Dr. Kecskemethy corrected a few derivations that were flawed. Dis-
cussions on geometry and analysis held with Dr. Manfred Husty, of Leoben 
University, in Austria, also a sabbaticant at McGill University, were extremely 
fruitful in clearing up many issues in Chapters 2 and 3. An early version of 
the manuscript was deeply scrutinized by Meyer Nahon, now Associate Profes-
sor at the University of Victoria, when he was completing his Ph.D. at McGill 
University. Discussions with Farzam Ranjbaran, a Ph.D. candidate at McGill 
University, on kinetostatic performance indices, helped clarify many concepts 
around this issue. Dr. Kourosh Etemadi Zanganeh contributed with ideas for a 
more effective discussion of the parametric representation of paths in Chapter 9 

xxiv 
Preface to the First Edition 
and with some of the examples in Chapters 4 and 8 during his work at McGill 
University as a Ph.D. student. The material supplied by Clement Gosselin on 
trajectory planning helped me start the writing of Chapter 5. All individuals 
and institutions who contributed with graphical material are given due credit 
in the book. Here, they are all deeply acknowledged. 
A turning point in writing this manuscript was the academic year 1991-
1992, during which I could achieve substantial progress while on sabbatical 
leave at the Technical University of Munich under an Alexander von Humboldt 
Research Award. Deep gratitude is expressed here to both the AvH Foundation 
and Prof. Friedrich Pfeiffer, Director of the Institute B for Mechanics and my 
host in Munich. Likewise, Prof. Manfred Broy, of the Computer Science Insti-
tute at the Technical University of Munich, is herewith acknowledged for having 
given me access to his Unix network when the need arose. The intellectual envi-
ronment at the Technical University of Munich was a source of encouragement 
and motivation to pursue the writing of the book. 
Moreover, financial support from NSERC^ and Quebec's FCAR, ^ in the 
form of research and strategic grants, are duly acknowledged. IRIS,^ a net-
work of Canadian centers of excellence, supported this work indirectly through 
project grants in the areas of robot design and robot control. An invaluable tool 
in developing material for the book proved to be RVS, the McGill Robot Visu-
alization System, developed in the framework of an NSERC Strategic Grant on 
robot design, and the two IRIS project grants mentioned above. RVS was de-
veloped by John Darcovich, a Software Engineer at McGill University for about 
four years, and now at CAE Electronics Ltd., of Saint-Laurent, Quebec. While 
RVS is user-friendly and available upon request, no technical support is offered. 
For further details on RVS, the reader is invited to look at the home page of 
the McGill University Centre for Intelligent Machines: 
http://www.cim.mcgill.ca/~rvs 
Furthermore, Lenore Reismann, a professional technical editor based in Red-
wood City, California, proofread parts of the manuscript and edited its language 
with great care. Lenore's professional help is herewith highly acknowledged. 
Dr. Riidiger Gebauer, mathematics editor at Springer-Verlag New York, is grate-
fully acknowledged for his encouragement in pursuing this project. Springer-
Verlag's Dr. Thomas von Foerster is likewise acknowledged for the care with 
which he undertook the production of the book, while his colleague Steven 
Pisano, for his invaluable help in the copyediting of the final draft. Steven and 
his staff not only took care of the fine points of the typesetting, but also picked 
up a few technical flaws in that draft. Last, but not least, may I acknowledge the 
excellent facilities and research environment provided by the Centre for Intelli-
gent Machines, the Department of Mechanical Engineering of McGill University, 
and McGill University as a whole, which were instrumental in completing this 
rather lengthy project. 
Montreal, December 1996 
Jorge Angeles 
^Natural Sciences and Engineering Research Council, of Cemada. 
^Fonds pour la formation 
de chercheurs ei I'aide a la recherche. 
^Institute for Robotics and Intelligent Systems. 

Chapter 1 
An Overview of Robotic 
Mechanical Systems 
1.1 
Introduction 
In defining the scope of our subject, we have to establish the genealogy of robotic 
mechanical systems. These are, obviously, a subclass of the much broader class 
of mechanical systems. Mechanical systems, in turn, constitute a subset of the 
more general concept of dynamic systems. In the end, we must have an idea of 
what, in general, a system is. 
The Concise Oxford Dictionary defines system as a "complex whole, set of 
connected things or parts, organized body of material or immaterial things," 
whereas the Random House College Dictionary defines the same as "an assem-
blage or combination of things or parts forming a complex or unitary whole." 
Le Petit Robert, in turn, defines system as "Ensemble possedant une structure, 
constituant un tout organique," which can be loosely translated as "A struc-
tured assemblage constituting an organic whole." In the foregoing definitions, 
we note that the underlying idea is that of a set of elements interacting as a 
whole. 
On the other hand, a dynamic system is a subset of the set of systems. For 
our purposes, we can dispense with a rigorous definition of this concept. Suffice 
it to say that, to qualify as dynamic, a system should be endowed with three 
elements, namely, a state, an input, and an output, in addition to a rule of tran-
sition from one current state to a future one. Moreover, the state is a functional 
of the input and a function of a previous state. In this concept, then, the idea of 
order is important, and can be taken into account by properly associating each 
state value with time. The state at every instant is a functional, as opposed to 
a function, of the input, which is characteristic of dynamic systems. This means 
that the state of a dynamic system at a certain instant is determined not only 

2 
1. An Overview of Robotic Mechanical Systems 
by the value of the input at that instant, but also by the past history of the 
inputâbesides, of course, its initial state. By virtue of this property, dynamic 
systems are said to have memory. 
On the contrary, systems whose state at a given instant is only a function 
of the input at the current time are static, and said to have no memory. Addi-
tionally, since the state of a dynamic system is a result of all the past history 
of the input, the future values of this having no influence on the state, dynamic 
systems are said to be nonanticipative or causal. By the same token, systems 
whose state is the result of future values of the input are said to be anticipative 
or noncausal. In fact, we need not worry about the latter, and hence, all systems 
we will study will be assumed to be causal. 
Obviously, a mechanical system is a system composed of mechanical ele-
ments. If this system complies with the definition of dynamic system, then we 
end up with a dynamic mechanical system. For brevity, we will refer to such 
systems as mechanical systems, the dynamic property being implicit throughout 
the book. Mechanical systems of this type are those that occur whenever the 
inertia of their elements is accounted for. Static mechanical systems are those 
in which inertia is neglected. Moreover, the elements constituting a mechanical 
system are rigid and deformable solids, compressible and incompressible fluids, 
and inviscid and viscous fluids. 
Prom the foregoing discussion, then, it is apparent that mechanical systems 
can be constituted either by lumped-parameter or by distributed-parameter 
elements. The former reduce to particles; rigid bodies; massless, conservative 
springs; and massless, nonconservative dashpots. The latter appear whenever 
bodies are modeled as continuous media. In this book, we will focus on lumped-
parameter mechanical systems. In mechanical systems, the driving forces and 
moments exerted by the actuators and the environment play the role of the 
input, the set of signals picked up by the sensors that of the output. Finally, the 
rules of transition are dictated by the laws of nature, especially from mechanics, 
electromagnetics and biology. 
Furthermore, a mechanical system can be either natural or engineered^, 
the latter being the subject of our study. Engineered mechanical systems can 
be either controlled or uncontrolled. Most engineering systems are controlled 
mechanical systems, and hence, we will focus on these. Moreover, a controlled 
mechanical system may be robotic or nonrobotic. The latter are systems supplied 
with primitive controllers, mostly analog, such as thermostats, servovalves, etc. 
Robotic mechanical systems, in turn, can be programmable, such as most current 
industrial robots, or intelligent, as discussed below. Programmable mechanical 
systems obey motion commands either stored in a memory device or generated 
on-line. In either case, they need sensors, such as joint encoders, accelerometers, 
and dynamometers. 
Intelligent robots or, more broadly speaking, intelligent machines, are yet to 
be demonstrated, but have become the focus of intensive research. If intelligent 
'in the previous editions we had used the term "maji-made" instead. To avoid a gender-
biased terminology, we could have used "artificial," but this term, while meaning "human-
made," also has a negative connotation: "lacking in natural or spontaneous quality." 

1.2 The General Architecture of Robotic Mechanical Systems 
3 
machines are ever feasible, they will depend highly on a sophisticated sensory 
system and the associated hardware and software for the processing of the infor-
mation supplied by the sensors. The processed information would then be sup-
plied to the actuators in charge of producing the desired robot motion. Contrary 
to programmable robots, whose operation is limited to structured environments, 
intelligent machines should be capable of reacting to unpredictable changes in an 
unstructured environment. Thus, intelligent machines should be supplied with 
decision-making capabilities aimed at mimicking the natural decision-making 
process of living organisms. This is the reason why such systems are termed 
intelligent in the first place. Thus, intelligent machines are expected to per-
ceive their environment and draw conclusions based on this perception. What 
is supposed to make these systems intelligent is their capability of perceiving, 
which involves a certain element of subjectivity. By far, the most complex of 
perception tasks, both in humans and machines, is visual (Levine, 1985; Horn, 
1986). 
In summary, then, an intelligent machine is expected to (i) perceive the 
environment; (M) reason about this perception; (Hi) make decisions based on 
this reasoning; and (iv) act according to a plan specified at a very high level. 
What the latter means is that the motions undergone by the machine are decided 
upon based on instructions similar to those given to a human being, like bring 
me a glass of water without spilling the water. 
Whether intelligent machines with all the above features will be one day 
possible or not is still a subject of discussion, sometimes at a philosophical 
level. Penrose (1994) wrote a refutal to the claim that intelligent machines are 
possible. 
A genealogy of mechanical systems, including robotic ones, is given in Fig. 1.1. 
In that figure, we have drawn a dashed line between mechanical systems and 
other systems, both engineered and natural. This line is intended to emphasize 
the interaction of mechanical systems with electrical, thermal, and other sys-
tems, including the human system, which is present in telemanipulators, to be 
discussed below. 
1.2 
The General Architecture of Robotic Me-
chanical Systems 
From Section 1.1, then, a robotic mechanical system is composed of a few sub-
systems, namely, (i) a mechanical subsystem composed in turn of both rigid and 
deformable bodies, although the systems we will study here are composed only 
of the former; (ii) a sensing subsystem; (Hi) an actuation subsystem; {iv) a con-
troller; and (v) an information-processing subsystem. Additionally, these sub-
systems communicate among themselves via interfaces, whose function consists 
basically of decoding the transmitted information from one medium to another. 

1. An Overview of Robotic Mechanical Systems 
PROGRAMMABLE 
ROBOTS 
â¢ Manipulators 
â¢ Automatic Guided Vehicles 
TELEMANIPUUTORS 
â¢ Surface Manipulators 
â¢ Space Manipulators 
â¢ Underwater Manipulators 
INTElllGENT MACHINES 
â¢ Manipulators 
â¢ Rolling Robots 
â¢ Dextrous Hands 
â¢ Walking Mocliines 
Figure 1.1: A genealogy of robotic mechanical systems 
Figure 1.2 illustrates the general architecture^ of a typical robotic mechani-
cal system. The input here is a prescribed task, which is defined either on the 
spot or off-line. The former case is essential for a machine to be called intelli-
gent, while the latter is present in programmable machines. Thus, tasks would 
be described to intelligent machines by a software system based on techniques 
of artificial intelligence (AI). This system would replace the human being in 
the decision-making process. Programmable robots require human intervention 
either for the coding of preprogrammed tasks at a very low level or for tele-
manipulation. A very low level of programming means that the motions of the 
machine are specified as a sequence of either joint motions or Cartesian coordi-
nates associated with landmark points of that specific body performing the task 
at hand. The output of a robotic mechanical system is the actual task, which is 
monitored by the sensors. The sensors, in turn, transmit task information in the 
form of feedback signals, to be compared with the prescribed task. The errors 
between the prescribed and the actual task are then fed back into the controller, 
which then synthesizes the necessary corrective signals. These are, in turn, fed 
^In Ch. 4 we introduce the concept of robotic architecture, to indicate tlie geometry of 
ttie underlying mectianical system. We refer here to the "general architecture" of the whole 
robotic system, to distinguish between the two concepts. 

1.2 The General Architecture of Robotic Mechanical Systems 
5 
back into the actuators, which then drive the mechanical system through the 
required task, thereby closing the loop. The problem of robot control has re-
ceived extensive attention in the literature, and will not be pursued here. The 
interested reader is referred to the excellent works on the subject, e.g., those of 
Samson, Le Borgne, and Espiau (1991); Khalil and Dombre (2002); and Spong, 
Hutchinson and Vidyasagar (2006). Of special relevance to robot control is the 
subject of nonlinear control at large, a pioneer here being Isidori (1989). 
task 
description 
ROBOT 
MODEL 
SJV 
^ 
' s 
^ 
error 
signals 
AJV 
CONTROLLER 
1 
INFORMATION 
PROCESSING 
UNIT 
p&rs 
C&JS 
driving 
actions 
SENSORS 
ROBOT 
actual 
task 
SJV: 
synthesized joint variables (angles and torques) 
P&FS: position and force signals 
C&JS: Cartesian and joint signals 
AJV: 
actual joint variables (angles and torques) 
Figure 1.2: General architecture of a robotic mechanical system 
Robotic mechanical systems with a human being in their control loop are 
called telemanipulators. Thus, a telemanipulator is a robotic mechanical system 
in which the task is controlled by a human, possibly aided by sophisticated 
sensors and display units. The human operator replaces the ROBOT MODEL block 
in the diagram of Fig. 1.2, produces the task description, becomes a part of 
the sensory system, and plays a major role in the INFORMATION PROCESSING 
UNIT block. Based on the information displayed, the operator makes decisions 
about corrections in order to accomplish the prescribed task. Shown in Fig. 1.3 
is a telemanipulator designed for space applications, namely, the Canadarm2, 
along with DEXTRE, the Special-Purpose Dextrous Manipulator (SPDM), both 
mounted on the Mobile Servicing System (MSB), a module of the International 
Space Station. 
Moreover, a detailed view of DEXTRE is shown in Fig. 1.4. 
In the manipulators of these two figures, the human operator is an astronaut 
who commands and monitors the motions of the robot from inside the EVA 
(extravehicular activity) workstation. The number of controlled axes of each 
of these manipulators being larger than six, both are termed redundant. The 
challenge here is that the mapping from task coordinates to joint motions is 
not unique, and hence, among the infinitely many joint trajectories that the 
operator has at his or her disposal for a given task, an on-board processor must 
evaluate the best one according to a performance criterion. 

1. An Overview of Robotic MechaiiicaJ Systems 
Figure 1.3: Canadaini2 and DEXTKE (courtesy of the Canadian Space Agencj*) 
1.2.1 
Types of Robots by Function 
When the first edition was written, in the early nineties, tlic classification of 
robots was rather straightforward, for there were mainly two kinds: serial and 
parallel. Nowadays a robot classification is a daunting 1;ask, by virtue of the 
intense activity displayed in the areas of robotics research, robot design, innova-
tion and applications. For example, a look at the Table of Contents of the Pro-
ceedings of the 2005 IEEE International Conference on Robotics and Automa-
tion will reveal a vast spectrum of robots currently working on the shopfloor, in 
the operating room, in rehabilitation centers, and even at homo. In attempting a 
classification of robots, the most comprehensive criterion would be by function. 
Wo thus have a t,ontativo, but by no means comprehensive, classilication: 
â¢ Manipulators: robotic arms and hands; 
â¢ motion generators: flight simulators; SCARA (Selective-Compliance As-
sembly Robot Arm); and moving platforms at large; 
â¢ locomotors, a.k.a. mobile robots: legged and wheeled robots; 
â¢ swimming robots; and 
â¢ flying robots. 
We expand below on these robot types. 

1.3 Manipulators 
Figure 1.4: DEXTRE, the Special-Purpose Dextrous Manipulator (courtesy of 
the Canadian Space Agency) 
1.2.2 
Types of Robots by Size 
The most common type of robots under this criterion is macro-robots, or those 
whose dimensions are measured in meter. These are robots witli a reach of 
typically a couple of meters. Shown in Fig. 1.5 is a heavy-duty robot, rR.B-7600, 
manufactured by ABB Robotics, with a reach of 2.800 m and a load-carrying 
capacity of 3,332 N, This robot finds applications mainly in the manipulation 
of heavy parts in the automobile industry. 
Micro-robots bear dimensions allowing them a reach of a fraction of a mm. 
For example, the robot reported by Sun et al. (2005) for MEMS (micro-elec-
tromechanical systems) assembly, features a maximum reach of 100 ^m in each 
of two orthogonal directions and one of 50 fjjn in a direction orthogonal to these 
two. 
1.2.3 
Types of Robots by Application 
Eflbot applications have widespread as mneh as robot architectures. Current 
applications span the classical industrial robots for arc-welding, for example, 
on to material-handling, surveillance, surgical operations, rehabilitation and 
entertainment. 
1.3 
Manipulators 
Of all robotic mechanical systems, manipulators deserve special attention for 
various reasons. One is that, in their simplest form, as robotic arms, they 
occur most frequently in industry. Another is that the architecture of robotic 
arms constitutes the simplest of all robotic architectures, and hence, appear as 

1. An Overview of Robotic Mechanical Systems 
r 
1: 
mlr 
Figure 1.5; The IRB-7600, a heavy-duty robotic arm with a serial architecture 
(courtesy of ABB robotics) 
constituents of other, moro complex robotic metihanical systems, as will become 
apparent in later chapters. A manipulator, in general, is a mechanical system 
aimed at manipulating objeets. Manipulating, in turn, means to move something 
with one's hands, as the word derives from the Latin manus, moaning hand. The 
basic idea behind the foregoing concept is that hands are among the organs that 
the human brain can control mechanically with the highest accuracy, as the work 
of an artist like Pieasso, of an accomplished guitar player, or of a surgeon can 
attest. 
A manipulator is thus any device that helps a human operator perform a 
manipulating task. Although manipulators have existed ever since man created 
the first tool, only very recently, namely, by the end of World War II, have 
manipulators developed to the extent that they are now capable of actually 
mimicking motions of the human arm, and of the human hand, for that matter. 
In fact, during "WWII, the need arose for manipulating probe tubes contain-
ing radioactive substances. This led to the first six-degree-of-freedom (DOF) 
manipulators. 
Shortly thereafter, the need for manufacturing workpieces with high accu-
racy arose in the aircraft industry, whidi led to the first numerically-controlled 

1.3 Manipulators 
9 
(NC) machine tools. The synthesis of the six-DOF manipulator and the NC ma-
chine tool produced what became the robotic manipulator. Thus, the essential 
difference between the early manipulator and the evolved robotic manipulator is 
the "robotic" qualifier, which came into the picture in the late sixties. A robotic 
manipulator is to be distinguished from the early manipulator by its capabil-
ity of lending itself to computer control. While the early manipulator needed 
the presence of a human in the loop, to have a master manipulator perform a 
gesture, the robotic manipulator can be programmed once and for all to repeat 
the same task forever. Programmable manipulators have existed for close to 
30 years, since the advent of the microprocessor. Indeed, the microprocessor, 
introduced in 1976 by Intel, allowed a human master to teach the manipula-
tor by actually driving the manipulator itself, or a replica thereof, through a 
desired task, while recording all motions undergone by the master. Thus, the 
manipulator would later repeat the identical task by mere playback. However, 
the capabilities of industrial robots are fully exploited only if the manipulator is 
programmed with software, rather than actually driving it through its task tra-
jectory, which many a time, e.g., in car-body spot-welding, requires separating 
the robot from the production line for more than a week. One of the objectives 
of this book is to develop tools for the programming of robotic manipulators. 
Nevertheless, the capabilities offered by robotic mechanical systems go well 
beyond the mere playback of preprogrammed tasks. Current research aims at 
providing robotic systems with software and hardware that will allow them to 
make decisions on the spot and learn while performing a task. The implementa-
tion of such systems calls for task-planning techniques that fall beyond the scope 
of this book and, hence, will not be treated here. For a glimpse of such tech-
niques, the reader is referred to the work of Latombe (1991) and the references 
therein. 
1.3.1 
Robotic Arms 
Robotic manipulators first appeared as mechanical systems resembling the hu-
man arm. Robotic arms are thus constituted by a structure consisting of struc-
turally robust links coupled by either rotational or translating joints, the former 
being called revolutes, the latter prismatic joints. Moreover, these structures 
are a concatenation of links, thereby forming an open kinematic chain, with 
each link coupled to a predecessor and a successor, except for the two end links, 
which are coupled only to either a predecessor or to a successor, but not to both. 
The robot displayed in Fig. 1.5 is an example of a robotic arm with strong links. 
Because of the serial nature of the coupling of links in this type of manipula-
tor, even if they are supplied with structurally robust links, their load-carrying 
capacity and their stiffness is too low when compared with the other multiaxis 
machines, such as NC machine tools. Obviously, a low stiffness implies a low 
positioning accuracy. 

10 
1. An Overview of Robotic Mechanical Systems 
1.3.2 
Robotic Hands 
Besides the hand, other mechanical subsystems constituting the human manip-
ulation system are the arm and the forearm. Moreover, the shoulder, coupling 
the arm with the torso, can be regarded as a spherical joint, i.e., the concatena-
tion of three revolute joints with intersecting axes. Furthermore, the arm and 
the forearm are coupled via the elbow, with the forearm and the hand finally 
being coupled by the wrist. Frequently, the wrist is modeled as a spherical joint 
as well, while the elbow is modeled as a simple revolute joint. Robotic mechan-
ical systems mimicking the motions of the arm and the forearm constitute the 
manipulators discussed above. Here we outline more sophisticated manipula-
tion systems that aim at producing the motions of the human hand, i.e., robotic 
hands. These systems are designed to perform manipulation tasks, a distinction 
being made between simple manipulation and dextrous manipulation. What the 
former means is the simplest form, in which the fingers play a minor role, namely, 
by serving as simple static structures that keep an object rigidly attached with 
respect to the palm of the handâwhen the palm is regarded as a rigid body. As 
opposed to simple manipulation, dextrous manipulation involves a controlled 
motion of the grasped object with respect to the palm. Simple manipulation 
can be achieved with the aid of a manipulator and a gripper, and need not be 
further discussed here. The discussion here is about dextrous manipulation. 
In dextrous manipulation, the grasped object is required to move with re-
spect to the palm of the grasping hand. This kind of manipulation appears in 
performing tasks that require high levels of accuracy, like handwriting or cutting 
tissue with a scalpel. Usually, grasping hands are multifingered, although some 
grasping devices exist that are constituted by a simple, open, highly redundant 
kinematic chain (Pettinato and Stephanou, 1989). The kinematics of grasping is 
discussed in Chapter 10. The basic kinematic structure of a multifingered hand 
consists of a palm, which plays the role of the base of a simple manipulator, 
and a set of fingers. Thus, kinematically speaking, a multifingered hand has a 
tree topology, i.e., it entails a common rigid body, the palm, and a set of jointed 
bodies emanating from the palm. Upon grasping an object with all the fin-
gers, the chain becomes closed, with multiple loops. Moreover, the architecture 
of the fingers is that of a simple manipulator, consisting of a numberâtwo to 
fourâof revolute-coupled links playing the role of phalanges. However, unlike 
manipulators of the serial type, whose joints are all independently actuated, 
those of a mechanical finger are not and, in many instances, are driven by one 
single master actuator, the remaining joints acting as slaves. Many versions of 
multifingered hands exist: Stanford/JPL; Utah/MIT; TU Munich; Karlsruhe; 
Bologna; Leuven; Milan; Belgrade; and University of Toronto, among others. 
Of these, the Utah/MIT Hand (Jacobsen et al., 1984; 1986) is commercially 
available. This hand carried four fingers, one of which is opposed to the other 
three and hence, plays the role of the human thumb. Each finger consists, in 
turn, of four phalanges coupled by revolute joints; each of these is driven by 
two tendons that can deliver force only when in tension, each being actuated 
independently. The TU Munich Hand, shown in Fig. 1.6(a), is designed with 

1.3 Manipulators 
11 
Figure 1,6: Two instances of robotic hands: (a) The four-fingered hydraulically 
actuated TU Munich Hand (courtesy of Prof. F. Pfeiffer); and (b) University 
Laval's, three-fingored SARAH (courtesy of Prof. C. Gossdin) 
four identical fingers laid out symmetrically on a hand palrn. This hand is 
hydraulically actuated, and provided with a very high payload-to-weight ratio. 
Indeed, each finger weighs only 1.470 N, but can exert a force of up to 30 N. A 
three-fingered hand with 12 degrees of freedom and six actuators, SARAH, was 
designed at Universite Laval's Laboratoire de Robotique. This hand, illustrated 
in Pig. 1.6(b), is twice as big as the human hand, weighs 88.2 N, and can hold 
a 686-N load (Laliberte et al., 2002; Lalibcrt(5 and Gosselin, 2003) 
We outline below some problems and research trends in the area of dextrous 
hands, A key issue here is the programming of the motions of the fingers, whicJi 
is a much more complicated task than the programming of a six-axis manip-
ulator. In this regard, Liu et al. (1989) introduced a task-analysis approach 
intended to program robotic hand motions at a higher level. These researchers 
used a heuristic, knowledge-based approach. From an analysis of the various 
modes of grasping, they concluded that the requirements for gra.'iping tasks are 
(i) stability, (n) manipulability, (ui) torquability, and (iv) radial rotatability. 
Stability is defined as a measure of the tendency of an object to return to its 
original position after disturbances. Manipulability, as understood in this con-
text, is the ability to impart motion to the object while keeping the fingers in 
contact with the object. Torquability, or tangential rotatability, is the ability to 

12 
1. An Overview of Robotic Mechanical Systems 
rotate the long axis of an objectâhere the authors must assume that the ma-
nipulated objects are convex and can be approximated by three-axis ellipsoids, 
thereby distinguishing between a long and a short axisâwith a minimum force, 
for a prescribed amount of torque. Finally, radial rotatability is the ability to 
rotate the grasped object about its long axis with minimum torque about the 
axis. 
Furthermore, Allen et al. (1989) introduced an integrated system of both 
hardware and software for dextrous manipulation. The system integrates force 
and position sensors with control commands for both the arm and the hand. To 
demonstrate the effectiveness of their system, the authors implemented a task 
consisting of removing a light bulb from its socket. Rus (1992) proposed, in 
turn, a paradigm allowing the high-level, task-oriented manipulation control of 
planar hands. 
While the technological aspects of dextrous manipulation are highly ad-
vanced, theoretical aspects are still under research in this area. An extensive 
literature survey, with 405 references on the subject of manipulation, was given 
by Reynaerts (1995). But that was the state of the art more than 10 years ago. 
In the 2005 IEEE International Conference on Robotics and Automation, there 
were five sessions on grasping, robotic-finger design, robotic hands and dextrous 
manipulation. An interesting approach to the programming of dextrous hands, 
programming by demonstration, was reported by Ekvall and Kragic (2005), un-
der which the robotic hand is taught how to reproduce the grasping sequences 
of a human hand. The use of vision as a means of grasp-planning was also 
reported in this conference (Gockel et al., 2005). 
1.4 
Motion Generators 
Under this heading we include robotic systems designed to produce a certain 
class of motions for various purposes, ranging from manipulation tasks, e.g., 
the positioning of a camera for surveillance, to the orientation of a surgeon's 
scalpel, on to moving platforms for pilot training, as in flight simulators, or for 
entertainment, to give people the realism of an earthquake or a roller-coaster, 
or simply of following a musical rhythm. Many a motion generator is supplied 
with a parallel architecture, as described below. 
1.4.1 
Parallel Robots 
Parallel robots were originally proposed to cope with the problems encountered 
with their serial counterparts (Merlet, 2006), namely, a limited load-carrying 
capacity, low accuracy, and low stiffness. This kind of robots was thus intro-
duced to withstand higher payloads with lighter links. In a parallel robot, we 
distinguish one base platform, one moving platform, and various legs or limbs. 
Each leg is, in turn, a kinematic chain of the serial type, whose end-links are the 
two platforms. Contrary to serial robots, all of whose joints are actuated, paral-
lel robots are supplied with unactuated joints, which brings about a substantial 

1.4 Motion Generators 
13 
Figure 1.7: Univcrsitc Laval's Agile Eye, a thrcc-dcgroe-of-freedom spherical 
robot with a parallel architecture (courtesy of Prof. Clement Goaaelin) 
difference between the two types. The presence of unactuated joints makes the 
analysis of parallel manipulators, in general, more complejc than that of serial 
robots. 
A paradigm of parallel manipulators is the flight simulator, consisting of six 
legs actuated by hydraulic pistons. The flight simulator with this architecture 
motivated the early work, starting in the late eighties, on parallel robots. Re-
cently, an explosion of novel designs of parallel robots has occurred, aimed at 
fast manipulation tasks. An example of these robots, departing from the archi-
tecture of flight simulators, is Universite Laval's Agile Eye, depicted in Fig, 1.7. 
This robot is designed with one fixed base and one moving platform, that carries 
a small camera. Base and platform are coupled by means of three identical legs, 
each composed of two links and three revolute joints^. Moreover, the axes of 
all nine revolutes intersect at one single point, the center of the mechanical sys-
tem. For this reason, all robot links move, with respect to the base, under pure 
rotation, with the robot center remaining fixed. AH three direct-drive motors 
^It can be appreciated in Fig. 1.7 thaL tho proximal links are made up of i.vro curved beams, 
each with an axis in the form of one-quarter of a circle. These two beams are rigidly fastened, 
with iiheir planes forming a 90Â° dihedral angle. 

14 
1. An Overview ofBobotic Mechanical Systems 
are mounted on the base, and actuate the proximal links of the logs. This robot 
can reportedly produce angular velocities of the camera as higlj as 1,000Â°/s and 
angular accelerations of 20,000Â°/s^. 
Figuro 1.8: FlexPicker, a realization of EPFL's Delta Robot (courtesy of ABB 
Robotics) 
Other parallel robots have been designed for fast assembly operations, e.g., 
the Delta robot (Clavel, 1988), developed at the Lausanne Federal Polytechnic 
Institute (EPFL). The Delta robot was designed to produce pure translations 
of its end-platform in 3D space. An instance of this robot, the FlexPicker, is 
shown in Fig. 1.8. This robot is designed with three identical legs, hanging from 
the coiling, which is the robot base. Each leg carries one proximal link, coupled 
to the base by a revolute, which is actuated by the leg-motor. Furthermore, 
tliis link is coupled to the cnd-platc by means of two revolutes and one novel 
kinematic pair, the Il-pair, which is nothing but a parallelogram four-bar link-
age, the n-pair being located between the two revolutes. It is noteworthy that 
the FlexPicker is supplied with one additional actuated joint, at the interface 
between the moving platform of the original Delta Robot and the gripper, ap-
pearing in the figure as a cylindrical piece. This revolute is actuated from the 
base by moans of a transmission mechanism stemming from the center of the 
base in the figure. 

1.4 Motion Generators 
15 
(a) 
(b) 
Figure 1.9: A sample of parallel manipulators: (a) The UTIAS Trussarm (cour-
tesy of Prof. P. C. Hughes); (b) the Merlet left hand (courtesy of Dr. J.-P. 
Merlet); and (c) the Hay ward shoulder module (courtesy of Prof. V. Hayward) 
Other instances of parallel robots can be cited: Hexa (Pierrot et al., 1991), 
developed at Universite de Montpellier, as a six-degree-of-freedom extension of 
Clavel's Delta Robot; Star (Herve and Sparacino, 1992), developed at Ecole 
Centrale of Paris; the Trussarm, developed at the University of Toronto Insti-
tute of Aerospace Studies (UTIAS), shown in Fig. 1.9(a) (Hughes et al., 1991); 
INRIA's main gauche, or left hand, developed by Merlet (2006)'* and shown 
in Fig. 1.9(b), which is used as an aid to another robot, possibly of the serial 
'*INRIA is Prance's Institut 
National de Recherche en Informatigue 
et en 
Automatique, 
the left hand, and other parallel robots having been developed at INRIA's center at Sophia-
Antipolis, Prance. 

16 
1. An Overview of Robotic Mechanical Systems 
type, to enhance its dexterity; and McGill University's parallel manipulator, 
intended as a shoulder module for orientation tasks (Hayward, 1994), and capa-
ble of three-degree-of-freedom motions, produced by four hydraulic actuators, 
which gives the robot redundant actuationâFig. 1.9(c). 
1.4.2 
SCARA Systems 
SCARA is an acronym standing for Selective-Compliance Assembly Robot Arm, 
as coined by Hiroshi Makino (Makino and Puruya, 1980), the inventor of this new 
class of robots. The class was proposed as a means to provide motion capabilities 
to the end-effector that are required by the assembly of printed-board circuits 
and other electronic devices with a flat geometry. Motions consist of three 
independent translations and one rotation about an axis of fixed orientation, 
usually vertical. These robots have received special attention because of their 
special structure, offering an extremely high stiffness about two axes of tiltingâ 
the axes normal to the axis of rotation. The first robots of this kind appeared 
with a serial architecture, involving three revolutes and one prismatic joint, the 
latter being located either at the base or at the end-effector. These robots have 
attained impressive performance, capable of cycle times of 500 ms or lower, 
for a standard pick-and-place operation consisting of: a) upwards translation 
of 25 mm; b) horizontal translation of 300 mm, concurrently rotating through 
an angle of 180Â°; and c) downwards translation of 25 mm. The cycle is closed 
by returning to the original posture following exactly the same displacement 
program, but in the reverse order. 
Given the serial architecture of most SCARA systems, it appears that the 
cycle times are extremely difficult to cut further and the load-carrying capacity 
is equally difficult to increase. This state of affairs has motivated the emer-
gence of alternative architectures, such as parallel or hybrid (serial-parallel). 
For example, Fanuc's M410iB and ABB Robotics' IRB 660 robot feature hy-
brid SCARA architectures with long reaches, of around 3 m and payloads of 
above 2000 N. The manufacturers did this by means of parallelogram linkages 
capable of transmitting torque and motion from a common base, turning about 
a vertical axis, to two horizontal revolute joints, the fourth revolute having a 
vertical axis. Interestingly, although these robots are medium-to-heavy-duty 
SCARAs, the manufacturers bill them as "palletizing robots," with no relation 
to SCARAs. As a matter of fact, SCARAs can be regarded as generators of 
the Schonflies displacement subgroup (Bottema and Roth, 1979; Herve, 1999). 
For this reason, SCARA systems are currently referred to as Schonflies-motion 
generators. An architecture for a hybrid SCARA departing from those of the 
M410iB and the IRB 660 robots features two pairs of pan-tilt drives in series, 
each being constituted by a RII dyad, with the Il-joint having been defined in 
connection with Fig. 1.9. One innovative serial-parallel SCARA system with 
this architecture was introduced by Angeles et al. (2000). 
In yet another attempt to overcome the natural limitations of serial SCARAs, 
parallel architectures have been proposed: H4, a four-limb Schonflies-motion 
generator developed at France's Universite de Montpellier (Company et al.. 

1.5 Locomotors 
17 
2001); the four-limb robot driven with actuated prismatic joints developed at 
Institut Frangais de Mecanique Avancee (Gogu, 2004)5 and the McGill SMG 
developed at McGill Univesity (Al-Widyan and Angeles, 2004), that features 
only two limbs. 
1.5 
Locomotors 
Under locomotors we include all robots capable of displacing themselves 011 a 
surface without any attachment to the surface. Here we distinguish two kinds 
of robots, legged and wheeled, as outlined below. 
1.5.1 
Legged Robots 
A common arcliitecturc of walking machines is the hexapod, examples of whicli 
are the Ohio State University (OSU) Hexapod (Klein et al., 1983) and the OSU 
Adaptive Suspension Vehicle (ASV) (Song and Waldron, 1989). 
A six-legged 
walking macJiine with a design that mimics the locomotion system of the Carau-
sius morosus (Graham, 1972), also known as the walking stick, was developed 
at the Technical University of Munich (Pfeiffer et al., 1995). A prototype of 
this macliine, known as the TUM Hexapod, is included in Fig. 1,10. The legs 
of the TUM Hexapod are operated under neural-network control, which gives 
them a reflex-like response when encountering obstacles: Upon sensing an ob-
stacle, the leg bounces back and tries again to move forwiird, but raising the 
foot to a higher level. Other legged robots worth mentioning as pioneers are the 
Sutherland, Sprout and Associates Hexapod (Sutherland and UHner, 1984), the 
Titan series of quadrupeds (Hirose et al., 1985) and the Odetics series of axially 
symmetric hexapods (Russell, 1983). 
Figure 1,10: A prototype of the TU Munich Hexapod (Courtesy of Prof. F. Pfeif-
fer. Reproduced with permission of TSI Enterprises, Inc.) 

18 
1. An Overview of Robotic Mechmiics] Systems 
if 
- ..mm^-^^m 
(Â»:/l-- 
.' â¢ ' . - ^ ^ 
Figure 1.11: RHEX, a aix-Ioggcd robot (Courtesy of G. Dudek, McGill Univer-
sity) 
A survey of walking machines, of a rather historical interest now, was given 
in (Todd, 1985), while a more recent comprehensive account of walking macliincs 
is available in a special isvsue of The International Journal of Robotics Research 
(Volume 9, No.2, 1990). 
Walking machines appear as the sole means of providing locomotion in highly 
iinstructiired environments. In fact, the unique adaptive suspension pTO\'ided 
by these macliiiies allows them to navigate on uneven terrain. However, walking 
machines cannot traverse every type of uneven terrain, for they are of limited 
dimensions. Hence, if terrain irregularities such as a crevasse wider than the 
maximum horizontal leg readi or a cliff of depth greater than the maximum 
vertical leg roacJi are present, then the machine is prevented from making any 
progress. This limitation, however, can be overcome by providing the machine 
with the capability of attacliing its feet to the terrain in the same way as a 
mountain climber goes up a cliff. Moreover, machine functionality is limited 
not only by the topography of the terrain, but also by the terrain constitution. 
Whereas hard rock poses no serious problem to a walking machine, muddy 
terrain can hamper its operation to the point that it may jam the machine. Still, 
imder sudi adverse conditions, walking machines offer a better maneuverability 
than other veiiicles. Recent work at McGill University^ on legged locomotion 
has led to robots with robust designs allowing them to negotiate mud and even 
ponds. A series of hoxapods, under the name RHEX, has been developed with 
these features, as shown in Fig. 1.11. The same robot is shown in Fig. 1.12 
roaming a patterned floor, to give a due on its dimensions, of about 500 mm in 
Originally led by Prof. Martin Buehler. 

1.5 Locomotors 
19 
Figure 1.12; RHEX walking on a patterned floor, to indicate its dimensions 
(Courtesy of G. Dudek, McGill University) 
length. 
Humanoids 
An important dass of leggod robots is constituted by humanoids. Pioneer work 
by Viikobratovic and Stepanenko (1972) iias led to modern bipeds exliibiting 
impressive performance. Indeed, work initiated in 1986 at Hondaled to ASIMO, 
a robotic mechanical system integrating both manipulation and locomotion in 
one single unit. 
Research in humanoids is quite intensive at the moment, with eight sessions 
on the subject during the 2005 IEEE International Conference on Robotici and 
Automation, including controls, motion-planning, design, voice-mimicry, and 
human-robot Interaction. 
1.5.2 
Wheeled Robots 
Robots in this category are systems evolved from earlier systems called auto-
matic guided vehicles, or AGVs for short. AGVs in their most primitive versions 
are four-wheeled, electrically powered vehicles that perform moving tasks with a 
certain degree of autonomy. However, these vehicles are usually limited to mo-
tions along predefined tracks that arc either railways or magnetic strips glued 
to the ground. 
The most common rolling robots use conventional wheels, i.e., wheels con-
sisting basically of a pneumatic tire moimted on a hub that rotates about an 
axle fixed to the robot platform. Thus, the operation of these machines does not 

20 
1. An Overview of Robotic Mechanic^} Systems 
(a) 
(b) 
Figure 1.13: 
(a) A sample of omnidirectional wheels, the 4202KX and tiic 
2052KX Cat-Trak Transwheel (courte^sy of Kornylak Corporation); and (b) a 
computer model of a rolling robot supplied with ODW carrying rollers at an 
acute angle with the hub axis 
differ raudi from that of conventional terrestrial vehicles. An essential difference 
between rolling robots and other robotic mechanical systems is the kinematic 
constraints between wheel and ground in the former. These constraints are of 
a type known as nonholonomic^ as discussed in detail in Chapter 12. Nonholo-
nomic constraints are kinematic relations between point velocities and angular 
vclo<:ities that cannot be integrated in the form of algebraic relations between 
translatJonal and rotational displacement variables. The outcome of this lack 
of integrability leads to a lack of a one-to-one reJationship between Cartesian 
variables and joint variables. In fact, while angular displacements read by joint 
encoders of serial manipulators determine uniquely the position and orientation 
of their end-effector, the angular displacement of the wheels of rolling machines 
do not determine the position and orientation of the vehicle body. As a matter of 
fact, the control of rolling robots bears common features with the redundancy-
resolution of manipulators of the serial tj-pe at the joint-rate level. In these 
manipulators, the number of actuated joints is greater than the dimension of 
the task space. As a consequence, the task velocity does not, determine the joint 
rates. Not surprisingly, the two types of problems have been solved using the 
same tools, namely, differential geometry and Lie algebra (De Luca and Oriolo, 
1995). 
As a means to supply rolling robots with three-dof capabilities, not found 
in conventional terrestrial vehicles, omnidirectional wheels (ODW) have been 
developed. Examples of ODW bear names such as Me.kanum wheels, Svxidish 
wheels, ilonators, or others. ODW consist of a hub with rollers on its periphery 
that roll freely about their axes, the latter being oriented at a constant angle 
with respect to the hub axis. In Fig. 1.13(a), two commercial ODW, the 4202KX 

1.5 Locomotors 
21 
Figure 1.14: QUASIMORO, a qyasiholonomic mobile robot 
and the 2052KX Cat-TVak TVanswheels'^ are shown; in Fig, 1,13(b), the com-
puter model of a rolling robot supplied with Mekanum wheels, bearing rollers 
at an acute angle with the hub axis, is depicted. Rolling robots with ODW 
arc, thus, three-dof vehicles, and hence, can translate frooly in two horizontal 
directions and rotate independently about a vertical axis. However, like their 
two-dof counterparts, three-dof rolling robots are also nonholonoraic devices, 
and thus, pose the same problems for thdr control as the former. 
Further developments in the technology of rolling robots have been reported 
that incorporate alternative types of ODWs. For example, Killough and Pin 
(1992) developed a rolling robot with what they call orthogonal hall wheels, 
consisting basically of splierical wliccls tliat can rotate about two mutually or-
thogonal axes. Borcnstcin (1993) proposed a mobile robot with four degrees 
of freedom; these wore adiieved with two chassis coupled by an extensible link, 
each cliassis being driven by two actuated conventional wheels. West and Asada 
(1995), in turn, designed a rolling robot with hall wheels, i.e., balls that act as 
omnidirectional wheels; each ball is mounted on a set of rollers, one of which 
is actuated; hence, three such wheels are necessary to fully control the vehicle. 
The unactuated rollers serve two purposes, i.e., to provide stability to the wheels 
and the vehicle, and to measure the rotation of the ball, tliereby detecting slip. 
Mobile Wheeled Pendulums 
A new class of wheeled robots has emerged since the turn of the century. This 
class, known as mobile wheeled pendulums (MWP), comprises two coaxial wheels 
and an intermediate body, the challenge being to control both the motion of 
the common wheel axis and that of the intermediate body. Interest on the 
Â®The two wheels bear synthetic rubber-coated polypropylene rollers; the larger wheel has 
a 4" diameter, with a 1" inside diameter; the smaller wheel has a 2" diameter, with a 1/2" 
inside diameter. 

22 
1. An Overview of Robotic Mechanicfd Systems 
subject was probably promoted by the US patent behind the Ginger and the 
Segway Human Transporter projects (Kamen et al., 1999), Another mobile 
inverted pendulum is known as JOE (Grasser et al., 2002). More recently, a 
new class of nonholonomic mechanical systems was found that lies somewhat 
between holonomic and nonholonomic systems; these systems were thus termed 
quasiholonomic (Oatrovskaya and Angeles, 1998). A realization of this class 
was reported by Salerno and Angeles (2004), featuring Qnasimoro, shown in 
Fig. 1.14, a quasiholonomic mobile robot intended as a service robot for para-
plegics. Quasimoro's central body is to carry food, drinks and books to the user. 
This robot also falls within the category of MWP. A feature common to this 
category, that is not encountered in other wheeled robots, is that their central 
body, which constitutes the robot platform, can rotate about the wheel axis. 
This motion should be controlled, thereby leading to a new challenging problem, 
which is the stabilization of the central body, aside the classical control problem 
due to nonholonomy. 
Figure 1.15: Aqua, an amphibious robot (Courtesy of G. Dudek/M. Jenkin on 
behalf of the Aqua Project) 
1.6 
Swimming Robots 
A novel class of robots with swimming capabilities is currently under devel-
opment in various research laboratories, with three sessions on the subject at 
the 2005 IEEE International Conference on Robotics and AutomafAon. Some 
of these robots have been designed with the morphology of fish (Yu and Wang, 
2005; Liu and Hu, 2005). One swimming robot designed with a hexapod mor-
phology, featuring six flippers in lieu of legs is Agua, developed at McGill Uni-
versity, and depicted in Figs. 1.15 and 1.16. The latter shows Aqua with its 
designer, Chris Praliacs. 

1.7 Flying B.obots 
23 
Figure 1.16: Aqua, swimming under monitoring by its designer (Courtesy of G. 
Dudek/M. Jenkin on behalf of the Aqua Project) 
1.7 
Flying Robots 
This field is becoming quite active, with some robots mimicking the morphology 
of insects, and falling into the category of micro-robots (Steltz, Wood, Avad-
hanula and Fearing, 2005); other flying robots are designed as unmanned aerial 
vehicles (UAV) (Kaanidie et al., 2005; Rongier ot al., 2005). 

24 
1. An Overview of Robotic Mechanical Systems 
1.8 
Exercises 
The exercises included below are intended to familiarize the uninitiated reader 
with the issues involved in robotics, especially in the area of robotic mechanical 
systems. A major issue, regrettably quite often overlooked, is terminology. In 
attempting to work out these exercises, the beginner should be able to better 
understand the language of robotics and realize that a common terminology is 
not yet available. Some exercises are provided as an aid to either recall or learn 
fundamental computational issues that are extremely useful in the development 
of algorithms for the analysis, simulation and control of robotic mechanical 
systems. 
1.1 List some definitions of machine, say about half a dozen, trying to cover 
the broadest timespan to date. Hint: Hartenberg and Denavit (1964) ^**^ 
a few bibliographical references. 
1.2 Try to give an answer to the question: Are intelligent machines possible? 
Express your own ideas and explore what scientists like Penrose (1994) 
think about this controversial issue. 
1.3 What is the difference among machine, mechanism, and linkage? In par-
ticular, analyze critically the definitions given by authorities, such as those 
found in the most respected dictionaries, encyclopedias, and archival doc-
uments of learned societies, e.g., the complete issue of Vol. 38, Nos. 7-10 
(2003) of Mechanism and Machine Theory on Standardization of Termi-
nology. 
1.4 What is artificial intelligence? What is fuzzy logic? Can the techniques 
of these fields be applied to robotics? 
1.5 What is mechatronics? What is the difference between mechatronics and 
robotics? Comerford (1994) and Soureshi et al. (1994) give an account on 
this technology. 
1.6 What do you understand as dexterity? The concept of dexterity is nor-
mally applied to persons. Can it be applied to animals as well? What 
about machines? 
1.7 Define the term algorithm. In this context, make a clear distinction be-
tween recursion and iteration. 
Note that, in the robotics literature, there 
is often confusion between these two terms in particular. Make sure that 
you do not make the same mistake! Again, Penrose (1994) has provided 
an extensive discussion on the nature of algorithms. 
1.8 What is the difference among terms like real-time, on-line, and run-time? 
1.9 How fast can two floating-point numbers be multiplied using a personal 
computer? What about using a UNIX workstation? a supercomputer? 
Write a piece of code to estimate this time on your computer facility. 

1.8 Exercises 
25 
1.10 Answer the foregoing question as pertaining to floating-point addition. 
1.11 What is the smallest floating-point number on your computer? Rather 
than looking for the answer in manuals, write a procedure to estimate it. 
1.12 What is the difference between procedural programming and object-oriented 
programming? In terms of programming languages, what is the difference 
between C and C-lâ1-? Rumbaugh et al. (1991) provide an introduction 
to object-oriented programming, while Stroustrup (1991) gives an intro-
duction to C-I-+. 

Chapter 2 
Mathematical Background 
2.1 
Preamble 
First and foremost, the study of motions undergone by robotic mechanical sys-
tems or, for that matter, by mechanical systems at large, requires a suitable 
motion representafton. Now, the motion of mechanical systems involves the 
motion of the particular links comprising those systems, which in this book are 
supposed to be rigid. The assumption of rigidity, although limited in scope, still 
covers a wide spectrum of applications, while providing insight into the motion 
of more complicated systems, such as those involving deformable bodies. 
The most general kind of rigid-body motion consists of both translation and 
rotation. While the study of the former is covered in elementary mechanics 
courses and is reduced to the mechanics of particles, the latter is more chal-
lenging. Indeed, point translation can be studied simply with the aid of 3-
dimensional vector calculus, while rigid-body rotations require the introduction 
of tensors, i.e., entities mapping vector spaces into vector spaces. 
Emphasis is placed on invariant concepts, i.e., items that do not change upon 
a change of coordinate frame. Examples of invariant concepts are geometric 
quantities such as distances and angles between lines. Although we may resort 
to a coordinate frame and vector algebra to compute distances and angles, and 
will represent vectors in that frame, the final result will be independent of how we 
choose that frame. The same applies to quantities whose evaluation calls for the 
introduction of tensors. Here, we must distinguish between the physical quantity 
represented by a vector or a tensor and the representation of that quantity in 
a coordinate frame using a 1-dimensional array of components in the case of 
vectors, or a 2-dimensional array in the case of tensors. It is unfortunate that 
the same word is used in English to denote a vector and its array representation 
in a given coordinate frame. Regarding tensors, the associated arrays are called 
matrices. 
By abuse of terminology, we will refer to both tensors and their 

28 
2. Mathematical 
Background 
arrays as matrices, although keeping in mind the essential conceptual differences 
involved. 
2.2 
Linear Transformations 
The physical 3-dimensional space is a particular case of a vector space. A vec-
tor space is a set of objects, called vectors, that follow certain algebraic rules. 
Throughout the book, vectors will be denoted by boldface lowercase characters, 
whereas tensors and their matrix representations will be denoted by boldface 
uppercase characters. Let v, vi, V2, V3, and w be elements of a given vector 
space V, which is defined over the real field, and let a and /3 be two elements 
of this field, i.e., a and /3 are two real numbers. Below we summarize the rules 
mentioned above: 
(i) The sum of vj and V2, denoted by vi + V2, is itself an element of V and 
is commutative, i.e., vi + vg = vg + vi; 
(M) V contains an element 0, called the zero vector of V, which, when added 
to any other element v of V, leaves it unchanged, i.e., v + 0 = v; 
(iii) The sum defined in (i) is associative, i.e., vi + (v2 + V3) = (vi +V2) -1-V3; 
(iv) For every element v of V, there exists a corresponding element, w, also 
of V, which, when added to v, produces the zero vector, i.e., v + w = 0. 
Moreover, w is represented as - v ; 
(v) The product av, or va, is also an element of V, for every v of V and every 
real a. This product is associative, i.e., a{Pv) = (a/3)v; 
(vi) If a is the real unity, then QV is identically v; 
(vii) The product defined in (v) is distributive in the sense that (a) (a + ^)v = 
av + Pv and (b) a(vi + V2) = avi + av2. 
Although vector spaces can be defined over other fields, we will deal with 
vector spaces over the real field, unless explicit reference to another field is made. 
Moreover, vector spaces can be either finite- or infinite-dimensional, but we will 
not need the latter. In geometry and elementary mechanics, the dimension of 
the vector spaces needed is usually three, but when studying multibody systems, 
an arbitrary finite dimension will be required. The concept of dimension of a 
vector space is discussed in more detail later. 
A linear transformation, represented as an operator L, of a vector space U 
into a vector space V, is a rule that assigns to every vector u of W at least one 
vector V of V, represented as v = Lu, with L endowed with two properties: 
(i) homogeneity: L(au) = av; and 

2.2 Linear Transformations 
29 
(ii) additivity: L(ui + U2) â vi + V2. 
Note that, in the foregoing definitions, no mention has been made of com-
ponents, and hence, vectors and their transformations should not be confused 
with their array representations. 
Particular types of linear transformations of the 3-dimensional Euclidean 
space that will be encountered frequently in this context are projections, reflec-
tions, and rotations. One further type of transformation, which is not linear, 
but nevertheless appears frequently in kinematics, is the one known as affine 
transformation. 
The foregoing transformations are defined below. It is nec-
essary, however, to introduce additional concepts pertaining to general linear 
transformations before expanding into these definitions. 
The range of a linear transformation L of W into V is the set of vectors v 
of V into which some vector u of W is mapped, i.e., the range of L is defined 
as the set of v â Lu, for every vector u of U. The kernel of L is the set of 
vectors ujv of U that are mapped by L into the zero vector 0 e V. It can be 
readily proven (see Exercises 2.1-2.3) that the kernel and the range of a linear 
transformation are both vector subspaces oiU and V, respectively, i.e., they are 
themselves vector spaces, but of a dimension smaller than or equal to that of 
their associated vector spaces. Moreover, the kernel of a linear transformation 
is often called the nullspace of the said transformation. 
Henceforth, the 3-dimensional Euclidean space is denoted by Â£^. Having 
chosen an origin 0 for this space, its geometry can be studied in the context 
of general vector spaces. Hence, points of Â£^ will be identified with vectors of 
the associated 3-dimensional vector space. Moreover, lines and planes passing 
through the origin are subspaces of dimensions 1 and 2, respectively, of Â£^. 
Clearly, lines and planes not passing through the origin of Â£^ are not subspaces 
but can be handled with the algebra of vector spaces, as will be shown here. 
An orthogonal projection P of Â£^ onto itself is a linear transformation of the 
said space onto a plane II passing through the origin and having a unit normal 
n, with the properties: 
p2 = P, 
P n = 0 
(2.1a) 
Any matrix with the first property above is termed idempotent. 
For n x n 
matrices, it is sometimes necessary to indicate the lowest integer I for which an 
analogous relation follows, i.e., for which P' â P. In this case, the matrix is 
said to be idempotent of degree /. 
Clearly, the projection of a position vector p, denoted by p', onto a plane 
n of unit normal n, is p itself minus the component of p along n as shown in 
Fig. 2.1, i.e., 
p' = p - n(n^p) 
(2.1b) 
where the superscript T denotes either vector or matrix transposition and n^p 
is equivalent to the usual dot product n â¢ p. 
Now, the identity matrix 1 is defined as the mapping of a vector space V 
into itself leaving every vector v of V unchanged, i.e., 
Iv = V 
(2.2) 

30 
2. Mathematical 
Background 
P 
Figure 2.1: A projection onto a plane 11 of unit normal n 
Thus, p', as given by eq.(2.1b), can be rewritten as 
p' = I p - nn'^p = (1 - nn^)p 
(2.3) 
and hence, the orthogonal projection P onto 11 can be represented as 
P = 1 - nn"^ 
(2.4) 
where the product nn'^ amounts to a 3 x 3 matrix. 
Now we turn to reflections. Here we have to take into account that reflec-
tions occur frequently accompanied by rotations, as yet to be studied. Since 
reflections are simpler to represent, we first discuss these, rotations being dis-
cussed in full detail in Section 2.3. What we shall discuss in this section is pure 
reflections, i.e., those occurring without any concomitant rotation. Thus, all re-
flections studied in this section are pure reflections, but for the sake of brevity, 
they will be referred to simply as reflections. 
A reflection R of Â£^ onto a plane 77 passing through the origin and having a 
unit normal n is a linear transformation of the said space into itself, as depicted 
in Fig. 2.2, such that a vector p is mapped by R into a vector p' given by 
p' := p â 2nn"^p = (1 â 2nn^)p 
Thus, the reflection R can be expressed as 
R = 1 - 2nn^ 
(2.5) 
From eq.(2.5) it is then apparent that a pure reflection is represented by a 
linear transformation that is symmetric and whose square equals the identity 
matrix, i.e., R^ = 1. Indeed, symmetry is apparent from the equation above; 
the second property is readily proven below: 
R^ ^ (1 - 2nn'^)(l - 2nn^) 
- 1 - 2na^ - 2xm^ + 4(nn^)(nn^) = 1 - 4nn^ -f- 4n(n'^n)n'^ 

2.2 Linear Transformations 
31 
Figure 2.2: A reflection onto a plane II of unit normal n 
which apparently reduces to 1 because n is a unit vector. Note that from the 
second property above, we find that pure reflections observe a further interesting 
property, namely, 
R - i = R 
i.e., every pure reflection equals its inverse. This result can be understood 
intuitively by noticing that, upon doubly reflecting an image using two mirrors, 
the original image is recovered. Any square matrix which equals its inverse will 
be termed self-inverse henceforth. 
Further, we take to deriving the orthogonal decomposition of a given vector 
V into two components, one along and one normal to a unit vector e. The 
component of v along e, termed here the axial component, vyâread v-parâis 
simply given as 
V|| = ee'^v 
(2.6a) 
while the corresponding normal component, vj_âread v-perpâis simply the 
difference v â V||, i.e., 
vx = V â V|| = (1 â ee'^)v 
(2.6b) 
the matrix in parentheses in the foregoing equation being rather frequent in 
kinematics. This matrix will appear when studying rotations. 
Further concepts are now recalled: The basis of a vector space V is a set of 
linearly independent vectors of V, {vj}", in terms of which any vector v of V 
can be expressed as 
V = aivi + 0:2V2 H 
h aâvâ 
(2.7) 
where the elements of the set {Â«Â«}" are all elements of the field over which V 
is defined, i.e., they are real numbers in the case at hand. The number n of 

32 
2. Mathematical 
Background 
elements in the set B = {vj}" is called the dimension of V. Note that any set 
of n linearly independent vectors of V can play the role of a basis of this space, 
but once this basis is defined, the set of real coefficients {oi}" representing a 
given vector v is unique. 
Let U and V be two vector spaces of dimensions m and n, respectively, and 
L a linear transformation of U into V, and define bases Bu and By for U and V 
as 
Bu = {nj}T, Bv^{vi}'l 
(2.8) 
Since each Lu^ is an element of V, it can be represented uniquely in terms of 
the vectors of By, namely, as 
LUj = /yVi +/2jV2 H 
\-lnjVn, 
j = l,...,m 
(2.9) 
Consequently, in order to represent the images of the m vectors of Bu, 
namely, the set {Luj}", n x m real numbers lij, for i = l , . . . , n and j â 
1,... ,m, are necessary. These real numbers are now arranged in the n x m 
array [L]^^ defined below: 
i^k = 
^11 
^12 
â¢ â¢ â¢ 
hm 
hi 
I22 
â¢ â¢ â¢ 
hm 
^T).l 
^n.2 
' * * 
*ri 
(2.10) 
The foregoing array is thus called the matrix representation of L with respect 
to Bu and By- We thus have an important definition: 
Definition 2.2.1 The jth column of the matrix representation of L with re-
spect to the bases Bu and By is composed of the n real coefficients lij of the 
representation of the image of the jth vector of Bu in terms of By. 
The notation introduced in eq.(2.10) is rather cumbersome, for it involves 
one subscript and one superscript. Moreover, each of these is subscripted. In 
practice, the bases involved are self-evident, which makes an explicit mention 
of these unnecessary. In particular, when L is a mapping of U onto itself, a 
single basis suffices to represent L in matrix form. In this case, its bracket will 
bear only a subscript, and no superscript, namely, [Ljg. Moreover, we will use, 
henceforth, the concept of basis and coordinate frame interchangeably, since one 
implies the other. 
Two different bases are unavoidable when the two spaces under study are 
physically distinct, which is the case in velocity analysis of manipulators. As 
we will see in Chapter 4, in these analyses we distinguish between the velocity 
of the manipulator in Cartesian space and that in the joint-rate space. While 
the Cartesian-space velocityâor Cartesian velocity, for brevityâconsists, in 
general, of a 6-dimensional vector containing the 3-dimensional angular velocity 
of the end-effector and the translational velocity of one of its points, the latter 
is an n-dimensional vector. Moreover, if the manipulator is coupled by revolute 

2.3 Rigid-Body 
Rotations 
33 
joints only, the units of the joint-rate vector are all s~\ whereas the Cartesian 
velocity contains some components with units of s~^ and others with units of 
ms^^. 
Further definitions are now recalled. Given a mapping L of an n-dimensional 
vector space U into the n-dimensional vector space V, a nonzero vector e that 
is mapped by L into a multiple of itself, Ae, is called an eigenvector of L, the 
scalar A being called an eigenvalue of L. The eigenvalues of L are determined 
by the equation 
det(Al - L) = 0 
(2.11) 
Note that the matrix Al â L is linear in A, and since the determinant of a n x n 
matrix is a homogeneous nth-order function of its entries, the left-hand side of 
eq.(2.11) is a nth-degree polynomial in A. The foregoing polynomial is termed 
the characteristic polynomial of L. Hence, every nxn 
matrix L has n complex 
eigenvalues, even if L is defined over the real field. If it is, then its complex 
eigenvalues appear in conjugate pairs. Clearly, the eigenvalues of L are the 
roots of its characteristic polynomial, while eq.(2.11) is called the characteristic 
equation of L. 
Example 2.2.1 What is the representation of the reflection R ofÂ£^ into itself, 
with respect to the x-y plane, in terms of unit vectors parallel to the X, Y, Z 
axes that form a coordinate frame T ? 
Solution: Note that in this case, U = V = Â£^ and, hence, it is not necessary to 
use two different bases for U and V. Now, let i, j , k, be unit vectors parallel to 
the X, Y, and .Z'axes. Clearly, 
Ri = i 
R j = j 
R k = - k 
Thus, the representations of the images of i, j and k under R, in !F, are 
[Ri]^ = 
, [RJb = 
[RkV = 
0 
0 
- 1 
where subscripted brackets are used to indicate the representation frame. Hence, 
the matrix representation of R in !F, denoted by [R]:F, is 
[R-b = 
1 0 
0 
0 
1 
0 
0 
0 - 1 
2.3 
Rigid-Body Rotations 
A linear isomorphism, i.e., a one-to-one linear transformation mapping a space 
V onto itself, is called an isometry if it preserves distances between any two 

34 
2. Mathematical 
Background 
points of V. If u and v are regarded as the position vectors of two such points, 
then the distance d between these two points is defined as 
d= ^J{u~v)'^{u-\) 
(2.12) 
The volume V of the tetrahedron defined by the origin and three points of 
the 3-dimensional Euchdean space of position vectors u, v, and w is obtained 
as one-sixth of the absolute value of the double mixed product of these three 
vectors, 
y = - l u X v-wl = - | d e t [ u V wll 
(2.13) 
6 
6 
i.e., if a 3x3 array [A] is defined in terms of the components of u, v, and w, in 
a given basis, then the first column of [A] is given by the three components of 
u, the second and third columns being defined likewise. 
Now, let Q be an isometry mapping the triad {u, v, w} into {u', v', w'}. 
Moreover, the distance from the origin to the points of position vectors u, v, 
and w is given simply as ||u||, ||v||, and ||w||, which are defined as 
Clearly, 
and 
\u\\ = V^i^, 
| | V | | = \ A ; ^ , 
||W|| = Vw^w 
(2.14) 
(2.15a) 
'u- = u 
det[u' v' w'] = Â±det[u v w] 
(2.15b) 
If, in the foregoing relations, the sign of the determinant is preserved, the 
isometry represents a rotation; otherwise, it represents a reflection. Now, let p 
be the position vector of any point of Â£^, its image under a rotation Q being 
p'. Hence, distance preservation requires that 
P^P = P''^P' 
(2.16) 
where 
p' = QP 
(2.17) 
condition (2.16) thus leading to 
Q^Q = 1 
(2.18) 
where 1 was defined in Section 2.2 as the 3 x 3 identity matrix, and hence, 
eq.(2.18) states that Q is an orthogonal matrix. Moreover, let T and T' denote 
the two matrices defined below: 
T = [ u 
V w ] , T' = [u' v' w'] 
(2.19) 
from which it is clear that 
T' = QT 
(2.20) 

2.3 Rigid-Body Rotations 
35 
Now, for a rigid-body rotation, eq.(2.15b) should hold with the positive sign, 
and hence, 
det(T) = det(T') 
(2.21a) 
and, by virtue of eq.(2.20), we conclude that 
det(Q) = +1 
(2.21b) 
Therefore, Q is a proper orthogonal matrix, i.e., it is a proper isometry. Now 
we have 
Theorem 2.3.1 The eigenvalues of a proper orthogonal matrix Q lie on the 
unit circle centered at the origin of the complex plane. 
Proof: Let A be one of the eigenvalues of Q and e the corresponding eigenvector, 
so that 
Qe = Ae 
(2.22) 
In general, Q is not expected to be symmetric, and hence, A is not necessarily 
real. Thus, A is considered complex, in general. In this light, when transposing 
both sides of the foregoing equation, we will need to take the complex conjugates 
as well. Henceforth, the complex conjugate of a vector or a matrix will be 
indicated with an asterisk as a superscript. As well, the conjugate of a complex 
variable will be indicated with a bar over the said variable. Thus, the transpose 
conjugate of the above equation takes on the form 
e*Q* = Ae* 
(2.23) 
Multiplying the corresponding sides of the two previous equations yields 
e*Q*Qe = AAe*e 
(2.24) 
However, Q has been assumed real, and hence, Q* reduces to Q-^, the foregoing 
equation thus reducing to 
e*Q^Qe = AAe*e 
(2.25) 
But Q is orthogonal by assumption, and hence, it obeys eq.(2.18), which means 
that eq.(2.25) reduces to 
e*e=|A|2e*e 
(2.26) 
where | â¢ | denotes the module of the complex variable within it. Thus, the 
foregoing equation leads to 
|Ap = 1 
(2.27) 
thereby completing the intended proof. 
As a direct consequence of Theo-
rem 2.3.1, we have 
Corollary 2.3.1 A proper orthogonal 3 x 3 matrix has at least one eigenvalue 
that is +1. 

36 
2. Mathematical 
Background 
Now, let e be the eigenvector of Q associated with the eigenvalue +1. Thus, 
Qe = e 
(2.28) 
What eq.(2.28) states is summarized as a theorem below: 
Theorem 2.3.2 (Euler, 1776) A rigid-body motion about a point 0 leaves 
fixed a set of points lying on a line JC that passes through O and is parallel to 
the eigenvector e of Q associated with the eigenvalue +1. 
A further result, that finds many appHcations in robotics and, in general, in 
system theory, is given below: 
Theorem 2.3.3 (Cayley-Hamilton) Let P(A) be the characteristic polyno-
mial of an X n matrix A, i.e., 
P{\) = det(Al - A) = A" + oâ_iA"-i + â¢ â¢ â¢ + oiA + ao 
(2.29) 
Then A satisfies its characteristic equation, i.e., 
A" + aâ_iA"-i + --- + aiA + aol = 0 
(2.30) 
where O is the n x n zero matrix. 
Proof: See (Kaye and Wilson, 1998). 
What the Cayley-Hamilton Theorem states is that any power p >n oi the 
nxn 
matrix A can be expressed as a linear combination of the first n powers of 
Aâthe 0th power of A is, of course, the nxn 
identity matrix 1. An important 
consequence of this result is that any analytic matrix function of A can be 
expressed not as an infinite series, but as a sum, namely, a linear combination 
of the first n powers of A: 1, A, ..., A""^. An analytic function f{x) of a real 
variable x is, in turn, a function with a series expansion. Moreover, an analytic 
matrix function of a matrix argument A is defined likewise, an example of which 
is the exponential function. Prom the previous discussion, then, the exponential 
of A can be written as a linear combination of the first n powers of A. It will 
be shown later that any proper orthogonal matrix Q can be represented as the 
exponential of a skew-symmetric matrix derived from the unit vector e of Q, of 
eigenvalue -1-1, and the associated angle of rotation, as yet to be defined. 
2.3.1 
The Cross-Product Matrix 
Prior to introducing the matrix representation of a rotation, we will need a few 
definitions. We will start by defining the partial derivative of a vector with 
respect to another vector. This is a matrix, as described below: In general, let 
u and V be vectors of spaces K and V, of dimensions m and n, respectively. 
Furthermore, let f be a real variable and / be real-valued function oit,u 
= u{t) 
and V â v(u(^)) being m- and n-dimensional vector functions of f as well, with 

2.3 Rigid-Body 
Rotations 
37 
/ = /(u, v). The derivative of u with respect to t, denoted by u(f), is a m-
dimensional vector whose ith component is the derivative of the ith component 
Ui of u, in a given basis, with respect to t. A similar definition follows for 
v(t). The partial derivative of / with respect to u is a m-dimensional vector 
whose ith component is the partial derivative of / with respect to Ui, with a 
corresponding definition for the partial derivative of / with respect to v. The 
foregoing derivatives, as all other vectors, will be assumed, henceforth, to be 
column arrays. Thus, 
dl 
du 
df/dm 
df/dU2 
df/dum 
dv ~ 
df/dvi 
df/dV2 
-df/dvâ 
(2.31) 
Furthermore, the partial derivative of v with respect to u is a n x m array 
whose (i,j) entry is defined as dvi/duj, 
i.e.. 
5v 
du 
dvi/dui 
dvi/du2 
â¢â¢â¢ 
dvi/dur, 
dv2/dui 
dv2/du2 
â¢â¢â¢ 
dv2/dur, 
(2.32) 
-dVn/dui 
dVn/dU2 
â¢â¢â¢ 
dVn/dUr, 
Hence, the total derivative of / with respect to u can be written as 
du 
du 
\duj 
&v 
(2.33) 
If, moreover, / is an explicit function of t, i.e., if / = /(u, v, t) and v 
v{u,t), 
then, one can write the total derivative of / with respect to t as 
4f 
dt 
dl 
dt + 
dlY du fdlYdy^ 
du) 
dt'^Kdv) 
dt^ 
dl 
5v 
dv du 
du dt 
(2.34) 
The total derivative of v with respect to t can be written, likewise, as 
dv 
dt 
dv 
dv du 
dt 
du dt 
(2.35) 
Example 2.3.1 Let the components ofv and x in a certain reference frame !F 
be given as 
vb- = 
Vi 
V3 
[ X > 
Xi 
X2 
X3 
Then 
[VXX\jr 
= 
V2X3 
VzXx 
VxX2 
â¢V3X2 
V1X3 
(2.36a) 
(2.36b) 

38 
Hence, 
â¢ 5 ( v X x) â¢ 
9^ 
T 
0 
W3 
- V 2 
-Vz 
0 
t)i 
Vl 
-Vx 
0 
2. Mathematical 
Background 
(2.36c) 
Henceforth, the partial derivative of v x x with respect to x will be denoted 
by the 3x3 matrix V. For obvious reasons, V is termed the cross-product matrix 
of vector v. Sometimes the cross-product matrix of a vector v is represented 
as V, but we do not follow this notation for the sake of consistency, since we 
decided at the outset to represent matrices with boldface uppercases. Thus, the 
foregoing cross product admits the alternative representations 
V X x = Vx 
(2.37) 
Now, it should be apparent that: 
Theorem 2.3.4 The cross-product matrix A of any 3-dimensional vector a is 
skew-symmetric, 
i.e., 
and, as a consequence, 
a X (a X b) =^ A^b 
(2.38) 
where A^ can be readily proven to be 
A2 = -||a||2l-|-aa'^ 
(2.39) 
with II â¢ II denoting the Euclidean norm of the vector inside it. 
Note that given any 3-dimensionaI vector a, its cross-product matrix A is 
uniquely defined. Moreover, this matrix is skew-symmetric. The converse also 
holds, i.e., given any 3 x 3 skew-symmetric matrix A, its associated vector is 
uniquely defined as well. This result is made apparent from Example 2.3.1 and 
will be discussed further when we define the axial vector of an arbitrary 3 x 3 
matrix below. 
2.3.2 
The Rotation Matrix 
In deriving the matrix representation of a rotation, we should recall Theo-
rem 2.3.2, which suggests that an explicit representation of Q in terms of its 
eigenvector e is possible. Moreover, this representation must contain informa-
tion on the amount of the rotation under study, which is nothing but the angle 
of rotation. Furthermore, line JC, mentioned in Euler's Theorem, is termed the 
axis of rotation of the motion of interest. In order to derive the representation 
mentioned above, consider the rotation depicted in Fig. 2.3 of angle (f> about 
line C. 

2.3 Rigid-Body 
Rotations 
39 
A 
p 
1 
; 
Q 
1 
râ~p' 
M 
s 
m 
/ 
\ 
/ 
\ 
/ 
\ 
/ 
s 
/ 
Y ''' 
/ 
\ 
^ 
/ 
\ 
I 
/ 
\ 
' 
/ 
1 
(b) 
Figure 2.3: Rotation of a rigid body about a line 
From Fig. 2.3(a), one can apparently write 
p' = 0 g + QP' 
(2.40) 
where OQ is the axial component of p along vector e, which is derived as in 
eq.(2.6a), namely, 
OQ^ ee^p 
(2.41) 
Furthermore, from Fig. 2.3(b), 
QP'= (cos 0) QP +(sin0) QP" 
(2.42) 
with QP being nothing but the normal component of p with respect to e, as 
introduced in eq.(2.6b), i.e.. 
QP= (1 - ee^)p 
and QP" given as 
QP" = e X p = Ep 
Substitution of eqs.(2.43) and (2.44) into eq.(2.42) leads to 
(2.43) 
(2.44) 
(2.45) 
QP' = cos 4>{1 - ee^)p + sin (f>Ep 
If now eqs.(2.41) and (2.45) are substituted into eq.(2.40), one obtains 
p' = ee^p + cos (f>{l - ee'^)p + sin (/>Ep 
(2.46) 

40 
2. Mathematical 
Background 
Thus, eq.(2.40) reduces to 
p' = [ee^ + cos </>(! - ee'^) + sin (/)E]p 
(2.47) 
Prom eq.(2.47) it is apparent that p' is a hnear transformation of p, the 
transformation being given by the expression inside the brackets, which is the 
rotation matrix Q sought, i.e., 
Q = ee"^ + cos (/>(1 - ee"^) + sin </>E 
(2.48) 
A special case arises when 0 = TT, 
Q = - 1 + 2ee'^, 
for 0 = TT 
(2.49) 
whence it is apparent that Q is symmetric ii (f) = n. Of course, Q becomes 
symmetric also when </> = 0, but this is a rather obvious case, leading to Q = 1. 
Except for these two cases, the rotation matrix is not symmetric. However, 
under no circumstance does the rotation matrix become skew-symmetric, for 
a 3 X 3 skew-symmetric matrix is by necessity singular, which contradicts the 
property of proper orthogonal matrices of eq.(2.21b). 
Now one more representation of Q in terms of e and (f) is given. For a fixed 
axis of rotation, i.e., for a fixed value of e, the rotation matrix Q is a function 
of the angle of rotation (/>, only. Thus, the series expansion of Q in terms of 4> is 
Q(0) = Q(o) + Q'(o)<^ + ~Q"i0)4>^ + â¢â¢â¢ + l^Q^'^ m ' + â¢â¢â¢ 
(2.50) 
where the superscript (k) stands for the fcth derivative of Q with respect to 4>-
Now, from the definition of E, one can readily prove the relations below: 
j,(2fc+i) ^ (_!)<=Â£, 
E^* = (-1)'=(1 - ee^) 
(2.51) 
Furthermore, using eqs.(2.48) and (2.51), one can readily show that 
Q W ( 0 ) = E * = 
(2.52) 
with E defined already as the cross-product matrix of e. 
Moreover, from 
eqs.(2.50) and (2.52), Q(i?I>) can be expressed as 
Q(0) - 1 + E0 + ;J-E202 + . . . + 1^-Ek^k ^ . . . 
2! 
fc! 
whose right-hand side is nothing but the exponential of Ecj), i.e., 
Q(^) = e^^ 
(2.53) 
Equation (2.53) is the exponential representation of the rotation matrix in terms 
of its natural invariants, e and </>. The foregoing parameters are termed invari-
ants because they are independent of the coordinate axes chosen to represent 
the rotation under study. The adjective natural is necessary to distinguish them 

2.3 Rigid-Body 
Rotations 
41 
from other invariants that will be introduced presently. This adjective seems 
suitable because the said invariants stem naturally from Euler's Theorem. 
Now, in view of eqs.(2.51), the above series can be written as 
Q(0) = 1 + 
+ 
4*'+s*' 
3! r + â¢ â¢ â¢ + 
â¢ â¢â¢ + 
1 
1 â¢i-iycf>'' + -
{2k+ 1) 
(2fc)! 
+ â¢ 
(1 - ee^) 
E 
The series inside the first pair of brackets is apparently cos(f) â 1, while that in 
the second pair is sin cf). We have, therefore, an alternative representation of Q: 
Q = 1 + sin (/.E + (1 - cos (j))E^ 
(2.54) 
which is an expected result in view of the Cay ley-Hamilton Theorem. 
The Canonical Forms of the Rotation Matrix 
The rotation matrix takes on an especially simple form if the axis of rotation 
coincides with one of the coordinate axes. For example, if the X axis is parallel 
to the axis of rotation, i.e., parallel to vector e, in a frame that we will label X, 
then, we will have 
[ek = 
1' 
0 
0 
, 
[E];,= 
then. 
[QU--
'0 
0 
0 
0 
0 " 
0 
- 1 
1 
0 
"1 
0 
0 coscj) 
0 
sin0 
, [E^]^ = 
'0 
0 
0 
0 
â sixi(f) 
COS(f> 
0 
- 1 
0 
0 
0 
- 1 
(2.55a) 
Likewise, if we define the coordinate frames y and Z so that their Y and Z 
axes, respectively, coincide with the axis of rotation, then 
and 
[Qb = 
[Q]z = 
cos (f) 0 sin 0 
0 
1 
0 
â sin 0 0 cos (f) 
cos 4> â sin (/> 0 
sin (f> cos (f> 0 
0 
0 
1 
(2.55b) 
(2.55c) 
The representations of eqs.(2.55a-c) can be called the X-, Y-, and Z-canonical 
forms of the rotation matrix. In many instances, a rotation matrix cannot be 
derived directly from information on the original and the final orientations of a 
rigid body, but the overall motion can be readily decomposed into a sequence of 

42 
2. Mathematical 
Background 
simple rotations taking the above canonical forms. An application of canonical 
forms lies in the parameterization of rotations by means of Euler angles, con-
sisting of three successive rotations, </>, 6 and â¢0, about one axis of a coordinate 
frame. Euler angles are introduced in Exercise 18, and applications thereof are 
given in Exercises 2.36, 2.37, 3.1.9, and 3.1.10. 
2.3.3 
The Linear Invariants of a 3 x 3 Matrix 
Now we introduce two linear invariants of 3 x 3 matrices. Given any 3 x 3 matrix 
A, its Cartesian decomposition, the counterpart of the Cartesian representation 
of complex numbers, consists of the sum of its symmetric part, A5, and its 
skew-symmetric part, A55, defined as 
A s - i ( A + A^), 
Ass = ^ ( A - A ^ ) 
(2.56) 
The axial vector or for brevity, the vector of A, is the vector a with the property 
a X V = Assv 
(2.57) 
for any 3-dimensional vector v. The trace of A is the sum of the eigenvalues 
of A5, which are real. Since no coordinate frame is involved in the above 
definitions, these are invariant. When calculating these invariants, of course, a 
particular coordinate frame must be used. Let us assume that the entries of 
matrix A in a certain coordinate frame are given by the array of real numbers 
Oy, for i,j â 1,2,3. Moreover, let a have components a^, for % â 1,2,3, in the 
same frame. The above-defined invariants are thus calculated as 
vect(A) = a = -
^ ' 
2 
032 â 023 
ai3 - 031 
tr(A) = ail -I- 022 + 033 
(2.58) 
From the foregoing definitions, we have now 
Theorem 2.3.5 The vector of a3x3 
matrix vanishes if and only if it is sym-
metric, whereas the trace of an n x n matrix vanishes if the matrix is skew 
symmetric. 
Other useful relations are given below. For any 3-dimensional vectors a and 
b, 
vect(ab^) = - - a x b 
(2.59) 
and 
tr(ab'^) = a^b 
(2.60) 
The second relation is quite straightforward, but the first one is less so; a proof 
of the first relation follows: Let w denote vect(ab'^). From Definition (2.57), 
for any 3-dimensional vector v, 
w X V = Wv 
(2.61) 

2.3 Rigid-Body Rotations 
43 
where W is the skew-symmetric component of ab^, namely, 
W s i ( a b ^ - b a ^ ) 
(2.62) 
and hence, 
W v = w X V = i[(b'^v)a - (a'^v)b] 
(2.63) 
Now, let us compare the last expression with the double cross product (b x a) x v, 
namely, 
(b X a) X V = (b^v)a - (a^v)b 
(2.64) 
from which it becomes apparent that 
w = i b X a 
(2.65) 
thereby proving the aforementioned relation. 
Note that Theorem 2.3.5 states a necessary and sufficient condition for the 
vanishing of the vector of a 3 x 3 matrix, but only a sufficient condition for the 
vanishing of the trace of a n x n matrix. What this implies is that the trace of a 
n xn matrix can vanish without the matrix being necessarily skew symmetric, 
but the trace of a skew-symmetric matrix necessarily vanishes. Also note that 
whereas the vector of a matrix is defined only for 3 x 3 matrices, the trace can 
be defined more generally for n x n matrices. 
In some applications, the cross-product matrix of the product Ab of a 3 x 3 
matrix A by a vector b is needed^: 
CPM(Ab) = (BA)^ - BA + tr(A)B = [tr(A)l - A"^] B - B A 
(2.66) 
where B = CPM(b). The proof is left as an exercise. 
2.3,4 
The Linear Invariants of a Rotation 
From the invariant representations of the rotation matrix, eqs.(2.48) and (2.54), 
it is clear that the first two terms of Q, ee"^ and cos (f>{l â ee^), are symmetric, 
whereas the third one, sin ^'E, is skew-symmetric. Hence, 
vect(Q) = vect(sin </> E) = sin 0 e 
(2.67) 
whereas 
tr(Q) = trfee"^ -|- cos (f>{l - ee^)] = e^e + cos (f){3 - e^e) = H - 2 cos (^ (2.68) 
from which one can readily solve for cos </>, namely, 
COS0=^^MZL1 
(2.69) 
'This relation was derived by Ph.D. candidate Philippe Cardou. 

44 
2. Mathematical 
Background 
Henceforth, the vector of Q will be denoted by q and its components in a 
given coordinate frame by ^i, q2, and qs. Moreover, rather than using tr(Q) as 
the other linear invariant, go = cos(f) will be introduced to refer to the linear 
invariants of the rotation matrix. Hence, the rotation matrix is fully defined by 
four scalar parameters, namely {QJ}O, which will be conveniently stored in the 
4-dimensional array A, defined as 
A = [Â«i,g2, 93,%f 
(2.70) 
Note, however, that the four components of A are not independent, for they 
obey the relation 
||q||^ + g^ =sin^(/> + c o s 2 0 - 1 
(2.71) 
Thus, eq.(2.71) can be written in a more compact form as 
\\Xf=qj+ql+ql + ql = l 
(2.72) 
What eq.(2.71) states has a straightforward geometric interpretation: As a 
body rotates about a fixed point, its motion can be described in a 4-dimensional 
space by the motion of a point of position vector A that moves on the surface 
of the unit sphere centered at the origin of the said space. Alternatively, one 
can conclude that, as a rigid body rotates about a fixed point, its motion can 
be described in a 3-dimensional space by the motion of position vector q, which 
moves within the unit solid sphere centered at the origin of the said space. Given 
the dependence of the four components of vector A, one might be tempted to 
solve for, say, go from eq.(2.71) in terms of the remaining components, namely, 
as 
go = i y / l - C g f + g l + gf) 
(2.73) 
This, however, is not a good idea because the sign ambiguity of eq.(2.73) 
leaves angle (f> undefined, for go is nothing but cos ({>. Moreover, the three com-
ponents of vector q alone, i.e., sin(/>e, do not suffice to define the rotation 
represented by Q. Indeed, from the definition of q, one has 
sin(/i = Â±||q||, e = q/sin(/) 
(2.74) 
from which it is clear that q alone does not suffice to define the rotation under 
study, since it leaves angle 0 undefined. Indeed, the vector of the rotation matrix 
provides no information about cos (f>. Yet another representation of the rotation 
matrix is displayed below, in terms of its linear invariants, that is readily derived 
from representations (2.48) and (2.54), namely, 
in which Q is the cross-product matrix of vector q, i.e., 
- _ a(q X x) 

2.3 Rigid-Body 
Rotations 
45 
for any vector x. 
Note that by virtue of eq.(2.71), the representation of Q given in eq.(2.75a) 
can be expressed alternatively as 
Q = gol + Q + qq 
l + go 
(2.75b) 
From either eq.(2.75a) or eq.(2.75b) it is apparent that linear invariants are 
not suitable to represent a rotation when the associated angle is either TT or 
close to it. Note that a rotation through an angle (f) about an axis given by 
vector e is identical to a rotation through an angle â(f) about an axis given by 
vector âe. Hence, changing the sign of e does not change the rotation matrix, 
provided that the sign of c{> is also changed. Henceforth, we will choose the sign 
of the components of e so that sin if) >0, which is equivalent to assuming that 
0 < 0 < TT. Thus, sin0 is calculated as ||q||, while coscj) as indicated in eq.(2.69). 
Obviously, e is simply q normalized, i.e., q divided by its Euclidean norm. 
2.3.5 
Examples 
The examples below are meant to stress the foregoing ideas on rotation invari-
ants. 
Example 2,3.2 If[e]jr = [\/3/3, - \ / 3 / 3 , %/3/3]^ in a given coordinate frame 
T and (f> = 120Â°, what is Q in T? 
Solution: Prom the data. 
v/3 
c o s < ? = - - , 
sm<p= 2 
Moreover, in the T frame. 
lee-t=l 
1 
- 1 
1 
[1 - 1 
1^ 
1 
- 1 
1 
- 1 
1 
- 1 
1 
- 1 
1 
and hence, 
Thus, from eq.(2.48). 
2 
1 
- 1 
1 2 
1 
- 1 
1 
2 
1 
-1 
1 
- 1 
1 
- 1 
1 " 
- 1 
1 
1 
~ 6 
fEl^ = 
2 
1 
- 1 
1 2 
1 
- 1 1 2 
v^ 
+ 
0 
- 1 
- 1 
1 
0 
- 1 
1 
1 
0 
0 
- 1 
- 1 
1 
0 
- 1 
1 
1 
0 

46 
2. Mathematical 
Background 
I.e., 
[Q]^ 
0 - 1 0 
0 
0 - 1 
1 
0 
0 
Example 2.3.3 The matrix representation of a linear transformation Q in a 
certain reference frame T is given below. Find out whether the said transfor-
mation is a rigid-body rotation. If it is, find its natural invariants. 
[Qb = 
ro 
0 
[i 
1 0' 
0 1 
0 0 
Solution: First the given array is tested for orthogonality: 
[QMQ ^ 1 
â 
fO 1 0" 
0 0 1 
[l 0 0 
"0 0 
r 
1 0 0 
0 1 0 
= 
'1 0 0] 
0 
1 0 
0 0 1 
thereby showing that the said array is indeed orthogonal. Thus, the linear 
transformation could represent a reflection or a rotation. In order to decide 
which one this represents, the determinant of the foregoing array is computed: 
det(Q) = +1 
which makes apparent that Q indeed represents a rigid-body rotation. Now, 
its natural invariants are computed. The unit vector e can be computed as the 
eigenvector of Q associated with the eigenvalue -f-1. This requires, however, 
finding a nontrivial solution of a homogeneous linear system of three equations 
in three unknowns. This is not difficult to do, but it is cumbersome and is not 
necessary. In order to find e and (/>, it is recalled that vect(Q) = sin(/>e, which 
is readily computed with differences only, as indicated in eq.(2.58), namely. 
[q]j:- = sm(f)[e]jr = 
Under the assumption that sin 0 > 0, then, 
â¢ 
^ - 1 1 
II 
^ 
sm(t)= \\q\\ = 
â 
111 
and hence, 
and 
lej^ = M^ 
3 
(j) = 60Â° or 
120Â° 

2.3 Rigid-Body 
Rotations 
47 
The foregoing ambiguity is resolved by the trace of Q, which yields 
1 + 2 cos (f) = tr(Q) = 0, 
cos (/> = â-
The negative sign of cos 4) indicates that (f> lies in the second quadrantâit cannot 
lie in the third quadrant because of our assumption about the sign of sin (j)-âand 
hence 
(f) = 120Â° 
Example 2.3.4 A coordinate frame Xi, l i , Zi is rotated into a configuration 
Xi^Yit 
Zi in such a way that 
Find the matrix representation of the rotation in Xi, Fi, Zi coordinates. From 
this representation, compute the direction of the axis and the angle of rotation. 
Solution: 
Let i i , j i , k i be unit vectors parallel to Xi,yi,Zi, respectively, 
12, J2, k2 being defined correspondingly. One has 
i2 = - j i , 
J 2 = k i , 
k2 = - i i 
and hence, from Definition 2.2.1, the matrix representation [Q]i of the rotation 
under study in the Xi, Fi, Z\ coordinate frame is readily derived: 
[Q]i = 
0 
0 - 1 
- 1 0 
0 
0 
1 
0 
from which the linear invariants follow, namely. 
[q]i = [vect(Q)]i =sin0[e]i = -
1 
- 1 
- 1 
, 
c o s 0 = i [ t r ( Q ) - l ] = - i 
Under our assumption that sin 0 > 0, we obtain 
. 
, 
11 I, 
^/3 
r , 
[q]i 
V3 
sm^=||q|l = - , 
[e]i = ^ 
= 
^ 
From the foregoing values for sin (f) and cos (/>, angle (f) is computed uniquely as 
0 = 120"^ 
Example 2.3.5 Show that the matrix P given in eq.(2.4) satisfies properties 
(2.1a). 

48 
2. Mathematical 
Background 
Solution: First, we prove idempotency, i.e., 
P2 = ( l - n n ^ ) ( l - n n ^ ) 
= 1 â 2nn^ H- nn^nn^ 
nn 
thereby showing that P is, indeed, idempotent. Now we prove that n is an 
eigenvector of P with eigenvalue, 0 and hence, n spans the nullspace of P. In 
fact, 
P n = (1 â nn^)n = n â nn^n = n â n = 0 
thereby completing the proof. 
Example 2.3.6 The representations of three linear transformations in a given 
coordinate frame T are given below: 
2 
- 2 
- 1 
2 
1 
1 
1 
2 
- 2 
1 
2 
- 1 
2] 
1 
2} 
1 ' 
- 1 
2 
1 
2 
2 
2 
1 
- 2 
2 
- 2 
1 
One of the foregoing matrices is an orthogonal projection, one is a reflection, 
and one is a rotation. Identify each of these and give its invariants. 
Solution: Prom representations (2.48) and (2.54), it is clear that a rotation 
matrix is symmetric if and only if sin (;/!> = 0. This means that a rotation matrix 
cannot be symmetric unless its angle of rotation is either 0 or TT, i.e., unless its 
trace is either 3 or â1. Since [ B ] ^ and [ C ] ^ are symmetric, they cannot be 
rotations, unless their traces take on the foregoing values. Their traces are thus 
evaluated below: 
tr(B) = 2, 
tr(C) = 1 
which thus rules out the foregoing matrices as suitable candidates for rotations. 
Thus, A is the only candidate left for proper orthogonality, its suitability being 
tested below: 
[AA^ J ^ = 9 
"9 
0 
0 
0 
9 
0 
0' 
0 
9 
det(A) = +1 
and hence, A indeed represents a rotation. Its natural invariants are next 
computed: 
sin0[e]jr = [vect(A)]jr = H3 
cos^=i[tr(A)-l] = i ( 2 - l ) = i 

2.3 Rigid-Body 
Rotations 
49 
We assume, as usual, that sincf) > 0. Then, 
sin(/) = ||vect(A)|| = -â, 
i.e., 0 = 60Â° 
Moreover, 
MT = 
[vect(A)] T 
|vect(A)|| 
3 
Now, one matrix of B and C is an orthogonal projection and the other is a 
reflection. To be a reflection, a matrix has to be orthogonal. Hence, each 
matrix is tested for orthogonality: 
[BB^b: 
6 
3 
3 
3 
6 - 3 
3 - 3 
6 
[ B 2 > = [ B ] ^ , 
[ C C ^ ] ^ 
"9 
0 
LO 
0 
9 
0 
0" 
0 
9 
thereby showing that C is orthogonal and B is not. Rirthermore, det(C) = â 1, 
which confirms that C is a reflection. Now, if B is a projection, it is bound to 
be singular and idempotent. Prom the orthogonality test it is clear that it is 
idempotent. Moreover, one can readily verify that det(B) = 0, and hence B is 
singular, the unit vector [n]jr = [m, n2, na]^ that spans its nullspace being 
determined from the general form of projections, eq.(2.1a), whence. 
nn 
1 - B 
Therefore, if a solution n has been found, then ân is also a solution, i.e., the 
problem admits two solutions, one being the negative of the other. These two 
solutions are found below, by first rewriting the above system of equations in 
component form: 
1 nl 
nin2 
[nina 
nin2 
nl 
n2n3 
nins" 
^2^3 
nl 
1 
" 3 
â¢ 1 
- 1 
- 1 
- 1 
1 
1 
1 
1 
Now, from the diagonal entries of the above matrices, it is apparent that the 
three components of n have identical absolute values, i.e., \/3/3. Moreover, from 
the off"-diagonal entries of the same matrices, the second and third components 
of n bear equal signs, but we cannot tell whether positive or negative, because 
of the quadratic nature of the problem at hand. The two solutions are thus 
obtained as 
n = Â± x/3 
1 
- 1 
- 1 
which is the only invariant of B. 
We now look at C, which is a reflection, and hence, bears the form 
2nn^ 

50 
2. Mathematical 
Background 
In order to determine n, note that 
nn^ = - ( l - C ) 
or in component form, 
- n? 
nin2 
[nins 
nin2 
ni 
n2n3 
nius' 
n2n3 
nl 
- 1 
- 1 
1 
1 
1 
1 
which is identical to the matrix equation derived in the case of matrix B. Hence, 
the solution is the same, i.e.. 
n = il: 
thereby finding the invariant sought. 
V3 
1 
- 1 
- 1 
Example 2.3.7 The vector and the trace of a rotation matrix Q, in a certain 
reference frame T, are given as 
[vect(Q)]r = 
tr(Q) 
Find the matrix representation of Q in the given coordinate frame and in a 
frame having its Z-axis parallel to vect(Q). 
Solution: We shall resort to eq.(2.75a) to determine the rotation matrix Q. The 
quantities involved in the representation of Q in .F are readily computed: 
[m^]j^ 
= T 
1 
- 1 
1 
- 1 
1 
- 1 
1 
- 1 
1 
from which Q follows: 
[Qb=3 
3 
4' 
2 
1 
- 2 
2 
- 1 
- 2 
[Qb = 
0 ) 
1 
1 
1 1 
0 1 
-1 0 
in the given coordinate frame. Now, let Z denote a coordinate frame whose 
Z-axis is parallel to q. Hence, 
[q]2 = v^ 
0 
0 
1 
, [qq^]z = ^ 
0 0 0 
0 0 0 
0 0 1 
[Qk = 
N/3 
0 - 1 0 
1 
0 
0 
0 
0 
0 

2.3 Rigid-Body 
Rotations 
51 
which readily leads to 
[Q]^ = 
and is in the Z-canonical form. 
1/2 
- v ^ / 2 
0 
\/3/2 
1/2 
0 
0 
0 
1 
0.433 
X 
0.866 
-0.500 
0.866 
y 
z 
-0.433 
0.500 
Example 2.3.8 A procedure for trajectory planning produced a matrix repre-
senting a rotation for a certain pick-and-place operation, as shown below: 
[Q] = 
where x, y, and z are entries that are unrecognizable due to failures in the 
printing hardware. Knowing that Q is in fact a rotation matrix, find the missing 
entries. 
Solution: Since Q is a rotation matrix, the product P = Q^Q should equal 
the 3 x 3 identity matrix, and det(Q) should be +1. The foregoing product is 
computed first: 
[Pb = 
0.437 + ^2 0.433(a: -z-l) 
0.5{-y + z)-{- 0.375 
* 
0.937 + x^ 
0.866(a; + y)- 
0.216 
* 
* 
1+2/^ 
where the entries below the diagonal need not be printed because the matrix is 
symmetric. Upon equating the diagonal entries of the foregoing array to unity, 
we obtain 
X = Â±0.250, 
2/ = 0, 
z = Â±0.750 
while the vanishing of the oflP-diagonal entries leads to 
X = 0.250, 
2/ = 0, 
z = -0.750 
which can be readily verified to produce det(Q) = +1. 
2.3.6 
The Euler-Rodrigues Parameters 
The invariants defined so far, namely, the natural and the linear invariants of a 
rotation matrix, are not the only ones that are used in kinematics. Additionally, 
one has the Euler parameters, or Euler-Rodrigues parameters, as Cheng and 
Gupta (1989) propose that they should be called, represented here as r and ro-
The Euler-Rodrigues parameters are defined as 
r = sm 
ro = cos 
(2.76) 

52 
2. Mathematical 
Background 
One can readily show that Q takes on a quite simple form in terms of the 
Euler-Rodrigues parameters, namely, 
Q = (ro^ - r â¢ r)l + 2rr^ + 2roR 
(2.77) 
in which R is the cross-product matrix of r, i.e., 
d{r X x) 
R = 
dx 
for arbitrary x. 
Note that the Euler-Rodrigues parameters appear quadratically in the ro-
tation matrix. Hence, these parameters cannot be computed with simple sums 
and differences. A closer inspection of eq.(2.75b) reveals that the linear invari-
ants appear almost linearly in the rotation matrix. This means that the rotation 
matrix, as given by eq.(2.75b), is composed of two types of terms, namely, linear 
and rational. Moreover, the rational term is composed of a quadratic expres-
sion in the numerator and a linear expression in the denominator, the ratio thus 
being linear, which explains why the linear invariants can be obtained by sums 
and differences from the rotation matrix. 
The relationship between the linear invariants and the Euler-Rodrigues pa-
rameters can be readily derived, namely. 
.â = Â± ; i Â± Â» . 
r = i , 
, ^ , 
(2.78) 
Furthermore, note that, if (p = n, then ro = 0, and formulae (2.78) fail to 
produce r. However, from eq.(2.76). 
For (^ = TT: 
r = e, 
ro = 0 
(2.79) 
We now derive invariant relations between the rotation matrix and the Euler-
Rodrigues parameters. To do this, we resort to the concept of matrix square 
root. As a matter of fact, the square root of a square matrix is nothing but a 
particular case of an analytic function of a square matrix, discussed in connection 
with Theorem 2.3.3 and the exponential representation of the rotation matrix. 
Indeed, the square root of a square matrix is an analytic function of that matrix, 
and hence, admits a series expansion in powers of the matrix. Moreover, by 
virtue of the Cay ley-Hamilton Theorem (Theorem 2.3.3) the said square root 
should be, for a 3 x 3 matrix, a linear combination of the identity matrix 1, the 
matrix itself, and its square, the coefficients being found using the eigenvalues 
of the matrix. 
Furthermore, from the geometric meaning of a rotation through the angle 
(f) about an axis parallel to the unit vector e, it is apparent that the square 
of the matrix representing the foregoing rotation is itself a rotation about the 
same axis, but through the angle 20. By the same token, the square root of 
the rotation matrix is again a rotation matrix about the same axis, but through 
an angle 0/2. Now, while the square of a matrix is unique, its square root is 

2.3 Rigid-Body 
Rotations 
53 
not. This fact is apparent for diagonalizable matrices, whose diagonal entries 
are their eigenvalues. Each eigenvalue, whether positive or negative, admits 
two square roots, and hence, a diagonalizable n x n matrix admits as many 
square roots as there are combinations of the two possible roots of individual 
eigenvalues, disregarding rearrangements of the latter. Such a number is 2"^, 
and hence, a 3 x 3 matrix admits eight square roots. For example, the eight 
square roots of the identity 3 x 3 matrix are displayed below: 
- 1 0 
0 
0 
1 0 
0 
0 1 
ri 0 0" 
0 
1 0 
[o 0 1 
5 
1 
0 
0 
1 
0 0 
0 " 
0 
- 1 
J 
1 
0 
0 
0 
0' 
- 1 
0 
0 
1 
5 
1 
0 
0 
0 
- 1 
0 
0 
0 
- ] 
- 1 
0 
0 
1 
0 
0 
0 " 
0 
- 1 
5 
0 
0 
0 
-1 
0 
0" 
0 
1 
J 
- 1 0 
0 
0 - 1 0 
0 
0 - 1 
In fact, the foregoing result can be extended to orthogonal matrices as well 
and, for that matter, to any square matrix with n linearly independent eigen-
vectors. That is, an n X n orthogonal matrix admits 2"^ square roots. However, 
not all eight square roots of a 3 x 3 orthogonal matrix are orthogonal. In fact, 
not all eight square roots of a 3 x 3 proper orthogonal matrix are proper or-
thogonal either. Of these square roots, nevertheless, there is one that is proper 
orthogonal, the one representing a rotation of 0/2. We will denote this partic-
ular square root of Q by \/Q- The Euler-Rodrigues parameters of Q can thus 
be expressed as the linear invariants of y/Q, namely. 
r = vect(\/Q), 
^o = tr(x/Q) 
(2.80) 
It is important to recognize the basic differences between the linear invariants 
and the Euler-Rodrigues parameters. Whereas the former can be readily derived 
from the matrix representation of the rotation involved by simple additions 
and subtractions, the latter require square roots and entail sign ambiguities. 
However, the former fail to produce information on the axis of rotation whenever 
the angle of rotation is TT, whereas the latter produce that information for any 
value of the angle of rotation. 
The Euler-Rodrigues parameters are nothing but the quaternions invented 
by Sir William Rowan Hamilton (1844) in an extraordinary moment of creativity 
on Monday, October 16, 1843, as "Hamilton, accompanied by Lady Hamilton, 
was walking along the Royal Canal in Dublin towards the Royal Irish Academy, 
where Hamilton was to preside a meeting." (Altmann, 1989). 
Moreover, the Euler-Rodrigues parameters should not be confused with the 
Euler angles, which are not invariant and hence, admit multiple definitions. The 
foregoing means that no single set of Euler angles exists for a given rotation 
matrix, the said angles depending on how the rotation is decomposed into three 
simpler rotations. For this reason, Euler angles will not be stressed here. The 

54 
2. Mathematical 
Background 
reader is referred to Exercise 2.18 for a short discussion of Euler angles; Synge 
(1960) includes a classical treatment, while Kane, Likins and Levinson (1983) 
provide an extensive discussion of the same. 
Example 2.3.9 Find the Euler-Rodrigues parameters of the proper orthogonal 
matrix Q given as 
"-1 
2 
2 
Q = ^ I 2 
- 1 
2 
2 
2 - 1 
Solution: Since the given matrix is symmetric, its angle of rotation is TT and its 
vector linear invariant vanishes, which prevents us from finding the direction of 
the axis of rotation from the linear invariants; moreover, expressions (2.78) do 
not apply. However, we can use eq.(2.49) to find the unit vector e parallel to 
the axis of rotation, i.e.. 
e e ^ = ^ ( l + Q) 
or in component form, 
eie2 
el 
6263 
eics 
6263 
^3 _ 
1 
^ 3 
"1 1 1" 
1 1 1 
1 1 1 
6162 
A simple inspection of the components of the two sides of the above equation 
reveals that all three components of e are identical and moreover, of the same 
sign, but we cannot tell which sign this is. Therefore, 
A/3 
Moreover, from the symmetry of Q, we know that (j) = n, and hence. 
r = e sm I â 
Â± 
x/3 
ro = cos 
2.4 
Composition of Reflections and Rotations 
As pointed out in Section 2.2, refiections occur often accompanied by rotations. 
The effect of this combination is that the rotation destroys the two properties of 
pure refiections, symmetry and self-inversion, as defined in Section 2.2. Indeed, 
let R be a pure refiection, taking on the form appearing in eq.(2.5), and Q 
an arbitrary rotation, taking on the form of eq.(2.48). The product of these 
two transformations, QR, denoted by T, is apparently neither symmetric nor 
self-inverse, as the reader can readily verify. Likewise, the product of these two 
transformations in the reverse order is neither symmetric nor self-inverse. 

2.4 Composition of Reflections and Rotations 
55 
As a consequence of the foregoing discussion, an improper orthogonal trans-
formation that is not symmetric can always be decomposed into the product 
of a rotation and a pure reflection, the latter being symmetric and self-inverse. 
Moreover, this decomposition can take on the form of any of the two possible 
orderings of the rotation and the reflection. Note, however, that once the or-
der has been selected, the decomposition is not unique. Indeed, if we want to 
decompose T in the above paragraph into the product QR, then we can freely 
choose the unit normal n of the plane of reflection and write 
R = 1 - 2nn'^ 
vector n then being found from 
nn^ = i(l-R) 
Hence, the factor Q of that decomposition is obtained as 
Q = TR-^ = T R = T - 2(Tn)n^ 
where use has been made of the self-inverse property of R. Any other selection 
of vector n will lead to a different decomposition of T. 
Example 2.4.1 Join the palms of your two hands in the position adopted by 
swimmers when preparing for plunging, while holding a sheet of paper between 
them. The sheet defines a plane in each hand that we will call the hand plane, 
its unit normal, pointing outside of the hand, being called the hand normal 
and represented as vectors nji and nj, for the right and left hand, respectively. 
Moreover, let oji and OL denote unit vectors pointing in the direction of the 
finger axes of each of the two hands. Thus, in the swimmer position described 
above, TCIL = âTIR and o^ = OR. 
NOW, without moving your right hand, let 
the left hand attain a position whereby the left-hand normal lies at right angles 
with the right-hand normal, the palm pointing downwards and the finger axes of 
the two hands remaining parallel. Find the representation of the transformation 
carrying the right hand to the final configuration of the left hand, in terms of 
the unit vectors ni? and OR. 
Solution: Let us regard the desired transformation T as the product of a rotation 
Q by a pure reflection R, in the form T = QR. Thus, the transformation occurs 
so that the reflection takes place first, then the rotation. The reflection is simply 
that mapping the right hand into the left hand, and hence, the reflection plane 
is simply the hand plane, i.e., 
R = 1 - 
2nRnl 
Moreover, the left hand rotates from the swimmer position about an axis parallel 
to the finger axes through an angle of 90Â° clockwise from your viewpoint, i.e.. 

56 
2. Mathematical 
Background 
in the positive direction of vector OR. Hence, the form of the rotation involved 
can be derived readily from eq.(2.48) and the above information, namely, 
Q = OROJ^ + OR 
where OR is the cross-product matrix of OR. Hence, upon performing the 
product QR, we have 
T = Oi^o^ + 20R - 2{oR X nR)nl 
which is the transformation sought. 
2.5 
Coordinate Transformations and Homoge-
neous Coordinates 
Crucial to robotics is the unambiguous description of the geometric relations 
among the various bodies in the environment surrounding a robot. These re-
lations are established by means of coordinate frames, or frames, for brevity, 
attached to each rigid body in the scene, including the robot links. The origins 
of these frames, moreover, are set at landmark points and orientations defined by 
key geometric entities like lines and planes. For example, in Chapter 4 we attach 
two frames to every moving link of a serial robot, with origin at a point on each 
of the axis of the two joints coupling this link with its two neighbors. Moreover, 
the Z-axis of each frame is defined, according to the Denavit-Hartenberg nota-
tion, introduced in that chapter, along each joint axis, while the X-axis of the 
frame closer to the baseâtermed the fore frameâis defined along the common 
perpendicular to the two joint axes. The origin of the same frame is thus defined 
as the intersection of the fore axis with the common perpendicular to the two 
axes. This section is devoted to the study of the coordinate transformations of 
vectors when these are represented in various frames. 
2.5.1 
Coordinate Transformations Between Frames 
with a Common Origin 
We will refer to two coordinate frames in this section, namely, A = {X, F, Z} 
and B = {A*, y, Z}. Moreover, let Q be the rotation carrying A into B, i.e., 
Q: 
A 
-^ 
B 
(2.81) 
The purpose of this subsection is to establish the relation between the represen-
tations of the position vector of a point P in ^ and in B, denoted by [p]^ and 
[p]^, respectively. Let 
[P]A 
= 
(2.82) 

2.5 Coordinate Transformations and Homogeneous Coordinates 
57 
We want to find [p]^ in terms of [p]^ and Q, when the latter is represented 
in either frame. The coordinate transformation can best be understood if we 
regard point P as attached to frame A, as if it were a point of a box with sides 
of lengths x, y, and z^ as indicated in Fig. 2.4(a). Now, frame A undergoes a 
rotation Q about its origin that carries it into a new attitude, that of frame 
B, as illustrated in Fig. 2.4(b). Point P in its rotated position is labeled iT, of 
position vector TT, i.e., 
TT = Qp 
(2.83) 
It is apparent that the relative position of point P with respect to its box does 
not change under the foregoing rotation, and hence. 
[7T]I 
Moreover, let 
[^\A 
= 
(2.84) 
(2.85) 
The relation between the two representations of the position vector of any point 
of the 3-dimensional Euclidean space is given by 
Theorem 2.5.1 The representations of the position vector TT of any point in 
two frames A and B, denoted by [TT]^ and [7T]B, respectively, are related by 
[^]A 
= 
[Q]A[^]B 
(2.86) 
Proof: Let us write eq.(2.83) in A: 
[^]A 
= [Q]A[P]A 
(2.87) 
Now, from Fig. 2.4(b) and eqs.(2.82) and (2.84) it is apparent that 
MB 
= [P]A 
(2.88) 
Upon substituting eq.(2.88) into eq.(2.87), we obtain 
MA 
= [Q]A[^]B 
(2.89) 
q.e.d. Moreover, we have 
Theorem 2.5.2 The representations of Q carrying A into B in these two 
frames are identical, i.e., 
[ Q U = [Q]^ 
(2.90) 

58 
(a) 
2. Mathematical 
Background 
(b) 
Figure 2.4: Coordinate transformation: (a) coordinates of point P in the A-
frame; and (b) relative orientation of frame B with respect to A 
Proof: Upon substitution of eq.(2.83) into eq.(2.86), we obtain 
[QPU 
= 
[Q]A[QP]B 
or 
[Q]A[P]A 
= 
[Q]A[QP]B 
Now, since Q is orthogonal, it is nonsingular, and hence, [Q]^ can be deleted 
from the foregoing equation, thus leading to 
[P]A 
= 
[Q]J3[P]B 
(2.91) 
However, by virtue of Theorem 2.5.1, the two representations of p observe the 
relation 
[P]A 
= [Q]A[P]B 
(2.92) 
the theorem being proved upon equating the right-hand sides of eqs.(2.91) and 
(2.92). 
Note that the foregoing theorem states a relation valid only for the conditions 
stated therein. The reader should not conclude from this result that rotation 
matrices have the same representations in every frame. This point is stressed 
in Example 2.5.1. Furthermore, we have 
Theorem 2.5.3 The inverse relation of Theorem 2.5.1 is given by 
[^]B 
= [Q'^]BMA 
(2.93) 
Proof: This is straightforward in light of the two foregoing theorems, and is left 
to the reader as an exercise. 

2.5 Coordinate Transformations and Homogeneous Coordinates 
59 
Figure 2.5: Coordinate frames A and B with a common origin 
Example 2.5.1 Coordinate frames A and B are shown in Fig. 2.5. Find the 
representations of Q rotating A into B in these two frames and show that they 
are identical. Moreover, if[p]A = [1> 1> 1]^; fi'^d [P]B-
Solution: Let i, j , and k be unit vectors in the directions of the -Y-, Y-, and 
Z-axes, respectively; unit vectors t, 7, and K are defined likewise as parallel to 
the A*-, y-, and Z-axes of Fig. 2.5. Therefore, 
Q i = ^ = - k , 
Qj = 7 = - i , 
Qk = K=j 
Therefore, using Definition 2.2.1, the matrix representation of Q carrying A 
into B, in A, is given by 
[QU = 
0 - 1 0 
0 
0 
1 
- 1 0 0 
Now, in order to find [ Q ]B, we apply Q to the three unit vectors of B, t, 7, 
and K. Thus, for t, we have 
0 
0 
-1 
- 1 
0' 
0 
1 
0 
0 
" 0 " 
0 
- 1 
= 
â¢ 0 " 
- 1 
0 
Qt = 
Likewise, 
Q7 = -i-, 
Q K = 7 
again, from Definition 2.2.1, we have 
= -i = 
-K 
[Q]B 
= 
0 - 1 0 
0 
0 
1 
- 1 0 
0 
= [QU 

60 
2. Mathematical 
Background 
1 
0 
0 
0 
COS(f) 
SilKJ) 
0 
â sm(f) 
COS(f) 
thereby confirming Theorem 2.5.2. Note that the representation of this matrix 
in any other coordinate frame would be different. For example, if we represent 
this matrix in a frame whose X-axis is directed along the axis of rotation of Q, 
then we end up with the X-canonical representation of Q, namely, 
[Qk = 
with the angle of rotation (j) being readily computed as ^ = 120Â°, which thus 
yields 
[ 1 0 
0 
" 
[Q]x= 
0 
- 1 / 2 
- v ^ / 2 
[O V3/2 
- 1 / 2 _ 
Apparently, the entries of [Q]x are different from those of [Q]^ and [ Q ] B 
found above. 
Now, from eq.(2.93), 
[P]B = 
0 
"1" 
1 
1 
= 
â¢ - 1 " 
- 1 
1 
a result that can be readily verified by inspection. 
2.5.2 
Coordinate Transformation with Origin Shift 
Now, if the coordinate origins do not coincide, let b be the position vector of O, 
the origin of B, from O, the origin of A, as shown in Fig. 2.6. The corresponding 
coordinate transformation from A to B, the counterpart of Theorem 2.5.1, is 
given below. 
Theorem 2.5.4 The representations of the position vector p of a point P of 
the Euclidean 3-dimensional space in two frames A and B are related by 
(2.94a) 
(2.94b) 
with h defined as the vector directed from the origin of A to that of B, and TT 
the vector directed from the origin of B to P, as depicted in Fig. 2.6. 
Proof: We have, from Fig. 2.6, 
p = b + TT 
If we express the above equation in the .A-frame, we obtain 
(2.95) 

2.5 Coordinate Transformations and Homogeneous Coordinates 
61 
Figure 2.6: Coordinate frames with different origins 
where TT is assumed to be readily available in B, and so the foregoing equation 
must be expressed as 
which thus proves eq.(2.94a). To prove eq.(2.94b), we simply solve eq.(2.95) for 
TT and apply eq.(2.93) to the equation thus resulting, which readily leads to the 
desired relation. 
Example 2.5.2 / / [ b ] ^ = [â1,-1, â1]"^ and A and B have the relative ori-
entations given in Example 2.5.1, find the position vector, in B, of a point P of 
position vector [p]^ given as in the same example. 
Solution: What we obviously need is [TTJ^, which is given in eq.(2.94b). We 
thus compute first the sum inside the parentheses of that equation, i.e.. 
[-bU + [pU 
We need further [ Q ^ ] B , which can be readily derived from [Q]^. We do not 
have as yet this matrix, but we have [Q^]^, which is identical to [Q^J^g by 
virtue of Theorem 2.5.2. Therefore, 
['7r]s = 
0 
0 
-1 
0 
0 
1 
- 1 " 
0 
0 
"2" 
2 
2 
= 
" - 2 " 
- 2 
2 
a result that the reader is invited to verify by inspection. 

62 
2. Mathematical 
Background 
2.5.3 
Homogeneous Coordinates 
The general coordinate transformation, involving a shift of the origin, is not 
linear, in general, as can be readily realized by virtue of the nonhomogeneous 
term involved, i.e., the first term of the right-hand side of eq.(2.94a), which 
is independent of p. Such a transformation, nevertheless, can be represented 
in homogeneous form if homogeneous coordinates are introduced. These are 
defined below: Let [P]M be the coordinate array oi a finite point P in reference 
frame M. 
What we mean by a finite point is one whose coordinates are all 
finite. We are thus assuming that the point P at hand is not at infinity^ points 
at infinity being dealt with later. The homogeneous coordinates of P are those 
in the 4-dimensional array {P}AI? defined as 
{V}M = 
[P]M 
1 
(2.96) 
The affine transformation of eq.(2.94a) can now be rewritten in homogene-
ous-coordinate form as 
{p}^ 
= {T}AU}B 
(2.97) 
where {T}^ is defined as a 4 x 4 array, i.e.. 
[QU 
[bU 
(2.98) 
Furthermore, similar to Theorem 2.5.2, we have 
Theorem 2.5.5 The representations of {T} carrying coordinates in frame B 
into coordinates in frame A, in these two frames, are identical: 
{TU = {T}B 
(2.99) 
The inverse transformation of that defined in eq.(2.98) is derived from eqs.(2.94a 
& b), i.e., 
.[0^]Â« 
1 
. 
{T-'h 
(2.100) 
Furthermore, homogeneous transformations can be concatenated. Indeed, 
let !Fk,ioT k = i â l,i, i + 1, denote three coordinate frames, with origins at Ok-
Moreover, let Qi_i be the rotation carrying !Fi-i into an orientation coinciding 
with that of J^. If a similar definition for Qi is adopted, then Q, denotes the 
rotation carrying J^i into an orientation coinciding with that of J^i+i. First, the 
case in which all three origins coincide is considered. Clearly, 
[p]i = 
[Qti]i-i[p]i-i 
[p]m = [Ql]i[p]i = [Qf MQf-i]Â«-i[p].-i 
(2.101) 
(2.102) 

2.5 Coordinate Transformations and Homogeneous Coordinates 
63 
the inverse relation of that appearing in eq.(2.102) being 
[p]i-i = [Qi-i]i-i[Qi]i[p]i+i 
(2.103) 
If now the origins do not coincide, let a^_i and a^ denote the vectors Oi-iOi 
and OiOi+i, respectively. The homogeneous-coordinate transformations {T^_i}-i_i 
and {Ti}i thus arising are obviously 
{Ti_i}i_i 
[Qz-iji-i 
[ai_i]i_i , 
{Ti}i = [Qi]i 
[eah 
1 
whereas their inverse transformations are 
[Qt,]i 
[Qf_i]a-ai_i]i_i 
{'TT'h+i 
= 
[ o ^ ] m 
1 
Hence, the coordinate transformations involved are^ 
{p}i_i = {Ti_i}i_i{p}i 
{p}i_i = {Ti_i}i_i{Ti}i{p}i+i 
the corresponding inverse transformations being 
{p}i = {Tr_\}i_i{p}i_i 
(2.104) 
(2.105) 
(2.106) 
(2.107) 
(2.108) 
(2.109) 
(2.110) 
Now, if P lies at infinity, we can express its homogeneous coordinates in a 
simpler form. To this end, we rewrite expression (2.96) in the form 
{P}M 
= IIPII 
1/IIPII 
and hence, 
or 
lim 
{P}M= 
( 
lim 
IIPII) ( 
lim 
lim { P } M = ( l i m 
||p||) 
VIIPII 
0 
We now define the homogeneous coordinates of a point P lying at infinity as 
the 4-dimensional array appearing in the foregoing expression, i.e.. 
{POO}M 
= 
[^]M 
0 
(2.111) 
^The derivations below are more easily understood with the aid of Theorem 2.5.5, under 
which {Ti}i 
= { T ^ t - i 

64 
2. Mathematical 
Background 
which means that a point at infinity, in homogeneous coordinates, has only a 
direction, given by the unit vector e, but an undefined location. When working 
with objects within the atmosphere of the Earth, for example, stars can be 
regarded as lying at infinity, and hence, their location is completely specified 
simply by their longitude and latitude, which suffice to define the direction 
cosines of a unit vector in spherical coordinates. 
On the other hand, a rotation matrix can be regarded as composed of three 
columns, each representing a unit vector, e.g., 
Q = [ei 
e2 
63] 
where the triad { e^ }f is orthonormal. We can thus represent { T }^ of eq.(2.98) 
in the form 
ei 
62 es 
b 
0 
0 
0 
1 
{T}^ = 
(2.112) 
thereby concluding that the columns of the 4 x 4 matrix T represent the homo-
geneous coordinates of a set of corresponding points, the first three of which lie 
at infinity. 
Example 2.5.3 An ellipsoid is centered at a point OB of position vector h, its 
three axes X, y, and Z defining a coordinate frame B. Moreover, its semiaxes 
have lengths a = 1, h = 2, and c = 3, the coordinates of OB in a coordinate 
frame A being [b]^ = [1,2,3]^. 
Additionally, the direction cosines of X 
are (0.933, 0.067, â0.354), whereas y is perpendicular to b and to the unit 
vector u that is parallel to the X-axis. Find the equation of the ellipsoid in A. 
(This example has relevance in collision-avoidance algorithms, some of which 
approximate manipulator links as ellipsoids, thereby easing tremendously the 
computational 
requirements.) 
Solution: Let u, v, and w be unit vectors parallel to the A*-, 3^-, and Z-axes, 
respectively. Then, 
[uU = 
0.933 
0.067 
-0.354 
V 
= u X b 
W = U X V 
and hence. 
[vU 
0.243 
-0.843 
0.481 
[w]^ = 
-0.266 
-0.535 
-0.803 
from which the rotation matrix Q, rotating the axes of A into orientations 
coinciding with those of B, can be readily represented in A, or in B for that 
matter, as 
[Q]^ = [u, V, w ] ^ = 
0.933 
0.067 
-0.354 
0.243 
-0.843 
0.481 
-0.266 
-0.535 
-0.803 

2.6 Similarity 
Transformations 
65 
On the other hand, if the coordinates of a point P in ^ and B are [p]^ = 
[Pij P2, Ps]^ and [Tr]^ = [TTI, 7r2, TTS]^, respectively, then the equation of the 
elHpsoid in i3 is, apparently, 
B: ?^ + " + 
12 
22 ' 32 = 1 
Now, what is needed in order to derive the equation of the ellipsoid in A is 
simply a relation between the coordinates of P in ^B and those in A. These 
coordinates are related by eq.(2.94b), which requires [Q^]^, while we have 
[Q]^. Nevertheless, by virtue of Theorem 2.5.2 
0.933 
0.243 
-0.266 
0.067 
-0.354 
-0.843 
0.481 
-0.535 
-0.803 
Hence, 
0.067 
â¢0.843 
â¢0.535 
-0.354 
0.481 
-0.803 
/ 
\ 
- 1 
- 2 
- 3 + 
Pi 
P2 
P3 
[Q^]^ = [Q^]^ = 
0.933 
[7r]B= I 0.243 
-0.266 
Therefore, 
TTi = 0.933pi + 0.067p2 - 0.354p3 - 0.005 
7r2 = 0.243pi - 0M3p2 + 0.481p3 
TTs = -0.266j9i - 0.535p2 - 0.803^3 + 3.745 
Substitution of the foregoing relations into the ellipsoid equation in J3 leads to 
A: 
32.1521pi^ + 7.70235p2^ + 9.17286p3^ - 8.30524pi - 16.0527p2 
-23.9304p3 + 9.32655pip2 + 9.02784^2^3 - 19.9676piP3 + 20.101 = 0 
which is the equation sought, as obtained using computer algebra. 
2.6 
Similarity Transformations 
Transformations of the position vector of points under a change of coordinate 
frame involving both a translation of the origin and a rotation of the coordinate 
axes was the main subject of Section 2.5. In this section, we study the transfor-
mations of components of vectors other than the position vector, while extending 
the concept to the transformation of matrix entries. How these transformations 
take place is the subject of this section. 
What is involved in the present discussion is a change of basis of the associ-
ated vector spaces, and hence, this is not limited to 3-dimensional vector spaces. 
That is, n-dimensional vector spaces will be studied in this section. Moreover, 

66 
2. Mathematical 
Background 
only isomorphisms, i.e., transformations L of the n-dimensional vector space V 
onto itself will be considered. Let A = {^i}i and B = {hi}i be two different 
bases of the same space V. Hence, any vector v of V can be expressed in either 
of two ways, namely. 
V = aiai + a2SL2 H 
h anSin 
V = /3ibi + /32b2 + â¢ â¢ â¢ + /3nbn 
from which two representations of v are readily derived, namely. 
(2.113) 
(2.114) 
[vU = 
a i 
[V]H = 
/?1 
(2.115) 
Furthermore, let the two foregoing bases be related by 
bj = aijSLi + a2jSL2 -\ 
h anjSLn, j = 1,..., n 
(2.116) 
Now, in order to find the relationship between the two representations of 
eq.(2.115), eq.(2.116) is substituted into eq.(2.114), which yields 
V = /?i(aiiai +a2ia2 + 
hanian) 
-f ;52(ai2ai + a22a2 H 
h an2Sin) 
This can be rearranged to yield 
V = (aii/3i + ai2/32 + â¢ â¢ â¢ + ain/?n)ai 
+ (^21A -f ^22/32 + â¢ â¢ â¢ + a2n/3n)a2 
(2.117) 
+ (ttnl/?! + an2/32 H 
h ^nn/5n)an 
Comparing eq.(2.118) with eq.(2.113), one readily derives 
[vU = [AUv]s 
where 
[A] A -
an 
^21 
O'nl 
ttl2 
â¢ 
^22 
â¢ 
^n2 
* 
â¢â¢ 
^In 
â¢ â¢ 
0,2n 
(^nn 
(2.118) 
(2.119) 
(2.120) 

2.6 Similarity 
Transformations 
67 
which are the relations sought. Clearly, the inverse relationship of eq.(2.119) is 
[V]B = [ A - I U [ V U 
(2.121) 
Next, let L have the representation in A given below: 
[LU = 
r ' l i 
1x2 
hi 
I22 
Inl 
I n2 
hn 
hn 
''Tin 
(2.122) 
Now we aim at finding the relationship between [L]^ and [L]^. To this end, 
let w be the image of v under L, i.e.. 
Lv = w 
which can be expressed in terms of either 
AOYBQ^ 
[LU[vU = [wU 
(2.123) 
(2.124) 
(2.125) 
Further, since L is an isomorphism by hypothesis, w of eq.(2.123) Hes in the 
same space V as v. Hence, similar to eq.(2.119), 
[ W U = [ A U [ W ] B 
(2.126) 
Now, substitution of eqs.(2.119) and (2.126) into eq.(2.124) yields 
[ A U [ W ] B = [ L U [ A ] ^ [ V ] B 
(2.127) 
which can be readily rearranged in the form 
[W]B = [ A - I U [ L U [ A U [ V ] B 
(2.128) 
Comparing eq.(2.125) with eq.(2.128) readily leads to 
[ L ] B = [ A - I U [ L U [ A U 
(2.129) 
which upon rearrangement, becomes 
[L]^ = [ A U [ L ] s [ A - i U 
(2.130) 
Now, paraphrasing Theorems 2.5.2 and 2.5.4, we can state 
Theorem 2.6.1 The representations of A carrying A into B in these two 
frames are identical, i.e., 
[A]A = [A]B 
(2.131) 

68 
2. Mathematical 
Background 
Proof: Substitute L for A in eq.(2.129) to obtain the above relation, q.e.d. 
Relations (2.119), (2.121), (2.129), and (2.130) constitute what are called 
similarity transformations. These are important because they preserve invariant 
quantities such as the eigenvalues and eigenvectors of matrices, the magnitudes 
of vectors, the angles between vectors, and so on. Indeed, one has: 
Theorem 2.6.2 The characteristic polynomial of a given nxn matrix remains 
unchanged under a similarity transformation. Moreover, the eigenvalues of two 
matrix representations of the same nxn 
linear transformation are identical, 
and if[e]B is an eigenvector ofl'L]^, 
then under the similarity 
transformation 
(2.130), the corresponding eigenvector o/[L]^ is [e]^ = [A]^[e]^. 
Proof: From eq.(2.11), the characteristic polynomial of [L]^? is 
P(A)=det(A[l]s-[L]5) 
(2.132) 
which can be rewritten as 
P ( A ) = d e t ( A [ A - i U [ l U [ A U - [ A - i U [ L U [ A ] ^ ) 
= d e t a A - i U ( A [ l U - [ L U ) [ A U ) 
= detaA-iU)det(A[lU - [LU)det([AU) 
But 
det([A-M^)det([AU) = 1 
and hence, the characteristic polynomial of [L]^ is identical to that of [L]^. 
Since both representations have the same characteristic polynomial, they have 
the same eigenvalues. Now, if [e]^ is an eigenvector of [L]^ associated with 
the eigenvalue A, then 
[L]B[e]^ = A[e]5 
Next, eq.(2.129) is substituted into the foregoing equation, which thus leads to 
[ A - i U [ L U [ A U [ e ] B = A[e]B 
Upon rearrangement, this equation becomes 
[LU[AU[e]B = A[AUe]B 
(2.133) 
whence it is apparent that [ A]^[e]0 is an eigenvector of [L]^ associated with 
the eigenvalue A, q.e.d. 
Theorem 2.6.3 / / [ L ] ^ and [Lj^g are related by the similarity 
transformation 
(2.129), then 
[L^]5 = [ A - i U [ L ^ U [ A U 
(2.134) 
for any integer k. 

2.6 Similarity Transformations 
69 
Proof: This is done by induction. For fc = 2, one has 
[L^IB = [ A - i U [ L U [ A U [ A - i U [ L U [ A U 
= [ A - M ^ [ L ^ U [ A U 
Now, assume that the proposed relation holds for k = n. Then, 
[L"+i]^ = [ A - i U [ L " U [ A U [ A - i U [ L U [ A U 
= [ A - i ] ^ [ L " + i U [ A U 
i.e., the relation holds for fc = n + 1 as well, thereby completing the proof. 
Theorem 2.6.4 The trace of anxn 
matrix does not change under a similarity 
transformation. 
Proof: A preliminary relation will be needed: Let [A], [B] and [C] be three 
different n x n matrix arrays, in a given reference frame, that need not be 
indicated with any subscript. Moreover, let a^j, bij, and Cij be the components 
of the said arrays, with indices ranging from 1 to n. Hence, using standard 
index notation, 
tr([A] [B] [C]) = aijbjkCki = bj^Ckiaij = tr([B] [C] [A]) 
(2.135) 
Taking the trace of both sides of eq.(2.129) and applying the foregoing result 
produces 
t r ( [ L ] ^ ) = t r ( [ A - i U [ L U [ A U ) = t r ( [ A U [ A - i U L U ) = t r ( [ L U ) 
(2.136) 
thereby proving that the trace remains unchanged under a similarity transfor-
mation. 
Example 2.6.1 We consider the equilateral triangle sketched in Fig. 2.7, of 
side length equal to 2, with vertices Pi, P2, and Ps, and coordinate frames A 
and B of axes X, Y and X', Y', respectively, both with origin at the centroid of 
the triangle. Let P be a 2 x 2 matrix defined by 
P = [pi 
P2] 
with Pi denoting the position vector of Pi in a given coordinate frame. 
Show 
that matrix P does not obey a similarity transformation upon a change of frame, 
and compute its trace in frames A and B to make it apparent that this matrix 
does not comply with the conditions of Theorem 2.6.4-
Solution: Prom the figure it is apparent that 
l ^ J - 4 - [_V3/3 
2A/3/3 
0 
1 
- 2 ^ 3 / 3 
V3/3 

70 
2. Mathematical 
Background 
Figure 2.7: Two coordinate frames used to represent the position vectors of the 
corners of an equilateral triangle 
Apparently, 
tTi[PU) 
= l + ^^tT([P]s) 
= 
^ 
The reason why the trace of this matrix did not remain unchanged under a 
coordinate transformation is that the matrix does not obey a similarity trans-
formation under a change of coordinates. Indeed, vectors p^ change as 
[Pi]A = [Q]^[Pi]s 
under a change of coordinates from B to A, with Q denoting the rotation car-
rying A into B. Hence, 
[ P U = [QU[P]B 
which is different from the similarity transformation of eq.(2.130). However, if 
we now define 
then 
mu = 
1 
-V3/3 
-N/3/3 
5/3 
[ R 1 B = 
1 
v^/3 
\/3/3 
5/3 
and hence, 
tr([RU)=tr([R]B) = 
thereby showing that the trace of R does not change under a change of frame. In 
order to verify whether matrix R complies with the conditions of Theorem 2.6.4, 
we notice that, under a change of frame, matrix R changes as 
[RU = [PP^U = [QU^MQW^hf 
= [QU[PP]?[Q^U 
which is indeed a similarity transformation. 

2.7 Invariance Concepts 
71 
2.7 
Invariance Concepts 
From Example 2.6.1 it is apparent that certain properties, like the trace of 
certain square matrices, do not change under a coordinate transformation. For 
this reason, a matrix like R of that example is said to be frame-invariant, or 
simply invariant, whereas matrix P of the same example is not. In this section, 
we formally define the concept of invariance and highlight its applications and 
its role in robotics. Let a scalar, a vector, and a matrix function of the position 
vector p be denoted by /(p), f (p) and F(p), respectively. The representations 
of f (p) in two different coordinate frames, labelled A and B, will be indicated as 
[f (p)]^ and [f (p)]^, respectively, with a similar notation for the representations 
of F(p). Moreover, let the two frames differ both in the location of their origins 
and in their orientations. Additionally, let the proper orthogonal matrix [Q]^ 
denote the rotation of coordinate frame A into B. Then, the scalar function 
/(p) is said to be frame invariant, or invariant for brevity, if 
/([PIB) = filPU) 
(2-137) 
Moreover, the vector quantity f is said to be invariant if 
[f]^ = [Q]^[f]s 
(2.138) 
and finally, the matrix quantity F is said to be invariant if 
[^U = MAWUCI^U 
(2.139) 
Thus, the difference in origin location becomes irrelevant in this context, and 
hence, will no longer be considered. From the foregoing discussion, it is clear 
that the same vector quantity has different components in different coordinate 
frames; moreover, the same matrix quantity has different entries in different 
coordinate frames. However, certain scalar quantities associated with vectors, 
e.g., the inner product, and matrices, e.g., the matrix moments, to be defined 
presently, remain unchanged under a change of frame. Additionally, such vector 
operations as the cross product of two vectors are invariant. In fact, the scalar 
product of two vectors a and b remains unchanged under a change of frame, 
[ a ] ^ [ b U = [a]^[b]e 
(2.140) 
Additionally, 
[ a x b ] ^ = [ Q ] ^ [ a x b ] g 
(2.141) 
The fcth moment of a n x n matrix T, denoted by Z^, is defined as (Leigh, 
1968) 
Ik =tr(T^), fc = 0,l,... 
(2.142) 
where To = tr(l) = n. Now we have 
Theorem 2.7.1 The moments of a n x n matrix are invariant under a simi-
larity 
transformation. 

72 
2. Mathematical 
Background 
Proof: This is straightforward. Indeed, from Theorem 2.6.3, we have 
[T>']B = [A-'UT'']A[AU 
(2.143) 
Now, let [Ik]^ and [2k]^ denote the fcth moment of [ T ] ^ and [T]^, respec-
tively. Thus, 
thereby completing the proof. 
Furthermore, 
Theorem 2.7.2 A n x n matrix has only n linearly independent 
moments. 
Proof: Let the characteristic polynomial of T be 
P(A) = ao + ai A + â¢ â¢ â¢ + ^n-iA^-^ + A^ = 0 
(2.144) 
Upon application of the Cayley-Hamilton Theorem, eq.(2.144) leads to 
aol + aiT + ... H- an-iT^"^ + T^ = 0 
(2.145) 
where 1 denotes the n x n identity matrix. 
Now, if we take the trace of both sides of eq.(2.145), and Definition (2.142) 
is recalled, one has 
aolo + aili H 
h an-iXn-i + 2n = 0 
(2.146) 
from which it is apparent that Xn can be expressed as a linear combination of 
the first n moments of T, { Xk }o~^- By simple induction, one can likewise prove 
that the mth moment is dependent upon the first n moments if m > n, thereby 
completing the proof. Also notice that XQ = n, and hence, all n x n matrices 
share the same zeroth moment XQ. 
The vector invariants of a n x n matrix are its eigenvectors, which have a di-
rect geometric significance in the case of symmetric matrices. The eigenvalues of 
these matrices are all real, its eigenvectors being also real and mutually orthogo-
nal. Skew-symmetric matrices, in general, need not have either real eigenvalues 
or real eigenvectors. However, if we limit ourselves to 3 x 3 skew-symmetric 
matrices, exactly one of their eigenvalues, and its associated eigenvector, are 
both real. The eigenvalue of interest is 0, and the associated vector is the axial 
vector of the matrix under study. 
It is now apparent that two n x n matrices related by a similarity transfor-
mation have the same set of moments. Now, by virtue of Theorem 2.7.2, one 
may be tempted to think that if two nxn matrices share their first n moments 
{Xk }o~^5 then the two matrices are related by a similarity transformation. To 
prove that this is not the case, let two nxn matrices A and B have character-
istic polynomials with coefficients {ak}'^~^ and {6fc}o~^? respectively, the two 

2.7 Invariance Concepts 
73 
sets being not necessarily identical. Moreover, let the n -f 1 moments of A and 
B be denoted by {Ik}o and {2^}^, with 
XQ = 2"o = n, 
Xk=Xl, 
for 
/c = l , . . . , n - l 
Hence, from eq.(2.146), 
^n = â{o^on + aiXi + ... 4- 
an-iXn-i) 
1'n = -{bon 
+ &lXi + . . . + 
bn-lln-l) 
Therefore, in spite of Theorem 2.7.2, two nxn matrices with identical moments 
Xk = X^, for fc = 1,... ,n â 1 may still have X^ ^ X'^ if these matrices are not 
related by a similarity transformation, and hence, have distinct characteristic 
polynomials. We thus have 
Theorem 2.7.3 Two nxn 
matrices are related by a similarity 
transformation 
if and only if their n moments {Xk}i are identical. 
Hence, 
Corollary 2.7.1 // two nxn 
matrices share the same n moments {Xk}i, then 
their characteristic polynomials are identical. 
Consider the two matrices A and B given below: 
A = 
1 
0 
0 1 
B = 
The two foregoing matrices cannot possibly be related by a similarity transfor-
mation, for the first one is the identity matrix, while the second is not. However, 
the two matrices share the two moments XQ = 2 and Xi = 2. Let us now compute 
the second moments of these matrices: 
tr(A2) = 2, 
tr(B2) = tr 5 4 
4 5 = 10 
which are indeed different. Therefore, to test whether two different nxn 
ma-
trices represent the same linear transformation, and hence, are related by a 
similarity transformation, we must verify that they share the same set of n + 1 
moments { Z^ }Q . In fact, since all n x n matrices share the same zeroth moment, 
only the n moments {Xk }i need be tested for similarity verification. That is, if 
two nxn 
matrices share the same n moments {Xk }y, then they represent the 
same linear transformation, albeit in different coordinate frames. 
The foregoing discussion does not apply, in general, to nonsymmetric ma-
trices, for these matrices are not fully characterized by their eigenvalues. For 
example, consider the matrix 
A = 
1 
1 
0 1 
A^ = 
1 2 
0 1 

74 
2. Mathematical 
Background 
Its two moments of interest are Xi = tr(A) = 2, 22 = 2, which happen to be the 
corresponding moments of the 2 x 2 identity matrix as well. However, while the 
identity matrix leaves all 2-dimensional vectors unchanged, matrix A does not. 
Now, if two symmetric matrices, say A and B, represent the same trans-
formation, they are related by a similarity transformation, i.e., a nonsingular 
matrix T exists such that 
B = T-iAT 
Given A and T, then, finding B is trivial, a similar statement holding if B 
and T are given; however, if A and B are given, finding T is more difficult. The 
latter problem occurs sometimes in robotics in the context of calibration, to be 
discussed in Subsection 2.7.1. 
Example 2.7.1 Two symmetric matrices are displayed below. Find out whether 
they are related by a similarity 
transformation. 
A = 
1 
0 
r 
0 
1 0 
1 
0 2 
, 
B = 
"1 
0 
0 
0 
2 
- 1 
0 
- 1 
1 
Solution: The traces of the two matrices are apparently identical, namely, 4. 
Now we have to verify whether their second and third moments are also identical. 
To do this, we need the square and the cube of the two matrices, from which 
we then compute their traces. Thus, from 
A 2 
= 
we readily obtain 
Moreover, 
A' = 
[2 0 3] 
0 
1 0 
[3 0 5j 
tr(A^ 
"5 0 
8" 
0 
1 
0 
8 
0 
13 
, 
B'=\ 
1 
0 
0 
5 
0 
- 3 
) = tr(B2) = 8 
, 
B3 = 
[1 
0 
0 
13 
[o -8 
0 ] 
- 3 
2 J 
0 " 
- 8 
5 
whence 
tr(A^) = tr(B^) = 19 
Therefore, the two matrices are related by a similarity transformation. Hence, 
they represent the same linear transformation. 
Example 2.7.2 Same as Example 2.7.1, for the two matrices displayed below: 
A = 
ri 
0 
2' 
0 
1 0 
2 0 0 
, 
B = 
"1 
1 
r 
1 
1 0 
1 
0 0 
Solution: As in the previous example, the traces of these matrices are identical, 
i.e., 2. However, tr(A^) = 10, while tr(B^) = 6. We thus conclude that the two 
matrices cannot be related by a similarity transformation. 

2.7 Invariance Concepts 
75 
2.7.1 
Applications to Redundant Sensing 
A sensor, such as a camera or a range finder, is often mounted on a robotic 
end-effector to determine the poseâi.e., the position and orientation, as defined 
in Subsection 3.2.3âof an object. If redundant sensors are introduced, and 
we attach frames A and B to each of these, then each sensor can be used to 
determine the orientation of the end-effector with respect to a reference pose. 
This is a simple task, for all that is needed is to measure the rotation R that 
each of the foregoing frames underwent from the reference pose, in which these 
frames are denoted by Ao and So, respectively. Let us assume that these mea-
surements produce the orthogonal matrices A and B, representing R in ^ and 
S, respectively. With this information we would like to determine the relative 
orientation Q of frame B with respect to frame A, a problem that is called here 
instrument calibration. 
We thus have A = [ R ] ^ and B = [R]^, and hence, the algebraic problem 
at hand consists in determining [Q]^ or equivalently, [Q]^. The former can 
be obtained from the similarity transformation of eq.(2.139), which leads to 
A = [Q]^B[Q^U 
or 
A[QU = [QUB 
This problem could be solved if we had three invariant vectors associated 
with each of the two matrices A and B. Then, each corresponding pair of vectors 
of these triads would be related by eq.(2.138), thereby obtaining three such vec-
tor equations that should be sufficient to compute the nine components of the 
matrix Q rotating frame A into B. However, since A and B are orthogonal ma-
trices, they admit only one real invariant vector, namely, their axial vector, and 
we are short of two vector equations. We thus need two more invariant vectors, 
represented in both A and B^ to determine Q. The obvious way of obtaining 
one additional vector in each frame is to take not one, but two measurements 
of the orientation of ^o and BQ with respect to A and B, respectively. Let the 
matrices representing these orientations be given, in each of the two coordinate 
frames, by A^ and B^, for i = 1,2. Moreover, let a^ and b^, for i = 1,2, be the 
axial vectors of matrices A^ and B^, respectively. 
Now we have two possibilities: (i) neither of ai and SL2 and, consequently, 
neither of bi and b2, is zero; and (ii) at least one of ai and a2, and conse-
quently, the corresponding vector of the {bi, b2 } pair, vanishes. In the first 
case, nothing prevents us from computing a third vector of each set, namely, 
a3 = ai X a2, 
ba = bi x b2 
(2.147) 
In the second case, however, we have two more possibilities, namely, the angle 
of rotation of that orthogonal matrix, Ai or A2, whose axial vector vanishes 
is either 0 or TT. If the foregoing angle vanishes, then A underwent a pure 
translation from Ao, the same holding, of course, for B and BQ. This means 
that the corresponding measurement becomes useless for our purposes, and a 

76 
2. Mathematical 
Background 
new measurement is needed, involving a rotation. If, on the other hand, the 
same angle is TT, then the associated rotation is symmetric and the unit vector e 
parallel to its axis can be determined from eq.(2.49) in both A and B. This unit 
vector, then, would play the role of the vanishing axial vector, and we would 
thus end up, in any event, with two pairs of nonzero vectors, {a^ }f and {b^ }f. 
As a consequence, we can always find two triads of nonzero vectors, { a^ }f and 
{ bi }f, that are related by 
^i - [Q]>^t)i, 
fori = 1,2,3 
(2.148) 
The problem at hand now reduces to computing [Q]^ from eq.(2.148). In 
order to perform this computation, we write the three foregoing equations in 
matrix form, namely. 
E = [QUF 
with E and F defined as 
E = [ai 
a2 
as], 
F = [bi 
b2 
bs] 
(2.149) 
(2.150) 
Now, by virtue of the form in which the two vector triads were defined, none of 
the two above matrices is singular, and hence, we have 
[QU = EF-i 
(2.151) 
Moreover, note that the inverse of F can be expressed in terms of its columns 
explicitly, without introducing components, if the concept of reciprocal bases is 
recalled (Brand, 1965). Thus, 
"-'i 
(b2 X h^Y 
(b3 X b i ) ^ 
(bi X b2)^ 
A = bi X b2 â¢ bs 
Therefore, 
[Q]^ = ^[ai(b2 X h^f 
+ a2(b3 X bi)^ + a3(bi x b2)^] 
(2.152) 
(2.153) 
thereby completing the computation of [Q]^ directly and with simple vector 
operations. 
Example 2.7.3 (Hand-Eye Calibration) Determine the relative orientation 
of a frame B attached to a camera mounted on a robot end-effector, with respect 
to a frame A fixed to the latter, as shown in Fig. 2.8. It is assumed that two 
measurements of the orientation of the two frames with respect to frames AQ and 
Bo in the reference configuration of the end-effector are available. These mea-
surements produce the orientation matrices A^ of the frame fixed to the camera 
and B^ of the frame fixed to the end-effector, for i = 1,2. The numerical data 
of this example are given below: 

2.7 Invariance Concepts 
77 
J^ 
J^ 
Figure 2.8: Measuring the orientation of a camera-fixed coordinate frame with 
respect to a frame fixed to a robotic end-effector 
Ai = 
Ao = 
Bi 
Bo = 
- 0.92592593 
0.28148148 
-0.25185185 
-0.83134406 
-0.52153607 
0.19200830 
-0.90268482 
0.38511568 
0.19195318 
-0.73851280 
-0.45524951 
-0.49733966 
-0.37037037 
-0.80740741 
0.45925926 
0.02335236 
0.31240270 
0.94969269 
0.10343126 
0.62720266 
-0.77195777 
-0.54317226 
0.83872293 
0.03882952 
-0.07407407 
0.51851852 
0.85185185 
-0.55526725' 
0.79398028 
-0.24753503 
-0.41768659 
-0.67698060 
-0.60599932 
0.39945305 
0.29881721 
-0.86668653 
Solution: Shiu and Ahmad (1987) formulated this problem in the form of a 
matrix linear homogeneous equation, while Chou and Kamel (1988) solved the 
same problem using quaternions and very cumbersome numerical methods that 
involve singular-value computations. The latter require an iterative procedure 
within a Newton-Raphson method, itself iterative, for nonlinear-equation solv-
ing. Other attempts to solve the same problem have been reported in the lit-
erature, but these also resorted to extremely complicated numerical procedures 
for nonlinear-equation solving (Chou and Kamel, 1991; Horaud and Dornaika, 

78 
2. Mathematical 
Background 
1995). The latter proposed a more concise method based on quaternionsâ 
isomorphic to the Euler-Rodrigues parametersâthat nevertheless is still com-
putationally expensive. 
More recently, Daniilidis (1999) proposed an algorithm based on dual quater-
nions to simultaneously estimate the relative pose of the two frames of interest. 
In this book we do not study either quaternionsâat least, not by this nameâor 
dual algebra; the former are, in fact, isomorphic to the Euler-Rodrigues param-
eters of a rotation, which were introduced in Subsection 2.3.6. Dual algebra, 
in turn, is used to manipulate scalars, vectors and matrices comprising one ro-
tation and one translation, or their statics counterparts, one moment and one 
force (Angeles, 1998). In the above reference, Daniilidis resorts to the singular-
value decomposition to find the relative pose in question, but this decomposition 
slows down the computational procedure. Angeles et al. (2000), in turn, pro-
posed an alternative approach based on the invariance concepts introduced in 
this section, that leads to an algorithm involving only linear equations. This al-
gorithm, moreover, relies on recursive least-square computations, thereby doing 
away with singular-value computations and allowing for real-time performance. 
This reference and (Daniilidis, 1999) report experimental results. 
The approach outlined in this example is essentially the same as that pro-
posed in (Angeles, 1989), although here we have streamlined the procedure of 
this reference. 
First, the vector of matrix A^, represented by a^, and the vector of matrix 
B^, represented by b^, for i = 1,2, are computed from simple differences of the 
off-diagonal entries of the foregoing matrices, followed by a division by 2 of all 
the entries thus resulting, which yields 
ai 
-0.02962963 
0.08888889 
0.32592593 
a2 = 
0.07784121 
-0.37363778 
-0.27244422 
bi = 
-0.04748859 
-0.30481989 
0.14084221 
bo = 
-0.12999385 
0.44869636 
0.04396138 
In the calculations below, 16 digits were used, but only eight are displayed. 
Furthermore, with the foregoing vectors, we compute as and hs from cross 
products, thus obtaining 
as 
0.09756097 
0.01730293 
0.00415020 
b3 = 
-0.07655343 
-0.01622096 
-0.06091842 
Furthermore, A is obtained as 
A = 0.00983460 

2.8 Exercises 
79 
while the individual rank-one matrices inside the brackets of eq.(2.153) are cal-
culated as 
ai(b2 x b s ) ^ = 
a2(b3 X bi)^ = 
a3(bi X b2)^ = 
0.00078822 
-0.00236467 
-0.00867044 
-0.00162359 
0.00779175 
0.00568148 
-0.00746863 
-0.00132460 
-0.00031771 
0.00033435 
-0.00100306 
-0.00367788 
0.00106467 
-0.00510945 
-0.00372564 
-0.00158253 
-0.00028067 
-0.00006732 
-0.00107955 
0.00323866 
0.01187508 
0.00175680 
-0.00843102 
-0.00614762 
-0.00594326 
-0.00105407 
-0.00025282 
whence Q in the A frame is readily obtained as 
thereby completing the desired computation 
-0.84436553 
0.41714750 
-0.33622873 
0.01865909 
0.65007032 
0.75964911 
-0.53545750 
-0.63514856 
0.55667078 
2.8 
Exercises 
2.1 Prove that the range and the nullspace of any linear transformation L of 
vector space U into vector space V are vector spaces as well, the former of 
V, the latter of U. 
2.2 Let L map U into V and dim{^} = n, dim{V} = m. Moreover, let TZ and 
J\f be the range and the nullspace of L, their dimensions being p and z/, 
respectively. Show that p-i- u = n. 
2.3 Given two arbitrary nonzero vectors u and v in f^, find the matrix P 
representing the projection of Â£^ onto the subspace spanned by u and v. 
2.4 Verify that P, whose matrix representation in a certain coordinate system 
is given below, is a projection. Then, describe it geometrically, i.e., iden-
tify the plane onto which the projection takes place. Moreover, find the 
nullspace of P. 
" 2 
1 - 1 " 
[P] = 
1 
2 
- 1 
1 
2.5 If for any 3-dimensional vectors a and v, matrix A is defined as 
d{a X v) 

80 
2. Mathematical 
Background 
then we have 
Show that A is skew-symmetric without introducing components. 
2.6 Let 11 and v be any 3-dimensional vectors, and define T as 
T = 1 + uv^ 
The (unit) eigenvectors of T are denoted by wi, W2, and W3. Show that, 
say, wi and W2 are any unit vectors perpendicular to v and different 
from each other, whereas W3 = u/||u||. Also show that the corresponding 
eigenvalues, denoted by Ai, A2, and A3, associated with wi, W2, and W3, 
respectively, are given as 
Ai = A2 = 1, 
A3 = 1 -f u-V 
2.7 Show that if u and v are any 3-dimensional vectors, then 
det(l -h uv'^) = 1 + u â¢ V 
Hint: Use the results of the Exercise 2.6. 
2.8 For the two unit vectors e and f in 3-dimensional space, define the two 
reflections 
Ri = 1 - 2ee^, 
R2 = 1 - 2f f^ 
Now, show that Q = R1R2 is a rigid-body rotation, and find its axis and 
its angle of rotation in terms of unit vectors e and f. Again, no components 
are permitted in this exercise. 
2.9 State the conditions on the unit vectors e and f, of two reflections Ri 
and R2, respectively, under which a given rotation Q can be factored into 
the reflections Ri and R2 given in the foregoing exercise. In other words, 
not every rotation matrix Q can be factored into those two reflections, for 
flxed e and f, but special cases can. Identify these cases. 
2.10 Prove that the eigenvalues of the cross-product matrix of the unit vector 
e are 0, j , and â j , where j = ^y^. 
Find the corresponding eigenvectors. 
2.11 Without resorting to components, prove that the eigenvalues of a proper 
orthogonal matrix Q are 1, e^^, and e~^^, with (p denoting the angle of 
rotation. Hint: Use the result of the foregoing exercise and the Cayley-
Hamilton Theorem. 

2.8 Exercises 
81 
2.12 Find the axis and the angle of rotation of the proper orthogonal matrix 
Q given below in a certain coordinate frame J^. 
[Q.] = i 
- 1 - 2 
2 â¢ 
- 2 
- 1 
- 2 
2 
- 2 
- 1 
2.13 Find E and 0 of the exponential representation of the rotation matrix 
given in Exercise 2.12. 
2.14 Cayley's Theorem, which is not to be confused with the Theorem of 
Cayley-Hamilton, states that every 3 x 3 proper orthogonal matrix Q 
can be uniquely factored as 
Q = ( l - S ) ( l + S)-i 
where S is a skew-symmetric matrix. Find a general expression for S 
in terms of Q, and state the condition under which this factoring is not 
possible. 
2.15 Find matrix S of Cayley's factoring for Q as given in Exercise 2.12. 
2.16 If Q represents a rotation about an axis parallel to the unit vector e 
through an angle (/>, then the Rodrigues vector p of this rotation can be 
defined as 
p = tan (I 
Note that if r and VQ denote the Euler-Rodrigues parameters of the rota-
tion under study, then p = r/ro. Show that 
p = âvect(S) 
for S given in Exercise 2.14. 
2.17 The vertices of a cube, labeled ^, B, ..., iJ, are located so that A, B, C, 
and D, as well as E, F, G, and iJ, are in clockwise order when viewed 
from outside. Moreover, AE, BH, CG, and DF are edges of the cube, 
which is to be manipulated so that a mapping of vertices takes place as 
indicated below: 
A^D, 
E-^A, 
B^C, 
F^ E, 
C^G, 
G^H, 
D^F 
H-^B 
Find the angle of rotation and the angles that the axis of rotation makes 
with edges AB, AD, and AE. 
2.18 (Euler angles) A rigid body can attain an arbitrary configuration starting 
from any reference configuration, 0, by means of the composition of three 
rotations about coordinate axes, as described below: Attach axes XQ, YQ, 
and ZQ to the body in the reference configuration and rotate the body 

82 
2. Mathematical 
Background 
through an angle (f) about ZQ, thus carrying the axes into Xi, Fi, and 
Zi (=Zo), respectively. Next, rotate the body through an angle 9 about 
axis Yi, thus carrying the axes into X2, I2, and Z2, respectively. Finally, 
rotate the body through an angle ip about Z2 so that the axes coincide 
with their desired final orientation, X3, la, and Z3. Angle ^ is chosen so 
that axis Z3 lies in the plane of ZQ and Xi, whereas angle 6 is chosen so 
as to carry axis Zi {=Zo) into Z3 (=^2). Show that the rotation matrix 
carrying the body from configuration 0 to configuration 3 is: 
Q = 
cOc(j)c\l) â S(t)Sip âc9c(f)sip â s<f)C\l) s6c(f) 
cOs(f)cil) + c(t)sil) 
âc6s(t)S'4) + c(f)C'4) s6s(f) 
âs9cip 
s6sip 
c9 
where c(-) and s{-) stand for cos(-) and sin(-), respectively. Moreover, 
show that a, the angle of rotation of Q given above, obeys the relation 
'^ + cf>' 
c o s I â ) = COS I 
I COS 
(1)=' 
2.19 Given an arbitrary rigid-body rotation about an axis parallel to the unit 
vector e through an angle 0, it is possible to find both e and (f) using the 
linear invariants of the rotation matrix, as long as the vector invariant does 
not vanish. The latter happens if and only if (/> = 0 or TT. NOW, if (/> = 0, 
the associated rotation matrix is the identity, and e is any 3-dimensional 
vector; if (f) = n, then we have 
Q(7r) = Q^ = - 1 + 2ee^ 
whence we can solve for ee^ as 
Now, it is apparent that the three eigenvalues of Q^r are real and the 
associated eigenvectors are mutually orthogonal. Find these. 
2.20 Explain why all the off-diagonal entries of a symmetric rotation matrix 
cannot be negative. 
2.21 The three entries above the diagonal of a 3 x 3 matrix Q that is supposed 
to represent a rotation are given below: 
1 
2 
3 
Without knowing the other entries, explain why the above entries are 
unacceptable. 

2.8 Exercises 
83 
2.22 Let pi, p2, and ps be the position vectors of three arbitrary points in 
3-dimensional space. Now, define a matrix P as 
P = [pi 
P2 
P3] 
Show that P is not frame-invariant. Hint: Show, for example, that it is 
always possible to find a coordinate frame in which tr(P) vanishes. 
2.23 For P defined as in Exercise 2.22, let 
^ = tr(p2)-tr2(P) 
Show that q vanishes if the three given points and the origin are collinear, 
for P represented in any coordinate frame. 
2.24 For P defined, again, as in Exercise 2.22, show that P P ^ is invariant 
under frame-rotations about the origin, and becomes singular if and only 
if either the three given points are collinear or the origin lies in the plane 
of the three points. Note that this matrix is more singularity-robust than 
P. 
2.25 The diagonal entries of a rotation matrix are known to be â0.5, 0.25, and 
â0.75. Find the off-diagonal entries. 
2.26 As a generalization to the foregoing exercise, discuss how you would go 
about finding the off-diagonal entries of a rotation matrix whose diagonal 
entries are known to be a, b, and c. Hint: This problem can be formulated 
as finding the intersection of the coupler curve of a four-bar spherical link-
age (Chiang, 1988), which is a curve on a sphere, with a certain parallel 
of the same sphere. 
2.27 Shown in Fig. 2.9(a) is a cube that is to be displaced in an assembly 
operation to a configuration in which face EFGH lies in the XY plane, 
as indicated in Fig. 2.9(b). Compute the unit vector e parallel to the axis 
of the rotation involved and the angle of rotation (/>, for 0 < 0 < TT. 
2.28 The axes Xi, Yi, Zi of a frame Ti are attached to the base of a robotic 
manipulator, whereas the axes J\r2, ^2? ^2 of a second frame T2 are at-
tached to its end-effector, as shown in Fig. 2.10. Moreover, the origin P 
of T2 has the JF^-coordinates (1,-1,1). Furthermore, the orientation of 
the end effector with respect to the base is defined by a rotation Q, whose 
representation in Ti is given by 
(a) What are the end-efiector coordinates of point C of Fig. 2.10? 
1 
1 + A/3 
l - \ / 3 
1-V3 
1 
1 + v^ 
1 + V3 
1 - v ^ 
1 

84 
D 
n 
H 
/ 
E y-
G 
.
/ 
L 
/ 
/ 
/ 
1 / 
/
^ 
' 
X 
X 
X 
/ 
2. Mathematical 
Background 
Y 
(a) 
(b) 
Figure 2.9: A cube in two different configurations 
(b) The end-effector is approaching the ABC plane shown in Fig. 2.10. 
What is the equation of the plane in end-effector coordinates? Verify 
your result by substituting the answer to (a) into this equation. 
2.29 Shown in Fig. 2.11 is a cube of unit side, which is composed of two parts. 
Frames (XQ, FO? ^O) and (Xi, Yi, Z\) are attached to each of the two 
parts, as illustrated in the figure. The second part is going to be picked 
up by a robotic gripper as the part is transported on a belt conveyor and 
passes close to the stationary first part. Moreover, the robot is to assemble 
the cube by placing the second part onto the first one in such a way that 
vertices A\^B\^ 
C\ are coincident with vertices ^o, ^o? C'o- Determine 
the axis and the angle of rotation that will carry the second part onto the 
first one as described above. 
2.30 A piece of code meant to produce the entries of rotation matrices is being 
tested. In one run, the code produced a matrix with diagonal entries 
â0.866, â0.866, â0.866. Explain how without looking at the other entries, 
you can decide that the code has a bug. 
2.31 Shown in Fig. 2.12 is a rigid cube of unit side in three configurations. The 
second and the third configurations are to be regarded as images of the 
first one. One of the last two configurations is a refiection, and the other 
is a rotation of the first one. Identify the rotated configuration and find 
its associated invariants. 
2.32 Two frames, Q and C, are attached to a robotic gripper and to a camera 
mounted on the gripper, respectively. Moreover, the camera is rigidly 
attached to the gripper, and hence, the orientation of C with respect to 5, 

2.8 Exercises 
85 
Figure 2.10: Robotic EE approaching a stationary object ABC 
denoted by Q, remains constant under gripper motions. The orientation 
of the gripper with respect to a frame B fixed to the base of the robot 
was measured in both G and C. Note that this orientation is measured in 
G simply by reading the joint encoders, which report values of the joint 
variables, as discussed in detail in Chapter 4. The same orientation is 
measured in C from estimations of the coordinates of a set of points fixed 
to JB, as seen by the camera. 
Two measurements of the above-mentioned orientation, denoted Ri and 
^1 
Y, 
Figure 2.11: Roboticized assembly operation 

86 
2. Mathematical 
Background 
(a) 
(b) 
B 
C 
r 
1 A 
/--
/ 
/ 
/ 
/ 
/ 
/ 
/ 
) 
} ^ 
/ 
/ 
/ 
/ 
/ 
/ / 
c A/ 
P 
/ B 
/ 
/ 
/ 
/ 
/ 
) 
.D 
D 
/A 
/ 
/ 
/ 
/ 
/ 
/ 
â 
C 
A: 
>-
/ 
/ 
/ 
/ 
/ 
/ 
^B 
(c) 
Figure 2.12: Three configurations of a cube 
R2, were taken in Q and C, with the numerical values reported below: 
Ri]^ = 
R i k -
R2]g = 
R2]C = 
0.667 
-0.667 
-0.333 
"0.500 
0.333 
0.667] 
0.667 
0.333 
-0.667 
0.667] 
0 
-0.866" 
0 
1.000 
0 
0.866 
0.707 
0 
-0.707 
"1 
0 
0 
0.346 
0 
0.938 
0 
0.500 
5 
0.577 
0.408 "^ 
0.577 
-0.816 
0.577 
0.408^ 
0 
-0.938 
0.346 
(a) Verify that the foregoing matrices represent rotations. 
(b) Verify that the first two matrices represent, in fact, the same rotation 
Ri, albeit in different coordinate frames. 
(c) Repeat item (b) for R2. 
(d) Find [ Q ]g. Is your computed Q orthogonal? If not, can the error be 
attributed to data-incompatibility? to roundoff'-error amplification? 
2.33 The orientation of the end-effector of a given robot is to be inferred from 
joint-encoder readouts, which report an orientation given by a matrix Q 
in .?^i-coordinates, namely. 
[Q]i = 
- 1 
2 
2 
(a) Show that the above matrix can indeed represent the orientation of 
a rigid body. 

2.8 Exercises 
87 
(b) What is Q in end-effector coordinates, i.e., in a frame J^, if Z7 is 
chosen parallel to the axis of rotation of Q? 
2.34 The rotation Q taking a coordinate frame B, fixed to the base of a robot, 
into a coordinate frame ^, fixed to its gripper, and the position vector g 
of the origin of Q have the representations in B given below: 
mB = l 
1 
1 + N/3 
l - \ / 3 
1-V3 
1 
1 + V3 
1 + V3 
l - \ / 3 
1 
[gjB = 
l - \ / 3 
l + \/3 
Moreover, let p be the position vector of any point V of the 3-dimensional 
space, its coordinates in B being (x, y^ z). The robot is supported by a 
cylindrical column C of circular cross section, bounded by planes U^ and 
iJa. These are given below: 
C: x^ -\-y^ = 4; ili: z = 0; iJ2: ;^ = 10 
Find the foregoing equations in Q coordinates. 
2.35 A certain point of the gripper of a robot is to trace an elliptical path of 
semiaxes a and 6, with center at C, the centroid of triangle PQR, as shown 
in Fig. 2.13. Moreover, the semiaxis of length a is parallel to edge PQ, 
while the ellipse lies in the plane of the triangle, and all three vertices are 
located a unit distance away from the origin. 
(a) For b = 2a/3, the gripper is to keep a fixed orientation with respect to 
the unit tangent, normal, and binormal vectors of the ellipse, denoted 
by et, e^, and e^, respectively^. Determine the matrix representing 
the rotation undergone by the gripper from an orientation in which 
vector et is parallel to the coordinate axis X, while e^ is parallel to 
Y and et to Z. Express this matrix in X, y, Z coordinates, if the 
equation of the ellipse, in parametric form, is given as 
x' = acos^, 
y' = bsimp, z' = 0 
the orientation of the gripper thus becoming a function of (p. 
(b) Find the value of ip for which the angle of rotation of the gripper, 
with respect to the coordinate axes X^Y, Z, becomes TT. 
2.36 With reference to Exercise 2.27, find Euler angles (/>, 6, and ^ that will 
rotate the cube of Fig. 2.9(a) into the attitude displayed in Fig. 2.9(b). 
For a definition of Euler angles, see Exercise 2.18 
2.37 Find a sequence of Euler angles 0, 9, and ip, as defined in Exercise 2.18, 
that will carry triangle Ai, JBi, Ci into triangle AQ, BQ, CO, of Fig. 2.11. 
^An account of curve geometry is given in Section 11.2 

2. Mathematical 
Background 
Figure 2.13: An elliptical path on an inclined plane 

Chapter 3 
Fundamentals of 
Rigid-Body Mechanics 
3.1 
Introduction 
The purpose of this chapter is to lay down the foundations of the kinetostatics 
and dynamics of rigid bodies, as needed in the study of multibody mechanical 
systems. With this background, we study the kinetostatics and dynamics of 
robotic manipulators of the serial type in Chapters 5 and 7, respectively, while 
devoting Chapter 6 to the study of trajectory planning. The latter requires, 
additionally, the background of Chapter 4. A special feature of the current 
chapter is the study of the relations between the angular velocity of a rigid 
body and the time-rates of change of the various sets of rotation invariants 
introduced in Chapter 2. Similar relations between the angular acceleration 
and the second time-derivatives of the rotation invariants are also recalled, the 
corresponding derivations being outlined in Appendix A. 
Furthermore, an introduction to the very useful analysis tool known as screw 
theory (Roth, 1984) is included. In this context, the concepts of twist and wrench 
are introduced, which prove in subsequent chapters to be extremely useful in 
deriving the kinematic and static, i.e., the kinetostatic, relations among the 
various bodies of multibody mechanical systems. 
3.2 
General Rigid-Body Motion and Its Associ-
ated Screw 
In this section we analyze the general motion of a rigid body. Thus, let A 
and P be two points of the same rigid body B, the former being a particular 
reference point, whereas the latter is an arbitrary point of B, as shown in Fig. 3.1. 

90 
3. Fundamentals of Rigid-Body Mechanics 
Moreover, the position vector of point A in the original configuration is a, and 
the position vector of the same point in the displaced configuration, denoted by 
A', is a'. Similarly, the position vector of point P in the original configuration 
is p, while in the displaced configuration S', this point is P', its position vector 
being p'. Furthermore, p' is to be determined, while a, a', and p are given, 
along with the rotation matrix Q. Vector p â a can be considered to undergo 
a rotation Q about point A throughout the motion taking the body from the 
original to the final configuration. Since vector p â a is mapped into p' â a' 
under the above rotation, one can write 
Figure 3.1: General rigid-body displacement 
p ' - a ' = Q ( p - a ) 
(3.1) 
and hence 
p' = a' + Q(p - a) 
(3.2) 
which is the relationship sought. Moreover, let dA and dp denote the displace-
ments of A and P, respectively, i.e., 
d^ = a' - a, 
dp = p' - p 
(3.3) 
From eqs.(3.2) and (3.3) one can readily obtain an expression for dp, namely, 
dp = a' - p + Q(p - a) 
= a' - a - p -f Q(p - a) H- a 
= d ^ - f - ( Q - l ) ( p - a ) 
(3.4) 
What eq.(3.4) states is that the displacement of an arbitrary point P of a rigid 
body, of position vector p in an original configuration, is determined by the dis-
placement of one certain point A and the concomitant rotation Q, as depicted 
in Fig. 3.2. In this figure, the final configuration B' is attained via an inter-
mediate configuration B'\ attained from B by a pure translation^. Then, B' is 
attained from B'^ by a pure rotation Q, of axis parallel to vector e and of angle 
({). Apparently, once the displacement of P is known, its position vector p' can 
be readily determined. An interesting result in connection with the foregoing 
discussion is summarized below: 
^A body undergoes a pure translation when all its points move under the same 
displacement. 

3.2 General Rigid-Body Motion and Its Associated Screw 
91 
Figure 3.2: General rigid-body displacement attained by a combination of trans-
lation and rotation 
Theorem 3.2.1 Let a rigid body B move under a general displacement, of ro-
tation Q with axis parallel to the unit vector e. Then, the displacements of all 
the points of B have the same component along e. 
Proof: Multiply both sides of eq.(3.4) by e^, thereby obtaining 
e^dp = e^d^ -f e'^(Q - l)(p - a) 
Now, the second term of the right-hand side of the above equation vanishes 
because Qe = e, and hence, Q^e = e; the said equation thus leads to 
e^dp = e^d^ = d^ 
(3.5) 
thereby showing that the displacements of all points of the body have the same 
projection do onto the axis of rotation, q.e.d. 
As a consequence of the foregoing result, we have the classical Mozzi-Chasles 
Theorem (Mozzi, 1763; Chasles, 1830; Ceccarelli, 1995), namely, 
Theorem 3.2.2 (Mozzi, 1763; Chasles, 1830) Given a rigid body moving 
with a general displacement, a set of its points, located on a line C, undergo iden-
tical displacements of minimum magnitude. Moreover, line C and the minimum-
magnitude displacement are parallel to the axis of the rotation involved, as il-
lustrated in Fig. 3.3. 
Proof: The proof is straightforward in light of Theorem 3.2.1, which allows us to 
express the displacement of an arbitrary point P as the sum of two orthogonal 
components, namely, one parallel to the axis of rotation, independent of P and 
denoted by d||âread "d-par"âand one perpendicular to this axis, denoted by 
dj_âread "d-perp"âi.e., 
dp = d|| -f d_L 
(3.6a) 

92 
3. Fundamentals of Rigid-Body Mechanics 
Figure 3.3: The Mozzi-Chasles Theorem 
where 
ee^dp = doe = do, 
d_L = (1 â ee^)dp 
(3.6b) 
and clearly, do is a constant, as defined in eq.(3.5), while d|| and d_L are mutually 
orthogonal. Indeed, orthogonality is apparent by definition, but is also verified 
below: 
d|| â¢ dj_ = doe^(l - ee^)dp = do{e^ - e^)dp = 0 
Now, by virtue of the orthogonality of the two components of dp, it is apparent 
that 
l|dp|P = l|d||||^ + ||dx||^=di + ||dx|P 
for the displacement dp of any point of the body. Hence, in order to minimize 
||dp|| we have to make ||dj_||, and hence, dÂ± itself, equal to zero, i.e., we must 
have dp parallel to e: 
dp = ae 
for a certain scalar a. That is, the displacements of minimum magnitude of the 
body under study are parallel to the axis of Q, thereby proving the first part of 
the Mozzi-Chasles Theorem. The second part is also readily proven by noticing 
that if P* is a point of minimum displacement magnitude, of position vector 
p*, its component perpendicular to the axis of rotation must vanish, and hence, 
d l = (1 - ee^)dp* 
= (1 - ee^)d^ + (1 - ee^)(Q - l)(p* - a) = 0 
Upon expansion of the above expression for d^, we obtain 
( l - e e ^ ) d ^ + ( Q - l ) ( p * - a ) = 0 
Now it is apparent that if we define a line Â£ passing through P* and parallel to 
e, then the position vector p* + Ae of any of its points P satisfies the foregoing 

3.2 General Rigid-Body Motion and Its Associated Screw 
93 
equation. As a consequence, all points of minimum displacement magnitude lie 
in a line parallel to the axis of rotation of Q, q.e.d. 
An important implication of the foregoing theorem is that a rigid body can 
attain an arbitrary configuration from a given original one, following a screw-
like motion of axis C and pitch p, the latter being defined presently. Thus, it 
seems appropriate to call C the screw axis of the rigid-body motion. 
Note that do? ^s defined in eq.(3.5), is an invariant of the motion at hand. 
Thus, associated with a rigid-body motion, one can then define a screw of axis 
Â£ and pitch p. Of course, the pitch is defined as 
which has units of m/rad or, correspondingly, of m/turn. Moreover, the angle 
(f) of the rotation involved can be regarded as one more feature of this motion. 
This angle is, in fact, the amplitude associated with the said motion. We will 
come across screws in discussing velocities and forces acting on rigid bodies, 
along with their pitches and amplitudes. Thus, it is convenient to introduce 
this concept at this stage. 
3.2.1 
The Screw of a Rigid-Body Motion 
The screw axis C is totally specified by a given point PQ of C that can be defined, 
for example, as that lying closest to the origin, and a unit vector e defining its 
direction. Expressions for the position vector po of PQ in terms of a, a' and Q, 
are derived below: 
Since PQ was defined as the point of C lying closest to the origin, po obviously 
is perpendicular to e, i.e., 
e^po = 0 
(3.8) 
Moreover, the displacement do of Po is parallel to the vector of Q, and hence, 
is identical to dy defined in eq.(3.6b), i.e., it satisfies 
(Q - l)do = 0 
where do can be expressed using the general expression for the displacement, 
eq.(3.4), namely, 
do = d^ + ( Q - l ) ( p o - a ) 
(3.9a) 
Now, since do is identical to dy, we have, from eq.(3.6b), 
d^ 4- (Q - l)(po - a) = d|| = ee^do 
But from Theorem 3.2.1, 
e do = e d^ 
and so 
d^ + (Q - l)(po - a) = ee^d^ 

94 
3. Fundamentals of Rigid-Body Mechanics 
or, after rearranging terms, 
(Q - l)Po = (Q - l)a - (1 - ee^)d^ 
(3.9b) 
Furthermore, in order to find an expression for po, eq.(3.8) is adjoined to 
eq.(3.9b), thereby obtaining 
Apo = b 
(3.10) 
where A is a 4 x 3 matrix and b is a 4-dimensional vector, both given by 
A = 
Q - 1 
b = 
(Q - l)a - (1 - ee^)d^ 
0 
(3.11) 
Equation (3.10) cannot be solved for po directly, because A is not a square 
matrix. In fact, that equation represents an overdetermined system of four 
equations and three unknowns. Thus, in general, that system does not admit 
a solution. However, the four equations are compatible, and hence, in this 
particular case, a solution of that equation, which turns out to be unique, can 
be determined. In fact, if both sides of eq.(3.10) are multiplied from the left by 
A"^, we have 
A'^Apo = A^b 
(3.12) 
Moreover, if the product A^A, which is a 3 x 3 matrix, is invertible, then po 
can be computed from eq.(3.12). In fact, the said product is not only invertible, 
but also admits an inverse that is rather simple to derive, as shown below. Now 
the rotation matrix Q is recalled in terms of its natural invariants, namely, the 
unit vector e parallel to its axis of rotation and the angle of rotation (f) about 
this axis, as given in eq.(2.48), reproduced below for quick reference: 
Q = ee^ + cos 0(1 â ee^) + sin <f)E 
where 1 represents the 3 x 3 identity matrix and E the cross-product matrix of 
e, as introduced in eq.(2.37). Further, eq.(2.48) is substituted into eq.(3.11), 
which yields 
A^A = 2(1 - cos 0)1 - (1 - 2cos0)ee^ 
(3.13) 
It is now apparent that the foregoing product is a linear combination of 1 and 
ee^. This suggests that its inverse is very likely a linear combination of these 
two matrices as well. If this is in fact true, then one can write 
( A ^ A ) - i = a l + / 3 e e ^ 
(3.14) 
coefficients a and /? being determined from the condition that the product of 
A^A by its inverse should be 1, which leads to 
â 
^ 
Râ 1~2COS0 
/oicX 
' ' " 2 ( l - c o s 0 ) ' 
^ ~ 2(1-cos0) 
^^'^^^ 
and hence. 
.T AN-l ^ _ _ J L _ _ 1 j_ 1-2COS0 _ y 
2(1 - cos 0) 
2(1 - COS 0) 

3.2 General Rigid-Body Motion and Its Associated Screw 
95 
On the other hand, from eq.(3.11), 
A^b = (Q - 1)^[(Q - l)a - d^] 
(3.17) 
Upon solving eq.(3.12) for po and substituting relations (3.16) and (3.17) into 
the expression thus resulting, one finally obtains 
Apparently, po can be computed as long as (f) ^ 0. If (/> = 0, then we are in 
the presence of a pure translation, all the points of the body undergoing the 
same displacement. Therefore, any point of the body is of minimum-magnitude 
displacement. 
We have thus defined a line C of the rigid body under study that is completely 
defined by its point Po of position vector po and a unit vector e determining its 
direction. Moreover, we have already defined the pitch of the associated motion, 
eq.(3.7). The line thus defined, along with the pitch, determines the screw of 
the motion under study. 
3.2.2 
The Pliicker Coordinates of a Line 
Alternatively, the screw axis, and any line for that matter, can be defined more 
conveniently by its Pliicker coordinates. In motivating this concept, we recall 
the equation of a line C passing through two points Pi and P2 of position vectors 
Pi and p2, as shown in Fig. 3.4. 
0 
Figure 3.4: A line C passing through two points 
If point P lies in Â£, then, it must be collinear with Pi and P2, a property 
that is expressed as 
(P2-P1) X ( p - p i ) = 0 

96 
3. Fundamentals of Rigid-Body Mechanics 
or upon expansion, 
(P2 - Pi) X p + pi X (p2 - Pi) = 0 
(3.19) 
If we now introduce the cross-product matrices Pi and P2 of vectors pi and p2 
in the above equation, we have an alternative expression for the equation of the 
line, namely, 
( P 2 - P l ) p + Pl X ( p 2 - P l ) = 0 
The above equation can be regarded as a linear equation in the homogeneous 
coordinates of point P, namely. 
[P2 - P i 
pi X (P2-P1)] 
= 0 
(3.20) 
It is now apparent that the line is defined completely by two vectors, the differ-
ence P2 â Pi, or its cross-product matrix for that matter, and the cross product 
Pi X (p2 â Pi). We will thus define a 6-dimensional array 7^ containing these 
two vectors, namely. 
7c = 
P2 - P l 
Pi X ( P 2 - P 1 ) 
(3.21) 
whose six scalar entries are the Pliicker coordinates of C. Moreover, if we let 
_ 
P2 - Pl 
e = IIP2-P1I 
n = Pl X e 
(3.22) 
then we can write 
7 Â£ 
IP2 - Pl I 
The six scalar entries of the above array are the normalized Pliicker coordinates 
of C Vector e determines the direction of Â£, while n determines its location; n 
can be interpreted as the moment of a unit force parallel to e and of line of action 
Â£. Hence, n is called the moment oi C, Henceforth, only the normalized Pliicker 
coordinates of lines will be used. For brevity, we will refer to these simply as 
the Pliicker coordinates of the line under study. The Pliicker coordinates thus 
defined will be stored in a Pliicker array K in the form 
K 
(3.23) 
where for conciseness, we have dropped the subscript Â£, while assuming that 
the line under discussion is self-evident. 
Note, however, that the six components of the Pliicker array, i.e., the Pliicker 
coordinates of line Â£, are not independent, for they obey 
e-e = l, 
n - e = 0 
(3.24) 
and hence, any line C has only four independent Pliicker coordinates. In the 
foregoing paragraphs, we have talked about the Pliicker array of a line, and 

3.2 General Rigid-Body Motion and Its Associated Screw 
97 
not about the Pliicker vector; the reason for this distinction is given below. 
The set of Pliicker arrays is a clear example of an array of real numbers not 
constituting a vector space. What disables Pliicker arrays from being vectors 
are the two constraints that their components must satisfy, namely, (i) the sum 
of the squares of the first three components of a Pliicker array is unity, and (n) 
the unit vector of a line is normal to the moment of the line. Nevertheless, we can 
perform with Pliicker arrays certain operations that pertain to vectors, as long as 
we keep in mind the essential differences. For example, we can multiply Pliicker 
arrays by matrices of the suitable dimension, with entries having appropriate 
units, as we will show presently. 
It must be pointed out that a Pliicker array is dependent upon the location 
of the point with respect to which the moment of the line is measured. Indeed, 
let KA and KB denote the Pliicker arrays of the same line C when its moment 
is measured at points A and B, respectively. Moreover, this line passes through 
a point P of position vector p for a particular origin 0. Now, let the moment 
of C with respect to A and B be denoted by n^ and n^, respectively, i.e.. 
n^ = (p - a) X e, 
n^ = (p - b) x e 
and hence. 
Obviously, 
I.e., 
KA 
e 
n^ 
, 
f^B 
^ 
e 
t l B 
^B â ^A = (a â b) X e 
KB 
= 
n^ + (a â b) X e 
which can be rewritten as 
KB = 
VKA 
with the 6x6 
matrix U defined as 
U = 
1 
O 
A - B 
1 
(3.25) 
(3.26) 
(3.27) 
(3.28) 
(3.29a) 
(3.29b) 
while A and B are, respectively, the cross-product matrices of vectors a and b, 
and O denotes the 3 x 3 zero matrix. Given the lower-triangular structure of 
matrix U, its determinant is simply the product of its diagonal entries, which 
are all unity. Hence, 
det(U) = 1 
(3.30) 
U thus belonging to the unimodular group of 6 x 6 matrices. These matrices 
are rather simple to invert. In fact, as one can readily prove. 
U" 
1 
O 
B - A 
1 
(3.31) 

98 
3. Fundamentals of Rigid-Body Mechanics 
Relations (3.29a & b) can then be called the Plilcker-coordinate transfer formu-
las. 
Note that upon multiplication of both sides of eq.(3.27) by (a â b), 
(a - h)^nB = (a - b)^n^ 
(3.32) 
and hence, the moments of the same line C with respect to two points are not 
independent, for they have the same component along the line joining the two 
points. 
A special case of a line, of interest in kinematics, is a line at infinity. This 
is a line with undefined orientation, but with a defined direction of its moment; 
this moment is, moreover, independent of the point with respect to which it is 
measured. Very informally, the Pliicker coordinates of a line at infinity can be 
derived from the general expression, eq.(3.23), if we rewrite it in the form 
/^= 
n 
e/||n|| 
n/||n|| 
where clearly n/||n|| is a unit vector; henceforth, this vector will be denoted by 
f. Now let us take the limit of the above expression as P goes to infinity, i.e., 
when IIPII -> oo, and consequently, as ||n|| -> oo. Thus, 
lim 
K â¢ 
||n||->oo 
lim 
||n| 
|n||-)-oo 
lim 
|n||->oo 
e/||n|| 
f 
whence 
lim K = I lim 
llnl 
|ln|l->oo 
VllnlKoo" 
The 6-dimensional array appearing in the above equation is defined as the 
Pliicker array of a line at infinity, KQO ? namely. 
^ o o â 
(3.33) 
Note that a line at infinity of unit moment f can be thought of as being a 
line lying in a plane perpendicular to the unit vector f, but otherwise with an 
indefinite location in the plane, except that it is an infinitely large distance from 
the origin. Thus, lines at infinity vary only in the orientation of the plane in 
which they lie. 
3.2.3 
The Pose of a Rigid Body 
A possible form of describing a general rigid-body motion, then, is through a 
set of eight real numbers, namely, the six Pliicker coordinates of its screw axis, 
its pitch, and its amplitude, i.e., its angle. Hence, a rigid-body motion is fully 
described by six independent parameters. Moreover, the pitch can attain values 
from â00 to -hoc. Alternatively, a rigid-body displacement can be described 

3.2 General Rigid-Body Motion and Its Associated Screw 
99 
by seven dependent parameters as follows: four invariants of the concomitant 
rotationâthe linear invariants, the natural invariants, or the Euler-Rodrigues 
parameters, introduced in Section 2.3âand the three components of the dis-
placement of an arbitrary point. Since those invariants are not independent, 
but subject to one constraint, this description consistently involves six indepen-
dent parameters. Thus, let a rigid body undergo a general motion, of rotation Q 
from a reference configuration Co- If a landmark point A of the body undergoes 
a displacement d^, then the pose array, or simply the pose s, of the body in 
configuration C is defined as a 7-dimensional array, namely. 
s = 
q 
d^ 
(3.34) 
where the 3-dimensional vector q and the scalar ^o are any four invariants of 
Q. For example, if these are the Euler-Rodrigues parameters, then 
Q = sm(-)e, 
^0 = cos(-) 
If alternatively, we work with the linear invariants, then 
q = (sin (^)e, 
^o = cos 0 
and, of course, if we work instead with the natural invariants, then 
q = e, 
qo = <i) 
In the first two cases, the constraint mentioned above is 
||q|P + ql = \ 
(3.35) 
In the last case, the constraint is simply 
\\ef 
= 1 
(3.36) 
Notice that the pose of a rigid body is an array of numbers quantifying the 
displacement of the body from a reference configuration Co to a current config-
uration C. As such, then, the pose is a relative concept. 
An important problem in kinematics is the computation of the screw pa-
rameters, i.e., the components of s, as given in eq.(3.34), from coordinate mea-
surements over a certain finite set of points. Prom the foregoing discussion, it 
is clear that the computation of the attitude of a rigid body, given by matrix Q 
or its invariants, is crucial in solving this problem. Moreover, besides its theo-
retical importance, this problem, known as pose estimation, has also practical 
relevance. Shown in Fig. 3.5 is the helmet-mounted display system used in flight 
simulators. The helmet is supplied with a set of LEDs (light-emitting diodes) 
that emit infrared light signals at diff'erent frequencies each. These signals are 
then picked up by two cameras, from whose images the Cartesian coordinates of 

100 
3. Fundamentals of Rigid-Body Mechanics 
the LED centers are inferred. With these coordinates and knowledge of the LED 
pattern, the attitude of the pilot's head is determined from the rotation matrix 
Q. Moreover, with this information and that provided via sensors mounted on 
the lenses, the position of the center of the pupil of the pilot's eyes is then esti-
mated. This position, then, indicates on which part of his or her visual field the 
pilot's eyes are focusing. In this way, a high-resolution graphics monitor syn-
thesizes the image that the pilot would be viewing with a high level of detail. 
The rest of the visual field is rendered as a rather blurred image, in order to 
allocate computer resources where it really matters. 
Figure 3.5: Helmet-mounted display system (courtesy of CAE Electronics Ltd., 
St.-Laurent, Quebec, Canada) 
A straightforward method of computing the screw parameters consists in 
regarding the motion as follows: Choose a certain point A of the body, of 
position vector a, and track it as the body moves to a displaced configuration, 
at which point A moves to A'^ of position vector a'. Assume that the body 
reaches the displaced configuration B', passing through an intermediate one 
B", which is attained by a pure translation, as depicted in Fig. 3.2. Next, 
configuration B^ is reached by rotating the body about point A', as indicated in 

3.2 General Rigid-Body Motion and Its Associated Screw 
101 
Figure 3.6: Decomposition of the displacement of a rigid body 
Fig. 3.6. 
Matrix Q can now be readily determined. To do this, define three points of 
the body, Pi, P25 and P3, in such a way that the three vectors defined below 
are orthonormal and form a right-hand system: 
ij = 1,2,3, 
63 = ei X e2 
i ' 
j â 
ij ? 
(3.37) 
(3.38) 
where Sij is the Kronecker delta, defined as 1 if i = j , and as 0 otherwise. Now, 
let the set {ei}l be labeled {ej}f and {e'/jf in configurations B' and B'', re-
spectively. Moreover, let qij denote the entries of the matrix representation of 
the rotation Q in a frame X, Y, Z with origin at A and such that the forego-
ing axes are parallel to vectors ei, 62, and es, respectively. It is clear, from 
Definition 2.2.1, that 
Qij = â¢ 
(3.39) 
I.e., 
[Q] = 
ei 
62 
63 
â¢e'x 
â¢e'l 
â¢ei 
ei 
62 
63 
â¢e'. 
â¢e^ 
â¢e^ 
ei 
62 
63 
â¢e^ 
â¢e^ 
â¢e^ 
(3.40) 
Note that all e^- and ej appearing in eq.(3.40) must be represented in the same 
coordinate frame. Once Q is determined, computing the remaining screw pa-
rameters is straightforward. One can use, for example, eq.(3.18) to determine 
the point of the screw axis that lies closest to the origin, which would thus allow 
one to compute the Plucker coordinates of the screw axis. 

102 
3. Fundamentals of Rigid-Body Mechanics 
3.3 
Rotation of a Rigid Body About a Fixed 
Point 
In this section, the motion of a rigid body having a point fixed is analyzed. 
This motion is fully described by a rotation matrix Q that is proper orthogonal. 
Now, Q will be assumed to be a smooth function of time, and hence, the position 
vector of a point P in an original configuration, denoted here by po, is mapped 
smoothly into a new vector p(^), namely. 
Pit) = Q{t)po 
(3.41) 
The velocity of P is computed by differentiating both sides of eq.(3.41) with 
respect to time, thus obtaining 
Pit) = Qit)po 
(3.42) 
which is not a very useful expression, because it requires knowledge of the 
original position of P. An alternative expression can be derived if eq.(3.41) 
is solved for po and the expression thus resulting is substituted into eq.(3.42), 
which yields 
p = QQ^p 
(3.43) 
where the argument t has been dropped for the sake of simplicity, but one must 
keep in mind that all quantities are now time-varying. The product QQ^ is 
known as the angular-velocity matrix of the rigid-body motion and is denoted 
by ft, i.e., 
il = QQ'^ 
(3.44) 
As a consequence of the orthogonality of Q, one has a basic result, namely. 
Theorem 3.3.1 The angular-velocity matrix is skew-symmetric. 
Proof: This follows directly from definition (3.44). 
In order to derive the angular-velocity vector of a rigid-body motion, we recall 
the concept of axial vector, or simply vector, of a 3 x 3 matrix, introduced in 
Subsection 2.3.3. Thus, the angular-velocity vector u) of the rigid-body motion 
under study is defined as the vector of ft, i.e., 
cj = vect(n) 
(3.45) 
and hence, eq.(3.43) can be written as 
p = l^p = a; X p 
(3.46) 
from which it is apparent that the velocity of any point P of a body moving with 
a point O fixed is perpendicular to line OP. 

3.4 General Instantaneous Motion of a Rigid Body 
103 
3.4 
General Instantaneous Motion of a Rigid 
Body 
If a rigid body now undergoes the most general motion, none of its points 
remains fixed, and the position vector of any of these, P, in a displaced config-
uration is given by eq.(3.2). Let ao and po denote the position vectors of points 
A and P of Section 3.2, respectively, in the reference configuration CQ, a(t) and 
p(t) being the position vectors of the same points in the displaced configuration 
C. Moreover, if Q{t) denotes the rotation matrix, then 
p{t) = a(t) + Q{t)(po - SLo) 
(3.47) 
Now, the velocity of P is computed by differentiating both sides of eq.(3.47) 
with respect to time, thus obtaining 
p(t)=a(t) + Q(0(po-ao) 
(3.48) 
which again, as expression (3.48), is not very useful, for it requires the values 
of the position vectors of A and P in the original configuration. However, if 
eq.(3.47) is solved for po â ao and the expression thus resulting is substituted 
into eq.(3.48), we obtain 
p = a + f^(p-a) 
(3.49) 
or in terms of the angular-velocity vector, 
p = a - i - c j x ( p - a ) 
(3.50) 
where the argument t has been dropped for brevity but is implicit, since all 
variables of the foregoing equation are now functions of time. Furthermore, 
from eq.(3.50), it is apparent that 
(p - a) â¢ (p - a) = 0 
(3.51) 
which can be summarized as 
Theorem 3.4.1 The relative velocity of two points of the same rigid body is 
perpendicular to the line joining them. 
Moreover, similar to the outcome of Theorem 3.2.1, one now has an addi-
tional result that is derived upon dot-multiplying both sides of eq.(3.50) by u, 
namely, 
a? â¢ p == cj â¢ a 
and hence. 
Corollary 3.4.1 The projections of the velocities of all the points of a rigid 
body onto the angular-velocity vector are identical. 
Furthermore, similar to the Mozzi-Chasles Theorem, we have now 

104 
3. Fundamentals of Rigid-Body Mechanics 
Theorem 3.4.2 Given a rigid body under general motion, a set of its points 
located on a line C undergoes the identical minimum-magnitude 
velocity VQ 
parallel to the angular velocity. 
Definition 3.4.1 The line containing the points of a rigid body undergoing 
minimum-magnitude 
velocities is called the instant screw axis (ISA) of the body 
under the given motion. 
3.4.1 
The Instant Screw of a Rigid-Body Motion 
From Theorem 3.4.2, the instantaneous motion of a body is equivalent to that 
of the bolt of a screw of axis Â£', the ISA. As the body moves, the ISA changes, 
and the motion of the body is called an instantaneous screw. Moreover, since 
vo is parallel to CJ, it can be written in the form 
Vo = i'OTr-TT 
(^-52) 
where VQ is a scalar quantity denoting the signed magnitude of VQ and bears the 
sign of VQ â¢ W. Furthermore, the pitch p' of the instantaneous screw is defined 
as 
p' = -jâr = T â ^ 
or 
p' = -ârr 
(3.53) 
\\CAJ\\ 
||a;|P 
||a;|| 
which thus bears units of m/rad or, correspondingly, of m/turn. 
Again, the ISA C' can be specified uniquely through its Pliicker coordinates, 
stored in the pc array defined as 
PC 
(3.54) 
where e' and n' are, respectively, the unit vector defining the direction of C 
and its moment about the origin, i.e., 
e' = r ^ , 
n ' = p x e ' 
(3.55) 
INII 
p being the position vector of any point of the ISA. Clearly, e' is defined uniquely 
but becomes trivial when the rigid body instantaneously undergoes a pure trans-
lation, i.e., a motion during which, instantaneously, UJ = 0 and all body-points 
move with the same velocity VQ. In this case, e' is defined as the unit vector 
parallel to VQ. Thus, an instantaneous rigid-body motion is defined by a line Â£', 
a pitch p', and an amplitude ||ci;||. Such a motion is, then, fully determined by 
six independent parameters, namely, the four independent Pliicker coordinates 
of C\ its pitch, and its amplitude. A line supplied with a pitch is, in general, 
called a screw; a screw supplied with an amplitude representing the magnitude 
of an angular velocity provides the representation of an instantaneous rigid-body 
motion that is sometimes called the twist, an item that will be discussed in more 
detail below. 

3.4 General Instantaneous Motion of a Rigid Body 
105 
Hence, the instantaneous screw is fully defined by six independent real num-
bers. Moreover, such as in the case of the screw motion, the pitch of the instan-
taneous screw can attain values from â oo to -hoc. 
The ISA can be alternatively described in terms of the position vector PQ of 
its point lying closest to the origin. Expressions for Po in terms of the position 
and the velocity of an arbitrary body-point and the angular velocity are derived 
below. To this end, we decompose p into two orthogonal components, py and 
PJ_, along and transverse to the angular-velocity vector, respectively. Hence, a 
is first decomposed into two such orthogonal components, a|| and a_L, the former 
being parallel, the latter normal to the ISA, i.e., 
a = a|| H- aj_ 
(3.56) 
These orthogonal components are given as 
CJ 
CJijj'^ 
( 
(jJ(J^\ 
1 
o 
a|| = a . UJT^TT^ = TT^SL, 
aj. - 
1 - ^ ^ 
a = -^--r^ft^k 
(3.57) 
ll^ll 
ll^ll 
V 
11^11/ 
ll^ll 
In the derivation of eq.(3.57) we have used the identity introduced in eq.(2.39), 
namely, 
n'^ = Lju'^ -Wojfl 
(3.58) 
Upon substitution of eq.(3.57) into eq.(3.50), we obtain 
p = P ^ a - y ^ l l ^ a + n(p - a) 
(3.59) 
Of the three components of p, the first, henceforth referred to as its axial com-
ponent, is parallel, the last two being normal to cj. The sum of the last two 
components is referred to as the normal component of p. Prom eq.(3.59) it 
is apparent that the axial component is independent of p, while the normal 
component is a linear function of p. An obvious question now arises: For an 
arbitrary motion, is it possible to find a certain point of position vector p whose 
velocity normal component vanishes? The vanishing of the normal component 
obviously implies the minimization of the magnitude of p. The condition under 
which this happens can now be stated as 
PÂ± = 0 
or 
n{p - a) - TT^n^ 
a = 0 
(3.60) 
which can be further expressed as a vector equation linear in p, namely, 
np = ft(sL+ jr^Cta) 
(3.61) 

106 
3. Fundamentals of Rigid-Body Mechanics 
or 
ft{p - r) = 0 
(3.62a) 
with r defined as 
r = a+j--^na 
(3.62b) 
and hence, a possible solution of the foregoing problem is 
p = r = a + T p p l ^ a 
(3.63) 
However, this solution is not unique, for eq.(3.62a) does not require that p â r 
be zero, only that this difference lie in the nullspace of fi, i.e., that p â r be 
linearly dependent with a;. In other words, if a vector au is added to p as 
given in eq.(3.63), then the sum also satisfies eq.(3.61). It is then apparent that 
eq.(3.61) does not determine a single point whose normal velocity component 
vanishes, but a set of points lying on the ISA, and thus, other solutions are 
possible. For example, we can find the point of the ISA lying closest to the 
origin. To this end, let po be the position vector of that point. This vector is 
obviously perpendicular to CJ, i.e., 
o^^pj) = 0 
(3.64) 
Next, eq.(3.61) is rewritten for PQ, and eq.(3.64) is adjoined to it, thereby de-
riving an expanded linear system of equations, namely, 
Ap() = b 
(3.65) 
where A is a 4 x 3 matrix and b is a 4-dimensional vector, both being given 
below: 
A = 
h = !la+(l/||a;|p)ili2^ 
0 
(3.66) 
This system is of the same nature as that appearing in eq.(3.10), and hence, it 
can be solved for PQ following the same procedure. Thus, both sides of eq.(3.65) 
are multiplied from the left by A^, thereby obtaining 
A^ Ap() = A^b 
(3.67) 
where 
A^A = n^n + uu'^ = -n^ + UUJ'^ 
(3.68) 
Moreover, from eq.(3.58), the rightmost side of the foregoing relation becomes 
||a;|pl, and hence, the matrix coefficient of the left-hand side of eq.(3.67) and 
the right-hand side of the same equation reduce, respectively, to 
A^A = ||cj|pl, 
A^b = Ctik - 
fia) 
(3.69) 
Upon substitution of eq.(3.69) into eq.(3.67) and further solving for Po, the 
desired expression is derived: 
__ l^(a-l^a) _ g? X (a - u? X a) 
P o - 
[177112 
= 
ri7TM2 
^^' '^) 

3.4 General Instantaneous Motion of a Rigid Body 
107 
Thus, the instantaneous screw is fully defined by an alternative set of six 
independent scalars, namely, the three components of its angular velocity cj and 
the three components of the velocity of an arbitrary body point A, denoted by 
a. As in the case of the screw motion, we can also represent the instantaneous 
screw by a line and two additional parameters, as we explain below. 
3.4.2 
The Twist of a Rigid Body 
A line, as we saw earlier, is fully defined by its 6-dimensional Pliicker array, 
which contains only four independent components. Now, if a pitch p is added 
as a fifth feature to the line or correspondingly, to its Pliicker array, we obtain 
a screw s, namely, 
s = [ 
^ ^ 1 
(3.71) 
[p X e + pej 
^ 
^ 
An amplitude is any scalar A multiplying the foregoing screw. The am-
plitude produces a twist or a wrench, to be discussed presently, depending on 
its units. The twist or the wrench thus defined can be regarded as an eight-
parameter array. These eight parameters, of which only six are independent, are 
the amplitude, the pitch, and the six Pliicker coordinates of the associated line. 
Clearly, a twist or a wrench is defined completely by six independent real num-
bers. More generally, a twist can be regarded as a 6-dimensional array defining 
completely the velocity field of a rigid body; it comprises the three components 
of the angular velocity and the three components of the velocity of any of the 
points of the body. 
Below we elaborate on the foregoing concepts. Upon multiplication of the 
screw appearing in eq.(3.71) by the amplitude A representing the magnitude of 
an angular velocity, we obtain a twist t, namely, 
Ae 
p X (^e) 4- p{Ae) 
where the product Ae can be readily identified as the angular velocity u parallel 
to vector e, of magnitude A. Moreover, the lower part of t can be readily 
identified with the velocity of a point of a rigid body. Indeed, if we regard 
the line C and point O as sets of points of a rigid body B moving with an 
angular velocity oj and such that point P moves with a velocity pcj parallel to 
the angular velocity, then the lower vector of t, denoted by v, represents the 
velocity of point O, i.e., 
V = âUJ X p + pOJ 
We can thus express the twist t as 
t = 
(3.72) 
If the pitch is zero, the twist is a pure rotation; if infinite, the twist is a pure 
translation, in which case the twist is 
t = 
"0" 
V 
= ||v|| 0" 
e 
(3.73) 

108 
3. Fundamentals of Rigid-Body Mechanics 
Then, the screw of infinite pitch Scx) is defined as the 6-dimensional array ap-
pearing in the above equation, namely. 
Soo â 
(3.74) 
Note that this screw array is identical to the Pliicker array of a line at infinity 
lying in a plane of unit normal e, as displayed in eq.(3.33). 
The twist array, as defined in eq.(3.72), with u? on top, represents the ray 
coordinates of the twist. An exchange of the order of the two Cartesian vectors 
of this array, in turn, gives rise to the axis coordinates of the twist. 
The foregoing twist was also termed motor by Everett (1875). As Phillips 
(1990) points out, the word motor is an abbreviation of moment and vector. An 
extensive introduction into motor algebra was published by von Mises (1924), a 
work that is now available in English (von Mises, 1996). Roth (1984), in turn, 
provided a summary of these concepts, as applicable to robotics. The foregoing 
array goes also by other names, such as the German Kinemate or the French 
torseur cinematique. 
The relationships between the angular-velocity vector and the time deriva-
tives of the invariants of the associated rotation are linear. Indeed, let the three 
sets of four invariants of rotation, namely, the natural invariants, the linear 
invariants, and the Euler-Rodrigues parameters be grouped in the 4-dimensional 
arrays u, A, and r), respectively, i.e.. 
u 
X = 
(sin0)e 
COS(f) 
V^ 
[sin(0/2)]e 
cos(0/2) 
(3.75) 
We then have the Hnear relations derived in full detail elsewhere (Angeles, 1988), 
and outlined in Appendix A for quick reference, namely. 
i> = Nw, 
A = Lw, 
f) = Ho; 
with N, L, and H defined as 
N = 
L = 
H = 
[sin(^/(2(l -cos0))](l -ee'^) - (l/2)E 
(l/2)[tr(Q)l-Q] 
cos(0/2)l-sin(0/2)E 
-sin((^/2)e^ 
(3.76a) 
(3.76b) 
(3.76c) 
(3.76d) 
where, it is recalled, tr(-) denotes the trace of its square matrix argument (â¢), 
i.e., the sum of the diagonal entries of that matrix. 
The inverse relations of those shown in eqs. (3.76a) are to be derived by 
resorting to the approach introduced when solving eq.(3.65) for PQ, thereby 
obtaining 
_ 
_ 
_ 
a, = Ni> = LA = Hr/ 
(3.77a) 

3.4 General Instantaneous Motion of a Rigid Body 
109 
the 3 x 4 matrices N, L, and H being defined below: 
N = [(sin(?!))l + ( l - c o s 0 ) E 
e ] , 
(3.77b) 
L = [1 + [(sin (/))/(! + cos0)]E 
-[(sin0)/(l + cos0)]e], 
(3.77c) 
U = 2 [[cos(0/2)]l -h [sm{(t)/2)]E -[sin(0/2)]e] 
(3.77d) 
Caveat The angular velocity vector is not a time-derivative, i.e., no Cartesian 
vector exists whose time-derivative is the angular-velocity vector. 
However, matrices N, L, and H of eqs.(3.76b-d) can be regarded as integra-
tion factors that yield time-derivatives. 
Now we can write the relationship between the twist and the time-rate of 
change of the 7-dimensional pose array s, namely, 
s = Tt 
(3.78) 
where 
F 
O43 
O 
1 
in which O and O43 are the 3 x 3 and the 4 x 3 zero matrices, while 1 is the 
3 x 3 identity matrix and F is, correspondingly, N, L, or H, depending upon 
the invariant representation chosen for the rotation. The inverse relationship of 
eq.(3.78) takes the form 
t = Ss 
(3.80a) 
where 
T = 
(3.79) 
S = 
F 
O34 
O 
1 
(3.80b) 
in which O34 is the 3 x 4 zero matrix. Moreover, F is one of N, L, or H, de-
pending on the rotation representation adopted, namely, the natural invariants, 
the linear invariants, or the Euler-Rodrigues parameters, respectively. 
A formula that relates the twist of the same rigid body at two different points 
is now derived. Let A and P be two arbitrary points of a rigid body. The twist 
at each of these points is defined as 
(3.81) 
OJ 
L ^ ^ . 
, 
tp = 
(jj 
.^P. 
Moreover, eq.(3.50) can be rewritten as 
vp = v^ -h (a - p) X cj 
Combining eq.(3.81) with eq.(3.82) yields 
tp = VtA 
where 
U = 
1 
A - P 
O 
1 
(3.82) 
(3.83a) 
(3.83b) 
with the 6 x 6 matrix U defined as in eq.(3.29b), while A and P denote the 
cross-product matrices of vectors a and p, respectively. Thus, eqs.(3.83a & b) 
can be fairly called the twist-transfer formulas. 

110 
3. Fundamentals of Rigid-Body Mechanics 
3.5 
Acceleration Analysis of Rigid-Body Motions 
Upon differentiation of both sides of eq.(3.49) with respect to time, one obtains 
p = a + ^{p - a) + ft{p - a) 
(3.84) 
Now, eq.(3.49) is solved for pâa, and the expression thus resulting is substituted 
into eq.(3.84), thereby obtaining 
p = a + (fi + 1^2)(p - a) 
(3.85) 
where the matrix sum in parentheses is termed the angular-acceleration matrix 
of the rigid-body motion and is represented by W, i.e., 
W = n + Ct^ 
(3.86) 
Apparently, the first term of the right-hand side of eq.(3.86) is skew-symmetric, 
whereas the second one is symmetric. Thus, 
vect(W) = Yect{tt) = oj 
(3.87) 
uj being termed the angular-acceleration vector of the rigid-body motion. We 
have now an interesting result, namely, 
tr(W) = tr(fi2) = tr(-||a;||'l + OJOJ^) 
= -||cj||^tr(l) + a?. a; = -2||a?|p 
(3.88) 
Moreover, eq.(3.85) can be written as 
p = a + a; X (p - a) + a; X [a? X (p - a)] 
(3.89) 
On the other hand, the time derivative of t, henceforth referred to as the twist 
rate^ is displayed below: 
\6J 
t = 
(3.90) 
in which v is the acceleration of a point of the body. The relationship be-
tween the twist rate and the second time derivative of the screw is derived by 
differentiation of both sides of eq.(3.78), which yields 
s = Tt + Tt 
(3.91) 
where 
T = 
F 
O43 
O 
O 
(3.92) 
and F is one of N, L, or H, accordingly. The inverse relationship of eq.(3.91) 
is derived by differentiating both sides of eq.(3.80a) with respect to time, which 
yields 
t = Ss + Ss 
(3.93) 

3.5 Acceleration Analysis of Rigid-Body 
Motions 
111 
where 
F 
O 
O34 
O 
(3.94) 
with O and O34 already defined in eq.(3.80b) as the 3 x 3 and the 3 x 4 zero 
matrices, respectively, while F is one of N, L, or H, according with the type of 
rotation representation at hand. 
Before we take to differentiating the foregoing matrices, we introduce a few 
definitions: Let 
(3.95a) 
A = 
u 
Uo 
5 
V 
= 
r 
70 _ 
I.e., 
u = sin (/)e, 
UQ = cos 0, 
r = sin I â 1 e, 
VQ = cos I â J 
Thus, the time derivatives sought take on the forms 
N = 4(1 - cos(f)) [ e 
^ - \ 
(l/2)[ltr(Q) - Q] 
-(l/2)a;^[ltr(Q) - Q^] 
- ( w u ) l - ( l / 2 ) n Q 
-(l/2)u,^[ltr(Q) - Q^] 
r o l - R 
(3.95b) 
(3.96a) 
(3.96b) 
(3.96c) 
where we have used the identities below, which are derived in Appendix A. 
tr(Q) = tr(nQ) = -2a.>^u 
(3.96d) 
Furthermore, R denotes the cross-product matrix of r, and B is defined as 
B = -2(e â¢ w)l + 2(3 - cos(^)(e â¢ w)ee^ - 2(1 + sin(/.)we^ 
-{2cos(f> + sm(j))eu'^ - (sin(/>)[fi - (e â¢ w)E] 
(3.96e) 
Moreover, 
N = [^{cos(j>)l + ^(sin0)E 
e] 
(3.97a) 
L = [V/D 
u] 
H = [rol + R- 
- r ] 
(3.97b) 
(3.97c) 

112 
3. Fundamentals of Rigid-Body Mechanics 
where V and D are defined below: 
V = U - (liu^ + uii^) - ^ ( U - uu^) 
(3.97d) 
D = l-{-uo 
(3.97e) 
with U denoting, now, the cross-product matrix of u. 
3.6 
Rigid-Body Motion Referred to Moving Co-
ordinate Axes 
Although in kinematics no "preferred" coordinate system exists, in dynamics 
the governing equations of rigid-body motions are valid only in inertial frames. 
An inertial frame can be defined as a coordinate system that translates with 
uniform velocity and constant orientation with respect to the stars. Thus, it is 
important to refer vectors and matrices to inertial frames, but sometimes it is 
not possible to do so directly. For instance, a space vessel can be supplied with 
instruments to measure the velocity and the acceleration of a satellite drifting 
in space, but the measurements taken from the space vessel will be referred to 
a coordinate frame fixed to it, which is not inertial. If the motion of the vessel 
with respect to an inertial coordinate frame is recorded, e.g., from an Earth-
based station, then the acceleration of the satellite with respect to an inertial 
frame can be computed using the foregoing information. How to do this is the 
subject of this section. 
In the realm of kinematics, it is not necessary to distinguish between inertial 
and noninertial coordinate frames, and hence, it will suflfice to call the coordinate 
systems involved fixed and moving. Thus, consider the fixed coordinate frame 
J\r, y, Z, which will be labeled T^ and the moving coordinate frame A*, y^ Z^ 
which will be labeled M^ both being depicted in Fig. 3.7. Moreover, let Q be the 
rotation matrix taking frame T into the orientation of M, and o the position 
vector of the origin of M, from the origin of T. Further, let p be the position 
vector of point P from the origin of T and p the position vector of the same 
point from the origin of M. From Fig. 3.7 one has 
[V]T 
= [O]T-\-[P]T 
(3.98) 
where it will be assumed that p is not available in frame T^ but in M. Hence, 
[P]T 
= [CI]T[P]M 
(3.99) 
Substitution of eq.(3.99) into eq.(3.98) yields 
[ p b = [ o b + [QMp]A^ 
(3.100) 
Now, in order to compute the velocity of P, both sides of eq.(3.100) are 
differentiated with respect to time, which leads to 
[p]^ = [O]T + [Q,]AP]M + [ Q M P W 
(3-101) 

3.6 Rigid-Body Motion Referred to Moving Coordinate Axes 
113 
Figure 3.7: Fixed and moving coordinate frames 
Furthermore, from the definition of H, eq.(3.44), we have 
[Q]jr=[nMQ]^ 
(3.102) 
Upon substitution of the foregoing relation into eq.(3.101), we obtain 
[Pb = [ob + [n]AQ]Ap]M + [Q]AP]M 
(3.IO3) 
which is an expression for the velocity of P in JT in terms of the velocity of P in 
M and the twist of M, with respect to J^. Next, the acceleration of P in JT is 
derived by differentiation of both sides of eq.(3.103) with respect to time, which 
yields 
[p]^ = [o]^ + [(IMQMPU 
+ 
[^]AQMP]M 
+WAQ]AP]M 
+[Q]AP]M 
+ [Q]AP]M 
(3.104) 
Further, upon substitution of identity (3.102) into eq.(3.104), we obtain 
+2[n]AQ]Ap]M-\-[Q]Ap]M 
(3.105) 
Moreover, from the results of Section 3.5, it is apparent that the first two 
terms of the right-hand side of eq.(3.105) represent the acceleration of P as a 
point of Mj whereas the fourth term is the acceleration of P measured from M. 
The third term is known as the Coriolis acceleration, for it was first pointed out 
by the French mathematician Gustave Gaspard Coriolis (1835). 

114 
3. Fundamentals of Rigid-Body Mechanics 
f 
< = ^ 
(a) 
(b) 
Figure 3.8: Equivalent systems of force and moment acting on a rigid body 
3.7 
Static Analysis of Rigid Bodies 
Germane to the velocity analysis of rigid bodies is their force-and-moment anal-
ysis. In fact, striking similarities exist between the velocity relations associated 
with rigid bodies and the forces and moments acting on them. Prom elementary 
statics it is known that the resultant of all external actions, i.e., forces and mo-
ments, exerted on a rigid body can be reduced to a force f acting at a point, say 
A, and a moment riA- Alternatively, the aforementioned force f can be defined 
as acting at an arbitrary point P of the body, as depicted in Fig. 3.8, but then 
the resultant moment np changes correspondingly. 
In order to establish a relationship between n^ and np, the moment of the 
first system of force and moment with respect to point P is equated to the 
moment about the same point of the second system, thus obtaining 
which can be rewritten as 
np = n^ + (a - p) X f 
np = n^ -I- f X (p - a) 
(3.106) 
(3.107) 
whence the analogy with eq.(3.50) is apparent. Indeed, np and n^ of eq.(3.107) 
play the role of the velocities of P and A, p and a, respectively, whereas f of 
eq.(3.107) plays the role of u of eq.(3.50). Thus, similar to Theorem 3.4.2, one 
has 
Theorem 3.7.1 For a given system of forces and moments acting on a rigid 
body, if the resultant force is applied at any point of a particular line C, 
then 

3.7 Static Analysis of Rigid Bodies 
115 
the resultant moment is of minimum magnitude. 
Moreover, that 
minimum-
magnitude moment is parallel to the resultant force. 
Hence, the resultant of the system of forces and moments is equivalent to 
a force f acting at a point of Â£" and a moment n, with both f and n parallel 
to Â£''. Paraphrasing the definition of the ISA, one defines line Â£" as the axis 
of the wrench acting on the body. Let no be the minimum-magnitude moment. 
Paraphrasing eq.(3.52) in turn, no can be expressed as 
no = no 7J|;TT, 
no = - j ^ 
(3.108) 
Moreover, the pitch of the wrench, p", is defined as 
^ - ||f|| - 
||f||2 
^^ ^ - 
||f||2 
(3-109) 
which, again, has units of m/rad or correspondingly, of m/turn. Of course, the 
wrench axis can be defined by its Pliicker array, pÂ£//, i.e.. 
PÂ£// = 
e'' = ^ , 
n'' = p x e ' ' 
(3.110) 
where e'' is the unit vector parallel to Â£'', 
origin, and p is the position vector of any point on C". 
The wrench axis is fully specified, then, by the direction of f and point PQ of 
position vector PQ lying closest to the origin, which can be derived by analogy 
with eq.(3.70), namely, as 
Po = p | l f x ( n ^ - f x a ) 
(3.111) 
Similar to Theorem 3.4.1, one has 
Theorem 3.7.2 Consider a system of moments and forces acting on a rigid 
body, with the resultant force applied at an arbitrary point of the body. The pro-
jection of the resultant moment onto the wrench axis is identical for all points. 
Prom the foregoing discussion, then, the wrench applied to a rigid body can 
be fully specified by the resultant force f acting at an arbitrary point P and 
the associated moment, np. We shall derive presently the counterpart of the 6-
dimensional array of the twist, namely, the wrench array. Upon multiplication of 
the screw of eq.(3.71) by an amplitude A with units of force, what we will obtain 
would be a wrench w, i.e., a 6-dimensional array with its first three components 
having units of force and its last components units of moment. We would like to 
be able to obtain the power developed by the wrench on the body moving with 
the twist t by a simple inner product of the two arrays. However, because of the 
form the wrench w has taken, the inner product of these two arrays would be 

116 
3. Fundamentals of Rigid-Body Mechanics 
meaningless, for it would involve the sum of two scalar quantities with different 
units; moreover, none of the two quantities has an immediate physical meaning. 
In fact, the first scalar would have units of force by frequency (angular velocity 
by force), while the second would have units of moment of moment multiplied 
by frequency (velocity by moment), thereby leading to a physically meaningless 
result. This inconsistency can be resolved if we redefine the wrench not simply 
as the product of a screw by an amplitude, but as a linear transformation of 
that screw involving the 6 x 6 array T defined as 
r = o 1 
1 
O 
(3.112) 
where O and 1 denote, respectively, the 3x3 zero and identity matrices. Now we 
define the wrench as a linear transformation of the screw s defined in eq.(3.71). 
This transformation is obtained upon multiplying s by the product AT^ the 
amplitude A having units of force, i.e.. 
w = ^rs = 
p X (^e) -f p{Ae) 
Ae 
The foregoing wrench is given in axis coordinates, while the twist was given in 
ray coordinates. 
Now, the first three components of the foregoing array can be readily iden-
tified as the moment of a force of magnitude A acting along a line of action 
given by the Pliicker array of eq.(3.110), with respect to a point P, to which a 
moment parallel to that line and of magnitude pA is added. Moreover, the last 
three components of that array pertain apparently to a force of magnitude A 
and parallel to the same line. We denote here the above-mentioned moment by 
n and the force by f, i.e., 
f = Ae, 
n = p x f + pf 
The wrench w is then defined as 
(3.113) 
which can thus be interpreted as a representation of a system of forces and 
moments acting on a rigid body, with the force acting at point P of the body B 
defined above and a moment n. Under these circumstances, we say that w acts 
at point P of B. 
With the foregoing definitions it is now apparent that the wrench has been 
defined so that the inner product t^w will produce the power IT developed by 
w acting at P when B moves with a twist t defined at the same point, i.e.. 
n 
t^w 
(3.114) 
When a wrench w that acts on a rigid body moving with the twist t develops 
zero power onto the body, we say that the wrench and the twist are reciprocal 

3.7 Static Analysis of Rigid Bodies 
117 
to each other. By the same token, the screws associated with that wrench-twist 
pair are said to be reciprocal. More specifically, let the wrench and the twist be 
given in terms of their respective screws, s^ and st, as 
w = WTs^, 
t = Tsu 
(3.115) 
where W and T are the amplitudes of the wrench and the twist, respectively, 
while r is as defined in eq.(3.112). Thus, the two screws s^ and s^ are reciprocal 
if 
(rs^)^s, = s^r^s, = 0 
(3.116) 
and by virtue of the symmetry of F, the foregoing relation can be further ex-
pressed as 
s^Tst = 0 or s^rs^ = 0 
(3.117) 
The product s^Tst or its equivalent s[Ts^ 
is termed the reciprocal product of 
the two screws st and s^. 
Now, if A and P are arbitrary points of a rigid body, we define the wrench 
at these points as 
w^ = 
f 
Wp = 
np 
f 
Therefore, eq.(3.106) leads to 
Wp = Vw^ 
where 
V = 
1 
A - P 
0 
1 
(3.118) 
(3.119a) 
(3.119b) 
with A and P already defined in eq.(3.83b) as the cross-product matrices of 
vectors a and p, respectively. Thus, wp is a linear transformation of w^. By 
analogy with the twist-transfer formulas of eqs.(3.83a & b), eqs.(3.119a & b) 
are termed here the wrench-transfer formulas. 
Multiplying the transpose of eq.(3.83a) by eq.(3.119a) yields 
t^wp = t^U^Vw^ 
where 
u^v = 
- A + P 
1 
1 
A - P 
0 
1 
= 16X6 
(3.120) 
(3.121) 
with lex6 denoting the 6x6 identity matrix. Thus, tpWp = t j w ^ , as expected, 
since the wrench develops the same amount of power, regardless of where the 
force is assumed to be applied. Also note that an interesting relation between 
U and V follows from eq.(3.121), namely, 
v-i = u^ 
(3.122) 

118 
3. Fundamentals of Rigid-Body Mechanics 
3.8 
Dynamics of Rigid Bodies 
The equations governing the motion of rigid bodies are recalled in this section 
and cast into a form suitable to multibody dynamics. To this end, a few defi-
nitions are introduced. If a rigid body has a mass density />, which need not be 
constant, then its mass m is defined as 
m = [ pdB 
(3.123) 
JB 
where B denotes the region of the 3-dimensional space occupied by the body. 
Now, if p denotes the position vector of an arbitrary point of the body, from a 
previously defined origin O, the mass first moment of the body with respect to 
O, qo, is defined as 
qo= [ PpdB 
(3.124) 
JB 
Furthermore, the mass second moment of the body with respect to O is defined 
as 
lo= [ p{\\pfl-pp^)dB 
(3.125) 
JB 
which is apparently a symmetric matrix. This matrix is also called the moment-
of-inertia matrix, or inertia tensor, of the body under study with respect to O. 
One can readily prove a classical result: 
Theorem 3.8.1 The moment of inertia of a rigid body with respect to a point 
O is positive definite. 
Proof: We can prove the positive-definiteness of the mass moment of inertia 
based on physical arguments. Indeed, the kinetic energy of the rigid body, 
denoted by T, is defined as 
./j*ii 'dB 
where p is the velocity of any point P of the body. For the purposes of this 
discussion, it will be assumed that point O, about which the second moment 
is defined, is a point of the body that is instantaneously at rest. Thus, if this 
point is defined as the origin of the Euclidean space, the velocity of any point 
of the body, moving with an angular velocity a;, is given by 
p == a; X p 
which can be rewritten as 
p = - P a ; 
with P defined as the cross-product matrix of p. Hence, 
IIPIP = (PufPu 
= cj^F^Pu 
= 
-u'^P^u 

3.8 Dynamics of Rigid Bodies 
119 
Moreover, by virtue of eq.(2.39), the foregoing expression is readily reducible to 
||p||^=u;^(||p|pl-pp^)a; 
(3.126) 
Therefore, the kinetic energy reduces to 
T = l l po:^{\\pfl-pp'')<jdB 
(3.127) 
and since the angular velocity is constant throughout the body, it can be taken 
out of the integral sign, i.e.. 
T-\.^ 
[ p{\\pfl-pp^)dB LJ 
(3.128) 
The term inside the brackets of the above equation is readily identified as IQ , 
and hence, the kinetic energy can be written as 
T = ^OJ'^IQC^ 
(3.129) 
Now, since the kinetic energy is a positive-definite quantity, the quadratic 
form of eq.(3.129) is consequently positive-definite as well, thereby proving the 
positive-definiteness of the second moment. 
The mass center of a rigid body, measured from O, is defined as a point 
C, not necessarily within the bodyâthink of a homogeneous torusâof position 
vector c given by 
c= ^ 
(3.130) 
m 
Naturally, the mass moment of inertia of the body with respect to its centroid 
is defined as 
lc= [ p[\\rfl-rr^]dB 
(3.131) 
JB 
where r is defined, in turn, as 
r = p - c 
(3.132) 
Obviously, the mass moment of inertia of a rigid body about its mass center, 
also termed its centroidal mass moment of inertia, is positive-definite as well. 
In fact, the massâor the volume, for that matterâmoment of inertia of a 
rigid body with respect to any point is positive-definite. As a consequence, its 
three eigenvalues are positive and are referred to as the principal moments of 
inertia of the body. The eigenvectors of the inertia matrix are furthermore 
mutually orthogonal and define the principal axes of inertia of the body. These 
axes are parallel to the eigenvectors of that matrix and pass through the point 
about which the moment of inertia is taken. Note, however, that the principal 
moments and the principal axes of inertia of a rigid body depend on the point 
with respect to which the moment of inertia is defined. Moreover, let IQ and 

120 
3. Fundamentals of Rigid-Body Mechanics 
Ic be defined as in eqs.(3.125) and (3.131), with r defined as in eq.(3.132). It 
is possible to show that 
Io = Ic+ m(||c|pl - cc^) 
(3.133a) 
or, equivalently, 
Io = I c - f m C C ^ 
(3.133b) 
with C = CPM(c). Furthermore, the smallest principal moment of inertia of 
a rigid body attains its minimum value at the mass center of the body. The 
relationship appearing in eq.(3.133a) constitutes the Theorem of Parallel Axes, 
a.k.a. Steiner's Theorem. 
Henceforth, we assume that c is the position vector of the mass center in 
an inertial frame. Further, we recall the Newton-Euler equations governing the 
motion of a rigid body, and let the body at hand be acted upon by a wrench 
of force f applied at its mass center, and a moment nc- The Newton equation 
then takes the form 
f = mc 
(3.134a) 
whereas the Euler equation is 
Tic = I c ^ + u? X Ico? 
(3.134b) 
The momentum m and the angular momentum h.c of ^ rigid body moving with 
an angular velocity a? are defined below, the angular momentum being defined 
with respect to the mass center. These are 
m = mc, 
he = 1(70? 
(3.135) 
Moreover, the time-derivatives of the foregoing quantities are readily computed 
as 
rh = mc, 
he = I c ^ + a; x I^cj 
(3.136) 
and hence, eqs.(3.134a & b) take on the forms 
f = m, 
nc = he 
(3.137) 
The set of equations (3.134a & b) are known as the Newton-Euler equations. 
These can be written in a more compact form as we describe below. First, we 
introduce a 6 x 6 matrix M that, following von Mises (1924), we term the inertia 
dyad, namely, 
Ic 
O 
O 
m l 
M = 
(3.138) 
where O and 1 denote the 3x3 zero and identity matrices. A similar 6x6 matrix 
was defined by von Mises under the above name. However, von Mises's inertia 
dyad is full, while the matrix defined above is block-diagonal. Both matrices, 
nevertheless, denote the same physical property of a rigid body, i.e., its mass 
and moment of inertia. Now the Newton-Euler equations can be written as 
Mt-f-WMt = w 
(3.139) 

3.9 Exercises 
121 
in which matrix W, henceforth termed the angular-velocity dyad, by similarity 
with the inertia dyad, is defined in turn as 
W 
il 
O 
o o 
(3.140) 
with ft already defined as the angular-velocity matrix; it is, of course, the cross-
product matrix of the angular-velocity vector u. Note that the twist of a rigid 
body lies in the nuUspace of its angular-velocity dyad, i.e.. 
W t = 0 
(3.141) 
Further definitions are introduced below: The momentum screw of the rigid 
body about the mass center is the 6-dimensional vector fx defined as 
M 
mc 
= Mt 
(3.142) 
Moreover, from eqs.(3.136) and definition (3.142), the time-derivative of fx can 
be readily derived as 
A = Mt -I- WfjL = Mt + W M t 
(3.143) 
The kinetic energy of a rigid body undergoing a motion in which its mass 
center moves with velocity c and rotates with an angular velocity a? is given by 
T=\m\\c\\'-^\o:^lcu: 
(3.144) 
Prom the foregoing definitions, then, the kinetic energy can be written in com-
pact form as 
T = - t ^ M t 
(3.145) 
while the Newton-Euler equations can be written in an even more compact form 
as 
/i = w 
(3.146) 
which is a 6-dimensional vector equation. 
Properly speaking, M, as given by eq.(3.138), should be subscripted with C, 
to emphasize that the moment of inertia in the upper left block of M is taken 
with respect to C Por brevity, we will dispense with this subscript whenever the 
moment of inertia is centroidal. If the moment of inertia is taken with respect to 
any other point O, then we will denote the inertia dyad with M Q . The reader 
is asked to verify that Mo takes the form 
Mo = 
lo 
rnC 
mC^ 
ml 
(3.147) 

122 
3. Fundamentals of Rigid-Body Mechanics 
Figure 3.9: Motion of a cube 
3.9 
Exercises 
3.1 The cube of Fig. 3.9 is displaced from configuration AB .. .H into config-
uration A'B' 
...H'. 
(a) Determine the matrix representing the rotation Q undergone by the 
cube, in X, Y, Z coordinates. 
(b) Find the Pliicker coordinates of Hne C of the cube undergoing dis-
placements of minimum magnitude. 
(c) Find the intersections of C with the coordinate planes. 
3.2 Two unit forces, fi and Â£2, are applied to the regular tetrahedron of unit-
length edges displayed in Fig. 3.10 in such a way that fi is directed from 
P2 to P3, whereas Â£2 is directed from P4 to Pi. The effect of the foregoing 
system of forces on the rigid tetrahedron is obtained by application of the 
resultant of the two forces on a certain point P and a moment n. Find 
the location of point P lying closest to P4 that will make the magnitude 
of n a minimum. 
3.3 The moment of a line Â£1 about a second line Â£2 is a scalar // defined as 
// = ni â¢ e2 

3.9 Exercises 
123 
Figure 3.10: A regular tetrahedron 
where ni is the moment of Â£i about an arbitrary point P of Â£2, while e2 is 
a unit vector parallel to line Â£2- Apparently, the necessary and sufficient 
condition for two lines to intersect is that the moment of one about the 
other vanish. 
Using the above concept, show that the locus of all lines C intersecting 
three given lines {Ck}i 
is a quadric^ i.e., a surface defined by a func-
tion that is quadratic in the position vector p of a point of the surface: 
/(p) = p ^ M p + g^p + /i = 0, 
h > 0. Notice that, the surface being 
generated by the motion of a line constrained to touch the three given 
lines, the surface is bound to be ruled. Now, there are only two ruled, 
second-order surfaces (Pottmann and Wallner, 2001), the one-sheet hy-
perboloid and the hyperbolic paraboloid. Geometrically, the former is a 
closed surface, the latter open. Algebraically, the former is characterized 
by a matrix coeflficient M with det(M) < 0, meaning that the matrix has 
two positive and one negative eigenvalues. The hyperbolic paraboloid is 
characterized by a singular M, i.e., det(M) = 0. Show, furthermore, that 
det(M) is nonzeroâshowing that det(M) < 0 is far more challenging!â 
and hence, the quadric is a one-sheet hyperboloid. Hint: Deriving the 
given expression for /(p) should be done without resorting to components. 
Showing that M is singular requires resorting to components. To this end, 
choose the coordinate axes appropriately so as to avoid too cumbersome 
expressions. 
3.4 A robotic gripper is provided with two redundant sensors that are meant 
to measure a wrench acting on the gripper. The ith sensor, moreover, has 
its own coordinate frame, labeled ^i, for i = 1,2. Sensor i reported the 
ith measurement of the wrench wp, where subscript P indicates that the 
force is applied at point P, as [wp]^ = [n'^, f^]f, for i = 1,2. These 

124 
3. Fundamentals of Rigid-Body Mechanics 
are given as 
[n]i = 
[n]2 = 
"0" 
0 
_5_ 
? 
" - 5 / 3 " 
-10/3 
10/3 
[f]i = 
, 
[f: 
"0" 
2 
0 
2 = 
r-4/3 
4/3 
_ 2/3 
(a) Show that the measurements are compatible, based on invariance 
arguments. 
(b) Determine the relative orientation of the two frames, i.e., find the 
rotation matrix transforming JS-coordinates into JTi-coordinates. 
3.5 A robot-calibration method has been proposed that allows us to determine 
the location of a joint axis, Â£, via the Pliicker coordinates of the axis in a 
coordinate frame fixed to the gripper. The Pliicker coordinates are given 
as TTc = [e^, n^]'^. 
(a) Show that the distance of the axis to the origin of the gripper-fixed 
coordinate frame, d, can be determined as d = ||n||. 
(b) Show that the point P* on the axis, which lies closest to the above-
mentioned origin, has a position vector p* given as 
p* = e X n 
(c) From measurements on a robot, the Pliicker coordinates were esti-
mated, in a gripper-fixed frame Q, as 
[7rc]g = [-\/2/2, 0, \/2/2, 0, - v ^ , 0]^ 
Find d and p* in gripper coordinates 
3.6 The gripper ^ of a robot is approaching a workpiece B, as indicated in 
Fig. 3.11, with planes iJi and 772 parallel to each other and normal to 
773. The workpiece is made out of a cube of unit length from which two 
vertices have been removed, thereby producing the equilateral triangular 
faces DEF and D'E'F'. 
Moreover, two coordinate frames, T (X, Y", Z) 
and T' {X\ Y\ Z')^ are defined as indicated in the figure, in which Y is, 
apparently, parallel to line D'C. 
It is required to grasp B with Q in such a way that planes 77i and 772 coin-
cide with the triangular faces, while carrying the Y' axis to an orientation 
perpendicular to the diagonal CC of B. More concretely, in the grasping 
configuration, frame T' is carried into T" {X'\ Y'\ and Z"), not shown 
in the figure, in such a way that unit vectors i", j ' ' , k'', parallel to X"^ Y", 
Z'\ respectively, are oriented so that V has all three of its ^-components 
positive, while j ' ' has its Z-component positive. 

3.9 Exercises 
125 
(a) Compute the angle of rotation of the motion undergone by G from 
a pose in which JF' and T have identical orientations, termed the 
reference pose, and find the unit vector parallel to the axis of rotation, 
in frame T. 
Figure 3.11: A workpiece B to be grasped by a gripper G 
(b) The position vector of point P of ^ is known to be, in the reference 
pose, 
r 2 
[0.25 
Determine the set of points of G undergoing a displacement of min-
imum magnitude, under the condition that P, in the displaced con-
figuration of G, coincides with C . 
3.7 In calibrating a robot, the Pliicker coordinates of one of its axes are to be 
determined in a given coordinate frame. To this end, the moment of this 
axis is measured with respect to two points, A and P, of position vectors 
[a] = [1, 0, 0]'^ and [b] = [0, 1, 1]^, respectively. The said moments, 
iiA and n^, respectively, are measured as 
[n^] 
with all entries given in meters. 
(a) Determine the unit vector e defining the direction of the axis under 
discussion. 
(b) Find the coordinates of the point P* of the axis that lies closest to 
the origin 
0 
2 
0 
. 
[^B] 
= 
0 
1 
1 

126 
3. Fundamentals of Rigid-Body Mechanics 
(c) Find the Pliicker coordinates of the axis about the origin, i.e., the 
Pliicker coordinates of the axis in which the moment is defined with 
respect to the origin. 
3.8 Prove that for any 3-dimensional vectors u and p, 
U;X{LJX"'{UX{U 
xp))...) = (-l)^(||a;|p^l - 
\\uj\\''^^-^^uju^)p 
^ 
v^ 
' 
2k factors 
u X (LJ X "-{cj X {u xp)) â¢ â¢ â¢) = (-l)^(ll^lP^^) X P 
^' 
V. 
' 
2fc4-l factors 
3.9 A "small" rotation is defined as that about an arbitrary axis parallel to the 
unit vector e, through a "small" angle </>, so that 0 << 1. Prove that the 
angular-velocity vector, in the special case of "small" rotations, turns out 
to be a time-derivative. What is the vector whose time-derivative yields 
the angular-velocity vector? 
3.10 Derive an expression for the angular velocity u in terms of Euler angles, 
which were introduced in Exercise 2.18. More specifically, if we store the 
Euler angles in array ry = [0, 0, -0]^, then, find the matrix W such that 
u = Wi] 
Notice that, given r) and cv, an expression for rj can be obtained upon 
inverting W. However, W is not always invertible. Find under which 
conditions W becomes singular. Notice: The use of computer algebra is 
strongly recommended to solve this exercise. 
3.11 A rectangular prism with regular hexagonal bases whose sides are 25 mm 
long and whose height is 150 mm is to undergo a pick-and-place operationâ 
See Chapter 6 to understand what this meansâthat requires knowledge 
of its centroid location and its moment-of-inertia matrix. Find the cen-
troidal principal axes and moments of inertia under the assumption that 
the prism is made from a homogeneous material. 
3.12 The prism of Exercise 3.11 now undergoes a machining process cutting it 
into two parts, which are separated by a plane that contains one of the 
edges of the base and makes an angle of 45Â° with the axis of the prism. 
Find the centroidal principal axes and moments of inertia of each of the 
two parts. 
3.13 In Exercise 2.22 assume that a mass m is located at every point Pi 
of position vector p^. Give a mechanical interpretation of the matrix 
m[tr(PP^)l â PP^], with P defined in that exercise. 

3.9 Exercises 
127 
3.14 The centroidal inertia matrix of a rigid body is measured by two observers, 
who report the two results below: 
[iU = 
1 
0 0 
0 2 0 
0 0 3 
[1]^== 
1 
6 
2 2 
2 5 0 
2 0 7 
Show that the two measurements are acceptable. Hint: Use invariance 
arguments. 
3.15 State the conditions under which a point and the mass center of a rigid 
body share the same principal axes of inertia. In other words, let Ip and 
Ic be the moment-of-inertia matrices of a rigid body about a point P and 
its mass center, (7, respectively. State the conditions under which the two 
matrices have common eigenvectors. Moreover, under these conditions, 
what are the relationships between the two sets of principal moments of 
inertia? 
3.16 Show that the smallest principal moment of inertia of a rigid body attains 
its minimum value at the mass center. 
3.17 Show that the time-rate of change of the inertia dyad M of a rigid body 
is given by 
M = W M - M W 
Then, recall the momentum screw /JL defined as 
Ai = Mt 
where t is the twist of the body, defined at its mass center. Now, with 
the above expression for M, restate the result displayed in eq.(3.143), i.e., 
show that 
A = Mt + W M t 
3.18 A wrench w = [n'^ f^]^, with f acting at point P of the gripper of 
Fig. 2.10, is measured by a six-axis force sensor, to which a frame Ts is 
attached, as indicated in that figure. If points P and S lie a distance of 
100 mm apart, find the wrench in T2, when the readouts of the sensor are 
[n]s 
= 
Nm, 
[f]s 
N 
3.19 Deriveeq.(3.147). Moreover, paraphrasingSteiner'sTheorem, eq.(3.133b), 
notice that M o can be expressed as 
Mo = M c + P, 
P = 
O 
mC 
mC^ 
O 

128 
3. Fundamentals of Rigid-Body Mechanics 
The above expression can be termed the 6 x 6 form of Steiner's Theorem 
or, equivalently, of the Parallel-Axis Theorem. Now, in trying to mimic 
Steiner's Theorem, one would like to express P in the same form as the 
second term of eq.(3.133b), as the product mRR^, with R defined as a 
suitable 6 x 6 matrix. Can this matrix be found? If yes, give an expression 
for R; if not, explain why. 

Chapter 4 
Geometry of Decoupled 
Serial Robots 
4.1 
Introduction 
This chapter is devoted to the displacement analysis of robotic manipulators of 
the serial type, which we call the geometry of serial robots. The study is limited 
to decoupled robots, to be defined below, the inverse displacement analysis of 
general six-axis robots being the subject of Chapter 9. These robots serving 
mainly to perform manipulation tasks, they are also referred to as manipulators. 
We begin by defining a serial, n-axis manipulator. In connection with this 
manipulator, additionally, we will (i) introduce the Denavit-Hartenberg notation 
for the definition of link frames that uniquely determine the architecture and the 
configuration, or posture, of the manipulator at hand; (ii) define the Cartesian 
and joint coordinates of this manipulator; and (Hi) relate these two sets of 
variables by means of its geometric model. Moreover, with regard to six-axis 
manipulators, we will define decoupled manipulators and provide a procedure 
for the solution of their inverse displacement model. 
4.2 
The Denavit-Hartenberg Notation 
One of the first tasks of a robotics engineer is the geometric modeling of a robotic 
manipulator. This task consists in devising a model that can be unambiguously 
(i) described to a control unit through a database and (ii) interpreted by other 
robotics engineers. The purpose of this task is to give manipulating instructions 
to a robot, regardless of the dynamics of the manipulated load and the robot 
itself. The simplest way of geometrically modeling a robotic manipulator is by 
means of the concept of kinematic chain. A kinematic chain is a set of rigid 

130 
4. Geometry of Decoupled Serial Robots 
Figure 4.1: The two basic lower kinematic pairs: the revolute and the prismatic 
joints 
bodies, also called links, coupled by kinematic pairs, also termed joints. 
A 
kinematic pair is, then, the coupling of two rigid bodies so as to constrain their 
relative motion. We distinguish two basic types of kinematic pairs, namely, 
higher and lower kinematic pairs. A higher kinematic pair arises between rigid 
bodies when contact takes place along a line or at a point. This type of coupling 
occurs in cam-and-follower mechanisms, gear trains, and roller bearings, for 
example. A lower kinematic pair occurs when contact takes place along a surface 
common to the two bodies. Six different types of lower kinematic pairs can be 
distinguished (Hartenberg and Denavit, 1964; Angeles, 1982), but all these can 
be produced from two basic types, namely, the rotating pair, denoted by R 
and also called revolute, and the sliding pair, represented by P and also called 
prismatic. 
The common surface along which contact takes place in a revolute pair is 
a circular cylinder, a typical example of this pair being the coupling through 
journal bearings. Thus, two rigid bodies coupled by a revolute can rotate relative 
to each other about the axis of the common cylinder, which is thus referred to as 
the axis of the revolute, but are prevented from undergoing relative translations 
as well as rotations about axes other than the cylinder axis. On the other hand, 
the common surface of contact between two rigid bodies coupled by a prismatic 
pair is a prism of arbitrary cross section, and hence, the two bodies coupled 
in this way are prevented from undergoing any relative rotation and can move 
only in a pure-translation motion along a direction parallel to the axis of the 
prism. As an example of this kinematic pair, one can cite the dovetail coupling. 
Note that whereas the revolute axis is a totally defined line in three-dimensional 
space, the prismatic pair has no axis; this pair has only a direction. That is, the 
prismatic pair does not have a particular location in space. Nevertheless, and for 
the sake of conciseness, we will refer to joint axis generically, when speaking of 
either revolute or prismatic joints. Bodies coupled by a revolute and a prismatic 
pair are shown in Fig. 4.1. 

4.2 The Denavit-Hartenberg Notation 
131 
Serial manipulators will be considered in this chapter, their associated kine-
matic chains thus being of the simple type, i.e., each and every link is coupled 
to at most two other links. A simple kinem.atic chain can be either closed or 
open. It is closed if each and every link is coupled to two other links, the chain 
then being called a linkage] it is open if it contains exactly two links, the end 
ones, that are coupled to only one other link. Thus, simple kinematic chains 
studied in this chapter are open, and in the particular robotics terminology, 
their first link is called the manipulator base, whereas their last link is termed 
the end-effector (EE). 
Thus, the kinematic chains associated with manipulators of the serial type 
are composed of binary links, the intermediate ones, and exactly two simple 
links, those at the ends. Hence, except for the end links, all links carry two 
kinematic pairs, and as a consequence, two pair axesâbut remember that a 
prismatic pair has a direction but no axis. In order to uniquely describe the 
architecture of a kinematic chain, i.e., the relative location and orientation 
of its neighboring pair axes, the Denavit-Hartenberg notation (Denavit and 
Hartenberg, 1955) is introduced. To this end, links are numbered 0, 1, ..., n, 
the ith. pair being defined as that coupling the (i â l)st link with the ith. link. 
Hence, the manipulator is assumed to be composed of n + 1 links and n pairs; 
each of the latter can be either R or P, where link 0 is the fixed base, while link 
n is the end-effector. Next, a coordinate frame Ti is defined with origin Oi and 
axes Xi,Yi, 
Zi. This frame is attached to the (i â l)st linkânot to the ith 
link!âfor z = l, . . . , n - h l . This is the classical Denavit-Hartenberg notation. 
Khalil and Kleinfinger (Khalil and Dombre, 2002) modified this notation to 
make it "less ambiguous." In the balance of the book we follow the classical 
notation. For the first n frames, this is done following the rules given below: 
1. Zi \s the axis of the ith pair. Notice that there are two possibilities of 
defining the positive direction of this axis, since each pair axis is only a 
line, not a directed segment. Moreover, the Zi axis of a prismatic pair can 
be located arbitrarily, since only its direction is defined. 
2. Xi'is defined as the common perpendicular to Zi-i and Zi, directed from 
the former to the latter, as shown in Fig. 4.2(a). Notice that if these 
two axes intersect, the positive direction of Xi is undefined and hence, 
can be freely assigned. Henceforth, we will follow the right-hand rule in 
this case. This means that if unit vectors i^, k^_i, and k^ are attached to 
axes Xi, Zi^i, and Zi, respectively, as indicated in Fig. 4.2(b), then i^ is 
defined as k^_i x k^. Moreover, if Zi-i and Zi are parallel, the location 
of Xi is undefined. In order to define it uniquely, we will specify Xi as 
passing through the origin of the (2 â l)st frame, as shown in Fig. 4.2(c). 
3. The distance between Zi and Z^+i is defined as a^, which is thus nonneg-
ative. 
4. The Z^-coordinate of the intersection 0 | of Zi with Xi^i is denoted by bi. 
Since this quantity is a coordinate, it can be either positive or negative. 

132 
4. Geometry of Decoupled Serial Robots 
1 , 
^X, 
V 
(b) 
â¢Zi 
Zi-
(c) 
Figure 4.2: Definition of Xi when Zi. 
(c) are parallel 
1 and Zi'. (a) are skew; (b) intersect; and 
Its absolute value is the distance between Xi and Xi+i, also called the 
offset between successive common perpendiculars to the corresponding 
joint axes. 
5. The angle between Zi and Zi^i is defined as ai and is measured about the 
positive direction of Xi^i. 
This item is known as the twist angle between 
successive pair axes. 
6. The angle between Xi and Xi^i is defined as Oi and is measured about 
the positive direction of Z^. 
The (n 4- l)st coordinate frame is attached to the far end of the nth link. 
Since the manipulator has no (n + l)st link, the foregoing rules do not apply to 
the definition of this frame. The analyst, thus, has the freedom to define this 
frame as it best suits the task at hand. Notice that n + 1 frames, .Fi, J?^2, â¢ â¢ -, 
JT^^-i, have been defined, whereas links are numbered from 0 to n. In summary, 
a n-axis manipulator is composed of n + 1 links and n + 1 coordinate frames. 
These rules are illustrated with an example below. 
Consider the architecture depicted in Fig. 4.3, usually referred to as a Puma 
robot, which shows seven links, numbered from 0 to 6, and seven coordinate 

4.2 The Denavit-Hartenberg 
Notation 
133 
frames, numbered from 1 to 7. Note that the last frame is arbitrarily defined, 
but its origin is placed at a specific point of the EE, namely, at the operation 
point P, which is used to define the task at hand. Furthermore, three axes 
intersect at a point C, and hence, all points of the last three links move on 
concentric spheres with respect to ^4, for which reason the subchain comprising 
these three links is known as a spherical wrist, point C being its center. By the 
same token, the subchain composed of the first four links is called the arm. 
Thus, the wrist is decoupled from the arm, and is used for orientation purposes, 
the arm being used for the positioning of point C. The arm is sometimes called 
the regional structure and the wrist the local structure, the overall manipulator 
thus being of the decoupled type. 
Figure 4.3: Coordinate frames of a Puma robot 
In the foregoing discussion, if the ith pair is iJ, then all quantities involved in 
those definitions are constant, except for 6i, which is variable and is thus termed 
the joint variable of the ith pair. The other quantities, i.e., a^, bi, and a^, are the 
joint parameters of the same pair. If, alternatively, the ith pair is P, then bi is 
variable, and the other quantities are constant. In this case, the joint variable is 
bi, and the joint parameters are ai^ai, and Oi. Notice that associated with each 
joint there are exactly one joint variable and three constant parameters. Hence, 
a n-axis manipulator has n joint variablesâwhich are henceforth grouped in the 
n-dimensional vector 0, regardless of whether the joint variables are angular or 
translationalâand 3n constant parameters. The latter define the architecture 
of the manipulator, while the former determine its configuration, or posture. 
Whereas the manipulator architecture is fully defined by its 3n Denavit-
Hartenberg (DH) parameters, its posture is fully defined by its n joint variables, 
also called its joint coordinates, once the DH parameters are known. The relative 
poseâposition and orientationâbetween links is fully specified, then, from the 
background of Chapter 2, by {i) the rotation matrix taking the Xi, Yi, Zi axes 
into a configuration in which they are parallel pair wise to the X^+i, Yi^i, 
Zi^i 

134 
4. Geometry of Decoupled Serial Robots 
Figure 4.4: Relative orientation of the ith and {i + l)st coordinate frames 
axes, and (ii) the position vector of the origin of the latter in the former. The 
representations of the foregoing items in coordinate frame Ti will be discussed 
presently. First, we obtain the matrix representation of the rotation Q^ carrying 
J^i into an orientation coincident with that of ^i+i, assuming, without loss of 
generality because we are interested only in changes of orientation, that the 
two origins are coincident, as depicted in Fig. 4.4. This matrix is most easily 
derived if the rotation of interest is decomposed into two successive rotations, 
as indicated in Fig. 4.5. In that figure, X'^, Y^', Z[ is an intermediate coordinate 
frame T[^ obtained by rotating Ti about the Zi axis through an angle Qi. Then, 
the intermediate frame is rotated about X^/ through an angle a^, which takes 
it into a configuration coincident with J^i+i. Let the foregoing rotations be 
denoted by \Gi\i and [Ai]^/, respectively, which are readily derived for they 
are in the canonical forms (2.55c) and (2.55a), respectively. 
Moreover, let 
\i = COSQ;^, 
jj^i = sin ai 
(4.1a) 
One thus has, using subscripted brackets as introduced in Section 2.2, 
[Cih = 
COS 6i 
â sin 6i 
0 
sin Oi 
cos Oi 
0 
0 
0 
1 
, 
[M],= 
1 
0 
0 
0 
Aj âfj,i 
0 
/ij 
Xi 
and hence, the matrix sought is computed simply as 
[Qi]i = 
[Ci]i[Ai]i, 
Henceforth, we will use the abbreviations introduced below: 
Qi = [Qi]i, 
Ci = [Ci]i, 
Ai = [Ai]i. 
(4.1b) 
(4.1c) 
(4.1d) 

4.2 The Denavit-Hartenberg 
Notation 
135 
Xi, Xi+) 
(b) 
Figure 4.5: (a) Rotation about axis Zi through an angle 6i] and (b) relative 
orientation of the i'th and the {i H- l)st coordinate frames 
thereby doing away with brackets, when these are self-understood. Thus, 
Qi = [Qi]i 
cos 6i 
â Xi sin 6i 
fii sin Oi 
sin 6i 
Xi cos 6i 
âfjLi cos 9i 
0 
fii 
Xi 
(4.1e) 
One more factoring of matrix Q^, which will be used in Chapter 9, is given 
below: 
Qi = Z^X^ 
(4.2a) 
with Xi and Z^ defined as two pure reflections, the former about the YiZi plane, 
the latter about the XiYi plane, namely. 
Xi = 
1 
0 
0 
0 
-Xi 
Mi 
0] 
Mi 
AiJ , z^ = 
COS 6i 
sin 6i 
0 
sin 6i 
â cos 6i 0 
0 
0 
1 
(4.2b) 
Note that both X^ and Z^ are symmetric and self-inverseâsee Section 2.2. 
In order to derive an expression for the position vector a^ connecting the origin 
Oi of Ti with that of J^i+i, 0^4.1, reference is made to Fig. 4.6, showing the 
relative positions of the different origins and axes involved. From this figure, 
apparently, 
SLi = O^i^i 
= O^i. 
-f- OVdi^i 
(4.3a) 
where obviously. 
[0^i']i^ 
0 
0 
hi 
, 
[Oi>dij^i]i^i = 
ai 
0 
0 

136 
4. Geometry 
of Decoupled 
Serial 
Robots 
Now, in order to compute the sum appearing in eq.(4.3a), the two foregoing 
vectors should be expressed in the same coordinate frame, namely, Ti. Thus, 
[ o ^ i + i ]i = [Qi]i[ oTdi^i ]HI = 
ai cos 6i 
ai sin 0i 
0 
and hence, 
For brevity, we introduce one more definition: 
ai cos 6i 
ai sin 6i 
h 
8-2 = 
3^2 
(4.3b) 
(4.3c) 
Similar to the foregoing factoring of Q^, vector a^ admits the factoring 
Hi = (^ihi 
(4.3d) 
where b^ is given by 
b . = 
ai 
bifXi 
biXi 
(4.3e) 
with the definitions introduced in eq.(4.1a). Hence, vector b^ is constant for 
revolute pairs. From the geometry of Fig. 4.6, it should be apparent that b^- is 
nothing but a^ in J^i+i, i.e., 
bi = [ai]i+i . 
Matrices Q^ can also be regarded as coordinate transformations. Indeed, let 
ii, ji, and k^ be the unit vectors parallel to the Xi^Yi, 
and Zi axes, respectively, 
directed in the positive direction of these axes. From Fig. 4.6, it is apparent 
that 
[U+i\i = 
cos 6i 
sin 6i 
0 
5 
[ki-fi]i 
whence 
[jz+i ]i = [ki-fi X ii_|_i ]i = 
fjii sin 6i 
âfii cos 6i 
Xi 
âXiSinOi 
Xi cos 6i 
Therefore, the components of 1^4.1, j^+i, and ki^i 
in Ti are nothing but the 
first, second, and third columns of Q^. In general, then, any vector v in JT^+i is 
transformed into Ti in the form 
[v]i = [Qi]i[v]i4.i 

4.2 The Denavit-Hartenberg 
Notation 
137 
Figure 4.6: Layout of three successive coordinate frames 
which is a similarity transformation, as defined in eq.(2.119). Likewise, any 
matrix M in !Fi^i is transformed into Ti by the corresponding similarity trans-
formation, as given by eq.(2.130): 
[M]i = 
[QiUMU^[Qr]i 
The inverse relations follow immediately in the form 
[v]i+i = [Qflilvli, 
[ M ] H I = 
[Qj]i[M]i[Qi]i 
or, upon recalling the first of definitions (4.Id), 
[v]i = Qi[v]i+t, 
[M]i = 
Qi[M]i+iQj 
(4.4a) 
(4.4b) 
Moreover, if we have a chain of i frames, J^i, Tii â¢â¢â¢â¢, ^i, then the inward 
coordinate transformation from JFj to J^i is given by 
[v]i = QiQ2---Qi-i[v]i 
[M]i = Q1Q2 â¢ â¢ â¢ Qi-i[M]i(QiQ2 â¢ â¢ â¢ Qi-i)^ 
Likewise, the outward coordinate transformation takes the form 
[v]i = (QiQ2---Qi-i)^[v]i 
[M]i = (QiQ2---Qi-i)^[M]iQiQ2---Qi-i 
(4.5a) 
(4.5b) 
(4.6a) 
(4.6b) 

138 
4. Geometry of Decoupled Serial Robots 
4.3 
The Geometric Model of Six-Revolute Ma-
nipulators 
The kinematics of serial manipulators begins with the study of the geometric 
relations between joint variables and Cartesian variables. The former were 
defined in Section 4.2 as those determining the posture of a given manipulator, 
with one such variable per joint; a six-axis manipulator, like the one displayed 
in Fig. 4.7, thus has six joint variables, ^i, 62, ..., OQ. The Cartesian variables 
of a manipulator, in turn, are those variables defining the pose of the EE; since 
six independent variables are needed to define the pose of a rigid body, the 
manipulator of Fig. 4.7 thus involves six Cartesian variables. 
The study outlined above pertains to the geometry of the manipulator, for it 
involves one single pose of the EE. Besides geometry, the kinematics of manip-
ulators comprises the study of the relations between the time-rates of change of 
the joint variables, referred to as the joint rates, and the twist of the EE. Addi-
tionally, the relations between the second time-derivatives of the joint variables, 
referred to as the joint accelerations, with the time-rate of change of the twist 
of the EE also pertain to robot kinematics. 
In the balance of this chapter we study the geometry of manipulators, the 
relations between joint rates, joint accelerations and their Cartesian counter-
parts, twist and twist-rate, being the subject of Chapter 5. In this regard, we 
distinguish two problems, commonly referred to as the direct and the inverse 
displacement problems, or DDP and correspondingly, IDP, for brevity. In the 
DDP, the six joint variables of a given six-axis manipulator are assumed to be 
known, the problem consisting in finding the pose of the EE. In the IDP, on the 
contrary, the pose of the EE is given, while the six joint variables that produce 
this pose are to be found. 
The DDP reduces to matrix and matrix-times-vector multiplications; as we 
shall show presently, the DDP poses no major problem. The IDP, however, is 
more challenging, for it involves intensive variable-elimination and nonlinear-
equation solving. Indeed, in the most general case, the IDP amounts to elimi-
nating five out of the six unknowns, with the aim of reducing the problem to a 
single monovariate polynomial of 16th degree or lower. While finding the roots 
of a polynomial of this degree is no longer an insurmountable task, reducing the 
underlying system of nonlinear equations to a monovariate polynomial requires 
intensive computer-algebra work that must be very carefully planned to avoid 
the introduction of spurious roots and, with this, an increase in the degree of 
that polynomial. For this reason, we limit this chapter to the study of the ge-
ometric IDP of decoupled six-axis manipulators. The IDP of the most general 
six-revolute serial manipulator is studied in Chapter 9. 
In studying the DDP of six-axis manipulators, we need not limit ourselves 
to a particular architecture. We thus study here the DDP of manipulators such 
as the one sketched in Fig. 4.7. This manipulator consists of seven rigid bodies, 
or links, coupled by six revolute joints. Correspondingly, we have seven frames, 
!Fi, T2, â¢ â¢ -5 ^7, the ith frame fixed to the {i â l)st link, !Fi being termed the 

4.3 The Geometric Model of Six-Revolute 
Manipulators 
139 
P(x,y,z) 
Figure 4.7: Serial six-axis manipulator 
base frame, because it is fixed to the base of the manipulator. Manipulators 
with joints of the prismatic type are simpler to study and can be treated using 
correspondingly simpler procedures. 
A line Ci is associated with the axis of the ith revolute joint, and a positive 
direction along this line is defined arbitrarily through a unit vector e^. For a 
prismatic pair, a line d can be also defined, as a line having the direction of 
the pair but whose location is undefined; the analyst, then, has the freedom 
to locate this axis conveniently. Thus, a rotation of the ith link with respect 
to the {i â l)st link or correspondingly, of J^i-^-i with respect to J^i, is totally 
defined by the geometry of the ith link, i.e., by the DH parameters a^, 6^, and a^, 
plus ei and its associated joint variable 9i. Then, the DH parameters and the 
joint variables define uniquely the posture of the manipulator. In particular, the 
relative position and orientation ofTi-^i with respect to Ti is given by matrix Q^ 
and vector a^, respectively, which were defined in Section 4.2 and are displayed 
below for quick reference: 
Qz = 
cos 6i 
âXiSinOi 
fii sin 6i 
sin 6i 
Xi cos 6i 
âfj,i cos 6i 
0 
jUi 
Xi 
Sii 
= 
ai cos 6i 
ai sin 6i 
bi 
(4.7) 
Thus, Q^ and a^ denote, respectively, the matrix rotating !Fi into an orien-
tation coincident with that of Ti-\.i and the vector joining the origin of J^i with 
that of J^i-fi, directed from the former to the latter. Moreover, Q^ and a^, as 
given in eq.(4.7), are represented in J^i coordinates. The equations leading to 
the geometric model under study are known as the displacement equations. It 
is noteworthy that the problem under study is equivalent to the input-output 
analysis problem of a seven-revolute linkage with one degree of freedom and one 
single kinematic loop (Duffy, 1980). Because of this equivalence with a closed 
kinematic chain, sometimes the displacement equations are also termed closure 
equations. These equations relate the orientation of the EE, as produced by 
the joint coordinates, with the prescribed orientation Q and the position vector 

140 
4. Geometry of Decoupled Serial Robots 
p of the operation point P of the EE. That is, the orientation Q of the EE is 
obtained as a result of the six individual rotations { Q^ jf about each revolute 
axis through an angle ^i, in a sequential order, from 1 to 6. If, for example, the 
foregoing relations are expressed in !Fi, then 
[Q6]i[Q5]i[Q4]i[Q3]i[Q2]i[Qi]i = [Q]i 
(4.8a) 
[ai]i + [a2]i + [a3]i + [a4]i + [a5]i + [a6]i = [p]i 
(4.8b) 
Notice that the above equations require that all vectors and matrices involved 
be expressed in the same coordinate frame. However, we derived in Section 4.2 
general expressions for Q^ and a^ in JT^, eqs.(4.1e) and (4.3b), respectively. It is 
hence convenient to represent the foregoing relations in each individual frame, 
which can be readily done by means of similarity transformations. Indeed, if we 
apply the transformations (4.5a & b) to each of [a^]i and [Qi]i, respectively, 
we obtain a^ or, correspondingly, Q^ in JF^. Therefore, eq.(4.8a) becomes 
[Ql]l[Q2]2[Q3]3[Q4]4[Q5]5[Q6]6 = [Q]l 
Now for compactness, let us represent [Q]i simply by Q and let us recall the 
abbreviated notation introduced in eq.(4.1d), where [Qi]i is denoted simply by 
Qi, thereby obtaining 
Q1Q2Q3Q4Q5Q6 = Q 
(4.9a) 
Likewise, eq.(4.8b) becomes 
ai + Qi(a2 + Q2a3 + Q2Q3a4 + Q2Q3Q4a6 + Q2Q3Q4Q5a6) = P 
(4.9b) 
in which both sides are given in base-frame coordinates. 
Equations 
(4.9a Sz b) above can be cast in a more compact form if homogeneous transforma-
tions, as defined in Section 2.5, are now introduced. Thus, if we let T^ = { T^ }i 
be the 4 x 4 matrix transforming JT^^-i-coordinates into .7^^-coordinates, the fore-
going equations can be written in 4 x 4 matrix form, namely, 
T1T2T3T4T5T6 = T 
(4.10) 
with T denoting the transformation of coordinates from the end-effector frame 
to the base frame. Thus, T contains the pose of the end-effector. 
In order to ease the discussion ahead, we introduce now a few definitions. A 
scalar, vector, or matrix expression is said to be multilinear in a set of vectors 
{ v^}f^ if each of those vectors appears only linearly in the same expression. This 
does not prevent products of components of those vectors from occurring, as long 
as each product contains only one component of the same vector. Alternatively, 
we can say that the expression of interest is multilinear in the aforementioned 
set of vectors if and only if the partial derivative of that expression with respect 
to vector v^ is independent of v^, for 2 = 1,..., AT. For example, every matrix 
Qi and every vector a^, defined in eqs.(4.1e) and (4.3b), respectively, is linear 
in vector x^, where x^ is defined as 
Xi = 
cos 6i 
sin 6i 
(4.11) 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
141 
Moreover, the product Q1Q2Q3Q4Q5Q6 appearing in eq.(4.9a) is hexalinear, or 
simply, multilinear, in vectors {x^ jf. Likewise, the sum appearing in eq.(4.9b) 
is multiUnear in the same set of vectors. By the same token, a scalar, vector, or 
matrix expression is said to be multiquadratic in the same set of vectors if those 
vectors appear at most quadratically in the said expression. That is, the expres-
sion of interest may contain products of the components of all those vectors, as 
long as those products contain, in turn, a maximum of two components of the 
same vector, including the same component squared. Qualifiers like multicubic, 
multiquartic, etc., bear similar meanings. 
Further, we partition matrix Q^ rowwise and columnwise, namely. 
Qi = 
nT = [pi 
<li Ui] 
(4.12) 
It is noteworthy that the third row of of Qi is independent of 0^, a fact that 
will be found useful in the forthcoming derivations. Furthermore, note that 
according to the DH notation, the unit vector e^ in the direction of the ith joint 
axis in Fig. 4.7 has JF^-components given by 
[Gi]i 
= 
= e 
(4.13) 
Henceforth, e is used to represent a 3-dimensional array with its last component 
equal to unity, its other components vanishinpc. Thus, we have 
nenceiorin, e is usea to represeni a o-aimensionai array wi 
equal to unity, its other components vanishing. Thus, we 
QiOi = Qf Ui = e 
(4.14a) 
or 
Ui = Q^e, 
Oi = Qje 
(4.14b) 
That is, if we regard e in the first of the foregoing relations as [e^_f.i ]i-\-i, and 
as [ei]i in the second relation, then, from the coordinate transformations of 
eqs.(4.4a & b), 
Ui = [ei^i]i, 
and 
Oi = [ei]i^i 
(4.15) 
4.4 
The Inverse Displacement Analysis of De-
coupled Manipulators 
Industrial manipulators are frequently supplied with a special architecture that 
allows a decoupling of the positioning problem from the orientation problem. In 
fact, a determinant design criterion in this regard has been that the manipulator 
lend itself to a closed-form inverse displacement solution. Although the class 
of manipulators with this feature is quite broad, we will focus on a special 
kind, the most frequently encountered in commercial manipulators, that we have 
termed decoupled. Decoupled manipulators were defined in Section 4.2 as those 

142 
4. Geometry of Decoupled Serial Robots 
Figure 4.8: A general 6R manipulator with decoupled architecture 
whose last three joints have intersecting axes. These joints, then, constitute 
the wrist of the manipulator, which is said to be spherical, because when the 
point of intersection of the three wrist axes, (7, is kept fixed, all the points of 
the wrist move on spheres centered at C. In terms of the DH parameters of 
the manipulator, in a decoupled manipulator a4 = a^ = b^ = 0, and thus, the 
origins of frames 5 and 6 are coincident. All other DH parameters can assume 
arbitrary values. A general decoupled manipulator is shown in Fig. 4.8, where 
the wrist is represented as a concatenation of three revolutes with intersecting 
axes. 
In the two subsections below, a procedure is derived for determining all 
the inverse displacement solutions of decoupled manipulators. In view of the 
decoupled architecture of these manipulators, we conduct their displacement 
analysis by decoupling the positioning problem from the orientation problem. 
4.4.1 
The Positioning Problem 
We solve first the positioning problem. Let C denote the intersection of axes 
4, 5, and 6, i.e., the center of the spherical wrist, and let c denote the position 
vector of this point. Apparently, the position of C is independent of joint angles 
04, ^5, and 9e] hence, only the first three joints are to be considered for this 
analysis. The arm structure depicted in Fig. 4.9 will then be analyzed. From 
that figure, 
ai + Qia2 + QiQ2a3 + QiQ2Q3a4 = c 
(4.16) 
where the two sides are expressed in JT^-coordinates. This equation can be 
readily rewritten in the form 
a2 + Q2a3 + Q2Q3a4 = Qf (c - ai) 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
143 
or if we recall eq.(4.3d), 
Q2(b2 + Qsbs + Q3Q4b4) = Qf C - bi 
However, since we are dealing with a decoupled manipulator, we have 
3.4 = Q4b4 =: 
= 646 
which has been rewritten as the product of constant 64 times the unit vector e 
defined in eq.(4.13). 
Thus, the product Q3Q4b4 reduces to 
Q3Q4b4 = b4Q3e = 64U3 
with Ui defined in eq.(4.14b). Hence, eq.(4.16) leads to 
Q2(b2 + Q3b3 + 64U3) = Qf C - bi 
(4.17) 
Further, an expression for c can be derived in terms of p, the position vector of 
the operation point of the EE, and Q, namely, 
c = p - QiQ2Q3Q4a5 - QiQ2Q3Q4Q5a6 
(4.18a) 
Now, since as = 65 = 0, we have that as = 0, eq.(4.18a) thus yielding 
c = p - QQl^ae = p - Qbe 
(4.18b) 
Moreover, the base coordinates of P and C, and hence, the J^i-components of 
their position vectors p and c, are defined as 
[p]i = 
so that eq.(4.18b) can be expanded in the form 
X 
y 
z 
, 
[ c ] i = 
xc 
yc 
_zc 
Xc 
yc 
zc 
X - (quae + qube/J^e + ^i366A6) 
y - (^21^6 + ^22^6/^6 + ^23&6A6) 
z - {q3i(i6 + ^32^6/^6 + qssbeh) 
(4.18c) 
where %â¢ is the (i,j) entry of [Q]i, and the positioning problem now becomes 
one of finding the first three joint angles necessary to position point C at a 
point of base coordinates xc, yc, stnd zc- We thus have three unknowns, but 
we also have three equations at our disposal, namely, the three scalar equations 
of eq.(4.17), and we should be able to solve the problem at hand. 
In solving the foregoing system of equations, we first note that (^) the left-
hand side of eq.(4.17) appears multiplied by Q2; and (ii) 62 does not appear 

144 
4. Geometry of Decoupled Serial Robots 
>Vc>^c) 
Figure 4.9: Three-axis, serial, positioning manipulator 
in the right-hand side. This implies that {%) if the Euclidean norms of the two 
sides of that equation are equated, the resulting equation will not contain ^2; 
and {ii) the third scalar equation of the same equation is independent of ^2? 
by virtue of the structure of the Q^ matrices displayed in eq.(4.1e). Thus, we 
have two equations free of 62, which allows us to calculate the two remaining 
unknowns 61 and 63. 
Let the Euclidean norm of the left-hand side of eq.(4.17) be denoted by /, 
that of its right-hand side by r. We then have 
i^ =al^hl+al 
+ hl-\-b\-\- 2b^Q3b3 + 264bju3 + 2A3&3&4 
r^ = ||c|p-f-||bi|p-2bfQfc 
from which it is apparent that P is linear in X3 and r^ is linear in xi, for x^ 
defined in eq.(4.11). Upon equating t^ with r^, then, an equation linear in xi 
and X3ânot bilinear in these vectorsâis readily derived, namely. 
Aci -f Bsi + Cc3 -f Ds^ -f JE; = 0 
whose coefficients do not contain any unknown, i.e., 
A = 2aixc 
B = 2aiyc 
C = 2a2a3 - 262^4/^2/^3 
(4.19a) 
(4.19b) 
(4.19c) 
(4.19d) 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
145 
D = 2a3b2fi2 + 2a2b4jji3 
(4.19e) 
E = al + al-{-bl + hl + bl-ai-xl-y%-{zc- 
bif 
-\-2b2b3X2 + 262&4A2A3 + 2b3b4X3 
(4.19f) 
Moreover, the third scalar equation of eq.(4.17) takes on the form 
Fci + Gsi -\-Hc3+Is3-\-J 
= 0 
(4.20a) 
whose coefficients, again, do not contain any unknown, as shown below: 
F = ycfii 
(4.20b) 
G = -xcfJ^i 
(4.20c) 
H = -b4fi2fi3 
(4.20d) 
/ = a3fi2 
(4.20e) 
J = b2+ 63A2 + b4A2A3 - {zc - bi)Xi 
(4.20f) 
Thus, we have derived two nonlinear equations in 61 and 63 that are linear 
in ci, si, C3, and 53. Each of these equations thus defines a contour in the 61-63 
plane, their intersections determining all real solutions to the problem at hand. 
Note that if Ci and Si are substituted for their equivalents in terms of 
tan{6i/2)^ for 2 = 1,3, then two biquadratic polynomial equations in tan(6i/2) 
and tan(^3/2) are derived. Thus, one can eliminate one of these variables from 
the foregoing equations, thereby reducing the two equations to a single quartic 
polynomial equation in the other variable. The quartic equation thus resulting 
is called the characteristic equation of the problem at hand. Alternatively, the 
two above equations, eqs.(4.19a) and (4.20a), can be solved for, say, ci and si 
in terms of the data and C3 and 53, namely, 
^ -G{Cc3 + Ds3 + E) + B{Hc3 + IS3 + J) 
,^ ^la) 
^^ 
Ai 
\ ' 
) 
^^ ^ F{Cc3 + Ds3 + E)- 
A{Hc3 + 7^3 + J) 
^^ ^ib) 
with Ai defined as 
Ai = AG-FB 
= -2ai/^i(4 + Vc) 
(4.21c) 
Note that in trajectory planning, to be studied in Chapter 6, Ai can be com-
puted off-line^ i.e., prior to setting the manipulator into operation, for it is a 
function solely of the manipulator parameters and the Cartesian coordinates 
of a point lying on the path to be tracked. Moreover, the above calculations 
are possible as long as Ai does not vanish. Now, Ai vanishes if and only if 
any of the factors ai, )Ui, and X'Q + 2/^ does. The first two conditions are 
architecture-dependent, whereas the third is position-dependent. The former 
occur frequently in industrial manipulators, although not both at the same 
time. If both parameters ai and /^i vanished, then the arm would be useless to 

146 
4. Geometry of Decoupled Serial Robots 
position arbitrarily a point in space. The third condition, i.e., the vanishing of 
x'^-i-y^, means that point C Hes on the Zi axis. Now, even if neither ai nor /xi 
vanishes, the manipulator can be postured in a configuration at which point C 
lies on the Zi axis. Such a configuration is termed the first singularity. Note, 
however, that with point C being located on the Zi axis, any motion of the first 
joint, with the two other joints locked, does not change the location of C. For 
the moment, it will be assumed that Ai does not vanish, the particular cases 
under which it does being studied presently. Next, both sides of eqs.(4.21a & b) 
are squared, the squares thus obtained are then added, and the sum is equated 
to 1, which leads to a quadratic equation in X3, namely, 
Kcl + Lsl + Mcsss + Nc3 + Ps3-\-Q = 0 
(4.22) 
whose coefficients, after simplification, are given below: 
K = 4a?ij2 + fijC^ 
(4.23a) 
L = 4all^ + fiJD^ 
(4.23b) 
M = 2{Aa\HI + ii\CD) 
(4.23c) 
N = 2{Aa\HJ + ii\CE) 
(4.23d) 
P = 2{4allJ + f^DE) 
(4.23e) 
Q = 4alJ^ + filE^ - 4aif4p^ 
(4.23f) 
with p^ defined as 
p^ = xl+ yl 
Now, two well-known trigonometric identities are introduced, namely, 
C3 = T - 3 ' ^3 = r ] ^ . where n = tan(-|) 
(4.24) 
1 -r 73 
1 -r T3 
z 
Henceforth, the foregoing identities will be referred to as the tan-half-angle 
identities. We will be resorting to them throughout the book. Upon substitution 
of the foregoing identities into eq.(4.22), a quartic equation in T3 is obtained, 
i.e., 
Rri + STI + TTI + [7r3 + y = 0 
(4.25) 
whose coefficients are all computable from the data. After some simplifications, 
these coefficients take on the forms 
R = 4a?(J - Hf +filiE- 
Cf - ip'alnj 
(4.26a) 
S = 4[4all{J-H)-\-^lD{E-C)] 
(4.26b) 
T = 2[4al(J^ -H^ 
+ 2/2) + iil{E'' - C^ + 2D'') 
-4p'alii\] 
(4.26c) 
U = 4[4all{H + J) + nlDiC + E)] 
(4.26d) 
V = 4aJiJ + Hf + fiiiE + Cf - 4p'a\\i\ 
(4.26e) 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
147 
Furthermore, let { (rs)^ }f be the four roots of eq.(4.25). Thus, up to four 
possible values of O3 can be obtained, namely, 
{es)i = 2arctan[(r3)i], i = 1,2,3,4 
(4.27) 
Once the four values of 63 are available, each of these is substituted into 
eqs.(4.21a & b), which thus produce four different values of 61. For each value 
of 01 and 63, then, one value of 62 can be computed from the first two scalar 
equations of eq.(4.17), which are displayed below: 
An cos 62 + A12 sin 62 = xc cos 61 + yc sin 61 â ai 
(4.28a) 
âA\2 COS02 + A\\ sin02 = âxcM sin^i + yc^i cos^i 
+ {zc - bi)fjii 
(4.28b) 
where 
All = ^2 + as cos 6s + fe4//3 sin 83 
(4.28c) 
A12 = -a3X2 sinOs + 63/12 + &4A2//3 cos^s + &4A*2A3 
(4.28d) 
Thus, if All and A12 do not vanish simultaneously, angle 62 is readily com-
puted in terms of 9i and 63 from eqs.(4.28a & b) as 
cos02 = -;â{Aii{xc cos6i -i- yc sinOi - ai) 
^ 2 
-Ai2[-xc>^i 
sin6>i + ycXi cos61 
+ {zc-hi)iii]} 
(4.29a) 
sin02 = -r-{^i2(:rccos0i + yc smOi - ai) 
^ 2 
+ Aii[-xc\i 
sin01 + t/cAi cos0i 
^{zc'hi)iii]} 
(4.29b) 
where A2 is defined as 
A2 = All + A2 
= al-\- a3(cos^ 03 + A2 sin^ 03) + hliil{sm^ 63 + \l cos^ 03) 
+ 2a2a3 cos 03 + 20264/^3 sin 03 
+ 2A2//2(&3 + &4A3)(b4jU3 COS 03 - as SmOs) 
+2^364/^2/^3 sin 03 cos 03 + (63 + \3hAflil 
(4.29c) 
the case in which A2 = 0, which leads to what is termed here the second 
singularity^ being discussed presently. 
Takano (1985) considered the solution of the positioning problem for all 
possible combinations of prismatic and revolute pairs in the regional structure 
of a manipulator, thereby finding that 

148 
4. Geometry of Decoupled Serial Robots 
1. In the case of arms containing either three revolutes, or two revolutes and 
one prismatic pair, with a general layout in all cases, a quartic equation 
in cos ^3 is obtained; 
2. in the case of one revolute and two prismatic pairs, the positioning problem 
was reduced to a single quadratic equation, the problem at hand thus 
admitting two solutions; 
3. finally, for three prismatic pairs, one single linear equation was derived, 
the problem thus admitting a unique solution. 
The Vanishing of Ai 
In the above derivations we have assumed that neither /xi nor ai vanishes. How-
ever, if either //i = 0 or ai = 0, then one can readily show that eq.(4.25) reduces 
to a quadratic equation, and hence, this case differs essentially from the gen-
eral one. Note that one of these conditions can occur, and the second occurs 
indeed frequently, but both together never occur, because their simultaneous 
occurrence would render the axes of the first two revolutes coincident. The ma-
nipulator would thus be short of one joint for the execution of three-dimensional 
tasks. We thus have two cases: 
1. //I = 0, ai 7Â«^ 0. In this case, 
A,B^O, 
F = G = 0 
Under these conditions, eq.(4.20a) and the tan-half-angle identities given 
in eq.(4.24) yield 
(J - H)ri + 2/r3 -h (J -h iJ) - 0 
which thus produces two values of TS , namely, 
-/i=V/2-j2+g2 
(^3)1,2 = 
jâjj 
(4.30a) 
Once two values of 63 have been determined according to the above equa-
tion, 9i can be found using eq.(4.19a) and the tan-half-angle identities, 
thereby deriving 
where 
(E' - A)r^ + 2Bn + {E' -{-A) = 0 
E' = Cca -f Ds^ -f E, n = tan /^y j 
whose roots are 
(n)i,2 = 
-^TZA 
(^-^^^^ 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
149 
Thus, two values of 6i are found for each of the two values of 63, which 
results in four positioning solutions. Values of O2 are obtained using 
eqs.(4.29a& b). 
2. ai = 0, jUi y^ 0. In this case, one has an architecture similar to that of the 
robot of Fig. 4.3. We have now 
A = B = 0, 
F.G^O 
Under the present conditions, eq.(4.19a) reduces to 
(E - C)r| 
+ 2DT3 + (JE; + C ) = 0 
which produces two values of T3, namely. 
(^3)1,2 = 
^ 3 - ^ 
(4.31a) 
With the two values of 63 obtained, 6\ can be found using eq.(4.20a) and 
the tan-half-angle identities to produce 
(J' - F)TI + 2Gn + ( / + F) = 0 
where 
y 
whose roots are 
(-^1)1,2 = 
j r i T p 
(4.31b) 
Once again, the solution results in a cascade of two quadratic equations, 
one for 63 and one for 61, which yields four positioning solutions. As 
above, 62 is then determined using eqs.(4.29a & b). Note that for the 
special case of the manipulator of Fig. 4.3, we have 
ai = &2 = 0, 
ai = as = 90Â°, 
a2 = 0Â° 
and hence, 
H = I = 0, 
E = al + al + bl + bl-[xl+yl 
+ {zc- 
61)'] , 
C = 2a2a3, 
D = 2a2&4, 
E = yc, 
G = -xc, 
J = ^3 
In this case, the foregoing solutions reduce to 
^ ^ 
-D Â± VC^ + D^-E^ 
. ^ 
xcÂ±Vxl+yl-bl 
(^)^'^ = 
E ^ C 
' 
(^)^'^ = 
&r^^^ 
A robot with the architecture studied here is the Puma, which is displayed 
in Fig. 4.10 in its four distinct postures for the same location of its wrist center. 
Notice that the orientation of the EE is kept constant in all four postures. 

150 
4. Geometry of Decoupled Serial Robots 
Figure 4.10: The four arm configurations for the positioning problem of the 
Puma robot: (a) and (b), elbow down; (a) and (c), shoulder fore; (c) and (d), 
elbow up; (b) and (d), shoulder aft 
The Vanishing of A2 
In some instances, A2, as defined in eq.(4.29c), may vanish at a certain pos-
ture, thereby preventing the calculation of O2 from eqs.(4.29a & b). This pos-
ture, termed the second singularity, occurs if both coefficients An and A12 
of eqs.(4.28a & b) vanish. Note that from their definitions, eqs.(4.28c & d), 
these coefficients are not only position- but also architecture-dependent. Thus, 
an arbitrary manipulator cannot take on this configuration unless its geomet-
ric dimensions allow it. This type of singularity will be termed architecture-
dependent, to distinguish it from others that are common to all robots, regard-
less of their particular architectures. 
We can now give a geometric interpretation of the singularity at hand: First, 
note that the right-hand side of eq.(4.17), from which eqs.(4.28a & b) were 
derived, is identical to Qf (c â ai), which means that this expression is nothing 
but the .?^2-representation of the position vector of C. That is, the components 
of vector Qf (câai) are the J^2-components of vector O2C. Therefore, the right-
hand sides of eqs.(4.28a &; b) are, respectively, the X2- and y2-components of 
vector O2C. Consequently, if ^ n = A12 = 0, then the two foregoing components 
vanish and, hence, point C lies on the Z2 axis. The first singularity thus occurs 
when point C lies on the axis of the first revolute, while the second occurs when 
the same point lies on the axis of the second revolute. 
Many industrial manipulators are designed with an orthogonal architecture. 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
151 
Figure 4.11: Architecture-dependent singularities of (a) the Cincinnati-Milacron 
and (b) the Puma robots 
which means that the angles between neighbor axes are multiples of 90Â°. More-
over, with the purpose of maximizing their workspace, orthogonal manipulators 
are designed with their second and third links of equal lengths, thereby ren-
dering them vulnerable to this type of singularity. An architecture common to 
many manipulators such as the Cincinnati-Milacron, ABB, Fanuc, and others, 
comprises a planar two-axis layout with equal link lengths, which is capable 
of turning about an axis orthogonal to these two axes. This layout allows for 
the architecture singularity under discussion, as shown in Fig. 4.11(a). The 
well-known Puma manipulator is similar to the aforementioned manipulators, 
except that it is supplied with what is called a shoulder offset 63, as illustrated 
in Fig. 4.3. This offset, however, does not prevent the Puma from attaining the 
same singularity as depicted in Fig. 4.11(b). Notice that in the presence of this 
singularity, angle 62 is undetermined, but 61 and 63 are determined in the case 
of the Puma robot. However, in the presence of the singularity of Fig. 4.11(a), 
neither 61 nor 62 are determined; only 63 of the arm structure is determined. 
Example 4.4.1 A manipulator with a common orthogonal architecture is dis-
played in Fig. 4-^2 in an arbitrary configuration. The arm architecture of this 
manipulator has the DH parameters shown below: 
ai=a3= 
0, 
61 = 62 = &3 = 0, 
ai = 90^ 
a2 = 0Â° 
Find its inverse kinematics solutions. 
Solution: A common feature of this architecture is that it comprises a2 = &4. 
In the present discussion, however, the latter feature need not be included, and 
hence, the result that follows applies even in its absence. In this case, coefficients 

152 
4. Geometry of Decoupled Serial Robots 
C(xc,yc,^c) 
Figure 4.12: An orthogonal decoupled manipulator 
C, D, and E take on the forms 
(7 = 0, D = 0, E = al + al-{xl-\-yl 
+ 4) 
Hence, 
C = H = 1 = J = o 
and so 
/ = 0 , 
F = yc, 
G^-xc 
The radical of eq.(4.31b) reduces to X'Q -{-yQ. Thus, 
h\ _ xc Â± yjx% + y% _ - 1 =b y i + 
{yc/xcY 
tan 
2 y 
-2/c 
yc/xc 
Now we recall the relation between tan(^i/2) and tan^i, namely, 
h\ _ - l Â± \ / l + tan2(9i 
tan (1)^ 
tan^i 
(4.32a) 
(4.32b) 
Upon comparison of eqs.(4.32a) and (4.32b), it is apparent that 
Oi =:arctan f â ) 
a result that can be derived geometrically for this simple arm architecture. 
Given that the arctan(-) function is double-valued, its two values differing in 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
153 
C{0, 
2a,-a) 
Figure 4.13: An orthogonal RRR manipulator 
180Â°, we obtain here, again, two values for 9i. On the other hand, 63 is calcu-
lated from eq.(4.31a) as 
(T3)I,2 = 
Â± VC^ - E'^ 
E-C 
thereby obtaining two values of 63, As a consequence, the inverse positioning 
problem of this arm architecture admits four solutions as well. These solutions 
give rise to two pairs of arm postures that are usually referred to as elbow-up 
and elbow-down. 
Example 4.4.2 Find all real inverse displacement solutions of the manipulator 
shown in Fig. 4-^3, when point C of its end-effector has the base coordinates 
C(0, 2a, -a). 
Solution: The Denavit-Hartenberg parameters of this manipulator are derived 
from Fig. 4.14, where the coordinate frames involved are indicated. In defining 
the coordinate frames of that figure, the Denavit-Hartenberg notation was fol-
lowed, with Z4 defined, arbitrarily, as parallel to Z3. From Fig. 4.14, then, we 
have 
ai = a2 = (23 = 62 = 63 = a, 
&i = 64 = 0, 
ai = 0:2 = 90Â°, 
a^ = 0Â° 
One inverse displacement solution can be readily inferred from the geometry 
of Fig. 4.14. For illustration purposes, and in order to find all other inverse 

154 
4. Geometry of Decoupled Serial Robots 
Figure 4.14: The coordinate frames of the orthogonal RRR manipulator 
kinematic solutions, we will use the procedure derived above. To this end, we 
first proceed to calculate the coefficients of the quartic polynomial equation, 
eq.(4.25), which are given, nevertheless, in terms of coefficients K, ..., Q of 
eqs.(4.23a-f). These coefficients are given, in turn, in terms of coefficients A, 
..., J of eqs.(4.19b-f) and (4.20b-f). We then proceed to calculate all the 
necessary coefficients in the proper order: 
^ = 0, 
J9 = 4a^ 
C = D = 
-E=2a^ 
F = 2a, 
G = H = 0, 
I = J = a 
Moreover, 
i(^ = 4a^ 
L = 8a^ 
M = Sa\ 
N 
=-Sd 
The set of coeflScients sought thus reduces to 
R = K-N 
+ Q = 4a'^ 
S = 2{P-M) 
= -Wa^ 
T = 2{Q + 2L-K)= 
Sa"^ 
U = 2{M-\-P) = 16a^ 
V = K + N + Q = -12a'^ 
which leads to a quartic equation, namely, 
^3 - "^-rl + 2r| -f 4r3 - 3 = 0 
P = 0, 
Q 
-Sa\ 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
155 
with four real roots: 
(T3)I = (r3)2 = 1, 
(r3)3 = - 1 , 
(73)4 = 3 
These roots yield the O3 values that follow: 
(^3)1 = {03)2 = 90^ 
(^3)3 = - 9 0 ^ 
(^3)4 = 143.13Â° 
The quartic polynomial thus admits one double root, which means that at the 
configurations resulting from this root, two solutions meet, thereby producing 
a singularity, an issue that is discussed in Subsection 5.4. Below, we calculate 
the remaining angles for each solution: Angle 61 is computed from relations 
(4.21a-c), where Ai = -Sa^. 
The first two roots, (^3)1 = (63)2 = 90Â°, yield C3 = 0 and S3 = 1. Hence, 
eqs.(4.21a & b) lead to 
B(I + J) 
4a2(a + a) 
F(D + E) 
2a(2a2 - 20^) 
^ 
^ ^ ^ - ^ ; â ^ 
-8a3 
- Q 
and hence, 
(^i)i = (^1)2 = 180Â° 
With 0\ known, 62 is computed from the first two of eqs.(4.17), namely, 
C2 = 0 , 
52 = 
- 1 
and hence, 
(^2)1 = (^2)2 = - 9 0 Â° 
The remaining roots are treated likewise, thereby obtaining 
(^1)3 = 90Â°, 
(^2)3 = 0, 
(^1)4 = 143.13Â°, 
(^2)4 = 0 
It is noteworthy that the architecture of this manipulator does not allow for 
the second singularity, associated with A2 = 0. 
Example 4.4.3 For the same manipulator of Example 4-4-2} find all real in-
verse kinematic solutions when point C of its end-effector has the base coordi-
nates C(0, a, 0); as displayed in Fig. 4-^^-
Solution: In this case, one obtains, successively, 
^ = 0, 
B = C = Â£) = E = 2a^ 
F = a, 
G=:0 
iJ = 0, 
I = J = a 
K = 4a^X =:M = N = 8a^ 
P = 16a^ 
Q = 4a^ 
R = 0, 
5 = 1 6 a ^ 
T = 32a^ 
[/= 48a^ 
V = 16a^ 

156 
4. Geometry of Decoupled Serial Robots 
Figure 4.15: Manipulator configuration for C(0, a, 0) 
Moreover, for this case, the quartic eq.(4.22) degenerates into a cubic equation, 
namely, 
ri + 2 T | + 3r3 + 1 = 0 
whose roots are readily found as 
(r3)i = -0.43016, 
(r3)2,3 = -0.78492 Â± il.30714 
where j is the imaginary unit, i.e., j = \f-i. 
That is, only one real solution 
is obtained, namely, (63)1 = â46.551Â°. However, shown in Fig. 4.15 is a quite 
symmetric posture of this manipulator at the given position of point C of its 
end-effector, which does not correspond to the real solution obtained above. 
In fact, the solution yielding the posture of Fig. 4.15 disappeared because of 
the use of the quartic polynomial equation in tan(^3/2). Note that if the two 
contours derived from eqs.(4.19a) and (4.20a) are plotted, as in Fig. 4.16, their 
intersections yield the two real roots, including the one leading to the posture 
of Fig. 4.15. 
The explanation of how the fourth root of the quartic equation disappeared is 
given below: Let us write the quartic polynomial in full, with a "small" leading 
coefficient e, namely. 
^4 + -^3 + 2r3 + 3r3 -h 1 = 0 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
157 
O3 (deg) ' 
-150 
-100 
-50 
0 
50 
100 
150 
Oi (deg) 
Figure 4.16: Contours producing the two real solutions for Example 4.4.3 
Upon dividing both sides of the foregoing equation by Tg, we obtain 
1
2 
3 
1
^ 
n 
n 
'^3 
^3 
whence, apparently, the original equation is satisfied as 6 -> 0 if and only if 
r3 -> Â±00, i.e, if 0^ = 180Â°. The missing root is, hence, 6>3 = 180Â°. The 
remaining angles are readily calculated as 
((9i)i = -105.9Â°, 
{62)1 = -149.35Â°, 
{61)4 = 180Â°, 
((92)4 = 180Â° 
4.4.2 
The Orientation Problem 
Now the orientation inverse displacement problem is addressed. This problem 
consists in determining the wrist angles that will produce a prescribed orien-
tation of the end-effector. This orientation, in turn, is given in terms of the 
rotation matrix Q taking the end-effector from its home attitude to its current 
one. Alternatively, the orientation can be given by the natural invariants of 
the rotation matrix, vector e and angle (f). Moreover, since 61, 62, and 63 are 
available, Qi, Q2, and Q3 become data for this problem. One now has the 
general layout of Fig. 4.17, where angles {0i }l are to be determined from the 
problem data, which are in this case the orientation of the end-effector and the 

158 
4. Geometry of Decoupled Serial Robots 
Figure 4.17: General architecture of a spherical wrist 
architecture of the wrist; the latter is defined by angles a4 and as, neither of 
which can be either 0 or TT. 
Now, since the orientation of the end-effector is given, we know the compo-
nents of vector eg in any coordinate frame. In particular, let 
[ee]^ 
(4.33) 
Moreover, the components of vector e^ in J^4 are nothing but the entries of the 
third column of matrix Q4, i.e.. 
[e5]4 = 
//4 sm 6/4 
â//4 cos 64 
A4 
Furthermore, vectors 65 and ee make an angle as, and hence, 
e^es = A5 or 
[ ee ]J[ e^ ]4 = A5 
Upon substitution of eqs.(4.33) and (4.34) into eq.(4.35), we obtain 
^/X4 sin 64 - r}fi4 cos 64 + CA4 = A5 
(4.34) 
(4.35) 
(4.36) 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
159 
which can be readily transformed, with the aid of the tan-half-angle identities, 
into a quadratic equation in T4 = tan(^4/2), namely, 
(A5 - r]fi4 - CA4)r| - 2^/i4r4 -f (A5 + r]fi4 - CA4) = 0 
(4.37) 
its two roots being given by 
As - CA4 - r?//4 
Note that the two foregoing roots are real as long as the radical is positive, 
the two roots merging into a single one when the radical vanishes. Thus, a 
negative radical means an attitude of the EE that is not feasible with the wrist. 
It is noteworthy that a three-revolute spherical wrist is kinematically equivalent 
to a spherical joint. However, the spherical wrist differs essentially from a 
spherical joint in that the latter has, kinematically, an unlimited workspaceâ 
a physical spherical joint, of course, has a limited workspace by virtue of its 
mechanical constructionâand can orient a rigid body arbitrarily. Therefore, 
the workspace W of the wrist is not unlimited, but rather defined by the set of 
values of ^, r^, and C that satisfy the two relations shown below: 
/(^, r), C) = {e + ri')ixl - (A5 - CA4)' > 0 
(4.39b) 
In view of condition (4.39a), however, relation (4.39b) simplifies to an inequality 
in C, alone, namely, 
F(C) = e - 2A4A5C - {fil - A^) < 0 
(4.40) 
As a consequence, 
1. >V is a region of the unit sphere S centered at the origin of the three-
dimensional space; 
2. W is bounded by the two parallels given by the roots of F(() = 0 on the 
sphere; 
3. the wrist attains its singular configurations along the two foregoing par-
allels. 
In order to gain more insight on the shape of the workspace >V, let us look 
at the boundary defined by F(C) = 0. Upon setting F{C) to zero, we obtain a 
quadratic equation in ^, whose two roots can be readily found to be 
Cl,2 = A4A5 Â± |//4/^5| 
(4.41) 
which thus defines two planes, iJi and iT2, parallel to the Â£,-r} plane of the three-
dimensional space, intersecting the C-axis at Ci and ^2, respectively. Thus, the 
workspace >V of the spherical wrist at hand is that region of the surface of 

160 
4. Geometry of Decoupled Serial Robots 
the unit sphere S contained between the two paralles defined by ili and 112. 
For example, a common wrist design involves an orthogonal architecture, i.e., 
a4 = Oib = 90Â°. For such wrists, 
Cl,2 = Â±1 
and hence, orthogonal wrists become singular when [e6]4 = [0, 0, Â±1]^, i.e., 
when the fourth and the sixth axes are aligned. Thus, the workspace of or-
thogonal spherical wrists is the whole surface of the unit sphere centered at the 
origin, the singularity curve thus degenerating into two points, namely, the two 
intersections of this sphere with the C-axis. If one views ( = 0 as the equatorial 
plane, then the two singularity points of the workspace are the poles. 
An alternative design is the so-called three-roll wrist of some Cincinnati-
Milacron robots, with a4 = a^ = 120Â°, thereby leading to A4 = A5 = -1/2 and 
fji^ = fj,^ = \/3/2. For this wrist, the two planes i7i and 772 are found below: 
First, we note that with the foregoing architecture, 
Cl,2 = 1, - 2 
and hence, the workspace of this wrist is the part of the surface of the unit 
sphere S that lies between the planes ITi and 772 parallel to the ^-r] plane, 
intersecting the ^-axis at Ci = 1 and (2 = â V^? respectively. Hence, if ( = 0 
is regarded as the equatorial plane, then the points of the sphere S that are 
outside of the workspace of this wrist are those lying at a latitude of less than 
â30Â°. The singularity points are thus the north pole and those lying on the 
parallel of latitude â30Â°. 
Once O4 is calculated from the two foregoing values of r4, if these are real, 
angle 0^ is obtained uniquely for each value of ^4, as explained below: First, 
eq.(4.9a) is rewritten in a form in which the data are collected in the right-hand 
side, which produces 
Q4Q5Q6 = R 
(4.42a) 
with R defined as 
R = QjQ|'QfQ 
(4.42b) 
Moreover, let the entries of R in the fourth coordinate frame be given as 
[R]4 = 
^11 
ri2 
ri3 
^21 
^22 
^23 
^31 
^32 
^33 
Expressions for ^5 and 6e can be readily derived by solving first for Q5 from 
eq. (4.42a), namely, 
Qs = QlRQ^ 
(4.43) 
Now, by virtue of the form of the Qi matrices, as appearing in eq.(4.1e), it is 
apparent that the third row of Q^ does not contain 6i. Hence, the third column 
of the matrix product of eq.(4.43) is independent of 6Q. Thus, two equations for 

4.4 The Inverse Displacement Analysis of Decoupled Manipulators 
161 
^5 are obtained by equating the first two components of the third columns of 
that equation, thereby obtaining 
fJ'^S^ = {fi6ri2 
+ A6ri3)C4 + (/I6^22 + A6r23)54 
-/^5C5 = -A4(//6^12 + A6ri3)54 + A4(jU6^22 + A6r23)C4 + //4(/^6^32 + A6r33) 
which thus yield a unique value of 9^ for every value of 64. Finally, with 64 and 
65 known, it is a simple matter to calculate OQ. This is done upon solving for 
Qe from eq.(4.42a), i.e., 
Qe = Qi^QjR 
and if the partitioning (4.12) of Q^- is now recalled, a useful vector equation is 
derived, namely, 
P6 = Ql^Qlri 
(4.44) 
where ri is the first column of R. Let w denote the product Q j r i , i.e., 
w = Q j r i = 
riiC4+r2iS4 
-X4{rnS4 - r2iC4) + fi4r3i 
fi4{rnS4 - r2iC4) + A4r3i 
Hence, 
Ql'Qiri = 
WiCs +W2SQ 
X^i-wiss 
+ W2C5) + wsfj,^ 
in which Wi denotes the ith component of w. Hence, CQ and SQ are determined 
from the first two scalar equations of eq.(4.44), namely, 
(a) 
(b) 
Figure 4.18: The two configurations of a three-axis spherical wrist 
SQ = -WIXQS^ 
+ W2X5C5 + 1^3/15 

162 
4. Geometry of Decoupled Serial Robots 
thereby deriving a unique value of 6Q for every pair of values (^4, ^5). In sum-
mary, then, two values of 64 have been determined, each value determining, 
in turn, one single corresponding set of 6^ and OQ values. Therefore, there are 
two sets of solutions for the orientation problem under study, which lead to 
two corresponding wrist postures. The two distinct postures of an orthogonal 
three-revolute spherical wrist for a given orientation of its EE are displayed in 
Fig. 4.18. 
When combined with the four postures of a decoupled manipulator leading to 
one and the same location of its wrist centerâpositioning problemâa maximum 
of eight possible combinations of joint angles for a single pose of the end-eflFector 
of a decoupled manipulator are found. 
4.5 
Exercises 
4.1 Shown in Fig. 10.3 is the kinematic chain of one of the six-dof legs of 
a flight simulator, whose architecture is defined by the HD parameters 
of Table 10.1. In the flight simulator, M is the moving platform, to 
which an aircraft cockpit is rigidly attached. The six-dof motion of M. 
is controlled by means of the six hydraulic cylinders identical to that 
indicated in Fig. 10.3 as a prismatic joint. Find all inverse displacement 
solutions of this manipulator, relating the pose of M with all the joint 
variables. 
4.2 Modify the solution procedure of Section 4.3 to obtain all the postures 
of a PRR manipulator that give the same EE pose, and show that this 
problem leads to a quartic polynomial equation. 
4.3 Repeat Exercise 4.2 as pertaining to a PRP manipulator. 
4.4 The manipulator appearing in Fig. 4.19 is of the orthogonal type, with 
a decoupled, spherical wrist, and a regional structure consisting of two 
parallel axes and one axis perpendicular to these two. Find all inverse 
kinematics solutions for arbitrary poses of the EE of this manipulator. 
4.5 Similar to the manipulator of Fig. 4.19, that of Fig. 4.20 is of the orthog-
onal, decoupled type, except that the latter has a prismatic pair. For an 
arbitrary pose of its EE, find all inverse displacement solutions of this 
manipulator. 
4.6 Derive expressions for the angle of rotation and the unit vector parallel to 
the axis of rotation of matrices Q^, as introduced in Section 4.2. 
4.7 An orthogonal spherical wrist has the architecture shown in Fig. 4.18, with 
the DH parameters 
a4 =90Â°, as =90Â° 
A frame J^^ is attached to its EE so that Z7 coincides with Ze. Find the 
(Cartesian) orientation that can be attained with two inverse displace-
ment solutions 61 and On, defining the two distinct postures, that lie the 

4.5 Exercises 
163 
Figure 4.19: A six-revolute robot holding a heavy tool 
farthest apart. Note that a distance between two manipulator postures 
can be defined as the radical of the quadratic equation yielding the two 
inverse kinematic solutions of the wrist, whenever the radical is positive. 
Those postures giving the same EE orientation and lying farthest from 
each other are thus at the other end of the spectrum from singularities, 
where the two postures merge into a single one. Hence, the postures lying 
farthest from each other are singularity-robust. 
4.8 Given an arbitrary three-revolute manipulator, as shown in Fig. 4.9, its 
singular postures are characterized by the existence of a line passing 
through its operation point about which the moments of its three axes 
vanishâsee Exercise 3.3. Note that this condition can be readily applied 
to manipulators with a simple architecture, whereby two successive axes 
intersect at right angles and two others are parallel. However, more com-
plex architectures, like that of the manipulator of Fig. 4.13, are more elu-
sive in this regard. Find the line passing through the operation point and 
intersecting the three axes of the manipulator of Fig. 4.13 at a singularity. 
Hint: A singular posture of this manipulator was found in Example 4-4-^-
4.9 A robot of the Puma type has the architecture displayed in Fig. 4.3, with 
the numerical values a2 = 0.432 m, as = 0.020 m, 63 = 0.149 m, 64 = 
0.432 m. Find its maximum reach R as well as the link length a of the 
manipulator of Fig. 4.15 with the same reach R. 
4.10 For the Fanuc Arc Mate 120iB robot displayed in Fig. 4.21, with the 

164 
4. Geometry of Decoupled Serial Robots 
Figure 4.20: ABB-IRB 1000 robotic manipulator 
dimensions included therein, 
(a) Find its Denavit-Hartenberg parameters, using the Zi axes suggested 
in Fig. 4.21(b). 
(b) Apparently, the robot under study is of the decoupled type. Find 
all its inverse-displacement solutions for an arbitrary pose of its end-
effector, assuming that the operation point is located at a point of 
J^7 coordinates [0.0, 100.0, 100.0]^ mm. 

4.5 Exercises 
165 
-226 
I-185H 
â¢ 3 6 5 -
^120 
Figure 4.21: Geometric information taken from the data sheet of an industrial 
robot: (a) the top view; (b) an isometric view; (c) front view; and (d) side view 

Chapter 5 
Kinetostatics of Serial 
Robots 
5.1 
Introduction 
Kinetostatics is understood here as the study of the interplay between the fea-
sible twists of and the constraint wrenches acting on the various rigid bodies of 
a mechanical system, when the system moves under static, conservative condi-
tions. The feasible twists of the various rigid bodies, or links, are those allowed 
by the constraints imposed by the robot joints. The constraint wrenches are, in 
turn, the reaction forces and moments exerted on a link by the links to which 
that link is coupled by means of joints. The subject of this chapter is the kine-
tostatics of serial robots, with focus on six-axis manipulators. By virtue of the 
duality between the kinematic and the static relations in the mechanics of rigid 
bodies, as outlined in Section 3.7, the derivation of the kinematic relations is 
discussed in detail, the static relations following from the former. 
We derive first the relation between the twist of the robot EE and the set 
of joint rates, which is given by a linear transformation induced by the robot 
Jacobian matrix. Once the foregoing relation is established for a general six-
joint robot, the relation between the static wrench exerted by the environment 
on the EE and the balancing joint torques is derived by duality. Special robotic 
architectures are given due attention. Decoupled and planar architectures are 
treated as special cases of six-joint robots. The fundamental problem of sin-
gularities arising from a singular robot Jacobian in decoupled manipulators is 
given due attention as well. Two types of singularities are discussed here for the 
regional structure of decoupled robots. As a follow-up to the singularity analy-
sis of this structure, its three-dimensional workspace is derived. An algorithm 
is proposed for the display of this workspace as pertaining to general regional 
structures whose inverse displacement analysis leads to a quartic polynomial. 

168 
5. Kinetostatics of Serial Robots 
Figure 5.1: General n-axis manipulator 
The chapter closes with a section on kinetostatic performance indices. The 
purpose of these indices is twofold: They are needed in robot design to help the 
designer best dimension the links of the robot in the early stages of the design 
process, prior to the elastostatic and the elastodynamic design stages. These 
indices are also needed in the control of a given robot to ensure an acceptable 
kinetostatic performance under feedback control. One third, pragmatic appli-
cation of these indices is the comparison of various candidate robots when a 
robotic facility is being planned. 
Elastostatic design pertains to the structural design of a robot to ensure that 
the links and the joint mechanical transmissions will be able to withstand the 
static loads that arise when the robot is in operation. This aspect of design 
is usually conducted under the assumption that all structural elements operate 
within the linearly elastic range, and is valid at a specific robot posture. Elas-
todynamic design considers the inertial load of the structural elements while 
accounting for link flexibility, which gives rise to mechanical vibration. The 
main concern here is avoiding resonance under linear dynamical conditions or 
limit cycles under nonlinear conditions. Both elastostatics and elastodynamics 
lie beyond the scope of the book, and hence, will not be considered here. 
5.2 
Velocity Analysis of Serial Manipulators 
The relationships between the prescribed twist of the EE, also referred to as 
the Cartesian velocity of the manipulator, and the corresponding joint-rates 
are derived in this section. First, a serial n-axis manipulator containing only 
revolute pairs is considered. Then, relations associated with prismatic pairs are 
introduced, and finally, the joint rates of six-axis manipulators are calculated in 
terms of the EE twist. Particular attention is given to decoupled manipulators, 
for which simplified velocity relations are derived. 

5.2 Velocity Analysis of Serial Manipulators 
169 
We consider here the manipulator of Fig. 5.1, in which a joint coordinate 6i, 
a joint rate Oi, and a unit vector e^ are associated with each revolute axis. The 
Xi, Yi, Zi coordinate frame, attached to the {i â l)st Hnk, is not shown, but its 
origin Oi is indicated. If the angular-velocity vector of the ith link is denoted 
by a?^, then we have, from Fig. 5.1, 
a?o = 0 
a?i = 6iei 
U)2 = ^lei +^2^2 
(5.1) 
^ n = ^ l e i + 02^2 H 
h On^n 
and if the angular velocity of the EE is denoted by a;, then 
a; = CJn = ^l^l + ^262 H 
h On^n = ^ ^ ^i^^ 
Likewise, from Fig. 5.1, one readily derives 
p = ai + a2 + â¢ â¢ â¢ + a^ 
(5.2) 
where p denotes the position vector of point P of the EE. Moreover, notice that 
all vectors of the above equation must be expressed in the same frame; otherwise, 
the addition would not be possibleâvector a^ was defined as expressed in the 
ith frame in eq.(4.3c). Upon differentiating both sides of eq.(5.2), we have 
p = ai + a2 H 
h an 
(5.3) 
Since vector a^ is fixed to the ith link, 
ki={jJiXSLi, 
i = l,2, ...,n 
(5.4) 
Furthermore, substitution of eqs.(5.1) and (5.4) into eq.(5.3) yields 
p = ^lei X ai + (^lei + ^262) x a2 + 
+ (^iei + ^262 H 
h On^n) X Hn 
which can be readily rearranged as 
p = OiGi X (ai + a2 H 
h a^) + ^262 x (a2 + as H 
f- a^) 
+ â¢ â¢ â¢ + "n^n ^ ^n 
Now vector r^ is defined as that joining Oi with P, directed from the former 
to the latter, as depicted in Fig. 5.1, i.e., 
r^ = a^ + a^+i H 
h an 
(5.6) 

170 
5. Kinetostatics of Serial Robots 
and hence, p can be rewritten as 
n 
1 
Further, let A and B denote the 3 x n matrices defined as 
A = [ ei 
e2 
â¢ â¢ â¢ en] 
B = [ e i x r i 
e2Xr2 
â¢â¢â¢ 
e ^ x r n ] 
the n-dimensional joint-rate vector 0 being defined, in turn, as 
6 = [6i 
02 ' ' â¢ On] 
Thus, u) and p can be expressed in a more compact form as 
cj = A0, 
p = B0 
the twist of the EE being defined, in turn, as 
P 
The EE twist is thus Hnearly related to the joint-rate vector 0, i.e., 
J0=:t 
(5.7a) 
(5.7b) 
(5.8) 
(5.9) 
where J is the Jacobian matrix, or Jacobian, for brevity, of the manipulator 
under study, first introduced by Whitney (1972). The Jacobian is defined as 
the 6 X n matrix shown below: 
J = 
or 
J = 
^n X r*! 
(5.10a) 
(5.10b) 
ei 
62 
ei X ri 
â¬2 X r2 
Apparently, an alternative definition of the foregoing Jacobian matrix can be 
given as 
J = at 
dd 
Moreover, if j ^ denotes the ith column of J, one has 
It is noteworthy that if the axis of the ^th revolute is denoted by 7^^, then 
j ^ is nothing but the Pliicker array of that line, with the moment of TZi being 
taken with respect to the operation point P of the EE. 

182 
5. Kinetostatics of Serial Robots 
^3 = ^2 
^ 
e g x r g 
Figure 5.2: Shoulder singularity of the Puma robot 
geometric representation of the nullspace of ^\^. The singularity displayed 
in the foregoing figure, termed here the elbow singularity, pertains also to a 
manipulator with the architecture of Fig. 4.3. Notice that motions along C 
in the posture displayed in Fig. 5.3 are possible, but only in one direction, 
from C to O2. 
With regard to the wrist singularities, these were already studied when solv-
ing the orientation problem for the inverse displacement analysis of decoupled 
manipulators. Here, we study the same in light of the sub-Jacobian J12 of 
eq.(5.20b). This sub-Jacobian obviously vanishes when the wrist is so config-
ured that its three revolute axes are coplanar, which thus leads to 
64 X 65 â¢ ee = 0 
Note that when studying the orientation problem of decoupled manipulators, 
we found that orthogonal wrists are singular when the sixth and fourth axes 
are aligned, in full agreement with the foregoing condition. Indeed, if these two 
axes are aligned, then 64 = âeg, and the above equation holds. 
5.4.1 
Manipulator Workspace 
The workspace of spherical wrists for orientation tasks was discussed in Subsec-
tion 4.4.2. Here we focus on the workspaces of three-axis positioning manipu-
lators in light of their singularities. 

5.4 Singularity Analysis of Decoupled Manipulators 
183 
H ^ 
Figure 5.3: Elbow singularity of the Puma robot 
Zi t 
t 
r 
; 1 
âH^ 
^~R-^ i 
^ 
z 
Figure 5.4: Workspace of a Puma manipulator (a) top view; (b) cross-section; 
and (c) perspective 

184 
5. Kinetostatics of Serial Robots 
In order to gain insight into the problem, we study first the workspace of 
manipulators with the architecture of Fig. 4.3. Figures 5.2 and 5.3 show such 
a manipulator with point C at the limit of its positioning capabilities in one 
direction, i.e., at the boundary of its workspace. Moreover, with regard to the 
posture of Fig. 5.2, it is apparent that the first singularity is preserved if (i) point 
C moves on a line parallel to the first axis and intersecting the second axis; and 
(it) with the second and third joints locked, the first joint goes through a full 
turn. Under the second motion, the line of the first motion sweeps a circular 
cylinder whose axis is the first manipulator axis and with radius equal to 63, 
the shoulder offset. This cylinder constitutes a part of the workspace boundary, 
the other part consisting of a spherical surface. Indeed, the second singularity 
is preserved if (i) with point C in the plane of the second and third axes, the 
second joint makes a full turn, thereby tracing a circle with center on Â£2? a 
distance 63 from the first axis, and radius r = a2 + yja^ + h\\ and {%%) with 
point C still in the plane of the second and third joints, the first joint makes 
a full turn. Under the second motion, the circle generated by the first motion 
describes a sphere of radius R â y/h^ + r^ because any point of that circle lies a 
distance R from the intersection of the first two axes. This point thus becomes 
the center of the sphere, which is the second part of the workspace, as shown in 
Fig. 5.4. 
The determination of the workspace boundaries of more general manipula-
tors requires, obviously, more general approaches, like that proposed by Cec-
carelli (1996). By means of an alternative approach, Ranjbaran et al. (1992) 
found the workspace boundary with the aid of the general characteristic equa-
tion of a three-revolute manipulator. This equation is a quartic polynomial, as 
displayed in eq.(4.25). From the discussion of Subsection 4.4.1, it is apparent 
that at singularities, two distinct roots of the IDP merge into a single one. This 
happens at points where the plot of the characteristic polynomial of eq.(4.25) is 
tangent to the r^ axis, which occurs in turn at points where the derivative of this 
polynomial with respect to r3 vanishes. The condition for 6^ to correspond to a 
point C on the boundary of the workspace is, then, that both the characteristic 
polynomial and its derivative with respect to r^ vanish concurrently. These two 
polynomials are displayed below: 
P(T3) = R4 + STI + TTI + C/T3 + y = 0 
(5.37a) 
P'(T3) = ARri + 35r| + 2TT3 + [/ = 0 
(5.37b) 
with coefficients i?, 5, T, [/, and V defined in eqs.(4.26a-e). From these equa-
tions and eqs.(4.19d-f) and (4.20d-f), it is apparent that the foregoing coef-
ficients are solely functions of the manipulator architecture and the Cartesian 
coordinates of point C. Moreover, from the same equations, it is apparent that 
the above coefficients are all quadratic in p^ = x'^+y^ 
and quartic in zc- Thus, 
since the Cartesian coordinates xc and yc do not appear in the foregoing coef-
ficients explicitly, the workspace is symmetric about the Zi axis, a result to be 
expected by virtue of the independence of singularities from angle 61. Hence, 
the workspace boundary is given by a function f(p'^^zc)=0 
that can be derived 

5.4 Singularity Analysis of Decoupled Manipulators 
185 
by eliminating TS from eqs.(5.37a & b). This can be readily done by resorting 
to any elimination procedure, the simplest one being dialytic elimination, as 
discussed below. 
In order to eliminate rs from the above two equations, we proceed in two 
steps: In the first step, six additional polynomial equations are derived from 
eqs.(5.37a & b) by multiplying the two sides of each of these equations by rs, 
T3 , and rf, thereby obtaining a total of eight polynomial equations in rs, namely, 
RrJ + Sri + Trl + Ur^ + Vrl = 0 
4RTI + SSrl + 2Tr^ + UrI = 0 
Rrl + Sri + Trl + UrI + Vrj = 0 
ARrl + ZSrI + 2Tr| + Url = 0 
Rrl + Srt + Trl + Url + Fra = 0 
4jRr| -f 35r| + 2 r r | + f/rg = 0 
Rrl + 5 T | + T r | + [/rg + V = 0 
4i?r| + 35r| + 2Tr3 + t/ = 0 
In the second elimination step we write the above eight equations in linear 
homogeneous form, namely, 
M r s = 0 
(5.38a) 
with the ^x^ 
matrix M and the 8-dimensional vector T3 defined as 
M = 
R 
0 
0 
0 
0 
0 
0 
S 
AR 
R 
0 
0 
0 
0 
T 
ZS 
s 
AR 
R 
0 
0 
U 
IT 
T 
35 
S 
AR 
R 
V 
u 
u 
2T 
T 
35 
S 
0 
0 
V 
u 
u 
2T 
T 
0 
0 
0 
0 
V 
U 
U 
0 
0 
0 
0 
0 
0 
V 
0 
0 
0 
0 
4R 
SS 
2T 
Ui 
Ts 
'3 
^3 
^2 
1 
(5.38b) 
It is now apparent that any feasible solution of eq.(5.38a) must be nontrivial, 
and hence, M must be singular. The desired boundary equation is then derived 
from the singularity condition on M, i.e., 
/ ( / , ^ c ) - d e t ( M ) = 0 
(5.39) 
As a matter of fact, function /(p^, zc) of eq.(5.39), known as the (polynomial) 
resolvent of eqs.(5.37a & b), can be computed using computer algebra, upon 
invoking the procedure to obtain the discriminant of eq.(5.37a).^ 
^Although a quartic polynomial has, properly speaking, four discriminants (Yang, Hou and 
Zeng, 1996), which are defined as the central minors of matrix M of eq.(5.39) when P{TZ) 
is written in monic formâwith leading coefficient equal to unityâthe resolvent is sometimes 
referred to as the discriminant in question. 

186 
5. Kinetostatics of Serial Robots 
Regions 
Number of Solutions 
Two Solutions 
Four Solutions 
Figure 5.5: The workspace of the manipulator of Figs. 4.13-4.15 
We used the foregoing procedure, with the help of computer algebra, to 
obtain a rendering of the workspace boundary of the manipulator of Figs. 4.13-
4.15, the workspace thus obtained being displayed in Fig. 5.5. For the record, 
the resolvent of this manipulator, given in eq.(5.39), turned out to be a 16th-
degree bivariate polynomial in p and zc, involving only even powers. That is, 
the resolvent in question turns out to be a bivariate octic polynomial in p^ and 
ZQ. If we let a = p^ and C = z^, then 
/(c^, 0 = C^ + (-2 + (7)C + (7(7^ - 32 a + 27)C^ + (Tcr^ - 54(j^ + 97a - 42)C^ 
-f(35cr^ - 400 a^ + 1210(7^ - 976 a + 283)C^ + (7cr^ - 110 a^ + 510 a^ 
-684(j^ + 123(7 - 70)C^ + (7a^ - 144a^ + 965 a^ - 2208a^ + 705 a^ 
-272(7 + 83)C^ + 8 ((7^ - 4a - l)(a^ - 22a^ + 154a^ - 328a^ 
-155a + 14)C + {a^ - 24a^ + 190a^ - 552a + 17)(a^ - 4a - 1)^ = 0 
5.5 
Acceleration Analysis of Serial Manipula-
tors 
The subject of this section is the computation of vector G of second joint-variable 
derivatives, also called the joint accelerations. This vector is computed from 
Cartesian position, velocity, and acceleration data. To this end, both sides of 
eq.(5.9) are differentiated with respect to time, thus obtaining 
and hence, 
je = 
i-jo 
e = 
j-\t-36) 
(5.40) 
(5.41) 

5.5 Acceleration Analysis of Serial Manipulators 
187 
From eq.(5.40), it is apparent that the joint-acceleration vector is computed 
in exactly the same way as the joint-rate vector. In fact, the LU decomposition 
of J is the same in this case and hence, need not be recomputed. All that is 
needed is the solution of a lower- and an upper-triangular system, namely, 
Lz = i-Je, 
W = z 
The two foregoing systems are solved first for z and then for G by forward and 
backward substitution, respectively. The first of the foregoing systems is solved 
with M^ multiplications and A'^ additions; the second with Ml^' multiplications 
and A'Jj^ additions. These figures appear in eqs.(5.17b & c). Thus, the total 
numbers of multiplications Mt and additions At that the forward and backward 
solutions of the aforementioned systems require are 
Mt = n^, 
At = n{n - 1) 
(5.42) 
In eq.(5.40), the right-hand side comprises two terms, the first being the specified 
time-rate of change of the twist of the EE, or twist-rate, for brevity, which is 
readily available. The second term is not available and must be computed. 
This term involves the product of the time-derivative of J times the previously 
computed joint-rate vector. Hence, in order to evaluate the right-hand side of 
that equation, all that is further required is J. Prom eq.(5.10a), one has 
3 = 
where, from eqs.(5.7a & b), 
A = [ei 62 â¢â¢â¢ en] 
B = [ui 
U2 â¢â¢â¢ lin] 
and u^ denotes e^ x r^, for z = 1,2,...,n. Moreover, 
ei = cjo X ei = 0 
e^ = cji^i X ei = cvi X ei, 
i = 2,3,..., n 
and 
Ui = ei X Ti -{- ei X Ti, i = l,2,...,n 
(5.43a) 
(5.43b) 
(5.44a) 
(5.44b) 
(5.44c) 
Next, an expression for f^ is derived by time-diflFerentiating both sides of eq.(5.6), 
which produces 
ri = ki-jr SLi^i H 
h an, 
i = 1,2,... n 
Recalling eq.(5.4), the above equation reduces to 
f^ = ti;^ X a^ + Ui-^i X a^+i H 
h Cc?n x an 
(5.45) 

188 
5. Kinetostatics of Serial Robots 
Substitution of eqs.(5.44) and (5.45) into eqs.(5.43a & b) leads to 
A = [0 
wi X 62 
â¢â¢â¢ 
a;n-ixen] 
B = [ e i x r i 
a?i2 x r 2 + e 2 X f2 
â¢â¢â¢ 
a;n-i,n x r^ + e^ x r^] 
with f fc and (*Jk,k-\-i defined as 
n 
rk = ^i*^iX 
SLi, fc = l , . . . , n 
(5.46a) 
k 
0Jk,k-\-i =^A; X efc+i, fc = l , . . . , n - l 
(5.46b) 
The foregoing expressions are invariant and hence, vahd in any coordinate 
frame. However, these expressions have to be incorporated into matrix Jf; then, 
the latter is to be multipHed by vector 0, as indicated in eq.(5.40). Thus, 
eventually all columns of both A and B will have to be represented in the same 
coordinate frame. Hence, coordinate transformations will have to be introduced 
in the foregoing matrix columns in order to have all of these represented in the 
same coordinate frame, say, the first one. We then have the expansion below: 
36 = 61 
0 
^ 1 . 
+ /92 
e2 
. ^ 2 + â¢ '+0n 
e, 
u, 
(5.47) 
The right-hand side of eq.(5.47) is computed recursively as described below in 
five steps, the number of operations required being included at the end of each 
step. 
1. Compute {[ci;i]i}5': 
[cji]i ^ 
(9i[ei]i 
For i = 1 to n â 1 do 
enddo 
S{n - 1) M Sz 5{n - 1) A 
2. Compute 
{[ei]i}^: 
[ei]i <- [0]i 
For i = 2 to n do 
[ei]i ^ [iJi X ei]i 
enddo 
OM kOA 
3. Compute {[fi]i}^ 
[rn]n 
^ 
[ ^ n X SLn]n 
For i = n â 1 to 1 do 
enddo 
[ri]i 
i-[cvi 
X SLi]i + 
Qi[ri^i]i^i 
( 1 4 n - 8 ) M & ( l O n - 7 ) ^ 

5.5 Acceleration Analysis of Serial Manipulators 
189 
4. Compute { [ui]i }i using the expression appearing in eq.(5.44c): 
[lii ]i "<â [ei X fi ]i 
For i = 2 to n do 
[ni]i 
i-[ei 
X Ti + ei X ri]i 
enddo 
4(n - 1) M k S{n - 1) A 
5. Compute J^: 
Let V = J^, which is a 6-dimensional vector. A coordinate transformation 
of its two 3-dimensional vector components will be implemented using the 
6 x 6 matrices U^, which are defined as 
U,= 
Qi 
O 
O 
Qi 
where O stands for the 3x3 zero matrix. Thus, the foregoing 6x6 matrices 
are block-diagonal, their diagonal blocks being simply the matrices Q^ 
introduced in Section 4.2. One then has the algorithm below: 
^n 
Ur, 
For i = n â 1 to 1 do 
[y]i 
^ 
6 
enddo 
+ U 4 V ] H I 
2 1 ( n - l ) + 4 M & 
lS{n-l)A 
thereby completing the computation of 36. 
The figures given above for the floating-point operations involved were ob-
tained based on a few facts, namely, 
1. It is recalled that [e^j^ = [0, 0, 1]^. Moreover, if we let [w]^ = [wx^ Wy, Wz]'^ 
be an arbitrary 3-dimensional vector, then 
[e^ xw]i = 
-Wy 
0 
this product thus requiring zero multiplications and zero additions. 
2. [ei]i, computed as in eq.(5.44b), takes on the form [cOy, â^x-, 0]^, where 
Ux and u)y are the Xi and Yi components of cj^ Moreover, let [r^J^ = 
[a:, 2/, zY. 
Then 
r 
-Z(JOX 
[e^ X ri]i = 
-zojy 
[ xux + yojy J 
and this product is computed with four multiplications and one addition. 

190 
5. Kinetostatics of Serial Robots 
3. As found in Section 5.3, any coordinate transformation from Ti to J^^+l, 
or vice versa, of any 3-dimensional vector is computed with eight multi-
phcations and four additions. 
Thus, the total numbers of multipHcations and additions required to compute 
JO in frame J^i, denoted by Mj and Aj, respectively, are as shown below: 
Mj = 47n - 37, 
Aj = 31n - 28 
Since the right-hand side of eq.(5.40) involves the algebraic sum of two 6-
dimensional vectors, then, the total numbers of multiplications and additions 
needed to compute the aforementioned right-hand side, denoted by Mr and A^, 
are 
Mr = 47n - 37, 
Ar = Sin - 22 
These figures yield 245 multiplications and 164 additions for a six-revolute ma-
nipulator of arbitrary architecture. Finally, if the latter figures are added to 
those of eq.(5.42), one obtains the numbers of multiplications and additions re-
quired for an acceleration resolution of a six-revolute manipulator of arbitrary 
architecture as 
Ma = 281, 
Aa = 194 
Furthermore, for six-axis, decoupled manipulators, the operation counts of 
steps 1 and 2 above do not change. However, step 3 is reduced by 42 multipli-
cations and 30 additions, whereas step 4 by 12 multiplications and 9 additions. 
Moreover, step 5 is reduced by 63 multiplications and 39 additions. With re-
gard to the solution of eq.(5.40) for 0, an additional reduction of floating-point 
operations, or flops, is obtained, for now we need only 18 multiplications and 12 
additions to solve two systems of three equations with three unknowns, thereby 
saving 18 multiplications and 18 additions. Thus, the corresponding figures for 
such a manipulator, M^ and ^'^, respectively, are 
M^ = 146, 
^ ; = 98 
5.6 
Static Analysis of Serial Manipulators 
In this section, the static analysis of a serial n-axis manipulator is undertaken, 
six-axis decoupled manipulators being treated as special cases. Let r^ be either 
the torque acting at the ith revolute or the force acting at the ith prismatic 
pair. Moreover, let r be the n-dimensional vector of joint forces and torques, 
whose 2th component is r^, whereas w = [n^, f^]^ denotes the wrench exerted 
by the environment on the EE, with n denoting the resultant moment and f 
the resultant force applied at point P of the end-effector of the manipulator of 
Fig. 5.1. Then, the power exerted on the manipulator by all forces and moments 
acting on the EE is 

5.6 Static Analysis of Serial Manipulators 
191 
whereas the power IIj exerted on the manipulator by all joint motors is 
Uj = r'^e 
(5.48) 
Under static, conservative conditions, there is neither power dissipation nor 
change in the kinetic energy of the manipulator, and hence, the two foregoing 
powers are equal, which is just a restatement of the First Law of Thermody-
namics or, equivalently, a form of the Principle of Virtual Work, i.e., 
w^t =: r'^e 
(5.49a) 
Upon substitution of eq.(5.9) into eq.(5.49a), we obtain 
w^J^ = r'^e 
(5.49b) 
which is a relation valid for arbitrary 0. Under these conditions, if J is not 
singular, eq.(5.49b) leads to 
J^w = T 
(5.50) 
This equation relates the wrench acting on the EE with the joint forces and 
torques exerted by the actuators. Therefore, this equation finds applications 
in the sensing of the wrench w acting on the EE by means of torque sensors 
located at the re volute axes. These sensors measure the motor-supplied torques 
via the current flowing through the motor armatures, the sensor readouts being 
the joint torquesâor forces, in the case of prismatic jointsâ{ Tk }y, grouped in 
vector r. 
For a six-axis manipulator, in the absence of singularities, the foregoing 
equation can be readily solved for w in the form 
w = J - ^ r 
where J~^ stands for the inverse of J^. Thus, using the figures recorded in 
eq.(5.16b), w can be computed from eq.(5.50) with 127 multiplications and 100 
additions for a manipulator of arbitrary architecture. However, if the manip-
ulator is of the decoupled type, the Jacobian takes on the form appearing in 
eq.(5.19), and hence, the foregoing computation can be performed in two steps, 
namely. 
jT 
Tin 
where n-u; is the resultant moment acting on the end-effector when f is applied 
at the center of the wrist, while r has been partitioned as 
Ta 
with Ta and r^ defined as the wrist and the arm torques, respectively. These 
two vectors are given, in turn, as 
Til 
\TA 
Ta = 
I T2 
, 
T^y = 
Ts 
T3 
re 

192 
5. Kinetostatics of Serial Robots 
Hence, the foregoing calculations, as pertaining to a six-axis, decoupled manip-
ulator, are performed with 55 multiplications and 37 additions, which follows 
from a result that was derived in Section 5.2 and is summarized in eq.(5.23). 
In solving for the wrench acting on the EE from the above relations, the 
wrist equilibrium equation is first solved for n-iy, thus obtaining 
liiju â J]^2 '^w 
(5.51) 
where J^^ stands for the inverse of Jf2, and is available in eq.(5.29). Therefore, 
1 
n^ = -r- [ (es x ee) 
(ee x 64) 
(64 x 65) ] r ^ 
= -Tâ[n{e5 X ee) +n{ee 
x e4) + r6(e4 x e^)] 
^ 1 2 
Now, if we let 
we have, from eq.(5.28). 
Ta 
=Tn 
7'i 
â 
â¢^11 "-w 
f = [ U2 X U3 
U3 X U i 
U i X U2 ] 
-r^ 
^ 2 1 
where 
or 
(5.52) 
(5.53) 
II7' â Gv X Vo 
f = -â[ri(u2 xu3)+r2(u3 X U I ) - F T 3 ( U I XU2)] 
(5.54) 
^ 2 1 
5.7 
Planar Manipulators 
Shown in Fig. 5.6 is a three-axis planar manipulator. Note that in this case, the 
DH parameters bi and ai vanish, for i = 1,2,3, the nonvanishing parameters a^ 
being indicated in the same figure. Below we proceed with the displacement, 
velocity, acceleration, and static analyses of this manipulator. Here, we recall 
a few relations of planar mechanics that will be found useful in the discussion 
below. 
A 2 X 2 matrix A can be partitioned either columnwise or rowwise, as shown 
below: 
A = [a 
b] = 
c" 
d^ 
where a, b, c, and d are all 2-dimensional column vectors. Furthermore, let E 
be defined as an orthogonal matrix rotating 2-dimensional vectors through an 
angle of 90Â° counterclockwise. Hence, 
E = 0 
- 1 
1 
0 
(5.55) 
We thus have 

5.7 Planar Manipulators 
193 
Fact 5.7.1 
and hence, 
Fact 5.7.2 
E-^ = E^ = - E 
E^ = - 1 
where 1 is the 2 x 2 identity matrix. Moreover, 
Fact 5.7.3 
det(A) = -a^Eb = b^Ea = -c^Ed = d^Ec 
and 
Fact 5.7.4 
A-i = 
1 
det(A) 
âa^ 
E 
det(A) E [ - d 
c] 
5.7.1 
Displacement Analysis 
The inverse displacement analysis of the manipulator at hand now consists in 
determining the values of angles ^^, for Â« = 1,2,3, that will place the end-effector 
so that its operation point P will be positioned at the prescribed Cartesian 
coordinates x, y and be oriented at a given angle cf) with the X axis of Fig. 5.6. 
Note that this manipulator can be considered as decoupled, for the end-effector 
can be placed at the desired pose by first positioning point O3 with the aid of 
the first two joints and then orienting it with the third joint only. We then solve 
for the joint angles in two steps, one for positioning and one for orienting. 
We now have, from the geometry of Fig. 5.6, 
aici -f- a2Ci2 = X 
aisi +a2Si2 = y 
where x and y denote the Cartesian coordinates of point O3, while C12 and S12 
stand for cos(^i + O2) and sm{6i +62)^ respectively. We have thus derived two 
equations for the two unknown angles, from which we can determine these angles 
in various ways. For example, we can solve the problem using a semigraphical 
approach similar to that of Subsection 9.4. 
Indeed, from the two foregoing equations we can eliminate both C12 and 512 
by solving for the second terms of the left-hand sides of those equations, namely. 
0'2Cl2 = X â aiCi 
a2Si2 = y 
-ciisi 
(5.56a) 
(5.56b) 

194 
5. Kinetostatics of Serial Robots 
Figure 5.6: Three-axis planar manipulator 
Figure 5.7: The two real solutions of a planar manipulator 

5.7 Planar Manipulators 
195 
Figure 5.8: The two real values of 6i giving the two postures depicted in Fig. 5.7 
If both sides of the above two equations are now squared, then added, and the 
ensuing sum is equated to a2, we obtain, after simplification, a linear equation 
in ci and si that represents a line C in the Ci-si plane: 
-al + a2 + 2aixci + 2aiysi 
(x^ + 
y^)=0 
(5.57) 
Apparently, the two foregoing variables are constrained by a quadratic equation 
defining a circle C in the same plane: 
C: 
cl-^sl = l 
which has a unit radius and is centered at the origin of the ci-si plane. The 
real roots of interest are then obtained as the intersections of C and C. Thus, 
the problem can admit (i) two real and distinct roots, if the line and the circle 
intersect; (ii) one repeated root if the line is tangent to the circle; and (in) no 
real root if the line does not intersect the circle. 
With ci and si known, angle 9i is fully determined. Note that the two real 
intersections of C with C provide each one value of ^i, as depicted in Fig. 5.8. 
Once 6i and 02 are available, 9s is readily derived from the geometry of 
Fig. 5.6, namely, 
03 = cl>-(01+92) 
and hence, each pair of (9i, ^2) values yields one single value for 9s. Since we 
have two such pairs, the problem admits two real solutions. 
5.7.2 
Velocity Analysis 
Velocity analysis is most easily accomplished if the general velocity relations 
derived in Section 5.2 are recalled and adapted to planar manipulators. Thus 
we have, as in eq.(5.9), 
J0 = t 
(5.58a) 

196 
5. Kinetostatics of Serial Robots 
where now 
3 = 
) 
ei x r i 
62 
62 X r2 
es 
63 X rs 
, 
0 = 
'9i' 
k k 
, 
*â¢ 
= 
u 
.p_ 
(5.58b) 
and {r^ jf are defined as in eq.(5.6), i.e., as the vectors directed from Oi to P. 
As in the previous subsection, we assume here that the manipulator moves in 
the X-Y plane, and hence, all revolute axes are parallel to the Z axis, vectors 
ei and r^, for i = 1,2,3, thus taking on the forms 
e i = 62 = 63 = e = 
with t reducing to 
t = [0 0 (/) xp 
yp 
of 
(5.58c) 
in which xp and yp denote the components of the velocity of P. Thus, 
^0" 
0 
[l 
, 
Ti = 
Xi 
Vi 
_ 0 J 
67' X Yi â 
-Vi 
Xi 
0 
and hence, the foregoing cross product can be expressed as 
6? X 1*2 -â 
0 
where E was defined in eq.(5.55) and s^ is the 2-dimensional projection of r^ onto 
the X-Y plane of motion, i.e., Si = [xi 
yi\ . Equation (5.58a) thus reduces to 
(5.59) 
where 0 is the 2-dimensional zero vector and p is now reduced to p = [ a:, y ]^. In 
summary, then, by working only with the three nontrivial equations of eq.(5.59), 
we can represent the velocity relation using a 3 x 3 Jacobian in eq.(5.58a). To 
this end, we redefine J and t as 
0 
1 
Esi 
0 
0 
1 
ES2 
0 
0 -
1 
ES3 
0 . 
b = 
0 
0 
p 
. 0 
3 = 
1 
1 
1 
Esi 
Es2 
Ess 
t = 
(5.60) 
The velocity resolution of this manipulator thus reduces to solving for the three 
joint rates from eq.(5.58a), with J and t defined as in eq.(5.60), which thus leads 
to the system below: 
1 
1 
1 
Esi 
Es2 
Es3 
(5.61) 

5.7 Planar Manipulators 
197 
Solving for {6i}l 
is readily done by first reducing the system of equations 
appearing in eq.(5.58a) to one of two equations in two unknowns by resort-
ing to Gaussian elimination. Indeed, if the first scalar equation of eq.(5.61) is 
multiplied by Esi and the product is subtracted from the 2-dimensional vector 
equation, we obtain 
1 
1 
1 
0 
E ( s 2 - s i ) 
E ( s 3 - s i ) 
p - (/)Esi 
(5.62) 
from which a reduced system of two equations in two unknowns is readily ob-
tained, namely. 
[E(s2-si) 
E ( s 3 - s i ) ] 
= p - (/)Esi 
(5.63) 
The system of equations (5.63) can be readily solved if Fact 5.7.4 is recalled, 
namely. 
02 
1 
~ A 
1 
~ A 
- ( s 3 - s i ) ^ E 
( s 2 - s i ) ^ E 
E(p - (^Esi) 
(s3-si)^(p-(^Esi) 
- ( s 2 - s i ) ^ ( p - 0 E s i ) 
where A is the determinant of the 2 x 2 matrix coefficient of eq.(5.63), i.e., 
A = det([E(s2 - si) 
E(s3 - si) ]) = -(s2 - si)^E(s3 - si) 
(5.64) 
We thus have 
(s3-si)^(p-(^Esi) 
02 = 
(S2-S1)'^E(S3-Si) 
(s2-si)^(p-(/)Esi) 
(5.65a) 
^' 
( S 2 - S 1 ) ^ E ( S 3 - S i ) 
Further, 61 is computed from the first scalar equation of eq.(5.61), i.e.. 
(5.65b) 
^ 1 = 0 - ( ^ 2 + ^ 3 ) 
(5.65c) 
thereby completing the velocity analysis. 
The foregoing calculations are summarized below in algorithmic form, with 
the corresponding numbers of multiplications and additions indicated at each 
stage. In those numbers, we have taken into account that a multiplication of E 
by any 2-dimensional vector incurs no computational cost, but rather a simple 
rearrangement of the entries of this vector, with a reversal of one sign. 
1. d2i f - S 2 - s i 
OM -\-2A 

198 
5. Kinetostatics of Serial Robots 
2. dsi 4- S3 â si 
3. A ^ d|^iEd2i 
4. u ^ p - 0Esi 
5. u ^ u/A 
6. 02 ^ u'^dai 
7. ^3 ^^ 
u^d2i 
8. 
01^^-02-93 
OM + 2^ 
2M + 1>1 
2M + 2^ 
2M-f 0^ 
2M + 1^ 
2M + 1^ 
OM + 2^ 
The complete calculation of joint rates thus consumes only lOM and 11^, 
which represents a savings of about 67% of the computations involved if Gaus-
sian elimination is applied without regarding the algebraic structure of the Ja-
cobian J and its kinematic and geometric significance. In fact, the solution of an 
arbitrary system of three equations in three unknowns requires, from eq.(5.16a), 
28 additions and 23 multiplications. If the cost of calculating the right-hand 
side is added, namely, 4A and 6M, a total of 32^1 and 29M is required to solve 
for the joint rates if straightforward Gaussian elimination is used. 
5.7.3 
Acceleration Analysis 
The calculation of the joint accelerations needed to produce a given twist rate of 
the EE is readily accomplished by differentiating both sides of eq.(5.58a), with 
definitions (5.60), i.e., 
J^-h j ^ = t 
from which we readily derive a system of equations similar to eq.(5.58a) with 0 
as unknown, namely, 
3'e = 
i-J9 
where 
and 
J = 
0 
Esi 
0 
ES2 
0 
ES3 
e = 
S3 = (^1 +02 + ^3)Ea3 
S2 = a2 + S3 = (^1 -f- ^2)Ea2 + S3 
Si = ai -h S2 = ^lEai + S2 
Now we can proceed by Gaussian elimination to solve for the joint accelera-
tions in exactly the same manner as in Subsection 5.7.2, thereby obtaining the 
counterpart of eq.(5.63), namely. 
[E(s2-si) 
E ( s 3 - s i ) ] 
w 
(5.66a) 

5.7 Planar Manipulators 
199 
with w defined as 
w = p - E((9isi -f O2S2 + ^383 + hi) 
(5.66b) 
and hence, similar to eqs.(5.65a-c), one has 
e, = 
^11^^ 
(5.67a) 
.. 
( S 2 - S i ) ^ W 
73 = 
- -
(5.67b) 
1. 
2. 
3. 
4. 
5. 
6. 
7. 
8. 
S3 ^ (6>i + (92 + 6>3)Ea3 
S2 ^ ((9iH-(92)Ea2 + S3 
Sl i-OlBSLi 
+S2 
W ^ p - E(^iSi + ^2S2 4- ^383 + 0Si) 
w "f- w/A 
6>2 ^ w'^d3i 
03 < 
W^d21 
Ol i- 
^-02+03) 
A 
Oi = 4>- {O2 + ^3) 
(5.67c) 
Below we summarize the foregoing calculations in algorithmic form, indicat-
ing the numbers of operations required at each stage. 
2M k 2A 
2M 
kSA 
2M 
k2A 
SM 
kSA 
2M + 0A 
2M + 1A 
2M + 1A 
0M + 2A 
where d2i, d3i, and A are available from velocity calculations. The joint acceler-
ations thus require a total of 20 multiplications and 19 additions. These figures 
represent substantial savings when compared with the numbers of operations re-
quired if plain Gaussian elimination were used, namely, 33 multiplications and 
35 additions. 
It is noteworthy that in the foregoing algorithm, we have replaced neither 
the sum ^1 4- ^2 + O3 nor ^iE(si -{-82 + 83) by a; and correspondingly, by p, 
because in path tracking, there is no perfect match between joint and Cartesian 
variables. In fact, joint-rate and joint-acceleration calculations are needed in 
feedback control schemes to estimate the position, velocity, and acceleration 
errors by proper corrective actions. 
5.7.4 
Static Analysis 
Here we assume that the environment exerts a planar wrench on the EE of the 
manipulator appearing in Fig. 5.6. In accordance with the definition of the 
planar twist in Subsection 5.7.2, eq.(5.60), the planar wrench is now defined as 
w = [ j ] 
(5.68) 

200 
5. Kinetostatics of Serial Robots 
where n is the scalar couple acting on the EE and f is the 2-dimensional force 
acting at the operation point P of the EE. If additionally, we denote by r the 3-
dimensional vector of joint torques, the planar counterpart of eq.(5.50) follows, 
i.e., 
J^W = T 
(5.69) 
where 
i ^ 
-
1 
(Esi)^ 
1 
(Es2)^ 
1 
(Ess)^ 
Now, in order to solve for the wrench w acting on the end-effector, given the joint 
torques r and the posture of the manipulator, we can still apply our compact 
Gaussian-elimination scheme, as introduced in Subsection 5.7.2. To this end, we 
subtract the first scalar equation from the second and the third scalar equations 
of eq.(5.69), which renders the foregoing system in the form 
1 
(Esi)^ 
0 
[E(s2-si)]^ 
0 
[E(s3-si)]^ 
T2 - T i 
T3 - n 
Thus, the last two equations have been decoupled from the first one, which 
allows us to solve them separately, i.e., we have reduced the system to one of 
two equations in two unknowns, namely. 
[ E ( s 2 - s i ) r 
[ E ( s 3 - s i ) r 
f = r2 - n 
from which we readily obtain 
f = 
[ E ( s 2 - s 0 r 
[ E ( s 3 - s i ) r 
^2 
n 
(5.70) 
(5.71) 
and hence, upon expansion of the above inverse. 
f = -^ [(r2 - Ti)(s3 - Si) - {rs - ri)(s2 - si)] 
(5.72) 
where A is exactly as defined in eq.(5.64). Finally, the resultant moment n 
acting on the end-effector is readily calculated from the first scalar equation of 
eq.(5.69), namely, as 
n = n -h sf Ef 
thereby completing the static analysis of the manipulator under study. A quick 
analysis of computational costs shows that the foregoing solution needs 8M and 
6^, or a savings of about 70% if straightforward Gaussian elimination is applied. 

5.8 Kinetostatic Performance Indices 
201 
5.8 
Kinetostatic Performance Indices 
Chapters 6 and 7 do not depend on this section, which can thus be skipped in 
an introductory course based on the first half of the book. We have included 
this section because (i) it is a simple matter to render the section self-contained, 
while introducing the concept of condition number and its relevance in robotics; 
(a) kinetostatic performance can be studied with the background of the mate-
rial included up to this section; and {Hi) kinetostatic performance is becoming 
increasingly relevant as a design criterion and as a figure of merit in robot 
control. 
A kinetostatic performance index of a robotic mechanical system is a scalar 
quantity that measures how well the system behaves with regard to force and 
motion transmission, the latter being understood in the differential sense, i.e., at 
the velocity level. Now, a kinetostatic performance index, or kinetostatic index 
for brevity, may be needed to assess the performance of a robot at the design 
stage, in which case we need a posture-independent index. In this case, the 
index becomes a function of the robot architecture only. If, on the other hand, 
we want to assess the performance of a given robot while performing a task, 
what we need is a posture-dependent index. This difference is often overlooked 
in the robotics literature, although it is extremely important. Moreover, while 
performance indices can be defined for all kinds of robotic mechanical systems, 
we focus here on those associated with serial manipulators, which are the ones 
studied most intensively. 
Among the various performance indices that have been proposed, one can 
cite the concept of service angle, first introduced by Vinogradov et al. (1971), 
and the conditioning of robotic manipulators, as proposed by Yang and Lai 
(1985). Yoshikawa (1985), in turn, introduced the concept of manipulability, 
which is defined as the square root of the determinant of the product of the 
manipulator Jacobian by its transpose. Paul and Stevenson (1983) used the 
absolute value of the determinant of the Jacobian to assess the kinematic per-
formance of spherical wrists. Note that Yoshikawa's manipulability is identical 
to the absolute value of the determinant of the Jacobian, and hence, the latter 
coincides with Paul and Stevenson's performance index. It should be pointed 
out that these indices were defined for control purposes and hence, are posture-
dependent. Germane to these concepts is that of dextrous workspace, introduced 
by Kumar and Waldron (1981), and used for geometric optimization by Vijayku-
mar et al. (1986). Although the concepts of service angle and manipulability 
are apparently different, they touch upon a common underlying issue, namely, 
the kinematic, or alternatively, the static performance of a manipulator from 
an accuracy viewpoint. For this reason, we refer to these indices generically as 
kinetostatic. 
What is at stake when discussing the manipulability of a robotic manipulator 
is a measure of the invertibility of the associated Jacobian matrix, since this is 
required for velocity and force-feedback control. One further performance index 
is based on the condition number of the Jacobian, which was first used by 
Salisbury and Craig (1982) to design mechanical fingers. Here, we shall use this 

202 
5. Kinetostatics of Serial Robots 
concept to define the kinetostatic conditioning index of the manipulator. For 
the sake of brevity, we devote the discussion below to only two indices, namely, 
manipulability and conditioning. Prior to discussing these indices, we recall a 
few facts from linear algebra. 
Although the concepts discussed here are equally applicable to square and 
rectangular matrices, we shall focus on the former. First, we give a geometric 
interpretation of the mapping induced by a n x n matrix A. Here, we do not 
assume any particular structure of A, which can thus be totally arbitrary. How-
ever, by invoking the polar-decomposition theorem (Strang, 1988), we can factor 
A as 
A = RU = V R 
(5.73) 
where R is orthogonal, although not necessarily proper, while U and V are both 
at least positive-semidefinite. Moreover, if A is nonsingular, then U and V are 
both positive-definite, and R is unique. Apparently, 
A^A = U ' 
or 
AA^ = V2 
(5.74) 
and hence, U(V) can be readily determined as the positive-semidefinite or 
correspondingly, positive-definite square roo^of the product A^A (AA'^), which 
is necessarily positive-semidefinite at least; it is, in fact, positive-definite if A 
is nonsingular. We recall here that the square root of arbitrary matrices was 
briefiy discussed in Subsection 2.3.6. The square root of a positive-semidefinite 
matrix can be most easily understood if that matrix is assumed to be in diagonal 
form, which is possible because such a matrix is necessarily symmetric, and 
every symmetric matrix is diagonalizable. The matrix at hand being positive-
semidefinite, its eigenvalues are nonnegative, and hence, their square roots are all 
real. The positive-semidefinite square root of interest is, then, readily obtained 
as the diagonal matrix whose nontrivial entries are the nonnegative square roots 
of the above-mentioned eigenvalues. With U or V determined, R can be found 
uniquely only if A is nonsingular, in which case U and V are positive-definite. 
If this is the case, then we have 
R = AU"^ = V - i A 
(5.75a) 
It is a simple matter to show that U and V are related by a similarity transfor-
mation, namely, 
V = RUR^ 
(5.75b) 
Now, as a consequence of the above relation between U and V, both matrices 
share the same set of nonnegative eigenvalues {cr^}^, which are termed the 
singular values of the given matrix A. Furthermore, if the eigenvectors of U are 
denoted by {ui}'^ and those of V by {vi}i, then the two sets are related by a 
similarity transformation as well: 
Vi = R u i , 
2 = l , . . . , n 
(5.76) 
Now, let vector x be mapped by A into z, i.e., 
z = Ax = RUx 
(5.77a) 

5.8 Kinetostatic Performance Indices 
203 
Figure 5.9: Geometric representation of mapping induced by matrix A 
Moreover, let 
y = Ux 
(5.77b) 
and hence, we have a concatenation of mappings: U maps x into y, while R 
maps y into z. Thus, by virtue of the nature of matrices R and U, the latter 
maps the unit n-dimensional ball into a n-axis ellipsoid whose semiaxis lengths 
bear the ratios of the eigenvalues of U. Moreover, R maps this ellipsoid into 
another one with identical semiaxes, except that it is rotated about its center 
or reflected, depending upon whether R is proper or improper orthogonal. The 
eigenvalues of U or, for that matter, those of V, are thus nothing but the singular 
values of A. Yoshikawa (1985) explained the foregoing relations resorting to the 
singular-value decomposition theorem. We prefer to invoke the polar-decompo-
sition theorem instead, because of the geometric nature of the latter, as opposed 
to the former, which is of an algebraic natureâit is based on a diagonalization 
of either U or V, which is really not needed. 
We illustrate the two mappings U and R in Fig. 5.9, where we orient the 
X, y, and Z axes along the three eigenvectors of U. Therefore, the semiaxes of 
the ellipsoid are oriented as the eigenvectors of U as well. If A is singular, then 
the ellipsoid degenerates into one with at least one vanishing semiaxis. On the 
other hand, if matrix A is isotropic, i.e., if all its singular values are identical, 
then it maps the unit ball into another ball, either enlarged or shrunken. 
For our purposes, we can regard the Jacobian of a serial manipulator as 
mapping the unit ball in the space of joint rates into a rotated or reflected 
ellipsoid in the space of Cartesian velocities, or twists. Now, let us assume that 
the polar decomposition of J is given by R and U, the manipulability // of the 
robot under study thus becoming 
fi = |det(J)| = |det(R)||det(U)| 
(5.78a) 
Since R is orthogonal, the absolute value of its determinant is unity. Addi-
tionally, the determinant of U is nonnegative, and hence, 
fji = det(U) 
(5.78b) 

204 
5. Kinetostatics of Serial Robots 
which shows that the manipulability is the product of the eigenvalues of U or 
equivalently, of the singular values of J. Now, the product of those singular 
values, in the geometric interpretation of the mapping induced by J, is propor-
tional to the volume of the ellipsoid at hand, and hence, /j, can be interpreted 
as a measure of the volume of that ellipsoid. It is apparent that the manipula-
bility defined in eq.(5.78b) is posture-dependent. For example, if J is singular, 
at least one of the semiaxes of the ellipsoid vanishes, and so does its volume. 
Manipulators at singular configurations thus have a manipulability of zero. 
Now, if we want to use the concept of manipulability to define a posture-
independent kinetostatic index, we have to define this index in a global sense. 
This can be done in the same way as the magnitude of a vector is defined, 
namely, as the sum of the squares of its components. In this way, the global 
manipulability can be defined as the integral of a certain power of the manip-
ulability over the whole workspace of the manipulator, which would amount 
to defining the index as a norm of the manipulability in a space of functions^. 
For example, we can use the maximum manipulability attained over the whole 
workspace, thereby ending up with what would be like a Chebyshev norm^; al-
ternatively, we can use the root-mean square (rms) value of the manipulability, 
thereby ending up with a measure similar to the Euclidean norm. 
The condition number of a square matrix is a measure of the relative roundoff-
error amplification of the computed results upon solving a linear system of equa-
tions associated with that matrix, with respect to the relative roundoff error of 
the data (Dahlquist and Bjorck, 1974; Golub and van Loan, 1989). Based on 
the condition number of the Jacobian, a posture-independent kinetostatic con-
ditioning index of robotic manipulators can be defined as a global measure of 
the condition number. 
The definition of the condition number (Golub and van Loan, 1989) requires 
that all the entries of the matrix at hand bear the same physical units, which 
we assume first, in order to introduce the concept. The more frequent case 
of disparate units will be treated in the sequel. The condition number of a 
dimensionally homogeneous Jacobian J is defined as 
K(J) = | | J | | | | J - 1 | | 
(5.79) 
where || â¢ || stands for a matrix norm (Golub and van Loan, 1989). While any 
norm can be used in the above definition, the one that is most convenient for 
our purposes is the Frobenius norm \\ â¢ ||i?, defined as^ 
||J||p = \l ^tr(JJ^) = ^^tr(V2) 
(5.80a) 
^Lack of familiarity with the mathematics of functions regarded as elements of vector 
spaces, what is called functional 
analysis^ should not discourage the reader from continuing, 
for the balance of the book does not depend on these concepts. 
^ A norm is a generalization of the absolute value of real numbers, but applicable to arrays. 
In the same way that a vector norm is a measure of the "size" of the vector components, a 
matrix norm is a measure of the "size" of the matrix entries. In this vein, the Chebyshev 
norm of a given vector (matrix) is the largest absolute value of its components (entries). 
^Actually, the definition of eq.(5.80a) yields what is known as the wieghted Yrohemu^ norm, 
which gives a unit norm for the n X n identity matrix, regardless of the value of n. 

5.8 Kinetostatic Performance Indices 
205 
where we have assumed that J is of nxn. Moreover, from the polar-decomposition 
theorem and Theorem 2.6.4, one can readily verify that 
IIJII^ = ]Jltv{3Tj) = y ^tr(U2) 
(5.80b) 
Now, since the trace of a matrix is nothing but the sum of the matrix eigenvalues, 
it is apparent that the Probenius norm is identical with the rms value of the set 
of singular values of the given matrix. Likewise, 
\\3-'\\F 
= ^ l t r ( J - i J - ^ ) = yitr[(J^J)-i] = ^itr[(JJT)-i] 
(5.81) 
and hence, computing the Probenius norm of J~^ requires the inversion not of 
J itself, but rather that of J^J, or of JJ^ for that matter. Furthermore, while 
J is not frame-invariant under a change of Cartesian-coordinate frame, JJ-^ is. 
As a consequence, the latter lends itself better to a symbolic inversion than J 
itself. Hence, the Probenius condition number KF is derived as 
Ki. = -v^tr(U2)tr(U-2) = -v^tr(V2)tr(V-2) 
(5.82) 
Furthermore, if the matrix 2-norm is used in definition (5.79), then 
||J||2 = max{(ji} = GM, 
||J^~"^||2 = max< â > = â 
(5.83a) 
where 
Gm = niin{cr^} 
(5.83b) 
i 
It is noteworthy that both the Probenius norm and the 2-norm are given in 
terms of the matrix singular values. As a consequence, these two norms are 
frame-invariant. The 2-norm condition number /^2(J) is thus given by 
/.2(J) = â 
(5.84) 
CTm 
Now we can state a fundamental result: 
Theorem 5.8.1 The condition number based on either the 2-norm or the Probe-
nius norm of the robot Jacobian is invariant to changes of frame. In this light, 
the said condition numbers are immutable under a change ofbi, which amounts 
to a translation of frame T\, or of6\, which amounts to looking at the robot from 
a frame rotated by this angle about Z\. Moreover, angle an not depending on 
the robot architecture, but on the location of the task frame, neither influences 
the same condition numbers. 
Note that, regardless of the norm adopted, the condition number can attain 
values from unity to infinity. 
Apparently, the condition number attains its 
minimum value of unity for matrices with identical singular values; such matrices 

206 
5. Kinetostatics of Serial Robots 
map the unit ball into another ball, although of a different size, and are, thus, 
called isotropic. By extension, isotropic manipulators are those whose Jacobian 
matrix can attain isotropic values. On the other side of the spectrum, singular 
matrices have a smallest singular value that vanishes, and hence, their condition 
number is infinite. The condition number of J can be thought of as indicating 
the distortion of the unit ball in the space of joint-variables. The larger this 
distortion, the greater the condition number, the worst-conditioned Jacobians 
being those that are singular. For these, one of the semiaxes of the ellipsoid 
vanishes and the ellipsoid degenerates into what would amount to an elliptical 
disk in the 3-dimensional space. 
Now, if the entries of J have different units, its condition number is unde-
fined, for we would face a problem of either adding or ordering from largest to 
smallest singular values of different units. Staffetti, Bruyninckx and De Schut-
ter (2002) called kinetostatic performance indices of manipulators with such a 
Jacobian matrix "non-invariant" to changes of norms. The same authors went 
on to claim that, because of this feature, such performance indicesâStaffetti 
et al. refer to these indices as "manipulabilty indices"â-are not natural. We 
will leave aside the discussion of whether the indices at stake are invariant or 
not, to focus instead on means to cope with the problem at hand. We resolve 
the inconsistency of physical units by defining a characteristic length, by which 
we divide the Jacobian entries that have units of length, thereby producing a 
new Jacobian that is dimensionally homogeneous. We shall therefore divide our 
study into (i) manipulators for only positioning tasks, (ii) manipulators for only 
orientation tasks, and (Hi) manipulators for both positioning and orientation 
tasks. The characteristic length will be introduced when studying the third 
category. 
In the sequel, we will need an important property of isotropic matrices that 
is recalled below. First note that if A is isotropic, all its singular values are 
identical, say equal to cr, and hence, matrices U and V are proportional to the 
n X n identity matrix, i.e., 
U = V = (7l 
(5.85) 
In this case, then, 
A = (jR 
(5.86a) 
which means that isotropic square matrices are proportional to orthogonal ma-
trices. As a consequence, then, 
A^A = AA^ = aH 
(5.86b) 
Given an arbitrary manipulator of the serial type with a Jacobian matrix whose 
entries all have the same units, we can calculate its condition number and use a 
global measure of this to define a posture-independent kinetostatic index. Let 
Km be the minimum value attained by the condition number of the dimension-
ally homogeneous Jacobian over the whole workspace, regardless of the norm 
adopted. Note that I / K ^ can be regarded as a Chebyshev norm^ of the re-
ciprocal of the condition munber, because now l/z^m represents the maximum 
^in a space of functions. 

5.8 Kinetostatic Performance Indices 
207 
value of this reciprocal in the whole workspace. We then introduce a posture-
independent performance index, the kinetostatic conditioning index, or KCI for 
brevity, defined as 
KCI = â X 100% 
(5.87) 
Notice that since the condition number is bounded from below, the KCI is 
bounded from above by a value of 100%. Manipulators with a KCI of 100% are 
those identified above as isotropic. 
5.8.1 
Positioning Manipulators 
Here, again, we shall distinguish between planar and spatial manipulators. 
These are studied separately. 
Planar Manipulators 
If the manipulator of Fig. 5.6 is limited to positioning tasks, we can dispense 
with its third axis, the manipulator thus reducing to the one shown in Fig. 5.7; 
its Jacobian reduces correspondingly to 
J = [Esi 
Es2] 
with s^ denoting the two-dimensional versions of vectors r^ of the Denavit-
Hartenberg notation, as introduced in Fig. 5.1. Now, if we want to design 
this manipulator for maximum manipulability, we resort to eq.(5.78a), whence 
jjt = |det(J)|. First, notice that 
det(J) = det(E[si 
S2]) = det(E)det([si 
83]) 
and since matrix E is orthogonal, its determinant equals unity. Thus, the de-
terminant of interest is now calculated using Fact 5.7.3 of Section 5.7, namely, 
det(J) = - s f Es2 
(5.88) 
Therefore, 
fi= |sfEs2| = ||si||||s2|||sin(si, 82)! 
where (si, S2) stands for the angle between the two vectors inside the parenthe-
ses. Now let us denote the manipulator reach with R, i.e., R = ai+a2, and let 
ak = Rpk-, where p^, for fc = 1,2, is a dimensionless number. As illustrated in 
Fig. 5.10, IIS2II I sin(si,S2)| = h, the height of triangle O1O2P of base OiP, and 
hence, fi turns out to be twice the area of the same triangle, with the notation 
adopted at the outset. 
Moreover, in terms of the base O1O2 = ai and the height ^2! sin ^21, the area 
of the triangle becomes aia2| sin62|/2, and hence, 
fji = aia2|sin02| = i?^pip2| sin02| 
(5.89a) 

208 
5. Kinetostatics of Serial Robots 
a 
Pi^^y) 
Figure 5.10: A planar, two-axis positioning manipulator, with ^i = 0 
with pi and p2 subject to 
Pi + />2 = 1 
(5.89b) 
The design task at hand, i.e., finding ai and a2, can then be formulated as an 
optimization problem aimed at maximizing fi as given in eq.(5.89a) over pi and 
p2, subject to the constraint (5.89b). This optimization problem can be readily 
solved using, for example, Lagrange multipliers, thereby obtaining 
Pi=p2 = 2Â» 
^2 = Â± 2 
the absolute value of sin ^2 attaining its maximum value when O2 = Â±90Â°. The 
maximum manipulability thus becomes 
/^max â R'' 
(5.90) 
Incidentally, the equal-length condition maximizes the workspace volume as 
well. 
On the other hand, if we want to minimize the condition number of J, we 
should aim at rendering J isotropic, which means that the product J^J should 
be proportional to the identity matrix, and so. 
T 
Si Si 
T 
S1S2 
Sfs2 
T 
S2S2 
0 
0 
where a is the repeated singular value of J. Hence, for J to be isotropic, all we 
need is that the two vectors si and S2 have the same norm and that they lie at 
right angles. The solution is a manipulator with link lengths observing a ratio 
of -\/2/2, i.e., with a2/ai = \/2/2, and the two link axes at an angle of 135Â°, 
as depicted in Fig. 5.11. Manipulators of the above type, used as mechanical 
fingers, were investigated by Salisburg and Craig (1982), who found that these 
manipulators can be rendered isotropic if given the foregoing dimensions and 
configured as shown in Fig. 5.11. 

5.8 Kinetostatic Performance Indices 
209 
135" 
Figure 5.11: A two-axis isotropic manipulator 
Spatial Manipulators 
Now we have a manipulator like that depicted in Fig. 4.9, its Jacobian matrix 
taking on the form 
J = [ei X ri 
62 X r2 
63 x ra] 
(5.91) 
The condition for isotropy of this kind of manipulator takes on the form of 
eq.(5.86b), which thus leads to 
l|ei xrill^ 
(ei xri)^(e2 x r2) 
(ei xri)^(e3 x ra) 
(ei X ri)^(e2 x r2) 
||e2 X r2|p 
(e2 X r2)^(e3 x ra) 
(ei X ri)^(e3 x r3) 
(e2 X r2)^(e3 x r3) 
IN3 xralp 
= aH 
(5.92) 
Hence, the manipulator under study can be postured so as to attain isotropy 
if its dimensions are chosen so that its three columns have the same Euclidean 
norm and are mutually orthogonal. These conditions can be attained by various 
designs, one example being the manipulator of Fig. 4.15. Another isotropic 
manipulator for 3-dimensional positioning tasks is displayed in Fig. 5.12. 
Note that the manipulator of Fig. 5.12 has an orthogonal architecture, the 
ratio of its last link length to the length of the intermediate link being, as in 
the 2-dimensional case, \/2/2. Since the first axis does not affect singularities, 
neither does it affect isotropy, and hence, not only does one location of the 
operation point exist that renders the manipulator isotropic, but a whole locus, 
namely, the circle known as the isotropy circle, indicated in the same figure. By 
the same token, the manipulator of Fig. 5.11 has an isotropy circle centered at 
the center of the first joint, with a radius of (\/2/2)ai. 

210 
5. Kinetostatics of Serial Robots 
isotropv 
circle 
Figure 5.12: An isotropic manipulator for 3-dimensional positioning tasks 
5.8.2 
Orienting Manipulators 
We now have a three-revolute manipulator like that depicted in Fig. 4.17, its 
Jacobian taking on the simple form 
J = [ei 
62 
es] 
and hence, the first isotropy condition of eq. (5.86b) leads to 
J^ J = 
T 
T 
e^e2 
T 
T 
6x62 
T 
T 
T 
6163 
T 
T 
= aH 
(5.93) 
(5.94) 
What the foregoing condition states is that a spherical wrist for orienting tasks 
is isotropic if its three unit vectors {efc}f are so laid out that they are mutually 
orthogonal, which thus yields J = 1, the 3 x 3 identity matrix. Since the three 
singular values of 1 are all equal to unity, i.e., a = 1, J ^ J = JJ'^ = 1 as 
well. This is the case in orthogonal wrists when the two planes defined by the 
corresponding pairs of neighboring axes are at right angles. In summary, then, 
orthogonal wrists, which are rather frequent among industrial manipulators, 
are isotropic. Here we have an example of engineering insight leading to an 
optimum design, for such wrists existed long before isotropy was introduced 
as a manipulator design criterion. Moreover, notice that from the results of 
Subsection 4.4.2, spherical manipulators with an orthogonal architecture have 

5.8 Kinetostatic Performance Indices 
211 
a maximum workspace volume. That is, isotropic manipulators of the spherical 
type have two optimality properties: they have both a maximum workspace 
volume and a maximum KCI. Apparently, the manipulability of orthogonal 
spherical wrists is also optimal, as the reader is invited to verify, when the wrist 
is postured so that its three axes are mutually orthogonal. In this posture, the 
manipulability of the wrist is unity. 
5.8.3 
Positioning and Orienting Manipulators 
We saw already in Subsubsection 5.8.1 that the optimization of the two indices 
studied hereâthe Jacobian condition number and manipulabilityâleads to dif-
ferent manipulators. In fact, the two indices entail even deeper differences, as 
we shall see presently. First and foremost, as we shall prove for both planar 
and spatial manipulators, the manipulability fi is independent of the operation 
point P of the end-effector, while the condition number is not. One more fun-
damental difference is that while calculating the manipulability of manipulators 
intended for both positioning and orienting tasks poses no problem, the condi-
tion number cannot be calculated, at least directly, for this kind of manipulator. 
Indeed, in order to determine the condition number of the Jacobian matrix, we 
must either add or order from largest to smallest its singular values. However, 
in the presence of positioning and orienting tasks, three of these singular val-
ues, those associated with orientation, are dimensionless, while those associated 
with positioning have units of length, thereby making impossible such an order-
ing. We resolve this dimensional inhomogeneity by introducing a normalizing 
characteristic length. Upon dividing the three positioning rows, i.e., the bottom 
rows, of the Jacobian by this length, a nondimensional Jacobian is obtained 
whose singular values are nondimensional as well. The characteristic length is 
then defined as the normalizing length that renders the condition number of 
the Jacobian matrix a minimum. While this definition does not bear a direct 
geometric interpretation, in general, we shall see that such an interpretation is 
possible for isotropic manipulators. Below we shall determine the character-
istic length for isotropic manipulators; determining the same for nonisotropic 
manipulators requires solving a minimization problem that calls for numerical 
techniques, as illustrated with examples. 
Planar Manipulators 
In the sequel, we will need the planar counterpart of the twist-transfer formula 
of Subsection 3.4.2. First, we denote by tA the 3-dimensional twist of a rigid 
body undergoing planar motionâintroduced in eq.(5.60)âwhen defined at a 
point A] when defined at point JB, the corresponding twist is denoted by tjg, 
i.e., 
t ^ = [ ^ ] , 
tB=[^] 
(5.95) 

212 
5. Kinetostatics of Serial Robots 
The relation between the two twists, or the planar twist-transfer formula, is 
given by a Hnear transformation U as 
is = UtA 
where U is now defined as a 3 x 3 matrix, namely, 
U = 
1 
0^ 
E(b - a) 
I2 
(5.96a) 
(5.96b) 
with a and b representing the position vectors of points A and B, and I2 
standing for the 2 x 2 identity matrix. Moreover, U is, not surprisingly, a 
member of the 3 x 3 unimodular group, i.e., 
det(U) = 1 
Because of the planar twist-transfer formula, the Jacobian defined at an oper-
ation point B is related to that defined at an operation point A of the same 
end-effector by the same linear transformation U, i.e., if we denote the two 
Jacobians by 3A and Jjg, then 
3 B = V3A 
(5.97) 
and if we denote by fXA and //^ the manipulability calculated at points A and 
J5, respectively, then 
fXB = |det(JB)| = |det(U)||det(J^)| = |det(JA)| = fiA 
(5.98) 
thereby proving that the manipulability is insensitive to a change of operation 
point, or to a change of end-effector, for that matter. Note that a similar analysis 
for the condition number cannot be completed at this stage because, as pointed 
out earlier, the condition number of these Jacobian matrices cannot even be 
calculated directly. 
In order to resolve the foregoing dimensional inhomogeneity, we introduce 
the characteristic length L, which will be defined as that rendering the Jacobian 
dimensionally homogeneous and optimally conditioned, i.e., with a minimum 
condition number. We thus introduce the normalized Jacobian matrix as 
J = 
L L 
1 
iEsi 
1 
-Eso 
.Es. 
(5.99) 
Now, if we want to size the manipulator at hand by properly choosing its ge-
ometric parameters so as to render it isotropic, we must observe the isotropy 
condition, e.g., the second of eq.(5.86b), which readily leads to 
3 
i(E?sr)E^ 
lEE?Sfc J.E [E? (s.sj)] E^ 
(T2 
0 
0 
0 
a^ 
0 
0 
0 
a' 
(5.100) 

5.8 Kinetostatic Performance Indices 
213 
and hence, 
a^ = 3 
(5.101a) 
f ^ s H E ^ 
or 
; ^ s , = 0 
(5.101b) 
- l E ( ^ ^ ( s , s n ^ E ^ = a^l. 
(5.101c) 
What eq.(5.101a) states is simply that the triple singular value of the isotropic 
J is ^/S] eq.(5.101b) states, in turn, that the operation point is the centroid of 
the centers of all manipulator joints if its Jacobian matrix is isotropic. Now, in 
order to gain insight into eq.(5.101c), we note that since E is orthogonal and 
(j^ = 3, this equation can be rewritten in a simpler form, namely, 
'J2(^ksl)\ = (3)l2 
(5.102) 
Further, if we recall the definition of the moment of inertia of a rigid body, we 
can immediately realize that the moment of inertia Ip of a set of particles of 
unit mass located at the centers of the manipulator joints, with respect to the 
operation point P, is given by 
i p ^ E 
Sfc|pl2-Sfcs^) 
(5.103) 
from which it is apparent that the moment of inertia of the set comprises two 
parts, the first being isotropicâit is a multiple of the 2 x 2 identity matrixâthe 
second not necessarily so. However, the second part has the form of the left-hand 
side of eq.(5.102). Hence, eq.(5.102) states that if the manipulator under study 
is isotropic, then its joint centers are located, at the isotropic configuration, at 
the corners of a triangle that has circular inertial symmetry. What we mean by 
this is that the 2 x 2 moment of inertia of the set of particles, with entries Ixx^ 
Ixy, and lyy^ is similar to that of a circle, i.e., with I^x = lyy and Ixy = 0. An 
obvious candidate is an equilateral triangle, the operation point thus coinciding 
with the center of the triangle. Since the corners of an equilateral triangle are 
at equal distances d from the center, and these distances are nothing but ||sfe||, 
the condition below is readily derived for isotropy: 
||sfc|p=d^ fc = 1,2,3 
(5.104) 
In order to compute the characteristic length of the manipulator under study, 
let us take the trace of both sides of eq.(5.102), thereby obtaining 
1 
^ 
^ 
V ^ II 
Il2 
a 
L2 

214 
5. Kinetostatics of Serial Robots 
03 
Figure 5.13: The planar 3-R isotropic manipulator 
and hence, upon substituting eq.(5.104) into the foregoing relation, an expres-
sion for the characteristic length, as pertaining to planar isotropic manipulators^ 
is readily derived: 
L = ^d 
(5.105) 
It is now a simple matter to show that the three link lengths of this isotropic 
manipulator are ai = 02 = VSd and as = d. Such a manipulator is sketched at 
an isotropic posture in Fig. 5.13. 
We now can give a geometric interpretation of the characteristic length for 
the case at hand: To this end, we look at the manipulator of Fig. 5.13 from an 
arbitrary viewpoint outside of the manipulator plane, as depicted in Fig. 5.4. 
Let this plane be X-Y, with origin at Oi, and X-axis directed towards O2. 
Next, we look at a point O on the normal to the X-Y plane passing through 
the operation point P, a distance h from P. 
Further, we define vectors {ri}l as 
ri = odi, 
2 = 1,2,3 
Upon imposing the condition that the set {r^}f be orthogonal, we find h as 
h=4 = L 
2 
(5.106) 
Therefore, the characteristic length L renders matrix L3 isotropic. In fact, this 
matrix becomes 
~ L 
L 
L 
Esi 
Es2 
Es3 
LJ = 
(5.107) 

5.8 Kinetostatic Performance Indices 
215 
Figure 5.14: A geometric interpretation of the characteristic length 
of the planar 3R isotropic manipulator. 
for {si}l valued at the isotropic posture of Fig. 5.13. Notice that the difference 
between the Jacobian matrix defined in eq.(5.60) and matrix LJ lies only in 
their first row. Obviously, the former is not dimensionally homogeneous; the 
latter is. 
Spatial Manipulators 
The entries of the Jacobian of a six-axis manipulator intended for both posi-
tioning and orienting tasks are dimensionally inhomogeneous as well. Indeed, 
as discussed in Section 5.2, the iih column of J is composed of the Pliicker 
coordinates of the iih axis of the manipulator, namely. 
J = 
ei 
62 
es 
â¬4 
es 
ee 
ei X ri 62 X r2 es x rs 64 x r4 65 x rs ee x re 
(5.108) 
Now it is apparent that the first three rows of J are dimensionless, whereas 
the remaining three, corresponding to the moments of the axes with respect to 
the operation point of the end-effector, have units of length. This dimensional 
inhomogeneity is resolved in the same way as in the case of planar manipulators 
for both positioning and orienting tasks, i.e., by means of a characteristic length. 
This length is defined, again, as the one that minimizes the condition number 
of the dimensionless Jacobian thus obtained. We then define the corresponding 

216 
5. Kinetostatics of Serial Robots 
normalized Jacobian as 
J = 
[ |;ei X n 
fe2 X r2 
fes x rs 
fe4 x r4 
fe^ x rs 
fee x ] 
(5.109) 
ei 
62 
63 
e4 
65 
ee 
|;ei X n 
|;e2 X r2 
xe3 x rs 
;^e4 x r4 
7;e5 x rs 
j^ee x re 
and hence, the second isotropy condition of eq.(5.86b) leads to 
6 
Y^ekel = aH 
(5.110a) 
1 
6 
J2ej,iek 
xrkf 
= 0 
(5.110b) 
1 
1 
^ 
â ^(efc X r,)(e, x r , ) ^ = aH 
(5.110c) 
where 1 is the 3 x 3 identity matrix, and O is the 3 x 3 zero matrix. Now, if we 
take the trace of both sides of eq.(5.110a), we obtain 
a^ = 2 or 
a = V2 
Furthermore, we take the trace of both sides of eq.(5.110c), which yields 
1 
^ 
L^ 
1 
But ||efc X r^lP is nothing but the square of the distance dk of the fcth revolute 
axis to the operation point, the foregoing equation thus yielding 
i.e., the characteristic length of a spatial six-revolute isotropic manipulator is 
the root-mean square of the distances of the revolute axes to the operation point 
when the robot finds itself at the posture of minimum condition number. 
Furthermore, eq.(5.110a) states that if { e^ }f is regarded as the set of posi-
tion vectors of points { Pk jf on the surface of the unit sphere, then the moment-
of-inertia matrix of the set of equal masses located at these points has spherical 
symmetry. 
What the latter means is that any direction of the 3-dimensional 
space is a principal axis of inertia of the foregoing set. Likewise, eq.(5.110c) 
states that if { e^ x r^; }i is regarded as the set of position vectors of points 
{Qk} in the 3-dimensional Euclidean space, then the moment-of-inertia matrix 
of the set of equal masses located at these points has spherical symmetry as 
well. 
Now, in order to gain insight into eq.(5.110b), let us take the axial vector of 
both sides of that equation, thus obtaining 
6 
^efcx(efcxrfc) = 0 
(5.111) 

5.8 Kinetostatic Performance Indices 
217 
Table 5.1: DH Parameters of DIESTRO 
i 
1 
2 
3 
4 
5 
6 
ai (mm) 
50 
50 
50 
50 
50 
50 
bi (mm) 
50 
50 
50 
50 
50 
50 
Cti 
90Â° 
-90Â° 
90Â° 
-90Â° 
90Â° 
-90Â° 
Oi 
Oi 
02 
Oz 
OA 
0, 
Oe 
with 0 denoting the 3-dimensional zero vector. Furthermore, let us denote by 
'Ek the cross-product matrix of e^, the foregoing equation thus taking on the 
form 
1 
However, 
for every A:, and hence, eq.(5.111) leads to 
^ ( 1 - ekel)rk 
= 0 
1 
Moreover, (1 âekej)rk is nothing but the normal component of rj^ with respect 
to e^;, as defined in Section 2.2. Let us denote this component by r^, thereby 
obtaining an alternative expression for the foregoing equation, namely. 
E r^ = 0 
(5.112) 
The geometric interpretation of the above equation is now apparent: Let OJ. be 
the foot of the perpendicular to the fcth revolute axis from the operation point 
P; then, r^^ is the vector directed from OJ. to P. Therefore, the operation point 
of an isotropic manipulator, configured at the isotropic posture, is the centroid 
of the set { OJ. }i of perpendicular feet from the operation point. 
A six-axis manipulator designed with an isotropic architecture, DIESTRO, is 
displayed in Fig. 5.15. The Denavit-Hartenberg parameters of this manipulator 
are given in Table 5.1. DIESTRO is characterized by identical link lengths a 
and offsets identical with this common link length, besides twist angles of 90Â° 
between all pairs of neighboring axes. Not surprisingly, the characteristic length 
of this manipulator is a. 

218 
5. Kinetostatics of Serial Robots 
Figure 5.15: DIESTRO, a six-axis isotropic manipulator in two postures: (a) 
with the arm extended upwards; (b) with the arm down, showing the orthogo-
nahty of the neighboring axes 
5-8.4 
Computation of the Characteristic Length: Appli-
cations to Performance Evaluation 
We elaborate further on the concept of characterictic length. In order to provide 
a better grasp of the concept, we focus on its computation as pertaining to a 
given robot, that need not be isotropic. To do this, we include two examples, 
one planar and one spatial, industrial robot. Once a numerical value of the 
characteristic length is available, we can compute the minimum value of the 
condition number of the robot Jacobian, with which we can assess the robot 
kinetostatic performance by means of the KCI. 
Example 5.8.1 (A planar, equilateral, three-re volute robot) Compute 
the characteristic length of the robot of Fig. 5.16, depicting a posture in which 
6i has been set equal to zero. What is the KCI of this robot? 
Solution: We have ai = a2 = a^ = a for the robot under study. In order to 
compute its length, we have to minimize the Jacobian condition number by a 
proper choice of the characteristic length L and the joint variables O2 and 63. 
We thus start by deriving an expression for the Jacobian: 
1 
Esi 
1 
ES2 
1 
ES3 

5.8 Kinetostatic Performance Indices 
P 
219 
Oii 
Figure 5.16: Equilateral, three-revolute planar robot 
Now, we render J dimensionally homogeneous by introducing the characteristic 
length L, thus obtaining the normalized Jacobian J: 
1 
1 
1 
(l/L)Esi 
(l/i:)Es2 
(l/i:)Es3 
From the manipulator geometry, we have, 
Esi = a 
with 
ci = cos^i, 
C2 = sin 02, 
Ci2 = cos(0i + 62) J C123 = cos(0i + ^2 + ^3) 
Si = sin^i, 
52 = sin02, 
5i2 = sm(6i -f 62), 
S123 = sm(6i 4- 6^2 + ^3) 
Since we set Oi = 0, because the first joint does not affect the condition number, 
the normalized Jacobian becomes 
-{si 
+ S 1 2 + S123) 
Cl + C12 + C123 
Eso = n 
, 
X-;Â»3J 
U/ 
- ( S l 2 + S123) 
C12 + C123 
E S Q = n 
, 
-â¢-'03 â ti/ 
- 5 1 2 3 
C123 
1 
1 
1 
-r(s2 + S23) 
-r{s2 + S23) 
-rs23 
r(l + C2 + C23) 
r{C2 + C23) 
^C23 
the inverse of J, as derived with computer algebra, being 
r = 
J-' 
= 
S3/S2 
C2/{rs2) 
1/r 
-{S3 + S23)/S2 
- ( l + C2)/(rS2) 
"l/r* 
(S2+S23)/S2 
1/(^52) 
0 
The square of the Frobenius-norm condition number of J is now computed as 
f4^ = fg 

220 
5. Kinetostatics of Serial Robots 
with / and g defined as the square of the weighted Probenius norms of J and 
J 
, respectively, i.e., 
and 
IJ|IF = ^tr(J^J) = 1 + (2 + ^ C2 + ^ C3 + ^ C23 j r 
_ ,1^ -1â2 _ (g2 + 323)^ + {S3 + S23? + gj ^ 2 2 + C2 
2 
Ssl 
3 r2s2 
which can be rewritten as 
and 
1 D + E/r^ 
Â»2 
with coefficients A, D and E independent of r, namely, 
2 
A= 
- ( 3 + C2-f 2c3-f C23) 
D = {S2 + S23f + (53 + 523)^ + Sl 
E = 2{2 + C2) 
We now have a classical minimization problem: 
2 
^ 
1/1 
. 2^D + E/r'^ 
Kl = fg=-{1 
+ Ar^) 
- 2 - ^ - 
-> mm 
where the characteristic length is implicit in r. While the foregoing problem is 
well posed, we should not forget that KF is unbounded from above. In order 
to gain better insight into the problem at hand, it is preferable to treat the 
problem as one of maximization of 1/KF, or of its square, for that matter. As 
well, we can dispense with the constant factor 1/3 in K|I, which thus leads to 
the maximization problem below: 
Q 
z = â¢â â> max 
P 
r,^2,^3 
with P and Q defined as 
P = ADr"^ 4- {AE + Dy 
+ E, 
Q = r'^sl 
In order to obtain the optimum values of the three design variables r, 621 
and ^3, we need to set up the normality conditions of the problem at hand. 
These are readily obtained upon zeroing the gradient of K^p with respect to the 
vector of design variables, defined as x = [ r 
62 ^3 ] . The said conditions 
are, thus, 
9^ - 
d 
(Q\_^ 

5.8 Kinetostatic Performance Indices 
221 
The three components of the above gradient, dz/dr, dz/d62, and dz/dOs, are 
then derived using the general formula for the derivative of a rational expression: 
^ (f)=iW^^-^^^) 
dXi \Pj 
P2 
where Qi and Pi stand for dQ/dxi and dP/dxi, 
with Xi taking values of r, 02, 
and ^3, for i = 1, 2, 3, respectively. We thus have, using a similar notation for 
the partial derivatives of coefficients A, D and E: 
Pi = 4ADr^ + 2{AE + D)r, 
Qi = 2rsl 
P2 = {A2D + AD2y 
+ {A2E + AE2 + D2y 
+ E2, 
Q2 = 2r'^S2C2 
Ps = {A3D + ADsy 
+ ( ^ 3 ^ + AEs + Dsy 
+ E3, 
Q3 = 0 
Apparently, ^3 = 0, the normality conditions thus simplifying to 
dr ~ 
P2 
{[2ADc2 - {A2D + AD2)s2y 
+ [2{AE + Z))c2 
9^ _ T^S2 
m^~P^ 
dz _ 
r'^S2 
W^^~1P^ 
-{A2E + AE2 + D2)S2] r^ + 2Ec2 - E2S2] = 0 
[(>13JD + ADsy 
+ ( ^ E + Z)3)] = 0 
thereby obtaining a system of three nonlinear equations in three unknowns, 
namely, the three design variables. Apparently, all three normality conditions 
are satisfied for either r = 0 or 52 = 0, which just confirms that the normality 
conditions are sufficient for a point in the design space to be stationary; such a 
point can be a local minimum, a local maximum or a saddle point. The vanishing 
of the product rs2 thus yields a minimum of z, which indicates KF -> 00, r = 0 
giving an architecture singularity, S2 = 0 a posture singularity. We are not 
interested, for our purposes, on such a minimum, for which reason we assume 
henceforth that rs2 7^ 0. Under this condition, the normality conditions thus 
yield the reduced system of equations 
01 = -ADr"^ + J5; = 0 
02 = [2ADc2 - {A2D + AD2)s2y 
+ [2{AE + D)c2 - {A2E + AE2 + 1^2)^2]^^ 
+2Ec2 - E2S2 = 0 
03 = {A3D + ADsy 
+ {A3E + D3) = 0 
The problem at hand is thus solved by finding the roots of the foregoing 
system. We can do this by means of the Newton-Raphson method, for example, 
which (i) requires the 3 x 3 Jacobian matrix of the three foregoing equations, 
i.e., further differentiation, and (ii) yileds only one root, out of many, for one 
given initial guess, when the method converges at all. Moreover, given the local 
nature of the method, Newton-Raphson cannot tell whether one has found all 
possible roots of the system of equations. 

222 
5. Kinetostatics of Serial Robots 
An alternative, semigraphical approach, was introduced in Example 4.4.3. 
This approach consists in reducing the problem to finding the roots of two 
nonlinear equations in two unknowns; each equation, then, defines one contour 
in the plane of the two unknowns, the intersection points of the two contours 
yielding all possible real roots of the system at hand. In order to apply this 
approach to the above system, we have to eliminate one of the three unknowns 
from the system, the obvious candidate being r. We can do this by dialytic 
elimination, as introduced in Subsection 5.4.1. Given the special structure of 
the three given equations, it is simpler to eliminate r following a straightforward 
approach: First, we solve for r^ from the first equation and for r^ from the third, 
which yields: 
4 ^ _E_ 
2 ^ 
AsE + Ds 
AD' 
A3D + AD3 
Upon equating the above expression of r^ with the square of its counterpart 
expression for r^, we obtain 
F(<92, 63) = {AE - D){ADl - AJDE) = 0 
Further, upon substituting the same expressions for r^ and r^ into equation 
(/>2 = 0, we obtain 
0(62, 63) = {AE - D)[{AA3DE2 + A2A3DE - AD2D3) sin^s 
-2AD{A3E 
- D3) COS62] = 0 
thereby obtaining a reduced system of two equations in two unknowns only, 
02 and O3. The foregoing system admits further simplifications. Indeed, the 
common factor AE â D turns out to be positive-definite, i.e., AE â D > 0 for 
any values of O2 and O3. While it is not obvious that the factor in question 
is positive-definite, its sign-definiteness was verified with the aid of computer 
algebra. To visualize this property, we include a three-dimensional rendering 
of the function as a surface in Fig. 5.17(a) and a side view of the same in 
Fig. 5.17(b). Given that the factor in question is positive-definite, we can safely 
divide both sides of the two foregoing equations by this factor, which thus leads 
to two nonlinear equations in 62 and 63 defining contours Ci and C2 in the 62-O3 
plane, namely, 
Ci : ADl - AJDE = 0 
C2 : {AA3DE2 + A2A3DE - AD2D3) sin 62 - 2AD{A3E - D3) cos 6>2 = 0 
The two above contours are plotted in the 62-O3 plane in Fig. 5.18. 
Apparently, to any optimum posture with joint center O3 above line 0\ O2 
corresponds a symmetrically located posture of the robot with O3 below the 
above line. This means that all solutions {62-> O3) expected should be symmetric 
about the origin of the 62-O3 plane, which they are, as illustrated in Fig. 5.18(a). 
That is, if a pair of numerical values (^2, ^3) verifies the normality conditions, 
then so does the pair (â^2, â^3)- By the same token, if we set ^1 = TT in the 

5.8 Kinetostatic Performance Indices 
223 
I I I I I I I I I I I I I I t I I I t I I I I I I 
-5.0 
-2.5 
0.0 
2.5 
5.0 
(a) 
(b) 
Figure 5.17: A 3D rendering of the function $ = AE â D YS. 62 and ^3: (a) an 
isometric view; and (b) a view in the 62-^ plane 
Jacobian expression, a similar set of normality conditions should be obtained, 
with the corresoponding symmetry. 
In light of the symmetry of the plots of Fig. 5.18(a), we can focus on the first 
quadrant of the 62-O3 plane, and plot the zoom-in of Fig. 5.18(a), showing only 
this quadrant. Moreover, it is apparent that contour Ci exhibits two double 
points, one at (0.9, 2.9), the other at (2.1, 2.6). Double points are likely to 
produce spurious solutions^] hence, we discard those two double points, thereby 
leaving only five intersections of interest. As it turns out, the intersection de-
tected by inspection at, roughly, 62 = 1.69 rad, 63 = 2.61 rad produces a maxi-
mum of 1/KF. These rough values of the design variables were then refined using 
the Newton-Raphson method, with the foregoing rough values as initial guess^^. 
The Newton-Raphson method, as implemented with Matlab code, yielded the 
refined solution displayed below in eight iterations: 
02 = 1.68910726900188 rad = 96.77871763^ 
63 = 2.61287852677543 rad = 149.7069120^ 
r = 2.040896177 
=> L = a/r = 0.4899808287 m 
^A spurious solution is a set of numerical values of the roots of a system of equations 
that, although computed from a sound elimination procedure, does not verify the equations. 
Example 9.7.3 includes a case of a double point in a contour that yields spurious solutions. 
^^It is well known (Dahlquist and Bjorck, 1974) that, close to a root, the Newton-Raphson 
method converges quadratically, i.e., the approximation to the root gains, roughly, two digits 
of accuracy at each iteration. Hence, the Newton-Raphson procedure will likely converge to 
the root closest to the given estimate. 

224 
5. Kinetostatics of Serial Robots 
-3 
-2 
-1 
0 
1 
62, rad 
(a) 
0 
0.5 
1 
1.5 
2 
2.5 
3 
62, rad 
(b) 
Figure 5.18: Contours Ci and C2 in the 62-Os plane: (a) in the âTT < O2 < TT, 
âTT < ^3 < TT range; (b) a zoom-in in the 0 < ^2 < TT, 0 < 63 < TT range 
where we have recalled that a was specified as 1 m. The normalized Jacobian 
J at the optimum posture is, moreover, 
J = 
with Kjp = 1.1832. Hence, 
1 
-0.1552 
0.9858 
1 
-0.1552 
-1.0552 
1 
1.8715 
-0.8143 
KCI = 84.52% 
Note that, if we use the 2-norm to define the condition number, i.e., if we 
minimize 
i^2{r,62,63) 
= 
CTM 
then we cannot find expressions for the gradient of l/t^l with respect to the 
design variables because the objective function now is not analytic^^ in the de-
sign variables. That is, unlike the minimization of KF, now we do not have 
normality conditions. Nevertheless, K2 can still be minimized using a direct-
search method, i.e., an optimization method not relying on gradients, but only 
on objective-function evaluation. The objective function is that whose min-
imum, or maximum for that matter, is searched. In our case, the objective 
function to minimize is K2. Direct-search minimization methods are available in 
scientific software. Matlab, for example, uses the Nelder-Mead simplex method, 
as implemented in its fminsearch function. A local minimum value of K2 was 
found by fminsearch with the initial guess 
r = 1.0, 
6>2=6.0Â°, 
6>3 = 18.0Â° 
^ ^ A real-valued function of a real argument is said to be analytic at one value of its argument 
if the function admits a series exapnsion at this value. 

5.8 Kinetostatic Performance Indices 
225 
Table 5.2: DH Parameters of the Fanuc Arc Mate S series manipulator of 1990 
i 
1 
2 
3 
4 
5 
6 
ai (mm) 
200 
600 
130 
0 
0 
0 
bi (mm) 
810 
0 
-30 
550 
100 
100 
ai 
90Â° 
0Â° 
90Â° 
90Â° 
90Â° 
0Â° 
Oi 
Oi 
02 
Os 
OA 
Os 
06 
after 148 iterations, as 
K2 = 1.9070 
This value is attained at the values of the design variables given below: 
r = 2.1650, 
02 = 98.9785Â°, 
63 = 145.193Â° 
which yield L = 0.4619 m and a nondimensional Jacobian 
-0.1898 
0.8839 
-0.1898 
-1.2813 
1.9488 
-0.9433 
Shown in Fig. 5.19 is the given manipulator at the optimum posture under the 
condition number calculated using the Probenius norm, the posture correspond-
ing to the minimum condition number based on the 2-norm being indistinguish-
able from this one. 
Figure 5.19: Optimum configuration for a minimum KF 
Example 5.8.2 Find the KCI and the characteristic length of the Fanuc Robot 
Arc Mate S series manipulator of 1990, whose DH parameters are given in 
Table 5.2. 

226 
5. Kinetostatics of Serial Robots 
Solution: We need the minimum value that the condition number KF of the 
normalized robot Jacobian can attain, in order to calculate its KCI as indicated 
in eq.(5.87). Now, the Fanuc Robot Arc Mate S series of 1990 is a six-revolute 
manipulator for positioning and orienting tasks. Hence, its Jacobian matrix has 
to be first recast in nondimensional form, as in eq.(5.109). Next, we find L along 
with the joint variables that determine the posture of minimum condition num-
ber via an optimization procedure. Prior to the formulation of the underlying 
optimization problem, however, we recall Theorem 5.8.1, under which the first 
joint, accounting for motions of the manipulator as a single rigid body, does not 
affect its Jacobian condition number. By the same token, we align axes ZQ and 
Z7. As a consequence, OQ does not affect the Jacobian condition number either. 
We thus define the design vector x of the optimization problem at hand as a 
5-dimensional array, namely, 
x = [02 03 04 e^ 
L]^ 
and set up the optimization problem as 
min/^i?(J) 
X 
Now, given the architecture of the robot at hand, a symbolic expression for 
J~^, or its dimensionless counterpart J 
, not to speak of Kp itself, is elusive, 
and hence, an approach like that of Example 5.8.1 appears rather unfeasible. 
We thus resort to a direct-searchâas opposed to a gradient-basedâprocedure 
to solve the foregoing optimization problem. There are various methods of 
this kind at our disposal; the one we chose is, again, the Nelder-Mead simplex 
method^ as implemented in Matlab within the f minsearch function, which was 
provided with the initial guess 
Xinit = [26Â° -56Â° 
195Â° 107Â° 341.738]^ 
The results reported by Matlab are displayed below: 
Xopt = [22.60Â° 
-51.13Â° 
-159.93Â° 
88Â° 351.23]^ 
whose last entry, the characteristic length of the robot, is in mm, i.e., 
L = 351.23 mm 
Furthermore, the minimum condition number attained at the foregoing posture, 
with the characteristic length found above, is 
KF = 1.2717 
Therefore, the KCI of the Fanuc Robot Arc Mate S series manipulator of 1990 
is 
KCI = 78.63% 
To be sure, the KCI of this manipulator can still be improved dramatically 
by noting that the condition number is highly dependent on the location of the 
operation point of the end-effector. The robot DH parameters given in Table 5.2 
do not account for the geometry of the EE. 

5.9 Exercises 
227 
5.9 
Exercises 
N.B.: Exercises 5.13â5.17 pertain to Section 5.8. They are thus to 
be assigned only if this section was covered in class. 
5.1 Shown in Fig. 5.20 is a computer-generated model of DIESTRO, the 
robot displayed in Fig. 5.15, with a slightly modified EE. The Denavit-
Hartenberg parameters of this robot are given in Table 5.3. Find the 
Jacobian matrix of the manipulator at the above configuration. 
Figure 5.20: A six-revolute manipulator 
Table 5.3: DH parameters of the modified DIESTRO 
i 
1 
2 
3 
4 
5 
6 
ai (mm) 
50 
50 
50 
50 
50 
0 
bi (mm) 
50 
50 
50 
50 
50 
50 
ai 
90Â° 
-90Â° 
90Â° 
-90Â° 
90Â° 
-90Â° 
Oi 1 
90Â° 
-90Â° 
90Â° 
-90Â° 
90Â° 
-90Â° 
5.2 The robotic manipulator of Fig. 4.19 is instrumented with sensors measur-
ing the torque applied by the motors at the joints. Two readouts are taken 
of the sensors for the robot in the configuration indicated in the figure. In 
the first readout, the gripper is empty; in the second, it holds a tool. If 

228 
5. Kinetostatics of Serial Robots 
the first readout is subtracted from the second, the vector difference A T 
is obtained as 
A T = [0 
2 1 0 1 0]'^ Nm 
With the foregoing information, determine the weight w of the tool and 
the distance d of its mass center from C, the center of the spherical wrist. 
5.3 A planar three-axis manipulator is shown in Fig. 5.21, with ai = a2 = 
(23 = 1 m. When a wrench acts onto the EE of this manipulator, the joint 
motors exert torques that keep the manipulator under static equilibrium. 
Readouts of these joint torques are recorded when the manipulator is in 
the posture 6i = 02 = 9s = 45Â°, namely, 
n = -y/2 Nm, 
r2 = - \ / 2 Nm, 
TS = 1 - \/2 Nm 
Calculate the above-mentioned wrench. 
P(x,y) 
Figure 5.21: A planar three-axis manipulator 
5.4 For the two postures found in Exercise 4.7, the EE is to move with an an-
gular velocity a? = [cji, UJ2^ ^3]^ s~^. Show that if ||cÂ«;|| remains constant, 
then so does ||0||, for 6 defined as the joint-rate vector of the wrist. 
5.5 Point C of the manipulator of Fig. 4.15 is to move with a velocity v in 
the posture displayed in that figure. Show that as long as ||v|| remains 
constant, so does ||0||, for 0 defined as the joint-rate vector. Moreover, 
let us assume that in the same posture, point C is to attain a given accel-
eration a. In general, however, ||0||, where 0 denotes the corresponding 
joint-acceleration vector, does not necessarily remain constant under a 

5.9 Exercises 
229 
constant ||a||. Under which conditions does ||a|| remain constant for a 
constant ||^||? 
5.6 A load f is applied to the manipulator of Fig. 4.15 in the posture displayed 
in that figure. Torque cells at the joints are calibrated to supply torque 
readouts resulting from this load only, and not from the dead loadâits 
own weightâof the manipulator. Show that under a constant-magnitude 
load, the magnitude of the joint-torque vector remains constant as well. 
5.7 Shown in Fig. 4.20 is the kinematic chain of an industrial robot, like the 
ABB-IRB 1000, which contains five revolutes and one prismatic pair. 
(a) Determine the manipulator Jacobian in the Xi, l i , Zi coordinate 
frame fixed to the base. 
(b) Determine the twist of the end-effector, defined in terms of the ve-
locity of point P, for unit values of all joint-rates, and the posture 
displayed in the same figure. 
(c) Determine the joint accelerations that will produce a vanishing accel-
eration of the point of intersection, C, of the three wrist axes and a 
vanishing angular acceleration of the gripper, for the unit joint rates 
given above. 
5.8 The robot in Fig. 4.20 is now used for a deburring task. When the robot is 
in the configuration shown in that figure, a static force f and no moment 
acts on point P of the deburring tool. This force is sensed by torque sensors 
placed at the joints of the robot. Assume that the distance between the 
operating point P and the wrist center is 500 mm and that the readings 
of the arm joints are n = 0, r2 = 100 Nm, and rs = 50 Nm. 
(a) Find the force f acting at P. 
(b) Find the readings of the torque sensors placed at the wrist joints. 
5.9 A decoupled manipulator is shown in Fig. 10.3 with the DH parameters 
of Table 10.1 at arbitrary posture. 
(a) Find the Jacobian matrix of this manipulator at a posture with axis 
Xi vertical and pointing downwards, while Z2 and Yi make an angle 
of 180Â°. Moreover, in this particular posture, Z3 and Z4 are vertical 
and pointing upwards, while Z7 makes an angle of 180Â° with Yi. 
(b) At the posture described in item (a), compute the joint-rates that 
will produce the twist 
[w]i = 
1 
1 
1 
CJ, 
[p]l = 
'1 
1 
1 

230 
5. Kinetostatics of Serial Robots 
(c) A wrench given by a moment n and a force f applied at point P 
acts on the EE of the same manipulator at the posture described in 
item (a) above. Calculate the joint torques or moments required to 
balance this wrench, which is given by 
[n]i = 
T, 
[f]i 
5.10 Dialytic elimination. The characteristic polynomial of decoupled ma-
nipulators for positioning tasks can be derived alternatively via dialytic 
elimination, as introduced in Subsection 5.4.1. It is recalled here that 
dialytic elimination consists in eliminating one unknown from a system 
of polynomial equations by expressing this system in linear homogeneous 
form, whereby each equation is a linear combination of various successive 
powers of the unknown to be eliminated, including the zeroth power. This 
ehmination can be achieved as outlined below: In eqs.(4.19a) and (4.20a), 
express cos^i and sin^i in terms of tan(6i/2) = ti, thereby obtaining 
{-A + Ccs + DS3 -i- E)tl + 2Bti + {CC3 + DS3 -{â¢ E + A) = 0 
(H C3 + I S3 + J)tl + {2G - F)ti + {H C3 + I S3 + J + F) = 0 
which can be further expressed as 
mtl-\-2Bti 
+n = 0 
ptj-h{2G-F)ti+q 
= 0 
with obvious definitions for coefficients m, n, p, and q. Next, both sides 
of the two foregoing equations are multiplied by ti, thereby producing 
mtl-{-2Btl-{-nti 
=0 
ptl + {2G-F)tl-\-qti 
=0 
Now, the last four equations can be regarded as a system of linear homo-
geneous equations, namely, 
Mti = 0 
where 0 is the 4-dimensional zero vector, while M is a 4 x 4 matrix, and 
ti is a 4-dimensional vector. These arrays are defined as 
M = 
Apparently, ti 7^ 0, and hence, M must be singular. The characteristic 
polynomial sought can then be derived from the condition 
0 
0 
m 
P 
m 
2B 
n' 
p 
2G-F 
q 
2B 
n 
0 
2G-F 
q 
0. 
, 
ti = 
r^'i 
4 
h 
. 1 . 
det(M) = 0 

5.9 Exercises 
231 
Show that the last equation is quadratic in cos 63 and sin 63. Hence, the 
foregoing equation should lead to a quartic equation in tan(^3/2). Derive 
the quartic equation involved. Hint: Do not do this by hand, for it may 
be too time-consuming and could quickly lead to algebraic mistakes. Use 
software for symbolic computations instead. 
5.11 Compute the workspace volume of the manipulator of Fig. 4.3. Here, you 
can exploit the axial symmetry of the workspace by recalling the Pappus-
Guldinus Theoremsâsee any book on multivariable calculusâthat yield 
the volume as 27r^, with q defined as the first moment of the cross-section, 
which is displayed in Fig. 5.4(b), with respect to the axis of symmetry, Zi. 
To this end, you will need the first moment of a semicircle with respect 
to its diameter. This information is tabulated in books on elementary 
mechanics or multivariable calculus, a.k.a. advanced calculus. 
5.12 Compute the workspace volume of the manipulator of Fig. 4.15, whose 
workspace is sketched in Fig. 5.5. Here, you can also use the Pappus-
Guldinus Theorem, as suggested in Exercise 5.11. However, the first mo-
ment of the cross-section has to be determined numerically, for the area 
properties of the curve that generates the 3-dimensional workspace are 
not tabulated. Now, for two manipulators, the Puma-type and the one 
under discussion, with the same reach, determine which one has the larger 
workspace. Note: This exercise is not more difficult than others, but it 
requires the use of suitable software for the calculation of area properties 
of planar regions bounded by arbitrary curves. Unless you have access to 
such software, do not attempt this exercise. 
5.13 Show that the maximum manipulability JJL = y^det(JJ^) of an orthog-
onal spherical wrist is attained when all three of its axes are mutually 
orthogonal. Find that maximum value. 
5.14 Find an expression for the condition number of a three-revolute spherical 
wrist of twist angles a^ and as, and show that this number depends only on 
a4, 0:5, and the intermediate joint angle, 6^. Moreover, find values of these 
variables that minimize the condition number of the manipulator. Hint: 
To find the required expression, the use of the condition number based 
on the Frobenius norm is strongly recommended. However, rendering the 
Jacobian matrix isotropic can be done by inspection. 
5.15 Manipulability of decoupled manipulators. Let //a and fiu) represent 
the manipulability of the arm and the wrist of a decoupled manipulator, 
i.e., 
IXa ^ y det(J2iJji), liw = ydet(Ji2Jf2) 
with J12 and J21 defined in Section 5.2. Show that the manipulability // 
of the overall manipulator is the product of the two manipulabilities given 
above, i.e.. 

232 
5. Kinetostatics of Serial Robots 
5.16 Consider a planar two-revolute manipulator with link lengths ai and a2. 
Find an expression of the form ^(r, ^2) for the condition number of its 
Jacobian, with r = a^/ai^ and establish values of r and 62 that minimize 
K, which reaches a minimum value of unity. 
5.17 Shown in Fig. 5.12 is an orthogonal three-revolute manipulator with an 
isotropic Jacobian. Find the volume of its workspace. Now consider a 
second manipulator with a similar orthogonal architecture, but with more 
common dimensions, i.e., with links of equal length A. If the two manip-
ulators have the same reach, that is, if 
A - 
2 
' 
find the volume of the workspace of the second manipulator. Finally, deter-
mine the KCIâsee Section 5.8 for a definition of this termâof the second 
manipulator. Draw some conclusions with regard to the performance of 
the two manipulators. 

Chapter 6 
Trajectory Planning: 
Pick-and-Place Operations 
6.1 
Introduction 
The motions undergone by robotic mechanical systems should be, as a rule, 
as smooth as possible; i.e., abrupt changes in position, velocity, and acceler-
ation should be avoided. Indeed, abrupt motions require unlimited amounts 
of power to be implemented, which the motors cannot supply because of their 
physical limitations. On the other hand, abrupt motion changes arise when the 
robot collides with an object, a situation that should also be avoided. While 
smooth motions can be planned with simple techniques, as described below, 
these are no guarantees that no abrupt motion changes will occur. In fact, if 
the work environment is cluttered with objects, whether stationary or mobile, 
collisions may occur. Under ideal conditions, a flexible manufacturing cell is 
a work environment in which all objects, machines and workpieces alike, move 
with preprogrammed motions that by their nature, can be predicted at any in-
stant. Actual situations, however, are far from being ideal, and system failures 
are unavoidable. Unpredictable situations should thus be accounted for when 
designing a robotic system, which can be done by supplying the system with 
sensors for the automatic detection of unexpected events or by providing for 
human monitoring. Nevertheless, robotic systems find applications not only in 
the well-structured environments of flexible manufacturing cells, but also in un-
structured environments such as exploration of unknown terrains and systems 
in which humans are present. The planning of robot motions in the latter case 
is obviously much more challenging than in the former. Robot motion planning 
in unstructured environments calls for techniques beyond the scope of those 
studied in this book, involving such areas as pattern recognition and artificial 
intelligence. For this reason, we have devoted this book to the planning of robot 

234 
6. Trajectory Planning: Pick-and-Place Operations 
motions in structured environments only. 
Two typical tasks call for trajectory planning techniques, namely, 
â¢ pick-and-place operations (PPO), and 
â¢ continuous paths (CP). 
We will study PPO in this chapter, with Chapter 11 devoted to CP. More-
over, we will focus on simple robotic manipulators of the serial type, although 
these techniques can be directly applied to other, more advanced, robotic me-
chanical systems. 
6.2 
Background on PPO 
In PPO, a robotic manipulator is meant to take a workpiece from a given ini-
tial pose, specified by the position of one of its points and its orientation with 
respect to a certain coordinate frame, to a final pose, specified likewise. How-
ever, how the object moves from its initial to its final pose is immaterial, as 
long as the motion is smooth and no collisions occur. Pick-and-place operations 
are executed in elementary manufacturing operations such as loading and un-
loading of belt conveyors, tool changes in machine tools, and simple assembly 
operations such as putting roller bearings on a shaft. The common denomina-
tor of these tasks is material handling, which usually requires the presence of 
conventional machines whose motion is very simple and is usually characterized 
by a uniform velocity. In some instances, such as in packing operations, a set 
of workpieces, e.g., in a magazine, is to be relocated in a prescribed pattern 
in a container, which constitutes an operation known as palletizing. Although 
palletizing is a more elaborate operation than simple pick-and-place, it can be 
readily decomposed into a sequence of the latter operations. 
It should be noted that although the initial and the final poses in a PPO 
are prescribed in the Cartesian space, robot motions are implemented in the 
joint space. Hence, the planning of PPO will be conducted in the latter space, 
which brings about the need of mapping the motion thus planned into the 
Cartesian space, in order to ensure that the robot will not collide with other 
objects in its surroundings. The latter task is far from being that simple, since 
it involves the rendering of the motion of all the moving links of the robot, 
each of which has a particular geometry. An approach to path planning first 
proposed by Lozano-Perez (1981) consists of mapping the obstacles in the joint 
space, thus producing obstacles in the joint space in the form of regions that 
the joint-space trajectory should avoid. The idea can be readily implemented 
for simple planar motions and simple geometries of the obstacles. However, for 
general 3-D motions and arbitrary geometries, the computational requirements 
make the procedure impractical. A more pragmatic approach would consist 
of two steps, namely, (i) planning a preliminary trajectory in the joint space, 
disregarding the obstacles, and (it) visually verifying if collisions occur with 
the aid of a graphics system rendering the animation of the robot motion in the 

6.2 Background on PPO 
235 
presence of obstacles. The availability of powerful graphics hardware enables the 
fast animation of robot motions within a highly realistic environment. Shown in 
Fig. 6.1 is a still image of the animation produced by RVS, the McGill University 
Robot- Visualization System, of the motion of a robot performing a palletizing 
operation. Commercial software for robot-motion rendering is available. 
Figure 6.1: Still image of the animation of a palletizing operation 
By inspection of the kinematic closure equations of robotic manipulatorsâ 
see eqs.(4.5a & b)âit is apparent that in the absence of singularities, the map-
ping of joint to Cartesian variables, and vice versa, is continuous. Hence, a 
smooth trajectory planned in the joint space is guaranteed to be smooth in the 
Cartesian space, and the other way around, as long as the trajectory does not 
encounter a singularity. 
In order to proceed to synthesize the joint trajectory, we must then start by 
mapping the initial and final poses of the workpiece, which is assumed to be 
rigidly attached to the EE of the manipulator, into manipulator configurations 
described in the joint space. This is readily done with the methods described 
in Chapter 4. Let the vector of joint variables at the initial and final robot 
configurations be denoted by 9i and Op, respectively. Moreover, the initial 
pose in the Cartesian space is defined by the position vector p / of the operation 
point P of the EE and a rotation matrix Q/. Likewise, the final pose in the 
Cartesian space is defined by the position vector pp of P and the rotation matrix 

236 
6. Trajectory Plajining: Pick-and-Place Operations 
QF. Moreover, let p/ and p/ denote the velocity and acceleration of P, while ujj 
and dJi denote the angular velocity and angular acceleration of the workpiece, 
all of these at the initial pose. These variables at the final pose are denoted 
likewise, with the subscript / changed to F. Furthermore, we assume that time 
is counted from the initial pose, i.e., at this pose, t = 0. If the operation takes 
place in time T, then at the final pose, t = T. We have thus the set of conditions 
that define a smooth motion between the initial and the final poses, namely. 
p(0) = PI 
Q(0) = Q/ 
p(T) = PF 
Q(T) = QiP 
P(0) = 0 
a;(0) = 0 
p(T) = 0 
w(T) = 0 
p(0) = 0 
w(0) = 0 
p(T) = 0 
w(T) = 0 
(6.1a) 
(6.1b) 
(6.1c) 
(6.1d) 
In the absence of singularities, then, the conditions of zero velocity and accel-
eration imply zero joint velocity and acceleration, and hence, 
6(0) = Oi 
e{T) = OF 
6(0) = 0 
e{T) = 0 
6>(0) = 0 
e{T) = 0 
(6.2a) 
(6.2b) 
6.3 
Polynomial Interpolation 
A simple inspection of conditions (6.2a) and (6.2b) reveals that a linear interpo-
lation between initial and final configurations will not work here, and neither will 
a quadratic interpolation, for its slope vanishes only at a single point. Hence, 
a higher-order interpolation is needed. On the other hand, these conditions 
imply, in turn, six conditions for every joint trajectory, which means that if a 
polynomial is to be employed to represent the motion of every joint, then this 
polynomial should be at least of the fifth degree. We thus start by studying 
trajectory planning with the aid of a 5th-degree polynomial. 
6.3.1 
A 3-4-5 Interpolating Polynomial 
In order to represent each joint motion, we use here a fifth-order polynomial 
s(r), namely, 
s{r) = ar^ + 6r^ + cr^ -h dr^ + er -f / 
(6.3) 
such that 
and 
0 < s < l , 
0 < r < l 
(6.4) 
r=^ 
(6.5) 

6.3 Polynomial Interpolation 
237 
We will thus aim at a normal polynomial that, upon scaling both its argument 
and the polynomial itself, will allow us to represent each of the joint variables 
Oj throughout its range of motion, so that 
ejit) = e'j+{ef-ej)s{T) 
(6.6a) 
where 9j and Oj" are the given initial and final values of the jth joint variable. 
In vector form, eq.(6.6a) becomes 
e{t) = 01 + {OF - ei)s{T) 
(6.6b) 
and hence, 
Likewise, 
m 
= {OF - ei)s'{T)f{t) 
= {QF - ei)^s'{T) 
(6.6c) 
e{t)=:^{eF-ej)s"{T) 
(6.6d) 
and 
e{t) = ^^{eF-ei)s"'{T) 
(6.6e) 
What we now need are the values of the coefficients of s(r) that appear in 
eq.(6.3). These are readily found by recalling conditions (6.2a & b), upon con-
sideration of eqs.(6.6b-d). We thus obtain the end conditions for S(T), namely, 
5(0) = 0, 
5^(0) = 0, 
s"{(d) = 0, 
5(1) = 1, 
s\l) = 0, 
s'\\) 
= 0 
(6.7) 
The derivatives of s(r) appearing above are readily derived from eq.(6.3), i.e., 
s'{r) = bar^ + Ahr^ + 3CT^ + 2dr + e 
(6.8) 
and 
S"{T) = 20ar^ + Ubr'^ + 6cr + 2d 
(6.9) 
Thus, the first three conditions of eq.(6.7) lead to 
f =e = d = 0 
(6.10) 
while the last three conditions yield three linear equations in a, &, and c, namely, 
a + fe-fc = l 
(6.11a) 
6a-{-4b+ 30 = 0 
(6.11b) 
20a+126 +6c = 0 
(6.11c) 
Upon solving the three foregoing equations for the three aforementioned un-
knowns, we obtain 
a = 6, 
6 = -15, 
c = 10 
(6.12) 

238 
6. Trajectory Planning: Pick-and-Place Operations 
and hence, the normal polynomial sought is 
S{T) = 6r^ -ISr"^ -\- lOr^ 
(6.13) 
which is called a 3-4-5 polynomial 
This polynomial and its first three derivatives, all normalized to fall within 
the (â1,1) range, are shown in Fig. 6.2. Note that the smoothness conditions 
imposed at the outset are respected and that the curve thus obtained is a mono-
tonically growing function of r, a rather convenient property for the problem at 
hand. 
0.8 
0.6 
0.4 
0.2 
0 
-0.2 
-0.4 
-0.6 
-0.8 
1 
-^^ 
-T-;- 
1 
1 
â5= 
1 
==-^;^ 
1 
1 
1
^ 
h- 
n 
/ 
N '' 
^ ^ ^ 
â¢ / 
/ 
\ 
y ^ 
^^ 
/ 
/ 
^ 
y ^ 
^^ 
' 
â¢ 
'^^ 
^ y ^ 
^\ 
y^ \ 
' 
/
\
^
^ 
^y 
I 
^ 
_
^
^
'
'
^
'
"
^ 
^ 
â¢â¢ 
^ 
>v 
^
-
^
â
"
â¢
" 
' 
'-. 
\ 
^
"
-
\ 
.â¢â¢â¢ 
/ 
\ 
. â¢ â¢ 
/ 
- s 
â¢.. 
\ 
,.â¢â¢ 
/â¢-
\ 
, â¢ â¢ â¢ 
/â¢ 
^ / ^ m a x 
\.- â¢ 
/ 
' 
â¢ â¢ â¢ â¢ 
â¢ â¢ â¢ â¢ 
\ 
/ 
off 1 off 
- 
^ 
â¢ 
-
^ 
1 *max 
^. 
/ 
\. 
/ 
- Jii 
IJif 
\ 
/ ' 
* 
/ ^ i n a x 
N. 
/ 
/ 
N â¢ ^ 
y 
\ 
1 
1 
1 
1 
1 
1 
1 
L^.. 
l ^ L 
1 
0 
0.1 
0.2 
0.3 
0.4 
0.5 
0.6 
0.7 
0.8 
0.9 
1 
r 
Figure 6.2: 3-4-5 interpolation polynomial and its derivatives 
It is thus possible to determine the evolution of each joint variable if we 
know both its end values and the time T required to complete the motion. If no 
extra conditions are imposed, we then have the freedom to perform the desired 
motion in as short a time T as possible. Note, however, that this time cannot 
be given an arbitrarily small value, for we must respect the motor specifications 
on maximum velocity and maximum torque, the latter being the subject of 
Chapter 7. In order to ease the discussion, we limit ourselves to specifications 
of maximum joint velocity and acceleration rather than maximum torque. From 
the form of function 6j{t) of eq.(6.6a), it is apparent that this function takes on 
extreme values at points corresponding to those at which the normal polynomial 
attains its extrema. In order to find the values of r at which the first and second 
derivatives of s(r) attain maximum values, we need to zero its second and third 

6.3 Polynomial Interpolation 
239 
derivatives. These derivatives are displayed below: 
s'(r) = 30r^ - 60r^ + 30r^ 
(6.14a) 
s"(r) = 120r^ - 180r^ + 60r 
(6.14b) 
S'"{T) = 360r2 - 360r + 60 
(6.14c) 
from which it is apparent that the second derivative vanishes at the two ends 
of the interval 0 < r < 1. Additionally, the same derivative vanishes at the 
midpoint of the same interval, i.e., at r = 1/2. Hence, the maximum value of 
s'(r), sjnaxj is readily found as 
<a.-'(i)=f 
(6.15) 
and hence, the maximum value of the jth joint rate takes on the value 
(OJU. 
= 
'-^^^^ 
(6.16) 
which becomes negative, and hence, a local minimum, if the difference in the 
numerator is negative. The values of r at which the second derivative attains 
its extreme values are likewise determined. The third derivative vanishes at two 
intermediate points ri and T2 of the interval 0 < r < 1, namely, at 
n . = i Â± f 
(6.17) 
and hence, the maximum value of S"{T) is readily found as 
'l 
y/3\ 
10\/3 
2 
6 
while the minimum is given as 
10\/3 
(6.18) 
(6.19) 
Therefore, the maximum value of the joint acceleration is as shown below: 
. 
_10^/3(^f-g}) 
ic^jjmax - â^ 
j ; ^ 
(O.iUj 
Likewise, 
C,^ = s"'{o) = s"'{i) = m 
and hence, 
(^i)max = 6 0 - ^ ^ ^ 
(6.21) 
Thus, eqs.(6.16) and (6.20) allow us to determine T for each joint so that the 
joint rates and accelerations lie within the allowed limits. Obviously, since the 
motors of different joints are different, the minimum values of T allowed by the 
joints will be, in general, different. Of those various values of T, we will, of 
course, choose the largest one. 

240 
6. Trajectory Planning: Pick-and-Place Operations 
6.3.2 
A 4-5-6-7 Interpolating Polynomial 
Now, from eq.(6.14c), it is apparent that the third derivative of the normal 
polynomial does not vanish at the end points of the interval of interest. This 
implies that the third time derivative of Oj{t), also known as the joint jerk, 
does not vanish at those ends either. It is desirable to have this derivative as 
smooth as the first two, but this requires us to increase the order of the normal 
polynomial. In order to attain the desired smoothness, we will then impose two 
more conditions, namely, 
s'''(0) = 0, 
y ' ' ( l ) - 0 
(6.22) 
We now have eight conditions on the normal polynomial, which means that 
the polynomial degree should be increased to seven, namely, 
S{T) = ar^ + hr^ + cr^ + dr^ + er^ + fr'^ + gr + h 
(6.23a) 
whose derivatives are readily determined as shown below: 
S'{T) = 7ar^ + dbr^ + 5cr^ + 4dr^ + 3er^ + 2/r + ^ 
(6.23b) 
s'\r) = 42ar^ + SObr^ + 2Qcr^ + 12dT^ + 6er + 2/ 
(6.23c) 
s'''(r) == 210ar^ + 1206r^ + 60cr'^ + 24dr + 6e 
(6.23d) 
The first three conditions of eq.(6.7) and the first condition of eq.(6.22) readily 
lead to 
e = f = 9 = h = 0 
(6.24) 
Furthermore, the last three conditions of eq.(6.7) and the second condition of 
eq.(6.22) lead to four linear equations in four unknowns, namely, 
a-\-b + c + d=l 
(6.25a) 
7a + 66 + 5c + 4d = 0 
(6.25b) 
42a + 306 4- 20c + 12d = 0 
(6.25c) 
210a + 1206 + 60c + 24d = 0 
(6.25d) 
and hence, we obtain the solution 
a = -20, 
6 = 70, 
c = - 8 4 , 
d = 3b 
(6.26) 
the desired polynomial thus being 
S{T) = -20r'^ + 70r^ - 84r^ + 35r^ 
(6.27) 
which is a 4^-5-6-7 polynomial. This polynomial and its first three derivatives, 
normalized to fall within the range (â1,1), are plotted in Fig. 6.3. Note that the 
4-5-6-7 polynomial is similar to that of Fig. 6.2, except that the third derivative 
of the former vanishes at the extremes of the interval of interest. As we will 

6.3 Polynomial 
Interpolation 
241 
1 
0.8 
0.6 
0.4 
0.2 
0 
-0.2 
-0.4 
-0.6 
-0.8 
-1 
S 
s'ls 
sys: 
11J max 
It 
loll 
max 
\ 
/^ 
III I oil I 
max 
_ j 
i _ 
0 
0.1 
0.2 
0.3 
0.4 
0.5 
0.6 
0.7 
0.8 
0.9 
1 
r 
Figure 6.3: 4-5-6-7 interpolating polynomial and its derivatives 
presently show, this smoothness has been obtained at the expense of higher 
maximum values of the first and second derivatives. 
We now determine the maximum values of the velocity and acceleration pro-
duced with this motion. To this end, we display below the first three derivatives, 
namely. 
S\T) = -140r^ 4- 420T^ - 420r^ 4- 140r3 
S''{T) = - 8 4 0 T ^ + 2100r^ - 1680r^ + 420r^ 
S'"{T) = -4200r^ + 8400r^ - 5040r^ + 840T 
(6.28a) 
(6.28b) 
(6.28c) 
The first derivative attains its extreme values at points where the second deriva-
tive vanishes. Upon zeroing the latter, we obtain 
T ^ ( - 2 T ^ + 5r^ - 4T + 1) =- 0 
(6.29) 
which clearly contains a double root at r = 0. Moreover, the cubic polynomial 
in the parentheses above admits one real root, namely, r = 1/2, which yields 
the maximum value of s'(r), i.e., 
' 1 \ _ 3 5 
,2j - 16 
whence the maximum value of the jth joint rate is found as 
^ 3 5 ( g ; - g ; ) 
16T 
{Oi). 
(6.30) 
(6.31) 

242 
6. Trajectory Planning: Pick-and-Place Operations 
Likewise, the points of maximum joint acceleration are found upon zeroing 
the third derivative of 5(r), namely, 
s'"(r) = -4200T'* + 8400r^ - 5040T^ + 840r = 0 
(6.32) 
or 
r{r - l)(5r^ - 5r + 1) = 0 
(6.33) 
which yields, in addition to the two end points, two intermediate extreme points, 
namely, 
n,a = i Â± ^ 
(6.34) 
and hence, the maximum value of acceleration is found to be 
4ax = s"{n) = ^ 
(6.35) 
the minimum occurring at r = r2, with s'J^^^ = â Smax- The maximum value of 
the jih joint acceleration is thus 
(^.W = ? i ^ ( ^ ) 
(e.3e) 
which becomes a minimum if the difference in the numerator is negative. Like-
wise, the zeroing of the fourth derivative leads to 
- 2 0 T ^ + 30r2 - 12r + 1 = 0 
whose three roots are 
1 - V ^ 
1 
l + \/375 
n â 
^_ 
â 
^, 
and hence. 
Ti = 
^ 
, 
n = -, 
n 
i.e., 
ma.x{\s"'iT)\}^^ 
= sZ 
(6.37) 
As in the case of the fifth-order polynomial, it is possible to use the forego-
ing relations to determine the minimum time T during which it is possible to 
perform a given PPO while observing the physical limitations of the motors. 

6.4 CycloidaJ Motion 
243 
0.8 
0.6 
0.4 
0.2 
0 
-0.2 
-0.4 
-0.6 
-0.8 
_
_ 
, 
J
_
_ 
â¢
.
. 
, 
s 
/ ^ 
/ 
â¢â¢' 
N 
/ 
\ 
^ 
\ / 
\ / 
/ â¢ > 
/ \ 
- 
'' ^ 
^^ 
^ 
\ 
.y^ 
â¢
^ 
â¢
^
^
'
^
"
^ 
_^ "^ 
. 
. 
â " 
\ 
\ 
s 
\ 
'^V^max"""' 
\ 
^ /^max 
- JH 1 Jii 
* / ^max 
, 
, 
1 
' ^ " 
y 
\ 
\ 
1 
'â¢^ 
â T 
= - ; ; | 
1 
N 
S 
'':/ 
/ ' â¢ . 
/ 
^ . ^ â¢ ^ 
1 
^^ 
/ 
\ 
,â¢ 
\ 
/ 
\ 
/ 
\ 
/ 
\ 
1 
1 \ 
/ "^ \ 
1 
\ 
; 
X 
/ 
^ 
/ 
/ 
/ 
/ 
V â¢ . . 
. . â¢ â¢; 
1 
0.1 
0.2 
0.3 
0.4 
0.5 
0.6 
0.7 
0.8 
0.9 
1 
r 
Figure 6.4: The normal cycloidal motion and its time derivatives 
6.4 
Cycloidal Motion 
An alternative motion that produces zero velocity and acceleration at the ends 
of a finite interval is the cycloidal motion. In normal form, this motion is given 
by 
s(r) = r - -â sin27rr 
(6.38a) 
its derivatives being readily derived as 
S'{T) = l-cos27rr 
(6.38b) 
s''(r) =27rsin27rr 
(6.38c) 
S''^{T) =47r^cos27rr 
(6.38d) 
The cycloidal motion and its first three time-derivatives, normalized to fall 
within the range (â1,1), are shown in Fig. 6.4. Note that while this motion, 
indeed, has zero velocity and acceleration at the ends of the interval 0 < r < 1, 
its jerk is nonzero at these points and hence, exhibits jump discontinuities at 
the ends of that interval. 
When implementing the cycloidal motion in PPO, we have, for the jth joint. 
QF _ Ql 
hit) 
T 
rp2 
(6.39a) 
(6.39b) 
(6.39c) 

244 
6. Trajectory Planning: Pick-and-Place Operations 
Moreover, as the reader can readily verify, under the assumption that Of > 6j, 
this motion attains its maximum velocity at the center of the interval, i.e., at 
r = 0.5, the maximum being 
^max = S'(0.5) = 2 
and hence, 
(^i)max = | Â« - e ; ) 
(6.40a) 
Likewise, the jth joint acceleration attains its maximum and minimum values 
at r = 0.25 and r = 0.75, respectively, i.e., 
^max = s"{0.25) = s"{0.75) = 27r 
(6.40b) 
and hence, 
{eiU. = ^{0f-e'j), 
i0jUn = -^i0f-e'j) 
(6.40c) 
Moreover, S'"{T) attains its extrema at the ends of the interval, i.e., 
C'a. = Â«"'(0) = s"'(l) = 47r2 
(6.41) 
and hence, 
{ejU.. = ^{ef-ej) 
(6.42) 
Thus, if motion is constrained by the maximum speed delivered by the mo-
tors, the minimum time Tj for the jth joint to produce the given PPO can be 
readily determined from eq. (6.40a) as 
^^ = Â«
^ 
(6.43) 
and hence, the minimum time in which the operation can take place can be 
readily found as 
ir^ 
(6.44) 
Tjnm = 2 max 
If joint-acceleration constraints are imposed, then a similar procedure can be 
followed to find the minimum time in which the operation can be realized. 
As a matter of fact, rather than maximum joint accelerations, maximum joint 
torques are to be respected. How to determine these torques is studied in detail 
in Chapter 7. 

6.5 Trajectories with Via Poses 
245 
6.5 
Trajectories with Via Poses 
The polynomial trajectories discussed above do not allow the specification of 
intermediate Cartesian poses of the EE. All they guarantee is that the Carte-
sian trajectories prescribed at the initial and final instants are met. One way of 
verifying the feasibility of the Cartesian trajectories thus synthesized was out-
lined above and consists of using a graphics system, preferably with animation 
capabilities, to produce an animated rendering of the robot motion, thereby 
allowing for verification of collisions. If the latter occur, we can either try alter-
native branches of the inverse kinematics solutions computed at the end poses 
or modify the trajectory so as to eliminate collisions. We discuss below the 
second approach. This is done with what are called via poses^ i.e., poses of the 
EE in the Cartesian space that lie between the initial and the final poses, and 
are determined so as to avoid collisions. For example, if upon approaching the 
final pose of the PPO, the manipulator is detected to interfere with the surface 
on which the workpiece is to be placed, a via pose is selected close to the final 
point so that at this pose, the workpiece is far enough from the surface. Prom 
inverse kinematics, values of the joint variables can be determined that corre-
spond to the aforementioned via poses. These values can now be regarded as 
points on the joint-space trajectory and are hence called via points. Obviously, 
upon plotting each joint variable vs. time, via points appear as points on those 
plots as well. 
The introduction of via points in the joint-space trajectories amounts to an 
increase in the number of conditions to be satisfied by the desired trajectory. 
For example, in the case of the polynomial trajectory synthesized for continuity 
up to second derivatives, we can introduce two via points by requiring that 
S(TI) = SI, 
s{r2) = S2 
(6.45) 
where n , r2, Si, and S2 depend on the via poses prescribed and the instants 
at which these poses are desired to occur. Hence, si and S2 differ from joint 
to joint, although the occurrence instants ri and r2 are the same for all joints. 
Thus, we will have to determine one normal polynomial for each joint. Further-
more, the ordinate values Si and S2 of the normal polynomial at via points are 
determined from the corresponding values of the joint variable determined, in 
turn, from given via poses through inverse kinematics. Once the via values of 
the joint variables are known, the ordinate values of the via points of the nor-
mal polynomial are found from eq.(6.6a). Since we have now eight conditions to 
satisfy, namely, the six conditions (6.7) plus the two conditions (6.45), we need 
a seventh-order polynomial, i.e., 
s{r) = ar^ + br^ + cr^ + dr"^ + er^ + fr'^ + gr + h 
(6.46) 
Again, the first three conditions of eq.(6.7) lead to the vanishing of the last 
three coefficients, i.e., 
f = 9 = h=^0 
(6.47) 

246 
6. Trajectory Planning: Pick-and-Place Operations 
Further, the five remaining conditions are now introduced, which leads to a 
system of five linear equations in five unknowns, namely, 
a-\-h + c + d-\-e = l 
(6.48a) 
7a + 66 + 5c + 4d -f 3e = 0 
(6.48b) 
42a + 30& + 20c + 12d + 6e = 0 
(6.48c) 
rja + rfh + r^c + r^d + rf e = Si 
(6.48d) 
T^a + r|6 + T^c + rld -f r^e = S2 
(6.48e) 
where ri, T2, 5i, and S2 are all data. For example, if the via poses occur at 10% 
and 90% of T, we have 
n = 1/10, 
T2 = 9/10 
(6.48f) 
the polynomial coefficients being found as 
a = 100(12286 + 125005i - 1250052)/729 
(6.49a) 
b = 100(-38001 - 48750S1 + 38750s2)/729 
(6.49b) 
c = (1344358 + 2375000S1 - 1375000s2)/243 
(6.49c) 
d = (-1582435 - 4625000S1 + 1625000^2)/729 
(6.49d) 
e = 10(12159 + 112500S1 - 1250062)/729 
(6.49e) 
The shape of each joint trajectory thus depends on the values of Si and 52 found 
from eq.(6.6a) for that trajectory. 
6.6 
Synthesis of PPO Using Cubic Splines 
When the number of via poses increases, the foregoing approach may become 
impractical, or even unreliable. Indeed, forcing a trajectory to pass through a 
number of via points and meet endpoint conditions is equivalent to interpola-
tion. We have seen that an increase in the number of conditions to be met by 
the normal polynomial amounts to an increase in the degree of this polynomial. 
Now, finding the coefficients of the interpolating polynomial requires solving a 
system of linear equations. As we saw in Section 5.8, the computed solution, 
when solving a system of linear equations, is corrupted with a relative roundoff 
error that is roughly equal to the relative roundoff error of the data multiplied 
by an amplification factor that is known as the condition number of the system 
matrix. As we increase the order of the interpolating polynomial, the associated 
condition number rapidly increases, a fact that numerical analysts discovered 
some time ago (Kahaner et al., 1989). In order to cope with this problem, or-
thogonal polynomials, such as those bearing the names of Chebyshev, Laguerre, 
Legendre, and so on, have been proposed. While orthogonal polynomials allevi-
ate the problem of a large condition number, they do this only up to a certain 
extent. As an alternative to higher-order polynomials, spline functions have 
been found to offer more robust interpolation schemes (Dierckx, 1993). Spline 

6.6 Synthesis of PPO Using Cubic Splines 
247 
functions, or splines, for brevity, are piecewise polynomials with continuity prop-
erties imposed at the supporting points. The latter are those points at which 
two neighboring polynomials join. 
The attractive feature of splines is that they are defined as a set of rather 
lower-degree polynomials joined at a number of supporting points. Moreover, 
the matrices that arise from an interpolation problem associated with a spline 
function are such that their condition number is only slightly dependent on 
the number of supporting points, and hence, splines offer the possibility of 
interpolating over a virtually unlimited number of points without producing 
serious numerical conditioning problems. 
Below we expand on periodic cubic splines, for these will be shown to be 
specially suited for path planning in robotics. 
A cubic spline function s{x) connecting N points Pk {xk, 
yk), ^or k = 
1,2,... ,iV, is a function defined piecewise hy N â 1 cubic polynomials joined 
at the points P^, such that s{xk) = yk- Furthermore, the spline function thus 
defined is twice differentiable everywhere in xi < a: < XN- Hence, cubic splines 
are said to be C^ functions, i.e., to have continuous derivatives up to the second 
order. 
Cubic splines are optimal in the sense that they minimize a functional, i.e., 
an integral defined as 
Jo 
x)dx 
subject to the constraints 
s{xk) = yk, 
k = 
l,...,N 
where Xk and yk are given. The aforementioned optimality property has a 
simple kinematic interpretation: Among all functions defining a motion so that 
the plot of this function passes through a set of points Pi(xi, 5i), ^2(^2, S2), 
..., PN{XN^ 
SN) in the x-s plane, the cubic spline is the one containing the 
minimum acceleration magnitude. In fact, F, as given above, is the square of 
the Euclidean norm (Halmos, 1974) of s"{x), i.e., F turns out to be a measure 
of the magnitude of the acceleration of a displacement program given by s{x), 
if we interpret s as displacement and x as time. 
Let Pk{xk, yk) ctnd Pk-\.i{xk-^i, yk-hi) be two consecutive supporting points. 
The kth cubic polynomial Sk{x) between those points is assumed to be given by 
Sk{x) = Ak{x- 
Xkf +Bk{x- 
Xkf -\-Ck{x- 
Xk) + Dk 
(6.50a) 
for Xk < X < Xk+i' Thus, for the spline s{x), A{N â 1) coefficients Ak, Bk, 
Ck, Dk, for k = 1,..., AT â 1, are to be determined. These coefficients will be 
computed presently in terms of the given function values {sfc}]^ and the second 
derivatives of the spline at the supporting points, {Sk{^k)}i^-, ^ explained below: 
We will need the first and second derivatives of Sk{x) as given above, namely, 
4(x) = 3Ak{x - Xk)^ + 2Bkix - Xk) + Ck 
(6.50b) 
s'lix) = 6Ak{x - Xk) + 2Bk 
(6.50c) 

248 
6. Trajectory Planning: Pick-and-Place Operations 
whence the relations below follow immediately: 
Bk = ^ 4 ' 
(6.51a) 
Ck = s', 
(6.51b) 
Dk = Sk 
(6.51c) 
where we have used the abbreviations 
Sk = s{xk), 
s'k = s'{xk), 
4 = s'^i^k) 
(6.52) 
Furthermore, let 
Axk = Xk+i - Xk 
(6.53) 
From the above relations, we have expressions for coefRcients B^ and Dk in 
terms of s'^ and Sfc, respectively, but the expression for Ck is given in terms 
of sj.. What we would like to have are similar expressions for Ak and Ck, i.e., 
in terms of Sk and s'l. The relations sought will be found by imposing the 
continuity conditions on the spline function and its first and second derivatives 
with respect to x at the supporting points. These conditions are, then, for 
A: = l , 2 , . . . , i V - l , 
Sk{xk+i) = Sk-^i 
(6.54a) 
s'kixk^i) = s',^, 
(6.54b) 
4(^^+i) = 4Vi 
(6.54c) 
Upon substituting s'l(xk-{-i), as given by eq.(6.50c), into eq.(6.54c), we obtain 
6AkAxk + 2Bk = 2Bk+i 
but from eq.(6.51a), we have already an expression for Bk-> and hence, one for 
Bk^i as well. Substituting these two expressions in the above equation, we 
obtain an expression for Ak, namely, 
^fc = 6 ^ ( 4 ' + i - 4 ' ) 
(6-54d) 
Furthermore, if we substitute ^^(a^Aj+i), as given by eq.(6.50a), into eq.(6.54a), 
we obtain 
Ak{Axkf 
+ Bk{Axkf 
+ CkAxk +Dk = Sk-^i 
But we already have values for Ak, Bk and Dk from eqs.(6.54d), (6.51a), and 
(6.51c), respectively. Upon substituting these values in the foregoing equa-
tion, we obtain the desired expression for Ck in terms of function and second-
derivative values, i.e., 
C^-fc = I g - g Ax, (s'Ur + 24) 
(6.54e) 

6.6 Synthesis ofPPO Using Cubic Splines 
249 
In summary, then, we now have expressions for all four coefficients of the fcth 
polynomial in terms of function and second-derivative values at the supporting 
points, namely, 
1 
^ ' " 6 A ^ ^'''='+1 " ''^ 
B. = \s'l 
^^ = IS-^^*(^^'-+24') 
Dk = Sk 
Asfe = Sk+i - Sk 
(6.55a) 
(6.55b) 
(6.55c) 
(6.55d) 
(6.55e) 
with 
Therefore, in order to find the above coefficients, all we need is the set of val-
ues of the second derivatives {s'D^ at the supporting points. To compute these 
values, we impose the continuity condition on the first derivative, eq. (6.54b), 
after substitution of eq. (6.50b), which yields 
SAkiAxk)"" + 2BkAxk +Ck = Cfc+i 
or, if we shift to the previous polynomial, 
SAk-iiAxk-i)'^ 
+ 2Bk-iAxk-i 
+ Ck-i = Cu 
Now, if we substitute expressions (6.55a-c) in the above equation, a linear sys-
tem of TV" â 2 simultaneous equations for the N unknowns {s'l}^ 
is obtained, 
namely. 
{Axk)4^i 
+ 2(Axfc_i + Axk)sl -h 
{Axk-i)sl_^ 
for fc = 2,. 
,A^-
(6.56) 
Axk 
Axk-i^ 
Further, let s be the AT-dimensional vector whose fcth component is s^, with 
vector s'' being defined likewise, i.e.. 
S = [Si,---,Siv] 
ji â \J' 
. . . 
cj'' r 
(6.57) 
The relationship between s and s^' of eq.(6.56) can then be written in vector 
form as 
A s ' ' - 6 C s 
where A and C are (N â 2) x N matrices defined as: 
0 
^3 
(6.58a) 
A = 
ai 
0 
0 
0 
2Q:I,2 
a2 
0 
0 
a2 
2a2,3 
0 
0 1 
0 
Oijsj'" 
2Q;jv'",Ar" 
OiN'f 
0 
(6.58b) 

250 
6. Trajectory Planning: Pick-and-Place Operations 
and 
A 
- A , 2 
p2 
0 
0 
132 
-/52,3 
Ps 
0 
0 
0 
0 
â¢ â¢ â¢ 
/3N"' 
~~PN"' ^N" 
PN" 
0 
0 
0 
0 
â¢â¢â¢ 
PN" 
âPN",N' 
/3iV'J 
(6.58c) 
while for i, j , fc = 1,..., iV â 1, 
and 
iV' = iV - 1, 
N^' = N- 2, 
iV'" = iV - 3 
(6.58d) 
(6.58e) 
(6.58f) 
Thus, two additional equations are needed to render eq.(6.58a) a determined 
system. The additional equations are derived, in turn, depending upon the 
class of functions one is dealing with, which thus gives rise to various types of 
splines. For example, if s'/ and s% are defined as zero, then one obtains natural 
cubic splines, the name arising by an analogy with beam analysis. Indeed, in 
beam theory, the boundary conditions of a simply-supported beam establish the 
vanishing of the bending moments at the ends. Prom beam theory, moreover, 
the bending moment is proportional to the second derivative of the elastica, or 
neutral axis, of the beam with respect to the abscissa along the beam axis in the 
undeformed configuration. In this case, vector s'' becomes of dimension iV â 2, 
and hence, matrix A becomes, correspondingly, of {N â 2) x {N â 2), namely. 
A = 
2ai,2 
a2 
0 
0 
a2 
2a2,3 
0 
0 
0!3 
ajsf'" 
^OLj^iii ^j^ii 
aN" 
0 
0 
OLN" 
2aN",N' 
(6.59) 
On the other hand, if one is interested in periodic functions, which is often 
the case when synthesizing pick-and-place motions, then the conditions Si = SNJ 
^1 ~ "^iv? ^1 â ^N ^^^ imposed, thereby producing periodic cubic splines. The 
last of these conditions is used to eliminate one unknown in eq.(6.58a), while 
the second condition, namely the continuity of the first derivative, is used to 
add an equation. We have, then. 
Si â Sjv 
which can be written, using eq.(6.54b), as 
4 = 5iv-i(^iv) 
(6.60) 
(6.61) 

6.6 Synthesis of PPO Using Cubic Splines 
251 
Upon substituting S'JS^_^{XN), as given by eq.(6.50b), into the above equation, 
we obtain 
s[ = SAN-IAX%_^ 
+ 2BN-I^XN-I 
+ CN-I 
(6.62) 
Now we use eqs.(6.55a-c) and simplify the expression thus resulting, which leads 
to 
2(Aa:i + AxN-i)s'l 
+ Ax^s'i + ^XN-IS'I,_, 
= 6 ( | g - - |
^
) 
(6-63) 
thereby obtaining the last equation required to solve the system of equations 
given by eqs.(6.58a-c). We thus have (TV â 1) independent equations to solve 
for {N â 1) unknowns, namely, sj^', for fc = 1,..., iV â 1, Sjy being equal to s'/. 
Expressions for matrices A and C, as applicable to periodic cubic splines, are 
given in eqs.(11.59a & b). 
While we focused in the above discussion on cubic splines, other types of 
splines could have been used. For example, Thompson and Patel (1987) used 
B-splines in robotics trajectory planning. 
Example 6.6.1 (Approximation of a 4-5-6-7 polynomial with a cubic 
spline) Find the cubic spline that interpolates the 4-5-6-7 polynomial of Fig. 6.3 
with iV -f 1 equally-spaced supporting points and plot the interpolation error for 
N = S andN = 10. 
Solution: Let us use a natural spline, in which case the second derivative at 
the end points vanishes, with vector s'' thus losing two components. That is, 
we now have only N â 1 unknowns { s'^ } ^ to determine. 
Correspondingly, 
matrix A then loses its first and last columns and hence, becomes a square 
(iV â 1) X (iV â 1) matrix. Moreover, 
Axk = â, 
k = 
l,...,N 
and matrices A and C become, correspondingly. 
^=N 
4 
1 
1 
4 
0 
1 
and 
C = N 
0 
... 
0 
0 
- 2 
1 
1 
- 2 
0 
1 
4 
1 
1 
4 
0 
0 
0 
0 
0 
0 
â¢â¢â¢ 
1 
- 2 
1 
0 
.0 
0 
0 
â¢â¢â¢ 
1 
- 2 
1. 
the vector of second derivatives at the supporting points, s", then being readily 
obtained as 
s" = 6A-iCs 

252 
6. Trajectory Planning: Pick-and-Place Operations 
Figure 6.5: Errors in the approximation of a 4-5-6-7 polynomial with a natural 
cubic spline, using four supporting points 
With the values of the second derivatives at the supporting points known, the 
calculation of the spline coefficients Ak, Bk,Ck, and iP^;, for A: = 1,..., iV, is now 
straightforward. Let the interpolation error, e{x), be defined as e{x) = s(x) â 
p{x), where s{x) is the interpolating spline and p{x) is the given polynomial. 
This error and its derivatives e'{x), e"{x), and e'"{x) are plotted in Figs. 6.5 
and 6.6 for A^" = 3 and N = 10, respectively. What we observe is an increase of 
more than one order of magnitude in the error as we increase the order of the 
derivative by one. Thus, the order of magnitude of acceleration errors is usually 
higher than two orders of magnitude above the displacement errors, a fact that 
should not be overlooked in applications. 
6.7 
Exercises 
6.1 A common joint-rate program for pick-and-place operations is the trape-
zoidal profile of Fig. 6.7, whereby we plot s'(r) vs. r, using the notation 
introduced in Chapter 7, i.e., with s{r) and r defined as dimensionless 
variables. Here, S^{T) starts and ends at 0. From its start to a value 
'^1? ^\^) grows linearly, until reaching a maximum sJnaxJ then, this func-
tion remains constant until a value T2 is reached, after which the function 
decreases linearly to zero at the end of the interval. 
Clearly, this profile has a discontinuous acceleration and hence, is bound 

6.7 Exercises 
âx10"' 
253 
e 
e' 
^n 
e 
in 
e: 
o 
0 
' 
0 
0.1 
0.02 
0 
-0.02 
C 
0.5 
0 
-0.5 
C 
20 
0 
-20 
1 
1 
) 
0.1 
/-^ ! 
1 
) 
0.1 
1 
0.2 
! 
0.2 
1 
1 
0.2 
0.3 
1 
0.3 
1 
1 
0.3 
I 
0.4 
1 
1 
0.4 
1 
1 
0.4 
0.5 
X 
1 
1 
0.5 
X 
! 
1 
0.5 
X 
: 
1 
0.6 
1 
1 
0.6 
! 
1 
0.6 
1 
1 
0.7 
1 
0.7 
1 
1 
0.7 
\ 
0.8 
1 
1 
0.8 
1 
1 
0.8 
1 
0.9 
1 
! 
^^ ^A. -j 
0.9 
1 
1 
1 
^ - ^ 
0.9 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
0 
0.1 
0.2 
0.3 
0.4 
0.5 
0.6 
0.7 
0.8 
0.9 
1 
X 
Figure 6.6: Errors in the approximation of a 4-5-6-7 polynomial with a natural 
cubic spline, using eleven supporting points 
to produce shock and vibration. However, the profile can be smoothed 
with a spline interpolation as indicated below. 
(a) Find the value of s'^^^^ in terms of ri and T2 so that s(0) = 0 and 
s(l) = 1. 
(b) Plot S{T) with the value of sj^^x found above and decompose it into 
a linear part SI{T) and a periodic part Sp(r). 
(c) Sample S{T) with N equally spaced points and find the periodic spline 
that interpolates Sp(r), for ri = 0.2 and T2 = 0.9. Try various 
values of N and choose the one that (a) is the smallest possible, (b) 
gives a "good" approximation of the original 5(r), and (c) yields the 
best-behaved acceleration program, i.e., an acceleration profile that 
is smooth and within reasonable bounds. Discuss how you would go 
about defining a reasonable bound. 
6.2 An alternative approach to the solution of the foregoing smoothing prob-
lem consists in solving an inverse interpolation problem: Plot the accel-
eration program of the foregoing joint-rate plot, s''{r). Now, sample a set 
of N equally spaced points of s'' (r) and store them in an iV-dimensional 
array s". Next, find the ordinates of the supporting points of the interpo-
lating periodic spline and store them in an array s of suitable dimension. 

254 
6. Trajectory Planning: Pick-and-Place Operations 
'max 
T i 
T2 
1 
T 
Figure 6.7: A trapezoidal joint-rate profile 
Note that s'' does not contain information on the linear part of s(r). You 
will have to modify suitably your array s so that it will produce the cor-
rect abscissa values of the interpolated curve s(r), with s(0) = 0 and 
5(1) = 1. Moreover, s{r) must be monotonic. Try various values of N and 
choose the smallest one that gives a well-behaved acceleration program, 
as described in Exercise 6.1. 
6.3 One more approach to smoothing the joint-rate profile of Fig. 6.7 is to 
use cycloidal motions. To this end, define a segment of a cycloidal-motion 
function between r = 0 and r = ri, so that s^{ri) = sj^^, for s'^^^^. as 
indicated in the same figure. Further, define a similar segment between 
T = T2 and T = 1 so that S'{T2) = sj^ax ^^^ ^'(1) = 0- Then, join the 
two segments with a line of slope sj^^x- ^^^^ ^^^ displacement, velocity, 
and acceleration of the smoothed motion. Note that the smoothed profile 
must meet the end conditions s(0) = 0 and s(l) = 1, and that you may 
have to introduce a change of variable to shrink the corresponding s'(r) 
segment to meet these conditions. 
6.4 A pick-and-place operation involves picking objects from a magazine sup-
plied with an indexing mechanism that presents the objects with a known 
pose and zero twist, at equal time-intervals T, to a robot, which is to 
place the objects on a belt conveyor running at a constant speed VQ. Find 
5th- and 7th-degree polynomials that can be suitably used to produce the 
necessary joint-variable time-histories. 
6.5 Repeat Exercise 6.4, but now the objects are to be picked up by the robot 
from a belt conveyor traveling at a constant velocity vi and placed on a 
second belt conveyor traveling at a constant velocity V2. Moreover, let pi 
and p2 designate the position vectors of the points at the pick- and the 
place poses, respectively. Furthermore, the belts lie in horizontal, parallel 
planes. Finally, the objects must observe the same attitude with respect 

6.7 Exercises 
255 
to the belt orientation in both the pick- and the place poses. 
6.6 Approximate the cycloidal function of Subsection 6.4 using a periodic 
cubic spline with N subintervals of the same lengths, for various values of 
N between 5 and 100. Tabulate the approximation error ej^ vs. AT, with 
CN defined as 
ejv = max{e^}]^ 
i 
and 
Ci = max \s{r) - c(r)|, 
n <T < n+i 
T 
in which s(r) denotes the spline approximation and c{r) the cycloidal 
function. Note: the cycloidal function can be decomposed into a linear 
and a periodic part. 
6.7 Prom inspection of the plot of the 3-4-5 polynomial and its derivatives 
displayed in Fig. 6.2, it is apparent that the polynomial can be regarded 
as the superposition of a linear and a periodic function in the interval 
0 < r < 1. Approximate the underlying periodic function with a periodic 
cubic spline by subdividing the above-mentioned interval into A^ equal 
subintervals, while finding the value of N that will yield a maximum ab-
solute value of less than 10~^ in the error in 
(a) the function values; 
(b) the values of the first derivative; and 
(c) the values of the second derivative. 
6.8 Repeat Exercise 6.7 for the 4-5-6-7 polynomial of Fig. 6.3. 
6.9 A pick-and-place operation is being planned that should observe manufac-
turer's bounds on the maximum joint rates delivered by the motors of a 
given robot. To this end, we have the following choices: (a) a 4-5-6-7 poly-
nomial; (b) a symmetric trapezoidal speed profile like that of Fig. 6.7, with 
Ti == 0.20; and (c) a cycloidal motion. Which of these motions produces 
the minimum time in which the operation can be performed? 
6.10 The maximum speed of a cycloidal motion was found to be 2. By noticing 
that the cycloidal motion is the superposition of a linear and a periodic 
function, find a cubic-spline motion that will yield a maximum speed of 
1.5, with the characteristics of the cycloidal motion at its end points. 
6.11 The acceleration of a certain motion 5(r), for 0 < r < 1, is given at a 
sample of instants { Tk } ^ in the form 
s'^iTk) = Asm{27rTk) 
Find the cubic spline interpolating the given motion so that its second 
time-derivative will attain those given values, while finding A such that 

256 
6. Trajectory Planning: Pick-and-Place Operations 
s(0) = 0 and s(l) = 1. Hint: A combination of a linear function and a 
periodic spline can yield this motion. In order to find the function values of 
the periodic spline, exploit the linear relation between the function values 
and its second derivatives at the spline supporting points, as discussed in 
Section 6.6. 
6.12 A robotic joint has been found to require to move, within a time-interval 
T, with a set of speed values {Ok}^ 
at equally spaced instants. Find 
the natural cubic spline that interpolates the underlying motion so that 
the angular displacement undergone from beginning to end is a given A^. 
Hint: You will need to establish the linear relation between the spline func-
tion values and those of its first derivative. 

Chapter 7 
Dynamics of Serial Robotic 
Manipulators 
7.1 
Introduction 
The main objectives of this chapter are (^) to devise an algorithm for the real-
time computed-torque control and (ii) to derive the system of second-order or-
dinary differential equations (ODE) governing the motion of an n-axis manip-
ulator. We will focus on serial manipulators, the dynamics of a much broader 
class of robotic mechanical systems, namely, parallel manipulators and mobile 
robots, being the subject of Chapter 12. Moreover, we will study mechanical 
systems with rigid links and rigid joints and will put aside systems with flexible 
elements, which pertain to a more specialized realm. 
7.2 
Inverse vs. Forward Dynamics 
The two basic problems associated with the dynamics of robotic mechanical sys-
tems, namely, the inverse and the forward problems, are thoroughly discussed in 
this chapter. The relevance of these problems cannot be overstated: the former 
is essential for the computed-torque control of robotic manipulators, while the 
latter is required for the simulation and the real-time feedback control of the 
same systems. Because the inverse problem is purely algebraic, it is conceptu-
ally simpler to grasp than the forward problem, and hence, the inverse problem 
will be discussed first. Moreover, the inverse problem is also computationally 
simpler than the forward problem. In the inverse problem, a time-history of 
either the Cartesian or the joint coordinates is given, and from knowledge of 
these histories and the architecture and inertial parameters of the system at 

258 
7. Dynamics of Serial Robotic 
Manipulators 
hand, the torque or force requirements at the different actuated joints are de-
termined as time-histories as well. In the forward problem, current values of the 
joint coordinates and their first time-derivatives are known at a given instant, 
the time-histories of the applied torques or forces being also known, along with 
the architecture and the inertial parameters of the manipulator at hand. With 
these data, the values of the joint coordinates and their time-derivatives are 
computed at a later sampling instant by integration of the underlying system 
of nonlinear ordinary differential equations. 
The study of the dynamics of systems of multiple rigid bodies is classical, but 
up until the advent of the computer, it was limited only to theoretical results and 
a reduced number of bodies. First Uicker (1965) and then Kahn (1969) produced 
a method based on the Euler-Lagrange equations of mechanical systems of rigid 
bodies that they used to simulate the dynamical behavior of such systems. 
A breakthrough in the development of algorithms for dynamics computations 
was reported by Luh et al. (1980), who proposed a recursive formulation of 
multibody dynamics that is applicable to systems with serial kinematic chains. 
This formulation, based on the Newton-Euler equations of rigid bodies, allowed 
the calculation of the joint torques of a six-revolute manipulator with only 800 
multiplications and 595 additions, a tremendous gain if we consider that the 
straightforward calculation of the Euler-Lagrange equations for the same type 
of manipulator involves 66,271 multiplications and 51,548 additions, as pointed 
out by Hollerbach (1980). In the foregoing reference, a recursive derivation of the 
Euler-Lagrange equations was proposed, whereby the computational complexity 
was reduced to only 2,195 multiplications and 1,719 additions. 
The foregoing results provoked a discussion on the merits and demerits of 
each of the Euler-Lagrange and the Newton-Euler formulations. Silver (1982) 
pointed out that since both formulations are equivalent, they should lead to 
the same computational complexity. In fact. Silver showed how to derive the 
Euler-Lagrange equations from the Newton-Euler formulation by following an 
approach first introduced by Kane (1961) in connection with nonholonomic sys-
tems. Kane and Levinson (1983) then showed how Kane's equations can be 
applied to particular robotic manipulators and arrived at lower computational 
complexities. They applied the said equations to the Stanford Arm (Paul, 1981) 
and computed its inverse dynamics with 646 multiplications and 394 additions. 
Thereafter, Khalil et al. (1986) proposed a condensed recursive Newton-Euler 
method that reduced the computational complexity to 538 multiplications and 
478 additions, for arbitrary architectures. Further developments in this area 
were reported by Balafoutis and Patel (1991), who showed that the underly-
ing computational complexity can be reduced to 489 multiplications and 420 
additions for the most general case of a six-revolute manipulator, i.e., without 
exploiting particular features of the manipulator geometry. Balafoutis and Patel 
based their algorithm on tensor analysis, whereby tensor identities are exploited 
to their fullest extent in order to reduce the number of operations involved. Li 
and Sankar (1992), in turn, reported further savings that allowed them to bring 
down those numbers to 459 multiplications and 390 additions. 
In this chapter, the inverse dynamics problem is solved with the well-known 

7.3 Fundamentals of Multibody System Dynamics 
259 
recursive Newton-Euler algorithm, while the forward dynamics problem is han-
dled with a novel approach, based on the reciprocity relations between the 
constraint wrenches and the feasible twists of a manipulator. This technique 
is developed with the aid of a modeling tool known as the natural orthogonal 
complement, thoroughly discussed in Section 7.5. 
Throughout the chapter, we will follow a multibody system approach, which 
requires a review of the underlying fundamentals. 
7.3 
Fundamentals of Multibody System Dynam-
ics 
7.3.1 
On Nomenclature and Basic Definitions 
We consider here a mechanical system composed of r rigid bodies and denote by 
Mi the 6 x 6 inertia dyadâsee Section 3.8âof the ith body. Moreover, we let 
Wi, already introduced in eq.(3.140), be the 6 x 6 angular-velocity dyad of the 
same body. As pertaining to the case at hand, the said matrices are displayed 
below: 
M. = 
li 
o 
o 
mil 
, W,- = 
5 
' ' 
Z 
â 
Qi 
O 
O 
O 
i = l,. 
(7.1) 
where 1 and O denote the 3 x 3 identity and zero matrices, respectively, while 
fti and li are the angular-velocity and the inertia matrices of the ith body, this 
last being defined with respect to the mass center Ci of this body. Moreover, 
the mass of this body is denoted by rrii, whereas c^ and c^ denote the position 
and the velocity vectors of Ci. Furthermore, let t^ denote the twist of the same 
body, the latter being defined in terms of the angular velocity vector uji, the 
vector of fti, and the velocity of Ci. The 6-dimensional momentum screw fx^ is 
defined likewise. Furthermore, wj^ and wp are defined as the working wrench 
and the nonworking constraint wrench exerted on the ith body by its neighbors, 
in which forces are assumed to be applied at Ci. We thus have, for i = 1,..., r. 
ti = 
Ci 
, 
Mi = 
ruiCi 
w 
7 
^
l 
r w 1 
fW 
. i 
[nf 
(7.2) 
where superscripted n^ and f^ stand, respectively, for the moment and the force 
acting on the ith body, the force being applied at the mass center Ci. Thus, 
whereas wj^ accounts for forces and moments exerted by both the environment 
and the actuators, including driving forces as well as dissipative effects, wp, 
whose sole function is to keep the links together, accounts for those forces and 
moments exerted by the neighboring links, which do not produce any mechanical 
work. Therefore, friction wrenches applied by the {i â l)st and the (i-h l)st links 
onto the ith link are not included in wp; rather, they are included in wj^. 
Clearly, from the definitions of M^, )Lt^, and t^, we have 
fjti = 
Miti 
(7.3) 

260 
7. Dynamics of Serial Robotic 
Manipulators 
Moreover, from eq.(3.143)^, 
Ui = Miii + WifXi = Miii + WiMiti 
(7.4) 
We now recall the Newton-Euler equations for a rigid body, namely, 
liUi = -Ui X liCJi + nf" + nf 
(7.5a) 
m i C i = f f + f f 
(7.5b) 
which can be written in compact form using the foregoing 6-dimensional twist 
and wrench arrays as well as the 6 x 6 inertia and angular-velocity dyads. We 
thus obtain the Newton-Euler equations of the ith body in the form 
M^t^ = -WiMiti 
+ w,^ + wf 
(7.5c) 
7.3.2 
The Euler-Lagrange Equations of Serial 
Manipulators 
The Euler-Lagrange dynamical equations of a mechanical system are now re-
called, as pertaining to serial manipulators. Thus, the mechanical system at 
hand has n degrees of freedom, its n independent generalized coordinates being 
the n joint variables, which are stored in the n-dimensional vector 0. We thus 
have 
dt \dej 
90 
where T is a scalar function denoting the kinetic energy of the system and 0 is 
the n-dimensional vector of generalized force. If some forces on the right-hand 
side stem from a potential V, we can, then decompose </> into two parts, 0^ and 
</)^, the former arising from V and termed the conservative force of the system; 
the latter is the nonconservative force 0^. That is, 
'^'^-% 
( " ) 
the above Euler-Lagrange equations thus becoming 
d (dL\ 
dL 
where L is the Lagrangian of the system, defined as 
L = T-V 
(7.9) 
Moreover, the kinetic energy of the system is simply the sum of the kinetic 
energies of all the r links. Recalling eq.(3.145), which gives the kinetic energy 
of a rigid body in terms of 6-dimensional arrays, one has 
^ = E^^ = EKM'*^ 
(7.10) 
1 
1 "^ 
^See Exercise 7.1 for an extension of this relation to a system of n rigid bodies. 

7.3 Fundamentals ofMultibody 
System Dynamics 
261 
0n = 
(7.11) 
whereas the vector of nonconservative generaHzed forces is given by 
dli^_ 
dA 
de 
06 
in which 11"^ and A denote the power suppHed to the system and the Rayleigh 
dissipation function, or for brevity, the dissipation function of the system. 
The first of these items is discussed below; the latter is only outlined in this 
section but is discussed extensively in Section 7.8. First, the wrench w]^ is 
decomposed into two parts, wf and wf, the former being the wrench supplied 
by the actuators and the latter being the wrench that arises from viscous and 
Coulomb friction, the gravity wrench being not needed here because gravity 
effects are considered in the potential V{0). We thus call w^ the active wrench 
and w f the dissipative wrench. Here, the wrenches supplied by the actuators 
are assumed to be prescribed functions of time. Moreover, these wrenches are 
supplied by single-dof actuators in the form of forces along a line of action or 
moments in a given direction, both line and direction being fixed to the two bod-
ies that are coupled by an active joint. Hence, the actuator-supplied wrenches 
are dependent on the posture of the manipulator as well, but not on its twist. 
That is, the actuator wrenches are functions of both the vector of generalized 
coordinates, or joint variables, and time, but not of the generalized speeds, or 
joint-rates. Forces dependent on the latter to be considered here are assumed 
to be all dissipative. As a consequence, they can be readily incorporated into 
the mathematical model at hand via the dissipation function, to be discussed 
in Section 7.8. Note that feedback control schemes require actuator forces that 
are functions not only of the generalized coordinates, but also of the generalized 
speeds. These forces or moments are most easily incorporated into the underly-
ing mathematical model, once this model is derived in the state-variable space, 
i.e., in the space of generalized coordinates and generalized speeds. 
Thus, the power supplied to the ith link, H^, is readily computed as 
nf = (wf)^t 
(7.12a) 
Similar to the kinetic energy, then, the power supplied to the overall system 
is simply the sum of the individual powers supplied to each link, and expressed 
as in eq.(7.12a), i.e.. 
n^^Enf 
(7.12b) 
Further definitions are now introduced. These are the 6n-dimensional vec-
tors of manipulator twist, t; manipulator momentum, 
fx] manipulator con-
straint wrench, w^; manipulator active wrench, w^; and manipulator dissi-
pative wrench, w^. Additionally, the 6n x Qn matrices of manipulator mass, M, 
and manipulator angular velocity, W, are also introduced below: 
t = 
// = 
Ltn J 
/^l 
Mn_ 
(7.13a) 

262 
7. Dynamics of Serial Robotic 
Manipulators 
^w? 
.A 
_ 
w D 
(7.13b) 
M = diag(Mi, ..., Mn), 
W = diag( Wi, ..., W , ) 
(7.13c) 
It is now apparent that, from definitions (7.13b & 7.13c) and relation (7.3), 
we have 
11 = Mi 
Moreover, from definitions (7.1) and (7.2), 
/i = Mt + W M t 
(7.14) 
(7.15) 
With the foregoing definitions, then, the kinetic energy of the manipulator takes 
on a simple form, namely. 
2 
2 
^ 
(7.16) 
which is a quadratic form in the system twist. Since the twist, on the other 
hand, is a linear function of the vector 0 of joint rates, the kinetic energy turns 
out to be a quadratic form in the vector of joint rates. Moreover, we will assume 
that this form is homogeneous in ^, i.e.. 
T = \fi{e)e 
(7.17) 
Notice that the above assumption implies that the base of the robot is fixed 
to an inertial base, and hence, when all joints are locked, the kinetic energy 
of the robot vanishes, which would not be the case if, for example, the robot 
were mounted on the International Space Station. If this were the case, then 
the kinetic energy would not vanish even if all robot joints were locked, which 
means that the foregoing kinetic-energy expression would include a linear term 
in 9 and a term independent of the joint-rates. In any event, it is apparent that 
i{e) = - ^ ( T ) 
89 
(7.18) 
which means that the nxn 
generalized inertia matrix is the Hessian matrix of 
the kinetic energy with respect to the vector of generaUzed speed. 
Furthermore, the Euler-Lagrange equations can be written in the form 
dt \de 
â 
â-rh 
(7.19a) 
Now, from the form of T given in eq.(7.17), the partial derivatives appearing in 
the foregoing equation take the forms derived below: 
dT 
ae 
= 1(6)6 

7.3 Fundamentals of Multibody System Dynamics 
263 
and hence, 
dt \de) ~ 1(6)6+ 1(6,6)6 
(7.19b) 
Moreover, in order to calculate the second term of the left-hand side of eq. (7.19a), 
we express the kinetic energy in the form 
T=-p(6,d)'e 
(7.19c) 
where p(0,6) is the generalized momentum of the manipulator, defined as 
p{e,e) =1(6)6 
(7.19d) 
Hence, 
dT 
or 
6 
dT_l 
ae ~ 2 
the Euler-Lagrange equations thus taking on the alternative form 
9(16) 
86 
1(6)6+ 
1(6,6)6- 1 dm 
86 
n 
9V ^ 
'^-86-'t>n 
(7.19f) 
(7.20) 
Example 7.3.1 (Euler-Lagrange equations of a planar robot) Consider 
the manipulator of Fig. 7.1, with links designed so that their mass centers, C\, 
Ci, and Cs, are located at the midpoints of segments O1O2, O2O3, and O3P, 
respectively. Moreover, the ith link has a mass mi and a centroidal moment 
of inertia in a direction normal to the plane of motion li, while the joints are 
actuated by motors delivering torques TI, T2, and TS, the lubricant of the joints 
producing dissipative torques that we will neglect in this model. Under the as-
sumption that gravity acts in the direction of âY, find the associated Euler-
Lagrange equations. 
Solution: Here we recall the kinematic analysis of Section 5.7 and the definitions 
introduced therein for the analysis of planar motion. In this light, all vectors 
introduced below are 2-dimensional, the scalar angular velocities of the links, 
cJi, for ^ = 1, 2, 3, being 
cJi = ^ 1 , 
UJ2 = Oi -\- 02, 
(JOS = 9i -{- 62 -\- 63 
Moreover, the velocities of the mass centers are 
ci = -(9iEai 
C2 =^iEai + -(^i4-^2)Ea2 
C3 = 6>iEai + (01 + 6>2)Ea2 + -(6>i + 6>2 + <93)Ea3 
Zi 

264 
7. Dynamics of Serial Robotic 
Manipulators 
\\\\\\\\\ 
Figure 7.1: A planar manipulator 
the kinetic energy then becoming 
T^=KE(Â»"illÂ«^ll' + -f^'^f) 
The squared magnitudes of the mass-center velocities are now computed using 
the expressions derived above. After simplifications, these yield 
IA ||2 _ ^ ^2n2 
|ci|| 
- 
-a^f^i 
||c2|p = alej + -al(ej 
+ 2^1^92 + <9^) 4- aias cos(92(^? + 6162) 
+ \(4{^l +OI + OI + 26162 + 26i6^ + 2^2^3) 
+2aia2 0086201 + ^^1^2) + aias cos(i92 + 63)01 + <^i<^2 + 6163) 
+^2^3 cos^sC^f +61 + 26162 + ^1^3 + ^2^3) 
The kinetic energy of the whole manipulator thus becomes 
1 
T = -{hi6i 
+ 2I126162 + 2I236263 + ^22^2 + 2/13^1^3 + ^33^3) 

7.3 Fundamentals of Multibody System Dynamics 
265 
with coefficients Uj, for ^ = 1, 2, 3, and j = i to 3 being the distinct entries of 
the 3 x 3 matrix of generaHzed inertia of the system. These entries are given 
below: 
ill = 7i + /2 + /3 + jraiaj -\-m2 lal-}- -a\ + 01(22^2 
+m3 {a\+a\-\- 
-al + 2aia2C2 + aia3C23 + <^2Â«3C3 
/12 = /2 + /3 + 2 ^ 2 ( 2^2 + ^1^2C2 
+ rris ( 2al + -al + 2aia2C2 + aia3C23 + 2a2a3C3 
r 
1 
/ I 2 
/i3 = /3 + - m s ( -ag + aia3C23 + <:i2a3C3 
J22 = /2 + ^3 + ^ ^ 2 ^ 2 + ^ 3 ( ^^2 + 4^3 + Ci20>3C3 
I23 = /3 + 7:^713 f - ^ 3 + a2a3C3 ) 
r 
1 
2 
/33 = 13 + jrn3a^ 
where Q and Cij stand for cos 9i and cos(0i+6j), respectively. From the foregoing 
expressions, it is apparent that the generalized inertia matrix is not a function 
of 61, which is only natural, for if the second and third joints are locked while 
leaving the first one free, the whole manipulator becomes a single rigid body 
pivoting about point Oi. Now, the polar moment of inertia of a rigid body in 
planar motion about a fixed point is constant, and hence, the first joint variable 
should not affect the generalized inertia matrix. 
Furthermore, the potential energy of the manipulator is computed as the 
sum of the individual link potential energies, i.e.. 
V = -migai sin^i + m2g ai sin 61 + -a2 sm(Oi + O2) 
+rn3g ai sin01 + a2 sin(0i + ^2) + -^3 sin(0i +^2 + ^3) 
while the total power delivered to the manipulator takes the form 
n = Ti^i + r2^2 + r3^3 
We now proceed to compute the various terms in eq.(7.20). We already have 
I(^), but we do not have, as yet, its time-derivative. However, the entries of I 
are merely the time-derivatives of the entries of I. From the above expressions 
for these entries, their time-rates of change are readily calculated, namely, 
Al = -m2aia2S202 - m3[2aia2S202 + <^i<:i3523(^2 + ^3) + a2a353^3] 

266 
7. Dynamics of Serial Robotic 
Manipulators 
A2 = -{-m2aia2S2^2 - ru'^^laxa^si^i H- cixazS2z{Qi + ^3) + 202(2353^3]} 
/i3 = --m3[aia3S23(^2 + ^3) + a2a3S3^3] 
J22 = -m3a2a353^3 
iiz - -â¢^rnsa2a3Ss03 
/ 3 3 = 0 
with Sij defined as sm{6i + Oj). It should now be apparent that the time-rate 
of change of the generaUzed inertia matrix is independent of ^1, as one should 
have expected, for this matrix is independent of 61. That is, if all joints but the 
first one are frozen, no matter how fast the first joint rotates, the manipulator 
moves as a single rigid body whose polar moment of inertia about Oi, the center 
of the first joint, is constant. As a matter of fact, 133 is constant for the same 
reason and J33 hence vanishes. We have, then,^ 
10 = t = 
hlOl 
+ /l2^2 + ^13^3 
-(12^1 + ^22^2 + {23^3 
hs^l 
+ ^23^2 + ^33^3 
whose components, i-^, for i = 1, 2, 3, are readily calculated as 
ii = -[m2aia2S2 + m3ai{2a2S2 + a3523)]^i^2 - rn3a3{aiS23 + (2253)^1^3 
[m2aia2S2 + 772301(2^252 + a3523)]6'2 - m3a3(ai523 + a2S3)0203 
-â¢zrn3a3{aiS23 + ^2 53)^3 
i2 = --[rn2aia2S2 + m3ai(2a252 -f a3523)]^i^2 
- ; ^ m 3 a 3 ( a i 5 2 3 + ^2^3)^1 ^3 - m3a2a353^2^3 - 
^^3<22a353^3 
^3 = -^^36^1^3523^1^2 - â¢zm3a3{aiS23 
+ ^253)^1 ^3 " 
^^3^20^353^2^3 
The next term in the right-hand side of eq.(7.20) now requires the calculation 
of the partial derivatives of vector 10 with respect to the joint variables, which 
are computed below. Let 
d{W) 
de 
= 1' 
its entries being denoted by /^. This matrix, in component form, is given by 
V = 
0 
/ll,2^1 + ^2,2^2 + /l3,2^3 
Al,3^1 + ^2,3^2 + ^3,3^3 
0 
/l2,2^1 + ^22,2^2 + ^23,2^3 
^2,3^1 + ^22,3^2 + ^23,3^3 
0 
/l3,2^1 + i^23,2^2 -f ^33,2^3 
^3,3^1 + ^23,3^2 + -^33,3^3 J 
^t is the Greek letter iota and denotes a vector; according to our notation, its components 
are z-i, ^2, and ^3. 

7.3 Fundamentals 
of Multibody 
System 
Dynamics 
267 
with the shorthand notation lij^k indicating the partial derivative of lij with 
respect to 6k. As the reader can verify, these entries are given as 
/li = 0 
^12 = -[m2aia2S2 
+m3(2aia2S2 +aia3S23)]^i 
--[m2aia2S2 
+ m3{2aia2S2 
+ aiasS23)]02 - ^^30^10^3523^3 
^13 = -'fri3{aia3S23 + 020353)^1 - -m3(aia3523 + 2a2a353)^2 
--m3(aia3S23 + 0,2^383)03 
I22 = -â¢^[m2aia2S2 
+ m3{2aia2S2 
+ aia3S23)]0i 
^23 = -2^3(^103523 + 2^2(2353)^1 - 771302038302 - -771302033383 
^ 3 1 = 0 
1 
2 
-^33 = "2^3(0103523 + 020353)^1 - 2^3020353^2 
Now, we define the 3-dimensional vector 7 below: 
^32 = -7:^30103623^1 
7 = dm 
e 
de 
its three components, 7^, for i = 1, 2, 3, being 
7 1 = 0 
72 = -[m20i0252 + m3(2oi02S2 + 0103523)]^! 
-[m20i0252 + m3(20i0252 + Oi03523)]^1^2 
-77230103823^1^3 
73 = -^3(0103623 + 020353)^? - 7723(0103523 + 2020353)^1^2 
-7723(0103523 + 020353)^1^3 - ^3020353^3 - 7723020353^2^3 
We now turn to the computation of the partial derivatives of the potential 
energy: 
f OlCi + -O2C12 j + 7723^ f OiCi + O2C12 + -O3C123 j 
â¢QQ- = -jTUigaiCi + 7722P ( oici + -O2C12 ) + 7723^ ( OiCi 4- 02C12 + -03C123 
dV _ 1 
av 
1 
W3 = 2^3^^3C123 
= i^rn2go2Ci2 -\-m39 (02C12 + -03C123 

268 
7. Dynamics of Serial Robotic 
Manipulators 
The Euler-Lagrange equations thus reduce to 
hiOi + I12O2 + I13O3 + ^1 - -^li + 
^rnigaici 
+m2p(aici 4- -^2^12) -f msgiaici -f a2Ci2 + -^30123) = ri 
/l2<9i + /226'2 + /23^3 + ^2 - ~l2 + -m2pa2Ci2 
-\-m3g{a2Ci2 -f -a3Ci23) = T2 
/is^^'i 4- /23^2 + 1336^3 + is ~ ^13 + -^rnsgascris = rs 
With this example, it becomes apparent that a straightforward differentia-
tion procedure to derive the Euler-Lagrange equations of a robotic manipulator, 
or for that matter, of a mechanical system at large, is not practical. For example, 
these equations do not seem to lend themselves to symbolic manipulations for 
a six-axis manipulator of arbitrary architecture, given that they become quite 
cumbersome even for a three-axis planar manipulator with an architecture that 
is not so general. For this reason, procedures have been devised that lend them-
selves to an algorithmic treatment. We will study a procedure based on the 
natural orthogonal complement whereby the underlying equations are derived 
using matrix-times-vector multiplications. 
7.3.3 
Kane's Equations 
Kane's equations (Kane and Levinson, 1983), sometimes referred to as D'Alem-
herVs equations in Lagrangian form are also useful in robot dynamics (Angeles et 
al., 1989). A feature of Kane's equations is that they are derived from the free-
body diagrams of the various rigid bodies constituting the multibody system 
at hand. Upon introducing generalized coordinates a la Lagrange, the mathe-
matical model of the system is derived, which is equivalent to the underlying 
Euler-Lagrange equations. Kane's equations take a rather simple form, for an 
n-dof mechanical system, namely, 
where 0 and (/)* are the n-dimensional vectors of generalized active force and 
inertia force^ respectively. With the notation introduced above, these vectors 
are given by 
Â«=E 
i=l 
I 
(7.21a) 
and 
^*=-i: 
'i=:l L 
(7.21b) 

7.4 Recursive Inverse Dynamics 
269 
In the above expressions, q = dq/dt is the n-dimensional vector of generalized 
speeds in Kane's terminology, while the n x 3 matrices dci/dci and du3i/dc\ are 
the partial rates of change of mass-center velocity and angular velocity of the 
ith rigid body. 
7.4 
Recursive Inverse Dynamics 
The inverse dynamics problem associated with serial manipulators is studied 
here. We assume at the outset that the manipulator under study is of the serial 
type with n -j-1 links including the base link and n joints of either the revolute 
or the prismatic type. 
The underlying algorithm consists of two steps: {%) kinematic computations^ 
required to determine the twists of all the links and their time derivatives in 
terms of 0, 0, and 0\ and {ii) dynamic computations^ required to determine both 
the constraint and the external wrenches. Each of these steps is described below, 
the aim here being to calculate the desired variables with as few computations as 
possible, for one purpose of inverse dynamics is to permit the real-time model-
based control of the manipulator. Real-time performance requires, obviously, 
a low number of computations. For the sake of simplicity, we decided against 
discussing the algorithms with the lowest computational cost, mainly because 
these algorithms, fully discussed by Balafoutis and Patel (1991), rely heavily on 
tensor calculus, which we have not studied here. Henceforth, revolute joints are 
referred to as i?, prismatic joints as P. 
7,4.1 
Kinematics Computations: Outward Recursions 
We will use the Denavit-Hartenberg (DH) notation introduced in Section 4.2 
and hence will refer to Fig. 4.7 for the basic notation required for the kinematic 
analysis to be described first. Note that the calculation of each Q^ matrix, as 
given by eq.(4.1e), requires four multiplications and zero additions. 
Moreover, every 3-dimensional vector-component transfer from the Ti frame 
to the J^i+i frame requires a multiplication by Qf. Likewise, every component 
transfer from the Ti^\ frame to the Ti frame requires a multiplication by Q^. 
Therefore, we will need to account for the aforementioned component transfers, 
which we will generically term coordinate transformations between successive 
coordinate frames. We derive below the number of operations required for such 
transformations. If we have [r]^ = [ri, r2, ra]'^ and we need [r]^4.i, then we 
proceed as follows: 
[r]i+i = Qj[r]i 
(7.22) 
and if we recall the form of Q^ from eq.(4.1e), we then have 
[r]i+i 
cos Oi 
sin 6i 
âXi sin 8i 
Xi cos Oi 
0 
fii sin 6i 
âjii cos Oi Xi 
r i " 
^2 
^ 3 . 
= 
ri cos Oi -\- r2 sin Oi 
-Xir + fjiirz 
jiir -f Airs 
(7.23a) 

270 
7. Dynamics of Serial Robotic 
Manipulators 
where A^ = cosa^ and fj,i = sina^, while 
r = ri sin Oi â r2 cos 6i 
(7.23b) 
Likewise, if we have [v]^_j_i = [i?i, 1^2, ^3]^ and we need [vj^, we use the 
component transformation given below: 
[v]i = 
COS^i 
sin 6i 
0 
âA^sin^^ 
\i cos 6i 
f^i 
jJii sin 6i 
âfXi cos Oi 
Xi 
Vl 
V2 
. ^ 3 _ 
= 
Vl COS 6i â V sin 6i 
Vl sin 9i + v cos 6i 
V2fii + VsXi 
(7.24a) 
where 
V = V2Xi â¢ vsfii 
(7.24b) 
It is now apparent that every coordinate transformation between successive 
frames, whether forward or backward, requires eight multiplications and four 
additions. Here, as in Chapter 4, we indicate the units of multiplications and 
additions with M and A, respectively. 
The angular velocity and acceleration of the zth link are computed recursively 
as follows: 
C^i = 
(^i 
iAJi-i -\- OiBi, 
if the ith joint is R 
cji-i, 
if the ith joint is P 
dji-i +<jJi-i X 9iei + < 
if the zth joint is R 
if the ith joint is P 
(7.25a) 
(7.25b) 
for i = 1, 2, ..., n, where a;o and CJQ are the angular velocity and angular 
acceleration of the base link. Note that eqs.(7.25a & b) are frame-invariant; 
i.e., they are valid in any coordinate frame, as long as the same frame is used 
to represent all quantities involved. Below we derive the equivalent relations 
applicable when taking into account that quantities with a subscript i are avail-
able in JF^_|_i-coordinates. Hence, operations involving quantities with different 
subscripts require a change of coordinates, which is taken care of by the corre-
sponding rotation matrices. 
In order to reduce the numerical complexity of the algorithm developed here, 
all vector and matrix quantities of the ith link will be expressed in Ti^i. Note, 
however, that the two vectors e^ and e^_|.i are fixed to the ith link, which is 
a potential source of confusion. Now, since e^ has very simple components in 
Ti, namely, [0, 0, 1]^, this will be regarded as a vector of the {i â l)st link. 
Therefore, this vector, or multiples of it, will be added to vectors bearing the 
(iâl)st subscript without any coordinate transformation. Moreover, subscripted 
brackets, as introduced in Section 2.2, can be avoided if all vector and matrix 
quantities subscripted with i, except for vector e^, are assumed to be expressed 
in J^i-fi. Furthermore, in view of the serial type of the underlying kinematic 
chain, only additions of quantities with two successive subscripts will appear in 
the relations below. 

282 
7. Dynamics of Serial Robotic 
Manipulators 
developed by this wrench on t, for any possible motion of the manipulator, is 
zero, i.e., 
t^w^ = 0 
(7.51) 
On the other hand, if the two sides of eq.(7.50) are transposed and then multi-
plied by a 6n-dimensional vector A, one has 
t^K^A = 0 
(7.52) 
Upon comparing eqs.(7.51) and (7.52), it is apparent that w^ is of the form 
w^ = K^A 
(7.53) 
More formally, the inner product of w^ and t, as stated by eq.(7.51), vanishes, 
and hence, t lies in the nullspace of K, as stated by eq.(7.50). This means that 
w^ lies in the range of K^, as stated in eq.(7.53). The following step will be 
to represent t as a linear transformation of the independent generalized speeds, 
i.e., as 
t = TO 
(7.54) 
with T defined as a 6n x n matrix that can be fairly termed the twist-shaping 
matrix. 
Moreover, the above mapping will be referred to as the twist-shape 
relations. The derivation of expressions for matrices K and T will be described 
in detail in Subsection 7.5.1 below. Now, upon substitution of eq.(7.54) into 
eq.(7.50), we obtain 
KT0 = 0 
(7.55a) 
Furthermore, since the degree of freedom of the manipulator is n, the n 
generalized speeds {Oi }i can be assigned arbitrarily. However, while doing 
this, eq.(7.55a) has to hold. Thus, the only possibility for this to happen is that 
the product K T vanish, i.e., 
K T = O 
(7.55b) 
where O denotes the 6n x n zero matrix. The above equation states that T is 
an orthogonal complement of K. Because of the particular form of choosing this 
complementâsee eq.(7.54)âwe refer to T as the natural orthogonal complement 
of K (Angeles and Lee, 1988). 
In the final step of this method, t of eq.(7.48) is obtained from eq.(7.54), 
namely, 
t = T^ + t e 
(7.56) 
Furthermore, the uncoupled equations, eqs.(7.48), are multiplied from the left 
by T^, thereby eliminating w^ from those equations and reducing these to a 
system of only n independent equations, free of nonworking constraint wrenches. 
These are nothing but the Euler-Lagrange equations of the manipulator, namely, 
W = -T^(MT + WMT)0 + T^(w^ 4- w^ + w^) 
(7.57) 
where I is the positive definite n x n generalized inertia matrix of the manipu-
lator and is defined as 
I = T^MT 
(7.58) 

7.5 The Natural Orthogonal Complement in Robot Dynamics 
283 
which is identical to the inertia matrix derived using the Euler-Lagrange equa-
tions, with 0 as the vector of generalized coordinates. Now, we let r and 6 
denote the n-dimensional vectors of active and dissipative generalized force. 
Moreover, we let C(0, 6)6 be the n-dimensional vector of quadratic terms of 
inertia force. These items are defined as 
C(0, 6) = T^MT -f- T ' ^ W M T 
(7.59) 
Clearly, the sum r + S produces 0, the generahzed force defined in eq.(7.11). 
Thus, the Euler-Lagrange equations of the system take on the form 
I^ = -Cd -h r + (J + 7 
(7.60) 
If, moreover, a static wrench w ^ acts onto the end-effector, with the force 
applied at the operation point, then its effect onto the above model is taken 
into account as indicated in eq.(5.50). Thus, a term J'^w^ is added to the 
right-hand side of the above model: 
16 = -Cd + r -I- 5 + 7 -H J ^ w ^ 
(7.61) 
As a matter of fact, 5 is defined in eq.(7.59) only for conceptual reasons. In 
practice, this term is most easily calculated once a dissipation function in terms 
of the generalized coordinates and generalized speeds is available, as described 
in Section 7.8. Thus, 5 is computed as 
5 = - ^ 
(7.62) 
86 
^ 
^ 
It is pointed out that the first term of the right-hand side of eq.(7.60) is 
quadratic in 6 because matrix C, defined in eq.(7.59), is linear in 6. In fact, the 
first term of that expression is linear in a factor T that is, in turn, linear in 6. 
Moreover, the second term of the same expression is linear in W, which is linear 
in 6 as well. However, C is nonlinear in 6. Because of the quadratic nature 
of that term, it is popularly known as the vector of Coriolis and centrifugal 
forces^ whereas the left-hand side of that equation is given the name of vector 
of inertia forces. Properly speaking, both the left-hand side and the first term 
of the right-hand side of eq.(7.60) arise from inertia forces. 
Example 7.5.1 (A minimum-time trajectory) A pick-and-place operation 
is to be performed with an n-axis manipulator in the shortest possible time. 
Moreover J the maneuver is defined so that the n-dimensional vector of joint 
variables is given by a common shape function s{x), with 0 < a; < 1 and 0 < 
s < 1, which is prescribed. Thus, for a fixed n-dimensional vector 6Q, the time-
history of the joint-variable vector, 6{t), is given by 
6{t) = 6O + S(^\A6, 
0<t<T 

284 
7. Dynamics of Serial Robotic 
Manipulators 
with T defined as the time taken by the maneuver, while OQ and OQ + A6 are 
the values of the joint-variable vector at the pick- and the place-postures of the 
manipulator, respectively. These vectors are computed from inverse kinematics, 
as explained in Chapter 5. Furthermore, the load-carrying capacity of the ma-
nipulator is specified in terms of the maximum torques delivered by the motors, 
namely, 
\^i\ ^^i^ 
for 
i = 1,... ,n 
where the constant values Ti are supplied by the manufacturer. In order to keep 
the analysis simple, we neglect power loses in this example. Find the minimum 
time in which the maneuver can take place. 
Solution: Let us first calculate the vector of joint-rates and its time-derivative: 
e{t) = ^s'ix)Ae, e{t) = ^s"{x)Ae, x = | 
Now we substitute the above values into the mathematical model of eq.(7.60), 
with 5(^) = 0, thereby obtaining 
r = 1(6)9 + c{e,e)e^s"(x)i{x)Ae + ^s'\x)c{x)Ae = ^t{x) 
with f{x) defined, of course, as 
i{x) = [l{x)syx) 
+ 
C{x)s'^(x)]Ae 
the 1/T^ factor in the term of Coriolis and centrifugal forces stemming from 
the quadratic nature of the C{6,6)0 term. What we now have is the vector of 
motor torques, r, expressed as a function of the scalar argument x. Now, let 
fi{x) be the ith component of vector f (x), and 
Fi=mdix{\fi{x)\}, 
for 
i = l , . . . , n 
X 
We would then like to have each value Fi produce the maximum available torque 
Ti, namely, 
_ 
Fi 
. 
^ 
^i = j ^ ^ 
^ = l , . . . n 
and hence, for each joint we have a value Ti of T given by 
Ti = ^, 
i = l,...n 
Obviously, the minimum value sought, Tmin, is nothing but the maximum of the 
foregoing values, i.e., 
T^in = max{Tj^ 
thereby completing the solution. 

7.5 The Natural Orthogonal Complement in Robot Dynamics 
285 
7.5.1 
Derivation of Constraint Equations and 
Twist-Shape Relations 
In order to illustrate the general ideas behind the method of the natural orthogo-
nal complement, we derive below the underlying kinematic constraint equations 
and the twist-shape relations. We first note, from eq.(7.25a), that the relative 
angular velocity of the ith link with respect to the {i â l)st link, Ui â cj^-i, is 
6iei. Thus, if matrix E^ is defined as the cross-product matrix of vector e^, then, 
the angular velocities of two successive links obey a simple relation, namely. 
Furthermore, we rewrite now eq.(7.33a) in the form 
Ci - Ci_i -h KiUi + Di-iiJi-i 
= 0 
(7.63) 
(7.64) 
where D^ and R^ are defined as the cross-product matrices of vectors Si, defined 
in Subsection 7.4.1 as a^ â p^, and p^, respectively. In particular, when the first 
link is inertial, eqs.(7.63 & b), as pertaining to the first link, reduce to 
EiCJi = 0 
ci -h HiUi 
= 0 
(7.65a) 
(7.65b) 
Now, eqs.(7.63) and (7.64), as well as their counterparts for z = 1, eqs.(7.65a 
Sz b), are further expressed in terms of the link twists, thereby producing the 
constraints below: 
K i i t i = 0 
J^i iâitiâi -f- J^iiti = 0, 
= 1, 
with Kii and K^j, for i = 2,..., n and j = i â l,i, defined as 
K 11 
El O 
Ri 1 
" -Ei O 1 
_T>i-i 
-1 
Ei 
O 
Hi 
1 
(7.66a) 
(7.66b) 
(7.67a) 
(7.67b) 
(7.67c) 
where 1 and O denote the 3 x 3 identity and zero matrices, respectively. Fur-
thermore, from eqs. (7.66a & b) and (7.67a-c), it is apparent that matrix K 
appearing in eq.(7.55b) takes on the form 
K = 
[Kii 
K21 
Oe 
LOe 
Oe 
K22 
Oe 
Oe 
Oe 
Oe â¢ 
Oe 
Oe 
Oe 
Oe 
â¢ Kn-l,n-l 
â¢*^n,nâ1 
Oe 1 
Oe 
Oe 
^nn -
(7.68) 

286 
7. Dynamics of Serial Robotic 
Manipulators 
Ox 
Figure 7.6: Kinematic subchain comprising links j , j -f 1. 
with Oe denoting the 6 x 6 zero matrix. 
Further, the Hnk-twists are expressed as linear combinations of the joint-rate 
vector 0. To this end, we define the Q x n partial Jacobian J^ as the matrix 
mapping the joint-rate vector 0 into the twist t^ of that link, i.e., 
JiO = ti 
whose ^'th column, tij, is given, for i, j = 1, 2, ..., n, by 
, if i < ^ 
otherwise. 
(7.69) 
ij â < 
/ 
< 0 
^j 
X Vij _ 
5 
(7.70) 
( SLj + SLj^i + â¢ â¢ â¢ + a,--! + p^, if j < i; 
Pi, 
ifj = *; 
0, 
otherwise. 
with Tij illustrated in Fig. 7.6 and defined, for i, j = 1,..., n, as 
(7.71) 
It is noteworthy that, for a given i and a given j < i^ Si submanipulator of 
i â {j â 1) axes is obtained. The {rijlj^^^ vectors are the counterparts of the 
{Tij}I vectors of Section 5.2 
We can thus readily express the twist t^ of the ith link as a linear combination 
of the first i joint rates, namely. 
t^ = Oitii -h 02ti2 + â¢ â¢ â¢ + Oitiij 
* = 1,..., n 
(7.72) 

7.5 The Natural Orthogonal Complement in Robot Dynamics 
287 
and hence, matrix T of eq.(7.54) takes the form 
T = 
t i l 
0 
t21 t22 
tnl ^n2 
0 1 
0 
(7.73) 
As a matter of verification, one can readily prove that the product of matrix 
T, as given by eq.(7.73), by matrix K, as given by eq.(7.68), vanishes, and 
hence, relation (7.55b) holds. 
The kinematic constraint equations on the twists, for the case in which the 
ith joint is prismatic, are derived likewise. In this case, we use eqs.(7.34a & e), 
with the latter rewritten more conveniently for our purposes, namely. 
Ci = Ci_i + i^i-i X {6i-i + Pi + biei) + biei 
We now introduce one further definition: 
(7.74a) 
(7.74b) 
(7.75) 
where D^_j is the cross-product matrix of vector 5^-1, defined in Subsec-
tion 7.4.1 as d^_i â Pi-i, while R^ is the cross-product matrix of p^ -h &^e^. 
Hence, eq. (7.74b) can be rewritten as 
Ci - Ci-i -f- H'iUJi â biei = 0 
(7.76) 
Upon multiplication of both sides of eq.(7.76) by E^, the term in bi cancels, and 
we obtain 
Ei(ci-Ci.i+R'i(Ji)=Q 
(7.77) 
Hence, eqs.(7.74a) and (7.77) can now be regrouped in a single 6-dimensional 
linear homogeneous equation in the twists, namely. 
the associated matrices being defined below: 
K: 
- 1 
o 
1 
EiR'j 
O 1 
-EiJ 
O 
Ei_ 
(7.78) 
(7.79a) 
(7.79b) 
with 1 and O defined already as the 3x3 identity and zero matrices, respectively. 
If the first joint is prismatic, then the corresponding constraint equation takes 
on the form 
K'liti = 0 
(7.80) 

288 
7. Dynamics of Serial Robotic 
Manipulators 
with K^i defined as 
K'n 
1 
O 
O 
El 
(7.81) 
Furthermore, if the kth pair is prismatic and 1 < k <i, then the twist t^ of 
the ith Hnk changes to 
ti = Oitii H 
h bkt[k H 
\- ^iUi, 
i = 1,... ,n 
where t^^ is defined as 
^ik â 
0 
^k 
(7.82) 
(7.83) 
In order to set up eq.(7.60), then all we now need is T, which is computed 
below. Two cases will be distinguished again, namely, whether the joint at hand 
is a revolute or a prismatic pair. In the first case, from eq.(7.70) one readily 
derives, for z, j = 1,2,..., n. 
t i j â < 
(jjn X e,-
0 
0 
if j < i] 
otherwise 
(7.84) 
where, from eq.(7.71). 
: Uj X ^j 
+ 
-f CJi-i X SLi-i +UJi X Pi 
(7.85) 
On the other hand, if the kth. pair is prismatic and 1 < k < i, then from 
eq.(7.83), the time-rate of change of t^^ becomes 
if 
-
^'ik' â 
^ik 
0 
<^k xefc 
(7.86) 
thereby completing the desired derivations. 
Note that the natural orthogonal complement can also be used for the inverse 
dynamics calculations. In this case, if the manipulator is subjected to a gravity 
field, then the twist-rate of the first link will have to be modified by adding 
a nonhomogeneous term to it, thereby accounting for the gravity-acceleration 
terms. This issue is discussed in Section 7.7. 
7.5.2 
Noninertial Base Link 
Noninertial bases occur in space applications, e.g., in the case of a manipulator 
mounted on a space platform or on the space shuttle. A noninertial base can be 
readily handled with the use of the natural orthogonal complement, as discussed 
in this subsection. Since the base is free of attachments to an inertial frame, 
we have to add its six degrees of freedom (dof) to the n dof of the rest of 

7.6 Manipulator Forward Dynamics 
289 
the manipulator. Correspondingly, t, w^, w^, and w^ now become 6(n + 1)-
dimensional vectors. In particular, t takes the form 
t = [tj tf 
... tlf 
(7.87) 
with to defined as the twist of the base. Furthermore, the vector of independent 
generalized speeds, 0, is now of dimension n -f 6, its first six components being 
those of to, the other n remaining as in the previous case. Thus, 9 has the 
components shown below: 
0 = [t'S 
e, 
... 
Onf 
(7.88) 
Correspondingly, T becomes a 6(n + 1) x (n + 6) matrix, namely, 
T = 
1 
O 
Q, 
rp, 
(7.89) 
where 1 is the 6x6 
identity matrix, O denotes the 6 x n zero matrix, O' 
represents the 6n x 6 zero matrix, and T' is the 6n x n matrix defined in 
eq.(7.73) as T. Otherwise, the model remains as in the case of an inertial base. 
A word of caution is in order here. Because of the presence of the twist 
vector to in the definition of the vector of generalized speeds above, the latter 
cannot, properly speaking, be regarded as a time-derivative. Indeed, as stud-
ied in Chapter 3, the angular velocity appearing in the twist vector is not a 
time-derivative. Hence, the vector of independent generalized speeds defined in 
eq.(7.88) is represented instead by v, which does not imply a time-derivative, 
namely, 
v = [t^ 
^1 
â¢â¢â¢ Onf 
(7.90) 
7.6 
Manipulator Forward Dynamics 
Forward dynamics is needed either for purposes of simulation or for the model-
based control of manipulators (Craig, 1989), and hence, a fast calculation of the 
joint-variable time-histories 9{t) is needed. These time-histories are calculated 
from the model displayed in eq.(7.61), reproduced below for quick reference, in 
terms of vector 0(t), i.e., 
W = -C(0,9)0 + T{t) + S(e, 0) -f 7(0) + J ^ w ^ 
(7.91) 
Clearly, what is at stake here is the calculation of 9 from the foregoing model. 
Indeed, the right-hand side of eq.(7.91) can be calculated with the aid of the 
Newton-Euler recursive algorithm, as we will describe below, and needs no fur-
ther discussion for the time being. Now, the calculation of 9 from eq.(7.91) is 
similar to the calculation of 9 from the relation between the joint-rates and the 
twist, derived in Section 5.2. Prom the discussion in that section, such calcula-
tions take a number of floating-point operations, or flops^ that is proportional 
to n^, and is thus said to have a complexity of 0{n^)âread 
"order n^." In 

290 
7. Dynamics of Serial Robotic 
Manipulators 
real-time calculations, we would like to have a computational scheme of 0{n). 
In attempting to derive such schemes, Walker and Orin (1982) proposed a pro-
cedure that they called the composite rigid-body method, whereby the number 
of flops is minimized by cleverly calculating 1(0) and the right-hand side of 
eq.(7.91) by means of the recursive Newton-Euler algorithm. In their effort, 
they produced an 0(71^) algorithm to calculate 0. Thereafter, Featherstone 
(1983) proposed an 0{n) algorithm that is based, however, on the assumption 
that Coriolis and centrifugal forces are negligible. The same author reported 
an improvement to the aforementioned algorithm, namely, the articulated-body 
method, that takes into account Coriolis and centrifugal forces (Featherstone, 
1987.) The outcome, for an n-revolute manipulator, is an algorithm requiring 
300n â 267 multiplications and 279n â 259 additions. For n = 6, these figures 
yield 1,533 multiplications and 1,415 additions. Li (1989) reported an 0{n'^) 
algorithm leading to 783 multiplications and 670 additions. 
In this subsection, we illustrate the application of the method of the nat-
ural orthogonal complement to the modeling of an n-axis serial manipulator 
for purposes of simulation. While this algorithm gives an 0{n^) complexity, 
its derivation is straightforward and gives, for a six-axis manipulator, a com-
putational cost similar to that of Featherstone's, namely, 1,596 multiplications 
and 1,263 additions. Moreover, a clever definition of coordinate frames leads to 
even lower figures, i.e., 1,353 multiplications and 1,165 additions, as reported 
by Angeles and Ma (1988). Further developments on robot dynamics using the 
natural orthogonal complement have been reported by Saha (1997, 1999), who 
proposed the decoupled natural orthogonal complement as a means to enable 
the real-time inversion of the mass matrix. 
The manipulator at hand is assumed to be constituted by n moving links 
coupled by n kinematic pairs of the revolute or prismatic types. Again, for 
brevity, the base link is assumed to be inertial, noninertial bases being readily 
incorporated as described in Subsection 7.5.2. For the sake of conciseness, we 
will henceforth consider only manipulators mounted on an inertial base. More-
over, we assume that the generalized coordinates 0 and the generalized speeds 
6 are known at an instant t^, along with the driving torque T(t), for t>tk, 
and 
of course, the DH and the inertial parameters of the manipulator are assumed 
to be known as well. Based on the foregoing information, then, 6 is evaluated 
at tk and, with a suitable integration scheme, the values of 6 and 0 are de-
termined at instant tk-\.i. Obviously, the governing equation (7.60) enables us 
to solve for 6{tk)' This requires, of course, the inversion of the n x n matrix 
of generalized inertia I. Since the said matrix is positive-definite, solving for 
6 from eq.(7.60) can be done economically using the Cholesky-decomposition 
algorithm (Dahlquist and Bjorck, 1974). The sole remaining task is, then, the 
computation of I, the quadratic inertia term CO, and the dissipative torque 5. 
The last of these is dependent on the manipulator and the constitutive model 
adopted for the representation of viscous and Coulomb friction forces and will 
not be considered at this stage. Models for dissipative forces will be studied in 
Section 7.8. Thus, the discussion below will focus on the computation of I and 
GO appearing in the mathematical model of eq.(7.91). 

7.6 Manipulator Forward Dynamics 
291 
Next, the 6n x 6n matrix M is factored as 
(7.92) 
which is possible because M is at least positive-semidefinite. In particular, 
for manipulators of the type at hand, M is positive-definite if no link-mass is 
neglected. Moreover, due to the diagonal-block structure of this matrix, its 
factoring is straightforward. In fact, H is given simply by 
H = diag(Hi,...,Hn) 
each 6 x 6 block H^ of eq.(7.93) being given, in turn, as 
H, 
N^ 
O 
O 
nil 
(7.93) 
(7.94) 
with 1 and O defined as the 3 x 3 identity and zero matrices, respectively. We 
thus have 
M^ = UjUi 
(7.95) 
Furthermore, N^ can be obtained from the Cholesky decomposition of I^, while 
rii is the positive square root of m^, i.e., 
I. = N f N i , 
mi = n'^i 
(7.96) 
Now, since each 6 x 6 M^ block is constant in body-fixed coordinates, the above 
factoring can be done off-line. Prom the foregoing definitions, then, the n x n 
matrix of generalized inertia I can now be expressed as 
where P is defined, in turn, as the 6n x n matrix given below: 
P = H T 
(7.97) 
(7.98) 
The computation of P is now discussed. If we recall the structure of T from 
eq.(7.73) and that of H from eq.(7.93), along with the definition of P, eq.(7.98), 
we readily obtain 
P = 
r H i t n 
0 
H2t2l 
H2t22 
^nXnl 
-tlri.t 
n^n2 
0 
0 
^n^nn 
P l l 
P21 
0 
P22 
0 
0 
Pnl 
Pn2 
(7.99) 
with 0 denoting the 6-dimensional zero vector. Moreover, each of the above 
nontrivial 6-dimensional arrays pij is given as 
p2J â ^i*^ij 
â \ 
TliGn X VA 
if the jth joint is R 
if the jth joint is P 
(7.100) 

292 
7. Dynamics of Serial Robotic 
Manipulators 
Thus, the (i, j) entry of I is computed as the sum of the inner products of 
the {k,i) and the {k,j) blocks of P, for A: = j , . . . , n, i.e., 
n 
^ij=^3i 
= J^PliPkj 
(7.101) 
with both pki and pkj expressed in JF^-j-i-coordinates, i.e., in fcth-link coordi-
nates. Now, the Cholesky decomposition of I can be expressed as 
I = L^L 
(7.102) 
where L is an n x n lower-triangular matrix with positive diagonal entries. 
Moreover, eq.(7.91) is now rewritten as 
L^L0 = -{Ce - J ^ w ^ - 7) + 5 + T 
(7.103) 
If we now recall eq.(7.91), it is apparent that the term inside the parentheses in 
the right-hand side of the above equation is nothing but the torque required to 
produce the motion prescribed by the current values of 0 and 0, in the absence 
of dissipative wrenches and with zero joint accelerations, when the manipulator 
is acted upon by a static wrench w ^ . That is, if we call r the torque r of 
eq.(7.91) under the foregoing conditions, then 
C e - J ^ w ^ - 7 = : T | 
, 
h 
= r 
(7.104) 
which is most efficiently computed from inverse dynamics, using the recursive 
Newton-Euler algorithm, as described in Section 7.4 . Now eq.(7.102) is solved 
for 0 in two steps, namely, 
L^x = - r + r-f-(5 
(7.105a) 
L0 = X 
(7.105b) 
In the above equations, then, x is first computed from eq.(7.105a) by back-
ward substitution. With x known, 0 is computed from eq.(7.105b) by forward 
substitution, thereby completing the computation of 6. The complexity of the 
foregoing algorithm is discussed in Subsection 7.6.2. 
Alternatively, 0 can be calculated in two steps from two linear systems of 
equations, the first one under determined, the second overdetermined. Indeed, 
if we let the product PG he denoted by y, then the dynamics model of the 
manipulator, eq.(7.60), along with the factoring of eq.(7.97), leads to 
F^y = -T-\-T 
+ S 
(7.106a) 
P'0 = y 
(7.106b) 
Thus, in the above equations, y is calculated first as the minimum-norm so-
lution of eq. (7.106a); then, the desired value of 6 is calculated as the least-square 
approximation of eq.(7.106b). These two solutions are computed most efficiently 

7.6 Manipulator Forward Dynamics 
293 
using an orthogonalization algorithm that reduces matrix P to upper-triangular 
form (Golub and Van Loan, 1989). A straightforward calculation based on the 
explicit calculation of the generalized inverses involved is not recommended, 
because of the frequent numerical ill-conditioning incurred. Two orthogonaliza-
tion procedures, one based on Householder reflections, the other on the Gram-
Schmidt procedure, for the computation of both the least-square approximation 
of an overdetermined system of equations and the minimum-norm solution of 
its under deter mined counterpart are outlined in Appendix B. 
The complexity of the foregoing calculations is discussed in Subsection 7.6.2, 
based on the Cholesky decomposition of the generalized inertia matrix, details 
on the alternative approach being available elsewhere (Angeles and Ma, 1988). 
7.6.1 
Planar Manipulators 
The application of the natural orthogonal complement to planar manipulators is 
straightforward. Here, we assume that the manipulator at hand is composed of 
n links coupled by n joints of the revolute or the prismatic type. Moreover, for 
conciseness, we assume that the first link, labeled the base, is fixed to an inertial 
frame. We now adopt the planar representation of the twists and wrenches 
introduced in Section 5.7; that is, we define the twist of the ith link and the 
wrench acting on it as 3-dimensional arrays, namely, 
t^. = 
W i = 
(7.107) 
where coi is the scalar angular velocity of this link; c^ is the 2-dimensional 
velocity of its mass center, C^; n^ is the scalar moment acting on the link; and 
fi is the 2-dimensional force acting at Q . Moreover, the inertia dyad is now a 
3 x 3 matrix, i.e., 
'li 
0^ " 
0 
mil 
Mi = 
(7.108) 
with li defined as the scalar moment of inertia of the ith link about an axis 
passing through its center of mass, in the direction normal to the plane of 
motion, while 0 is the 2-dimensional zero vector and 1 is the 2 x 2 identity 
matrix. 
Furthermore, the Newton-Euler equations of the ith link take on the forms 
rii = liCJi 
(7.109a) 
f^ = rriiCi 
(7.109b) 
and so, these equations can now be cast in the form 
Miii = w f 4- wf, 
i = 1,..., n 
(7.110) 
where we have decomposed the total wrench acting on the ith link into its work-
ing component w|^, supplied by the environment and accounting for motor and 
joint dissipative torques, and wp, the nonworking constraint wrench, supplied 

294 
7. Dynamics of Serial Robotic 
Manipulators 
by the neighboring hnks via the coupHng joints. The latter, it is recalled, develop 
no power, their sole role being to keep the links together. An essential difference 
from the general 6-dimensional counterpart of the foregoing equation, namely, 
eq.(7.48), is the lack of a quadratic term in cji in eq. (7.109a) and consequently, 
the lack of a W^M^ti term in eq.(7.110). 
Upon assembling the foregoing 3n equations of motion, we obtain a system 
of 3n uncoupled equations in the form 
Mt = w ^ + w^ 
Now, the wrench w ^ accounts for active forces and moments exerted on the 
manipulator, and so we can decompose this wrench into an actuator-supplied 
wrench w"^ and a gravity wrench w^. 
In the next step of the formulation, we set up the kinematic constraints 
in linear homogeneous form, as in eq.(7.50), with the difference that now, in 
the presence of n kinematic pairs of the revolute or the prismatic type, K is a 
Sn X 3n matrix. Moreover, we set up the twist-shape relations in the form of 
eq.(7.56), except that now, T is a 3n x n matrix. The derivation of the Euler-
Lagrange equations for planar motion using the natural orthogonal complement, 
then, parallels that of general 3-dimensional motion, the model sought taking 
the form 
1(0)0 + c(0, e)e = T + ^ + s 
(7.iiia) 
with the definitions 
1(6) = T^MT, 
C(0, e) = T^MT, 
T = T ' ^ W ^ , 
7 = T ^ W ^ , 
S = 
T'^W^ 
(7.111b) 
(7.111c) 
We can illustrate best this formulation with the aid of the example below. 
Example 7.6.1 (Dynamics of a planar three-revolute robot) Derive the 
model of the robot of Fig. 7.1, under the assumptions of Example 7.3.1, hut now 
using the natural orthogonal complement. 
Solution: We start by deriving all kinematics-related variables, and thus, 
u)i = 6i^ 
u)2 = 6i -\- 62-^ u)z = Oi -\- 62 -\- O3 
Furthermore, 
t i = ^itii 
t2 = Oit2l + ^2^22 
t3 = 0it3i -h ^2t32 + ^3*33 
where 
t i l = 
1 
E r n 
1 
Epi 
.(l/2)Eai 

7.6 Manipulator FoTwsixd Dynamics 
295 
^21 = 
t22 = 
t31 = 
t32 = 
t33 = 
1 
' 
Eri2_ 
1 
Er22_ 
1 
Eri3 
1 
Er23 
1 1 
= 
= 
= 
= 
= 
1 
_E(ai+P2)_ 
1 
.Ep2. = 
= 
1 
(1/2)1 
1 
_E(ai +a2 4-p3) 
^ 
1 
LE(a2 + P3). 
1 
(l/2)Ea3_ 
= 
E(ai + (l/2)a2) 
1 
E ( a i + a 2 + (l/2)a3) 
1 
E(a2 + (l/2)a3) 
and hence, the 9 x 3 twist-shaping matrix T becomes 
T = 
(l/2)Eai 
1 
E(ai + (l/2)a2) 
1 
0 
0 
1 
(l/2)Ea2 
1 
0 
0 
0 
0 
1 
LE(ai+a2 + (l/2)a3) 
E(a2 + (l/2)a3) 
(l/2)Ea3J 
The 9 x 9 matrix of inertia dyads of this manipulator now takes the form 
M = diag(Mi, M2, M3) 
with each 3 x 3 M^ matrix defined as 
Mi 
li 
0^ 
0 
mil 
Now, the 3 x 3 generahzed inertia matrix is readily derived as 
I = T ^ M T 
whose entries are given below: 
ill = tfiMitii + t^iM2t21 + t|;M3t3l 
h2 = t2iM2t22 + t3iM3t32 = hi 
^13 = t3iM3t33 = J31 
i^22 = t22M2t22 + t32M3t32 
hs = t32M3t33 = /32 
^33 = t33M3t33 
Upon expansion, the above entries result in exactly the same expressions as 
those derived in Example 7.3.1, thereby confirming the correctness of the two 
derivations. Furthermore, the next term in the Euler-Lagrange equations is 
derived below. Here, we will need T, which is readily derived from the above 

0 
(l/2)^iai 
0 
^lai + (1/2)^1232 
0 
0 
0 
0 
(1/2)^1232 
0 
0 
0 
0 
0 
0 
296 
7. Dynamics of Serial Robotic 
Manipulators 
expression for T. In deriving this time-derivative, we note that in general, for 
i = 1,2,3, 
a^ = cj^Ea^, 
E a^ = âa^ 
and hence. 
T = 
^lai 4- ei2SL2 + (l/2)ei23a3 
ei2a2 + (l/2)^i23a3 
(l/2)ei23a3 
where 612 and ^123 stand for 61 + 62 and ^1+^2 + ^3, respectively. 
We now can perform the product T^MT, whose (*, j) entry will be repre-
sented as jj'ij' Below we display the expressions for these entries: 
fin = -â¢^[m2aia2S2 + m3(2aia252 + 
ttia3S23)]^2 
^{aia3S23 + Ci2a3S3)63 
)Ui2 = -â¢^[m2aia2S2 + m3(2aia252 + aia3S23)]{0i + 62) 
--m3{aia3S23 
+ ^2^353)^3 
/^i3 = --m3(aia3523 + CL2a3S3){ei + ^2 + ^3) 
//21 = 2 [^2^1^252 â¢^r m3{2aia2S2 + aia3S23)]0i - -m3a2a3S393 
fi22 = 
--m3a2a3S303 
/^23 = --m3a2a3S3{0i 
+62 + O3) 
A^3i = â¢zm3[{aia3S23 + ^2^^353)^1 + ^203^3^2] 
/^32 = 2^3^:12^353(^1 -1-^2) 
/^33 = 0 
Now, let us define 
u = T^Mte 
whose three components are given below: 
ui = -[m2aia2S2 4- m3(2aia252 4- ai(23523)]^!^2 - m3{aia3S23 + a2a3S3)^i^3 
--[m2aia2S2 
+ m3{2aia2S2 + aia3S23)]0l 
-7n3iaia3S23 + a2a3S3)^2^3 - -^rn3{aia3S23 + a2a3S3)^3 

7.6 Manipulator Forward Dynamics 
297 
^2 = -[m2aia2S2 + m3{2aia2S2 + ^1^3523)]^! - ^723^2^353^1^3 
-m3a2a353^2^3 - ^"^3^2^353^3 
^3 = â¢^'rn3{aia3S23 + Ci2a3S3)0l + m3a2a3S36i62 + -m3a2a353^3 
Q2 
The mathematical model sought, thus, takes the form 
i{e)e + v{e,e) = r + 7 
where 5 = 0 because we have not included dissipation. Moreover, 7 is derived 
as described below: Let wf be the gravity wrench acting on the ith. link, w^ 
then being 
and 
wf = 
0 
w^ = 
wv = 
0 
-m29} 
w? = 
0 
-m39} 
Therefore, 
7 = T^w^ 
miaf Ej + m2(2ai + a2)^Ej + m3[2(ai + as) + a3)^Ej 
msaf Ej + m3(2a2 + a3)^Ej 
m3a^Ej 
But 
af Ej = - a f i = - a i cos^i 
a^Ej = - a j i = -0^2 cos(^i + 62) 
a|^Ej = - a j i = - a s cos(ei + ^2 + ^3) 
Hence, 
7^ 
-miaici - 2m2{aici + a2Ci2) - 2m3{aiCi + a2Ci2 + ^3(2123) 
-m2a2Ci2 - 2m3(a2Ci2 + ^30123) 
-m3a3Ci23 
with the definitions for Ci, C12, and C123 introduced in Example 7.3.1. As the 
reader can verify, the foregoing model is identical to the model derived with the 
Euler-Lagrange equations in that example. 
Example 7.6.2 (Dynamics of a spatial 3-revolute robot) The robot of 
Fig. 4'i5 is reproduced in Fig. 7.7, in a form that is kinematically equivalent to 
the sketch of that figure, but more suitable for the purposes of this example. For 
this robot, (i) find its inertia matrix at the configuration depicted in that figure; 

298 
7. Dynamics of Serial Robotic 
Manipulators 
Figure 7.7: Mass-center locations of the robot of Fig. 4.19 
(ii) find the time-rate of change of the inertia matrix under a maneuver whereby 
0^ = 02 = 9s = p s~^ and 0i = 02 = 6s = 0; and (Hi) under the same maneuver, 
find the centrifugal and Coriolis terms of its governing equation. Furthermore, 
assume that all links are identical and dynamically isotropic. What we mean 
by ^^dynamically isotropic'^ is that the moment of inertia of all three links about 
their mass centers are proportional to the 3 x 3 identity matrix, the proportional-
ity factor being I. Moreover, all three links are designed so that the mass center 
of each is located as shown in Fig. 7.7. 
Solution: 
(i) Henceforth, we represent all vectors and matrices with respect to the J^i-
frame of Fig. 7.7, while denoting by i, j , and k the unit vectors parallel to 
the Xi, Fi, and Zi axes, respectively. Under these conditions, we have, 
for the unit vectors parallel to the revolute axes, 
ei = k, 
e2 = j , 
63 = i 
while vector a^ is directed from the origin of J^i to that of !Fi^i, for i = 
1,2,3. Hence, 
ai = - a i , 
a 2 = a ( j - k ) , 
as = a(i + k) 
Likewise, the position vectors of the mass centers, p^, for i = 1, 2, and 3, 
with respect to the origins of their respective frames, are given by 

7.6 Manipulator Forward Dynamics 
299 
P2 = 2^^^ + 2j - k) 
We can now calculate the various 6-dimensional arrays t^j, for i = 1, 2, 3, 
and j = 1 till i, i.e., 
tii = 
t22 = 
^31 = 
t32 = 
^33 = 
ei X pi 
= â 
ei 
_ei X (ai + P 2 ) . 
62 
e2 x p 2 . = â 
k 
1 
W2)(i + j)j 
= 
k 
_-(a/2)(2i+j)_ 
W2)(i + k) 
e i 
ei X (ai + 32 + P3) 
e2 
62 X (a2 + P3) 
k 
-ai 
-(a/2)(i + 2k) 
eg x p 3 
-W2)j 
and so, the 18 x 3 matrix T is given by 
k 
0 
0 
-
-(a/2)(i+j) 
0 
0 
k 
j 
0 
-(a/2)(2i+j) 
-(a/2)(i + k) 
0 
k 
j 
i 
-ai 
-(a/2)(i + 2k) 
-(a/2)j. 
Moreover, the 6 x 6 inertia dyad of the ith link takes the form 
M, = 71 
O 
O 
m l , 
2 = 1,2,3 
with 1 and O denoting the 3 x 3 identity and zero matrices, respectively. 
Thus, the 18 x 18 system mass matrix is given as 
M = diag(Mi, M2, M3) 
and the 3 x 3 generalized inertia matrix I of the manipulator is 
I = T ^ M T 
whose entries are given by 
111 = tfiMitii + t^iMstsi + t JiMstai 

300 
7. Dynamics 
of Serial Robotic 
Manipulators 
1X2 = t2iM2t22 + t3iM3t32 = 
hi 
Il3 = t3iM3t33 = J31 
â¢^22 = t22M2t22 + t32M3t32 
^23 = t32M3t33 = /32 
^33 = t33M3t33 
Upon expansion, the foregoing expressions yield 
I = 
-ma^ 
4 
11 4 
4 
7 
0 
0 
0" 
0 
1 + / 
3 
0 
0 
0 
2 
0 
0 
0 
1 
(a) Now, the time-rate of change of I, I, is calculated as 
i = T^MT + t ^ M T ^ + T^(WM - MW)T 
We proceed first to compute T. 
This time-derivative is nothing but the 
18 X 3 matrix whose entries are the time-derivatives of the entries of T, 
namely, t^j, as given in eq.(7.84), which is reproduced below for quick 
reference: 
where rij is given, in turn, by 
Tij =CAJJ X SLj -i- ...+ 
Ui-i 
X a^-i -\-OJi X Pi 
Hence, we will need vectors cj^, for ^ = 1, 2, and 3. These are calculated 
below: 
^ 1 = ^1^1 = pk 
^2 = ^1^1 + ^2^2 = P(j + k) 
^ 3 = ^lei + ^262 + ^363 = p(i + j + k) 
We have, therefore. 
t i i = 
t21 = 
ei 
ei X pi -f- ei X pi 
0 
ei X {(jji X pi) 
0 
( l / 2 ) a ( i - j ) 
ei 
ei X (ai -I- P2) + ei X (ai -f- P2) 
0 
ei X {uji X ai -f CJ2 X P2) 
P 
0 
(l/2)aj 

7.6 Manipulator Forward Dynamics 
301 
t22 = 
= P 
t31 = 
â¬2 
[e2 X P2 + ^ 2 X /92 
pei 
X 62 
{pei X 62) X P2 + e2 X [p(ei -f 62) x P2] 
âi 
- ( l / 2 ) a ( i + j - k ) 
= P 
ei 
ei X (ai + a2 + ps) + ei x (ai + a2 + P3) 
0 
ei X (a?! X ai + a?2 X a2 + cjs X P3) 
0 
ei X [pei X ai + p(ei + 62) x a2 + p(ei + e2 + â¬3) x p^] 
0 
(7.112) 
^32 = 
tss = 
e2 
e2 X (a2 + Ps) + â¬2 X (a2 + ps) 
pei X e2 
(pei X 62) X (a2 + P3) + pe2 X [(ei + 62) x (a2 + P3)] 
- ( l / 2 ) a ( 2 i 4 - j - k ) 
es X P3 + 63 X P3 
W2 X e3 
{OJ2 X 63) X P3 + 63 X (CJ3 X P3) 
p(ei+e2) xe3 
p[(ei + 62) X 63] X P3 +pe3 X [(ei + 62 + e3) x P3] 
p(e2 - ei) 
p(e2 - ei) X P3 + p[{e3 â¢ P3)(ei + 62 + 63) - P3] 
j - k 
(l/2)a(i-k) 
Now, let 
P = T^MT? 
whose entries are displayed below: 
pn = tfiMitii + t^iM2t2i + tJiM3t3i 
P12 = t|iM2t22 + t|lM3t32 
Pl3 = t^iM3t33 
P21 = t^2M2t21 + t^2M3t31 
P22 = t22M2t22 4- t32M3t32 

302 
7. Dynamics of Serial Robotic 
Manipulators 
P23 = tgsMstaa 
P3l = t^3M3t3i 
P32 = t33M3t32 
P33 = tssMataa 
Upon performing the foregoing operations, we end up with 
T ^ M T = p 
-{l/4)a^m 
-(l/2ym 
(7/4)a2m 
0 
(l/4)a2m - 1 
-{l/2)a^m-I 
{l/4)a'^m + I 
0 
= P 
the second term of the above expression for I simply being P^. In order to 
compute the third term, we need the products W M and M W . However, it 
is apparent that the latter is the negative of the transpose of the former, 
and so, all we need is one of the two terms. Furthermore, note that 
since both matrices M and W are block-diagonal, their product is block-
diagonal as well, namely, 
W M = diag(WiMi, W2M2, W3M3) 
where for 2 = 1,2, and 3, 
W, 
^i 
O 
o o 
with O denoting the 3x3 zero matrix, while Cti is the cross-product matrix 
of vector Ui. Moreover, 
W^M^ 
o o 
Therefore, W^M^ is skew-symmetric; as a consequence, W M is also skew-
symmetric, and the difference W M â M W vanishes. Hence, in this par-
ticular case, i reduces to 
I = P - | - P ' 
That is. 
I = p 
-{l/2)a'^m 
(5/4)a2m 
-I 
(5/4)a2m 
0 
{l/2)a^m 
-I 
0 
(iii) Now, the term of Coriolis and centrifugal forces can be computed in two 
ways, namely, (a) as ( T ^ M T + T ^ W M T ) 0 , and (b) by using the Newton-
Euler algorithm with ^^ = 0, for z = 1, 2, and 3. We proceed in these two 
ways in order to verify the correctness of our results. 
In proceeding with the first alternative, we already have the first term in 
the foregoing parentheses; the second term is now computed. First, we 

7.6 Manipulator Forward Dynamics 
303 
note that 
W M T = 
W i M i t i i 
0 
0 
W2M2t21 
W2M2t22 
0 
WsMstai 
W3M3t32 
WsMstas 
with 0 defined as the 6-dimensional zero vector. The foregoing nontrivial 
6-dimensional arrays are computed below: 
W i M i t i i = 
W2M2t2l = 
W2M2t22 = 
'Till 
O 
"7^2 
O 
O 
o 
o 
o 
k 
1 
-(a/2)(i+j)J 
k 
-(a/2)(2i + j) 
= 
lilik] 
0 J 
f/fisk 
[ 0 
= 
â¢Q] 
_oJ 
pi r i 
[0 
WaMatsi = 
"7122 
O' 
O 
O 
J 
-(a/2)(i + k) 
>7(j + k) x j " 
0 
|7fi3 
O 
L O 
O 
= p7 
k 
- ai 
âi] 
. 0 J 
â¢/^2J" 
0 
"Jl^sk" 
0 
pJ(iH-j + k) x k 
0 
= pl i - J 
0 
WsMatas = 
= 
WaMataa = 
'Ifts 
O] 
O 
OJ 
[ 
j 
[-(a/2)(i + 2k)_ 
>7(i+j + k) X j ' 
0 
1^3 O] 
O 
Oj [-W 
= pl\ 
2)J. 
= 
= 
- i + k" 
0 
\n 
0 J 
0 
pl(i + j + k) X i 
0 
= pl j - k 
0 
where 0 now denotes the 3-dimensional zero vector. Therefore, 
W M T = pi 
0 
0 
i 
0 
0 
0 
0 
and hence, 
T^ W M T = pi 
0 1 
0 
- i 
0 
0 
0 
-i + k j - k 
0 
0 
1 
- 1 
0 
1 
- 1 
0 
which turns out to be skew-symmetric. Notice, however, that this will not 
always be the case. The reason why the above product turned out to be 

304 
7. Dynamics of Serial Robotic 
Manipulators 
skew-symmetric in this example is that the individual matrices W^ and 
M^ commute, a consequence of the assumed inertial isotropy, which leads 
to the isotropy of matrices I^, for i = 1, 2, and 3. Now, we have 
T ^ M T + T^ W M T = pA 
with A defined as 
A = 
-{3/4)a^m 
(7/4)a'^m + / 
-(l/2)a'^m 
- 21 
-{l/2)a'^m 
-I 
0 
(l/4)a2m + 2/ 
{S/4)a^m + I 
(l/4)a2m -21 
0 
Hence, the term of Coriolis and centrifugal forces is 
(l/2)a2m - 1 
{T' M T + T ' W M T ) 0 = p^ 
-(l/4)a2m + 7 
thereby completing the desired calculations. 
Now, in order to verify the correctness of the above results, we will compute 
the same term using the Newton-Euler algorithm. To this end, we set 6i = 0, 
for i = 1, 2, and 3, in that algorithm, and calculate the desired expression as 
the torque required to produce the joint rates given above. 
Since we have already calculated the angular velocities, we will skip these 
calculations here and limit ourselves to the mass-center velocities, angular ac-
celerations, and mass-center accelerations. We thus have 
ci 
cji x p i = p k x ( - 2 ^ ) ( i - J ) = -2^^(^+J 
C2 = ci 4- a;i X (ai - p^) +U2X p^ 
= ^ap[-i-3 
- k X (i + j) + (j + k) X (i -f-j - k)] = --ap(3i + j + k) 
C3 = C2 + a;2 X (a2 - P2) + ^3 x pg 
= --ap[3i+j 
+ k + (j -f k) X (i + k) - (i + j -f k) X (2i + k)] 
= --apiSi+i 
+ 2k) 
Now, the acceleration calculations are implemented recursively, which yields 
cji = 9iei = 0 
cL?2 = tl?i -f a?i X ^262 = p^k X j = -p^i 
cl^a = ^2 + ^2 X ^363 = -p'^i + p^ii + k) X i = -p^(i - j + k) 
ci = cJi X pi + cji X (cji X pi) = ap^k x k x - ( - i + j ) 
= 
^ap'^{i-i) 

7.6 Manipulator Forward Dynamics 
305 
C2 = ci + cJi X (ai - pi) + o^i X [ui X (ai - p^)] + U2 x P2 
+ U2 X {uj2 XP2) = -^aP^i^ -i) + 0 + -ap'^ii + i) 
- ^ V ( j + 2k) + ^ap\-2i 
- 3j + 3k) = ^ap2(-4j + k) 
C3 = C2 + cJ2 X (a2 - P2) + a;2 X [a;2 x (a2 - P2)] + ^3 x P3 
= 4-cja X (u;3 X pg) = -ap2(-4j 4-k) - -ap^j + -ap^{2i-i 
+ k) 
With the foregoing values, we can now implement the inward Newton-Euler 
recursions, namely, 
ff = msc's â f = âm(2ap^j) â 0 = â2amp^j 
nf = l3d;3 + CJ3 X l3a;3 - n + pg x ff 
= - V ( i - j + k) + 0 - 0 - a^mp^(-i + 2k) 
= - / / ( i - j + k) + a^mp^{\ - 2k) 
ff = m2C2 + ff* = -amp^{-A} 
+ k) - amp^j = -amp^(-6j + k) 
nf = I2CJ2 + a?2 X I2CJ2 + nf + (a2 - P2) x f[ + P2 x ff 
= -p^n + 0 - /p^(i - j + k) + -a^mp^{i - 2k) + a^mpH 
+ -a^mp^(-4i - j - 6k) 
= -7p^(2i - j + k) + i<22m/(2i - j - 10k) 
ff = mici + ff = 2^^^^(^ ~ j) "^ 2^^^^^"^*^ ^ ^^ 
= - a m p 2 ( i - 7 j + k ) 
nf = IicJi -\-UiX Iio?! + nf + (ai - p^) x f2^ + Pi x ff 
= 0 + 0 - p^J(2i - j + k) + ^a^mp^(2i - j - 10k) 
--a^mp^(i - j - 6k) + -a^mp^(i + j - 6k) 
= - V ( 2 i - j + k ) + i a ' m p ' ( 2 i + j + 2k) 
and hence, 
r3 = nf â¢ e3 = âIp^ + a^mp^ 

306 
7. Dynamics of Serial Robotic 
Manipulators 
T2 = n|' â¢ e2 = Ip^ - 
-a^mp^ 
n = nf â¢ ei = -Ip^ 4- -a^mp^ 
thereby completing the calculation of the term containing Coriolis and centrifu-
gal forces, i.e., 
r 
âIp^ + a^mp^ 
c{e,e)e= ip'-{ii4)a''mp' 
As the reader can verify, the natural orthogonal complement and the New-
ton-Euler algorithm produce the same result. In the process, the reader may 
have realized that when performing calculations by hand, the Newton-Euler 
algorithm is more prone to errors than the natural orthogonal complement, 
which is more systematic, for it is based on matrix-times-vector multiplications. 
7.6.2 
Algorithm Complexity 
The complexity of this algorithm is analyzed with regard to the three items 
involved, namely, {i) the evaluation of L, {ii) the solution of systems (7.105a & 
b), and {Hi) the computation of r. 
The evaluation of L involves, in turn, the three following steps: (a) the 
computation of P; (b) the computation of I; and (c) the Cholesky decomposition 
of I into the product L^L. 
(i.a) In the computation of P, it is recalled that H^-, a^, and p^, and conse-
quently, 6i = ai â Pi, are constant in .F^+i, which is the frame fixed to the 
*th link. Moreover, at each step of the algorithm, both revolute and pris-
matic pairs are considered. If the jth joint is a revolute, then the logical 
variable R is true; if this joint is prismatic, then R is false. Additionally, 
it is recalled that e^_|.i, in ^^-coordinates, is simply the last column of Q^. 
The columnwise evaluation of P, with each pij array in jr^_|.i-coordinates, 
is described in Algorithm 7.6.1. Note that in this algorithm, r^j is cal-
culated recursively from r^-i^j. To do this, we use the relation between 
these two vectors, as displayed in Fig. 7.8. 
(i.b) Now we go on to the computation of I, as described in Algorithm 7.6.2. In 
that algorithm, the subscripted brackets indicate that the vectors inside 
these brackets are represented in J^A;+I coordinates. 
(i.c) Because the Cholesky decomposition of a positive-definite matrix is a stan-
dard item, it is not discussed here. This step completes the computation 
ofL. 
(ii) The solution of systems (7.105a & 7.105b) is a standard issue as well, and 
hence, needs no further discussion. 

7.6 Manipulator Forward Dynamics 
307 
Figure 7.8: Recursive calculation of vectors r^j 
(iii) The term r is computed using the recursive Newton-Euler formulation, 
as discussed in Section 7.4. To do this, we calculate r by setting 0 = 0 in 
that procedure, which introduces a slight simplification of the complexity 
of the inverse-dynamics algorithm. 
Below we determine the computational complexity of each of the foregoing 
steps. 
(i.a) This step includes Algorithm 7.6.1, which involves two nested do-loops. 
The first statement of the outermost loop involves no fioating-point oper-
ations; the second statement involves (a) one multiplication of a matrix 
by a vector, (b) one cross product, and (c) one multiplication of a scalar 
by a vector. Of the last three items, (a) is done off"-line, for the matrix 
and the vector factors are both constant in J^j^-i-coordinates, and so, this 
operation is not counted. Moreover, item (b) is nothing but the cross 
product of vector [ej]j_|_i = [0, 0, 1]^ by vector TJJ. A similar oper-
ation was already discussed in connection with Algorithm 4.1 and was 
found to involve zero fioating-point operations, for the result is, simply, 
[ej X rjj]j^i 
= [â^, X, 0]'^, with x and y denoting the Xj^i 
and Ij+i 
components of r^j. Hence, item (b) requires no fioating-point operations, 
while item (c) requires 2n multiplications and zero additions. 
The innermost do-loop, as pertaining to re volute manipulators, involves 
two coordinate transformations between two consecutive coordinate frames, 
from Ti- to J^^+i-coordinates, plus two vector sums, which consumes 
16(n â i) multiplications and 14(n â i) additions; this loop also consumes 
one matrix-times-vector multiplication, one cross product and one scalar-
times-vector multiplication, which requires 18(n â i) multiplications and 
12(n â i) additions. Thus, the total numbers of operations required by 

308 
7. Dynamics of Serial Robotic 
Manipulators 
Algorithm 7.6.1: 
For j = 1 to n step 1 do 
^jj <- [pjb+i 
Pjj 
^ 
_ ^ j ^j ^ 
^jj. J J+1 
For i = j + 1 to n step 1 do 
^3 ^ 
Qli^jh 
if R then 
^ij ^ 
Ql[-^i-iJ+Si-i]i 
+ [Pi]i^i 
Pij <-
else 
Pij 
^ 
endif 
Tl'iGj X r^j J 
0 
7i{Gj 
i+1 
i+1 
enddo 
enddo 
this step, for an n-revolute manipulator, are Mia multipHcations and Ai 
additions, as given below: 
Mia = 2n + ^ 
34(n -i) 
= ITn^ - 15n 
(7.113a) 
n 
Aia = Y, 26(n -i) 
= 13n^ - 13n 
(7.113b) 
the presence of prismatic pairs reducing the above figures. 
(i.b) This step, summarized in Algorithm 7.6.2, is also composed of two do-
loops, each containing the inner product of two 6-dimensional arrays, and 
hence, requires six multiplications and five additions. Moreover, in the 
outermost do-loop, this operation is performed n times, whereas in the 
innermost loop, X]^i(n - i) times, i.e., n{n - l)/2 times. Thus, the step 
requires Mit multiplications and Ait additions, as given below: 
5 
5 
Mil = Sn^ + 3n, 
Ait = -n^ -f -n 
(7.114) 

7.6 Manipulator Forward Dynamics 
309 
Algorithm 7.6.2: 
For j = 
enddo 
1 to n 
For i 
enddo 
step 1 do 
^n 
^ 
= j + 1 to n 
lij 
^ 
Ylk=j 
step 
Iji 
<-
vljPkj 
1 do 
z2k=i[ 
]fc+i 
PJiPkj ]A;+I 
(i.c) This step performs the Cholesky decomposition of an n x n symmetric and 
positive-definite matrix, a standard operation that requires Mic multipH-
cations and Aic additions (Dahlquist and Bjorck, 1974), namely, 
Mic = -^n^ + 2 ^ ' + 3^' 
^ic = ^ ^ ' + 2^^ "^ s"" 
^^'^^^^ 
(ii) In this step, the two triangular systems of equations, eqs.(7.105a & b), are 
solved first for x and then for 9. The numbers of operations it takes to 
solve each of the two systems, as derived by Dahlquist and Bjorck (1974), 
are repeated below for quick reference; these are labelled Ma and An, 
respectively, i.e.. 
Ma = n^. 
An =n^ -n 
(7.116) 
(iii) In this step, r is computed from inverse dynamics, with w ^ = 0 and 
0 = 0. If this calculation is done with the Newton-Euler formulation, 
we then have the computational costs given in eq.(7.43), and reproduced 
below for quick reference: 
Mm = 137n - 22, 
Am = llOn - 14 
(7.117) 
Because of the simplifications introduced by setting the joint accelerations equal 
to zero, the foregoing figures are, in fact, slightly lower than those required by 
the general recursive Newton-Euler algorithm. 
Thus, the total numbers of multiplications and additions required for the 
forward dynamics of an n-revolute, serial manipulator are 
1 o 
43 o 
376 
^^ 
, 
1 o 
,^ o 
593 
, , 
/^...nx 
Mf = -n^ + ân^ + -ân - 22, 
Af = -n^ -f 17n^ 4- -ân - 14 
(7.118) 
6 
2 
3 
6 
6 
In particular, for a six-revolute manipulator, one obtains 
Mf = 1,540, 
Af = 1,227 
(7.119) 

310 
7. Dynamics of Serial Robotic 
Manipulators 
We have reduced the foregoing figures even further by introducing a modified 
Denavit-Hartenberg labeHng of coordinate frames and very careful management 
of the computations involved. Indeed, in (Angeles and Ma, 1988), the complex-
ity of the algorithm for a six-revolute manipulator of arbitrary architecture is 
reduced to 1,353 multiplications and 1,165 additions. Since the details of this 
simplification lie beyond the scope of the book, we do not elaborate on this item 
here. 
7.6.3 
Simulation 
The purpose of the algorithm introduced above is to enable us to predict the 
behavior of a given manipulator under given initial conditions, applied torques, 
and applied loads. The ability of predicting this behavior is important for several 
reasons: for example, in design, we want to know whether with a given selection 
of motors, the manipulator will be able to perform a certain typical task in 
a given time frame; in devising feedback control schemes, where stability is a 
major concern, the control engineer cannot risk a valuable piece of equipment by 
exposing it to untested control strategies. Hence, a facility capable of predicting 
the behavior of a robotic manipulator, or of a system at large, for that matter, 
becomes imperative. 
The procedure whereby the motion of the manipulator is determined from 
initial conditions and applied torques and loads is known as simulation. Since we 
start with a second-order n-dimensional system of ODE in the joint variables 
of the manipulator, we have to integrate this system in order to determine 
the time-histories of all joint variables, which are grouped in vector 0. With 
current software available, this task has become routine work, the user being 
freed from the quite demanding task of writing code for integrating systems of 
ODE. Below we discuss a few issues pertaining to the implementation of the 
simulation-related algorithms available in commercial software packages. 
As a rule, simulation code requires that the user supply a state-variable 
model of the form of eq.(7.45), with the state-variable vector, or state-vector for 
brevity, x, and the input or control vector u defined as 
X = 
, u{t)=T{t) 
(7.120) 
With the above definitions, then we can write the state-variable equations, or 
state equations for brevity, in the form of eq.(7.45), with f(x, r) given by 
f(x, r) = 
(7.121) 
thereby obtaining a system of 2n first-order ODE in the state-variable vector x 
defined above. Various methods are available to solve the ensuing initial-value 
problem, all of them being based on a discretization of the time variable. That 
is, if the behavior of the system is desired in the interval to < t < tp, then the 
software implementing these methods provides approximations { y^ } ^ to the 
state-variable vector at a discrete set of instants, {t^ }o^, with tN = tF' 

7.6 Manipulator Forward Dynamics 
311 
The variety of methods available to solve the underlying initial-value problem 
can be classified into two main categories, explicit methods and implicit methods. 
The former provide y^-f i explicitly in terms of previously computed values. On 
the contrary, implicit methods provide y^+i in terms of previously computed 
values Yfe, y^-i, â¢â¢â¢, etc., and yk-\-i itself. For example, in the simplest of 
implicit methods, namely, the backward Euler method, we can approximate the 
integral of f in the interval tk < t < t^+i by resorting to the trapezoidal rule 
(Kahaner et al., 1989), which leads to the expression 
Yfe+i =yk + hkfitk^i,yk-{-i) 
(7.122) 
In eq.(7.122), hk is the current time-step tk-^i â tk and f{tk-\.i',yk-\-i) can be 
an arbitrary function of y/b-f i- If this function is nonlinear in the said variable, 
then, a directâas opposed to iterativeâcomputation 
of yk-\-i is very unlikely. 
Hence, most likely an iterative scheme must be implemented at every integration 
stage of an implicit method. While this feature might render implicit schemes 
unattractive, they offer interesting advantages. Indeed, the iterative procedure 
mentioned above requires a tolerance to decide when and whether the procedure 
has converged. The convergence criterion imposed thus brings about a self-
correcting effect that helps keep the unavoidable truncation error under control. 
This error is incurred when approximating both the time derivative x and the 
integral of f by floating-point operations. 
Current software provides routines for both implicit and explicit methods, 
the user having to decide which method to invoke. Of the explicit methods 
in use, by far the most common ones are the Runge-Kutta methods. Of these, 
there are several versions, depending on the number of evaluations of the func-
tion f(ti,yi), for various values of i, that they require. A two-stage Runge-
Kutta method, for example, requires two function evaluations, while a four-
stage Runge-Kutta method requires four. The self-correcting feature of implicit 
methods, not present in Runge-Kutta methodsâto be sure, implicit Runge-
Kutta methods also exist (Gear, 1971), but these are less common than their 
explicit counterpartsâis compensated for by a clever strategy that consists in 
computing y^+i using two Runge-Kutta schemes of different numbers of stages. 
What is at stake here is the magnitude of the local error in computing yfc-fi, 
under the assumption that y^ is error-free. Here, the magnitude of the error is 
of order /z^, where p is the order of the method in use. In Runge-Kutta meth-
ods, the order of the method is identical to its number of stages. In general, a 
method is said to be of order p if it is capable of computing exactly the integral 
of an ordinary differential equation, provided that the solution is known to be 
a pth-degree polynomial. Now, upon computing yk-\-i using two Runge-Kutta 
schemes with N and N -\-l stages, we can compare the two computed values 
reported by each method, namely, y^;^ and y ^ / . If a norm of the difference 
of these two values is smaller than a user-prescribed tolerance, then the step 
size in use is acceptable. If not, then the step size is halved, and the process 
is repeated until the foregoing norm is within the said tolerance. The most 
common Runge-Kutta methods are those combining two and three stages and 
those combining four and five. 

312 
7. Dynamics of Serial Robotic 
Manipulators 
A drawback of Runge-Kutta methods is their inabihty to deal with what are 
known as stiff systems, first identified by Gear (1971). As defined by Shampine 
and Gear (1979), a system of ordinary differential equations is said to be stiff if 
it is not unstable and its linear partâi.e., the linear part of the series expansion 
of f, evaluated at the current instantâcomprises a coefficient matrix that has 
an eigenvalue with a negative real part whose absolute value is much greater 
than that of the other eigenvalues. In other words, stiff systems of ODE are 
stable systems with very different time scales. Thus, stiff systems are not inher-
ently difficult to integrate, but they require a special treatment. Gear's method, 
which is implicit, provides exactly the means to handle stiff systems. However, 
methods like Runge-Kutta's, with excellent performance for nonstiff systems, 
perform rather poorly for stiff systems, and the other way around. The math-
ematical models that arise in robotic mechanical systems are likely to be stiff 
because of the various orders of magnitude of the physical parameters involved. 
For example, robotic manipulators are provided, usually, with links close to the 
base that are heavy and with Hnks far from the base that are light. As a conse-
quence, when simulating robotic mechanical systems, a provision must be made 
for numerical stiffness. 
Commercial software for scientific computations offers Runge-Kutta meth-
ods of various orders, with combinations thereof. For example, IMSL offers 
excellent FORTRAN routines, like IVPRK, for the implementation of Runge-
Kutta methods, while Matlab's Simulink toolbox offers the C functions rk23 
and rk45 for the implementation of second-and-third and fourth-and-fifth-order 
Runge-Kutta methods. With regard to stiff systems, IMSL offers a subrou-
tine, IVPAG, implementing both Adams's and Gear's methods, while Simulink 
offers the adams and gear functions for the implementation of either of these. 
Since Matlab is written in C, communication between Matlab and FORTRAN 
programs is not as direct as when using IMSL, which may be disappointing to 
FORTRAN users. Details on linking FORTRAN code with Matlab and other 
related issues are discussed in the pertinent literature (Etter, 1997). Moreover, 
the FORTRAN SDRIV2 subroutine (Kahaner, Moler, and Nash, 1989) comprises 
features that allow it to handle both stiff and nonstiff systems. 
7.7 
Incorporation of Gravity Into the Dynamics 
Equations 
Manipulators subjected to gravity fields have been discussed in Section 7.4 in 
connection with the Newton-Euler algorithm and with Kane's equations. As 
found in that section, gravitational forces can be incorporated into the under-
lying models without introducing any major modifications that would increase 
the computational load if the method of Luh et al. (1980) is adopted. Within 
this approach, gravitational forces are taken into account by defining the ac-
celeration of the mass center of the 0th link, the base link, as equal to â g, 
the negative of the gravity-acceleration vector. The effect of this approach is to 

7.8 The Modeling of Dissipative Forces 
313 
propagate the gravity effect into all the links composing the manipulator. Thus, 
the kinematics algorithm of Section 7.4 need not be modified in order to include 
gravity forces, for all that is needed is to declare 
[Soil 
^ 
[-g]i 
(7.123) 
If inverse dynamics is computed with the natural orthogonal complement, then 
the twist-rate of the first link will have to be modified by adding a nonhomo-
geneous term to it, thereby accounting for the gravity-acceleration terms. That 
is, 
" 0 
ti 
"f- 
^itii + ^itii â¢{â¢ 
-g 
(7.124) 
Otherwise, the foregoing algorithms require no modifications. Furthermore, 
with regard to simulation, it is pointed out that the r term defined in eq.(7.104), 
and appearing in the right-hand side of eq.(7.105a), is computed from inverse 
dynamics with zero frictional forces and zero joint accelerations. 
7.8 
The Modeling of Dissipative Forces 
Broadly speaking, frictional forces are of two basic types, namely, (i) viscous 
forces and (ii) Coulomb, or dry-friction, forces. The latter occur when contact 
between two solids takes place directly, the former when contact between the 
solids takes place via a viscous fluid, e.g., a lubricant. In the analysis of viscous 
fluids, a basic assumption is that the relative velocity between the fluid and the 
solid vanishes at the fluid-solid interface, i.e., at the solid boundary confining the 
fluid. Hence, a velocity gradient appears within the fluid, which is responsible 
for the power dissipation inside it. In fact, not all the velocity gradient within 
the fluid, but only its symmetric part, is responsible for power dissipation; the 
skew-symmetric part of the velocity gradient accounts for a rigid-body rotation 
of a small fluid element. Thus, if a velocity field v(r, t) is defined within a region 
1Z occupied by a viscous fluid, for a point of the fluid of position vector r at a 
time t, then, the velocity gradient grad(v) = 9v/9r, can be decomposed as 
grad(v)=D + W 
(7.125) 
where D and W are the symmetric and the skew-symmetric parts of the velocity 
gradient, i.e., 
D = i[grad(v) +grad'^(v)], 
W = i[grad(v) - grad^(v)] 
(7.126) 
The kinematic interpretation of D and W is given below: The former ac-
counts for a distorsion of an inflnitesimally small spherical element of fluid into 
a three-axis ellipsoid, the ratios of the time rates of change of the lengths of the 
three axes being identical to the ratios of the real eigenvalues of D; the latter 
accounts for the angular velocity of the ellipsoid as a rigid-body. Clearly, both 

314 
7. Dynamics of Serial Robotic 
Manipulators 
D and W change from point to point within the fluid and also from time to 
time, i.e., 
D = D(r,t), 
W = W(r,t) 
(7.127) 
Since the skew-symmetric matrix W accounts only for the rotation of a 
differential element of fluid as a rigid body, it cannot be responsible for any 
energy dissipation, and hence, the only part that is responsible for this is D. 
In fact, for a linearly viscous, incompressible fluid of viscosity coefficient ju, the 
power dissipated within 7?Â« is given by 
n ^ = / fitr(D'^)dn 
(7.128) 
Jn 
Now, if the motion of the lubricant separating the two cylindrical surfaces 
of a revolute pair is modeled as a purely tangential velocity fleld (Currie, 1993), 
which assumes that the two cylinders remain concentric, then the foregoing 
expression for 11^ leads to the dissipation function 
A = ^/Se'^ 
(7.129) 
where 9 is the relative angular speed between the two cylinders and the coeffi-
cient /? is a function of the lubricant viscosity and the geometry of the kinematic 
pair at hand. If the kinematic pair under study is prismatic, then we can model 
the motion of the lubricant between the two prismatic surfaces as a Couette 
flow between a pair of parallel surfaces of the sides of the prism. Under these 
conditions, then, the associated dissipation function A takes on the same form 
of that given for a revolute pair in eq.(7.129), in which the sole difference is 
that 0 changes to h, the time rate of change of the associated joint variable. Of 
course, b is the relative speed between the two prismatic surfaces. Thus in any 
event, the dissipation function of the ith joint due to linearly viscous effects can 
be written as 
Ai = \^ie\ 
(7.130) 
where Qi changes to bi if the zth pair is prismatic. The dissipation function thus 
arising then reduces to 
A = ^ A i = i0^B6> 
(7.131) 
where the constant ny.n 
matrix B is given by 
B = diag(/3i,^2,...,;5n) 
(7.132) 
and hence, the generalized force &^ associated with Hnearly viscous effects is 
linear in the vector of joint rates, 6, i.e., 
S^ = - ^ 
= -BO 
(7.133) 

7.8 The Modeling of Dissipative Forces 
315 
and so, A = â(1/2)11^, which was introduced in eqs.(7.11) and (7.12a & b). 
Coulomb, or dry friction, is much more difficult to model. If Sf^ denotes 
either the dissipative torque produced by Coulomb friction at a revolute or 
the dissipative force produced by Coulomb friction at a prismatic joint, and 6i 
the associated joint rate, then, the simplest model for the resulting generalized 
Coulomb-friction force is 
S? = -rfsgniOi) 
(7.134) 
where sgn(-) denotes the signum function, which is defined as +1 or â1, de-
pending on whether its argument is positive or negative, and rf is a positive 
constant representing a torque for revolute joints or a force for prismatic joints. 
The numerical value of this constant is to be determined experimentally. The 
foregoing model leads to a simple expression for the associated dissipation func-
tion, namely, 
Af = Tf\ei\ 
(7.135) 
The Coulomb dissipation function for the overall manipulator is, then, 
A^ = X^Tfi^,| 
(7.136) 
1 
The foregoing simplified model of Coulomb friction forces is applicable when 
the relative speed between the two surfaces in contact is high. However, at low 
relative speed, that model becomes inaccurate. In robotics applications, where 
typical end-eff'ector maximum speeds are of the order of 1 m/s, relative speeds 
are obviously low, and hence, a more accurate model should be introduced. Such 
a model should account for the empirical observation that Coulomb frictional 
forces are higher at low relative speeds and become constant at very high relative 
speeds. A model taking this fact into account has the form 
S? = -{rf 
+ e,e-^'l^'l)sgn(^,) 
(7.137) 
where 7^, and â¬^ are constants associated with the ith joint and are to be deter-
mined experimentally. The foregoing expression readily leads to the dissipation 
function associated with the same joint, namely. 
Af = r f 1^,1 + ^ ( 1 - e-^^l^^l) 
(7.138) 
7i 
7i 
and hence, the Coulomb dissipation function of the overall manipulator becomes 
(7.139) 
E 
1 
"-
7i 
Dissipation functions are very useful. On the one hand, they allow us to 
obtain associated generalized frictional forces when these are difficult, if not 
impossible, to express in formula form. On the other hand, since dissipation 
functions represent nonrecoverable forms of power, their integrals over time 

316 
7. Dynamics of Serial Robotic 
Manipulators 
yield the dissipated energy. Moreover, the energy dissipated into unrecover-
able heat can be estimated from an energy balance, and hence, the parameters 
associated with that dissipation function can be estimated with suitable identi-
fication techniques, once a suitable model for a dissipation function is available. 
Furthermore, the said parameters appear in the generalized frictional forces as 
well. For this reason, knowing these parameters is essential for the modeling of 
the corresponding generalized frictional forces. 
7.9 
Exercises 
7.1 Show that: 
{i) the 6n-dimensional manipulator twist lies in the nullspace of the 6n x 
6n manipulator angular velocity matrix W; 
(a) the time-derivative of the 6n x 6n manipulator mass matrix M is 
given by 
M = W M - M W 
(in) 
^ 
= Mt -h W M t 
at 
thereby verifying eq.(7.15). 
7.2 In order to gain insight into the meaning of vector 7, as defined in Exam-
ple 7.3.1, we define a similar vector 77 as 
V 
Compute 77 for that example and compare the result with 7. 
7.3 The decoupled robot of Fig. 4.19 is to undergo a maneuver, at the pos-
ture displayed in that figure, that involves the velocity and acceleration 
specifications given below, in base coordinates: 
c = 
c = 
' 1 " 
0 
1 
"0" 
1 
0 
m/s. 
a; 
m/s^, 
CJ 
rad/s, 
rad/s^ 
Compute the joint torques required to drive the robot through the desired 
maneuver, if the robot is known to have the inertial parameters given 
below: 
mi = 10.521, m2 = 15.781, ma = 8.767, 
rriA = 1.052, ms = 1.052, me = 0.351 

7.9 Exercises 
Pi = 
P4 = 
r 
0 
-0.054 
L 0 
0 
1 
0 
-0.057 
' 
P2 = 
, 
P5 = 
[0.140] 
0 
[ 0 J 
0 
-0.007 
0 
Â» Ps = 
) Pe = 
0 
1 
-0.197 
0 J 
r 
0 
0 
-0.019 
317 
Ii =:diag[ 1.6120 0.5091 1.6120] 
l2=diag[ 0.4898 8.0783 
8.2672] 
l3=diag[ 3.3768 
0.3009 
3.3768] 
l4=diag[ 0.1810 
0.1810 
0.1273] 
I5 =diag[ 0.0735 0.0735 
0.1273] 
le = diag [ 0.0071 0.0071 0.0141 ] 
where m^, p^, and I^ are given in units of kg, m and kg m^, respectively, 
with the position vectors of the mass centers and the moment-of-inertia 
matrices given in Hnk-fixed coordinates. Note: Assume that Z7 is perpen-
dicular to Z5 and ZQ, with O7 located at the OP of the EE. 
7.4 Derive homogeneous, linear constraint equations on the twists of the pairs 
of coupled bodies appearing in Fig. 7.9, namely, 
(a) two rigid pulleys coupled by an inextensible belt, under no slip; 
(b) the bevel pinion-and-gear train with axes intersecting at an arbitrary 
angle a; 
(c) the cam-and-follower mechanism whose cam disk is an eccentric cir-
cular disk. 
Notice that the constraint equations sought should have the form: 
Ati + Bt2 = 0 
with ti and t2 denoting the twists of bodies 1 and 2, respectively. 
7.5 Use the expressions derived in Example 7.6.1 with the aid of the natu-
ral orthogonal complement, as pertaining to the planar manipulator of 
Fig. 7.1, to obtain an expression for the time-derivative of the inertia ma-
trix of this manipulator. Compare the expression thus obtained with that 
derived in Example 7.3.1, and verify that the difference I â 2C is skew-
symmetricâsee Exercise 12.2âwhere C is the matrix coefficient of the 
Coriolis and centrifugal terms. 
7.6 A three-revolute spherical wrist with an orthogonal architecture, i.e., with 
neighboring joint axes at right angles, is shown in Fig. 7.10. Assume that 
the moments of inertia of its three links with respect to O, the point of 

318 
7. Dynamics of Serial Robotic 
Manipulators 
0, 
_ 
x<^ A^ 
f(t) 
(a) 
(b) 
(c) 
Figure 7.9: Three different pairs of coupled bodies 
concurrency of the three axes, are given by constant diagonal matrices, in 
link-fixed coordinates, as 
I4 = diag(Ji, J2, J3) 
l5=diag(i^i,i^2,i^3) 
le =diag(Z/i, 1/2,1/3) 
while the potential energy of the wrist is 
V = âmQgacosO^ 
Moreover, the motors produce torques T4,r5, and re, respectively, whereas 
the power losses can be accounted for via a dissipation function of the 
form 
6 
A = ^(^lb,e^ + rf\e,\^ 
where bi and rf, for i = 4,5,6, are constants. 
(a) Derive an expression for the matrix of generalized inertia of the wrist. 
(b) Derive an expression for the term of Coriolis and centrifugal forces. 
(c) Derive the dynamical model of the wrist. Hint: The kinetic energy T 
of a rigid body rotating about a fixed point O with angular velocity u 
can be written as T = |a;^IoW; where IQ is the 
moment-of-inertia 
matrix of the body with respect to O. 
7.7 Shown in Fig. 7.11 is a two-revolute pomtm^ manipulator. The centroidal 
inertia matrices of the links are denoted by Ii and I2. These are given, in 

7.9 Exercises 
319 
ZQ 
fZy 
Figure 7.10: A three-revolute spherical wrist 
link-fixed coordinates, by: 
I i 
1 
^12 
2 
^22 
3 
^23 
/ 1 3 " 
^23 
^33 _ 
, h = 
Jll 
J12 
Jl3 
J12 
J22 
J23 
Jl3 
J23 
J33 
Moreover, the mass centers of the links are denoted by Ci and C2, respec-
tively, and are shown in the same figure, the masses being denoted by mi 
a n d 7722. 
(a) Determine the kinetic energy of the manipulator as a quadratic func-
tion of ^1 and 62. 
(b) Determine the 2 x 2 matrix of generalized inertia. 
(c) Find an expression for the time-rate of change of the matrix of gen-
eralized inertia by straightforward differentiation of the expression 
found in item (b). 
(d) Repeat item (c), but now by differentiation of the three factors of I, 
as given in 
I = T ^ M T 
7.8 The twist t^ of the ith link of an n-dof serial manipulator can be expressed 
as 
t^ = TiO 
where T^ is a 6 x n link-twist-shaping matrix and 6 is the n-dimensional 
vector of actuated joint rates. Moreover, let M^ and W^ be the 6 x 6 
matrices defined in Section 7.3. Show that if the link is constrained to 
undergo planar motion, then the product T J ^ W ^ M ^ T ^ vanishes. 

320 
7. Dynamics of Serial Robotic 
Manipulators 
Figure 7.11: A two-revolute pointing manipulator 
7.9 Devise a recursive algorithm to compute the joint torques required to 
balance a wrench w acting at the EE of a six-revolute manipulator of 
arbitrary architecture. Then, derive the number of floating-point opera-
tions (multiplications and additions) required to compute these torques, 
and compare your result with the number of floating point operations re-
quired to compute the same by matrix-times-vector multiplications, using 
the transpose Jacobian. 
7.10 Establish the computational cost incurred in computing the term of Cori-
olis and centrifugal forces of an n-revolute serial manipulator, when the 
Newton-Euler algorithm is used for this purpose. 
7.11 Shown in Fig. 7.12 is an RRP manipulator, whose DH parameters are 
displayed in Table 7.5. The masses of its three moving links are denoted 
by mi, m2, and rris, and the mass center of each of links 1 and 2 coincides 
with Oi, while the mass center of link 3 is located at P. Moreover, the 
centroidal moments of inertia of these links are, in link-flxed coordinates, 
[Il]2=Al, 
[I2]3=i51, 
[I3]4=C1 
where 1 denotes the 3 x 3 identity matrix. 
(a) Derive the Euler-Lagrange equations of the manipulator under the 
assumption that gravity acts in the direction of Xi. 
(b) Find the generalized inertia matrix of the manipulator. 
7.12 A link is said to be inertially isotropic if its three principal moments of 
inertia are identical. 

7.9 Exercises 
321 
Figure 7.12: An RRP spatial manipulator 
Table 7.5: DH parameters of the RRP manipulator 
i 
1 
2 
3 
(Xj 
0 
0 
0 
bi 
0 
0 
^3 
at 
90Â° 
90Â° 
0Â° 
(a) Show that any direction is a principal axis of inertia of an inertially 
isotropic link. 
(b) Explore the advantages of a manipulator with inertially isotropic 
links with regard to its real-time control, i.e., find the savings in 
floating-point operations required to compute the recursive Newton-
Euler algorithm of such a manipulator. 
7.13 Devise an algorithm similar to Algorithm 7.1, but applicable to planar 
manipulators, and determine the computational costs involved in its im-
plementation. 
7.14 Write a piece of code to evaluate numerically the inertia matrix of an n-
axis manipulator and test it with the manipulator of Example 7.6.1. For 
this purpose, assume that I = ma^. 

Chapter 8 
Special Topics in 
Rigid-Body Kinematics 
8.1 
Introduction 
The motivation for this chapter is twofold. On the one hand, the determi-
nation of the angular velocity and angular acceleration of a rigid body from 
point-velocity measurements is a fundamental problem in kinematics. On the 
other hand, the solution of this problem is becoming increasingly relevant in 
the kinematics of parallel manipulators, to be studied in Chapter 10. Moreover, 
the estimation of the attitude of a rigid body from knowledge of the Cartesian 
coordinates of some of its points is sometimes accomplished by time-integration 
of the velocity data. Likewise, the use of accelerometers in the area of motion 
control readily leads to estimates of the acceleration of a sample of points of a 
rigid body, which can be used to estimate the angular acceleration of the body, 
and hence, to better control its motion. 
In order to keep the discussion at the level of fundamentals, we assume 
throughout this chapter that the information available on point velocity and 
point acceleration is error-free, a rather daring assumption, but useful for un-
derstanding the underlying concepts at this level. Once the fundamentals are 
well understood, devising algorithms that yield the best estimates of angular 
velocity and acceleration in the presence of noisy measurements becomes an 
easier task. For the sake of conciseness, the problem of motion estimation will 
not be discussed in this book. 

324 
8. Special Topics in Rigid-Body 
Kinematics 
8.2 
Computation of Angular Velocity from Point-
Velocity Data 
The twist of a rigid body, as introduced in eq.(3.72), defines completely the 
velocity field of a rigid body under arbitrary motion. Notice that the twist 
involves two vector quantities, the angular velocity and the velocity of a point 
of the rigid body. Since we are assuming that point-velocity data are available, 
the only item to be computed is the angular velocity of the body under study, 
which is the subject of this section. Once the angular velocity is known and the 
velocities of a set of body points are available, other relevant motion parameters, 
such as the location of the ISAâsee Section 3.4â^can be readily determined. 
If the twist of a rigid body is known, the computation of the velocity of 
an arbitrary point of the body, of a given position vector, is straightforward. 
However, the inverse problem, namely, the computation of the twist of the 
motion under study given the velocities of a set of points of known position 
vectors, is a more difficult task. A solution to this problem is now outlined. 
First and foremost, we acknowledge that the velocities of a minimum of three 
noncollinear points are needed in order to determine the angular velocity of the 
rigid body under study. Indeed, if the velocity of a single body point is known, 
we have no information on the angular motion of the body; if the velocities of 
two points are known, we can calculate two components of the angular-velocity 
vector of the body, namely, those that are orthogonal to the line joining the 
two given points, thereby leaving one component indeterminate, the one along 
that line. Therefore, in order to know the angular velocity of a rigid body in 
motion, we need at least the velocities of three noncollinear points of the bodyâ 
obviously, knowing only the velocities of any number of points along one line 
yields no more information than knowing only the velocities of two points along 
that line. We thus assume henceforth that we have three noncollinear points 
and that we know perfectly their velocities. 
Let the three noncollinear points of the body under study be denoted by 
{ Pi }l and let { p^ }l be their corresponding position vectors. The centroid C 
of the foregoing set has a position vector c that is the mean value of the three 
given position vectors, namely. 
c = iEp^ 
(8-1) 
Likewise, if the velocities of the three points are denoted by p^, and that of their 
centroid by c, one has 
1 ^ 
c = ^ ^ P z 
(8.2) 
1 
Prom eq.(3.49), the velocity of the three given points can be expressed as 
Pi = c + ft{pi-c), 
i = 1,2,3 
(8.3a) 

8.2 Computation of Angular Velocity from Point-Velocity Data 
325 
or 
Pi-c 
= ft{pi-c), 
2 = 1,2,3 
(8.3b) 
Now, we define a 3 x 3 matrix P as 
P = [ p i - c 
P 2 - C 
P 3 - c ] 
(8.4) 
Upon differentiation of both sides of eq.(8.4) with respect to time, one has 
P = [ p i - c 
P 2 - C 
P 3 - c ] 
(8.5) 
It is noteworthy that P and P are immutable under a pure translation of the 
coordinate frame of reference. However, under a pure rotation of the frame, 
given by a proper orthogonal matrix Q, both P and P transform as QP and 
QP, respectively. As a concequence, P and P are not frame invariant 
Further, eqs.(8.3b) can be written in matrix form as 
P = np 
(8.6) 
from which we want to solve for tt, or equivalently, for cj. This cannot be 
done by simply multiplying by the inverse of P, because the latter is a singu-
lar matrix. In fact, as the reader can readily verify, any vector having three 
identical components lies in the nullspace of P, thereby showing that P is sin-
gular, its nullspace being spanned by that vector. Furthermore, notice that from 
eq.(8.3b), it is apparent that 
(p^ - c)^a; = 0, 
2 = 1,2,3 
(8.7a) 
Upon assembling all three scalar equations above in one single vector equation, 
we obtain 
P^cj = 0 
(8.7b) 
a result that is summarized below: 
Theorem 8.2.1 The angular-velocity vector lies in the nullspace of matrix P^, 
with P defined in eq.(8.5). 
In order to find the desired expression for a; from the above equation, we 
recall Theorem A.l, which is proven in Appendix A: Let S be a skew-symmetric 
3 x 3 matrix and A be an arbitrary 3 x 3 matrix. Then, 
vect(SA) = i [tr(A)l - A] vect(S) 
(8.8) 
Upon application of the foregoing result, eq.(8.6) leads to 
Boj = vect(P) 
(8.9) 
where D is defined below and vect(ri) is nothing but a;: 

326 
8. Special Topics in Rigid-Body 
Kinematics 
D = i [ t r ( P ) l - P ] 
(8.10) 
Thus, eq.(8.9) can be solved for u as long as D is invertible. It is to be expected 
that, if the three points are collinear, then D is invertible, but, given that P is 
not frame-invariant, neither is tr(P). Hence, it is not apparent from eq.(8.10) 
that D is singular when the three given points are colinear. We will discuss this 
singularity presently. 
Now, if tr(P) vanishes, D becomes just one-half the negative of P, which, as 
we saw above, is singular. Moreover, if the three given points are noncollinear 
and we assume that the trace of P does not vanish, then the inverse of D can 
be proven to be 
D - i = a l - / 3 p 2 
(8.11) 
where coefficients a and /? are given below: 
2 
4 
" " ^ t ^ ' 
^ ^ tr(P)[tr(p2)-tr2(P)] 
^^'^'^^ 
Prom expressions (8.12) it is apparent that D fails to be invertible not only 
when tr(P) vanishes, but also when the term in brackets in the denominator of 
/? does. In Exercise 8.3, the reader is asked to prove that the foregoing term 
vanishes whenever the three points are collinear. 
Prom the foregoing discussion, it is apparent that given the velocities and the 
position vectors of three noncollinear points of a rigid body, the angular velocity 
of the body can always be determined. However, the data, i.e., the velocities of 
the three given points, cannot be arbitrary, for they must conform to eq.(8.6) 
or, equivalently, to Theorem 8.2.1. Equation (8.6) states that the columns of 
matrix P must lie in the range of H, while Theorem 8.2.1 states that uj lies in 
the nullspace of P. However, prior to the computation of a?, or equivalently, 
of ri, it is not possible to verify this condition. An alternative approach to 
verifying the compatibility of the data follows: Since lines PiC belong to a rigid 
body, vectors Pi â c must remain of the same magnitude throughout a rigid-
body motion. Moreover, the angles between any two of the said lines must be 
preserved throughout the motion as well. This means that the conditions below 
must hold: 
(Pi - c)^(p,- - c) = dj, 
ij - 1,2,3 
(8.13) 
or in compact form, 
P ^ P = C 
(8.14) 
where the {i,j) entry of the constant matrix C 
defined in eq.(8.13) 
above. Upon differentiation of both sides of eq.(8.14) with respect to time, we 
obtain: 
Theorem 8.2.2 (Velocity Compatibility) The velocities of three points of 
a rigid body satisfy the compatibility condition: 

8.2 Computation of Angular Velocity from Point-Velocity Data 
327 
with matrices P and P defined in eqs.(8.4) and (8.5) and O denoting the 3x 3 
zero matrix. 
The above equation, then, states that for the given velocities of three points of a 
rigid body to be compatible, the product P ^ P must be skew-symmetric. Note 
that the above matrix compatibility equation represents six independent scalar 
equations that the data of the problem at hand must satisfy. There is a tendency 
to neglect the foregoing six independent scalar compatibility conditions and to 
focus only on the three scalar conditions drawn from the diagonal entries of the 
above matrix equation. This is, however, a mistake, for these three conditions 
do not suffice to guarantee data compatibility in this context; all these three 
conditions guarantee is that the distance between any pair of points of the set 
remains constant, but they say nothing about the angles between the pairs of 
lines formed by each pair of points. 
Note, on the other hand, that the product P P ^ has no direct geometric 
interpretation, although the difference tr(PP^)l â P P ^ does, as discussed in 
Exercise 8.9. Furthermore, while Theorem 8.2.2 states that matrix P ^ P is 
skew-symmetric, it says nothing about the product P P ^ . All we can say about 
this product is stated in the result below: 
Theorem 8.2.3 With matrices P and P defined in eqs.(8.4) and (8.5), the 
product P P ^ obeys the constraint 
tr(PP^) = 0 
(8.16) 
If m X n matrices are regarded as forming a vector space, then an inner product 
of two such matrices A and B, denoted by (A, B), can be defined as 
(A, B) = tr(AB^) 
(8.17) 
the two matrices being said to be orthogonal when the foregoing inner product 
vanishes. We thus have that Theorem 8.2.3 states that matrices P and P are 
orthogonal, a result that parallels that about the orthogonality of the relative 
velocity of two points and the line joining them, as stated in eq.(3.51) and 
summarized in the ensuing theorem. The proof of Theorem 8.2.3 is left as an 
exercise. 
Example 8.2.1 The rigid cube shown in Fig. 8.1 moves in such a way that 
vertices Pi, P2, and P3 undergo the velocities shown in that figure, for three dif-
ferent possible motions. The length of the sides of the cube is 1, and the velocities 
all have magnitude \f2 in Figs. 8.1(a) and (c); these velocities are of unit mag-
nitude in Fig. 8.1(b). Furthermore, in the motion depicted in Fig. 8.1(c), the 
velocity of P3 is parallel to line P4P3, whereas that of P2 is parallel to line P1P3. 
Out of the three different motions, it is known that at least one is compatible. 
Identify the compatible motion and compute its angular velocity. 

328 
8. Special Topics in Rigid-Body 
Kinematics 
/T""--^3 
\^7i/l / 
/ T ^ - / ^ 
/â¢'' 
\^*1 
/ 
\ 
^ 
\ 
*~^--. 
^ ^ ^ * i * i > 
/h 
"^^^^L^' 
/^^> 
/ 
^*v. 
/ 
/ 
^ ^ ' 
/Pz 
/V^^^^"--^/ 
"^^U / 
/
â¢
^
^
^
/
^ 
/ 
\^ 
/ 
\ 
/ 
\ 
^^ ^^J 
/Pz~^--^^_ \ 
^^ 
(a) 
(b) 
P^ 
(c) 
Figure 8.1: A rigid cube undergoing a motion determined by the velocities of 
three of its points 
Solution: Let p^ denote the velocity of Pi, of position vector p^ Each proposed 
motion is then analyzed: (a) The projection of pi onto P1P2 is 1, but that of p2 
onto the same line is 0, and hence, this motion is incompatible; (b) Again, the 
projection of pi onto P1P2 is 1, but that of p2 onto the same line vanishes, and 
hence, this motion is also incompatible. Thus, the only possibility is (c), which 
is now analyzed more formally: Use a dextrousâright-handedârectangular co-
ordinate frame with origin at Pi, axis Y along P1P2, and axis Z parallel to 
P2P3. All vectors and matrices are now represented in this coordinate frame, 
and hence, 
Pi 
P2 
P3 
Pi 
P2 = 
P3 
Thus, 
1 
c = -3 
"0" 
2 
1 
c = 
1 
3 
"0" 
2 
2 
Now matrices P and P are constructed: 
--1 
0 
-2 
-1 
0 
1 
- 1 
0" 
1 
2 â¢ ^=1 
3 
" 3 
1 
- 2 
0 
1 
1 
- 3 
- 2 
1 

8.2 Computation of Angular Velocity from Point-Velocity Data 
329 
Furthermore, 
P^P = 1 
0 - 1 1 
1 
0 
- 1 
- 1 
1 
0 
which is skew-symmetric, and hence, the motion is compatible. Now, matrix D 
is computed: 
"3 
0 
0 
D = i[ltr(P)-P] = l 2 
2 - 1 
1 
1 
1 
The angular velocity u is computed as the solution to 
Da? = vect(P) 
where 
Equations (8.9) are thus 
vect(P) = 1 
6 
â¢ 3 " 
- 1 
1 
SuJi = 3 
2u)i -f 2(jj2 â cja = â1 
cJi + a;2 + CJ3 = 1 
The first of the foregoing equations leads to 
CJl = 1 
whereas the second and the third lead to 
2a;2 â003= â3 
UJ2+003 = 0 
and hence. 
(jJ2 = - 1 , CJ3 = 1 
Now, as a verification, u should be normal to the three columns of P as defined 
in eq.(8.7b); in other words, u should lie in the nullspace of P^. But this is so, 
because 
P^u; 
3 
0 
- 3 
1 
1 
- 2 
- 2 " 
1 
1 
â¢ 
1 
" 
- 1 
1 
_ 1 
~ 3 
"0" 
0 
0 
thereby verifying that uj lies, in fact, in the nullspace of P'^. 

330 
8. Special Topics in Rigid-Body 
Kinematics 
8.2.1 
A Robust Formulation 
The foregoing formulation fails when matrix D of eq.(8.10) becomes singular. 
While it is not surprising that the matrix becomes singular in the presence of 
three collinear points, it is a bit frustrating that, even if the points are non-
collinear, D becomes singular when tr(P) = 0. Moreover, in light of the lack 
of frame-invariance of P, it is not possible to predict geometrically under which 
conditions tr(P) vanishes. It is thus imperative to look for an alternative, robust 
approach, which is the aim of this subsection. 
Upon multiplying both sides of eq.(8.6) by P ^ from the right, we obtain 
P P ^ = nR, 
R = P P ^ 
(8.18) 
Further, if we take the vector of both sides of eq.(8.18), we obtain 
ijcj = vect(PP^) 
(8.19a) 
where, by application of Theorem A.l, as done above, J is defined as 
J = t r ( R ) l - R 
(8.19b) 
which, as the reader is invited to prove in Exercise 8.9, is nothing but the 
inertia tensor of a system of three unit-mass particles located at points 
{Pi}i 
with respect to their mass center, which coincides with the centroid C of the 
three given points. As such, matrix J is, in general, positive-definite, becoming 
semidefinite only in the special case in which the three masses are collinear. 
Hence, the formulation singularity brought about by the vanishing of tr(P) is 
eliminated, which is the reason why this formulation is billed as robust. Hence, 
as long as the three given points are noncollinear, eq.(8.19a) can always be 
solved for a?, thus obtaining 
u = 2J-Vect(PP^) 
(8.20) 
Example 8.2.2 Solve Example 8.2.1 with the robust formulation introduced 
above. 
Solution: We need both matrix J and the right-hand side of eq.(8.19a). To this 
end, we compute first 
R = PP- = i 
"0 0 
0 2 
0 1 
0' 
1 
2 
which is apparently a simple, positive-semidefinite matrix^. Hence, 
' - \ 
4 
0 
0 
0 
2 - 1 
0 - 1 2 
^R is apparently singular because it has one row and one column of zeros; it has two 
positive eigenvalues because its trace is 4/3 > 0 and the determinant of its 2 x 2 lower-right 
block is 1/3 > 0. 

8.3 Computation of Angular Acceleration from Point-Acceleration Data 
331 
whose inverse is readily calculated as 
J - ' = ^ 
"3 
0 
[0 
0 
8 
4 
0^ 
4 
8 
Further, 
vect(PP^) = vect 
0 
0 
0 
- 3 
- 1 
2 
- 3 ' 
- 2 
1 
)
-
" 4 " 
- 3 
3 
Therefore, 
u = 
1 
2 
3 0 0 
0 8 4 
0 4 8 
1 
6 
4 
- 3 
3 
= 
1 
- 1 
1 
thereby completing the calculations, and verifying the result obtained with the 
non-robust formulation. 
8.3 
Computation of Angular Acceleration from 
Point-Acceleration Data 
The angular acceleration of a rigid body under general motion is determined in 
this section from knowledge of the position, velocity, and acceleration vectors of 
three noncollinear points of the body. The underlying procedure parallels that 
of Section 8.2. Indeed, recalling the notation introduced in that section, and 
letting vectors p^, for i = 1,2,3, denote the acceleration of the given points, one 
can rewrite eq.(3.85) for each point in the form 
Pi = c + {n + n'^){pi - c), 
i = 1,2,3 
(8.21a) 
or 
Pi-c 
= {n + ft''){pi - c), 
i = 1,2,3 
(8.21b) 
where c was defined in eq.(8.1), and c is the acceleration of the centroid, i.e., 
3 
(8.21c) 
Furthermore, matrix P is defined as 
P = [ p i - C 
P 2 - C 
P 3 - C ] 
Thus, eqs.(8.21b) can be written in compact form as 
(8.22) 
(8.23) 

332 
8. Special Topics in Rigid-Body 
Kinematics 
from which one is interested in computing tt, or correspondingly, u. To this 
end, eq.(8.23) is rewritten as 
riP = W 
(8.24a) 
with matrix W defined as 
W = P - O^p 
(8.24b) 
The counterpart of Theorem 8.2.1 is now derived from eqs.(8.21b). First, 
these equations are cast in the form 
Pi-c-ft'^{pi-c) 
=dj X (pi-c), i = 1,2,3 
It is now apparent that if we dot-multiply the above equations by a;, we obtain 
[Pi-c- 
Ct'^iPi - c)] â¢ cj = 0, i = 1,2,3 
(8.25a) 
Upon assembling the three foregoing equations in one single vector equation, we 
derive the counterpart of eq.(8.7b), namely, 
(P - n'^Ffdj = 0 
(8.25b) 
a result that is summarized below in theorem form: 
Theorem 8.3.1 The angular-acceleration vector cj lies in the nullspace of ma-
trix W^; with W defined in eq. (8.24b). 
Just as we did in Section 8.2 when solving for u from eq.(8.9), we apply the 
result already invoked in connection with eq.(8.9), thereby deriving an alterna-
tive form of eq.(8.24a), namely, 
T>uj = vect(P - n^P) 
(8.26) 
where D is defined as in eq.(8.10). Thus, 
uj = D-^vect(P - 1^2P) 
(8.27) 
with D~^ given as in eqs.(8.11) and (8.12). As in Section 8.2, then, given 
the position, velocity, and acceleration vectors of three noncollinear points of a 
rigid body, it is always possible to compute the associated angular acceleration. 
However, as discussed in that section, the data cannot be given arbitrarily, for 
they must comply with eq.(8.24a), or correspondingly, with eq.(8.25b). The 
former implies that the three columns of matrix W lie in the range of matrix 
ft] alternatively, eq.(8.25b) implies that ft lies in the nullspace of W^. Again, 
prior to the determination of 17, it is impossible to verify this condition, for 
which reason an alternative approach is taken to verifying compatibility. The 
obvious one is to differentiate both sides of eq.(8.15), which produces 
P ^ P 4- 2P^P -f P ^ P = 0 
(8.28) 
thereby deriving the compatibility conditions that the acceleration measurements 
should satisfy. 

.3 Computation of Angular Acceleration from Point-Acceleration Data 
333 
Z 
Figure 8.2: A rigid triangular plate undergoing a motion given by the velocity 
and acceleration of its vertices 
Finally, upon differentiation of both sides of eq.(8.16) with respect to time, 
and while doing this, resorting to Lemma A.2 of Appendix A, we have 
tr(PP^ + PP^) = 0 
which is the counterpart of eq.(8.16 ). 
(8.29) 
Example 8.3.1 The three vertices of the equilateral triangular plate of Fig. 8.2, 
which lies in the X-Y plane, are labeled Pi, P2, and P3, their position vectors 
being pi, p2, and ps. Moreover, the velocities of the foregoing points are denoted 
^y Pi; /^^ ^ = 1,2,3. The origin of the coordinate frame X, y, Z lies at the 
centroid C of the triangle, the velocities of the vertices, in this coordinate frame, 
being given as 
Pi = 
V2 
P2 = 
4 - 1 / 3 
P3 = 4 + x/2 
Likewise, pi, p2, and p3 denote the accelerations of the three vertices of the 
plate, given below in the same coordinate frame: 
Pi = 24 
-6 + 4V3" 
1 2 - 3 v ^ 
0 
P3 = 
5 
1 
24 
P^ = - ^ 
6 + 4\/3 
-12 + 3v^ 
0 
â¢8\/3 + 3\/6 
0 
With the foregoing information. 

334 
8. Special Topics in Rigid-Body 
Kinematics 
(a) show that the three given velocities are compatible; 
(b) compute the angular velocity of the plate; 
(c) determine the set of points of the plate that undergo a velocity of minimum 
magnitude; 
(d) show that the given accelerations are compatible; 
(e) compute the angular acceleration of the plate. 
Solution: 
(a) Since the centroid of the triangle coincides with that of the three given 
points, we have c = 0. Moreover, 
P i 
r 
1/2 
1 
-%/3/6 
0 
, 
P2 = 
0 
V3/3 
0 
, 
P3 = 
r - 1 / 2 1 
- N / 3 / 6 
0 
Thus, 
Furthermore, 
and hence, 
P = 
- ^ [ 
3 
-V3 
0 
c = 
[(12-
1 
1 
12 
0 
0 
V3- 3^/2 
0 
- 3 " 
2\/3 
- \ / 3 
0 
0 
0 
0 
- \/3)/12_ 
0 
0 
0 
0 
- 2 ^ 3 ^ ^^H h 3 ^ 
We can readily show from the above results that 
p^p = o 
with O denoting the 3 x 3 zero matrix. Hence, matrix P ^ P is skew-
symmetric and the velocities are compatible 
(b) Next, we have 
and 
D4[tr(P)l-P].l 
vect(P) = 
-
2V3 0 
3 
' 
\/3 
3 
V3 
0 
0 3 + 2v^ 
-2v/3 
-\/3 + 3\/2 
0 

8.3 Computation of Angular Acceleration from Point-Acceleration Data 
335 
Hence, if the components of cj in the given coordinate frame are denoted 
by cJi, for i = 1, 2,3, then we obtain 
2VS(jJi + 3a;3 = 
-Vs 
-\/3 + 3\/2 
(3 -\- 2Vs)cj3 = 0 
From the third equation, 
0^3 = 0 
Substitution of the foregoing value into the first of the above equations 
yields cji = â1/2. Further, upon substitution of the values of cji and cJa 
into the second of the above equations, we obtain a;2 = \/2/2 and hence. 
CJ 
- 1 
^/2 
0 
(c) Let PQ be the position vector of the point PQ on the instantaneous screw 
axis lying closest to the origin. Now, in order to find Po, we can resort to 
eq.(3.70), using point C as a reference, i.e., with c and c playing the roles 
of a and a in that equation. Moreover, since c = 0, the expression for PQ 
reduces to 
1 
Po = 
:Ctc 
c*J 
where from item (b). 
while 
ii'^ir = 4 
nc = 
1 2 - v ^ 
24 
and hence, 
, 
1 2 - ^ / 3 
â¢V2 
1 
0 
1 
0 
As a verification, Po should be perpendicular to the ISA, as it is, for the 
product w^Po to vanish. Next, the vector representing the direction of 
the screw axis is obtained simply as 
e = w 
V3 [-1 V2 of 
||w|| 
3 
thereby defining completely the instant screw axis. 

336 
8. Special Topics in Rigid-Body 
Kinematics 
(d) The acceleration of the centroid of the three given points is given as follows: 
â¢\/6 
-^/S 
,rp 
' 
24' 
24 
Then, matrices P, P ^ P , P ^ P , and P ^ P are readily computed as 
P = 24 
- 6 + 4v/3 + \/6 
- 8 v ^ - 2 v / 6 
6 + 4V3 + \/6 
1 2 - 3 v ^ + \ / 3 
-2V3 
-12 + 3\/2 + \/3 
0 
0 
0 
P ^ P = - ! -
144 
-21 + 6v^ 
6-24%/3-6\/6 
15 + 24^^ 
6 + 24\/3-6\/6 
-12 
6 - 2 4 v ^ + 6\/6 
15 - 24v/3 
6 + 24^3 + 6v/6 
-21 - 6v^ 
p T p 
1 
144 
-21 + 6^/6 
6 + 24%/3-6\/6 
15 - 24\/3 
6 - 2 4 \ / 3 - 6 \ / 6 
-12 
6 + 24\/3 + 6\/Â§ 
15 + 24\/3 
6-24%/3 + 6V6 
-21 - 6\/6 
P ^ P = 144 
2 1 - 6 N / 6 
- 6 + 6\/6 
-15 
- 6 + 6v^ 
12 
- 6 - 6 \ / 6 
-15 
- 6 - 6 ^ 6 
21 + 6v^ 
Now, it is a simple matter to verify that 
P ^ P + 2P^P + P ^ P = O 
and hence, the given accelerations are compatible. 
(e) ft is defined as the unique skew-symmetric matrix whose vector is u, the 
latter having been computed in item (b). Thus, 
n = 
0 
0 
V2' 
0 
0 
1 
-V2 
- 1 
0 
n^ 
- 2 
- N / 2 
0 
-V2 
-1 
0 
0 
0 - 3 
24 
-6 + V6 
- 2 N / 6 
6 + \/6 
-3V2 + V3 
-2\/3 
3 v ^ + v ^ 
0 
0 
0 
Hence, 
P - ft2p = 
24 
4\/3 
-8\/3 
4\/3' 
12 
0 
-12 
0 
0 
0 
The angular-acceleration vector is thus computed from 
Dw = vect(P - n^P) 

8.3 Computation of Angular Acceleration from Point-Acceleration Data 
337 
where D was computed in item (b), while 
vect(P - ft'^P) = -^ 
3 
V3 
3 + 2\/3 
and hence, letting oji denote the ith component of u in the given coordi-
nate frame, we obtain 
â (2\/3a;i+3a;3) = T 
12 
1 
/"X 
â(VSwi + 3w2 + VSdJs) = TTT 
V3 
12 
12 
- ( 3 + 2N/3)a,3 = 
^
^ 
which yields 
cv = 
thereby completing the solution. Note that d; lies, in fact, in the nullspace 
of matrix (P - 1^2p)T 
8.3.1 
A Robust Formulation 
In computing the angular acceleration vector from point-velocity and -acceler-
ation data, we face exactly the same singularity we faced when computing the 
angular-velocity vector. We thus follow the same robust approach introduced in 
Subsection 8.2.1. To this end, we multiply both sides of eq.(8.24a) by P ^ from 
the right, thereby obtaining 
r2R = WP'^ 
(8.30) 
with R defined already in eq.(8.18). Moreover, from eq.(8.24b), 
wp^ = pp^ - n^n 
(8.31) 
Now, the angular-acceleration vector is computed from eq.(8.30) upon taking 
the vector of both sides of this equation, namely. 
^Ju = vect(PP^ - fi^R) 
(8.32) 
whence, as long as the three given points are not collinear, dJ is computed as 
cj = 2J-ivect(PP^ - n^R) 
(8.33) 
thereby completing the intended computation. 

338 
8. Special Topics in Rigid-Body 
Kinematics 
Example 8.3.2 Using the foregoing robust approach, compute the angular-
acceleration vector of the motion undergone by the plate of Fig. 8.2, for the 
point-velocity and -acceleration data given in Example 8.3.1. Use the value of 
a? computed in that example. 
Solution: All we need now is J and the right-hand side of eq.(8.32). We thus 
have 
R = P P ^ = 1 [1 
0 
[o 
0 
1 
0 
0" 
0 
0 
whence tr(R) = 1; therefore. 
^-i 
"1 
0 
0 
0 
1 
0 
0" 
0 
2 
Furthermore, 
while fl is obtained simply as CPM(w), i.e., 
1 
-2 
- 4 - V 2 0 
4 - v ^ 
-1 
0 
0 
0 
0 
and hence, 
thereby obtaining 
ft = 
n^R = 
0 
0 
V^ 
0 
0 
1 
v^ 
-1 
0 
2 
v^ 0 
\/2 
1 
0 
0 
0 
0 
PpT - n^R = 
0 - 1 0 
1 
0 
0 
0 
0 
0 
whence, 
which thus yields 
vect(PP^ - fi^R) = 
0 
0 
1/2 
CJ 
= 
thereby completing the required computation. 

8.4 Exercises 
339 
8.4 
Exercises 
8.1 The regular tetrahedron of Fig. 3.10, of unit-length edges, moves in such 
a way that vertex Pi has a velocity of unit magnitude directed from Pi to 
P4, whereas the velocity of P2 is parallel to edge P2P3. Define a coordinate 
frame X, F, Z with origin at Pi, F axis directed from Pi to the midpoint 
M of P2P3, and X axis in the plane of Pi, P2, P3, as shown in that figure. 
With the above information, 
(a) find the velocity of P2; 
(b) show that the velocity of P3 cannot be zero; 
(c) if the velocity of P3 lies in the P1P2P3 plane, find that velocity; 
(d) find the angular velocity of the tetrahedron; 
(e) find the set of points of the tetrahedron undergoing a velocity of 
minimum magnitude. 
8.2 The position vectors of three points of a rigid body, pi, p2, and p3, as 
well as their velocities, pi, p2, and P3, are given below: 
Pi 
P i 'â¢ 
(a) Is the motion possible? 
(b) If the motion is possible, find its angular velocity. 
8.3 For matrix P defined as in eq.(8.4), i.e., as 
P = [ p i - C 
P 2 - C 
P 3 - C ] 
where { p^ }f are the position vectors of three points of a rigid body, while 
c is that of their centroid, prove that tr(P^) = tr^(P) whenever the three 
given points are collinear. Is the converse true? 
8.4 With matrix P defined as in Exercise 8.3 above, prove Theorem 8.2.3. 
That is, prove that 
tr(PP^) = 0 
1 
1 
1 
r 
1 
1 
, 
P2 = 
, 
P2 = 
1 
- 1 
1 
" 3 â¢ 
1 
- 1 
, 
P3 = 
, 
P3 = 
- 1 
1 
- 1 
" - 1 
1 
3 
8.5 With the notation of Section 8.3, prove that 
vect(12^P) = Da? 

340 
8. Special Topics in Rigid-Body 
Kinematics 
8.6 Derive the velocity and acceleration compatibility conditions for a body 
that is known to undergo spherical motion, i.e., a motion under which one 
point of the body remains fixed. 
8.7 The position vectors of three points of a rigid body, pi, p2, and ps, are 
given as in Exercise 8.2, and repeated below for quick reference: 
P i 
P2 
P3 = 
- 1 
1 
- 1 
Now, the velocities of these points are all zero, while their accelerations 
are given as 
1 
1 
1 
, 
P2 = 
3 
1 
- 1 
, 
P3 = 
" - ] 
1 
3 
â¢1 
P i 
(a) Show that the motion is compatible. 
(b) Find the angular acceleration of the body. 
8.8 With reference to Example 8.2.1, compute the angular acceleration of the 
cube of Fig. 8.1(c) if pi = 0, for i = 1,2,3. 
8.9 With the notation of Section 8.2, let 
(a) Show that the moment of inertia J of the three given points, which 
is identical to that of a system of unit masses located at these points, 
with respect to the centroid C of the given points, is 
J = t r ( R ) l - R 
(b) Show that if the three given points move as points of a rigid body 
undergoing an angular velocity LJ whose cross-product matrix is ft, 
then 
J = Rfi - l^R 
(c) Furthermore, show that if under the conditions of item (b) above, the 
set of points undergoes an angular acceleration u of cross-product 
matrix Jl, then 
J = Rr2 - r^R - fl^K - RCt^ + 
2ftllft 
8.10 A wrench of unknown force f is applied to a rigid body. In order to find 
this force, its moment with respect to a set of points {Pk}i, 
of position 

8.4 Exercises 
341 
vectors { Pfc }i, is measured and stored in the set { n^; }f. Show that f can 
be calculated from the relation 
Df = -vect(M) 
with D defined as in Section 8.2, i.e., as 
D = i[tr(P)l-P] 
and M given by 
M = [ ni â n 
n2 â n 113 n], 
1 ^ 
nk 
Note that P is defined in Exercise 8.3. 
8.11 A wrench is applied to the tetrahedron of Fig. 3.10. When the force of 
this wrench acts at point P^, the resulting moment is n^, for k = 1,2,3. 
For the data displayed below, in frame T of that figure, find the resultant 
force f, as well as the line of action of this force that will lead to a moment 
of minimum magnitude. Determine this moment. 
ni = - V2 
n2 
12 
3\/2 â¢ 
-2\/6 
2V3 
n3 
12 
3\/2 
2\/6 
-2x/3 
8.12 Matrix D, as defined from eq.(8.6) and displayed in eq.(8.10), was found to 
involve frequent singularities, even in the presence of noncollinear points. 
This weakness stems from its lack of frame-invariance, and can be readily 
fixed if both sides of eq.(8.6) are multiplied by P ^ from the right. Show 
that, under these conditions, an equation similar to (8.9) is derived, but 
with D replaced by (1/2)J, with J defined as in Exercise 8.9. Now show 
that J is frame-invariant in the sense of Section 2.7, and becomes singular 
if and only if the three given points are collinear. 
8.13 A ball-wheel is used to drive a mobile robot. For feedback control, its 
angular velocity must be estimated using information on the velocities of 
two of its points, Pi and P2, under the assumption that the ball rolls 
without slipping on a horizontal, rigid fioor. The radius of the wheel is 
30 mm, and the two above points lie on a horizontal diameter. Now, 
define a coordinate frame with origin at the contact point, its F-axis in 
the direction from Pi to P2 and its Z-axis vertical, as sketched in Fig. 8.3. 
Off-board sensors provide reliable estimates, in mm/s, of pi and p2 as 
displayed below. 
Pi = 
120 
-60 
-60 
, 
P2 = 
0 
-60 
60 

342 
8. Special Topics in Rigid-Body 
Kinematics 
Z 
Figure 8.3: A ball-wheel 
(a) Show that the given estimates of pi and p2 are compatible. 
(b) Find the angular velocity of the ball. 

Chapter 9 
Geometry of General Serial 
Robots 
9.1 
Introduction 
Current serial robots, encountered not only in research laboratories but also in 
production or construction environments, include features that deserve a chapter 
apart. We will call here general serial robots all non-redundant serial robots that 
do not fall in the category of those studied in Chapter 4. Thus, the chapter is 
devoted to manipulators of the serial type that do not allow a decoupling of 
the positioning and the orientation problems. The focus of the chapter is, thus, 
the inverse displacement problem (IDP) of general six-revolute robots. While 
redundant manipulators of the serial type fall within this category as well, we 
will leave these aside, for their redundancy resolution calls for a more specialized 
background than what we have either assumed or given here. 
A special feature of serial manipulators of the kind studied here is that they 
can admit up to sixteen inverse displacement solutions. Such manipulators are 
now in operation in industry, an example of which is the TELBOT System, 
shown in Fig. 9.1, which features all its six motors on its base, the motion 
and force transmission taking place via concentric tubes and bevel gears. This 
special feature allows TELBOT to have unlimited angular displacements at its 
joints, no cables traveling through its structure and no deadload on its links by 
virtue of the motors (Walischmiller and Li, 1996). 

344 
9. Geometry of General Serial Robots 
Figure 9.1: The TELBOT System (Courtesy of Walischmiller GmbH, Meers-
burg, Germany) 
9.2 
The IDP of General Six-Revolute Manipu-
lators 
As shown in Chapter 4, the IDP of six-revolute manipulators of the most general 
type leads to a system of six independent equations in six unknowns. This is 
a highly nonlinear algebraic system whose solution posed a challenge to kine-
maticians for about two decades and that was not considered essentially solved 
until the late eighties. Below we give a short historical account of this problem. 
Pieper (1968) reported what is probably the earliest attempt to formulate 
the inverse displacement problem of six-axis serial manipulators in a univari-
ate polynomial form. He showed that decoupled manipulators, studied in Sec-
tion 4.4, and a few others, allow a closed-form solution of the inverse displace-
ment problem associated with them. However, apart from the simple architec-
tures identified by Pieper, and others that have been identified more recently 
(Mavroidis and Roth, 1992), a six-axis manipulator does not admit a closed-
form solution. Attempts to derive the minimal characteristic polynomial for 
this manipulator were reported by Duffy and Derby (1979), Duffy and Crane 
(1980), Albala (1982), and Alizade et al. (1983), who derived a 32nd-degree 
polynomial, but suspected that this polynomial was not minimal, in the sense 
that the manipulator at hand might not be able to admit up to 32 postures for a 
given end-effector (EE) pose. Tsai and Morgan (1985) used a technique known 
as polynomial continuation (Morgan, 1987) to solve numerically the nonlinear 

9.2 The IDP of General Six-Revolute Manipulators 
345 
displacement equations, cast in the form of a system of quadratic equations. 
These researchers found that no more than 16 solutions were to be expected. 
Briefly stated, polynomial continuation consists basically of two stages, namely, 
reducing first the given problem to a system of polynomial equations; in the 
second stage, a continuous path, also known as a homotopy in mathematics, is 
defined with a real parameter t that caii be regarded as time. The continuous 
path takes the system of equations from a given initial state to a final one. The 
initial state is so chosen that all solutions to the nonlinear system in this state 
are either apparent or much easier to find numerically than those of the orig-
inally proposed system. The final state of the system is the actual system to 
be solved. The initial system is thus deformed continuously into the final state 
upon varying its set of parameters, as t varies from 0 to 1. At each continu-
ation step, a set of initial guesses for each of the solutions already exists, for 
it is simply the solution to the previous continuation step. Moreover, finding 
the solutions at the current continuation step is done using a standard Newton 
method (Dahlquist and Bjorck, 1974). 
Primrose (1986) proved conclusively that the problem under discussion ad-
mits at most 16 solutions, while Lee and Liang (1988) showed that the same 
problem leads to a 16th-degree univariate polynomial. Using different elimi-
nation procedures, as described in Section 9.3, Li^ (1990) and Raghavan and 
Roth (1990, 1993) devised different procedures for the computation of the coef-
ficients of the univariate polynomial. While the inverse displacement problem 
can be considered basically solved, research on finding all its solutions safely 
and quickly still continued into the nineties (Angeles et al., 1993). Below we de-
scribe two approaches to solving this problem: i) the methods of Raghavan and 
Roth (1990, 1993) and of Li (1990), aimed at reducing the displacement rela-
tions to a single univariate polynomial; and ii) the bivariate-equation approach, 
introduced in (Angeles and Etemadi Zanganeh, 1992). 
It will become apparent, however, that a streamlined algorithm guaran-
teeing the reduction of the system of 14 fundamental equations, as derived in 
Section 9.2.2, to a lower number of equations in only one or two unknowns, is 
still lacking. To be true, Husty, Pfurner and Schrocker (2005) just reported a 
geometric approach to the reduction of interest that appears quite promising in 
obtaining such a streamlined algorithm. 
9.2.1 
Preliminaries 
We start by recalling a few definitions that were introduced in Chapter 4. In 
Section 4.2 we defined the matrices Qi and the vectors a^ associated with the 
coordinate transformations from frame J^i-fi to frame !Fi or, equivalently, the 
displacement of the latter to the former. The 4 x 4 homogeneous matrixâsee 
^N. B. Lee and Li of the references in this chapter are one and the same person, namely, 
Dr.-Ing. Hongyou Lee (a.k.a. Dr.-Ing. Hongyou Li). 

346 
9. Geometry of General Serial Robots 
Section 2.5âtransforming coordinates in J^i+i to coordinates in !Fi is given by 
Ai = 
0^ 
1 
(9.1) 
where 0 is the 3-dimensional zero vector, while the 3 x 3 rotation matrix Q^ and 
the 3-dimensional vector a^ were defined in Chapter 4 as 
Qi 
Ci 
Si 
0 
^iSi 
^iCi 
fJ'i 
fJ'iSi 
f^i^^i 
Xi 
5 
^i 
â 
QiiCi 
UiSi 
. bi 
(9.2) 
In the above definitions we used the Denavit-Hartenberg notation, whereby Gi 
is the distanceâand hence, ai > 0âbetween the Zi- and the Z^+i-axes, while 
bi is the offset 
oo < bi < -l-ooâbetween the Xi- and X^_|_i-axes, as measured 
along the positive direction of the Z^-axis. Moreover, 
Ci = cos 0i ^ Si = sin 6i, 
Xi = cos a^, 
fii = sin ai 
where 6i is the ith joint angle, measured from Xi to Xi^i in the positive direction 
of Zi^ and ai denotes the twist angle from Zi to Z^+i in the positive direction 
of Xi^i, for i = 1,... ,6. Furthermore, the factoring of matrix Q^, introduced 
in eq.(4.2a), is reproduced below for quick reference: 
with Xi and Z^ denoting two pure reflections, namely, 
[ 1 0 
0 
J^i = 
U 
âAi 
jli 
[ 0 
iJbi 
Xi 
^i 
= Xi = X^ 
, 
Tii = 
Ci 
Si 
0 
Si 
-Ci 
0 
0 
0 
1 
(9.3) 
(9.4a) 
(9.4b) 
the foregoing reflections thus being both symmetric and self-inverseâsee Sec-
tion 2.4. As a consequence, 
Qi = XiZi 
We will also use the partitionings of Qi displayed in eq.(4.12), namely, 
Qi = [pi 
qi 
Ui] = 
^ i 
T 
(9.5) 
A quick comparison between eqs.(9.2) and (9.5) leads to the relations below: 
(9.6) 
Ci 
âXiSi 
l^i^i 
, 
Hi = 
Si 
XiCi 
_ f^i^i _ 
, 
Oi = 
0 
Mi 
_Xi 

9.2 The IDP of General Six-Revolute 
Manipulators 
347 
Further, let us recall the definition introduced in eq.(4.13), e = [0 0 
1] , 
along with that in eq.(4.3d), a^ = Qib^, which readily leads to b^ = Qf a^. 
Hence, 
Ui 
Qze 
fJ'iSi 
"fJ'iCi 
Xi 
and 
hi = 
ai 
bifii 
biXi 
(9.7) 
where we have reproduced eq.(4.3e) for quick reference. Moreover, since e^ = 
[ei]i = [ej+iji+i, the above expression for u^ leads to 
Uz = Qi[ei^i]i^i 
= [ei^i]i 
(9.8a) 
which means that u^ represents e^+i in J^i. Likewise, 
Oi = Qj[ei]i = h]i+i 
(9.8b) 
Now, using eqs.(9.4a) and the second of eq.(9.7), we introduce the definitions 
whence 
7^ = ZiSLi = Xihi = [ai 
0 bi] 
^ili 
(9.9) 
(9.10) 
Furthermore, vector x^ of eq.(4.11) is reproduced below for quick reference as 
well: 
cos^i 
sin^i 
(9.11) 
A useful concept in this context is that of bilinear form'. An algebraic ex-
pression of the form Auv^ where u and v are two given scalar variables and A is 
independent of u and v^ is said to be bilinear in u and v. Likewise, an expression 
of the form Au^v'^ is said to be biquadratic in u and v^ with similar definitions 
for bicubic, trilinear, and multilinear forms. Moreover, the same definitions ap-
ply to vector and matrix expressions, as pertaining to their components and, 
correspondingly, their scalar entries. 
In light of the definition of x^, additionally, we shall refer to an expression 
of the form 
El =Acos>ei-\-Bsm6i-\-C 
(9.12) 
in which coefficients A^ B and C are independent of ^i, as being linear in x^. 
Likewise, an expression of the form 
E2 = A cos 9i cos 6j + B cos 6i sin 9j + C sin 9i cos 9j + D sin 9i sin 9j + F (9.13) 
with coefficients >1, B, ..., F independent of both 9i and 9j, will be termed 
bilinear in x^ and Xj. In fact, such an expression may also involve terms linear 
in Xi and Xj alone. More generally, an expression involving terms with products 
such as cos^ 9i cos^ 9j and other terms with similar products of the same or lower 
degree will be termed biquadratic in x^ and Xj. Now we have 

348 
9. Geometry of General Serial Robots 
Lemma 9.2.1 Let matrix A be skew-symmetric and B be defined as the simi-
larity transformation of A given below: 
B = QiAQf 
(9.14) 
where Qi was recalled in eq.(9.2) and A is assumed to be independent of 6i. 
Then, B is linear in x^. 
Proof: This result follows from relation (2.141). Indeed, as the reader can 
readily verify, B is skew-symmetric, and the product Bv, for any 3-dimensional 
vector V, can be expressed in terms of b, defined as vect(B)âsee Section 2.3.3. 
That is, 
Bv = b X V 
If a denotes vect(A), then a and b, by virtue of eq.(9.14) and the results of 
Section 2.6, obey the relation 
Hence, 
Bv = (Q^a) X v 
thereby showing that the resulting product is linear in x^, q.e.d. 
Moreover, let 
n = tan f^^ 
(9.15a) 
which allows us to write the identities below, as suggested by Li (1990): 
Si - TiCi = Ti, 
TiSi + Ci = 1 
(9.15b) 
We now define p as the vector directed from the origin of Ti to the op-
eration point (OP) P of Fig. 9.2. Moreover, we let 1 = [Ix, ly, Iz]'^^ ^^ = 
[rrix, rriy, rrizY^ and n = [n^;, %, n^]^ represent the three mutually perpen-
dicular unit vectors parallel to the X7, ly and Z7 axes, respectively, of J7, which 
has its origin at Pâa layout of these axes is depicted in Fig. 4.3 for a decoupled 
manipulator. Hence, the pose of the EE is described in the base frame T\ by 
means of the homogeneous transformation A given as 
A = 
Q 
P 
0^ 
1 
Q = [l 
m 
n] = 
Ix 
by 
Iz 
rux 
my 
rriz 
rix' 
Uy 
nz_ 
In the next step, we derive a set of scalar equations in five unknowns, upon 
eliminating one of these, that is fundamental in computing the solution of the 
problem at hand. 

9.2 The IDP of General Six-Revolute 
Manipulators 
349 
Figure 9.2: Partitioning of the manipulator loop into two subloops 
9.2.2 
Derivation of the Fundamental Closure Equations 
Given the geometric parameters of the manipulator and the pose of the EE 
with respect to the base frame, we derive the manipulator displacement equa-
tions, a.k.a. the loop-closure equations, from which all unknown angles are to be 
computed. We start by recalling the (matrix) rotation and (vector) translation 
equations of the general six-axis manipulator, as displayed in eqs.(4.9a & b), 
and reproduced below for quick reference: 
Q1Q2Q3Q4Q5Q6 = Q 
(9.16a) 
ai + Qia2 + QiQ2a3 + .. + QiQ2Q3Q4Q5a6 = P 
(9.16b) 
The use of 4 x 4 homogeneous transformations in the ensuing preparatory 
work will ease the suitable recasting of the foregoing equations. Thus, by using 
the matrices A^ of eq.(9.1) in the above rotation and translation equations, we 
end up with a 4 x 4 matrix equation, namely. 
A1A2A3A4A5A6 = A 
(9.17) 
The unknown variables in the above equations are the joint angles {Oi}i; the 
IDP thus consists in solving the closure equations (9.16a & b) or, equivalently, 
eq.(9.17), for these unknowns. The said equations comprise 12 scalar equations 
and four identities; however, among these equations, only six are independent, 
for the columns (or the rows) of a rotation matrix must form an orthonormalâ 
mutually orthogonal and of unit magnitudeâset of vectors. The orthonormality 

350 
9. Geometry of General Serial Robots 
property of the columns or rows of a rotation matrix, thus, brings about six 
scalar constraints. 
The basic approach to solving the IDP resorts to disassembling the kine-
matic chain of the manipulator at two joints, e.g., joints 3 and 6, to obtain two 
subchains or subloops (Li et al., 1991). The first subchain, as suggested in the 
foregoing reference, and depicted in Fig. 9.2, goes from joint 3 to joint 6 via 
joints 4 and 5, while the second subchain goes from joint 6 to joint 3 via the EE 
and joints 1 and 2. Algebraically, this is equivalent to rewriting eq.(9.17) in the 
form 
A3A4A5 = A2 ^Aj ^AAg 
(9.18a) 
Note that each side of eq.(9.18a) bears a specific structure. Indeed, if we denote 
by L5 and R^ the left- and right-hand sides of eq. (9.18a), we have 
Re = 
r'll(^3j^45^5) 
'21(^3? ^4,^5) 
'31(^45^5) 
0 
^11(^1,62,^6) 
^31(^1,^2,^6) 
0 
^12(^3, ^4, ^5) 
'22(^3,^4,^5) 
^32(^4, ^5) 
0 
^12(^1, ^2, ^6) 
7-22(^1,^2,^6) 
r32(^l,e2,^6) 
0 
'13(^3,^4,^5) 
'23(^3,^4,^5) 
'33(^4,^5) 
0 
^13(^1,^2) 
7-23(^1,^2) 
7-33(^1,^2) 
0 
'14(^3,^4,^5) 
'24(^3,^4,^5) 
'34(^4,^5) 
1 
ri4(ei,^2) 
r24{0ue2) 
7-34(^1,^2) 
1 
(9.18b) 
(9.18c) 
where kj and Vij denote nontrivial components of the left- and the right-hand 
sides, respectively, of eq.(9.18a). Note that, because of the forms of matrices Q^, 
whose third rows are independent of 6i, the third row of Lg, as made apparent 
in eq.(9.18b), is free of 63. Likewise, the third and fourth columns of R5, as 
made apparent in eq.(9.18c), are free of OQ. 
It should be apparent that other pairs of joints can be used to disassemble 
the kinematic chain of the manipulator into two subchains; what matters is that 
none of the two subchains contains more than three joints; else, the entries of the 
homogeneous matrices become unnecessarily complex on one side of the matrix 
equation, while the entries of the other side become unnecessarily simple. 
Now we extract one rotation and one translation equation from the 4 x 4 
matrix equation (9.18a), namely, 
Q3Q4Q5 - Q^Qf QQ^ 
(9.19a) 
Q3(b3 + Q4b4 + Q4Q5b5) = Q I ^ Q ^ P " Qbe) - (b2 + Q^bi) 
(9.19b) 
which are kinematically equivalent to eqs.(9.16a &; b), but algebraically much 
simpler. Note that, in eq.(9.19b), we used the second eq.(9.7) to substitute a^ 
by Qzb^. In the sequel, we will need the two products below: 
Qge = Q5[e6]6 = [e6]5 
Qe^ = Qli^eh 
=06 = [e6]7 
where we have recalled relations (9.8a & b); whence, 
QQ^e = Q[ee]7 = [ee]! = ere 
(9.20a) 
(9.20b) 
(9.20c) 

9.2 The IDP of General Six-Revolute 
Manipulators 
351 
Further, we equate the product of each of the two sides of eq.(9.19a) by e from 
the right, to obtain, in Hght of eqs.(9.20a & c). 
Q3Q4[e6]5 = Q^QHeeli 
(9.21a) 
Both sides of eq.(9.21a) thus represent the unit vector ee in frame Ts; the 
difference between the two sides should be apparent: while the left-hand side is 
obtained by transforming [egjs into [e^Ja, the right-hand side by transforming 
[eeji likewise. On the other hand, eq.(9.19b) can be cast in the form 
Q3(b3 + Q4b4 + Q4Q5b5) = Qi Qi P - (b2 + Q^ bi) 
(9.21b) 
where p = p â Qbg = [p â a6]i. Hence, the left- and the right-hand sides of 
eq.(9.21b) represent vector as + a4 + as in frame JF3, the difference being that 
the left-hand side is obtained by carrying the jr4-representation of the vector 
into J^s, while the right-hand side does so from the JF^-representation of the 
same vector. 
Further, let the left- and the right-hand sides of eq.(9.21a) be denoted by h 
and i, respectively, while the counterparts of eq.(9.21b) by f and g, i.e., 
h = ^^3,^4,^5) = Q3Q4U5 
(9.22a) 
i = i(01,02)-Q^QftT6 
(9.22b) 
f = f(03,^4,^5) - Q3(b3 + Q4b4 + Q4Q5b5) 
(9.22c) 
g = g{eue2) = QIQIP 
- (b2 + Q^bi) = Q^iQjp 
- bi) - b2 
(9.22d) 
Further, notice that arrays f and g represent, in fact, the first three entries of the 
fourth columns of the matrices of eqs.(9.18b) and (9.18c), respectively. Likewise, 
arrays h and i represent the third columns of the same matrices. Vectors g and 
i are thus free of Oe â¢ 
Now, the six scalar equations (9.21b) and (9.21a) reduce, correspondingly, 
to 
f - g 
h = : i 
or 
or 
/a;(03 5 04j05) 
/l/(03,^4,05) 
= 
== 
\9x{0ue2y 
\9y{0ue2) 
I9z{0ue2)_ 
"i. (01, 02)1 
i,(0i,02) 
^.(0l,02)J 
(9.23a) 
(9.23b) 
It should be noted that h and i are both unit vectors. Thus, each side of 
eq.(9.23b) is subjected to a quadratic constraint, i.e.. 
h h 
i i = 1 
and hence, out of the above six scalar equations, only five are independent. 
However, the number of unknowns in these six equations is also five. There-
fore, eqs.(9.23a) and (9.23b) suffice to determine the five unknown joint angles 
contained therein. 

352 
9. Geometry of General Serial Robots 
Although we already have one redundant equation to compute the six un-
known angles, it will prove convenient to derive eight additional equations with 
the same power products^ as f, g, h and i, namely, 
f f = g g 
f h = g i 
f X h = g X i 
r - h ) f = : ( g - g ) i - 2 ( g - i ) g 
(9.23c) 
(9.23d) 
(9.23e) 
(9.23f) 
(f.f)h 
It is noteworthy that eq.(9.23f) is derived by first equating the reflection^ of 
vector h onto a plane normal to f with its counterpart, the reflection of vector i 
onto a plane normal to g. The final form of eq.(9.23f) is obtained upon clearing 
denominators in the foregoing reflection equation. 
Equations (9.23a-f) amount to 14 scalar equations in five unknown joint 
variables {^ilf. These are the fundamental closure equations sought. Some 
facts pertaining to the degree of the two sides of eqs.(9.23c-f) are proven below: 
Fact 9.2.1 The inner products f â¢ f and f â¢ h are both free of X3 and bilinear in 
{y^i}4, while their counterparts g â¢ g and g â¢ i are bilinear in xi & X2. 
Proof: 
f . f = ||Q3(b3 + Q4b4 + Q4Q5b5)||' 
= ||b3 + Q4b4+Q4Q5b5|P 
5 
= Yl ll^^ll' + 2bI^Q4(b4 + Qsbs) + 2bjQ5b5 
3 
whose rightmost-hand side is clearly free of X3 and is bilinear in {x^ }4. Simi-
larly, 
f . h = (b3 + Q4b4 -f Q4Q5b5)^Q^Q3Q4U5 
= b^Q4U5 + bju5 + b^Q^U5 
whose rightmost-hand side is apparently bilinear in X4 and X5, except for the 
last term, which contains two factors that are linear in X5, and hence, can be 
suspected to be quadratic. However, Qsbs is, in fact, as, while U5 is the last 
column of Q5, the suspicious term thus reducing to a constant, namely, 65 cos as. 
Similar proofs for g â¢ g and g â¢ i will be given presently. Moreover, 
Fact 9.2.2 Vector f xh 
is trilinear in {x^ }l, while its counterpart, g x i^ is 
bilinear in {x^ j ^ . 
^By power product we mean terms with their coefficients deleted; for example, the power 
products of the polynomial 5x'^y + Sxz 4- 9?/^ + 4z = 0 are the terms x'^y^ xz^ y^ and z. 
^Neither Li nor Raghavan and Roth disclosed the geometric interpretation of this fourth 
equation, first proposed by Lee and Liang (1988). 

9.2 The IDP of General Six-Revolute Manipulators 
353 
Proof: If we want the cross product of two vectors in frame A but have these 
vectors in frame B, then we can proceed in two ways: either (i) transform 
each of the two vectors into .4-coordinates and perform the cross product of 
the two transformed vectors; or (ii) perform the product of the two vectors 
in ^-coordinates and then transform the product vector into v4-coordinates. 
Obviously, the two products will be the same, which allows us to write 
f X h = Q3 [bs X (Q4U5) + (Q4b4) X (Q4U5) + (Q4Q5b5) X (Q4U5)] 
= Q3{b3 X (Q4U5) + Q4(b4 X Us) + Q4 [(Qsbs) X U5)]} 
whose rightmost-hand side is apparently trilinear in { x^ jg, except for the term 
in brackets, which looks quadratic in X5. A quick calculation, however, reveals 
that this term is, in fact, linear in X5 as well. Indeed, from the definitions given 
in eqs.(4.3c & d) and (9.5) we have 
(Qsbs) X U5 = as X U5 = -asAsCs + 65/^5 S5 
-as/is 
which is obviously linear in xs. The proof for the counterpart product, g x i, 
parallels the foregoing proof, and will be given below. 
Fact 9.2.3 Vector (f â¢ f)h â 2(f â¢ h)f is trilinear in {^i}s, 
its counterpart, 
(g â¢ g)i ~ 2(g â¢ i)g, being bilinear in { x^ j ^ . 
Proof: First, we write the (elongated or contracted) reflection of vector h in the 
form 
( f . f ) h - 2 ( f . h ) f = Q 3 V 
where 
= ( Y. Il^^ll^ 1 Q4U5 - 2[(u^Q4b3)b3 -f (ul^b4)b3 + (u^b4)Q4b4 
+ (u^Q5b5)b3 + (u^Q5b6)Q4b4 + (u^Q5b5)Q4Q5b5] + 2w 
= ( E I I ^ ^ I I j Q4U5-2[ul^b4(b3+b3 + Q4b4) 
+ U^Q5b5(b3 + Q4b4 + Q4Q5b5) + 2w 
with all terms on the right-hand side, except for w, which will be defined 
presently, clearly bilinear in X4 and X5. Vector w is defined as 
W = [ li + [ ]2 + [ Is 
each of the foregoing brackets being expanded below: 
[ ]i = [(bi'Q4b4)Q4U5 - (ujQjb3)Q4b4] 
= Q4(U5bjQj - b4U^Qj)b3 
= Q4(U5bJ-b4U^)Qjb3 

354 
9. Geometry of General Serial Robots 
which thus reduces to a product including a factor of the form Q^ AQf, with A 
being the term in parentheses in the rightmost-hand side of the last equation. 
This is obviously a skew-symmetric matrix, and Lemma 9.2.1 applies, i.e., the 
rightmost-hand side of the last equation is linear in X4. This term is, hence, 
bilinear in X4 and X5. Furthermore, 
[ ]2 = [(bf Q5b5)Q4U5 - (u^b4)Q4Q5b5] 
= Q4 [(b^Q^b4)u5 - (u^b4)Q5b5] 
= Q4(u5b^Qi^-Q5b5U^)b4 
which is apparently linear in X4, but it is not obvious that it is also linear in X5. 
To show that the second linearity also holds, we can proceed in two ways. First, 
note that the term in parentheses is the skew-symmetric matrix U^SLJ â SL^UJ, 
whose vector, as XU5, was already proven to be linear in X5. Since the vector of a 
skew-symmetric matrix fully defines that matrixâsee Section 2.3âthe linearity 
of the foregoing term in X5 follows immediately. Alternatively, we can expand 
the aforementioned difference, thereby deriving 
^I-
T 
0 
a5/X5 
-as/is 
0 
asAsCs - h/jL^s^ a^X^s^ + hfibC^ 
-asAsCs -1- hfjb^ss 
-a^X^ss - hfi^c^ 
0 
which is clearly linear in X5. Moreover, its vector can be readily identified as 
as X U5, as calculated above. Finally, 
[ ]3 = [(b|^Q4Q5b6)Q4U5 - (ujQlb3)Q4Q5b5] 
= Q4(u5b^Qj - Q5b5uJ^)Qrb3 
= Q4(u5a^ - a5u|^)Qjb3 
this bracket thus reducing to a product including the factor Q^AQf, with A 
skew-symmetric. Hence, the foregoing expression is linear in X4, according to 
Lemma 9.2.L Moreover, the matrix in parentheses was already proven to be 
linear in X5, thereby completing the proof for vector (f â¢ f)h â 2(f â¢ h)f. The 
proof for vector (g â¢ g)i â 2(g â¢ i)g parallels the foregoing proof and will be given 
presently. 
Finally, we have one more useful result: 
Fact 9.2.4 // a scalar, vector, or matrix equation is linear in x^, then upon 
substitution of Ci and Si by their equivalent forms in terms of Ti = tan(0^/2), 
the foregoing equation becomes quadratic in Ti after clearing denominators. 
Proof: We shall show that this result holds for a scalar equation, with the 
extension to vector and matrix equations following directly. The scalar equation 
under discussion takes on the general form 
Aci -\-Bsi-\-C 
= 0 

9.2 The IDP of General Six-Revolute Manipulators 
355 
where the coefficients A, B, and C do not contain 6i. Upon substituting Ci and 
Si in terms of TI = tan(^i/2), and multiplying both sides of that equation by 
1 + rf, we obtain 
^(1 - rf) + 2Bri + C{1 + r^) = 0 
which is clearly quadratic in r^, q.e.d. 
Moreover, if a scalar, vector, or matrix equation is of degree fc in x^, upon 
introducing the same trigonometric substitution, the said equation becomes of 
degree 2k in r^. 
Expressions for the right-hand sides of eqs.(9.23c-d) are given below: 
2 
g â¢ g = E ll*''!!' + il''!!' - VQi(Q2b2 + bi) + 2bf Q2b2 
(9.24a) 
1 
g - i = < 7 j ( p - Q i Q 2 b 2 - Q i b i ) 
(9.24b) 
g X i = Q'^Qjip 
X o-e) - b2 X QjQjcre 
- Qi'(bi x Qjae) 
(9.24c) 
and 
(g â¢ g)i - 2(g . i)g = (J2 \M" + IIPII') QlQiCre 
-2[((T^p)(Qi^Qf p - b2 - Qi^bi) + ((TjQiQ2b2)b2 
+(^i^Qibi)b2 + ((T^Qibi)Q^b2] + 2w' 
(9.24d) 
In deriving and simplifying the above relations, we use the invariance relationsâ 
see Section 2.7âof the dot and cross products, i.e., for any arbitrary vectors u 
and V, we have 
(QiufiQi^r) 
= u^v 
(Qiu) X (Q^v) = Qi{ux v) 
All the terms on the right-hand sides of eqs.(9.24a-d), except for w', are ap-
parently bilinear in xi and X2. This bilinearity also holds for the last term in 
eq.(9.24d), i.e., w', which can be expressed in the form 
w ' = [ ] [ + [ ]'-, + [ ]'s 
(9.25) 
Each of the above brackets is given as 
= (Qi^Qf )(PÂ«TJ - <T6p^)(Q2Qi)b2 
(9.26a) 
[ ]; = [(brQ2b2)QrQfÂ«r6 - (crjQ^Q2h2)Q'^h,] 
= CgmJ<Te)hi - bi(Qf Â«T6)^]Q2b2 
(9.26b) 
[ ]; = [(^rjQibOQ^Qfp - (p^Qibi)QjQrÂ«T6] 
= QllQlipcrJ 
- o-6P^)Qi]bi 
(9.26c) 

356 
9. Geometry of General Serial Robots 
According to Lemma 9.2.1, the terms in the right-hand sides of relations (9.26a-
c) are all bilinear in xi and X2. 
It is noteworthy that the third components of vectors f x h and (f â¢ f)h â 
2(f â¢ h)f, as well as f â¢ f and f â¢ h, are all free of 63. Hence, among the 14 
scalar equations, i.e., eqs.(9.23a-f), six are free of 63. Casting all 14 equations 
in vector form results in the fundamental closure equations: 
PX45 = Rxi2 
(9.27) 
where P and R are 14x9 and 14x8 matrices, respectively. Moreover, the entries 
of P are linear in X3, while those of R are independent of the joint angles. In 
addition, the 9- and 8-dimensional vectors X45 and X12 are defined as 
X45 = [s4S5 
54C5 C4S5 C4C5 84 CA 55 C5 1] 
(9.28a) 
xi2 = [siS2 
S1C2 C1S2 C1C2 Si 
ci 
S2 C2] 
(9.28b) 
Various approaches have been reported to solve the fundamental closure 
equations for the unknown joint angles, but all methods fall into two categories: 
(i) purely numerical approaches, whereby no attempt is made to reduce the 
number of unknowns (Angeles, 1985), or the reduction is rather limited, from 
six to four unknowns (Tsai and Morgan, 1985); and (ii) elimination approaches, 
whereby unknowns are eliminated algebraically, as opposed to numerically, until 
a reduced number of equations in a reduced number of unknowns is derived. 
We focus here only on the second category. Of these, we have essentially two 
classes: (a) the univariate-polynomial approach and (b) the bivariate-equation 
approach. As the names indicate, the former aims at reducing the fundamental 
equations to one single equation in one unknown. Moreover, that single equa-
tion, being polynomial in form, is termed the characteristic polynomial of the 
problem at hand. The polynomial is derived upon substituting the cosine and 
sine functions of the unknown angle, say 9;,, by {1-T'^)/{1+T'^) 
and 2T/{l-\-T'^), 
respectively, with T = taxi{6x/2). This transformation is well known as the tan-
half trigonometric identities. The second approach, in turn, aims at reducing all 
fundamental closure equations to a smaller system of trigonometric, as opposed 
to polynomial, equations in only two unknowns. 
The transformation of the original problem given in terms of trigonometric 
functions of the unknown angles into a polynomial equation in T is essential 
from a conceptual viewpoint, for this transformation makes apparent that the 
problem under study admits a finite number of solutions, namely, the degree 
of the characteristic polynomial. On the other hand, the same transformation 
is not trouble-free. Indeed, the mapping from 6^ into T apparently includes 
a singularity at 6x = TT, whereby T -> 00. The outcome is that, if one of 
the solutions is ^a; = TT, then the characteristic polynomial admits at least one 
solution at infinity, which is reflected in a deflation of the polynomial. This 
phenomenon, called polynomial deflation, was made apparent in Example 4.4.3, 
where a quartic characteristic polynomial appeared as cubic because of one 
solution at infinity. The beginner may thus be misled to believing that, in 

9.3 The Univajriate-Polynomial Approach 
357 
the presence of a solution at infinity, the system at hand admits a smaller 
number of solutions than it actually does. Furthermore, in the neighborhood 
of ^a- = TT, one of the solutions is extremely large in absolute value, which thus 
gives rise to numerical inaccuracies, generically referred to as ill-conditioning. 
As a matter of fact, the problem of polynomial-root finding has been identified 
as ill-conditioned by numerical analysts for some time (Forsythe, 1970). 
In order to cope with the foregoing shortcomings of the tan-half identities, 
the author and his team devised an alternative means, the bivariate-equation 
approach, to solving the problem at hand and other similar ones in computa-
tional kinematics (Angeles and Etemadi Zanganeh, 1992a, b). In this approach, 
the 14 equations are reduced to a system of bivariate trigonometric equations 
in the sines and cosines of two of the unknown angles. These equations are then 
plotted in the plane of the two unknowns, thus obtaining four contours, whose 
intersections yield the real values of the two unknowns. As a matter of fact, 
only two such equations would suffice; however, it turns out that the underly-
ing reduction cannot be accomplished without the introduction of either extra 
equations or spurious roots, which must be detected in order to discard them. 
Notice that, for an intersection point to qualify as a solution, all contours must 
meet at that point. As illustrated with one example, even the use of extra con-
tours does not guarantee a legitimate solution. Spurious solutions fail to allow 
for the computation of the remaining four joint angles. 
9.3 
The Univariate-Polynomial Approach 
We describe here two procedures leading to one single univariate 16th-degree 
polynomial equation, which is the characteristic polynomial of the system at 
hand. The two procedures bear many similarities, but they also involve re-
markable differences that warrant separate discussions. 
9.3.1 
The Raghavan-Roth Procedure 
A sophisticated elimination procedure was proposed by Raghavan and Roth 
(1990; 1993). Their procedure is based on eqs.(9.23a-f), but their 14 closure 
equations are different, as explained below. 
At the outset, Raghavan and Roth define four vectors that will play a key 
role in the ensuing derivations, namely. 
f = f(04,^5) = I /2 
= Zaf = X3(b3 + Q4b4 + Q4Q5b5) 
(9.29a) 
h = h(ei) = U 2 I = Q2g + a2 - Qjp - bi 
(9.29b) 

358 
9. Geometry of General Serial Robots 
f = f(^4,^5) = 
= Z g h = X3Q4U5 
n = ii(0i)=: 
Til 
= Q2i = Qf^Te 
(9.29c) 
(9.29d) 
Expressions for the components of the above four vectors axe given in Table 9.1, 
where ti {i = 1,2,3), p, q, r, u, v, and w are auxiliary variables. Using 
Item 
h 
h 
h 
H 
i2 
^3 
hi 
/^2 
h^ 
P 
1 ^ 
r 
Expression 
| 
C4ii -\- S4L2 + as 
-A3(S4^1 
-CAi2) 
fJ'sis^f^l - 
C4i2) 
+ A3i3-f&3 
c^a^ + a4 
-55A4a5 + fJ>4h 
S5/^4<^5 + A465 4- 64 
Cip + 
siq-ai 
-M{sip-ciq) 
+ /xi(r-di) 
/ i i ( 5 i p - C i ^ ) 
+ A i ( r - d i ) 
âlyGQ â {rriyfiG + 
qnyXQ)dG 
+ Py 
-IzCLQ - {rrizfiG + nzX6)de 
+ Pz 
Item 
ri 
r2 
rs 
mi 
7X12 
ms 
m 
^2 
^3 
1 ^ 
I? 
1 tt; 
Expression 
C4mi + S4m2 
âX3{s4mi 
- C4m2) 
+ /i3m3 
^ 3 ( 5 4 ^ 1 -047712) 
+ A3m3 
S5/i5 
C5A4/X5 + /^4A5 
-C5/^4/i5 + A4A5 
ciw 4- Sit' 
â Ai(5ilA â Civ) 
+ fjilW 
fj,i{siu 
- 
Civ) 
-\-Xiw 
rrixlJiQ +nxXQ 
rriyfiG -f riyXQ 
mzfJ'e +nzXe 
Table 9.1: Expressions for the components of vectors f, h, f, and n 
eqs.(9.29a-d), (9.3), (9.4b), (9.10), and (9.9), we can rewrite eqs.(9.21a & b) in 
terms of the foregoing vectors, namely. 
Z3f(^4,^5) = X2Z2n(^l) 
Zsi{e4,e,) 
= 
X2[Z2h{ei)-^^] 
(9.30a) 
(9.30b) 
where we have recalled definitions (9.9) for i = 2. These six scalar equations 
play a key role in deriving the Raghavan-Roth equations in five unknowns that 
are needed to solve the problem at hand. 
Next, both sides of eqs.(9.30a & b) are multiplied from the left by X^^ = 
X.'^ = X2; then, the two equations thus resulting are rearranged in the forms 
X2Z3f + 72 = Z 2 h 
(9.31) 
X2Z3f = Z2n 
(9.32) 

9.3 The Univariate-Polynomial Approach 
359 
Now, four new vectors, the counterparts of those introduced in eq.(9.22a-d), 
are defined as 
f = X2Z3f + 72 = 
g = Z2h 
h = XaZgf 
i = Zgn 
= X2(Z3f + b2) 
(9.33a) 
(9.33b) 
(9.33c) 
(9.33d) 
Note that f and h are trilinear^ in X3, X4, and X5, while the first two compo-
nents of g and 1 are bilinear in xi and X2, their third components being linear in 
xi and free of 62. Similar to eqs.(9.23a & b), six scalar equations are obtained: 
f = g 
(9.34a) 
h = i 
(9.34b) 
Moreover, eight more scalar equations are obtained in the forms 
f-_f = g g 
(9.34c) 
f â¢ h = g â¢ i 
(9.34d) 
f X ii = g X i 
(9.34e) 
(f . f )h - 2(f . h)f = (g . g)i - 2(g . I)g 
(9.34f) 
The fourteen scalar equations (9.34a-f) are henceforth termed the Raghavan-
Roth (RR) equations. 
The third components of the two vectors on the right-hand sides of eqs.(9.34e 
&; f), and the terms on the right-hand sides of eqs.(9.34c & d) are free of 62 and 
linear in xi. As proven by Raghavan and Roth in the above references, the eight 
foregoing equations have the same power products as f, h, g, and 1. Now, the 
14 RR equations (9.34a-f) are cast in the form 
PX45 = Rxi2 
(9.35) 
where P and R are 14 x 9 and 14 x 8 matrices, respectively. Moreover, the 
entries of P are linear in X3, while those of R are independent of the joint 
angles; moreover, R has the structure: 
â¢^while the last row of Z3 is free of ^3, the last row of X2Z3 is [)tX2S3, â/X2C3, A2]. 

360 
9. Geometry of General Serial Robots 
R = 
X 
X 
0 
X 
X 
0 
0 
0 
X 
X 
0 
X 
X 
0 
X 
X 
0 
X 
X 
0 
0 
0 
X 
X 
0 
X 
X 
0 
X 
X 
0 
X 
X 
0 
0 
0 
X 
X 
0 
X 
X 
0 
X 
X 
0 
X 
X 
0 
0 
0 
X 
X 
0 
X 
X 
0 
0 
0 
X 
0 
0 
X 
X 
X 
0 
0 
X 
0 
0 
X 
0 
0 
X 
0 
0 
X 
X 
X 
0 
0 
X 
0 
0 
X 
X 
X 
0 
X 
0 
0 
0 
0 
X 
0 
0 
X 
X 
0 
X 
X 
0 
0 
X 
0 
0 
0 
0 
X 
0 
X 
X 
0 
(9.36) 
In the above display, all nonzero entries are denoted by x and rows are written 
according to the order of appearance in eqs.(9.34a-f). This special structure of 
matrix R is then exploited to eliminate the joint angles 6i and 62 in an efficient 
way. 
Based on the structure of R, two groups of six and eight equations are 
defined: 
PwX45 = CXi 
P/X45 = AX12 
(9.37a) 
(9.37b) 
where C is a 6 x 2 constant matrix that is formed by the nonzero entries in rows 
3, 6, 7, 8, 11, and 14 of matrix R. A is, in turn, an 8 x 6 matrix whose entries 
are all functions of the data, while xi and X45 were defined in eqs.(9.11) and 
(9.28a), respectively; X12 is, in turn, the 6-dimensional vector defined as 
Xi2 = [siS2 
S1C2 
C1S2 
C\C2 
S2 
C2] 
(9.38) 
Furthermore, Pu comprises the third, sixth, seventh, eighth, 11th and 14th rows 
of P, P/ comprising the remaining eight rows. Notice that Pu ^i^d P/ are both 
linear in X3. 
Any two of the six scalar equations in eq.(9.37a) can now be used to solve 
for xi, the resulting expression then being substituted into the remaining four 
equations of the same group. This is done by first partitioning the six scalar 
equations as 
C/Xi = d/ 
(9.39a) 
(9.39b) 
where C^ and C/ are 2 x 2 and 4 x 2 submatrices of C, respectively, with d^^ 
and d/ being the corresponding 2- and 4-dimensional vectors that result from 
PwX45; these two vectors are trilinear in X3, X4 and X5. If eq.(9.39a) is solved 

9.3 The Univariate-Polynomial 
Approach 
361 
for xi and the result is substituted into eq.(9.39b), we obtain four equations 
free of Oi and 62, namely, 
r4X45 = Q C - M ^ - d/ = O4, 
r4 = C/C-^(P,,)2 - (P^)4 
(9.40a) 
in which r4 is a 4 x 9 matrix whose entries are linear in X3, while (Pn)2 and 
(Pu)4 ^^^ 2 x 9 and 4 x 9 submatrices of matrix P^^, respectively. The above 
set of equations is now cast in the form 
Diys = O4 
(9.40b) 
with Di defined as a 4 x 3 matrix whose entries are bilinear in X4 and X5, while 
O4 is the 4-dimensional zero vector, and ys is defined as 
y3 = [c3 53 1]^ 
(9.41) 
If Cn is chosen with nonzero entries in the third and sixth rows of matrix R, 
then we have 
^u â JJ,lU âfilV 
(9.42a) 
with p, q, u, and v listed in Table 9.1. If Cu is nonsingular, C^^ is readily 
obtained as 
1 
c-' = lii{uq-pv) 
âV q 
âu p 
(9.42b) 
However, if C^ turns out to be singular, then a different pair of eqs.(9.37a), of 
the set associated with rows 3, 6, 7, 8, 11 and 14, should be selected. 
Additional equations free of 61 and O2 can be derived from any six of the 
eight equations in eq.(9.37b), which can be used to solve for X12; the expressions 
thus resulting are then substituted into the remaining two equations. In this 
way, two additional equations free of 9i and 62 would be obtained. However, 
this elimination process is not suitable for symbolic computations. Instead, 
Raghavan and Roth (1990) derived the two additional equations in a terser 
form. This is done by finding two independent linear combinations of the eight 
equations (9.37b) that render identically zero all terms in 61 and 62. The left-
hand sides of these equations are given as 
-Aiyui(f X h)a; + niwfy - jjLiir - bi)hy 
(9.43a) 
MO3,O4,05) = ^ [ ( f â¢ f)hy - 2(f â¢ h)fy] - AiMi(f X h)y 
2 
2 
-fiiwj^ 
+ ni{r - h)K 
+ âS2fy - p-Sihy 
(9.43b) 
ai 
^ 
zai 

362 
9. Geometry of General Serial Robots 
while the right-hand sides are 
-Ai/xi(g X i)^ + /iito^^ - fii{r- 
bi)zy 
(9.43c) 
^2 = 2^[(g â¢ g)% - 2(g . i)gy] - Xifiiig X i)^ 
-fiiwg^ 
+ /ii(r - 6i)2a, -f â525v ~ 7r~^i^2/ 
(9.43d) 
On the other hand, hx, ix^ fx ^^^ Vx represent the first components of 
vectors h, i, f, and g, respectively, the other components being defined likewise. 
Furthermore, Si and 62 are defined as 
S,=p^ + q' + 
ir-b^r-al 
62 = pu-}-qv + {r â bi)w 
Upon substitution of g and I, as given by eqs.(9.33b & d), respectively, into 
eqs.(9.43c & d), and introduction of the definitions given in Table 9.1, it turns 
out that both ^1 and ip2 vanish identically, i.e., 
^ 1 = 0 
and 
'02 = 0 
Also note that, in deriving expressions (9.43a & b) and (9.43c & d), we 
assume that ai ^ 0. However, ai vanishes in many industrial robots, those 
having their first two axes intersectingâusually at right anglesâthe foregoing 
procedure thus becoming inapplicable. One way of coping with this case is to 
go one step behind Raghavan and Roth's procedure and redefine, for fc = 1,2, 
0fc(6^3,6>4,6>5) <â ai0fc(^3,6>4,6>5); 
and 
ijk <â ai^k 
i.e., 
01 (^3, ^4,^5) ^ f [(f â¢ i)h. - 2(f â¢ h ) 7 j - ^Sihx 
+ f,lS2Jx 
-aiXifii{f 
X h)x + aifjiiwfy - aifj,i{r - bi)hy 
(9.44a) 
02(^3, ^4, ^5) - Y[(f â¢ ^)hy - 2(f â¢ h)7^] - aiAi//i(f x h)^ - 
aifuwj, 
+ aifiiir - bi)hx + iil82ly - ^Sihy 
(9.44b) 

9.3 The Univariate-Polynomial Approach 
363 
2 
2 
-aiAi/xi(g X i)a. 4- aifxiw-Qy - ai/ii(r - 61)2^ 
(9.45a) 
i^2 = yiCg â¢ g)h - 2(g â¢ i)pj - aiAi/xi(g x 1)^ 
-aifiiwg^ 
+ ai//i(r - 61)23^ + fi'iS29y - y^i^y 
(9.45b) 
Under their new definitions, apparently, ipi and ip2 also vanish. Once (pi and 
(?!>2 are equated to zero, two equations are obtained that can be cast in the form 
f 2x45 = O2 
(9.46) 
or equivalently, 
D2y3 = O2 
(9.47) 
where O2 is the 2-dimensional zero vector, r2 is a 2 x 9 matrix whose entries 
are linear in X3, D2 is a 2 x 3 matrix whose entries are bilinear in X4 and X5, 
and y3 was introduced in eq.(9.41). 
The two eqs.(9.40a) and (9.46) thus involve a total of six scalar equations 
free of 61 and 62, and can be combined to yield a system of six equations trilinear 
in X3, X4, and X5, namely, 
SX45 = Oe 
(9.48a) 
where E is a 6 x 9 matrix whose entries are linear in X3, and Oe is the 6-
dimensional zero vector. Now, the tan-half trigonometric identities relating Si 
and Ci with TJ = tan(^^/2), for 2 = 4,5, are substituted into eq.(9.48a). Upon 
multiplying the two sides of the equation thus resulting by (1 -f- rl )(1 + rf), 
Raghavan and Roth obtained 
S'x^5 = Oe 
(9.48b) 
where SMs a 6 x 9 matrix that is linear in X3, while X45 is defined as 
^45 = [^hi 
"^in rl 
TAT^ nn 
r^ ri 
n 
1]^ 
If the same trigonometric identities, for 2 = 3, are now substituted into 
eq.(9.48b), and then the first four scalar equations of this set are multiplied by 
(1 + T3) to clear denominators, the equation thus resulting takes the form 
S''x^5 = Oe 
(9.48c) 
In the above equations, S'' is a 6 x 9 matrix whose first four rows are 
quadratic in T3, while its last two rows are apparently rational functions of T3. 
However, as reported by Raghavan and Roth, the determinant of any 6 x 6 
submatrix of S'' is, in fact, an 8th-degree polynomial in T3 and not a rational 
function of the same. Moreover, in order to eliminate T4 and rs, they resort to 

364 
9. Geometry of General Serial Robots 
dialytic elimination (Salmon, 1964), introduced in this book in Subsection 5.4.1 
and in Exercise 5.10. Dialytic elimination is further discussed in Section 9.3, 
in connection with the Li, Woernle, and Hiller method, and in Section 10.2 in 
connection with parallel manipulators. 
In applying dialytic elimination, the two sides of the system of equations 
appearing in eq.(9.48c) are first multiplied by r4; then, the system of equations 
thus obtained is adjoined to the original system, thereby deriving a system of 
12 linear homogeneous equations in X45, namely, 
Sx45 = O12 
(9.48d) 
where O12 is the 12-dimensional zero vector, while the 12-dimensional vector X45 
is defined as 
X45 = [riri 
rln 
r | 
rjrl 
rjr^ 
rj 
(9.48e) 
TATi TAn 
n 
TQ 
rs 
1 J ^ 
Furthermore, the 12 x 12 matrix S is defined as 
its 6 X 12 blocks G and K taking on the forms 
G = [ S " 
063], 
K = [ 0 6 3 
S"] 
with 063 defined as the 6 x 3 zero matrix. 
Now, in order for eq.(9.48d) to admit a nontrivial solution, the determinant 
of its coefficient matrix must vanish, i.e., 
det(S) = 0 
(9.49) 
which is the characteristic equation sought. The foregoing determinant turns 
out to be a 16th-degree polynomial in ra. Moreover, the roots of this polynomial 
give the values of ra corresponding to the 16 solutions of the IDP. It should be 
noted that, using the same procedure, one can also derive this polynomial in 
terms of either T4 or rs if the associated vector in eq.(9.48d) is written as X35 
or X34, respectively. Consequently, the entries of matrix S would be linear in 
either X4 or X5. 
9.3.2 
The Li-Woernle-Hiller Procedure 
At the outset, the factoring of Q^ given in eq.(4.1c) and the identities first used 
by Li (1990), namely, eqs.(9.15b), are recalled. Additionally, Li defines a matrix 
Ti as 
'-Ti 
1 
0^ 
Ti = I 1 
Ti 0 
0 
0 
1 

9.3 The Univaxiate-Polynomial 
Approach 
365 
Hence, 
J- iv^i = U i â 
Ti 
1 
0 
1 
-Ti 
0 
0 
0 
1 
with Ci defined in eq.(4.1b). Furthermore, we note that the left-hand sides of 
the four vector equations (9.23a, b, e & f) are of the form Q3V, where v is 
a 3-dimensional vector independent of ^3. Upon multipHcation of the above-
mentioned equations from the left by matrix T3, Li and co-authors obtained a 
new set of equations, namely. 
Uaf = T3g 
Uar = T s i 
U 3 ( f x f ) = T 3 ( g x i ) 
U3 [(f â¢ f)f - 2(f. h)f] = T3 [(g â¢ g)i - 2(g â¢ i)g] 
where f and r are defined as 
f = A3(b3 + Q4b4 + Q4Q5b5) 
r = A3(Q4U5) 
(9.50a) 
(9.50b) 
(9.50c) 
(9.50d) 
(9.51) 
(9.52) 
with Aj defined, in turn, in eq.(4.1c). 
Because of the form of matrices T3 and U3, the third of each of the four 
vector equations (9.50a-d) is identical to its counterpart appearing in eqs. (9.34a, 
b, e &: f). That is, if we denote by either Vi or (v)j the ith component of any 
3-dimensional vector v, the unchanged equations are 
/ 3 = P 3 
h =i3 
(f X r)3 = (g X 1)3 
( f - f ) f 3 - 2 ( f - h ) / 3 = (g.g)i3 
2(g â¢ i)53 
(9.53a) 
(9.53b) 
(9.53c) 
(9.53d) 
all of which are free of 63. Furthermore, six additional equations linear in T3 
will be derived by multiplying both sides of eqs.(9.53a-d) and of (9.23c & d) by 
T3, i.e., 
r3[(f-f)r3 
73/3 
T3r3 
r3(f x r ) 3 
2(f-h)/3]3 
7353 
T3(gXi)3 
r3[{g-g)i3 
2(g â¢ i)g3]3 
T3{t-t) 
= r 3 ( g - g ) 
T3(f-h) = T3(g-i) 
(9.54a) 
(9.54b) 
(9.54c) 
(9.54d) 
(9.54e) 
(9.54f) 

366 
9. Geometry of General Serial Robots 
We now have 20 scalar equations that are linear in T3, namely, the 12 
eqs.(9.50a-d) plus the six equations (9.54a-f) and the two scalar equations 
(9.23c & d). Moreover, the left-hand sides of the foregoing 20 equations are 
trilinear in T3, X4, and X5, while their right-hand sides are trilinear in rs, xi, 
and X2. These 20 equations can thus be written in the form 
Ax = ^ 
(9.55a) 
where the 20 x 16 matrix A is a function of the data only, while the 20-
dimensional vector /3 is trilinear in rs, xi, and X2, the 16-dimensional vector x 
being defined, in turn, as 
X = [T3C4C5 
T3C4SQ 
r354C5 
r3S4S5 
r3C4 
r3S4 
T3C5 
T3S5 
C4C5 
C4S5 
S4C5 
S4S5 
C4 
S4 
C5 
55]^ 
(9.55b) 
Next, matrix A and vector 0 are partitioned as 
At/ 
0 
0u 
(9.56) 
where Ac/ is a nonsingular 16 x 16 matrix, A^ is a 4 x 16 matrix, vector /3[/ 
is 16-dimensional, and vector f^j^ is 4-dimensional. Moreover, the two foregoing 
matrices are functions of the data only. Thus, we can solve for x from the first 
16 equations of eq.(9.55a) in the form 
X = A-i/3c; 
Upon substituting the foregoing value of x into the four remaining equations of 
eq. (9.55a), we derive four equations free of x, namely, 
ALA-^^P^ 
= 0L 
(9.57) 
In eq.(9.57) the two matrices involved are functions of the data only, while 
the two vectors are trilinear in rs, xi, and X2. These equations are now cast in 
the form 
{AiC2 + BiS2 -f Ci)r3 + DiC2 + EiS2 + Fz = 0, 
i = 1,2,3,4 
(9.58a) 
where all coefficients Ai,... ,Fi axe linear in xi. Next, Li and co-authors sub-
stitute C2 and 52 in the foregoing equations by their equivalents in terms of 
T2 = tan(02/2), thereby obtaining, for i = 1, 2, 3, 4, 
Carirs + 2^^x2X3 + A^m + Furi -f 2Eir2 + Da = 0 
(9.58b) 
with the definitions 
An = Ai + Ci 
(9.58c) 
Cii = Ci-Ai 
(9.58d) 
Du = Di-\-Fi 
(9.58e) 
Fa = Fi-Di 
(9.58f) 

9.4 The Bivariate-Equation 
Approach 
367 
Further, T2 and T3 are both eliminated dialytically from the four equations 
(9.58a). To this end, both sides of all four equations (9.58b) are multiplied by 
r2, which yields 
Curirs + 2BiT^r3 + AiiT2T3 + Furl + 2Eir| + AiT2 = 0 
(9.58g) 
We have now eight equations that are linear homogeneous in the 8-dimensional 
nonzero vector z defined as 
z = [r|r3 
r|r3 
r^ 
T2TZ 
T^ 
T3 
T2 
if 
(9.58h) 
and hence, the foregoing 8-dimensional system of equations takes on the form 
Mz = 0 
(9.59) 
where the 8 x 8 matrix M is simply 
M = 
- 0 
0 
0 
0 
Cii 
C22 
C33 
-C44 
Cn 
C22 
C33 
C44 
2Bi 
2B2 
2B3 
2B4 
0 
0 
0 
0 
Fn 
F22 
-F33 
F44 
2Bi 
2B2 
2B3 
2B4 
An 
A22 
^ 3 3 
^ 4 4 
Fn 
F22 
F33 
Fu 
2Ei 
2E2 
2E3 
2E4 
An 
A22 
Azz 
A44 
0 
0 
0 
0 
2Ei 
2E2 
2E3 
2E4 
Dn 
-D22 
D33 
D44 
Dn 
D22 
D33 
D44 
0 
0 
0 
0 
Now, since z is necessarily nonzero, eq.(9.59) should admit nontrivial solu-
tions, and hence, matrix M should be singular, which leads to the condition 
below: 
det(M) = 0 
(9.60) 
Thus, considering that all entries of M are linear in xi, det(M) is octic in 
xi, and hence, eq.(9.60) is equally octic in xi. By virtue of Fact 9.2.2, then, 
eq.(9.60) is of 16th degree in T\\ this equation takes on the form 
16 
YlakT^={) 
(9.61) 
which is the characteristic equation sought, its roots providing up to 16 real 
values of 6\ for the IDP at hand. 
9.4 
The Bivariate-Equation Approach 
The difference between this approach and those leading to the univariate poly-
nomial, as outlined in Section 9.3, lies in three aspects: (i) only four, out of the 
six original unknowns, are eliminated; {ii) the tan-half identities are avoided, in 
order to avoid polynomial deflation at or around values of TT, and to allow for 
finding all real roots; and {in) direct polynomial-root finding is avoided, rough 

368 
9. Geometry of General Serial Robots 
estimates of all roots being found, first, by inspection, then refined by means of 
a Newton procedure. 
Now, to derive the bivariate equations, we have to eliminate three of the 
five unknowns from the 14 fundamental closure equations. To this end, we 
resort to eqs.(9.40b), which are trilinear in {x^jg. Furthermore, from definition 
(9.41), y3 7^ 0, and hence, the 4 x 3 matrix Di of eq.(9.40b) must be rank-
deficient, which means that every one of its fourâthe number of combinations 
of four objects taking three at a timeâ3 x 3 determinants, obtained by deleting 
one of its four rows, should vanish. We need, in principle, only two of these 
determinants to obtain two independent equations in 64 and ^5. To be on the 
safe side regarding spurious roots and formulation singularities^, we impose 
the vanishing of all four possible determinants, which yields, correspondingly, 
four contours in the 64-65 plane; the intersections of all contours then yield the 
real (^4,^5) pairs of values which render Di rank-deficient. Each of the four 
equations thus derived describes a contour C^, for i = 1,2,3,4, in the 64-65 
plane: 
Ci: 
Fi{64,65)=0, 
i = 1,2,3,4. 
(9.62) 
Note that, by plotting the four contours in a square of the 64-65 plane, of side 
27r, we ensure that no real solutions will be missed. 
The intersection points can be detected visually by the user or, automati-
cally, by a suitable graphical user interface (GUIf. Regardless of the detection 
method, numerical code can be employed to refine each pair {64,65) of inter-
section coordinates to the desired accuracy. The well-known Newton-Raphson 
method for nonlinear-equation solving, outlined in Section B.3, can be used 
here. However, this method works for solving systems of as many equations as 
unknowns. In our case, we end up with four nonlinear equations in only two un-
knowns. While, in principle, any two of those four equations can be used to solve 
for the two unknowns, numerical roundoff error and the numerical conditioning 
of the problem at hand, to be discussed in Subsection 9.4.1, will invariably lead 
to different numerical solutions for different choices of those two equations. The 
question then is which of the four distinct solutions to pick up. In order to avoid 
this quandary, we suggest here to regard all four equations as independent, en-
tailing possible contradictionsâroundoff errors may render the four equations 
independent, which they aren't. With this approach, then, rather than one 
solution to the four equations, what we seek is their least-square approxima-
tion, which can be done using a method known as Newton-Gauss (Dahlquist 
and Bjorck, 1974), as outlined in Section B.4. Alternatively, Matlab's function 
Isqnonlin can be used to find the same least-square approximation. In any 
^Formulation 
singularities occur when, in the absence of a kinematic singularityâ 
characterized by the vanishing of det(J), for J defined as in eq.(5.10b)âtwo or three contours 
Ci are tangent at an intersection. When this is the case, and a pair of functions (9.62) is chosen 
to find their roots, whose contours are tangent, the numerical computation of the coordinates 
of the intersection point becomes impossible. 
^The intersection points appearing in Figs. 9.3 and 9.4 were obtained using the Mat lab 
GUI developed by Dr. Stephane Caro, a postdoctoral fellow at McGill University's Robotic 
Mechanical Systems Laboratory. The GUI is available in the CD accompanying this edition 

9.4 The Bivariate-Equation Approach 
369 
event, the problem is solved iteratively. Within the Newton-Gauss method, a 
linear overdetermined system of equations is solved at each iteration, using one 
of the methods of Section B.l. 
In this way, two of the unknown joint angles, 64 and ^5, are computed ac-
curately, the remaining four unknowns being determined uniquely, as described 
in Section 9.6. Notice, however, that spurious solutions to the IDP are likely 
to occur. These are intersections of the four contours which, although verifying 
the four equations (9.62), fail to produce a full set of solutions {Oi}i. 
The 
computation of all remaining joint variables, 61, 62, Os and 6Q, once 84 and 65 
are available, is the subject of Subsection 9.6.3. 
9.4.1 
Numerical Conditioning of the Solutions 
We recall here the concept of condition number of a square matrix (Golub and 
Van Loan, 1989), as introduced in Section 5.8. In this subsection we stress 
the relevance of the concept in connection with the accuracy of the computed 
solutions of the general IDP. 
The concept of condition number of a square matrix is of the utmost impor-
tance because it measures the roundoff-error amplification upon solving a system 
of linear equations having that matrix as coefficient. The condition number of 
a matrix, discussed in Section 5.8, can be computed in many possible ways. For 
the purpose at hand, it will prove convenient to work with the condition number 
defined in terms of the Frobenius norm, as given in eqs.(5.80a & b). 
In the context of the bivariate-equation approach, we can intuitively argue 
that the accuracy in the computation of a solution is dictated by the angle at 
which two contours giving a solution intersect. Thus, the solutions computed 
most accurately are those determined by contours intersecting at right angles. 
On the contrary, the solutions computed least accurately are those obtained by 
tangent contours. We shall formalize this observation in the discussion below. 
We distinguish between the condition number of a matrix and the condi-
tioning of a solution of a nonlinear system of equations. We define the latter as 
the condition number of the Jacobian matrix of the system, evaluated at that 
particular solution. More concretely, let 
fi{xi,X2) 
= 0 
f2{xl,X2) = 0 
be a system of two nonlinear equations in the two unknowns xi and X2. More-
over, the Jacobian matrix of this system is defined as 
F = 
(V/i)^ 
(V/2)^ 
(9.63) 
where Vfk denotes the gradient of function fk{xi, X2), defined in turn as 
V/fe 
dfk/dxi 
dfk/dx2 
(9.64) 

370 
9. Geometry of General Serial Robots 
It is to be noted that multiplying each of the two given equations by a scalar 
other than zero does not affect its solutions, each Jacobian row being, then, 
correspondingly multiplied by the same scaling factor. To ease matters, we will 
assume henceforth that each of the above equations has been properly scaled 
so as to render its gradient a unit vector in the plane of the two unknowns. In 
order to calculate the condition number of F, which determines the conditioning 
of the solutions, we calculate first F F ^ and its inverse, namely. 
"FTP â 
' V / l - V / 2 
and 
V / i 
1 
sin^7 
â¢V/2 
L 
= 
1 
-cos 7 
1 
cos 7 
-cos 7 
1 
cos 7 
1 
where 7 is the angle at which the contours intersect. The condition number KF 
of F, based on the Frobenius norm, can then be computed as 
KF = 7â. 
r 5 
âTT < 7 < TT 
(9.65) 
|sm7| 
which means that for the best possible solutions from the numerical conditioning 
viewpoint, the two contours cross each other at right angles, whereas at singular 
configurations, the contours are tangent to each other. The reader may have 
experienced that, when solving a system of two linear equations in two unknowns 
with the aid of drafting instruments'^, the solution becomes fuzzier as the two 
lines representing those equations become closer to parallel. 
9.5 
Implementation of the Solution Method 
Whatever method is chosen to solve the IDP, the solution procedure will even-
tually require numerical computations. Indeed, both the univariate-polynomial 
and the bivariate-equation approaches ultimately resort to a numerical proce-
dure to find either the roots of a polynomial equation that can be of up to 16th 
degree or, correspondingly, the solutions of a system of trigonometric equations. 
Now, formulas for the roots of polynomial equations are available only for the 
quadratic, the cubic and the quartic polynomials^; those for the cubic and quar-
tic equations are so cumbersome that in practice they are seldom applied. The 
Italian mathematician Ruffini gave a sketch of a proof in 1799 showing that 
formulas for the roots of polynomials of fifth or higher degree are not possible 
in general (Stillwell, 2002). Then, the Norwegian mathematician Abel, in 1826, 
provided a more rigorous proof of the same result. It was the genius of the 
^Graphical methods of mechanism analysis rely on this form of linear-equation solving. 
Â®The Italian mathematicians Niccolo Tartagliaâmeaning the "stutterer," his real name 
believed to have been Fontanaâ(1535) and Girolamo Cardano (1545), independently, or so 
each claimed, found the formula for the three roots of the cubic equation, now known as 
Cardan's formula. 
Ferrari's formulaâso 
named after the Italian mathematician Ludovico 
Ferrari, a disciple of Cardano'sâprovides the four roots of a quartic polynomial. 

9.6 Computation of the Remaining Joint Angles 
371 
French Evariste Galois (1811-1832) that, aided by Galois' own theory of groups 
(Livio, 2005), led to an elegant theory on the solvability of polynomial equations 
that closed an important chapter in the history of mathematics. 
Now, when numerically solving the equations involved, whether polyno-
mial or trigonometric, intermediate computations can yield coefficients with 
absolute values of disparate orders of magnitude, which is prone to numeri-
cal instabilitiesâill-conditioning. These occur naturally in the neighborhood of 
singularities, and cannot be avoided. Another source of ill-conditioning lies in 
the data themselves. When working with two different sets of equations, one 
representing point displacements, the other angular displacements, we end up 
with a mixture of equations with physical units of length and equations that 
are dimensionless. Such a mixture is a source of ill-conditioning, which can 
be avoided without too much effort: we recommend to start by rendering the 
point-displacement equations dimensionless, which can be done by dividing the 
DH parameters { a^, bi jf introduced in Section 4.2 and the position vector p of 
the EE operation point by the characteristic length L introduced in Section 5.8. 
This stage, which can be termed normalization, is done in the numerical exam-
ples included in Section 9.7. 
Furthermore, when refining the rough estimates of the contour intersections, 
as occurring in the implementation of the bivariate-equation approach, we are 
confronted with computing the least-square approximation to an overdetermined 
system of nonlinear equations. This is a well-researched problem in the realm 
of numerical analysis (Dahlquist and Bjorck, 1974). While effective methods 
exist that solve the problem without resorting to gradients, we have used in the 
solutions an in-house developed package of C routines, ODA, for a broad class 
of problems occurring in mathematical programming^. In this library, we have 
a routine, LSSNLS, that implements the Newton-Gauss algorithm described in 
Section B.4. LSSNLS requires an initial guess XQ for the unknown vector x as 
well as information on the dimensions n of x, the number of unknowns, and of 
f(x), the number of equations, m > n. Then, LSSNLS returns an optimum value 
x* that best approximates the overdetermined system of equations f (x) = 0 
in the least-square sense, and that is dependent on XQ. In the absence of ill-
conditioning, X* is the local optimum of the problem closest to the initial guess 
XQ. However, the Matlab GUI that was developed by Dr. Caroâsee footnote 6â 
to automate the refining of the visual estimates relies on Matlab's Isqnonlin 
function. The method implemented in this function is direct, in that it is based 
solely on function evaluations, thus obviating gradient computations. 
9.6 
Computation of the Remaining Joint Angles 
So far we have reduced the system of displacement equations to either one sin-
gle univariate polynomial in the tangent of half one of the joint anglesâthe 
^The ODA library is available on wifw.mcgill.ca/~rmsl/Angeles_html/courses/MECH577/. 

372 
9. Geometry of General Serial Robots 
univariate-polynomial approachâor a system of bivariate trigonometric equa-
tions in the sines and cosines of two joint anglesâthe bivariate-equation ap-
proach. In either case, we still need a procedure to compute the remaining joint 
angles, which is the subject of the balance of this section. 
9.6.1 
The Raghavan-Roth Procedure 
The most straightforward means of computing 64 and 65 in this procedure is 
eq.(9.48d), which can be interpreted as an eigenvalue problem associated with 
the 12 X 12 matrix S, and has one known eigenvalue, namely, 0, for its sole vari-
able, ^3, was computed so as to render S singular. Now, every scientific package 
offers eigenvalue calculations, whereby the eigenvectors are usually produced in 
a normalized form, i.e., with all eigenvectors computed as unit vectors. Let, for 
example, cr be the 12-dimensional eigenvector of S corresponding to the zero 
eigenvalue. In this case, \\cr\\ = 1, but X45, the solution sought, is obviously of 
magnitude greater than unity, for its 12th component, cri2, is exactly 1, accord-
ing to its definition, eq.(9.48e). In order to produce X45 from cr, then, all we 
need is a suitable scaling of this vector that will yield (x45)i2 = 1. We thus 
have that cri2 ^ 0âotherwise, eqs.(9.48d) would be inconsistentâand hence, 
1 
X45 = 
â c r 
The outcome will be a set of unique values of 64 and 65 for each of the 16 possible 
values of ^3. 
Next, Q\ and ^2 are computed from eq.(9.35), which is rewritten below in a 
more suitable form: 
Rxi2 = X345 
(9.66a) 
with the 14-dimensional vector X345 defined as 
X345 = PX45 
(9.66b) 
Since R is a 14 x 8 matrix, eq.(9.66a) comprises 14 linear equations in the eight 
unknown components of X12. Although any eight of the 14 equations (9.66a) suf-
fice, in principle, to determine X12, we should not forget that these computations 
will most likely be performed with finite precision, and hence, roundoff-error am-
plification is bound to occur. In order to keep roundoff errors as low as possible, 
we recommend to use all the foregoing 14 equations and calculate X12 as the 
least-square approximation of the overdetermined system (9.66a). This approxi-
mation will be, in fact, the solution of the given system because all 14 equations 
are compatible. The least-square solution of this system yields, symbolically, 
xi2 - (R^R)-^R^X345 
(9.66c) 
In practice, the foregoing least-square approximation is computed using an or-
thogonalization procedure (Golub and Van Loan, 1989), the explicit or the 
numerical inversion of the product H^H being advised against because of its 

9.6 Computation of the Remaining Joint Angles 
373 
frequent ill-conditioning. Appendix B outlines the robust numerical computa-
tion of the least-square approximation of an overdetermined system of equations 
using orthogonalization procedures. The only remaining unknown is 6e, which 
is computed below: This unknown is readily computed from eq.(4.9a). Indeed, 
the first of the three vector equations represented by this matrix equation yields 
Q1Q2Q3Q4Q5P6 = q 
(9.67a) 
where q denotes the first column of Q, while, according to eq.(9.5), pe denotes 
the first column of matrix Qe, i.e.. 
(9.67b) 
r cos 6Q 
sin^e 
L 0 
, 
q = 
"^11" 
q2i 
_q3i_ 
Pe = 
Thus, eq.(9.67a) can be readily solved for pe, i.e., 
P6 = Ql^QlQl^Qi^Qfq 
(9.68) 
thereby obtaining a unique value for 6e for every set of values of { ^fc }i- This 
completes the solution of the IDP under study. 
9.6.2 
The Li-Woernle-Hiller Procedure 
Once 61 is available, the remaining angles are computed from linear equations: 
Equations (9.59) are first rearranged in nonhomogeneous form, namely. 
Nz' = n 
(9.69) 
with the 8 x 7 matrix N and the 7- and 8-dimensional vectors z' and n defined 
as 
N = 
0 
0 
0 
0 
Cii 
C22 
C33 
C i i 
C22 
C33 
C44 
2Bi 
2B2 
2B3 
0 
0 
0 
0 
Fii 
-F22 
^33 
2 B i 
2B2 
2B3 
2B4 
An 
All 
Az3 
Fn 
F22 
F33 
F44 
2Ei 
2E2 
2-B3 
^ 1 
A22 
A33 
A44 
0 
0 
0 
2Ei 
2E2 
2E3 
2E4 
Dii 
D22 
D33 
C44 
2J54 
JF44 
A44 
2E4 
0 
^44 
and 
rirs 
rirs 
^ 3 
T2T3 
r2 
n = 
D22 
-D33 
D44 
0 
0 
0 
0 

374 
9. Geometry of General Serial Robots 
Now, eq.(9.69) represents an overdetermined linear algebraic system of eight 
equations, but only seven unknowns. Again, we recommend here a least-square 
approach to cope with ill-conditioning. In this way, the solution of eq. (9.69) can 
be expressed symbolically in the form 
With z' known, both r2 and T3, and hence, 62 and ^3, are known uniquely. 
Further, with ^1, 62, and 63 known, the right-hand side of eq.(9.55a), ^, is 
known. Since the coefficient matrix A of that equation is independent of the 
joint angles, A is known, and that equation can be solved for vector x uniquely. 
Once X is known, the two angles 64 and 65 are uniquely determined, with 6Q 
the sole remaining unknown; this can be readily determined, also uniquely, as 
discussed in connection with the Raghavan-Roth method. 
9.6-3 
The Bivariate-Equation Approach 
After all common intersections of the four foregoing contours have been deter-
mined, we have already two of the unknowns, 64 and ^5, the remaining four 
unknowns being calculated uniquely as described presently. First, we calculate 
one of the remaining joint variables, ^3, using eq.(9.40b). For this purpose, 
we evaluate matrix Di for all intersection points. Then, we rewrite the same 
equation in the form 
Hx3 = r 
(9.70a) 
the 4 x 2 matrix H being obtained from Di by excluding its last column, which 
is denoted by â r. Moreover, matrix H and the 4-dimensional vector r are both 
bilinear in X4 and X5 and hence, known. Again, we use all four equations (9.70a) 
at our disposal to compute the 2-dimensional vector X3 using a least-square 
approach. If H is of full rankâits two columns are linearly independentâthen 
the solution can be expressed symbolically in the form 
X3 = ( H ^ H ) - i H ^ r 
(9.70b) 
However, if H is rank-deficient, i.e., if its two columns are linearly dependent, 
then the inverse appearing in eq.(9.70b) cannot be computed, the solution 
(64,^5) being spurious. In fact, even if H is of full rank, the computed X3 
may fail to be a unit vector, as required by its definition. The outcome here is 
that 
cos^ 63 + sin^ 
03^1 
which means that the value of X3 computed from eq.(9.70a) will yield a complex 
value of 63. In this case, the intersection (^4,^5) at stake is spurious as well. 
When H is of full rank and the computed X3 is of unit Euclidean norm, 
eq.(9.70b) determines 63 uniquely for the given values of 64 and ^5. 
With 63, 64 and 6^ known, we can now calculate 61 and 62 simultaneously 
from eq.(9.27), which we reproduce below in a more suitable form 
Rxi2 = X345 
(9.71) 

9.7 Examples 
375 
Table 9.2: Rough estimates of the coordinates of the intersection points of the 
Fanuc Arc Mate S series manipulator of 1990 
Sol'n No. 
04 (rad) 
<95(rad) 
1 
2.38 
-2.97 
2 
1.57 
-1.57 
3 
0.34 
-1.79 
4 
-1.57 
-1.57 
5 
-3.06 
1.75 
6 
-2.39 
2.97 
7 
-1.57 
1.57 
8 
1.57 
1.57 
where R is a 14 x 8 matrix depending only on the problem data, while X345, 
defined as 
X345 = PX45 
(9.72) 
is a 14-dimensional vector trilinear in X3, X4, and X5, and is hence, known. 
Moreover, matrices P and R as well as vectors X12 and X45 were defined in 
eqs.(9.27) and (9.28a & b). Again, we have an overdetermined system, of 14 
equations, in eight unknowns this time, which can best be solved for X12 using a 
least-square approach with an orthogonalization procedure. The unique solution 
of the overdetermined system at hand can thus be expressed as 
X12 = (R^R)-^R^ X345 
(9.73) 
Note that the solution thus obtained determines xi and X2 uniquely, the only 
remaining unknown being 6Q, which is computed as in eq.(9.68). 
9.7 
Examples 
We solve the examples below using the bivariate-equation approach with the 
purpose of both helping the reader visualize the real solutions and avoiding the 
formulation singularities brought about by the tan-half identities'^. 
Example 9.7.1 Find all inverse-displacement solutions of the Fanuc Arc Mate 
S series manipulator of 1990 for the end-effector pose given below: 
Q = 
[0 
0 
[1 
1 
0 
0 
0" 
1 
0 
p = 
130 
850 
1540 
in which p 
Table 5.2. 
is given in mm, the DH parameters of the robot being given in 
Solution: For starters, we divide the DH parameters {a^, 6i}f and vector p 
hy L = 351.23 mm, the characteristic length of this manipulator found in Sec-
tion 5.8. In following the bivariate-equation approach, we plot the four contours 
^^The accompanying CD includes a GUI allowing the user to automate the computation of 
accurate values of the joint variables by clicking at the visual estimates of the intersections of 
all four contours. 

376 
9. Geometry of General Serial Robots 
Table 9.3: Refined estimates of the coordinates of the eight intersection points 
of Fig. 9.3 
Inters'n No. 
1 
2 
3 
4 
5 
6 
7 
8 
04 (rad) 
2.381637539 
1.570796327 
0.344592933 
-1.570796327 
-3.060229795 
-2.397512950 
-1.570796327 
1.570796327 
05 (rad) 
-2.973100582 
-1.570796327 
-1.797513978 
-1.570796327 
1.755742649 
2.972311705 
1.570796327 
1.570796327 
Table 9.4: Legitimate solutions of the inverse displacement of the Fanuc Arc 
Mate S series manipulator of 1990 at the given pose 
Sol'n No. 
OA 
OB 
1 
136.457Â° 
-170.346Â° 
3 
19.743Â° 
-102.989Â° 
5 
-175.338Â° 
100.596Â° 
6 
-137.367 
170.300 
in the ^4-^5 plane guaranteeing that matrix Di of eq.(9.40b) is rank-deficient. 
The four contours are superimposed in Fig. 9.3, where, apparently, we can de-
tect eight intersections. The coordinates (^4, ^5) of each intersection point are 
first estimated by inspection, as listed in Table 9.2. Further, we submit each 
of these eight values as an initial guess to the Newton-Gauss procedureâor 
Matlab's function Isqnonlinâto find the least-square approximation of the 
overdetermined system of four equations in two unknowns of eq.(9.62). The 
eight solutions thus found are then used to compute X3 of eq.(9.70a). As it 
turned out, solutions 2, 4, 7 and 8 led to a rank-deficient H, and were, thus, 
discarded as spurious. For the record, we include all eight least-square solutions 
found in radians, in Table 9.3. 
The legitimate solutions are displayed in Table 9.4, in degrees for easier 
visualization. The robot thus admits four real inverse displacement solutions at 
the given pose. The values of the remaining angles are recorded in Table 9.5. 
Example 9.7.2 Here we include an example of a manipulator admitting 16 real 
inverse displacement solutions. This manipulator was proposed by Li (1990), its 
Denavit-Hartenberg parameters appearing in Table 9.6. 

9.7 Examples 
377 
^3, raxl 
0 F 
^2, rad 
Figure 9.3: Contours Ci, C2j C3, and C4 for the Fanuc Arc Mate S series manip-
ulator of 1990 
Table 9.5: Remaining angles corresponding to the solutions of Table 9.4 
Sol'ii No. 
1 
3 
5 
6 
Oi 
83.366Â° 
70.781Â° 
85.417Â° 
83.447Â° 
O2 
90.974Â° 
15.151Â° 
16.156Â° 
87.898Â° 
O3 
-8.004Â° 
151.077Â° 
153.212Â° 
9.268Â° 
Oe 
43.134Â° 
175.387Â° 
-0.859Â° 
-42.221Â° 
Table 9.6: DH parameters of Li's manipulator 
i 
1 
2 
3 
4 
5 
6 
ai (m) 
0.12 
1.76 
0.07 
0.88 
0.39 
0.93 
bi (m) 
0 
0.89 
0.25 
-0.43 
0.50 
-1.34 
m 
-57Â° 
35Â° 
95Â° 
79Â° 
-75Â° 
-90Â° 
Oi 
Oi 
02 
03 
6A 
O5 
06 

378 
9. Geometry of General Serial Robots 
Solution: The foregoing procedure was applied to this manipulator for an end-
effector pose given as 
Q 
-0.357279 
-0.850000 
0.387106 
0.915644 
-0.237000 
0.324694 
-0.184246 
0.470458 
0.862973 
0.798811 
-0.000331 
1.200658 
where p is given in meters. Again, we start by dividing {ai,bi}i and vector p 
by the characteristic length L, that was found to be L = 890.1 mm. 
6>5 [rad] 
Figure 9.4: Contours Ci, C2, C3, and C4 for the Li manipulator 
The four contours obtained with the bivariate-equation approach are super-
imposed in Fig. 9.4, where, apparently, we can detect 18 intersections. This 
means that at least two are spurious, for the number of inverse-displacement 
solutions can be, at most, 16. In this figure, intersections 12 and 13 appear 
as one single point. A zoom-in revealed two neighboring solutions in a region 
around the said single point. The coordinates {64, 65) of each intersection point 
are first estimated by inspection, as listed in Table 9.7. Further, we submit 
each of these 18 values as the initial guess for the Newton-Gauss procedureâ 
or Matlab's function Isqnonlinâto find the least-square approximation of the 
overdetermined system of four equations in two unknowns of eqs.(9.62). We 
used ODA to compute the least-square approximation sought, and verified the 
result with Isqnonlin. For the record, we include all 18 solutions found, with 
14 digits, in radians, in Table 9.8. The 18 solutions thus found were then used 
to compute X3 of eq.(9.70a). As it turned out, solutions 6 and 14 led to values 

9.7 Examples 
379 
Table 9.7: Rough estimates of the coordinates of the intersection points of Li's 
manipulator 
Sol'n No. 
04 (rad) 
05 (rad) 
1 
-0.56 
-3.01 
2 
-1.88 
-2.71 
3 
-2.09 
-2.54 
4 
-2.59 
-2.25 
5 
-3.07 
0.21 
6 
-1.62 
1.75 
7 
-0.72 
2.86 
8 
2.09 
3.08 1 ^ 1 
2.75 
1 2.5 1 
Sol'n No. 
64 (rad) 
O5 (rad) 
10 
2.54 
2.37 
11 
2.36 
-0.89 
12 
0.08 
-2.23 
13 
0.11 
-2.25 
14 
-1.22 
-2.51 
15 
-2.16 
-0.50 
16 
-0.36 
-0.70 
17 1 
1.17 
-0.18 1 
18 
0.44 
-0.12 
of Eucledian norm of vector X3 greater than unity, and were, thus, discarded 
as spurious. The robot thus admits 16 real inverse displacement solutions at 
the given pose. The legitimate solutions are displayed in Table 9.9, the val-
ues of the remaining angles being displayed in Table 9.10, in degrees for easier 
visualization. 
Example 9.7.3 In this example, we discuss the IDP ofDIESTRO, 
the isotropic 
six-axis orthogonal manipulator shown in Fig. 5.15 (Williams et al., 1993). For 
a meaning of kinematic isotropy, we refer the reader to Section 5.8. This manip-
ulator has the DH parameters given in Table 5.1. 
The pose of the end-effector 
leading to an isotropic posture^ i.e., one whose Jacobian matrix is isotropic, is 
defined by the orthogonal matrix Q and the position vector p displayed below: 
Q = 
with p given in mm. 
Compute all real inverse displacement solutions at the 
given pose. 
Solution: The characteristic length of DIESTRO was found in Section 5.8 to be 
equal to the common value ai = bi = 50 mm, for i = 1,..., 6. This manipulator, 
at the given pose of the EE, exhibits a self-motion, proper of redundant ma-
nipulators, but not expected in a six-revolute robot. A self-motion occurs when 
a manipulator has the ability to move all its joints while keeping its EE fixed 
at one given pose. This feature makes the procedure of Section 9.4 difficult to 
apply^^. We resort, hence, to an alternative approach: We go back to eq.(9.27) 
and partition it into two sets of equations: 
0 
0 
1 
- 1 
0 
0 
0 
- 1 
0 
p = 
0 
- 5 0 
50 
PÂ«X45 = RâXi2 
P/X45 = RiXi2 
(9.74a) 
(9.74b) 
^^The self-motion is not readily detected by contour-intersection using this procedure. 

380 
9. Geometry of General Serial Robots 
Table 9.8: Refined estimates, to 14 digits, of the coordinates of the 18 intersec-
tion points of Fig. 9.4 
Inters'n No. 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
17 
18 
04 (rad) 
0.5656865073441 
1.8817916819320 
-2.0982054358488 
2.5943879129109 
-3.0760703821644 
-1.6227073591253 
-0.7268312801527 
2.0991093946626 
2.7591234998160 
2.5458806726888 
2.3681644908739 
0.0834264321499 
0.1144843294210 
-1.2262527241259 
-2.1620940322382 
-0.3665297041826 
1.1793192137176 
0.4440232934648 
^5 (rad) 
-3.0127341939867 
-2.7181441928227 
-2.5458222487325 
-2.2563308501840 
0.2173802902678 
1.7564609766664 
2.8637219341062 
3.0822214487834 
2.5875200635823 
2.3797734576690 
-0.8961886662259 
-2.2306893314165 
-2.2536422392721 
-2.5145351139614 
-0.5098897084087 
-0.7057880105554 
-0.1889758121252 
-0.1282084013846 
where P^^ and P/ are 6 x 9 and 8 x 9 submatrices of P. Likewise, Ku and R/ are 
the corresponding 6x8 
and 8x8 
submatrices of R. In the above partitioning, 
the equations must be grouped such that R/ be nonsingular. Using eqs.(9.74a 
& b), six scalar equations free of 6i and O2 can be derived, namely. 
rx45 = 06, 
r = p ^ - R^(R-^P/) 
(9.75) 
where Oe is the 6-dimensional zero vector. Since the entries of the 6 x 9 matrix 
r are all linear in X3, the entry in the ith row and jth column of the foregoing 
matrix, 7^^, can be expressed in the form 
7u â %'^3 + bijSs + Cij ; 
1,...,6; 
j - l , . . . , 9 
(9.76) 
In the above expression, coefficients a^j, bij, and Cij are independent of the 
joint variables. Using eq.(9.76), we can expand eq.(9.75) and then rearrange 
the terms in the ith equation, thus obtaining 
AiCs + BiSs + Ci = 0; 
2 = 1,... ,6 
(9.77a) 
where, for i = 1,..., 6, we have 
Ai = aiiS4Ss + ai2S4C5 + (2^30455 -h auc^c^ + ai^s^ + ai^c^ 
â¢^-ai^s^ + aiscs + a^g 
(9.77b) 

9.7 Examples 
381 
Table 9.9: Legitimate solutions of the inverse displacement of Li's manipulator 
at the given pose 
Sol'n No. 
1 
2 
3 
4 
5 
6 
7 
8 
04 
-107.81Â° 
120.25Â° 
4.77Â° 
158.09Â° 
-4.16Â° 
-120.21Â° 
-32.41Â° 
145.86Â° 
0, 
-155.73Â° 
176.59Â° 
-127.80Â° 
148.26Â° 
164.07Â° 
-145.86Â° 
-172.61Â° 
136.35Â° 
Sol'n No. 
9 
10 
11 
12 
13 
14 
15 
16 
04 
-21.00Â° 
6.55Â° 
135.68Â° 
25.44Â° 
-176.07Â° 
67.57Â° 
-123.87Â° 
-148.64Â° 
O5 
-40.43Â° 
-129.12Â° 
135.68Â° 
-7.34Â° 
11.57Â° 
-10.82Â° 
-29.21Â° 
-148.64Â° 
Bi = hiiS4S5 + bi2S4C5 + bi3C4S5 + 6i4C4C5 + 61564 + bieC4 
-\-bi7S5 + bisc^ H- bi9 
d 
= CnS4S5 + Ci2S4C5 + Ci3C4S5 + Ci4C4C^ + â¬1^84 + CiQC4 
+Ci755 + CisCs H- Ci9 
Now the six scalar equations (9.77a) are cast in vector form as 
(9.77c) 
(9.77d) 
(9.78) 
In the above equation, D is a 6 x 3 matrix whose entries are bilinear in X4 and 
X5, while y3 was defined in eq.(9.41). Now, to eliminate ^3, we realize that, from 
its definition, y3 ^ 0, and hence, D must he rank-deficient 
This means that 
every one of its 20 3 x 3 determinants, obtained by picking up three of its six 
rows at a time, should vanishâthe number of combinations of six objects taking 
three at a time is 20. We need, in principle, only two of these determinants to 
obtain two independent equations in O4 and ^5. Actually, to be on the safe side, 
we should impose the vanishing of all 20 possible determinants, which would 
yield, correspondingly, 20 contours in the 64-6^ plane; the intersections of all 
contours would then yield the real (^4,65) pairs of values which render D rank-
deficient. Nevertheless, the visualization of the intersections of all 20 contours 
would be physically impossible, and so, we have to compromise with a smaller 
number. As we have experienced, only two of the above determinants are prone 
to yield spurious solutions, for which reason we pick up a reduced number of 
determinants and derive three equations in O4 and ^5. 
We produce the three desired equations by first partitioning the 6 x 3 matrix 
D of eq.(9.78) into two 3 x 3 blocks, D^ being the upper, D/ the lower block, 
which thus yields 
Ai = det(D^), 
A2 = det(D/) 

382 
9. Geometry of General Serial Robots 
Table 9.10: Remaining angles corresponding to the solutions of Table 9.9 
Sol'n 
No. 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
Oi 
174.083Â° 
-159.859Â° 
164.800Â° 
-148.749Â° 
-16.480Â° 
-46.014Â° 
-22.260Â° 
-53.176Â° 
-173.928Â° 
-41.684Â° 
-137.195Â° 
-139.059Â° 
-22.696Â° 
-83.094Â° 
1.227Â° 
177.538Â° 
O2 
-163.302Â° 
-159.324Â° 
-154.290Â° 
-179.740Â° 
-10.747Â° 
-19.256Â° 
-22.431Â° 
26.165Â° 
150.697Â° 
-29.130Â° 
-156.920Â° 
128.112Â° 
29.214Â° 
57.022Â° 
-7.353Â° 
-148.178Â° 
^3 
-164.791Â° 
-111.347Â° 
-85.341Â° 
-78.505Â° 
-58.894Â° 
-46.988Â° 
-32.024Â° 
9.103Â° 
47.811Â° 
52.360Â° 
68.306Â° 
96.052Â° 
98.631Â° 
130.976Â° 
142.697Â° 
159.429Â° 
OeJ 
141.281Â° 
21.654Â° 
-101.359Â° 
55.719Â° 
5.677Â° 
-114.768Â° 
-17.155Â° 
127.978Â° 
-92.284Â° 
25.091Â° 
147.446Â° 
-119.837Â° 
170.303Â° 
-110.981Â° 
149.208Â° 
110.984Â° 
Now, since the determinant is not additive, i.e., det(Di4 + D/) ^ det(Du) + 
det(D/), we choose A3 as 
A3 =det(D^ + D/) 
which is apparently independent of Ai and A2, thereby obtaining three deter-
minants^^, which, when equated to zero, yield three independent equations in 
64 and 65. Each of these equations describes a contour d, for i = 1,2,3, in the 
64-65 plane, i.e., 
Ci'. 
Fi(64,65) = 0, 
2 = 1,2,3 
(9.79) 
Note that, by plotting the three contours in the â7T<6i<7T region, for 2 = 4,5, 
we ensure that no real solutions will be missed. 
The three contours thus obtained are plotted in Fig. 9.5(a). As this figure 
shows, the three contours intersect at two isolated points, those labeled 1 and 
2. The contours also intersect along a curve labeled SS in the same figure, 
which thus represents a manifold of singular solutions; this means that DIE-
STRO admits a set of self-motions. These motions can be explained by noticing 
that when the end-effector is located at the given pose and the manipulator is 
postured at joint-variable values determined by any point on the SS curve, the 
six links form a Bricard mechanism (Bricard, 1927). The degree of freedom of 
a Bricard mechanism cannot be determined from the well-known Chebyshev-
Griibler-Kutzbach formula (Angeles, 2005), which yields a dof = 0. Here, the 
^^This idea was proposed by Dr. Kourosh Etemadi Zanganeh, CANMET (Nepean, Ontario, 
Canada). 

9.7 Examples 
383 
O5 (rad) 
O4 (rad) 
Figure 9.5: Contours Ci, C2, and C3 for the DIESTRO manipulator at given 
pose. 
Table 9.11: Inverse displacement solutions of the DIESTRO manipulator 
Solution No. 
1 
2 
Oi 
0Â° 
180Â° 
02 
90Â° 
-90Â° 
O3 
-90Â° 
90Â° 
O4 
90Â° 
-90Â° 
O5 
-90Â° 
90Â° 
Oe 
180Â° 
0Â° 
single-dof motion of the mechanism occurs because the six revolute axes are laid 
out in such a way that if they are grouped in two alternating triads, then these 
triads intersect. 
Furthermore, contours Ci and C2 intersect at right angles at solution 1, which 
corresponds to the isotropic posture of the robot. The numerical values of the 
joint variables for the isolated solutions are given in Table 9.11. 
This example shows interesting features of the manipulator IDP which are 
not present in manipulators with simpler architectures, such as those with in-
tersecting or parallel consecutive axes. 
Moreover, the point of coordinates O4 = 9^ = 7r/2 of Fig. 9.5 appears to be an 
intersection of the three contours, and hence, a solution of the IDP at hand. A 
close-up of this point, as displayed in Fig. 9.6(a), shows that this point is indeed 
an intersection of all three contours, but this point is, in fact, a double point, 

384 
9. Geometry of General Serial Robots 
05 
(deg) 
//"" 
\ \ . ^ "i 
ii \ 
â¢ â¢ ' / 
6i (deg) 
(a) 
6I4 (deg) 
(b) 
Figure 9.6: A close-up of: (a) the apparent contour intersection at the point 
of coordinates 64 = 0^ = 7r/2 (90Â°); and (b) the apparent contour intersection 
southwest of solution 2. 
i.e., a point at which each contour crosses itself; this gives the point a special 
character: When verifying whether this point is a solution of the problem under 
study, we tried to solve for X3 from eq.(9.70a), but then found that matrix H of 
that equation vanishes, and hence, does not allow for the calculation of X3. An 
alternative approach to testing the foregoing values of O4 and 6^ is described in 
Exercise 9.5. In following this approach, it was found that these values do not 
yield a solution, and hence, the intersection point is discarded. 
One more point that appears as an intersection of the three contours is that 
southwest of solution 2. A close-up of this point, as shown in Fig. 9.6(b), reveals 
that the three contours do not intersect in that region. In summary, then, the 
manipulator at hand admits two isolated inverse-displacement solutions at the 
given pose and an infinity of solutions along the curve SS. 
9.8 
Exercises 
9.1 Show that the left-hand side of eq.(9.23f) represents a pure reflection of 
vector h about a plane of unit normal f/||f ||, if multiplied by ||f|p. Also 
show that the right-hand side of the same equation represents a pure 
reflection of vector i about a plane of unit normal g/||g||, if multiplied by 
iig|i'-
9.2 Show that ipi and ^2, as defined in eqs. (9.43c & d) both vanish. 
9.3 In this exercise, we will try to gain insight into the consequence of the 

9.8 Exercises 
385 
double point at 64 = 0^ = 7r/2 of Fig. 9.5 of Example 9.7.3. To this end, 
show that, for this combination of values, matrix H of eq.(9.70a) becomes 
zero, and hence, X3 cannot be computed from this equation. As a result, 
none of the remaining angles can be computed recursively. 
9.4 As an alternative approach to the 14 fundamental equations derived in 
Section 9.2, we recall eqs.(9.16a & b), if written in a more convenient 
form, so as to have a minimum number of matrix multiplications, namely, 
Q3Q4Q5 = Ql^Qf QQ^ 
Q j Q f (ai - p) + Q^a2 + as + Q3a4 
+ Q3Q4a5 + Q3Q4Q5a6 = 0 
Now equate the four linear invariants of the two sides of the first of the 
two foregoing equations. The result is a set of four scalar equations. When 
the translational equations are expanded, and appended to the first four 
equations, a system of seven trigonometric equations in the six unknown 
angles is derived. Obtain that system of seven equations and comment on 
their suitability to solve the IDP. 
9.5 In Section 9.6 we realized that, upon applying the Raghavan-Roth elimina-
tion method, and once ^3 is computed, 64 and 6^ can be computed at once 
by finding the eigenvector of S associated with its zero eigenvalue. While 
this calculation can be performed with the eigenvalue-computation mod-
ule of any scientific package, computing the eigenvalues of a 12 x 12 matrix 
like S requires an iterative procedure, which can be time-consuming, es-
pecially if this computation is only a part of a more complex procedure. 
In order to find X45, and hence, 64 and ^5, from eq.(9.48d), we need not 
resort to a full eigenvalue problem. Instead, a vector v can be computed 
directlyy as opposed to iteratively, that spans the nullspace of S, for a 
given computed value of 63, if a change of variables is introduced that will 
yield S in upper-triangular form. In fact, since S is a fortiori singular, its 
last row is bound to have zero entries in that form. Devise an algorithm 
that will render S in upper-triangular form and hence, compute vector 
X45 under the conditions that this vector (a) lie in the nullspace of S and 
(b) its 12th entry be unity. Hint: Apply an orthogonalization procedure, 
as described in Appendix B. 
9.6 With reference to Example 9.7.3, keep the EE of DIESTRO fixed to the 
manipulator base at the given pose, thereby forming a 6R closed kinematic 
chain. Find the singularity locus SS of Fig. 9.5 by means of a kinematic 
input-output analysis of the closed chain, which turns out to be a Bricard 
mechanism. 
9.7 Using the rough estimates displayed in Table 9.2, Example 9.7.1, compute 
refined estimates of the coordinates of intersection point 4 upon solving the 

386 
9. Geometry of General Serial Robots 
four equations (9.62) pairwise by means of the Newton-Raphson method. 
Compute the condition number of each solution based on the Probenius 
norm of the 2 x 2 Jacobian F of eq.(9.63). Comment on your result. 
9.8 Write a procedure to compute matrix S of the Raghavan-Roth method. 
Then, evaluate this matrix at solutions 7 and 8 of Example 9.7.1. 
9.9 Derive expressions for vectors f, g, h and i of eqs.(9.33a-d). 
9.10 Derive an expression for r4, and hence, one for r4X45 of eq.(9.40a). 

Chapter 10 
Kinematics of Alternative 
Robotic Mechanical 
Systems 
10.1 
Introduction 
The study of robotic mechanical systems has focused, so far, on serial manip-
ulators. These are the most common systems of their kind, but nowadays by 
no means the majority. In recent years, other kinds of robotic mechanical sys-
tems have been developed, as outlined in Chapter 1. Under alternative robotic 
mechanical systems we understand here: i) parallel robots; (ii) multifingered 
hands; (iii) walking machines; and {iv) rolling robots. A class that is increas-
ingly receiving attention, humanoids, portrays an architecture inspired from the 
human musculo-skeletal system. This class deserves a study on its own because 
of the host of control problems that it poses to the roboticist; its kinematics, 
however, can be studied with the tools developed in this chapter for the first 
three kinds of systems listed above. For this reason, a section on humanoids is 
not included here. 
Moreover, under the general heading of kinematics, we study in this chapter 
the geometry and velocity relations between the sets of joint and Cartesian 
variables. For the sake of brevity, however, we leave aside the statics of these 
systems. The reader should be able to derive these relations from the duality 
between kinematics and statics, as outlined in Chs. 3 and 5. Some exercises in 
this regard are included in this chapter. 

388 
10. Kinematics of Alternative Robotic Mechanical Systems 
10.2 
Kinematics of Parallel Manipulators 
Unlike serial manipulators, their parallel counterparts are composed of kine-
matic chains with closed subchains. A fairly general parallel manipulator is 
shown in Fig. 10.1, in which one can distinguish two platforms, one fixed to the 
ground, B, and one capable of moving arbitrarily within its workspace, M. The 
moving platform is connected to the fixed platform through six legs, each being 
regarded as a six-axis serial manipulator whose base is 13 and whose end-effector 
is M. The whole leg is composed of six links coupled through six revolutes. 
Figure 10.1: A general six-dof parallel manipulator 
The robotic architecture shown in Fig. 10.1 is, in fact, too general, and of 
little use as such. A simpler and more practical parallel architecture, which is 
used as a flight simulator, is sketched in Fig. 10.2a. In this figure, the fixed 
platform S is a regular hexagon, while the moving platform >1 is an equilateral 
triangle, as depicted in Fig. 10.2b. Moreover, B is connected to M by means of 
six serial chains, each comprising five revolutes and one prismatic pair. Three 
of the revolutes bear concurrent axes, and hence, constitute a spherical joint, 
similar to the wrists studied in Section 4.4, while two more have axes intersecting 
at right angles, thus constituting a universal joint 
Of the six foregoing joints, 
only one, the prismatic pair, is actuated. 
It is to be noted that although each leg of the manipulator of Fig. 10.2a has 
a spherical joint at only one end and a universal joint at the other end, we rep-
resent each leg in that figure with a spherical joint at each end. Kinematically, 

10.2 Kinematics of Parallel Manipulators 
389 
Figure 10.2: A six-dof flight simulator: (a) general layout; (b) geometry of its 
two platforms 
the leg depicted in Fig. 10.2a is equivalent to the actual one, the only difference 
being that the former appears to have a redundant joint. We use the model of 
Fig. 10.2a only to make the drawing simpler. A more accurate display of the 
leg architecture of this manipulator appears in Fig. 10.3. 
Because the kinematics and statics of parallel manipulators at large are be-
yond the scope of this book, we will limit the discussion to parallel manipulators 
of the simplest type. 
With regard to the manipulators under study, we can also distinguish be-
tween the inverse and the direct kinematics problems in exactly the same way 
as these problems were defined for serial manipulators. The inverse kinematics 
of the general manipulator of Fig. 10.1 is identical to that of the general serial 
manipulator studied in Section 9.2. In fact, each leg can be studied separately 
for this purpose, the problem thus becoming the same as in that section. For 
the particular architecture of the manipulator of Fig. 10.2a, in which the actu-
ated joint variables are displacements measured along the leg axes, the inverse 
kinematics simplifies substantially and allows for a simple closed-form solution. 
However, the direct kinematics of the same manipulator is as challenging as 
that of the general serial manipulator of Section 9.2. With regard to the direct 
kinematics of manipulators of the type depicted in Fig. 10.2a, Charentus and 
Renaud (1989) and Nanua et al. (1990) showed independently that like the in-
verse kinematics of general six-axis serial manipulators, the direct kinematics 
of this manipulator reduces to a 16th-degree polynomial. Note, however, that 
the direct kinematics of a manipulator similar to that of Fig. 10.2a, but with 
arbitrary locations of the attachment points of each leg to the moving and fixed 
platforms, termed the general platform manipulator, has been the subject of 

390 
10. Kinematics of Alternative Robotic Mechanical Systems 
intensive research (Merlet, 2000). A breakthrough in the solution of the di-
rect kinematics of platform manipulators of the general type was reported by 
Raghavan (1993), who resorted to polynomial continuation, a technique already 
mentioned in Section 9.2, for computing up to 40 poses of M for given leg 
lengths of a parallel manipulator with legs of the type depicted in Fig. 10.3, 
but with attachment points at both M and B with an arbitrary layout. What 
Raghavan did not derive is the characteristic 40th-degree polynomial of the gen-
eral platform manipulator. Independently, Wampler (1996) and Husty (1996) 
devised procedures to derive this polynomial, although Wampler did not pur-
sue the univariate polynomial approach and preferred to cast the problem in 
a form suitable for its solution by means of polynomial continuation. Husty 
did derive the 40th-degree polynomial for several examples. In the process, he 
showed that this polynomial is the underlying characteristic polynomial for all 
manipulators of the platform type, which simplifies to a lower-degree polyno-
mial for simpler architectures. As a matter of fact, Lee and Roth (1993) solved 
the direct kinematics of platform manipulators for which the attachment points 
at the base and the moving platforms are located at the vertices of planar, 
similar hexagons. These researchers showed that the problem here reduces to 
a cascade of quadratic and linear equations. In the particular case in which 
both polygons are regular, however, the manipulator degenerates into a mov-
able structure, upon fixing the leg lengths, and hence, the solution set becomes a 
continuum. Lazard and Merlet (1994), in turn, showed that the platform manip-
ulator originally proposed by Stewart (1965), and known as the Stewart-Gough 
platform, has a 12th-degree characteristic polynomial. Interestingly, these me-
chanical systems were first introduced by Gough (1956-1957) for testing tires; 
Stewart (1965) suggested their use as flight simulators, an application that is 
now well established. 
Husty, however, did not show that his 40th-degree polynomial is minimal in 
that manipulator architectures are possible that exhibit up to 40 actual solu-
tions. Dietmaier (1998) did this, by devising an algorithm that would iteratively 
increase the number of real solutions of a given architecture. With this paper, 
Dietmaier proved conclusively that Husty's 40th-degree polynomial is, in fact, 
minimal. This was rather surprising, for virtually everybody working in the 
field expected a minimal polynomial of a degree of the form 2'^, with n being a 
positive integer. Notice that, in the cases of the most general serial six-revolute 
manipulator and of the flight simulator, the minimal polynomial is of a degree 
of this form, with n = 4. 
Below we analyze the inverse kinematics of one leg of the manipulator of 
Fig. 10.2a, as depicted in Fig. 10.3. The Denavit-Hartenberg parameters of the 
leg shown in this figure are given in Table 10.1. It is apparent that the leg 
under study is a decoupled manipulator. Its inverse kinematics can be derived 
by properly modifying the scheme introduced in Section 4.4, for we now have 
a prismatic joint, which is, in fact, the only active joint of this manipulator. 
Moreover, by virtue of the underlying design, the active joint variable, 63, can 
take on only positive values. 

10.2 Kinematics of Parallel Manipulators 
391 
-^if^Af^e 
Figure 10.3: A layout of a leg of the manipulator of Fig. 10.2 
In view of the DH parameters of this manipulator, eq.(4.16) reduces to 
Q i Q 2 ( a 3 + a 4 ) = c 
(10.1) 
where c denotes the position vector of the center C of the spherical wrist and, 
since frames T3 and T4 of the DH notation are related by a pure translation, 
Q3 = 1. Upon equating the squares of the Euclidean norms of both sides of the 
foregoing equation, we obtain 
|a3-l-a4|p = ||c|p 
(10.2) 
where, by virtue of the DH parameters of Table 10.1, 
||a3 + a4||^ = (&3 + &4)^ 
Now, since both 63 and 64 are positive by construction, eq.(10.2) readily leads 
to the desired inverse kinematics solution, namely. 
^4 > 0 
(10.3) 
a result that could have been derived by inspection of Fig. 10.3. 
Note that the remaining five joint variables of the leg under study are not 
needed for purposes of inverse kinematics, and hence, their calculation could be 
skipped. However, in studying the diff'erential kinematics of these manipulators, 

392 
10. Kinematics of Alternative Robotic Mechanical Systems 
Table 10.1: DH Parameters of the leg of Fig. 10.3 
i 
1 
2 
3 
4 
5 
6 
flj 
0 
0 
0 
0 
0 
0 
bi 
0 
0 
bs 
64 (const) 
0 
be (const) 
(Xi 
90Â° 
90Â° 
0Â° 
90Â° 
90Â° 
0Â° 
these variables will be needed; it is thus convenient to solve for them now. This 
is straightforward, as shown below: Upon expansion of eq.(10.1), we derive three 
scalar equations in two unknowns, 9i and 62, namely. 
(^3 + b4)s2 =xcci 
-i-ycsi 
-(&3 + b4)C2 = Zc 
0 = xcsi - ycci 
(10.4a) 
(10.4b) 
(10.4c) 
in which Ci and Si stand for cos^i and sin^^, respectively, while 63, occurring in 
the above equations, is available in eq.(10.3). From eq.(10.4c), 9i is derived as 
?i = tan -m 
(10.5a) 
which yields a unique value of Oi rather than the two lying TT radians apart, for 
the two coordinates xc and yc determine the quadrant in which Oi lies. Once 
61 is known, 62 is derived uniquely from the remaining two equations through 
its cosine and sine functions, i.e.. 
C2 
Zc 
&3 + ^4 ' 
S2 = 
&3 + &4 
(10.5b) 
With the first three joint variables of this leg known, the remaining ones, i.e., 
those of the "wrist," are calculated as described in Subsection 4.4.2. Therefore, 
the inverse kinematics of each leg admits two solutions, one for the first three 
variables and two for the last three. Moreover, since the only actuated joint 
is one of the first three, which of the two wrist solutions is chosen does not 
affect the value of 63, and hence, each manipulator leg admits only one inverse 
kinematics solution. 
While the inverse kinematics of this leg is quite straightforward, its direct 
kinematics is not. Below we give an outline of the solution procedure for the 
manipulator under study that follows the procedure proposed by Nanua et al. 
(1990). 
In Fig. 10.2a, consider the triangles AiSiBi, for i = 1,2,3, where the sub-
script i stands for the ith pair of legs. When the lengths of the six legs are fixed 

10.2 Kinematics of Parallel Manipulators 
CI2 
393 
Figure 10.4: Equivalent simplified mechanism 
and plate M, is removed, triangle AiSiBi can only rotate about the axis AiBi. 
Therefore, we can replace the pair of legs of lengths qia and qn) by a single leg of 
length li^ connected to the base plate B hy a. revolute joint with its axis along 
AiBi. The resulting simplified structure, as shown in Fig. 10.4, is kinematically 
equivalent to the original structure in Fig. 10.2a. 
Now we introduce the coordinate frame JF^, with origin at the attachment 
point Oi of the ith leg with the base plate B^ according with the geometry of 
Fig. 10.4 and the notation below: 
For ^ = 1,2,3, 
Xi is directed from Ai to Bi\ 
Yi is chosen such that Zi is perpendicular to the plane of the hexagonal base 
and points upwards. 
Oi is set at the intersection of Xi and 1^, and is designated the center of the 
revolute joint; 
Next, we locate the three vertices 5i, ^2, and ^3 of the triangular plate with 
position vectors stemming from the center O of the hexagon. Furthermore, we 
need to determine U and Oi. Referring to Figs. 10.4 and 10.5, and letting a^ 
and hi denote the position vectors of points Ai and JB^, respectively, we have 
di = llbi-a^ll 

394 
10. Kinematics of Alternative Robotic Mechanical Systems 
U i 
Bi 
qib / 
Oi 
di 
li 
\ 
n 
\ 
^ 
Ti 
Figure 10.5: Replacing each pair of legs with a single leg 
4 + Qia- QI 
2di 
= 
^ Q}a - ^1 
hi â J 
Ui 
= 
di 
for i = 1,2,3, and hence, Ui is the unit vector directed from Ai to Bi. Moreover, 
the position of the origin Oi is given by vector o^, as indicated below: 
Oi = a.i + ViVLi, 
fori = 1,2,3. 
(10.6) 
Furthermore, let s^ be the position vector of Si in frame Ti {Oi, Xi, F^, Zi). 
Then 
0 
1 
-liCOS(f)i 
, 
fori = 1,2,3 
(10.7) 
li sin <f)i J 
Now a frame To (O, X, Y, Z) is defined with origin at O and axes X and 
Y in the plane of the base hexagon, and related to Xi and Yi as depicted in 
Fig. 10.6. When expressed in frame J^o, s^ takes on the form 
[si]o = [oi]o + [Ri]oSi, 
for i = 1,2,3 
(10.8) 
where [Ri]o is the matrix that rotates frame To to frame J^i, expressed in JTQ, 
and is given as 
[Ri]o = 
cos ai 
â sin ai 
0 
sin ai 
cos ai 
0 
0 
0 
1 
for 2 = 1,2,3 
(10.9) 

10.2 Kinematics 
of Parallel 
Manipulators 
395 
Figure 10.6: Relation between frames J^o and !Fi 
Referring to Fig. 10.6, 
cos a^ = u^ â¢ 1: 
sin ai = 
Uii 
Hy 
After substitution of eqs.(10.9)-(10.11) into eq.(10.8), we obtain 
[Si]o = [Oi]o + li 
Uiy COS (t)i 
âUix COS (pi 
sin0i 
for 2 = 1,2,3 
(10.10) 
(10.11) 
(10.12) 
where o^ is given by eq.(10.6). 
Since the distances between the three vertices of the triangular plate are 
fixed, the position vectors si,S2, and S3 must satisfy the constraints below: 
| | s 2 - s i | p =al 
(10.13a) 
| | s 3 - S 2 | p = a ^ 
(10.13b) 
(10.13c) 
||si -S311^ 
=al 
After expansion, eqs.(10.13a-c) take the forms: 
DiC({)i + D2C(f)2 + D3C(j)iC(f)2 + D450lS(/>2 "f -D5 = 0 
EiC02 + E2C(f)3 + E3C(f>2C(l)3 + E4 502^03 + ^5 = 0 
FiCCpi + F2C(f)3 + F3C(j)iC(f)3 H- F4S(t)iS(f)3 + F5 = 0 
(10.14a) 
(10.14b) 
(10.14c) 
where c(-) and s(-) stand for cos(-) and sin(-), respectively, while coefficients 
{Di,Ei,Fi}i 
are functions of the data only and bear the forms shown below^: 
Di = 2 / 1 ( 0 2 - 0 1 ) ^ E u i 
^ Since all vectors in the 15 coefficients of interest are coplanar, they are regarded as two-
dimensional vectors in the display of the 15 coefficients. 

396 
10. Kinematics of Alternative Robotic Mechanical Systems 
D2 = -2/2(02-oi)^Eu2 
D3 â â2lil2V^Ml 
DA = -2/1/2 
DB = II02IP + ||oi||^ - 2of 02 + ll + 
ll-al 
El = 2/2(03 - 02)^EU2 
E2 = -2/3(03 - 02)^EU3 
Es =: -2/2/3UJU2 
E4 = â2/2/3 
^5 - II03IP + II02II' - 20J02 + ll + 
ll-al 
Fi = 2/1(01-03rEui 
F2 = -2/3(01 - 03)^EU3 
Fs = -2/i/3uJui 
F4 = â2/1/3 
FB = II03IP + lloilp - 2oJoi -{-ll + 
lj-al 
In the above relations the 2 x 2 matrix E is defined as in eq.(5.55), and the 
frame in which the vectors are expressed is immaterial, as long as all vectors 
appearing in the same scalar product are expressed in the same frame. Since 
expressions for these vectors in To have already been derived, it is just simpler 
to perform those computations in this frame. 
Our next step is to reduce the foregoing system of three equations in three 
unknowns to two equations in two unknowns, and hence, obtain two contours in 
the plane of two of the three unknowns, the desired solutions being determined 
as the intersections of the two contours. Since eq.(10.14a) is already free of ^3, 
all we have to do is ehminate ^3 from equations (10.14b) and (10.14c). To do 
this, we resort to the usual trigonometric identities relating C(^3 and s03 with 
tan((/)3/2), in eqs.(10.14b) and (10.14c). After we have cleared the denominators 
by multiplying the two foregoing equations by (1 + rf), the equations thus 
resulting take on the forms 
fcirl + A:2r3 -f fe = 0 
(10.15a) 
miTg + m2r3 + 7713 = 0 
(10.15b) 
where fci, fe, and ^3 are linear combinations of S(/>2, C(j)2, and 1. Likewise, mi, 
m2, and rrts are linear combinations of S(f)i, C(^i, and 1, namely, 
fcl =: EiC(f)2 - E2- EzC(j)2 + ^5 
fe = 2E4S(f)2 
ks = EiC(t)2 -\-E2 + Ezc(f)2 -f E^ 
mi = FiC(j)i - F2- F3C(t)i + F5 

10.2 Kinematics of Parallel Manipulators 
397 
7712 = 2F4S(j)i 
m3 = Ficcpi + F2 + Fsccpi + JPS 
Next, we eliminate T3 from the above equations dialytically, as we did in 
Subsection 5.4.1 to find the workspace of a three-axis serial manipulator. We 
proceed now by multiplying each of the above equations by T3 to obtain two 
more equations, namely. 
hri + ferl + fcsTs = 0 
mirl + m2r| + mars = 0 
Further, we write eqs.(10.15a)-(10.15d) in homogeneous form: 
* T 3 = 0 
with the 4 x 4 matrix ^ and the 4-dimensional vector T3 defined as 
* = 
fci 
k2 
ks 
0 
mi 
m2 
rris 
0 
0 
fci 
fc2 
^3 
0 
mi 
m2 
m3 
Ts 
'3 
T3 
1 
(10.15c) 
(10.15d) 
(10.16a) 
(10.16b) 
Equation (10.16a) constitutes a linear homogeneous system. Moreover, in 
view of the form of vector rs, we are interested only in nontrivial solutions, 
which exist only if det(^) vanishes. We thus have the condition 
det(^) = 0 
(10.16c) 
Equations (10.14a) and (10.16c) form a system of two equations in two un-
knowns, 01 and 02. These two equations can be further reduced to a single 
16th-degree polynomial equation (Nanua et al., 1990), as discussed later on. 
In the spirit of the contour method introduced earlier, we plot these two 
equations as two contours in the 01-02 plane and determine the desired solutions 
at points where the two contours intersect. Once a pair of (0i,02) values is 
found, 03 can be uniquely determined from eqs.(10.14b & c). Indeed, these 
equations can be arranged in the form: 
E4S02 
E2+E3C(f)2 
F4S01 
F2-f-F3C01 
S03 
C03 
-EiC(f)2 
-Fic<t>i 
E, 
Prom the above equation, both c03 and s03 can be found uniquely] with the 
foregoing unique values, 03 is determined uniquely as well. 
Knowing the angles 0i, 02, and 03 allows us to determine the position vectors 
of the three vertices of the mobile plate, si, S2, and S3, whose expressions are 
given by eq.(10.12). Since three points define a plane, the pose of the end-effector 
is uniquely determined by the positions of its three vertices. We illustrate the 
foregoing procedure with a numerical example below: 

398 
10. Kinematics of Alternative Robotic Mechanical Systems 
Table 10.2: Solutions for Nanua et al.'s Example 
No. 
1 
2 
3 
4 
4>i (rad) 
0.8335 
1.5344 
-0.8335 
-1.5344 
<h (rad) 
0.5399 
0.5107 
-0.5399 
-0.5107 
h (rad) 
0.8528 
0.2712 
-0.8528 
-0.2712 
Example 10.2.1 (A Contour-Intersection Approach) We derive the di-
rect kinematics of a manipulator analyzed by Nanua et al. (1990). 
This is 
a platform manipulator whose base plate has six vertices with coordinates ex-
pressed with respect to the fixed reference frame To as given below, with all data 
given in meters: 
y l i - ( - 2 . 9 , - 0 . 9 ) , 
^ 2 - ( 
2.5, 4.1), 
^3 = ( 1.3,-2.3), 
Bi = (-1.2, 
3.0) 
5 2 - ( 
3.2, 
1.0) 
^3 = (-1.2,-3.7) 
The dimensions of the movable triangular plate are, in turn, 
ai = 2.0, 
a2 = 2.0, 
as = 3.0 
Determine all possible poses of the moving plate for the six leg-lengths given as 
qia = 5.0, 
q2a = 5.5, 
qsa = 5.7, 
qib = 4.5, 
q2b = 5.0, 
qst = 5.5 
Solution: After substitution of the given numerical values, eqs.(10.14a) and 
(10.16c) become, with Ci and Si standing for cos^i and sin (f)i, respectively, 
Ci: 
61.848 - 36.9561ci - 47.2376c2 + 33.603ciC2 - 41.6822siS2 = 0 
C2: 
-28.5721 + 48.6506C1 - 20.7097c? -f 68.7942c2 - IOO.8IIC1C2 
+35.9634c?C2 - 41.4096c^ + 50.8539cic^ - 15.613c?c^ - 52.97895? 
4-67.6522C25? - 13.2765c^5? + 74.1623siS2 - 25.6617ci5iS2 
-67.953c25i52 + 33.924IC1C2S1S2 - 13.202s^ 
-3.75189cisi + 6.13542c?5^ = 0 
The foregoing equations determine contours Ci and C2 in the 0i-(/>2 plane, 
which are plotted in Figs. 10.7. Four real solutions are found by superimposing 
Ci and C2, as shown in this figure. The numerical values of the solutions, listed 
in Table 10.2, agree with the published results. Solutions 1 and 2 represent 

10.2 Kinematics of Parallel Manipulators 
399 
(f)2 (rad) 
-
2
-
1
0 
1 
(pi (rad) 
Figure 10.7: Contours Ci and C2 for Nanua et al.'s example 
two poses of the triangular plate over the base, while solutions 3 and 4 are 
just the reflections of solutions 1 and 2 with respect to the plane of the base 
plate. Hence, the geometric symmetry gives rise to an algebraic symmetry of 
the solutions. 
Example 10.2.2 (The Univariate Polynomial Approach) Reduce the two 
equations found in Example 10.2.1, eqs.(10.14a) and (10.16c), to a single mono-
variate polynomial equation. 
Solution: We first substitute the trigonometric identities relating C(/>i and scpi 
with Ti = tan((/>i/2), for 2 = 1, 2, into eqs.(10.14a) and (10.16c). Upon clearing 
the denominators by multiplying those equations by (1 + ri)(l + rl), we obtain 
two polynomial equations in ri, namely, 
where 
GiT^ + G2r! + GsT^ + G4n +G^ = 0 
Hirl + H2T1 + i?3 = 0 
GI^K^T^+K2TI-^K^ 
G2 - KATI + 
K^T2 
Gs = KeT^ + KrrI + Ks 
(10.17) 
(10.18) 

400 
10. Kinematics of Alternative Robotic Mechanical Systems 
GA = Kgri + K10T2 
G5 = KiiT^ + Ki2ri 
+ i^i3 
and 
Hi = Lirl + L2 
H2 = LsT2 
H3 = UTI 
+ ^5 
In the above relations, {i^i}P and {Li]\ are all functions of the data. We now 
eliminate T\ from eqs.(10.17) and (10.18), following Bezout's method, as given 
in (Salmon, 1964). To do this, we multiply eq.(10.17) by Hi and eq.(10.18) 
by Girf, and subtract the two equations thus resulting, which leads to a cubic 
equation in ri, namely, 
{G2H1 - GIH2)TI 
+ {G^Hi - GiH3)r^ + G4H1T1 + G^Hi = 0 
(10.19a) 
Likewise, if eq.(10.17) is multiplied by HITI-\-H2 
and eq.(10.18) by Girf +6^2^^ 
and the equations thus resulting are subtracted from each other, one more cubic 
equation in n is obtained, namely, 
{G1H3 - G3HI)T! 
+ {G4H1 + G3H2 - 
G2H3)TI 
HG^Hi + G4H2)ri + G^H2 = 0 
(10.19b) 
Moreover, if we multiply eq.(10.18) by TI, a third cubic equation in n can be 
derived, i.e., 
Hirf + H2r? + Hsn = 0 
(10.19c) 
Now, eqs. (10.18) and (10.19a-c) constitute a homogeneous linear system of four 
equations in the first four powers of TI , which can be cast in the form 
H n = 0 
(10.20) 
ere ri 
H = 
^[r! 
r? n 
' G2H1 â G1H2 
G3H1 â G1H3 
Hi 
0 
i f and 
G3H1 â G1H3 
G3H2 â G2H3 + G4H1 
H2 
Hi 
G4H1 
G4H2 + G5H1 
H3 
H2 
G5H1' 
G5H2 
0 
H3 
. 
In order for eq.(10.20) to admit a nontrivial solution, the determinant of its 
coefficient matrix must vanish, i.e., 
det(H) = 0 
(10.21) 
Given the definitions of {Gk}\ and {i^fc}?, it is apparent that Ci, Ga, and G5 are 
quartic, while G2 and G4 are cubic polynomials in T2. Likewise, Hi and H3 are 
quadratic, while H2 is linear in T2 as well. As a result, the highest-degree entries 

10.2 Kinematics of Parallel Manipulators 
401 
of the first and second rows of H are sextic, while those of its third and fourth 
rows are quadratic. The outcome is that det(H) is of degree 6 + 6 + 2 + 2 = 16, 
i.e., det(H) is a 16th-degree polynomial in r2. This equation, in general, admits 
up to 16 different solutions. Furthermore, the roots of the polynomial appear in 
the form of either complex conjugate pairs or real pairs. In the latter case, each 
pair represents two symmetric positions of the mobile platform with respect to 
the base, i.e., for each solution found above the base, another, mirror-imaged, 
solution exists below it. This symmetry exists, in general, as long as the six 
base attachment points are coplanar. 
Other parallel manipulators are the planar and spherical counterparts of 
that studied above, and sketched in Figs. 10.8 and 10.9. The direct kinematics 
of the manipulator of Fig. 10.8 was found to admit up to six real solutions 
(Gosselin et al., 1992), while the spherical manipulator of Fig. 10.9 has been 
found to admit up to eight direct kinematic solutions (Gosselin et al., 1994a, 
b). A comprehensive account of the simulation and design of three-dof spherical 
parallel manipulators, which includes workspace analysis as well, is included in 
(Gosselin et al., 1995). 
10.2.1 
Velocity and Acceleration Analyses of Parallel 
Manipulators 
Now we proceed to the velocity analysis of the manipulator of Fig. 10.2a. The 
inverse velocity analysis of this manipulator consists in determining the six rates 
of the active joints, { &A; }i? given the twist t of the moving platform. The velocity 
analysis of a typical leg leads to a relation of the form of eq.(5.9), namely, 
JjOj = tJ, 
J = J, II, 
VI 
(10.22a) 
where J j is the Jacobian of the Jth leg, Oj is the 6-dimensional joint-rate vector 
of the same leg, and tj is the twist of the moving platform M, with its operation 
point defined as the point Cj of concurrency of the three revolutes composing 
the spherical joint of attachment of the leg to the moving platform M, and 
shown in Fig. 10.3 as (7, subscript J indicating that point C of that figure is 
different for different legs. We thus have 
ei 
62 
0 
e4 
65 ee 
63461 X 63 
63462 X 63 
63 
0 
0 
0 
634 = 63 + 64 
where the leg geometry has been taken into account. 
Furthermore, from Fig. 10.3, it is apparent that 
cj =p-u 
xrj 
(10.22b) 
(10.22c) 
(10.23) 
with r J defined as the vector directed from Cj to the operation point P of the 
moving platform. 

402 
10. Kinematics of Alternative Robotic Mechanical Systems 
Now, we regard the axes of the five revolute joints of the six-joint leg of 
Fig. 10.3 as a set of five zero-pitch screws <S = {si,82,84,85,86}. The line 
passing through Oi and C is a zero-pitch screw S3 reciprocal to <S, as shown 
below: 
Since S3 passes through Oi, its moment with respect to this point vanishes, 
and hence, 
"^ 63 
S3 = 
0 
Now it is simple matter to show that 
sjrsfc = {Ts3)^Sk =0 
for fc = 1,2,4,5,6 
and r given in eq.(3.112), q.e.d. 
Notice that, for the Jth leg. 
(10.24) 
rs3 = 
0 
â¬3 
= h 
and hence, on the one hand. 
l^JjOj = ib3)j 
where the subscript J reminds us that 63 is diff'erent for each leg. In order 
to ease the notation, and since we have a single variable 63 per leg, we define 
henceforth 
bj = {b3)j 
(10.25a) 
and hence, the above relation between t j and the actuated joint rate of the Jth 
leg takes the form 
l p j 0 j = bj 
(10.25b) 
On the other hand. 
Likewise, we define 
I j t j = 
( e ^ J C j 
( e 3 ) j = e j 
the foregoing relation thus yielding 
(10.26a) 
(10.26b) 
Note that vectors ej and r j define uniquely the line along the two attachment 
points of the Jth leg. Henceforth, this line will be termed the axis of the Jth 
leg. 
Upon equating the right-hand sides of eqs.(10.25b) and (10.26b), the desired 
expression for the actuated joint rate is derived, namely. 
^J = e j c j , 
J = / , / / , . . . , y / 
(10.27a) 

10.2 Kinematics of Parallel Manipulators 
403 
That is, the Jth joint rate is nothing but the projection onto the Jth leg axis 
of the velocity of point Cj. 
Furthermore, upon substituting eq.(10.23) into 
eq. (10.27a) above, we obtain the relations between the actuated joint rates and 
the twist of the moving platform, namely, 
bj = [{ejxrj)^ 
ej] 
-kTt 
(10.27b) 
for J = I,II,..,, 
VI. Upon assembling all six leg-equations of eq.(10.27b), we 
obtain the desired relation between the vector of actuated joint rates and the 
twist of the moving platform, namely. 
b = Kt 
(10.28a) 
with the 6-dimensional vectors b and t defined as the vector of joint variables 
and the twist of the platform at the operation point, respectively. Moreover, 
the 6x6 matrix K is the Jacobian of the manipulator at hand. These quantities 
are displayed below: 
b = 
[bil 
bii 
Ibvi. 
, 
t = 
P. ' 
^ = 
( e / X Yj)^ 
{en X r//)^ 
{eyi X ry/)^ 
^11 
'VI 
(10.28b) 
Prom the above display, it is apparent that each row of K is the transpose of 
the Pliicker array of the corresponding leg axis, although in axis coordinates, as 
opposed to the Jacobian matrix J of serial manipulators, whose columns are the 
Pliicker coordinates of the corresponding joint axis in ray coordinates. More-
over, in these coordinates, the moment of the leg-axis is taken with respect to 
the operation point P oi M. One more difference between the velocity analy-
sis of serial and parallel manipulators is the role played by the actuator joint 
rates in the underlying forward and direct kinematics. In the case of paral-
lel manipulators, this role is changed, for now we have that the actuator joint 
rates are given by explicit formulas in terms of the twist of the moving plat-
form, along with the manipulator architecture and configuration. Finding the 
platform twist requires inverting matrix K. Moreover, the significance of singu-
larities also changes: When K becomes singular, some instantaneous motions of 
the platform are possible even if all actuated joints are kept locked. That is, a 
singularity of K is to be interpreted now as the inability of the manipulator to 
withstand a certain static wrench. An extensive analysis of the singularities of 
parallel manipulators using line geometry in a form that is known as Grassmann 
geometry was reported by Merlet (1989). 
Now, the acceleration analysis of the same leg is straightforward. Indeed, 
upon differentiation of both sides of eq.(10.28a) with respect to time, one obtains 
b = Kt 4- Kt 
(10.29a) 

404 
10. Kinematics of Alternative Robotic Mechanical Systems 
Figure 10.8: A planar parallel manipulator 
where K takes the form 
K = 
,\T 
'T -, 
U 
LU VI 
^VI 
and u j is defined as 
Therefore, 
uj 
=ej 
X Tj 
uj = ej xrj 
+ej X rj 
(10.29b) 
(10.29c) 
(10.29d) 
Now, since vectors r j are fixed to the moving platform, their time-derivatives 
are simply given by 
rj =uj xrj 
(10.29e) 
On the other hand, vector ej is directed along the leg axis, and so, its time-
derivative is given by 
ej =ujj 
X ej 
with ojj defined as the angular velocity of the third leg link, i.e., 
the subscript J of the above parentheses reminding us that this angular velocity 
differs from leg to leg. Clearly, we need expressions for the rates of the first two 

10.2 Kinematics of Parallel Manipulators 
|0i 
405 
Figure 10.9: A spherical parallel manipulator 
joints of each leg. Below we derive the corresponding expressions. In order to 
simplify the notation, we start by defining 
fj = ( e i ) j , 
g j = ( e 2 ) j 
(10.29f) 
Now we write the second vector equation of eq.( 10.22a) using the foregoing 
definitions, which yields 
(^i)jfj X {bj + b4)ej + {92)jgj X {bj + b4)ej + bjej = cj 
where 64 is the same for all legs, since all have identical architectures. Now we 
can eliminate (^2) j from the foregoing equation by dot-multiplying its two sides 
by g j , thereby producing 
{Oi)jgj X fj â¢ {bj + b4)ej + +gj(ejej)cj = g^cj 
where an obvious exchange of the cross and the dot in the above equation has 
taken place, and expression (10.27a) for bj has been recalled. Now it is a simple 
matter to solve for (^i)j from the above equation, which yields 
(Oih = 
gj(l - ejej)cj 
with A J defined as 
A j = (bj + b4)ej 
xfj-gj 
(10.30) 

406 
10. Kinematics of Alternative Robotic Mechanical Systems 
Moreover, we can obtain the above expression for {Oi)j in terms of the platform 
twist by recalHng eq.(10.23), which is reproduced below in a more suitable form 
for quick reference: 
cj = Cjt 
where t is the twist of the platform, the 3 x 6 matrix C j being defined as 
Cj = [Rj 
1] 
in which R j is the cross-product matrix of rj and 1 is the 3 x 3 identity matrix. 
Therefore, the expression sought for {6i)j takes the form 
iOi)j = -^g'^{l-eje^)Cjt, 
J = IJI,,..,VI 
(10.31a) 
A similar procedure can be followed to find (^2)7? the final result being 
02)J = - ^ f J ( l - eje3:)Cjt, 
J = 
1,11,...,VI 
(10.31b) 
thereby completing the calculations required to obtain the rates of all unactu-
ated joints. Note that the unit vectors involved in those calculations, e j , fj, 
and gj, are computed from the leg inverse kinematics, as discussed above. 
Planar and Spherical Manipulators 
The velocity analysis of the planar and spherical parallel manipulators of Figs. 10.8 
and 10.9 are outlined below: Using the results of Subsection 5.7.2, the velocity 
relations of the Jth leg of the planar manipulator take the form 
JjOj = t, 
J = I, II, III 
(10.32) 
where J j is the Jacobian matrix of this leg, as given by eq.(5.60), while Oj is 
the 3-dimensional vector of joint rates of this leg, i.e.. 
Jj = 
1 
Erji 
1 
Erj2 
1 
Erj3 
ej = 
Oji 
Oj2 
^J3 
J = I, II, III 
For purposes of kinematic velocity control, however, we are interested only in 
the first joint rate of each leg; i.e., all we need to determine in order to produce 
a desired twist of the end-eflPector is not all of the foregoing nine joint rates, 
but only On, Ojji, and Oim. Thus, we want to eliminate from eq.(10.32) the 
unactuated joint rates 6j2 and 6j3, which can be readily done if we multiply 
both sides of the said equation by a 3-dimensional vector n j perpendicular to the 
second and the third columns of J j . This vector can be most easily determined 
as the cross product of those two columns, namely, as 
n = J J2 X J J3 
r J2 - r j3 

10.2 Kinematics of Parallel Manipulators 
407 
Upon multiplication of both sides of eq.(10.32) by iij, we obtain 
[-rj2Erj3 + (rj2 - rj3)'^Erji] Oji = -{r'^^Brjs)cj 
+ (rj2 - rj3)^c (10.33) 
and hence, we can solve directly for 6ji from the foregoing equation, thereby 
deriving 
-rj2Erj3 + (rj2 - rj3)^Erji 
Note that eq. (10.33) can be written in the form 
jjOji = kjt, 
J = 7, //, III 
(10.34b) 
with jj and kj defined, for J = I, II, III, as 
jj = (rj2 - rj3)^Erji - r5'2Erj3, 
kj = [rj2Erj3 
( r j 2 - r j 3 ) ^ r 
If we further define 
0 = [9ii 
6112 Ojii^] 
and assemble all three foregoing joint-rate-twist relations, we obtain 
J0 = Kt 
(10.35) 
where J and K are the two manipulator Jacobians defined as 
J = diag(jj, j / j , jiii), 
K = 
^iii 
(10.36) 
Expressions for the joint accelerations can be readily derived by differentiation 
of the foregoing expressions with respect to time. 
The velocity analysis of the spherical parallel manipulator of Fig. 10.9 can 
be accomplished similarly. Thus, the velocity relations of the Jth leg take on 
the form 
JjOj = cj, 
J = I, II, III 
(10.37) 
where the Jacobian of the Jth leg, J j , is defined as 
J j = [eji 
ej2 
ejs] 
while the joint-rate vector of the Jth leg, 6j, is defined exactly as in the planar 
case analyzed above. Again, for kinematic velocity control purposes, we are 
interested only in the actuated joint rates, namely, 6ii, Om, and 9nii â¢ As in 
the planar case, we can eliminate 6j2 and Ojs upon multiplication of both sides 
of eq.(10.37) by a vector n j perpendicular to the second and the third columns 
of J J. An obvious definition of this vector is, then, 
n j = e j 2 X e j 3 

408 
10. Kinematics of Alternative Robotic Mechanical Systems 
The desired joint-rate relation is thus readily derived as 
jjOji = kjo;, 
J = /, II, III 
(10.38) 
where jj and kj are now defined as 
jj = eji X ej2 â¢ ej3 
(10.39a) 
kj = ej2 X ej3 
(10.39b) 
The accelerations of the actuated joints can be derived, again, by differentiation 
of the foregoing expressions. 
We can then say that in general, parallel manipulators, as opposed to serial 
ones, have two Jacobian matrices. 
10.3 
Multifingered Hands 
Shown in Fig. 10.10 is a three-fingered hand with fingers A, B, and C, each 
supplied with three revolute joints. Furthermore, each finger carries two re vo-
lutes of parallel axes that are normal to the axis of the third one. Thus, each 
finger comprises three links, the one closest to the palm V being of virtually zero 
length and coupled to V via a revolute joint. Of the other two, that in contact 
with the object O is the distal phalanx, the other being the proximal phalanx. 
Moreover, the fingers can be either hard or soft] if the latter, then contact takes 
place over a finite area; if the former, then contact takes place over a point, and 
hence, hard fingers can exert only force and no moment on the manipulated ob-
ject. Soft fingers can exert both force and moment. For the sake of conciseness, 
we will deal only with hard fingers here. Let the contact points of fingers A, 
B, and C with O be denoted by AQ-, BQ, and Coy respectively. The purpose of 
the hand is to manipulate O with respect to V. The motion of O, moreover, 
can be specified through its pose, given in turn by the position vector o of one 
of its points, 0, and its orientation matrix Q with respect to a frame fixed to 
V. Now, in order to manipulate O six degrees of freedom are needed. When 
the three fingers are in contact with O, the hand-object system forms a parallel 
manipulator with three "legs" of the RRS type, with 5 standing for spherical 
joint. As the reader can verify, the system has six-dof, which means that manip-
ulations are possible with only two actuated revolutes per finger. Many designs 
involve only two motors per finger, one of the revolute joints being provided 
with springs to guarantee contact. 
Thus, the location of the three contact points is fully determined if the 
pose of V and the locations of AQ, BQ, and Co in O are given. Once the 
position vectors of the three contact points are known, determining the joint-
variable values needed to take O to the desired pose reduces to solving a 3-
dimensional positioning problem for each finger, with three revolute jointsâa 
problem already discussed in Subsection 4.4.1. The joint rates and accelerations 
are then determined as in Sections 4.4 and 5.5. 

10.3 MultiRngered Hands 
409 
Figure 10.10: A three-fingered hand 
While the mechanics of grasping is quite elaborate, due to the deformation 
of both fingers and object, some assumptions will be introduced here to pro-
duce a simple model. One such assumption is rigidity; a second is smoothness, 
under which each finger is capable of exerting only normal force on the object. 
Moreover, this force is unidirectional, for the finger cannot exert a pull on the 
object. The smoothness and rigidity assumptions bring about limitations, for 
they require a rather large number of fingers to exert an arbitrary wrench on 
the grasped object, as shown below. 
We assume that we have a rigid object O bounded by a surface S that is 
smooth almost everywhere, i.e., it has a well-defined normal n everywhere except 
at either isolated points or isolated curves on S. Below we show that in order to 
exert an arbitrary wrench w onto O, a hand with rigid, smooth fingers should 
have more than six fingers. Assume that the n contact points on <S are { Pi}i 
and that we want to find n pressure values { Xi}^ at the contact points that will 
produce the desired wrench w onto O. 
Moreover, let the unit normal at Pi be denoted by n^ and the vector directed 
from O to Pi be denoted by p^, as shown in Fig. 10.11. 
The wrench w^ exerted by each finger onto O at Pi is apparently 
w^ = Xi Pi X (-n^) 
Xi>0 
Upon equating the resultant wrench with the desired wrench, we obtain 
E 
-Pi X n^ 
- H i 
Xi 
=w 

410 
10. Kinematics of Alternative Robotic Mechanical Systems 
Figure 10.11: Geometry of grasped object O 
GA = -w 
(10.40a) 
or in compact form, as 
where G is the 6 x n grasping matrix and A is the n-dimensional vector of 
pressure values, i.e.. 
G = 
X ni 
â¢ 
ni 
â¢ â¢ Pn X nn ' , 
A = 
â¢ A i 
-An 
(10.40b) 
Note that the ith column of the grasping matrix is nothing but the array of 
Pliicker coordinates of the line of action of the force exerted by the ith finger 
on the object, in ray coordinatesâsee Subsection 3.2.2. 
Thus, for n = 6, a unique pressure vector A is obtained as long as G is non-
singular. However, negative values of {A^jy are not allowed, and since nothing 
prevents these values from becoming negative, six fingers of the type considered 
here are not enough. We must thus have more than six such fingers in order to 
be able to apply an arbitrary wrench onto the body. For n > 6 and a full-rank 
6 X n grasping matrix, nonnegative values of {Xi}i can be generated, but only 
under certain conditions, as explained below: Let u be a vector lying in the 
nullspace of G, i.e., such that Gu = 0. Then an arbitrary A can be expressed 
as 
A = Ao + u 
where AQ is a particular solution of eq.(10.40a). For example, if AQ is chosen as 
the minimum-norm 
solution of eq. (10.40a), then we have, explicitly, 
Ao = 
- G W 
where G"*" is the generalized inverse of G, defined as 
Gt = G^(GG^)-i 
The numerical computation of the minimum norm solution of an undetermined 
system of linear equations is discussed in Appendix B. 

10.3 Multifingered Hands 
411 
Figure 10.12: A prototype of the KU Leuven three-fingered hand (courtesy of 
Prof. H. Van Brussel) 
Note that the 6 x 6 product GG'^ has the general form 
GG^ 
T 
Although a symbolic expression for the inverse H of GG^ is not possible in the 
general case, we can always express this inverse in block form, with all blocks 
of 3 X 3, namely, 
Hii 
Hi2 
H = (GG^)-i = Hi2 
H22 
where consistently, H n has units of meter ^, H12 has units of meter ^, and 
H22 is dimensionless. Moreover, we can partition G into two 3 x n blocks, i.e.. 
G = 
in which A has units of meter, while B is dimensionless. Hence, the product 
G^H takes on the form 
G^H = [ A ^ H n + B^Hf2 
A^Hi2 + B^H 22 J 
and hence, the left-hand block of the foregoing product has units of meter ^, 
while the right-hand block is dimensionless. 
Upon multiplying the desired 

412 
10. Kinematics of Alternative Robotic Mechanical Systems 
wrench w from the left by this product, the result, Ao, has consistently units of 
Newton. 
Now, to find u, several numerical methods are available that do not require 
any matrix inversion (Golub and Van Loan, 1989). A simple way of expressing 
u, although by no means the way to compute it, is given by 
u = Pv, 
P = 1 - G+G 
where v is an n-dimensional vector and P is a matrix projecting v onto the 
nullspace of G, and 1 defined as the nxn 
identity matrix. Now we are left with 
the task of finding v so that 
Xi = Xoi+Ui>0, 
i = 1, ..., n 
Hence, our policy to determine u is simply, for i = 1, ..., n. 
r 0, 
if 
\ -Aoz, 
ot 
Aoi > 0; 
otherwise. 
Further, v is found upon solving 
Pv = u 
However, P is singularâits rank is n â 6, as the reader is invited to proveâand 
the above equation may or may not admit a solution. For a solution to be 
possible, u must lie in the range of P. 
A more general approach to solving the grasping problem relies on linear 
programming, but this topic lies beyond the scope of the book. The inter-
ested reader is directed to the specialized literature on the subject (Hillier and 
Lieberman, 1995). 
In the presence of soft fingers, however, fewer than six fingers suffice to grasp 
an object. Moreover, in the presence of friction, the force transmitted by a finger 
has, in addition to its normal component, a tangential component that, hence, 
gives rise to a contact force making a nonzero angle with the normal n^ to the 
object surface at the ith contact point. Therefore, by virtue of the linear relation 
between the normal and the tangential components of the transmitted force, 
given by the coeflScient of friction //, this force is constrained to lie within the 
friction cone. This cone has its apex at the contact point P^, its elements making 
an angle a with the normal, that is given by a = arctan(//). Furthermore, 
by virtue of the fundamental assumption of Coulomb friction analysis, fx lies 
between 0 and 1, and hence, a is constrained to lie between 0Â° and 45Â°. 
Shown in Fig. 10.12 is an example of a three-fingered hand. This hand was 
developed at the Katholieke Universiteit Leuven (Van Brussel et al., 1989). 
The literature on multifingered hands and the problem of grasping is far 
richer than we can afford to describe here. Extensive studies on these subjects 
have been reported by Reynaerts (1995) and Teichmann (1995.) 

10.4 Walking Machines 
413 
10.4 
Walking Machines 
Besides the walking machines introduced in Chapter 1, namely, the OSU Adap-
tive Suspension Vehicle and the TUM Hexapod, other legged machines or leg 
designs are emerging with special features. For example, CARL, shown in 
Fig. 10.13, is a compliant articulated robot leg that was designed at McGill 
University's Centre for Intelligent Machines (CIM) by Prof. Buehler and his 
team (Menitto and Buehler, 1996). This leg contains an actuation package with 
a high load-carrying capacity (ATLAS) and an antagonistic pair of concentric 
translational-to-angular displacement devices. The leg has four degrees of free-
dom, of which two are actuated by ATLAS and one by a harmonic drive motor, 
while one is unactuated. This leg design is intended to provide locomotion to a 
quadruped. 
Figure 10.13: The compliant articulated robot leg (courtesy of Prof. M. Buehler) 
As nature shows in mammals, four legs are necessary to guarantee the static 
equilibrium of the body while one leg is in the swing phase. Static equilibrium 
is achieved as long as the horizontal projection of the mass center of the overall 
body-legs system lies within the triangle defined by the contact points of the 
three legs that are in the stance phase. More than four legs would allow for 
greater mobility. For purposes of symmetry, some walking machines are designed 
as hexapods, so as to allow for an equal number of legs in the swing and the 
stance phases. 
The kinematic analysis of walking machines is possible using the hexapod 
displayed in Fig. 10.14. 
Furthermore, contact with the ground is assumed to take place such that 
the ground can exert only a "pushing" force on each leg but no moment. Thus, 

414 
10. Kinematics of Alternative Robotic Mechanical Systems 
Figure 10.14: A general hexapod 
while we can model the contact between leg and ground as a spherical joint, 
care must be taken so that no pulls of the ground on the leg are required for a 
given gait. 
Additionally, we shall assume that the leg is actuated by three revolutes, 
namely, those with variables 64, ^5, and 6e in Fig. 10.15, where Q denotes the 
ground and B the machine body. A photograph of one of the six identical 
legs of the walking machine developed at the Technical University of Munich, 
introduced in Fig. 1.10, is included in Fig. 10.16. The Denavit-Hartenberg 
parameters of this leg, proceeding from the ground upwards, are displayed in 
Table 10.3. Note that the architecture of this leg is simply that of a three-
revolute manipulator carrying a spherical joint at its end-effector, similar to 
that of the decoupled manipulators studied in Section 4.4. The spherical joint 
accounts for the coupling of the leg with the ground. We are thus assuming 
that when a leg is in contact with the ground, the contact point of the leg is 
immobile. At the same time, the motion of the body 13 is prescribed through 
the motion of a point on the axis of the revolute coupled to the body. Such a 
point is indicated by Pj for the Jth leg. Moreover, the point of the Jth leg in 
contact with the ground will be denoted by Oj. Thus, when prescribing the 
motion of the body through that of each of the six points P/, P//, ..., Py/, 
the rigid-body compatibility conditions of eqs.(8.14), (8.15), and (8.28) must be 
observed. The pose of the body B is thus specified by the position of a point C 
of the body and the orientation matrix Q of the body with respect to a frame 
fixed to the ground, the position vector of C in that frame being denoted by c. 
The specification of points P/ to Pyi thus follows from the knowledge of c and 
Q, thereby guaranteeing compliance with the above-mentioned constraints. 
Furthermore, a maneuver of S, given by a prescribed pose, can be achieved 
by suitable values of the actuated-joint variables, which thus leads to a problem 

10.4 Walking Machines 
415 
Figure 10.15: One of the legs of a walking machine with three actuated revolutes 
of parallel-manipulator inverse kinematics. 
The mechanical system that results from the kinematic coupling of the ma-
chine legs with the ground is thus equivalent to a parallel manipulator. The 
essential difference between a walking machine and a parallel manipulator is 
that the former usually involves more actuators than degrees of freedom. This 
feature is known as redundant actuation and will not be pursued here. 
Table 10.3: DH Parameters of the leg of the TU-Munich walking machine 
i 
1 
2 
3 
4 
5 
6 
Ui (mm) 
17 
123 
116 
0 
0 
0 
bi (mm) 
0 
0 
0 
0 
0 
0 
ttj 
90Â° 
180Â° 
0Â° 
90Â° 
90Â° 
0Â° 

416 
10. Kinematics of Alternative Robotic Mechanical Systems 
Figure 10.16: One of the six identical legs of the TU Munich Hexapod (courtesy 
of Prof. F. Pfeiffer. Reproduced with permission of TSI Enterprises, Inc.) 
10.5 
Rolling Robots 
Probably the rolling robot that has received most media attention is NASA's 
Sojourner, of the Pathfinder mission, which explored a spot of the Martian 
landscape for several months in 1997. It is noteworthy that the Sojourner was 
designed, built, and commissioned with a shoestring budget for NASA stan-
dards. The Sojourner is a paradigm of rolling robots for autonomous operation 
on rough terrain. We focus here on the simplest robots of this class, i.e., robots 
intended for tasks on horizontal surfaces, and so, their platforms undergo planar 
motion, which greatly simplifies their kinematics. One special feature of rolling 
robots is their nonholonomic nature. What this means is that the minimum 
number m of generalized coordinates defining uniquely a posture of the sys-
tem is greater than the number n of their independent generalized speeds, i.e., 
m> n. In the case of serial and parallel manipulators, paradigms of holonomic 
systems, m =^ n. In nonholonomic systems, then, we must distinguish between 
their posture, or configuration degree of freedom and their mobility, or veloc-
ity degree of freedom. For the sake of conciseness, we will refer to the latter 
whenever we mention the degree of freedom of a rolling robot. 
Rolling robots are basically of two kinds, depending on whether they are 
supplied with conventional or with omnidirectional wheels. The simplest robots 
with conventional wheels are capable only of 2-dof motions, and hence, are kine-
matically equivalent to conventional terrestrial vehicles. However, robots with 
omnidirectional wheels (ODWs) are capable of 3-dof motions, which increases 

10.5 Rolling Robots 
417 
Figure 10.17: A 2-dof rolling robot: (a) its general layout; and (b) a detail of 
its actuated wheels 
substantially their maneuverability. Below we outline the kinematics of the two 
kinds of robots. 
10.5.1 
Robots with Conventional Wheels 
We begin with robots rolling on conventional wheels. Since these have two 
degrees of freedom, they need only two actuators, the various designs available 
varying essentially in where these actuators are located. The basic architecture 
of this kind of robot is displayed in Fig. 10.17a, in which we distinguish a chassis, 
or robot body, depicted as a triangular plate in that figure: two coaxial wheels 
that are coupled to the chassis by means of revolutes of axes passing through 
points Oi and O2] and a third wheel mounted on a bracket. 
Now, the two actuators can be placed in two essentially different arrays. In 
the first array, not shown in the figure, one actuator is used for propulsion and 
the other for steering, the former being used to provide locomotion power to 
the common two-wheel axle via a differential gear train. This train is required 
to allow for different angular velocities of the two coaxial wheels. Moreover, 
the orientation of the mid-plane of the steering wheel, defined by angle ip, is 
controlled with the second actuator. This design has some drawbacks, namely, 
(i) the two motors serving two essentially different tasks call for essentially 
different operational characteristics, to the point that both may not be available 
from the same manufacturer; (ii) the propulsion motor calls for velocity control, 
the steering motor for position control, thereby giving rise to two independent 
control systems that may end up by operating in an uncoordinated fashion; and 
finally, (iii) the use of a differential gear train increases cost, weight, and brings 

418 
10. Kinematics of Alternative Robotic Mechanical Systems 
about the inherent backlash of gears. 
In the second actuation array, shown in Fig. 10.17b, the two coaxial wheels 
are powered independently, thereby doing away with the differential train and 
its undesirable side effects, the third wheel being an idle caster. Moreover, the 
orientation of the latter is determined by friction and constraint forces, thereby 
making unnecessary the steering control system of the first array. Below we 
analyze the kinematics of a robot with this form of actuation. 
Let point C of the platform be the operation point, its projection onto a 
horizontal plane 7i containing the common axis of the two actuated wheels being 
C , as indicated in Fig. 10.17b. Let, moreover, the position vector of C in a 
frame fixed to the ground, with origin lying in H, be denoted by c. Additionally, 
let (jj be the scalar angular velocity of the platform about a vertical axis. By 
virtue of the 2-dof motion of this robot, we can control either the velocity c 
of Câor of C for that matterâor a combination of uj and a scalar function 
of c by properly specifying the two joint rates 9i and 62- However, we cannot 
control the two components of c and CJ simultaneously. 
In order to proceed with the kinematic analysis of the system at hand, we 
define an orthonormal triad of vectors whose orientation is fixed with respect 
to the chassis. Let this triad be denoted by {i, j , k } , with k pointing in the 
upward vertical direction. Thus, the velocities 6^ of points O^, for i = 1,2, are 
given by 
Oi = r<9J, 
i = l,2 
(10.41a) 
Furthermore, the velocity of C can now be written in 2-dimensional form as 
c = 6,- 4- CJE(C - Oi), 
i = 1,2 
(10.41b) 
with E defined as in eq.(5.55). Thus, all vectors of eq.(10.41b) are 2-dimensional. 
Substituting eq.(10.41a) into eq.(10.41b) and subtracting sidewise eq.(10.41b) 
for i = 1 and for i = 2, we derive 
[r{ei - 62)-colU = 02 
Hence, the angular velocity LJ of line O1O2 in planar motion, which is the same 
as that of the platform, can be readily expressed as 
00=^(61-62) 
(10.41c) 
its positive direction being that of k. Upon substitution of eqs.(10.41a & b) 
into eq.(10.41b), we obtain expressions for c in terms of the joint rates, sim-
ilar to eqs.(10.41b), for i = 1,2. Furthermore, upon adding sidewise the two 
expressions thus resulting, we obtain c in the desired form, namely, 
c = J-i6i - 62)1 +101+ 
62)3 
(10.41d) 
Equations (10.41c & d) express now the differential direct kinematics rela-
tions of the robot under study. In compact form, these relations become 
t = LOa 
(10.41e) 

10.5 Rolling Robots 
419 
with the 3 x 2 matrix L defined as 
L = 
r/l 
(ar//)i + (r/2)j 
-r/l 
-(ar/0i + (r/2)j 
(10.41f) 
Moreover, the planar twist t of the platform and the 2-dimensional vector 6a of 
actuated joint rates are defined as 
t = 
0 a -
(10.41g) 
Computing the joint rates from the foregoing equations, i.e., solving the asso-
ciated inverse kinematics problem, is now a trivial task. The inverse kinematics 
relations are computed below by noticing that eq. (10.41c) provides a relation 
for the joint-rate difference. Thus, all we need now is a second equation for 
the joint-rate sum. By inspection of eq.(10.41d), it is apparent that we can 
derive this relation by dot-multiplying both sides of this equation by j , thereby 
obtaining 
c j 
:(^i+e2) 
(10.42) 
The two equations (10.41c) and (10.42) can now be cast into the usual form 
30a = Kt 
where the two robot Jacobians J and K are given below: 
J = 
1 
- 1 
1 
1 
K = 
(l/r) 
0^ 
0 
(2/r)j^ 
(10.43a) 
(10.43b) 
Note that J is a 2 x 2 matrix, but K is a 2 x 3 matrix. 
The inverse kinematics relations are readily derived from eq.(10.43a), namely. 
6i 
I 
2 
r 
r 
^^ = -l{i'^-ly) 
where y = c j . 
Now, in order to complete the kinematic analysis of the robot at hand, we 
calculate the rates of the unactuated joints, ^3 and -0. To this end, let cji, for 
i = 1,2,3, and 63 denote the 3-dimensional angular velocity vector of the ith 
wheel and the 3-dimensional velocity vector of the center of the caster wheel. 
Likewise, 6J4 denotes the scalar angular velocity of the bracket. 
We thus have, for the angular velocity vectors of the two actuated wheels. 
ui = -6>ii + cjk = -(9ii + y(i9i - 6>2)k 
[-i + (r//)k -(r/Ok] 
(10.44a) 

420 
10. Kinematics of Alternative Robotic Mechanical Systems 
U2 = -621 + cjk = -6^21 + T(6>I - 6>2)k 
= [(r//)k 
- i - ( r / / ) k ] 
(10.44b) 
In the ensuing derivations, we will need the velocities of the centers of the 
two actuated wheels, which were derived in eq.(10.41a). Moreover, the angular 
velocity of the caster wheel can be readily written in the frame fixed to the 
bracket, {63, Â£3, k } , namely. 
C^3 = ^3^3 4- (CJ + t/')k 
(10.45) 
with if) denoting the angle between vectors j and e^ of Fig. 10.17a, measured 
in the positive direction of k, as indicated in the layout of Fig. 10.18. Note 
Figure 10.18: Layout of the unit vectors fixed to the platform and to the bracket 
that vector 63 is parallel to the axis of rolling of the caster wheel, while Â£3 is a 
horizontal vector perpendicular to e3. These two sets of unit vectors are related 
by 
63 = â sin ij)\ + cos V'j 
f3 = â cos ^i â sin ^j 
their inverse relations being 
i = â sin ^63 â cos ^Â£3 
j = cos i/^e3 - sin ^Â£3 
(10.46a) 
(10.46b) 
(10.46c) 
(10.46d) 
Furthermore, the velocity of the center of the caster wheel is derived as 
03 = a;3 X r k = -r^3f3 
while the scalar angular velocity of the bracket, a;4, is given by 
CJ4 = ^ + ^ = y (^1 - ^2) + V^ 
(10.47) 

10.5 Rolling Robots 
421 
In Chapter 12 we shall need c in bracket coordinates. Such an expression is 
obtained from eqs.(10.41d) and (10.46c & d), namely, 
c = [-a~{Oi -02)smip-h 
-{Oi -f ^2)cosV']e3 
-[ay (01 - 02) cos V^ + ^(^1 + ^2) sin V^]f3 
(10.48) 
Expressions for the dependent rates in terms of the independent ones, 61 
and 02, are readily derived. To this end, we express the velocity of P in two 
independent forms, one in terms of the velocity of O3 and the other in terms of 
the velocity of C, i.e., 
p = 63 + u}4k X (p ~ 03) 
(10.49a) 
p = c + cjk X (-6j) 
(10.49b) 
Upon equating the right-hand sides of the above equations, we obtain a 3-
dimensional vector equation relating dependent with independent rates, namely, 
-r^3f3 + (cj + ip)k X (p - 03) = c + bui 
where we have recalled the expressions derived above for 63 and UJ4. Further, 
we rewrite the foregoing equation with the unknown rates, 63 and t/', on the 
left-hand side, i.e., 
-rOsfs + ^k X (p - 03) = c + b(jji - a;k x (p - 03) 
(10.50) 
Moreover, we note that, from Fig. 10.17, 
p - 03 = -dfs -\- (h- r)k 
and hence, 
k X (p - 03) = des 
equation (10.50) thus becoming 
-rOsfs 4- ipdes = c + (j{bi - des) 
(10.51) 
Now it is a simple matter to solve for ^3 and -0 from eq.(10.51). Indeed, we 
solve for 63 by dot-multiplying both sides of the above equation by Â£3. Likewise, 
we solve for ^ by dot-multiplying both sides of the same equation by â¬3, thus 
obtaining 
-r^3 = c â¢ Â£3 -f- ojbi' f3 
dip = c ' e3+ (jj{bi â¢ 63 â d) 
Now, by recalling the expressions derived above for oj and c, we obtain 
c-f3 = -a-{6i 
-92)cosil)- 
-{9i -{-02)sinip 
V â¢ 
â¢ 
r â¢ 
* 
c -63 = -a-{6i 
-02)sint/j-h -{61 -{-62)003^ 
i â¢ Â£3 = â cos ip, 
i â¢ â¬3 = â sin V' 

422 
10. Kinematics of Alternative Robotic Mechanical Systems 
Therefore, 
03 = acosipiOi - O2) 4- -(sin^)(^i + O2) 
iP = p -{asin^ 
+ 6){ei - 62) -f -(cosV')(ei + ^2) 
with the definitions given below: 
^ 
d 
r 
(10.52a) 
(10.52b) 
(10.53) 
Hence, if we let 9u = [O3 ^ ] ^ be the vector of unactuated joint rates^ then 
we have 
Ou = eOa 
(10.54a) 
with 0 defined as 
0 = 
a c o s ^ + (sin^)/2 
âoicos^ + (sin^)/2 
p[âasin^ + (cosi/')/2 â S] p[a sin ^ifj + (cost/^)/2 -{-S] 
(10.54b) 
thereby completing the intended kinematic analysis. 
10.5.2 
Robots with Omnidirectional Wheels 
In general, omnidirectional wheels (ODWs) allow for two independent transla-
tional motions on the supporting floor and one independent rotational motion 
about a vertical axis. Based on the shapes of the wheels, moreover, ODWs can 
be classified into spherical wheels and Mekanum wheels, the latter also being 
known as ilonators. Spherical wheels have been extensively investigated in the 
Hterature (West and Asada, 1995). We focus here on ODWs of the Mekanum 
type and assume that the robot of interest is equipped with n of these. 
The Mekanum wheel bears a set of rollers mounted along the periphery 
of the wheel hub at a given angle, as shown in Figs. 1.13(a) and 10.19(a). 
Furthermore, the rollers are shaped so that the wheel appears as circular on 
its side view, as shown in Fig. 10.19(b), in order to ensure a smooth motion. 
Pairwise orthogonal unit vectors e^, fj and g^, h^ are defined on the middle 
horizontal planes of the wheel hub and of the roller in contact with the floor, 
respectively. This roller is termed active in the discussion below. Now we aim 
at finding the kinematic relation between the wheel joint rates { 9i }i and the 
Cartesian velocity variables of the robot, namely, the scalar angular velocity oj 
and the 2-dimensional velocity vector c of the platform centroid. To this end, 
we express the velocity 6^ of the centroid Oi of the ith wheel in two different 
forms: first we look at this velocity from the active roller up to the centroid Of, 
then, from the platform centroid C to O^. 
If we relate the velocity of Oi with that of the contact point of the active 
roller with the ground, then we can write, with the aid of Fig. 10.20, 
Pi+Vi 
(10.55) 

10.5 RoUing Robots 
423 
(a) 
(b) 
Figure 10.19: (a) The Mekanum Wheel; (b) its side view 
with v^ defined as the relative velocity of Oi with respect to Pi. Now let cjh and 
Ur denote the angular-velocity vectors of the hub and the roller, respectively, 
i.e.. 
We thus have 
Pi =(jjr ^ Qi-Pi = (wk + Oi^i + (j)i^i) X bk 
where b is the radius of the rollers at the contact point with ground. In addition, 
9i denotes the rate of the wheel hub, while (l)i denotes that of the active roller, 
which are positive in the directions of vectors e^ and g^, respectively. Hence, 
Pi = -b{6ifi + ^ihi) 
(10.56) 
Moreover, 
v^ = a?/j X PiOi = (cjk + 9iei) x (a - b)k 
a denoting the height of the axis of the wheel hub, as shown in Fig. 10.19(b). 
Thus, 
Vi = -Oiia - b)ii 
(10.57) 
thereby obtaining the desired expression for 6^, namely, 
6^ = âaOifi â b^ihi 
(10.58) 
A general layout of the ith ODW with roller axes at an angle a^ with respect 
to the normal e^ to the middle vertical plane of the corresponding hub is shown 
in Fig. 10.21. The subscript i is associated with both the ^th wheel and its 

424 
10. Kinematics of Alternative Robotic Mechanical Systems 
^ t 
Figure 10.20: The active roller of the ith. wheel 
Figure 10.21: The layout of the ith wheel with respect to the robot platform 
active roller. Moreover, the velocity 6j of the ith wheel can be expressed in 
terms of the Cartesian velocity variables, c and cj, as 
6^ = c + cjEd^ 
(10.59) 
where we have used a 2-dimensional vector representation, with d^ defined as 
the vector directed from point C to the centroid Oi of the hub and E defined as 
in eq.(5.55). Furthermore, since all rollers are unactuated and they rotate idly, 
the value of ^i is immaterial to our study. Hence, we eliminate this variable 
from the foregoing equations, which is done by dot-multiplying both sides of 
eq.(10.58) by g^, normal to h^, thereby deriving 
But 
gjd. = 
-aOiglfi 
gjfi = sin ai 

10.5 RoUing Robots 
Therefore, 
gjoi = âa{sinai)Oi 
The same multiplication performed on eq.(10.59) yields 
gf6, = (gfEd,)a; + gfc 
425 
(10.60) 
(10.61) 
Upon equating the right-hand sides of eqs.(10.60) and (10.61), we derive the 
desired relation, namely. 
âa(sinai)^i = kft, 
i = : l , . . . , n 
where the 3-dimensional vector k^ is defined as 
(10.62) 
ki = 
gfEd, 
gi 
and the twist vector t is as defined in eq.(10.41g). We now define the vector of 
wheel rates 0 in the form 
6 = [6i 
62 'â¢â¢ On] 
If the n equations of eq. (10.62) are now assembled, we obtain 
(10.63) 
(10.64) 
where, if we assume that all angles ai are identical and labeled a, then the 
nxn 
Jacobian J and the n x 3 Jacobian K take the forms 
J = âasinal 
K = 
gfEdi 
gf 
(10.65a) 
(10.65b) 
with 1 denoting the nxn 
identity matrix. 
Given eqs.(10.65a) and (10.65b), the differential inverse kinematics can be 
resolved as 
^ 
' " 
(10.66) 
0 = 
-Kt 
asm a 
whence it is apparent that sin a must be different from zero, i.e., the axes of 
the rollers must not be parallel to the axis of the hub. If these axes are parallel, 
then the ODWs reduce to conventional wheels. 

426 
10. Kinematics of Alternative Robotic Mechanical Systems 
10.6 
Exercises 
10.1 For the parallel manipulator of Fig. 10.2, find the matrix mapping joint 
forces into wrenches acting on the moving platform, if actuation is supplied 
through the prismatic joints. 
10.2 Show that, if det(H) of eq.(10.21) is expanded in the form 
det(H) = HiAi - H2A2 + H3A3 
then Ai, A2, and A3 are 14th-, 13th-, and 12th-degree polynomials in r2, 
respectively. 
10.3 What is the counterpart of a decoupled serial manipulator, as described 
in Section 4.4, of a six-dof parallel manipulator with the architecture of 
Fig. 10.2? What is the degree of the characteristic polynomial of that 
parallel manipulator? Compare this answer with the characteristic poly-
nomial derived in Section 4.4. 
10.4 We refer to the rolling robot with conventional wheels introduced in Sub-
section 10.5.1. We would like to study the equivalent concept of manip-
ulability, which here we can call maneuverability. This concept refers to 
the numerical conditioning of the two underlying Jacobian matrices, J and 
K, as defined in eqs.(10.43a & b). Clearly, J is isotropic and hence, op-
timally conditioned. In attempting to determine the condition number of 
K, however, we need to order its singular values from smallest to largest. 
(a) Show that the two singular values of K are ai = l/r and a2 = 2/r. 
Obviously, an ordering from smallest to largest is impossible because 
of the lack of dimensional homogeneity. 
(b) In order to cope with the dimensional inhomogeneity of matrix K, we 
introduce the characteristic length L, which we define below. First, 
we redefine the Jacobian K in dimensionless form as 
K 
(l/r) 
0 
0 
0 
0 
2L/r 
Now, L is the value that minimizes the condition number of the 
dimensionless K. Show that this value is //2 and that it produces a 
condition number of unity. 
10.5 With reference to the robot of Fig 10.17, assume that the motors are 
placed rather on the joints associated with variables ^ and 63. Under 
these conditions, 
(a) Find the matrix ^ maping array [^3 ip]'^ into array [^1 ^2]^-
(b) Is it possible to find values of ip, a, 5, and p that will render * 
isotropic? If so, which are these values? 

10.6 Exercises 
427 
10.6 Find an expression for the angular velocity ^i of the active roller of the ith 
wheel of the robot with Mekanum wheels introduced in Subsection 10.5.2. 
10.7 We refer again to the robot with Mekanum wheels introduced in Subsec-
tion 10.5.2. For the case of a three-wheeled robot of this kind, we consider 
here a design whereby the wheels are equally spaced in a A-array. In this 
array, the centers of the hubs, O^, lie at the corners of an equilateral tri-
angle of side a; moreover, we assume that ai = 90Â°, for z = 1, 2, 3. Under 
these conditions, find the characteristic length L of the robot that renders 
K, as defined in the above-mentioned subsection, dimensionless and of a 
minimum condition number. Find this minimum as well. 
10.8 Find the value of ip at which the rolling robot of Fig. 10.17 attains a 
singular configuration. Here, a singularity is understood as a loss of ma-
neuverability in the sense of not being able to drive the unactuated joints 
by means of the actuated ones. Discuss whether under reasonable values 
of the geometric parameters, this singularity can occur. 
10.9 Determine the architecture and the "posture", i.e., the values of the rele-
vant joint variables of the rolling robot of Fig. 10.17 that will render ma-
trix 0 isotropic, where 0 represents the mapping of actuated joint rates 
into unactuated ones. Is kinematic isotropy, in this sense, kinematically 
possible? 
10.10 Find a relation among the geometric parameters of the robot of Fig. 10.17 
that will allow the steering of the robot along a straight course with the 
highest possible maneuverability in the sense defined in Exercise 10.8. 
That is, find a relation among the geometric parameters of this robot that 
will render K ( 0 ) a minimum along a straight course. 
10.11 Find the value of ip under which the robot of Fig. 10.17 performs a ma-
neuver that leaves the midpoint of segment Oi O2 stationary. Under this 
maneuver, state a relationship among the geometric parameters of the 
robot that minimizes K{S). 
10.12 Upon inversion, eq.(10.54a) yields 
(a) Find U. 
(b) The above equation can be written as 
Oi = U1393 + ui^i^ = ^Jdu 
O2 = U23O3 + t^2^^ = 
^2^u 
The first of the above equations can be integrated if ui, which is 
an implicit function of 63 and ^, is the gradient with respect to 

428 
10. Kinematics of Alternative Robotic Mechanical Systems 
Gu = [03 V^]^ of a scalar function Ui(Os^ip). Likewise, the second of 
the above equations can be integrated if a function C/2(^3,^) exists, 
whose gradient with respect to Ou is U2. Further, upon recalling 
Schwartz's Theorem of multivariable calculus, u^ is such a gradient 
if and only if Vu^, i.e., the Hessian matrix of Ui with respect to 0^, 
is symmetric, for i = 1,2. 
Show that the above-mentioned Hessians, for the case at hand, are 
nonsymmetric, and hence, none of the above differential expressions 
is integrable. Such expressions are called nonholonomic. 
Note: To be sure, the above condition is sufficient, but not neces-
sary. It is possible that some individual equations of a system of 
differential expressions, also called Pfaffian forms, are not integrable 
while the overall system is. An examination of necessary and suffi-
cient conditions for integrability falls beyond the scope of this book. 
Such conditions are best understood with the aid of the Frobenius 
Theorem (De Luca and Oriolo, 1995) and its analog, the Holonomy 
Theorem (Ostrovskaya and Angeles, 1998). 
10.13 For the rolling robot with omnidirectional wheels introduced in Sec-
tion 10.5.2, with a A-array, as described in Exercise 10.7, show that the 
equation yielding the angular velocity of the platform in terms of the wheel 
rates is integrable, but the equations yielding the velocity of the operation 
point are not. 
10.14 A holonomic rolling robot. The robot described in Exercise 10.13 can 
be rendered holonomic at the expense of one degree of freedom. Show 
that if the three wheel rates are coordinated, either mechanically or elec-
tronically so that 
^1 4- ^2 + ^3 = 0 
then the platform is constrained to move under pure translation. When 
operating in this mode, the robot is holonomic. Find an explicit expression 
for the position vector c of the operation point in terms of the wheel angles. 

Chapter 11 
Trajectory Planning: 
Continuous-Path 
Operations 
11.1 
Introduction 
As a follow-up to Chapter 6, where we studied trajectory planning for pick-and-
place operations (PPO), we study in this chapter continuous-path operations. 
In PPO, the pose, twist, and twist-rate of the EE are specified only at the two 
ends of the trajectory, the purpose of trajectory planning then being to blend 
the two end poses with a smooth motion. When this blending is done in the 
joint-variable space, the problem is straightforward, as demonstrated in Chap-
ter 6. There are instances in which the blending must be made in Cartesian 
space, in which advanced notions of interpolation in what is known as the im-
age space of spatial displacements, as introduced by Ravani and Roth (1984), 
are needed. The image space of spatial displacements is a projective space 
with three dual dimensions, which means that a point of this space is speci-
fied by four coordinatesâsimilar to the homogeneous coordinates introduced in 
Section 2.5âof the form Xi 4- e^i, for i = 1,2,3,4, where e is the dual unity, 
which has the property that e^ = 0. The foregoing coordinates are thus dual 
numbers, their purpose being to represent both rotation and translation in one 
single quantity. In following Ravani and Roth's work, Ge and Kang (1995) pro-
posed an interpolation scheme that produces curves in the image space with 
second-order geometric continuity, which are referred to as G^ curves. These 
interpolation techniques lie beyond the scope of the book and will be left aside. 
The interested reader will find a comprehensive and up-to-date review of these 
techniques in (Srinivasan and Ge, 1997). 

430 
11. Trajectory Plajining: Continuous-Path 
Operations 
The purpose of this chapter is to develop motion interpolation techniques 
in Cartesian space that produce smooth motions in both Cartesian and joint 
spaces. Motion interpolation in joint space was discussed in Chapter 6, the 
present chapter being devoted to motion interpolation in Cartesian space. To 
this end, we resort to basic notions of differential geometry. 
11.2 
Curve Geometry 
Continuous-path robotics applications appear in operations such as arc-welding, 
flame-cutting, deburring, and routing. In these operations, a tool is rigidly 
attached to the end-effector of a robotic manipulator, the tool being meant 
to trace a continuous and smooth trajectory in a 6-dimensional configuration 
space. Three dimensions of this space describe the spatial path followed by the 
operation point of the EE, while the remaining three describe the orientation 
of the EE. Some applications require that this task take place along a warped 
curve, such as those encountered at the intersections of warped surfaces, e.g., 
in aircraft fuselages, while the path is to be traversed as a prescribed function 
of time. This function, moreover, is task-dependent; e.g., in arc-welding, the 
electrode must traverse the path at a constant speed, if no compensation for 
gravity is taken into account. If gravity compensation is warranted, then the 
speed varies with the orientation of the path with respect to the vertical. Below 
we will define this orientation as that of the Frenet-Serret frame 
associated 
with every point of the path where the path is smooth. 
Moreover, for functional reasons, the orientation of the EE is given as a 
rotation matrix that is, in turn, a prescribed smooth function of time. In arc-
welding, for example, the orientation of the electrode with respect to the curve 
must be constant. The trajectory planning of the configuration subspace asso-
ciated with the warped path is more or less straightforward, but the planning 
of the trajectory associated with the orientation subspace is less so. 
While most methods of trajectory planning at the Cartesian-coordinate level 
focus on the path followed by the operation point, the underlying inverse kine-
matics of a six-axis robotic manipulator requires the specification of the orienta-
tion of the EE as well. In the presence of simple manipulators with a spherical 
wrist, as those studied in Subsection 4.4.2, the positioning and the orientation 
tasks are readily separable, and hence, the planning of the two tasks can be 
done one at a time. In other instances, e.g., in most arc-welding robots, such a 
separation is not possible, and both tasks must be planned concurrently, which 
is the focus of our discussion below. Here, we follow the technique presented in 
(Angeles et al., 1988). 
Crucial to our discussion is the concept of path orientation. 
Let JT be a 
warped curve in 3-dimensional space that is smooth in a certain interval of 
interest for our discussion. Under these conditions, we can associate with every 
point of this interval an orthonormal triad of vectors, i.e., a set of unit vectors 
that are mutually orthogonal, namely, the tangent^ the normal^ and the binormal 
vectors of JT. Therefore, when this set of vectors is properly arranged in a 3 x 3 

11.2 Curve Geometry 
431 
array, a rotation matrix is obtained. This matrix thus represents the orientation 
of r. In order to parameterize these vectors, let s be the arc length measured 
along r from a certain reference point on this curve. Below we review the basic 
diflFerential-geometric concepts pertaining to our discussion. 
The tangent, normal, and binormal unit vectors, e^, e^, and e?,, respectively, 
associated with every point of F where this curve is smooth, are generically 
termed here the Frenet-Serret vectors. These vectors are defined as 
et = r' 
(11.1a) 
e^ = e^ X et 
(11.1c) 
where r' stands for dr/ds and r" for d^r/ds^. Now the Frenet-Serret relations 
among the three foregoing unit vectors and the curvature K and torsion r oi F 
are recalled (Brand, 1965): 
(11.2a) 
(11.2b) 
(11.2c) 
Moreover, the curvature and torsion can be calculated with the aid of the for-
mulas 
K= llr'xr^'ll 
(11.3a) 
where r'" stands for d^r/ds^. 
Furthermore, differentiation of K and r, as given 
above, with respect to s, yields 
K'{S) = (r' X r'O . ^ 
^ 
(11.4a) 
, 
r^ X r^^ â¢ r(^^) - 2r{r' x r") - (r' x r'") 
where r(*^) stands for d^r/ds^. The geometric interpretation of the curvature is 
the rate of change of orientation of the tangent vector with respect to the arc 
length; that of the torsion is the rate at which the curve quits the plane of the 
tangent and normal vectors. Thus, at points where the curvature vanishes, the 
curve approximates a line to a second order, i.e., up to second-order derivatives, 
whereas at points where the torsion vanishes, the curve approximates a planar 
curve to a third orderâNotice that the torsion involves third-order derivatives. 
aet 
ds 
den 
ds 
deb 
ds 
= 
= 
= 
Ke^fi 
-Ket -f ret 
-ren 

432 
11. Trajectory Planning: Continuous-Path 
Operations 
Now, from the Prenet-Serret formulas and the chain rule, we can derive the 
time-rate of change of the Prenet-Serret vectors, namely. 
as 
. 
_den. 
as 
. _ det . 
as 
(11.5a) 
(11.5b) 
(11.5c) 
Furthermore, let a? be the angular velocity of the Frenet-Serret frame. Then, 
clearly. 
en = UJ X en 
(11.6a) 
(11.6b) 
(11.6c) 
Upon equating pairwise the right-hand sides of eqs.(11.5a-c) and eqs.(11.6a-
c), we obtain three vector equations determining a;, namely. 
-EnOJ = -snet 
+ sre& 
-EfcO? = 
-sren 
(11.7a) 
(11.7b) 
(11.7c) 
where we have introduced the cross-product matrices E^, E^, and E^ of vectors 
et, e^, and e^, respectively, thereby obtaining a system of nine scalar equations 
in the three unknown components of a;, i.e.. 
Aoj = b 
(11.8a) 
Et" 
En 
Bi_ 
, 
b = 
SK/G^i 
s{-Ket + reft) 
-sren 
with A defined as the 9 x 3 matrix and b as the 9-dimensional vector displayed 
below: 
(11.8b) 
Although the foregoing system is overdetermined, it is consistent, and hence it 
comprises exactly three linearly independent equations, the remaining six being 
dependent on the former. One way to reduce system (11.8a) to only three 
equations consists in multiplying both sides of this equation by A^. Now, the 
product A^A greatly simplifies because matrix A turns out to be isotropic, as 
per the discussion of Section 5.8, i.e., its three columns are mutually orthogonal 
and all have the same magnitude. This fact can become apparent if we realize 
that the three 3 x 3 blocks of A are cross-product matrices of three orthonormal 
vectors. Thus, 
A'^ A = EjEt + ElEn + Ef Eft 

11.2 Curve Geometry 
433 
If we now recall Theorem 2.3.4, the foregoing products take on quite simple 
forms, namely, 
EfE, = -E2 = - ( - l + e t e n 
E j E â = - E 2 = - ( - l + eâeJ^) 
Moreover, for any 3-dimensional vector v, we have 
{etef -f e^el -f e6e^)v = v 
and hence, the above sum in parentheses reduces to the identity matrix, i.e., 
etej + e^e^ + e^ef = 1 
the product A^A thus reducing to 
A^A = (2)1 
Therefore, cj takes on the form 
UJ = -[Et 
En 
Bt] 
-STGn 
or upon expansion. 
(jj 
- [KGt y^Gn + ^n^ 
(TC^ â K^t) - reft X en] 
However, since the Frenet-Serret triad is orthonormal, we have 
et X e^ = e^, 
e^ x e?, = e^, 
e?, x e^ = e^ 
(11.10) 
(11.11) 
Upon substitution of expressions (11.11) into the expression for a? given in 
eq.(ll.lO), we obtain 
where 8 is the Darboux vector, defined as 
(11.12) 
(11.13) 
Expressions for the curvature and torsion in terms of the time-derivatives of the 
position vector are readily derived using the chain rule, which leads to 
r x r 
K = 
r X r- r 
r X r 
rl|2 
(11.14a) 
(11.14b) 

434 
11. Trajectory Planning: Continuous-Path 
Operations 
Upon differentiation of both sides of eq.(11.12), the angular acceleration dj 
is derived as 
dj = 's6 + sd 
(11.15) 
where the time-derivative of the Darboux vector is given, in turn, as 
J = ret-f Keft 
(11.16) 
in which eqs.(11.5a-c) have contributed to the simplification of the above ex-
pression. The time-derivatives of the curvature and torsion are readily derived 
by application of the chain rule, thereby obtaining 
k = SK'{S)= 
- ( r ' X r'") â¢ (r' x r") 
(11.17a) 
f = ST'{S)= 
4 [ r ' X r" â¢ r^'") - 2T(r' x r'") â¢ (r' x r")] 
(11.17b) 
The time-derivative of the Darboux vector thus reduces to 
6 = s{Aet-\-Beb) 
(11.18a) 
where scalars A and B are computed as 
r^ X r^^ â¢ r(^^) - 2r{r' x r'") â¢ (r^ x r'') 
(r' X r''0 . (r' x r'O 
(11.18c) 
K 
and hence, the angular acceleration reduces to 
u = sS + s^{Aet + Beb) 
(11.19) 
Prom the relations derived above, it is apparent that the angular velocity 
is a bilinear function of the Darboux vector and s, while the angular acceler-
ation is linear in s and quadratic in s. The computational costs involved in 
the calculation of the angular velocity and its time-derivative amount to 31 
multiplications and 13 additions for the former, and 28 multiplications with 14 
additions for the latter (Angeles et al., 1988). Notice that the angular velocity 
requires, additionally, one square root. 
In the above discussion, it is assumed that explicit formulas for the two 
time-derivatives of the arc length s are available. This is often not the case, as 
we show with the examples below, whereby an intermediate parameter, which 
is easier to handle, is introduced. What we will need are, in fact, alternative 
expressions for the quantities involved, in terms of kinematic variables; i.e., we 
need time-derivatives of the position vector r rather than derivatives of this 
vector with respect to the arc length s. Below we derive these expressions. 

11.3 Parametric Path Representation 
435 
First, note that e^ can be obtained by simply normalizing the velocity vector 
f, namely, as 
e, = ^ 
(11.20) 
where it is not difficult to realize that 
s = ||f|| 
(11.21) 
Moreover, the binormal vector e^ can be derived by application of the chain rule 
to vector r', namely, 
ds 
ds/dt 
sdt^ 
^ 
\ 
â¢ 
J 
But 
and hence. 
r\s) = ^ = T 
(11.22b) 
as 
s 
s dt[s 
sr â sr 
(11.22c) 
Now, upon substitution of expressions (11.22b & c) into eq.(ll.lb), an alter-
native expression for e^, is derived, in terms of time-derivatives of the position 
vector, namely, 
et = ^ ^ ^ 
(11.23) 
| | r x r | | 
Finally, e^ can be readily computed as the cross product of the first two vectors 
of the Frenet-Serret triad, namely, 
(r X r) X f 
/ . . ^.x 
en = ebXet= 
,. ^..im.,, 
(11.24) 
||rxr||||r|| 
The time-derivatives of the Frenet-Serret vectors can be computed by direct 
differentiation of the expressions given above, namely, eqs.(11.20), (11.23), and 
(11.24). 
11.3 
Parametric Path Representation 
Only seldom is an explicit representation of the position vector r of a geometric 
curve possible in terms of the arc length. In most practical cases, alternative 
representations should be used. The representation of the position vector in 
terms of a parameter cr, whatever its geometric interpretation may be, whether 
length or angle, will henceforth be termed a parametric representation of the 

436 
11. Trajectory Planning: Continuous-Path 
Operations 
curve at hand. The choice of a is problem-dependent, as we illustrate with 
examples. 
Below we derive expressions for (a) the Frenet-Serret triad; (b) the curvature 
and torsion; and (c) the derivatives of the latter with respect to the arc length. 
All these expressions, moreover, will be given in terms of derivatives with respect 
to the working parameter a. The key relation that we will use is based on the 
chain rule, already recalled several times earlier. Thus, for any vector v(a), 
dv _ dv da 
ds 
da ds 
However, the foregoing relation is not very useful because we do not have an 
explicit representation of parameter a in terms of the arc length. Nevertheless, 
we will assume that these two variables, s and a, obey a monotonic relation. 
What this means is that 
^ 
> 0 
(11.25) 
as 
which is normally the case. Under this assumption, moreover, we can write the 
derivative of v as 
dv _ 
dv/da 
ds 
ds/da 
where, apparently, 
/I o 
II /7-*Â» II 
= 
||r'(<7) 
da 
ds 
da 
Therefore, the derivative sought takes the form 
d-v _ 
V'((T) 
ds - ||r'(<7)|| 
It goes without saying that the same relation holds for scalars, i.e., 
dv _ 
V'{G) 
~ds ~ ||r'(a)|| 
Expressions for the Frenet-Serret triad now follow immediately, i.e.. 
(11.26a) 
(11.26b) 
||r'(cr) X r"(cr)|| 
\\r'{a) xr"(cr)||||r'(or)|| 
Now, paraphrasing relations (11.14a & b), we have 
| | r Â» x r " ( c 7 ) | | 
"- 
Wr'iaW 
^ ^^^^ 
r'(a)xr"(a)-r"' 

11.3 Parametric Path Representation 
437 
the partial derivatives of the curvature and torsion with respect to the arc length 
being computed in terms of the corresponding partial derivatives with respect 
to the parameter a, which is done with the aid of the chain rule, i.e., 
Expressions for /^'(cr) and r'(cr), in turn, are derived by a straightforward differ-
entiation of the expressions for K and r in terms of cr, as given in eqs.(11.28a & 
b). To this end, we first recall a useful expression for the derivative of a rational 
expression q{x) whose numerator and denominator are denoted by N{x) and 
D{x), respectively. This expression is 
Q'ix) = ^[N'{x) 
- q{x)D'{x)] 
(11.30a) 
Note that nothing prevents the numerator of the foregoing rational expression 
from being a vector, and hence, a similar formula can be applied to vector ratios 
as well. Let the denominator of a vector rational function q{x) be n{x). Under 
these conditions, then, we have 
q'(^) = ^[^'(^) 
- q(^)^'W] 
(ll-30b) 
As a matter of fact, the above relation can be extended to matrix numerators. 
Not only is this possible, but the argument can likewise be a vector or a matrix 
variable, and similar formulas would apply correspondingly. 
We thus have, for the derivative of the curvature. 
K'{a) = \r'(a) 
^||r'(a)xr"(<r)||-KÂ£||r'(a)||3 
(11.31) 
Now we find the first term inside the brackets of the foregoing expression from 
the relation 
4-\W{(j) X r''(a)|P = 2||r' X r''||-^||r' x r''|| 
da 
da 
which yields 
But 
Â±\\r' 
X r^'ll = _ J - _ A | | r ' ( a ) x 
r"{a)f 
da 
2 r' x r"\\ da 
^||r'(<7) X r"ia)r 
= ^{[^'i<^) x r"(^)] â¢ [r'{a) x r"{a)]} 
= 2[r'(a) X r"(a)] â¢ ^[r'{a) 
x r"(a)] 
(11.32) 
da 
the derivative of the above term in brackets reducing to 
^[r'i<7)xT"ia)]=r'ia)xr"'{a) 

438 
11. Trajectory Planning: Continuous-Path 
Operations 
and hence, 
d ,, , ^ ^â|| _ [r'(a)xr"(a)]-[r'(a)xr'"(a)] 
d^ll'^ """^ " - 
||r'xr"|| 
^^^â¢^^^-' 
Furthermore, 
^||r'(a)||='=3||r'(a)|p^||r'(a) 
the last derivative again being found from an intermediate relation, namely. 
whence. 
with 
and so. 
Therefore, 
^,|r'(<7)||2 = 2||r'(a)||^||r'(a) 
lll'-'(^)ll=%k^ll'^'^^)ll^ 
l^llr'WlP = ^[r'(a)-r'{a)] 
= 
2r'ia)-T"{a) 
d^ll'^'^^ll- 
||r'(a)|| 
d^ll"^")ll 
^||r'(c7)|p = 3||r'(<7)||r'(a) â¢ r"(a) 
(11.33b) 
Substitution of eqs.(l 1.33a & b) into eq.(11.31) yields the desired expression, 
namely, 
[r'{a)xv"ia)].[r'{a)xr"'ia)] 
- r'(a)-r"(a) 
'* ('^^ 
||r'(a)||3||r'xr"|| 
^'^ ||r'(a)|P 
^^^"^'^^ 
Likewise, 
r'icj) = I 
(11.35a) 
with N and JD defined as 
N = ^[r'ia) 
X r"ia)-r"'{a)]-T^\\T'{a) 
x r"(a)||2 
(11.35b) 
Â£) = ||r'(a) X r"((7)|p 
(11.35c) 
The first term of the numerator N of the foregoing expression can be readily 
calculated as 
-^[r'ia) 
x r"(a) â¢ r"'{a)] = r'{a) x r"(a) â¢ r^'''\a) 
(11.35d) 

11.3 Parametric Path 
Representation 
439 
while the derivative appearing in the second term of the same numerator was 
obtained previously, as displayed in eq.(11.32). Upon substitution of the ex-
pressions appearing in eqs. (11.32) and (11.35d) into eq. (11.35a), we obtain the 
desired expression: 
r'ia) 
r'{a) X r"((T) â¢ [r(*''\a) - 2Tr'(a) x r"'(<7)] 
\\r'{a)xr"{aW 
thereby completing the desired relations. 
(11.35e) 
Example 11.3.1 (Planning of a gluing operation) A robot used for a glu-
ing operation is required to guide the glue nozzle fixed to its end-effector through 
a helicoidal path so that the tip of the nozzle traverses the helix at a constant 
speed VQ = 0.8m/s and the end-effector maintains a fixed orientation with respect 
to the curve, i.e., with respect to the Prenet-Serret triad of the helix. Determine 
the orientation matrix Q of the end-effector with respect to a frame {x, y, z} 
fixed to the robot base, as well as the angular velocity and angular acceleration 
of the end-effector. The operation is to be performed with a Fanuc S-300 robot, 
whose Denavit-Hartenberg (DH) parameters are given in Table 11.1, while the 
axis of the helix is chosen to be parallel to the first axis of the robot and beginning 
at point PQ (2, â2, 1.2) in meters. Find the joint trajectories of the robot as 
well as the associated joint rates and joint accelerations from Cartesian position, 
velocity, and acceleration data. Verify that the joint-rate and joint-acceleration 
profiles are compatible with those of the joint variables. It is known that the 
radius of the helix is a = \.^ m and that its pitch is b = 2.5 m/turn. 
Finally, 
the gluing seam spans through one quarter of a helix turn. 
Table 11.1: DH Parameters of a Fanuc S-300 Robot 
Link 
1 
2 
3 
4 
5 
6 
ai (m) 
0.0 
0.9 
0.95 
0.0 
0.0 
0.0 
bi (m) 
0.9 
0.0 
0.0 
1.3 
0.0 
0.44 
ai (deg) 
90 
0 
90 
-90 
90 
-90 
Solution: We will use a Cartesian frame fixed to the base of the robot such that 
its z axis coincides with the axis of the first revolute. The helix can then be 
given in the parametric representation shown below: 
X = 2 + a cos (p 
y â â2-\-asmi^ 
z = \.2-\-
b(p 
2^ 

440 
11. Trajectory Planning: Continuous-Path 
Operations 
(deg) 
^3 
(deg) 
(deg) 
8 
9 
10 
Figure 11.1: Joint trajectories for a Fanuc S-300 
where the parameter ^ is the angle made by the projection, onto the X-Y 
plane, of the position vector of a point P of the helix with the x axis. In the 
process, we will need first and second time-derivatives of the foregoing Cartesian 
coordinates. These are given below for quick reference: 
X = âaip sin ip 
y â a(p cos ^ 
b . 
and 
X = âaip cos ^ â a(p sm ^ 
y = âa<p^ sin ^ -\- aCp cos </? 

11.3 Parametric Path 
Representation 
441 
t (s) 
t (s) 
Figure 11.2: Joint velocities for a Fanuc S-300 
We now impose the constant-speed condition, which leads to 
62 
x'^ +y^ + z^ = a^ip'^ + ^ < ^ ^ = vl 
and hence, 
(p = c 
where the constant c is defined as 
C = Vo 
47r2 
47r2a2 + 62 
Thus, (p is constant, and hence. 
ip = ct 

442 
11. Trajectory Planning: Continuous-Path 
Operations 
Moreover, in terms of constant c, the Cartesian coordinates of a point of the 
helix take on the forms 
X = 2-\- a cos ct 
y = â2 + asinct 
ZTT 
the first time-derivatives of these coordinates becoming 
X = âac sin c^ 
y = ac cos ct 
z = 
6c 
27r 
and the corresponding second time-derivatives 
X = âac^ cos ct 
y = âa(? sin ct 
Now the Prenet-Serret triad is readily calculated as 
dx 
f 
ds 
s 
vo 
âasinct 
a cos ct 
h/2TT 
Furthermore, 
ds 
ft 
s 
ac^ 
â cos ct 
â sin ct 
0 
from which it is apparent that 
A-K^a 
K = aâ^ = 
'2 - 47r2a2 + 62' 
^n â 
KGr, 
COS ct 
sinc^ 
0 
Thus, the binormal vector e^ is calculated simply as the cross product of the 
first two vectors of the Frenet-Serret triad, namely. 
e^ = et X e^ = 
- {b/27r) sin ct 
{b/27r) cos ct 
âa 
and hence, the orientation matrix Q of the gluing nozzle, or of the end-effector 
for that matter, is given by 
Q = [et 
en 
eb] 

11.3 Parametric Path 
Representation 
443 
Hence, 
^'0 
âasinct 
â{VQ/C) COSct 
{h/^ir) sin ct 
a cos ct 
â(vo/c) sin ct 
â {b/2TI:) cos ct 
{b/27r) 
0 
a 
Now, the angular velocity is determined from eq.(11.12), which requires the 
calculation of the Darboux vector, as given in eq.(11.13). Upon calculation 
of the Darboux vector and substitution of the expression thus resulting into 
eq.(11.12), we obtain 
cv = 
0 
0 
= c 
which is thus constant, and hence, 
a; = 0 
Now, the coordinates of the center of the wrist, C, are determined with the 
aid of relation (4.18c), where the operation point is a point on the helix, i.e., 
p = xi -\- yj -\- ^k, parameters be, Ae, and fie being obtained from Table 11.1, 
namely, 
be = 0.440 m, 
Ae = cosae = 0 , fie = sinae = â1 
Furthermore, the numerical value of c is obtained from the helix geometry, 
namely. 
0.8 
47r2 
= 0.48522 s - 1 
47r2 X 1.62 + 2.52 
Upon substitution in eq.(4.18c) of the entries found above for Q, along with the 
numerical values, we obtain the Cartesian coordinates of the center C of the 
spherical wrist of the robot as 
xc 
yc 
zc 
2 + 1.16cos(0.48522t) 
- 2 + 1.16sin(0.48522t) 
1.2 + 0.19306^ 
in meters. Apparently, point C describes a helicoidal path as well, although of 
a smaller radius, that is coaxial with the given helix. 
Now the time-histories of the joint angles are computed from inverse kine-
matics. Note that the robot at hand being of the decoupled type, it allows for 
a simple inverse kinematics solution. The details of the solution were discussed 
extensively in Section 4.4 and are left as an exercise to the reader. 
Of the four inverse kinematics solutions of the arm, three were found to lead 
to link interferences, when these trajectories were tested with the aid of RVS, the 
package for robot visualization developed at McGill University (Darcovich et al., 
1999). Hence, only one such solution is physically possible. This solution, along 
with one of the two wrist solutions, is plotted in Fig. 11.1, with Figs. 11.2 and 
11.3 showing, respectively, the corresponding joint rates and joint accelerations. 

444 
11. Trajectory Planning: Continuous-Path 
Operations 
8 
9 
10 
Figure 11.3: Joint accelerations for a Fanuc S-300 
Note that the maxima and minima of the joint-variables occur at instants 
where the corresponding joint rates vanish. Likewise, the maxima and minima 
of joint rates occur at instants where the associated joint accelerations vanish, 
thereby verifying that the computed results are compatible. A more detailed 
verification can be done by numerical differentiation of the joint-variable time-
histories. 
Example 11.3.2 (Planning of an arc-welding operation) A spherical re-
servoir of radius R is to be arc-welded to a cylindrical pipe of radius r, with the 
axis of the cylinder located a distance d from the center of the sphere^ all elements 
of the cylinder piercing the sphere, i.e., d -\- r < R, as shown in Fig. 11.4-
Note that two intersection curves are geometrically possible, but the welding will 
take place only along the upper curve. Moreover, the welding electrode is to 
traverse the intersection curve, while the tool carrying the electrode is to keep a 
constant orientation with respect to that curve. In the coordinate frame shown 

11.3 Parametric Path 
Representation 
445 
in Fig. 11.4, find an expression for the rotation matrix defining the orientation 
of the end-effector, to which the electrode is rigidly attached. 
(a) 
(b) 
Figure 11.4: Intersection curve between a spherical reservoir and a cylindrical 
pipes 
Solution: Note that the X axis of the coordinate frame indicated in Fig. 11.4 
intersects the A axis of the cylinder, this axis being parallel to the Z axis. 
Moreover, we define </? as the angle shown in Fig 11.4(b). Now, the x and y 
coordinates of an arbitrary point of the intersection curve are given by 
X = d + r cos (p 
^ = r sin (/? 
(11.36a) 
(11.36b) 
Further, in order to find the remaining z coordinate, we use the equation of 
the sphere, <S, namely. 
S: 
x'^-\-y'^ + z^ le 
If we substitute the x and y coordinates of the intersection curve in the above 
equation and then solve for the z coordinate in terms of (/?, we obtain 
;^ = Â± V i ? 2 _ ^ 2 _ ^ _ 2 d r COS(/? 
(11.36c) 
In the above relation, the plus and minus signs correspond to the upper and 
lower portions of the intersection curve, respectively. Since we are interested in 

446 
11. Trajectory Plajining: Continuous-Path 
Operations 
only the upper intersection, we will take only the positive sign in that relation. 
Furthermore, we define 
d = Xr, 
R = fir 
where A and fi are nondimensional constants. Moreover, let 
1 
yjfp' â 2 A COS V? 
the inequality following from the geometry of Fig. 11.4(b). Then, the position 
vector r of any point on the intersection curve can be expressed in the form 
A + cos Kp 
sine/? 
\l(p 
(11.37) 
Now, upon differentiation of r with respect to (/?, we obtain 
â smcp 
COS(/? 
\(p sin (/? 
r"((p)=r 
â¢ C O S ( ^ 
-sin(p 
\(p cos </? â (A^ sin Kp)(p'^ 
(11.38a) 
(11.38b) 
where we have used the relation 
(f){^) â â (Asin(/?)(p^ 
In addition, using eqs.(11.38a &; b), we derive the items needed to compute the 
Frenet-Serret triad, from which we will derive the required orientation matrix, 
i.e.. 
r'((/?)xr''(v?)=r2 
\(p â }?(p^ cos </? sin^ (p 
1 
(11.39a) 
(11.39b) 
(11.39c) 
with functions D{^Lp) and G(</?) defined as 
D = p^X^ + A^ + p^ - Gp^'XiX^ + p'') cosip + 6X\X'' + 2^^) cos^ ^ 
+ 2A^(p^ - 4) cos^ ip - 3A^ cos^ ip 
(11.39d) 
G = i / T f A V ^ h ^ 
(11.39e) 

11.3 Parametric Path 
Representation 
447 
Now e^, e^, and en are obtained as 
llr'MII 
G 
-sine/? 
cosy? 
[ A(^ sin (/? 
1 
0^y/DG 
a 
Xif â X'^ip^ cos ip sin^ (/? 
-X^0^ 
sin^ (/? 
1 
n6 
sin"" (/? â cos ip 
A^(^^ cos (p sin^ Lp â X^^fP" sin (/? â sin (/? 
A(^ cos (p â A^(^^ sin^ (/? 
<P 
n-r 
) 3 v ^ 
(p^yfDG 
(11.40a) 
(11.40b) 
(11.40c) 
where e^ has been calculated as e^ = e^ x e^. 
The orthogonal matrix defining the orientation of the end-effector can now 
be readily computed as 
Q = [et 
en 
66 ] 
for we have all the necessary expressions. Note, however, that these expressions 
allow us to find Q for any value of (/?, but we do not have, as yet, an expression 
of the form (/?(t) that would allow us to obtain Q(^). Such an expression is 
derived in Example 11.5.1. 
Example 11.3.3 (Calculation of torsion, curvature, and Darboux vec-
tor) We refer here to the intersection curve of Example 11.3.2, for which we 
want to find expressions for its curvature, torsion, and Darboux vector. 
Solution: We can use directly the expressions derived above, eqs.(l 1.28a & 
b), to obtain the curvature and torsion in terms of derivatives with respect to 
parameter ip. With these expressions and those for the Prenet-Serret triad, the 
Darboux vector would follow. However, we can take shortcuts, for we already 
have expressions for the Prenet-Serret triad, if we express the curvature and 
torsion in terms of this triad and its derivatives with respect to </?, as we explain 
below. Indeed, from the Prenet-Serret relations, eqs.(11.2b), we can express the 
curvature and torsion in the forms 
r= -ej,(s) -en 
(11.41a) 
(11.41b) 
and hence, all we need now are the derivatives of the tangent and normal vectors 
with respect to s. These are readily derived using relation (11.26a), i.e.. 
e'tis) = l|r'(v)ll 
e;(.) = 
- ^ ^ 
\r'{v)\\ 
(11.42a) 
(11.42b) 

448 
11. Trajectory Planning: Continuous-Path 
Operations 
Now, in order to differentiate the Prenet-Serret triad with respect to (/?, we 
first note, from eqs.(11.40a-c), that these three expressions are vector rational 
functions, and hence, their derivatives with respect to (p are derived by applying 
eq.(l 1.30b), thereby obtaining 
e't{v>) = 
-^[n't(<p)-etG'{<fi)] 
BUV.) = ^ 
jn'^M - e, [3^V'(V)^ + ^ ' ^ ] } 
(11.43) 
(11.44) 
where n^ and nj are the numerators of the vector rational expressions of ej 
and Cfc, respectively, given in eq.(l 1.40a & b). Below we calculate the foregoing 
derivatives with respect to ip: 
ni(v') 
â COS(p 
â simp 
A<^(cos ip â A<^^ sin^ <^) 
<iv^) = A 
(f)' â XifP" sin v?[3(^' cos (/? sin </? -f (^(3 cos^ ^ â \)] 
â3A(^^ sin Lp[(p' sin </? + (^ cos ^] 
0 
if' =0'{ip) = 
-Xsin^p 
(/92-2AcOS(/9)3/2 
D'(ip) =6p^A(A^ H-p^)sin<^- 12A^(A^ + 2y9^) cos(/?sin</? 
- 6A^(p^ - 4) cos^ (/? sin (/? + 12A^ cos^ ^p sin (/? 
G'(VP) = A^ sin (/? 
2G 
{2ipcosip-\- ip' siiKp) 
and ||r'((/?)|| was already calculated in Example 11.3.2. 
If we now substitute all the foregoing expressions into eqs.(l 1.42a & b), we 
obtain, after intensive simplifications, 
VDcp^ 
K = 
r = - 3 
X^LpEsmi^ 
rDG^ 
(11.45a) 
(11.45b) 
with function E{i^) defined, in turn, as 
E{(p) = â¢T4[-A^(^^sin'*(p +A<^^sin^(/?(Acos(/?-1)+cos(p] 
(11.46) 
With the foregoing expressions for e^, e^, r, and K, computing the Darboux 
vector of the intersection curve reduces to a routine substitution of the foregoing 
expressions into eq. (11.13). 

11.4 Parametric Splines in Trajectory Planning 
449 
11.4 
Parametric Splines in Trajectory Planning 
Sometimes the path to be followed by the tip of the end-effector is given only 
as a discrete set of sampled points {Pi}^- 
This is the case, for example, if the 
path is the intersection of two warped surfaces, as in the arc-welding of two 
plates of the hull of a vessel or the spot-welding of two sheets of the fuselage of 
an airplane. In these instances, the coordinates of the sampled points are either 
calculated numerically via nonlinear-equation solving or estimated using a vision 
system. In either case, it is clear that only point coordinates are available, while 
trajectory planning calls for information on derivatives of the position vector of 
points along the path with respect to the arc length. These derivatives can be 
estimated via a suitable interpolation of the given coordinates. Various inter-
polation schemes are available (Foley and Van Dam, 1982; Hoschek and Lasser, 
1992), the most widely accepted ones being based on spline functions, which 
were introduced in Section 6.6. The splines introduced therein are applicable 
whenever a function^ not a geometric curve, is to be interpolated. However, 
in trajectory planning, geometric curves in three-dimensional space come into 
play, and hence, those splines, termed nonparametric, are no longer applicable. 
What we need here are parametric splines, as described below. 
Although parametric splines, in turn, can be of various types (Dierckx, 1993), 
we will focus here on cubic parametric splines because of their simplicity. 
Let Pi{xi, yi, Zi), for i = 1,..., iV, be the set of sampled points on the path 
to be traced by the tip of the end-effector, {pi}^ being the set of corresponding 
position vectors. Our purpose in this section is to produce a smooth curve F 
that passes through {Pi}^ and that has a continuous Frenet-Serret triad. To 
this end, we will resort to the expressions derived in Section 11.3, in terms of a 
parameter cr, which we will define presently. 
We first introduce a few definitions: Let the kih derivative of the position 
vector p of an arbitrary point P of F with respect to a, evaluated at P^, be de-
noted by pj \ its components being denoted correspondingly by a:j \ y\ ^, and 
z] K Next, the coordinates of P are expressed as piecewise cubic polynomials 
of a, namely, 
x{a) = A^i{a - ai)^ + B^^iia - Gif -f C:,i{a - Oi) + Da;z 
(11.47a) 
y{G) = Ayi{a - Gif + Byi{G - Gif + Cyi{G - Gi) 4- Dyi 
(11.47b) 
Z{G) = Azi{G - Gif + B;,i{G - Gif + Czi{(J - (Ji) + D:,i 
(11.47c) 
for a real parameter cr, such that GI <G < a^+i, and 2 = l,...,iVâ1, with GI 
defined as 
(71=0, 
(Ji+i =cri-h AcTi, 
Aa-^ = y Arcf + A^/f + A;2;? (11.47d) 
^Xi = Xi-^i - Xi, 
Ayi = 2/i+i - t/i, 
Azi = ZiJ^i - Zi (11.47e) 
and hence, Acr^ represents the length of the chord subtended by the arc of path 
between Pi and P^+i. Likewise, G denotes a path length measured along the spa-
tial polygonal joining the N points { Pi}i^. Thus, the closer the aforementioned 

450 
11. Trajectory Planning: Continuous-Path 
Operations 
points, the closer the approximation of Adi to the arc length between these two 
points, and hence, the better the approximations of the curve properties. 
The foregoing spline coefficients Axi, Ayi, ..., Dzi, for i = 1,..., iV â 1, are 
determined as explained below. Let us define the TV-dimensional vectors 
X = [Xi, . . . ,X]Sf\ 
, 
X 
= [X^, . . , ,X]yj\ 
y = [y,,...,y^f, 
y" = 
[yl...,y'^f 
Jl i T 
2. = [ZI,...,ZNY, 
Z" = [Z",. â¢ â¢ ) ^ATJ 
(11.48a) 
(11.48b) 
(11.48c) 
The relationships between x, y, and z and their counterparts x", y", and z" 
are the same as those found for nonparametric spHnes in eq.(6.58a), namely, 
Ax" = 6Cx 
Ay" = 6Cy 
Az" = 6Cz 
(11.49a) 
(11.49b) 
(11.49c) 
which are expressions similar to those of eq.(6.58a), except that the A and C 
matrices appearing in eq.(l 1.49b) are now themselves functions of the coordi-
nates of the supporting points (SP) of the spline. In fact, the (N â 2) x N 
matrices A and C are defined exactly as in eqs.(6.58b & c), repeated below for 
quick reference: 
A = 
ai 
2ai,2 
0:2 
0 
0 
Q!2 
2Q;2,3 
as 
0 
0 
0 
0 
and 
C = 
0 
- 0 
Pi 
0 
0 
0 
0 
0 
-/3l,2 
02 
0 
0 
0 
P2 
-/32,3 
0 
OLjsfni 
0 
h 
PN'" 
2aN',"N" 
aN" 
âPN',"N" 
PN" 
OL]S[ii 
IOLN "N' 
0 
0 
PN" 
âpN,"N' 
0 
Â«iV' 
0 
0 
0 
PN' 
(11.49d) 
(11.49e) 
where a^ and /3k are now defined correspondingly, i.e., for ij^k = 1,..., AT', 
ak = AcTfc, 
aij =ai + aj, 
pk = l/o^fc, 
Pij = A + Pj 
(11.50) 
while N\ N'\ and TV' are defined as in eq.(6.58f), i.e., as 
N' = N-1, 
N" = N-2, 
N'''=N-3 
(11.51) 
Note that the spline p{a) is fully determined once its coefficients are known. 
These are computed exactly as their counterparts for nonparametric splines. 

11.4 Parametric Splines in Trajectory Planning 
451 
namely, as in eqs.(6.55a-e). Obviously, different from the aforementioned for-
mulas, the coefficients of the parametric spline pertain to three coordinates, and 
hence, three sets of such coefficients need be computed in this case. In order to 
simplify matters, we introduce the vectors below: 
afc = 
^xk 
^yk 
Azk 
5 
bfc = 
Bxk 
Byk 
_Bzk _ 
, 
Cfc = 
Cxk 
Cyk 
_Czk _ 
5 
dfc = 
Dxk 
Dyk 
_D,k 
(11.52) 
and thus, the position vector of an arbitrary point P on the parametric spline 
takes on the form 
p{a)=:^j,{G-Gkf+hk{G-akf-^Ck{a-ak)-\-dk, 
fc 
= 1,...,7V-1 (11.53a) 
in the interval Ok <(J < (Jk^-i- The counterpart set of eqs.(6.55a-e) is then 
1 
afe 
6A(7fc (Pfe+i - Pfe) 
A(7fc 
6 
Apfc = Pfc+i - Pfc 
where vectors p^ and p'^ are defined as 
PA; = 
Xk 
Vk 
Zk 
II 
_ 
PA; = 
^k 
y'l 
(11.53b) 
(11.53c) 
(11.53d) 
(11.53e) 
(11.53f) 
(11.54) 
Note that since p is piecewise cubic in a, p' is piecewise quadratic, whereas p'' 
is piecewise linear in the same argument, p''' being piecewise constant; higher-
order derivatives vanish. Properly speaking, however, the piecewise constancy 
of p'" causes the fourth-order derivative to be discontinuous at the SP, and con-
sequently, all higher-order derivatives are equally discontinuous at those points. 
In practice, these discontinuities are smoothed out by the inertia of the links 
and the motors, if the SP are chosen close enough. Obviously, higher-order 
continuity can be achieved if higher-order splines, e.g., quintic splines, are used 
instead. For the sake of conciseness, these splines are not discussed here, the 
interested reader being directed to the specialized literature (Dierckx, 1993). 
Further, the N x 3 matrices P and P " are defined as 
P = 
^Pf 
P^ 
T 
LpAr 
P " = 
(P'l')^ 
(P^)^-l 
(11.55) 

452 
11. Trajectory Planning: Continuous-Path 
Operations 
which allows us to rewrite eqs.(l 1.49b) in matrix form as 
A P ' = 6CP 
(11.56) 
It is now apparent that the spline coefficients a^, ..., d^; can be calculated once 
vectors pj^' are available. These vectors can be computed via matrix P'' as the 
solution to eq.(11.56). However, finding this solution requires inverting the {N â 
2) X N matrix A, which is rectangular and hence cannot be inverted, properly 
speaking. We thus have an underdetermined system of linear equations, and 
further conditions are needed in order to render it determined. Such conditions 
are those defining the type of spline at hand. For example, closed paths call 
naturally for periodic splines, while open paths call for other types such as 
natural splines. The conditions imposed on periodic parametric splines are 
listed below: 
Piv = pi, PN = Pi 5 Piv = Pi 
(11.57a) 
On the other hand, natural parametric splines are obtained under the con-
ditions 
P1' = P';^ = 0 
(11.57b) 
Thus, if a periodic parametric spline is required, then vectors p;v and p ^ can be 
deleted from matrices P and P", respectively, these then becoming (iV â 1) x 3 
matrices, namely. 
P = 
T 
PN-1 
P" = 
r 
(p'l')^ 
(p'^. -/)J 
(11.58) 
Moreover, the first-derivative condition of eq.(11.57a) is added to the AT â 2 
continuity conditions of eq.(6.56), thereby obtaining N â 1 equations of this 
form. Consequently, A becomes an (iV â 1) x (AT â 1) matrix. Correspondingly, 
C also becomes an {N â 1) x (N â 1) matrix, i.e., 
A = 
and 
C = 
2Q;I_JV' 
Oil 
0 
0 
OlN' 
-01,N' 
0 
0 
ai 
2Q:I,2 
02 
0 
0 
01 
- A ,2 
P2 
0 
0 
0 
^ 2 
2a2,3 
0 
0 
02 
-/?2,3 
0 
0 
0 
as 
apfiii 
0 
0 
03 
0N'" 
OlN" 
â0N"',N" 
0N" 
OCN' 
1 
0 
0 
OlN" 
2aN" ,N' J 
I3N' 
0 
0 
PN" 
â0N",N' 
(11.59a) 
(11.59b) 

11.4 Parametric Splines in Trajectory Planning 
453 
Since A is nonsingular, eq.( 11.56) can be solved for P^', namely, 
(11.60) 
thereby computing all vectors {p/.^}i "S from which p'^^ can be readily obtained. 
Hence, the spline coefficients follow. 
Likewise, if natural parametric splines are used, then P'^ becomes an (A^ â 
2) X 3 matrix, while A, consequently, becomes an (TV â 2) x (A^" â 2) matrix, as 
given in eq.(6.59). 
Table 11.2: The Cartesian coordinates of the supporting points 
^ 
X 
y 
z 
^ 
X 
y 
z 
0Â° 
0.45 
0 
0.396863 
180Â° 
0.15 
0 
0.580948 
30Â° 
0.429904 
0.075 
0.411774 
210Â° 
0.170096 
-0.075 
0.570475 
60Â° 
0.375 
0.129904 
0.45 
240Â° 
0.225 
-0.129904 
0.540833 
90Â° 
0.3 
0.15 
0.497494 
270Â° 
0.3 
-0.15 
0.497494 
120Â° 
0.225 
0.129904 
0.540833 
300Â° 
0.375 
-0.129904 
0.45 
150Â° 
0.170096 
0.075 
0.570475 
330Â° 
0.429904 
-0.075 
0.411774 
Example 11.4.1 (Spline-approximation of a warped path) For the nu-
merical values R â 0.6 m, r =:= 0,15 m^ and d â 0.3 m, determine the peri-
odic parametric cubic spline approximating the intersection of the sphere and 
the cylinder of Fig, 11.4, '^^'^^h 12 equally spaced supporting points along the 
cylindrical coordinate Lp, i.e,, with supporting points distributed along the inter-
section curve at intervals A^ â 30Â°. Using the spline, find values of the tangent, 
normal, and binormal vectors of the curve, as well as the rotation matrix Q. 
In order to quantify the error in this approximation, compare (i) the compo-
nents of the two position vectors, the exact and the spline-generated ones, while 
normalizing their differences using the radius of the cylinder r; and (ii) the 
Euler-Rodrigues parameters of the exact and the spline-approximated rotation 
matrices. Plot these errors vs. (p. 
Solution: We use eq,(11.37) to find the Cartesian coordinates of the supporting 
points. The numerical results are given in terms of the components of r = 
[x, y, zY in Table 11.2. Note that this table does not include the Cartesian-
coordinate values at 360Â° because these are identical with those at 0Â°. 
The four Euler-Rodrigues parameters {r^jf^Q of the rotation matrix are 
most suitably calculated in terms of the linear invariants, i.e., as appearing 
in eq.(2.78). If we let p and r denote the estimates of p and r, respectively, 
then the orientation error is evaluated via the the four differences Ar-i = r^ â F^, 
for i = 0,... ,3. The positioning error is computed, in turn, as the normalized 

454 
11, Trajectory 
Planning: 
Continuous-Path 
Operations 
x10 
â¬z 
0 
100 
150 
if (deg) 
300 
350 
xlO"' 
50 
100 
150 
200 
if (deg) 
Figure 11.5: Plots of the positioning errors 
350 
difference e ~ (p â P ) / T to yield a dimensionless number, its components being 
denoted by Cx, e^, and e^. The components of the two errors are plotted vs. ip 
in Figs. 11.5 and 11.6. Note that the orientation errors are, roughly, one order 
of magnitude greater than the positioning errors. 
11.5 
Continuous-Path Tracking 
When a continuous trajectory is to be tracked with a robot, the joint angles 
have to be calculated along a continuous set of poses of the end-effector. 
In 
practice, the continuous trajectory is sampled at a discrete set of close-enough 
poses { sy^ }j^ along the continuous trajectory. Then in principle, an IKP must be 
solved at each sampled pose. If the manipulator is of the decoupled type, these 
calculations are feasible in a fraction of a millisecond, for the solution reduces, 
in the majority of the cases, to a cascading of quadratic equations. In the worst 
case, the inverse kinematics of a decoupled manipulator requires finding all the 
roots of a quartic equation at each sampled pose, but this is still feasible in the 
same time frame, for the four roots of interest can be calculated from formulas. 
However, if the manipulator has an architecture not lending itself to a simple 
solution and requires solving polynomials of a degree higher than four, then 
finding all solutions at each sample pose may require a few milliseconds, which 

11.5 Continuous-Path 
Tracking 
0.01 r 
0.005 [ 
Ari 
-o.oosi 
-0.01 I 
100 
200 
if (deg) 
0.01 
0.005 
-0.005 
-0.01 
455 
0 
0.01 
Aro 
0.01 
100 
200 
^ (deg) 
300 
100 
200 
(/? (deg) 
100 
200 
300 
cp (deg) 
Figure 11.6: Plots of the orientation errors 
may be too slow in fast operations. Hence, an alternative approach is needed. 
The alternative is to solve the IKP iteratively. That is, if we have the value 
of the vector of joint variables 0{tk) and want to find its value at t^+i, then we 
use Algorithm 11.5.1. 
Various procedures are available to find the correction A6 of Algorithm 11.5. 
The one we have found very convenient is based on the Newton-Gauss method 
(Dahlquist and Bjorck, 1974). In the realm of Newton methodsâthere are 
several of these, the Newton-Gauss and the Newton-Raphson methods being 
two of this classâthe closure equations (4.9a &: b) are written in the form 
f (0) = Sd 
(11.61) 
where s^; is the 7-dimensional prescribed-pose array. We recall here the definition 
of the pose array introduced in Section 3.2 to represent s^, namely. 
Sd = 
(11.62) 
with q and ^o defined, in turn, as a 3-dimensional vector invariant of the rota-
tion Q and its corresponding scalar, respectively. Moreover, p is the position 
vector of the operation point. Therefore, the 7-dimensional vector f is defined. 

456 
11. Trajectory Planning: Continuous-Path 
Operations 
Algorithm 11.5.1 
e<-e{tk) 
1 
find correction A^ 
if II A^ll < e, then stop; 
else 
e^e + M 
go to 1 
\U0)^ 
MO) 
[fpWj 
= 
q " 
^0 
_ p . 
f(0) = 
foiO) 
= Uo 
(11.63) 
correspondingly, as 
where fy(0) denotes the counterpart of q above, as pertaining to the product 
Qi â¢ â¢ â¢ Qe of eq.(4.9a); foiO) is the counterpart of ^o, as pertaining to the same 
product; and fp{6) is the sum ai + â¢ â¢ â¢ + Qi â¢ â¢ â¢ Qsae- In principle, any of the 
three types of rotation invariants introduced in Section 3.2 can be used in the 
above formulation. 
Now, eq.(11.61) represents a nonlinear system of seven equations in six un-
knowns. The system is thus overdetermined, but since the four rotational equa-
tions are consistent, this system should admit an exact solution, even if this 
solution is complex. For example, if p is specified in s^ above as lying outside 
of the manipulator reach, then no real solution is possible, and the solution 
reported by any iterative procedure capable of handling complex solutions will 
be complex. 
Upon application of the Newton-Gauss method to find a solution of eq.(11.61), 
we assume that we have an initial guess 0^, and based on this value, we gener-
ate a sequence 0^, ..., 0^ 0^"^^, ..., until either a convergence or an abortion 
criterion is met. This sequence is generated in the form 
with AO^ calculated from 
^{e')Ae' = -f{e') + sd 
(ii.es) 
and # defined as the Jacobian matrix of f(0) with respect to 0. Note that 
by virtue of its definition, # is a 7 x 6 matrix. A common misconception in 
the robotics literature is to confuse this Jacobian matrix with the Jacobian 
defined by Whitney (1972) and introduced in eq.(5.10a), which maps joint rates 
into the EE twist. The difference between the two Jacobians being essential, 
it is made clear in the discussion below. First and foremost, ^ is an actual 

11.5 Continuous-Path Tracking 
457 
Jacobian matrix, while Whitney's Jacobian, properly speaking, is not. In fact, 
^ is defined as 
* - g 
(11.66) 
In order to find $ in eq.(11.65), we note that by application of the chain 
rule, 
{=^e 
= ^e 
(11.67) 
However, from the definition of f, we have that f is the time-derivative of the pose 
array of the EE, i.e., s. Moreover, by virtue of eq.(3.78), this time-derivative 
can be expressed as a linear transformation of the twist t of the EE, i.e., 
f=:Tt 
(11.68a) 
with T defined in Section 3.2 as 
T = 
F 
O43 
O33 
I33 
(11.68b) 
where O33 and O43 denote the 3 x 3 and the 4 x 3 zero matrices, I33 being the 
3 x 3 identity matrix. Further, matrix F takes on various forms, depending on 
the type of rotation representation adopted, as discussed in Section 3.2. 
We write next the left-hand side of eq. (11.68a) as shown in eq.(11.67), and 
the twist t of the right-hand side of eq.(11.68a) in terms of 0, as expressed in 
eq.(5.9), thereby obtaining 
^e = T J ^ 
(11.69) 
which is a relation valid for any value of ^. As a consequence, then, 
* = T J 
(11.70) 
whence the relation between the two Jacobians is apparent. Note that eq.(11.68a) 
allows us to write 
f = T j e 
(11.71) 
Upon equating the right-hand sides of eqs.(11.71) and (11.68a), we obtain 
TJ0 = Tt = Sd 
(11.72) 
If linear invariants are used to represent the rotation, then T becomes rank-
deficient if and only if the angle of the rotation becomes TT (Tandirci et al., 
1994); otherwise, T is always of full rank, and eq.(11.72) leads to 
J0 = t 
(11.73) 
which is exactly the same as eq.(5.9). Now we multiply both sides of the fore-
going equation by At, thereby obtaining 
JA0 = tAt 
(11.74) 

458 
11. Trajectory Planning: Continuous-Path 
Operations 
All we need now is, apparently, the product in the right-hand side of the above 
equation, namely. 
tA^ = 
(11.75) 
iAjAt\ _ 
\cvAt 
pAt J "â¢ [ Ap 
The product uAt is found below, in terms of the orientation data available: 
First and foremost, it is common practice in the realm of Newton methods to 
assume that a good enough approximation to the root sought is available, and 
hence, AO is "small." That is, we assume that ||A0|| is small, where || â¢ || 
denotes any vector norm. Moreover, we use the end-effector pose ai t = tk dis 
a reference to describe the desired pose at t = tk^i, the rotation soughtâthat 
takes the EE to its desired attitudeâbeing denoted by AQ, and defined as 
(AQ)Qfc = Qrf, when all rotations are expressed in the same frame and Qk 
represents the orientation of the EE at t = tk- Thus, 
AQ - QdQl 
(11.76) 
Now we relate uAt with AQ. To this end, notice that 
uAt = vectiftAt) 
(11.77a) 
with fl denoting the cross-product matrix of a;. On the other hand, AQ is 
bound to be a rotation about an axis parallel to a unit vector e, through a 
small angle A(/), and hence, from eq.(2.48), 
AQ?^1 + (A(^)E 
(11.77b) 
where E is the cross-product matrix of e. It is then possible to assume that 
ft At, as appearing in eq.(l 1.77a), is the skew-symmetric component of AQ, as 
given by eq.(l 1.77b), i.e., 
AQ = l-f 
ftAt 
whence 
which readily leads to 
^At = QdQl - 1 
ujAt = vect(QdQ^) 
(11.78) 
thereby obtaining the relation sought. 
In summary, then, the correction AO is computed from 
3Ae = At 
(11.79) 
with At defined as 
At^[^Â«^*(^p^Q^)] 
(11.80) 
and Ap defined, in turn, as the difference between the prescribed value p^ of the 
position vector of the operation point and its value p^ at the current iteration. 
Thus, the numerical path-tracking scheme consists essentially of eqs.(11.79) and 
(11.80), as first proposed by Pieper (1968). We thus have Algorithm 11.5.2. 

11.5 Continuous-Path 
Tracking 
459 
Algorithm 11.5.2 
1 
AQ 
^ 
QdQl^ 
Ap 
^ 
Pd-Pfc 
At 
f-
"vect(AQ)' 
^P 
A0 
<- 
J-^At 
if II A0|| < â¬, then stop; 
else 
e 
i- 
e + Ae 
Qk 
^ 
(AQ)Qfc 
Pk 
^ 
p{0) 
go to 1 
When implementing the foregoing procedure, we want to save processing 
time; hence, we aim at fast computations. The computation of the correction A6 
involves only linear-equation solving, which was discussed at length in Chapter 4 
and need not be discussed further here. The only item that still needs some 
discussion is the calculation of the vector norm ||A^||. Since any norm can 
be used here, we can choose the norm that is fastest to compute, namely, the 
maximum norm^ also known as the Chebyshev norm, represented as ||A0||oo, 
and defined as 
||A(9||oo-ma^{|0,|} 
(11.81) 
Note that this norm only requires comparisons and no floating-point operations. 
The Euclidean norm of an n-dimensional vector, however, requires n multipli-
cations, n â 1 additions, and one square root. 
Example 11.5.1 (Path-tracking for arc-welding) With reference to the 
arc-welding exercise of Example 11.3.2, we want to use the Fanuc Arc Mate, 
whose Denavit-Hartenberg parameters are listed in Table 5.2. Furthermore, the 
welding seam to be tracked is placed well within the workspace of the manipu-
lator. A location found quite suitable for this task was obtained with the aid of 
RVS, our Robot Visualization System. This location requires that the coordinate 
frame Tc of Fig. 11.4 have its axes parallel pairwise to those of the robot base, 
T\. 
The latter is defined according to the Denavit-Hartenberg notation, and so 
Z\ coincides with the axis of the first revolute; it is, moreover, directed upwards. 
The position found for the origin Oc of Tc, of position vector o, is given in Ti 

460 
11. Trajectory Plemning: Continuous-Path 
Operations 
O5 (deg) 
150 
100 
50 
0 
-50 
-100 
-150 
â--,. 
- - â-
/'""^^- 
r 
/ 
.-'/ 
' ^ ^\ 
<:â¢-â¢'â¢- J 
% - - - ^ 
\\ 
\ 
A 
/ \ 
/ 
'v^^--_ 
^ ^ ^ 
/ / / 
V 
1 / 
"^ ^^ 
r 
V J M ^ 
----
~^SJ^-? 
J 
z'-^^'^iL 
1 
\ 
v\ 
\ '' 
yy^,' 
,,yf^'' 
"--- â^^ 
-150 
-100 
-50 
0 
50 
100 
150 
O4 (deg) 
Figure 11.7: Contour solutions of the Fanuc Arc Mate robot at the given EE 
pose 
as 
[o]i 
X 
y 
[z 
= 
[-1.0] 
-0.1 
0.5 
m 
Find the time-histories of all the joint variables that will perform the desired 
operation with the tip of the electrode traversing the intersection curve at the 
constant speed ofvo = 0.1 m/s. Furthermore, plot the variation of the condition 
number of the Jacobian matrix along the path. 
Solution: The robot at hand was studied in Section 9.7, where it was found not 
to be of the decoupled type. In fact, this robot does not admit a closed-form 
inverse kinematics solution, and hence, the foregoing iterative procedure is to 
be used. 
At the outset, we calculate all inverse kinematics solutions at the pose cor-
responding to (p = 0 using the bivariate-equation approach of Section 9.4. This 
pose is defined by the orthogonal matrix Q and the position vector p given 
below: 
[Q]i = [e5 et en] 
0.6030 0 
-0.7977 
0 
1 
0 
0.7977 0 
0.6030 
[P]i = 
-0.5500 
-0.100 
0.8969 
m 

11.5 Continuous-Path 
Tracking 
461 
with both Q and p given in robot-base coordinates. The contours for the above 
pose, which were obtained using the procedure of Section 9.4, are shown in 
Fig. 11.7, the eight solutions obtained being summarized in Table 11.3, which 
includes the condition number of the Jacobian, K{J), of each solution. Note 
that the calculation of K{J) required computing the characteristic length of the 
robot, as explained in Section 5.8. This length, as calculated in that section, 
turned out to be L = 0.3573 m. 
Table 11.3: Inverse kinematics solutions of the Fanuc Arc Mate robot for the 
given EE pose 
i 
1 
2 
3 
4 
5 
6 
7 
8 
K{J) 
4.74 
4.85 
11.12 
6.31 
4.79 
5.20 
8.68 
9.94 
Oi 
19.9039Â° 
-3.6664Â° 
-154.951Â° 
-176.328Â° 
-176.341Â° 
-153.567Â° 
-3.6362Â° 
18.9031Â° 
02 
124.909Â° 
124.723Â° 
-67.5689Â° 
-63.4487Â° 
75.1632Â° 
73.4546Â° 
-129.644Â° 
-131.096Â° 
Os 
-176.484Â° 
-173.071Â° 
-135.549Â° 
-129.817Â° 
-76.6692Â° 
-72.5407Â° 
-32.9672Â° 
-26.8084Â° 
i 
1 
2 
3 
4 
5 
6 
7 
8 
04 
16.1379Â° 
177.019Â° 
141.716Â° 
-4.5893Â° 
3.7343Â° 
-153.868Â° 
-175.011Â° 
-28.6793Â° 
O5 
-102.29Â° 
101.19Â° 
146.966Â° 
-140.319Â° 
51.4104Â° 
-53.7328Â° 
-144.428Â° 
147.417Â° 
Oe 
-15.8409Â° 
-177.208Â° 
17.754Â° 
-178.681Â° 
-179.877Â° 
-0.5046Â° 
178.133Â° 
13.0786Â° 
Now, we have eight solutions at our disposal, from which we must choose 
one for path-tracking. In the absence of any criterion to single out one specific 
solution, we can pick up the solution with the lowest condition number. If we 
do this, we end up with solution 1 in Table 11.3. However, when we attempted 
to track the given path with this solution, it turned out that this solution 
encountered a singularity and was hence discarded. Of the seven remaining 
solutions, solution 5 has the lowest condition number; this solution led to a 
singularity-free trajectory. 
Once the appropriate solution is chosen, the trajectory can be tracked with 
the aid of Algorithm 11.5.2. Here, we need a discrete set of poses at equal 
time-intervals. Note that we can produce such a set at equal intervals of angle 
if because we have expressions for the pose variables in terms of this angle. 
In order to obtain this set at equal time-intervals, then, we need angle (p as a, 
function of time, i.e., (p(t). In the sequel, we will also need the time T needed 
to complete the task. Now, since the speed of the electrode tip is constant and 
equal to t^o, the time T is readily obtained by dividing the total length I of the 

462 
11. Trajectory Plajining: Continuous-Path 
Operations 
curve by t'o- The length of the curve, in turn, can be computed as s(27r), where 
function s{ip) denotes the arc length as a function of angle (p, i.e., 
si<p) = r 
\\r'M\dip 
(11.82) 
We thus obtain, by numerical quadrature, 
/ = s{27r) = 1.0257 m 
Hence, the total time is 
T= â = 10.257 s 
Now, in order to obtain (p{t), we first calculate s as 
ds 
ds du:) 
. ds 
/.. o,. s 
Furthermore, we note that dsjd^p = ||r'((/?)||, which allows us to write s as 
s = <p\\r'{v>)\\ 
Moreover, ||r'(<p)|| was found in eq.(l 1.39b) to be 
||r'(^)|| =rG'(^) 
s thus becoming 
s = rGcp 
(11.83b) 
Furthermore, we recall the expression derived for G{(p) in eq.(11.39e). This 
expression, along with the constancy condition on 5, i.e., s = VQ, leads to 
r(p\/l + (A(^sin(/?)2 = VQ 
where r is the radius of the cylinder. Upon solving for (p from the above equation, 
we obtain 
. _ VQ 
/)^ â 2A COS (p 
r Y y9^ â 2A cos (/? + A^ sin^ (p 
which is a nonlinear first-order differential equation for (p{t). Its initial value can 
be assigned as (p(0) = 0, thereby formulating a nonlinear first-order initial-value 
problem. The numerical solution of the foregoing problem is nowadays routine 
work, which can be handled with suitable software, e.g., Matlab (Hanselman 
and Littlefied, 2001). Upon solving this equation, a data file is produced that 
contains the time-history of (p. The plot of (p vs. nondimensional time is dis-
played in Fig. 11.8(a). Since the variations of ip{t) are relatively small, this plot 
provides little information on the time-history of interest. A more informative 
plot, that oi(p{t), is included in Fig. 11.8(b) for this reason. Apparently, (p turns 
out to be the sum of a linear and a periodic term. 

11.6 Exercises 
463 
With (p{t) known as a function of time, we can now specify the pose of the 
end-effector, i.e., p and Q, as functions of time. 
The whole trajectory was tracked with the robot at hand using the algorithm 
outlined in this section. With the aid of this algorithm, we produced the plots 
of Fig. 11.9. Also, the time-history of the condition number of the manipulator 
Jacobian was computed and plotted in Fig. 11.10. Apparently, the condition 
number of the Jacobian remains within the same order of magnitude throughout 
the whole operation, below 10, thereby showing that the manipulator remains far 
enough from singularities during this taskâthe condition number becomes very 
large when a singularity is approached, becoming unbounded at singularities. 
A rendering of the welding seam with the Frenet-Serret triad at a sample of 
points is displayed in Fig. 11.11. It is noteworthy that the torsion of the path 
is manifested in this figure by virtue of the inclination of the Z axis, which 
changes from point to point. In a planar curve, this axis would remain at a 
fixed orientation while traversing the curve. 
(rad) 
4V 
r 
0.7 
(rad/s) 
0.65 
0.6 
0.55 
0 
0.1 
0.2 
0.3 
0.4 
0.5 
0.6 
0.7 
0.8 
0.9 
1 
(a) 
0.1 
0.2 
0.3 
0.4 
0.5 
(b) 
0.6 
0.7 
0.8 
0.9 
Figure 11.8: Plot of ^p vs. nondimensional time 
11.6 
Exercises 
11.1 A PUMA 560 robot, with the DH parameters of Table 11.4, is used to 
perform a gluing operation as indicated below: A nozzle dispensing the 
glue is rigidly attached to the gripper of the robot. The tip of the nozzle, 
point P, is to trace a helicoidal path at a constant rate of 50 mm/s. 

464 
11. Trajectory Planning: Continuous-Path 
Operations 
220 
60 
0.5 
350 
400 r 
100 
80 
60 
40 0 
0.5 
Figure 11.9: Time-histories of the joint variables (in degrees) of the Fanuc Arc 
Mate robot used to track a warped curve for arc-welding vs. nondimensional 
time 
Furthermore, the center of the wrist is located at a point C, fixed to a 
Frenet-Serret coordinate frame. In this frame, the coordinates of C are 
(0, â50, 86.7) mm. Moreover, the path to be traced by point P is given 
as 
X = acosi9, y = asiwd, z = hd^ 0 < i9 < 7r/2 
with the values a = 300 mm, b = SOO/TT mm. 
(a) Decide where to locate the robot base with respect to the path so 
that the latter will lie well within the workspace of the robot. Then, 
produce plots of 9i vs. t, for 0 < ^ < T, where T is the time it takes 
to traverse the whole trajectory, for z = 1,2,..., 6. 
Table 11.4: DH parameters of a PUMA 560 robot 
Joint i 
1 
2 
3 
4 
5 
6 
ai (deg) 
90 
0 
90 
90 
90 
0 
ai (m) 
0 
0.432 
0.020 
0 
0 
0 
bi (m) 
0.660 
0 
0.149 
0.432 
0 
0.056 

11.6 Exercises 
465 
K(J) 
0 
0.1 
0.2 
0.3 
0.4 
0.5 
0.6 
0.7 
0.8 
0.9 
1 
Figure 11.10: Time-history of the condition number of the Jacobian matrix 
during an arc-welding operation vs. nondimensional time 
(b) Produce plots of 9i vs. t in the same time interval for all six joints. 
(c) Produce plots of 6i vs. t in the same time interval for all six joints. 
11.2 A bracket for spot-welding, shown in Fig. 11.12, is rigidly attached to the 
end-effector of a robotic manipulator. It is desired that point P of the 
bracket follow a helicoidal path JT, while keeping the orientation of the 
bracket with respect to F as indicated below: Let B = {io,jo?ko} and 
.^7 = {i7,J7,k7} be triads of unit orthogonal vectors fixed to the base of 
the robot and to the bracket, respectively. Moreover, let T = 
{et,en,eb} 
be the Frenet-Serret triad of F, given as 
et =: -0.6sin(pio + 0.6cos(pjo + 0.8ko 
en = - cos (pio - sin ipjo 
â¬6 = 0.8sin</?io - 0.8cosv?jo + 0.6ko 
where (/? is a given function of time, ip{t). 
Furthermore, the orientation of the bracket with respect to JT is to be kept 
constant and given in terms of the Frenet-Serret triad as 
i7 = 0.933et + 0.067en - 0.354e6 
J7 = 0M7et 4- 0.933en + 0.354e6 
k7 = 0.354ei - 0.354en + 0.866e6 
Additionally, R and S{t) denote the rotation matrices defining the orien-
tation of T7 with respect to T and of T with respect to S, respectively. 

466 
11. Trajectory Planning: Continuous-Path 
Operations 
Figure 11.11: Welding seam with Prenet-Serret frames 
(a) Find the matrix representation of S{t) in B. 
(b) Find the matrix representation of R in T. 
(c) Let Q(^) denote the orientation of JV with respect to B. Find its 
matrix representation in B. 
(d) Find the Darboux vector 6 of the path, along with its time-derivative, 
^, in base-fixed coordinates. Note: You can do this in several ways, 
as discussed in Section 11.2. Choose the one that will allow you to use 
previously computed results, thereby simplifying the computations. 
11.3 The parametric equations of a curve are given as 
x = 2t, y = t^, z = t^l2, 
where t is time. A robotic manipulator is to follow this trajectory so that 
its gripper keeps a constant orientation with respect to the Frenet-Serret 
frame of the curve. 
(a) Determine the unit vector parallel to the axis of rotation and the 
angle of rotation of the gripper as functions of time. 
(b) Find the angular velocity and angular acceleration of the gripper as 
functions of time. 
11.4 Derive eqs.(l 1.45a &; b). 

11.6 Exercises 
467 
Figure 11.12: A bracket for spot-welding 
11.5 Find the spline approximation of the helix of Example 11.3.1. Then, plot 
the approximation errors of the Cartesian coordinates of points of the 
helix, for iV = 5, 11, and 21 equally spaced supporting points. In order to 
assess the orientation error, compute the Darboux vectors of the spline, 
(5s, and of the helix, Sh- The approximation error of the orientation is 
now defined as 
So = m3x{\\Ss{^) 
with ip defined as in Example 11.3.1. 
11.6 Find the spline approximation of the curvature, torsion, and Darboux 
vector of the curve introduced in Example 11.3.2. Find expressions for the 
exact values of these variables and plot the approximation errors, for 5, 
10, and 20 equally spaced supporting points vs. (/?. In the error definitions 
given below, subscript e indicates exact value, subscript s spline value: 
Cr = rs{(p) -re{(p) 
es = 
\\dsi(p)-de{(p)\\ 
11.7 From the plots of the time-histories of the joint angles calculated in Exam-
ple 11.5.1, it is apparent that, with the exception of 64, which has a linear 

468 
11. Trajectory Planning: Continuous-Path 
Operations 
component, these histories are periodic. Repeat Example 11.5.1, but now 
using a sphne approximation of the welding seam, with N = 5, 10, and 
20 supporting points. With this spline approximation, calculate the pose, 
the twist, and the twist-rate at each supporting point. Now, calculate val-
ues of 0, 0, and 6 at each of these supporting points by means of inverse 
kinematics. Compare the values thus obtained of 6 with those derived 
from the linear relation between the function values and the values of its 
second derivative at the supporting points when using a cubic spline. 
11.8 The decoupled robot of Fig. 4.19 is to perform an arc-welding operation 
along a welding seam that requires its wrist center C to travel at a constant 
speed of 1 m/s along a line joining points A and JB, not shown in that 
figure, while keeping the EE holding the electrode at a constant orientation 
with respect to the base frame. Moreover, the seam is to be traversed 
according to the following schedule: With point C located at a point A' 
on the extension of AB, a distance of 250 mm from A, point C approaches 
A with a cycloidal motion at the specified speed; upon reaching B, point 
C decelerates with a cycloidal motion as well, until it reaches a point B' in 
the other extension of AB^ 250 mm from B, with zero speed. The position 
vectors of points A and B, denoted by a and b, respectively, are given, in 
base coordinates, as 
" 500 " 
-500 
500 
, 
b = 
"1,200' 
0 
1,200 
a = 
in mm. For the above-given data, find the time-histories of all joint vari-
ables. 
11.9 Derive expressions (11.45a & b). 
11.10 If linear invariants are used to represent the desired pose s^, then q = 0 
and ^0 = 1 when the angle of rotation becomes TT. Under these conditions, 
matrix T of eq.(11.72) becomes rank-deficient, this equation thus not nec-
essarily leading to eq.(11.73). One way of coping with this algorithmic 
singularity consists in redefining axis Xi of the DH notation by rotating 
the current Xi axis by an angle A^i about Zi, which does not affect the 
remaining variables and parameters of the said notation. 
Find the optimum value of A^i that will take T "farthest" from its current 
rank-deficiency. 

Chapter 12 
Dynamics of Complex 
Robotic Mechanical 
Systems 
12.1 
Introduction 
The subject of this chapter is the dynamics of the class of robotic mechanical 
systems introduced in Chapter 10 under the generic name of complex. Notice 
that this class comprises serial manipulators not allowing a decoupling of the 
orientation from the positioning tasks. For purposes of dynamics, this decou-
pling is irrelevant and hence, was not a condition in the study of the dynamics of 
serial manipulators in Chapter 7. Thus, serial manipulators need not be further 
studied here, the focus being on parallel manipulators and rolling robots. The 
dynamics of walking machines and multifingered hands involves special features 
that render these systems more elaborate from the dynamics viewpoint, for they 
exhibit a time-varying topology. What this means is that these systems include 
kinematic loops that open when a leg takes off or when a finger releases an 
object and open chains that close when a leg touches ground or when a finger 
makes contact with an object. The implication here is that the degree of free-
dom of these systems is time-varying. The derivation of such a mathematical 
model is discussed in (Pfeiffer et al, 1995), but is left out in this book. 
The degree of freedom (dof) of the mechanical systems studied here is thus 
constant. Now, the two kinds of systems studied here pertain to very different 
types, for parallel manipulators fall into the realm of holonomic, while rolling 
robots into that of nonholonomic, mechanical systems. In order to better un-
derstand this essential difference between these two types of systems, we give 
below a summary of the classification of mechanical systems at large. 

470 
12. Dynamics of Complex Robotic Mechanical Systems 
12.2 
Classification of Robotic Mechanical Sys-
tems with Regard to Dynamics 
Because robotic mechanical systems are a class of general mechanical systems, 
a classification of the latter will help us focus on the systems motivating this 
study. Mechanical systems can be classified according to various criteria, the 
most common one being based on the type of constraints to which these systems 
are subjected. In this context we find holonomic vs. nonholonomic and sclero-
nomic vs. rheonomic constraints. 
Holonomic constraints are those that are 
expressed either as a system of algebraic equations in displacement variables, 
whether angular or translational, not involving any velocity variables, or as a 
system of equations in velocity variables that nevertheless can be integrated 
as a whole to produce a system of equations of the first type. Note that it is 
not necessary that every single scalar equation of velocity constraints be inte-
grable; rather, the whole system must be integrable for the system of velocity 
constraints to lead to a system of displacement constraints. If the system of ve-
locity constraints is not integrable, the constraints are said to be nonholonomic. 
Moreover, if a mechanical system is subject only to holonomic constraints, it is 
said to be holonomic; otherwise, it is nonholonomic. Manipulators composed of 
revolute and prismatic pairs are examples of holonomic systems, while wheeled 
robots are usually nonholonomic systems. On the other hand, if a mechanical 
system is subject to constraints that are not explicit functions of time, these 
constraints are termed scleronomic, while if the constraints are explicit functions 
of time, they are termed rheonomic. For our purposes, however, this distinction 
is irrelevant. 
In order to understand better one more classification of mechanical systems, 
we recall the concepts of generalized coordinate and generalized speed that were 
introduced in Subsection 7.3.2. The generalized coordinates of a mechanical 
system are all those displacement variables, whether rotational or translational, 
that determine uniquely a configuration of the system. Note that the set of 
generalized coordinates of a system is not unique. Moreover, various sets of 
generalized coordinates of a mechanical system need not have the same number 
of elements, but there is a minimum number below which the set of generalized 
coordinates cannot define the configuration of the system. This minimum num-
ber corresponds, in the case of holonomic systems, to the degree of freedom of 
the system. Serial and parallel manipulators coupled only by revolute or pris-
matic pairs are holonomic, their joint variables, grouped in vector 0, playing 
the role of generalized coordinates, while their joint rates, grouped in vector 6, 
in turn, play the role of generalized speeds. Note that in the case of parallel 
manipulators, not all joint variables are independent generalized coordinates. 
In the case of nonholonomic systems, on the other hand, the number of general-
ized coordinates needed to fully specify their configuration exceeds their degree 
of freedom by virtue of the lack of integrability of their kinematic constraints. 
This concept is best illustrated with the aid of examples, which are included in 

12.3 The Structure of the Dynamics Models of Holonomic Systems 
471 
Section 12.5. Time-derivatives of the generalized coordinates, or linear combi-
nations thereof, are termed the generalized speeds of the system. If the kinetic 
energy of a mechanical system is zero when all its generalized speeds are set 
equal to zero, the system is said to be catastatic. If, on the contrary, the kinetic 
energy of the system is nonzero even if all the generalized speeds are set equal to 
zero, the system is said to be acatastatic. All the systems that we will study in 
this chapter are catastatic. A light robot mounted on a heavy noninertial base 
that undergoes a controlled motion is an example of an acatastatic system, for 
the motion of the base can be assumed to be insensitive to the dynamics of the 
robot; however, the motion of the base does affect the dynamics of the robot. 
Another criterion used in classifying mechanical systems, which pertains 
specifically to robotic mechanical systems, is based on the type of actuation. In 
general, a system needs at least as many independent actuators as degrees of 
freedom. However, instances arise in which the number of actuators is greater 
than the degree of freedom of the system. In these instances, we speak of 
redundantly actuated systems. 
In view of the fundamental character of this 
book, we will not study redundant actuation here; we will thus assume that the 
number of independent actuators equals the degree of freedom of the system. 
The main results of this chapter are applicable to robotic mechanical systems 
at large. For brevity, we will frequently refer to the objects of our study simply 
as systems. 
12,3 
The Structure of the Dynamics Models of 
Holonomic Systems 
We saw in Section 7.6 that the mathematical model of a manipulator of the serial 
type contains basically three terms, namely, one linear in the joint accelerations, 
one quadratic in the joint rates, and one arising from the environment, i.e., 
from actuators, dissipation, and potential fields such as gravity. We show in 
this section that in fact, the essential structure of this model still holds in the 
case of more general mechanical systems subject to holonomic constraints, if we 
regard the rates of the actuated joints as the independent generalized speeds of 
the system. Nonholonomic robotic systems are studied in Section 12.5. 
First, we will assume that the mechanical system at hand is composed of 
r rigid bodies and its degree of freedom is n. 
Henceforth, we assume that 
these bodies are coupled in such a way that they may form kinematic loops; for 
this reason, such systems contain some unactuated ioints. Definitions similar to 
those of Section 7.3.1 are henceforth adopted. In this vein, the manipulator mass 
matrix of that section becomes now, more generically, the 6r x 6r system mass 
matrixM, the 6r x6r system angular velocity matrix W, and the 6r-dimensional 
system twist vector t being defined likewise. 
We assume further that the total number of joints, active and passive, is 
m > n. The m-dimensional array 0 of joint variables, associated with both 
actuated and unactuated joints, is thus naturally partitioned into two subarrays. 

472 
12. Dynamics of Complex Robotic Mechanical Systems 
the n-dimensional vector of actuated joint variables 6a and its m'-dimensional 
unactuated counterpart Ou, with m' = m â n, namely, 
6 = Oa 
6u 
(12.1) 
We can now set up the mathematical model of the system at hand using 
the natural orthogonal complement, as introduced in Section 7.5. Since the 
system under study has n degrees of freedom, the model sought must be a 
system of n second-order ordinary differential equations. We can proceed to 
derive this model as we did in Section 7.5, by regarding all joints first as if they 
were independent, but taking into account that only n of the total m joints 
are actuated. We do this by introducing a vector of constraint forces, as is 
done in the realm of Lagrangian dynamics (Torok, 2000). In this vein, we first 
represent the twists of all the moving links as linear transformations of the joint-
rate vector 0, then assemble all the individual 6-dimensional twist arrays into 
the 6r-dimensional array t defined above as the system twist. We thus end up 
with a relation of the form 
t = V{e)0 
(12.2) 
where V{0) is the 6r x m twist-shaping matrix, playing a role similar to that of 
matrix T of Section 7.5. Moreover, the constraints relating all joint rates can 
be cast in the form 
A{0)e = Op 
(12.3) 
where A{0) is a p x m matrix, whereby p < m, with nullityâthe nullity of a 
matrix is the dimension of its nullspaceâu = n, and Op is the p-dimensional 
zero vector. Given the nullity of A{0), up to n of the m components of 0 can 
be assigned freely without violating the constraints (12.3), which is compatible 
with the assumption on the dof of the system. Note that, in setting up the 
foregoing p constraints on the joint rates, the number p depends on the topology 
of the system, i.e., on its number of links; on its number of joints; and on how 
the links are coupled, so as to form kinematic loops. 
In applying the procedure of the natural orthogonal complement to the con-
strained system, we end up with a system of m second-order ordinary differential 
equations, namely, the Euler-Lagrange equations of a system constrained by the 
relations (12.3), which thus takes the form 
W + C(0,0)0 = f + 5 + 7 -t- J ^ w ^ + A^A 
(12.4a) 
The above equation contains terms that are familiar from Section 7.5, except 
for the last term of the right-hand side. This term accounts for the generically 
termed constraint forces and amounting to constraint joint torques and forces 
that must be exerted at all joints in order to maintain the topology of the 
system. Vector A is termed the vector of Lagrange multipliers in the realm of 
Lagrangian dynamics. In the above equation, the definitions below, similar to 
those of eqs.(7.58) and (7.59), have been introduced: 
1(0) = U^MU 
(12.4b) 

12.3 The Structure of the Dynamics Models of Holonomic Systems 
473 
C(0, e) = U^MU + U'^WMU 
(12.4c) 
f = U^w^, 
5 = U^w^, 
7 = U^w^ 
(12.4d) 
Moreover, w"^, w^, w^, and w ^ are the various types of wrenches acting on 
the system: exerted by the actuators; stemming from dissipation effects; due 
to the gravity field; and exerted by the environment, respectively. In turn, J is 
the 6 X m Jacobian matrix mapping the system joint rates into the end-effector 
twist, while w ^ is assumed applied onto the end-effector. 
Upon resorting to the kinematics of the system, it is possible to express the 
vector of joint rates ^ as a linear transformation of the vector of actuated joint 
rates Oa, namely^, 
e = @{ea)ea 
(12.5) 
where we have assumed that, from the geometry of the system, 6u has been 
solved for in terms of 0^. Further, upon substitution of eq.(12.5) into eq.(12.3), 
we obtain 
A(0)0(0a)^a = Op 
which must hold for any 9a, given the dof of the system. As a consequence, 
then, 
A((9)0(0a) = Opn 
(12.6) 
and hence, &{0a) is an orthogonal complement of A(0), which we can also call a 
natural orthogonal complement. Notice, however, that contrary to the natural 
orthogonal complement U, which maps the joint-rate vector onto the system 
twist, 0 maps the space of actuated joint rates into that of the system joint 
rates. Apparently, 
0 = &{0a)0a 
+ 0(^a, Oa)Oa 
(12.7) 
Upon substitution of eq.(12.7) into eq.(12.4a), we obtain 
ieOa + i&0a + C(0a, 0a)&Oa = f + 5 + 7 + F w ^ + A^A 
Further, the term of constraint forces is eliminated from the above equations 
upon multiplying both sides of the above equation by 0 ^ from the left, thus 
obtaining the mathematical model sought, i.e., 
I0a + C0a = r + (5 + 7 + J ^ w ^ 
(12.8a) 
with the definitions below: 
I = T ' ^ M T , 
C = T ' ^ M T + T^WMT, 
J = J 0 , 
(12.8b) 
r = 0^f, 
S = e^S, 
7 = 0 ^ 7 , 
(12.8c) 
and 
T = U 0 
(12.8d) 
That is, the mathematical model governing the dynamics of any holonomic 
robotic mechanical system is formally identical to that of eq.(7.61) obtained for 
serial manipulators. 
^0 is not to be confused with the matrix defined in eqs.(10.54a & b). 

474 
12. Dynamics of Complex Robotic Mechanical Systems 
12 A 
Dynamics of Parallel Manipulators 
We illustrate the modeling techniques of mechanical systems with kinematic 
loops via a class of systems known as parallel manipulators. 
While parallel 
manipulators can take on a large variety of forms, we focus here on those termed 
platform manipulators, with an architecture similar to that of flight simulators. 
In platform manipulators we can distinguish two special links, namely, the base 
B and the moving platform M. Moreover, these two links are coupled via six 
legs, with each leg constituting a six-axis kinematic chain of the serial type, 
as shown in Fig. 12.1, whereby a wrench w ^ , represented by a double-headed 
arrow, acts on M and is applied at CM^ the mass center of M. 
This figure 
shows the axes of the revolutes coupling the legs to the two platforms as forming 
regular polygons. However, the modeling discussed below is not restricted to this 
particular geometry. As a matter of fact, these axes need not even be coplanar. 
On the other hand, the architecture of Fig. 12.1 is very general, for it includes 
more specific types of platform manipulators, such as flight simulators. In these, 
the first three revolute axes stemming from the base platform have intersecting 
axes, thereby giving rise to a spherical kinematic pair, while the upper two 
axes intersect at right angles, thus constituting a universal joint. Moreover, the 
intermediate joint in flight simulators is not a revolute, but rather a prismatic 
pair, which is the actuated joint of the leg. A leg kinematically equivalent to that 
of flight simulators can be obtained from that of the manipulator of Fig. 12.1, 
if the intermediate revolute has an axis perpendicular to the line connecting 
the centers of the spherical and the universal joints of the corresponding leg, 
as shown in Fig. 12.2. In flight simulators, the pose of the moving platform 
is controlled by hydraulic actuators that vary the distance between these two 
centers. In the revolute-coupled equivalent leg, the length of the same line is 
controlled by the rotation of the intermediate revolute. 
Shown in Fig. 12.3 is the graph of the system depicted in Fig. 12.1. In that 
graph, the nodes denote rigid links, while the edges denote joints. By application 
of Euler^s formula for graphs (Harary, 1972), the number L of independent loops 
of a system with many kinematic loops is given by 
t=j-l-^l 
(12.9) 
where j is the number of revolute and prismatic joints and / is the number of 
links. 
Thus, if we apply Euler's formula to the system of Fig. 12.1, we conclude 
that its kinematic chain contains flve independent loops. Hence, while the chain 
apparently contains six distinct loops, only flve of these are independent. More-
over, the degree of freedom of the manipulator is six. Indeed, the total number 
of links of the manipulator is / = 6 x 5 + 2 = 32. Of these, one is fixed, and 
hence, we have 31 moving links, each with six degrees of freedom prior to cou-
pling. Thus, we have a total of 31 x 6 = 186 degrees of freedom at our disposal. 
Upon coupling, each revolute removes five degrees of freedom, and hence, the 
36 kinematic pairs remove 180 degrees of freedom, the manipulator thus being 

12.4 Dynamics of Parallel Manipulators 
475 
Figure 12.1: A platform-type parallel manipulator 
left with 6 degrees of freedom. We derive below the mathematical model gov-
erning the motion of the overall system in terms of the independent generalized 
coordinates associated with the actuated joints of the legs. 
We assume, henceforth, that each leg is a six-axis open kinematic chain with 
either revolute or prismatic pairs, only one of which is actuated, and we thus 
have as many actuated joints as degrees of freedom. Furthermore, we label the 
legs with Roman numerals 7, //, ..., VI and denote the mass center of the 
mobile platform M by CM ? with the twist of M denoted by tM and defined at 
the mass center. That is, if CM denotes the position vector of CM in an inertial 
frame and CM its velocity, while UM is the angular velocity of M, then 
^M = 
<^M 
(12.10) 
Next, the Newton-Euler equations of M are derived from the free-body 
diagram shown in Fig. 12.4. In this figure, the legs have been replaced by the 
constraint wrenches {wj^}]^^ acting at point CM^ the governing equation thus 
taking the form of eq.(7.5c), namely. 
VI 
MMtM = -WMMMtM 
+ W^ + ^ W c 
(12.11) 
j = i 
with w ^ denoting the external wrench acting on M. Furthermore, let us denote 
by qj the variable of the actuated joint of the Jth leg, all variables of the six 

476 
12. Dynamics of Complex Robotic Mechanical Systems 
Figure 12.2: A leg of a simple platform-type parallel manipulator 
actuated joints being grouped in the 6-dimensional array q, i.e., 
q = [^/ 
Qii 
Qvi\ 
(12.12) 
Now, we derive a relation between the twist t ^ and the active joint rates, q'j, 
for J = I, II, ,.., VL To this end, we resort to Fig. 12.5, depicting the Jth leg 
as a serial-type, six-axis manipulator, whose twist-shape relations are readily 
expressed as in eq.(5.9), namely. 
J j ^ j = t ^ , 
J = / , / / , 
VI 
(12.13) 
where J j is the 6 x 6 Jacobian matrix of the Jth leg. 
In Fig. 12.5, the moving platform M has been replaced by the constraint 
wrench transmitted by the moving platform onto the end link of the Jth leg, 
âWj , whose sign is the opposite of that transmitted by this leg onto M by virtue 
of Newton's third law. The dynamics model of the manipulator of Fig. 12.5 then 
takes the form 
ij'ej + cj(0j,ej)ej = TJ- JJW^, J = /, //, 
VI 
(12.14) 
where Ij is the 6 x 6 inertia matrix of the manipulator, while C j is the matrix 
coefficient of the inertia terms that are quadratic in the joint rates. Moreover, 
6 J and TJ denote the 6-dimensional vectors of joint variables and joint torques, 

12.4 Dynamics of Parallel Manipulators 
477 
Figure 12.3: The graph of the flight simulator 
yfW 
Figure 12.4: The free-body diagram of M 
namely, 
ej = 
0J1 
Tj 
TJk 
0 
0 
(12.15) 
with subscript Jk denoting in turn the only actuated joint of the Jth leg, namely, 
the kth joint of the leg. If we now introduce ej^, defined as a unit vector all 
of whose entries are zero except for the A;th entry, which is unity, then we can 
write 
Tj = 
fjejk 
(12.16) 

478 
12. Dynamics of Complex Robotic Mechanical Systems 
Figure 12.5: The serial manipulator of the Jth leg 
If the actuated joint is prismatic, as is the case in flight simulators, then fj is 
a force; if this joint is a revolute, then fj is a torque. 
Now, since the dimension of q coincides with the degree of freedom of the 
manipulator, it is possible to find, within the framework of the natural orthog-
onal complement, a 6 x 6 matrix Lj mapping the vector of actuated joint rates 
q into the vector of Jth-leg joint-rates, namely. 
0 j = L j q , 
J - J , / J , . . . , y / 
(12.17) 
The calculation of Lj will be illustrated with an example. 
Moreover, if the manipulator of Fig. 12.5 is not at a singular configuration, 
then we can solve for Wj from eq.(12.14), i.e.. 
w y = J 7 ' ( T j - I j 0 j - C j 0 j ) 
(12.18) 
in which the superscript âT stands for the transpose of the inverse, or equiv-
alently, the inverse of the transpose, while I j = lj{Oj) and C j = 
Cj{6j,0j). 
Further, we substitute Wj as given by eq.(12.18) into eq.(12.11), thereby ob-
taining the Newton-Euler equations of the moving platform free of constraint 
wrenches. Additionally, the equations thus resulting now contain inertia terms 
and joint torques pertaining to the Jth leg, namely, 
VI 
MMtM 
= -WMMMtM 
+ w ^ -I- ^ 
^j'^irj 
- IjOj - CjOj) 
(12.19) 
j=i 

12.4 Dynamics of Parallel Manipulators 
479 
Still within the framework of the natural orthogonal complement, we set up the 
relation between the twist IM sind the vector of actuated joint rates q as 
t ^ = Tq 
(12.20) 
which upon differentiation with respect to time, yields 
t ^ = T q + t q 
(12.21) 
In the next step, we substitute tM ^^<^ its time-derivative as given by 
eqs.(12.20 & 12.21) into eq.(12.19), thereby obtaining 
MM{Tq + Tq) + W ^ M ^ T q 
VI 
VI 
+ Y, Jfih'Oj + CjOj) = w^ + X] ^f^J 
(12.22) 
j=i 
J=i 
Further, we recall relation (12.17), which upon differentiation with respect 
to time, yields 
0 j = L j q + Ljq 
(12.23) 
Next, relations (12.17 & 12.23) are substituted into eq.(12.22), thereby obtaining 
the model sought in terms only of actuated joint variables. After simplification, 
this model takes the form 
MMTq + MMTCI 
+ 
WMMMTCI 
J=VI 
VI 
+ Y, 
J7^(I^Ljq + IjLjq + CjLjq) = w ^ + ^ ^ JJ^TJ 
(12.24) 
j=i 
J=i 
where now Ij = Ij(q) and C j = Cj(q, q). 
Our final step in this formulation consists in deriving a reduced 6 x 6 model 
in terms only of actuated joint variables. Prior to this step, we note that from 
eqs.(12.13), (12.17), and (12.20), 
L j = J 7 ^ T 
(12.25) 
Upon substitution of the above relation into eq.(12.24) and multiplication of 
both sides of eq.(12.24) by T^ from the left, we obtain the desired model in the 
form of eqs.(12.8a), namely, 
VI 
M(q)q + N(q, q)q = r ^ + ^ 
LjTj 
(12.26) 
J=l 
with the 6 x 6 matrices M(q), N(q, q), and vector r ^ defined as 
VI 
M(q) - T^M^T + J2 LjIjLj 
(12.27a) 
j=i 
VI 
N(q, q) - T ^ ( M ^ t + W ^ M ^ T ) + ^ 
L J ( I J L J + CjLj) 
(12.27b) 
J=i 
^w ^ rj^T^w 
(12.27c) 

480 
12. Dynamics of Complex Robotic Mechanical Systems 
Alternatively, the foregoing variables can be expressed in a more compact form 
that will shed more light on the above model. To do this, we define the 36 x 36 
matrices I and C as well as the 6 x 36 matrix L, the 6x6 
matrix A, and the 
6-dimensional vector 0 as 
I = diag(I/,l7,,...,Iv/) 
(12.28a) 
C = diag(C7, C/j,..., Cvi) 
(12.28b) 
L = [L/ 
Lii 
... 
Lvi] 
(12.28c) 
A = [L/e/fc 
Lnenk 
... 
Lyjeyik ] 
(12.28d) 
(t> = [fi 
fn 
... fviV 
(12.28e) 
and hence, 
M(q) = T ^ M A ^ T + L^IL 
(12.29a) 
N(q, q) = T ^ ( M A ^ t + W ^ M j ^ T ) + L^IL + L^C(q, q)L 
(12.29b) 
VI 
5 ] L J T J - A ( / ) 
(12.29C) 
j = / 
whence the mathematical model of eq.(12.26) takes on a more familiar form, 
namely, 
M(q)q + N(q, q)q = r ^ + A0 
(12.30) 
Thus, for inverse dynamics, we want to determine 0 for a motion given by 
q and q, which can be done from the above equation, namely, 
cj> = A-HM(q)q + N(q, q)q - T^] 
(12.31) 
Notice, however, that the foregoing solution is not recursive, and since it requires 
linear-equation solving, it is of order n^, which thus yields a rather high numer-
ical complexity. It should be possible to produce a recursive algorithm for the 
computation of 0, but this issue will not be pursued here. Moreover, given the 
parallel structure of the manipulator, the associated recursive algorithm should 
be parallelizable with multiple processors. 
For purposes of direct dynamics, on the other hand, we want to solve for 
q from eq.(12.30). Moreover, for simulation purposes, we need to derive the 
state-variable equations of the system at hand. This can be readily done if we 
define r = q, the state-variable model thus taking on the form 
q = r 
(12.32a) 
f = M-i[-N(q, r)r -h r ^ + A0] 
(12.32b) 
In light of the matrix inversion of the foregoing model, then, the complexity of 
the forward dynamics computations is also of order n^. 
Example 12.4.1 Derive matrix Jjj of eq.(12.17) for a manipulator having six 
identical legs like that of Fig. 12.2, the actuators being placed at the fourth joint. 

12.4 Dynamics of Paxallel Manipulators 
481 
Solution: We attach coordinate frames to the links of the serial chain of the 
Jth leg following the Denavit-Hartenberg notation, while noting that the first 
three joints intersect at a common point, and hence, n = r2 = ra. According 
to this notation, we recall, vector r^ is directed from the origin Oi of the iih 
frame to the operation point of the manipulator, which in this case, is CM â¢ The 
Jacobian matrix of the Jth leg then takes the form 
J.7 = 
ei 
62 
e3 
64 
es 
ee 
ei X ri 
62 X ri 
e^ x ri 
64 x r4 
65 x rs 
ee x r^ 
the subscript J of the array in the right-hand side reminding us that the vectors 
inside it pertain to the Jth leg. Thus, matrix J j maps the joint-rate vector of 
the Jth leg, Oj, into the twist tM of the platform, i.e.. 
Clearly, the joint-rate vector of the Jth leg is defined as 
Oj = [ Oji 
6j2 
Oj3 6j4 
6j5 
OjQ ] 
Now, note that except for ^j4, all joint-rates of this leg are passive and thus 
need not appear in the mathematical model of the whole manipulator. Hence, 
we should aim at eliminating all joint-rates from the above twist-rate relation, 
except for the one associated with the active joint. We can achieve this if we 
realize that 
rji X eji + eji x rji = 0, 
i = 1,2,3 
Further, we define a 3 x 6 matrix A j as 
A j = [Rji 
1] 
with Rji defined, in turn, as the cross-product matrix of rji. 
Now, upon 
multiplication of 3j by A j from the left, we obtain a 3 x 6 matrix whose first 
three columns vanish, namely, 
A j J j = [0 
0 
0 
e4 X (r4 - ri) 
65 x (rs - ri) 
ee x (rs - ri)]^ 
and hence, if we multiply both sides of the above twist-shape equation by A j 
from the left, we will obtain a new twist-shape equation that is free of the first 
three joint rates. Moreover, this equation is 3-dimensional, i.e., 
[64 X (r4 - ri)^4 4- 65 X (rs - ri)^5 + ee x (rs - ri)^6]j = -<*^M x rji + c^^ 
where the subscript J attached to the brackets enclosing the whole left-hand side 
again reminds us that all quantities therein are to be understood as pertaining 
to the Jth leg. For example, 64 is to be read ej4. Furthermore, only OJA is 
associated with an active joint and denoted, henceforth, by ^ j , i.e., 
qj = ej4 
(12.33) 

482 
12. Dynamics of Complex Robotic Mechanical Systems 
It is noteworthy that the foregoing method of ehmination of passive joint rates 
is not ad hoc at all. While we applied it here to the elimination of the three 
joint rates of a spherical joint, it has been formalized and generalized to all six 
lower kinematic pairs (Angeles, 1994). 
We have now to eliminate both Oj^ and 6JQ from the foregoing equation. 
This can be readily accomplished if we dot-multiply both sides of the same 
equation by vector u j defined as the cross product of the vector coefficients of 
the two passive joint rates, i.e., 
u j = [es X (rs - ri)]j x [e^ x (rs - ri)]j 
We thus obtain a third twist-shape relation that is scalar and free of passive 
joint rates, namely, 
u j â¢ [e4 X (r4 - ri)e4]j = uj â¢ {-UM X rji + CM) 
The above equation is clearly of the form 
CjQJ=y'j^M, 
Qj = {04)j, 
J = I, II, 
...,VI 
with (j and yj defined, in turn, as 
CJ = u j â¢ ej4 X (rj4 - rji) 
(12.34a) 
y ^ ^ r - r , i x u , l 
^^2.34b) 
Upon assembling the foregoing six scalar twist-shape relations, we obtain a 
6-dimensional twist-shape relation between the active joint rates of the manip-
ulator and the twist of the moving platform, namely, 
Zq = Yt A^ 
with the obvious definitions for the two 6 x 6 matrices Y and Z given below: 
T 
Y = 
T 
yyi 
Z = diag(C/, C//, ..., Cvi) 
We now can determine matrix T of the procedure described above, as long as 
Y is invertible, in the form 
T = Y-^Z 
whence the leg-matrix Lj of the same procedure is readily determined, namely. 
Therefore, all we need now is an expression for the inverse of the leg Jacobian J j . 
This Jacobian is clearly full, which might discourage the reader from attempting 

12.4 Dynamics of Parallel Manipulators 
483 
its closed-form inversion. However, a closer look reveals that this Jacobian is 
similar to that of decoupled manipulators, studied in Section 5.2, and hence, its 
closed-form inversion should be reducible to that of a 3 x 3 matrix. Indeed, if 
we recall the twist-transfer formula of eqs.(5.17a & b), we can then write J j as 
J J = U j K j 
where JJj is a unimodular 6 x 6 matrix and K j is the Jacobian of the same 
Jth leg, but now defined with its operation point located at the center of the 
spherical joint. Thus, 
U7 = 
1 
O 
Oji - CM 
1 
K j 
Kii 
Ki2 
O 
K22 
the superscript J indicating the Jth leg and with the definitions below: 
O: the 3 x 3 zero matrix; 
1: the 3 x 3 identity matrix; 
Oji'. the cross-product matrix of oji, the position vector of the center of the 
spherical joint; 
CM â¢ the cross product matrix of CM ? the position vector of CM â¢ 
Furthermore, the 3 x 3 blocks of K j are defined, in turn, as 
(Kii)j = [ei 
e2 
63] J 
(Ki2)j = [e4 
es 
e6]j 
(K22)j = [e4 X (r4 - ri) 
es x (r^ - ri) 
ee x {n - ri)]j 
Now, if the inverse of a block matrix is recalled, we have 
^-/ 
= 
K11 
âKj^j K12K22 
O 
K22 
where the superscript of the blocks has been transferred to the whole matrix, in 
order to ease the notation. The problem of inverting K j has now been reduced 
to that of inverting two of its 3 x 3 blocks. These can be inverted explicitly if 
we recall the concept of reciprocal bases (Brand, 1965). Thus, 
(e2 xea)'^ 
(ea X ei)^ 
(ei xe2)^ 
[(es X S5) X (ee xss)]^! 
[(ee X S5) X (e4 x 84)]'^ 
[(e4 X S4) X (e5 XS5)]'^J^ 

484 
12. Dynamics ot Complex Robotic MechajiicaJ Systems 
with sj4, sj5, Afi, and A22 defined as 
sj4 = r j4 â r ji 
sj5 = rj5 - rji 
Afi = det(Kfi) = (ei x es â¢ 63)7 
det(K^2) = [(^4 X S4) X (exSs) â¢ (ee x SQ)]J 
^ 2 2 
the subscripted brackets and parentheses still reminding us that all vectors 
involved pertain to the Jth leg. Moreover, since U j is unimodular, its inverse 
is simply 
uj^ = 
CM â Oji 
O 
1 
and hence, 
J7^ = 
K11 â K i 1 X 1 2 X 2 2 ( 0 
"^11 
11 â¢*^vi2iV22 V^A^ 
K^2 i^M - Ojl) 
Oji) 
-K^^ K12K22 
^ 2 2 
J J 
the matrix sought, L j , then being calculated as 
While we have a closed-form inverse of J j , we do not have one for Y, which is 
full and does not bear any particular structure that would allow us its inversion 
explicitly. Therefore, matrix Lj should be calculated numerically. 
12.5 
Dynamics of Rolling Robots 
The dynamics of rolling robots, similar to that of other robotic mechanical 
systems, comprises two main problems, inverse and direct dynamics. We will 
study both using the same mathematical model. Hence, the main task here is 
to derive this model. It turns out that while rolling robots usually are nonholo-
nomic mechanical systems, their mathematical models are formally identical to 
those of holonomic systems. The difference between holonomic and nonholo-
nomic systems lies in that, in the former, the number of independent actuators 
equals the necessary and sufficient number of variablesâindependent general-
ized coordinates in Lagrangian mechanicsâdefining a posture (configuration) 
of the system. In nonholonomic systems, however, the necessary and sufficient 
number of variables defining a posture of the system exceeds the number of inde-
pendent actuators. As a consequence, in holonomic systems the dof equals the 
number of independent actuators. In nonholonomic systems, the dof is usually 
defined as the necessary and sufficient number of variables defining the system 
posture, while the number of independent actuators is termed the system mobil-
ity^ which thus turns out to be smaller than the system dof. Therefore, relations 
between these dependent and independent variables will be needed and will be 
derived in the course of our discussion. Moreover, we will study robots with 
both conventional and omnidirectional wheels. Of the latter, we will focus on 
robots with Mekanum wheels. 

12.5 Dynamics of Rolling Robots 
485 
Figure 12.6: A 2-dof rolling robot: (a) its general layout; and (b) a detail of its 
actuated wheels 
12.5.1 
Robots with Conventional Wheels 
We study here the robot of Fig. 10.17, under the assumption that it is driven 
by motors collocated at the axes of its two coaxial wheels, indicated as Mi and 
M2 in Fig. 10.17(b). For quick reference, we repeat this figure here as Fig. 12.6. 
Our approach will be one of multibody dynamics; for this reason, we distin-
guish five rigid bodies composing the robotic mechanical system at hand. These 
are the three wheels (two actuated and one caster wheels), the bracket carrying 
the caster wheel, and the platform. We label these bodies with numbers from 
1 to 5, in the foregoing order, while noticing that bodies 4 and 5, the bracket 
and the platform, undergo planar motion, and hence, deserve special treatment. 
The 6 x 6 mass matrices of the first three bodies are labeled Mi to M3, with 
a similar labeling for their corresponding 6-dimensional twists, the counterpart 
items for bodies 4 and 5 being denoted by M4, M5, t'^, and tg, the primes 
indicating 3 x 3âas opposed to 6 x 6 in the general caseâmass matrices and 
3-dimensionalâas opposed to 6-dimensional in the general caseâtwist arrays. 
We undertake the formulation of the mathematical model of the mechanical 
system under study, which is of the general form of eq.(12.8a) derived for holo-
nomic systems. The nonholonomy of the system brings about special features 
that will be highlighted in the derivations below. 
As a first step in our formulation, we distinguish between actuated and un-
actuated joint variables, grouped into vectors Oa and 0u, respectively, their 
time-derivatives being the actuated d^nd unactuated joint rates, 6a and 0u^ re-
spectively. From the kinematic analysis of this system in Subsection 10.5.1, it 

486 
12. Dynamics of Complex Robotic MechsmicaJ Systems 
is apparent that the foregoing vectors are all 2-dimensional, namely, 
0a 
^U 
= 
(12.35) 
Further, we set to deriving expressions for the twists of the five moving 
bodies in terms of the actuated joint rates, i.e., we write those twists as Hnear 
transformations of 9a, i.e.. 
^i â X^L7a, 
1 â l , z , o 
and 
t'i = T'i9a, 
1 = 4,5 
where, from eqs.(10.41a &b), (10.44a &b), and (10.48), 
T3 = 
T^ = 
T' = 
âi + pSk 
âpSk 
rj 
0 
pSk 
-{i + pSk) 
0 
rj 
03 
ej 
pS 
-pS 
r(Ai + (l/2)j) 
r(-Ai + (l/2)j) 
) 
= 
C 5 . 
(12.36a) 
(12.36b) 
(12.37) 
(12.38) 
(12.39) 
(12.40) 
(12.41) 
with 03, Gs, O4 and G4 yet to be derived. In the sequel, we will find convenient 
to work with a few nondimensional parameters, a, 5, pâalready defined in 
eq.(10.53)â and A, which is introduced now, and displayed below with the first 
three parameters for quick reference: 
a = 
a + b 
S = d 
V 
r 
. 
a 
d' 
(12.42) 
In the derivations below, we resort to the notation introduced in Subsec-
tion 10.5.1. First, we note that, from eqs.(10.45) and (10.52a &; b), we can 
write, with 6ij denoting the (i, j) entry of 0 , as derived in Subsection 10.5.1, 
^3 = {OiA + 6>i2/92)e3 + [pS{ei - k) + 62161 + 6>22<92]k 
(12.43) 
^ 3 = Â®zOa 
(12.44) 
or 
with 03 defined as 
0 3 = [^1163 + {621 + p5)k 
^1263 + {622 - pS)\i] 

12.5 Dynamics of Rolling Robots 
487 
In more compact form, 
Â©3 = [6>iie3 +52ik 
(9i2e3 -h522k] 
(12.45a) 
with 621 and 622 defined, in turn, as 
O21 = O21 + pS, 
'622 = O22 - pS 
(12.45b) 
Moreover, 
C3 = -r^sfs = -riOnOi + 
eMh 
and hence, 
G 3 = r [ - 0 i i f 3 
-0i2f3] 
(12.46) 
Further, it is apparent from Fig. 12.6 that the scalar angular velocity of the 
bracket, CJ4, is given by 
CJ4 = CJ + 1p 
and hence, 
UJ4 = p5{6\ 
â 62) 4- ^21^1 + ^22^2 = ^21^1 + ^22^2 
Therefore, we can write 
U4 = eJOa 
(12.47a) 
where O4 is defined as 
04 = [^21 
522r 
(12.47b) 
Now, since we are given the inertial properties of the bracket in bracket coor-
dinates, it makes sense to express C4 in those coordinates, taking into account 
that point C4 lies in the middle of the line PO3. Such an expression is obtained 
below: 
C4 = 63 + a;4 X -[-dfs 
+ {h- r)k] = -rOs^s + 9 ^^ "^ ^^^^ 
Upon expressing 63 and ip in terms of 9i and 62, we obtain 
C4=d Q^2ie3 - peiJs) 
01+d Q^22e3 - pOuk) 
^2 
(12.48) 
whence it is apparent that 
G4 = d [ (1/2)^2163 -peilf3 
(1/2)^2263 -/>ei2f3] 
(12.49) 
Therefore, 
rp/ __ 
_ ^21 
_ ^22 
/-jr, r/^\ 
"-4 - [^[(1/2)^2163 - pQnfs] 
4(1/2)922^3 - p^ufs] J 
^ 
' 
thereby completing all needed twist-shaping matrices. 

488 
12. Dynamics of Complex Robotic Mechanical Systems 
The 2 x 2 matrix of generalized inertia, 1(0), is now obtained. Here we have 
written this matrix as a function of all variables, independent and dependent, 
arrayed in the 4-dimensional vector 0, because we cannot obtain an expression 
for Ou in terms of 6a, given the nonholonomy of the system at hand. Therefore, 
1 is, in general, a function of ^i, 62, ^3, and ip. To be sure, from the above 
expressions for the twist-shaping matrices T^ and T^, it is apparent that the 
said inertia matrix is an explicit function of ip only, its dependence on 9i and 
02 being implicitly given via vectors es and fa. We derive the expression sought 
for I starting from the kinetic energy, namely. 
T = J2 itf M,t, + i 
j:(tfym 
or 
^ = ^^r (J2TJM,T)J 
K + \el {j^{T[rM[T\\ Ba 
(12.51) 
and hence, 
I = 5]TfM,T, + ^(T0^MjT^ 
(12.52) 
In order to expand the foregoing expression, we let J-i^ and Jc be the 3 x 3 
inertia matrices of the two actuated wheels and the caster wheel, respectively, 
the scalar moments of inertia of the bracket and the platform, which undergo 
planar motion, being denoted by I^ and Ip. Likewise, we let m^, m^,, rric, and 
rrip denote the masses of the corresponding bodies. Therefore, 
Ml 
M3 
M^ = 
M^ = 
O 
m^ls 
3c 
O 
O 
rricls 
h 
0^ 
0 
mhl2 
0 
mpl2 
= M2 
with O and I3 denoting the 3 x 3 zero and identity matrices, while 0 and I2 the 
2-dimensional zero vector and the 2 x 2 identity matrix. Furthermore, under 
the assumption that the actuated wheels are dynamically balanced, we have 
J 7/1 â 
7 
0 
0 
0 
il 
0 
0 
0 
iJ 
Moreover, we assume that the caster wheel can be modeled as a rigid disk of 
uniform material of the given mass rric and radius r, and hence, in bracket-fixed 

12.5 Dynamics of Rolling Robots 
coordinates { 63, fa, k }, 
489 
-w 
^ 
2 
Jc = 7^c^ 
[2 
0 
[0 
0 
0" 
1 
0 
0 
1 
It is now a simple matter to calculate 
Tf M i T i = 
T|^M2T2 = 
-{pSfH 
{pSfH 
{p5fH 
-{p5YH 
-{p5fH 
I-^{pS)^H + m^r^ 
where the symmetry between the two foregoing expressions is to be highlighted: 
that is, the second expression is derived if the diagonal entries of the first ex-
pression are exchanged, which is physically plausible, because such an exchange 
is equivalent to a relabeling of the two wheels. The calculation of the remaining 
products is less straightforward but can be readily obtained. Prom the expres-
sions for T3 and M3, we have 
TjM3T3 = [ 0 l 
G^] Jc 
O 
O 
rricls 
0 3 
G3 
@Uc@3 + mcGlG 
c^s 
In order to calculate the foregoing products, we write Jc and Â©3 in component 
form, i.e., 
J c 0 3 = -iTUcr'^ 
\2 
0 
0' 
0 
1 0 
0 0 1 
"^11 
_0 
^12 
_0 
022 _ 
1 
2 
"2^11 
0 
O21 
2612 
0 
^22 J 
and hence, 
0jJc03 = -^my 
^2 
2^11 + ^21 
2^11^12 + O21O22 
2 
29i\6i2 
4- O21O22 
2612 + ^22 
Likewise, 
m3G^G3 = rricr'^ 
Further, 
{T'^fM',T', = [e, 
Gl 
Upon expansion, we have 
^11 
0i\6\2 
0l\0i2 
612 
h 
0^ 
0 
mbl2 
G4 
760401+ m6GfG4 
6>; 21 
^21^22 
'2 
-f -m\,d 
^21^22 
^22 
â¢ 7 T 2 
^21^22 â¢+â¢ 4p 
Q\\0\2 
^21^22 + 4/? ^11^12 
^2 
^22 + 4p"0f2 

490 
12. Dynamics of Complex Robotic Mechanical Systems 
Finally, 
( T ^ r M ^ n = [05 
G^] 
0^ 
[ 0 
mpl2 
which can be readily expanded as 
1 
- 1 
- 1 
1 
-{-mr^r^ 
= Ip050Q + rtipG^ G5 
(1/4)+ A2 
(1/4)-A2 
(1/4)-A2 
(1/4)+ A2 
We can thus express the generalized inertia matrix as 
I = I^+Ic 
+ Ib + lp 
where Iâ, Ic, !&, and Ip denote the contributions of the actuated wheels, the 
caster wheel, the bracket, and the platform, respectively, i.e., 
In> = J2TjMiTi 
= 
-2{pSyH 
I + 2(pS)^H + m^r^ 
Ic- _ rricr^ 
4 
6^11^12 + ^21^22 
6^11^12 + ^21^22 
6^12 + ^22 
lb = h 
^21 
O21O'. 
211722 
^21^22 
^22 
4 
^21^22 4- 4/9 ^11^12 
^21^22 4" 4/9 
6\\6i2 
^22+ V ^ ' 
12 
Ip - Ip{p5f 
1 
- 1 
+ mpr^ (1/4) + A2 (1/4) - A2 
(1/4) - A2 (1/4) + A2 
It is now apparent that the contributions of the actuated wheels and the platform 
are constant, while those of the caster wheel and the bracket are configuration-
dependent. Therefore, only the latter contribute to the Coriolis and centrifugal 
generalized forces. We thus have 
T ^ M t = T j M s t a + (T^)'^M^T^ 
From the expression for Tf'MsTa, we obtain 
the time-derivatives being displayed below: 
Â©3 = [^11^3 + OiiUJAh + ^2lk 
^1263 + ^l2CJ4f3 + ^22k] 
C3 = r [ -^llf3 + OiiUJA^'^ -^12f3 + O12UAG3 ] 
with the time-derivatives of the entries of 0 given as 
0 = ^ 
âasin^ -h {cosip)/2 
asin^^ -h {cosip)/2 
p[âacosil) â (sin^)/2] 
p[a cos^p â (sin^)/2] 
(12.53) 

12.5 Dynamics of Rolling Robots 
491 
its parameters being defined in eq.(12.42). Upon expansion, the products ap-
pearing in the expression for Tg'MsTs become 
@IJc&3 = rucr^ 
msCjCs 
= rricr 
2^11^11 + O21O21 
2^11^12 + 1^21^22 
2^12^11 H~ ^22^21 
2^12^12 + ^22^22 
^11^11 
0n6i2 
OuOn 
^12^12 
Therefore, 
TJM3T3 = 
Likewise, 
rricr 2 r 6^11^11 + ^21^21 
6011^12 + 6^21^22 
6^12^11 H" ^22^21 
6^12^12 + ^22^22 
(T^)^ M^T^ = 7^0404 + mtCi C4 
the above time-derivatives being 
O4 = [O21 
O22] 
C4 = d[cne3 
+ 012^3 
^2163 4-C22f3] 
with coeflScients Cij given below: 
cii = -O21 + />6>iia;4 , 
C12 = - ^ 2 1 ^ 4 - P^ii 
C21 = 0^22 + pO\2^A 
, 
C22 = - ^ 2 2 ^ 4 â pOi2 
Hence, 
â¢ T 
A ^4 ^4 
i T r i 
/6 
m6C'4 C4 = 
-mftd^ 
^21^21 
^21^22 
^22^21 
^22^22 
^2lCll - 2p6>iiCi2 
^2lC2l - 2/)6>iiC22 
^22^11 â 2/9012C12 
^22^21 â 2p^i2C22 
Therefore, 
^21^21 
^21^22 
^22^21 
^22^22 
621C11 -
+ -mftCf^ 
2/)eiiCi2 
^2lC21 - 2/)6>iiC22 
^22Cll - 1pei2Ci2 
O22C2I - 
2p9i2C22 
In the final steps, we calculate T ^ W M T . As we saw earlier, only the caster 
wheel and the bracket can contribute to this term, for the contributions of 
the other bodies to the matrix of generalized inertia are constant. However, the 
bracket undergoes planar motion, and according to Exercise 7.8, its contribution 
to this term vanishes. Therefore, 
T ^ W M T = TTW3M3T; 
3 J-3 

492 
12. Dynamics of Complex Robotic Mechanical Systems 
o o 
Ic 
O 
O 
mcla 
0 3 
Upon expansion of the foregoing product, we have 
T|^W3M3T3 = [0i^ 
GJ] 
The foregoing term vanishes, as we prove below. First, notice that 
(12.54) 
However, from eq.(12.44), 
and hence, 
for every 9a, whence 
Cu?3 = 
^sOa 
nsSsOa = 0 
^ 3 Â©3 = O 32 
with O32 denoting the 3 x 2 zero matrix. Upon transposing the foregoing ex-
pression, we obtain 
Â©3 ^ 3 = O23 
where we have recalled that fts is skew-symmetric. 
Substitution of the above expression into eq.(12.54) readily shows that the 
term in question indeed vanishes, i.e.. 
In summary, the Coriolis and centrifugal force terms of the system at hand 
take the form 
C(0, Oa)Oa â 
rricT^ 
6^11(^11^1 + O12O2) + ^21(^12^1 + ^22^2) 
6^12(^11^1 + ^12^2) + ^22(^12^1 + ^22^2) 
^21 
^22 
+ h{^2iOi + O2262) 
-mb(fp{ci20i 
+022^2) 
+ 
-mb(f{cnOi+02192) ^21 
^22 
^12 
If we recall that the Cij coefficients are linear in the joint rates, then the foregoing 
expression clearly shows the quadratic nature of the Coriolis and centrifugal 
terms with respect to the joint rates. 
The derivation of the forces supplied by the actuators is straightforward: 
r = 
The dissipative generalized force is less straightforward, but its calculation is 
not too lengthy. In fact, if we assume linear dashpots at all joints, then the 
dissipation function is 

12.5 Dynamics of Rolling Robots 
493 
with Ci2 and C34 defined as 
C12 = 
ci 
0 
0 
C2 
>34 
C3 
0 
0 
C4 
Now, if we recall the expression for 6u in terms of 0^, we end up with 
A = lelBOa 
D being defined, in turn, as the equivalent damping matrix, given by 
D = C12 + 0 ^ 0 3 4 0 
Since 0 = 0(V'), D = D(t/'), the dynamics model under study thus taking the 
form 
lieyoa + c(0, ea)ea = T- B{^)ea 
with I and C(6,0a) given, such as in the case of holonomic systems, as 
1(0) = T^MT 
C(0, Oa) = T ^ M T -f- T ^ W M T 
thereby completing the mathematical model governing the motion of the system 
at hand. Note here that 6 denotes the 4-dimensional vector of joint variables 
containing all four angles appearing as components of 6a and Ou. Because of 
the nonholonomy of the system, an expression for the latter in terms of the 
former cannot be derived, and thus the whole 4-dimensional vector 0 is left as 
an argument of both I and C. 
Note that calculating the torque r required for a given motionâinverse 
dynamicsâof the rolling robot under study is straightforward from the above 
model. However, given the strong coupling among all variables involved, a 
recursive algorithm in this case is not apparent. On the other hand, the deter-
mination of the motion produced by a given history of joint torques requires 
(i) the calculation of I, which can be achieved symbolically; (ii) the inversion 
of I, which can be done symbolically because this is a 2 x 2 matrix; (in) the 
calculation of the Coriolis and centrifugal terms, as well as the dissipative forces; 
and (iv) the integration of the initial-value problem resulting once initial values 
to 6 and 6a have been assigned. 
12.5.2 
Robots with Omnidirectional Wheels 
We now consider a 3-dof robot with three actuated wheels of the Mekanum type, 
as shown in Figs. 1.13(a) and 10.19, with the configuration of Fig. 12.7, which 
will be termed, henceforth, the A-array. This system is illustrated in Fig. 12.8. 
Below we will adopt the notation of Subsection 10.5.2, with a = 7r/2 and 
n = 3. We now recall that the twist of the platform was represented in planar 
form as 
t'= [^1 
(12.55) 

494 
12. Dynamics of Complex Robotic Mechanical Systems 
where cj is the scalar angular velocity of the platform and c is the 2-dimensional 
position vector of its mass center, which will be assumed to coincide with the 
centroid of the set of points { Q }f. Moreover, the three wheels are actuated, 
and hence, the 3-dimensional vector of actuated joint rates is defined as 
ea = 
02 
03 
(12.56) 
The relation between 9a and t' was derived in general in Subsection 10.5.2. As 
pertaining to the robot of Fig. 12.7, we have 
JOa = Kt' 
with the two 3 x 3 Jacobians J and K defined as 
J = -al, 
K = 
(T 
fj 
fj 
(12.57a) 
(12.57b) 
where, it is recalled, a is the height of the axis of the wheel hub and r is the 
horizontal distance of the points of contact with the ground to the mass center 
C of the platform, as indicated in Fig. 12.7(a). Moreover, vectors { Cj }f and 
{ fj }i, defined in Subsection 10.5.2, are displayed in Fig. 12.7. Below we derive 
expressions for w and c, from eq.(12.57a), in terms of the joint rates. To this 
end, we expand these three equations, thus obtaining 
rcj + f^c = âaOi 
-a02 
rijj + f J c 
'â¢2 
rcj + {Tc = 
(12.58a) 
(12.58b) 
(12.58c) 
Upon adding corresponding sides of the three foregoing equations, we obtain 
3 
3 
3ru} + c^^{i 
= 
-aJ20i 
(12.59) 
But from Fig. 12.7(b), it is apparent that 
ei + e2 + 63 = 0 
f 1 + f2 + fs = 0 
Likewise, 
(12.60a) 
(12.60b) 
ei = ^ ( f 3 - f2), e2 = ^ ( f i - fa), eg = ^ ( f a - fi) 
(12.60c) 
fi = ^ ( e 2 - 63), f2 = ^ ( e 3 - ei), Â£3 = ^ ( e i - es) 
(12.60d) 

12.5 Dynamics of Rolling Robots 
fi 
495 
(b) 
Figure 12.7: Rolling robot with ODWs in a A-array 
and hence, the above equation for cj and c leads to 
3 
Â£EÂ«. 
3r 
(12.61) 
Now we derive an expression for c in terms of the actuated joint rates. We do 
this by subtracting, sidewise, eq.(12.58b) from eq.(12.58a) and eq.(12.58c) from 
eq.(12.58b), thus obtaining a system of two linear equations in two unknowns, 
the two components of the 2-dimensional vector c, namely, 
Ac = b 
with matrix A and vector b defined as 
A = 
(fi-f2)^ 
( f 2 - f 3 r 
^-Vs 
r^Tl 
h = âa Oi â 62 
62 â 6s 
where we have used relations (12.60c). Since A is a 2 x 2 matrix, its inverse can 
be readily found with the aid of Facts 5.7.3 and 5.7.4, which yield 
c = - a [ - E e i 
Ee3 ] 61 â 62 
02 â O3 
Now, from Fig. 12.7(b), 
Eei=fi, 
Ee3 = f3 

496 
12. Dynamics of Complex Robotic Mechanical Systems 
Figure 12.8: A view of the three-wheeled robot with Mekanum wheels in a 
A-array 
and hence, c reduces to 
But by virtue of eq.(12.60b), 
fi + fa = -f2 
the above expression for c thus becoming 
2a 
c = 
E^^f^ 
(12.62) 
Thus, cj is proportional to the mean value of { ^i }i, while c is proportional to 
the mean value of {Oifi }f. In deriving the mathematical model of the robot 
at hand, we will resort to the natural orthogonal complement, and therefore, 
we will require expressions for the twists of all bodies involved in terms of the 
actuated wheel rates. We start by labeling the wheels as bodies 1, 2, and 3, 
with the platform being body 4. Moreover, we will neglect the inertia of the 
rollers, and so no labels need be attached to these. Furthermore, the wheel 
hubs undergo rotations with angular velocities in two orthogonal directions, 
and hence, a full 6-dimensional twist representation of these will be required. 
Henceforth, we will regard the angular velocity of the platform and the velocity 

12.5 Dynamics 
of Rolling 
Robots 
497 
of its mass center as 3-dimensional vectors. Therefore, 
t4 = T4^a, 
T4 = âA 
with A defined, in turn, as the ratio 
k 
k 
k 
2rfi 
2rf2 
2rf3 
A = 3r 
Now, the wheel angular velocities are given simply as 
(12.63) 
(12.64) 
0^2 = Oiei -f cjk = 9iei - A y ^ g^ 
k 
(12.65) 
or 
cj^ = (ei - Ak)i9i - Al92k - Al93k 
0^2 = -Al9ik + (e2 - Ak)i92 - A^sk 
Us = -X9ik 
- A^2k + (e3 - Ak)^3 
(12.66a) 
(12.66b) 
(12.66c) 
Similar expressions are derived for vectors c^. To this end, we resort to the 
geometry of Fig. 12.7, from which we derive the relations 
Ci = c + cjrfi = -2Xr 
[Y^ejfj 
1 - Ar ( ^ ^ 9 ^ fi 
and hence, 
Ci = -Ar[(3^i + ^2 + ^3)fl + 2(^2f2 + ^3f3)] 
C2 = -Ar[2(9ifi + {01 + 3<92 + l93)f2 + 263^3] 
C3 = -Ar[2(^ifi + ^2f2) + (^1 + ^2 + 3^3)f3] 
(12.67a) 
(12.67b) 
(12.67c) 
Prom the foregoing relations, and those for the angular velocities of the wheels, 
eqs.(12.66a-c), we can now write the twists of the wheels in the form 
where 
T i = 
T2 = 
T3 = 
l^ â - L i " a 5 
^ â â¢'â¢j^)*^ 
ei â Ak 
âAk 
âAk 
-3Arfi 
-Ar(fi + 2f2) 
-Ar(fi + 2f3) 
âAk 
62 â Ak 
âAk 
-Ar(f2 + 2fi) 
-3Arf2 
-Ar(f2 + 2f3) 
âAk 
âAk 
63 â Ak 
-Ar(f3 + 2fi) 
-Ar(f3+2f2) 
-3Arf3 
(12.68) 

498 
12. Dynamics of Complex Robotic Mechanical Systems 
On the other hand, similar to what we have in eq.(12.62), an interesting rela-
tionship among angular velocities of the wheels arises here. Indeed, upon adding 
the corresponding sides of the three equations (12.66a-c), we obtain 
3 
3 
3 
1 
1 
1 
Further, we dot-multiply the two sides of the foregoing equation by k, which 
yields, upon rearrangement of terms. 
3 A ^ ^ , = - k . ^ (^i 
and by virtue of eq.(12.61), 
cj = 
'k-(jj 
_ 
1 ^ 
(12.69) 
that is, the vertical component of the mean wheel angular velocity equals the 
scalar angular velocity of the platform. 
Now we proceed to establish the mathematical model governing the dynamics 
of the system under study. The generalized inertia matrix is then calculated as 
I = ^ T f M , T , 
(12.70) 
where, if l^j and m^ denote the moment-of-inertia matrix, in body-fixed coor-
dinates, and the mass of each of the three wheels, with similar definitions for Ip 
and nip as pertaining to the platform. 
M^ = Iw 
O 
O 
m.;. 1 
2 = 1,2,3, 
M4 = Ip 
O 
O 
rripl 
(12.71) 
We will also need the angular-velocity dyads, W^, which are calculated as 
W, 
^i 
O 
o o 
i = : l , 2 , 3 
(12.72) 
where W4 will not be needed, since the platform undergoes planar motion. We 
have 
MiTi 
I^(ei-Ak) 
-Al^yk 
-Al^k 
-Sm^Xrfi 
-m^Ar(fi 4- 2f2) 
-m-u;Ar(fi -h 2f3) 
Moreover, we assume that in a local coordinate frame { e^, fj, k }, 
^w â 
"/ 
0 
0 
0 
J 
0 
0 
0 
J 

12.5 Dynamics of Rolling Robots 
499 
in which / and J are constants. Hence, 
Tf M i T i = 
I + X'^K 
A V 
AV 
AV 
A^M 
A^i 
where 
K = J + 9mwr'^ 
L = J + 3mâr^ 
M = J- 
3m,,,r^ 
Likewise, 
Furthermore, 
Ti'MaTs = 
M4T4 = - A 
A^i 
AV 
A^M 
A V 
A^M 
I + X'^K 
A V 
AV 
A^L 
A^L AV 
AV 
AV 
A^L 
AV 
AV 
A V 
Z + A^if 
Ipk 
Ipk 
Ipk 
2mprfi 
2mprf2 
2mprf3 
It is apparent that, by virtue of the planar motion undergone by the platform, 
only its moment of inertia H about the vertical passing through its mass center 
is needed. Then, 
TJM4T4 = A^ 
H 
-2m 
H 
-2m 
pr^ 
H - 2mpr^ 
H - 2mpr'^" 
pp 
H + 4mpr^ 
H - 2mpv'^ 
pT^ H - 2mpr^ 
H + 4mpr^ 
ming all four products computed above, we obtain 
1 = 
'a 
p 
/?" 
/? a 
/? 
/? /3 
a 
with the definitions below: 
a = I + \^{H + 3 J + 15m^r^ + 4mpr^) 
/? = A^ (iJ + 3 J - 3m^r^ - 2mpr^) 
which is a constant matrix. Moreover, note that the geometric and inertial 
symmetry assumed at the outset is apparent in the form of the foregoing inertia 
matrix, its inverse being readily obtained in closed form, namely, 
1-1 = 1 
A 
a + p 
-0 
-13 
-13 
a + p 
-0 
-13 
-0 
a + 13 
A = (a + /3)a - 2/3^ 

500 
12. Dynamics of Complex Robotic Mechanical Systems 
Next, we turn to the calculation of the T'^MT? term. This is readily found to 
be 
4 
1 
each of the foregoing products being expanded below. We have, first, 
t i = 
T2 = 
Â±4 =A 
(jfi 
0 
0 
SXrcjei 
âXruj{e3 â 62) 
Ara;(e3 â 62) 
0 
Cjf2 
0 
Ara;(ei â es) 
3Ara;e2 
â Ara;(ei â es) 
0 
0 
cjfs 
âXru){e2 â ei) 
Ara;(e2 â ei) 
SXrues 
0 
0 
0 
2ru)ei 
2rcje2 
2ruje3 
Hence, for the first wheel. 
MiTi = 
Therefore, 
SXm^rujei 
0 
0 
-Xmwruj{es - 62) 
Xmwr(jj{es - 62) 
Tf MiTi = Sv^A^m^r^cj 
0 
1 
-1 
- 1 
1 
0 
0 
0 
0 
where the skew-symmetric matrix is the cross product matrix of vector [0, 1, 1 ]^. 
By symmetry, the other two products, TfM^T?i, for i = 1,2, take on similar 
forms, with the skew-symmetric matrix, becoming, correspondingly, the cross-
product matrix of vectors [1, 0, 1]^ and [1, 1, 0]^. This means that the first 
of these three products is affected by the rotation of the second and the third 
wheels, but not by that of the first one; the second of those products is affected 
by the rotation of the first and the third wheels, but not by the second; the 
third product is affected, in turn, by the rotation of the first two wheels, but 
not by that of the third wheel. We thus have 
TJM2T2 = sVsX'^m^r'^uj 
Tf^MsTs = sVSA^m^r^cj 
"0 
- 1 
1 
0 
0 
1 
" 0 
0 
0 
0 
- 1 
1 
Furthermore, 
M4t4 = A 
0 
0 
â2mprcjei 
â2mp rcje2 
-
0 " 
- 1 
0 
1 " 
- 1 
0 
0 
2mpr â¢cje3 

12.5 Dynamics of Rolling Robots 
501 
and hence, 
TJM4T4 = 2\/3A^mpr^cj 
0 
- 1 
1 
1
0
-
1 
- 1 
1 
0 
(12.74a) 
whose skew-symmetric matrix is readily identified as the cross-product matrix 
of vector [1, 1, 1 ]'^, thereby indicating an equal participation of all three wheels 
in this term, a rather plausible result. Upon adding all four products calculated 
above, we obtain 
T ' ^ M T = 2\/3A^(3m,^ 4- mp)r^a; 
0 
- 1 
1 
1 
0 
- 1 
- 1 
1 
0 
(12.75) 
The equal participation of all three wheels in the foregoing product is apparent. 
Moreover, notice that the term in parentheses can be regarded as an equivalent 
mass, which is merely the sum of all four masses involved, the moments of inertia 
of the wheels playing no role in this term. 
We now turn to the calculation of the T ^ W M T term, which can be ex-
pressed as a sum, namely, 
3 
T ' ^ W M T = ^ T f W ^ M i T ^ 
where we have not considered the contribution of the platform, because this 
undergoes planar motion. Moreover, matrices W^, for z = 1, 2, and 3, take the 
obvious forms 
o o 
w,= 
We then have, for the first wheel, 
W i M i T i = uji X [I^^(ei - Ak)] 
-a;i x (AI^,;k) 
-ui 
x (Al^k) 
0 
0 
0 
Now, it does not require too much effort to calculate the complete first product, 
which merely vanishes, i.e., 
Tf W i M i T i = O: 33 
with O33 defined as the 3 x 3 zero matrix. By symmetry, the remaining two 
products also vanish, and hence, the sum also does, i.e.. 
T ^ W M T = O 33 
(12.76) 
Now, calculating the dissipative and active generalized forces is straightforward. 
We will neglect here the dissipation of energy occurring at the bearings of the 

502 
12. Dynamics of Complex Robotic Mechanical Systems 
rollers, and hence, if we assume that the lubricant of the wheel hubs produces 
linear dissipative torques, then we have 
S = c 
\0i' 
\62 
L^3 
, 
'-r = 
n 
r2 
J^. 
(12.77) 
where c is the common damping coefficient for all three wheel hubs. We now 
have all the elements needed to set up the mathematical model governing the 
dynamics of the robot, namely. 
iOa + C{u)ea 
= 
T-S 
(12.78) 
where C(a;) = T^MT + T^WMT; from eqs.(12.75) and (12.76), this term 
becomes 
; 0 
- 1 
1 
C(a;) = 2\/3A^(3m^, + mp)r'^u) 
1 
0 
- 1 
1 
0 
(12.79) 
Since uj = âa/{3r){6i + ^2 + ^3), the quadratic nature of the second term 
of eq.(12.78) in the joint rates becomes apparent. It is also apparent that 
the mathematical model derived above does not depend on Oa- What this 
means is that the mathematical model allows the integration of the actuated 
joint accelerations to yield joint-rate histories 6a{t), but this model cannot pro-
vide joint-variable histories 9a{t). To obtain these, for given initial conditions, 
the joint-rate histories have to be integrated, which can be done by numerical 
quadrature. 
Finally, in order to obtain the Cartesian histories of the platform pose, given 
by the angle a that a specific line of the platform makes with a line fixed in 
an inertial frame, and the position vector of the mass center, c, eqs.(12.61) 
and (12.62) have to be integrated. While the integration of the former can be 
readily done by quadrature, that of the latter requires knowledge of vectors f^, 
for z = 1, 2,3, and these vectors depend on a. Thus, the integration of eq.(12.61) 
can be done once the joint-rate histories are known; that of eq.(12.62) requires 
knowledge of angle a. These features are inherent to nonholonomic systems. 
12.6 
Exercises 
12.1 Show that the mathematical model of an arbitrary robotic mechanical 
system, whether holonomic or nonholonomic, with r rigid bodies and n 
degrees of freedom, can be cast in the general form 
i{e)ea + c{e,ea)ea = T^ + y + s 
where 
6: the m-dimensional vector of variables associated with all joints, ac-
tuated and unactuated; 

12.6 Exercises 
503 
Oa'. the n-dimensional vector of actuated joint variables, n <m; 
T^: the n-dimensional vector of actuator torques; 
7: the n-dimensional vector of gravity torques; 
S: the n-dimensional vector of dissipative torques; 
1(0): the n X n matrix of generalized inertia; 
C(0, Oa)' the n X n matrix of Coriolis and centrifugal forces; 
with 1(0) and C(0,6a) given by 
1(6) = T^MT 
C(0, Oa) = ^[i + T ^ M T - T ' ^ M T + T^(WM -I- MW)T] 
in which 
M: the 6r x 6r matrix of system mass; 
T: the n x 6r twist-shaping matrix that maps the n-dimensional vector 
of actuated joint rates into the 6r-dimensional vector of system twist 
t; 
W: the 6r x 6r matrix of system angular velocity. 
12.2 For the system of Exercise 12.1, show that the matrix difference l{0,Oa) â 
2C{0,6a) is skew-symmetric. This is a well-known result for serial ma-
nipulators (Spong and Vidyasagar, 1989). 
12.3 For the rolling robot with conventional wheels of Subsection 12.5.1, find 
the generalized inertia matrix of the robot under the maneuvers described 
below: 
(a) pure translation; 
(b) midpoint of segment O1O2 stationary. 
In each case, give a physical interpretation of the matrix thus obtained. 
12.4 With reference to the same robot of Exercise 12.3, state the conditions on 
its geometric parameters that yield 1^ and Ip isotropic, these two 2 x 2 
matrices having been defined in Subsection 12.5.1. 
12.5 Derive the mathematical model governing the motion of a 2-dof rolling 
robot with conventional wheels, similar to that of Fig. 10.17, but with two 
caster wheels instead. The vertical axes of the caster wheels are a distance 
I apart and a distance a + b from the common axis of the driving wheels. 
What is the characteristic length of this robot? 
12.6 Find the conditions under which the three-wheeled robot with omnidirec-
tional wheels analyzed in Subsection 12.5.2 has an isotropic inertia matrix. 
Discuss the advantages of such an inertially isotropic robot. 

504 
12. Dynamics of Complex Robotic Mechanical Systems 
12.7 With reference to the omnidirectional robot of Subsection 12.5.2, show 
that the mathematical model can be manipulated to yield a single first-
order ordinary differential equation in cj, of the form 
uj + kcj = f{t) 
in which A: is a constant with units of frequency, its inverse being the time-
constant of the system. Find expressions for k and f{t). Then, integrate 
the above equation in closed form, to obtain the time-history of cj for a 
given time-history f(t) and given initial condition a;(0). 
12.8 Establish the conditions on the actuated joint rates under which the three-
wheeled robot with omnidirectional wheels of Subsection 12.5.2 undergoes 
pure translation. Under these conditions, the robot has only two degrees 
of freedom and, hence, a 2 x 2 inertia matrix. Derive an expression for its 
inertia matrix. Hint: The constraint for pure translation can be written 
as 
SL^Oa = 0 
and hence, if the 3 x 2 matrix L is an orthogonal complement of SL, i.e., if 
a'^L = O^^, where O2 is the 2-dimensional zero vector, then the underlying 
Euler-Lagrange equations of the constrained system can he derived by mul-
tiplying the two sides of the mathematical model found in Subsection 12.5.2 
L^I0a + L^C6lâ = L^r - 1^8 
Further, upon writing 9a as a linear transformation of a 2-dimensional 
vector u, namely, as 
0o=Lu 
we obtain 
L^ILii + L^CLu = L^r - L^S 
and hence, the generalized inertia matrix under pure translation is L^IL. 
12.9 Find the maneuver(s) under which the Coriolis and centrifugal forces of 
the robot analyzed in Subsection 12.5.2 vanish. Note that in general, 
these forces do not vanish, even though the generalized inertia matrix of 
the robot is constant. 
12.10 Find the eigenvalues and eigenvectors of the matrix of generalized in-
ertia of the 3-dof rolling robot with omnidirectional wheels analyzed in 
Subsection 12.5.2. 
12.11 The Euler-Lagrange equations derived for holonomic mechanical systems 
in Section 12.3, termed the Euler-Lagrange equations of the second kind, 
require that the generalized coordinates describing the system be inde-
pendent. In nonholonomic mechanical systems, a set of kinematic con-
straints is not integrable, which prevents us from solving for dependent 

12.6 Exercises 
505 
from independent generalized coordinates, the application of the Euler-
Lagrange equations as described in that section thus not being possible. 
However, dependent generalized coordinates can be used if the Euler-
Lagrange equations of the first kind are recalled. To this end, we let q 
be the m-dimensional vector of generalized coordinates that are subject 
to p differential constraints of the form 
A(q)q = b(q,t) 
where A is a p x m matrix of constraints and b is a p-dimensional vector 
depending on the configuration q and, possibly, on time explicitly. When 
b does not contain t explicitly, the constraints are termed scleronomic; 
otherwise, rheonomic. Furthermore, let n = m â p be the mobility of the 
system. The Euler-Lagrange equations of the first kind of the system at 
hand take on the form 
d (dL\ 
dL 
^ 
^T^ 
Jt[d^)-o^ = ^'-'''' 
where A is a p-dimensional vector of Lagrange multipliers that are chosen 
so as to satisfy the kinematic constraints. Thus, we regard the m depen-
dent generalized coordinates grouped in vector q as independent, their 
constraints giving rise to the constraint forces A^A. 
Use the Euler-Lagrange equations of the first kind to set up the mathe-
matical model of the rolling robot with omnidirectional wheels studied in 
Subsection 12.5.2. 

Kinematics of Rotations: A 
Summary 
The purpose of this appendix is to outHne proofs of some results in the realm 
of kinematics of rotations that were invoked in the preceding chapters. Further 
details are available in the literature (Angeles, 1988). 
We start by noticing two preliminary facts whose proof is straightforward, 
as the reader is invited to verify. 
Lemma A.l The {d/dt){ â¢) and the vect( â¢) operators, for 3x3 matrix operands, 
commute. 
and 
Lemma A.2 The {d/dt){ â¢) and the tr( â¢) operators, for nxn 
matrix operands, 
commute. 
Furthermore, we have 
Theorem A.l Let A and S both be 3 x 3 matrices, the former arbitrary, the 
latter skew-symmetric. 
Then, 
vect(SA) = i [ t r ( A ) l - A ] s 
where s = vect(S). 
Proof: An invariant proof of this theorem appears elusive, but a componentwise 
proof is straightforward. Indeed, let aij denote the (z, j) entry of A, and Si the 
ith component of s. Then, 
SA = 
-^21^3 + ^31^2 
âCi22S3 + (23252 -<22353 + 0,3382 
<ill53 - CL31S1 ai2S3 - 032^1 
^1353 - 03381 
-an82 + 02181 -ai282 + ^22^1 
-^1352 + ^2351 

508 
A. Kinematics of Rotations: A Summary 
Hence, 
vect( SA) = -
On the other hand, 
t r ( A ) l - A = 
and hence. 
(<222 + ^ 3 3 ) 5 1 - ai2S2 
- 
ai3S3 
( a n + 0 3 3 ) ^ 2 - ^ 2 1 ^ 1 - 
a23S3 
{an 
+ ^ 2 2 ) 5 3 - 0^31^1 - 
a3252 
^22 + <^33 
~<il2 
~Cil3 
â0>21 
CLll + ^33 
â^23 
- ^ 3 1 
-(232 
an 
+ ^22 
l[tr(A)l-A]s=l 
(^22 + a33)si - ai2S2 - ^1363 
(an + a33)52 - a2isi - a23S3 
(an + ^22)53 - ^3151 - a32S2 
thereby completing the proof. Moreover, we have 
Theorem A.2 Let A, S, and s be defined as in Theorem A.l. 
Then, 
tr(SA) = -2s-[vect(A)] 
Proof: Prom the above expression for SA, 
tr( SA) = -a2i53 -f a3i52 + ai253 - a325i - ai352 + a235i 
= (^23 - az2)si + (a3i - ai3)52 + (ai2 - ^21)53 
[Sl 
52 
S3] 
(223 â <232 
^31 - 
a i 3 
ai2 
- 
a2i 
-2s-[vect(A)] 
(A.l) 
q.e.d. 
Now we turn to the proof of the relations between the time-derivatives of 
the rotation invariants and the angular-velocity vector. Thus, 
Theorem A.3 Let v denote the ^-dimensional array of natural rotation invari-
ants, as introduced in Section 2.3.2 and reproduced below for quick reference: 
V 
= 
Then the relationship between v and the angular velocity u is given by 
V â No; 
with N defined as 
N = 
[sin0/(2(l - cos(?5>))](l - ee^) - (1/2)E 

509 
Proof: Let us obtain first an expression for e. This is readily done by recalling 
that e is the real eigenvector of Q, i.e., 
Qe = e 
Upon differentiation of both sides of the foregoing equation with respect to time, 
we have 
Qe + Qe = e 
i.e., 
(1 - Q)e = Qe 
An expression for Q can be derived from eq.(3.44), which yields 
Q = IHQ 
(A.2) 
Therefore, 
Qe = 12e = a? X e 
and hence, the above equation for e takes the form 
(1 - Q ) e = Cc? X e 
from which it is not possible to solve for e because matrix (1 â Q) is singular. 
Indeed, since both matrices inside the parentheses have an eigenvalue +1, their 
difference has an eigenvalue 0, which renders this difference singular. Thus, one 
more relation is needed in order to be able to determine e. This relation follows 
from the condition that ||e|p = 1. Upon differentiation of both sides of this 
condition with respect to time, we obtain 
e^e = 0 
the last two equations thus yielding a system of four scalar equations to deter-
mine e. We now assemble these equations into a single one, namely, 
Ae = b 
where A is a 4 x 3 matrix, while b is a 4-dimensional vector, defined as 
l - Q 
b = 
w X e 
0 
The foregoing overdetermined system of four equations in three unknowns now 
leads to a system of three equations in three unknowns if we multiply its two 
sides by A^ from the right, thereby producing 
A^Ae = A^b 
We can therefore solve for e from the above equation in the form 
e = (A^A)-iA^b 

510 
A. Kinematics of Rotations: A Summary 
where A^A takes the form 
A'^A = (2)1 - (Q + Q^) 4- ee^ 
But the sum inside the parentheses is readily identified as twice the symmetric 
component of Q, if we recall the Cartesian decomposition of matrices introduced 
in eq.(2.56). Therefore, 
Q + Q^ = 2[(cos0)l + (1 - cos(f))ee^] 
Hence, 
A^A = 2(1 - cos(?!))l - (1 - 2cos(^)ee^ 
As the reader can readily verify, the inverse of this matrix is given by 
/A^AN-iâ 
^ 
1 
1 â2cos0 
rp 
^ 
^ 
" 2(l-cos(/)) 
"^ 2(1 - cos (^)^^ 
which fails to exist only in the trivial case in which Q becomes the identity 
matrix. Upon expansion of the last expression for e, we have 
e = --7â-^: 
-r(E - Q^E)a; 
2(1 - cos (/))^ 
^ 
^ 
Now Q^E is obtained by recalling eq.(2.54), thereby obtaining 
Q'^E = (cos (^)E + (sin (j)){l - ee^) 
the final expression for e thus being 
^ " ~2(l-los0)^^^ ~ ''''^^^^ ~ (sin0)(l - ee^)]a; 
Now, an expression for 0 is obtained upon equating the trace of the two 
sides of eq.(A.2), which yields 
tr(Q) = t r ( l ^ Q ) 
(A.3) 
From Lemma A.2, 
tr(Q) = | t r ( Q ) 
(A.4) 
and hence, 
tr(Q) = - 2 0 sin (^ 
On the other hand, from Theorem A.2, 
tr(l^Q) = -2a;-(sin(/))e 
Therefore, 
(/> = cj â¢ e 
Upon assembling the expressions for e and 0, we obtain the desired relation, 
with N given as displayed above, thereby proving the theorem. 

511 
Theorem A.4 Let A denote the 4-dimensional array of linear rotation invari-
ants, as introduced in Section 2.3.3 and reproduced below for quick reference: 
X = 
(sin(/))e 
coscf) 
vect(Q) 
[ t r ( Q ) - l ] / 2 
Then the relationship between A and the angular velocity is given by 
A = Lcj 
with L defined as 
~(l/2)[tr(Q)l-Q]" 
Proof: From Lemma A.l, we have 
d 
dt vect( Q) = vect( Q ] 
(A.5) 
On the other hand, equating the vectors of the two sides of eq.(A.2) yields 
vect( Q) = vect( ITIQ) 
and hence, 
dt vect(Q) = vect(nQ) 
But, if we recall Theorem A.l, the foregoing relation leads to 
| v e c t ( Q ) = i [ t r ( Q ) l - Q ] a ; 
Likewise, from Lemma A.2, 
and hence. 
we have 
l*^(Q) 
4tr(Q) = 
= tr(Q) 
= tr( nq) 
Now, if we recall Theorem A.2, the foregoing relation leads to 
d 
dt tr( Q) = -2cj â¢ [vect( Q)] = -2(sin cfye^ cj 
Hence, 
dt (coscf)) â â (sin(/))e^cÂ«; 
Upon assembling the last two expressions for the time-derivatives of the vector 
of Q and cos 0, we obtain the desired relation. 

512 
A. Kinematics of Rotations: A Summary 
Theorem A.5 Let rf denote the 4-dimensional array of the Euler-Rodrigues 
parameters of a rotation, as introduced in Section 2.3.6 and reproduced below 
for quick reference: 
V = 
[sin(0/2)]e 
[ cos((^/2) J 
Then, the relationship between rj and the angular velocity takes the form 
if) = Hcj 
with H defined as 
1 
H = 
cos(0/2)l-sin(0/2)E 
- sin(0/2)e^ 
r o l - R 
T 
âr^ 
where R is the cross-product matrix 
ofr. 
Proof: If we differentiate r, we obtain 
> \ 
6 
e sin 1 - 1 + e - c o s (I 
and hence, all we need to derive the desired relations is to find expressions for 
e and ^ in terms of the Euler-Rodrigues parameters. Note that from Theo-
rem A.3, we already have those expressions in terms of the natural invariants. 
Thus, substitution of the time-derivatives of the natural invariants, as given in 
Theorem A.3, into the above expression for f leads to 
â¢ l s i n ( | l E . - f ^ 
1 
sincp 
+ 
-ie-u}) 
1 g.^ (f\ 
_si 
2^'" \2j 
1 -cos4> 
/ (j)\ 
. ((f)\ 
sine/) 
u 
s m , ^ 
1 - COS 0 
(A.6) 
Now, by recalling the identities giving the trigonometric functions of <j) in terms 
of those of 0/2, we obtain 
sm 
(f)\ 
SVCicf) 
((j) 
T: 
-^ 
r = cos â 
2 / l-cos(/> 
\2 
and hence, the term in brackets of the above expression vanishes, the expression 
for f thus reducing to 
1 
r = 
cos 
l - s i n ( ^ l E 
u) = - ( r o l - R ) c j 
thereby completing the proof. 

B 
Numerical Equation-Solving 
The numerical solution of the most common types of systems of linear and 
nonlinear equations is outlined in this Appendix. 
We start with the solution of the linear algebraic system 
Ax = b 
(B.l) 
with A defined as a full-rank m x n matrix, while x and b are n- and m-
dimensional vectors, respectively. 
The case m = n is the most frequently 
encountered; this case was discussed in Section 5.2 and need not be further 
discussed. We will consider only two cases: 
(a) over deter mined: m > n; and 
(b) underdetermined: m < n. 
The overdetermined case does not admit a solution, unless vector b happens 
to lie in the range of A. Besides this special case, then, we must reformulate the 
problem; rather than seeking a solution of eq.(B.l), we will look for an approx-
imation of that system of equations. Moreover, we will seek an approximation 
that will satisfy an optimality condition. 
The underdetermined case, on the contrary, admits infinitely many solutions, 
the objective then being to seek one that satisfies (a) the system of equations 
and (b) an additional optimality condition as well. 
A nonlinear system of equations takes the form 
f (x) = 0^ 
where f and x are m- and n-dimensional vectors, respectively, while 0^ is the 
m-dimensional zero vector. We consider the cases: 
(a) determined: m â U] and 
(b) overdetermined: m > n. 
The underdetermined case m < n^ not occuring in the book, and requiring 
specialized knowledge of mathematical programming, is left out. 
We study each of the two cases above in the sections below. 

514 
B. Numerical 
Equation-Solving 
B.l 
The Overdetermined Linear Case 
The error e in the approximation of eq.(B.l) is defined as 
e = b - Ax 
(B.2) 
An obvious way of imposing an optimality condition on the solution x is to 
specify that this solution minimize a norm of e. All norms of e can be expressed 
as 
with ek being understood as the fcth component of the m-dimensional vector 
e. When p = 2, the foregoing norm is known as the Euclidean norm, which 
we have used most frequently in this book. When p â> oo, the infinity norm, 
also known as the Chebyshev norm, is obtained. It turns out that upon seeking 
the value of x that minimizes a norm of e, the simplest is the Euclidean norm, 
for the minimization of its square leads to a linear system of equations whose 
solution can be obtained directly, as opposed to iteratively. Indeed, let us set 
up the minimization problem below: 
;^(x) = i||e||^ 
-> 
mm 
(B.4) 
The normality condition of the minimization problem at hand is derived upon 
setting the gradient of z with respect to x equal to zero, i.e., 
1 = 0 
(B.5, 
Now, the chain rule and the results of Subsection 2.3.1 allow us to write 
dz 
f de\ 
dz 
rj, 
T 
dx " \dx J de ~~ 
and hence, we have the first result: 
Theorem B.1.1 The error in the approximation of eq.(B.l), for the full-rank 
m X n matrix A, with m > n, is of minimum Euclidean norm if it lies in the 
nullspace of A^ : 
A^e = On 
(B.7) 
Furthermore, if eq.(B.2) is substituted into eq.(B.6), and the product thus 
resulting is substituted, in turn, into the normality condition, we obtain 
A'^Ax = A^b 
(B.8) 
which is known as the normal equation of the minimization problem at hand. By 
virtue of the assumption on the rank of A, the product A^ A is positive-definite 

B.l The Overdetermined Linear Case 
515 
and hence, invertible. As a consequence, the value XQ of x that minimizes the 
EucUdean norm of the approximation error of the given system is 
xo - (A^A)-iA^b 
(B.9) 
the matrix coefficient of b being known as a generalized inverse of A. The error 
obtained with this value is known as the least-square error of the approximation, 
i.e., 
eo = b - A x o 
(B.IO) 
The reader should be able to prove one more result: 
Theorem B.l.2 (Projection Theorem) The least-square error eo is orthog-
onal to AXQ. 
While the formula yielding the foregoing generalized inverse is quite simple to 
implement, the number of floating-point operations (flops) it takes to evaluate, 
along with the ever-present roundoff errors in both the data and the results, 
renders it not only inefficient, but also unreliable if applied as such. Indeed, 
if we recall the concept of condition number, introduced in Section 5.8 and 
recalled in Subsection 9.4.1, along with the definition adopted in the latter 
for the condition number, it becomes apparent that the condition number of 
A^A is exactly the square of the condition number of A. This result can be 
best understood if we apply the Polar-Decomposition Theorem, introduced in 
Section 5.8, to rectangular matrices, but we will not elaborate on this issue here. 
As a consequence, then, even if A is only slightly ill-conditioned, the product 
A^A can be catastrophically ill-conditioned. Below we outline two procedures 
to calculate efficiently the least-square approximation of the overdetermined 
system (B.l) that preserve the condition number of A and do this with a low 
number of flops (floating-point operations). 
B.1.1 
The Numerical Solution of an Overdetermined 
System of Linear Equations 
In seeking a numerical solution of the system of equations at hand, we would 
like to end up with a triangular system, similar to the LU-decomposition ap-
plied to solve a system of as many equations as unknowns, and hence, we have 
to perform some transformations either on the rows of A or on its columns. 
A safe numerical procedure should thus preserve (a) the Euclidean norm of 
the columns of A and (b) the inner product between any two columns of this 
matrix. Hence, a triangularization procedure like LU-decomposition would not 
work, because this does not preserve inner products. Obviously, the transforma-
tions that do preserve these inner products are orthogonal, either rotations or 
reflections. Of these, the most best-known methods are (a) the Gram-Schmidt 
orthogonalization procedure and (b) Householder reflections. 
The Gram-Schmidt procedure consists in regarding the columns of A as a set 
of n m-dimensional vectors { a^ jj*. From this set, a new set { e^ }i is obtained 

516 
B. Numerical 
Equation-Solving 
that is orthonormal The procedure is quite simple and works as follows: Define 
ei as 
ei = ^ 
(B.ll) 
11^11 
Further, we define e2 as the normal component of a2 onto e2, as introduced in 
eq.(2.6b), i.e., 
.-L â 
= (1 
eief )a2 
62 = 
(B.12a) 
(B.12b) 
In the next step, we define es as the unit vector normal to the plane defined 
by ei and e2 and in the direction in which the inner product ejsis is positive, 
which is possible because all vectors of the set { a^ } j^ have been assumed to be 
linearly independentâremember that A has been assumed to be of full rank. 
To this end, we subtract from as its projection onto the plane mentioned above, 
i.e., 
a^ = (1 - eief - e2e^)a3 
63 = 
(B.13a) 
(B.13b) 
and so on, until we obtain e^-i, the last unit vector of the orthogonal set, e^, 
being obtained as 
SL^ = (1- eief - e2e^ 
en-ie^_i)an 
(B.14a) 
Finally, 
en = T T ^ 
(B.14b) 
In the next stage, we represent all vectors of the set { a^ }i^ in orthogonal coor-
dinates, i.e., in the base O = {ek}i, 
which are then arranged in an m x n array 
AQ. By virtue of the form in which the set { e^ }'^ was defined, the last m â k 
components of vector a^ vanish. We thus have, in the said orthonormal basis. 
[^k]o 
= 
O^lk 
Ot2k 
OLkk 
0 
0 
(B.15a) 
Further, we represent b in 0 as well, thus obtaining 
(B.15b) 

B.l The Overdetermined Linear Case 
517 
Therefore, eq.(B.l), when expressed in O, becomes 
a i l 
0 
0 
0 
" 1 2 
Â« 2 2 
0 
0 
0 
0 
â¢ â¢ ' 
OLin 
... 
0 
... 
0 
X2 
-Xfi -
= 
r ^1 1 
^ 2 
/?n+l 
{B.16) 
whence x can be computed by back-substitution. It is apparent, then, that the 
last m â n equations of the foregoing system are incompatible: their left-hand 
sides are zero, while their right-hand sides are not necessarily so. What the 
right-hand sides of these equations represent, then, is the approximation error 
in orthogonal coordinates. The error Euclidean norm is, then. 
|eo| ^ v ^ + . 
(B.17) 
The second method discussed here is based on the application of a chain of n 
reflections { H^ }'^, known as Householder reflections, to both sides of eq.(B.l). 
The purpose of these reflections is, again, to obtain a representation of matrix A 
in upper-triangular form (Golub and Van Loan, 1989). The algorithm proceeds 
as follows: We assume that we have applied reflections Hi, H2, ..., Hfc_i, in 
this order, to A that have rendered it in upper-trapezoidal form, i.e.. 
A^_i = Hi-
^11 
0 
0 
0 
0 
..H2H1A 
0 
0 
0 
0 
0 
a. 3,2-1 
^2-1,2-
0 
Â«2z 
0 
-l,i 
m,2 
Â« 3 n 
-l,n 
(B.18) 
The next Householder reflection, H^, is determined so as to render the last m â i 
components of the ith column of H^A^-i equal to zero, while leaving its first 
i â \ columns unchanged. We do this by setting 
oci = szn{al)^{aiy 
+ Â«^i,,)2 + â¢ â¢ â¢ + {a*^^Y 
u, = [0 0 â¢â¢â¢ 
0 < + ai 
a|+i,, 
â¢â¢â¢ 
a V f 
H, = l 

518 
B. Numerical 
Equation-Solving 
where sgn(a;) is defined as +1 if a: > 0, as â1 if x < 0, and is left undefined 
when X = 0. As the reader can readily verify, 
-||ui|p = ai{ui)i = ai{a%-\-ai) = ji 
and hence, the denominator appearing in the expression for H^ is calculated 
with one single addition and one single multiplication. It is noteworthy that 
Hi, as defined above, is the nxn counterpart of the 3 x 3 pure reflection defined 
in eq.(2.5). As a matter of fact, H^ reflects vectors in m-dimensional space onto 
a hyperplane of unit normal u^/||ui||. 
It is important to realize that 
(a) ai is defined with the sign of a*^ because 7^ is a multiple of the ith compo-
nent of u^, which is, in turn, the sum of a*^ and a^, thereby guaranteeing 
that the absolute value of this sum will always be greater than the abso-
lute value of each of its terms. If this provision were not made, then the 
resulting sum could be of a negligibly small absolute value, which would 
thus render 7^ a very small positive number, thereby introducing unnec-
essarily an inadmissibly large roundoff-error amplification upon dividing 
the product UiuJ by 7^; 
(b) an arbitrary vector v is transformed by H^ with unusually few flops, 
namely, 
H^v = V 
{v'^Ui)ui 
li 
Upon application of the n Householder reflections thus defined, the system 
at hand becomes 
HAx = Hb 
(B.19) 
with H defined as 
H = Hn...H2Hi 
(B.20) 
Similar to that in equation (B.16), the matrix coefficient of x in eq.(B.19), i.e., 
HA, is in upper-triangular form. That is, we have 
HA = 
U 
Hb 
b i 
(B.21) 
with Om'n denoting the {m â n)y.n 
zero matrix, m' = m â n, and hu and b^ 
being n- and m'-dimensional vectors. The unknown x can thus be calculated 
from eq.(B.19) by back-substitution. 
Note that the last m' components of the left-hand side of eq.(B.19) are zero, 
while the corresponding components of the right-hand side of the same equation 
are not necessarily so. This apparent contradiction can be resolved by recalling 
that the overdetermined system at hand in general has no solution. The lower 
part of b, bi,, is then nothing but an m'-dimensional array containing the 

B.2 The Underdetermined Linear Case 
519 
nonzero components of the approximation error in the new coordinates. That 
is, the least-square error, eo, in these coordinates takes the form 
Therefore, 
On 
(B.22a) 
eoll = llb^ll 
(B.22b) 
B.2 
The Underdetermined Linear Case 
In this section we study the solution of system (B.l) under the assumption that 
m <n and rank(A) = m. Now, the system under study admits infinitely many 
solutions, which allows us to impose one condition on a specific solution that we 
may want to obtain. The obvious choice is a minimality condition on a norm of 
X. As in the previous section, the minimization of the square of the Euclidean 
norm of x leads to a linear problem, and hence, a direct solution of the problem 
at hand is possible. We thus have 
;^(x) = -||x||^ 
-> 
min 
(B.23) 
subject to the constraint represented by eq.(B.l). Since we now have a con-
strained minimization problem, we proceed to its solution via Lagrange multi-
pliers. That is, we introduce a new objective function C(x)j defined as 
C(x) = ^(x) + A^(Ax - b) 
-> 
min 
(B.24) 
x,A 
subject to no constraints, with A defined as an m-dimensional vector of La-
grange multipliers, as yet to be determined. We thus have now an uncon-
strained minimization problem with m-{-n design variables, the m components 
of A and the n components of x, that we group in the (m + n)-dimensional 
vector y = [x^ 
A^]^. The normality condition of the foregoing problem can 
now be stated as 
J- = Om+n 
(B.25a) 
with Om+n defined as the (m-h n)-dimensional zero vector. The above condition 
can be broken down into the two conditions below: 
dx 
with Om and On defined, respectively, as the m- and n-dimensional zero vectors. 
The above equations thus lead to 
^ 
= X -h A'^A = On 
(B.26) 
ax 
^ 
= A x - b = On^ 
(B.27) 

520 
B. Numerical 
Equation-Solving 
Upon elimination of A from the above system of equations, we obtain 
x = A^(AA^)-ib 
(B.28) 
which is the minimum-norm 
solution of the proposed problem. Again, the for-
mula yielding the foregoing solution is deceptively simple. If we attempt the 
calculation of the inverse occurring in it, we risk introducing unnecessarily an in-
admissibly ill-conditioned matrix, the product AA^. Therefore, an alternative 
approach to the straightforward implementation of the above formula should be 
attempted, as we do in the subsection below. 
B.2.1 
The Numerical Solution of an Underdetermined 
System of Linear Equations 
The simplest way of solving this problem is by introducing the m x m identity 
matrix 1, in a disguised manner, between the two factors of the left-hand side 
of eq.(B.l). To this end, we assume that we have an orthogonal mx m matrix 
H, so that 
H^H = 1 
(B.29) 
equation (B.l) thus becoming 
AH^Hx = b 
which can be rewritten in the form 
AH^v = b 
with V defined, obviously, as 
v = Hx 
(B.30a) 
(B.30b) 
(B.30c) 
Now, H is chosen as the product of m Householder reflections that transforms 
A^ into upper-triangular form, i.e., so that 
HA^ = 
U 
(B.31) 
with On'm defined as the n' x m zero matrix and n' = n â m. Moreover, U is 
upper-triangular. Further, let us partition v in the form 
V = 
(B.32) 
Upon substitution of eqs.(B.31) and (B.32) into eq.(B.30b), we obtain 
[U'^ 
Omn'] 
= b 
where Ojnn' is the m x n' zero matrix. Hence, 
U'^Vc/ + Omn'VL = b 
(B.33) 

B.3 Nonlinear-Equation Solving: The Determined Case 
521 
whence it is apparent that YL can attain any value. Now, since v is the image of 
X under an orthogonal transformation, the Euclidean norms of these two vectors 
are identical, and hence. 
|x|P = l|vt/|P + ||vL| 
(B.34) 
Therefore, if we want to minimize the Euclidean norm of x, the obvious choice 
of vjr, is zero. Furthermore, from eq.(B.33), 
Vt; = U - ^ b 
and so. 
X = H^v = H^ u-^b 
On' 
(B.35) 
(B.36) 
with On' denoting the n'-dimensional zero vector, thereby completing the nu-
merical solution of the problem at hand. 
B.3 
Nonlinear-Equation Solving: The Determined 
Case 
Definition B.3.1 A system of algebraic equations containing some that are 
not linear is termed nonlinear. If the number of equations is identical to the 
number of unknowns, the system is determined. 
Example: Find the intersection of the circle and the hyperbola depicted in 
Fig. B.l. 
Figure B.l: Intersection of a circle and a hyperbola 

522 
B. Numerical 
Equation-Solving 
Solution: The equations of the circle and the hyperbola are 
fi{x,y) 
=x^-{-y'^-4 
= 0 
The solution to a nonlinear system of equations, when one exists at all, is usually 
multiple: The circle and the hyperbola of Fig. B.l intersect at four points {Pi}i, 
of coordinates (xi^yi), as displayed in Table B.l. The problem may have no 
Pi 
1 
2 
3 
4 
Xi 
75/2 
V ^ 
-N/572 
-^/572 
Vi 
Vm 
-v/372 
V372 
-1/372 
Table B.l: The four intersection points of the circle and the hyperbola of Fig. B.l 
real solution, e.g., the circle and the hyperbola of Fig. B.2 do not intersect. 
The system of equations from which the coordinates of the intersection points 
are to be computed is given below: 
f^{x,y) 
= 
x^-\-y^-l=0 
f^(x,y)=x^-y^-16 
= 0 
This system of equations admits no real solution! 
In general, a determined nonlinear system of equations takes the form 
f (x) = 0 
where x and f are both n-dimensional vectors: 
X = 
Xi 
X2 
fl{xi, 
X2, 
/ 2 ( ^ 1 , 
X2, 
}n \Xl 5 ^2 J â¢ â¢ â¢ J ^n) -I 
(B.37) 
(B.38) 
B.3.1 
The Newton-Raphson Method 
We outline below the method of solution of determined nonlinear systems using 
the Newton-Raphson method. This is an iterative method, whereby a sequence 
of approximations is obtained that, if converging, approaches the solution in a 
finite number of iterations within a prescribed tolerance. 

B.3 Nonlinear-Equation Solving: The Determined Case 
y 
- 4 
-1 
1 
4 
X 
523 
Figure B.2: A circle and a hyperbola that do not intersect 
A value x^ of x is given as an initial guess: 
and f is evaluated at x^: 
XÂ° = [Pl 
P2 ... 
Pn? 
fO = f (X^) 
If the value x^ was chosen randomly, most likely it will not verify the given 
system of equations, i.e.. 
Next, we look for a "small" increment Ax of x (the increment is small if its 
normâany normâis small): 
Ax = [Aa:i 
Aa:2 
... 
^Xnf 
Now, f (x^ + Ax) is evaluated up to its linear approximation (all quadratic and 
higher-order terms are dropped from its series expansion): 
f(xO + Ax)Â«f(xO) + g|^^^oAx 
(B.39) 
The Jacobian matrix of f with respect to x is defined as the matrix of partial 
derivatives of the components of f with respect to all the components of x: 
dfi/dxi 
dfi/dx2 
â¢â¢â¢ 
dfi/dxn 
df2/dXi 
df2/dX2 
'" 
df2/dXn 
dfn/dXi 
dfn/dX2 
â¢â¢â¢ 
dfn/dXn 
(B.40) 

524 
B. Numerical 
Equation-Solving 
In the next step, we find Ax that renders zero the hnear approximation of 
f(xo -f- Ax): 
fo + F(x^)Ax = 0 
or 
F(x^)Ax = - f Â° 
(B.41) 
whence Ax can be found using, for example, Gaussian elimination: 
Ax = - F Q ^f^, 
Fo = F(x^) 
(B.42) 
Next, X is updated: 
X 
<- 
xÂ° + Ax 
(B.43) 
the procedure stopping when 
||Ax|| < e, 
(B.44) 
for a prescribed tolerance ex -
Remarks: 
â¢ Use the maximum norm to test convergence in eq.(B.44), for it costs vir-
tually nothing; 
â¢ no guarantee that the Newton-Raphson method will converge at all; 
â¢ whether the Newton-Raphson method converges is dependent upon the 
initial guess, x^; 
â¢ the boundary between regions of convergence and divergence is a fractal 
(Mandelbrot, 1983; Gleick, 1988); 
â¢ when the Newton-Raphson method converges, it does so quadratically: At 
every iteration, two decimal places of accuracy are gained (Dahlquist and 
Bjorck, 1974). 
B.4 
Overdetermined Nonlinear Systems of Equa-
tions 
A system of nonlinear equations of the form 
f(x) = 0 
(B.45) 
where x is a n-dimensional vector and f is a ^-dimensional vector, is overdeter-
mined if q > n. Just as in the linear case, in general, no vector x can be found 
that verifies all the q scalar equations of the system. However, approximations 
can be found that minimize the least-square error of the approximation, as de-
scribed in the balance of this Section. The method of solution adopted here is 
the overdetermined counterpart of the Newton-Raphson method. 

B.4 Overdetermined Nonlinear Systems of Equations 
525 
B.4.1 
The Newton-Gauss Method 
Problem: Find an approximate solution to system (B.45) that verifies those 
equations with the least-square error: 
F(x) = if^Wf 
-> 
min 
(B.46) 
where W is a ^ x ^ positive-definite weighting matrix. 
Solution: We follow a procedure similar to Newton-Raphson's, which is known 
as the Newton-Gauss method, as described below: 
First, an initial guess xÂ° of x is given; then, we produce the sequence 
xi,x2, ..., 
(B.47) 
such that 
x^+i == x^ + Ax^ 
(B.48) 
Calculation of Ax'^: 
â¢ Factor W into its two Cholesky factors: 
W = V^V 
(B.49) 
which is possible because W is assumed positive-definite. 
â¢ Compute Ax^ as the least-square solution of the unconstrained overdeter-
mined linear system 
VF(x^)Ax^ = -Vf(Ax^) 
(B.50) 
with F(x) defined as the qxn Jacobian matrix of the vector function f (x), 
i.e., 
F(x) = ^ 
(B.51) 
Dropping superscripts for the sake of notation-simplicity and recalling 
eqs.(B.7) and (B.8), 
Ax = - ( F ^ W F ) - ^ F ^ W f 
(B.52) 
This procedure is iterative, stopping when a convergence criterion, dis-
cussed in Subsection B.4.2, is met. 
B.4.2 
Convergence Criterion 
Calculate first VF(x): 

526 
B. Numerical 
Equation-Solving 
Hence, the condition for a stationary point is 
F^Wf = 0 
(B.55) 
which is the normality condition of Problem (B.46). 
It is thus apparent that, at a stationary point of F, f (x) need not vanish; 
however, f(x) must lie in the nullspace of F^W. Moreover, from eqs.(B.52) 
and (B.55) follows that, at a stationary point, Ax vanishes. Hence, the conver-
gence criterion is 
||Ax|| < â¬ 
(B.56) 
where e is a prescribed tolerance. 
Remarks: 
â¢ The normality condition (B.55) alone does not guarantee a minimum, but 
only a stationary point. 
â¢ However, as it turns out, if the procedure converges, then it does so, to 
a second-order approximation, to a minimum, and neither to a maximum 
nor a to saddle point, as we prove below. 
The sequence F(xÂ°), F(x^), ..., F(x^), F(x^+^), ..., obtained from the se-
quence of X values, evolves, to a first order, as AF(x), given by 
A F = ( f ) ' A x 
(B.57) 
i.e., 
AF = f^WFAx 
(B.58) 
Upon plugging expression (B.52) of Ax into eq. (B.58), we obtain 
A / = -f^ WF(F^WF)-^F^Wf = -f^Mf 
(B.59) 
^ 
V 
' 
M 
where, apparently, M is a ^x^ positive-definite matrix. As a consequence, f^Mf 
becomes a positive-definite quadratic expression of f; hence, AF is negative 
definite. Thus, the second-order approximation of F(x) is negative-definite, 
and hence, the sequence of F values decreases monotonically. That is, in the 
neighbourhood of a stationary point the first-order approximation of f (x) is good 
enough, and hence, if the procedure converges, it does so to a minimum. 
The reader may wonder whether the Newton-Raphson method can be used to 
solve nonlinear least-square problems. Although the answer is yes, the Newton-
Raphson method is not advisible in this case, as made apparent below. 
Recall VF from eqs.(B.46) and (B.47): 
VF(x) = | l - = F ^ ( x ) ^ f(x) 
nxq 
^^^ q-d\m 
VF(x) = 0 =^ F^(x)Wf(x) = 0 
(NC) 
> 
,, 
' 

B.4 Overdetermined Nonlinear Systems of Equations 
527 
thereby obtaining a determined system of n equations in n unknowns. This 
system can be solved using Newton-Raphson method which requires Vt/?(x): 
VV,(x) = g 
= | ^ [ F ^ W f ( x ) ] 
(af/ax)^ 
That is, V'0(x) involves second-order derivatives of ip with respect to x: 
dxjdxi , i = 
l,...,n 
In summary, the Newton-Raphson method is too cumbersome and prone to 
ill-conditioning, for it is based on the normality conditions of the problem at 
hand. 

References 
Al-Widyan, K. and Angeles, J., 2004, "The robust design of Schonflies-motion 
generators," in Lenarcic, J., and Galletti, C. (editors). On Advances in Robot 
Kinematics, Kluwer Academic Publishers, Dordrecht, pp. 339-350 
Albala, H., 1982, "Displacement analysis of the iV-bar, single-loop, spatial link-
age. Part I: Underlying mathematics and useful tables", and "Part II: Basic 
displacement equations in matrix and algebraic form", ASME J. Mechanical 
Design 104, pp. 504-519, 520-525. 
Alizade, R.A., Duffy, J., and Hajiyev, E.T., 1983, "Mathematical models for 
analysis and synthesis of spatial mechanism. Part IV: Seven-link spatial mech-
anisms". Mechanism and Machine Theory 18, no. 5, pp. 323-328. 
Allen, P.K., Michelman, P., and Roberts, K.S., 1989, "An integrated system 
for dextrous manipulation", Proc. IEEE Int. Conf. on Robotics & Automation, 
Scottsdale, pp. 612-617. 
Altmann, S.L., 1989, "Hamilton, Rodrigues, and the quaternion scandal. What 
went wrong with mathematical discoveries in the nineteenth century". Mathe-
matics Magazine 62, no. 5, pp. 291-308. 
Angeles, J., 1982, Spatial Kinematic Chains. Analysis, Synthesis, 
Optimization, 
Springer-Verlag, Berlin. 
Angeles, J., 1985, "On the numerical solution of the inverse kinematic problem". 
The Int. J. Robotics Res. 4, no. 2, pp. 21-37. 
Angeles, J., 1988, Rational Kinematics, Springer-Verlag, New York. 
Angeles, J., 1989, "On the use of invariance in robotics-oriented redundant 
sensing", Proc. IEEE Int. Conf. on Robotics & Automation, Scottsdale; Mayl4-
19, pp. 599-603. 
Angeles, J., 1994, "On twist and wrench generators and annihilators", in Seabra 
Pereira, M.F.O., and Ambrosio, J.A.C. (editors). Computer-Aided 
Analysis 
of Rigid and Flexible Mechanical Systems, Kluwer Academic Publishers, Dor-
drecht. 

530 
References 
Angeles, J., 1998, "The Application of Dual Algebra to Kinematic Analysis," in 
Angeles, J. and Zakhariev, E. (editors). Computational Methods in Mechanical 
Systems, Springer-Verlag, Heidelberg, Vol. 161, pp. 3-31. 
Angeles, J., 2005, "The degree of freedom of parallel robots: a group-theoretic 
approach," Proc. IEEE International Conference on Robotics & Automation, 
Barcelona, Spain, April 18-22, pp. 1017-1024. 
Angeles, J. and Etemadi Zanganeh, K., 1992a, "The semigraphical determi-
nation of all inverse kinematic solutions of general six-revolute manipulators", 
Proc. 9th CISM-IFToMM Symp.on Theory and Practice of Robots and Manip-
ulators, Sept. 1-4, Udine, pp. 23-32. 
Angeles, J. and Etemadi Zanganeh, K., 1992b, "The semigraphical solutions of 
the direct kinematics of general platform manipulators", Proc. 4ih Int. Symp. 
Robotics and Manufacturing, Nov. 11-13, Santa Fe, vol. 4, pp. 45-52. 
Angeles, J., Hommel, G., and Kovacs, P., 1993, Computational 
Kinematics, 
Kluwer Academic Publishers, Dordrecht. 
Angeles, J. and Lee, S., 1988, "The formulation of dynamical equations of holo-
nomic mechanical systems using a natural orthogonal complement", ASME J. 
Applied Mechanics 55, pp. 243-244. 
Angeles, J. and Ma, 0., 1988, "Dynamic simulation of n-axis serial robotic 
manipulators using a natural orthogonal complement". The Int. J. Robotics 
Res. 7, no. 5, pp. 32-47. 
Angeles, J., Ma, O., and Rojas, A.A., 1989, "An algorithm for the inverse 
dynamics of n-axis general manipulators using Kane's formulation of dynamical 
equations". Computers and Mathematics with Applications 17, no. 12, pp. 1545-
1561. 
Angeles, J., Morozov, A., and Navarro, 0., 2000, "A novel manipulator archi-
tecture for the production of SCARA motions", Proc. IEEE Int. Conf. Robotics 
and Automation, San Francisco, pp. 2370-2375. CD-ROM 00CH37065C, April 
24-28. 
Angeles, J., Rojas, A.A., and Lopez-Cajiin, C.S., 1988, "Trajectory planning in 
robotics continuous-path applications", IEEE J. Robotics & Automation RA-4, 
pp. 380-385. 
Angeles, J., Soucy, G. and Ferric, F., 2000, "The online solution of the hand-
eye problem," IEEE Transactions on Robotics and Automation, Vol. 16, No. 6, 
pp. 720-731. 
Balafoutis, C.A. and Patel, R.V., 1991, Dynamic Analysis of Robot Manipula-
tors: A Cartesian Tensor Approach, Kluwer Academic Publishers, Dordrecht. 

References 
531 
Borenstein, J., 1993, "Multi-layered control of a four-degree-of-freedom mobile 
robot with compliant linkage", Proc. IEEE Int. Conf. on Robotics & Auto-
mation^ Atlanta, pp. 7-12. 
Bottema, 0. and Roth, B., 1979, Theoretical Kinematics^ North-Holland Pub-
lishing, Co., Amsterdam (also available as a 1990 Dover Publications book). 
Brand, L., 1965, Advanced Calculus^ John Wiley & Sons, New York. 
Bricard, R., 1927, Legons de Cinematique, Gauthier-Villars, Paris. 
Bryson, Jr., A.E. and Ho, Y-C, 1975, Applied Optimal Control: Optimization, 
Estimation, and Control, Hemisphere Publishing Corporation, Washington, DC. 
Burdick, J.W., 1995, "A classification of 3R reginal manipulator singularities 
and geometries". Mechanism and Machine Theory 30, no. 1, pp. 71-89. 
Ceccarelli, M., 1995, "Screw axis defined by Giulio Mozzi in 1763", Proc. 
Ninth World Congress on the Theory of Machines and Mechanisms, August 
29-September 2, Milan, vol. 4, pp. 3187-3190. 
Ceccarelli, M., 1996, "A formulation for the workspace boundary of general n-
revolute manipulators", Mechanism and Machine Theory SI, no. 5, pp. 637-646. 
Charentus, S. and Renaud, M., 1989, Calcul du modele geometrique directe de 
la plate-forme de Stewart, LAAS Report # 89260, Laboratoire d'Automatique 
et d'Analyse de Systemes, Toulouse. 
Chasles, M., 1830, "Notes sur les proprietes generales de deux corps semblables 
entr'eux et places d'une maniere quelconque dans I'espace, et sur le deplacement 
fini ou infiniment petit d'un corps solide libre". Bull. Sci. Math. Ferrusaac 14, 
pp. 321-326. 
Cheng, H. and Gupta, K.C., 1989, "An historical note on finite rotations", 
ASME J. Applied Mechanics 56, pp. 139-142. 
Chiang, C.H., 1988, Kinematics of Spherical Mechanisms, Cambridge University 
Press, Cambridge. 
Chou, K.C.J, and Kamel, M., 1988, "Quaternions approach to solve the kine-
matic equation of rotation, AaAx = AxAb, of a sensor-mounted robotic ma-
nipulator", Proc. IEEE Int. Conf 
on Robotics & Automation, 
Philadelphia, 
pp. 656-662. 
Chou, K.C.J, and Kamel, M., 1991, "Finding the position and orientation of 
a sensor on a robot manipulator using quaternions". The Int. J. Robotics Res. 
10, no. 3, pp. 240-254. 
Clavel, R., 1988, "Delta, a fast robot with parallel geometry", Proc. 18th Int. 
Symposium on Industrial Robots, Lausanne, pp. 91-100. 

532 
References 
Comerford, R., 1994, "Mecha...what?", IEEE Spectrum, August, pp. 46-49. 
Company, O., Pierrot, F., Shibukawa, T., and Morita, K., 2001, "Four-degree-
of-freedom parallel robot," European Patent No. EP1084802, March 21. 
Coriolis, G.G., 1835. "Memoire sur les equations du mouvement relatif des 
systemes des corps", J.Ecole Polytechnique 15, cahier 24, pp. 142-154. 
Craig, J.J., 1989, Introduction to Robotics: Mechanics and Control, 2nd Edition, 
Addison-Wesley Publishing Company, Reading, MA. 
CRC Standard Mathematical Tables, 1987, 28th Edition, CRC Press, Boca Ra-
ton, Fla. 
Currie, I.G., 1993, Fundamental Mechanics of Fluids, 2nd Edition, McGraw-Hill 
Book Company, New York. 
Dahlquist, G. and Bjorck, A., 1974, Numerical Methods, Prentice-Hall, Engle-
wood Cliffs, NJ. 
Daniilidis, K., 1999, "Hand-Eye Calibration Using Dual Quaternions", The Int. 
J. Robotics Res. 18, no. 3, pp. 286-298. 
Darcovich, J., Angeles, J., Montagnier, P., and Wu, C.-J., 1999, "RVS: A Robot 
Visualization Software Package", in Batoz, J.-L., Chedmail, P., Cognet, G., 
and Fortin, C. (editors). Integrated Design and Manufacturing in Mechanical 
Engineering, Kluwer Academic Publishers, Dordrecht, pp. 265-272. 
De Luca, A. and Oriolo, G., 1995, "Modelling and control of nonholonomic 
mechanical systems", in Angeles, J. and Kecskemethy, A. (editors), Kinematics 
and Dynamics of Multi-Body Systems, Springer-Verlag, New York, pp. 277-342. 
Denavit, J. and Hartenberg, R.S., 1955, "A kinematic notation for lower-pair 
mechanisms based on matrices", ASME J. Applied Mechanics 22, pp. 215-221. 
Dierckx, P., 1993, Curve and Surface Fitting with Splines, Clarendon Press, 
Oxford. 
Dietmaier, P., 1998, "The Stewart-Gough platform of general geometry can have 
40 real postures", Proc. Sixth International 
Workshop on Advances in Robot 
Kinematics, Kluwer Academic Publishers, Dordrecht, pp. 7-16. 
Duffy, J., 1980, Analysis of Mechanisms and Robot Manipulators, Edward Arnold, 
London. 
Duflfy, J. and Crane, C, 1980, "A displacement analysis of the general spatial 
7-link, 7R mechanism", Mechanism and Machine Theory 15, no. 3, pp. 153-169. 
Duffy, J. and Derby, S., 1979, "Displacement analysis of a spatial 7R mechanismâ 
A generalized lobster's arm", ASME J. Mechanical Design 101, pp. 224-231. 

References 
533 
Ekvall, S. and Krajic, D., 2005, "Grasp Recognition for Programming by Demon-
stration," Proc. 2005 IEEE International Conference on Robotics and Automa-
tion, Barcelona, Spain, April 18-22, pp. 760-765. 
Etter, D.M., 1997, Engineering Problem Solving with Matlab, Prentice-Hall, 
Upper Saddle River, NJ. 
Euler, L., 1776, "Nova methodus motum corporum rigidorum determinandi", 
Novii Comentarii Academi^B Scientiarum Petropolitan^, 
vol. 20 (1775) 1776, 
pp. 208-238 == Opera Omnia Vols. 2-9, pp. 99-125. 
Everett, J.D., 1875, "On a new method in statics and kinematics". Messenger 
of Mathematics 45, pp. 36-37. 
Featherstone, R., 1983, "Position and velocity transformations between robot 
end-effector coordinates and joint angles". The Int. J. Robotics Res. 2, no. 2, 
pp. 35-45. 
Featherstone, R., 1987, Robot Dynamics Algorithms, Kluwer Academic Publish-
ers, Dordrecht. 
Foley, J.D. and Van Dam, A., 1982, Fundamentals of Interactive 
Computer 
Graphics, Addison-Wesley Publishing Company, Reading, MA. 
Forsythe, G.E., 1970, "Pitfalls in computation, or why a math book isn't 
enough", American Mathematical Monthly 27, pp. 931-956. 
Ge, Q.J. and Kang, D., 1995, "Motion interpolation with G^ composite Bezier 
motions", ASME J. Mechanical Design 117, pp. 520-525. 
Gear, C.W., 1971, Numerical Initial Value Problems in Ordinary Differential 
Equations, Prentice-Hall, Englewood Cliffs, NJ. 
Gleick, J. 1988. Chaos: making a new science. New York, N.Y.,: Penguin. 
Golub, G.H. and Van Loan, C.F., 1989, Matrix Computations, The Johns Hop-
kins University Press, Baltimore. 
Gockel, T., Ahlmann, J., Dillmann, R., and Azad, P., 2005, "3D vision sens-
ing for grasp planning: A new, robust and affordable structured light ap-
proach," Proc. 2005 IEEE International Conference on Robotics and Automa-
tion, Barcelona, Spain, April 18-22, pp. 2540-2545. 
Gogu, G., 2004, "Fully Isotropic T3Rl-type parallel manipulators," in Lenarcic, 
J. and Galletti, C. (editors), On Advances in Robot Kinematics, Kluwer Aca-
demic Publishers, Dordrecht, pp. 265-272. 
Gosselin, CM., Perreault, L., and Vaillancourt, C, 1995, "Simulation and 
computer-aided kinematic design of three-degree-of-freedom spherical parallel 
manipulators", J. Robotic Systems 12, no. 12, pp. 857-869. 

534 
References 
Gosselin, CM., Sefrioui, J., and Richard, M.J., 1992, "Solutions polynomiales 
au probleme de la cinematique directe des manipulateurs paralleles plans a trois 
degres de liberie", Mechanism and Machine Theory 27, no. 2, pp. 107-119. 
Gosselin, CM., Sefrioui, J., and Richard, M.J., 1994a, "On the direct kinemat-
ics of spherical three-degree-of-freedom parallel manipulators with a coplanar 
platform", ASME J. Mechanical Design 116, pp. 587-593. 
Gosselin, CM., Sefrioui, J., and Richard, M.J., 1994b, "On the direct kinemat-
ics of spherical three-degree-of-freedom parallel manipulators of general archi-
tecture", ASME J. Mechanical Design 116, pp. 594-598. 
Gough, V.M., 1956-1957, "Communications", Proc. Automobile Division of The 
Institution of Mechanical Engineers^ pp. 166-168. See also "Discussion in Lon-
don", Proc. Automobile Division of The Institution of Mechanical Engineers^ 
pp. 392-394. 
Graham, D., 1972, "A behavioural analysis of the temporal organisation of 
walking movements in the 1st instar and adult stick insect (Carausius morosusY^, 
J. Comp. Physiol 81, pp. 23-25. 
Halmos, P., 1974, Finite-Dimensional Vector Spaces^ Springer-Verlag, New York. 
Hamilton, W.R., 1844, "On quaternions: or a new system of imaginaries in 
algebra", Phil Mag., 3rd. ser. 25, pp. 489-495. 
Hanselman, D. and Littlefield, B., 2001, Mastering MATLAB 6. A Comprehen-
sive Tutorial and Reference, Prentice-Hall, Upper-Saddle River, NJ. 
Harary, F., 1972, Graph Theory, Addison-Wesley Publishing Company, Reading, 
MA. 
Hartenberg, R.S. and Denavit, J., 1964. Kinematic Synthesis of Linkages, 
McGraw-Hill Book Company, New York. 
Hay ward, V., 1994, "Design of hydraulic robot shoulder based on combinatorial 
mechanism," in Yoshikawa, T., and Miyazaki, F. (eds.). Experimental Robotics 
3, Lecture Notes in Control and Information Sciences 200, Springer-Verlag, New 
York, pp. 297-310. The Int. J. Robotics Res. 10, no. 5, pp. 767-790. 
Henrici, P., 1964, Elements of Numerical Analysis, John Wiley & Sons, New 
York. 
Herve, J.M., 1999, "The Lie group of rigid body displacements, a fundamental 
tool for mechanism design," Mechanism and Machine Theory, Vol. 34, pp. 719-
730. 
Herve, J.M. and Sparacino, F., 1992, "Star, a new concept in robotics", Proc. 
3rd International Workshop on Advances in Robot Kinematics, September 7-9, 
Ferrara, pp. 176-183. 

References 
535 
Hillier, F.S. and Lieberman, G.J., 1995, Introduction to Mathematical Program-
ming, McGraw-Hill, New York. 
Hirose, S., Masui, T., and Kikuchi, H., 1985, "Titan III: A quadruped walking 
vehicle", in Hanafusa, H. and Inoue, X. (editors). Robotics Research 2, MIT 
Press, Cambridge, MA, pp. 325-331. 
Hollerbach, J.M., 1980, "A recursive Lagrangian formulation of manipulator 
dynamics and a comparative study of dynamic formulation complexity", IEEE 
Trans. Systems, Man, and Cybernetics SMC-10, no. 11, pp. 730-736. 
Hollerbach, J.M. and Sahar, G., 1983, "Wrist-partitioned inverse kinematic ac-
celerations and manipulator dynamics". The Int. J. Robotics Res. 2, no. 4, 
pp. 61-76. 
Horaud, R. and Dornaika, F., 1995, "Hand-eye calibration", The Int. J. Robotics 
Res. 14, no. 3, pp. 195-210. 
Horn, B.K.P., 1986, Robot Vision, The MIT Press, Cambridge, MA. 
Hoschek, J. and Lasser, D., 1992, Grundlagen der geometrischen Datenverar-
beitung, E.G. Teubner, Stuttgart. 
Hughes, P.C., Sincarsin, W.G., and Carroll, K.A., 1991, "Trussarmâa variable-
geometry-truss manipulator", J. of Intell. Mater. Syst. and Struct. 2, pp. 148-
160. 
Husty, M. L., 1996, "An algorithm for solving the direct kinematics of general 
Stewart-Gough platforms". Mechanism and Machine Theory 31, no. 4, pp. 365-
380. 
Husty, M. L., Pfurner, M. and Schrocker, H.-P., 2005, "A new and efficient 
algorithm for the inverse kinematics of a general serial 6R," Proc. 2005 ASME 
Int. Design Engineering Technical Conferences, Long Beach, CA, September 
24â28, DETC2005-84745. 
Isidori, A., 1989, Nonlinear Control Systems, 2nd Edition, Springer-Verlag, 
Berlin. 
Jacobsen, S.C, Iversen, E.K., Knutti, D.F., and Biggers, K.B., 1984, "The 
Utah/MIT dextrous hand: Work in progress". The Int. J. Robotics Res. 3, 
no. 4, pp. 21-50. 
Jacobsen, S.C, Iversen, E.K., Knutti, D.F., Johnson, R.T., and Biggers, K.B., 
1986, "Design of the Utah/MIT dextrous hand", Proc. IEEE Int. Conf. on 
Robotics & Automation, San Francisco, pp. 1520-1532. 
Kahaner, D., Moler, C, and Nash, S., 1989, Numerical Methods and Software, 
Prentice-Hall, Englewood Cliffs, NJ. 

536 
References 
Kahn, M. E. 1969. "The near-minimum time control of open-loop articulated 
kinematic chains", AI Memo 177, Artificial Intelligence Laboratory, Stanford 
University, Stanford. Also see Kahn, M.E., and Roth, B., 1971, "The near-
minimum-time control of open-loop articulated kinematic chains", ASME J. 
Dyn. Systs.j Meas., and Control^ 91, pp. 164-172. 
Kane, T.R., 1961, "Dynamics of nonholonomic systems", ASME J. Applied 
Mechanics 83, pp. 574-578. 
Kane, T.R. and Levinson, D.A., 1983, "The use of Kane's dynamical equations 
in robotics", The Int. J. Robotics Res. 2, no. 3, pp. 3-21. 
Kane, T.R., Likins, P.W., and Levinson, D.A., 1983, Spacecraft Dynamics, 
McGraw-Hill Book Co., New York. 
Kaye, R. and Wilson, R., 1998, Linear Algebra, Oxford University Press, New 
York. 
Khalil, W. and Dombre, E., 2002, Modeling, Identification & Control of Robots, 
Hermes Penton Ltd., London. 
Khalil, W., Kleinfinger, J.F., and Gautier, M., 1986, "Reducing the computa-
tional burden of the dynamical models of robots", Proc. IEEE Int. Conf. on 
Robotics & Automation, , San Francisco, pp. 525-531. 
Khalil, W. and Dombre, E., 2002, Modeling, Identification & Control of Robots, 
Hermes Penton Ltd., London. 
Khan, W. A. and Angeles, J., 2006, "The Kinetostatic Optimization of Robotic 
Manipulators: The Inverse and the Direct Problems", ASME J. Mechanical 
Design, to appear. 
Killough, S.M. and Pin, F.G., 1992, "Design of an omnidirectional and holo-
nomic wheeled platform prototype", Proc. IEEE Int. Conf. on Robotics & Auto-
mation, , Nice, pp. 84-90. 
Klein, C.A., Olson, K.W., and Pugh, D.R., 1983, "Use of force and attitude 
sensors for locomotion of a legged vehicle over irregular terrain", The Int. J. 
Robotics Res. 2, no. 2, pp. 3-17. 
Kumar A.V. and Waldron K.J., 1981, "The workspace of a mechanical manip-
ulator", ASME J. Mechanical Design 103, pp. 665-672. 
Latombe, J.-C., 1991, Robot Motion Planning, Kluwer Academic Publishers, 
Dordrecht. 
Lazard, D. and Merlet, J.-P., 1994, "The (true) Stewart platform has 12 con-
figurations", Proc. IEEE Int. Conf. on Robotics & Automation, San Diego, 
pp. 2160-2165. 

References 
537 
Lee, H.Y. and Liang, C.G., 1988, "Displacement analysis of the general spatial 
seven-link 7R mechanism", Mechanism and Machine Theory 23, no. 3, pp. 219-
226. 
Lee, H.Y. and Roth, B., 1993, "A closed-form solution of the forward displace-
ment analysis of a class of in-parallel mechanisms", Proc. IEEE Int. Conf. on 
Robotics & Automation, Atlanta, pp. 720-731. 
Leigh, D.C., 1968, Nonlinear Continuum Mechanics, McGraw-Hill Book Com-
pany, New York. 
Levine, M.D., 1985, Vision in Man and Machines, McGraw-Hill Book Company, 
New York. 
Li, H., 1990, Ein Verfahren zur voUstdndigen Losung der Riickwdrtstransfor-
mation fiir Industrieroboter mit allgemeiner Geometric, doctoral thesis, Univer-
sitat-Gesamthochschule Duisburg, Duisburg. 
Li, C.-J., 1989, "A new Lagrangian formulation of dynamics of robot manipu-
lators", ASME J. Dyn, Systs., Meas., and Control, 111, pp. 4559-567. 
Li, C.-J. and Sankar, 1992, "Fast inverse dynamics computation in real-time 
robot control". Mechanism and Machine Theory 1992, no. 27, pp. 741-750. 
Li, H., Woernle, C, and Hiller, M., 1991, "A complete solution for the inverse 
kinematic problem of the general 6R robot manipulator", ASME J. Mechanical 
Design 113, pp. 481-486. 
Liu, H., Iberall, T., and Bekey, G., 1989, "The multi-dimensional quality of 
task requirements for dextrous robot hand control", Proc. IEEE Int. Conf. on 
Robotics & Automation, Scottsdale, pp. 452-457. 
Livio, M., 2005, The Equation That Couldn't Be Solved. How Mathematical 
Genius Discovered the Language of Symmetry, Simon &; Schuster, New York-
London-Toronto-Sydney. 
Lozana-Perez, T., 1981, "Automatic planning of manipulator transfer move-
ments", IEEE Trans. Systems, Man, and Cybernetics SMC-11, no. 110, pp. 681-
689. 
Luh, J.Y.S., Walker, M.W., and Paul, R.P.C., 1980, "On-line computational 
scheme for mechanical manipulators", ASME J. Dyn. Systs., Meas., and Con-
trol, 102, pp. 69-76. 
Mandelbrot, B. B. 1983, The Fractal Geometry of Nature, 3rd ed., W. H. Free-
man and Company, New York. 
Makino, H. and Furuya, N., 1980, "Selective compliance assembly robot arm," 
Proc. First International Conference on Assembly Automation, Brighton (no 
page numbers avalable.) 

538 
References 
Mavroidis, C. and Roth, B., 1992, "Structural parameters which reduce the 
number of manipulator configurations", Proc. ASME 22nd Biennial Mechanisms 
Conference^ September 13-16, Scottsdale, DE-45, pp. 359-366. 
Menitto, G. and Buehler, M., 1996, "CARL: A compliant articulated robotic leg 
for dynamic locomotion". Robotics and Autonomous Systems 18, pp. 337-344. 
Merlet, J.-P., 1989, "Singular Configurations of Parallel Manipulators and Grass-
mann Geometry", The Int. J. Robotics Res. 8, no. 5, pp. 45-56. 
Merlet, J.-P., 2006, Parallel Robots, Second Edition, Springer, Dordrecht. 
Morgan, A.P., 1987, Solving Polynomial Systems Using Continuation for Sci-
entific and Engineering Problems, Prentice-Hall, Englewood Cliffs. NJ. 
Mozzi, G., 1763, Discorso Matematico Sopra il Rotamento Momentaneo dei 
Corpi, Stamperia di Donato Campo, Naples. 
Nanua, P., Waldron, K.J., and Murthy, V., 1990, "Direct kinematic solution of 
a Stewart platform", IEEE Trans. Robotics & Automation 6, pp. 438-444. 
Ostrovskaya, S. and Angeles, J., 1998, "Nonholonomic systems revisited within 
the framework of analytical mechanics". Applied Mechanics Reviews, vol. 51, 
No. 7, pp. 415-433. 
Pattee, H.A., 1995, "Selecting computer mathematics". Mechanical Engineering 
117, no. 9, pp. 82-84. 
Paul, R.P., 1981, Robot Manipulators. Mathematics, Programming, and Con-
trol, The MIT Press, Cambridge. MA. 
Paul, R.P. and Stevenson, C.N., 1983, "Kinematics of robot wrists", The Int. 
J. Robotics Res. 2, no. 1, pp. 31-38. 
Penrose, R., 1994, Shadows of the Mind. A Search for the Missing Science of 
Consciousness, Oxford University Press, Oxford. 
Pettinato, J.S. and Stephanou, H.E., 1989, "Manipulability and stability of a 
tentacle based robot manipulator", Proc. IEEE Int. Conf. on Robotics & Auto-
mation, , Scottsdale, pp. 458-463. 
Pfeiffer, F., Eltze, J., and Weidemann, H.-J., 1995, "The TUM walking ma-
chine", Intelligent Automation and Soft Computing. An International 
Journal, 
1, no. 3, pp. 307-323. 
Phillips J., 1990, Freedom in Machinery. 
Vol 2: Screw Theory Exemplified, 
Cambridge University Press, Cambridge. 
Pieper, D.L., 1968, The Kinematics of Manipulators Under Computer Control, 
Ph.D. thesis, Stanford University, Stanford. 

References 
539 
Pierrot, F., Fournier, A., and Dauchez, P., 1991, "Towards a fully-parallel 6 
dof robot for high-speed applications", Proc. IEEE Int. Conf. on Robotics & 
Automation^ Sacramento, pp. 1288-1293. 
Pottmann, H. and Wallner, J., 2001, Computational Line Geometry.^ Springer, 
Berlin-Heidelberg-New York. 
Primrose, E.J.F., 1986, "On the input-output equation of the general 7R mech-
anism". Mechanism and Machine Theory 21, no. 6, pp. 509-510. 
Raghavan, M., 1993, "The Stewart platform of general geometry has 40 config-
urations", ASME J, Mechanical Design 115, pp. 277-282. 
Raghavan, M. and Roth, B., 1990, "Kinematic analysis of the 6R manipulator 
of general geometry", in Miura, H. and Arimoto, S. (editors), Proc. 5th Int. 
Symposium on Robotics Research^ MIT Press, Cambridge, MA. 
Raghavan, M. and Roth, B., 1993, "Inverse kinematics of the general 6R manip-
ulator and related linkages", ASME J. Mechanical Design 115, pp. 502-508. 
Raibert, M.H., 1986, Legged Robots That Balance, MIT Press, Cambridge, MA. 
Ranjbaran, F., Angeles, J., and Patel, R.V., 1992, "The determination of the 
Cartesian workspace of general three-axes positioning manipulators", Proc. Third 
Int. Workshop on Advances in Robot Kinematics, Sept.7-9, Ferrara, pp. 318-
324. 
Ravani, B. and Roth, B., 1984, "Mappings of spatial kinematics", ASME J. 
Mechanisms, Transm., and Auto, in Design 106, pp. 341-347. 
Reynaerts, D., 1995, Control Methods and Actuation Technology for Whole-
Hand Dextrous Manipulation, doctoral dissertation, Fakulteit der Torgepaste 
Wetenschappen, Katholieke Universiteit Leuven, Leuven. 
Roth, B., 1984, "Screws, motors, and wrenches that cannot be bought in a 
hardware store", in Brady, M., and Paul, R.P. (editors). Robotics Research. The 
First International Symposium, The MIT Press, Cambridge, MA, pp. 679-693. 
Rumbaugh, J., Blaha, M., Premerlani, W., Eddy, F., and Lorensen, W., 1991, 
Object-Oriented Modeling and Design, Prentice-Hall, Englewood Cliffs, NJ. 
Rus, D., 1992, "Dextrous rotations of polyhedra", Proc. IEEE Int. Conf. on 
Robotics & Automation, , Nice, pp. 2758-2763. 
Russell, Jr., M., 1983, "Odex I: The first functionoid", Robotics Age, 5, pp. 12-
18. 
Saha, S.K., 1997, "A decomposition of the manipulator inertia matrix", IEEE 
Trans. Robotics & Automation 13, pp. 301-304. 
Saha, S.K., 1999, "Analytical expression for the inverted inertia matrix of serial 
robots". The Int. J. Robotics Res. 18, no. 1, pp. 116-124. 

540 
References 
Salisbury, J.K. and Craig, J.J., 1982, "Articulated hands: Force and kinematic 
issues", The Int. J. Robotics Res. 1, no. 1, pp. 4-17. 
Salmon, G., Higher Algebra, 5th Edition (1885), reprinted: 1964, Chelsea Pub-
lishing Co., New York. 
Samson, C , Le Borgne, M., and Espiau, B., 1991, Robot Control. The Task 
Function Approach, Clarendon Press, Oxford. 
Shampine, L.F. and Gear, C.W., 1979, "A user's view of solving stiff ordinary 
differential equations", SIAM Review 21, no. 1, pp. 1-17. 
Shiu, Y.C. and Ahmad, S., 1987, "Finding the mounting position of a sensor by 
solving a homogeneous transform equation of the form AX = XB", Proc. IEEE 
Int. Conf. on Robotics & Automation, Raleigh, pp. 1667-1671. 
Silver, W.M., 1982, "On the equivalence of Lagrangian and Newton-Euler dy-
namics for manipulators". The Int. J. Robotics Res. 1, no. 2, pp. 118-128. 
Song, S.-M. and Waldron, K.J., 1989, Machines That Walk, The MIT Press, 
Cambridge, MA. 
Soureshi, R., Meckl, P.H., and Durfee, W.M., 1994, "Teaching MEs to use 
microprocessors". Mechanical Engineering 116, no. 4, pp. 71-76. 
Spong, M.W., Hutchinson, S., and Vidyasagar, M., 2006, Robot Modeling and 
Control, John wiley & Sons, Inc., Hoboken, NJ. 
Srinivasan L.N. and Ge, Q.J., 1997, "Fine tuning of rational B-splines motions", 
Proc. ASME Design Engineering Technical Conference DETC'97, pp. 1-10. 
Staffetti, E., Bruyninckx, H., and De Schutter, J., 2002, in Lenarcic, A.J. and 
Thomas, F., Advances in Robot Kinematics: Theory and Applications, Kluwer 
Academic Publishers, Dordrecht, pp. 57-66. 
Stewart, D., 1965, "A platform with 6 degrees of freedom", Proc. Institution of 
Mechanical Engineers 180, part 1, no. 15, pp. 371-386. 
Strang, G., 1988, Linear Algebra and Its Applications, Third Edition, Harcourt 
Brace Jovanovich College Publishers, New York. 
Stroustrup, B., 1991, The C-f-f- Programming Language, Addison-Wesley Pub-
lishing Company, Reading, MA. 
Sutherland, I.E. and Ullner, M.K., 1984, "Footprints in the asphalt". The Int. 
J. Robotics Res. 3, no. 2, pp. 29-36. 
Sun, L., Xie, H., Rong, W., and Chen, L., 2005, "Task-reconfigurable system 
for MEMS assembly," Proc. IEEE International Conference on Robotics and 
Automation, Barcelona, Spain, April 18-22, pp. 844-849. 

References 
541 
Synge, J.L., 1960, "Classical Dynamics", in Fliigge, S. (editor), Encyclopedia of 
Physics, vol. III/l, Springer-Verlag, Berlin, pp. 1-225. 
Takano, M., 1985, "A new effective solution for inverse kinematics problem 
(synthesis) of a robot with any type of configuration", Journal of the Faculty of 
Engineering, The University of Tokyo 38, no. 2, pp. 107-135. 
Tandirci, M., Angeles J., and Ranjbaran, F., 1992, "The characteristic point 
and the characteristic length of robotic manipulators", AS ME 22nd Biennial 
Mechanisms Conference, September 13-16, Scottsdale, vol. 45, pp. 203-208. 
Tandirci, M., Angeles, J., and Darcovich, J., 1994, "On rotation representations 
in computational robot kinematics", J. Intelligent and Robotic Systems 9, pp. 5-
23. 
Teichmann, M., 1995, Grasping and Fixturing: A Geometric Study and Imple-
mentation, Ph.D. thesis. Department of Computer Science, New York Univer-
sity, New York. 
Thompson, S.E. and Patel, R.V., 1987, "Formulation of joint trajectories for 
industrial robots using B-splines", IEEE Trans. Industrial Electronics IE-34, 
pp. 192-199. 
Todd, D.J., 1985, Walking Machines. An Introduction to Legged Robots, Kogan 
Page Ltd., London. 
Torok, J.S., 2000, Analytical Mechanics with an Introduction to Dynamical Sys-
tems, John Wiley & sons, Inc., New York. 
Tsai, L.W. and Morgan, A.P., 1985, "Solving the kinematics of the most general 
six- and five-degree-of-freedom manipulators by continuation methods", ASME 
J. Mechanisms, Transm., and Auto, in Design 107, pp. 189-200. 
Uicker, Jr., J.J., 1965. On the Dynamic Analysis of Spatial Linkages Using 4 x 4 
Matrices, Ph.D. thesis, Northwestern University, Evanston. 
Van Brussel, H., Santoso, B., and Reynaerts, D., 1989, "Design and control of a 
multi-fingered robot hand provided with tactile feedback", Proc. NASA Conf. 
Space Telerobotics, Pasadena, Jan.31-Feb.2, vol. Ill, pp. 89-101. 
Vijaykumar, R., Tsai, M.J., and Waldron, K.J., 1986, "Geometric optimization 
of serial chain manipulator structures for working volume and dexterity", The 
Int. J. Robotics Res. 5, no. 2, pp. 91-103. 
Vinogradov I.B., Kobrinski A.E., Stepanenko, Y.E., and Tives, L.T., 1971, "De-
tails of kinematics of manipulators with the method of volumes" (in Russian), 
Mekhanika Mashin, no. 27-28, pp. 5-16. 
von Mises, R., 1924, "Motorrechnung, ein neues Hilfsmittel der Mechanik", Z. 
Angewandte Mathematik und Mechanik 4, no. 2, pp. 155-181. 

542 
References 
von Mises, R., 1996, "Motor calculus. A new theoretical device for mechanics", 
translated from the German by J. E. Baker and K. Wohlhart, Institute for 
Mechanics, Technical University of Graz, Graz. 
Vukobratovic, M. and Stepanenko, J., 1972, "On the stability of anthropomor-
phic systems". Math. Biosci. 15, pp. 1-37. 
Walischmiller, W. and Li, H., 1996, "Development and application of the TEL-
BOT System-A new Tele Robot System", Proc. 11th CISM-IFToMM 
Sympo-
sium on Theory and Practice of Robots and Manipulators-Ro.Man.Sy. 
11, Udine 
(Italy), July 1-4. 
Walker, M.W. and Orin, D.E., 1982, "Efficient dynamic computer simulation of 
robotic mechanisms", ASME J. Dyn. Systs., Meas., and Control, 104, pp. 205-
211. 
Wampler, C., 1996, "Forward displacement analysis of general six-in-parallel 
SPS (Stewart) platform manipulators using soma coordinates", Mechanism and 
Machine Theory 31, no. 3, pp. 331-337. 
West, M. and Asada, H., 1995, "Design and control of ball wheel omnidirectional 
vehicles", Proc. IEEE Int. Conf. on Robotics & Automation, Nagoya, pp. 1931-
1938. 
Whitney, D.E., 1972, "The mathematics of coordinated control of prosthetic 
arms and manipulators", ASME J. Dyn. Systs., Meas., and Control, 94, pp. 303-
309. 
Williams, O., Angeles, J., and Bulca, F., 1993, "Design philosophy of an isotropic 
six-axis serial manipulator", Robotics and Computer-Aided Manufacturing 10, 
no. 4, pp. 275-286. 
Yang, D.C. and Lai, Z.C, 1985, "On the conditioning of robotic manipula-
torsâservice angle", ASME J. Mechanisms, TYansm., and Auto, in Design 107, 
pp. 262-270. 
Yang, L., Hou, X.R., and Zeng, Z.B., 1996, "A complete discrimination system 
for polynomial," Mathematic Mechanization Preprints, No. 14, pp. 98-115. 
Yoshikawa, T., 1985, "Manipulability of robotic mechanisms". The Int. J. Robotics 
Res. 4, no. 2, pp. 3-9. 

Index 
ABB-IRB 1000 robot, 164, 229 
acatastatic systems, 471 
acceleration analysis 
of parallel manipulators, 403 
of rigid bodies, 110 
of serial manipulators, 186 
affine transformation, 29, 62 
Agile Eye, 12 
AI, see artificial intelligence 
algorithm definition, 24 
angle of rotation, 38 
angular acceleration 
computation, 331 
invariant-rate relations, 110 
matrix, 110 
vector, 110 
angular velocity 
dyad, 121, 259 
invariant-rate relations, 108, 508-
511 
matrix, 102 
vector, 102 
Appendix A, 507 
Appendix B, 513 
arc-welding, 430 
operation, 444 
path-tracking, 459 
architecture of a 
kinematic chain, 131 
manipulator, 129 
articulated-body method, 290 
artificial intelligence, 4, 24 
axial component of a vector, 31 
axial vector of a 3 x 3 matrix, 42 
base frame, 139 
basis of a vector space, 31 
Bezout's method, 400 
bivariate-equation approach, 345, 357, 
367 
C, 25 
C++, 25 
Canadarm, see Canadarm2 
Canadarm2, 5, 6 
canonical form of a rotation, 41 
Carausius morosus, 17, 534 
Cartesian coordinates 
of a manipulator, 129 
also, see Cartesian variables 
Cartesian decomposition, 42 
Cartesian variables 
of a manipulator, 138 
caster wheel, 417, 485 
catastatic system, 471 
Cayley's Theorem, 81 
Cayley-Hamilton theorem, 36 
change of basis, 65 
characteristic equation, 33, 36 
of a manipulator, 145, 367 
characteristic length, 206, 211, 216 
characteristic polynomial, 33 
of a manipulator, 184, 344, 364, 
367, 390, 401 
Chasles' Theorem, see Mozzi-Chasles' 
Theorem 
Chebyshev norm, 206, 459 
Cholesky-decomposition algorithm, 
290, 309 
closure equations, 139 
compatibility conditions 
for acceleration, 332 
for velocity, 326 
composite rigid-body method, 290 

544 
INDEX 
composition of reflections and 
rotations, 54 
condition number, 205, 369 
configuration of a manipulator, 129 
constraint wrenches, 167 
continuous path, 234, 345 
operations, 429 
tracking, 454 
control vector, 280, 310 
coordinate transformation, 56-65 
Coriolis 
acceleration, 113 
and centrifugal forces, 283, 284, 
290 
Couette flow, 314 
Coulomb 
dissipation function, 315 
friction, 261, 315 
CP, see continuous path 
cross-product matrix, 36 
curvature, 431 
derivative w. r. t. 
a parameter, 438 
derivative w. r. t. the arc length, 
431 
parametric representation, 436 
time-derivative, 433 
cycloidal motion, 243 
Darboux vector, 433 
time-derivative, 434 
decoupled manipulators, 133, 138 
decoupled robots, 129 
Delta Robot, 14 
Delta robot, 14 
delta-array (A-array), 427, 493 
Denavit-Hartenberg 
frames, 131 
notation, 129 
parameters, 133, 134 
rotation matrix, 134 
vector joining two frame origins, 
135 
determined system, 521 
dexterity, 24 
measures, see kinetostatic per-
formance indices 
DEXTRE, 5 
dextrous hands, see multifingered hands 
dextrous manipulation, 10 
dextrous workspace, 201 
DH, see Denavit-Hartenberg 
dialytic elimination, 185, 230 
DIESTRO 
inverse kinematics, 379 
Jacobian, 227 
manipulator, 217, 379 
differentiation with respect to 
vectors, 36, 37 
direct kinematic problem 
of parallel manipulators, 388 
displacement equations of a 
manipulator, 139 
dissipation function, 261, 314 
duality, 167 
dynamic systems, 1 
dynamics 
of holonomic systems, 470 
of multibody systems, 259 
of parallel manipulators, 474 
of rigid bodies, 118 
of robotic mechanical systems, 
470 
of rolling robots, 484 
of serial manipulators, 257 
EE, see end-effector 
elastodynamic, 168 
end-effector, 131 
Euclidean norm, 38 
Euler 
angles, 42, 81, 87 
equation (for graphs), 474 
equation (in mechanics), 120 
parameters, see Euler-Rodrigues 
parameters 
Euler's 
formula for graphs, see Euler 
equation for graphs 
theorem, 36 
Euler-Lagrange equations, 258, 260 

INDEX 
545 
derived with the NOC, 282, 472 
Euler-Rodrigues parameters, 51 
Fanuc Arc Mate 
inverse displacement, 375 
Fanuc Arc Mate 120iB, 165 
Fanuc Robot Arc Mate 
characteristic length, 226 
DH parameters, 225 
KCI, 226 
feasible twists, 167 
First Law of Thermodynamics, 191 
flight simulator, 389 
floating-point operation, 24,189, 289, 
515 
flop, see floating-point operation 
forward dynamics 
algorithm complexity, 306 
of serial manipulators, 257, 289 
fractal, 524 
Frenet, see Frenet-Serret 
Frenet-Serret 
formulas, 431 
frame, 430 
vectors, 431 
friction forces, 313 
Frobenius norm, 204 
fuzzy logic, 24 
genealogy of robotic mechanical sys-
tems, 1, 4 
general architecture of a 
manipulator, 4 
generalized coordinates, 260, 261, 470 
generaUzed forces, 260, 261, 490 
generalized inertia matrix, 262, 498 
Cholesky decomposition, 291 
factoring, 291 
time-rate of change, 298 
generalized speeds, 261, 471 
Ginger, see Segway 
gluing operation, 439 
grasping matrix, 410 
gravity 
terms, 312 
wrench, 281 
hand-eye calibration, 76 
Hexa robot, 15 
higher kinematic pair, 130 
holonomic systems, 469, 470 
homogeneous coordinates, 56 
homotopy, 345 
IDP, see inverse displacement prob-
lem 
ilonators, 20 
inertia tensor, 118 
inertia dyad, 120, 259 
input, 1, 280 
instant screw axis, 104 
instrument calibration, 75 
intelligent machines, 2, 24 
intelligent robots, 2 
invariance, 71 
inverse displacement problem of 
a general 6R manipulator, 344 
inverse dynamics 
of serial manipulators, 257 
recursive, 269 
inverse kinematics problem of 
parallel manipulators, 390 
inverse vs. forward dynamics, 257 
inward recursions, 275, 278 
ISA, see instant screw axis 
isomorphism, 33 
isotropic 
manipulator, 206 
matrix, 203, 206 
isotropy, 209 
iteration, 24, 458 
Jacobian matrix, 167 
condition number, 205 
evaluation, 175 
invertibility, 201 
transfer formula, 173 
joint, 130 
coordinates, 129, 133 
parameters, 133 
variables, 133 
Kane's equations, 268 

546 
INDEX 
KCI, see kinematic conditioning in-
dex 
kernel of a linear transformation, 29 
Kinemate, 108 
kinematic 
chain, 129 
conditioning index, 204 
constraints, 281 
constraints for serial manipula-
tors, 285 
pair, 130 
kinematic chain 
architecture of a , 131 
kinetostatic performance indices, 201 
kinetostatics, 167 
least-square error, 525 
least-square solution, 525 
Lee vs. Li, 345 
Lee's manipulator, 376 
Lee's procedure, 373 
left hand, 15 
legged robots, 17 
Li vs. Lee, see Lee vs. Li 
Li's manipulator, see Lee's manipu-
lator 
linear invariants, 42 
of rotation, 43 
linear transformations, 28 
local structure of a manipulator, 133 
locomotors, 17 
lower kinematic pair, 130 
LU decomposition, 171 
machine (definitions of), 24 
main gauche, see left hand 
maneuverability, 426 
manipulability, 201 
of decoupled manipulators, 231 
manipulator 
angular velocity matrix, 261 
architecture, 129 
configuration, 129 
dynamics, 257, 474 
general architecture, 4 
mass matrix, 261 
posture, 129 
twist, 261 
wrench, 261 
manipulators, 7, 129 
matrix 
norm, 204 
representation, 32 
mechanical system, 2 
mechatronics, 24 
Mekanum wheels, 20 
minimum-time trajectory, 283 
mobile wheeled pendulums, 21 
module, 35 
moment of inertia, 118 
moment invariants, 71 
moment of a line 
about a point, 96 
about another line, 122 
momentum screw, 121 
motor, 108 
Mozzi-Chasles' Theorem, 91 
MSS, 5 
multibody system 
dynamics, 259 
Euler-Lagrange equations, 268 
multicubic expression, 141 
multifingered hands, 10 
multilinear expression, 140 
multiquadratic expression, 141 
multiquartic expression, 141 
natural orthogonal complement, 259 
applied to holonomic systems, 
472 
applied to parallel manipulators, 
474 
applied to planar manipulators, 
293 
applied to rolling robots, 485, 
496 
Newton 
-Euler algorithm, 278 
-Gauss method, 455 
-Raphson method, 77 
equation, 120 
methods, 345, 455 

INDEX 
547 
NOC, see natural orthogonal com-
plement 
nonholonomic systems, 258, 469, 484 
noninertial base link, 288 
nonlinear system, 521 
norm 
also, see Frobenius norm 
norm (matrix -), 204 
normal component of a vector, 31 
normality condition, 526 
nullspace of a linear transformation, 
29 
numerical conditioning, 357, 369 
object-oriented programming, 25 
Odetics series of hexapods, 17 
ODW, see omnidirectional wheels, 
see omnidirectional wheels 
off-line, 4, 145, 176 
omnidirectional wheels, 20, 493 
dynamics, 493 
kinematics, 422 
on-line, 24 
operation point, 133 
orientation problem, 157 
orthogonal complement, 282 
orthogonal decomposition of a vec-
tor, 31 
orthogonal decoupled manipulator, 
152 
orthogonal projection, 29 
orthogonal RRR manipulator 
dynamics, 294, 297 
inverse kinematics, 153, 155 
recursive dynamics, 304 
workspace, 159 
OSU ASV, 17 
OSU Hexapod, 17 
output, 1 
outward recursions, 269 
overdetermined system, 524 
Pappus-Guldinus theorem, 231 
parallel axes, theorem, 120 
parallel manipulators 
acceleration analysis, 401 
dynamics, 474 
kinematics, 388 
velocity analysis, 401 
parallel robots, 12 
parametric 
path representation, 435 
representation of curvature, 436 
representation of curvature deriva-
tive, 438 
representation of torsion, 436 
representation of torsion deriva-
tive, 438 
splines, 449 
path-tracking for arc-welding, 459 
pick-and-place operations, 233, 234 
Pliicker coordinates 
of a line, 95 
transfer formula, 98 
planar manipulators, 192 
acceleration analysis, 198 
displacement analysis, 193 
dynamics, 263 
static analysis, 199 
velocity analysis, 195 
platform manipulators, 389, 398, 474 
polar-decomposition theorem, 202 
polynomial interpolation 
with 3-4-5 polynomial, 236 
with 4-5-6-7 polynomial, 240 
pose 
array, 99 
of a rigid body, 98 
positioning problem, 142 
posture of a manipulator, 129 
PPO, see pick-and-place operations 
Principle of Virtual Work, 191 
prismatic pair, 130, 179 
programmable robot, 2 
projection, 29 
theorem, 515 
Puma robot, 132, 133, 150 
DH parameters, 133 
inverse kinematics, 142 
workspace, 151 
pure reflection, 30 

548 
INDEX 
quaternions, 53 
Raghavan and Roth's procedure, 345 
Raghavan-Roth's procedure, 357 
range of a linear transformation, 29, 
79 
Rayleigh dissipation function, see dis-
sipation function 
real-time, 24, 257 
reciprocal bases, 76, 175, 483 
reciprocal product, 117 
recursion, 24 
redundant sensing, 75 
References, 528 
reflection, 30, 346, 352 
composition with rotations, 54 
regional structure of a manipulator, 
133 
revolute pair, 130 
rheonomic systems, 470 
robot design, 168 
robotic hands, 10 
robotic mechanical systems, xiii, 1 
Rodrigues, see Euler-Rodrigues 
vector, 81 
rolling robots 
dynamics, 484 
kinematics, 416 
rotating pair, 130 
rotation, 33 
rotation matrix, 38 
exponential representation, 40 
run-time, 24 
Runge-Kutta methods, 311 
RVS, xiv, 235 
SARAH, 11 
Schonflies-motion generators, 16 
scleronomic systems, 470 
screw 
amplitude, 93 
axis, 93 
motion, 89 
pitch, 93 
Segway, 22 
self-inverse, 31 
serial manipulators 
acceleration analysis, 186 
dynamics, 257 
kinematics, 130 
statics, 190 
velocity analysis, 168 
workspace, 183 
service angle, 201 
similarity transformations, 65 
simple manipulation, 10 
simulation, 310 
singular-value decomposition, 203 
singular-values, 203 
singularities, 167 
singularity analysis of decoupled ma-
nipulators, 180 
sliding pair, 130 
SPDM, 5 
spherical wrist, 133, 158, 159 
workspace, 160 
spline(s), 246 
interpolation of 4-5-6-7 polyno-
mial, 251 
natural, 250 
nonparametric, 247, 449 
parametric, 449 
periodic, 247 
square root of a matrix, 52 
Star robot, 15 
state 
of a dynamical system, 280 
of parallel manipulators, 480 
of serial manipulators, 280, 310 
variable, 261, 280, 310 
variable equations, 310 
vector, 280 
static analysis 
of rigid bodies, 114 
of serial manipulators, 190 
static, conservative conditions, 167 
stationary point, 526 
Steiner, theorem, 120 
Stewart platform, see Stewart-Gough 
platform 
Stewart-Gough platform, xix, 390 
direct kinematics, 388 

INDEX 
549 
leg kinematics, 390 
structural design, 168 
structure of mechanical systems, 9 
structured environment, 3 
Sutherland, Sprout & Assocs. Hexa-
pod,17 
Swedish wheels, 20 
system, 1 
telemanipulators, 5 
tensors, 27, 279, 280 
Titan series of quadrupeds, 17 
torsion, 431 
derivative w. r. t. 
a parameter, 438 
derivative w. r. t. the arc length, 
431 
parametric representation, 436 
time-derivative, 433 
trace of a square matrix, 42 
trajectories with via poses, 245 
trajectory planning, 233, 429 
truncation error, 311 
Trussarm, 15 
TU Munich Hand, 11 
TU Munich Hexapod, 17 
twist, 104 
axis coordinates, 108 
of a rigid body, 107 
ray coordinates, 108 
transfer formula, 109 
twist-shape relations, 282 
for serial manipulators, 285 
unimodular group (of matrices), 97 
unstructured environment, 3 
vector of a 3 X 3 matrix, 42 
vector space, 28 
velocity analysis 
of parallel manipulators, 401 
of rolling robots, 418 
of serial manipulators, 168 
via poses, 245 
virtual work, see Principle of Vir-
tual Work 
viscosity coefBcient, 314 
viscous forces, 313 
walking machines 
kinematics, 413 
leg architecture, 413-415 
walking stick, 17 
weighting matrix, 525 
wheeled robots, 19 
workspace of positioning manipula-
tors, 182 
wrench 
acting on a rigid body, 115 
axis, 115 
pitch, 115 
transfer formula, 117 

Mechanical Engineering Series (continued from page H) 
W.K. Gawronski, Dynamics and Control of Structures: A Modal Approach 
G. Genta, Dynamics of Rotating Systems 
D. Gross and T. Seelig, Fracture Mechanics with Introduction to Micro-
mechanics 
K.C. Gupta, Mechanics and Control of Robots 
R. A. Rowland, Intermediate Dynamics: A Linear Algebraic Approach 
D. G. Hull, Optimal Control Theory for Applications 
J. Ida and J.P.A. Bastos, Electromagnetics and Calculations of Fields 
M. Kaviany, Principles of Convective Heat Transfer, 2nd ed. 
M. Kaviany, Principles of Heat Transfer in Porous Media, 2nd ed. 
E.N. Kuznetsov, Underconstrained Structural Systems 
P. Ladeveze, Nonlinear Computational Structural Mechanics: 
New Approaches and Non-Incremental Methods of Calculation 
P. Ladeveze and J.-P. Pelle, Mastering Calculations in Linear and 
Nonlinear Mechanics 
A. Lawrence, Modern Inertial Technology: Navigation, Guidance, and 
Control, 2nd ed. 
R. A. Lay ton, Principles of Analytical System Dynamics 
F.F. Ling, W.M. Lai, D.A. Lucca, Fundamentals of Surface Mechanics: 
With Applications, 2nd ed. 
C.V. Madhusudana, Thermal Contact Conductance 
D.P. Miannay, Fracture Mechanics 
D.P. Miannay, Time-Dependent Fracture Mechanics 
D.K. Miu, Mechatronics: Electromechanics and Contromechanics 
D. Post, B. Han, and P. Ifju, High Sensitivity and Moire: 
Experimental Analysis for Mechanics and Materials 
R. Rajamani, Vehicle Dynamics and Control 
P.P. Rimrott, Introductory Attitude Dynamics 
S.S. Sadhal, P.S. Ayyaswamy, and J.N. Chung, Transport Phenomena with 
Drops and Bubbles 
A. A. Shabana, Theory of Vibration: An Introduction, 2nd ed. 
A. A. Shabana, Theory of Vibration: Discrete and Continuous Systems, 2nd ed. 
Y. M. Tseydin, Structural Synthesis in Precision Elasticity 

