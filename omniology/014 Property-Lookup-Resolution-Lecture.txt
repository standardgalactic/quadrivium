©2019 MathByte Academy

Property Value Lookup Resolution
Interesting thing:
à class can have a property (descriptor) called x
à it can have an instance dictionary __dict__
à that dictionary can contain a key, also called x
what happens when we do this:
obj.x
or
obj.x = value
à does it use __dict__ entry, or the descriptor?
©2019 MathByte Academy

It depends…
on whether the descriptor is a data or non-data descriptor
data descriptors
(both __get__ and __set__ are defined)
à always override the instance dictionary (by default – can override this behavior)
class MyClass:
prop = DataDescriptor()
m = MyClass()
m.prop = value_1
m.__dict__['prop'] = value_2
m.prop à value_1
m.prop à value_1
m.prop = value_3
à modifies the property value, not the 
dictionary entry
©2019 MathByte Academy

It depends…
non-data descriptors
(only __get__ is defined, and potentially __set_name__)
à looks in the instance dictionary first
à if not present, uses the data descriptor
class MyClass:
prop = NonDataDescriptor()
m = MyClass()
m.prop
à 'prop' is not in m.__dict__, so calls __get__
m.prop = 100
à prop is a non-data descriptor
à m.__dict__ is now {'prop': 100}
m.prop
à 'prop' is in m.__dict__, so uses that value©2019 MathByte Academy

Coding
©2019 MathByte Academy

