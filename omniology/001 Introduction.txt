
What this course is about
the Python language
the standard library
idiomatic Python
becoming an expert Python developer
obtaining a deeper understanding of the Python language
and the standard library
this is NOT an introductory course
→refer to prerequisites video or course description
→canonical CPython 3.6+ implementation

Included Course Materials
lecture videos
Jupyter notebooks
coding videos
projects and solutions
github repository for all code
https://github.com/fbaptiste/python-deepdive

Sequence Types
what are sequences?
slicing
→ranges
shallow vs deep copy
the sequence protocol
implementing our own sequence types
list comprehensions
→closures
sorting
→sort key functions

Iterables and Iterators
more general than sequence types
differences between iterables and iterators
lazy vs eager iterables
the iterable protocol
the iterator protocol
writing our own custom iterables and iterators

Generators
what are generator?
generator functions
the yield statement
how generators are related to iterators
the yield from statement
generator expressions

Iteration Tools
Many useful tools for functional approach to iteration
→itertools module
→built-in
→functools module
Aggregators
Slicing iterables
Selection and filtering
Infinite iterators
Mapping and reducing
Grouping
Combinatorics

Context Managers
what are context managers?
the context manager protocol
why are they so useful?
creating custom context managers using the context manager protocol
creating custom context managers using generator functions

Projects
project after each section
should attempt these yourself first – practice makes perfect!
solution videos and notebooks provided
→my approach
→more than one approach possible

Extras
will keep growing over time
important new features of Python 3.6 and later
best practices
random collection of interesting stuff
send me your suggestions!
additional resources

