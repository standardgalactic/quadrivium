Peter Dalmaris
Lecture 9
Arduino Step by Step
Lecture 9 
Barometric pressure 
Measuring the atmospheric pressure has several applications. Obviously, if you are a 
meteorologist, knowing the pressure at a geographical location helps forecasting the 
weather. But there's more. 
Atmospheric pressure is deﬁned as the weight of a column of air above an object. As the 
height of a column of air above an object changes depending on its altitude, so does the 
weight of that column. Atmospheric pressure at the surface of the sea is higher than that on 
the top of a tall mountain because the column of air above it is higher. Therefore, measuring 
the atmospheric pressure is also a simple way of ﬁguring out your altitude, or the altitude of 
one of your ﬂying gadgets. 
The standard unit for measuring atmospheric pressure is "Pa", or "Pascals". At sea level, 
the standard pressure is deﬁned to be 101.325 kPa, or 101,325 Pa. 
We will be measuring atmospheric pressure by using the BMP085 sensor. This sensor costs 
around $8 on eBay. It can measure pressure from 300hPa to 1100hPa, which converts to 
around 500 meters below sea level to 9,000 meters above sea level. It's accuracy is also 
excellent, around 0.03hPa. "hPa" is pronounced "hectoPascal". 
Another nice thing about this sensor is that it also measures the temperature. 
The BMP085 talks to other devices via the I2C interface, a digital serial communications 
interface that only needs two wires for communication, and two for power. One 
communication wire is called SDA, and it transmits 
data, while the second, SCL, is for the clock signal. 
A clock signal is needed because I2C is a 
synchronous interface. 
The sensor uses 3.3V (not 5V!), which the Arduino 
conveniently provides. Here's what this sensor looks 
like (right). 
The BPM085 measures pressure by taking 
advantage of the piezo-resistive property that silicon and germanium have. This property 
involves the change in resistance in those materials depending on the amount of 
mechanical load that is put on them. 
"1

Peter Dalmaris
Lecture 9
Arduino Step by Step
Assembly 
Let's puts together this circuit and try out the sensor. 
We will need: 
• The Arduino 
• Four jumper wires 
• A BMP085 sensor device 
Here's what we are going to build (right). 
This is very simple wiring. In Lecture 8 
we connected a humidity and 
temperature sensor, and we included a 
pull-up resistor. We don't need this 
resistor now because it is included 
within the sensor's package. That's one 
less thing for us to do. 
If you are unsure of the connections, 
double check the markings of each pin 
on the sensor. 
"2

Peter Dalmaris
Lecture 9
Arduino Step by Step
Sketch 
Done with the assembly, lets work on the sketch now. 
Just like in Lecture 10, to use the barometric sensor we include an external library in our 
sketch. This comes from Adafruit, and you can ﬁnd it on Github. Follow the instructions in 
the README.txt ﬁle for setting it up, and don't forget to restart your Arduino IDE! 
Here's the sketch, it comes straight of the examples that are included with the Arduino IDE. 
I have added some comments to help you understand what is going on: 
#include <Wire.h> //*Include the Wire library which allows * 
 
 
 
//*To use the I2C interface* 
#include <Adafruit_BMP085.h>  //*Include the Adafruit_BMP085 
  
 
 
 
 
 
//*library to easily take* 
 
 
 
 
 
//*readings from the sensor* 
Adafruit_BMP085 bmp;  
 
//*Declare the bpm variable, 
 
 
 
 
 
//*an easy to remember reference for the 
 
 
 
 
 
//*device 
void setup() { 
Serial.begin(9600); //*Setup serial communication and speed* 
if (!bmp.begin()) { //*Try to start the device* 
 
 
 
  //*If it is not starting, print message* 
 
Serial.println("Could not find a valid BMP085 sensor, check 
wiring!”); 
 
while (1) {}  //* Go in an endless loop. This prevents the* 
             
  //*Arduino from calling the loop function* 
 
} 
} 
void loop() { 
Serial.print("Temperature = "); 
Serial.print(bmp.readTemperature()); //*Read and * 
 
 
 
 
 
 
 //*print temperature* 
Serial.println(" *C"); 
Serial.print("Pressure = "); 
Serial.print(bmp.readPressure()); //*Read and print* 
 
 
 
 
 
    //*pressure* 
Serial.println(" Pa"); 
// Calculate altitude assuming 'standard' barometric 
// pressure of 1013.25 millibar = 101325 Pascal 
Serial.print("Altitude = "); 
Serial.print(bmp.readAltitude()); //*Read and print* 
"3

Peter Dalmaris
Lecture 9
Arduino Step by Step
 
 
 
 
 
    //*altitude* 
Serial.println(" meters"); 
// you can get a more precise measurement of altitude 
// if you know the current sea level pressure which will 
// vary with weather and such. If it is 1015 millibars 
// that is equal to 101500 Pascals. 
Serial.print("Real altitude = "); 
Serial.print(bmp.readAltitude(101500)); //*Read and print* 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
//*calibrated altitude* 
Serial.println(" meters"); 
Serial.println(); 
delay(500); 
} 
Now we'll run this sketch and look at the monitor output: 
And that is how you connect and use the BMP085 barometric sensor with the Arduino! 
Questions 
Please attempt the lecture questions before moving on to lecture 10. 
"4

