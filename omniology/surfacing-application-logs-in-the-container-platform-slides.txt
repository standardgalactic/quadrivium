@EltonStoneman |  blog.sixeyed.com
CONSULTANT & TRAINER
Elton Stoneman
Surfacing Application Logs in the 
Container Platform

Health
Configuration
Logs
Dependencies
Traffic



•
stdout
•
stderr

Demo
Surfacing app logs as container logs
- Writing to standard out
- Configuring log levels
- Application requirements

function respond(req, res, next) {
log.Logger.debug("** POST /access-log called");
log.Logger.info("Access log, client IP: %s", req.body.clientIp);
//...
Application logging
Standard framework with multiple logging levels

logConfig.options = {
transports: [
new transports.Console({
level: 'info'
})
]
};
Standard output stream
Configurable logging level

accesslog:
image: psdockerprod/access-log:m2
volumes:
- type: bind
source: ./config/access-log/logConfig.js
target: /app/config/logConfig.js
networks:
- iotd-net
docker-compose.yml

web
access-log
image-of-the-day

•
Log files
•
syslog
•
Event Log/ETW
•
stdout
•
stderr
Log Relay

Demo
Relaying logs from other sinks
- Container with file logging
- Adding a log relay utility
- Running the relay in the container

watch logSink
when logSink->newEntry
read newEntry
write newEntry->stdout
Log relay
Watch the app's log sink & relay to console

FROM mcr.microsoft.com/dotnet/core/runtime:3.1-alpine
CMD dotnet TimeCheck.dll & dotnet Tail.dll /logs timecheck.log
COPY --from=builder /out/ .
COPY --from=utility /out/ .
Building the log relay
Portable utility - or standard OS tool

•
Application process
•
Background
•
Log Relay
•
Foreground


ConfigMap
ServiceAccount
DaemonSet
HostPath

Demo
Collecting and centralizing logs
- Running EFK in Kubernetes
- Configuring Fluent Bit
- Displaying Kubernetes system logs

Demo
Collecting application logs with EFK
- Apps with a logging sidecar
- Distributed applications
- Filtering on log metadata


input.conf: |
[INPUT]
Name
tail
Path
/var/log/containers/*.log
Tag_Regex
(?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])...log$
Tag
kube.<ns_name>.<container_name>.<pod_name>.<docker_id>-
Parser
docker
Refresh_Interval
10
output.conf: |
[OUTPUT]
Name
es
Match
kube.default.*
Host
elasticsearch
Index
app-logs
fluentbit-config.yaml


Surfacing application logs
- Standard output streams
- Container foreground process
- Logging framework configuration
Relaying logs from other sinks
- Files or system log sinks
- Custom relay utility or tool
- Startup command or sidecar
Centralizing logs in the platform
- EFK: Elasticsearch, FluentBit & Kibana
- Kubernetes and container logs
Summary

Up Next:
Building and Running Self-healing Applications

