© Fred Baptiste 2018

Generators can be in different states
def my_gen(f_name):
f = open(f_name)
try:
for row in f:
yield row.split(',')
finally:
f.close()
rows = my_gen()
create the generator
à CREATED
run the generator
next(rows)
à RUNNING
until yield
à CLOSED
until generator return
à SUSPENDED
© Fred Baptiste 2018

Inspecting a generator's state
use inspect.getgeneratorstate to see the current state of a generator
from inspect import getgeneratorstate
g = my_gen()
getgeneratorstate(g) à GEN_CREATED
row = next(g)
getgeneratorstate(g) à GEN_SUSPENDED
lst(g)
getgeneratorstate(g) à GEN_CLOSED
(inside the generator code while it is running)
getgeneratorstate(g) à GEN_RUNNING
© Fred Baptiste 2018

Code Exercises
© Fred Baptiste 2018

