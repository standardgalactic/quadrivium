Scopes and Namespaces
●
Namespace is  a container (table) that contains the names we define. This way we can 
have the same name defined in different namespaces; 
●
Name = variable, function or class
●
A name or variable can exist only in specific part of our code. The portion of code where 
the name exists is called scope of that variable and the binding between the variable and 
the object or value is stored in a namespace;
 
 
In Python there are 3 types of namespaces or scopes:
1.
The built-in namespace: it contains Python built-in functions and are available across all 
files or modules
2.
The global (module) namespace: it contains all variables, functions and classes we define 
in our scripts. Are available inside a single file or module
3.
The local namespace: it contains names defined inside our own functions. Are available 
only inside the function in which they are defined
●
Scopes are nested: the local scope is nested inside the global scope, which is nested 
inside the built-in scope
Master Python Programming
By Andrei Dumitrescu

