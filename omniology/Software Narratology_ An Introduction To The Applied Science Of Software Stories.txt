free ebooks ==>   www.ebook777.com
 
 
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
2 
 
Published by OpenTask, Republic of Ireland 
 
Copyright © 2012 by OpenTask 
 
Copyright © 2012 by Memory Dump Analysis Services 
 
Copyright © 2012 by Dmitry Vostokov 
 
Copyright © 2015 by Software Diagnostics Services 
 
All rights reserved. No part of this book may be reproduced, stored in a retrieval system, or 
transmitted, in any form or by any means, without the prior written permission of the 
publisher.  
 
You must not circulate this book in any other binding or cover, and you must impose the same 
condition on any acquirer.  
 
Product and company names mentioned in this book may be trademarks of their owners.  
 
OpenTask books and magazines are available through booksellers and distributors worldwide. 
For further information or comments send requests to press@opentask.com. 
 
A CIP catalog record for this book is available from the British Library. 
 
ISBN-l3: 978-1-908043-07-8 (Paperback) 
 
First printing, 2012 
 
Revision 2.0 (June 2015) 
 

free ebooks ==>   www.ebook777.com
3 
 
 
 
 
 
 
 
 
 
 
 
 
Hello Everyone, my name is Dmitry Vostokov, and I introduce software narratology today. This is a 
version one of the Webinar in order not to overwhelm you with concepts if you are not familiar with 
narratology. So I decided to keep this presentation as simple as possible and gradually introduce you 
to the concepts.  
 
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
 
 
 
 
 
 
 
 
 
 
These prerequisites are very simple, and I suppose you all enjoy reading stories. The whole new 
discipline was born because I needed to convince myself to enjoy reading software traces and event 
logs.  
  
 

free ebooks ==>   www.ebook777.com
5 
 
 
 
 
 
 
 
 
 
 
 
Let’s analyze this story fragment from some fiction: After a long search a Hero found a castle and tried 
to open its gate. It’s closed. The Hero needed a key.  
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
6 
 
 
 
 
 
 
 
Let’s break the story into the sequence of events: 
 
A long search 
A Hero found a castle 
The Hero tried to open the castle gate 
The gate was closed 
The Hero needed a key 
 
From these events, we can construct any representation such as the text we read previously, or it can 
be a movie or a graphic.  
 
Definition: Narrative is a representation of events and state changes. 

free ebooks ==>   www.ebook777.com
7 
 
 
 
 
 
 
 
 
 
 
 
Now consider this real software story: After a long computation a Component ABC tried to save 
computed results to a file. Access denied. The Component needed to have certain rights. It sounds very 
similar to the previous fictional story, and you see the Component ABC plays a Hero role. The file is 
the castle and access right is the key. 
  
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
8 
 
 
 
 
 
 
 
 
 
 
 
If we break our software story into software-defined events, we get a software trace or event log. 
Where did this narrative come from? Who does create such narratives? 
 
 
Definition: Software narrative is a representation of software events and changes of state.  
 

free ebooks ==>   www.ebook777.com
9 
 
 
 
 
 
 
 
 
 
 
 
Software developers add code during software construction phase to generate such event 
descriptions during software execution to assist themselves and more often other people in problem-
solving such as software troubleshooting and debugging.  
 
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
10 
 
 
 
 
 
 
 
 
 
 
 
However, during software post-construction phase a user runs the program and gets an empty file 
with no results. The user opens a support case and ...  
 

free ebooks ==>   www.ebook777.com
11 
 
 
 
 
 
 
 
 
 
 
 
… a software engineer modifies the code to add events. This could also have been done during the 
software construction phase in anticipation of possible future software problems. We come back to 
this anticipation shortly.  
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
12 
 
 
 
 
Now a bit of history. Please note that this is itself a historical narrative, a sequence of events and state 
of mind changes. Earlier in 2009 I was trying to make sense of software trace analysis. Historically I 
started with full-time memory dump analysis more than 8 years ago. After some time, I had to analyze 
very complex software logs with millions of events from dozens of processes, hundreds of 
components and threads. There was no time to learn millions of source code lines as well. If in 
memory dumps a problem was always immediately visible to me due to numerous patterns then in 
software logs it was not. So I started discerning patterns to help me with trace analysis. However, I 
came to pattern-writing block as there were not so many discernible product-independent patterns. 
During the fateful interview about tracing tools, I was asked about how to explain software traces to a 
general software user. Fortunately, a few weeks before, I started reading books on literary theory and 
criticism which mentioned the notion of a narrative. So all this came to my mind, and I explained 
software tracing as stories of computation. After that, I came up with the first definition of software 
narratology as an application of narratology to software traces and logs. All subsequent product-
independent trace analysis patterns (almost 50 of them) were discerned using this narratological 
perspective. During the next 2 years, I was reading a lot on literature and recently came up with an 
idea to extend software narratology to the whole domain of software including software construction 
phases.  

free ebooks ==>   www.ebook777.com
13 
 
 
May 7, 2009 
First trace analysis pattern:  
http://www.dumpanalysis.org/blog/index.php/2009/04/28/trace-analysis-patterns-part-1/ 
 
June 12, 2009 
First definition of software narratology: 
http://www.dumpanalysis.org/blog/index.php/2009/06/12/software-narratology-a-definition/ 
 
March 20, 2012 
Second definition of software narratology: 
http://www.dumpanalysis.org/blog/index.php/2012/03/20/what-is-a-software-narrative/ 
 
 
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
14 
 
 
 
 
 
 
 
 
 
 
 
This is a software narratological square where the top row deals wth software post-construction 
phase and the bottom row deals with software construction phase. The left column deals with 
software implementation aspects, and the right column deals with requirements and use cases. In this 
introduction, we only discuss the top left square related to post-construction software stories: 
relevant to software users and technical support and maintenance personnel. Other squares will be 
discussed in subsequent expanded versions of this introduction. The concept of a software narreme 
will be introduced shortly.  
 
 

free ebooks ==>   www.ebook777.com
15 
 
 
 
 
 
 
 
 
 
 
 
Now we briefly discuss yet another aspect of narrative: its representation. The events of the whole full 
story (also called fable or fabula) can be rearranged in numerous ways to create various plots also 
called sujets (for example, with the suspension as in fiction thrillers). Before or during software 
execution the generation of certain event categories can be switched off or on. When engineers 
analyze software traces, they hide certain events in order to reduce the size of a trace. So we get 
different software plots or sujects from the possible full software story or fabula. But every individual 
plot can be presented differently, for example, in a novel or a poem, and even in a movie. The same 
goes for software stories as well.    
 
  
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
16 
 
 
 
 
 
 
 
 
 
 
 
The additional useful concept from narratology is the concept of a paratext. This is additional 
information about a text useful for its interpretation such as a book cover, an introduction by an 
editor, notes or the list of other referenced texts. 
 
Front and back matter: 
http://en.wikipedia.org/wiki/Book_design 
 
 

free ebooks ==>   www.ebook777.com
17 
 
 
 
 
 
 
 
 
 
 
 
This leads to the concept of an extended software trace that includes supporting information such as 
pictures, videos, accounts of scenarios and past problem histories, user interviews: all what is 
necessary to understand a software incident and lead to a problem resolution.  
 
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
18 
 
 
 
 
 
 
 
 
 
 
 
Now we come to a basic unit of software narratives: a software narreme. Here we don’t consider a 
syntactical unit such as an event. Such basic units need to have a semantic aspect as well if they are of 
any use. We are in the process of their identification, and some examples include enter / exit and 
request / reply.   
 
 

free ebooks ==>   www.ebook777.com
19 
 
 
 
 
 
 
 
 
 
 
 
There are 3 basic software narreme types: state and action reports and a commentary.  
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
20 
 
 
 
 
We have already seen that the study of fiction helps with structuring and understanding of software 
stories. So is the other way around and software narratology and its patterns help with understanding 
fiction and other types of narrative such as historical narratives. Moreover, it can help with fiction 
writing. If you like science fiction, then you are probably familiar with the novel of Philip K. Dick “The 
Man in the High Castle”. It is a known fact that the author used a fiction creating device, an ancient 
Chinese book I Ching (pronounces /ˌiː ˈtʃɪŋ/), to guide story construction. We can also use various 
software traces to create a story and plot fragments. We just need to replace components, processes 
and threads with various agents and institutions. 
 
Software Narratology helps Fiction Writers: 
http://www.dumpanalysis.org/blog/index.php/2012/02/13/software-narratology-helps-fiction-
writers/ 
 
Writing and Validation of Historical Narratives: 
http://www.dumpanalysis.org/blog/index.php/2012/03/11/writing-and-validation-of-historical-
narratives-part-1/ 
 

free ebooks ==>   www.ebook777.com
21 
 
 
 
 
 
 
 
 
 
 
 
Different platforms and products use different formats for software logs and traces. 
 
Definition: Software narrative genre is a way of presenting software narratives. 
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
22 
 
 
 
 
 
 
 
 
 
 
 
Software narratology strives to discern what is common to all software stories. For example, so far we 
have identified almost 50 patterns. 
 
Definition: Narrative isomorphism is a correspondence in narrative structure. 
  
 
 

free ebooks ==>   www.ebook777.com
23 
 
 
 
 
 
 
 
 
 
 
 
Software diagnostics now is fragmented across products, technologies, and vendors. Different 
products have different diagnostic report formats. Even when a certain diagnostics technology is used 
by different software vendors such as Event Tracing for Windows reporting formats and styles differ 
greatly and in ad hoc manner. A unified approach is needed that doesn’t mandate rules but takes into 
account the diverse nature of computer diagnostics. We believe Software Narratology is such an 
approach. 
 
 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
24 
 
 
 
 
 
 
 
 
 
 
 
Benefits of software narratological approach include anticipatory software construction and product 
independent software problem solving, where we use the term “anticipatory” in the sense of 
annotation your code with software events in such a way as to help with software trace analysis later. 
Product independence uses narrative isomorphism, genre aspects, software trace narremes and 
patterns to analyze software traces and logs in the similar way regardless of software platforms, 
technologies, products and vendors.  
 
 
 

free ebooks ==>   www.ebook777.com
25 
 
 
 
 
 
 
 
 
 
 
 
By looking at software traces as narrative stories, a software engineer would better anticipate the 
needs of software maintainers and technical support and escalation engineers by constructing better 
event descriptions.  
 
Definition: Anticipatory software construction anticipates post-construction problem analysis. 
www.ebook777.com
www.ebook777.com

free ebooks ==>   www.ebook777.com
26 
 
 
 
 
 
 
 
 
 
 
 
Software narratological perspective gives a unified framework of patterns to look for when analyzing 
software traces and logs from diverse products, platforms, and technologies. Knowledge of trace 
analysis patterns lowers a learning curve during the transition to maintenance and support of the 
different product. In tiered support organizations, it provides a unified pattern language to report and 
discuss diagnostic reports and alerts, problem incidents, and their artifacts.  
 
Software Narrative Patterns: 
http://www.dumpanalysis.org/blog/index.php/trace-analysis-patterns/ 
 
 
 

free ebooks ==>   www.ebook777.com
27 
 
 
 
 
 
There are two basic introductions to narrative that I found useful. I also include links to the emerging 
discipline of Software Narratology. Some edited articles started to appear in Volume 3 of Memory 
Dump Analysis Anthology.  
 
www.SoftwareNarratology.com  
Now points to www.DumpAnalysis.org and www.TraceAnalysis.org 
 
Pattern Catalog: 
http://www.dumpanalysis.org/blog/index.php/trace-analysis-patterns/ 
 
Memory Dump Analysis Anthology: 
http://www.patterndiagnostics.com/ultimate-memory-analysis-reference 
 
Software Trace and Memory Dump Analysis: Patterns, Tools, Processes and Best Practices: 
http://www.patterndiagnostics.com/STMDA-materials 
 
www.ebook777.com
www.ebook777.com

