Microsoft 
Azure Security 
Technologies 
(AZ-500) - A 
Certification Guide
Get qualified to secure Azure AD, Network, 
Compute, Storage and Data services through 
Security Center, Sentinel and other Azure security 
best practices
Jayant Sharma
www.bpbonline.com

ii    
FIRST EDITION 2022
Copyright © BPB Publications, India
ISBN:  978-93-89898-81-1
All Rights Reserved. No part of this publication may be reproduced, distributed or 
transmitted in any form or by any means or stored in a database or retrieval system, 
without the prior written permission of the publisher with the exception to the program 
listings which may be entered, stored and executed in a computer system, but they 
can not be reproduced by the means of publication, photocopy, recording, or by any 
electronic and mechanical means.
LIMITS OF LIABILITY AND DISCLAIMER OF WARRANTY
The information contained in this book is true to correct and the best of author’s and 
publisher’s knowledge. The author has made every effort to ensure the accuracy of these 
publications, but publisher cannot be held responsible for any loss or damage arising 
from any information in this book.
All trademarks referred to in the book are acknowledged as properties of their 
respective owners but BPB Publications cannot guarantee the accuracy of this 
information.
Published by Manish Jain for BPB Publications, 20 Ansari Road, Darya Ganj, 
New Delhi-110002 and Printed by him at Repro India Ltd, Mumbai
www.bpbonline.com
Distributors:
BPB PUBLICATIONS
20, Ansari Road, Darya Ganj
New Delhi-110002
Ph: 23254990/23254991
MICRO MEDIA
Shop No. 5, Mahendra Chambers, 
150 DN Rd. Next to Capital Cinema, 
V.T. (C.S.T.) Station, MUMBAI-400 001 
Ph: 22078296/22078297 
DECCAN AGENCIES
4-3-329, Bank Street,
Hyderabad-500195
Ph: 24756967/24756400
BPB BOOK CENTRE
376 Old Lajpat Rai Market,
Delhi-110006
Ph: 23861747

    iii
Dedicated to
My beloved Parents:
Shri Vishnu Sharma 
Smt. Anju Lata Sharma
&
My wife Ayushi Upadhyay and My Son Shashwat Gautam

iv    
About the Author
I am Jayant Sharma. I completed Bachelor of Technology in Electronics and 
Communication. I have a total of 10+ years of experience in various domains 
like Windows Server Administration, VMWare Administration, Cloud solution 
architecting for Azure and GCP, security architecting for Data, Storage, Virtual 
Machines, Application and user identity and access management (IAM). I 
have sound experience in security compliance audits PCI DSS, ISO 27001:2013, 
HIPPA, GDPR(EU), MeitY(India). I worked with various enterprises such as Tata 
Consultancy Services (TCS), Hewlett Packard Enterprise (HPE), International 
Business Machines (IBM), Hanu Software Solutions, Rackspace Technology. I 
completed various technical certifications issued by Microsoft, VMWare, and IBM. 
Currently I am working as Azure Solution Architect. I am a Guinness book of 
world record holder for participating in App development marathon conducted by 
Microsoft. I am also a Microsoft certified trainer (2020-2021) and provide trainings 
for various Microsoft certifications and technologies.

    v
About the Reviewer
Lalit is an Azure MVP, MCT and Author of the “Azure Interview Q & A ” and 
AZ-104 Azure Administration book. He likes to share his knowledge through his 
blog (https://azure4you.com/ ) & manage and share his technical skills in BITPro 
and Azure User Meetup group. He has written several articles on Microsoft Azure.
He has changed many lives from his articles and his hands-on training programs 
and workshops. He is Speaker and delivered the session on the big platform 
including MS Global Bootcamp and other events.
Moreover, and to his credit, he has delivered 500+ training sessions to professionals 
worldwide in Microsoft Azure technologies and other technologies including 
SCOM, Windows Server. In addition, he provides Instructor-led online training 
and hands-on workshops.
His technical prowess and capability of exploring new frontiers of technology & 
imparting them to his aspiring team members are his trademark. His execution is 
priceless & bringing forth his approach will help you realize your dreams, goals, 
and aspirations into reality.
Arun Pachehra is a solutions Architect with a specialisation in Microsoft Azure. 
He works with one of the best Cloud Service Providers in the world. His focus 
areas include cloud consulting, architecture, designing, and migration. He believes 
in continuous learning which leads him to clear almost all the certifications 
related to Azure and now he is exploring different aspect of cloud which include 
advance security, cloud native app development, and other Public Clouds. As an 
active member of Azure community, Arun often hosts public webinars for cloud 
enthusiasts, writes blog and is the host of an educational YouTube channel covering 
cloud services.
Tushar Kumar is an Azure certified Cloud Solutions Architect, awarded most 
valuable professional by Alibaba Cloud, former Microsoft Student partner, 
Community lead and Microsoft recognized Azure Community Hero. With rich 
experience in planning, designing, Implementing, and maintaining secure 
applications in Azure Cloud from x86 and non-x86 environments. Recognized 
leader in migrating and creating enterprise architecture for transition from on 
premise to cloud using Azure services.  He is certified with 7 Microsoft Certifications 
spanning across Azure Solutions Architect, Azure DevOps Expert, Azure Security 
Engineer and Azure Security, and compliance fundamentals. 

vi    
He hold advanced specialization in identity, security, and compliance and 
working extensively in large transformation of enterprises, Banking Finance, 
and Insurance institutions towards public cloud and responsible for designing 
scalable architecture with respective industry standards and security compliance 
Framework.
Abhijeet is an experienced Security and DevOps Cloud Consultant. He has been a 
part of several enterprise tech transformation generations. Having worked in both 
Microsoft Azure and AWS, he has a keen sense of services and offerings across 
both the cloud providers. He has worked with healthcare institutions helping them 
adopt the cloud where security is of utmost importance. He is currently working 
with SoftwareONE as a cloud consultant and helps customers to adopt and 
manage DevOps and cloud methodologies. He currently holds Microsoft Azure 
Architect Expert, Microsoft Azure DevOps Expert, Microsoft Azure Administrator 
Associate, Microsoft Azure Security Engineer Associate and is also an active 
Microsoft Certified Trainer (MCT).

    vii
Acknowledgments
Microsoft Azure security services and features are very dynamic technology. 
Microsoft is upgrading them regularly to provide industry best security services. 
I saw many upgrades in Microsoft Azure security services while writing this 
book and had to re-write many topics multiple times because of these continuous 
upgrades. Thank you God for giving me the strength to write this book on such a 
dynamic technology which changes almost every day. 
There are a few people I want to thank for the continued and ongoing support they 
have given me during the writing of this book. First and foremost, I would like to 
thank my grandparents, parents, uncle, aunty, wife, sister, cousins, in-laws, and all 
family members for continuously encouraging me for writing the book — I could 
have never completed this book without their support.
I am grateful to the course and the companies which gave me support throughout 
the learning process of Microsoft Azure and other technologies. Thank you for all 
hidden support provided. 
My gratitude also goes to the team at BPB Publication for being supportive enough 
to provide me quite a long time to finish the book. Since Microsoft Azure Security 
is a vast and very active area of research, it took me sometime to research about 
all the topics and services provided by Microsoft Azure for security. I had to cycle 
back many times to review the chapters and keep them up to date with latest 
updates released by Microsoft.

viii    
Preface
This book covers many different aspects of Microsoft Azure Security 
recommendations and implementation. This book also introduces the importance 
of Security in the field of real time Azure cloud industry. It shows how the cloud 
security is important for the industries in their various technical verticals. This 
book gives the advance understanding towards Azure Security.
This book takes a practical approach to analyze current security requirements 
for organizations. It covers detailed security recommendations, implementation 
planning and implementation process for compute, network, web, data, storage, 
and identity & access management verticals. The book has wide theory to cover 
all the areas of AZ-500 exam syllabus. Along with theory it has detailed hands 
on guidance to implement the security recommendations in Azure cloud. This 
book covers examples for every security recommendation with clear screenshots. 
Security administrators can refer this book not only to clear the exam but also for 
real time decision making and implementation of security recommendations. 
This book is divided into 11 chapters. They will cover security recommendations, 
best practices, implementation planning and implementation process for different 
technical verticals of any organization. This book also includes some topics of 
other Microsoft Azure Certificates as well such as AZ-104, AZ-303, AZ-304, SC-
200, SC-300, SC-500, SC-900, and MS-500, So learners can get more from single 
book. The chapter wise details are listed below. 
Chapter 1 will cover, as a Microsoft Azure security engineer, how you can check 
whether Azure Active Directory (AD) is configured securely to serve as an identity 
store for your Azure-based cloud applications. I will cover some of the major topics 
such as administering Azure AD users and groups, configuring authentication 
methods in Azure AD, and configuring application registrations in Azure AD. I 
will also cover password writeback and passwordless authentication methods in 
Azure AD. Along with these major topics, we will also go through architecture and 
building block of Azure AD. 
Chapter 2 will cover how to enforce security services from Azure AD. I will cover 
least privilege security access, both for Azure AD and for other Azure resources. 
Some of the major topics that will be covered include understanding of use 

    ix
cases for Azure AD Privileged Identity Management (PIM), discovering the high 
privilege role holders like owners or global admins in Azure AD and in your Azure 
subscriptions, configuring time-limited access for privileged roles, and auditing 
the entire process to ensure security compliance for IAM. You will also learn about 
setting up Azure Multi-Factor Authentication (MFA), Conditional Access, and 
Identity Protection. 
Chapter 3 will cover how to apply best security practices on your entire subscription 
and resource group. Some of the major topics that we will cover include role 
base access control, resource locks, Azure policy as well as Azure Blueprint. No 
organization wants their resources to be deleted accidently or provide the highest 
level of access to everyone. Organizations certainly want to follow certain baselines 
and policies to keep their infrastructure secure and manageable. By the end of this 
chapter, you will be able to identify appropriate permissions for respective users 
and assign them to users. 
Chapter 4 will cover some important networking features and services, then we 
see how they work in Azure. Starting with network security groups, creating a 
VPN between your on-premises data center and Microsoft Azure, finishing with 
Azure Firewall, additional services, and features sprinkled in between, of this 
chapter. Some of the major topics that we will cover include planning to secure 
your Azure network, control who has access to your azure network resources. 
We will look at application gateway with WAF, Azure Front Door, Azure DDoS 
protection, and Azure Firewall. By the end of this chapter, you will have a 
fundamental understanding of how you can better secure your Azure networks 
using the features and services they provide.
Chapter 5 will cover, some critical features and services to secure your endpoints 
both on-premises as well as in the cloud. I will explain how to manage update 
management and Endpoint protection for Azure VM. You will also study about 
Azure Key Vault to store keys, secrets, and certificates securely. You will use this 
key vault to do disk encryption for your Azure Virtual Machines disks. At the end, 
I will explain how to enable secure authentication on your Azure web apps and 
how to access them securely. By the end of this chapter, you will understand best 
practices to better secure your workloads both on-premises and in the cloud using 
the features and services provided by Microsoft.
Chapter 6 will cover how you can harden the security across your containers. We 
will start with basic understanding and deployment of containers to network level 

x    
hardening to vulnerability identification and management for the containerized 
environment. Other topics covered will be isolation of containers and access 
control on them. By the end of this chapter, you will be able to design and provide 
secure containers to host your applications. Along with securing containers, you 
will be able to understand the building blocks and concepts of containers.
Chapter 7 will cover various monitoring services in Azure. Monitoring of 
infrastructure and application is very important service to take proactive decisions 
to prevent unwanted break downs. This chapter will include setting up monitoring 
of Azure resources and services, capturing the different logs and diagnostic 
parameters, passing these logs to alert generator. After this chapter, you will be 
able to setup a monitoring setup for your infrastructure including on-premises 
and Azure.
Chapter 8 will cover Azure Security center in detail. Azure Security Center is a 
centralized service which keeps an eye on your complete environment resources. 
Its surveillance is not only limited to Azure but can also scan any on-premises and 
third-party cloud environment. You will study about different SKUs of security 
center and their respective features. This chapter will include managing security 
baseline polices. After this chapter, you will be able to configure security policies 
management and remediation of the recommendations provided by the security 
center.
Chapter 9 will cover Microsoft native Security Information Event Management 
(SIEM) and Security Orchestration Automated Response (SOAR) tool, Azure 
Sentinel. You will study how to configure Azure Sentinel in your environment 
and how to on-board different Azure and non-Azure data sources into Azure 
Sentinel. You will see how to configure built-in and custom alerts when Azure 
Sentinel detects an unusual or threat event. At the end of this chapter, I will explain 
how to do in detail analysis of the events generated by Azure Sentinel and how to 
configure automated workflow for the event remediation.
Chapter 10 will cover security best practices related to Azure Storage. You will study 
different authentication methods for Azure Storage account such as Azure RBAC, 
Azure AD, Shared Access Signature (SAS). You will study different encryption 
methods for Azure storage accounts. You will also study how to securely access 
Azure Storage account from your network. By the end of this chapter, you will be 
able to decide the best secure way to store your data in Azure Storage accounts.

    xi
Chapter 11 will cover security best practices for Azure SQL Servers. Azure provides 
controls on how and how much you want to secure your data containers. We will 
cover different security best practices to secure your Azure SQL Servers and data 
such as the best practices to encrypt, authorize and classify the data in Azure SQL 
Servers. Enabling auditing and encryption for Azure SQL, different authentication 
processes, and data classifications are some major topics which you will study in 
this chapter. By the end of this chapter, you will be able to decide the best secure 
way to store your data in Azure SQL Servers.

xii    
Downloading the 
coloured images:
Please follow the link to download 
the Coloured Images of the book:
https://rebrand.ly/03f4d1
Errata
We take immense pride in our work at BPB Publications and follow best practices to 
ensure the accuracy of our content to provide with an indulging reading experience 
to our subscribers. Our readers are our mirrors, and we use their inputs to reflect 
and improve upon human errors if any, occurred during the publishing processes 
involved. To let us maintain the quality and help us reach out to any readers who 
might be having difficulties due to any unforeseen errors, please write to us at:
errata@bpbonline.com
Your support, suggestions and feedbacks are highly appreciated by the BPB 
Publications’ Family. 
Did you know that BPB offers eBook versions of every book published, 
with PDF and ePub files available? You can upgrade to the eBook version 
at www.bpbonline.com and as a print book customer, you are entitled to a 
discount on the eBook copy. Get in touch with us at business@bpbonline.com 
for more details.
At www.bpbonline.com, you can also read a collection of free technical 
articles, sign up for a range of free newsletters, and receive exclusive 
discounts and offers on BPB books and eBooks.

    xiii
BPB is searching for authors like you
If you're interested in becoming an author for BPB, please visit 
www.bpbonline.com and apply today. We have worked with thousands of 
developers and tech professionals, just like you, to help them share their 
insight with the global tech community. You can make a general application, 
apply for a specific hot topic that we are recruiting an author for, or submit 
your own idea.
The code bundle for the book is also hosted on GitHub at https://github.
com/bpbpublications/Microsoft-Azure-Security-Technologies-AZ-500-
--A-Certification-Guide. In case there's an update to the code, it will be 
updated on the existing GitHub repository.
We also have other code bundles from our rich catalog of books and videos 
available at https://github.com/bpbpublications. Check them out!
PIRACY
If you come across any illegal copies of our works in any form on the internet, 
we would be grateful if you would provide us with the location address or 
website name. Please contact us at business@bpbonline.com with a link 
to the material.
If you are interested in becoming an author
If there is a topic that you have expertise in, and you are interested in either 
writing or contributing to a book, please visit www.bpbonline.com.
REVIEWS
Please leave a review. Once you have read and used this book, why not leave 
a review on the site that you purchased it from? Potential readers can then 
see and use your unbiased opinion to make purchase decisions, we at BPB 
can understand what you think about our products, and our authors can see 
your feedback on their book. Thank you!
For more information about BPB, please visit www.bpbonline.com.

xiv    
Table of Contents
1.	 Managing Azure AD Identities and Application Access................................ 1
Structure.....................................................................................................................2
Objectives...................................................................................................................2
Azure AD overview...................................................................................................2
    Building blocks and objects of Azure AD.....................................................3
      Available version of Azure AD ......................................................................4
    Azure AD architecture.....................................................................................5
Creating a new tenant in Azure AD.......................................................................9
Adding a custom domain to Azure AD...............................................................10
Adding a company brand to Azure AD...............................................................13
    Customizing your Azure AD sign-in page..................................................13
Creating and adding an Azure subscription to your Azure AD.......................16
    Creating a new subscription and associating to a directory.....................17
    Transferring a subscription between Azure AD tenants...........................18
Managing Azure AD users and groups................................................................20
    Types of user accounts...................................................................................20
    Types of groups...............................................................................................21
      User management...........................................................................................21
    Group management in Azure AD................................................................27
Configuring authentication methods in Azure AD............................................30
    Types of authentication methods.................................................................31
    Choose the authentication method..............................................................32
    Prerequisites for Azure AD Connect...........................................................33
    Installing Azure AD Connect with Password Hash Synchronization.....35
    Installing Azure AD Connect with pass-through authentication............40
    Installing Azure AD Connect for federation with AD FS.........................46
    Topologies for Azure AD Connect..............................................................55
    Features of Azure AD Connect....................................................................56
Setting up password writeback through Azure AD Connect............................57
    Prerequisites to set up password writeback................................................57

    xv
    Enabling Self Service Password Reset in Azure AD..................................58
    Selecting authentication and registration options.....................................58
    Setting up account permission for Azure AD Connect account..............60
    Configuring Azure AD Connect for password writeback........................61
Passwordless authentication options in Azure AD.............................................62
    Enabling combined registration experience...............................................63
    Enabling passwordless authentication method..........................................63
Creating app registration in Azure AD................................................................65
    Azure AD applications account types..........................................................66
    Required access level for app registration...................................................66
    New application registration in Azure AD through the Azure portal....67
    App registration permission scopes configuration....................................69
Conclusion...............................................................................................................70
Multiple choice questions.......................................................................................70
2.	 Configuring Secure Access by Using Azure Active Directory......................73
Structure...................................................................................................................73
Objectives.................................................................................................................74
What is Azure AD Privileged Identity Management?........................................74
    Terminology used in PIM.............................................................................75
Planning and setting up Azure AD PIM for your organization........................76
    Planning Azure AD PIM and other security best practices......................77
    Configuring Azure AD PIM.........................................................................79
    Manage Azure AD PIM for Azure AD roles...............................................82
    Managing Azure AD PIM for Azure resources..........................................94
    Activating Azure AD and Azure resource role in PIM.............................98
Azure AD multi-factor authentication (MFA)..................................................100
    MFA methods...............................................................................................100
    Versions of Azure MFA...............................................................................101
    Prerequisites to check before setting up MFA..........................................101
    Steps to enable and disable Azure MFA for users....................................102
    Configuring Azure MFA settings...............................................................103
Azure AD conditional access...............................................................................110
    Building components of Azure AD conditional access policy...............111
    Available conditions in Azure AD conditional access.............................112

xvi    
    Azure AD conditional access report only mode......................................114
    Azure AD Conditional Access What If tool.............................................115
    Service dependencies in Azure AD Conditional Access.........................116
    Set up location-based Azure AD Conditional Access.............................117
    Set up Azure AD Conditional Access to enforce MFA 
      for administrators....................................................................................121
    Set up Azure AD terms of use....................................................................123
    VPN connectivity in Azure AD Conditional access................................125
Azure AD Identity Protection.............................................................................126
    Azure AD Identity Protection dashboard or security overview.............126
    Type of risks identified by Azure AD Identity Protection......................128
    Azure AD Identity Protection simulate risk detection............................130
    Azure AD Identity Protection policies......................................................131
Conclusion.............................................................................................................135
Multiple choice questions.....................................................................................135
3.	 Managing Azure Access Control.................................................................139
Structure.................................................................................................................139
Objectives...............................................................................................................140
RBAC to configure permissions over subscription, resource groups,
   and resources....................................................................................................140
    Types of roles in Azure................................................................................141
    Building components and working of RBAC...........................................143
    Types of RBAC roles in Azure....................................................................144
Azure resource lock..............................................................................................152
    Apply and remove lock from the Azure resource....................................152
Azure Policy...........................................................................................................154
    Assign Azure Policy from the portal.........................................................155
Azure blueprint.....................................................................................................160
    Terminology of a Azure Blueprint.............................................................161
    Configuring security settings by the Azure Blueprint.............................162
Conclusion.............................................................................................................170
Multiple choice questions.....................................................................................170

    xvii
4.	 Implementing Advance Network Security..................................................173
Structure.................................................................................................................173
Objectives...............................................................................................................174
Understand Azure Virtual Networking concepts.............................................174
Azure VNet connectivity scenarios....................................................................176
    Setup of Azure VNet to Azure Virtual Network connection..................176
    Azure VNet to on-premises network connection....................................188
Azure Network Security Group (NSG) and Application Security 
  Group (ASG).....................................................................................................192
    Components of network security rule.......................................................192
    Azure Virtual Network service tags...........................................................193
    Traffic flow through Azure NSGs...............................................................194
    Create, configure, and manage Azure NSGs.............................................197
    Azure Application Security Groups (ASG)...............................................204
Configure application gateway to secure app service.......................................205
    Application gateway features......................................................................205
    Traffic flow through application gateway..................................................207
    Application gateway building blocks.........................................................209
    Deploy application gateway to host single site.........................................211
    Configure application gateway for app service.........................................221
    Configure application gateway with Web Application Firewall (WAF)......224
Azure Front Door (AFD) service........................................................................227
    Features of AFD service...............................................................................227
    Building blocks and concepts of AFD.......................................................229
    Create Azure Front Door.............................................................................234
Azure Firewall........................................................................................................238
    Features of Azure Firewall...........................................................................238
    Create, configure, and manage Azure Firewall.........................................239
Creating, configuring, and managing Azure Firewall policy..........................245
    Components of Azure Firewall policy.......................................................245
    Create Azure Firewall policy.......................................................................247
    Connect Azure Firewall policy with VNet and hubs...............................248
    Manage Azure Firewall policy....................................................................249

xviii    
Azure Firewall Manager.......................................................................................259
    Overview for Azure Firewall Manager......................................................259
    Features for Azure Firewall Manager.........................................................259
    Manage Azure Firewall Manager...............................................................260
Shielding your Azure Virtual Network with DDoS protection.......................261
Remote access management through Azure Bastion.......................................262
    Architecture..................................................................................................263
    Features of Azure Bastion............................................................................263
    Configuring Azure Bastion.........................................................................264
Service endpoint in Azure....................................................................................266
    Configuring service endpoint in Azure Virtual Network.......................266
Azure Resource Firewall......................................................................................267
    Azure PaaS SQL............................................................................................267
    Azure storage account..................................................................................268
    Azure Key Vault............................................................................................269
Conclusion.............................................................................................................270
Multiple choice questions.....................................................................................270
5.	 Configuring Advance Security for Compute...............................................273
Structure.................................................................................................................274
Objectives...............................................................................................................274
Understand Microsoft Endpoint Protection......................................................274
    Features of Microsoft Endpoint Protection..............................................275
    Architecture of Microsoft Endpoint Protection.......................................276
    Enabling Microsoft Endpoint Protection..................................................277
    Monitor Microsoft Endpoint Protection on a running virtual 
      machine.....................................................................................................281
Configure and harden security for virtual machines.......................................282
Update Management solution for servers..........................................................284
    Overview of Update Management.............................................................285
    Supported and unsupported client.............................................................286
    Configure Update Management for virtual machines.............................287
Azure Key Vault.....................................................................................................296
    Create Azure Key Vault................................................................................297
    Manage Azure Key Vault.............................................................................298

    xix
    Azure Key Vault security best practices....................................................306
Azure Virtual Machine disk encryption............................................................325
    Azure Disk Encryption for Azure Virtual Machines...............................325
Detailed description of security parameters for Azure App Service..............332
    Authentication and authorization..............................................................332
    Add SSL/TLS certificate in Azure App Service........................................335
    Restricted network access on app service.................................................337
    Setup Azure private endpoint connection in app service.......................339
    Configure hybrid connection endpoints...................................................347
Conclusion.............................................................................................................353
Multiple choice questions.....................................................................................353
6.	 Configuring Container Security..................................................................357
Structure.................................................................................................................357
Objectives...............................................................................................................358
Overview of container instance...........................................................................358
    Features and benefits of Azure Container Instances...............................358
    Building blocks and concepts about Azure Container Instances...........360
Azure security best practices and recommendations for Azure 
  Container Instances (ACI)..............................................................................361
    Network security..........................................................................................361
    Logging and monitoring..............................................................................361
    Identity and access management................................................................362
    Data protection.............................................................................................362
    Some additional recommendations for container instances..................363
Network planning for Azure Container Instances............................................364
    Advantages of deploying Containers in Azure Network.........................364
    Unsupported networking features.............................................................365
Deploying Azure Container Instance.................................................................365
Isolation modes of Azure Container Instances.................................................368
    Process isolation...........................................................................................368
    Hyper-V isolation.........................................................................................368
Overview of Azure Container Registry..............................................................369
    Features of Azure Container Registry.......................................................369
    Creating container registry.........................................................................370

xx    
    Configuring authentication for Azure Container Registry (ACR)........372
    Geo replicate container registry.................................................................374
    Some best practices to use Azure Container Registry.............................377
    Security best practices for container registry...........................................377
    Secure network connectivity features for container registry..................380
    Securing data protection in container registry.........................................384
Configuring security for different types of containers.....................................393
Azure Kubernetes Services..................................................................................394
    Configuring authentication for AKS cluster.............................................394
    Cluster isolation in AKS cluster..................................................................394
    Security best practices for AKS cluster......................................................396
Conclusion.............................................................................................................399
Multiple choice questions.....................................................................................399
7.	 Monitoring Security by Using Azure Monitor............................................401
Structure.................................................................................................................401
Objectives...............................................................................................................402
Type of logs in Azure............................................................................................402
    Configure diagnostic logging......................................................................403
Log retention management..................................................................................411
    Control log retention period.......................................................................411
    Control log collection quantity...................................................................412
Azure Monitor.......................................................................................................414
    Overview.......................................................................................................414
    Monitoring data sources..............................................................................415
    Insights in Azure Monitor...........................................................................416
    Azure Monitor for virtual machine............................................................417
Alerts in Azure......................................................................................................423
    Types of alerts...............................................................................................423
    Application availability alert.......................................................................424
    Metric alert rules..........................................................................................431
    Creating active logs alerts in Azure Monitor............................................438
    Create custom alerts from Azure Monitor................................................440
    Create custom alert from Log Analytics workspace................................442

    xxi
Conclusion.............................................................................................................443
Multiple choice questions.....................................................................................443
8.	 Monitoring Security by Using Azure Security Center................................445
Structure.................................................................................................................445
Objectives...............................................................................................................446
Azure Security Center..........................................................................................446
    Overview.......................................................................................................447
    Why to use Azure Security Center?...........................................................447
    Azure Security Center support for Azure resources................................449
    Upgrade Azure Security Center to Azure Defender................................452
    Azure Security Center features...................................................................454
    Azure Defender features in security center...............................................464
    Centralized management of policies by using Azure Security Center 
      (regulatory compliance)..........................................................................486
    Add industry and regulatory compliance standards...............................488
    Disable security policies in security center...............................................489
Configure a playbook for a security event by using Azure Security Center 
  (workflow automation).....................................................................................490
    Create logic apps...........................................................................................490
    Configure workflow in Azure Security Center.........................................493
Conclusion.............................................................................................................498
Multiple Choice Questions..................................................................................499
9.	 Monitoring Security by Using Azure Sentinel.............................................501
Structure.................................................................................................................501
Objective.................................................................................................................502
Overview of Azure Sentinel.................................................................................502
Features of Azure Sentinel...................................................................................503
Terminologies used in Azure Sentinel................................................................504
Configuring data source to Azure Sentinel.......................................................505
Monitoring the data collected by connected data sources...............................508
Azure Sentinel overview dashboard...................................................................513
Analytics in Azure Sentinel.................................................................................515
    Creating alerts from built-in scheduled analytics rules..........................516
    Creating alerts from built-in Microsoft security analytics rules............525

xxii    
Detailed information of threat incidents in Azure Sentinel............................529
Investigating threat incidents in Azure Sentinel...............................................532
Workflow automation in Azure Sentinel...........................................................538
    Creating Playbook for Azure Sentinel.......................................................539
    Automating threat incident response in Azure Sentinel through 
      playbook....................................................................................................542
    Automating alert response through playbook..........................................544
Threat hunting in Azure Sentinel........................................................................545
User and entity behavior analytics in Azure Sentinel.......................................546
Some preview features of Azure Sentinel...........................................................548
    Threat intelligence........................................................................................548
    Solutions in Azure Sentinel.........................................................................549
    Watchlist in Azure Sentinel.........................................................................549
Conclusion.............................................................................................................550
Multiple Choice Questions..................................................................................551
10.	Configuring Security for Azure Storage......................................................553
Structure.................................................................................................................553
Objective.................................................................................................................554
Security Recommendation for Azure Storage...................................................554
    Secure data protection recommendations................................................554
    Identity and Access Management...............................................................555
    Networking....................................................................................................556
Configuring Azure Storage service encryption.................................................557
    Encryption of data at rest............................................................................558
    Encryption of data in transit.......................................................................561
    Encryption scope in Azure Storage............................................................563
Authorizing and Access Control in Azure Storage...........................................569
    Azure AD integration for Blobs and queues.............................................570
    Manage Azure Storage account access through managed identity........574
    Manage Azure Storage account access through shared key....................575
    Grant Azure Storage account access through Shared Access 
      Signature (SAS)..................................................................................................578
    Anonymous access on Azure Storage containers and blobs...................589
    Azure Storage access authorize with condition........................................592

    xxiii
Network Security for Azure Storage Accounts..................................................598
    Control Azure Storage account access from selected network...............598
    Access Azure Storage account through private endpoint.......................601
    Network Routing Preference for Azure Storage.......................................603
Enabling advance threat protection on Azure Storage.....................................605
Azure File Share Authentication with Azure AD DS.......................................607
    Steps to configure Azure AD DS authentication for Azure File share..607
Conclusion.............................................................................................................611
Multiple Choice Questions..................................................................................612
11.	Configuring Security for Azure SQL Databases..........................................613
Structure.................................................................................................................613
Objective.................................................................................................................614
Security Layers for Azure SQL Database...........................................................614
    Network Security..........................................................................................615
    Access Management.....................................................................................615
    Threat Protection..........................................................................................616
    Information Protection and Encryption...................................................616
    Security Management..................................................................................617
Security best practices for Azure SQL................................................................617
    Authentication best practices......................................................................617
    Data protection best practices....................................................................618
    Network security best practices..................................................................618
    Monitoring, logging, and auditing best practices....................................619
Authentication Processes for Azure SQL Server...............................................619
    SQL authentication method........................................................................619
    Azure Active Directory authentication for Azure SQL server...............621
Enabling auditing on Azure SQL........................................................................628
    Enabling server level auditing.....................................................................628
    Audit for Microsoft support operations....................................................629
    Enabling database level auditing................................................................630
    View audit logs..............................................................................................632
Implementing Database Encryption...................................................................635
    Transparent data encryption.......................................................................635

xxiv    
    Implement Azure SQL Database Always encryption..............................638
Enabling Azure Defender for Azure SQL Server..............................................654
    Configure Vulnerability Assessment..........................................................655
    Configure advance threat protection.........................................................658
Data discovery and classification........................................................................659
    Discover, classify, and label sensitive columns.........................................660
Dynamic Data Masking (DDM).........................................................................668
    Configure Dynamic Data Masking (DDM) for a Database....................670
Conclusion.............................................................................................................671
Multiple Choice Questions..................................................................................672
Index...................................................................................................................................673

Chapter 1 
Managing Azure 
AD Identities and 
Application Access
In this chapter, you will learn how, as a Microsoft Azure security engineer, you can 
check whether Azure Active Directory (AD) is configured securely to serve as an 
identity store for your Azure-based cloud applications. In this chapter, there are 
some of the major topics that we will cover such as administering Azure AD users 
and groups, configuring authentication methods in Azure AD, and configuring 
application registrations in Azure AD. By the end of this chapter, you will be able to 
improve your company’s Azure AD security posture. Along with these major topics, 
we will also go through architecture and building block of Azure AD. Let’s start the 
journey to learn Azure AD application security with the configuring Azure AD for 
Microsoft Azure Workloads.
Azure AD is a cloud-based identity and access management tool provided by 
Microsoft. This helps you to provide authentication and authorization capabilities 
for your users. This can be used by IT administrators, application developers, Office 
365, Microsoft 365 subscribers, and many more. There are different kinds of licenses 
of Azure AD. They provide different features; you can buy the license based on 
your business requirement. The available licenses are Azure AD Free, Azure AD 
Premium P1, Azure AD Premium P2, and Pay-as-you-go feature license.

2      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Structure
In this chapter, we will learn the following topics:
	
•	
An overview of Azure AD 
	
•	
Creating new domain in Azure AD
	
•	
Adding a custom domain in Azure AD
	
•	
Adding a company brand to Azure AD
	
•	
Creating and adding an Azure subscription to your Azure AD
	
•	
Managing Azure AD users and groups
	
•	
Configuring authentication methods in Azure AD
	
•	
Setting up password writeback through Azure AD Connect
	
•	
Password less authentication options in Azure AD
	
•	
Creating the app registration in Azure AD
	
•	
Configuring and managing app registration permission scopes and consent
	
•	
Conclusion
	
•	
Multiple choice questions (MCQ)
Objectives
The objective of this chapter is to understand the architecture and building blocks 
of Azure AD, and different versions of Azure AD. You will also go through the 
process of deploying and managing Azure AD tenant. After Azure AD tenant 
management, you will study about creating, managing, and moving subscriptions 
across the tenants. You will study users and groups management in Azure AD and 
their authentication methods. You will study different methods to sync on-premises 
active directory with Azure AD. You will also study about application registration 
in Azure AD.
Azure AD overview
Azure AD is a new identity and access management service provided by Microsoft. 
Azure AD is a cloud-based identity and access management service. You can use Azure 
AD for authentication and authorization for multiple clouds and on-premises services.
You can use Azure AD with external and internal resources. External resources 
include Microsoft Office 365, the Azure portal, and many SaaS applications and 
internal resources include your cloud-based or native on-premises applications and 
services.

Managing Azure AD Identities and Application Access      3
Building blocks and objects of Azure AD
Before working on Azure AD, it is important that you know about the building 
blocks and components of Azure AD. While working on Azure AD, you will need 
to take care of Azure AD components and, you should also have some technical 
understanding of their internal relation:
	
•	
Account: In Azure AD, an account represents an identity, and this identity has 
some attributes associated with it. You cannot have an account in Azure AD 
without the identity attributes. The identity attributes may have a resource 
ID, username, application ID, location, address, phone number, and so on.
	
•	
Azure AD account: You can create an identity through Azure AD or Office 
365. These identities are stored in Azure AD. You can use these identities to 
access your cloud services, applications, and resources. This kind of account 
is also called a work or school account.
	
•	
Account administrator: An account administrator is a classic subscription 
administrator role. This is conceptually the billing owner of a subscription. 
The account administrator can access Azure Account Center and manage all 
subscriptions in an account.
	
•	
Azure AD global administrator: This administrator role is automatically 
assigned to whoever created the Azure AD tenant. Global administrators 
can do all the administrative functions for Azure AD and any services that 
federate to Azure AD such as Exchange Online, SharePoint Online, and 
Skype for Business Online. Note that this administrator role is called a global 
administrator in the Azure portal, but it is called a company administrator in 
the Microsoft Graph API and Azure AD PowerShell.
	
•	
Azure subscription: It is a logical collection of Azure cloud services. You 
need a subscription to deploy any component in Azure. You can have many 
subscriptions. The subscriptions are linked to a credit card for billing. The 
subscription can have different pricing models such as, pay-as-you-go, 
enterprise agreement, and so on.
	
•	
Azure tenant: An Azure tenant represents a single organization. This is 
the top of your Microsoft cloud service umbrella. A dedicated and trusted 
instance of Azure AD automatically gets created when your organization 
signs up for a Microsoft cloud service such as Microsoft Azure, Microsoft 
Intune, or Office 365.
	
•	
Azure AD directory: Each Azure tenant has a dedicated and trusted Azure 
AD directory. The Azure AD directory includes the tenant’s users, groups, 
and apps, and it is used to perform identity and access management functions 
for tenant resources.

4      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Custom domain: Every new Azure AD directory comes with an initial 
default domain name, domainname.onmicrosoft.com. In addition to that 
default domain name, you can also add your organization’s domain names. 
A custom domain name helps you to create usernames that are familiar to 
your users such as xyz@mybook.com, abc@mybook.com.
	
•	
Identity: A thing that can get authenticated. An identity can be a user with a 
username and password. Identities can include applications.
	
•	
Microsoft account: It is a personal account that provides access to Microsoft 
products and cloud services such as Outlook, OneDrive, Xbox Live, or Office 
365. Microsoft accounts are created and stored in the Microsoft consumer 
identity account system that is run by Microsoft.
	
•	
Multi-tenant: Azure tenants that access other services in a shared 
environment, across multiple organizations, are considered multi-tenant.
	
•	
Owner: This is a built in Role-Based Access Control (RBAC) role that helps 
you to manage all Azure resources and accesses. This is a resource-based 
RBAC role.
	
•	
Service administrator: This is a classic subscription administrator role. This 
enables you to manage all Azure resources, including access. This role has the 
equivalent access of a user who is assigned the owner role at the subscription 
scope.
	
•	
Single tenant: Azure tenants that access services in a dedicated environment 
are considered single tenant.
These were some of the building components of Azure AD. You will use them very 
frequently while working on Azure AD and studying coming chapters. 
Available version of Azure AD 
Microsoft Online business services such as Office 365 or Microsoft Azure, require 
Azure AD for sign-in and to help with identity protection. If you subscribe to any 
Microsoft Online business service, you will automatically get Azure AD with access 
to all the free features. To enhance your Azure AD features, you can also add paid 
capabilities by upgrading to Azure AD Premium P1 or Premium P2 licenses. Azure 
AD paid licenses are additional to the free directory:
	
•	
Azure Active Directory Free: This is the basic and default version of Azure 
AD. It provides the basic and standard level of features such as user and 
group management, on-premises directory synchronization, basic reports, 

Managing Azure AD Identities and Application Access      5
self-service password change for cloud users, and single sign-on across 
Azure, Office 365, and many popular SaaS apps.
	
•	
Azure Active Directory Premium P1:  This is the second level of Azure 
AD version. In addition to the free features, Azure AD P1 also allows your 
hybrid users’ access both on-premises and cloud resources. It also supports 
advanced administration such as dynamic groups, self-service group 
management, Microsoft Identity Manager (an on-premises identity and 
access management suite), and cloud write-back capabilities, which allow 
self-service password reset for your on-premises users.
	
•	
Azure Active Directory Premium P2: In addition to the free and P1 features, 
P2 also offers Azure Active Directory Identity Protection to help provide 
risk-based conditional access to your apps and critical company data 
and privileged identity management to help discover, restrict, and monitor 
administrators and their access to resources and to provide just-in-time 
access when needed.
	
•	
Pay as you go feature licenses: You can also get additional feature licenses 
such as Azure AD Business-to-Customer (B2C). B2C can help you provide 
identity and access management solutions for your customer-facing apps.
You can choose the Azure AD version based on your organization requirements and 
the features you need.
Azure AD architecture
Azure AD enables you to securely manage access to Microsoft cloud services and 
resources for your users. Azure AD is a full suite of identity management capabilities. 
In Azure AD, you can create and manage users and groups, and enable permissions 
to allow and deny access to enterprise resources. You can sync on-premise identities 
and their credentials. Azure AD is a geographically distributed Microsoft’s identity 
service provider. Azure AD provides extensive monitoring, automated rerouting, 
failover, and recovery capabilities.
In this section, we will cover the following elements:
	
•	
Azure AD service architecture design
	
•	
Scalability of Azure AD
	
•	
Continuous availability of Azure AD
	
•	
Datacenters arrangement for Azure AD
	
•	
Some key features workflow of Azure AD

6      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Azure AD service architecture design
In this section, we will learn about the architecture of Azure AD in brief. We will 
see how Azure stores customer identities. Azure divides different customer’s user 
identities in different partitions. These partitions have the data tier where the data 
is actually stored.
The data tier provides read-write capability. The following diagram shows how the 
components of a single-directory partition are delivered throughout geographically 
distributed datacenters:
Figure 1.1: Azure AD replication process
The components of the Azure AD architecture include a primary replica and 
secondary replicas:
 
• 
Primary replica: The  primary replica  receives all   writes for the partition it 
belongs to. Any write operation is immediately replicated to a secondary 
replica in a different datacenter before returning success to the caller, thus 
ensuring geo-redundant durability of writes.
 
• 
Secondary replicas: Secondary replicas are stored in different physical 
datacenters. These datacenters are located across different geographies like 
US, Europe, Asia. All directory reads are serviced from secondary replicas. There 
are many secondary replicas, as data is replicated asynchronously. Directory 
reads, such as authentication requests, are serviced from datacenters that are 
close to customers’ geography. The secondary replicas are responsible for 
read scalability.

Managing Azure AD Identities and Application Access      7
Scalability
Scalability is the ability of a service to expand to meet increasing performance 
demands. Azure achieves write scalability by partitioning the data and read 
scalability by replicating data from one partition to multiple secondary replicas 
distributed throughout the world.
Requests from directory applications are routed to the datacenter that they are 
physically closest to. Writes are transparently redirected to the primary replica to 
provide read-write consistency. Secondary replicas significantly extend the scale of 
partitions because the directories are typically serving reads most of the time.
Directory applications and users’ requests are routed to the nearest datacenters. 
This connection improves performance and therefore, scaling out is possible. Since 
a directory partition can have many secondary replicas, secondary replicas can be 
placed closer to the directory clients. Only the directory service components that are 
write-intensive target the active primary replica directly.
Continuous availability
Availability (or uptime) defines the ability of a system to perform uninterrupted. The 
key to Azure AD’s high availability is that the services can quickly shift traffic across 
multiple geographically distributed datacenters. Each datacenter is independent, 
which enables de-correlated failure modes. Through this high availability design, 
Azure AD requires no downtime for maintenance activities:
 
• 
Fault tolerance: Azure provides a highly fault tolerance system by assuring 
high availability of its hardware, network, and software during any failures. 
For each partition on the directory, a highly available master primary replica 
exists. Only writes to the partition are performed at this replica. This replica 
is being continuously and closely monitored, and writes can be immediately 
shifted to another replica (which becomes the new primary) if a failure is 
detected. During failover, there could be a loss of write availability typically 
of one-two minutes. Read availability is not affected during this time.
	
	
Read operations only go to secondary replicas. Since secondary replicas are 
idempotent, loss of any one replica in a partition is easily compensated by 
directing the reads to another replica, usually in the same datacenter.
 
• 
Data durability: A write is durably committed to at least two datacenters 
prior to it being acknowledged. This happens by first committing the write 
on the primary, and then immediately replicating the write to at least one 
other datacenter. This write action ensures that a potential catastrophic loss 
of the datacenter hosting the primary does not result in data loss.

8      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Datacenters
Azure AD’s replicas are stored in datacenters located across the world with the 
following characteristics:
 
• 
Authentication, graph, and other AD services reside behind the gateway 
service. The gateway manages load balancing of these services. It will fail 
over automatically if any unhealthy servers are detected using transactional 
health probes. Based on these health probes, the gateway dynamically routes 
traffic to healthy datacenters.
 
• 
For reads, the directory has secondary replicas and corresponding front-end 
services in an active-active configuration operating in multiple datacenters. 
In case of a failure of an entire datacenter, traffic will be automatically routed 
to a different datacenter. For writes, the directory will fail over the primary 
(master) replica across datacenters failover procedures. Data durability is 
achieved by replicating any commit to at least two datacenters.
Some key features workflow 
Following are some key features of Azure AD. Here you will understand how Azure 
AD maintains data consistency and high availability.
 
• 
Data consistency: The directory model is one of the eventual consistencies. 
One typical problem with distributed asynchronously replicating systems is 
that the data returned from a particular replica may not be up to date. Azure 
AD provides read-write consistency for applications targeting a secondary 
replica by routing its writes to the primary replica and synchronously pulling 
the writes back to the secondary replica.
	
	
Application writes using the Microsoft Graph API of Azure AD are abstracted 
from maintaining affinity to a directory replica for read-write consistency. 
The Microsoft Graph API service maintains a logical session, which has 
affinity to a secondary replica used for reads; affinity is captured in a replica 
token that the service caches using a distributed cache in the secondary 
replica datacenter. This token is then used for subsequent operations in the 
same logical session. To continue using the same logical session, subsequent 
requests must be routed to the same Azure AD datacenter. It is not possible to 
continue a logical session if the directory client requests are being routed to 
multiple Azure AD datacenters; if this happens, then the client has multiple 
logical sessions which have independent read-write consistencies.

Managing Azure AD Identities and Application Access      9
 
• 
Backup protection: The directory implements soft deletes, instead of hard 
deletes, for users and tenants for easy recovery in case of accidental deletes 
by a customer. If your tenant administrator accidentally deletes users, they 
can easily undo and restore the deleted users. Azure AD implements daily 
backups of all data; therefore, it can authoritatively restore data in case of 
any logical deletions or corruptions.
 
• 
Metrics and monitors: Running a high-availability service requires very 
efficient monitoring capabilities. Azure AD continually analyzes and reports 
key service health metrics and success criteria for each of its services. If 
any Azure AD service is not working as expected, an action is immediately 
taken to restore the functionality as quickly as possible. The most important 
metric Azure AD tracks is how quickly live site issues can be detected and 
mitigated for customers. Microsoft invests heavily in monitoring and alerts 
to minimize time to detect (TTD Target: <5 minutes) and operational readiness 
to minimize time to mitigate (TTM Target: <30 minutes).
In this section you studied about Azure AD architecture, some basic functionalities, 
and features.
Creating a new tenant in Azure AD
You can create a new tenant for your organization in Azure. Your new tenant 
represents your organization and helps you to manage a specific instance of Microsoft 
cloud services for your internal and external users. You can also create different 
directories for different environments. You may not want your development team 
to use the production directory for their testing purposes. For this, you can create a 
different AD domain for the development team with some test and dummy users. 
Let’s follow the given steps to create a new tenant:
	
1.	 Log in to the Azure portal and click on + Create new resource.
	
2.	 Search for Azure AD and click on Manage tenants and create.
	
3.	 It will open a new window.  From there you can create Azure Active Directory 
tenant or Azure Active Directory (B2C) tenant. 
	
4.	 Choose Azure Active Directory option and move to Configuration tab. Fill in 
the details of the new tenant:

10      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 1.2: Create a new Azure AD tenant
As shown in the preceding screenshot, fill the name of your organization and domain. 
You can choose the country or region where you want to create your directory. You 
cannot change the directory location after deployment. This location will keep the 
original directory and primary replica of the directory.
To create a new tenant, you should have the global administrator or owner access on 
Azure. Once the new tenant is created, the person who creates the tenant becomes 
global administrator of the new tenant.
Adding a custom domain to Azure AD
Every new Azure AD tenant comes with an initial domain name, <domainname>.
onmicrosoft.com. You cannot change or delete the initial domain name, but you 
can add your organization’s names. Adding custom domain names helps you to 
create usernames that are familiar to your users, such as mybookdemo.co.in. In the 
previous section, we saw how to create a domain and create a default initial domain. 
In this demo, we will see how to add your own custom domain. To add a custom 
domain, it’s important that you should own the domain name and the domain 

Managing Azure AD Identities and Application Access      11
should be registered with the domain registrar. Following are the steps to add a 
custom domain to Azure AD.
	
1.	 To add your custom domain, log in to the Azure portal and go to your Azure 
AD.
	
2.	 Go to Custom domain names under the Manage section:
Figure 1.3: Azure AD custom domain overview page
	
	
As shown in the preceding screenshot, you can see the default domain of 
your directory on the custom domain names page.
 
3.	 Click on + Add custom domain to enter your domain name:
Figure 1.4: Azure AD custom domain name
	
	
Provide a custom domain name which you own and have access to in order 
to update the TXT or MX record with the domain registrar. Click on Create 
to add the domain name.
	
4.	 On the custom domain name dashboard, an unverified domain name will be 
added. Click on your custom domain name here to see the DNS information. 
Save this information. You will need it later to create a TXT record to configure 
DNS:

12      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 1.5: Azure AD custom domain verification status
	
	
The preceding screenshot shows our Unverified custom domain. To verify 
this domain, you will need to update TXT or MX records to your domain 
registrar.
	
5.	 Once you click on the custom domain, you will get the details of TXT or MX 
records:
Figure 1.6: TXT and MX records for your custom domain

Managing Azure AD Identities and Application Access      13
	
	
As shown in the preceding screenshot, you can copy TXT or MX records to 
update the DNS registrar.
	
6.	 After you add your custom domain name to Azure AD, you must return 
to your domain registrar and add the Azure AD DNS information from 
your copied TXT file. Creating this TXT record for your domain verifies 
the ownership of your domain name. Go back to your domain registrar 
and create a new TXT record for your domain based on your copied DNS 
information. Set the time-to-live (TTL) to 3600 seconds (60 minutes), and 
then save the record.
	
7.	 Once you update details with the domain registrar, come back to the custom 
domain names under Azure AD and click on your unverified custom domain. 
Now, click on Verify as shown in Figure 1.6.
Once the domain is verified you can use it for user creation, user sync from on-
premises AD, and federation. You can use this domain as your brand.
Adding a company brand to Azure AD
When you create Azure AD and the tenant, it comes with default logos and 
background. You would like to put your organization brand logo, tag lines, and 
background settings in Azure AD. This will provide a consistent look-and-feel on 
your Azure AD sign-in pages. Your sign-in pages appear when users sign in to 
your organization’s apps, such as Office 365, which uses Azure AD as your identity 
provider. For adding custom branding, you need to use Azure AD Premium 1, 
Premium 2, or Basic editions, or to have an Office 365 license.
Customizing your Azure AD sign-in page
You can customize your Azure AD sign-in page, which appears when users sign 
in to your organization’s tenant-specific apps. Your custom branding will not 
immediately appear when your users go to sites such as www.office.com. Instead, the 
user must sign-in before your customized branding appears.
The all-available branding elements are optional. You can choose among the 
elements. For example, if you specify a banner logo with no background image, 
the sign-in page will show your logo with a default background image from the 
destination site.
Setting up customized branding
Let’s follow the given steps to set up your company brand with your company 
background color, logo, and image:

14      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
1.	 Log in to the Azure portal  using a global administrator account for the 
directory.
	
2.	 Select  Azure AD, and then select  Company branding, and then 
select Configure under the Manage section:
Figure 1.7: Company branding overview page in Azure AD
	
	
The preceding screenshot shows the default configuration. By default, it 
does not have any custom background image, logo, or background color.
	
3.	 On the Configure company branding page, you will see multiple options 
for your branding. You can provide any or all the following information. All 
the custom images you add on this page have an image size (pixels), and 
potentially file size (KB), restrictions. Because of these restrictions, you’ll 
most-likely need to use a photo editor to create the right-sized images:
Figure 1.8: Upload the background image and logo for company branding

Managing Azure AD Identities and Application Access      15
	
	
As shown in the preceding screenshot, upload the files with the desired 
size, pixels, and format. As shown in preceding screenshot, there are various 
fields to fill the information. Following is the description of these fields.
 
 
•	 Language: The language is automatically set as your default and can’t 
be changed.
 
 
•	 Sign-in page background image: Select a .png or .jpg image file 
to appear as the background for your sign-in page. The image will be 
anchored to the center of the browser and will scale to the size of the 
viewable space. You cannot select an image larger than 1920x1080 pixels 
in size or one that has a file size more than 300 KB.
 
 
•	 Banner logo: Select a .png or .jpg version of your logo to appear on the 
sign-in page after the user enters a username and on the My Apps portal 
page. The image can’t be taller than 60 pixels or wider than 280 pixels.
 
 
•	 Username hint: Type the hint text that appears to users if they forget 
their username. This text must be Unicode, without links or code, and 
cannot exceed 64 characters.
 
 
•	 Sign-in page text and formatting:  Type the text that appears at 
the bottom of the sign-in page. You can use this text to communicate 
additional information, such as the phone number to your helpdesk 
or a legal statement. This text must be Unicode and not exceed 1024 
characters.
	
	
	
To begin a new paragraph, use the enter key twice. You can also change 
text formatting to include bold, italics, an underline, or clickable link. 
Use the following syntax to add formatting to the text:
 
 
 
•	
Hyperlink: [text](link)
 
 
 
•	
Bold: **text** or __text__
 
 
 
•	
Italics: *text* or _text_
	
	
	
•	
Underline: ++text++
 
 
•	 Sign-in page background color: Specify the hexadecimal color (for 
example, white is #FFFFFF) that will appear in place of your background 
image in low-bandwidth connection situations.
 
 
•	 Square logo image: Select a .png (preferred) or .jpg image of your 
organization’s logo to appear to users during the setup process for new 
Windows 10 Enterprise devices. This image is only used for Windows 
authentication and appears only on tenants that are using  Windows 
autopilot for deployment or for password entry pages in other Windows 
10 experiences.

16      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
 
•	 Square logo image, dark theme: This is the same as the preceding 
square logo image. This logo image takes the place of the square logo 
image when used with a dark background such as with Windows 10, 
Azure AD joins screens during the out-of-box experience (OOBE). If 
your logo looks good on white, dark blue, and black backgrounds, you 
don’t need to add this image.
 
 
•	 Show option to remain signed in: You can choose this option to 
allow your users to remain signed in to Azure AD until explicitly 
signing out. If you choose No, this option is hidden, and users must 
sign in each time the browser is closed and reopened.
	
4.	 After you have finished adding your branding, select Save. Once you have 
finished the setup, the custom branding overview page will look as shown 
in the following screenshot:
Figure 1.9: Updated company branding overview page
	
	
The updated overview page shows the check boxes for custom setups.
In this section, you learned how to add your company logo and background for Azure 
AD sign in page. You can edit any setting by clicking on the current configuration.
You cannot change your original configuration’s language from your 
default language. However, if you need a configuration in a different 
language, you can create a new configuration. For this, click on + New 
language. It will open the same window as shown in Figure 1.8. Here, the 
language option was the default one but now here you get a drop down to 
choose the language. The rest of the options are the same as we discussed 
in the previous section.
Creating and adding an Azure subscription 
to your Azure AD
An Azure subscription is a logical entity that provides entitlement to deploy and 
consume Azure resources. An Azure subscription has a trust relationship with Azure 

Managing Azure AD Identities and Application Access      17
AD. A subscription trusts Azure AD to authenticate users, services, and devices. 
Multiple subscriptions can trust the same Azure AD directory. Each subscription 
can only trust a single directory. Azure subscription has a pricing model associated 
to it. Based on the pricing model, you can consume Azure services and resources. 
To consume, create, or use Azure services, you need to attach some payment mode 
with your subscription.
If your subscription expires, you lose access to all the other resources associated 
with the subscription. However, the Azure AD directory remains in Azure. You can 
associate and manage the directory using a different Azure subscription.
If you move the subscription to a different directory, users that have RBAC 
roles assigned will lose their access. Also, if you have any policy assigned to the 
subscription, it is also removed from the subscription.
Creating a new subscription and associating to 
a directory
In the previous section, we saw how to create a new tenant, update your custom 
domain, and customize the domain with your company logo. Now in this section, 
we will see how to create a new subscription and associate it with Azure AD. To 
create a new subscription, perform the following steps:
	
1.	 Log in to the Azure portal with the global administrator or owner permission.
	
2.	 Select the appropriate tenant under which you want to create the subscription.
	
3.	 Search Subscriptions in Azure Portal.
Figure 1.10: Select a tenant and create new subscription
	
	
Click on + Add to create a new subscription.
	
4.	 This option will open a new tab or window in your browser to select a 
subscription type:

18      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 1.11: Select a subscription offering type
	
	
The preceding screenshot shows the different types of subscription offers. 
Based on your requirement, you can select the subscription type. Each 
subscription has its own pricing model and availability of Azure services.
	
5.	 Based on the subscription type, on the next page you will see different 
agreements and payment mode options. Fill in the payment mode details, 
accept the agreements, and click on Activate to activate the subscription and 
service plan.
In this section you studied about creation and association of Azure Subscription 
with you Azure AD tenant. These are quite simple steps to create and associate an 
Azure subscription.
Transferring a subscription between Azure AD 
tenants
Once you create a subscription, it automatically goes under the directory which you 
selected. But you can move an existing subscription to another tenant also. For this, 
let’s follow the given steps:
	
1.	 Log in to the Azure portal with the subscription owner account and select 
the subscription you want to use from the  Subscription page. Click 
on Change directory:

Managing Azure AD Identities and Application Access      19
Figure 1.12: Move the subscription to a different tenant
	
2.	 Select the target directory from the drop down, review any warnings that 
appear, and then select Change:
Figure 1.13: Select the target tenant to move the subscription
	
	
After the directory is changed for the subscription, you will get a success 
message.
	
3.	 Select  Switch directories  on the subscription page to go to your new 
directory and check the subscription transfer. This process may take few 
hours to complete.
When you change the subscription directory, it does not affect the subscription 
billing ownership because it is a service-level operation.

20      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Managing Azure AD users and groups
Managing users and groups has always been an important and critical thing for any 
administrator. Proper user management helps you to manage respective permissions, 
licensing, roles, memberships, policies, and so on. In this section, you will learn how 
to manage users and groups in your Azure AD. To manage users and groups, you 
must either have a user administrator or global administrator access.
Let’s understand the types of users and groups and then deep dive into their 
properties and operations which we can do with them.
Types of user accounts
Azure AD is a multi-tenant directory. We can have different types of users in it. In 
this section, we will see the types of users that can be created or invited into Azure 
AD:
 
•	
Native users: Native users are the users who have been created under their 
own Azure AD tenant or been synced from on-premise AD. For example, 
you have your active directory domain registered with mybookdemo.com, so 
any user with the UPN username@mybookdemo.com would be called your 
native user.
 
•	
Guest users: External users are the users who are not part of your Azure 
AD tenant but have been invited by you. For example, you have your active 
directory domain registered with mybookdemo.com, so any user with any 
other domain like username@xyz.com will be a guest user for you. When you 
invite any external user, an invitation will be sent to his email ID which is 
provided by you as a recipient address. This message describes the invitation 
and has an invitation link to join your tenant.
 
•	
Consumer account user: Azure AD B2C is a business-to-customer identity 
provider. This account is been created under Azure AD B2C. With Azure AD 
B2C, a user with a third-party identity provider can access Azure applications. 
The user can access only an Azure AD B2C registered application but cannot 
access other Azure resources such as the Azure portal. This gets created when 
the user for the first time logs in to the AD B2C application. But you can also 
create it manually in Azure AD B2C. The third-party identity providers can 
be Google, Microsoft, Facebook, and so on.

Managing Azure AD Identities and Application Access      21
You can create appropriate users as per your business requirement and can manage 
them from the Azure AD console.
Types of groups
In the preceding section, we saw the types of users supported in Azure AD. We can 
have different types of groups also in Azure AD. These groups are defined based on 
their uses:
 
•	
Security: You can create this kind of group to manage shared Azure resources 
access for multiple users. You can assign specific security polices, roles, and 
so on to specific groups. This makes administrators task easier to manage 
permissions for multiple users at one place, instead of managing permissions 
separately for each user.
 
•	
Office 365: These groups work with O365 services and tools. So, if you want 
to collaborate with your teammates on MS projects, MS Words, PPT, this 
group will help you to do so.
Mostly all organizations have these both type of groups. In the upcoming sections, 
we will see how to manage these groups.
User management
Let’s learn how you can create and delete single and bulk users in Azure AD. You 
will also learn about license assigning to users.
User creation
Let’s understand the process of user creation. You must have a user administrator 
or global administrator level of access to create users in Azure AD. We will see the 
process to create native users, guest users, and consumers in Azure AD.
 
•	
New user (native user): You already know that what are native users in 
Azure AD. Let’s follow the given steps to create a new native user:
	
	
1.	 Log in to the Azure portal and go to Azure AD.
	
	
2.	 Select Users and click on + New user:

22      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 1.14: Create a new native user in Azure AD
	
3.	 Fill in the details related to the user:
Figure 1.15: Property fields to be filled to create a new native user

Managing Azure AD Identities and Application Access      23
	
	
Following is description of the fields shown in preceding screenshot.
	
	
•	
User name: This should be in the format of username@domain.com. The 
domain section is already filled so you just need to enter the username.
	
	
•	
Name: Full name of the user.
	
	
•	
First name: First name of the user.
	
	
•	
Last name: Last name of the user.
	
	
•	
Groups: You can select the group name (if already created) to put the 
user under that.
	
	
•	
Roles: You can assign a specific role to a user such as User or Limited 
Administrator access from the list of directory rules.
	
	
•	
Block sign in: You can control whether a user will be able to sign in with 
his/her account or not.
	
	
•	
Usage location: You can define the location from where the user will 
generally log in. This can help you to track the user’s login locations 
and can help to set up conditional access and MFA based on the login 
location. I will take you through the conditional access in the upcoming 
sections. If you don’t specify this, then it inherits the location of Azure 
AD of the organization. 
	
	
•	
Job title: Put the designation or so to get some details about the user; this 
is optional.
	
	
•	
Department: Put the department of the user, like IT, HR, Management, 
Finance etc. 
	
4.	 Azure will autogenerate a complex password, copy this password, and share 
it with the user.
	
5.	 Click on Create.
In this section, we learned how to create a new native user in your Azure AD domain.
	
•	
New guest user: In the previous section, we learned about a guest user. Let’s 
perform the following steps, and see how you can invite a guest user in your 
Azure AD:
	
	
1.	 Log in to the Azure portal with proper administrative access.
	
	
2.	 Go to Azure AD and select Users and click on + New guest user:

24      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 1.16: Invite new guest user in Azure AD
	
	
3.	 Now. fill in the basic details:
Figure 1.17: Property fields to be filled to invite a guest user
 
 
 
•	 Name: Full name of the user.
 
 
 
•	 Email address: Email address where the invite will be sent.
 
 
 
•	 Personal message: Type a greetings message that will be sent along 
with the invite.

Managing Azure AD Identities and Application Access      25
	
	
	
In this section, we learned how to invite a guest user in your Azure AD 
domain.
 
•	
Add consumer user: Generally, this gets created when a user log in to the 
Azure AD B2C secured application for the first time. But you can create this 
kind of user manually from the Azure portal also. Let’s perform the following 
steps:
	
	
1.	 Log in to the Azure portal.
	
	
2.	 Select the Directory + subscription filter in the top menu, and then select 
the directory that contains your Azure AD B2C tenant.
	
	
3.	 Search for Azure AD B2C in the search bar.
	
	
4.	 Go to Users under the Manage section.
	
	
5.	 Click on + New User and choose Create Azure AD B2C user:
Figure 1.18: Create Azure AD B2C user
	
	
	
•	 Sign in method: Select an option from the email or username for 
signing in.
	
	
	
•	 Name: Name of the user.
	
	
In this section, we learned how to create a consumer user.
There is an option to create bulk new users and invite new users. You 
can fill the details in CSV and upload it. The users will be created and 
invited.

26      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Users deletion
It is as simple as user creation. To delete any user, just follow the given steps:
	
1.	 Log in to the Azure portal and go to Azure AD and users.
	
2.	 You can search for the user by the name or email, and select the user.
	
3.	 Click on Delete user.
In this section, we learned how quickly and easily we can delete users from Azure 
AD.
You can delete users in bulk as well. You need to upload a CSV with 
users’ information to do ‘Bulk Delete’. You can see the deleted users under 
‘Deleted users’ section. By default, they will stay there for 30 days from 
the day of deletion. You can also restore them or delete them permanently 
before 30 days. Similar to Bulk Delete, you can ‘Bulk Restore’ also.
Assign licenses to users and groups
There are services which will require users to have a proper active license to access 
them. I will tell you how you can assign a license to users or groups. Follow the given 
steps to see what licenses are available with you, how many of them are already 
assigned, and how many are going to expire soon:
	
1.	 Log in to the Azure portal.
	
2.	 Go to Azure AD and select Licenses under the Manage section.
	
3.	 Select All products to see the details of your available licenses:
 
Figure 1.19: Available licenses in Azure AD to assign users
	
4.	 Select the license you would like to assign and click on “+ Assign”.

Managing Azure AD Identities and Application Access      27
	
5.	 A new window opens, and you see few tabs: Users and groups, 
Assignment options, and Review + assign.
	
6.	 Click on “+ Add users and groups” under Users and groups tab. It will 
open a new window. Search the users’ name and groups’ name to assign the 
licenses to users and groups, click on Select.
	
7.	 Now move to next tab, Assignment options. The specified license may have 
multiple features associated with it, you can select the required features that 
you want to assign to the users. So, select the features you would like to 
assign to the users from Assignment options tab.
	
8.	 Move to next tab and click on Assign.
Licenses are important things in the cloud environment. They control the access 
for users over various applications and services. In this section, we learned how to 
assign an appropriate license to users.
Remove licenses from users and groups
You may need to remove a license from users and groups based on the business need 
or administration purpose. Let’s see how you can achieve that:
	
1.	 In Licenses, go to All Products and click on the license which you want to 
remove for a user. Licensed users or Licensed groups based on your 
target.
	
2.	 Select the user’s name or group name from which you want to revoke the 
license and click on Remove license.
In this section, we learned how to remove licenses from users.
If a user is inheriting the license from groups level, then you cannot 
remove his/her license directly. You need to get that user out from the 
group to remove his/her inherited license.
Group management in Azure AD
In the previous section, you learned about user management. It is easier to administer 
things collectively. Groups provide the ability to manage users collectively. You 
can make a group of users with similar properties. By grouping the users, you can 
effectively apply and manage policies, permissions, licenses for large number of 
users. This will help to save administration time and reduce the manual errors. Let’s 
follow these steps to create groups and to add users to this.

28      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Assigned group creation in Azure AD
In this section, we will study about assigned groups in Azure AD. This is the default 
group type in Azure AD:
	
1.	 Log in to the Azure portal and go to Azure AD and click on Groups.
	
2.	 Click on + New Group. A new window will open. Fill in the required 
information and click on Create. Select the group type correctly as per 
requirement. We have already understood the use case of security and Office 
365 groups:
Figure 1.20: Create a new security group in Azure AD
	
3.	 You can also select if administrators can assign Azure AD roles to this group 
or not.
	
4.	 You can also select Owners and Members for this group while creating the 
group.
	
These were the simple steps to create Azure AD assigned groups.
Membership type: There are Three kinds of memberships: assigned, 
dynamic users and dynamic device. Assigned type groups allow you to 
add specific users to be members of this. Dynamic users type groups add 

Managing Azure AD Identities and Application Access      29
or remove users based on the attribute of users. Dynamic device type 
groups add or remove users based on the attribute of devices.
Dynamic group creation in Azure AD
Sometimes, it becomes a very exhaustive task to add and remove users from Office 
365 groups or security groups frequently. Azure AD provides the capability to add 
and remove users automatically to groups based on their account attributes, so you 
don’t need to do these tasks manually. Since adding or removing of users depends 
on their account’s attributes, so whenever there is any change happening in the 
users’ properties, Azure AD evaluates all dynamic group rules in your tenant to see 
if the user needs to add or remove from any group.
You need minimum Azure AD Premium P1 license to create a dynamic group:
	
1.	 Log in to the Azure portal and go to Azure AD.
	
2.	 Click on Groups and click on + New group.
	
3.	 Fill in the required details as you filled for an assigned group. This time 
select Dynamic User under Membership type.
	
4.	 Now click on “Add dynamic query”. It will open a new window to create 
Dynamic Membership rules. Here you can choose the condition or user 
profile attributes based on which you want to add users to this dynamic 
group.
Save the configuration of Dynamic Membership rules and click on Create.
We learned how we can create dynamic groups in Azure AD.
Set groups expiration policy
When users can create their own new groups, it becomes important to delete 
unused groups to reduce unnecessary manual maintenance tasks. You can set up the 
expiration policy only for Office 365 groups.
The following are the examples of expiration policies:
 
•	
A group which is not renewed is deleted.
 
•	
Group owners are notified to renew expiring groups.
 
•	
Groups with the user’s activity are automatically renewed.
 
•	
A group owner or Azure AD administrator can restore deleted groups within 
30 days.
Go to Groups > Expiration:

30      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
Figure 1.21: Set expiration for dynamic groups
As shown in the preceding screenshot, choose the lifetime of the dynamic group, 
email contacts for groups with no owners, and select all groups that are included 
under this policy.
Set policy for groups naming convention
You can set up the naming convention policy for the user created Office 365 groups 
to maintain organizational standards and also helps in other administrative tasks.
Go to Groups > Naming policy:
 
•	 Blocked words: Here, you can define all words that cannot be used in 
the group name. You can upload these words through the CSV file and can 
download CSV back to see what all the words are being blocked.
 
•	 Group naming policy: Here, you can put the prefix or suffix for groups 
name.
Configuring authentication methods in 
Azure AD
Now, with expansion of technology, organizations are moving towards hybrid 
environment setup. They are expanding their on-premises infrastructure to cloud. 
Now, users need access to both on-premises and cloud applications. Azure’s hybrid 
identity solutions help corporates to sync on-prem and cloud users. The solutions 
create the common user identity for authentication and authorization to all resources, 

Managing Azure AD Identities and Application Access      31
regardless of the location is called hybrid identity.
Types of authentication methods
You can choose any one among the three available authentication methods to achieve 
hybrid identity, depending on your business requirement:
 
•	
Pass-through Authentication (PTA)
 
•	
Password Hash Authentication (PHA)
 
•	
Active Directory Federation (AD FS)
Pass-through Authentication (PTA)
PTA allows your users to log in to both on-premises and cloud-based applications 
using the same passwords. When users sign in using Azure AD, this feature validates 
users’ passwords directly against your on-premises AD. This service uses an agent 
that runs on one or more on-premises servers, which ensure that authentication, 
happens through on-premises AD and not from cloud AD. This way of authentication 
is more useful when organizations wanting to enforce their on-premises AD security 
and password policies.
Password Hash Authentication (PHA)
In the AD domain service, users’ passwords are stored in the form of a hash value 
representation of the actual user password. AD uses a hashing algorithm to get the 
hash value of the user’s password. Azure AD Connect extracts the password hash 
from the on-premises AD and applies extra security layer before it is synchronized 
to the Azure AD authentication service. The password hash synchronization 
process runs every two-minute. You cannot modify the frequency of this process. 
When you change user’s password in on-premises AD, the updated password is 
automatically synchronized to Azure AD. When you synchronize a password, it 
overwrites the existing cloud password. The newly synchronized password does 
not impact the user who is currently signed in with old password. The cloud services 
session will not be immediately affected by this synchronization. However, when 
the cloud services require you to reauthenticate, then you will need to provide the 
new password. 
Active Directory Federation (AD FS)
Federation is a collaboration of trusted domains. You can federate your Azure 
environment with on-premise AD, and this federation will allow users to get 

32      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
authenticated. In this process, also the authentication happens through on-premises 
AD.
Choose the authentication method
Let’s take a look at the following table to understand the various business 
requirements and choose the respective authentication method. X indicates the 
availability of features:
Business requirement 
PHA
PTA
ADFS
Sync new user, contact, and group accounts created in 
my on-premises AD to the cloud automatically.
X
X
X
Set up my tenant for Office 365 hybrid scenarios.
X
X
X
Enable my users to sign in and access cloud services using 
their on-premises password.
X
X
X
Implement single sign-on using corporate credentials.
X
X
X
Ensure no password hashes are stored in the cloud.
X
X
Enable cloud-based MFA solutions.
X
X
X
Enable on-premises MFA solutions.
X
Support smartcard authentication for my users.
X
Display password expiry notifications in the Office portal 
and on the Windows 10 desktop.
X
Table 1.1: Compare different authentication methods of Azure MFA
The following decision tree will help you to choose the right authentication method 
for your hybrid identity management.

Managing Azure AD Identities and Application Access      33
Figure 1.22: Decision tree to choose the correct authentication method
Prerequisites for Azure AD Connect
Let’s discuss about all the resources you may need to set up Azure AD Connect. 
You need a specific environment and components to be set up for each type of 
authentication. This section will take you through the requirements for each 
component. I have divided components in two categories: Cloud (Azure) and on-
premises:
 
•	
Azure AD: The following are the resources you need in Azure AD:
 
 
•	
You need an Azure AD tenant.
 
 
•	
A custom domain to be verified.
 
 
•	
A global administrator account.
 
•	
On-premises AD: The following are the resources you need in on-premises 
AD:
 
 
•	
The AD schema version and forest functional level must be Windows 
Server 2003 or later.
 
 
•	
The domain controllers must be on Windows Server 2008 R2 or later if 
you want to use the password writeback feature.
 
 
•	
Azure AD Connect does not support the read-only domain controller 
(RODC).
 
 
•	
You can run IdFix to identify errors such as duplicates and formatting 

34      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
problems in your on-premises active directory before you synchronize to 
Azure AD.
 
•	
Azure AD Connect server: Azure AD Connect server is the key element for 
AD sync. The following are the configurations and resources you need to set 
up Azure AD Connect server:
 
 
•	
Azure AD Connect can only be installed on a domain joined Windows 
Server 2012 standard or better but Windows Server Essentials 2019 is 
supported.
 
 
•	
It is not recommended to install Azure AD Connect on a domain 
controller due to security practices.
 
 
•	
If your global administrators have MFA enabled, then the URL https://
secure.aadcdn.microsoftonline-p.com must be in the trusted sites list.
 
 
•	
Azure AD Connect requires a SQL Server database to store identity data. 
By default, a SQL Server 2012 Express LocalDB is installed. 
 
 
•	
Azure AD Connect supports all versions of Microsoft SQL Server from 
2008 R2 (with latest service pack) to SQL Server 2019. Microsoft Azure 
SQL Database is not supported as a database.
 
 
•	
You will need one domain administrator account.
 
 
•	
The Azure AD Connect server needs DNS resolution for both intranet 
and Internet. The DNS server must be able to resolve names both to your 
on-premises AD and the Azure AD endpoints.
 
 
•	
Azure AD Connect depends on Microsoft PowerShell and .NET 
Framework 4.5.1. You need this version, or a later version installed on 
your server.
 
 
•	
The minimum configuration for AD Connect server is 2 Core CPU, 4 GB 
RAM, and 70 GB disk space.
 
•	
SSL certificate: The following are requirements to set up SSL certification:
 
 
•	
It is recommended to use the same SSL certificate across all nodes of your 
AD FS farm and all web application proxy servers.
 
 
•	
The certificate must be an X509 certificate.
 
 
•	
For the production environment, you should get a certificate from public 
CA.
 
 
•	
Wild-card certificates are supported.
In this section, we studied about the prerequisites of various components to set up 
Azure AD Connect.

Managing Azure AD Identities and Application Access      35
Installing Azure AD Connect with Password 
Hash Synchronization
Let’s understand the process of Azure AD Connect configuration with Password 
Hash Synchronization authentication. Hope you have gone through the preceding 
prerequisites before setting up this. Follow the given steps to set up Azure AD 
Connect:
	
1.	 Download Azure AD Connect software and install it on the domain joined 
Windows 2012 R2 or the preceding OS version server, with minimum 
configuration of 2 Core CPU, 4 GB RAM, and 70 GB disk space.
	
	
On the welcome screen of the AD Connect tool, accept the license agreement 
and choose Custom settings. You can leave these boxes unchecked; Azure 
AD Connect installs all the required things automatically:
Figure 1.23: Select Azure AD connect installation type and required components
	
2.	 Now, select the required authentication method based on your business 
requirement. In the previous sections, we understood when to choose 
what. In this section, we will go through password hash synchronization, 
so select Password Hash Synchronization as shown in the following 
screenshot:

36      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 1.24: Select password hash sync authentication method in Azure AD Connect
	
3.	 On the next screen, the Connect to Azure AD screen, enter the username 
and password of the global administrator for Azure AD. Click on Next:
 
Figure 1.25: Connect Azure AD connect with Azure AD

Managing Azure AD Identities and Application Access      37
	
4.	 On the Connect your directories screen, select your active directory forest 
name and click on Add Directory:
Figure 1.26: Connect Azure AD Connect with on-premises AD
	
	
A new window pops up to select the username for the sync process. You can 
create a new user or can use an existing user. The latest version of Azure AD 
Connect does not support the domain admin or enterprise admin accounts 
as the AD DS Connector account:
Figure 1.27: Create Azure AD Connect sync user account
	
	
Click on OK and then click on Next.

38      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
5.	 In the next step, you will see the list of domains verified in Azure AD:
Figure 1.28: Select verified Azure AD domain
	
6.	 You have the liberty to select what domain or OU you want to sync from your 
active directory forest. You can either select Sync all domains and OUs 
or Sync selected domains and OUs. By default, the Sync all domains 
and OUs option is selected:
Figure 1.29: Select on-premises domain and OU to be synced into Azure AD
	
7.	 A user might be represented only once in the whole active directory forest 
but there may be chances that a user has multiple representation across the 

Managing Azure AD Identities and Application Access      39
domains in your forest. You would not like to represent the same user multiple 
times while syncing. You can choose what in such a case. If the user has only 
one representation, then it is easy to take a decision and select the Users 
are represented only once across all directories option. If the user has 
multiple representations, then you need to choose an attribute, based on that 
user’s multiple representation will be joined and synced to Azure AD:
Figure 1.30: Select a method to identify on-premises users uniquely
	
8.	 Now, you can dive even deeper and select which groups, users, and devices 
need to sync. Either you can select the Synchronize all users and devices 
option or Synchronize selected as shown in the following screenshot:
Figure 1.31: Select users and devices to be synced into Azure AD

40      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
9.	 You can choose other features also to be installed with this process. The 
Password writeback feature allows password changes that originate in 
Azure AD is written back to your on-premises directory:
Figure 1.32: Select any other feature to be installed with password hash synchronization
	
	
Click on Next.
	
10.	 On the next page, you will see a  summary of all your configurations. Click 
on Configure and Verify.
In this section, we studied how to configure Azure AD Connect with the password 
hash synchronization method. You can now use these steps to configure Azure AD 
Connect in your environment.
Installing Azure AD Connect with pass-through 
authentication
It has similar steps as in the previous section (password hash synchronization); the 
only change here is that you need to choose Pass-through authentication in the 
authentication type. On successful completion, a PTA agent is installed on the same 
server as Azure AD Connect and the PTA feature is enabled on your tenant. Let’s go 
through the steps:
	
1.	 Download Azure AD Connect software and install it on the domain joined 
Windows 2012 R2 or above OS version server, with minimum configuration 
of 2 Core CPU, 4 GB RAM, and 70 GB disk space.
	
2.	 On the welcome screen of AD Connect tool, accept the license agreement and 
choose Customize settings. You will see next this on the next screen.
	
	
You can leave these boxes unchecked; Azure AD Connect installs all the 

Managing Azure AD Identities and Application Access      41
required things automatically:
Figure 1.33: Select Azure AD Connect installation type and required components
	
3.	 Now, select the required authentication method based on your business 
requirement. In the previous sections, we understood when to choose what. 
In this section, we will go through pass-through authentication, so select 
Pass-through authentication as shown in the following screenshot:
Figure 1.34: Select the pass-through authentication method in Azure AD Connect
	
4.	 On the next screen, the Connect to Azure AD screen, enter the username 
and password of the global administrator for Azure AD. Click on Next:

42      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
Figure 1.35: Connect Azure AD Connect with Azure AD
	
5.	 On the Connect your directories screen, select your active directory forest 
name and click on Add Directory:
Figure 1.36: Connect Azure AD Connect with On-premises AD
	
	
A new window pops up to select the username for the synchronization 
process. You can create a new user, or you can use an existing user. The 
latest version of Azure AD Connect does not support the domain admin or 
enterprise admin accounts as the AD DS Connector account:

Managing Azure AD Identities and Application Access      43
Figure 1.37: Create Azure AD Connect sync user account
	
	
Click on OK and then click on Next.
	
6.	 In the next step, you will see a list of domains verified in Azure AD:
Figure 1.38: Select the verified Azure AD domain
	
7.	 You have the liberty to select the domain or OU you want to sync from your 
forest. You can either select Sync all domains and OUs or Sync selected 
domains and OUs. By default, the Sync all domains and OUs option is 
selected:

44      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 1.39: Select on-premises domain and OU to be synced into Azure AD
	
8.	 A user might be represented only once in the whole forest but there may 
be chances that a user has multiple representations across the domains in 
your forest. You would not like to represent the same user multiple times 
while syncing. You can choose what in such a case. If a user has only one 
representation, then it is easy to take the decision and select the Users are 
represented only once across all directories option. If the user has 
multiple representations, then you need to choose an attribute, and based on 
that the user’s multiple representation will be joined and synced to Azure AD:
Figure 1.40: Select a method to identify on-premises users uniquely

Managing Azure AD Identities and Application Access      45
	
9.	 Now, you can dive even deeper and select the groups, users, and devices that 
need to be synced. Either you can select the Synchronize all users and 
devices option or Synchronize selected:
Figure 1.41: Select users and devices to be synced into Azure AD
	
10.	 You can choose other features also to be installed with this process. The 
Password writeback feature allows password changes that originate in 
Azure AD to be written back to your on-premises directory:
Figure 1.42: Select users and devices to be synced into Azure AD

46      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
Click on Next.
	
11.	 On the next page, you will see a summary of all your configurations. Click 
on Configure and Verify.
If you are deploying PTA in a production environment, you should install 
additional standalone authentication agents. Install these authentication agent(s) 
on server(s) other than the one running Azure AD Connect. This setup provides 
you with high availability (not the load balancing) for user sign-in requests. For 
the production environment, it is recommended to have at least three agents, the 
maximum can be forty agents under a tenant.
Installing Azure AD Connect for federation 
with AD FS
Now, let’s understand how to set up federation between on-premises domain and 
Azure AD domain to sync users. This method requires some extra resources to be 
deployed which are as follows:
 
•	
A Windows Server 2012 R2 or later server for the federation server with 
remote management enabled.
 
•	
A Windows Server 2012 R2 or later server for the Web Application Proxy 
(WAP) server with remote management enabled.
 
•	
An SSL certificate for the federation service name you intend to use.
Although we have seen Azure AD Connect installation process in previous section 
but let’s have a look again and following are the steps to install Azure AD connect 
with ADFS.
	
1.	 Download Azure AD Connect software and install it on domain joined 
Windows 2012 R2 or the preceding OS version server, with minimum 
configuration of 2 Core CPU, 4 GB RAM, and 70 GB disk space.
	
2.	 On the Welcome screen of the AD Connect tool, accept the license agreement 
and choose Use customize settings. You will see this on the next screen.
	
	
You can leave these boxes unchecked; Azure AD Connect installs all the 
required things automatically:

Managing Azure AD Identities and Application Access      47
Figure 1.43: Select Azure AD Connect installation type and required components
	
3.	 Now, select the required authentication method based on your business 
requirement. In the previous sections, we understood when to choose what. 
In this section, we will go through federation with Azure AD so select 
Federation with AD FS.
	
4.	 On the next screen, the Connect to Azure AD screen, enter the username 
and password of the global administrator for Azure AD. Click on Next:
 
Figure 1.44: Connect Azure AD Connect with Azure AD
	
	
On the Connect your directories screen, select your active directory forest 
name and click on Add Directory:

48      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
Figure 1.45: Connect Azure AD Connect with On-premises AD
	
	
A new window pops up to select the username for the sync process. You 
can create a new user or use an existing user. The latest version of Azure AD 
Connect does not support the domain admin or enterprise admin accounts 
as the AD DS Connector account:
 
Figure 1.46: Create Azure AD Connect sync user account
	
	
Click on OK and then click on Next.

Managing Azure AD Identities and Application Access      49
	
5.	 In the next step, you will see a list of domains verified in Azure AD:
 
Figure 1.47: Select verified Azure AD domain
	
6.	 You have the liberty to select what domain or OU you want to sync from your 
forest. You can either select Sync all domains and OUs or Sync selected 
domains and OUs. By default, the Sync all domains and OUs option is 
selected:
 
Figure 1.48: Select on-premises domain and OU to be synced into Azure AD
	
7.	 A user might be represented only once in the whole forest but there can 
be chances that a user has multiple representations across the domains in 

50      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
your forest. You would not like to represent the same user multiple times 
while syncing. You can choose what in such a case. If the user has only one 
representation, then it is easy to take a decision and select the Users are 
represented only once across all directories option; if the user has 
multiple representations, then you need to choose an attribute, based on that 
user’s multiple representation, you will be joined and synced to Azure AD:
 
Figure 1.49: Select a method to identify on-premises users uniquely
	
8.	 Now, you can dive even deeper and select the groups, users, and devices that 
need to be synced. Either you can select the Synchronize all users and 
devices option or Synchronize selected:
 
Figure 1.50: Select users and devices to be synced into Azure AD

Managing Azure AD Identities and Application Access      51
	
9.	 You can choose other features also to be installed with this process.
 
Figure 1.51: Select users and devices to be synced into Azure AD
	
	
Click on Next.
	
10.	 You can use an existing AD FS farm, or you can choose to create a new AD FS 
farm. If you choose to create a new one, you are required to provide the SSL 
certificate. If the SSL certificate is protected by a password, you are prompted 
for the password.
	
	
Choose the certificate file and upload:
Figure 1.52: Select the existing AD FS configuration or create a new AD FS setup

52      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
11.	 Enter the name of the server where you want to install ADFS. The ADFS 
server should be domain joined:
Figure 1.53: Select the AD FS server to connect with Azure AD Connect
	
12.	 Now, enter the details of the WAP server. This server is a front end server for 
any external request. Since the WAP server is not necessary to be a domain 
so you must have local admin credentials:
Figure 1.54: Select the WAP server to connect with Azure AD Connect

Managing Azure AD Identities and Application Access      53
	
13.	 Now, enter the domain administrator credentials to install the AD FS role on 
the server which was listed in Step 12:
Figure 1.55: Put the domain administrator account credentials to set up federation
	
14.	 Now, specify the account to run the AD FS service on AD FS servers. It is 
recommended to have a separate domain service account to run the AD FS 
service:
Figure 1.56: Select the service account to run the federation service

54      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
15.	 Now, select the Azure AD domain which you want to federate with the on-
premises domain:
Figure 1.57: Select Azure AD which you want to federate with on-premises AD domain
	
16.	 Once you provide the details of your Azure AD custom domain in the 
previous step. Azure AD Connect provides you with necessary information 
to verify an unverified domain. AD Connect verifies the custom domain in 
the configuration step:
Figure 1.58: Verify the Azure AD domain which you want to federate with the on-premises domain

Managing Azure AD Identities and Application Access      55
	
	
Set up DNS records for the AD Federation service name (for 
example, mybook.com) for both the intranet (your internal DNS server) 
and the extranet (public DNS through your domain registrar). For 
the intranet DNS record, ensure that you use A records and not 
CNAME records. This is required for Windows authentication to 
work correctly from your domain joined machine.
	
	
If you are deploying more than one AD FS server or WAP server, 
then ensure that you have configured your load balancer and 
that the DNS records for the AD FS federation service name (for 
example, mybook.com) point to the load balancer.
	
17.	 Go to the configuration page and start installation.
	
18.	 In the next step, verify the connectivity.
In this section, we learned how to configure Azure AD Connect with ADFS 
synchronization method. You can now use these steps to configure Azure AD 
Connect in for your environment.
Topologies for Azure AD Connect
While setting up Azure AD Connect for the synchronization purpose, it is required 
to know all the scenarios that are supported and what are not. In this section, you 
will see various on-premises and Azure AD topologies that use Azure AD Connect 
sync as the key integration solution.
Single forest, single sync server to single Azure AD 
tenant
This is the most common scenario, having single on-premises forest, with one or 
multiple domains, single Azure AD Connect server and a single Azure AD tenant. 
This scenario is easily supported by Azure AD Connect.
Single forest, multi sync servers to one Azure AD 
tenant
Multiple Azure AD Connect servers connected to the same Azure AD tenant is 
not supported, except for a staging server. It’s unsupported even if these servers 
are configured to synchronize with a mutually exclusive set of objects. You might 
consider this topology if you can’t reach all domains in the forest from a single 
server, or if you want to distribute load across several servers.

56      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Multiple forest, single sync servers to one Azure AD 
tenant
When you have multiple forests and want them to be synced by single Azure AD 
Connect, all forests must be reachable by a single Azure AD Connect synchronization 
server. The server must be joined to a domain. If necessary, to reach all forests, you 
can place the Azure AD Connect server in a perimeter network (DMZ). This scenario 
is supported.
Multiple forest, multi sync servers to one Azure AD 
tenant
This scenario is not supported.
Features of Azure AD Connect
Apart from just user synchronization, Azure AD Connect has multiple other features 
as well. Let’s discuss them briefly:
 
•	 Exchange hybrid deployment: This feature allows the co-existence 
of Exchange mailboxes both at on-premises and in Office 365. Azure AD 
Connect synchronizes a specific set of attributes from Azure AD back into 
your on-premises directory.
 
•	 Exchange mail public folders: This feature allows you to synchronize 
mail-enabled public folder objects from your on-premises AD to Azure AD.
 
•	 Azure AD app and attribute filtering: By enabling the Azure AD app 
and attribute filtering, the set of synchronized attributes can be tailored.
 
•	 Password hash synchronization: We have learned in detail about this; 
in addition to this, if you select federation as the sign-in solution, then you 
can enable this option as a backup option. If you select Pass-through 
Authentication, this option can also be enabled to ensure support for 
legacy clients and as a backup option.
 
•	 Password writeback: By enabling password writeback, password changes 
that originate in Azure AD need to be written back to your on-premises 
directory. 
 
•	 Group writeback: If you use the Office 365 groups feature, then you can 
have these groups represented in your on-premises AD. This option is only 
available if you have Exchange present in your on-premises AD. 

Managing Azure AD Identities and Application Access      57
 
•	 Device writeback: This allows you to writeback device objects in Azure 
AD to your on-premises AD for conditional access scenarios.
 
•	 Directory extension attribute synchronization: By enabling the 
directory extensions attribute synchronization, attributes specified are 
synced to Azure AD.
Setting up password writeback through 
Azure AD Connect
In the last section, we learned about setting up Azure AD Connect to sync on-
premises AD users with Azure AD. In Azure AD Connect features section, we learned 
that Azure AD Connect can be used for password write back also. In this section, 
we will use our previous section’s knowledge to set up password writeback for our 
test environment. In the hybrid environment scenario, it would be difficult to have 
two passwords for two different directories (Azure AD and on-premises AD). To 
solve this, we can use any of the synchronization methods which we learned in the 
preceding sections.
You can use password writeback to synchronize password change in Azure AD to on-
premises AD. This synchronization happens securely through Azure AD Connect.
Prerequisites to set up password writeback
We require some setup to be in place to set up password writeback. Here is the list 
of them:
 
•	
Azure AD tenant with Azure AD Premium P1 license.
 
•	
An Azure AD user with the global administrator privilege.
 
•	
Self Service Password Reset (SSPR) should be enabled in Azure AD.
 
•	
An on-premises AD DS environment with the latest version of Azure AD 
Connect.
 
•	
On-premises AD DS server should be on Windows 2012 or higher.
 
•	
Azure AD Connect should be configured for user sync process.
In this chapter, we have already learned how to assign a license to a user and how 
to assign a global administrator role to a user. We also know how to configure Azure 
AD Connect on Windows Server for the user synchronization process. During this 
setup, we will go through the process to enable SSPR in Azure AD and password 
writeback in Azure AD Connect.

58      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Enabling Self Service Password Reset in Azure 
AD
With Azure AD SSPR, users can reset their password without reaching out to 
administrators or helpdesk. Users can reset their password if they forget it or if their 
account is locked. Let’s follow the given steps to enable SSPR in Azure AD:
	
1.	 Log in to the Azure portal and go to Azure AD.
	
2.	 In the left panel, you will see the Password reset option under the Manage 
section. Go to the Password reset option.
	
3.	 It will open a new window. Go to Properties under the Manage section. 
On the Properties page, you will get an option to enable SSPR for a group 
of users or all users:
Figure 1.59: Select a group for SSPR
 
	
In the preceding screenshot, I chose the Selected option and then chose a 
group of users to cover under SSPR. After selecting the group, click on Save.
You can follow the preceding steps to enable SSPR for users in your environment. In 
the next step, we will see how to configure authentication and registration method 
for a user for SSPR.
Selecting authentication and registration options
When users want to reset their password or unlock their account, they will be asked 
for additional confirmation. This additional confirmation verifies the user. As an 

Managing Azure AD Identities and Application Access      59
administrator, you can choose how much additional information users need to 
provide and all options for additional information that are available for users. To set 
up this, perform the following steps:
	
1.	 Log in to the Azure portal and go to Azure AD.
	
2.	 In the left panel, you will see the Password reset option under the Manage 
section. Go to the Password reset option.
	
3.	 On the Password reset page, go to Authentication methods. On this 
page, you can set up the number of additional information required to do the 
password reset or account unlock:
Figure 1.60: Select authentication methods for SSPR
	
	
As shown in the preceding screenshot, you can ask for up to two additional 
information. There is a list of supported methods also. You can choose any of 
these to provide additional information. Once you make your choices, save 
the configuration.
	
4.	 Now, move to the next Registration section. Users need to register them 
with their contact details before resetting the password or unlocking the 
account. This contact information is used by the additional information 
methods:

60      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 1.61: Enable registration for users
	
	
As shown in the preceding screenshot, click on Yes to ask users to register 
themselves on the next sign in.
	
5.	 To keep the contact information up to date, you can set a duration after which 
users will be asked to re-verify their contact information. In the preceding 
screenshot, I set up 180 days, so after 180 days of registration, users will be 
asked to re-verify their contact information.
In this section you learnt about the password reset configuration for SSPR.
Setting up account permission for Azure AD 
Connect account
In the preceding sections, we configured Azure AD Connect many times. As 
discussed in the preceding sections, you need a domain administrator account to 
setup AD Connect between on-premises AD DS and Azure AD. Before setting up 
password writeback, it is important that the domain administrator account has 
correct permissions and options set. Let’s follow the given steps to check and set up 
correct permissions for the domain administrator account:
	
1.	 Log in to on-premises AD DS server and go to Active Directory Users 
and Computers.
	
2.	 In the View menu, click on Advanced Features to turn it on.
	
3.	 In the left panel, right click on your domain name and click on Properties > 
Security > Advance.
	
4.	 It will open a new window. On the Permission tab, click on Add.
	
5.	 In the next window, click on Select a principal. It will open a new box to 
take the input of user account. Give the user account name which is going to 
be used for AD Connect. Click on OK.
	
6.	 Keep the type to Allow. In the Applies to drop-down, select Descendant 
User objects at the end of this list.

Managing Azure AD Identities and Application Access      61
	
7.	 Now, under the Permissions section, select Reset password. Under the 
Properties section, select Write lockoutTime and Write pwdLastSet.
	
8.	 Now, click on OK and Apply and come out of all open boxes. It may take 
up to an hour to reflect on all users.
	
9.	 For most efficient password writeback, you should modify the on-premises 
AD DS group policy. The group policy for minimum password age must 
be set to 0. This setting can be found under Computer Configuration > 
Policies > Windows Settings > Security Settings > Account Policies 
> Password Policies. 
Once you are done with the preceding setting, you can move on to Azure AD 
Connect setup.
Configuring Azure AD Connect for password 
writeback
Now, once you have completed all prerequisites, you can go to your Azure AD 
Connect server to enable password writeback. You can enable this on an existing AD 
Connect setup or on a new setup:
	
1.	 You can refer to the previous sections to see the steps to install Azure AD 
Connect.
	
2.	 When you start the installation, in the Optional features section, select 
Password writeback:
Figure 1.62: Enable password writeback in Azure AD Connect
	
	
As shown in the preceding screenshot, select the Password writeback 
check box and complete the configuration.

62      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
3.	 Once this sync is completed, you need to complete few steps in Azure AD 
SSPR. So, go back to Password reset in Azure AD. Here, it will check 
the status of your Azure AD Connect and give a notification; Yes, you are 
connected to on-premises password writeback client.
	
4.	 Here, you can enable write back password to your on-premises directory. 
You can also enable users to unlock their account without changing their 
password:
Figure 1.63: Enable on-premises integration for Password writeback
	
	
Make the configuration as shown in the preceding screenshot and save it.
In this section, we learned how to set up SSPR and password write back in your 
Azure environment.
Passwordless authentication options in 
Azure AD
As the use of technology is increasing day by day, every device and application 
requires a password to safeguard the authentication. With multiple apps and devices, 
it is very difficult to remember multiple passwords for all of them. Microsoft came 
up with a concept of passwordless authentication. Here, you can use Microsoft 
Authenticator App to sign in to any Azure AD connected app and device without 
a password.
To use this functionality, your users should be covered under Azure MFA, combined 
registration experience should be enabled on your Azure AD, and users should have 
the latest version of Microsoft Authenticator App.

Managing Azure AD Identities and Application Access      63
Enabling combined registration experience
Combined registration experience helps users to register them only once for both 
Azure MFA and SSPR. Combined registration experience is also required for 
passwordless authentication. Let’s enable it by performing the following steps:
	
1.	 Log in to the Azure portal and go to Azure AD.
	
2.	 Go to Users > User settings > Manage user feature preview settings. 
It will open a new window:
Figure 1.64: Enable combine registration experience
	
	
As shown in the preceding screenshot, this feature is already enabled for 
new tenants but if you are having an old and existing tenant, then you can 
enable it from here. You can choose if you want to enable it for all users or 
selected user and groups. Save the changes.
Once you have enabled combined registration experience, you can enable 
passwordless authentication methods.
Enabling passwordless authentication method
Being an administrator, you can choose allowed passwordless authentication 
methods for users. Here is the list of supported passwordless authentication methods:
 
•	
FIDO2 security key
 
•	
Microsoft authenticator
 
•	
Text message (preview)
 
•	
Temporary access pass (preview)

64      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
To configure this, let’s follow the given steps:
	
1.	 Log in to the Azure portal and go to Azure AD.
	
2.	 In Azure AD, go to Security > Authentication Methods > Policy.
	
3.	 Under Policies, you will see a list of supported passwordless authentication 
methods. Click on Microsoft Authenticator and choose following options:
	
	
•	 ENABLE: Yes
	
	
•	 TARGET: All users or Select users
	
4.	 The users and groups which you added are by default enabled to use 
Microsoft Authenticator in both passwordless and push notification modes. 
You can change the authentication method by clicking on the three dots at 
end of Target:
	
	
•	
Browse to ... > Configure.
	
	
•	
For Authentication mode: Any, Passwordless, or Push
Figure 1.65: Set Microsoft Authenticator as passwordless authentication method

Managing Azure AD Identities and Application Access      65
	
	
As shown in the preceding screenshot, make the configuration.
	
5.	 Save the changes to apply the policy.
Similarly, you can enable other passwordless authentication methods also.
Creating app registration in Azure AD
Application of this term can be understood in the wrong manner when it comes 
in the context of Azure AD. We will understand the concept of application and app 
registration with respect to Azure AD. When an application is been integrated with 
Azure AD, it goes beyond a software or piece of a code. In Azure AD, the term 
application generally used as a concept, it is not only the software application but 
also a way of authentication and authorization. This application registration can be 
used in multi-tenant for authentication.
There are two components created when an application gets registered to Azure AD 
Tenant:
 
•	
The application object (attached with an object ID)
 
•	
The service principal
Application object
The Azure AD application is defined by its application object. This application object 
resides in Azure AD tenant where the application is been registered. But this can be 
used globally across multi-tenants, after consenting to each tenant.
Service principal object
Service principal is the entity or representative which requires the permission to 
access the Azure AD Tenant resources. So, in simpler words, to access the resources 
in Azure tenant, you need a service principal. This service principal should have the 
required permission to access the resources. This is a local representation of your 
application to be used in home tenant.
The attached permissions define the level of access of the respective user or 
application. For example, they can have read-only access on certain resources and 
owner access for certain resources. This enables authentication and authorization 
capabilities during signing in and accesses the resources, respectively.
If the application is used in other tenants (after consenting), a new service principal 
gets created in each tenant, but the application object remains unique in the parent or 

66      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
home tenant. So Azure AD application has a one-to-one relation with the application 
object and one-to-many with its corresponding service principal objects across the 
tenants.
Azure AD applications account types
Azure AD has three types of application accounts. Let’s understand them briefly 
here:
 
•	
Single tenant: If the application is going to be used only by internal users, that 
is, by users from the same directory where the application is been registered, 
then you need to choose a single tenant account type while registering the 
app in Azure AD.
 
•	
Multi-tenant: If the application is going to be used by external users, that 
is, by the users from any tenant, any Office 365 account (included work and 
school accounts only), then you need to choose a multi-tenant account type 
while registering the app in Azure AD.
 
•	
Multi-tenant with personal Microsoft accounts: The previous account type 
included only work or school Office 365 accounts from any tenant. But if 
the application is going to be used by external users, with their personal 
Microsoft account, then you should select this account type. This will cover 
the widest range of audience.
	
	
You need to assign the account type while registration of the application. 
For single tenant account type application, if you make any changes in 
application object, the same will be reflected to the service principal object 
in the application’s home tenant only. For a multitenant account type 
application, the changes made to application object will not reflect to all 
service principals (across other tenants) until you remove the access from 
the application access panel and grant again.
Required access level for app registration
Although the default setting allows users to go app registration on their own, but if 
the default setting is changed, then you may need to make some changes to allow 
users to do app registration in Azure AD.
To do so, follow the given steps:
	
1.	 Log in to the Azure portal.
	
2.	 Go to Azure AD.

Managing Azure AD Identities and Application Access      67
	
3.	 Go to Users in the Manage section.
	
4.	 Go to user settings. 
	
5.	 Make Users can register application to Yes.
You need to set Users can register application to No if you do not want normal 
users to register their apps. Ideally, this setting is recommended so no one can 
register apps without the administrator’s permission.
New application registration in Azure AD 
through the Azure portal
After understanding the basic terminology, concept and required access of apps and 
service principal, let’s start with the steps to register the app in Azure AD:
	
1.	 Log in to the Azure portal with your Microsoft account.
	
2.	 If you have access to multiple tenants, then select the correct tenant from 
the top-right hand corner. This will make your portal session specific to a 
selected tenant:
Figure 1.66: Select a tenant in Azure AD
	
3.	 Now, search for Azure AD in the search box at the top middle of Azure 
portal.
	
4.	 On the Active Directory page, select App registration under the 
Manage section.
	
5.	 Click on + New registration as shown in the following screenshot:

68      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 1.67: Create a new Azure AD application
	
6.	 Once the New app registration page opens, fill in the relevant information:
 
 
•	 Name: Put a meaningful name of the app which will be visible to users.
 
 
•	
Select the account type based on the audience. We have learned about 
the selection criteria of this account type.
 
Figure 1.68: Fill in the details about the Azure AD application
	
7.	 Once you fill in all the values, click on Register. 
In this section, we learned how to do app registration in Azure AD. This new app 
can be used as a service principal in your Azure environment.

Managing Azure AD Identities and Application Access      69
App registration permission scopes 
configuration
Microsoft identity platform allows developers to build applications which can use 
Azure AD for authentication and authorization. It uses OAuth 2.0 and OpenID 
protocols for authentication. OAuth 2.0 is an authentication method through which 
a third-party app can access web-hosted resources on behalf of a user. Any web-
hosted resource that integrates with the Microsoft identity platform has a resource 
identifier called application ID URI. Developers should always abide by the concept 
of least privilege, asking for only the permissions they need for their applications to 
function. In OAuth 2.0, permissions are called scopes. You can assign the application 
administrator directory role to manage the app registration.
Type of permissions
Let’s understand the different ways of permission granting. We will discuss two 
kinds of permissions, supported by Microsoft identity platform.
Delegated permission
This kind of permission is used by the apps when they have any signed in user. The 
user delegates his/her permissions to the app. Any user or administrator can give 
consent for the permissions that the application needs. Now, the application can act 
as a signed in user and has permission equal to the user who consented. Normal 
permissions can be consent by a non-admin user but there are few high-privileged 
permissions which require consent from an administrator only.
For delegated permissions, the effective permissions of your app will be the least 
privileged intersection of the delegated permissions the app has been granted (via 
consent) and the privileges of the currently signed-in user. Your app can never have 
more privileges than the signed-in user.
For example, assume your app has been granted the permission to read and write 
the user profile for every user in your organization. If the signed-in user, who is 
consenting, is a user’s administrator, your app will be able to update the profile of 
every user in the organization. However, if the signed-in user, who is consenting 
isn’t in an administrator role, your app will be able to update only the profile of 
the signed-in user. It will not be able to update the profiles of other users in the 
organization because the user that it has permission to act on behalf of does not have 
those privileges.

70      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Application permission
This kind of permission used by apps when they run without a signed-in user 
present. Only an administrator can consent this kind of permission. For application 
permissions, the effective permissions of your app will be the full level of privileges 
implied by the permission. For example, an app that has the user read and write for 
all, can update the profile of every user in the organization. Since the consent does 
not depend on the signed in user, so the app will have all permissions assigned to it.
Conclusion
In this chapter, you learned about Azure Active Directory and Azure Subscription in 
detail. Now, you would be able to deploy and manage multiple Azure AD. You also 
learned how to create new subscriptions and move across different tenants. You can 
now decide what kind of subscription offering is suitable for your organization. You 
can create different subscriptions based on different applications, environments, and 
business units.
You studied Azure AD architecture along with user and group management. You 
studied various methods to sync on-premises user accounts with Azure AD. So, now 
you can setup a hybrid identity management system by syncing on-premises AD 
user accounts with Azure AD.
In the next chapter, we will learn various methods for secure access by using Azure 
AD. We will learn about Azure MFA, identity protection, Azure PIM, and conditional 
access.
Multiple choice questions
	
1.	 Which of the following is not a supported authentication method in Azure 
AD Connect?
	
	
A.	 Pass-through authentication.
	
	
B.	 Mixed mode authentication.
	
	
C.	 Password hash authentication.
	
	
D.	 AD FS.
	
	
Answer: B
	
2.	 In Pass-through Authentication synchronization method, the user’s 
password validation happens in Azure Active Directory:
	
	
A.	 True.

Managing Azure AD Identities and Application Access      71
	
	
B.	 False.
	
	
Answer: B
	
3.	 You want to assign O365 licenses to users based on their groups. You have 16 
groups and 387 users in total. Which and how many licenses will you buy?
	
	
A.	 16 Office 365 licenses.
	
	
B.	 16 Azure AD Basic licenses.
	
	
C.	 387 Azure AD Basic licenses.
	
	
D.	 387 Office 365 licenses.
	
	
Answer: D
	
4.	 Which directory role would you assign to manage the app registration?
	
	
A.	 Users administrator
	
	
B.	 Security administrator
	
	
C.	 Application administrator
	
	
D.	 Application developer
	
	
Answer: C
	
5.	 Which authentication method stores a copy of password in Azure Active 
Directory?
	
	
A.	 Pass-through Authentication
	
	
B.	 Password Hash Authentication
	
	
C.	 Federation Authentication (AD FS)
	
	
D.	 Mixed mode authentication
	
	
Answer: B
	
6.	 Being a global admin of your directory, you are trying to remove a license 
from a user from your directory, but you are not able to do so. What could be 
the reason?
	
	
A.	 The user is inheriting a license from the group.
	
	
B.	 You don’t have the required permission.
	
	
C.	 You need to disable the user account before revoking the license.
	
	
D.	 The user is currently using a service where the license is required and 
you have to ask the user to stop using that service, before revoking the 
license.
	
	
Answer: A

72      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
7.	 You have on-premises Active directory syncing with Azure Active Directory. 
Which of the following will you use to enable password write back feature?
	
	
A.	 In Azure conditional access
	
	
B.	 In on-premises Active Directory
	
	
C.	 In Azure MFA setting
	
	
D.	 In Azure Active Directory Connect
	
	
Answer: D
	
8.	 Which of the following is not an Azure AD version type?
	
	
A.	 Azure AD Premium P1
	
	
B.	 Azure AD Premium P2
	
	
C.	 Azure AD Free
	
	
D.	 Azure AD Dev/Test
	
	
Answer: D
	
9.	 Azure AD primary replication is created in which of the following?
	
	
A.	 Different region to the master directory region
	
	
B.	 Same region to the master directory region
	
	
C.	 US Government region
	
	
D.	 None of above
	
	
Answer: B
	
10.	 In the Azure AD architecture, the read requests are served by_______.
	
	
A.	 Primary replica
	
	
B.	 Secondary replica
	
	
C.	 Both the replicas
	
	
D.	 None of these
	
	
Answer: B.
	
11.	 In the Azure AD architecture, the write requests are served by ________.
	
	
A.	 Primary replica
	
	
B.	 Secondary replica
	
	
C.	 Both the replicas
	
	
D.	 None of these
	
	
Answer: A

Chapter 2
Configuring Secure 
Access by Using 
Azure Active 
Directory
In this chapter, you will learn how to enforce security services from Azure AD. We 
will cover least privilege security access, both for Azure AD and for other Azure 
resources. Some of the major topics that will be covered include understanding 
of use cases for Azure AD Privileged Identity Management (PIM), discovering 
the high privilege role holders like owners or global admins in Azure AD and in 
your Azure subscriptions, configuring time-limited access for privileged roles, and 
auditing the entire process to ensure security compliance for IAM. We will also learn 
about setting up Azure Multi-Factor Authentication (MFA), Conditional Access, 
and Identity Protection. By the end of this chapter, you will be able to improve the 
security of your organization’s identity management in Azure.
Structure
In this chapter, we will learn the following topics:
 
•	
What is Azure AD PIM?
 
•	
Planning and setting up Azure AD PIM for your organization
 
•	
Relation between MFA and PIM
 
•	
Monitoring of PIM
 
•	
Configuring and managing access review

74      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Azure AD MFA
 
•	
Azure AD Conditional Access
 
•	
Azure AD Identity Protection
 
•	
Conclusion
 
•	
Multiple choice questions (MCQ)
Objectives
The objective of this chapter is to understand security features of Azure AD. After 
reading this chapter, you will be able to plan and configure Azure AD PIM. While 
configuring Azure AD PIM you will learn about setting up access reviews to audit 
assigned eligible and permanent roles in Azure AD PIM. You will also learn planning 
to roll out Azure AD PIM for production and manage Azure AD roles and Azure 
AD resource roles in Azure AD PIM. Along with Azure AD PIM, you will also go 
through other security features of Azure AD like Azure MFA, Conditional access, 
and Azure Identity protection. For Azure MFA, you will be able to learn planning 
and enabling Azure MFA for users and administrators. In conditional access you 
will learn how to control user access based on different conditions such as trusted 
network and trusted locations. Azure Identity Protection is another security feature 
of Azure AD and here you will be able to review the secure score of users and their 
sign ins.
What is Azure AD Privileged Identity 
Management?
As the name indicates, Privileged Identity Management service provides time 
bound and approval-based capability to manage, monitor, and control access for 
various resources such as Microsoft Office 365, Microsoft Azure, and so on. You 
would not want to provide high privileges all the time to all users. You can control, 
who can access what and when. You can set up time duration for a user to use certain 
resources with certain level of permissions. By giving access for a restricted time 
period, also known as Just-in-Time (JIT) access, you can reduce the chances of 
malicious attacks.
You require the Privileged Role, Administrator role, and any of these license Azure 
AD Premium P2, Enterprise Mobility + Security (EMS) E5, Microsoft 365 M5, to 
manage Azure AD PIM. Anyone who is going to interact, manage, control, or take 
benefits of PIM will need any of the following license:

Configuring Secure Access by Using Azure Active Directory      75
 
•	
Administrators with Azure AD roles managed using PIM
 
•	
Administrators with Azure resource roles managed using PIM
 
•	
Administrators assigned to the privileged role administrator role
 
•	
Users assigned as eligible to Azure AD roles managed using PIM
 
•	
Users able to approve/reject requests in PIM
 
•	
Users assigned to an Azure resource role with Just-In-Time or direct (time-
based) assignments
 
•	
Users assigned to an access review
 
•	
Users who perform access reviews
You will not be able to manage PIM-related things if your license expires. If there 
is an ongoing session for a user with privilege access, the user will not lose the 
privilege access.
Terminology used in PIM
Let’s understand the different terms used in Azure AD PIM. These definitions will 
help you understand the concept quickly. You can divide these terms or concepts 
broadly in three categories: type, state, and duration:
 
•	
Eligible: A role assignment that requires a user to perform one or more 
actions to use the role. If a user has been made eligible for a role, that means 
they can activate the role when they need to perform privileged tasks. There’s 
no difference in the access given to someone with a permanent versus an 
eligible role assignment. The only difference is that some people don’t need 
that access all the time.
 
•	
Active: A role assignment that does not require a user to perform any action 
to use the role. Users assigned as active have the privileges assigned to the 
role.
 
•	
Assigned: A user that has an active role assignment with privilege access.
 
•	
Activated: A user that has an eligible role assignment performs the actions to 
activate the role and is now active. Once activated, the user can use the role 
for a preconfigured period of time before they need to activate again.
 
•	
Permanent Eligible: A role assignment where a user is always eligible to 
activate the role.
 
•	
Permanent Active: A role assignment where a user can always use the role 
without performing any actions. If PIM is not configured and enabled, then 
this is the default setting of a role assignment in Azure AD.

76      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Expire Eligible: A role assignment where a user is eligible to activate the 
role within a specified start and end date. After the end time, the user cannot 
activate the role and must request again.
 
•	
Expire Active: A role assignment where a user can use the role without 
performing any actions within a specified start and end date.
 
•	
Activate: The process of performing one or more actions to use a role that a 
user is eligible for. Actions might include performing a MFA check, providing 
a business justification, or requesting approval from designated approvers.
 
•	
Just-in-time (JIT) access: A model in which users receive temporary 
permissions to perform privileged tasks, which prevents malicious or 
unauthorized users from gaining access after the permissions have expired. 
Access is granted only when users need it. This is a time bound access.
 
•	
Principle of least privilege access: A recommended security practice in 
which every user is provided with only the minimum privileges needed to 
accomplish the tasks they are authorized to perform. This practice minimizes 
the number of Global Administrators and instead uses specific administrator 
roles for certain scenarios.
You cannot manage classic subscription account administrator, service 
administrator, and co-administrator roles through Azure AD PIM. 
Except Exchange administrator and SharePoint administrator roles, other 
Exchange Online or SharePoint Online roles are not represented in Azure 
AD so they cannot be managed in PIM.
Planning and setting up Azure AD PIM for 
your organization
You went through the preceding best practices, and now you need to apply them in 
your environment as per your business requirement. As I earlier said, security is a 
relative thing, needs continuous improvement, and needs to maintain consistency. 
Before enforcing any of the best practices, you should go through a planning phase, 
where you should understand what all solutions are relevant for your business 
needs and who all (users) need to be part of which security best practice. Then, 
before applying the policies to production, you should test this to a set of users. In 
this section, I will take you through the planning phase and then the deployment 
phase of Azure AD PIM.

Configuring Secure Access by Using Azure Active Directory      77
Planning Azure AD PIM and other security best 
practices
Being a security administrator, your actions can affect multiple users. Before 
applying any new security policy or modifying the existing policy, you should do 
some planning. In this section, we will study how we can plan to roll out Azure AD 
PIM for your organization:
 
•	
Identify target stakeholders: You need to bring stakeholders from different 
departments to understand their requirements related to identity and access 
management security and to make them understand what is Azure AD PIM, 
how it can help them, how to use it, and how to manage it. The stakeholders 
will be able to communicate the relevant information to their team members. 
You can plan to invite stakeholders from the following departments:
 
 
•	
Global admins
 
 
•	
Line managers
 
 
•	
Tower heads
 
 
•	
Practice heads
 
 
•	
Security heads
 
 
•	
IT or helpdesk
 
 
•	
Privilege access pilot users
 
•	
Identify target Azure resources to be covered by Azure AD PIM: You can 
bring Azure resources also under the umbrella of Azure AD PIM. We will 
go through this in detail in the upcoming sections. So, you can plan what all 
resources you want to keep under PIM. 
 
•	
Enforce least privilege access policy: Extract the report to see who has 
privilege accesses and if they really require those accesses, see if you can 
cut down unwanted accesses from users. There could be scenarios where 
the security admin access was assigned to someone long back to complete 
some tasks but they were never revoked after completion of the task. Take 
the justification why they need that role. So, for all Azure AD users, review 
their roles and based on their justification, decide what role suites them and 
remove privilege access who no longer need the role.
	
	
You can set up access reviews from Azure AD PIM to automate the review 
role assignment task. We will go through setting up access reviews in Azure 
AD PIM in the upcoming sections.
	
	
You should perform access reviews for Azure subscription owners, resource 
group owners, and resources’ owners. You need to ask justifications why they 

78      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
need access to a particular resource. You can work with subscription owners 
or resources group owners to understand the use of any resource under their 
subscription or resource group and then can ask for the justification for user 
access on the resources.
 
•	
Decide roles to be part of Azure AD PIM: Once you have cleaned up 
privileged role assignments, you will need to decide which roles need to be 
protected with PIM. It is important to prioritize protecting Azure AD roles 
that have the greatest number of permissions. Here are few of the critical 
roles which you should plan to cover under Azure AD PIM:
 
 
•	
Global administrator
 
 
•	
Security administrator
 
 
•	
User administrator
 
 
•	
Exchange administrator
 
 
•	
SharePoint administrator
 
 
•	
Intune administrator
 
 
•	
Security reader
 
 
•	
Service administrator
 
 
•	
Billing administrator
 
 
•	
Skype for Business administrator
	
	
Since reader roles such as the Directory Reader, Message Center Reader, 
and Security Reader do not have write permission so sometimes they are 
believed to be less important compared to other roles. However, attackers 
who have gained access to these accounts may be able to read sensitive 
data such as personally identifiable information. You should take this into 
consideration when deciding whether reader roles in your organization 
need to be managed using Azure AD PIM.
 
•	
Decide permanent and eligible role assignments: Once you have decided 
which roles will be managed under Azure AD PIM, you must decide which 
users should get the eligible role and which user the permanently active role. 
Permanently active roles are the normal roles assigned through Azure AD 
while eligible roles can only be assigned in PIM.
 
	
It is recommended to assign a permanent global admin role for 
break glass emergency accounts.
 
•	
Draft Azure AD PIM setting: Before you implement your PIM solution, it 
is a good practice to draft your PIM settings for every privileged role your 
organization uses. For example:

Configuring Secure Access by Using Azure Active Directory      79
  
 
For a global administrator role, there would the following settings:
 
 
•	
MFA is required.
 
 
•	
A notification will be sent to the global administrator, security 
administrator, and privileged role administrator.
 
 
•	
An incident ticket number is required to activate the role.
 
 
•	
An appropriate approval from other global admin, security admin, or 
privileged role admin is required to activate the role.
 
 
•	
Activation duration would be 2 hours.
	
	
For subscription owners:
 
 
•	
MFA is required.
 
 
•	
A notification will be sent to the global administrator, security 
administrator, and privileged role administrator.
 
 
•	
An appropriate approval from other active subscription owners is 
required to activate the role.
 
 
•	
Activation duration would be 2 hours.
	
	
So, like this, you can create a list for other roles as well so you can set up 
correct conditions all the time.
Configuring Azure AD PIM
After doing all the planning, you are not ready for implementation. Follow the given 
steps if you want to set up Azure AD PIM for the first time:
 
1.	 Log in to the Azure portal as a global administrator.
 
2.	 Search for Azure AD and go to Licenses under the Manage section.
 
3.	 In licenses, click on All products under Manage.
 
4.	 Click on the + Try / Buy option to purchase the trial version or paid version 
of license. For PIM, you need to choose the Azure AD Premium P2 or 
Enterprise Mobility + Security E5 license:

80      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 2.1: Select license to buy or try
	
5.	 Before assigning the license, the user should have the usage location defined 
for them. To set up the usage location, go to Users in Azure AD.
	
6.	 Select the user for whom you want to set up the usage location:
Figure 2.2: Setup user’s usage location in Azure AD user profile
	
7.	 In the Profile section, edit the Settings option and choose the location from 
the drop-down menu.
	
8.	 In the User section, you can assign the license to this user. Go to the Licenses 
section and click on + Assignments as shown in the following figure:

Configuring Secure Access by Using Azure Active Directory      81
Figure 2.3: Assign a license to a user
	
9.	 A new window will open, and you will see available licenses which you 
purchased to assign your users. Select the Enterprise mobility + Security 
E5 or Azure Active Directory Premium P2 license. Once you select the 
license, you will see the available feature with that license. You can choose 
the required features. Once it is selected, click on Save as shown in the 
following figure:
Figure 2.4: Choose the license and license feature to assign to a user

82      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
10.	 Refresh the Licenses page and now you will notice that the license has been 
assigned to the user:
Figure 2.5: Verify and see the status of the assigned license in a user profile
	
11.	 Once the required license (EMS E5) is assigned to the user or you, you can set 
up Azure AD PIM for the first time.
The other pre-requisite to set up Azure AD PIM is that the privilege role administrator 
should be covered by MFA. In coming section “Steps to Enable and Disable Azure 
MFA for Users”, we will see how to enable Azure MFA for users. Please refer to 
section “Steps to Enable and Disable Azure MFA for Users” and enable Azure MFA 
for yourself.
Manage Azure AD PIM for Azure AD roles
In the preceding section, you performed steps to set up Azure AD PIM for the first 
time use. Now in this section, you will be taken through to enforce Azure AD PIM. 
From the Azure AD PIM home page, you have three options to manage: Azure AD 
roles, Azure resources, and Privileged access groups. Management of Privileged 
access groups is in preview at the time of writing this book.
Manage Azure AD roles
Let’s understand what you can do here in the Azure AD role management. You need 
to sign up into PIM before managing Azure AD roles. In the previous section, you 
have been taken to sign up the process. Once you have signed up, you can manage 
multiple things such as role assignment, role activation, request approval, privilege 
access request and level auditing, and many more from here.
Role assignment
Here, you can select an Azure AD role and assign it to users to make them eligible 
to activate this role when they require. Before assigning the roles, you should define 
what all parameters or justifications a user must pass or give to activate the assigned 

Configuring Secure Access by Using Azure Active Directory      83
eligible role. These parameters or justification are called as passing parameters. 
Perform the given steps to set up the required parameters:
	
1.	 In Azure AD roles, go to Settings. Here, you can configure passing parameters 
for Roles. 
	
2.	 Under settings, you will see all available directory roles for which you can 
set up the required passing parameters. In this exercise, I am considering 
the Billing Administrator role to be assigned as the eligible role. So, let’s 
configure passing parameter for Billing Administrator. When you click 
on Billing Administrator role a new blade will open. This new window is 
divided in multiple parts such as, Activation, Assignment, and notifications 
settings. Here you can see current settings for the Azure AD role. Click on 
edit to make changes in role settings:
Figure 2.6: Edit settings for Azure AD PIM role
	
	
Once you click on Edit, a new page will open, and you will see three tabs 
for Activation, Assignment, and Notification.
	
	
•	
In Activations, you set up following configurations:

84      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
	
•	
How long this role will remain active after any user activates his/her 
Billing Administrator eligible role. 
	
	
	
•	
Does the user need to go through MFA to activate the role?
	
	
	
•	
Does the user need to provide any justification, ticket number or 
approval to activate the role? You enable users to enter the ticketing 
information when they request a role activation.
	
	
	
•	
In case of required approval, you can select a user as an approver. you 
look for an approval from the selected approver. Being a privileged 
role administrator, you can select an appropriate approver for each 
directory role. For example, for a billing administrator role, you can 
make the Head of finance the approver, for the user administrator 
role, you can make the global administrator the approver. If you do 
not select any approver, the global administrator and privileged role 
administrators will become default approvers.
Figure 2.7: Update activation settings for Azure AD PIM role
	
	
	
	
The preceding figure shows the settings options available for Azure 
AD PIM role activation. 
	
	
• 
 In Assignment, you can setup following configurations:

Configuring Secure Access by Using Azure Active Directory      85
	
	
	
•	
You can choose whether this role can be assigned as permanent 
eligible assignment.
	
	
	
•	
You can set expiation of eligible assignment if this role cannot be 
assigned as permanent eligible assignment.
	
	
	
•	
You can choose whether this role can be assigned as permanent active 
assignment.
	
	
	
•	
You can set expiation of active assignment if this role cannot be 
assigned as permanent active assignment.
	
	
	
•	
Does this role require Azure MFA on active assignment?
	
	
	
•	
Does this role require justification on active assignment?
Figure 2.8: Update assignment settings for Azure AD PIM role
	
	
	
The preceding figure shows the settings options available for Azure AD 
PIM role assignment. 
	
	
• 
In Notifications, you can setup following configurations: 
	
	
	
•	
Send notification when any user is assigned as eligible to this role.
	
	
	
•	
Send notification when any user is assigned as active to this role.
	
	
	
•	
Send notification when eligible user activates this role.
	
	
	
•	
Default recipients for each type of notifications and you can also add 
additional users as recipients for these notifications.

86      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 2.9: Update notification settings for Azure AD PIM role
	
	
	
The preceding figure shows the settings options available for Azure AD 
PIM role notifications. 
	
	
	
In the preceding steps, you configured passing parameters for the billing 
administrator role. Although it is recommended that you configure a separate 
parameter check list for each role depending on the criticality of the role.
You have configured the passing parameters now so you can perform the following 
steps to grant eligible roles to users:
	
1.	 Click on Roles under the Manage section. You will see a list of all available 
Azure AD roles.
	
2.	 Click on the desired role. You will see the Assignments, Description, and Role 
settings options. In the Description option, you will see a brief description 
about the role and all the permissions users will get by assigning this role. 
Here, I am considering the Billing Administrator role to be assigned as the 
eligible role. The following screenshot displays what you will see when you 
go to description:
 
Figure 2.10: See the permissions associated with the billing administrator Azure AD role

Configuring Secure Access by Using Azure Active Directory      87
	
3.	 In Assignments, Click on + Add Assignments to assign this role to any user. 
A new window will open and there you can select users. Once you add the 
user, you can see the role assignment type as Eligible. You can make this 
user permanent or can remove from here:
Figure 2.11: Assign an eligible role to a user
 
 
Assignments option has three tabs, Eligible assignments, Active assignments, 
and Expired assignments. There you can see the list of users with eligible 
assignments, active assignments, and expired assignments respectively.
Review assignments
You can see which user has what permission permanent or eligible role assigned. 
Assignments section has three tabs, Eligible assignments, Active assignments, and 
Expired assignments. There you can see the list of users with eligible assignments, 
active assignments, and expired assignments respectively. You can add a new 
member from here also. The eligible assignments tab will show the result as shown 
in Fig 2.11. There is an option to export this list:
Figure 2.12: See members and their assigned roles

88      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Manage alerts
You can configure conditions on which you would like to get alerts. In the Alerts 
section, you can check the present alerts based on your condition configuration. 
You can set up these conditions in Settings. Perform the following steps to set up 
conditions and their threshold limit to trigger alerts. There are some pre-created 
conditions for which you can modify the threshold limit:
	
1.	 Go to Alerts and select Settings. You will find a list of pre-created conditions. 
You can go to the required conditions and set up the threshold limit. Once 
your environment meets the threshold, it generates an alert. You can see 
these alerts in Alerts under the Manage section. The following is a list of 
pre-created conditions:
 
 
•	
Eligible administrators aren’t activating their privileged role
 
 
•	
The organization does not have Azure AD Premium P2.
 
 
•	
Potential stale accounts in a privileged role (Preview).
 
 
•	
Roles are being assigned outside of PIM.
 
 
•	
There are too many global administrators.
 
 
•	
Roles are being activated too frequently.
 
 
•	
Potential stale accounts in a privileged role
 
Figure 2.13: Set up alerts in Azure AD PIM
	
2.	 You can scan your environment by clicking on Scan to see active alerts. It 
shows the alerts with their respective severity.
Configuring access review
You can set up a periodic review for Azure AD roles. A periodic review is important 
to ask justification from users to keep the assigned role with them. You can set up the 
review for individual roles or can select multiple directory roles together; selecting 

Configuring Secure Access by Using Azure Active Directory      89
multiple roles will create multiple reviews. If you select four directory roles, then it 
will create four access reviews. You can set up automated duration for reviews. Let’s 
perform the following steps to set up access reviews for Azure AD roles:
	
1.	 Log in to the Azure portal and go to Azure AD roles in Azure AD PIM.
	
2.	 Click on Access reviews under Manage. You will get an option to create new 
reviews. When you click on New, a new window opens, and here you can 
create review rules.
	
3.	 Fill in the details as shown in the following figure:
 
Figure 2.14: Set up Azure AD PIM access review, fill basic details
	
	
In the preceding screenshot, few things are self-explanatory but let’s still go 
ahead and discuss them:
 
 
•	
Review name: This is the name of the review plan.
 
 
•	
Description: Give a brief description like why this has been created and 
who all are covered under this review.
 
 
•	
Start date: Put the start date of this review when you want this review to 
start.
 
 
•	
Frequency: You can choose how frequent you want to review the access. 
The following options are One time, Weekly, Monthly, Quarterly, Semi-
annually, and Annually.

90      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
 
•	
Duration (in days): How long the review will be active. How much time 
users have to respond back or provide justification?
 
 
•	
End and End date: This shows how this series of access review will end. 
You can choose from never ends, on a specific date, or end after a fixed 
number of times. You can also stop the review anytime in the middle by 
changing the End date option.
 
 
•	
In Users Scope, every user who has an eligible role assigned is the 
default selection. In our example, whoever has the billing administrator 
role assigned will be in your review access scope. Now you can create 
this access review for service accounts as well.
 
Figure 2.15: Set up Azure AD PIM access review, select directory roles and reviewer
 
 
•	
In Review role membership, you can select a privilege role or select 
multiple privilege roles for access review.
 
 
•	
In Assignment type, you select for what kind of role assignment (Active 
and Eligible) you want to create this access review. 
 
 
•	
In Reviewers, if you have a clear idea about who should be the reviewer 
for all users’ access, then you can choose the Selected users option, but if 
you do not know whom you should reach to review the access, then you 

Configuring Secure Access by Using Azure Active Directory      91
can choose Members (self). In this case, you can ask members to justify 
their privilege access.
 
 
•	
You can set what will happen after completion of the review. If you want 
to automatically remove access for users that were denied, set  Auto 
apply results to resource to Enable. If you want to manually apply the 
results when the review completes, set the switch to Disable.
 
 
•	
In the If reviewers don’t respond list, you can specify what happens for 
users that are not reviewed by the reviewer within the review period. This 
setting does not impact users who have been reviewed by the reviewers 
manually. If the final reviewer’s decision is Deny, then the user’s access 
will be removed:
 
 
 
•	
No change: Leave the user’s access unchanged.
 
 
 
•	
Remove access: Remove the user’s access.
 
 
 
•	
Approve access: Approve the user’s access.
 
 
 
•	
Take recommendations: Take the system’s recommendation on 
denying or approving the user’s continued access.
 
Figure 2.16: Set up Azure AD PIM access review, completion settings
 
 
 
•	
In Advance settings, you can define the following things:
	
 
 
 
•	
Enable Show recommendations to show the reviewers the system 
recommendations based on the user’s access information.Enable 
Require reason on approval to ask reasons from the reviewer for 
approval.
	
 
 
 
•	
Enable  Mail notifications  to allow Azure AD send email 
notifications to reviewers when an access review starts and to 
administrators when a review completes.
	
 
 
 
•	
Enable Reminders to allow Azure AD send reminders of access 

92      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
reviews in progress to reviewers who have not completed their 
review.
 
4. Once you have created access review for the Azure AD role, you will see it 
soon under the list of reviews. You can click on this review; you will be taken 
to the dashboard to see options to manage this review. If the start date was 
the current date and has been started, then the review will be in active status, 
and if the start date is in future, the status will be not started. You cannot 
prepone the review if you have set a later date, but you can change the end 
date any time.
 
5. On the dashboard, you will see the following details. When any reviewer 
approves or denies access, he/she is just telling whether you are still using 
this role or not. Users choose  Approve  if they want to stay in the role 
or Deny if they do not need the access anymore. Users’ access and status 
won’t change right away, until the administrator applies the results:
Figure 2.17: Azure AD PIM access review dashboard
	
6.	 Under Results, you can see who has completed the review, what reason is 
provided, and what action is applied. You can apply the action manually 
also from here and see the system recommendations:

Configuring Secure Access by Using Azure Active Directory      93
Figure 2.18: See Azure AD PIM access review result
	
7.	 You can manage reviewers under Reviewers. You can add and remove 
reviewers and send a reminder to reviewers. The review should be in the 
active state in order to send the reminder:
Figure 2.19: Manage Azure AD role reviewers
	
8.	 Under Settings, you can modify the settings which you made while creating 
this review.
	
9.	 Audit logs give you visibility about activities that happen on this review.
In this section you learnt how to define passing parameters for an Azure AD role, 
how to enable Azure AD PIM role for a user, how to setup alerts for Azure AD PIM 
role, and how to create access review.
Administrating Azure AD PIM for Azure AD roles
In the preceding sections, you learned how you can set up Azure AD PIM and how 
you can manage or set up PIM for Azure AD roles. Now in this section, you will 

94      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
learn how to administrate or complete assigned tasks related to Azure AD roles. You 
may be assigned as a reviewer for some review access or you may be assigned as an 
approver for some eligible roles:
 
•	
My roles: Here, you can see all permanent and eligible roles that are assigned 
to you. You can also see the other roles that are assigned to you but have not 
yet been activated.
 
•	
My request: Here, you can see the status of your requests which you might 
have raised to activate any privilege role. You can revoke any request made 
by you.
 
•	
Approve request: Being an approver, here you can take decisions on the 
request raised by someone to activate their eligible role.
 
•	
Review access: If you are assigned as a reviewer for any review access task, 
then you can check the reviews pending with you.
In the previous version of PIM for Azure AD roles, you had only two 
options for role assignment: eligible and permanent. Now, you can set a start 
and end time for each type of assignment. The new addition of Azure AD 
PIM gives you four possible states in which you can place an assignment:
 
•	
Eligible permanently
 
•	
Active permanently
 
•	
Eligible with specified start/end dates for assignment
Active with specified start/end dates for assignment
Another new feature added to Azure AD PIM, in previous version you 
could only configure activation settings on a per-role basis. That is, 
activation settings such as multi-factor authentication requirements and 
incident/request ticket requirements were applied to all users eligible 
for a specified role. Now, you can configure whether an individual user 
needs to perform multi-factor authentication before they can activate a 
role.
Managing Azure AD PIM for Azure resources
In the previous section, you configured Azure AD PIM for Azure AD roles. 
You understood how to manage, configure, audit, and set alerts for Azure AD 
directory roles. Azure AD PIM gives feasibility to configure, manage, and control 
privilege access over Azure resources. You can set up PIM at the subscription level, 

Configuring Secure Access by Using Azure Active Directory      95
management groups, resource groups, or individual resource. In this section, let’s go 
through what you can do in Azure AD PIM for Azure resources.
Administrating Azure AD PIM for Azure resources
You will learn how to administrate or complete assigned tasks related to Azure 
resources. You may be assigned as a reviewer for some review access or you may be 
assigned as an approver for some eligible role. You should be aware of few things 
while administrating Azure AD PIM roles. Here is a list of them: 
 
•	
My roles: Here, you can see all permanent and eligible roles that are assigned 
to you.
 
•	
My request: Here, you can see the status of your requests which you might 
have raised to activate any privilege role. You can revoke any request made 
by you.
 
•	
Approve request: Being an approver, here you can take decisions on the 
request raised by someone to activate their access on Azure resources.
 
•	
Review access: If you are assigned as a reviewer for any review access task, 
then you can check the reviews pending with you.
Managing Azure resource roles
You can manage built in and custom Azure resource roles through Azure AD PIM. 
Subscription owners, subscription user access administrators, and Azure AD global 
administrators who enable subscription management in Azure AD have resource 
administrator permissions by default. These resource administrators can assign 
roles, configure role settings, and review access using Azure AD PIM for Azure 
resources. A user can’t manage Azure AD PIM for Azure resources without having 
resource administrator permissions. 
Azure resource role assignment in Azure AD PIM
Before you assign any Azure resources role through Azure AD PIM, you can 
configure settings for Azure resource roles. These settings will define the passing 
parameters users must pass to activate their role. To configure passing parameters 
settings for roles, perform the following steps:
	
1.	 Log in to the Azure portal with the privilege role administrator role and go 
to Azure AD PIM.

96      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
2.	 Select Azure resources under the Manage section. Now click on Discover 
resources, you can filter resources you want to manage from the Resource 
filter drop-down menu. Once you select the appropriate resource type, click 
on Manage resources to manage resources through Azure PIM:
 
Figure 2.20: Select the resources which you want to manage through the Azure resource role
	
	
Once you onboarded any Azure resources in Azure resources PIM, 
you cannot offboard them. Although you still will be able to 
manage role assignment outside Azure PIM as a usual method.
	
3.	 Now click on the onboarded resource and go to Settings under Manage. A 
new blade opens which shows all available resource roles for the selected 
resource in Step 2:
 
Figure 2.21: Select the resources role for which you want to modify passing parameters 
	
4.	 You can select any role to modify passing parameters. The passing parameters 
have same configurations as described in previous section “Manage Azure 
AD PIM for Azure AD roles”. You can follow steps described under “Role 
assignment” section to set up the passing parameters and settings for any 
Azure resources role.

Configuring Secure Access by Using Azure Active Directory      97
Once you have configured the role setting, you can do role assignments. Let’s follow 
these steps to assign Azure resource roles:
	
1.	 Select Roles under the Manage section. You can see a list of resource roles.
	
2.	 Click on the desired role. A new page will open, there you can see three tabs 
Eligible assignments, Active assignments, and Expired assignments. On 
the same page, click on + Add Assignments to assign this role to any user. 
A new window will open and there you can select users. Once you add the 
user, you can see the role assignment type as Eligible. 
 
Figure 2.22: Assign an eligible role to a user
	
	
Here I choose Azure resource role Owner. In Eligible assignments, Active 
assignments, and Expired assignments tabs you can see the list of users 
with eligible assignments, active assignments, and expired assignments 
respectively.
In this section you learnt how to set up passing parameters and settings for Azure 
resources roles in Azure PIM and then how to assign Azure resources role to a user 
through Azure resource PIM.
Managing assignments
Here, you can manage the members’ access. You can see who all have access on 
which resource and what level of access. You can add and revoke permissions for 
members to resources.

98      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Managing alerts
Azure AD PIM generates alerts when there is a suspicious or unsafe activity in your 
organization. When an alert is triggered, it shows up on the Alerts page. There are 
few preconfigured alerts which get triggered when the threshold meets. You can 
configure the threshold under Alerts. There are three severity levels: high, medium, 
and low.
Managing access review
Here you can create access review for Azure resource role assignment. This access 
review process has similar configuration as we discussed in Azure AD role access 
review. Please refer to that section to understand the access review for Azure resource 
roles.
Activating Azure AD and Azure resource role in 
PIM
If you have been assigned any eligible role for a privileged administrative role, 
that means you can activate that role when you need to perform privileged actions. 
For example, if you occasionally deploy applications in Azure AD and also create 
resources in a resource group, your organization’s privileged role administrators 
may not make you a permanent application administrator and not give you the 
owner access on the resource group, since that role impacts multiple users and 
resources, respectively. So, they make you eligible for Azure AD roles as application 
administrators and also make eligible for the Azure resource role as the owner for the 
resource group where you want to create a new resource. You can request to activate 
those roles when you need its privileges, and then you’ll have the administrator and 
owner control for a predetermined time period.
In this section, you will understand how to activate your Azure AD and Azure 
resource role in Azure AD PIM. Follow these steps to activate your roles:
	
1.	 Log in to the Azure portal and go to Azure AD PIM.
	
2.	 You can manage your roles from My roles under Tasks. Click on my roles 
and a new window opens.
	
3.	 Here, you will see options to activate different roles such as Azure AD roles, 
and Azure resources roles.
	
4.	 You can choose the appropriate option to activate your eligible role. You will 
see the list of eligible roles assigned to you:

Configuring Secure Access by Using Azure Active Directory      99
 Figure 2.23: Choose the assigned eligible role to activate 
	
5.	 Click on Activate to activate your role. You will be asked to provide 
justification for your role activation as per the role’s passing parameter and 
settings.
	
6.	 In the next step, you do not need to do anything, but Azure AD PIM 
processes your role activation request and validates that the activation 
process was successful and asks you to sign out and re-login to start using 
the new activated role. It will ask you to through the passing parameters 
to activate the role, if the privilege role administrator would have set them 
under Settings > Roles > Application Administrator.
	
7.	 Once you activate your eligible role, you can see your active role under 
Active assignments.
Figure 2.24: See your active role assignments
	
	
As you can see in preceding figure, you get an option to Deactivate your 
role, so you can also deactivate your active role from this tab.
In this section you learnt how to activate your eligible role and how to see your 
active roles.

100      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Azure AD multi-factor authentication (MFA)
Through MFA, you can get multi-layer security enablement for your user’s 
authentication. This extra layer of security provides challenge to hackers. 
Authentication through MFA includes a combination of the user’s password and 
input from another authentication method. Azure MFA safeguards applications 
and data by requiring an input from the second authentication method along with 
the user password. Azure MFA provides multiple options to use for the second 
authentication method. We will see them in the upcoming sections.
The following are some use cases of MFA:
 
•	
When an extra layer of security is required for secure login.
 
•	
Because of conditional access, you may be asked to verify your identity.
 
•	
You want to use self-service password change to reset your password.
We will see some of these use cases in the upcoming sections.
MFA methods
Here are the available second level of authentication methods:
 
•	
Password
 
•	
Voice call
 
•	
SMS
 
•	
App passwords
 
•	
Microsoft authenticator app
 
•	
OATH hardware token
Microsoft has come up with two new features to simplify the user experience in 
securing them:
 
•	
Passwordless authentication
 
•	
Combined security information registration
They are explained as follows:
 
•	
Passwordless is more favorite with users because in this, the password needs 
to be removed and replaced with something you have and something you 
are or something you know. In something you have, you can consider the 
devices like Windows 10 device, phones, and security keys. In something you 
are, it’s about your biometric signs like fingerprint, face, or voice recognition. 
In something you know, it’s about the PIN or password.

Configuring Secure Access by Using Azure Active Directory      101
	
	
Passwordless authentication has three methods to be used by organizations 
depending on their requirement:
 
 
•	
Windows Hello for Business
 
 
•	
FIDO2 security keys
 
 
•	
Microsoft authenticator app
 
•	
Combined security information registration is a simplified way to register for 
MFA and self-service password reset (SSPR) in one shot. Earlier, users must 
register two times to enable MFA and SSPR. That process was a little frustrating 
for users because of similar steps being used for both the registrations. Now, 
with this feature, users register once and get the benefit of both. 
Versions of Azure MFA
There are four versions of Azure MFA:
 
•	
Free Option: It comes up with the default security benefits for the users who 
have free Azure AD. It has a limit of 5,00,000 directory objects.
 
•	
MFA for Azure AD administrators: Azure provides an extra layer of security 
free of cost for privileged users such as Azure AD global admin.
 
•	
MFA for Office 365: Since this is part of O365 subscription, so this has been 
used to manage O365 users. This has been managed from O365 or Microsoft 
365 portal.
 
•	
Azure MFA: This is the full version of offering. It has maximum features 
available. This comes up with Premium Azure AD subscription.
You can choose the required version based on your business requirement.
Prerequisites to check before setting up MFA
Depending on the environment setup, you need to check the prerequisites before 
enabling Azure MFA. Few scenarios are described as follows:
 
•	
Cloud-only  identity environment: This has Azure only AD setup with 
Azure only users and directory objects. For such a kind of setup, there is no 
need to check any extra setup. Azure MFA is very much compatible without 
any more requirement.
 
•	
Hybrid identity environment: This has users synced from on-premise AD 
to Azure AD. To enable Azure MFA for this scenario, you must check that 
Azure AD Connect is deployed and users’ identities are synced from the on-
premise AD to Azure AD.

102      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
On-premise legacy applications published for cloud access: In this case, 
you must check whether the Azure AD application proxy setup is deployed 
or not.
 
•	
Use Azure MFA with RADIUS authentication: In this scenario, you should 
have a Network Policy Server (NPS) deployed to serve your RADIUS 
authentication request.
Steps to enable and disable Azure MFA for users
In this section, we will go through the steps to enable and disable Azure MFA for 
your Azure AD users:
	
1.	 Log in to the Azure portal with global admin privileges and search for Azure 
Active Directory in Azure portal search bar.
	
2.	 In Azure Active Directory, go to Users. Select the All users option. You will 
see Per-user MFA option on this page:
Figure 2.25: Select users in Azure AD
	
3.	 When you click on the MFA option, you will be redirected to a new web 
page. Here, you can select users to whom you want to enable or disable 
Azure MFA:
Figure 2.26: Enable Azure MFA for selected users in Azure AD

Configuring Secure Access by Using Azure Active Directory      103
	
4.	 There is an option to update the MFA status in bulk also. So, if you don’t want 
to select users one by one or you have custom requirement where you want 
to enable MFA for few users, and if you want to disable MFA for few other 
users, then you can upload a CSV and Azure will take care of MFA update 
for listed users. Once you click on bulk update, a box opens to upload the 
CSV file:
Figure 2.27: Upload CSV for bulk MFA update in Azure AD
	
	
You can download the sample file from the same box. Make sure that you do 
not make any changes in columns’ name. You just need to fill the required 
information such as username and status to make.
All users’ initial status will be Disabled. When you enroll users in Azure 
MFA, their state changes to Enabled and when enabled users sign in and 
complete the registration process, their state changes to Enforced.
Configuring Azure MFA settings
Before enabling Azure MFA, let’s make arrangements in the MFA settings. So, once 
the MFA is enabled, these settings reflect to users. You will learn about the available 
feature in Azure MFA, but not all features are available in every version of Azure 
MFA. You need to choose the proper Azure MFA version based on your requirement. 
Here is list of the MFA version and available feature with them:
	
1.	 To make configuration in Azure MFA, go to Azure Active Directory > 
Security > Multi-Factor Authentication and click on Additional cloud-
based MFA settings:

104      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 2.28: Select the option to configure additional setting for Azure MFA
	
2.	 This will open another web page; here, you can set up the second verification 
option, exclusion for trusted IP locations, and so on:
Figure 2.29: Fill the Azure MFA settings

Configuring Secure Access by Using Azure Active Directory      105
 
 
•	
app passwords: Some legacy applications like Office 2010 and Apple 
mail before iOS 11 do not support multifactor authentication. These 
applications were not designed to support the MFA. For these applications, 
you can use the app password feature to bypass the MFA. App password 
is automatically generated and because of its complexity, it is very hard 
to crack for attackers. App passwords cannot be used to authenticate 
on-premises systems, because app passwords are not known outside the 
work or school accounts.
 
 
•	
trusted ips: Administrators enable this feature to bypass MFA for users 
who are signing in from the company Intranet. It can work for both 
managed and federated users but sign in should happen only from 
the company Intranet. If the federated user signs in from outside the 
company Intranet or private IP range, then they must go through the 
MFA. You can set up maximum 50 IP ranges in the trusted IP. This feature 
is only available in full version on Azure MFA.
 
 
•	
verification options: You can choose the available verification methods 
for your user. So, when they register themselves, they can choose methods 
from the options which you allowed for them. The available verification 
methods are as follows:
 
 
 
•	
Call to phone
 
 
 
•	
Text message to phone
 
 
 
•	
Notification through mobile app
 
 
 
•	
Verification code from mobile app or hardware token
 
 
•	
remember multifactor-authentication: This feature can be enabled to 
bypass the subsequent MFA requests for a specified number of days, after 
they have successfully signed into a device by using MFA. This feature 
saves a persistent cookie on the browser when you select Don’t ask again 
for X days. Until the cookie is not expired, the user will not be prompted 
for MFA again. If the user opens a different browser on the same device 
or clears the cookie, they will be prompted for MFA again.
	
	
	
Non browser applications like Outlook, Skype of Business, Teams, 
and many more support modern authentication methods but still 
for them Don’t ask again for X days option will not be shown. But still 
in the background, Azure AD verifies the token and bypasses your 
authentication for X days.
Apart from the preceding settings, there are multiple other settings available on the 
Azure MFA home page. You can opt for them based on your requirements and your 
Azure MFA version. Let’s go through them one by one to understand them in detail:

106      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Account lockout: This feature locks out the user account temporarily after 
multiple wrong login attempts.
 
•	
Block/unblock users: This feature will block users to get the MFA 
authentication request. So, by doing this, any authentication request from the 
blocked user will be denied automatically. By default, the account remains 
blocked for 90 days.
	
	
1.	 To block any user, go to Multi-Factor Authentication > Block/unblock 
users. 
	
	
2.	 Click on + Add to block a user.
	
	
3.	 Enter the username for the blocked user as username@domain.com. Enter a 
comment about blocking in the Reason field:
Figure 2.30: Select a user to block
	
	
4.	 Select Add to finish the blocking process.
	
	
5.	 Similarly, to unblock users, go to Multi-Factor Authentication > Block/
unblock users 
	
	
6.	 Select Unblock in the Action column next to the user to unblock:
Figure 2.31: Select a user to unblock
	
	
7.	 Enter the reason of unblocking the user:

Configuring Secure Access by Using Azure Active Directory      107
Figure 2.32: Put a reason of unblocking the user
	
	
	
Click on OK to finish the process.
 
•	
Fraud alert: This feature allows users to report fraudulent attempts happened 
to access their account or data:
	
	
1.	 To enable this, go to Multi-Factor Authentication > Fraud alert.
	
	
2.	 Change Allow users to submit fraud alerts to On as shown in the 
following figure:
Figure 2.33: Enable a fraud alert in Azure MFA
	
	
3.	 Click on Save to save your configuration.
	
	
An administrator can see the fraud report from the Azure Active Directory. 
Go to Azure Active Directory > Sign ins.
 
 
•	
Block user when fraud is reported: If this configuration is set, the user 
gets blocked for 90 days or until an administrator unblocks the account. 
An administrator can see the sign in activities from Azure AD and can 
take appropriate actions to prevent such things in future.
 
 
•	
Code to report fraud during initial greeting: When users get a voice 
call for second verification, generally they press # to confirm their sign 

108      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
in. But in case of the fraud report, they press a code before pressing #. By 
default, this code is 0. You can customize this setting and can choose any 
other code to be pressed to report fraud before pressing #.
 
• 
Notifications: Here, you need to configure the email address of the user who 
is going to receive fraud alert emails. Generally, it is security admins who 
should get such notifications:
Figure 2.34: Enable notifications in Azure MFA
 
• 
OATH tokens: It is kind of hardware tokens provided by multiple vendors 
such as Token2, DeepNet Security, and so on. You need to enter details 
about each token associated with the respective user. You can upload a CSV 
with the details of multiple users. The CSV should have the columns such 
as the UPN of user, serial number of the token, secret key of the token, time 
interval to refresh the code, manufacturer of the token, and model of the 
token:
Figure 2.35: Register OATH tokens in Azure MFA
 
• 
Phone call settings: Here, you can define settings for a voice call such caller 
number, custom greetings, language of the greeting message, and so on:
 
 
• 
MFA caller ID number: You can set up a number from which users will 
get the call for second authentication. Only US numbers are allowed in 
this field:

Configuring Secure Access by Using Azure Active Directory      109
Figure 2.36: Set up caller ID number in Azure MFA
 
 
• 
Custom voice message: Here, you can upload a custom greeting for two-
step authentications. The recording message should not be longer than 
20 seconds and larger than 1 MB and the supported file types are .wav 
and .mp3. To upload, click on + Add greeting. A new window will open. 
You can choose the type of message for which you want to upload the 
custom recording and default language of the greeting to be played:
 
• 
One-time bypass: This feature allows a user to authenticate one time without 
performing the second-step verification. This bypass is temporary and gets 
expired after a specified number of seconds. This is helpful where the mobile 
app or phone does not receive a notification or phone call; you can allow a 
one-time bypass so the user can access his desired resources.
	
	
Steps to set up one-time bypass are as follows:
	
	
1.	 Go to Multi-Factor Authentication > One-time bypass, and click on + 
Add.
	
	
2.	 Enter the username of the user in the format username@domain.com.
	
	
3.	 Enter the number of seconds that the bypass should pass and enter the 
reason of bypass.
	
	
4.	 Click on OK. The time starts immediately and the user needs to sign in 
before the bypass expires:

110      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 2.37: Set up one-time bypass in Azure MFA
	
•	
Caching rules: Here, you can set up the time duration for which 
reauthentication will not be asked after the first authentication. So, once 
a user has been authenticated, Azure will not ask for reauthentication till 
caching time duration. This caching can be set for a user, an application, or 
IP address. Following are the steps to configure caching:
	
	
1.	 To enable this, go to Multi-Factor Authentication > Catching rules. 
Click on + Add.
	
	
2.	 Select the cache type from the drop down and enter the maximum 
number of seconds.
	
	
3.	 Click on OK.
Figure 2.38: Set up caching rules in Azure MFA
In this section, we studied about Azure MFA. We learned what is Azure MFA, the 
features it provides, and how to configure Azure MFA for a user. We also saw the 
different versions of Azure MFA with their capabilities.
Azure AD conditional access
Conditional access is modern identity and access management tool used by Azure 
AD. It brings multiple signals together to make decisions and enforce organizational 

Configuring Secure Access by Using Azure Active Directory      111
policies. Conditional access policies are just if-then statements, if a user wants to 
access a resource, then they must complete an action or meet some requirements. For 
example, if a user is a global administrator in Azure tenant, then he/she should go 
through MFA to log in to the Azure portal.
Conditional access policies are enforced and evaluated after the first-factor 
authentication has been completed. Conditional access is not intended as an 
organization’s first line of defense. To enforce this feature, you need the Azure Active 
Directory Premium P1 license. You need to be a global administrator, or security 
administrator to create and manage the conditional access policy.
Building components of Azure AD conditional 
access policy
As explained in the preceding section, the policy is an if-then statement. The 
conditional access policy can be divided into two parts:
 
•	
Assignment: Here, you can define the target to whom, to what, and from 
where. It decides for whom this is applied, what condition will be applied, 
and from where the access request is coming. So, let’s understand them:
	
	
• 
Users and groups: Here, you can define who are all included or excluded 
from the policy. This assignment can include all users, specific groups of 
users, directory roles, or external guest users.
	
	
• 
Cloud apps or actions: Here, you can define what cloud apps and user 
actions are included or excluded from the policy.
	
	
• 
Conditions: Here, you can define the condition of policy; a policy can 
have multiple conditions associated. I will take you through different 
conditions in the upcoming sections.
	
• 
Access control: Here, you can define the action against your condition. You 
can control the access based on the fulfilment of conditions and failures to 
meet the condition:
	
	
• 
Block access: It will block access in case of specific conditions. You need 
to be careful before enforcing this. This can affect your access also.
	
	
• 
Grant access: It will allow users to access resources but will trigger 
enforcement of one or more controls from the following list. Being an 
administrator, you can choose what all you want to select:
	
	
	
• 
Require MFA.
	
	
	
• 
Require a device to be marked as compliant

112      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
	
• 
Require hybrid Azure AD joined device
	
	
	
• 
Require an approved client app
	
	
	
• 
Require the app protection policy
	
	
• 
Session: Here, you can give partial access to the user. For example, if a 
user is not meeting a particular condition, then he/she may be able to 
log in but won’t be able to modify things. So, in this case, you can give 
partial access.
Available conditions in Azure AD conditional 
access
When this happen is called the condition, then do this is called an access control. The 
combination of these both is called the conditional access policy. The conditions 
configured in the policy are only applied, which you have not configured are not 
applied. Let’s see the available conditions and see how you can use them:
	
• 
Users and groups: The Users and groups condition is mandatory in a 
conditional access policy. In your policy, you can either select All users or 
select specific users and groups:
Figure 2.39: Set up users to be included for Azure AD conditional access
	
	
When you select All users, your policy is applied to all users in the directory, 
including guest users.
	
	
When you select Select users and groups, you can set the following options:
 
•	
All guest users (preview): It targets a policy to B2B guest users. This condition 
matches any user account that has the userType attribute set to guest. You 
should use this setting when a policy needs to be applied as soon as the 
account is created in an invite flow in Azure AD.

Configuring Secure Access by Using Azure Active Directory      113
 
 
• 
Directory roles (preview): It  targets a policy based on a user’s 
role assignment in Azure AD like  a security administrator, global 
administrator, users administrator, or password administrator.
 
 
• 
Users and groups: It targets specific sets of users and/or groups. For 
example, you can select a group that contains all members of the account 
department when an account app is selected as the cloud app. A group 
can be any type of group in Azure AD, including dynamic or assigned 
security and distribution groups.
	
	
You can also exclude specific users or groups from a policy. One common use 
case is service accounts if your policy enforces MFA.
	
•  Cloud apps and actions: The  Cloud apps or actions  condition is also 
mandatory in a Conditional Access policy. In your policy, you can either 
select All cloud apps or specify apps with Select apps.
	
	
When you choose:
 
 
• 
All cloud apps: You choose this when you want to apply this to the entire 
organization.
 
 
• 
Select apps: You choose this to target specific services by your policy. 
For example, you may require users to have a compliant device to access 
Microsoft Teams or Outlook. This policy is also applied to other services 
when they access Outlook content.
	
• 
Sign-in risk: There may be chances that the user’s identity needs to be 
compromised and an unauthorized person tries to log in either from an 
unknown location or device. To prevent unauthorized access, Azure AD 
calculates the sign in risk based on certain parameters such as usual login 
locations, usual login device, usual login time, and so on. This calculation 
happens during the user’s sign in process.
	
	
There are four risk levels as per Azure AD’s calculation and you can choose 
among those four to apply a Conditional Access policy:
 
 
• 
High
 
 
• 
Medium
 
 
• 
Low
 
• 
No Risk
	
	
You can block access for high-risk users or can enable the second factor 
authentication for high and medium risk users. You should have Azure AD 
Identity Protection enabled to use this feature.
 
• 
Device platform: You can control users access based on their device’s 
operating system. You can set which operating system’s devices can be 
allowed and which can be blocked.

114      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
• 
Device state: You can control access based on the device whether it is complaint 
or not. You would not like users to access your app or infrastructure from an 
unpatched device, or a device which does not meet anti-virus requirement, 
or a device which is not part of your domain.
 
• 
Locations: You can define a condition from where the connection was 
attempted. You can select:
 
• 
Any location: All networks, including your intranet and extranet.
	
	
All trusted locations: This may have your office network IP ranges, countries, 
or regions.
	
	
Selected locations: This may have your office network IP ranges or some 
selected extranet public IPs.
	
•	
Client apps: You can apply the conditional access policy based on the types 
of applications such as browser apps, mobile app, or desktop clients.
Azure AD conditional access report only mode
As I said in earlier sections that you need to be careful while applying the policy; this 
may block your access also, if not be applied with proper conditions and for the right 
audience. You would not like to come in that situation where you end up blocking 
genuine and compliant users. Sometimes, the target audience is also not confirmed, 
and you would not like to again mess up with the access of compliant users.
To make this private, you would like to be sure about the users, groups, and 
applications for which you want to apply the condition access policy and what 
policy needs to be apply. Report-only mode allows administrators to evaluate the 
impact of Conditional Access policies before enabling them in their environment.
Once you enable Report-only mode, Azure Conditional Access will not restrict any 
user’s access but it just creates respective logs. You can see these logs in Azure Active 
Directory > Sign ins (under the Monitoring section). Report-only mode creates four 
kinds of events:
 
• 
Report-only: Success: All the conditional polices and non-interactive grants 
were passed successfully by selected users.
 
• 
Report-only: Failure: All the conditions were satisfied but all non-interactive 
grants were passed successfully.
 
• 
Report-only: User action required: All configured policy conditions were 
satisfied but user actions would be required to satisfy the required grant 
controls.

Configuring Secure Access by Using Azure Active Directory      115
 
• 
Report-only: Not applied: Not all configured policy conditions were 
satisfied because the user was not part of this testing. For example, the user is 
excluded from the policy or the policy only applies to certain trusted named 
locations.
Azure AD Conditional Access What If tool
Like Report-only setup, What if is also a testing tool, which helps you to determine 
the impact of a specific policy on a specific user. So, you can determine what will 
happen if being an administrator, a certain policy can be applied on you. Certainly, 
you would not like to block your or other administrators’ access by applying the 
wrong policy.
This tool helps you to reduce your multiple sign ins while testing the impact of the 
policy. This tool simulates the user’s sign in process and gives a simulation report. It 
detects all the applied policies in a user.
To start the simulation, first you need to do some settings:
	
1.	 Go to Azure Active Directory > Security > Conditional Access and select 
What if option at home page of Conditional access:
Figure 2.40: Set up What-if in Azure AD conditional access

116      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
You can fill the required values in their respective fields to create a policy. User 
is the only mandatory field; you can select only one user for the simulation 
process. Once the evaluation is complete, you will see the report. The report 
tells you all the policies that will be applied to the user, all the policies that 
will not be applied, and an indicator which shows if you have any classic 
policy in your environment:
Figure 2.41: See the applied conditional access policies 
Service dependencies in Azure AD Conditional 
Access
There are multiple Microsoft apps which can access or have dependencies on other 
services. Let’s understand this by an example. You are using Microsoft Teams, but 
you can access other applications or services directly from Microsoft Teams such as 
MS Planner, Skype for Business, SharePoint, and Exchange. So, if you have a setup 
a policy to use MFA for someone who wants to access Exchange. Although, you are 
not logging in directly to Exchange and just signing in to MS Teams, you need to go 
through the MFA because you are subject to the Exchange MFA policy 
The policy enforcement can happen in two ways, depending on the relation between 
calling app and downstream apps:
 
•	
Early-bound policy enforcement means a user must satisfy the dependent 
service policy before accessing the calling app. For example, a user must 
satisfy the Exchange MFA policy before signing into MS Teams.

Configuring Secure Access by Using Azure Active Directory      117
 
•	
Late-bound policy enforcement occurs after the user signs in to the calling 
app. Enforcement is deferred to when calling app requests a token for the 
downstream service. For example, there is no need to go through the MFA 
until you really access Exchange from MS Teams. So, for only accessing 
MS Teams, you will not be prompted for MFA, but if you want to access 
Exchange after logging in to MS Teams from the MS Teams, then you will be 
prompted for MFA.
Set up location-based Azure AD 
Conditional Access
The location condition of a Conditional Access policy enables you to tie access 
controls settings to the network locations of your users. The use cases of this 
condition are as follows:
 
•	
Allow users without MFA from specified locations.
 
•	
Block users’ access when the connection is been established from a specific 
country or region.
Ask for MFA when the user accesses services from outside the office network.
Let’s follow the given steps to set up location-based condition:
	
1.	 Log in to the Azure portal and go to Azure Active Directory.
	
2.	 Click on Security under the Manage section.
	
3.	 Click on Conditional Access under the Protect section.
	
4.	 Click on Named locations. It will open a new window. You will see three 
options there, Countries location, IP ranges location, and MFA trusted 
IPs. In countries location option, you can choose the countries for trusted 
and untrusted location. The countries’ location can be determined by their 
IP addresses or GPS coordinates. In IP ranges location option, you mark 
trusted and untrusted location based on locations’ public IP addresses. In 
MFA trusted IPs option, you can put trusted private IP addresses of your 
office network.
	
5.	 Now click on + Countries location to set Named locations based on 
countries.

118      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 2.42: Set named location based on countries
	
	
A new window will open, there you can put a name for this new location, 
you can choose between IP address and GPS coordinates to determine the 
countries. Now selected the countries from the list which you want to mark 
for trusted or untrusted location. Here as shown in preceding figure, I choose 
United States and United Kingdom as trusted countries and these countries 
will be identified by their IP addresses.
	
	
Location determination by GPS coordinate collects user’s mobile device 
location where they are running the Microsoft authenticator app. When 
you choose Determine location by GPS coordinates option to determine 
location, the user will need to have Microsoft authenticator app installed in 
their mobile device.
	
6.	 Click on + IP ranges location to set up Named location based on public IP 
addresses.
	
Figure 2.43: Set named location based on IP addresses

Configuring Secure Access by Using Azure Active Directory      119
	
	
A new window will open, there you can put public IP addresses of the 
devices to mark them trusted or untrusted IP addresses. Here I am putting a 
public IP of my VPN devices and checking the box Mark as trusted location 
to trust any network traffic coming from this IP address range.
	
2.	 Click on Configure MFA trusted IPs to set up Named location based on your 
network private IP addresses.
Figure 2.44: Set trusted IP addresses in Azure MFA
	
	
It will open a new web page, here you can put private IP addresses of your 
network.
	
1.	 Once you have created the named location, click on Policies and + New 
Policy.
	
2.	 Fill in the required fields as shown in the following figure:

120      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 2.45: Set up Azure AD conditional access policy based on the trusted location
 
 
•	
Name: Name of this conditional access policy.
 
 
•	
Users and groups: Select the user or group to be included or excluded 
from this conditional access policy.
 
 
•	
Cloud apps or actions: Select the cloud app which you want to include 
or exclude from this conditional access policy.
 
 
•	
Condition: Select the condition for which you want to create this policy. 
There are multiple conditions supported by Azure Conditional access 
policy, such as User risk, Sign-in risk, Device platforms, Locations, Client 
apps, Device states, Filter for devices.

Configuring Secure Access by Using Azure Active Directory      121
 
 
•	
Grant: Set the permission for selected users and groups; either grant or 
block.
 
 
•	
Session: Do you want to keep a persistent session?
	
10.	 Click on Create.
The location-based conditional access policy is successfully created and applied to 
selected users.
Set up Azure AD Conditional Access to 
enforce MFA for administrators
Administrator accounts are highly critical entities in Azure AD. These are 
mostly targeted by hackers. You can easily reduce the risk by enforcing MFA for 
administrators.
You can choose administrator roles for this condition based on your requirement. 
But it is recommended that you include the following list of roles in this condition:
 
•	
Global administrator
 
•	
SharePoint administrator
 
•	
Exchange administrator
 
•	
Conditional Access administrator
 
•	
Security administrator
 
•	
Helpdesk administrator
 
•	
Password administrator
 
•	
Billing administrator
 
•	
User administrator
It is recommended that you exclude Emergency access or break-glass accounts to 
prevent tenant-wide account lockout. In the unlikely situation, all administrators 
are locked out of your tenant; your emergency-access administrative account can be 
used to log in to the tenant to take steps to recover access.
Likely, you would like to exclude service accounts and service principles to 
be excluded from this condition. Service accounts are the accounts which are 
not associated with any user but they have been used to run some services 
programmatically. They are mostly used under codes and scripts, since service 
accounts are working programmatically so they can’t response to MFA. Azure has 
come up with a new feature called Managed Identities; you can replace your service 
accounts with managed identities.

122      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Create the Conditional Access policy to 
enforce MFA for administrators
It is recommended that you have MFA enabled for highly privileged accounts such 
as administrators. Let’s follow the given steps to set up Azure MFA for Azure AD 
administrative accounts:
	
1.	 Log in to the Azure portal with the required role and go to Azure Active 
Directory. 
	
2.	 Go to Security (under the Manage section) > Conditional Access (under the 
Protect section).
	
3.	 Click on Policies and then + New Policy.
	
4.	 Fill in the required details as shown in the following figure:
Figure 2.46: Set up Azure AD conditional access policy for administrators
 
 
•	
Name: Name of the conditional access policy.

Configuring Secure Access by Using Azure Active Directory      123
 
 
•	
Users and groups: Under this, go to Include, and choose the Select users 
and groups option. Now, choose Directory roles. It will open a drop-
down menu of all available directory roles. You can select the required 
roles from this list.
	
	
	
Now, go to Exclude, select  Users and groups  and choose your 
organization›s emergency access or break-glass accounts.
	
	
	
Click on Done.
 
 
•	
Cloud apps and actions: Go to Include, and select All cloud apps. Click 
on Done.
 
 
•	
Conditions: No need for any condition here as the condition is already 
defined in terms of directory roles.
 
 
•	
Under  Access controls  >  Grant, select  Grant access,  Require multi-
factor authentication, and click on Select.
 
 
•	
Click on On to enable the policy.
In this section, we saw how to enable Azure MFA for administrative directory roles 
through Conditional Access.
Set up Azure AD terms of use
You would have seen prompts which ask you to accept terms before moving forward 
to access some tools or web pages. You can ask users to accept your terms before they 
access your applications. You can set up such practice for your organization through 
Azure AD Conditional Access Terms of Use. The following are few use cases where 
you would like to use terms:
 
•	
Require employees or guests to accept your terms of use before getting 
access.
 
•	
Require employees or guests to accept your terms of use on every device 
before getting access.
 
•	
Require employees or guests to accept your terms of use on a recurring 
schedule.
 
•	
Present general terms of use for all users in your organization.
You will require Azure Active Directory Premium P1 or Premium P2, EMS E3 or EMS 
E5. You will require the access level of a global administrator, security administrator, 
or Conditional Access administrator.
Azure terms of use uses the PDF format document to present content. For mobile 
devices, the recommended font size is 24 points.

124      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Set up Azure term of use
Follow the given steps to set up your own terms of use:
	
1.	 Prepare a PDF document with your terms, which you want users to accept.
	
2.	 Log in to the Azure portal with proper access.
	
3.	 Go to Conditional Access and click on Terms of use.
	
4.	 Here, you have multiple options; click on + New terms.
	
5.	 Fill in the required information as shown in the following figure:
Figure 2.47: Set up terms of use in Azure AD conditional access 
 
 
•	
Name: This is the name of the term. This name is limited to the Azure 
portal and can be used only to manage things inside the portal.
 
 
•	
Display name: This name will be visible to end users when they sign in.
 
 
•	
Terms of use document: Upload the PDF document that contains terms 
of use, which the end user must accept. You can select multiple versions 

Configuring Secure Access by Using Azure Active Directory      125
of the term of use document in different languages. The document will be 
shown to the end user in his preferred language. The preferred language 
will be selected from his/her browser settings.
 
 
•	
Require users to expand the terms of use: Set it On, if you want users to 
see the terms before accepting them.
 
 
•	
Require users to consent on every device: Set it On, if you want users to 
accept terms on every device from they are accessing.
 
 
•	
Expire consents: If you want to renew terms periodically and want to set 
up the expiry date for every version, then you can set it here.
 
 
•	
Expire starting on: You can set up from when the expiry period will start.
 
 
•	
Frequency: It tells after Expire starting on date, in what period the 
consent will expire. Let’s understand it in this way, suppose you set 15 
April 2020 as the expire start date and select Bi-annually the frequency 
of expire, then the consent will expire on 15 October 2020.
 
 
•	
Duration before re-acceptance required (days): Here, you can define in 
what interval the user must reaccept the consent. So, if you choose 30 
days, then the user must reaccept the consent in every 30 days after his 
previous acceptance.
 
 
•	
Enforce with conditional access policy templates: If you want to assign 
this term of use to certain users or groups or based on any other condition 
such as location, device type, and so on, then you can define them here.
	
6.	 Click on Create.
You can see the audit logs on the Term of use page, how many users accepted or 
declined the terms, and who all accepted and declined.
VPN connectivity in Azure AD Conditional 
access
This is a new feature in Azure AD conditional access. There can be a scenario, where 
you have a VPN device configured in your environment and users connect to the 
office network through the VPN device. Now you can set up a conditional access 
policy for the users who tries to connect to the VPN device to access your office 
network.
To configure this, you need to create a certificate in VPN connectivity section of 
Azure AD conditional access. This certificate will be uploaded to the VPN device. 
Now while creating the condition access policy, you can define if selected users try 
to connect to the VPN device, they may be asked to go through Azure MFA.

126      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Azure AD Identity Protection
An attack on users’ identity is one of the biggest threats and challenge for security 
administrators. Azure Identity Protection helps organizations to analyze their users 
sign in behaviors and any threat associated with that. Identity Protection compares 
signing in signals captured from other Microsoft tools and applications such as 
Azure AD, users Microsoft account logins, and so on. Microsoft compares 6.5 trillion 
signals per day to protect customers from threats. The signal generated by identity 
protection can be fed to any other SIEM tool for further investigation or can be used 
to set up a policy for conditional access.
You will require the Azure Active Directory Premium P2 license to get full 
functionality of Identity Protection. You need a global administrator, global reader, 
security administrator, security operator, or security reader access to work on the 
identity protection feature.
Let’s deep dive to understand different components, features, and capabilities of 
Identity Protection.
Azure AD Identity Protection dashboard or 
security overview
The dashboard gives you an insight on your organization’s security posture. It 
analyzes your security polices and tells the effectiveness of your polices and gives 
potential attacks. Dashboard has trends, with wide timelines to show risky users 
and sign ins, and tiles, which shows the current risk level for users:
Figure 2.48: Azure AD Identity Protection dashboard

Configuring Secure Access by Using Azure Active Directory      127
Let’s understand how to read this dashboard:
 
•	
New risky users detected: This chart shows the number of new risky users 
that were detected over the chosen time period. You can filter the view of this 
chart by the user risk level (low, medium, high) and for a time period. If you 
click on this chart, you will be redirected to the Risky users report.
 
•	
New risky sign-ins detected: This chart shows the number of risky sign-
ins detected over the chosen time period. You can apply filters to view this 
chart by the sign-in risk type (real-time or aggregate) and the sign-in risk 
level (low, medium, high). Unprotected sign-ins are successful real-time risk 
sign-ins that were not MFA challenged. If you click on this chart, you will be 
redirected to the Risky sign-ins report.
 
•	
High risk users: This tile shows the latest count of users with high probability 
of identity compromise. These should be a top priority to investigate these 
users’ identity. If you click on the tile, you will redirect to a filtered view of 
the Risky users report showing only users with a high-risk level.
 
•	
Medium risk users: This tile shows the latest count of users with medium 
probability of identity compromise. If you click on the Medium risk users 
tile, you  will be redirected to a filtered view of the Risky users report 
showing only users with a medium risk level.
 
•	
Unprotected risky sign-ins: This tile shows the last week’s count of 
successful, real-time risky sign-ins. These are potentially compromised 
logins those were successful, and MFA challenged by a Conditional Access 
policy. To protect such sign-ins in future, apply a sign-in risk policy. To set up 
a sign in, click on the Unprotected risky sign-ins tile that will redirect you to 
the sign-in risk policy configuration blade where you can configure the sign-
in risk policy.
 
•	
Legacy authentication: This tile shows the last week’s count of legacy 
authentications in your organization. Legacy authentication protocols do 
not support modern security methods such as an MFA. To prevent legacy 
authentication, you can apply a Conditional Access policy. If you click on 
the Legacy authentication tile, you will be redirected to the Identity Secure 
Score.
 
•	
Identity Secure Score: The Identity Secure Score measures and compares 
your security posture to industry patterns. You can get more details about 
how to improve your security posture by clicking on the Identity Secure 
Score tile.

128      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Type of risks identified by Azure AD 
Identity Protection
Azure Identity Protection helps organizations to identify and act on any suspicious 
activity of user’s sign in. Two types of risks can be identified such as sign in and 
user. The detection can scan real time and offline. Let’s understand the risk types 
and their respective detections in depth.
Sign in risk
It indicates the probability that the given authentication request is not coming from 
the authorized user. Azure Identity Protection calculates the risk using Microsoft’s 
intelligent sources in the customer’s environment, security teams at Microsoft, and 
other trusted sources.
Real-time detection types
In this detection type, Azure scans users’ authentication requests in real time while 
the action is happening:
 
•	
Anonymous IP address: Anonymous IP address risk detection type 
indicates sign-ins from an anonymous IP address (for example, Tor browser 
or anonymous VPN). These IP addresses are typically used by attackers who 
want to hide their login details such as IP address, location, device, MAC 
address, and so on for potentially malicious activities.
 
•	
Unfamiliar sign-in properties: Unfamiliar sign-in risk detection type 
considers past sign-in history (IP, location’s latitude/longitude) to look for 
anomalous sign-ins. The system stores information about previous locations 
used by a user to sign in and considers them as familiar locations. So, a risk 
detection is triggered when the sign-in occurs from an unfamiliar location or 
a location that is not already in the list of familiar locations.
 
•	
For a duration, newly created users will be in the learning mode, in which 
unfamiliar sign-in properties risk detections will be turned off. In the 
learning mode, the algorithms learn the user’s sign in behavior. The learning 
mode duration is dynamic and depends on how much time it takes for the 
algorithm to gather enough information about the user’s sign-in patterns. 
The minimum duration of the learning mode is five days.

Configuring Secure Access by Using Azure Active Directory      129
Offline detection types
In the offline detection type, Azure scans users’ sign in behavior based on their past 
authentication process. Here are few of the scanning parameters checked in the 
offline detection mode:
 
•	
Atypical travel: Atypical travel risk detection type identifies two sign-ins 
originating from geographically distant locations, where at least one of the 
locations may also be atypical or unfamiliar for the user, given the past 
behavior. Among several other factors, this learning algorithm considers the 
time between the two sign-ins and the time it would have taken for the user 
to travel from the first location to the second. If the time taken between two 
sign ins coming from two different locations is genuine, it indicates that the 
same user is signing in from different locations.
 
•	
Malware linked IP address: Malware linked IP address risk detection type 
indicates sign-ins from IP addresses infected with malware. The IP is known 
to actively communicate with a bot server setup by Microsoft. Microsoft 
has deployed bot servers to detect malware activities. This detection is 
determined by comparing IP addresses of the user’s device against IP 
addresses that were in contact with a bot server while the bot server was 
active.
 
•	
Admin confirmed user compromised: Admin confirmed user compromised 
detection indicates that an administrator has marked a user as confirm user 
compromised.
 
•	
Malicious IP address: Malicious IP address detection indicates sign-in from 
a malicious IP address. An IP address is considered malicious based on high 
failure rates because of multiple invalid credentials received from the IP 
address.
User risk 
User risk indicates that a user’s account is compromised. The following are the 
methods through which Azure AD identifies the risky user:
 
•	
Leaked credentials: As the name indicates leaked credentials risk detection 
type indicates that user’s valid credentials have been leaked. The 
cybercriminals compromise valid passwords of legitimate users; they often 
share those credentials over various platforms. They typically share them 
by posting publicly on the dark web, paste sites, or by trading and selling 
the credentials on the black market. When Microsoft leaked credentials, the 

130      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
service acquires user credentials from the dark web, paste sites, or other 
sources; they are checked against Azure AD users’ current valid credentials 
to find valid matches.
 
•	
Azure AD threat intelligence: Azure AD threat intelligence risk detection type 
indicates a user activity that is unusual for the given user or is consistent 
with known attack patterns based on Microsoft’s internal and external threat 
intelligence sources.

Administrators  cannot dismiss or remediate a risky B2B collaboration 
user  in their resource directory. This loss of functionality is due to 
administrators in the resource directory not having access to the B2B 
user’s home directory.
Azure AD Identity Protection simulate risk 
detection
You as a security administrator may require simulating the policies before rolling it 
out for users. For this simulation, you may need to generate a test risk data. In this 
section, you will learn how to set up a simulation environment and get the testing 
data.
You can set up the simulation environment for only few detection types, such as 
atypical travel, anonymous IP address, and unfamiliar sign-in properties.
Unfamiliar sign-in properties
We have already covered what this detection means. It sees the past sign in history 
of the user, checks the device IP, location, and so on and compares the data with 
the current sign in request. Before rolling this out for production, you can set up a 
simulation environment to test its functioning. Let’s go through the following steps 
to set up the simulation environment.
You will require the following things to complete this simulation:
 
•	
A test account which has 30 days login history.
 
•	
The test account should already have MFA enabled.
 
•	
A virtual machine to work as a new device.
 
•	
A VPN to simulate a new location.

Configuring Secure Access by Using Azure Active Directory      131
After completing the preceding requirement:
	
1.	 Log in with your test account at https://outlook.office.com from the VPN 
connected virtual machine.
	
2.	 Enter your credentials.
	
3.	 When it prompts for MFA, fail it by giving wrong responses.
You will see this sign-in in Risky Sign-ins report in 15-20 minutes.
Atypical travel
Simulation of this detection type is difficult because the algorithm uses a machine 
learning to weed out false-positives such as atypical travel from familiar devices, or 
sign-ins from VPNs that are used by other users in the directory. Additionally, the 
algorithm requires a sign-in history of 14-days and ten logins of the user before it 
begins generating risk detections:
	
1.	 Try to log in to https://outlook.office.com from your standard browser.
	
2.	 Enter the credentials of the test account you want to generate an atypical 
travel risk detection scenario.
	
3.	 Now to change your IP address. To get a new IP, you can log in from the 
VPN, a Tor add-on, or create a new virtual machine in Azure in a different 
data center.
	
4.	 Sign-in to https://outlook.office.com again from the new VM or new IP, using 
the same credentials as before and within a few minutes after the previous 
sign-in.
The sign-in shows up in the Identity Protection dashboard within 3-4 hours.
Anonymous IP address
As the preceding simulation, you can use the VPN, a Tor add-on, or create a new 
virtual machine in Azure in a different data center to get a new IP address. You will 
require a test account without MFA.
Now, log in to https://outlook.office.com from the new VM or Tor browser and you 
will see this account activity in the Risky sign-in report in 15-20 minutes.
Azure AD Identity Protection policies
You can see three kinds of policies available in Azure Identity Protection: MFA 
registration policy, sign-in risk policy, and user risk policy. In this section, you will 
learn about policies and ways to configure them.

132      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
MFA registration policy
Azure MFA provides a second layer of security to user sign-ins, which is beyond 
your username and password. You can ask all users or selected users to enable 
MFA for them. You can enforce this easily through the conditional access policy. 
By doing this, you can make them secure from day one. In the previous sections, 
we understood the various second step authentication methods provided by Azure 
MFA. This is an easy and efficient way to protect users’ identity. To set up this policy, 
follow the given steps:
	
1.	 Log in to the Azure portal and search for Identity Protection in the search 
bar.
	
2.	 Click on MFA registration policy under the Protect section.
	
3.	 A new blade will open, fill the details here. 
	
4.	 Under Users, choose All users or Select individuals and groups.
	
5.	 You can exclude some accounts such as service accounts.
	
6.	 Under the control section, check Require Azure MFA registration. Click on 
Select.
	
7.	 Set On to enforce the policy. Click on Save:
Figure 2.49: Setup MFA registration policy in Azure AD Identity Protection 
Here, we saw the process to enable Azure MFA through Azure AD Identity Protection 
service.

Configuring Secure Access by Using Azure Active Directory      133
User risk policy
Identity Protection calculates what it believes is normal sign in behavior for a user 
and use that to base decisions for their risk. User risk is a calculation of probability 
that user’s identity has been compromised. Being an administrator, you can enforce 
the policy based on the risk score. You can choose to block access, allow access, or 
allow access but require a password change. Let’s set this:
	
1.	 Log in to the Azure portal and search for Identity Protection.
	
2.	 Click on User risk policy, and a new blade will open.
	
3.	 Under Users, choose All users or Select individuals and groups.
	
4.	 You can exclude some accounts such as service accounts.
	
5.	 In the Conditions section, select the risk level.
	
6.	 Now, choose appropriate control. You can either block access, allow access, 
or allow access after password reset.
	
7.	 Set On to enable the policy. Click on Save:
Figure 2.50: Set up the user risk policy in Azure AD Identity Protection 
In this section, we saw how to force risky users to change their password before 
allowing their logins.

134      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Sign-in risk policy
Identity Protection analyses real-time and offline signals from each sign-in and 
calculates a risk score based on the probability that the sign-in wasn’t performed by 
the authorised user. Administrators can decide based on this risk score to enforce 
organizational requirements. Administrators can choose to block access, allow 
access, or allow access but require MFA. Let’s follow the given steps to set this:
	
1.	 Log in to the Azure portal and search for Identity Protection.
	
2.	 Click on Sign-in risk policy, and a new blade will open.
	
3.	 Under Users, choose All users or Select individuals and groups.
	
4.	 You can exclude some accounts such as service accounts.
	
5.	 In the Condition section, select the risk level.
	
6.	 Now, choose the appropriate control. You can either block access, allow 
access, or allow access after MFA.
	
7.	 Set On to enable the policy. Click on Save:
 
Figure 2.51: Set up sign-in policy in Azure AD Identity Protection 

Configuring Secure Access by Using Azure Active Directory      135
By setting up the user risk and sign-in risk policy, you are setting up a conditional 
access policy for the user:
 
•	
Require a password change for risky users: In the user risk policy, you are 
asking users to change their password, if they want to log in successfully and 
access the resources.
 
•	
Require MFA for risky sign-in users: In the sign-in risk policy, you are asking 
users to use MFA authentication, if they want to log in successfully and want 
to access the resources. For MFA authentication, the MFA should be enabled 
for users. You can enforce that through the MFA registration policy. 
In this section, we saw how to enforce Azure MFA for risky sign- ins in Azure AD 
Identity Protection.
Conclusion
In this chapter, you got an depth knowledge about what is Azure AD PIM, Azure 
MFA, Conditional Access, and Identity Protection. You learned how they work, how 
to configure, and manage them in detail. By the end of this chapter, you would be 
able to take a decision about all users and Azure resources that should be part of 
Azure AD PIM, Azure MFA, Conditional Access, and Identity Protection. You can 
identify the stakeholders who you should consider before rolling out this feature. 
You are now able to plan, configure, and manage these identity-based security 
services in your environment.
Multiple choice questions
	
1.	 What Azure AD license you require to configure and manage Azure AD 
PIM?
	
	
A.	 Azure AD Free license.
	
	
B.	 Azure AD Premium P2.
	
	
C.	 Azure AD Premium P1.
	
	
D.	 Enterprise + Mobility Services E3.
	
	
Answer: B
	
2.	 What Azure AD directory role you would require to configure and manage 
Azure AD PIM?
	
	
A.	 Privileged role administrator.
	
	
B.	 User administrator.

136      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
C.	 Security reader.
	
	
D.	 Password administrator.
	
	
Answer: A
	
3.	 It is not recommended to assign eligible role for _________. Choose the 
correct option:
	
	
A.	 Privileged role administrator.
	
	
B.	 Home directory user.
	
	
C.	 Guest user.
	
	
D.	 Break glass account.
	
	
Answer: D
	
4.	 You want to automatically remove Azure resource roles from users who do 
not need them. How would you ensure that access reviews automatically 
remove Azure resource roles, even if users do not respond to email 
notifications?
	
	
A.	 Configure access review to auto apply result to resources and set remove 
access if the reviewer does not respond.
	
	
B.	 Create Azure logic apps and use the access review as a trigger to take 
actions.
	
	
C.	 Configure the access review policy to disable if the user does not respond 
to email notifications.
	
	
D.	 Set up automation account and execute a runbook.
	
	
Answer: C
	
5.	 Which Azure AD technology manages the user access risk by ensuring the 
principles of least privilege access, time-bound, and limited to required 
resources?
	
	
A.	 Azure AD Conditional Access.
	
	
B.	 Azure AD Identity protection.
	
	
C.	 Azure Security Center.
	
	
D.	 Azure AD Privileged Identity Management.
	
	
Answer: D
	
6.	 Can you convert an eligible role to a permanent role?
	
	
A.	 No.
	
	
B.	 Yes.
	
	
Answer: B

Configuring Secure Access by Using Azure Active Directory      137
	
7.	 Being a privileged role administrator, you are not able to configure the Azure 
resource role, what could be the reason?
	
	
A.	 You do not have access to the Azure resource where you want to assign 
the Azure resource role.
	
	
B.	 You need to be a global administrator at the subscription level.
	
	
C.	 Azure resources cannot be covered by Azure AD PIM.
	
	
D.	 You are missing some license to manage the Azure resource role in Azure 
AD PIM.
	
	
Answer: A
	
8.	 You want to block access for high risky users, where would you configure 
such a policy?
	
	
A.	 Azure MFA
	
	
B.	 Azure Identity Protection
	
	
C.	 Azure App registration
	
	
D.	 Azure Privileged Identity Management
	
	
Answer: B
 
9. The minimum version of Azure AD required to configure Azure 
Conditional Access:
	
	
A.	 Azure AD Premium P2
	
	
B.	 Azure AD Free
	
	
C.	 Azure AD Premium P1
	
	
D.	 Azure AD Security S2
	
	
Answer. C
	
10.	An organization wants to restrict access for a user who is logging in 
from outside India, where would you configure such settings?
	
	
A.	 Azure AD Conditional Access
	
	
B.	 Azure AD app registration
	
	
C.	 Azure AD Privileged Identity
	
	
D.	 Azure AD Identity Protection
	
	
Answer: A

138      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide

Chapter 3
Managing Azure 
Access Control
In this chapter, we will cover how to apply best security practices on your entire 
subscription and resource group. You can set up certain security baselines and 
policies to restrict unwanted security breaches. Some of the major topics that we will 
cover include role base access control, resource locks, Azure policy as well as Azure 
Blueprint. No organization wants their resources to be deleted accidently or provide 
the highest level of access to everyone. Organizations certainly want to follow certain 
baselines and policies to keep their infrastructure secure and manageable. By the end 
of this chapter, you will be able to identify appropriate permissions for respective 
users and assign them to users. You would be able to control unwanted modification 
and deletion of resources through the resource lock. With help of Azure policy, you 
would be able to determine the baseline for your environment. You will be able to 
keep your environment compliant with the Azure policy baseline.
There may be some repetitive tasks in your environment. With the help of Azure 
Blueprints, your development teams will be able to rapidly build and standup new 
environments with organizational compliance.
Structure
In this chapter, we will learn the following topics:
	
• 
Role-based access control (RBAC) to configure subscription and resource 
permissions

140      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
• 
Security management at resource group level
	
• 
Custom RBAC
	
• 
Azure resource lockConfiguration of Azure Policy
	
• 
Azure Blueprints
	
• 
Conclusion
	
• 
Multiple choice questions (MCQ)
Objectives
The objective of this chapter is to understand access control features in Azure. 
Azure provides various services and features to manage user access on other Azure 
services. After reading this chapter you should be able to understand Azure role base 
access control (RBAC). You will be able to assign and manage RBAC roles for users. 
You will learn how to create custom RBAC roles with custom access permissions. 
You will be able to prevent accidental deletion and modification of Azure resources 
through Azure Resource Lock. You will be able create, apply and manage Azure 
policies to meet industry standard and internal compliances. You will be able to 
create and use Azure blueprint to complete repetitive tasks quickly.
RBAC to configure permissions over 
subscription, resource groups, and 
resources
Principle of least access is the key theorem for security administrators. In order to 
follow this theorem, granting an appropriate level of access is always an important 
task for security administrators. Different cloud platforms have their own ways to 
control the access. Azure uses RBAC to provide fine-grained access control. With 
RBAC, you can manage who has access to Azure resources, what they can do with 
those resources, and what areas they have access to.
Azure has several built-in RBAC roles to control user access. The following three 
rules apply to all resources:
 
•	
Owner: A security principal with owner access has full access to all resources, 
including the right to delegate access to others.
 
•	
Contributor: A security principal with contributor access can create and 
manage all types of Azure resources but cannot grant access to others.
 
•	
Reader: A security principal with reader access can view existing Azure 
resources but cannot modify anything.

Managing Azure Access Control      141
Apart from these listed roles, there are many built-in roles you can use to manage 
other resources. If these built-in roles do not meet the specific access need of your 
organization, you can create your own custom roles for Azure resources.
Types of roles in Azure
You can broadly define Azure roles in three categories: classic administrator roles, 
Azure RBAC roles, and Azure Active Directory administrator roles.
 
•	
Classic subscription administrator role: Classic subscription administrator 
roles are inherited from the classic version of Azure. The classic version 
has three administrator roles such as account administrator, service 
administrator, and co-administrator. Among these three classic subscription 
roles, account administrator and service administrator roles have full access 
to the Azure subscription. The account that is used to sign up for Azure is 
automatically becomes account administrator and service administrator. The 
service administrator role can add additional co-administrators after getting 
into the subscription. The service administrator and the co-administrators 
have equivalent access of users who have been assigned the owner role (an 
Azure RBAC role) at the subscription scope:
 
 
•	
Account administrator: The account administrator role does not have 
access to the Azure portal. It is a billing owner of the subscription. It 
can access the  Azure Account Center (https://account.azure.com/
Subscriptions), manage all subscriptions in an account, create new 
subscriptions, cancel subscriptions, change the billing for a subscription, 
and change the service administrator. You can have one account 
administrator per Azure account.
 
 
•	
Service administrator: For a new subscription, the account administrator 
is also the service administrator. The service administrator role has 
equivalent access of a user who is assigned the owner role at the 
subscription scope. The service administrator role has full access to 
the Azure portal. It can manage services in the Azure portal, cancel the 
subscription, and assign users to the co-administrator role. You can have 
one service administrator per Azure subscription.
 
 
•	
Co-administrator: The co-administrator role has equivalent access of a 
user who is assigned the owner role at the subscription scope. It has the 
same access as the service administrator but can’t change the association 
of subscriptions to Azure directories. It can assign users to the co-
administrator role but cannot change the service administrator role. You 
can have 200 co-administrators per subscription.

142      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
The classic administrator roles can be assigned at the subscription level only. To 
assign the role, follow the given steps:
	
1.	 Go to the Azure portal and select the subscription where you want to assign 
the role.
	
2.	 In the subscription, go to Access control (IAM) and go to Classic 
administrators tab:
	
 
Figure 3.1: Add classic Administrator role
	
3.	 You can click on + Add to add a new co-administrator.
	
4.	 You can see the existing service and co-administrators under the Classic 
administrators tab.
 
•	
Azure RBAC roles: It is a fine-grained access management system built 
on  Azure Resource Manager. Azure has over 70 built-in RBAC roles. 
Through RBAC, you can manage only the Azure portal and the Azure 
Resource Manager APIs. Users, groups, and applications that are assigned 
RBAC roles cannot use the Azure classic deployment model APIs. In Figure 
3.1, you can do role assignment by clicking on Add role assignment. You can 
see the assigned roles under Role assignment and all built-in roles under the 
Roles tab.
 
•	
Azure AD administrator roles: By using Azure AD administrator roles, 
you can manage Azure AD resources in a directory such as create or edit 
users, assign administrative roles to others, reset user passwords, manage 
user licenses, and manage domains. You can see available Azure AD roles in 
Roles and administrators in Azure AD under the Manage section.
These are the broadly defined access roles in Azure. These roles have many built-in 
granular roles with different levels of permissions. If you feel the in-built roles are 
not fulfilling your business requirement for access control, you can create your own 
custom RBAC roles as well. We will study about them in the upcoming sections.

Managing Azure Access Control      143
Azure RBAC roles control permissions to manage Azure resources, while 
Azure AD administrator roles control permissions to manage Azure 
Active Directory resources. 
Building components and working of RBAC
Let’s understand all the parameters you need to define RBAC rules and how do they 
grant permissions on Azure resources. To control access on any resource, you can 
create a role assignment. This role assignment has three components such as security 
principal, role definition, and scope:
 
•	
Security principal: It is an object that represents the user, service principal, 
group, or managed identity that is requesting access on Azure resources.
 
•	
Role definition: Role definition  is a collection of permissions. It lists the 
operations that can be performed such as read, write, and delete. There are 
two kinds of role definitions: built-in and custom.
	
	
You can list the role definition details by a simple PowerShell command:
	
	
Get-AzRoleDefinition <role_name>
	
	
A role definition has the following structure:
 
 
•	
Name: Name of the Azure RBAC role.
 
 
•	
ID: Resource ID of the Azure RBAC role.
 
 
•	
IsCustom: This field shows that this a custom role or a built-in role.
 
 
•	
Description: A brief description to understand this role.
 
 
•	
Actions []: The Actions permission describes the operations that the 
role allows to be performed.
 
 
•	
NotActions []: The NotActions permission describes the operations that 
are excluded from the allowed Actions.
 
 
•	
DataActions 
[]: The  DataActions  permission describes the data 
operations that the role allows to be performed to your data within that 
object. For example, if a user has read BLOB data access to a storage 
account, then they can read the BLOBs within that storage account.
 
 
•	
NotDataActions []: The NotDataActions permission describes the data 
operations that are excluded from the allowed DataActions. The access 
granted by a role (effective permissions) is computed by subtracting 
the NotDataActions operations from the DataActions operations.
 
 
•	
AssignableScopes []: The  AssignableScopes  property describes the 
scopes (management groups, subscriptions, or resource groups) that 
have this role definition available. You can make the role available for an 

144      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
assignment in only the management groups, subscriptions, or resource 
groups that require it. You must use at least one management group, 
subscription, or resource group. Built-in roles have AssignableScopes set 
to the root scope (/). The root scope indicates that the role is available for 
assignments in all scopes. 
 
 
•	
Scope: Scope is the set of resources on which the access applies to. When 
you assign a role to the security principal, you can further limit the 
actions allowed by defining a scope.
To do a role assignment, you can attach a role definition to a security principal at 
a particular scope for the purpose of granting access. You can grant permission by 
accessing a role assignment and can revoke the access by removing a role assignment. 
Role assignments can be done by using the Azure portal, Azure CLI, Azure 
PowerShell, Azure SDKs, or REST APIs. Each subscription can have up to 2000 role 
assignments and each management group can have up to 500 role assignments.
You require Microsoft.Authorization/roleAssignments/* permission to work on 
role assignments. RBAC works on the additive model, so effective permissions on 
a scope are the sum of your role assignments. For an example, a user is granted the 
owner role at the subscription scope and the reader role on a resource group. The 
sum of the owner permissions and the reader permissions is effectively the owner 
role for the resource group. Therefore, in this case, the reader role assignment has 
no impact.
Now, RBAC supports deny assignments also. Like a role assignment, a  deny 
assignment ties a set of deny actions to a security principal at a particular scope 
for the purpose of denying access. A role assignment talks about allowed actions, 
but a deny assignment tells that which actions are not allowed. Deny assignments 
stop users from performing specified actions even if a role assignment grants them 
access. Deny assignments take precedence over role assignments.
Types of RBAC roles in Azure
There are two types of RBAC roles in Azure: built-in and custom. Azure comes 
up with over 70 built-in RBAC roles but they may not be enough to fulfill your 
access control requirements. Sometimes, you may need to add few more Actions 
or NotActions items to get your required access permission settings. You can create 
your own RBAC role and can attach it to the defined scope. Let’s discuss about these 
roles in detail.

Managing Azure Access Control      145
Built-in RBAC roles
These roles have default role definitions to allow or restrict any action. In this section, 
we will see how to manage built-in RBAC roles.
Assign built-in RBAC roles
Perform the following steps:
	
1.	 Login to the Azure portal and search for the resource where you want to 
apply the role.
	
2.	 Go to Access control (IAM) option, this option is available for all Azure 
resources.
	
3.	 A new window will open to take inputs, click on + Add, then Add role 
assignment as shown in the following figure:
  
Figure 3.2: Assign built-in RBAC
	
4.	 In the next blade, you can choose the required role from the drop-down list 
and put the name of the user, group or any service principal to whom you 
want to assign this role.
Here, we saw the process to assign built-in roles to users. You can use the same 
process to assign the role to service principals and user groups also. In the next 
section, we will see the process to check the status of our assigned roles.
Check assigned access
Here, you can see all the accesses a user has on an Azure resource. To know about 
this, perform the following steps:

146      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
1.	 Log in to the Azure portal and search for the resource where you want to 
check the assigned access.
	
2.	 Go to the Access control (IAM) option. This option is available for all Azure 
resources.
	
3.	 Under the Check access section, put the username in the Search field and 
it will show all role assigned to the user on this resource. These roles are 
not necessary to be assigned directly to this resource only; it will show the 
inherited roles also:
 
Figure 3.3: Check access for a user
You can also see a list of all users and their respective access under the Role 
assignment tab.
In this section, we saw the process to check the status of our assigned roles. This helps 
you to monitor or scan your environment periodically. As a security administrator, it 
is required that you regularly monitor assigned permissions to the users.
Remove access from a resource
To remove the access from the Access control (IAM) portal, perform the following 
steps:
	
1.	 Log in to Azure portal and go the resource from which you want to remove 
the access.
	
2.	 Go to the Access control (IAM) option; this option is available for all Azure 
resources.
	
3.	 Go to the Role assignments tab to remove the access:

Managing Azure Access Control      147
 
Figure 3.4: Remove the access from a resource
	
4.	 Select the security principal for which you want to revoke the access and 
click on Remove.
When you scan your environment for access control audit, you may find that there 
are many users who do not need assigned permissions anymore. In this section, we 
saw how to remove unwanted permissions from users.
You can just remove access if that is directly assigned to this resource. 
You cannot remove an inherited access from a resource. To remove an 
inherited access, you need to remove it from the root parent resource.
Custom RBAC role
If the built-in RBAC roles for Azure resources do not meet the specific needs of your 
organization to control the user access, then Azure provides feasibility to create your 
own custom roles. Just like built-in roles, custom roles can also be assigned to users, 
groups, and service principals at management group, subscription, and resource 
group scopes. The custom roles can be shared among the subscriptions that trust the 
same Azure AD directory. You can have maximum 5,000 custom roles per directory.
Create custom RBAC through JSON
There are multiple ways to create custom RBAC roles, but here, we will discuss 
the most suitable and easy way. You can use Azure PowerShell, Azure CLI, Azure 
portal, and JSON to create custom RBAC roles. We will learn how to create a custom 
role using JSON. You can apply custom RBAC at any resource level but not at the 
root (/) scope. Following are the steps to create custom RBAC role.

148      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
1.	 Create role definition in JSON: RBAC roles have a predefined structure to 
write a role definition:
{
    “properties”: {
        “roleName”: “”,
        “description”: “”,
        “assignableScopes”: [],
        “permissions”: [
            {
                “actions”: [],
                “notActions”: [],
                “dataActions”: [],
                “notDataActions”: []
            }
        ]
    }
	
2.	 The preceding code shows the structure and components to create a custom 
RBAC role. You need to fill the details in each section. We already have seen 
the purpose of each section.
	
	
Actions, NotActions, DataActions, and NotDataActions are the important 
sections. Under these sections, you can define the allowed and not allowed 
actions. There is separate resource provider for each Azure resource. Like 
how the Azure Active Directory domain service comes under Microsoft.
AAD, Azure virtual machines, virtual machine scale sets, and many more 
come under Microsoft.Compute.
	
3.	 It is important for you to identify the correct resource provider for your 
resource for which you want to create a custom role:
	
	
https://docs.microsoft.com/en-us/azure/role-based-access-control/
resource-provider-operations
	
	
You can browse the preceding link to identify the correct resource provider 
for your resource and this link will help you choose the right and supportive 
action also.
	
	
For example, if you want to create a custom role to allow users to create 
virtual machines but not delete a virtual machine. If you want to apply this 
custom role at the subscription level, so the scope will your subscription. In 
this case, your sample JSON file will look like this:

Managing Azure Access Control      149
{
    “properties”: {
        “roleName”: “Control VM creation and deletion”,
        “description”: “ Allow users to create VM but do not al­
low to delete the VM “,
        “assignableScopes”: [
“/subscriptions/<Subscription_ID>”
],
        “permissions”: [
            {
                “actions”: [
“Microsoft.Compute/virtualMachines/write”
],
                “notActions”: [
“Microsoft.Compute/virtualMachines/delete”
],
                “dataActions”: [],
                “notDataActions”: []
            }
        ]
    }
}
	
	
You can create this JSON file in any file editor. Save this file with the .JSON 
format.
	
4.	 Now, to create the custom RBAC role, go to the Azure portal and go to 
subscriptions.
	
5.	 In subscription, click on the Access control (IAM) option. In the window, 
click on + Add. It will show you the option to Add custom role. When you 
click on this option, a new window will open to take details.
	
6.	 Since you are creating a custom role through JSON, you don’t need to fill 
other details. Just choose the Start from JSON option. You need to browse 
the JSON file which you created in the previous section:

150      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 3.5: Create a custom RBAC role through JSON
	
7.	 Once you upload the file, all parameters will be filled as per the JSON file 
code:
Figure 3.6: Upload JSON for a custom RBAC role

Managing Azure Access Control      151
	
8.	 Once you upload the JSON file, you can see auto filled values in all sections. 
You can review the sections by clicking on them. Under the Permission 
section, you can see the defined Actions, NotActions, DataActions, and 
NotDataActions:
Figure 3.7: See the permissions of a custom RBAC role
	
9.	 Under Assignable scopes, you can see the scope where you can assign this 
role:
Figure 3.8: See the assignable scope for a custom RBAC role
	
10.	 Under the JSON section, you can see the JSON which you uploaded.
	
11.	 Click on Review + create to create the role.

152      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
12.	 Once the role creation is completed, you can assign this role to subscriptions 
or resource groups. The process of a role assignment is the same as built-in 
roles.
As discussed in the previous section, you can create your own custom RBAC roles to 
fulfill your access control requirements. In this section, we saw the detailed process 
to create a custom RBAC role.
Azure resource lock
Organizations are always afraid of manual errors and the errors which lead to the 
deletion and modification of business-critical resources. As an administrator, you 
always wished to have a capability to prevent accidental deletion and modification 
of resources. Azure provides the resource lock feature. In Azure there are two lock 
levels which you can choose CanNotDelete and ReadOnly. In the portal, these locks 
are called Delete and Read-only, respectively:
 
•	 CanNotDelete: It means authorized users can still read and modify a resource, 
but they can’t delete the resource.
 
•	 ReadOnly: It means authorized users can read a resource, but they can’t delete 
or update the resource.
When you apply a lock at a parent scope, all resources within that scope inherit 
the same lock. If you add any resource later, that will also inherit the lock from the 
parent. In inheritance, the most restrictive lock takes precedence. The Azure resource 
lock restricts the changes in resources, but resource operations aren’t restricted. 
For example, a ReadOnly lock on a storage account prevents you from deleting or 
modifying the BLOB or storage account. It doesn’t prevent you from uploading, 
downloading, or modifying the data in the storage account.
The Azure backup service supports maximum 18 restore points. When it 
gets a new restore point, it deletes the oldest 18th restore point. So, if you 
lock the resource group created by the Azure backup service, then after 
some time, the backup will start to fail due to the resource lock feature. 
Because backup service will not be able to delete the oldest restore point 
to accommodate new restore points.
Apply and remove lock from the Azure resource
You can apply the resource lock through the Azure portal, Azure CLI, PowerShell, 
JSON template, and REST API. It is quite easier from the Azure portal. Following are 
the steps to apply and remove resource lock:

Managing Azure Access Control      153
	
1.	 Log in to Azure portal and search for the resource where you want to apply 
the lock. You can apply the lock directly on the resource, or you can apply the 
lock on the parent resource. When you apply the lock on the parent resource, 
all child resources inherit that lock.
	
2.	 In all resources, you will find the option Locks under the Settings section. 
Click on Locks, and a new window will open to configure the lock settings:
	
Figure 3.9: Enable Azure resource lock
	
3.	 As shown in the preceding figure, give a name to this lock, select the lock 
type from the drop-down list, and give a small description about this role.
	
4.	 Once you hit OK, the lock will be applied to this resource and all its child 
resources.
	
5.	 To remove the lock from any resource, you need to go to the same place, that 
is, Locks under Settings:
Figure 3.10: Remove Azure resource lock from a resource
	
6.	 In this panel, you will see the existing locks. You can click on Delete to 
remove the unwanted lock.
In this section, we studied about the Azure resource lock, assignment, and removal 
of resource lock in detail. Now, you should be able to apply the resource lock on 
your Azure resources to prevent accidental deletion and modification to them.

154      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
You cannot delete the lock for a chile resource if the lock is inherited from 
the parent resource. To remove the lock from the child resource, first you 
need to remove the lock from the parent resource.
Azure Policy
Each organization wants to be compliant with its blueprint and to follow its standards 
in terms to the infrastructure creation and application deployment. Azure Policy is 
a service in Azure that you can use to create, assign, and manage policies. These 
policies enforce different rules and effects over your resources, so those resources 
stay compliant with your corporate standards and service level agreements. Azure 
Policy evaluates your resources with assigned policies.
For example, you can have a policy to allow only certain Azure resources only in 
certain geographies. Once this policy is implemented, new and existing resources 
are evaluated for compliance.
Effects of Azure Policy
Each Azure Policy definition has a single effect. The effect determines what happens 
when the policy rule is matched with some condition. The effects behave differently 
if they are for a new resource, an updated resource, or an existing resource.
Currently, Azure Policy supports these following listed effects. The following list 
also shows the order of evaluation:
	
1.	 Disable
	
2.	 Append
	
3.	 Modify
	
4.	 Deny
	
5.	 Audit
	
6.	 AuditIfNotExists
	
7.	 DeployIfNotExists
	
8.	 EnforceOPAConstraint
	
9.	 EnforceRegoPolicy
As of now, there is no order of evaluation for EnforceOPAConstraint and 
EnforceRegoPolicy effects and also in preview at the time of writing this. Each 
effect has its own properties; based on those, it can control and manage your Azure 
resource deployments. Let’s understand the use of these effects:

Managing Azure Access Control      155
 
•	
Disabled: This means the policy is not yet active and is in the disabled state.
 
•	
Append: It is used to add additional fields to the requested resource during 
creation or updation. For example, all virtual machines should have NSGs 
connected to them.
 
•	
Modify: It is used to add, update, or remove tags on a resource during 
creation or updation. Modify is currently used only for tags.
 
•	
Deny: It prevents the resource request if the defined resource standards do 
not meet the policy definition.
 
•	
Audit: It does not prevent the resource request but creates an activity log 
when the defined resource standards do not meet the policy definition.
 
•	
AuditIfNotExists: It evaluates the scope where this policy is been assigned, 
and if the evaluation is non-complaint, then it creates an activity log.
 
•	
DeployIfNotExists: It evaluates the scope where this policy is been assigned 
and if the evaluation is non-complaint, then it deploys the required things to 
make the scope complaint.
Here, we explained the types of effects of Azure Policy. With the help of these effects, 
you can define the action of Azure Policy. With these effect types, the same policy 
can be used just for audit purpose and also to modify the environment.
Assign Azure Policy from the portal
Let’s practically understand Azure Policy. In this section, we will see what all options 
are available on the Azure Policy page and how to manage and apply the policy 
from the portal:
	
1.	 First, let’s log in to the Azure portal and search for Policy.
	
2.	 The first page will be the Overview page. It shows the details about applied 
policies, percentage complaint resources, number of non-complaint policies, 
initiatives, and resources:
Figure 3.11: Azure policy overview page

156      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
3.	 Policy definition: Under the Definitions section, you can see the existing 
built-in policies. Azure provides many built-in policies. You can directly opt 
for the built-in policy and can apply to the required scope. But if there is no 
built-in policy to fulfill your business requirement, then you can create a 
custom policy as well.
	
4.	 Under the Definitions section, you will see two options: + Initiative definition 
and + Policy definition. The Policy definition option will lead you to create 
a custom policy. Initiative definition is a collection of multiple policies. 
So, to understand this, let’s take an example. You may get a requirement 
where you want to apply the same policies on different resources. There are 
chances that you miss few policies on some of the resources. To avoid this, 
Azure provides an option to club all required policies and then apply this 
group to the target resources. This grouping is called initiative definition. 
In the Initiative definition policy, you can club multiple built-in and custom 
policies.
	
5.	 On the Policy| Definitions page, you can see all custom and built-in policies 
and initiatives:
Figure 3.12: Azure policy definition page
	
6.	 When you click on + Initiative definition, a new window opens with the 
details:

Managing Azure Access Control      157
Figure 3.13: Create initiative definition
	
7.	 Fill the basic details as shown in the preceding figure. In the Category field, 
you can choose either to create a new category to put your initiative definition, 
or you can select the default list. The category is a logical grouping or type of 
definitions.
	
8.	 In the right panel, you can see the list of all available policies. You can click 
on + sign to add the respective policy to your initiative definition. Azure also 
provides some built-in initiative definitions; you can use them directly.
	
9.	 Once you create the initiative definition, it will be shown in the Definitions 
page.
	
10.	 You can click on any initiative definition or policy definition to edit, see 
properties, and assign:
Figure 3.14: Manage initiative definition in Azure policy

158      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding figure, I see options to edit, assign, and delete this 
initiative:
	
11.	 When you click on Assign, a new window will open to take the inputs:
Figure 3.15: Assign initiative definition over a subscription
	
	
Here, you can fill the details as shown in the preceding figure. The Scope 
field defines where you want to apply this initiative. Under Exclusions, you 
can choose the resources which you want to exclude from this initiative. Put 
a brief description and click on Create.
	
	
The Assignments section also has Assign initiative and Assign policy 
options. The same assignment you can do from here also. There you can see 
the list of all assignments:

Managing Azure Access Control      159
Figure 3.16: Assignment overview page
	
	
As shown in the preceding screenshot, it shows the total assignments, 
number of initiatives, and policy assignments.
	
12.	 Under the Compliance section, you will see all the applied policies and their 
respective compliant levels. It shows detailed information which was shown 
on the Overview page:
Figure 3.17: Compliance overview page
	
	
The preceding screenshot shows a list of all applied initiatives and policies. 
The respective columns show the name of the policy and initiative, scope, 
compliance status, percentage of resource complaint, number of non-
complaint resources, and number of non-complaint policies.

160      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
14.	 The Remediation page will show policies only with DeployIfNotExists and 
Modify effects. From here, you can push these policies to take actions and 
can make resources complaint.
RBAC focuses on user actions on resources while Azure Policy focuses 
on resource properties during deployment and for already existing 
resources. For example, you have the owner access on the subscription 
and there is a policy not to deploy virtual machines in the subscription. 
Being the owner, you will not be able to create a virtual machine in the 
subscription.
Here, we saw the process to apply policies to your Azure resources. You can choose 
appropriate policies to apply to your Azure resources. These policies can help you 
to achieve compliance and follow the Azure baseline.
If there are multiple policy assignments on a resource, then each 
assignment is individually evaluated. As such, there isn’t an opportunity 
for a resource to slip through a gap from differences in scope. The net 
result of layering policies or policy overlap is considered to be cumulative 
most restrictive.
Azure blueprint
Engineers and architects sketch a blueprint before starting any project. The blueprint 
gives them an overview of the entire project. In the blueprint, they describe all tasks 
and details of tasks. Blueprints also help them to keep their work aligned with their 
organization’s compliances and also help make repetitive tasks easier. The Azure 
blueprint also helps cloud engineers and architects to follow compliances and 
give an easy and fast way to perform repetitive tasks. These repetitive tasks can be 
deployment of applications, infrastructure creation, applying some policies and role 
assignment over the environment, and so on.
Azure Blueprint uses Azure Cosmos DB to replicate its objects into multiple Azure 
regions. This multi-region replication provides high availability and low latency 
to your blueprint objects. Because of this, you can deploy resources in any Azure 
region from the same blueprint.
Azure Blueprint is designed to help customers in  their Azure 
environment setup. Azure Blueprint often consists of a set of resource 
groups, policies, role assignments, and ARM template deployments. 
Azure Blueprint is a native service of Azure whereas an ARM template 
is a code document. It is not native to Azure. It is stored either locally 

Managing Azure Access Control      161
or in source control. With Azure blueprints, the relationship between 
the blueprint definition (what  should be  deployed) and the blueprint 
assignment (what was deployed) is preserved. This connection supports 
improved tracking and auditing of deployments. The template is used for 
deployments of one or more Azure resources, but once those resources 
deploy, there’s no active connection or relationship to the template.
Terminology of a Azure Blueprint
It is important to know the terminology and core components of a Azure Blueprint 
before deploying and configuration of the Azure Blueprint:
 
•	
Definition: The Azure Blueprint tells the capabilities of a blueprint. In the 
definition, you set the task which you want to perform through the blueprint.
 
•	
Artifacts: Artifacts are the services or resources which you need to bind with 
the Azure Blueprint definition. You can use one or more artifacts to create an 
Azure Blueprint definition. An Azure Blueprint definition must have at least 
one artifact bonded. The Azure Blueprint supports four types of artifacts:
 
 
•	
Azure Policy
 
 
•	
Role assignment
 
 
•	
ARM template
 
 
•	
Resource groups
	
	
If you choose Azure Policy as an artifact, then you can assign a policy or 
initiative to your subscription. With the role assignment artifact, you can define 
which user, group or application gets what RBAC role in the environment. 
The ARM template artifact allows you to deploy ARM templates in your 
environment. The Resource groups artifact creates resource groups in your 
environment to place resources.
	
	
Based on your requirement, you can choose one or more artifacts to create 
the blueprint definition.
 
•	
Azure Blueprint definition location: When you create a blueprint definition, 
you need to define where to save this definition. The definition can be saved 
to the management group or to the subscription. If you save the definition to 
a management group, then it can be applied to all child subscriptions under 
that management group.
 
•	
Parameters in Azure Blueprint: When you choose the ARM template or 
Azure Policy as an artifact, then you may need to define parameters for the 
ARM template or Azure Policy. The value of parameters can be passed while 
creating the definition or assignment of the definition.

162      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Blueprint publishing: When you start creating a blueprint, it first goes 
into the draft state. Before assigning this blueprint, it needs to go to in the 
published mode. In the published mode, you need to provide a version to 
this definition and a change note about this version.
 
•	
Blueprint assignment: After publishing the blueprint, you can assign this to 
the management group or the subscription in your environment.
Configuring security settings by the Azure 
Blueprint
You can use the Azure Blueprint to deploy the ARM templates, role, or policy 
assignment in your environment. In this section, we will see how to use the Azure 
Blueprint to apply security settings in your environment. Following are the steps to 
configure security settings by Azure blueprint:
	
1.	 Log in to the Azure portal and go to Azure Blueprint.
	
2.	 On the Blueprints page, go to the Blueprint definitions tab:
Figure 3.18: Blueprint definitions home page
	
	
As shown in the preceding figure, you can see the existing blueprint definition 
or else you can create a new one by clicking on + Create blueprint.
	
3.	 Once you click on + Create blueprint, a new blade will open. In this window, 
you can choose the option to create the blueprint. Either you can create the 
blueprint definition from scratch or you can choose it from the sample. Here, 
let’s start from scratch and choose Start with blank blueprint:

Managing Azure Access Control      163
Figure 3.19: Choose a blueprint definition sample
	
	
As shown in the preceding figure, you can choose a blank or predefined 
sample for the blueprint definition.
	
4.	 The blank blueprint option opens a new window. Here, you need to fill the 
basic details about the blueprint:
	
	
•	
Blueprint name: Give a meaningful name to this blueprint definition.
	
	
•	
Blueprint description: Write a description about this definition. This can 
help you in future to know more about this definition.
	
	
•	
Definition location: You can choose a location to store this definition for 
the three dots. You can choose the management group or subscription. If 
you choose a management group, then you can apply this blueprint over 
all child subscriptions of that management group.
	
	
Click on Next to move to the Artifacts section:

164      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 3.20: Fill basic details of the blueprfint definition
	
	
Fill in the details as shown in the preceding figure as described.
	
5.	 In the Artifacts section, you can choose artifacts from the drop down. You 
can choose one or many artifacts for a definition:
Figure 3.21: Select the type of artifact for the blueprint definition

Managing Azure Access Control      165
	
	
As shown in the preceding figure, click on + Add artifact… and a new blade 
will open a drop-down menu. From the drop-down menu, you can select the 
artifact type which you want to add to this blueprint.
	
	
For this exercise, I am selecting Policy assignment as an artifact for this definition.
	
6.	 Once you choose Policy assignment from the drop down, a new blade will 
open with a list of all the available policies and initiatives present in your 
subscription. I want to show you how you can configure security settings for 
your environment, so I am choosing a built-in initiative NIST SP 800-171 R2:
Figure 3.22: Select the security policy from the list
	
7.	 Click on the initiative to select it and it will be added to your artifacts list.
	
8.	 After adding the artifact, you need to come back to the Artifacts dashboard. 
Here, you get the option to edit existing artifacts or to add more artifacts:
Figure 3.23: Edit parameters of the policy

166      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
In the previous step, we added an Azure Policy initiative as an artifact. 
Azure Policy may have some parameters. The value of these parameters can 
be passed at this stage or later while assigning this definition.
	
9.	 If you want to pass the parameter value now, then click on the artifact and it 
will open a new blade with all the parameters:
Figure 3.24: Pass the value of parameters
	
	
As shown in the preceding figure, uncheck the parameter whose value you 
want to fill now and check whose value you want to decide during the 
assignment. Click on Save. It will bring you back to the Artifacts dashboard 
page.
	
10.	 On this page, click on Save draft. The Blueprint definition will be saved in 
the draft:
Figure 3.25: Updated blueprint definition dashboard

Managing Azure Access Control      167
	
	
As shown in the preceding figure, the Blueprint definitions page has an 
entry now in the draft stage. It will show that your blueprint is in the Draft 
stage, and it is not yet published.
	
11.	 Now, before assigning this definition to your environment, you need to publish 
it. To publish it, either you can click on it or on the three dots at the end of it:
Figure 3.26: Publish the blueprint
	
	
As shown in the preceding figure, click on Publish blueprint. Now, it will 
ask you the version of this publishing and a description about this change note:
Figure 3.27: Enter the details about the version and change note

168      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding figure, enter the version and change note about 
this blueprint. Now, click on Publish.
	
12.	 Now, you can see these changes on the Blueprint definitions page:
Figure 3.28: Updated view of the blueprint dashboard
	
	
The preceding figureshows that your blueprint is now in the published stage 
and does not have any unpublished changes. It also shows the version of 
your blueprint.
	
13.	 Now, to assign this blueprint, you can again click on the same or you can 
click on the three dots at the end of it. Now, click on Assign Blueprint, and 
it will open a new blade to take some inputs:
Figure 3.29: Properties to be filled while assigning the blueprint

Managing Azure Access Control      169
	
	
As shown in the preceding figure, Blueprints use the managed identity to 
deploy your resources, which requires a location so select a location for 
that managed identity. The managed identity can be system assigned or 
user assigned. You can select the version of the blueprint definition from 
the drop-down menu. Lock assignment gives you the facility to apply the 
resource lock from here:
Figure 3.30: Fill in the values of the artifacts’ parameters
	
	
Here, you can fill the value of parameters which were left in Step 9. Once you 
fill the value for all parameters, you can click on Assign.
	
14.	 Now, go to the Assigned blueprints section on the Azure Blueprint home 
page:
Figure 3.31: Check blueprint assignment status

170      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding figure, you will see that your blueprint is assigned 
to the subscription. If you click on this assignment, you can see the details 
about this blueprint.
In this section, you saw how to apply the Azure Blueprint in your environment. You 
can choose multiple artifacts as per your requirement.
Conclusion
In this chapter, you learned how you can control the user access on different resources 
RBAC. Now, you can plan to provide only the required access to users, instead of 
providing limit less owner or contributor access. You also learned about the custom 
RBAC so you can create modified RBAC roles to fulfill the business requirements of 
additional RBAC roles which are not present in the built-in roles list. With the help 
of the Azure resource lock, you learned how to prevent any accidental deletion of 
your resources. You can set up a standard baseline through Azure Policy to deploy 
resources in Azure. You can control the kind of resources that are allowed, SKUs that 
are allowed or denied, at which location you can create resources, and many more. 
Now, using the Azure Blueprint, you can complete repetitive tasks quickly within 
the organization compliance.
In the next chapter, we will study about the Azure Network security. We will see 
the features and services Azure provides to secure your network. We will also study 
different connectivity options between Azure to Azure and Azure to on-premises 
networks.
Multiple choice questions
	
1.	 0You want to restrict a user to restart a virtual machine. Which Azure service 
will you use?
	
	
A.	 Azure resource lock.
	
	
B.	 Azure RBAC.
	
	
C.	 Azure Policy.
	
	
D.	 Azure NSG.
	
	
Answer: B
	
2.	 You want to restrict the deployment of Azure SQL MI in one of your 
subscriptions. Which Azure service will you use?
	
	
A.	 Azure NSG.
	
	
B.	 Azure RBAC.

Managing Azure Access Control      171
	
	
C.	 Azure resource lock.
	
	
D.	 Azure Policy.
	
	
Answer: D
	
3.	 You have the resource lock assigned on one of your resource groups. Being 
an owner also you are not able to remove the lock from one of the resources 
under this resource group. What could be the reason of this?
	
	
A.	 You do not have enough privilege to remove the lock.
	
	
B.	 You cannot remove the lock once you have applied it.
	
	
C.	 You need to remove the lock from the parent resource to remove the 
inherited lock from the child resource.
	
	
D.	 You need to delete the resource to remove the resource lock.
	
	
Answer: C
	
4.	 You do not see the required RBAC role in the list of built-in RBAC roles. 
What can you do to meet your business requirement?
	
	
A.	 Create a custom Azure Policy.
	
	
B.	 Create a custom RBAC role.
	
	
C.	 You do not have any option and have to use built-in RBAC roles only.
	
	
D.	 You can apply the resource lock to fill the gap of a new RBAC requirement.
	
	
Answer: B
	
5.	 There are multiple policies assigned to a resource. How will the relative 
effect be calculated?
	
	
A.	 The policy with less restrictions will take effect.
	
	
B.	 The policy with most restrictions will take effect.
	
	
C.	 The effect will be cumulative most restrictive.
	
	
D.	 The effect will be subtractive of all policies.
	
	
Answer: C
	
6.	 Which of the following is not a type of artifact supported by the Azure 
Blueprint?
	
	
A.	 Azure Key Vault
	
	
B.	 Azure Policy
	
	
C.	 Role assignment
	
	
D.	 Resource groups
	
	
Answer: A

172      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide

Chapter 4
Implementing 
Advance Network 
Security
In this chapter, we will identify and locate some important networking features and 
services, then we see how they work in Azure. Starting with network security groups, 
creating a VPN between your on-premise data center and Microsoft Azure, finishing 
with Azure Firewall, additional services, and features sprinkled in between, of this 
chapter. Some of the major topics that we will cover include planning to secure your 
Azure network, control who has access to your azure network resources. We will 
look at application gateway with WAF, Azure Front Door, Azure DDoS protection, 
and Azure Firewall. By the end of this chapter, you will have a fundamental 
understanding of how you can better secure your Azure networks using the features 
and services they provide.
After this chapter, you will be able to do a secure network planning for your 
organization. As described in the preceding paragraph, we will see different network 
security services and features so you will learn how to create and manage them in 
Azure.
Structure
In this chapter, we will learn about following topics:
	
•	
Understand Azure Virtual Networking concepts
	
•	
Azure Virtual Network connectivity scenarios

174      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Azure Network Security Group (NSG) and Application Security Group 
(ASG)
	
•	
Configure application gateway to secure app service
	
•	
Azure Front Door (AFD) service
	
•	
Azure Firewall
	
•	
Create, configure, and manage Azure Firewall policy
	
•	
Azure Firewall manager
	
•	
Shield your Azure Virtual Network with Distributed Denial-of-Service 
(DDoS) protection
	
•	
Remote access management through Azure Bastion
	
•	
Service endpoint in Azure
	
•	
Azure Resource firewall
	
•	
Conclusion
	
•	
Multiple choice questions (MCQs)
Objectives
The objective of this chapter is to understand security best practices for Azure 
networking. After reading this chapter, you should be able to plan secure networking 
for your Azure environment. You will be able to understand how to set up secure 
connections between Azure VNets and on-premises networks. You will be able to 
setup, configure, and manage Azure Firewall. You will also go through some other 
features to safeguard Azure environment with Azure standard DDoS protection. 
Apart from securing infrastructure, you will also learn the methods to secure web 
applications by using Azure application gateway and WAF. By the end of this 
chapter, you will be able to create and manage Azure Front Door for traffic routing 
and load balancing.
Understand Azure Virtual Networking 
concepts
Networking is a fundamental component of any IT infrastructure. Azure provides 
Azure Virtual Network (VNet) to set up secure connection between many types of 
resources such as virtual machines, storages, databases, and your other on-premises 
networks. For a network administrator, it would be easier to manage Azure VNet 
due to its scalability, availability, and isolation. Azure VNet itself is a long and very 
descriptive topic and can digest few books on it. We will discuss networking in brief 

Implementing Advance Network Security      175
to make you comfortable to understand the network security concepts but will take 
network security in depth. Let’s discuss basic definitions and fundamental concepts 
of Azure VNet:
 
•	
Network address space range: Every Azure VNet must have a private IP 
address range. You need to specify this range while creating the Azure VNet. 
When you create any resource such as Azure Virtual Machine, load balancer, 
containers, and so on, they require an IP address to communicate and connect 
with other resources. The required IP addresses are been assigned from this 
address range. For example, if you deploy a virtual machine in the Azure 
VNet with address space, 192.10.10.0/24, the VM will be assigned a private 
IP like 192.10.10.4.
 
•	
Network address subnet range: Subnet enables you to segment the Azure 
VNet into one or more sub-networks and allocates a portion of the virtual 
network’s address space range to each subnet. You can then deploy Azure 
resources in a specific subnet.
 
•	
Regions or locations: Azure VNet is scoped to a single region/location; 
but Azure provides capabilities to connect multiple virtual networks from 
different regions using virtual network peering. Azure VNet is a regional 
resource.
 
•	
You need to ensure that there is no overlapping of address spaces. It becomes 
more important when you plan to extend your on-premises network to 
Azure. You need to make sure that your Azure VNet address space does not 
overlap with your organization’s other network ranges.
 
•	
When you create subnets into your Azure VNet, your subnets should not 
cover the entire address space of the VNet. You need to plan address spacing 
ahead and reserve some address space for the future. It would be a good 
plan to have few large address space ranges than having multiple small 
VNet ranges.
 
•	
Since, by default, all the resources in Azure VNet can communicate outbound 
and you can access them from internet by using public IP. So, it becomes best 
practice to secure your network by using some kind of firewall.
 
•	
Communication ways between Azure resources: There are multiple ways 
that Azure resources can communicate to each other. Few of them are:
 
 
•	
Through a virtual network.
 
 
•	
Through Azure VNet peering (a way to connect two or multiple Azure 
VNets).
 
 
•	
Through service end points.

176      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Communication ways between Azure resources and on-premises resources: 
You can set up the following connections to access Azure resources (resources 
in Azure VNet) from on-premises and vice-versa. We will discuss a few of 
them in the coming sections:
 
 
•	
Through Azure ExpressRoute.
 
 
•	
Through Azure Point-to-Site VPN connection.
 
 
•	
Through Azure Site-to-Site VPN connection.
 
•	
There are multiple ways to create Azure VNet, through portal, PowerShell, 
and ARM templates. We will see Azure VNet creation in the coming sections.
In this section, we studied about the terminology and building blocks of Azure VNet. 
These points will help you to understand coming topics and to plan networking in 
your environment.
Azure VNet connectivity scenarios
We saw that there are different ways to connect Azure VNet with another Azure 
VNet and with on-premises networks. These connectivity methods provide you 
capability to access resources from another Azure VNet or on-premises networks. 
We will go through few connecting methods. Since you require to deploy and 
configure physical hardware, network tunnel, or physical cabling to set up some 
kind of connections such as Azure ExpressRoute and Azure Site-to-Site, you will not 
be able to set up those connections in your lab. I will try to put steps as descriptive 
as I can.
Setup of Azure VNet to Azure Virtual Network 
connection
Now as you understand that there can be two kind of connections from an Azure 
VNet, lets discuss the first scenario where you will understand how to connect two 
Azure VNets. These Azure VNets can be in same region or in different region or in 
different subscription. We will cover all three scenarios here and you can also achieve 
this in your test environment because it does not need any physical hardware setup.
Azure VNet peering between same and 
different subscription Azure VNets
In an enterprise environment, you may have multiple subscriptions and they 
may have multiple VNets. This VNet distribution may depend on your business 

Implementing Advance Network Security      177
requirements and architecture. But still, you may want to make connections between 
different VNets. So, maybe you have a hub and a spoke VNet and now you want 
their resources to connect with each other. Azure provides a beautiful networking 
feature of VNet peering. By using VNet peering, you can connect multiple Azure 
VNet to each other. Once you peer two Azure VNet, resources in both virtual 
networks can communicate with each other, with the same latency and bandwidth 
as if the resources were in the same virtual network. In this section, we will see two 
scenarios: in first scenario, we will go through the VNet peering between multiple 
Azure VNets in same subscription and in second scenario we will see VNet peering 
between multiple VNets from different subscriptions.
Creating Azure VNet
Let’s follow these steps to set up Azure VNet peering; in this first example I am 
going to take your through the Azure VNet creation as well, you can use the same 
steps of Azure VNet creation wherever require in the coming sections and chapters:
	
1.	 Login to Azure portal with network contributor, subscription contributor, or 
subscription owner role.
	
2.	 Search for Azure VNet in search bar and select Virtual network from search 
result.
	
3.	 To create new Azure VNet, click on + Create. This opens a new window 
to fill the required information. Fill the basic information as shown in the 
following figure and described in the following points:
Figure 4.1: Azure VNet creation basic tab information

178      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
 
•	
Subscription: Select the subscription where you want to deploy this 
VNet.
 
 
•	
Resource Group: Either you can create a new resource group or use the 
existing resource group to accommodate your Azure VNet.
 
 
•	
Name: Give a name to your Azure VNet. It is always advised to use some 
naming convention in your environment.
 
 
•	
Region: Select the geographical location where you want to deploy the 
Azure VNet. You should choose the geographical location wisely to reduce 
latency between Azure VNet and on-premises network.
	
4.	 After filling the basic details, now move to next tab, IP addresses. Here you 
can add multiple IP address ranges to your VNet. These IP address ranges 
can be divided further into subnets. Azure VNet supports both IPv4 and 
IPv6 address spaces.
Figure 4.2: Azure VNet creation IP addresses tab information
 
 
•	
Address space: Define a network address space in CIDR format. You 
can also see the number of IP addresses you get by defining the address 
range. You need to keep in mind that you do not overlap this address 
space with any other address space range in your organization. Now you 
can define IPv6 address space also.
 
 
•	
Subnet: Subnet is further division of your Azure VNet. Here, you do 
segmentation of your large network space range. Give a name of the 
segment. You can create different segments to manage different kind of 

Implementing Advance Network Security      179
workloads such as database servers, web server, app servers, domain 
controllers, and so on. You can give any name to subnet based on your 
naming convention but few Azure resources such as Azure gateway, 
needs their own subnet and in that case, you have to give subnet name 
as required by the Azure resources. So, if you want to deploy Azure 
gateway then you need to give subnet name GatewaySubnet.
 
 
•	
Subnet Address range: You define that what would be the address 
space allocated to a particular subnet or segment. You need to choose 
the address space based on the number of IPs required to you to 
accommodate workloads. From portal, you can create only one subnet 
while creating the VNet. You can create multiple subnets after the VNet 
gets deployed. To do so click on + Subnet in VNet:
Figure 4.3: Create Azure subnet under Azure VNet
	
5.	 After setting up IP address ranges and subnet address ranges, now you 
can move to next tab, Security. Here you can choose some of the network 
security services while creating the VNet.
 
 
•	
DDoS protection Standard: By default, basic DDoS protection is enabled 
from Azure side, but you can go for standard DDoS protection also to 
achieve more security based on your business requirement.
 
 
•	
Bastion Host: The Azure Bastion service is a platform-managed service. 
It provides secure and seamless RDP/SSH connectivity to your virtual 
machines directly in the Azure portal over SSL. When you connect via 
Azure Bastion, your virtual machines do not need a public IP address. 
 
 
•	
Firewall: As I said in the previous section, that you should protect your 
network with some kind of firewall. By enabling this option, you can 
either create a new Azure Firewall or can use an existing one to protect 
your Azure VNet.
	
6.	 Once you have filled all details, click on Create.
Now your Azure VNet is created. You can use this VNet for connectivity and security 
features demos.

180      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Create Azure VNet peering between Azure VNets
In this section, we will see how to set up peering between two Azure VNets. Now 
to enable Azure VNet peering, you should have two or more Azure VNets. You 
can use same preceding steps to create another Azure VNet. I created another 
VNet by name Jay-RG-VNet. Follow these steps to peer two VNets:
	
1.	 Now to peer them, you can choose any of the Azure VNet which you created 
in the preceding steps. Here let’s choose DemoVNet1.
	
2.	 Go to the Azure VNet, scroll down to Peerings under Settings and click on 
+ Add.
	
3.	 Once you click on Add, a new window opens, fill the details there:
 
Figure 4.4: Create Azure VNet peering between two virtual networks 1
 
 
•	
Peering link name: You need to define the peering name of your first 
VNet to second VNet peering.
 
 
•	
Traffic to remote virtual network: Select this option if you wish to allow 
communication between the two virtual networks. This allows the test-
rg-vnet address space to be included as part of the Virtual_Network tag.
 
 
•	
Traffic forwarded from remote virtual network: This setting allows 
forwarded traffic from test-rg-vnet (traffic not originating from inside 
test-rg-vnet) into DemoVNet1.

Implementing Advance Network Security      181
 
 
•	
Virtual network gateway or Route Server: Allow gateway transit comes 
into the picture when, you have site-to-site connection between your on-
premises network and one of your Azure VNet (let’s say to DemoVNet1). 
Now you can extend the site-to-site connection to another Azure VNet 
(test-rg-vnet) also by just peering it with DemoVNet1 and enabling the 
Allow gateway transit feature. Although test-rg-vnet does not have 
direct site-to-site connection with on-premises network but still its 
resources will be able to access on-premises resource through DemoVNet1.
 
Figure 4.5: Create Azure VNet peering between two virtual networks 2

182      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
 
•	
Peering link name: You need to define the peering name of your second 
VNet to first VNet peering.
 
 
•	
VNet deployment model: You can create peering between Resource 
manger based and classic VNets also. So here select the deployment 
model of your second VNet. If you want to peer Azure Classic VNet, 
then select the option Classic.
 
 
•	
Now select the target or second Azure VNet which you want to peer with 
DemoVNet1. To select the target Azure VNet, you need to first select the 
subscription of target Azure VNet and then the name of the target Azure 
VNet. Here you need to pay attention that by select the subscription you 
can peer two Azure VNets from two different subscriptions also. If you 
select subscription other than your current subscription, you will get the 
list of Azure VNets from another subscription and you can choose any of 
that to peer with your first Azure VNet. So, here we cover our two kinds 
of peering scenarios.
	
4.	 Once you fill all these details click on OK. You can see the peering status in 
both the Azure VNets. You can create multiple peering by clicking + Add:
 
Figure 4.6: Status of VNet peering
In this section, we studied about VNet peering between two Azure VNets. Like this 
you can create peering between other two VNets.
Let’s say you have three Azure VNets. VNet A, VNet B, and VNet C. If you peer 
VNet A and VNet B, VNet B and VNet C. That means resources of VNet A and 
resources of VNet B can access each other. Similarly, resources of VNet B and 
resources of VNet C can access each other. But since VNet A and VNet C are not 
peered with each other so resources of VNet A and VNet C cannot access each 
other. You will need to setup dedicated peering between VNet A and VNet C to 
make them access each other’s resources.

Implementing Advance Network Security      183
Azure VNet to Azure VNet (in same Azure 
subscription) connectivity through IPsec/IKE tunnel
In the previous section, we studied about Azure VNet peering. There is any another 
way to connect two Azure VNets through IPsec/IKE tunnel. This kind of connection 
is mostly used when you want to connect two VNets from two different tenants. In 
this section, you will understand how you can connect Azure VNet by using the 
VNet-to-VNet connection type. These Azure VNet can be in the same or different 
regions, and from the same or different subscriptions. This type of connectivity 
uses a VPN gateway to provide a secure tunnel using IPsec/IKE. In this chapter, 
we will connect Azure VNets from same subscription. If the Azure VNets are in 
same subscription then you can connect them from portal, but if Azure VNets are in 
different subscription then you need to use Azure PowerShell.
Create Azure Virtual Network gateway
You require two Azure VNets in the same subscription. You already know the 
process to create Azure VNet. You can use steps from the preceding section to create 
new Azure VNets. I am using DemoVNet1 and DemoVNet2 for this exercise.
VNet-to-VNet connection uses Azure Virtual Network gateway as an edge device. 
You need to have an Azure Virtual Network gateway in each Azure VNet which you 
want to connect through Azure VNet-to-VNet connection. The gateway advertises 
your Azure VNet’s IP address ranges to another Azure VNet. The virtual network 
gateway needs to be deployed in a specific subnet that is called gateway subnet. 
Follow these steps to create Azure Virtual Network in each VNet:
	
1.	 Once you have created Azure VNets, go to Azure VNet and click on Subnets.
	
2.	 You will see available subnets and option to create new subnets. To create 
gateway subnet, click on + Gateway subnet.
	
3.	 A new blade opens to fill the details. It does not give option to update the 
subnet name. You can choose an address range for your gateway subnet. It is 
recommended to have at least /27 or /28 address range.
	
4.	 Click on OK, once you filled the details.
	
5.	 You can use same steps to create gateway subnet for another Azure VNet 
also:

184      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 4.7: Create gateway subnet under Azure Virtual Network
	
6.	 Under Subnets, you can now see the newly created gateway subnet in both 
VNets.
	
7.	 Now you have required setup to create virtual network gateway. Search for 
virtual network gateway in Azure Marketplace. Fill the following details:
Figure 4.8: Create Azure Virtual Network gateway 1
	
8.	 Select the Azure subscription where you have your Azure VNet.
	
9.	 Resource group would be the same as your Azure VNet and will be auto 
populated when you select your Azure VNet in the coming fields.
	
10.	 Give a meaning full name to identify this virtual network gateway.
	
11.	 Select the Azure region where your Azure VNet is been created.
	
12.	 For VNet-to-VNet connection you need to select VPN as Gateway type.

Implementing Advance Network Security      185
	
13.	 Select Route-based VPN type.
	
14.	 There are different SKUs available for this gateway which can support higher 
bandwidth. You can select appropriate SKU based on your bandwidth 
requirement.
	
15.	 Select Generation 1. There was only one generation option at the time of 
writing this book:
Figure 4.9: Create Azure Virtual Network gateway 2
	
16.	 In the Virtual network field, select the VNet for which you want to set up 
connection.
	
17.	 Once you select the VNet, the respective gateway subnet gets populated.
	
18.	 Virtual network gateway needs a public IP, you can either use an existing 
public IP or can create a new public IP.
	
19.	 Enable active-active mode, if you want high availability with load balancing 
for your virtual network gateway. This will ask you to create another public 
IP.
	
20.	 You can assign tags to any Azure resource. Tags can be used for different 
purposes such as billing, owners, application, and so on.
	
21.	 Click on Review and create. It will take around 45 minutes to deploy this 
virtual network gateway.

186      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Follow the same process to create virtual network gateway for another Azure VNet. 
Once you have virtual network gateways created for VNet-to-VNet connection, you 
can move to next step to stablish connection between these gateways.
When you are working with gateway subnets, avoid associating a network security 
group (NSG) to the gateway subnet. Associating a network security group to this 
subnet may cause your virtual network gateway (VPN, ExpressRoute gateway) to 
stop functioning as expected.
ExpressRoute lets you extend your on-premises networks into the Microsoft cloud 
over a private connection facilitated by a connectivity provider. It provides Layer 
3 connectivity between your on-premises network and the Microsoft Cloud. With 
ExpressRoute, you can establish connections to Microsoft cloud services, such 
as Microsoft Azure and Office 365. ExpressRoute connections do not go over the 
public internet. This allows ExpressRoute connections to offer more reliability, 
faster speeds, consistent latencies, and higher security than typical connections 
over the internet.
Creating Azure network gateway connection
When the virtual network gateways for both DemoVNet1 and DemoVNet2 have 
deployed successfully, you can create virtual network gateway connections. In this 
section, you will create a connection from DemoVNet1 to DemoVNet2. These steps 
work only for the VNets in the same subscription. If your VNets are in different 
subscriptions, you must use PowerShell to make the connection:
	
1.	 In Azure resources search for DemoVNet1_VNetGateway and go to the gateway:
Figure 4.10: Overview of Azure Virtual Network gateway
	
2.	 On the Overview page, you will the details about the virtual network 
gateway. Go to Connections under Settings.
	
3.	 In the Connections panel, you get option to create new connection, click on 
+ Add. 
.

Implementing Advance Network Security      187
	
4.	 Once you click on + Add to create new connection, a new blade opens as 
shown in the following figure. Fill the details.
	
5.	 In the Name field, put the name of connection.
	
6.	 Since this virtual network gateway can be used for other connection types 
also, so select VNet-to-VNet connection type from the drop down.
	
7.	 First virtual network gateway is already populated.
	
8.	 In second virtual network gateway, select your second virtual network 
gateway.
	
9.	 Shared key is a mixture of letters and numbers, used to establish encryption 
for the connection. The same shared key must be used in both the virtual 
network gateways. You can give any random string here and make sure you 
provide same string when you create connection from second VNet gateway 
to first VNet gateway.
	
10.	 Keep the other things default and click on OK:
Figure 4.11: Create connection between Azure Virtual Network gateways

188      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
11.	 When you go to DemoVNet2_VNetGateway, you will see the previous 
connection already there. That is unidirectional so you need to create another 
connection from DemoVNet2_VNetGateway to DemoVNet1_VNetGateway. Follow 
the preceding same steps to create connection from DemoVNet2_VNetGateway 
to DemoVNet1_VNetGateway.
	
12.	 It will take some time but both the connections will get connected:
Figure 4.12: Status of Azure Virtual Network gateway connection
	
	
As shown in the preceding figure, after some time when you go to any of the 
virtual network gateways and then connection, you will find there are two 
connections and Connected state.
With the preceding steps, you have connected both Azure VNets. The resources 
from each VNet will be able to communicate to each other. You can use same virtual 
network gateways to make connections with other VNets.
You cannot manage classic subscription account administrator, service 
administrator, and co-administrator roles through Azure AD PIM. Except 
Exchange administrator and SharePoint administrator roles other Exchange 
Online or SharePoint Online roles are not represented in Azure AD so they cannot 
be managed in PIM.
Azure VNet to on-premises network connection
In this section, you will understand how to use the Azure portal to create a site-to-
site VPN gateway connection from your on-premises network to the Azure VNet. A 
site-to-site VPN gateway connection is used to connect your on-premises network 
to an Azure VNet over an IPsec/IKE (IKEv1 or IKEv2) VPN tunnel. This type of 
connection requires a VPN device located on-premises that has an externally (public) 
facing public IP address assigned to it.
You need to make sure that you have a compatible public facing VPN device in your 
on-premises network. You can get the list of compatible VPN devices from Microsoft 

Implementing Advance Network Security      189
site. This VPN device should have public IPv4 address. You should have someone 
who can configure this VPN device to set up connection with Azure VNet. If you 
do not have on-premises network with you then it would be difficult to test this 
scenario in your lab. You require the following listed resources to set up site-to-site 
connection between on-premises network and Azure VNet:
 
•	
On-premises network.
 
•	
On-premises VPN device with IPv4 public IP.
 
•	
Azure virtual network (IP address range should not overlap with on-
premises network IP address range).
 
•	
Azure Virtual Network gateway.
 
•	
Local network gateway.
From the preceding list, only local network gateway would be new for you in this 
section. I will be using my old Azure VNet DemoVNet1 to set up this site-to-site 
connection. You can ready your Azure environment by creating Azure VNet and 
Azure VNet gateway.
I assume that you already have your on-premises network and also have created 
Azure VNet and virtual network gateway. To set up site-to-site connection, our next 
step would be to create local network gateway.
Creating local network gateway
The local network gateway refers to your on-premises location. You give the site 
a name by which Azure can refer to it. Then you specify the IP address of the on-
premises VPN device to which you will create a connection. You also specify the IP 
address prefixes that will be routed through the VPN gateway to the VPN device. The 
address prefixes you specify are the prefixes located on your on-premises network. 
Follow these steps to create local network gateway:
	
1.	 Login to Azure portal and search for local network gateway, click on + Add.
	
2.	 Once you click on + Add, a new blade opens and there you need to fill the 
details of your on-premises network:
 
 
•	
Name of the on-premises site.
 
 
•	
Public IP of your on-premises VPN terminal device.
 
 
•	
Network address range of your on-premises network. You can add 
multiple address ranges.
 
 
•	
Select the subscription where you want to deploy this local network 
gateway.

190      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
 
•	
Resource group and location of the local network gateway:
Figure 4.13: Create local network gateway
	
3.	 Click on Create.
It will take some time to complete the deployment of local network gateway. Once 
the deployment is completed, your on-premises network’s representative is ready 
in Azure.
Creating Azure network gateway connection
Although from the previous section, you know how to create Azure Virtual Network 
gateway connection but there is slit change in configuration, we will cover that here.
	
1.	 Go to the Azure Virtual Network gateway, in our case it would be DemoVNet1_
VNetGateway and select Connections under Settings.
	
2.	 You get an option to add new connection. A new blade opens to fill the 
details:
 
 
•	
Give a name to this connection.

Implementing Advance Network Security      191
 
 
•	
Select Site-to-site from the Connection type drop-down.
 
 
•	
The virtual network gateway is already selected.
 
 
•	
Choose the local network gateway which you created in the previous 
section.
 
 
•	
Give a complex shared key.
 
 
•	
Keep the remaining settings as default:
Figure 4.14: Create connection with local network gateway
	
3.	 Click on OK to create the connection.
Once the connection is created, it means a tunnel setup is been initiated between 
Azure VNet and on-premises network.
Configuring on-premises VPN device
Site-to-site connections to an on-premises network require a VPN device. In this 
section, you configure your VPN device. When you are configuring your VPN 
device, you need the following:

192      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
 
•	
A shared key. This is the same shared key that you specify when creating 
your site-to-site VPN connection in the previous section.
 
 
•	
The public IP address of your virtual network gateway. You can view the 
public IP address by using the Azure portal. To find the Public IP address 
of your virtual network gateway using the Azure portal, navigate 
to Virtual network gateways, then click the name of your gateway.
 
 
•	
You can use Microsoft official link to help you to download VPN device 
configuration scripts:
Figure 4.15: Status of connection between on-premises network and Azure
Once on-premises VPN is configured, your connection status will become connected 
and you will be able access Azure resources from on-premises network and vice 
versa.
Azure Network Security Group (NSG) and 
Application Security Group (ASG)
Being at on-premises or in Azure network, you would like to allow and deny certain 
traffic. Network Security Group (NSG) provides you capability to allow and deny 
network traffic based on your requirement. NSG is one of the traffic filtering service 
in Azure. By using NSG, you can allow and deny network traffic to and from Azure 
resources in an Azure VNet. An NSG contains  security rules  that allow or deny 
inbound network traffic to, or outbound network traffic from, several types of Azure 
resources. Each NSG rule contains some components to allow or deny traffic. In this 
section, we will go through the different components of security rules, creation, and 
management of NSG.
You can assign NSG at network interface card (NIC) and/or to network subnet.
Components of network security rule
A NSG can have multiple security rules. These rules have some components, you 
would like to understand those components and how to use them:
 
•	
Name: Name of the security rule.

Implementing Advance Network Security      193
 
•	
Priority: Each NSG can have multiple security rules. These security rules 
are assigned a priority number. The rules are processed in priority order. So 
with priority numbers the lower numbers processed before higher numbers 
because lower numbers have higher priority. The priority can be defined 
between number between 100 and 4096. Once traffic matches a security rule, 
processing stops.
 
•	
Source: This defines the sources of traffic. You have multiple options to 
assign a source such as Any (any public or private IPs and services), or an 
individual IP address, IP address range in classless inter-domain routing 
(CIDR) block format (for example, 192.0.0.0/8), service tag, or application 
security group. NSGs are processed after Azure translates a public IP address 
to a private IP address for inbound traffic, and before Azure translates a 
private IP address to a public IP address for outbound traffic. 
	
	
We will understand service tag and application security group in deep in the 
coming sections.
 
•	
Destination: This defines the destination of traffic. It has same options to 
assign destination, such as Any (any public or private IPs and services), or an 
individual IP address, IP address range in CIDR block format (for example, 
192.0.0.0/8), service tag, or application security group.
 
•	
Protocol: While creating network security rule you can restrict traffic at port 
level also. You can select different port types such as TCP, UDP, ICMP or 
can give a wild card by selecting Any.
 
•	
Port range: Once you have decided the type of protocol, you can select the 
ports. You can select multiple ports or port range with comma separated (80, 
443, 1443, 300-1000) or in a range (1000-5000).
 
•	
Direction: The security rule can be defined in two kind of traffic flow, in 
bound and out bound. You can select either of these flow directions. For 
in bound rule, the destination would be your private network, and for out 
bound rule, the source would be your private network.
 
•	
Action: Each rule has an action aligned with it. The rule can allow or deny traffic.
NSG security rules are defined with priority. The priority number is used to evaluate 
to allow or deny the traffic. While creating Azure NSG, it creates few default security 
rules in both inbound and outbound groups. These default security rules cannot be 
deleted, but you can override them by creating higher priority rules.
Azure Virtual Network service tags
Every Azure PaaS service has few public IP assigned to them. These public IPs are 
managed and controlled by Microsoft. Microsoft can change these public IPs as per 

194      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
their requirement without informing customers. It could be difficult to keep the track 
of these public IPs while creating a network rule to access these PaaS services. So, 
Microsoft came up with a concept of service tags. A service tag represents a group 
of IP address prefixes from a given Azure service. Microsoft manages the address 
prefixes encompassed by the service tag and automatically updates the service tag 
as addresses change.
You can use service tags on network security groups or Azure Firewall. Instead of 
using specific IP address, it is recommended to use service tags. By specifying the 
service tag name in the appropriate source or destination field of a rule, you can 
control (Allow or Deny) the traffic for the corresponding Azure service.
Service tags also protect you to allow whole internet traffic just to access some Azure 
services. You can use service tags to achieve network isolation and protect your 
Azure resources from the general internet.
Traffic flow through Azure NSGs
Azure VNet can accommodate multiple resources from several Azure services. As 
we studied in the previous section, network security rules can be associated with 
virtual network subnet and network interface. Virtual network subnet and network 
interface can have zero or one or multiple NSG associated with them. You can also 
associate same network security group to as many subnets and network interfaces.
The following diagram shows different scenarios for how network security groups 
might be deployed to allow network traffic to and from the internet over TCP port 443:
Figure 4.16: Traffic flow through NSG

Implementing Advance Network Security      195
Reference the previous diagram, along with the following text, to understand how 
Azure processes inbound and outbound rules for NSGs.
Inbound traffic
For incoming traffic, Azure checks and processes the subnet level NSG rules first 
and then network interface level rules. Here we will see how you should plan NSG 
rules to allow incoming traffic from the internet at port 443:
 
•	
VM1: VM1 has NSG rules at both the places, at subnet level and at NIC level. 
To access VM1 from the internet over port 443, the security rules in Subnet1_
NSG will be processed first because it is associated to Subnet1 and VM1 is 
in Subnet1. If you do not have a rule that allows port 443 inbound, the traffic 
will be denied by the DenyAllInbound default security rule. Although VM1 
has NIC1_NSG at NIC level but since the traffic is been denied at subnet level 
so it will not be evaluated further by NIC1_NSG. Now, if you have a security 
rule in Subnet1_NSG that allows port 443, then the traffic will be processed 
by NIC1_NSG. To allow incoming traffic at port 443 the virtual machine must 
have a rule that allows port 443 from the internet, in both  Subnet1_NSG 
and NIC1_NSG.
 
•	
VM2: VM2 does not have any NSG rule at NIC level. But since VM2 is also 
residing in subnet 1 so Subnet1_NSG rules will be applied on VM2. Now 
to access VM2 from the internet, only the rules in  Subnet1_NSG  will be 
processed. Since VM2 does not have any NSG associated with its NIC, it will 
receive all traffic allowed through Subnet1_NSG or denied all traffic denied 
by Subnet1_NSG. When NSG is assigned at subnet level, the same NSG rules 
get applied on all underlined resources in that subnet.
 
•	
VM3: VM3 resides in Subnet2 and just has NSG assigned at network 
interface level. There is no network security group associated to Subnet2. So, 
all incoming traffic is allowed into the subnet. Now since VM3 just has NIC1_
NSG at network interface level so the traffic will and processed by NIC1_NSG.
 
•	
VM4: VM4 resides in Subnet3. There is no NSG associated at subnet and 
network interface level for VM4. Since there is not NSG so all traffic is allowed 
to VM4. If there is not NSG associated to any resource then all network traffic 
is allowed through a subnet and network interface.
Outbound traffic
For outbound traffic, Azure checks and processes the network interface level NSG 
rules first and then subnet level rules. We will refer to Figure 4.16 to understand NSG 

196      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
rule processing. Here we will see how you should plan NSG rules to block outbound 
traffic to internet at port 443.
 
•	
VM1: VM1 is residing in subnet1 and has NSG rule associated at both 
subnet and network interface level. For any outbound connection, NIC1_
NSG rules will be processed first. By default, outbound traffic to internet is 
allowed by default NSG rule AllowInternetOutbound in both Subnet1_NSG 
and NIC1_NSG. To block outbound traffic at port 443 you will need to create a 
security rule that denies port 443 outbound to the internet. If NIC1_NSG has a 
security rule that denies port 443, the traffic is denied, and never evaluated 
by Subnet1_NSG. To deny port 443 from the virtual machine, either, or both 
of the NSGs must have a rule that denies port 443 to the internet.
 
•	
VM2: VM2 also resides in subnet1 but does not have any NSG rule at network 
interface level. So, all traffic will be sent to subnet and will be evaluated by 
Subnet1_NSG only. If Subnet1_NSG has any deny rule for 443 traffic then the 
outbound traffic will be blocked otherwise it will get allowed due to default 
NSG rule AllowInternetOutbound 
 
•	
VM3: VM3 resides in Subnet2 and just has NSG rule at network interface 
level. There is not NSG rule at subnet level. Since there is no NSG associated 
with subnet level then if NIC1_NSG has a security rule that denies port 443, 
the traffic is denied, If NIC1_NSG has a security rule that allows port 443, then 
port 443 is allowed outbound to the internet.
 
•	
VM4: VM4 is residing in subnet3. VM4 does not have any NSG associated 
with it. Neither at subnet level nor at network interface level. All network 
traffic is allowed from VM4 because it does not have any NSG rule associated 
with it.
Intra-subnet traffic
Although by default, resources in same subnet can communicated with each other 
without any specific NSG. But you can restrict this communication by using NSG 
rules. For example, if you add a rule to  Subnet1_NSG to denies all inbound and 
outbound traffic, VM1 and VM2 will no longer be able to communicate with each 
other. Another rule would have to be added specifically to allow this.
You can easily view the aggregate rules applied to a network interface by viewing 
the  effective security rules  for a network interface. You can also use the  IP flow 
verify capability in Azure Network Watcher to determine whether communication 
is allowed to or from a network interface. IP flow verify tells you whether 
communication is allowed or denied, and which network security rule allows or 
denies the traffic.

Implementing Advance Network Security      197
Create, configure, and manage Azure NSGs
In the preceding sections, you went through the building blocks and functionality 
of NSGs. In this section, you will understand how to create, configure, and manage 
NSGs. It is recommended that you associate a NSG to a subnet, or a network 
interface, but not both. Since rules in a NSG associated with a subnet can conflict 
with rules in a NSG associated with a network interface. This may lead unexpected 
communication problems that require troubleshooting.
You require network contributor Azure AD built in RBAC role to work on NSGs.
Create Azure NSG
Follow these steps to create NSGs:
	
1.	 Login to Azure portal, search for NSG and click on + Add to create new NSG.
	
2.	 Once you add new NSG, a new blade opens. Fill the details shown as follows:
 
 
•	
Select the subscription.
 
 
•	
Choose the existing resource group or you can create a new resource 
group from here.
 
 
•	
Give a meaningful name to this NSG, as per your naming convention.
 
 
•	
Select the region where you want to create this NSG. It is recommended 
to have this in same region where you have your virtual network:
Figure 4.17: Create network security group
	
3.	 Once you filled the required details, you can click on Create. A new NSG will 
be created.

198      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Configure Azure NSG
In the previous section, you have created NSG, you can find this new NSG by 
searching it from its name or under NSGs list. A newly created NSG just has default 
security rules. Also, the new NSG is associated with any network interface and 
subnet. You may need to create new rules as per your requirement to flow network 
traffic and will also need to associate it with subnet or network interface to get its 
functionality:
Figure 4.18: Azure NSG overview
The preceding figure shows the overview of the NSG which was created in the 
previous section. It shows the default NSG rules and various options to configure 
and manage NSG. We will go through the options in this section:
 
•	
Activity log: The Activity log section stores the logs related to any activity 
happen on this NSG. If there is been any modification in NSG configuration, 
a log will be recorded under Activity log. You can feed activity logs into 
Azure alerts or any other monitoring tool to get notification and alerts:
Figure 4.19: Azure NSG activity logs
	
	
I created some inbound and outbound security rules in NSG. My activities 
are captured under Activity logs. You can see who did what and when.

Implementing Advance Network Security      199
 
•	
Access control (IAM): Here, you can define who can control and manage 
NSG. It is important that you manage access control very carefully because 
you would not want everyone to manage the rules:
Figure 4.20: Manage access control over Azure NSG
	
	
You can assign required role to users by selecting the Add role assignment 
option.
 
•	
Inbound security rules: Here, you define what kind of incoming traffic is 
allowed and blocked. While creating the rules you need to provide some 
information such as priority, name of the rule, port range, protocol name, 
source, destination, and action. We have discussed all the preceding factors 
in the previous section:
Figure 4.21: Create inbound rule in Azure NSG

200      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
In the preceding figure, I allowed incoming traffic from any source to any 
destination on port 80 and 443. The priority of this rule is 100 and I gave name 
Allow_Internet to this rule. In Service field, you can select some predefined 
service also. So, by selecting the predefined service, the respective port and 
protocol get selected automatically. For example, if I would have selected 
HTTPS from the Service field dropdown then port 443 and protocol TCP 
would have been selected automatically.
 
•	
Outbound security rules: Here, you define what kind of out going traffic 
is allowed and blocked. While creating the rules you need to provide some 
information such as priority, name of the rule, port range, protocol name, 
source, destination, and action. We have discussed all the preceding factors 
in the previous section:
Figure 4.22: Create outbound rule in Azure NSG 
	
	
In the preceding figure, I blocked out going HTTPS traffic from any source 
to any destination. Here I selected Service HTTPS from the service field 
dropdown, and you can see the respective port (443) and protocol (TCP) 
get selected automatically. The priority of this rule is 1a0 and I gave name 
Deny_Internet_outbound to this rule. This rule will prevent you to access 
internet from your system.
 
•	
Network interfaces: In the previous sections, we discussed that you could 
attach NSG to subnet and/or network interface (NSG) of any virtual machine:

Implementing Advance Network Security      201
Figure 4.23: Attach Azure NSG to network interface
	
	
You can click on Network interfaces to see on which NIC this NSG is 
attached. You can associate this NSG to other NICs also by selecting the 
Associate option.
 
•	
Subnets: A NSG can be attached to network interfaces (NIC) and virtual 
network subnets. When you apply NSG over subnet then the security rules 
get applied on all Azure resources which reside inside that subnet. You need 
to take this decision wisely that you want to apply same security rule on all 
VMs in that subnet or not.
You can click on Subnets to see on which subnets this NSG is associated. You can 
associate this NSG to other subnets also by selecting the Associate option.
The preceding points will help you to configure and manage NSGs in your 
environment. They make it clear that what operations you can do with NSG.
Manage Azure NSG
You have knowledge now to create and configure Azure NSG. But being a security 
administrator, it is not the only think you require. You need to know how to modify 
the security rules, associate, and dissociate NSGs from the network interface and 
subnets. You may require this when you get a new request to allow or deny some 
network traffic. To do so, you will need to adjust security rules of NSG.
Modify security rules
In the previous sections, you created an NSG. This NSG has few default rules created. 
But you may get requirement to add few more rules or to modify the existing rules. 
Let’s go through the steps to modify the NSG
	
1.	 Login to Azure portal and go to the NSG which you want to modify.
	
2.	 On the left side option panel of NSG, you will the Inbound security rules 
option and Outbound security rules. You can choose the appropriate option 
to create or modify the rules. For this demo, I am creating a new inbound 
rule.
	
3.	 When you click on any of the option, a new blade opens. This blade shows 

202      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
you the existing NSG rules. At the top of this blade, you will see + Add to 
create a new rule:
Figure 4.24: Create inbound rule in Azure NSG 
	
4.	 The preceding figure shows the sample to create a new NSG rule. I am 
creating a new inbound rule for allowing the RDP from internet.
	
5.	 Once you put all the details click on Add, this new rule will be added to 
NSG.
	
6.	 To modify the existing rule, you need to click on the rule and the same blade 
opens. You can change the values of desired field to modify the rule.
Here we saw how to add new security rule to modify existing NSG rules. You can 
also delete not required rules by clicking on three dots at the end of these rules.
Associate NSGs to network interfaces
Once you have created an NSG with proper rules, this NSG is ready to be attached 
with network interface card(s) of a virtual machine(s). Let’s see how you can attach 
this NSG to network interface cards:
	
1.	 On the same NSG, in left option panel you an Network interfaces option.

Implementing Advance Network Security      203
	
2.	 A new window opens once you click on network interfaces option. This 
window shows the detail of network interfaces and virtual machines to 
which this NSG is been already attached.
	
3.	 To attach this NSG with new network interface, there is an Associate option 
at the top of this window.
	
4.	 When you click on Associate, a new blade opens with the list of network 
interfaces. You can choose a desired network interface to attach this NSG.
Here you saw how you can attach new NSG rule to network interface. You can repeat 
these steps to associate this NSG with other interfaces.
Dissociate NSGs from network interface
You may need to dissociate NSG from the network interface because of any reason. 
Let’s follow these simple steps to dissociate NSG from a network interface:
	
1.	 On the same NSG, in left option panel you an Network interfaces option.
	
2.	 A new window opens once you click on the Network interfaces option. 
This window shows the detail of network interfaces and virtual machines to 
which this NSG has been already attached.
	
3.	 On the attached network interface list, choose the desired network interface 
from which you want to dissociate this NSG. At the end of network interface 
entry, there are three dots.
	
4.	 Click on those dots and an option will appear to dissociate this NSG. Click 
on Dissociate, it will ask for the confirmation, if you say Yes, NSG will be 
dissociated from the network interface. After this the network interface will 
not be seen in the list of network interfaces.
	
5.	 Here you saw how you can dissociate NSG rule from the network interface. 
You can repeat these steps to dissociate this NSG with other interfaces.
Associate NSGs to subnets
Once you have created an NSG with proper rules, this NSG is ready to be attached 
with subnet(s). Let’s see how you can attach this NSG to subnets:
	
1.	 On the same NSG, in left option panel you an Subnets option.
	
2.	 A new window open once you click on the Subnets option. This window 
shows the detail of subnets to which this NSG has been already attached.
	
3.	 To attach this NSG with new subnet, there is an Associate option at the top 
of this window.

204      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
4.	 When you click on Associate, a new blade opens. You need to choose a 
desired virtual network and a subnet under that virtual network to attach 
this NSG.
Here, you saw how you can attach new NSG rule to subnet. You can repeat these 
steps to associate this NSG with other subnets.
Dissociate NSG from subnet
You may need to dissociate NSG from the subnet because of any reason. Let’s follow 
these simple steps to dissociate NSG from a subnet:
	
1.	 On the same NSG, in left option panel you an Subnets option.
	
2.	 A new window opens once you click on the Subnets option. This window 
shows the detail of subnets to which this NSG has been already attached.
	
3.	 On the attached subnets list, choose the desire subnet from which you want 
to dissociate this NSG. At the end of subnet entry, there are three dots.
	
4.	 Click on those dots and an option will appear to dissociate this NSG. Click 
on Dissociate, it will ask for the confirmation, if you say Yes, NSG will be 
dissociated from the subnet. After this the subnet will not be seen in the list 
of subnets.
Here, you saw how you can dissociate NSG rule from subnet. You can repeat these 
steps to dissociate this NSG with other subnets.
Azure Application Security Groups (ASG)
Azure Application Security Group (ASG) allows you to group virtual machines 
based on their application, roles and functionality. Then you can define network 
security policies based on those groups. With the help of ASGs, you do not need 
to specify the IP addresses of servers or network range, you can specify the ASG to 
define source or destination servers. The security rule that specifies an ASG as the 
source or destination are only applied to the network interfaces that are members 
of the application security group. If the network interface is not a member of an 
application security group, the rule is not applied to the network interface, even 
though the network security group is associated with the subnet.
 
•	
In one security rule, you can only specify one application security group as 
the source and destination.
 
•	
All network interfaces assigned to an application security group have to exist 
in the same virtual network that the first network interface assigned to the 
application security group is in. For example, if the first network interface 
assigned to an application security group named DataASG is in the virtual 

Implementing Advance Network Security      205
network named DemoVNet1, then all subsequent network interfaces assigned 
to DataASG must exist in DemoVNet1. You cannot add network interfaces from 
different virtual networks to the same ASG.
 
•	
If you specify an ASG as the source and destination in a security rule, the 
network interfaces in both ASGs must exist in the same virtual network. 
For example, if  DataASG  contained network interfaces from  DemoVNet1, 
and  WebASG  contained network interfaces from  DemoVNet2, you could not 
assign  DataASG  as the source and  WebASG  as the destination in a rule. All 
network interfaces for both the source and destination ASGs need to exist in 
the same virtual network.
Here we learnt about ASG. This concept is basically developed to apply same type 
of rules on multiple servers of a same application. So, if you have multiple servers 
for an application and you want to apply same NSG rules then instead of applying 
multiple NSG rules on each server, you can create ASG and apply that ASG to 
multiple servers. This will reduce your manual efforts and chances of missing rules.
Configure application gateway to secure 
app service
Azure Application Gateway is a layer 7 web traffic load balancer. It helps you to 
manage traffic across your web applications. Traditional load balancers operate at 
the transport layer (OSI layer 4: TCP and UDP) and route traffic based on source IP 
address and port, to a destination IP address and port.
Application gateway routes traffic based on HTTP requests, URI path or host 
headers. For an example, you can route traffic based on the incoming URL. So, if /
images is in the incoming URL, you can route traffic to a specific set of backend 
servers configured for images. If /video is in the URL, that traffic can be routed to 
another pool that is optimized for videos.
Application gateway features
In this section, let’s discuss the features of application Gateway in detail. These 
features will help you to decision to choose application gateway for your app service:
 
•	
Secure Sockets Layer (SSL/TLS) termination: Application gateway supports 
SSL/TLS termination at the gateway. After this SSL termination traffic flows 
unencrypted to the backend servers. SSL termination at application gateway 
keeps web servers unburdened from heave encryption and decryption 
process overhead. But sometimes unencrypted communication to the servers 

206      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
is not an acceptable option. This can be because of security requirements, 
compliance requirements, or the application may only accept a secure 
connection. To meet these requirements, application gateway supports end 
to end SSL/TLS encryption.
 
•	
Autoscaling: Autoscaling feature is supported by application gateway 
Standard_v2. With this feature, application gateway can scale up or down 
based on changing traffic load patterns.
 
•	
Zone redundancy: To get better fault resiliency, application gateway 
Standard_v2 supports multiple availability zones.
 
•	
Static VIP: Static VIP is supported by application gateway Standard_v2 SKU.
 
•	
Web Application Firewall: Web Application Firewall (WAF) is a service 
that provides centralized protection of your web applications from common 
exploits and vulnerabilities. It is difficult to prevent such attacks in application 
code so a centralized WAF helps make security management much simpler 
and gives better assurance to application administrators against threats or 
intrusions.
 
•	
Ingress controller for AKS: Application Gateway Ingress Controller 
(AGIC) allows you to use application gateway as the ingress for an Azure 
Kubernetes Service (AKS) cluster. Application gateway ingress controller 
runs as a pod within the AKS cluster and consumes  Kubernetes ingress 
resources  and converts them to an application gateway configuration, 
which allows the gateway to load-balance traffic to the Kubernetes pods. 
The ingress controller only supports application gateway Standard_v2 and 
WAF_v2 SKUs.
 
•	
URL-based routing: URL path-based routing allows you to route traffic to 
back-end server pools based on URL paths of the request. One of the scenarios 
is to route requests for different content types to different pool. For example, 
requests for http://mybook.com/video/* are routed to VideoServerPool, 
and http://mybook.com/images/* are routed to ImageServerPool.
 
•	
Multiple-site hosting: Multiple-site hosting enables you to configure more 
than one web site on the same application gateway instance. This feature 
allows you to configure a more efficient topology for your deployments by 
adding up to 100 web sites to one application gateway. Each web site can 
be directed to its own pool. For example, application gateway can serve 
traffic for  mybook.com  and  mywebapp.com  from two server pools called 
MyBookPool and MyWebAppPool. Requests for http://mybook.com are routed 
to MyBookPool, and http://mywebapp.com are routed to MyWebAppPool.
 
•	
Session affinity: When you want to keep a user session on the same server the 

Implementing Advance Network Security      207
then cookie-based session affinity feature is very useful. By using gateway-
managed cookies, the application gateway can direct subsequent traffic from 
a user session to the same server for processing.
 
•	
Connection draining: Connection draining helps you achieve graceful 
removal of backend pool members during planned service updates. This 
setting is enabled via the backend HTTP setting and can be applied to all 
members of a backend pool during rule creation. Once enabled, application 
gateway ensures all deregistering instances of a backend pool do not receive 
any new request while allowing existing requests to complete within a 
configured time limit. This applies to both backend instances that are 
explicitly removed from the backend pool by a user configuration change, 
and backend instances that are reported as unhealthy as determined by the 
health probes. 
 
•	
Custom error pages: Application gateway allows you to create custom error 
pages instead of displaying default error pages.
These are few of the features supported by Azure Application Gateway.
Traffic flow through application gateway
In this section, we will see how traffic flows through application gateway. This will 
help you to understand networking architecture of application gateway.
How an application gateway accepts a request
In this sub-section, we will see how application gateway accepts a request, what 
happens when a user requests to access web app covered with application gateway.
	
1.	 Once a request hits to an application gateway, first it resolves the domain 
name of the application gateway by using an Azure managed DNS server 
because application gateways are in the azure.com domain.
	
2.	 After resolution, Azure DNS returns the frontend IP address of the application 
gateway to the client.
	
3.	 The application gateway accepts incoming traffic on its listeners. A listener 
is a logical entity that checks for connection requests. Listener is configured 
with a frontend IP address, protocol, and port number for connections from 
clients to the application gateway.
	
4.	 If application gateway has a web application firewall (WAF) in use, the 
application gateway checks the request headers and the body against WAF 
rules. This action determines if the request is valid request or a security 

208      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
threat. If the request is valid, then the load balancing rules will be checked. 
Based on the load balancing rule, the request is routed to the backend server 
pool. If the request is not valid and WAF is in prevention mode, it is blocked 
as a security threat. If WAF is in detection mode, the request is evaluated and 
logged, but still forwarded to the backend server.
Azure Application Gateway can be used as an internal or external (internet-facing) 
application load balancer. An external application gateway uses public IP addresses. 
The DNS name of an external application gateway is publicly resolvable to its public 
IP address. As a result, external application gateways can route client requests to the 
internet.
Internal application gateways use only private IP addresses. Internal load-balancers 
can only route requests from clients with access to a virtual network for the 
application gateway.
How an application gateway routes a request
In this sub-section, we will study what happens with the request if it is valid and 
not blocked by WAF. The application gateway evaluates the request routing rule 
that is associated with the listener. This action determines which backend pool to 
route the request to. Based on the request routing rule, the application gateway 
determines whether to route all requests on the listener to a specific backend pool, 
route requests to different backend pools based on the URL path or redirect requests 
to another port or external site.
When the application gateway selects the backend pool, it sends the request to one 
of the healthy backend servers in the pool. If the backend pool contains multiple 
healthy servers, the application gateway uses a round-robin algorithm to route the 
requests.
The traffic routing behavior changes based on type of backend pool. There can be 
three types of backend pools:
 
•	
Backend pools with public endpoint: If backend pool has public endpoints, 
the application gateway uses its frontend public IP to reach the server.
 
•	
Backend pool contains an internally resolvable FQDN or a private IP 
address: If backend pool has private endpoints, the application gateway routes 
the request to the backend server by using its instance private IP addresses.
 
•	
If backend pool contains an external endpoint or an externally resolvable 
FQDN: If backend pool has an external endpoint, the application gateway 
routes the request to the backend server by using its frontend public IP 
address. The DNS resolution is based on a private DNS zone or custom DNS 

Implementing Advance Network Security      209
server, if configured, or it uses the default Azure-provided DNS. If there is 
not a frontend public IP address, one is assigned for the outbound external 
connectivity.
Application gateway building blocks
In the coming sections, we will deploy an application gateway and do various 
configurations. It will be helpful if we understand application gateway building 
blocks before deploying and configuring it:
 
•	
Frontend IP addresses: Frontend IP address is the landing zone for any 
incoming traffic. Any incoming traffic first hits the frontend IP address of 
application gateway. A frontend IP address is the IP address associated with 
an application gateway. An application gateway can be configured to have a 
public IP address, a private IP address, or both. After it is created, a frontend 
IP address is associated with a listener.
 
•	
Listeners: A listener is a logical entity in Azure Application Gateway. It 
checks for incoming connection requests. A listener accepts a request if the 
protocol, port, hostname, and IP address associated with the request match 
the same elements associated with the listener configuration. There can be 
multiple listeners attached to an application gateway, and they can be used 
for the same protocol. After a listener detects incoming requests from clients, 
the application gateway routes these requests to members in the backend 
pool configured in the rule.
 
•	
There are two types of listeners in application gateway based on domain 
hosting:
 
 
•	
Basic: This type of listener listens to a single domain site, where it has a 
single DNS mapping to the IP address of the application gateway. This 
listener configuration is required when you host a single site behind an 
application gateway.
 
 
•	
Multi-site: This listener configuration is required when you configure 
more than one web application on the same application gateway instance. 
It allows you to configure a more efficient topology for your deployments. 
You can add up to 100 websites to one application gateway. Each website 
can be directed to its own backend pool. For example, three subdomains: 
app.mybook.com, image.mybook.com, and video.myboo.com, point to the 
IP address of the application gateway. You would create three multi-site 
listeners and configure each listener for the respective port and protocol 
setting.
 
 
•	
Custom error pages: In Azure Application Gateway, you can create 
your own custom error pages instead of displaying default error pages. 

210      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Application gateway displays a custom error page when a request cannot 
reach the backend.
 
 
•	
Request routing rules: A request routing rule is a key component of an 
application gateway. It determines how to route traffic on the listener. 
The rule binds the listener, the back-end server pool, and the backend 
HTTP settings. When a listener accepts a request, the request routing 
rule forwards the request to the backend or redirects it elsewhere. If the 
request is forwarded to the backend, the request routing rule defines 
which backend server pool to forward it to. One listener can be attached 
to one rule.
	
	
	
You can classify routing rules in two types:
 
 
 
•	
Basic: All requests on the associated listener (for example, mybook.
com/*) are forwarded to the associated backend pool by using the 
associated HTTP setting.
 
 
 
•	
Path-based: This routing rule lets you route the requests on the 
associated listener to a specific backend pool, based on the URL in the 
request. If the path of the URL in a request matches the path pattern 
in a path-based rule, the rule routes that request. It applies the path 
pattern only to the URL path, not to its query parameters. If the URL 
path on a listener request does not match any of the path-based rules, 
it routes the request to the default backend pool and HTTP settings.
 
 
•	
Redirection support: The request routing rule allows you to redirect 
traffic on the application gateway. You can redirect traffic from HTTP to 
HTTPS, this is a generic redirection mechanism. You can redirect to and 
from any port you define by using rules. You can choose the redirection 
target to be another listener or an external site. You can also choose to 
have the redirection be temporary or permanent.
 
 
•	
Rewrite HTTP headers: By using the request routing rules, you can add, 
remove, or update HTTP(S) request and response headers as the request 
and response packets move between the client and backend pools through 
the application gateway. The headers can be set to static values or to 
other headers and server variables. This helps with important use cases, 
such as extracting client IP addresses, removing sensitive information 
about the backend and adding more security.
 
 
•	
HTTP settings: An application gateway routes traffic to the backend 
servers by using the port number, protocol, and other settings detailed 
in this component. These all configurations are defined in HTTP settings. 
The port and protocol used in the HTTP settings determine whether the 
traffic between the application gateway and backend servers is encrypted 

Implementing Advance Network Security      211
(providing end-to-end TLS) or unencrypted. The HTTP settings is also 
used to:
 
 
 
•	
Determine whether a user session is to be kept on the same server by 
using the cookie-based session affinity.
 
 
 
•	
Gracefully remove backend pool members by using  connection 
draining.
 
 
 
•	
Associate a custom probe to monitor the backend health, set the 
request timeout interval, override host name, and path in the request, 
and provide one-click ease to specify settings for the app service 
backend.
 
 
•	
Backend pools: A backend pool routes request to backend servers, which 
serve the request. Backend pools can contain:
 
 
 
•	
NICs.
 
 
 
•	
Virtual machine scale sets.
 
 
 
•	
Public IP addresses.
 
 
 
•	
Internal IP addresses.
 
 
 
•	
FQDN.
 
 
 
•	
Multitenant backends (e.g., app service).
	
	
	
An application gateway can communicate with instances outside of the 
virtual network that it is in. As a result, the members of the backend 
pools can be across clusters, across datacenters, or outside Azure, if there 
is network connectivity. An application gateway can also communicate 
with to on-premises servers when they are connected by Azure 
ExpressRoute or VPN tunnels if traffic is allowed.
 
•	
Health probes: By default, an application gateway monitors the health of 
all resources in its backend pool and automatically removes unhealthy ones. 
It then monitors unhealthy instances and adds them back to the healthy 
backend pool when they become available and respond to health probes.
We will use these components in the next section while deploying and configuring 
the application gateway.
Deploy application gateway to host single site
Azure Application Gateway can be configured with an internet-facing VIP or with 
an internal endpoint that is not exposed to the internet. An internal endpoint uses a 
private IP address for the frontend, which is also known as an internal load balancer 
(ILB) endpoint.

212      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Configuring the gateway using a frontend private IP address is useful for internal 
line-of-business applications that are not exposed to the internet. It’s also useful for 
services and tiers within a multi-tier application that are in a security boundary that 
isn’t exposed to the internet but still require round-robin load distribution, session 
stickiness, or Transport Layer Security (TLS), previously known as Secure Sockets 
Layer (SSL), termination.
To deploy application gateway, you need a virtual network. This virtual network 
requires two or more subnets to create application gateway. Application gateway 
needs its own dedicated subnet so one subnet is application gateway and other 
subnets can be backend pools and other services. For this exercise, we need one 
virtual network, one subnet for application gateway, one or more servers for backend 
pool. You can create these resources. For backend pool, I will deploy two VMs with 
IIS to host a web site:
	
1.	 Login to Azure portal, search for application gateway and click on + Add to 
create new application gateway.
	
2.	 It will open a new window to fill the details for application gateway:
Figure 4.25: Fill basic details while application gateway creation
	
	
On the Basics page, you can select the subscription, resource group, region, 
virtual network, and subnet where you want to deploy your application 
gateway. My application gateway subnet is 10.0.2.0/24. So, I will get 
application gateway frontend IP address from this range.
	
3.	 In the next step, we will configure frontend of application gateway:

Implementing Advance Network Security      213
Figure 4.26: Application gateway frontend details
	
	
Frontends is the entry point for traffic on application gateway. You can select 
type of frontend address based on your application accessibility. I choose 
both to access same web app publicly and privately.
	
4.	 Now in the next step, we will setup backend pool to respond incoming 
request:
Figure 4.27: Add backend pool to application gateway
	
	
As shown in the preceding figure, I included two backend servers. Please 
ignore the name of servers. They both are web hosting servers for me. 

214      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
The server with name Databaseservervm is working as web server1 and 
Webserver is working as web server2. Both the servers are from address range 
10.0.0.0/24.
	
5.	 In the next step, we will configure listener and routing rules. We already 
studied about the definition of listener and routing rules. Please refer the 
previous sections to know more about these two components:
Figure 4.28: Add listener rule to application gateway
	
	
As shown in the preceding figure, you can fill the basic details about listener.
	
6.	 Now on the same page, you need to configure backend pool with this listener. 
Click on Backend targets as shown in the following figure. Here, you can see 
options to route your request to different endpoints:

Implementing Advance Network Security      215
Figure 4.29: Add backend target details to listener
	
	
In this demo, we are doing simplest setting, so I selected Backend pool in 
Target type. Once you filled all these details, click on Create.
	
7.	 The creation may take some time. Once the creation is completed. You can 
configure DNS entry for frontend IP address. Now browse the public URL 
from your browser:
Figure 4.30: Accessing web server1 through application gateway over internet
	
	
As shown in the preceding figure, we are able to access web server1 publicly 
through application gateway.
	
8.	 The same web page you can access privately also from your private network. 
For that login to a virtual machine in private network and browse the 
application gateway over its private IP:

216      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 4.31: Accessing web server1 through application gateway over private network
	
	
As shown in the preceding figure, we are able to access web server1 over 
application gateway’s private IP. You can create DNS entry in your private DNS, 
of app gateway private IP for name resolution. I do not have DNS configured 
so I am accessing application gateway through IP and not through name.
In this section, we saw how to configure application gateway for single site hosted 
on two virtual machines. We also saw how to use same application gateway to access 
same site internally and externally.
To access web app through application gateway over internal network, 
you need to configure NSG rules so your source machine can reach to 
application gateway subnet.
Configure application gateway for multiple sites
Now in this section, we will set up application gateway to reach on two different 
sites. As we studied in the previous sections, we can use same application gateway 
for multiple sites. For this demo, I will use two web servers, each will host different 
web sites. You can clean up the previous application gateway’s configuration or can 
deploy a fresh. My Databaseservervm will host bookimage.com and Webserver will 
host bookvideo.com. Let’s jump to the configuration steps:
	
1.	 We already have required web servers, virtual network, and subnets, so we 
can jump to application gateway creation. If you are starting from this step 
or have deleted previous resources, then you will need to create one virtual 
network, one subnet for backend pool, one subnet for application gateway 
and two web servers in backend pool subnet.
	
2.	 Login to Azure portal, search for application gateway and click on + Add to 
create new application gateway.
	
3.	 Basic and frontend configuration will be same as we did in the last section. 
You can refer Figure 4.25 for basic and Figure 4.26 for frontend configuration.

Implementing Advance Network Security      217
	
4.	 Now we need to create two different backend pools for two different 
websites:
Figure 4.32: Add backend pool for site1 (bookimage.com)
	
	
In the preceding figure, I am creating backend pool for bookimage.com 
website. I added server which is hosting bookimage.com site.
Figure 4.33: Add backend pool for site2 (bookvideo.com)
	
5.	 In the preceding figure, I am creating backend pool for another website, 
bookvideo.com. I added webserver which will host this site.

218      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
6.	 Now in the next step, we need to configure listeners and routing rules. We 
will configure individual listener and routing rule for both websites:
Figure 4.34: Add listener details for site1 (bookimage.com)
	
	
In the preceding figure, I am configuring listener for bookimage.com website. 
Since we are binding two websites with same application gateway, so we 
need to select Multi site listener type and in host name we need to give 
name of the website. So, when we will try to browse bookimage.com the 
incoming request will check appropriate listener with host name and will 
follow respective backend pool and HTTP settings.
	
	
After configuring listener, we need to configure Backend targets:
Figure 4.35: Add backend target details for site1 (bookimage.com)

Implementing Advance Network Security      219
	
	
In Backend targets, we select the backend pool where the request will be 
routed for incoming traffic.
	
7.	 Like this only we need to create another combination of listener and backend 
target for bookvideo.com website. I am not putting the process of that but 
have created them in backend. You need to be careful to select port for second 
website listener. Both listeners cannot have same ports. So, for bookimage.
com, I choose port 80 and for bookvideo.com, I choose port 8080. Once you 
are done with these configurations, click on Create:
Figure 4.36: Add backend target details for site2 (bookvideo.com)
	
	
In the preceding figure, I put different listener port for bookvideo.com 
website.
	
8.	 Now to test the website. Go to your browser and put the public DNS URL of 
your application gateway, http://bookwebappgw.eastus.cloudapp.azure.
com. Without any specific port, the request will land on port 80 and it will 
take you to bookimage.com website:
Figure 4.37: Access site1 (bookimage.com) through application gateway

220      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
The preceding figure shows that we are able to reach to bookimage.com 
through application gateway public URL over default port 80:
Figure 4.38: Access site2 (bookvideo.com) through application gateway
	
	
The preceding figure shows that we are able to reach to bookvideo.com 
through application gateway public URL over defined port 8080.
	
9.	 After the application gateway is created with its public IP address, you can 
get the DNS address and use it to create a CNAME record in your domain. 
You can get public IP of application gateway from its Overview page. Copy 
the FQDN value of the DNS settings and use it as the value of the CNAME 
record that you create. Using A-records isn’t recommended if you are using 
V1 SKU for application gateway because the Virtual IP (VIP) may change 
when the application gateway is restarted in the V1 SKU.
	
10.	 Since I do not have DNS provider, so I did not register application gateway 
DNS and because of that I had to browse websites with application gateway 
public DNS name.
	
11.	 Now, since we configured public and private both IPs to frontend, so you 
can access these websites over private network also. Similar to public 
accessibility, you need to provide http://<private IP of application 
gateway> to browse bookimage.com and http://<private IP of application 
gateway>:8080 to browse bookvideo.com.
	
12.	 You can create DNS record for application gateway private IP to browse 
websites by name.
So, in this section, we saw how to configure two different websites behind same 
application gateway. We can configure up to 100 websites behind an application 
gateway. In the same way, you can configure sub-domain websites as well. For 
example, you can configure image\bookdemo.com and video\bookdemo.com.
In the preceding demo, we deployed application gateway through portal. You 
can deploy it through PowerShell, Azure CLI, and ARM template also. When 
you deploy through command line, you can use same listener port for multiple 
listeners. In the preceding example, we had to use different ports (80 and 8080) for 
different listeners but you could use same listener port if you deploy application 
gateway through command line. But you will be able to browse website only after 
creating CNAME entry in DNS.

Implementing Advance Network Security      221
Configure application gateway for app service
Azure App Service is a multi-tenant service instead of a dedicate deployment, it uses 
host header in the incoming request to resolve the request to the correct app service 
endpoint. Usually, the DNS name of the application, which in turn is the DNS name 
associated with the application gateway fronting the app service, is different from 
the domain name of the backend app service. Therefore, the host header in the 
original request received by the application gateway is not the same as the host 
name of the backend service. Because of this, unless the host header in the request 
from the application gateway to the backend is changed to the host name of the 
backend service, the multi-tenant backends are not able to resolve the request to the 
correct endpoint.
Application gateway provides a switch called  Pick host name from backend 
address which overrides the host header in the request with the host name of the 
backend when the request is routed from the application gateway to the backend. In 
this section, we will learn how to add app service as backend pool and create HTTP 
settings and custom probe with Override host name switches enabled:
	
1.	 For this demo, I assume that you already have an app service created. You 
can refer the previous sections to understand how to create app service.
	
2.	 Login to Azure portal, search for application gateway and click on + Add to 
create new application gateway.
	
3.	 Basic and frontend configuration remain same for this exercise also. We need 
to look for backend pool configuration:
Figure 4.39: Add Azure App Service as backend pool to application gateway
	
	
As shown in the preceding figure, this time I am selecting App Services as 
Target type. It will show app services in drop-down. You can only select those 

222      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
app services which are in same subscription where the application gateway 
is residing. If you want to add app service from different subscription, then 
you can choose IP address and FQDN option.
	
4.	 Now in the next step, we will configure listener and backend target:
Figure 4.40: Create listener rule for app service
	
	
We have done this step many times. We are just putting basic details here.
	
5.	 Now in the Backend targets section, click on HTTP Settings. This will open 
a new blade. Here, input a name for the HTTP setting, you can enable or 
disable cookie-based affinity as per your requirement, choose the protocol as 
HTTP or HTTPS as per your use case:
Figure 4.41: Override request host name with new host name

Implementing Advance Network Security      223
	
	
As shown in the preceding figure, enable Host name override for incoming 
request. This will override the incoming HTTP host header with backend 
target HTTP header.
	
6.	 Once you have made this configuration, click on Create to start deployment.
	
7.	 As shown in the following figure, it will create a custom health probe also. 
The health probe is used to test the health of backend pool. To make any 
changes in health probe, you can go to Health probes under the Settings 
section:
Figure 4.42: Custom health probes settings in application gateway
	
	
You can also run a test the connectivity and health of backend before adding 
to new health probe or modifying the existing probe.
	
8.	 Once the deployment is completed, you can open application gateway URL 
in browser:

224      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 4.43: Browse app service through application gateway
	
	
As shown in the preceding figure, we are able to browse app service through 
application gateway.
In this section, we saw how to configure application gateway for app service. In 
this demo, we just used one app service, but you can use multiple app services as 
application gateway backend.
Configure application gateway with Web 
Application Firewall (WAF)
In the previous sections, we studied about how to configure application gateway for 
single domain site, multi domain site, and Azure App Services. In this section, we 
will study about application gateway with WAF capability. Let’s understand WAF 
in brief before configuring it with application gateway.
You can get centralized protection from exploits and vulnerabilities for your 
application with WAF on Azure Application Gateway. With new technologies web 
applications are becoming soft targets for malicious attacks. In these attacks, SQL 
injection and cross-site scripting are the most common attacks. WAF works on Core 

Implementing Advance Network Security      225
Rule Set (CRS) 3.1, 3.0, or 2.2.9 from the Open Web Application Security Project 
(OWASP). Microsoft automatically updates WAF rules to include protection against 
new vulnerabilities. There is no need of additional configuration to apply these 
changes. A WAF policy includes multiple features inside it. We will see these features 
in the coming sections. To have separate policies for each site behind application 
gateway, you can create multiple policies. These policies can be associated with an 
application gateway, to individual listeners, or to path-based routing rules on an 
application gateway.
Benefits of WAF on application gateway
In this section, we will see the core benefits that WAF on application gateway 
provides:
 
•	
Protection
 
 
•	
Protect your web applications from web vulnerabilities and attacks 
without modification to back-end code.
 
 
•	
Create custom WAF policies for different sites behind the same WAF.
 
 
•	
Protect your web applications from malicious bots with the IP reputation 
rule set (preview).
 
 
•	
Protect multiple web applications at the same time. An instance of 
application gateway can host up to 40 websites that are protected by a 
web application firewall.
 
•	
Monitoring
 
 
•	
The application gateway WAF is integrated with Azure Security Center. 
Security center provides a central view of the security state of all your 
Azure resources.
 
 
•	
Monitor attacks against your web applications by using a real-time WAF 
log. The log is integrated with Azure Monitor to track WAF alerts and 
easily monitor trends.
 
•	
Customization
 
 
•	
Customize WAF rules and rule groups to suit your application 
requirements and eliminate false positives.
 
 
•	
Create custom rules to suit the needs of your application.
 
 
•	
Associate a WAF policy for each site behind your WAF to allow for site-
specific configuration.

226      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Features of WAF on application gateway
In the previous section, we saw the benefits of WAF on application gateway. In this 
section, we will study about features of WAF on application gateway:
 
•	
SQL-injection protection.
 
•	
Cross-site scripting protection.
 
•	
Protection against HTTP protocol violations.
 
•	
Protection  against  HTTP  protocol  anomalies,  such  as  missing  host  user-
agent and accept headers.
 
•	
Protect your applications from bots with the bot mitigation ruleset. (Preview)
 
•	
Inspect JSON and XML in the request body.
 
•	
Protection against crawlers and scanners.
 
•	
Detection of common application misconfigurations (e.g., Apache and IIS).
 
•	
Create custom rules to suit the specific needs of your applications.
 
•	
Geo-filter traffic to allow or block certain countries/regions from gaining 
access to your applications. (Preview)
 
•	
Configurable request size limits with lower and upper bounds.
 
•	
Exclusion lists let you omit certain request attributes from a WAF evaluation. 
A common example is AD-inserted tokens that are used for authentication or 
password fields.
 
•	
WAF can function in two modes:
 
 
•	
Detection mode: In detection mode, it just works as an observer and 
monitors and logs all threat alerts. In detection mode, it does not block 
any incoming requests.
 
 
•	
Prevention mode: In prevention mode, it blocks intrusions and attacks 
that the rules detect. The attacker receives a 403 unauthorized access 
exception, and the connection is closed. Prevention mode records such 
attacks in the WAF logs.
Same as other firewalls, WAF also works on polices and rules. Azure WAF has 
some predefined rule sets to analyze incoming traffic. With WAF version V2, you 
can create your own custom policies as well. When your WAF has both Microsoft 
Managed and custom rules, custom rules are processed before Microsoft Managed 
rules. A rule is made of a match condition, a priority, and an action. Action types 
supported are: Allow, Block, and Log. Rules within a policy are processed in a 
priority order.

Implementing Advance Network Security      227
Deploying application gateway with WAF
In “Deploy application gateway to host single site” section, we saw how to deploy 
application gateway. So, you can refer that section for detailed explanation. In this 
section, we will just cover the different step:
Figure 4.44: Create application gateway with WAF feature
As shown in the preceding figure, you can select WAF or WAF V2 from the Tier 
drop-down. In Firewall mode, you can select between Detection and Prevention as 
per your requirement.
Next all steps will be same as we learnt in the previous sections.
Azure Front Door (AFD) service
Azure Front Door (AFD) service is a web traffic management service. It enables 
you to define, manage, and monitor the global routing for your web traffic. It also 
optimizes the best performance and instant global failover for high availability. With 
Azure Front Door, you can transform your multi-region consumer and enterprise 
applications into robust, high-performance personalized modern applications, APIs, 
and content that reach a global audience. AFD works at Layer 7 or HTTP/HTTPS 
layer.
Features of AFD service
AFD service comes with wide range of features to give high performance, high 
availability, and multiple capabilities to monitor and manage your enterprise 
applications. We will go through the AFD features in this section:

228      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
URL-based routing: URL based routing mechanism allows you to route 
traffic to backend pools based on URL paths of the request. For example, 
the requests coming for http://www.myfrontdoor.com/users/* are routed 
to UserProfileWebPool, and  http://www.myfrontdoor.com/products/*  are 
routed to ProductInventoryWebPool. If none of the path patterns match, 
then the traffic will be routed to your default routing rule for http://www.
myfrontdoor.com/*.
 
•	
Session affinity: AFD helps you to keep cookie-based session affinity. This 
feature is useful when you want to keep a user session on the same application 
backend. By using front door managed cookies, subsequent traffic from a 
particular user session gets redirected to the same application backend for 
processing. This feature is important in cases where session state is saved 
locally on the backend pool for a user session.
 
•	
Accelerate application performance: AFD uses split TCP-based anycast 
protocol. By this technique, front door ensures that your end users promptly 
connect to the nearest front door Point of Presence (POP). AFD uses 
Microsoft’s global network for connecting to your application backends from 
front door POPs. Microsoft’s global network ensures higher availability and 
reliability while maintaining performance.
 
•	
Higher application availability with smart health probes: High availability 
of any enterprise application is very critical aspect. Front door provides high 
availability for your business-critical applications using its smart health 
probes by monitoring your backends for both latency and availability. Front 
door also provides instant automatic failover when a backend goes down. 
So, you can run planned maintenance or DR operations on your applications 
without any business downtime. Front Door directs traffic to alternative 
backends while the maintenance is in progress.
 
•	
Multiple site hosting: You can configure more than one web site on the 
same front door configuration. This feature allows you to manage less AFD 
instances to your deployments by adding different web sites to a single 
front door configuration. Based on your application’s architecture, you can 
configure AFD to either direct each web site to its own backend pool or have 
various web sites directed to the same backend pool. For example, front door 
can serve traffic for  images.myfrontdoor.com  and  videos.myfrontdoor.
com  from two backend pools called ImageWebPool and VideoWebPool. 
Alternatively, you can configure both the front-end hosts to direct traffic to a 
single backend pool called MediaWebPool.
 
•	
Similarly, you can have two different domains www.myfrontdoor.com and 
www.contoso.com configured on the same front door.

Implementing Advance Network Security      229
 
•	
URL redirection: Most of the customers want supporting only secure 
communication and for that web applications are expected to automatically 
redirect any HTTP traffic to HTTPS. This process ensures that all 
communication between the users and the application occurs over an 
encrypted path.
 
•	
Traditionally, application developers have dealt with this requirement by 
creating a dedicated service, whose sole purpose was to redirect requests 
it receives on HTTP to HTTPS. AFD service has built in ability to redirect 
traffic from HTTP to HTTPS. This simplifies application configuration work 
for developers, optimizes the resource usage and supports new redirection 
scenarios, including global, and path-based redirection.
 
•	
Application layer security: You can create your custom WAF rules in AFD 
for access control to protect your HTTP/HTTPS workload from exploitation 
based on client IP addresses, country code, and HTTP parameters. AFD 
platform is protected by Azure DDoS protection basic. You can enable Azure 
DDoS Protection standard at your VNets for further protection. Front door is 
a layer 7 reverse proxy.
 
•	
Custom domains and certificates management: When you use front door to 
deliver you content over the web, you need a custom domain if you would 
like your own domain name to be visible in your Azure Front Door URL. 
Custom domain name would be convenient for your customers to verify 
your organization and useful for branding purposes. For HTTPs traffic, you 
need a certificate with your custom domain, you can use choose front door 
managed certificates for your traffic or can upload your own custom SSL 
certificate.
 
•	
Secure socket layer (SSL) termination: Communication over HTTPS is more 
favorite for organizations; AFD supports SSL termination. Additionally, 
front door supports both HTTP and HTTPS connectivity between front door 
environments and your backends. So, you can also set up end-to-end SSL 
encryption.
The preceding points explained some of the key features of AFD service. Based on 
these you can decide if you want to use AFD service or not in your environment. 
Also, if you use AFD, then you can decide what features or services you would like 
to select for among these.
Building blocks and concepts of AFD
In the following sections, we will be discussion how to create and configure AFD for 
your applications. Before going to deployment, it is important that you understand 
the building blocks and concepts.

230      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
AFD frontend host
AFD has two major components: frontend host and backend host pool. Frontend 
host is the first point of contact for your application which is running on backend 
host pool. The default URL of your AFD is <Hostname>.azurefd.net. You can buy 
your custom domain to advertise your own domain.
AFD backend pool
A backend is equal to an instance where your application is been deployed. You can 
add both Azure and non-Azure instances as a backend to AFD service. Backend pool 
is a group of multiple backend instances. So, AFD backend pool is not only restricted 
to Azure regions, but it can also be your on-premises data center or an application 
instance in another cloud. To add instances as a backend, the application hosing 
instances should have public IPs or publicly resolvable host name with them. For 
backend, you should not be confused with your database tier, storage tier, and so on.
There are multiple sub-components of your backend pool:
 
•	
Backend host type: In the Backend host type section, you define the type of 
backend instances. AFD supports different types of backend instances. The 
backend instance types could be both Azure and non-Azure services.
 
•	
Subscription and backend host name: Select the subscription from which 
you want to pick your backend host and select the backend host from the 
drop down. For any non-Azure backend host, you will not need to select the 
subscription.
 
•	
Backend host header: When AFD sends a request to a backend, the request 
includes a host header field. This header is used to identify the correct target 
resource in backend pool. When you select any Azure resource as a backend, 
the value for this field typically comes from the URI of backend and has the 
host name and port.
 
•	
For example, a request made for www.myfrontdoor.com will have the host 
header www.myfrontdoor.com. If you use Azure portal to configure your 
backend, the default value for this field is the host name of the backend. 
If your backend is myfrontdoor-eastus.azurewebsites.net, in the Azure 
portal, the auto populated value for the backend host header will be 
myfrontdoor-eastus.azurewebsites.net. However, if you use Azure 
Resource Manager (ARM) templates or another method deployment 
method such as PowerShell, without explicitly setting this field, front door 
service will send the incoming host name as the value for the host header. 

Implementing Advance Network Security      231
If the request was made for www.myfrontdoor.com, and your backend is 
myfrontdoor-eastus.azurewebsites.net that has an empty header field, 
front door service will set the host header as www.myfrontdoor.com.
 
•	
Priority: Here, you assign priority to your different backend hosts. Based on 
the priority the traffic will hit the respective backend host.
 
•	
Weight: Here, you assign the weight of traffic distribution. Here either you 
can distribute the traffic evenly or in a specified ratio. The default value of 
this field is 50.
 
•	
Backend pool: A backend pool in AFD service refers to the set of backends 
that receive similar traffic for their app. Backend pool is a logical grouping 
of your backend instances, they receive the same traffic and respond. These 
backends can be from different regions or within the same region, they can 
be Azure or non-Azure resources.
 
•	
Health probes: Health probes configuration is used to evaluate the health of 
any backend host. This evaluation is important to maintain high availability 
of your application. AFD service sends periodic HTTP/HTTPS probe 
requests to your each backends. The following settings are available for 
health probes configuration:
 
 
•	
Path: The URL used for probe requests for all the backends in the backend 
pool. For example, if one of your backends is myfrontdoor-eastus.
azurewebsites.net and the path is set to /probe/healthtest.aspx, 
then front door service environments, assuming the protocol is set to 
HTTP, will send health probe requests to http://myfrontdoor-eastus.
azurewebsites.net/probe/healthtest.aspx.
 
 
•	
Protocol: Here, you define whether to send the health probe requests 
from front door service to your backends with HTTP or HTTPS protocol.
 
•	
Interval (In seconds): Here you define the frequency of health probes to 
your backends, or the intervals in which the front door environment sends a 
probe.
 
•	
Load balancing: In load balancing settings for the backend hosts, you define 
how you evaluate health probes. Based on the health probes evaluation, 
these settings determine if the backend is healthy or unhealthy. They also 
check how to load-balance traffic between different healthy and unhealthy 
backends in the backend pool. The following settings are available for load-
balancing configuration:
 
•	
Sample size: Define a number of samples of health probes you need to 
consider for backend health evaluation.

232      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Successful sample size: Here you define the sample size as previously 
mentioned, the number of successful samples needed to call the backend 
healthy. For example, assume a front door health probe interval is 10 seconds, 
sample size is 5, and successful sample size is 3. Each time you evaluate the 
health probes for your backend, you look at the last five samples over 50 
seconds (5 × 10). At least three successful probes are required to declare the 
backend as healthy.
 
•	
Latency sensitivity (in milliseconds): Here you define the value of minimum 
latency. AFD sends the requests to backend hosts to check respective latency 
with them.
The preceding points were related to configurations which you need to do to set up 
AFD. They are helpful to understand the building blocks of AFD while deploying, 
configuring, and managing AFD.
AFD routing rules
Once a connection has been stablished and SSL handshake is been done, a request 
land on AFD environment. AFD determines all configurations, which routing rule 
is matching with the request and then taking the defined action. In this section, you 
will understand the different kind of routing configurations.
You can consider the request as left-hand-side configuration and action as right-hand-
side configuration.
Left-hand-side configuration contains the following fields:
 
•	
Accepted Protocols: You can define the type of incoming traffic. You can 
have three choices to select from: HTTP only, HTTPS only, and HTTP & 
HTTPS. Based on your website hosting you can select the type of accepted 
incoming traffic.
 
•	
Frontend Host: You can select the name of the frontend host on which the 
traffic will be landing.
 
•	
Paths: Select all the URL path patterns that this route will accept.
Right-hand-side configuration defines the action. The actions could be of two types:
 
•	
Forward and serve from the cache: In this process, request first checks 
the available data in cache and then respond back to the requester. If the 
required data is not found in cache, then request goes to the backend pool. 
You can control what TCP protocol request can reach to backend pool, it can 
be HTTP, HTTPS, or Any:
 
 
•	
URL Rewrite: You can customize your forwarding URL. For an example, 

Implementing Advance Network Security      233
your incoming traffic request matches for path /a/b/c but you can 
customize this path and can redirect the traffic to /d/e/f.
 
 
•	
Caching: AFD service can deliver large files without any cap on file 
size. Front door uses chunking technique. When a large file is requested, 
front door retrieves smaller pieces of the file from the backend. AFD 
environment requests the file from the backend in chunks of 8 MB. 
After the chunk arrives at the front door environment, it is cached and 
immediately served to the user. Front door then pre-fetches the next 
chunk in parallel. This pre-fetch ensures that the content stays one chunk 
ahead of the user, which reduces latency. This process continues until the 
entire file is downloaded (if requested), all byte ranges are available (if 
requested), or the client terminates the connection.
 
 
•	
Dynamic compression: Front door can dynamically compress content 
on the edge, resulting in a smaller, and faster response to your clients.
 
•	
URL redirect: AFD service can redirect traffic multiple levels (protocol, 
hostname, path, query string). This simplifies application configuration, 
optimizes the resource usage, and supports new redirection scenarios 
including global and path-based redirection. There are different types of 
redirection:
 
 
•	
301 (Moved permanently): It indicates that the target resource has been 
assigned a new permanent URI and any future references to this resource 
ought to use one of the enclosed URIs. Use 301 status code for HTTP to 
HTTPS redirection.
 
 
•	
302 (Found): It indicates that the target resource resides temporarily 
under a different URI. Since the redirection might be altered on occasion, 
the client ought to continue to use the effective request URI for future 
requests.
 
 
•	
307 (Temporary redirect): It indicates that the target resource resides 
temporarily under a different URI and the user agent MUST NOT change 
the request method if it performs an automatic redirection to that URI. 
Since the redirection can change over time, the client ought to continue 
using the original effective request URI for future requests.
 
 
•	
308 (Permanent redirect): It indicates that the target resource has 
been assigned a new permanent URI and any future references to this 
resource ought to use one of the enclosed URIs. Clients with link editing 
capabilities, ought to automatically relink references to the effective 
request URI to one or more of the new references sent by the server, 
where possible.

234      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
 
•	
Destination host: As part of configuring a redirect routing, you can 
also change the hostname or domain for the redirect request. You can 
set this field to change the hostname in the URL for the redirection or 
otherwise preserve the hostname from the incoming request. So, using 
this field, you can redirect all requests sent on  https://www.mybook.
com/* to https://www.myfrontdoor.com/*.
 
 
•	
Destination path: For cases where you want to replace the path segment 
of a URL as part of redirection, you can set this field with the new 
path value. Otherwise, you can choose to preserve the path value as 
part of redirect. So, using this field, you can redirect all requests sent 
to https://www.myfrontdoor.com/* to https://www.myfrontdoor.com/
redirectedsite.
 
 
•	
Query string parameter: You can also replace the query string parameters 
in the redirected URL. In order to replace any existing query string from 
the incoming request URL, set this field to Replace and then set the 
appropriate value. Otherwise, you can retain the original set of query 
strings by setting the field to Preserve. As an example, using this field, 
you can redirect all traffic sent to https://www.myfrontdoor.com/image/
office to https://www.myfrontdoor.com/image/office.
 
 
•	
Destination fragment: The destination fragment is the portion of URL 
after #, normally used by browsers to land on a specific section on a page. 
You can set this field to add a fragment to the redirect URL.
In this section, we learnt about the routing mechanism in AFD. This will help you to 
define routes while deployment and understand the routes while managing AFD.
Create Azure Front Door
We have gone through the basic building components of AFD. The preceding 
concepts would help you to take appropriate decision to enable and opt for correct 
options while creating AFD. In this section, we will go through the steps to deploy 
AFD:
	
1.	 Login to Azure portal and search for front door in search bar.
	
2.	 Chose the subscription and resource group where you want to deploy AFD. 
You can create new resource group also.
	
3.	 In the next step, click on Configuration. Here, you need to put details about 
frontend host. Put the host name of front door’s frontend host. This name 

Implementing Advance Network Security      235
should be globally unique. You can choose to enable or disable session 
affinity and WAF:
Figure 4.45: Create frontend host for Azure Front Door 
	
4.	 Now you need to add front door backend pool. You can choose different 
kind of Azure services as the backend. Click on + Add backend pool to add 
backend resources. Once you click on + Add backend pool, a new window 
opens to enter the details of backend resource. There are different kind of 
resources types which you can choose for backend pool:

236      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 4.46: Add backend host to Azure Front Door 
	
	
You can add multiple backend pools and assign different priorities and 
weight. You can keep default the health prob and load balancing settings.
	
5.	 In the Configuration step, the next important step is to create routing roles:

Implementing Advance Network Security      237
Figure 4.47: Create routing rules for Azure Front Door 
	
	
Once you have chosen required route type and other settings, you are good 
to click on Create.
In this section, you learnt how to create and configure AFD. Now you can deploy 
AFD in your environment and can set up proper backend pool for AFD. You also 
understood the routing process of AFD. In the next section, we will study about 
Azure Firewall in detail. We will see the features of Azure Firewall and ways to 
configure it.

238      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Azure Firewall
Azure Firewall is a cloud-based managed network security service that protects your 
Azure Virtual Network resources. You can centrally create, control, manage, enforce, 
application, and network connectivity policies across subscriptions and virtual 
networks. Azure Firewall uses a static public IP address for your virtual network 
resources allowing outside firewalls to identify traffic originating from your virtual 
network.
Features of Azure Firewall
Every firewall has its own features. Being security administrator, you need to select 
right firewall option for your organization. In this section, let’s understand the 
features of Azure Firewall. Based on them you can decide to choose Azure Firewall 
for your environment:
 
•	
High availability: Azure Firewall is a complete PaaS service and has in build 
high availability feature. So, you do not need to deploy any additional load 
balancers.
 
•	
Availability zone: You can add Azure Firewall into availability zone to 
increase high availability of it, while deploying it. You get 99.99% uptime 
with Azure Firewall in availability zones. The 99.99% uptime SLA is offered 
when two or more availability zones are selected.
 
•	
Scalability: Azure Firewall has in built scalability option, so you do not need 
to worry about your peak times. It can scale up as much as you need to 
accommodate your network traffic.
 
•	
Application FQDN filtering: You can restrict outbound HTTP and HTTPS 
traffic to restricted application URLs. In this way, you can control outbound 
internet exposer.
 
•	
Network traffic filtering: You can control outbound and inbound network 
traffic to and from a specific IP/IP range and port. This feature works as 
Network Security Group (NSG).
 
•	
FQDN tags: You can control Azure services traffic through this.
 
•	
Service tags: We discussed about the service tag in the previous section, 
it represents a group of IP address prefixes to help minimize complexity 
for security rule creation. There is a restriction that you can’t create your 
own service tag, nor specify which IP addresses are included within a tag. 
Microsoft manages the address prefixes encompassed by the service tag, and 
automatically updates the service tag as addresses change.

Implementing Advance Network Security      239
 
•	
Threat intelligence: Azure Firewall can help you to cover IPS and IDS. It 
uses threat intelligence-based filtering to alert and deny traffic from/to 
known malicious IP addresses and domains. The IP addresses and domains 
are sourced from the Microsoft Threat Intelligence feed.
 
•	
Outbound SNAT: When any traffic flows outside from your virtual network, 
traffic IP addresses are translated to the Azure Firewall public IP (source 
Network Address Translation (NAT)).
 
•	
Inbound DNAT: Inbound internet network traffic to your firewall public 
IP address is translated (destination NAT) and filtered to the private IP 
addresses on your virtual networks.
 
•	
Multiple public IP address: You can associate multiple public IP addresses 
(up to 100) with your firewall.
 
•	
Complaint certificates: Azure Firewall is Payment Card Industry (PCI), 
Service Organization Controls (SOC), International Organization for 
Standardization (ISO), and ICSA labs compliant.
 
•	
TLS inspection: This is an Azure Firewall Premium version feature. Azure 
Firewall Premium terminates outbound and east-west TLS connections. 
Before sending the data to the destination, it decrypts outbound traffic, 
analyze the data, and again encrypts and send to the destination.
 
•	
Support for IPS/IDS: This is also Azure Firewall Premium version feature. 
This feature allows you to monitor your network for malicious activity, log 
information about this activity, and optionally attempt to block it.
 
•	
URL filtering: With this you can be more specific to block or allow the right 
web page. Now with Azure Firewall Premium feature, you can control URL 
till www.mybook.com/video/azurefirewall instead of directly blocking www.
mybook.com. 
 
•	
Traffic control based on web categories: This feature allows you to block 
web traffic based on their categories. Like if you want to block, social media, 
music, entertainment sites.
The preceding features will help you to decide that you should choose Azure Firewall 
or not. You can decide which feature you want to opt and use in your environment 
as per your business requirement.
Create, configure, and manage Azure Firewall
Control over inbound and outbound network access is an important part of an overall 
network security plan for any of the organization. For example, your organization 
may want to limit access to certain web sites or to limit the outbound IP addresses 

240      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
and ports that can be accessed. Azure Firewall provides capability to control and 
monitor inbound and outbound traffic. Azure Firewall Premium came up with 
new features of IDPS, threat detection, TLS inspection, and DNS settings. These all 
features are now controlled by Azure Firewall policy. These firewall policies can be 
created and managed from Azure portal or Azure Firewall Manager portal. We will 
study about these components in the coming sections.
Create Azure Firewall
To deploy Azure Firewall, you require a virtual network with a dedicated subnet for 
Azure Firewall with name AzureFirewallSubnet. Let’s follow these steps to deploy 
and configure Azure Firewall:
	
1.	 Login to Azure portal.
	
2.	 As a prerequisite, you need a virtual network and a subnet to deploy 
Azure Firewall. You are aware of the process to create virtual network and 
subnet. Please follow those steps to get virtual network and subnet. The 
AzureFirewallSubnet should be in /26 range. The resource group of virtual 
network and Azure Firewall should be same.
	
3.	 Once you have virtual network and subnet for azure firewall is ready, now 
you can search for firewall in the search bar. I created a virtual network Az-
Hub-VNet to deploy firewall. This virtual network has AzureFirewallSubnet.
Fill the information as shown in the following figure:
 
Figure 4.48: Create Azure Firewall 1
	
	
Select the subscription, resources group name, Azure Firewall name, region 
to deploy, and availability zones. If you choose availability zone, then the 

Implementing Advance Network Security      241
public IP address also should belong to the same availability zone:
Figure 4.49: Create Azure Firewall 2
	
	
Azure Firewall is now available in Premium tier also. I am selecting Premium 
version to demonstrate maximum features. You can choose the tier based on 
your business requirements.
	
	
Premium Azure Firewall works on Azure Firewall policies. We will study 
about Azure Firewall policies in the coming sections. Here, you can create 
new firewall policy or can use an existing if you have. Here we are just 
creating a default firewall policy. This firewall policy can be managed directly 
from Azure portal or from Firewall Manager.
	
	
Now in the next step, you need to select a virtual network where you want to 
deploy the firewall. You can choose an existing virtual network or can create 
a new. Azure Firewall also requires a public IP to communicate to public 
internet.
After putting appropriate details, you can click on Create to start Azure Firewall 
deployment. It may take some time to complete the deployment.
Create user defined route
In the preceding steps, you have created Azure Firewall. This firewall is not effective 
until it gets associated with other network resources and until it has some firewall 
rules. To bring the firewall in function the traffic should pass through this and you 
need to create appropriate routes to pass the traffic through the firewall. In Azure, 
you can use User Defined Routes (UDR) to control the follow of your traffic. Now 
we will see how to create UDR.

242      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
We well create UDR to route traffic from Azure Virtual Machine which is residing in 
web subnet in AZ-Spoke-VNet. For this, we have created AZ-Spoke-VNet, web subnet, 
and a virtual machine for testing. Follow these steps to create UDR:
	
1.	 Login to Azure portal and search for UDR or route table.
	
2.	 Click on + Add to create new UDR. Fill the details as shown in the following 
figure. Give a name to the routing rule, select the subscription, and resource 
group. I am creating this UDR to route traffic from web subnet (in Spoke 
VNet) to Azure Firewall:
Figure 4.50: Create User Defined Route 
	
3.	 After filling the details, click on Create. Now in the next steps, we will see 
how to attach, configure, and use this UDR to route the traffic to Azure 
Firewall.
	
4.	 Once the UDR deployment is completed, the overview looks like this:

Implementing Advance Network Security      243
Figure 4.51: Azure user defined route overview 
	
	
There is no routing rule and also this UDR is not associated with any of the 
subnet.
	
5.	 To create a rule, click on Rules in the left panel, a new window opens to fill 
the details:
Figure 4.52: Create routing rule in Azure user defined route 
	
	
Here, I am creating rule to route any outbound internet traffic from web 
subnet (in AZ-Spoke-VNet) to Azure Firewall. For this I gave a name to this 
rule, I gave internet IP that is 0.0.0.0/0. When there is a traffic going to 
internet the next hop would be the virtual appliance (Azure Firewall) and 
the IP of our Azure Firewall is 10.2.0.4.
	
6.	 Now you have rule to route the traffic to Azure Firewall. But the rule only 

244      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
says about the destination, there is no provision to talk about the source. 
To define the source, you need to associate this routing rule with a subnet. 
Now to attach this to subnet click on Subnets and + Associate. In the new 
blade, you will get option to select the network first and then the subnet 
under that VNet. For this demo, I already have AZ-Spoke-VNet with IP range 
10.3.0.0/16 created and peered with Az-Hub-VNet:
Figure 4.53: Associate Azure user defined route to a subnet
	
	
I have selected Spoke VNet and corresponding subnet for association.
	
7.	 Now you can see the details on the Overview page that you have a routing 
rule (TrafficToInternet) created to route internet traffic through Azure 
Firewall and this rule is associated with the WebSubnet. So, in this manner, 
you have covered all VMs from the web subnet as a source, whichever VM 
sends traffic to internet the traffic will first pass through the Azure Firewall:
Figure 4.54: Azure user defined route updated overview 
	
	
As shown in the preceding figure, now we have routing rule created for the 
firewall. With the help of this routing rule, we can redirect our traffic to land 
on Azure Firewall.
Now we need to configure firewall rules in Azure Firewall. Let’s move to other 
components of Azure Firewall to configure it.

Implementing Advance Network Security      245
Configuring Azure Firewall public IP
You can attach multiple public IPs to Azure Firewall. These public IPs can be used 
for NAT so you can use firewall public IP to translate incoming traffic to private IP 
of you network. This helps direct exposure of your web server to internet. To connect 
multiple public IP over you firewall, you can go to the Public IP section in left panel. 
There you can click on + Add to add new public IP. You can either use an unattached 
existing public IP or can create a new public IP.
Creating, configuring, and managing Azure 
Firewall policy
Azure Firewall policy a set of configurations and rules. It contains NAT, application, 
and network rule collection. It also keeps the settings about threat intelligence, TLS 
inspections, and IDPS. A firewall policy can be associated with one or more virtual 
hubs or VNets in any subscription and region.
You can create a new firewall policy or can inherit from existing policy. Child policy 
inherits all rule collections from the parent policy. Network and application rules 
inherited from the parent policy takes precedence over locally created rules. NAT 
rules are not inherited because they are specific to the local firewall. Network rules 
are always processed before application rules.
Threat intelligence mode can also be inherited. If it is inherited and enabled in parent 
policy, it cannot be disabled in child policy. But you can override parent value with 
child value.
Components of Azure Firewall policy
Let’s discuss what all are the building blocks of a firewall policy. It will help you to 
create and manage firewall policies easily. You encounter with the following listed 
components when you create a new policy or manage an existing policy: 
 
•	
DNS settings: DNS settings allow you to put your custom DNS for name 
resolution. If you do not mention any custom domain, Azure Firewall uses 
Azure DNS as default. Azure Firewall can have multiple DNS server entries.
 
•	
DNS proxy: Azure Firewall can also act as DNS proxy. If you enable custom 
DNS setting, then you should enable DNS proxy also on Azure Firewall. 
This will help you to avoid mismatch in DNS resolution and enable FQDN 
filtering in network rules.

246      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
TLS inspection: With TLS inspection, Azure Firewall premium can terminate 
outbound TLS connections. In TLS inspection, Azure Firewall premium uses 
a certificate to re-encrypt the outbound request and sends to the original 
destination.
 
•	
Rule collection type: Azure Firewall rules will decide what happens when 
traffic reaches to the firewall. You can take different actions based on the 
requirements and deal with the traffic. There are three kind of firewall rules:
 
•	
Network Address Translation (NAT) rule collections.
	
	
Network rule collection.
	
	
Application rule collection.
	
	
We will discuss about these rules in detail while configuring firewall policy.
 
•	
IDPS support in Azure Firewall: Azure Firewall premium is upgraded with 
IPS/IDS functionality. This helps you to monitor your malicious activity 
on your network. When you enable this feature, you can configure Azure 
Firewall to alert only or alert and deny mode. In alert only mode, it detects 
the suspicious traffic and generates an alert. In alert and deny mode, it 
detects the suspicious traffic, generates an alert, and block the suspicious 
traffic.
 
•	
In IDPS bypass list, you can allow not to filter traffic to any of the IP 
addresses, ranges, and subnets specified in the bypass list.
 
•	
Threat intelligence: You can filter traffic in your Azure Firewall based on 
threat intelligence. This can be configured for any inbound and outbound 
traffic. You can configure Azure Firewall in to alert only or alert and deny 
mode. In alert only mode, it detects the suspicious traffic and generates an 
alert. In alert and deny mode, it detects the suspicious traffic, generates an 
alert, and block the suspicious traffic. Threat intelligence gets the IP and 
domain information from Microsoft Threat Intelligence feeds.
	
	
If you enable threat intelligence-based filtering, the associated rules are 
processed before any NAT, network, and application rules. You can also add 
a list of allowed IP addresses and FQDNs.
 
•	
Parent Policy: Azure Firewall policy can be configured in parent and child 
hierarchy. You can assign any policy as a parent policy to any other policy. 
We already have learnt about the inheritance of rules in parent and child 
hierarchy setup.
We will use these preceding discussed components in the coming section while 
configuring and managing Azure Firewall policy.

Implementing Advance Network Security      247
Create Azure Firewall policy
In the last section, you saw the components of Azure Firewall policy. In this section, 
let’s see how to create Azure Firewall policy. In this section, we will just see process 
to create Azure Firewall policy. The configuration part we will cover in the coming 
section.
There are two ways to create Azure Firewall policy:
	
•	
From Azure portal:
	
	
•	
In this option, you login to Azure portal and search for firewall policy. 
It will open a Firewall policy page. There you can see existing firewall 
policies and also create new.
	
	
•	
Click on + Add to create new firewall policy. It will open a new window 
with multiple tabs for various feature. The tabs are related to firewall 
policy features which we discussed in the last section.
	
	
•	
You can fill the details in these tabs and can configure the firewall policy 
here also. But if you do not want to fill all the details now, you can 
configure it later as well. We will see how to configure these tabs in the 
coming section.
	
	
•	
Once you have filled the details or left just kept default configuration, 
you can click on Create to create new firewall policy.
	
•	
From Azure Firewall Manager:
	
	
•	
This is second option to create firewall policy. In this option, you go 
to Azure Firewall Manager in Azure portal and go to Azure Firewall 
Policies under the Security section. Here, you will see existing Azure 
Firewall policies to manage and an option to create new Azure Firewall 
policy.
	
	
•	
You can click on Create Azure Firewall Policy to create new firewall 
policy.
	
	
•	
You will see the same tabs for features as you would have seen in the 
previous option.
	
	
•	
You can fill the details in these tabs and can configure the firewall policy 
here also. But if you do not want to fill all the details now, you can 
configure it later as well. We will see how to configure these tabs in the 
coming section.
	
	
•	
Once you have filled the details or left just kept default configuration, 
you can click on Create to create new firewall policy.
	
	
•	
You can use any of the option to create Azure Firewall policy.

248      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Connect Azure Firewall policy with VNet and 
hubs
Once you created an Azure Firewall policy, you can associate it with your Azure VNets 
and hubs through Azure Firewall Manager. While creating Azure Firewall policy 
either you can choose to fill information in all the tabs or can just create a firewall 
policy with default configuration and update the configuration after attaching it to 
firewall. Let’s see how you can attach a policy to Azure Firewall Manager:
	
1.	 Login to Azure portal and go to Azure Firewall Manager. You will see few 
options under Deployment and Security sections in left panel.
	
2.	 Go to Azure Firewall Policies under the Security section. Here, you will 
see existing Azure Firewall policies to manage and an option to create new 
Azure Firewall policy.
	
3.	 You can click on Create Azure Firewall Policy to create new firewall policy.
	
4.	 Select existing firewall policy to manage its association:
Figure 4.55: Manage associated Azure Firewall policy
	
	
As shown in the preceding figure, I selected an existing firewall policy. This 
firewall policy is associated with an Azure VNet. To manage its association, 
click on Manage associations. From here, you can associate and disassociate 
this policy with VNets and hubs.
	
5.	 Similarly, if you select an unassociated firewall policy, you just get options to 
associate it with VNets and hubs:

Implementing Advance Network Security      249
Figure 4.56: Manage unassociated Azure Firewall policy
	
	
As shown in the preceding figure, I selected an unassociated firewall policy. 
When you click on Manage associations, you get options to associate it with 
VNets and hubs.
In this section, we learnt the process to associate firewall policy with Azure VNet 
and hub. So, when any traffic lands on Azure Firewall through user defined routes 
(UDR) or from the internet, Azure Firewall checks Azure Firewall policies. If it finds 
any associated firewall policy for source or destination VNet, it takes action as per 
the rules configured into the firewall policy.
So, you should configure the firewall rules very carefully because it will be impacting 
to devices in associated VNet.
Manage Azure Firewall policy
Now after the last section, you got knowledge about the components of Azure 
Firewall policy, process to create and associate it. Let’s use this information to 
manage Azure Firewall policies for various scenarios. We will create Azure policies 
for different types of rules collection and then apply them to see how they work.
Firewall policy with Destination Network Address 
Translation (DNAT) rule collections
In this setup, we will see how you can configure Azure Firewall to translate and 
filter inbound internet traffic to your subnets. Each DNAT rule in the DNAT rule 

250      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
collection translates your firewall public IP and port to a private IP and port. DNAT 
rule collection is a collection of inbound rules.
To test this, I already have a VM created in web subnet. This VM does not have public 
IP to connect from Internet. In this demo, we will create a DNAT rule to translate 
Azure Firewall’s public to VMs private IP to login to the VM. In this process, we will 
login to VM through Azure Firewall’s public IP. Let’s configure the DNAT rule for 
this:
	
1.	 Go to Azure Firewall policy and click on Rule Collections in the left panel. 
You will see option to create new rule collection. Click on + Add to create 
new rule collection. Select the rule collection type DNAT.
	
2.	 The fields are simple to understand. Give a name to this rule collection. This 
collection can have multiple DNAT rules. Then you need to give priority to 
this collection rule. The lowest number has highest priority. In the next field, 
you can select Allow or Deny as rule collection action. This action defines 
what happens with the traffic once you attach this policy to a subnet. Then 
in the next block you have few more fields to create a rule:
 
 
•	
Name: Name of the DNAT rule. Since I am creating RDP rule for web 
VM so I gave name RDPWebVM.
 
 
•	
Source type: It can be IP address or IP group.
 
 
•	
Source: Based on the source type, you can choose the source. I chose IP 
Address and I want to access my web VM from any internet IP so gave * 
in source. * includes all IPs.
 
 
•	
Protocol: You can choose TCP or UDP protocol for incoming traffic.
 
 
•	
Destination Ports: Define the port where your incoming traffic will hit 
the firewall.
 
 
•	
Destination Type: It will be the public IP of your firewall.
 
 
•	
Destination addresses: This is your first interaction destination address. 
This would be your Azure Firewall’s public IP.
 
 
•	
Translated address: Now this becomes your web VM’s private IP. This 
will get translated from the public IP of the firewall.
 
 
•	
Translated Port: This is the port where the incoming traffic will hit to the 
VM. You can translate your Azure Firewall port to VM’s port. Since this 
rule is for RDP so translated port should be 3389:

Implementing Advance Network Security      251
Figure 4.57: Create NAT rule in Azure Firewall 
	
3.	 Like this you can create multiple rules for different VMs and network 
resources.
	
4.	 Now you can RDP to this VM through firewall’s public IP, that is, 
20.185.104.120:
Figure 4.58: Login on a server with Azure Firewall public IP 
The preceding figure shows the server has been logged in by Azure Firewall’s public 
IP. So, now your incoming RDP traffic coming through Azure Firewall. You can 
access VM through public IP in secure way.
Firewall policy with network rule collection
Network rules collection is a collection of outbound rules. Here you can define what 
kind of traffic is allowed and denied from the associated subnet. The configuration is 
somehow same as outbound rules of NSG. To create a network rule collection, click 
on the Rule Collections in the left panel of Azure Firewall and then click on + Add. 
You will get a new window to create collection and rules. Let’s follow these steps 
and understand how it works:

252      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
1.	 Go to Azure Firewall policy and click on Rule Collections in the left panel. 
You will see option to create new rule collection. Click on + Add to create 
new rule collection. Select the rule collection type as Network.
	
2.	 The fields are simple to understand. Give a name to this rule collection. This 
collection can have multiple network rules. Then you need to give priority 
to this collection rule. The lowest number has highest priority. Then in next 
block you have few more fields to create a rule:
	
	
•	
Name: Name of the collection. We are creating this collection to allow 
outbound traffic from web servers which are residing in web subnet.
	
	
•	
Priority: It decides which collection will take precedence among multiple 
collections. The collection with lower number takes higher priority.
	
	
•	
Action: You can define the collection rules are created to allow the traffic 
or to block the traffic.
	
	
•	
Source type: You can control the traffic for IP address or a group of IPs.
	
	
•	
Source IP: To control traffic based on IP ranges you need to fill the details 
in this section. Give a name to the rule, I am creating a rule to allow SQL 
traffic from web servers which are residing in web subnet (10.3.0.0/24) 
to SQL servers which are residing in subnet (10.3.1.0/24) on SQL port 
1443.
	
	
	
Like this you can create other rules as well.
	
	
•	
Protocol: Here you select the network traffic transmission protocol for 
destination.
	
	
•	
Destination Ports: Here you mention on which port of destination you 
want your traffic to reach. Like in this example we will be hitting 1443 
port of destination.
	
	
•	
Destination Type: Here you can select type of destination. Azure Firewall 
policy supports multiple types of destinations. You are familiar with IP 
address and IP group:
	
	
	
•	
Service Tag: You can control the traffic for Azure services also. 
For them you would not require the IP addresses and it is also not 
recommended to use IP addresses to control access for Azure services. 
For Azure services, you can use service tags. As here we are creating 
another rule to allow outbound traffic from web servers which are in 
web subnet (10.3.0.0/24) to Azure backup service.
	
	
	
•	
FQDN: Here you can put the FQDN of any public service:

Implementing Advance Network Security      253
Figure 4.59: Create network rule collection in Azure Firewall 
	
3.	 Once you have filled the preceding details, you can add this rule and it will 
come in action.
Firewall policy with application rule collection
In application rule collection, you can create outbound rule based on the application 
URL. You can define at what URLs the traffic is allowed and blocked from the 
associated subnet. For this demo, we have a WebVM created, we will create an 
application rule to block www.msn.com. Let’s follow these steps to understand the 
configuration and functionality of this:
	
1.	 Go to Azure Firewall policy and click on Rule Collections in the left panel. 
You will see option to create a new rule collection. Click on + Add to create 
new rule collection. Select the rule collection type as Application.
	
2.	 The fields are simple to understand. Give a name to this rule collection. This 
collection can have multiple application rules. Then you need to give priority 
to this collection rule. The lowest number has highest priority. Then in next 
block you have few more fields to create a rule:
	
	
•	
Name: Name of the collection. I am creating this collection to block 
certain web sites, so I gave name relevant to that.
	
	
•	
Priority: There can be multiple application rule collections, to decide 
that which one will take precedence you need to assign priority to them. 
Same as other resources, here also the lower number will have higher 
priority.
	
	
•	
Action: I chose to deny because I want to block traffic.
	
	
•	
Source type: You can control the traffic for IP address or a group of IPs.

254      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
•	
Source IP: To control traffic based on IP ranges you need to fill the details 
in this section. Give a name to the rule, I am creating a rule to block traffic 
on Windows Update Azure service from web servers which are residing 
in web subnet (10.3.0.0/24) to WindowsUpdate.
	
	
	
Like this you can create other rules as well.
	
	
•	
Protocol: Here you select the network traffic transmission protocol for 
destination.
	
	
•	
TLS inspection: You can check the box if you want to enable TLS 
inspection.
	
	
•	
Destination Type: Here you define the type of destination. Azure 
Firewall supports various types of destinations:
	
	
	
•	
FQDN tags: FQDN tags represent a group of fully qualified domain 
names (FQDNs) associated with well-known Microsoft services. 
You can use an FQDN tag to allow or deny the required outbound 
network traffic through your firewall.
	
	
	
•	
For example, to manually allow or block Windows Update network 
traffic through your firewall, you need to create multiple application 
rules. Using FQDN tags, you can create an application rule, include 
the  Windows Updates  tag, and now network traffic to Microsoft 
Windows Update endpoints can be controlled through your firewall.
	
	
	
•	
Here, I am blocking Windows Update traffic for web servers residing 
in web subnet (10.3.0.0/24). You can create multiple such rules.
	
	
	
•	
FQDN: The next supported destination type is FQDN. Here you can 
control outbound traffic to target FQDN or URL. I am creating a rule 
to block browsing of www.msn.com from web servers. 
	
	
	
•	
URL: In this destination type, you can define a path of a URL. For 
example, here we are creating a rule to block www.indiatimes.com/
video. So, users will be able browse www.indiatimes.com and any 
other child page of this but will not be able to browse /video page. 
URL based destination helps you to control page level access on a 
website. For URL based destination, enabling TLS inspection is 
mandatory.
	
	
	
•	
Web Category: You may want to block all gambling related websites, 
but you do not know the complete list of such available websites. 
This type of destination category helps you to define web category 
which you want to allow or block and then Microsoft takes care of 
blocking all such URL:

Implementing Advance Network Security      255
Figure 4.60: Create application rule collection in Azure Firewall 
	
	
As shown in the preceding figure, you can create multiple rules for different 
destination types.
Enabling custom DNS and DNS proxy in Azure 
Firewall policy
In the previous section, we learnt about custom DNS and DNS proxy. In this section, 
let’s see the steps to configure them:
	
1.	 Go to your Azure Firewall policy and in left section select DNS under 
Settings.
	
2.	 Under setting, a new window will open. As shown the following figure, 
select the Enabled option to enable DNS settings on this firewall. 
	
3.	 Now you get options to choose between Azure provided DNS and your 
custom DNS server. You can put yours custom DNS server address also.
	
4.	 It is recommended to use DNS proxy when you enable DNS setting on Azure 
Firewall. So, next enable DNS proxy.
	
5.	 Now if you enabled DNS proxy in Azure Firewall, then it is recommended to 
enter your Azure Firewall’s private IP in custom DNS settings of your Azure 
VNet. So, the Azure VNet can route DNS traffic to this Azure Firewall:

256      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 4.61: Enable custom DNS setting in Azure Firewall policy
	
	
As shown in the preceding figure, you can configure DNS settings for your 
Azure Firewall. I defined 10.3.1.4 as custom DNS in this firewall.
Enabling threat intelligence in Azure Firewall policy
In the previous section, we learnt the use of threat intelligence. In this section, let’s 
see how to enable threat intelligence in Azure Firewall policy:
	
1.	 Go to your Azure Firewall policy and in the left section, select Threat 
intelligence under Settings.
	
2.	 It will open a new window; there you can select the mode of threat intelligence. 
You can select among Off, Alert only, and Alert and deny.
	
3.	 In the Allow list addresses option, you can put the IP address, IP range, or 
FQDN. Threat intelligence will not filter traffic for the listed IP, IP range, and 
FQDN:

Implementing Advance Network Security      257
Figure 4.62: Enable threat intelligence in Azure Firewall policy
Now, it’s time to enable threat intelligence as shown in the preceding figure.
Enabling TLS inspection in Azure Firewall policy
In this section, let’s see how to enable TLS inspection in Azure Firewall policy:
	
1.	 Go to your Azure Firewall policy and in the left section select TLS Inspection 
under Settings.
	
2.	 It will open a new window, click on Enable to enable this feature in your 
firewall policy.
	
3.	 As you know TLS inspection encrypts any out bound traffic with a 
predefined certificate. So, to configure TLS inspection you need a certificate. 
This certificate can be placed in Azure Key Vault.

258      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the following figure, you need to select a Key Vault, and a 
certificate from that.
	
4.	 To get access on this certificate, Azure Firewall policy needs access on Azure 
Key Vault. This access can be granted through managed identity. So, you will 
require a user defined managed identity:
Figure 4.63: Enable TLS inspection in Azure Firewall policy
	
	
I do not have any certificate, so I could not fill the valid details in these fields. 
You can buy or upload your certificate in Azure Key Vault and can use that 
here.
In this section, we learnt how to enable TLS inspection in Azure Firewall policy. TLS 
inspection is mandatory requirement if you want to create URL-based application 
rule collection.
Enabling IDPS mode in Azure Firewall policy
In the previous section, we studied about the IPS/IDS detection feature of Azure 
Firewall. In this section, we will see how to enable IDPS in Azure Firewall. The 
procedure is simple as other the preceding discussed features:

Implementing Advance Network Security      259
	
1.	 Go to your Azure Firewall policy and in the left section select IDPS under 
Settings.
	
2.	 It will open a new window, you will see three options there: Disabled, Alert 
only, Alert, and Deny. Click on Alert only or Alert and Deny option to 
enable this feature in your firewall policy.
	
3.	 In the next tab, you can put the signature ID and corresponding action for 
that rule.
	
4.	 The next tab is for Bypass list, here you can define the destination for 
which you want to bypass IDPS feature. So, any traffic reaching to defined 
destination will not be assessed and bypassed direct to the destination.
This IDPS feature is still in preview while writing this book and hopefully come in 
general availability soon.
Azure Firewall Manager
With Azure Firewall Premium version, you can manage firewall rules and policies 
from Azure Firewall Manager. In this section, we will learn more about Azure 
Firewall Manager.
Overview for Azure Firewall Manager
As I said in previous section, Azure Firewall is just left as an infrastructure component 
and all configuration and management options are moved to Azure Firewall policy 
and Azure Firewall Manager. Azure Firewall Manager provides centralized security 
policy and route management. Azure Firewall Manager can provide security 
management for Azure managed virtual WAN hub and Azure Virtual Network. 
Azure virtual WAN hub is a Microsoft managed resources which helps you to create 
hub and spoke network architecture. When you connect Azure Firewall with virtual 
WAN hub, it is called as secure virtual hub. On another side, when you just have 
Azure VNet, created, and managed by you, protected with Azure Firewall but not 
connected with virtual WAN hub, it is called as hub virtual network. This standard 
virtual network can be peered with other virtual networks.
Policies from Azure Firewall Manager can be extended to any network connected 
through VPN or ExpressRoute.
Features for Azure Firewall Manager
Before moving forward, let’s discuss about the features of Azure Firewall Manager:

260      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Centralized management of Azure Firewall policy: With Azure Firewall 
Manager, you can create and manage firewall policies from one place. These 
policies can be connected with multiple virtual networks and WAN hubs.
 
•	
Hierarchical policy assignment: You can create Azure Policies in child and 
parent relation. Child policy inherits rules from parent policy and parent 
policy rules take precedence over child rules.
 
•	
Integrate with third party security services: Azure Firewall Manager can be 
integrated with third party security services to analyze network traffic flow.
 
•	
Regional availability of Azure Firewall policy: You can create firewall 
policy in any region and those can be used in any region. For example, you 
create firewall policy in Japan East and use that in Central US.
Manage Azure Firewall Manager
Azure Firewall Manager has two sections: Deployments and Security. Let’s see 
what you can do under these sections:
 
•	
Virtual networks: It is a part of deployment section, when you click on 
virtual network, a new window opens. There you can find all existing Azure 
VNets across the regions. Under Virtual Networks, you also get an option 
to create new secured virtual network. When you choose this option, you 
will be taken to next page where you will be asked to create a new VNet and 
Azure Firewall:
Figure 4.64: Convert Azure VNet to secure VNet with Azure Firewall policy
	
	
As shown in the preceding figure, you can create new secure Azure VNet by 
clicking on + Create new Secured Virtual Network. If you select an existing 
VNet then the Manage Security option gets activated. From there, you can 
deploy new Azure Firewall in the selected network.
 
•	
Virtual hubs: Virtual hubs section also provides the same options as virtual 

Implementing Advance Network Security      261
network provides. From there, you can create new virtual hubs with Azure 
Firewall and can create new firewall for an existing hub.
 
•	
Azure Firewall Policies: We already have discussed about this in the 
previous section. From here, you can create new firewall policies and manage 
association for existing policies.
 
•	
Security Partner Providers: From here, you can manage third party NVAs.
In this section, you learnt about Azure Firewall Manager and its capability. After this 
section, you would be able to manage firewall policies for your environment from 
Azure Firewall Manager.
Shielding your Azure Virtual Network 
with DDoS protection
DDoS attack is one of the largest security concerns for customers after moving 
their applications to the cloud. A DDoS attacker attempts to exhaust application’s 
resources. This makes the application unavailable to legitimate users. Azure provides 
two SKUs of DDoS protection: Basic and Standard. All Azure services are by default 
covered with basic protection at no extra cost.
There are various types of DDoS attacks. Azure standard DDoS protection covers 
you from most common and popular attacks:
 
•	
Volumatic attacks.
 
•	
Protocol attacks.
 
•	
Resource (application) layer attacks.
Standard DDoS protection can be enabled easily in your environment without 
making any changes in application or resources. Let’s follow these steps to enable 
standard DDoS protection on your virtual network:
	
1.	 Login to Azure portal and search for DDoS protection plans.
	
2.	 I will open a new window. You just need to give a name to this plan, select 
subscription, and location. That’s it, click on Create and standard DDoS plan 
will be created.
	
3.	 A single DDoS plan can be attached to multiple resources across the 
subscription under your tenant.
	
4.	 To attach this plan with your resources, go to the DDoS plan, and click on 
Protected resources under Settings.
	
5.	 A new window will open, there you can see multiple tabs for different Azure 

262      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
services to connect this plan with them:
Figure 4.65: Attach standard DDoS plan to an existing VNet
	
	
As shown in the preceding figure, select the Azure service tab and click on 
+ Add to attach standard DDoS protection with that. Here, we are attaching 
standard DDoS plan with VNet. When you click on Add under VNet tab, it 
asks you the details about the VNet. Click on Save.
In this section, we learnt what security standard DDoS protection can give to your 
environment and how you can enable this in your environment.
Remote access management through Azure 
Bastion
Securely allowing users to access your servers remotely is the big challenge for 
organizations. Organizations may need to allow administrators to access servers 
from home location in case of critical situation. This has always been a challenge to 
stablish secure connection between administrator’s home network and server. For 
this, either you have to setup a point to site VPN connection between administrator’s 
home network and your server’s network or you need to allow public IP in the 
servers.
Allowing public IP on any of the server is least secure way to grant access. Microsoft 
came up with a PaaS service called Azure Bastion, which can help you to setup a 
secure RDP/SSH connection to your servers.
The Azure Bastion service is a new fully platform-managed service. You provision 
this inside your virtual network. You can connect securely and seamlessly through 
RDP/SSH to your virtual machines directly in the Azure portal over SSL. Your 
virtual machines do not need a public IP address when you connect through Azure 
Bastion.

Implementing Advance Network Security      263
You can protect your servers to be exposed to outer world by provisioning Azure 
Bastion. It provides secure RDP and SSH connectivity to all of the VMs in the virtual 
network in which it is provisioned. Azure Bastion deployment is per virtual network 
level, not per subscription/account or virtual machine. Once you provision an Azure 
Bastion service in your virtual network, you can RDP/SSH to all your VMs in the 
same virtual network.
Architecture
Here is high level architecture of Azure Bastion service:
Figure 4.66: High level architecture and traffic flow diagram of Azure Bastion
This diagram shows the architecture of an Azure Bastion deployment. In this 
diagram, the Bastion host is deployed in the virtual network. The user connects to 
the Azure portal using any HTML5 browser. The user selects the virtual machine 
to connect to. With a single click, the RDP/SSH session opens in the browser. As 
accessing the server through Azure Bastion, there is no requirement of public IP.
Features of Azure Bastion
Let’s understand the features of Azure Bastion. This will help you to configure and 
choose Azure Bastion for your environment:
 
•	
RDP/SSH directly in Azure portal: You can connect to your servers directly 
from the Azure portal using a single click seamless experience.
 
•	
Remote session over SSL and firewall traversal for RDP/SSH:  Azure 
Bastion uses an HTML5 based web client that is automatically streamed to 
your local device, so that you get your RDP/SSH session over SSL on port 

264      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
443. You can route this traffic through your firewall.
 
•	
No public IP required on the Azure VM: Since Azure Bastion opens the 
RDP/SSH connection to your Azure Virtual Machine using private IP on 
your VM, so you don’t need a public IP on your virtual machine to access 
your servers remotely.
 
•	
No hassle of managing NSGs: Azure Bastion is a fully managed platform 
PaaS service from Azure that is hardened internally to provide you secure 
RDP/SSH connectivity. You don’t need to apply any NSGs on Azure Bastion 
subnet. Because Azure Bastion connects to your virtual machines over 
private IP, you can configure your NSGs to allow RDP/SSH from Azure 
Bastion only.
 
•	
Protection against port scanning: Because you do not need to expose your 
virtual machines to public internet, your VMs are protected against port 
scanning by rogue and malicious users located outside your virtual network.
 
•	
Protect against zero-day exploits. Hardening in one place only:  Azure 
Bastion is a fully platform-managed PaaS service. Because it sits at the 
perimeter of your virtual network, you don’t need to worry about hardening 
each of the virtual machines in your virtual network. The Azure platform 
protects against zero-day exploits by keeping the Azure Bastion hardened 
and always up to date for you.
The preceding is the list of features of Azure Bastion. This will make your decision 
easy to select Azure Bastion for remote connection. The preceding features clear that 
Bastion is a secure way to access Azure Virtual Machines.
Configuring Azure Bastion
Setting up Azure Bastion in your network is very simple task. It just needs few 
clicks. To setup Azure Bastion you will need an Azure Virtual Network, a subnet 
with name AzureBastionSubnet and a CIDR of minimum /27 range. Let’s follow 
these steps to deploy Azure Bastion in your network:
	
1.	 Login to Azure portal and search for the virtual network where you want to 
deploy Azure Bastion. If you do not have a virtual network already created 
then please create a VNet.
	
2.	 In the selected virtual network, create a subnet with name AzureBastionSubnet. 
You are already aware of the process to create Azure VNet and subnet.
	
3.	 Once you have VNet and subnet created, search for Bastion in Azure portal 
search bar.
	
4.	 Fill the following details and click on Create:

Implementing Advance Network Security      265
Figure 4.67: Create Azure Bastion
	
5.	 It will deploy a Bastion resource in your network.
	
6.	 Now to connect with any virtual machine you can go to the machine, click on 
the Connect option. You will see option to connect through Bastion.
	
7.	 Click on Bastion, you will be prompted to enter username and password of 
the server to get into the server.
By the end of this section, now you are able to understand Azure Bastion in detail. 
You can configure Azure Bastion for your environment.
Let’s assume you have two Azure VNets, VNet A, and VNet B. Each VNet has two 
virtual machines. VNet A has VM1 and VM2 where as VNet B has VM3 and VM4. 
Now if you deploy Azure Bastion service in VNet A, then you can connect to 
VM1 and VM2 through Bastion but you cannot connect to VM3 andVM4 through 
Bastion service. If you want to connect to VM3 and VM4 through Bastion service 
then you need to deploy Bastion service in VNet B as well. So, you will require 
dedicated Bastion service in each VNet to connect to virtual machines in that 
VNet through Azure Bastion.

266      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Service endpoint in Azure
Azure service endpoint is an Azure networking feature. This allows you to reach 
securely to Azure PaaS service over Microsoft backbone network. Service endpoint 
enables your private IP address to reach to Azure PaaS services without public IP. 
Service endpoint can only route traffic originated from Azure VNet, it cannot be 
used for the traffic originated from on-premises network.
Configuring service endpoint in Azure Virtual 
Network
In this section, we will see how to configure service endpoint on Azure subnet:
	
1.	 Login to Azure portal and go to the subnet where you want to enable service 
endpoint in Azure Virtual Network.
	
2.	 Click on the subnet name and a new blade will open. There you get an option 
to select Microsoft services from the drop-down:
Figure 4.68: Enable Azure service endpoints in subnet
	
	
As shown in the preceding figure, you can select multiple Azure services’ 
endpoint at a time. Click on Save to add those endpoints to the subnet.

Implementing Advance Network Security      267
You can configure service endpoint for multiple subnets in your virtual network. This 
will help you to reach PaaS services securely through Microsoft backbone network.
Azure Resource Firewall
Azure provides option to secure your all resources through some kind of firewall. 
For most of the IaaS resources, Azure provides Azure Firewall, third party firewall, 
and NSG option. For PaaS resources also, you can control traffic through some 
firewall rules. We will see some PaaS resources which you can cover under firewall 
and how can you cover them.
Azure PaaS SQL
Secure your databases for unauthorised access is very important. Although you 
cannot cover Azure PaaS SQL through Azure Firewall but there are other ways by 
which you can control and restrict traffic your PaaS SQL. Let’s see what all you can 
control and how on a PaaS SQL:
	
1.	 Login to Azure portal and search for PaaS SQL Server. You can choose any 
existing PaaS SQL Server or can create a new one also.
	
2.	 On the left panel of the SQL server, you will see an option of Firewalls and 
virtual networks under Security. Click on the option and a new window 
opens, as shown in the following figure:
Figure 4.69: Setup firewall for Azure PaaS SQL
	
3.	 Here you can control the incoming traffic on the SQL server. You can allow 
or deny access on this server from public network, you can also control the 
access for other Azure services to access this SQL server.
	
4.	 In the client IP section, you can allow an IP or a range of IP to access this SQL 
server.

268      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
5.	 In the next section, you can restrict traffic only from a defined Azure 
network also. If you wish to allow access only from an azure network, then 
you can choose this option. You can choose an existing or can create a new 
network from which you want to access this SQL server. If you choose the 
existing network option, then a new window opens to take the details of 
existing network. As shown in the preceding figure, you just need to choose 
a network from the subscription. When you set up a network level access 
then a service end point creates in the subnet. Service end point establishes 
backend connection between PaaS SQL server and other Azure resources in 
the subnet through Microsoft backbone network.
In this section, we saw the resource firewall in Azure PaaS SQL server. You learnt 
how to control inbound traffic on your Azure PaaS SQL server.
Azure storage account
Similarly, you can setup this kind of firewall for Azure storage account as well. You 
need to enable service end point for storage account on the subnet from where you 
want to connect to this storage. Let’s follow these steps to set up firewall on storage:
	
1.	 Login to Azure portal and search for storage account on which you want to 
apply the firewall. You can choose an existing storage account or can create a 
new one also.
	
2.	 Once you get the required storage account then select Firewalls and virtual 
networks in the left panel:
Figure 4.70: Setup Azure Resource Firewall for Azure storage 
	
3.	 To get the preceding shown options you need to select the Selected networks 
option. By default, the All networks option has been selected.
	
4.	 If you just want to access the storage from a selected network, then click on 
the Existing virtual network option. A new window will open to take the 
details of the network.

Implementing Advance Network Security      269
	
5.	 You can grant access to this storage from a select IP or IP range also. You can 
put the details of that in the Address range field.
	
6.	 You can add some exceptions for Microsoft services. Some trusted Microsoft 
services such as Azure Backup, Azure Event Grid, Azure Data Box, and 
so on may want to access the storage account to serve you. By clicking the 
first check box, you allow Microsoft trusted services to access this storage 
account.
In this section, we saw the resource firewall in Azure storage account. You learnt 
how to control inbound traffic on your Azure storage account.
Azure Key Vault
You can set up this kind of resource firewall for Azure Key Vault as well. You need 
to enable service end point for Azure Key Vault on the subnet from where you want 
to connect to this Key Vault. Let’s follow these steps to set up firewall on Key Vault:
	
1.	 Login to Azure portal and search for key vault on which you want to apply 
the firewall. You can choose an existing key vault or can create a new one 
also.
	
2.	 Once you get the required key vault then click on Networking and select 
Firewalls and virtual networks in the left panel:
Figure 4.71: Setup Azure Resource Firewall for Azure Key Vault
	
3.	 To get the preceding shown options you need to select the Private endpoint 
and selected networks option. By default, the All networks option has been 
selected.

270      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
4.	 If you just want to access the storage from a selected network, then click on 
the Existing virtual network option. A new window will open to take the 
details of the network.
	
5.	 You can grant access to this key vault from a select IP or IP range also. You 
can put the details of that in the Address range field.
	
6.	 You can add some exceptions for Microsoft services. Some trusted Microsoft 
services such as Azure Backup, Azure Event Grid, Azure Data Box, and 
so on may want to access the storage account to serve you. By clicking the 
first check box, you allow Microsoft trusted services to access this storage 
account.
In this section, we saw the resource firewall in Azure Key Vault. You learnt how to 
control inbound traffic on your Azure Key Vault from trusted network, IPS, and 
Microsoft services.
Conclusion
Network, storage, firewall these are the core components of any foundation 
infrastructure. In this chapter, you went through the security parameters related 
to a foundation service. After this chapter, now you are ready to design a security 
baseline for your organization to take decision when and how much you need to 
invest on the security. Now you can take decision when to use Azure Front Door and 
Azure Firewall. You can cover you public facing applications with Azure Application 
Gateway with WAF, Azure Front Door, and rest of the infrastructure with Azure 
Firewall.
You can now set up a secure connection between Azure to Azure and Azure on-
premises networks. We also explored Azure service endpoint which gives you secure 
connection between Azure PaaS services and IaaS services over Microsoft backbone 
network. You also saw the implementation of standard DDoS protection.
In the next chapter, we will go in deep to learn about security parameters for Azure 
Virtual Machine (compute resources).
Multiple choice questions
	
1.	 Which of the following services will you use to secure your environment 
from IPS and IDS?
	
	
A.	 Azure Firewall
	
	
B.	 Azure Front Door

Implementing Advance Network Security      271
	
	
C.	 Azure NSG
	
	
D.	 Azure Service Endpoint
	
	
Answer: A
	
2.	 Among these Azure services, which service needs its own dedicated subnet?
	
	
A.	 Azure Baseline
	
	
B.	 Azure Virtual Machine
	
	
C.	 Azure Firewall
	
	
D.	 Azure NSG
	
	
Answer: C
	
3.	 You need to restrict certain URLs from some subnet, which Azure service 
you will choose?
	
	
A.	 Azure NSG
	
	
B.	 Azure ASG
	
	
C.	 Azure Firewall
	
	
D.	 Azure Baseline
	
	
Answer: C
	
4.	 Which Azure service would help you to route network traffic in manually 
desired direction?
	
	
A.	 Azure Front Door
	
	
B.	 Azure UDR
	
	
C.	 Azure Firewall
	
	
D.	 Azure NSG
	
	
Answer: B
	
5.	 While setting up Azure Site-to-Site VPN connection, which network device 
represents your on-premises gateway device in Azure?
	
	
A.	 Azure Virtual Network Gateway
	
	
B.	 Azure ExpressRoute
	
	
C.	 Azure Front Door
	
	
D.	 Local network gateway
	
	
Answer: D
	
6.	 What Azure service provides you the ability to RDP a windows server 
directly from Azure portal?
	
	
A.	 Azure Front Door.

272      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
B.	 Azure Bastion.
	
	
C.	 Azure Firewall.
	
	
D.	 Azure Baseline.
	
	
Answer: B
	
7.	 Which Azure service provides URL redirection capability?
	
	
A.	 Azure Front Door
	
	
B.	 Azure Firewall
	
	
C.	 Azure NSG
	
	
D.	 Azure Remote Access
	
	
Answer: A
	
8.	 Among the followings, which one is not a feature of application gateway?
	
	
A.	 Auto scaling
	
	
B.	 SSL/TLS termination
	
	
C.	 DNS based global traffic routing
	
	
D.	 URL redirection
	
	
Answer: C

Endpoint security both in the data center and on desktop is critical to any 
organization. So, what about the workloads in the cloud? Aren’t they safe and secure 
by default because it is the cloud? So ideally, not so much. The customer bears the 
responsibility to configure the right services properly to better secure their resources. 
In Azure, Microsoft is responsible for making sure that lights are on in their data 
center and the platform is available and secure. But it is up to you to secure your 
hosts. No worries, Azure has plenty of resources to make your hosts secure. In this 
chapter, we will identify some critical features and services to secure our endpoints 
both on-premise as well as in the cloud. We will also study about Azure Key Vault 
to store keys, secrets, and certificates securely. We will use this key vault to do disk 
encryption for your Azure Virtual Machines disks. At the end, we will study how 
to enable secure authentication on your Azure web apps and how to access them 
securely.
By the end of this chapter, you will understand how to better secure your workloads 
both on-premises and in the cloud using the features and services provided 
by Microsoft. You will be able to use Azure Key Vault to save keys, secrets, and 
certificates. You can use these keys to do disk encryption for your Azure VMs, secrets 
to store app passwords, and connection strings, and certificates for SSL connection 
over secure HTTP traffic.
Chapter 5
Configuring Advance 
Security for Compute

274      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Structure
In this chapter, we will learn about following topics:
	
•	
Understand Microsoft Endpoint Protection.
	
•	
Configure endpoint security within Azure Virtual Machine.
	
•	
Configure and manage Azure Virtual Machine security.
	
•	
Harden security on Azure Virtual Machine.
	
•	
Configure Update Management for Azure Virtual Machine.
	
•	
Configure security baseline for Azure Virtual Machine.
	
•	
Azure Key Vault.
	
•	
Azure Virtual Machine disk encryption.
	
•	
Detailed description of security parameters for Azure App Service.
	
•	
Conclusion.
	
•	
Multiple choice questions (MCQs).
Objectives
The objective of this chapter is to provide you insights about Azure security services 
to secure compute resources in Azure environment. Some of them can cover on-
premises compute resources also. After studying this chapter, you should be able 
to secure Azure VMs with Microsoft Endpoint Protection. You will be able to 
configure Update Management to patch Azure VM and on-premises servers. You 
will also go through some security baseline for Azure VM like encryption, access 
control, network traffic control and many more. Along with Azure VM, you will 
also learn how to secure Azure Web app hosting PaaS platforms such as App Service 
Environments, App Service Plans.
Understand Microsoft Endpoint Protection
Microsoft Endpoint Protection is Microsoft’s in-house solution to secure your 
servers from virus attacks. Microsoft Endpoint Protection provides a real-time 
protection feature in Azure and it alerts you when viruses, spyware, and other 
potentially unwanted software attempts to install itself or run on your virtual 
machine. The alerts are categorized in High, Medium, and Low severities. You can 
set up automatic actions based on the alert severity. Microsoft Endpoint Protection 
for Azure automatically takes action to remove the malicious software and protect 
your virtual machine from potential further infection.

Configuring Advance Security for Compute      275
Microsoft Endpoint Protection supports three ways to protect your virtual machine 
from malware and other potentially unwanted software:
	
•	
Real-time protection: In real-time protection offering, Microsoft Endpoint 
Protection for Azure sends instant alerts any when malware, spyware, or 
potentially unwanted software attempts to install or run on your virtual 
machine. It also alerts you when programs attempt to change important 
Windows settings.
	
•	
Scanning options: Scanning offering is a scheduled activity. You can plan to 
scan your environment based on your business feasibility. You may choose a 
periodic timeline for this activity. In scheduled scanning, Microsoft Endpoint 
Protection for Azure scans for threats, viruses, spyware, and other potentially 
unwanted software that might be installed on your virtual machine. You 
can also define automatic actions to remove any malicious software that is 
detected during a scan.
	
•	
Detection/remediation: When Microsoft Endpoint Protection for Azure 
detects on your virtual machine, certain actions will automatically be taken 
to, remove the malicious software and protect your virtual machine from 
potential further infection. 
Now let’s learn about the features and architecture of Microsoft Endpoint Protection. 
In coming sections, we will also see how to deploy and configure Microsoft Endpoint 
Protection in your environment.
Features of Microsoft Endpoint Protection
Microsoft Endpoint Protection for Azure is Microsoft’s core in-house endpoint 
protection solution. It has bundle of features. Let’s see understand the functionality 
of these features:
	
•	
History retention: Microsoft Endpoint Protection for Azure keeps the history 
of previous scans and redamation actions. It provides a list of all malware 
or suspected malware that detected on your virtual machine. In the History 
tab, you can also see the actions that were taken when suspicious programs 
were detected. The History tab shows the items detected for all users - not 
per user.
	
•	
Automatic scanning for malware: As we saw there are three scanning 
modes. In automatic scanning, you can schedule the scanning time. You can 
also turned on or off and you can change the frequency and type of scanning 
using the Microsoft Endpoint Protection for Azure Settings tab.

276      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Action on malware detection: You can also choose which actions are 
automatically applied to software that Microsoft Endpoint Protection for 
Azure detects during a scheduled scan. For severe threats, certain actions 
will automatically be taken by default to remove the malicious software and 
protect your virtual machine from potential further infection.
	
•	
Real time protection: This feature alerts you when any viruses, spyware, 
and other potentially unwanted software attempts to install itself or run on 
your virtual machine.
	
•	
Shell extension: With the help of Shell extension you can select specific 
files and\or folders and scan them using Microsoft Endpoint Protection for 
Azure.
	
•	
Signature update: It automatically installs the latest protection signatures 
(virus definitions) to ensure protection is up-to-date on a pre-determined 
frequency.
	
•	
Exclusion: As an administrator, you can configure exclusions for files, 
processes, and drives.
These are some features of Microsoft Endpoint Protection. There are multiple 
Endpoint Protection solutions available in market. This list of features will help you 
to choose best suitable Endpoint Protection for your environment.
Architecture of Microsoft Endpoint Protection
Microsoft Antimalware is supported on Windows Server 2008 R2 and later operating 
system families. It is not supported on the Windows Server 2008 operating system 
and is not supported in Linux. To secure your PaaS environment, the underlying 
infrastructure of Azure App Service also has Microsoft Antimalware enabled 
on it. So being a customer, you do not need to worry about securing underlying 
infrastructure of your Azure App Service.
The Microsoft Antimalware Client and Service is installed by default in a disabled 
state in all supported Azure guest operating system families in and services platform. 
The Microsoft Antimalware Client and Service is not installed by default in the on-
premises infrastructure. But you can install and enable Microsoft Antimalware Client 
and Service on any on-premises or other cloud environment. This feature can be 
enabled through the Azure portal and Visual Studio Virtual Machine configuration 
under Security Extensions.
Microsoft Antimalware Client can be pushed through Azure portal or PowerShell. 
The Azure virtual machine guest agent launches the Antimalware Extension and 
applies the Antimalware configuration settings supplied as input. This step enables 

Configuring Advance Security for Compute      277
the Antimalware service with either default or custom configuration settings. If no 
custom configuration is provided, then the antimalware service is enabled with the 
default configuration settings. You can set up the Antimalware solution with custom 
configuration by using XML file or JSON. In custom configuration, you can make 
changes for these policies:
	
•	
Extensions exclusion: You can list the file extensions which you want to 
exclude from the scanning. Extensions such as .log, .txt, .gif, and so on.
	
•	
Path exclusion: You can define the path of files and folders which you do not 
want to scan. For example, D:\appdata\userinfo.
	
•	
Process exclusion: You can define the path of processes, so any file opened 
by the excluded process will be excluded from the scanning.
	
•	
Real time protection: You can choose to enable or disable the real time 
protection.
	
•	
Scheduled scanning setting: You can choose to enable or disable the setting 
for scheduled scanning. Once you enable this you can set up schedule as 
well.
	
•	
Scheduled scan setting day: You can choose the day on which you want 
to schedule the scanning. 0-scan daily, 1-Sunday, 2-Monday, 3-Tuesday, 
4-Wednesday, 5-Thursday, 6-Friday, 7-Saturday, and 8-Disabled.
	
•	
Scheduled scan setting time: Here you can choose at what hour you want 
to start scanning. The hours are calculated from the midnight. So, 60 mins = 
1 AM, 120 mins = 2 AM …. 1380 mins = 11 PM, and 1440 = 12 AM.
	
•	
Scan type: You can set up you want to go for quick scan or full scan.
	
•	
Monitoring: You can enable or disable antimalware event collection.
	
•	
Storage account name: You need to give the same of storage account where 
you want to store the monitoring logs.
A running Microsoft Antimalware Client downloads the latest protection engine 
and signature definitions from the internet and loads them on the systems where it 
is running. The Microsoft Antimalware service writes service-related events to the 
system OS events log under the Microsoft Antimalware event source.
Enabling Microsoft Endpoint Protection
You can enable Microsoft Endpoint Protection on a virtual machine easily. You can 
attach it while creation of the VM or after the VM has been created. You can do it 
from Azure portal, PowerShell, JSON, or visual studio. Let’s go through the process 
which you can use to enable Microsoft Endpoint Protection while creating virtual 

278      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
machine or after you have created the virtual machine.
Enable Microsoft Endpoint Protection while creating 
the virtual machine
In this section, you will see that how to enable Microsoft Endpoint Protection while 
creating a virtual machine:
	
1.	 Login to Azure portal and search for virtual machines.
	
2.	 Click on + Add. On the Basic information page, you can fill the required 
details such as subscription name, resource group name, virtual machine 
name, size, location, and few other. The most important field is Image. Since 
Microsoft Endpoint Protection supports only windows machines so you 
need to select only windows machine.
	
3.	 In the next sections, you need to choose about Disk, Networking, and 
Management. Here you decide what would be the type of storage account, 
what would be the IP and other networking configuration of this server and 
some levers to manage the machine.
	
4.	 In the next Advanced section, you see an option to add extension to 
this server. Azure provides various types of extension for your virtual 
machines. You can add multiple extensions to your virtual machines. These 
extensions provide extra functionality and features to your virtual machines 
such as desired state configuration, antivirus add-on, changes in OS level 
configurations:
Figure 5.1: Add extension to Azure Virtual Machine

Configuring Advance Security for Compute      279
	
5.	 When you click on Select an extension to install, a list of available extension 
opens. You will see Microsoft Antimalware in the list, only if you have 
chosen Windows as OS image.
	
6.	 Click on Microsoft Antimalware to install the extension. When you choose 
Microsoft Antimalware, a new blade opens to fill the configuration. I am 
setting up the configuration in a manner to exclude a folder location and an 
extension type. I also choose to have real time protection and scheduled a 
quick scan on every Sunday 2 AM:
Figure 5.2: Configuration settings of Microsoft Antimalware Extension
	
7.	 Click on OK to add the extension.
Here we learnt how to add Microsoft Antimalware Extension while deploying a 
virtual machine. In the next section, we will see how to add Microsoft Antimalware 
Extension to an existing virtual machine.

280      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Enabling Microsoft Endpoint Protection on a running 
virtual machine
You can enable Microsoft Endpoint Protection even after the virtual machine is 
created. Let’s see these simple steps to install extension on a running virtual machine:
	
1.	 Login to Azure portal and search for the virtual machine on which you want 
to install the extension.
	
2.	 On the right-side option panel, select Extensions under Settings. A new 
window will open, here you can see the installed extensions and can add 
new extension by clicking + Add:
Figure 5.3: See existing extensions attached and add new extension to running virtual machine
	
3.	 Once you click on + Add, a list of extensions opens. Choose Microsoft 
Antimalware from the list. You will see the following options for the 
configuration:

Configuring Advance Security for Compute      281
Figure 5.4: Configuration settings of Microsoft Antimalware extension
	
4.	 Click on OK to install extension with preceding configuration.
Here, we learnt how to add Microsoft Antimalware extension to an existing virtual 
machine. In the next section, we will see how to monitor Microsoft Antimalware 
extension to an existing virtual machine.
Monitor Microsoft Endpoint Protection on a 
running virtual machine
When you want to follow a strict security baseline which mandates you to have 
Antimalware solution installed in all virtual machines, you need a solution which 
can provide you an insight about this. Azure has Azure Security Center which can 
scan the servers to identify that which server has Antimalware installed and which 

282      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
does not. Azure Security Center can monitor the status of antimalware protection 
on servers and cloud services. Security Center highlights issues, such as detected 
threats and insufficient protection.
The following are some issues which Security Center reports:
	
•	
Endpoint Protection not installed on Azure VMs: This will be shown if a 
supported Antimalware solution is not installed on these Azure VMs.
	
•	
Endpoint Protection not installed on non-Azure computers: This will be 
shown if a supported Antimalware is not installed on these non-Azure 
computers.
	
•	
Endpoint protection health:
 
 
• 
Signature out of date: This will be shown if an Antimalware solution is 
installed on these VMs and computers, but the solution does not have 
the latest Antimalware signatures.
 
 
• 
No real-time protection: This will be shown if an Antimalware solution 
is installed on these VMs and computers, but it is not configured for real-
time protection. 
 
 
• 
Not reporting: This will be shown if an Antimalware solution is installed 
but not reporting data.
 
 
• 
Unknown: This will be shown if an Antimalware solution is installed but 
its status is unknown or reporting an unknown error.
Here we saw how Azure Security Center can help you to follow security best 
practices for your virtual machines. Also, you saw what all things Azure Security 
Center can detect about your Endpoint Protection service.
Configure and harden security for virtual 
machines
Now moving forward to secure your infrastructure, in this section, we will go through 
other security levers to protect your virtual machines. Most of the recommendations 
are applicable for most of the organizations but still you can opt for appropriate 
recommendations from the following described:
	
•	
Virtual machine disk encryption: An unencrypted data is always a big risk 
for most of the organizations. It is always recommended to encrypt the data 
at rest and in transit. Azure Disk Encryption is a capability to encrypt your 
Windows and Linux virtual machine disks. Azure Disk Encryption uses the 
industry-standard BitLocker feature of Windows and the DM-crypt feature 
of Linux to provide volume encryption for the OS and the data disks.

Configuring Advance Security for Compute      283
	
	
You can control your encryption key versioning and manage and store them 
in Azure Key Vault. It is recommended to take snapshot or backup of the 
virtual machine before encrypting the virtual machines.
	
•	
Network level isolation: Azure Virtual Machine is a key component of your 
infrastructure and is capable to run and hold multiple applications and 
services. This functionality requires virtual machines to communicate with 
some other Azure and non-Azure services. These services can be part of your 
network or over the internet. You need to take care of the traffic which is 
coming and going out from the virtual machine. You can apply firewall or 
NSG policies to control inbound and outbound of traffic.
	
•	
Azure backup: Azure backup of your virtual machines can protect your data 
in case of any failure on running virtual machine. Human errors or application 
bugs can corrupt data on disks. With the help of Azure backup service, you 
can retrieve the complete data and even the complete virtual machine.
	
•	
Antimalware: We have discussed about the feature and functionality of 
Microsoft Antimalware in the previous sections. You can even use some 
third-party Antimalware such as Symantec, Trend Micro, and Kaspersky.
	
•	
Windows Defender Advance Threat Protection: You can use Windows 
Defender Advanced Threat Protection to prevent, detect, investigate, and 
respond to advanced threats. You have the following features from the 
Windows Defender Advance Threat Protection:
	
	
•	
Attack surface reduction.
	
	
•	
Next generation protection.
	
	
•	
Endpoint protection and response.
	
	
•	
Automated investigation and remediation.
	
	
•	
Secure score.
	
	
•	
Advanced hunting.
	
	
•	
Management and APIs.
	
	
•	
Microsoft Threat Protection.
	
•	
Azure site recovery service: Azure site recovery service is a business 
continuity and disaster recovery (BCDR) solution for you. It helps you to 
recover your business in case of planned and unplanned outage. Azure site 
recovery helps you to replicate, failover, and recovery of workloads and apps 
so that they’re available from a secondary location if your primary location 
goes down.
	
•	
Hardware security module: You can enhance security of your encryption 
keys by using hard security module.

284      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Compliance: Azure Virtual Machines is certified for industry standard 
compliances such as FISMA, FedRAMP, HIPAA, PCI DSS Level 1, and 
other key compliance programs.
	
•	
Monitor security policies and reporting: Monitoring of current policies and 
infrastructure is as important as apply the security policies. Azure Security 
Center gives you the capability to keep an eye on applied policies and on the 
resources, which are not covered under appropriate security policy.
	
•	
Virtual machine access policy: It is always recommended to provide limited 
access for a certain time period only. You can control access on virtual 
machines through Azure RBAC, Azure Privileged Identity Management 
(PIM), and Just-in-Time (JIT) access. You should also setup complex 
password and password rotation group policy in active directory.
	
•	
Avoid single point failure: It is always recommended to run business 
critical application virtual machines in high availability. You can achieve 
high availability by using availability set or availability zone.
	
•	
Patch management: It is always recommended to keep your virtual machine 
up to date with latest patch. You can use Azure native Update Manager, 
SCCM, or WSU to patch your servers.
	
•	
Update the base image: Sometimes you may need to deploy virtual machines 
from a golden image. You need to keep this image up to date with latest 
software updates, security updates, and OS updates. You should periodically 
redeploy your VMs to force a fresh version of the OS.
	
•	
Restrict internet exposer: You should prevent your virtual machines to be 
exposed to internet. You can use Azure VPN, Network Address Translation 
(NAT) through Azure Firewall or third-party firewall, Azure Bastion, or 
jump servers to access your virtual machines from the internet.
	
•	
Complex password policy: Being a security administrator you need to set 
up a complex password policy. There are multiple combinations to create 
complex password policy such as alphanumeric 16-digit password with 
special character.
	
•	
Updated OS version: Use only 64-bit OS version.
The preceding listed points describe some basic security best practices to secure your 
virtual machines. These best practices are not only applicable for your Azure Virtual 
Machines but can be used for any compute service at any platform.
Update Management solution for servers
For any organizations, it is very important to have updated operating system for 
their servers. Most of the organizations uses Windows- and Linux-based operating 

Configuring Advance Security for Compute      285
systems. Microsoft and other OS providers release regular updates for their 
operating systems. These updates can be a break fix of any OS feature, vulnerability 
resolution, security update, or system updates. There are many Microsoft and third-
party solutions to apply these updates to servers.
Update Management is a cloud-based solution to push updates and security patches 
to servers. Here, we will study about the required components to configure Update 
Management, how to deploy and configure these components, and how to push and 
manage updates for your servers.
Azure Update Management can help you to manage operating system updates for 
your Windows and Linux machines at any platform.
Overview of Update Management
Security patching, operating system updates are the critical part of virtual machine 
security baseline. There are multiple patch management tools from Microsoft and 
third-party. SCCM, WSUS, and Azure Update Management are the most common 
and widely used solutions. In this section, we will see the use case of Azure Update 
Management. Update Management is a solution in Azure automation to manage 
operating system updates for your Windows and Linux machines at any platform.
You can enable update management in three ways:
	
•	
For multiple virtual machines from Azure automation account.
	
•	
For single Azure Virtual Machine, enable it from settings panel of the virtual 
machine in Azure portal.
	
•	
For multiple virtual machines from virtual machines page in Azure portal.
We will discuss all these ways in coming sections. To enable Update Management 
in Azure you need an automation account and Log Analytics workspace in your 
subscription. You can connect VMs from multiple subscriptions in the same tenant. 
After a patch package is released, Update Management takes two to three hours for 
the patch to show up for Linux machines for assessment and twelve to fifteen hours 
for the Windows machines assessment. For a Linux machine, the compliance scan 
is performed every hour by default and for Windows machine, the compliance scan 
is run every twelve hours by default. After a machine completes a scan for update 
compliance, the agent forwards the information in bulk to Azure Monitor logs.
You can create groups of multiple VMs based on your line of business, application or 
any other parameter. You can setup different schedule for different groups or virtual 
machines. You can also choose to reboot the server or not after patch installation. 
On the scheduled date and time only the patch installation starts. Before patching, it 
scans again to verify that the updates are still required or not.

286      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Supported and unsupported client
Here is the list of supported and unsupported client. To plan Update Management 
for your organization you need to identify that which client are supported and 
which are not:
Operating system
Notes
Windows Server 2019 (Datacenter/
Datacenter Core/Standard)

Windows Server 2016 (Datacenter/
Datacenter Core/Standard)

Windows Server 2012 
R2(Datacenter/Standard)
Windows Server 2012
Update Management can assess and install the 
patches on these OS versions without any issues. 
These OS are fully compatible with Update 
Management.
Windows Server 2008 R2 (RTM and SP1 
Standard)
Update Management only supports performing 
assessments for this operating system, patching is 
not supported as the Hybrid Runbook Worker is 
not supported for Windows Server 2008 R2.
CentOS 6 (x86/x64) and 7 (x64)
Linux agents requires access to an update 
repository. 
Classification-based 
patching 
requires yum to return security data that CentOS 
doesn’t have in its RTM releases. 
Red Hat Enterprise 6 (x86/x64) and 
7 (x64)
Linux agents requires access to an update 
repository.
SUSE Linux Enterprise Server 11 (x86/
x64) and 12 (x64)
Linux agents requires access to an update 
repository.
Ubuntu 14.04 LTS, 16.04 LTS, and 18.04 
(x86/x64)
Linux agents requires access to an update 
repository.
Windows client
Client operating systems (such as Windows 7 
and Windows 10) aren’t supported.
Windows Server 2016 Nano Server
Not supported.
Azure Kubernetes Service Nodes
Not supported. There is different way to patch 
AKS nodes.
Table 5.1: List of supported and unsupported OS for Update Management
Windows servers require Log Analytics agent for Windows to be installed on virtual 
machines and the Linux machine requires access to an update repository. The Linux 
machine must also have Python 2.x and Log Analytics agent for Linux installed.

Configuring Advance Security for Compute      287
Configure Update Management for virtual 
machines
Update Manager require two Azure services essentially, Azure automation account 
and Log Analytics workspace. Before enabling Update Manager on virtual machines, 
you need to create these two services. Let’s see how to deploy these services:
Log Analytics workspace
Log Analytics workspace is centralized location to store multiple events, logs, 
performance data, and configuration. It provides availability and performance of 
your applications and services by delivering a comprehensive solution for collecting, 
analyzing, and acting on telemetry from your cloud and on-premises environments.
Create Log Analytics workspace
Update Management requires a Log Analytics workspace to store the patching 
related telemetry of your servers. Since Log Analytics workspace works to collect 
and store the telemetry data so you can use single workspace for multiple purposes. 
Follow these simple steps to create Log Analytics workspace:
	
1.	 Login to Azure portal and search for Log Analytics workspace.
	
2.	 Click on + Add and new blade will open to get details:
 
Figure 5.5: Create Log Analytics workspace

288      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
3.	 Just fill the basic details as shown in the preceding figure and click on the 
Create button to create workspace.
Here we created a Log Analytics workspace for Update Management service. We 
can use this Log Analytics workspace for many more services such as analysis of 
activity logs, performance logs, service maps, and so on.
On board Virtual Machines to Workspace
Workspace is a collection of logs and configuration so, once you have created the 
workspace, you need to attach your target virtual machines to this workspace:
	
1.	 Login to Azure portal and search for the preceding created workspace.
	
2.	 Once you are in the workspace, scroll to Virtual machines under Workspace 
Data Sources.
	
3.	 Here you will see the virtual machines which are available in your all 
subscription. Select the target virtual machines, which you want to add into 
this workspace:
Figure 5.6: Attach Azure Virtual Machines to workspace
	
4.	 Click on the name of the virtual machine. In the next blade, you will get 
option to connect that to this workspace. Click on Connect to connect the 
virtual machine to this workspace.
	
5.	 It will take some time to connect the machines to this workspace:
Figure 5.7: Status of virtual machines in workspace

Configuring Advance Security for Compute      289
	
6.	 Once the machines are connected to this workspace then you can do multiple 
operations from the automation account.
Here, we onboarded our Azure Virtual Machine into Log Analytics workspace. Now 
we can use multiple services of Log Analytics workspace for our virtual machine. 
Here, we will use Update Management service of Log Analytics workspace.
Automation account
Azure automation delivers a cloud-based automation and configuration service that 
provides consistent management across your Azure and non-Azure environments. 
It consists of process automation, update management, and configuration features:
	
•	
Process automation: Azure automation provides you the ability to automate 
frequent, time-consuming, and error-prone cloud management tasks. This 
automation helps you focus on work that adds business value. By reducing 
errors and boosting efficiency, it also helps to lower your operational costs. 
You can integrate Azure services and other public systems that are required 
in deploying, configuring, and managing your end-to-end processes.
	
•	
Configuration management: Azure automation desired state configuration is 
a cloud-based solution for PowerShell DSC that provides services required 
for enterprise environments. Manage your DSC resources in Azure 
automation and apply configurations to virtual or physical machines from 
a DSC pull server in the Azure cloud. It provides rich reports that inform 
you of important events such as when nodes have deviated from their 
assigned configuration. You can monitor and automatically update machine 
configuration across physical and virtual machines, Windows or Linux, in 
the cloud, or on-premises.
	
•	
Update management: Update Windows and Linux systems across 
hybrid environments with Azure automation. You get visibility of update 
compliance across Azure, on-premises, and other clouds. You can create 
schedule deployments to orchestrate the installation of updates within 
a defined maintenance window. If an update should not be installed on a 
machine, you can exclude those updates from a deployment.
Create automation account
Automation account is the another required building block for Update Management. 
You can use an automation account for multiple purposes. So, you can use existing 
automation account or can create new to configure Update Management. Creation 
of automation account is also as simple as creation of Log Analytics workspace:

290      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
1.	 Login to Azure portal and search for automation accounts.
	
2.	 Click on + Add to create new account, a new blade opens:
Figure 5.8: Create Azure automation account
	
3.	 Fill the basic details as shown in the preceding figure and click on Create.
Here we created an automation account for Update Management service. We can 
use this Log Analytics workspace for many more services such as inventory, change 
management, process automation, scheduling, and so on.
Enable Update Management for Azure Virtual 
Machines
Once you have created Log Analytics workspace and automation account, you can 
now enable Update Management service. Let’s follow these steps to enable Update 
Management:

Configuring Advance Security for Compute      291
	
1.	 Login to Azure portal and search for the automation account which you 
created in last step.
	
2.	 On the left panel of automation account page, you will see different services. 
There you will see Update management, click on it and a new window will 
open:
Figure 5.9: Enable Update Management
	
3.	 In new window, fill the details as shown in the preceding figure. The 
important detail is to select proper Log Analytics workspace. You need to 
select the workspace where you added your machines in previous section. 
Select the subscription and workspace name and click on Enable. It may take 
some to enable the solution.
	
4.	 Refresh the page after some time. You will see a dashboard from Update 
Management:
Figure 5.10: New Update Management dashboard

292      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
5.	 Now you have complete setup ready to on board VMs to the Update 
Management. Click on + Add Azure VMs to add VMs.
	
6.	 In next window, you will see the list of virtual machines. You can put 
appropriate filters on name of the subscriptions and location to search 
your target virtual machines. You can only select those machines which are 
connected to this workspace:
Figure 5.11: Onboard Azure Virtual Machine to Update Management
	
7.	 Once you find your target machines, select them and click on Enable. It will 
take some time machines to report to update management dashboard.
	
8.	 You can enable Update Management for non-Azure servers as well. This 
requires you to install Microsoft Monitoring Agent Setup on on-premises 
servers.
	
9.	 After some time, you will see the updated Update Management dashboard 
as shown in the following figure:

Configuring Advance Security for Compute      293
Figure 5.12: Update Management dashboard after Azure Virtual Machine onboarding
Here we enabled Update Management for our Azure Virtual Machines. In coming 
section, we will see how to schedule and plan the update deployment for our 
onboarded virtual machines.
Schedule update deployment
After onboarding the servers to Update Management, now you can schedule update 
deployment. To manage the patching, you can configure multiple settings such as 
scheduling, patch inclusion and exclusion, type of patches, and so on. We will see 
available configuration options in this section:
	
1.	 To schedule patch installation, click on Schedule update deployment. A 
new blade will open to fill the configuration.
	
2.	 The field says to give a name to this schedule. For an example, you can 
create a schedule to install critical updates on all production servers for an 
application. Like this you can create multiple schedules. You have multiple 
ways to apply patches on machines. You can either choose individual server 
or can create a group.
	
3.	 Group Azure VMs: In the Items to update section you have option to create 
groups for your machines. You can plan this grouping based on environment, 
application, type of updates, and so on. Click on Groups to update, in next 
window you will get option to select Azure and non-Azure machines. When 
you select Azure as your target machines for updates installation, it gives you 
the option to select the virtual machines. Select the appropriate subscription 
and it will show the respective attached virtual machine:

294      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 5.13: Create Azure Virtual Machines group in Update Management
	
	
Select the subscription, click on Add. You can see the available machines 
when you click on Preview.
	
4.	 Select individual machines: Here you can select individual machine among 
all connected machines. Click on Machines to update and it will show the 
list of all connected machines. You can click on the machine name to select 
that for update:
Figure 5.14: Select individual Azure Virtual Machine in Update Management
	
5.	 Update classification: Here you can select what kind of updates you want 
push to clients. You can select all required update types:
Figure 5.15: Types of updates in Update Management

Configuring Advance Security for Compute      295
	
6.	 Include/exclude updates: The updates release by Microsoft have an KB 
number assigned with them. In this section, you can define if you want to 
add any additional updates to be included or any particular update to be 
excluded. You can just put the KB number of such updates in respective 
include or exclude section. I am not putting any KB because I just want to go 
with default:
Figure 5.16: Include or Exclude specific KB in Update Management
	
7.	 Schedule the update: Once you have decided the client machines, types of 
the updates and inclusion and exclusion of specific update, now you can 
plan the date and time to push the updates to the clients. In schedule setting, 
I am selecting start date and time to push the updates. I am also making it to 
reoccur for Fourth Saturday of every month:
Figure 5.17: Schedule update push in Update Management

296      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
8.	 Pre and post scripts: You may require to perform certain tasks before and 
after Update Management activity. Like starting and stopping services. In 
this section you can define the tasks that can be automatically executed 
before or after an update deployment run. These tasks can be automated 
through pre-script and post-script. You can configure up to one pre-script 
and post-script per deployment.
	
9.	 Maintenance Window: Update deployment requires a maintenance window 
to finish the installation and reboot of the server. You can set a maintenance 
window of 30 minutes and less than 6 hours. The last 20 minutes of the 
maintenance window is dedicated for machine restart and any remaining 
updates will not be started once this interval is reached. In-progress updates 
will finish being applied.
	
10.	 Reboot options: Here, you can choose what to happen once you install the 
updates  because mostly Microsoft updates require a reboot of the client to 
take in place.
Now after this section, you would be able to set up Update Management in your 
Azure environment. We learnt all components of Update Management in detail 
and the process to configure them. Now you can have a reliable patch management 
setup for your environment. You can onboard your on-premises servers also to log 
analytics workspace and connect to Update Management.
Azure Key Vault
In coming chapters, we will see the use of Azure Key Vault for Transparent Data 
Encryption in Azure SQL database, customer managed Azure storage account 
encryption, disk encryption of Azure Virtual Machines. Azure Key Vault provides 
secure way to store keys, secrets, and certificates. Secure management of these 
resources always been a challenge for all organizations. With Azure Key Vault, you 
can easily and securely manage keys, secrets, and certificates. In coming sections, we 
will see how you can use keys from Azure Key Vault for data encryption, secrets to 
store password and connection strings, and certificates for secure HTTPs connections.
Azure Key Vault helps you in:
	
•	
Secrets management: With Azure Key Vault, you can securely store and 
tightly control access to tokens, passwords, connection strings, API keys, 
and other secrets.
	
•	
Key management: With Azure Key Vault, you can easily create and control 
the encryption keys used to encrypt your data.

Configuring Advance Security for Compute      297
	
•	
Certificate management: Azure Key Vault also lets you easily provision, 
manage, and deploy public and private Transport Layer Security/Secure 
Sockets Layer (TLS/SSL) certificates for use with Azure and your internal 
connected resources.
	
•	
Store secrets backed by hardware security modules: In Azure Key Vault, 
you can protect secrets and keys either by software or FIPS 140-2 Level 2 
validated HSMs.
With Azure Key Vault, you can store and use several types of secret/key data:
	
•	
Cryptographic keys: Supports multiple key types and algorithms and 
enables the use of Hardware Security Modules (HSMs) for high value keys.
	
•	
Secrets: Provides secure storage of secrets, such as passwords and database 
connection strings.
	
•	
Certificates: Supports certificates, which are built on top of keys and secrets 
and add an automated renewal feature.
	
•	
Azure storage: Can manage keys of an Azure storage account for you. 
Internally, Key Vault can list (sync) keys with an Azure storage account, and 
regenerate (rotate) the keys periodically.
Create Azure Key Vault
Let’s have a look how to create Azure Key Vault in your environment. It has simple 
steps to deploy:
	
1.	 Login to Azure portal, search for key vault and click on + Create.
	
2.	 It will open a new window, there you need to fill some basic details such as 
subscription, location, name, and SKU.
	
3.	 Azure Key Vault has two SKUs: Standard and Premium. Premium SKU 
supports HSM backed keys. These configurations are simple and straight 
forward. You can leave rest of the settings default for retention days and 
purge protection; we will study about them in coming sections.
	
4.	 In the next tab, you get option to control access on Key Vault through 
access policy. If you want to configure it here then refer Identity and access 
management for Azure Key Vault section of this chapter, else you can leave it 
blank and configure it later.
	
5.	 The next section is for networking, here you control resource level firewall. 
It helps you to allow and block traffic from defined network and IPs. We 
already have seen this configuration in Chapter 4, Implementing Advance 
Network Security.

298      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Click on Review and create to start the deployment.
These were the simple steps to deploy Key Vault in your environment. In coming 
sections, we will see how to create key, secrets, and certificates in this Key Vault.
Manage Azure Key Vault
In the last section, we studied about how to deploy Azure Key Vault. In this section, 
we will see how to create keys, secrets, and certificates in Key Vault.
Keys in Azure Key Vault
Key in Azure Key Vault is a cryptographic key. This can be used for encryption on 
various types of Azure resources. In Key Vault, you can create a new key, restore it 
from backup, and import any existing key. Let’s see the processes for these operations.
Generate new key in Key Vault
	
1.	 To generate new key in Key Vault, go to the Key Vault in your Azure 
subscription.
	
2.	 Click on Keys under the Settings section. It will open a new window. Here 
you can see any existing key or can create new key.
	
3.	 Click on the + Generate/Import option to create new key:
Figure 5.18: Generate key in Azure Key Vault

Configuring Advance Security for Compute      299
	
	
As shown in the preceding figure, select Generate from the Options drop-
down, give a name to this key, you can select the type of key, and encryption 
level (key size). You can also set activation and expiration date for this key. 
If you do not select any date, it activates right after generation and remains 
activated. You can also enable and disable this key; the default setting is 
enabled.
	
	
Once you filled all these values, click on Create. A new with given 
configuration will be created.
Import new key in Key Vault
In the last section, you saw how to generate new key in your Key Vault. You can 
also import your existing key into key vault. That you can call bring your own key 
(BYOK). The supported key types for this option are .pfx, .pem, and .byok.
To import key, you need to select Import from the Options drop-down:
Figure 5.19: Import key in Azure Key Vault
As shown in the preceding figure, you can upload a key file. RSA is the only supported 
key type. Rest of the features are same as previous section. Click on Create to bring 
the key in Key Vault.
Restore keys from backup
Azure gives you a feasibility to restore backed-up keys. This helps you to recover old 
version or old key. Let’s see how to back up the key and then how to restore:

300      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
1.	 Login to Azure portal and go to the Key Vault where you want to perform 
backup and restore.
	
2.	 In the Key Vault, click on Keys in left panel. You will see existing keys there.
	
3.	 Click on the key, it will open a new window. There you get an option to 
Download backup. You can click on it to back up your key. You can keep the 
download key at any secure location. 
	
4.	 Now to restore the key, you just need to go back to Keys under the Settings 
section and click on Restore backup. It will ask the location to browse the 
backed-up key.
Select the proper backed-up file and it will restore the key.
You can follow the preceding steps to restore a backed-up key.
Manage deleted keys
In this section, we will see how to recover deleted key. To restore deleted key, 
purge protection should be enabled on the Key Vault. It cannot be disabled once 
it is enabled. You can enable purge protection while creating the Key Vault or later 
from the Properties section. Let’s follow these steps to restore deleted key from purge 
protected Key Vault:
	
1.	 Login to Azure portal and go to the Key Vault where you want to recover the 
deleted key.
	
2.	 In the Key Vault, click on Keys in left panel. You will see existing keys there 
and also an Manage deleted keys option.
	
3.	 Click on Manage deleted keys, it will open a new window. There you will 
see all deleted key which are under retention period.
	
4.	 Select the appropriate key which you want to restore and click on Recover.
The preceding steps will recover your deleted key during the retention period. The 
retention period can be set only while creating the Key Vault. You cannot modify the 
retention period once you have created the Key Vault. You cannot recover the key 
with this method if you have deleted the complete Key Vault. To recover key from 
deleted key vault first you will need to recover the Key Vault and then you will need 
to recover the key. The Key Vault recovery is not supported from Azure portal at this 
time. You need to use Azure PowerShell or CLI to restore the Key Vault and deleted 
key under that. We will see this scenario in coming section.

Configuring Advance Security for Compute      301
Secrets in Azure Key Vault
With Azure Key Vault secrets, you can store your passwords and connection strings 
securely. These passwords and connection strings can be fetched by application 
through secret URI. So, now you do have a need to mention passwords and 
connection strings into your codes. The secret values are encrypted in key vault.
Generate new secret in Key Vault
	
1.	 Login to Azure portal and go to Key Vault where you want to create the 
secret.
	
2.	 Click on Secrets under the Settings section. It will open a new blade there 
you can see existing secrets and can also create new secrets.
	
3.	 Click on Generate to create a new secret:
Figure 5.20: Generate secret in Key Vault
	
	
As shown in the preceding figure, select Manual from the Upload options 
drop-down, give a name to this secret, and type the value of this secret. You 
can also type a hint or context of this secret to identify this later. The function 
of activation and expiration date is same as key.
	
4.	 Click on Create once you have filled these details. Your secret will be 
generated in the Key Vault.
Check the value of secret in Key Vault
	
1.	 Go back to the Secrets section in your Key Vault to see the value of your 
secrets.

302      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
2.	 You would see multiple versions of your secret. Select the current version 
and a new window will open.
	
3.	 Click on Show Secret Value and it will show the secret vault:
Figure 5.21: Show the value of secret in key vault
	
4.	 You can copy this value and click back on Hide Secret Value to hide it.
In this section, we studied how to see the value to a secret.
Restore secrets from backup
Secret backup and restore is also as simple as key vault. This helps you to recover old 
version or old secret. Let’s see how to back up the secret and then how to restore it:
	
1.	 Login to Azure portal and go to the Key Vault where you want to perform 
backup and restore.
	
2.	 In the Key Vault, click on Secrets in the left panel. You will see existing secrets 
there.
	
3.	 Click on the secrets, it will open a new window. There you get an option to 
Download backup. You can click on it to back up your secret. You can keep 
the download secret at any secure location.
	
4.	 Now to restore the secret, you just need to go back to Secrets under the 
Settings section and click on Restore backup. It will ask the location to 
browse the backed-up secret.
	
5.	 Select the proper backed-up file and it will restore the secret.
You can follow the preceding steps to restore a backed-up key.

Configuring Advance Security for Compute      303
Manage deleted secrets
In the last section, we studied how to restore backed-up secret. In this section, we 
will see how to recover deleted secret. To restore deleted secret, purge protection 
should be enabled on the Key Vault. Let’s follow these steps to restore deleted secret 
from purge protected Key Vault:
	
1.	 Login to Azure portal and go to the Key Vault where you want to recover 
deleted secret.
	
2.	 In the Key Vault, click on Secrets in the left panel. You will see existing secrets 
there and also an Manage deleted secrets option.
	
3.	 Click on Manage deleted secrets, it will open a new window. There you will 
see all deleted secret which are under retention period.
	
4.	 Select the appropriate secret which you want to restore and click on Recover.
	
5.	 The preceding steps will recover your deleted secret during the retention 
period.
Certificates in Azure Key Vault
You require certificates to set up secure connection between your web app and client. 
You need to set up SSL connection for this secure connection. You can store and 
create SSL certificates in Azure Key Vault. You can create self-signed, issued from 
non-integrated certificate authority and issued from integrated certificate authority 
certificate. Integrated certificate authorities are managed by key vault, currently 
supported certificate authorities are DigiCert and GlobalSign.
You should have registered account with integrated certificate authority to generate 
certificate from them. Let’s follow these steps to register your certificate authority 
with Azure Key Vault:
	
1.	 Login to Azure portal and go to the Key Vault where you want to register the 
certificate authority.
	
2.	 In the Key Vault, click on Certificates in left panel. You will see existing 
secrets there and also an Certificate Authorities option.
	
3.	 Click on Certificate Authorities, it will open a new blade to ask the details 
about your registration:

304      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 5.22: Register certificate authority with your key vault
	
	
As shown in the preceding figure, you can give a name to this registration, 
select the certificate provider from the drop-down. Account ID, account 
password, and organization ID are the unique details which are registered 
with your certificate provider.
	
4.	 Once you enter these details, your certificate authority account gets connected 
with your Azure Key Vault. Now you can use these CA to issue you the 
certificates and those certificates can be stored into the Key Vault.
The Certificates page also has an option of Certificate contacts. Here you can put 
email addresses of who should get notification about certificate expiration. In the 
next section, let’s see how to generate certificates in Key Vault.
Generate a certificate in Azure Key Vault
Let’s see how to generate a certificate in Azure Key Vault:
	
1.	 Login to Azure portal and go to the Key Vault where you want to generate 
the certificate.
	
2.	 Click on Certificates in the left panel, it will open a new window. There you 
can see any existing certificates and can also create new certificates.

Configuring Advance Security for Compute      305
	
3.	 Click on Generate/Import to generate new certificate. In this exercise, we 
will generate self-signed certificate:
Figure 5.23: Generate self-signed certificate in key vault
	
4.	 As shown in the preceding figure, select Generate from the drop-down, give 
a name to this certificate, select self-signed certificate from Type of Certificate 
Authority (CA) drop-down. This option supports:
	
	
•	
Self-signed certificate
	
	
•	
Certificate issued by non-integrated CA
	
	
•	
Certificate issued by integrated CA
	
	
In the Subject field, you need to give a name of your domain for which 
you want to generate certificate. Validation Period (in months) shows the 

306      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
validity of this certificate. In Lifetime Action Type, you can select what 
happens when the certificate is about to expire. This action type has the 
following options:
	
	
•	
Automatically renew at a given percentage lifetime
	
	
•	
Automatically renew at a given number of days before expiry
	
	
•	
Email all contacts at a given percentage lifetime
	
	
•	
Email all contacts at a given number of days before expiry
	
	
Next field is about lifetime expiry. Based on the preceding selection in the 
drop-down, this field converts to percentage or days.
	
5.	 Fill the details as shown and described in the preceding points and click on 
Create. In the Certificates section, you will see new certificate there.
Certificates also can be managed as keys and secrets. They also can be backed up and 
restored. You can also recover deleted certificate in purge protected Key Vault. It has 
the same steps as we did for keys and secrets to restore from back up and to recover 
from deleted items.
Azure Key Vault security best practices
In Azure Key Vault, you can protect encryption keys and secrets like certificates, 
connection strings, and passwords in the cloud. Since you are storing sensitive and 
business critical data, you need to take steps to maximize the security of your vaults 
and the data stored in them. This section we will see some of the security parameters 
to secure Azure Key Vault.
Identity and access management for Azure Key Vault
When you create a Key Vault in an Azure subscription, it is automatically associated 
with the Azure AD tenant of the subscription. Anyone trying to manage or retrieve 
content from a vault must be authenticated by Azure AD:
	
•	
Access model overview: Access to vaults takes place through two planes. 
These planes are the management plane and the data plane as follows:
	
	
•	
The management plane is where you manage Key Vault itself and it is the 
interface used to create and delete vaults. You can also read key vault 
properties and manage access policies.
	
	
•	
The data plane allows you to work with the data stored in a key vault. You 
can add, delete, and modify keys, secrets, and certificates.

Configuring Advance Security for Compute      307
	
	
To access a Key Vault in either plane, all users or applications must be 
authenticated and authorized. Both planes use Azure AD for authentication. 
For authorization, the management plane uses role-based access control 
(RBAC) and the data plane uses a Key Vault access policy.
	
•	
Controlling access to Key Vault data: Key Vault access policies grant 
permissions separately to keys, secrets, or certificate. You can grant a user 
access only to keys and not to secrets. Access permissions for keys, secrets, 
and certificates are managed at the vault level.
	
	
Key Vault access policies do not support granular, object-level permissions 
like a specific key, secret, or certificate. When a user is granted permission to 
create and delete keys, they can perform those operations on all keys in that 
Key Vault. You can set up management plane access through RBAC. Let’s 
follow these steps to set up data plane access policy:
	
1.	 Login to Azure portal and go to Key Vault.
	
2.	 Select Access policies under Settings. On this page you will see default 
access policy. Azure Key Vault supports two kind of access policies, Vault 
access policy and Azure RBAC:
Figure 5.24: Default access policy in Key Vault
	
3.	 You see three options to use this Key Vault. You can use this Key Vault for 
multiple things. But for certain tasks you need to explicitly enable the Key 
Vault. For example,
	
	
a.	 If you want this Key Vault to be used for encryption purpose, then you 
need to select Azure Disk Encryption for volume encryption check box 
from the list.
	
	
b.	 If you want ARM templates to retrieve secrets from this Key Vault while 
deployment, then you need to select Azure Resource Manager for 
template deployment check box from the list.

308      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
c.	 If you want Azure Virtual Machines to retrieve certificates key from 
this key vault, then you need to select Azure Virtual Machines for 
deployment check box from the list. These check boxes enable this Key 
Vault to be used for different Azure services.
	
4.	 Now if any user or application want to access keys, secrets, and certificates, 
you need to grant appropriate access to them. This appropriate access on 
keys, secrets, and certificates is called access policy. Access policy defines the 
actions can be performed by user.
	
5.	 For different services and task different combinations of permissions are 
required. Click on + Add Access Policy to define new access policy. It will 
open a new blade there you can see six fields as shown in the following 
figure. Let’s understand them one by one:
Figure 5.25: Access policy permissions
	
	
•	
Key permissions: This drop-down has a list of actions which can be 
performed on keys.
	
	
•	
Secret permissions: This drop-down has a list of actions which can be 
performed on secrets.
	
	
•	
Certificate permissions: This drop-down has a list of actions which can 
be performed on certificates.
	
	
•	
Select principal: Here you can select user ID from Azure AD to whom 
you want to assign the permissions on key, secret, and certificate.

Configuring Advance Security for Compute      309
	
	
•	
Authorized application: Here you can select Azure application ID from 
Azure AD to which you want to assign the permissions on key, secret, 
and certificate.
	
	
•	
Configure from template (optional): As I mentioned earlier, each 
operation needs different combination of permissions. Azure provides 
some built-in combinations as templates for certain tasks. You can select 
those tasks from the drop-down and respective permissions combination 
will be made. For example, if you want Azure backup to access this 
Key Vault then you will need to grant certain permissions on key and 
secret. For this, you may need to think what appropriate permissions 
combination would be. Azure made it easy for you, when you select 
Azure Backup from the drop-down, as per pre-defined template, it 
will automatically choose appropriate permissions on key, secrets, and 
certificate:
Figure 5.26: Access policy for backup
	
6.	 As shown in the preceding figure, required permissions on key and secret 
are granted to Azure backup. Click on Add and Save. Now Azure backup 
can access this Key Vault.
	
7.	 Now if you want any user or application to access and manage key, secret, 
and certificate, you can select user or application ID and choose appropriate 
permissions from the drop-down:

310      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 5.27: Updated access policy dashboard
	
8.	 In the preceding figure, you can Backup Management application and 
jayantsharma2202 user have permissions on key, secret, and certificate in 
this Key Vault.
After assigning these permissions the applications or users can create, update, delete, 
and access the key, secret, and certificate as per their permission.
Secure network access to Azure Key Vault
You can specify IP address from where you want users to access the Key Vault. This 
helps to reduce the exposure of your vaults. The virtual network service endpoint 
for Azure Key Vault allows you to restrict access to a specified virtual network. The 
endpoints also allow you to restrict access to a list of IPv4 address ranges. Any user 
connecting to your Key Vault from outside those sources is denied access.
After firewall rules are in effect, users can only read data from Key Vault when their 
requests originate from allowed virtual networks. Although users can browse to a key 
vault from the Azure portal, they might not be able to list keys, secrets, or certificates 
if their client machine is not in the allowed list. We already have seen this in Chapter 4, 
Implementing Advance Network Security in the Azure resource firewall section.
Azure Key Vault monitoring
To see who is accessing your Key Vault you need to enable logging on your Key 
Vault. Logging saves information about the activities performed on your vault. Key 
Vault logs:

Configuring Advance Security for Compute      311
	
•	
Operations on the key vault itself. These operations include creation, deletion, 
setting access policies, and updating key vault attributes such as tags.
	
•	
Operations on keys and secrets in the Key Vault, such as creating, modifying, 
or deleting these keys or secrets. Signing, verifying, encrypting, decrypting, 
wrapping, and unwrapping keys, getting secrets, and listing keys and secrets 
(and their versions).
	
•	
Unauthenticated requests that result in a 401 response. Examples are requests 
that do not have a bearer token, that are malformed or expired, or that have 
an invalid token.
You can access logging information within 10 minutes after the key vault operation. 
You can also manage your logs in your storage account.
Overview
It is important to monitor the health of your Key Vault to make sure your service 
operates as intended. As you start to scale your services the number of requests 
sent to your Key Vault will rise. This has a potential to increase the latency of your 
requests and in extreme cases, cause your requests to be throttled which will impact 
the performance of your service. You also need to be alerted if your Key Vault is 
sending an unusual number of error codes, so you can be quickly notified of any 
access policy or firewall configuration issues. In this section, we will cover:
	
•	
Basic Key Vault metrics to monitor.
	
•	
How to configure metrics and create a dashboard.
	
•	
How to create alerts at specified thresholds.
Basic Key Vault metrics to monitor
There are multiple built-in and custom metrics which you can monitor but few 
are more critical which you should monitor frequently. The following is the list of 
important metrics for which you should setup monitoring and alert:
	
•	
Vault availability: This metric should always be at 100% this is an important 
metric to monitor since it can quickly show you if your Key Vault experienced 
an outage.
	
•	
Vault saturation: The number of requests per second that a Key Vault can serve 
is based on the type of operation being performed. Some vault operations 
have a lower requests-per-second threshold. This metric aggregates the 
total usage of your Key Vault across all operation types to come up with a 
percentage value that indicates your current Key Vault usage.

312      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Service API latency: This metric shows the average latency of a call to 
Key Vault. Although your Key Vault may be within service limits, a high 
utilization of Key Vault could introduce latency that causes applications 
downstream to fail.
	
•	
Total API hits: This metric shows all the calls made to your Key Vault. This 
will help you identify which applications are calling your Key Vault.
	
•	
Error codes: This metric will show you if your key vault is experiencing an 
unusual number of errors.
How to configure metrics and create a dashboard
In this section, we will see how to configure metrics in Azure Key Vault and how to 
pin them to dashboard. Let’s follow these steps:
	
1.	 Login to Azure portal and search or Azure Key Vault.
	
2.	 Go to Metrics under Monitoring. On this page, you will see options and 
filters to select required metrics:
Figure 5.28: Performance metrics of Key Vault
	
	
As you can see in the preceding figure, there are multiple options to configure 
metrics. With default configurations, you can select required metric from the 
Metric drop-down. In the preceding figure, I selected the Total Service Api 
Hits metric and aggregation Count. This metric shows the count of all the 
calls made to your key vault.
	
	
You can add more filters from the Add filter option. You can also change the 
time range. I choose time range of Last 48 hours and time granularity of 6 hours.

Configuring Advance Security for Compute      313
	
3.	 You can add other metrics from the Add metric option. Click on Pin to 
dashboard to attach this metric to dashboard. You get two options, either 
Pin to current dashboard or Select another dashboard.
In this section, we saw how to configure diagnostic metrics and read the information 
from them. By using diagnostic, you can monitor the performance of your Key Vault.
Configure alerts on your Key Vault
In this section, we will see how to configure alerts on your Key Vault so you can act 
immediately if your Key Vault is in an unhealthy state. You can configure alerts that 
send an email, preferably to a team DL, fire an event grid notification, or call or text 
a phone number. You can choose static or dynamic value-based alerts. Let’s follow 
these steps to set up alerts:
	
1.	 Login to Azure portal and go to the Key Vault for which you want to set up 
alert.
	
2.	 Go to Alerts under the Monitoring section. Here you can see any existing 
alerts or can create new alerts:
	
3.	 Click on + New alert rule if you want to create new alert. It will open a new 
window to configure new alert condition, action group, and alert description:
Figure 5.29: Select alert condition

314      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding figure, the current Key Vault is selected as Scope 
for this alert. Click on Select condition to set condition and threshold for 
alert triggering.
	
4.	 Once you click to select the condition, a new blade will open to choose signal 
types. There are two categories of signal types: Metric and Activity Log:
Figure 5.30: Select alert logic
	
	
Metric based alerts work on the values in respective metrics. It triggers alerts 
when the metric value beats threshold value. Activity logs based alerts work 
when they see any particular kind of activity happening on Key Vault.
	
1.	 You can select required signal based on your business need. I am selecting 
Total Service Api Hits signal.
	
2.	 It will open a new blade, on next page please fill these values in the Alert 
logic section, you can change them as per your requirement:

Configuring Advance Security for Compute      315
	
	
• 
Set the Threshold to Static.
	
	
• 
Set the Operator to Greater than.
	
	
• 
Set the Aggregation Type to Count.
	
	
• 
Set the Threshold Value to 100.
	
	
• 
Set Aggregation Period to 5 minutes.
	
	
• 
Set the Evaluation Frequency to 1 minute.
	
	
• 
Select Done.
	
3.	 Now you need to configure Action group. Action group is the user or group 
who gets notification based on the event. Click on Select action group. It will 
open a new window. Here you can choose any existing action group or can 
create a new one:
Figure 5.31: Select existing action group
	
	
You can select the listed action group(s) if you want to choose an existing 
action group. You have another option to create new action group.

316      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
4.	 Click on + Create action group. It will open a new blade. Fill the details as 
shown in the following figure. You can select the action type from the drop-
down. In this example, we will create an email alert:
Figure 5.32: Create new action group
	
5.	 Select Email/SMS message/Push/Voice to trigger email alert: 

Configuring Advance Security for Compute      317
Figure 5.33: Enter email address of alert receiver
	
	
Check the box for Email and give the email address of alert receiver. You can 
add multiple receivers by separating email address with comma. Click on OK.
	
2.	 Now back on the Create alert rule page, you can find the condition and 
action group which we selected in the preceding steps:
Figure 5.34: Set alert rule severity and description

318      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding figure, give a name and description to this alert. 
Set severity. Check the box if you want to enable this alert now. Click on 
Create alert rule.
Here we saw how to set up alerts for Azure Key Vault activities. You can follow the 
preceding steps to set up other alerts also. You can choose different signal types and 
thresholds for different alerts. In the preceding example, we choose static value alert. 
But you can create dynamic value alerts also.
Azure Key Vault logging
Azure Key Vault saves sensitive and confidential information of your organization so 
you would like to monitor how and when your Key Vaults are accessed, and by whom. 
You can do this by enabling logging for Azure Key Vault, which saves information 
in an Azure storage account that you provide. A new container named insights-
logs-auditevent is automatically created for your specified storage account. You 
can collect logs from multiple Key Vaults in same storage account.
Configure logging for Azure Key Vault
For setting up logging I assume you already have an Azure storage account and a 
Key Vault. Let’s follow these steps to set up logging for Azure Key Vault:
	
1.	 Login to Azure portal and go to the Key Vault for which you want to enable 
logging.
	
2.	 In the Key Vault, select Diagnostic settings under the Monitoring section. It 
will show the current logging settings. By default, this setting is not enabled:
Figure 5.35: Default configuration of diagnostic settings

Configuring Advance Security for Compute      319
	
3.	 Click on + Add diagnostic setting to enable it:
Figure 5.36: Archive Key Vault logs to a storage account
	
	
Fill the details as shown in the preceding figure. Give a name to this log 
setting. You can choose what kind of logs you want to store in storage 
account. This could audit events and all metrics. You can also set how long 
you want to keep logs in storage account. There are multiple destinations 
where you can send logs. But in this example, we are sending logs to Azure 
storage. When you select Archive to a storage account option, then you need 
to select an existing storage account where you want to store the logs.
	
4.	 After making all these arrangements, save the changes. You can see the logs 
in storage account in 10 minutes.
In this section, we saw how to archive logs from Azure Key Vault to Azure storage 
account. Since Azure just stores 90 days logs and you may need to see some older logs 
because of any business reason. This can certainly help you to refer the logs in future.
The following is the list of information which you can get from Azure Key Vault’s logs:
 
•	
All authenticated REST API requests, including failed requests as a result of 
access permissions, system errors, or bad requests.
 
•	
Operations on the Key Vault itself, including creation, deletion, setting Key 
Vault access policies, and updating Key Vault attributes such as tags.
 
•	
Operations on keys and secrets in the Key Vault, including creating, 
modifying, or deleting these keys or secrets.
 
•	
Operations on keys and secrets in the Key Vault, including signing, verifying, 
encrypting, decrypting, wrapping, and unwrapping keys, getting secrets, 
and listing keys and secrets (and their versions).
 
•	
Unauthenticated requests that result in a 401 response. Examples are requests 
that do not have a bearer token, that are malformed or expired, or that have 
an invalid token.

320      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Access your logs
Key Vault audit logs are stored in insights-logs-auditevent and metric performance 
logs are stored in insights-metrics-pt1m container in the storage account that you 
provided in the preceding step. To view the logs, you will need to download BLOBs:
	
1.	 Login to Azure portal and go to the storage account where you are collection 
the logs.
	
2.	 In storage account, go to Containers. You will see containers with name 
insights-logs-auditevent and insights-metrics-pt1m:
Figure 5.37: See key vault logs in storage account
	
	
Follow the hierarchical path and open all subfolders till you find the Key 
Vault log files. The log file will be with name PT1H.JSON:
Figure 5.38: Download key vault audit log file
	
3.	 You can store logs of multiple key vaults in same storage account. Go to 
required Key Vault folder and download this log file.

Configuring Advance Security for Compute      321
In this section, you learnt how you can retrieve the archived logs from Azure storage. 
You can use these logs for the investigation of any issue.
Interpret your Key Vault logs
The log file is formatted as a JSON BLOB. You can open it to any text editor. Let’s 
look at an example log entry:
{ “count”: 2, “total”: 2, “minimum”: 1, “maximum”: 1, “average”: 1, “re­
sourceId”: “/SUBSCRIPTIONS/XXXXXXX-XX51-4330-949F-226E6CC8XXXX/
RESOURCEGROUPS/JAY-DEMO-RG/PROVIDERS/MICROSOFT.KEYVAULT/VAULTS/
TDEKEYVAULTDEMO3”, “time”: “2020-06-22T03:15:00.0000000Z”, “metric­
Name”: “ServiceApiHit”, “timeGrain”: “PT1M”}
The preceding code shows a sample performance log result. It shows log for 
ServiceAPIHit metric.
Turn on recovery options
You can turn on soft delete and purge protection if you want to guard against force 
deletion of the secret / vault even after soft delete is turned on.
Backup
Make sure you take regular backups of your vault on update/delete/create of objects 
within a vault. There is no built-in backup process for Key Vault, but you can backup 
Key Vault items. Let’s follow these steps to backup Key Vault items:
	
1.	 Login to Azure portal and go to the Key Vault.
	
2.	 In Key Vault go to key, secret, and certificate to backup them:
Figure 5.39: Backup key vault’s key

322      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
In the preceding figure, I am taking backup of a key in Key Vault. Go to the key 
in Key Vault and click on Download Backup. It will download a text file for Key 
Vault backup. You can open this text file but cannot retrieve key information. 
The key can be read only by Azure Key Vault when you upload this text file.
Soft delete for Azure Key Vault
You can enable soft delete to recovery a deleted Key Vault, or objects stored in a 
Key Vault. Enabling soft delete on a Key Vault is an irreversible action. Once the soft 
delete property has been set to true, it cannot be changed or removed.
Enable soft delete and purge protection for existing key vault
You could enable soft delete after creating this if you missed to enable it while 
creation. The following are the steps to enable soft delete on existing Key Vault:
	
1.	 Login to Azure portal and go to the Key Vault.
	
2.	 In Key Vault, go to Properties under the Settings section. There you will see 
Soft delete option is in disabled state. Switch this option to Enable to enable 
soft delete. In the next field, the retention period is asked. You can choose 
retention from 7 days to 90 days:
Figure 5.40: Enable soft delete for Key Vault
	
3.	 Purge protection is an optional feature of Azure Key Vault which is disabled 
by default. Purge protection can only be enabled once soft delete is enabled 
for the Key Vault. When purge protection is on, a vault or an object in the 
deleted state cannot be purged until the retention period has passed. By 

Configuring Advance Security for Compute      323
default, Purge protection is also disabled. You can enable also enable it. Save 
the changes.
You cannot disable soft delete and purge protection once they are enabled. Once you 
saved the changes, you can come back to Key Vault properties to verify that soft-
delete protection is enabled. The purge protection retention policy uses the same 
interval. Once set, the retention policy interval cannot be changed.
Deleting a soft delete protected Key Vault
If you delete a Key Vault which does not have soft delete protection enabled, it will 
delete the Key Vault and its content permanently. But if you delete the Key Vault 
which has soft delete enabled, they you get options to recover it after deletion.
When soft delete is enabled:
 
•	
A deleted Key Vault is removed from its resource group and placed in a 
reserved namespace, associated with the location where it was created.
 
•	
Deleted objects such as keys, secrets, and certificates, are inaccessible as long 
as their containing Key Vault is in the deleted state.
 
•	
The DNS name for a deleted Key Vault is reserved, preventing a new Key 
Vault with same name from being created. 
You may view deleted state Key Vaults, associated with your subscription, using the 
following PowerShell command:
	
	
Get-AzKeyVault -InRemovedState
The preceding command will show you list of deleted Key Vaults present in your 
subscription.
Recovering a key vault
Now Azure provides an option to recover deleted Key Vault directly from Azure 
Portal also. You can also use PowerShell or Azure CLI commands to recover a Key 
Vault. 
	
1.	 Log in to Azure portal and search for Key Vault.
	
2.	 On Key vaults page, you will find an option Manage deleted vaults. Click 
on it and it will open a new window.
	
3.	 In new window you can select the subscription in which you want to recover 
the key vault. It will show a list of all deleted and not purged key vaults. 
	
4.	 Click on the key vault name and click on Recover. It will recover the deleted 
key vault in the original resource group. If the original resource group is also 

324      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
not present, the recovery process will also create a new resource group with 
original resource group name. 
	
5.	 Just like Key Vaults, a deleted key, secret, or certificate, remains in deleted 
state for up to 90 days, unless you recover it or purge it. The maximum 
retention period is 90 days. You cannot recover the key vault which has 
passed its retention period..
Enable Azure Defender for Azure Key Vault
Azure Key Vault provides you a secure way to store your keys, secrets, and 
certificates. It is important to safeguard your Key Vault from unusual and potential 
harmful attacks. Azure Defender provides an extra layer of security to safeguard 
your Key Vault from harmful attacks. Azure Defender sends alerts and notifications 
if it sees any unusual activities on your Key Vault.
Azure Defender for Key Vault can be enabled from Azure Security Center. For this 
Azure Security Center should be at Azure Defender version:
	
1.	 Login to Azure portal and to enable Azure Defender version on Azure 
Security Center.
	
2.	 Go to Pricing & settings in left panel. Click on the subscription on which 
you want to enable Azure Defender. It will open a new window.
	
3.	 Select Azure Defender plan from left side settings panel.
	
4.	 Click on Azure Defender On to enable Azure Defender plan in your security 
center for selected subscription.
	
5.	 Scroll down and you will see a list of Azure resources on which you can 
enable Azure Defender:
Figure 5.41: Enable Azure Defender for Key Vault in security center

Configuring Advance Security for Compute      325
	
	
As shown in the preceding figure, you can toggle between On and Off to 
enable Azure Defender for Azure services. I kept On for Key Vault and Off 
for rest of the services.
Like this you can enable Azure Defender for any of the Azure service.
Azure Virtual Machine disk encryption
Azure Disk Encryption protects and safeguards your data to meet your security and 
compliance commitments. It uses the BitLocker feature of Windows and DM-Crypt 
feature of Linux to provide volume encryption for the OS and data disks of Azure 
Virtual Machines (VMs) and is integrated with Azure Key Vault to help you control 
and manage the disk encryption keys and secrets.
Azure Disk Encryption for Azure Virtual Machines
Azure Disk Encryption for Windows VMs uses the BitLocker feature of Windows and 
DM-Crypt to provide full disk encryption of the OS disk and data disk. Additionally, 
it provides encryption of the temporary disk when the VolumeType parameter is All.
Unsupported scenarios
Let’s understand the unsupported scenarios of Azure Disk Encryption for VMs. 
Azure Disk Encryption does not work for the following scenarios, features, and 
technology (This list may change over the time):
 
•	
Encrypting basic tier VM or VMs created through the classic VM creation 
method.
 
•	
Encrypting VMs configured with software-based RAID systems.
 
•	
Encrypting VMs configured with Storage Spaces Direct (S2D), or Windows 
Server versions before 2016 configured with Windows storage spaces.
 
•	
Integration with an on-premises key management system.
 
•	
Azure files (shared file system).
 
•	
Network File System (NFS).
 
•	
Dynamic volumes.
 
•	
Windows Server containers, which create dynamic volumes for each 
container.
 
•	
Ephemeral OS disks.
 
•	
Encryption of shared/distributed file systems like (but not limited to) DFS, 
GFS, DRDB, and CephFS.

326      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Moving an encrypted VMs to another subscription or region.
 
•	
Creating an image or snapshot of an encrypted VM and using it to deploy 
additional VMs.
 
•	
Gen2 VMs.
 
•	
Lsv2 series VMs.
 
•	
M-series VMs with write accelerator disks.
 
•	
Unendorsed Linux versions are not support for ADE.
Prepare Azure Key Vault
Azure Disk Encryption uses Azure Key Vault to store encryption keys. You need to 
create a Key Vault and enable that to be used for encryption purpose. In the previous 
sections, we have seen how to create Azure Key Vault and keys in it. In this section, 
we will see how to configure Key Vault for encryption. I assume you already have a 
Key Vault and a key created for this exercise:
	
1.	 Login to Azure portal and go to the Key Vault which you want to use for disk 
encryption.
	
2.	 Go to Access policies under the Settings section:
Figure 5.42: Enable key vault for volume encryption
	
	
As shown in the preceding figure, you can see three access options. To 
enable disk encryption capability, you need to select third option. It specifies 
whether Azure Disk Encryption is permitted to retrieve secrets from the 
vault and unwrap keys.
Save the changes to enable Key Vault to be used for disk encryption. This process is 
required for both Windows and Linux OS.

Configuring Advance Security for Compute      327
Azure Disk Encryption for existing VM
In this section, we will see how to prepare for windows VMs disk encryption. We will 
go through the steps to achieve all prerequisites and then the process of encryption.
Disk Encryption for already attached and initialized 
disks
In this section, we will go through the disk encryption steps for existing Windows 
servers:
	
1.	 Login to Azure portal and go to the virtual machine which you want to 
encrypt.
	
2.	 For disk encryption VM should be in the running state.
	
3.	 Go to Disks under the Settings section. It will open a new blade, here you 
can see the attached disks and their encryption status. By default, all disks 
are only encrypted with Platform Managed Key (PMK):
Figure 5.43: See attached disks to a virtual machine
	
	
As shown in the preceding figure, there is only one disk (OS disk) is attached 
to this VM.
	
4.	 Go to Additional settings option and a new page will open. There select the 
required disks for encryption in Encryption settings option. You can select 
OS disk if you just want to encrypt OS disk. You can select OS and data 
disks if you want to encrypt all disks. 
	
5.	 Once to select the required disk type, this shows few new options to select 
Azure Key Vault and key for encryption:

328      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 5.44: Select disk type for encryption
	
	
As shown in preceding figure, you can select any existing key vault and key 
or can create new key vault and key for encryption. Now select Key vault, 
Key, and Version for disk encryption:
Figure 5.45: Select key vault, key, and key version for encryption
	
	
Click on Save to confirm the selection.
	
6.	 Save the configuration. It will notify you that encryption process may restart 
the virtual machine.
	
7.	 Once you go back to Disks page, you can see the disk is encrypted now with 
Azure Disk Encryption also along with PMK:

Configuring Advance Security for Compute      329
Figure 5.46: Updated disk encryption for existing disk
	
	
In the preceding figure, you can see the encryption state is changed and 
Azure Disk Encryption (ADE) is also added.
In this section, we saw how to encrypt disks of an existing VM. In the next section, 
we will study about the process to encrypt newly added data disk.
Enable encryption on newly added data disk
In some cases, you may need to add new disk to an encrypted virtual machine. By 
default, the new data disk is encrypted only with PMK. But to match with your 
security compliance, you may need to encrypt this new data disk with Azure Disk 
Encryption. For this, I am assuming you already have attached a data disk from 
portal and initialized it in VM through Disk Management. Now follow these steps, 
to encrypt new data disk. The steps are almost same as the last section:
	
1.	 Login to Azure portal and go to the virtual machine which you want to 
encrypt.
	
2.	 For disk encryption VM should be in the running state.
	
3.	 Go to Disks under the Settings section. It will open a new blade, here you 
can see the attached disks and their encryption status. By default, all new 
data disks are only encrypted with PMK:
Figure 5.47: Attached new data disk and encryption state of this disk

330      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
In the preceding figure , you can see the newly added data disk is encrypted 
with just PMK.
	
4.	 Login to virtual machine and go to disk management to initialize the disks. 
Now deallocate (Stop) the Azure VM. For individual disk’s encryption the 
disk should be unattached from the VM or the VM should be in deallocated 
state.
	
5.	 Now go to Disks section on the Azure VM in Azure portal. You cannot 
encrypt new data disk from portal. You will need to use Azure PowerShell 
or Azure CLI to encrypt new data disk. Here we will see how to encrypt new 
data disk through Azure PowerShell:
	
	
$KVRGname = ‘KeyVaultResourceGroupName’
	
	
$VMRGName = ‘VirtualMachineResourceGroupName’
	
	
$vmName = ‘VMName’
	
	
$KeyVaultName = ‘AzureKeyVaultName’
	
	
$KeyVault = Get-AzKeyVault -VaultName $KeyVaultName 
-ResourceGroupName $KVRGname
	
	
$diskEncryptionKeyVaultUrl = $KeyVault.VaultUri
	
	
$KeyVaultResourceId = $KeyVault.ResourceId
	
	
$sequenceVersion = [Guid]::NewGuid()
	
	
Set-AzVMDiskEncryptionExtension -ResourceGroupName 
$VMRGname -VMName $vmName -DiskEncryptionKeyVaultUrl 
$diskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId 
$KeyVaultResourceId -VolumeType “Data” –SequenceVersion 
$sequenceVersion
	
6.	 Fill the preceding script with your environment values and run into Azure 
PowerShell:
Figure 5.48: Output of encryption script
	
	
Sample PowerShell commands output can look as shown in the preceding 
figure:

Configuring Advance Security for Compute      331
Figure 5.49: Updated encryption state of newly added disk
	
	
The preceding figure shows the updated encryption status of newly added 
data disk. After running the preceding commands, the data disk is now 
encrypted with Azure Disk Encryption. There are other ways also to encrypt 
newly added disks. 
	
	
You can also follow the steps described in section “Disk Encryption for 
already attached and initialized disks” to encrypt newly added disk. But 
remember to initialize the newly added disks from inside the VM before 
starting the encryption process.
In this section, we saw to encrypt newly added data disk. In the next section, let’s see 
how to disable disk encryption.
Disable disk encryption
You can disable encryption using Azure PowerShell, the Azure CLI, or with a 
Resource Manager template. Disabling data disk encryption on Windows VM when 
both OS and data disks have been encrypted does not work as expected. Disable 
encryption on all disks instead. 
Replace variable values with your environment:
Disable-AzVMDiskEncryption -ResourceGroupName 
‘VirtualMachineResourceGroupName’ -VMName‘VMName’ -VolumeType “all”
Figure 5.50: Output of encryption disabling script
The preceding figure shows the output of disabling disk encryption:

332      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 5.51: Updated state after disabling encryption
The preceding figure show the result of disabling disk encryption. Encryption status 
is back to default, PMK.
Detailed description of security parameters 
for Azure App Service
In this section, we will see how to deploy security parameters for Azure App Service 
which we discussed in the previous section.
Authentication and authorization
Azure App Service provides built-in authentication and authorization support, so 
you can sign in users and access data by writing minimal or no code in your web 
app, RESTful API, and mobile back end, and Azure functions. In this section, we will 
see how app service helps simplify authentication and authorization for your app.
App service uses federated identity, in which a third-party identity provider manages 
the user identities and authentication flow for you. For now, five identity providers 
are available by default:
	
•	
Azure AD
	
•	
Microsoft account
	
•	
Facebook

Configuring Advance Security for Compute      333
	
•	
Google
	
•	
Twitter
You can use any of these identity providers for authentication. In this chapter, we 
will see how to integrate your app with Microsoft account for authentication.
Configuring Azure App Service to use Microsoft 
account as identity provider
This article shows you how to configure Azure App Service or Azure functions to 
use Microsoft account as an authentication provider:
	
1.	 Login to Azure portal and search for your app service.
	
2.	 In app service, click on Authentication under the Settings section.
	
3.	 On that page, you will see the default settings. The app service authentication 
is in Off state. Click on Add identity provider to see other authentication 
options.
	
4.	 It will open a new window with two tabs. In Basic tab, you can select the 
identity provider from the dropdown:
Figure 5.52: Select Authentication providers for app service
	
	
The preceding figure shows a dropdown for Identity provider field, you can 
select Microsoft account, Facebook, Google, or Twitter for authentication 
from this dropdown. When you set this functionality, your app requires all 
requests to be authenticated. It also redirects all access request to Microsoft 
for authentication.

334      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
5.	 As shown in preceding figure, you will need to do app registration in Azure 
AD for setting up authentication process based on third party identity 
provider.
	
6.	 Now set the configuration of authentication after selecting the identity 
provider. You can still bypass the authentication process and can choose 
for anonymous access by selecting Allow unauthenticated access option in 
Authentication field. But here we are not bypassing the authentication, so we 
chose Require authentication option:
Figure 5.53: Express settings for Azure AD authentication for app service
	
	
As shown in preceding figure, you can also choose for the error code for 
unauthorized access. Once you fill this information, click on Add. 
	
7.	 Now borrows your app service. It will ask Microsoft account credentials to 
login:
Figure 5.54: Enter your Azure AD credentials to access your app service

Configuring Advance Security for Compute      335
	
	
As shown in the preceding figure, you will be asked to enter your Microsoft 
account credentials.
	
8.	 Once you enter correct Microsoft account credentials, you will be taken to 
the website.
Add SSL/TLS certificate in Azure App Service
Azure App Service provides a highly scalable, self-patching web hosting service. 
In this section, we will see how to create, upload, or import a private certificate or a 
public certificate into app service. Once the certificate is added to your app service 
app you can secure a custom DNS name with it or use it in your application code. 
There are various ways to add certificates to your app service:
 
•	
Create a free app service managed certificate: A private certificate that is 
easy to use if you just need to secure your custom domain or any non-naked 
domain in app service.
 
•	
Purchase an app service certificate: A private certificate that is managed by 
Azure. It combines the simplicity of automated certificate management and 
the flexibility of renewal and export options.
 
•	
Import a certificate from Key Vault: You can use Azure Key Vault to import 
certificate.
 
•	
Upload a private certificate: You can use third party certificate issuer to add 
certificate on your app service.
 
•	
Upload a public certificate: Public certificates are not used to secure custom 
domains, but you can load them into your code if you need them to access 
remote resources.
Custom SSL is not supported in the F1 or D1 tier. Select any of non-free tiers like 
B1, B2, B3, or any tier in the Production or Isolated category. Our current setup is 
in isolated tier, so we are good with prerequisites. If you deployed app service in 
any other tier, then you will need to change the tier. In this section, we will see how 
to import certificate from Azure Key Vault. For this you should have certificate in 
Azure Key Vault. I created a self-signed certificate in Key Vault to import in app 
service:
	
1.	 Login to Azure portal and go to your app service.
	
2.	 In app service click on TLS/SSL settings under the Settings section:

336      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 5.55: Options to import certificate
	
	
As shown in the preceding figure, you have two categories of certificates: 
private key and public key. Click on the Private Key Certificate option to 
import certificate from Azure Key Vault.
	
3.	 Under Private Key Certificate section, you will see various methods to 
import certificate. Click on + Import Key Vault Certificate. It will open a 
new blade to choose subscription, Key Vault name, and certificate name:
Figure 5.56: Status after uploading certificate to App service

Configuring Advance Security for Compute      337
As shown in the preceding figure, if you have all parameters correct in certificate 
then it will show healthy.
Restricted network access on app service
As you create allow/deny rules in Azure NSG or Firewall to control the network 
traffic, you can also define a priority ordered allow/deny list to control network 
access to your app. The allow/deny rules list can include IP addresses, IP address 
range, or Azure Virtual Network subnets. The access restrictions capability works 
with all app service hosted workloads including, web apps, API apps, Linux apps, 
Linux container apps, and functions.
When any access request is made to your app, the source (FROM) address is 
evaluated against the IP address rules in your access restrictions list. If the source 
address is in the range of allowed IP address, then the web app can be accessed. If 
the address is not allowed access based on the rules in the list, the service replies 
with an HTTP 403 status code.
The access restrictions capability is implemented in the app service front-end roles, 
which are upstream of the worker hosts where your code runs. Therefore, access 
restrictions are effectively network ACLs. Let’s follow these steps to configure access 
restriction in app service:
	
1.	 Login to Azure portal and go to your app service. In app service, click on 
Networking under the Settings section:
Figure 5.57: Select access restrictions options in app service networking settings

338      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding figure, there are multiple networking services. 
You need to select the Access Restrictions option to define allowed and 
blocked traffic.
	
2.	 Click on Access Restrictions, it will open a new window. In that window, 
you can see current networking rules. By default, traffic is allowed from Any 
source:
Figure 5.58: Default network access control list in access restrictions service
	
	
As shown in the preceding figure, there is only default rule exists. You cannot 
remove or edit this default rule until you add any new custom rule.
	
3.	 Click on + Add rule to create new network ACL rule. Once you add a rule, 
it will become effective immediately. Rules are enforced in priority order 
starting from the lowest number and going up. There is an implicit deny all 
that is in effect once you add even a single rule. As shown in the following 
figure, I am creating a rule to allow access only from my laptop public IP:
Figure 5.59: Create new network access control rule in access restrictions service

Configuring Advance Security for Compute      339
	
	
When creating a rule, you need to select allow or deny and the type of 
rule. You are also required to provide the priority value and what you are 
restricting access to. You can also add a name, and description to the rule. 
To set an IP address-based rule, select a type of IPv4 or IPv6. IP Address 
notation must be specified in CIDR notation. You can enter IP in both IPv4 
and IPv6 addresses. To specify an exact address, you can use something like 
192.168.45.78/32 where the first four octets represent your IP address and 
/32 is the mask:
Figure 5.60: Updated network access control list in access restrictions service
	
	
Once you add new rule, you can see the updated rule table. The default rule 
is been removed and your custom rule is added. Now after this rule, the app 
service is only accessible from listed public IP. You can add any private IP 
also to allow access only from your private network.
	
	
Service endpoints cannot be used to restrict access to apps that run in an app 
service environment. When your app is in an app service environment, you 
can control access to your app with IP access rules.
Setup Azure private endpoint connection in app 
service
Azure private link enables you to access Azure PaaS services (e.g., Azure storage and 
SQL database) and Azure hosted customer-owned/partner services over a private 
endpoint in your virtual network. To access Azure PaaS services, traffic between 
your virtual network and the service travels the Microsoft backbone network. Now 
to access PaaS services, exposing your service to the public internet is no longer 
necessary. You can set up private endpoint to access app service also. So, you and 
your resources can access app services directly over private connection. Let’s see 
how to create private endpoint connection for app service:

340      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
1.	 Login to Azure portal and go to your app service. In app service, click on 
Networking under the Settings section.
	
2.	 There you can see multiple networking features to control network access on 
your app service. Click on private endpoints.
	
3.	 This will open a new window to set up configuration. In this window, click 
on + Add to create new connection:
Figure 5.61: Create private endpoint for app service
	
	
As shown in the preceding figure, select the subscription, Azure virtual 
network, and subnet where you want to deploy this private endpoint. 
Private endpoint connection gets a private IP from the subnet range which 
you choose.
Now after setting private endpoint, you can access app service from your private 
network also, without going over the internet.
Virtual network integration for your app service
In this section, we will study about Azure App Service virtual network integration 
feature and how to set it up with apps in  Azure App Service. Through virtual 
network integration feature, your apps can access resources in or through Azure 
Virtual Network. But a point to remember that through virtual network integration 
your apps cannot to be accessed privately or on a private IP. To access apps privately 
we studied about private endpoint connections.

Configuring Advance Security for Compute      341
If your app is in app service environment, then it’s already in a virtual network and 
doesn’t require use of the virtual network integration feature to reach resources in 
the same virtual network.
Virtual network integration gives your app access to resources in your virtual 
network, but it does not grant inbound private access to your app from the Azure 
Virtual Network. Virtual network integration is used only to make outbound calls 
from your app into your virtual network. The virtual network integration feature 
has two variations:
	
•	
Regional virtual network integration: When you connect to Azure Resource 
Manager virtual networks in the same region, you must have a dedicated 
subnet in the virtual network you are integrating with.
	
•	
Gateway-required virtual network integration: When you connect to 
virtual network in other regions or to a classic virtual network in the same 
region, you need an Azure Virtual Network gateway provisioned in the 
target virtual network.
Gateway-required virtual network integration provides access to resources only in 
the target virtual network or networks connected to the target virtual network with 
peering or VPNs. Gateway-required virtual network integration does not enable 
access to resources available across Azure ExpressRoute connections or works with 
service endpoints.
Since virtual network integration is not supported for apps hosted on ASE, I cleaned 
up my previous demo environment and created a new demo environment. This 
demo environment has app hosted on app service plan.
Regional virtual network integration
In this section, we will study about regional virtual network integration in deep. We 
will see the capabilities, limitations, and configuration of regional virtual network 
integration.
When you set up regional virtual network integration, you get following capabilities 
to access:
 
•	
Resources in a virtual network in the same region as your app.
 
•	
Resources in virtual networks peered to the virtual network your app is 
integrated with.
 
•	
Service endpoint secured services.
 
•	
Resources across Azure ExpressRoute connections.
 
•	
Resources in the virtual network you are integrated with.

342      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Resources across peered connections, which includes Azure ExpressRoute 
connections.
 
•	
Private endpoints.
To route all your outbound traffic into your virtual network, you need to apply the 
app setting WEBSITE_VIRTUAL NETWORK_ROUTE_ALL to your app. This setting you 
make in app configuration setting:
	
1.	 Go to your web app in Azure portal and click on Configuration. It will open 
a new window to put application configuration.
	
2.	 In the Configuration page, select New application setting.
	
3.	 Enter WEBSITE_VIRTUAL NETWORK_ROUTE_ALL in the Name box and enter 1 in 
the Value box.
There are some limitations with using virtual network integration with Virtual 
Networks in the same region. These limitation may update over the time:
	
•	
You cannot reach resources across global peering connections.
	
•	
The feature is available only from newer Azure App Service scale units that 
support PremiumV2 App Service plans. Note that this does not mean your 
app must run on a PremiumV2 pricing tier, only that it must run on an app 
service plan where the PremiumV2 option is available.
	
•	
The integration subnet can be used by only one app service plan.
	
•	
The feature cannot be used by Isolated plan apps that are in an app service 
environment.
	
•	
The feature requires an unused subnet that’s a /27 with 32 addresses or 
larger in an Azure Resource Manager virtual network.
	
•	
The app and the virtual network must be in the same region.
	
•	
You cannot delete a virtual network with an integrated app. Remove the 
integration before you delete the virtual network.
	
•	
You can only integrate with virtual networks in the same subscription as the 
app.
	
•	
You can have only one regional virtual network integration per app service 
plan. Multiple apps in the same app service plan can use the same virtual 
network.
	
•	
You cannot change the subscription of an app or a plan while there is an app 
that is using regional virtual network integration.
	
•	
Your app cannot resolve addresses in Azure DNS private zones without 
configuration changes.

Configuring Advance Security for Compute      343
When you integrate your app with a subnet, one address is used for each 
plan instance. If you scale your app to five instances, then five IP addresses 
are used from the subnet. Since you cannot change subnet size after 
assignment, you must use a subnet that is large enough to accommodate 
whatever scale your app might reach. A /26 with 64 addresses is the 
recommended size.
To configure regional virtual network integration for your web app, follow these 
steps:
	
1.	 Login to Azure portal and go to your web app. In web app, click on 
Networking under the Settings section.
	
2.	 There you will see multiple networking options. Click on the Virtual network 
integration option. It will open a new window for configuration.
	
3.	 In next page, click on + Add virtual network to add virtual network to 
your app. It will open a new blade to choose virtual network and subnet for 
integration:
Figure 5.62: Select virtual network and subnet for virtual network integration
	
	
As shown in the previous figure, you can choose a virtual network and 
subnet for integration. The subnet should be empty. You can use any existing 
empty subnet or can create a new. Click on OK once you fill all details.
In the preceding setup, we see how to set up regional virtual network integration. 
In coming sections, we will see how to set up gateway-required virtual network 
integration.

344      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Gateway-required virtual network integration
You can create gateway-required virtual network integration to connect to a virtual 
network in another region or to a classic virtual network. With gateway-required 
virtual network integration you can:
 
•	
Enable an app to connect to only one virtual network at a time.
 
•	
Enable up to five virtual networks to be integrated within an app service 
plan.
 
•	
Allow the same virtual network to be used by multiple apps in an app service 
plan without affecting the total number that can be used by an app service 
plan. If you have six apps using the same virtual network in the same app 
service plan, that counts as one virtual network being used.
 
•	
Get 99.9% SLA due to the SLA on the gateway.
 
•	
Enable your apps to use the DNS that the virtual network is configured with.
The following are the limitations with gateway-required virtual network integration. 
You cannot use gateway-required virtual network integration:
 
•	
With a virtual network connected with Azure ExpressRoute.
 
•	
From a Linux app.
 
•	
To access service endpoint secured resources.
 
•	
With a coexistence gateway that supports both ExpressRoute and point-to-
site or site-to-site VPNs.
To configure gateway-required virtual network integration for your web app, follow 
these steps:
	
1.	 Gateway-required virtual network integration needs a route-based VPN 
gateway. We will need to create a VPN gateway. We have seen how to deploy 
an VPN gateway in the previous chapter. You can refer those steps to create 
VPN gateway. Important thing, you will require a subnet gateway to deploy 
VPN gateway.
	
2.	 Moving forward to this exercise, I assume you have created a gateway subnet 
and deployed an VPN gateway. Basic SKU VPN will also enough for this 
virtual network integration. Gateway deployment can take up to 45 minutes. 
You need to deploy VPN gateway in the virtual network which is in different 
region then your app service.
	
3.	 Gateway-required virtual network integration is built on top of point-to-site 
VPN technology. So, once gateway deployment is completed, go to the VPN 
gateway, and click on the Point-to-site connection. Enter an IP range for 
VPN connection:

Configuring Advance Security for Compute      345
Figure 5.63: Configure point to site VPN gateway for gateway-based virtual network integration
	
	
As shown in the preceding figure, give the address range for point to site 
connection and save the configuration.
	
4.	 Come back to your app service and go to Networking under the Settings 
section. Here, click on + Add virtual network. On the drop-down, you will 
get the list of virtual networks, select the virtual network where you created 
VPN gateway:
Figure 5.64: Select virtual network with point to site VPN connection for virtual network 
integration
	
	
As shown in the preceding figure, select the virtual network from different 
region which has route-based VPN gateway.
	
5.	 Once virtual network for integration is configured, you can see configuration 
as shown in the following figure:

346      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 5.65: Change in configuration after virtual network integration status
	
	
The preceding figure shows the location of your app service, gateway 
availability status, point to site client certificate status, IP range of integrated 
virtual network, and address range of point to site connection.
	
6.	 To check the connectivity, go to Console under the Development Tools 
section and type tcpping <private IP of your server>:<port number>. If 
you do not give any port number, by default it will connect to port 80:
Figure 5.66: Connection testing status after virtual network integration
	
	
The preceding figure shows that your app service is able to reach to your 
virtual machine.
In this section, we saw that how to configure gateway required virtual network 
integration. Through this virtual network integration, we were able to reach to a 
virtual machine residing in another region virtual network.

Configuring Advance Security for Compute      347
Configure hybrid connection endpoints
You will find hybrid connections as a service in Azure and as a feature of Azure App 
Service. When you use hybrid connection feature within app service, your app can 
access resources in any network that can make outbound calls to Azure over port 
443. Hybrid connections provides access from your app to a TCP endpoint at target 
resource. In app service, each hybrid connection correlates to a single TCP host and 
port combination. This enables your apps to access resources on any OS, provided 
it is a TCP endpoint.
Workflow for hybrid connection
Hybrid connection has simple workflow. To create a hybrid connection for your 
Azure web app, you need to deploy a relay agent on the target endpoint. The target 
endpoint is the resource which web app wants to access. The relay agent helps 
hybrid connection to reach to both the desired endpoint as well as to Azure. The 
relay agent and Hybrid Connection Manager (HCM) calls out to Azure Relay over 
port 443. From Azure web app site, the app service infrastructure connects to Azure 
Relay on your application’s behalf. Through the joined connections, your app can 
access the desired endpoint. The connection use TLS 1.2 for security and shared 
access signature (SAS) keys for authentication and authorization.
If you find difficulty in understanding this workflow, we will have a practical to 
deploy hybrid connection and to access endpoint.
Benefits of hybrid connections in app service
Hybrid connection is one of the networking features of your app service. There are 
several benefits of the hybrid connections capability:
 
•	
Your apps can access on-premises systems and services securely without 
setting up any VPN or ExpressRoute connection.
 
•	
The feature does not require an internet-accessible endpoint.
 
•	
Each hybrid connection matches to a single host and port combination.
 
•	
It normally does not require firewall holes. The connections are all outbound 
over standard web ports.
 
•	
Because the feature is network level, so it is independent to the language 
used by your app and the technology used by the endpoint.
 
•	
It can be used to provide access in multiple networks from a single app.

348      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Limitations of hybrid connections in app service
There are also a few things you cannot do with hybrid connections:
 
•	
You cannot mount a drive.
 
•	
You cannot use this over UDP ports.
 
•	
It does not support LDAP, because it can require UDP.
 
•	
It also does not support AD, because you cannot domain join an app service 
worker.
Connection test from app service to target server 
without hybrid connection
Before setting up a hybrid connection, let’s do a connection test from your app 
service to the target server. For connection test:
	
1.	 Login to Azure portal and go to your web app.
	
2.	 In web app, go to Console under the Development Tools section.
	
3.	 It will open a command prompt console. Type tcpping <Private IP of 
target Server>:<Port number>.
	
4.	 By default, the tcpping request goes to port 80:
Figure 5.67: Connection test before hybrid connection

Configuring Advance Security for Compute      349
The preceding screen shot is for connection test over default port 80 on target server.
The preceding screen shot shows that our app service is not able to reach to the 
target server and all attempts are failed.
Add and create hybrid connections in your app
After understanding workflow, benefits, and limitations of hybrid connections, let’s 
see how to create and configure hybrid connection for your app service:
	
1.	 Login to Azure portal and go to your app service.
	
2.	 In your app service, click on Networking under the Settings section. Here 
you will see multiple networking features.
	
3.	 Click on the Hybrid connections option. It will open a new overview 
window: there you will find an option to create new hybrid connection:
Figure 5.68: Create new hybrid connection
	
	
Click on + Add hybrid connection to create a new hybrid connection.
	
4.	 As shown in the preceding figure, fill the details as follows:
	
	
a.	 Hybrid connection Name: Name of the connection.
	
	
b.	 Endpoint Host: Name of the host to which you want to make the 
connection. The host name should have a DNS entry and be resolved. 
We do not have any DNS server for name resolution, so we took host 
name localhost because this can be resolved without DNS server.
	
	
c.	 Endpoint Port: Port number on which you want to connect to the 
endpoint host. I am taking port 80 for this demo.

350      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
d.	 Servicebus namespace: Hybrid connection needs a service bus to be 
hosted. You can choose existing service bus or can create a new.
	
5.	 To install hybrid connection manager, go to the target machine. The hybrid 
connections feature requires a relay agent in the network that hosts your 
target endpoint. That relay agent is called the Hybrid Connection Manager 
(HCM). Now, you will need to configure hybrid connection manager on 
the server to which you want to connect. For configuration, download the 
connection manager from hybrid connections Overview page and copy it to 
the target server.
	
6.	 After installing HCM, you can run HybridConnectionManager.msi to use the 
UI of the tool.
	
7.	 When you start the HCM UI, the first thing you see is a table that lists all the 
hybrid connections that are configured with this instance of the HCM:
Figure 5.69: Hybrid connections manager UI at target server
	
8.	 Click on + Add a new Hybrid Connection to add new connection to this 
agent. Any modification in existing connections or to create a new connection 
will require you to login to Azure. When you click for new connection 
creation, you will be prompted to login to Azure portal.
	
9.	 Provide your Azure credentials to connect to Azure subscription:
Figure 5.70: Select hybrid connection from the list

Configuring Advance Security for Compute      351
	
	
As shown in the previous figure, select the subscription and it will show 
the list of available hybrid connections. You can select the correct hybrid 
connection which you created under your app service and click on Save.
	
10.	 Once you save the connections, you can see the hybrid connection is 
stablished between your target server and Azure:
Figure 5.71: Updated hybrid connection manager UI after selecting proper hybrid connection
	
	
The preceding figure shows the connection status. You can also get connection 
details by clicking on the hybrid connection:
Figure 5.72: Details of hybrid connection
	
	
The preceding figure shows the details about your hybrid connection from 
target server.
	
11.	 Now you can go back to Azure portal and see the status of hybrid connection 
in app service:

352      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 5.73: Hybrid connection status in Azure App Service
The target server should have internet connection to reach to Azure services.
Connection test after hybrid connection
Now we have hybrid connection created and status is Connected. Let’s see what 
changes after hybrid connection setup:
	
1.	 Login to Azure portal and go to your app service.
	
2.	 In web app, go to Console under the Development Tools section.
	
3.	 It will open a command prompt console. Type tcpping <Private IP of 
target Server>:<Port number>.
	
4.	 By default, the tcpping request goes to port 80:
Figure 5.74: Connection test status after setting up hybrid connection

Configuring Advance Security for Compute      353
	
	
This figure shows the result of connection request.
The preceding demo shows that your app service is able to connect to target server 
at port 80 because for this we created hybrid connection. But when I tried to connect 
to a different port 3389 then the connection could not establish.
Conclusion
In this chapter, you learnt about how to secure your Azure VMs by using Azure 
services. You saw that you can secure not only Azure Virtual Machine but also on-
premises servers through Azure services. Now you know how you can plan patching 
for your servers through Azure Update Management. You know what the best 
practices and gears are to secure your virtual machines. You can create a security 
baseline for servers. This baseline can help you to keep consistency in achieving 
security parameters for virtual machines.
You also learnt the use of Azure Key Vault, setup secure authentication, and secure 
network connection for Azure Web App.
In the next chapter, we will go through the security best practices for Azure Ku­
bernetes Service (AKS), containers, and vulnerability management on your hosts.
Multiple choice questions
	
1.	 You want to stop and start certain services, respectively, before and after 
pushing the updates, which feature from Update Management you will opt 
for?
	
	
A.	 Azure automation account
	
	
B.	 Pre-scripts + Post-scripts
	
	
C.	 Schedule settings
	
	
D.	 Groups to update
	
	
Answer: B
	
2.	 Can you use Update Management to patch on-premises servers also?
	
	
A.	 Yes
	
	
B.	 No
	
	
Answer: A
	
3.	 Which of the followings is not a security hardening way for virtual machines?
	
	
A.	 Patch management
	
	
B.	 Windows defender advance threat protection

354      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
C.	 Enable antimalware
	
	
d.	 Allow virtual machine access over the internet
	
	
Answer: D
	
4.	 You want to exclude certain file extensions from the screening of Antimalware, 
where would you list\define those extensions?
	
	
A.	 Process exclusion
	
	
B.	 Extensions exclusion
	
	
C.	 Path exclusion
	
	
D.	 Real time protection
	
	
Answer: B
	
5.	 Among these which is not a networking best practice to secure app service?
	
	
A.	 Use isolated SKU to host app service
	
	
B.	 Use TLS 1.2 for connection
	
	
C.	 Use internal load balancer or application gateway for secure connection
	
	
d.	 Use web application firewall (WAF) to secure your app service
	
	
Answer: B
	
6.	 Among these which is not a data protection best practice to secure app 
service?
	
	
A.	 Use FTPS for code file deployment
	
	
B.	 Use Azure Key Vault secrets to save connection strings and passwords
	
	
C.	 Redirect requests from HTTP to HTTPS
	
	
D.	 Use hybrid connection to access on-prem resources
	
	
Answer: D
	
7.	 Among the followings which identity providers, you can use in your app 
service for authentication?
	
	
A.	 Google
	
	
B.	 Microsoft
	
	
C.	 Twitter
	
	
D.	 All the above
	
	
Answer: D
	
8.	 You want to access your app service from one of your virtual machines over 
private network. Which Azure networking feature will you use to access 
your app service on private IP?

Configuring Advance Security for Compute      355
	
	
A.	 Private endpoint connections
	
	
B.	 Hybrid connection
	
	
C.	 Virtual network peering
	
	
D.	 Virtual network integration
	
	
Answer: A
	
9.	 Your application wants to access database server over private connection, 
primarily which Azure networking feature will you use for this?
	
	
A.	 Setup internal load balancer
	
	
B.	 Virtual network integration
	
	
C.	 Configure web application firewall
	
	
D.	 Virtual network peering
	
	
Answer: B
	
10.	 Which of the followings cannot be stored in Azure Key Vault?
	
	
A.	 Connection strings
	
	
B.	 Passwords
	
	
C.	 Certificates
	
	
D.	 Virtual machine disk
	
	
Answer: D
	
11.	 You want to restore a deleted Key Vault, which feature you need to configure?
	
	
A.	 Soft delete
	
	
B.	 Diagnostic logs
	
	
C.	 Access policy
	
	
D.	 All of the above
	
	
Answer: A
	
12.	 Can you only encrypt data disks of a Windows virtual machine?
	
	
A.	 Yes
	
	
B.	 No
	
	
Answer: B

356      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide

Chapter 6
Configuring 
Container Security
In this chapter, you will learn how you can harden the security across your 
containers. We will start with basic understanding and deployment of containers 
to network level hardening to vulnerability identification and management for the 
containerized environment. Other topics covered will be isolation of containers and 
access control on them. By the end of this chapter, you will be able to design and 
provide secure containers to host your applications. You will be able to understand 
the building blocks and concepts of containers.
Structure
In this chapter, we will learn about the following topics:
	
•	
Overview of container instance
	
•	
Azure security best practices and recommendations for Azure Container 
Instances (ACI)
	
•	
Network planning for ACI
	
•	
Deploying and managing containers in Azure
	
•	
Isolation modes of ACI
	
•	
Overview and configuration of Azure Container Registry
	
•	
Configuring security for different types of containers

358      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Azure Kubernetes Service (AKS)
	
•	
Conclusion
	
•	
Multiple choice questions (MCQ)
Objectives
The objective of this chapter is to understand security best practices for container 
services in Azure. After reading this chapter, you should be able to understand basics 
of Azure container. You would be able to deploy and manage containers in Azure. 
You will also be able to define networking, data protection, and authentication 
best practices for your containers. By the end of this chapter, you will be able to 
understand recommended ways to secure your container registry, images, and 
artifacts in registry.
Overview of container instance
Containers are becoming the preferred way to package, deploy, and manage 
applications in modern application development and deployment. Azure Container 
Instances give you the fastest and simplest way to run a container in Azure. Azure 
Container Instances remove overhead of managing any virtual machines. Azure 
Container Instances is ideal for isolated containers, simple applications, task 
automation, and build jobs. Whereas if you need full container orchestration like 
service discovery across multiple containers, automatic scaling, and coordinated 
application upgrades then AKS is recommended.
Features and benefits of Azure Container 
Instances
In this section, let’s discuss features of Azure Container Instances. They may help 
you to choose among different container services:
	
•	
Quick startup time: Containers have fast booting and starting capability. 
Azure Container Instances can start containers in Azure in seconds, without 
the need to provision and manage VMs.
	
•	
Container access: ACI can expose your container groups directly to the 
internet with an IP address and a Fully Qualified Domain Name (FQDN). 
When you create a container instance, you can specify a custom DNS name, 
so your application can be reachable at  customDNSname.azureregion.
azurecontainer.io.

Configuring Container Security      359
	
•	
You can connect to a running container through an interactive shell command. 
This helps with application development and troubleshooting. The shell 
access takes place over HTTPS, using TLS 1.2 to secure client connections.
	
•	
Hypervisor-level security: Historically, application dependency isolation 
and resource governance were a challenge for containers to host multi-
tenant application. Azure Container Instances guarantees your application 
is as isolated in a container as it would be in a VM.
	
•	
Custom sizes: Typically, containers are optimized to run just a single 
application, but the actual needs of that application can differ. In Azure 
Container Instances you can get optimum utilization by allocating the exact 
specifications of CPU cores and memory.
	
•	
Persistent storage: Azure Container Instances achieves persistent storage by 
using Azure Storage.
	
•	
Linux and Windows containers: Azure Container Instances can be deployed 
with both Windows and Linux containers with the same API. You need to 
specify the OS type when you create your container groups. Although Linux-
based containers have some extra features over windows based. Such as the 
following:
	
	
•	
Multiple containers per container group.
	
	
•	
Volume mounting.
	
	
•	
Resource usage metrics with Azure Monitor.
	
	
•	
Virtual network deployment.
	
	
•	
GPU resources.
	
•	
Co-scheduled groups: Azure Container Instances supports scheduling 
of multi-container groups that share a host machine, local network, storage, 
and lifecycle. This enables you to combine your main application container 
with other supporting role containers, such as logging sidecars.
	
•	
Virtual network deployment: Azure Container Instances also supports 
all Azure networking features. You can deploy container instances into an 
Azure virtual network. Container instances in a subnet can communicate 
securely with each other and other resources in the virtual network. You 
can extend this connectivity through VPN gateway or ExpressRoute to on-
premises resources also.

360      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Building blocks and concepts about Azure 
Container Instances
In this section, we will study building blocks and concepts about Azure Container 
Instances. This will help you to decide the configuration and deployment of Azure 
Container Instance.
Container group
Container group is the top-level resource in Azure Container Instances. Container 
group is a collection of multiple Azure Container Instance on a same host machine:
	
•	
All containers in a container group share network, storage, and compute 
capacity of host machine. A resource request is added to container group 
when a container instance makes a request for resource (CPU, memory, 
storage, etc.) allocation. For example, if you create a container group of four 
container instances, and if each container instance request for two CPUs, 
then eight CPUs will be allocated to the container group.
	
•	
Each container instance makes a resource request to get desired resources. 
You can limit the maximum resource allocation to instances by defining 
resource limit property. Container instances also have mandatory resource 
request property. This property defines the minimum required resources for 
a container instance. The resource limit of a container instance must be equal 
to or greater than the mandatory resource request property. If you do not 
define resource limit property, then the maximum resource allocation to a 
container instance is the same as its resource request. Being said that, then 
the container instance can get as much resources as it requests. If you define 
maximum resource limit for a container instance, then it cannot get resource 
more than the defined resource limit. Correspondingly, resource usage by 
other container instances in the group could decrease. The maximum resource 
limit you can set for a container instance is the total resources allocated to 
the group. You cannot use all the resources allocated to instance group. 
Some resources are reserved and used by the underlying infrastructure of 
the instance group. So, you need to do capacity planning accordingly.
	
•	
Container groups can share public IPs, different ports on public IPs, FQDNs. 
To access container instance from an external resource, you need to allow IP 
and port to communicate with external resource. All containers in a container 
group can communicate to each other on any port, even if those ports are not 
exposed externally on the group’s IP address or from the container.

Configuring Container Security      361
	
•	
Multi-container groups are useful in cases where you want to divide a single 
functional task into a small number of container images. These images can 
then be delivered by different teams and have separate resource requirements.
Azure security best practices and 
recommendations for Azure Container 
Instances (ACI)
In this section, we will see how to secure your Azure Container Instances. We will 
see different verticals and their respective security recommendations. After this 
section, you will be able to take appropriate decision to secure your ACI.
Network security
Network security helps you to secure incoming and outgoing traffic of your container 
instances. Azure provides multiple networking features to secure your ACI network 
connections:
	
•	
Control and monitor ingress and egress traffic through Azure Firewall or any 
third-party firewall.
	
•	
Control inbound and outbound traffic network through Network Security 
Groups (NSGs).
	
•	
Enable NSG flow logs to monitor traffic flow through subnets and NICs.
	
•	
Deploy Web Application Firewall (WAF) in front of critical applications in 
protection mode.
	
•	
Enable standard distributed denial-of-service (DDoS) protection on virtual 
networks to protect malicious attacks.
	
•	
Enable Intrusion Prevention System (IPS) and Intrusion Detection System 
(IDS) on your firewall.
	
•	
Enable threat detection on security center.
	
•	
Deploy application gateway in front of container instances for SSL/TLS 
offloading.
Logging and monitoring
Continuous monitoring and logging are an important part of the operation. Proactive 
monitoring and logs analysis can prevent big outages. In this section, we will learn 
about the best practices related to monitor container instances:

362      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Connect your container instances with Azure Monitor to capture activity 
and performance logs.
	
•	
Configure Log Analytics workspace to archive audit logs in Azure storage 
account.
	
•	
Configure network watcher and NSG flow logs to monitor network related 
activities.
	
•	
Enable alerts for any anomalous activity.
	
•	
Enable standard Azure Security Center to monitor security health of your 
container instances.
Identity and access management
In this section, we will see how you can manage access on container instances. 
Azure provides various features to control access on Azure resources such as RBAC, 
Privileged Identity Management (PIM), Just-In-Time (JIT) access:
	
•	
Use proper and least RBAC roles to grant access on container groups.
	
•	
Limit the access time by using PIM and JIT.
	
•	
Use single sign-on (SSO) to access webs hosted on container instances.
	
•	
Use multi-factor authentication (MFA) for second layer authentication.
	
•	
Use privileged access workstation for all administrative tasks.
	
•	
Keep a record of all administrative accounts.
	
•	
Change passwords on regular interval.
	
•	
Archive all activity logs in storage account.
	
•	
Use Azure AD as much as possible for authentication and authorization.
	
•	
Regularly review user’s access.
	
•	
Enable alert for account login behavior deviation.
	
•	
Remove access to deactivated accounts.
	
•	
Store passwords, keys, and connection strings in Azure Key Vault.
Data protection
In this section, we will see Azure features to protect data used by container instances. 
Container instances will store respective web configuration files on Azure Storage. 
Container instances may need to access other Azure storage locations, database, and 
any other files. It is important to see how you can protect data used by container 
instances:

Configuring Container Security      363
	
•	
Encrypt data in transit and only have secure connection over HTTPs.
	
•	
Encrypt storage account with customer managed key.
	
•	
Use private link to access Azure storage over private IP.
	
•	
Use shared access signature to access Azure storage account.
	
•	
Identify and isolate sensitive information.
	
•	
Do regular vulnerability scan your systems.
	
•	
Enable backup for your data.
	
•	
Plan for disaster recovery (DR) of your environment.
Some additional recommendations for 
container instances
In this section, we will see security considerations for using Azure Container 
Instances to run container apps. This will include security recommendations for 
managing images and secrets for Azure Container Instances and considerations for 
the container ecosystem throughout the container lifecycle:
	
•	
Use a private registry: You need images to build containers, these images 
can be stored in one or more repositories. These repositories can belong to 
a public registry, like Docker Hub, or to a private registry. An example of 
a private registry is the Docker Trusted Registry, which can be installed 
on-premises or in a private cloud. You can also use cloud-based private 
container registry services, including Azure Container Registry.
	
	
A publicly available container image may have several vulnerabilities. To 
help reduce the threat of attacks, you should store and retrieve images 
from a private registry, such as Azure Container Registry or Docker Trusted 
Registry.
	
•	
Monitor and scan container images: Although you are building your own 
container images and storing them in your own private repositories but still 
you should scan the container images to identify potential vulnerabilities. 
You can integrate Azure Container Registry with Azure Security Center to 
automatically scan all Linux images pushed to a registry. Azure Security 
Center’s integrated Qualys scanner detects image vulnerabilities, 
classifies them, and provides remediation guidance. There are few other 
image scanning solutions are available through Azure Marketplace, such 
as Twistlock and Aqua Security.
	
•	
Protect credentials: You must secure credentials required for logins or API 
access, such as passwords or tokens. Ensure that only privileged users can 

364      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
access those containers in transit and at rest. Azure Key Vault  is a cloud 
service that safeguards encryption keys and secrets (such as certificates, 
connection strings, and passwords) for containerized applications. You need 
to also make sure that only required users can access the key vault also.
	
•	
Ensure that only approved images are used in your environment: You 
should setup a tool or processes in place to monitor for and prevent the use 
of unapproved container images. Allow only approved container images.
	
•	
Permit only approved registries: It is an extension of ensuring that your 
environment uses only approved images. The images are only been used 
from the approved registries. This will reduce your exposure to risk by 
limiting the potential for the introduction of unknown vulnerabilities or 
security issues.
Network planning for Azure Container 
Instances
In this section, we will study network planning for Azure Container Instances. You 
need to plan your network allocation, traffic routing, and firewall rules. Azure Virtual 
Network  provides secure, private networking for your containers. By deploying 
container groups into an Azure virtual network, your containers can communicate 
securely with other resources in the virtual network.
Advantages of deploying Containers in Azure 
Network
Container groups deployed into an Azure virtual network enables the following 
features in container instances:
	
•	
Direct communication between container groups in the same subnet.
	
•	
Send task-based workload output from container instances to a database in 
the virtual network.
	
•	
Retrieve content for container instances from a service endpoint in the virtual 
network.
	
•	
Enable container communication with on-premises resources through a VPN 
gateway or ExpressRoute.
	
•	
Integrate with Azure Firewall to identify outbound traffic originating from 
the container.
	
•	
Resolve names through the internal Azure DNS for communication with 
Azure resources in the virtual network, such as virtual machines.

Configuring Container Security      365
	
•	
Use NSG rules to control container access to subnets or other network 
resources.
Unsupported networking features
There are few Azure networking services, which you cannot use with Azure 
Container Instances. You need to take care of these services while creating or 
purposing a solution with Azure Container Instances:
	
•	
Azure Load Balancer is not supported in front of container instances. You 
cannot add container instances as backend pool of Azure Load Balancer.
	
•	
Global peering (connecting virtual networks across Azure regions) is not 
supported.
	
•	
Container groups deployed to a virtual network do not currently support 
exposing containers directly to the internet with a public IP address or a fully 
qualified domain name.
	
•	
When you deploy container group in a virtual network, currently only Linux 
containers are supported in those container group.
	
•	
You need a dedicated subnet to deploy container groups to a subnet. The 
subnet cannot contain other resource types.
	
•	
Managed identity  cannot be used in container groups when they are 
deployed to a virtual network.
	
•	
Liveness or readiness probe cannot be enabled in container groups when 
they are deployed to a virtual network.
Deploying Azure Container Instance
In this section, we will see how to deploy Azure Container Instance. You can deploy 
container instance through Azure CLI, Azure portal, Azure PowerShell, ARM 
template, and Docker CLI. You can use any of the method from the preceding list. 
Here we will deploy a container instance through Azure portal. Let’s follow these 
steps to deploy Azure Container Instance:
	
1.	 Login to Azure portal and search for container instances. Click on + Add for 
new container instance. It will open a new window to fill basic details of 
container instance deployment. As shown in the following screenshot, you 
can fill the details about subscription name, resource group name, location, 
and size.
	
2.	 The important parameter is Image source and Image. You can choose the 
image source where you are storing your container images. For this demo, 

366      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
I am using quick start image source. This source has few default images 
uploaded. In next field, image, you can select the appropriate image from the 
selected source. Your image sources may have multiple images and versions 
based on applications and environment:
Figure 6.1: Basic details to deploy container instance 
	
	
As shown in the preceding screenshot, I am choosing a default Linux image.
	
3.	 Once you filled basic details, move to next Networking page. In the 
Networking page, you decide the networking type of container instance:
Figure 6.2: Associate private network to your container instance

Configuring Container Security      367
	
	
Container instance with public networking can be accessed over the internet 
and it has a public endpoint, with private networking, you can decide your 
private local network for container instance. In private networking, you 
get more control over firewall, network traffic rule, and so on. I selected 
Networking type as Private, for this you need to define virtual network and 
a dedicated subnet.
	
	
You can define the port number on which you want to access web on 
container instance. The private network is only supported for Linux-based 
container instances.
	
4.	 You can leave rest of the settings as it is and click on Create. The deployment 
will not take much time. Once the deployment is completed, you can go to 
the container dashboard:
Figure 6.3: Container instance dashboard
	
	
As shown in the preceding screenshot, on container dashboard you can see 
the private IP of the container instance.
	
5.	 To browse the app on this container instance, you can browse if from any 
virtual machine in your private network:
Figure 6.4: Browse container instance default page over private network

368      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding screenshot, we are able to browse container web 
page over private IP. You can make a DNS record for this IP for name resolution.
In this section, we saw how to deploy container instance and browse the web page. 
Here we deployed only single container image. To deploy multi-container group, 
you will need to use YAML or ARM template.
Isolation modes of Azure Container Instances
Windows containers offer two types of runtime isolation modes: Process and 
Hyper-V isolation. In both isolation modes, creation, management, and function 
are the same for all containers. They also produce and consume the same container 
images.
Process isolation
This is the traditional isolation mode for containers. In process isolation mode, 
multiple container instances run concurrently on same host. Among these container 
instances, the isolation is provided through namespace, resource control, and 
process isolation technologies. In process isolation, the containers share the same 
kernel with the host as well as each other. This is approximately the same as how 
Linux containers run:
Figure 6.5: Process isolation
The preceding diagram shows the container is sharing Kernel with OS and other 
containers.
Hyper-V isolation
Hyper-V isolation mode offers enhanced security and broader compatibility between 
host and container versions. In Hyper-V isolation mode also multiple container 

Configuring Container Security      369
instances run concurrently on a host. However, each container runs inside a virtual 
machine and gets its own kernel. This virtual machine provides hardware-level 
isolation between each container as well as the container host:
Figure 6.6: Hyper-V isolation
The preceding diagram shows, there are different virtual machines for different 
containers. These containers are getting dedicated OS and kernel from respective 
virtual machine.
In last sections, we studied about Azure Container Instances. We saw the security 
best practices, network recommendations, and a demo to deploy container instance. 
In coming sections, we will study about AKS.
Overview of Azure Container Registry
Azure Container Registry is a Microsoft managed, private Docker registry service. 
This is based on the open-source Docker Registry 2.0. You can create container 
registry to store and manage your private Docker container images and related 
artifacts. Developers can use Azure DevOps pipelines or Jenkins to push images to 
a container registry as part of a container development workflow.
You can configure Azure Container Registry tasks to automatically rebuild 
application images when their base images are updated. You can create multi-step 
tasks to automate building, testing, and patching multiple container images in 
parallel.
Features of Azure Container Registry
There are multiple registry providers in market in these days. Let’s study about the 
features of Azure Container Registry. These features may help you to understand 

370      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Azure Container Registry in a better way, also will help you to choose the right 
registry service provider:
 
•	
Registry service tiers: Azure Container Registries are available in three SKUs: 
basic, standard, and premium. Each SKU supports some common features 
such as webhook integration, authentication with Azure Active Directory, 
and delete functionality. You can integrate registry with your local network 
to take advantages of your networking features and traffic monitoring. 
Premium SKU provides geo-replication  feature advanced replication and 
container image distribution scenarios.
 
•	
Security and access: Security of container registry is also an important aspect. 
It keeps confidential images and repository. You can log in to Azure container 
registry through Azure CLI or the standard Docker login commands. Azure 
Container Registry uses secure way for data transit. It makes a secure client 
connection over Transport Layer Security (TLS) and transfers container 
images over HTTPS. Container registry also supports access control through 
Azure Active Directory and role-based access control (RBAC).
 
•	
Supported images and artifacts: Container Registry can store a wide 
range of images. It can store both Windows and Linux images. You can use 
Docker commands to push images into a repository or pull an image from a 
repository.
 
•	
Automated image builds: Automated image build feature helps you to 
automate certain operational tasks related to images. These automated 
tasks can help you to build, test, push, and deploy images in Azure. You 
can configure Azure Container Registry tasks to automate your container OS 
and patching pipeline and build images automatically when the base image 
is updated.
Creating container registry
Azure Container Registry is a private Docker registry in Azure. In this Docker 
registry, you can store and manage private Docker container images and related 
artifacts. In this section we will see how to deploy container registry. Let’s follow 
these steps to deploy container registry in Azure:
	
1.	 Login to Azure portal, search for container registries and click on + Add.
	
2.	 It will open a new window to fill the details about container registry 
deployment:

Configuring Container Security      371
Figure 6.7: Basic details to deploy container registry
	
	
As shown in the preceding screenshot, in the first tab, fill the basic 
information about subscription, resource group, and name of registry. You 
can choose SKU as per your performance requirement. All SKUs provide 
same functional capabilities but with higher SKU you get more functionality.
	
3.	 In the Networking tab, you can set configuration about network. In the 
Networking tab, you can set accessibility location of container registry. 
You can connect to this registry either publicly, via public IP addresses, or 
privately, using a private endpoint.
	
4.	 The next tab is for encryption, you can set up encryption level for the images 
in registry. Azure Container Registry service encryption protects your data 
at rest. Azure Container Registry encrypts your images and other artifacts 
when they are pushed to your registry and automatically decrypts when you 
pull them.
	
5.	 Private endpoint and customer managed key encryption both are only 
supported in Premium tier SKU. Click on Create to start the deployment:

372      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 6.8: Overview of container registry
	
	
As shown in the preceding figure, we got a container registry to store our 
Docker images and artifacts.
After these steps, now you are ready to use this container registry to store Docker 
images and artifacts. You can push the images and pull them back when you require. 
We will see various ways to secure images and container registry in coming sections.
Configuring authentication for Azure Container 
Registry (ACR)
When you create an Azure Container Registry and want to push and pull images 
to it, you need to authenticate yourself to get access. ACR provides various ways to 
authenticate the users. Here is a list of supported authentication methods:
	
•	
Individual login with Azure AD identity.
	
•	
Azure AD service principal.
	
•	
Login through managed identity.
	
•	
Authenticate through AKS service.
	
•	
ACR local admin account.
	
•	
Repository scoped access token.
Let’s study about these methods one by one. You can decide authentication method 
based on uses of ACR.
Individual login with Azure AD identity
You can use your Azure AD credentials to log in to ACR. For this first you login 
to Azure subscription through Azure CLI command az login and then log in to 

Configuring Container Security      373
ACR through Azure CLI command az acr login. When you login with az acr 
login, Azure CLI uses the token which was created when you logged in to Azure 
subscription through az login command.
So, you do not need to have separate username and password to login to ACR if you 
are logging through Azure AD identity. The Azure AD authentication token is valid 
for three hours only. You can refresh your authentication by re-running az acr login 
command. In this case you get access on ACR based on the RBAC role assigned to 
you on ACR.
Login with Azure AD service principal
In previous authentication method, you saw how to use Azure AD account to login 
to ACR. Azure AD service principal also works on the concept. For this you create 
an Azure AD service principal in Azure AD and assign a RBAC role to it over the 
ACR. The service principal gets the permissions based on the RBAC role. You can 
create multiple service principals and can give them different level of permissions 
over the ACR. These multiple service principals can be used for different types of 
work:
	
•	
To login with Azure AD service principal first, connect to Azure subscription 
through az login Azure CLI command and then az acr login to connect to 
ACR. You can also use docker login command to connect to ACR. In login 
process, you will need to use service principal application ID (client ID) as 
the username and service principal password (client secret) as the password.
	
•	
You can also use certificate-based authentication also when you use service 
principal for ACR authentication. So, in this case, you use certificate as a 
password instead of client secret. For certificate-based authentication, you 
first need to assign a self-signed certificate with your service principal. This 
self-signed certificate can be created while creation of the service principal.
	
•	
To login service principal with certificate, you should have the certificate 
in PEM format including the private key. You can keep the certificate at the 
machine from which you are logging in or it should be accessible from the 
machine you are logging in to the ACR. You use following commands to log 
in to ACR with certificate-based service principal:
	
	
az login --service-principal --username $SP_APP_ID --tenant $SP_
TENANT_ID  --password /path/to/cert/pem/file
	
	
az acr login --name myregistry 

374      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Login through managed identity
You can use managed identity to authenticate to ACR from other Azure services. For 
example, you can log in to ACR from a Linux machine running with Docker on it. 
You can use system-assigned or user-assigned managed identity for authentication. 
To authenticate through managed identity, you create managed identity and 
associate that with any of the azure service which support managed identity. Now 
you give access to this managed identity over the ACR, like you give access to a 
service principal. So, now the resource with managed identity associated can access 
ACR without any need of username or password.
Login with AKS service
You can also use AKS to integrate directly with ACR. This also uses the same concept 
which is used in the managed identity login process. In AKS to ACR integration, 
a managed identity is been granted AcrPull access over ACR. You can use the 
following Azure CLI command to integrate AKS and ACR with ACRPull permission:
az aks update -n AKSClustername -g AKSResourceGroup --attach-acr <acr-
name>
Here AKSClustername is the name of AKS cluster, AKSResourceGroup is the name 
AKS cluster resource group and acr-name is the name of ACR with you want to 
integrate the AKS.
Login with ACR local admin
Each ACR has its own local admin account created while creating the ACR. This 
local admin account has full permission over the ACR. This account is disabled by 
default, but you can enable this account and can manage its password from Azure 
portal or CLI. Admin account has two access keys.
Geo replicate container registry
Geo replication is one of the security parameters. Geo replication provides high 
availability in case of disaster at the primary site. Container registry can replicate 
images and artifacts to another peered location through geo replication. Let’s follow 
these steps to set up geo replication:
	
1.	 Login to Azure portal and go to your container registry. To use geo-replication, 
you need to upgrade to Premium tier.

Configuring Container Security      375
	
2.	 Go to Replications under Services. You can get option to upgrade to 
Premium SKU:
Figure 6.9: Upgrade SKU of container registry
	
	
As shown in the preceding figure, select Premium from the SKU drop-down 
and enable the Admin user option. Save the changes to upgrade the tier.
	
3.	 Now click on + Add on Replication window to choose for secondary 
replication location:
Figure 6.10: Select secondary replication for container registry
	
	
Select the location from the drop-down and click on Create. It will start 
replication of your container registry and its content to secondary location.
	
	
In this section, we saw how to protect your container registry during disaster. 
One another advantage is you can use secondary location container registry 
to pull the images:

376      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 6.11: Replication status after enabling geo replication for container registry
	
	
As shown in the preceding figure, we replicated our container registry to 
Japan West, now if you want to deploy any web app in Japan West, you can 
use the same container registry to deploy web app in Japan West. With this 
geo-replication, you can use single registry to deploy web apps in various 
regions.
	
	
The following are some points to remember about geo-replication:
	
	
•	
When you set up geo-replication, each region becomes independent. All 
replication regions are then covered under Azure Container Registry 
SLAs.
	
	
•	
When you push or pull images from a geo-replicated registry, Azure 
Traffic Manager in the background sends the request to the registry 
located in the region that is closest to you in terms of network latency.
	
	
•	
After you push an image or tag update to the closest region, it takes some 
time for Azure Container Registry to replicate to the remaining regions. 
The replication time depends on the size of image.
	
	
•	
You can configure private link  to access your container services over 
private IP.

Configuring Container Security      377
Some best practices to use Azure Container 
Registry
In this section, we will see some best practices for Azure Container Registry. These 
practices can help you to achieve better performance and a cost-effective solution:
	
•	
Place container registry in same region where you are deploying container 
instances. This will help you to reduce the latency.
	
•	
Use geo-replication to deploy web apps in multiple regions.
	
•	
You can define namespaces to segregate images related to different 
departments and applications. For example:
	
	
•	
Bookdemoregistry.azure.io/GlobalImage:1.0
	
	
•	
Bookdemoregistry.azure.io/account/web:1.1
	
	
•	
Bookdemoregistry.azure.io/marketing/web:1.1
	
	
As shown in preceding example, we have separate namespaces for different 
applications and departments. We kept GlobalImage under root namespace 
because this image can be used by any department, whereas account and 
marketing images are under their dedicated namespace.
	
•	
You should use dedicated resource group to deploy container registry. This 
will help you to manage RBAC.
	
•	
Use service principle in build and development pipeline for authentication.
Security best practices for container registry
In this section, we will some security best practices for container registry. At the 
infrastructure level, you will find most of the security recommendations are similar 
for many Azure services. You can see few common security recommendations here 
also.
Network security best practices
Here we will see how you can protect your container registry in public and private 
network. We will see how you can allow or deny traffic container registry:
	
•	
You can enable service endpoint on subnets to access container registry over 
Microsoft backbone network. When a resource in a subnet tries to reach 
container registry, it can access container registry over Microsoft backbone 
network through service endpoint.

378      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
You can set up Azure Firewall or any third-party firewall to access container 
registry from on-premises network or cross-region network.
	
•	
Allow registry access from a specified IP address or IP range only.
	
•	
Along with allowing registry access only from specific IP, it is recommended 
to deny registry access from malicious IPs.
	
•	
Enable NSG flow logs and network watcher to track inbound and outbound 
traffic from your network.
	
•	
Enable intrusion protection and intrusion detection mode on firewalls.
Logging and monitoring best practices
Here we will see best practices to log the events and monitor performance of Azure 
Container Registry:
	
•	
Setup Azure Monitor to capture performance and utilization of container 
registry. You can use log analytics workspace to query and perform the 
analytics.
	
•	
Azure Monitor can also collect audit and diagnostics logs.
	
•	
Retain all security logs in Azure storage account for future reference.
	
•	
Do frequent analysis of logs and performance. This will help you fine tune 
the performance and to apply proper security controls.
	
•	
Enable Azure alerts for any anomalous activity and performance behavior. 
You can set up alerts for unauthorized access and for performance matrix.
Identity and access control related best practices
Here we will see the best recommendations to control access and permissions over 
container registry:
	
•	
Maintain an inventory of users who have access on registry. This will help 
you to audit the permissions in regular interval. You can see who is having 
what level of access.
	
•	
In container registry, you have an admin user account. Admin user account 
is disabled by default. You can enable the admin user and manage its 
credentials in the Azure portal, Azure CLI, or other Azure tools. The admin 
account has full permissions to the registry. Admin account is needed when 

Configuring Container Security      379
you deploy a container image in the portal from a registry directly to Azure 
Container Instances or Azure Web Apps for containers.
	
•	
You can use Azure MFA with conditional access while accessing container 
registry from outside of trusted network or location.
	
•	
Regularly audit user access. Remove use accounts which does not need 
access anymore on the registry.
	
•	
User Azure RBAC roles to provide granular access over container registry.
	
•	
Use managed identity for authentication tasks.
Data protection best practices
Here we will see the best practices to secure your Docker images and artifacts in 
container registry:
	
•	
Maintain an inventory of sensitive images and artifacts in container registry. 
You can tag the images which are important to your business.
	
•	
You can create separate container registry for production, test, and 
development environment-related images.
	
•	
Encrypt the container registry with your custom key.
	
•	
Enable locks to protect accidental deletion of container registry and images.
	
•	
Monitor and store diagnostic and activity logs to track changes in registry.
	
•	
Integrate container registry with security center to run various security scans. 
With these recommendations apply the changes to secure your registry.
	
•	
Run vulnerability assessment from security center.
	
•	
You can use Azure update management or third-party patch management to 
update the OS and application patches on images.
	
•	
Delete old, outdated, and not required images. You can archive these images 
and artifacts in separate container registry.
	
•	
Keep only approved images in container registry.
	
•	
Check the compliance through Azure Policy and Azure Security Center.
	
•	
Implement Credential Scanner to identify credentials within code. Credential 
Scanner will also encourage moving discovered credentials to more secure 
locations such as Azure Key Vault.
	
•	
Setup geo-replication for durability and high availability.

380      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Do a manual backup by coping images from one container registry to another.
	
•	
Use Azure DevOps to securely store your code.
Secure network connectivity features for 
container registry
In this section, we will see the features available to connect container registry with 
a private network. We will see different ways to connect your container registry to 
your private network.
Connect container registry through a private link
You can limit access to container registry by assigning virtual network private IP 
addresses using  Azure Private Link. Network traffic between the clients on the 
virtual network and the registry’s private endpoints traverses over the Microsoft 
backbone network. This eliminates the requirement of public internet to reach to 
container registry. Through the private link, you can also connect to on-premises 
through Azure ExpressRoute private peering or a VPN gateway. You set up name 
resolution of registry endpoint IP by configuring DNS settings  for the registry’s 
private endpoints. With this setting clients and services in the network can continue 
to access the registry at the registry’s FQDN. Private endpoint feature is only 
available in Premium service tier.
Let’s follow steps to configure private link for container registry:
	
1.	 Login to Azure portal and go to the container registry which you want to 
connect with private link.
	
2.	 In container registry, go to Networking under the Settings section.
	
3.	 In the Networking page, you will see two options for limit the access on 
container registry. Click on Private endpoint and then + Private endpoint. 
It will open a new window.
	
4.	 In new window, you will see few tabs to fill the information. In the Basic tab, 
fill subscription name, resource group name, private endpoint name, and 
location.
	
5.	 In next Resource tab, you will be asked to fill details about target resource 
which you want to connect with private endpoint:

Configuring Container Security      381
Figure 6.12: Select target resource for private endpoint
	
	
As shown in the preceding figure, you can select the target resource from 
your owned directory or other directory by using resource ID. Since I am 
connecting to the registry in my directory, so I am choosing first option. With 
that option, now select the subscription, resource type, and resource from 
the drop-down.
	
6.	 Now move to the next tab, there you need to select the network where you 
want to deploy your private endpoint:
Figure 6.13: Select network to deploy private endpoint

382      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding figure, you need to select the virtual network and 
subnet to deploy private endpoint. Your container registry endpoint will get 
IP from this subnet range.
	
	
On same tab, you can select option for DNS configuration also. You can 
create private DNS zone for name resolution. Now you can click on Create.
	
7.	 Once the deployment is completed, go back to the Networking section and 
then to Private endpoint:
Figure 6.14: Status of private endpoint connection
	
	
As shown in the preceding figure, the private endpoint connection has been 
approved and established.
	
8.	 Now to know about the private IPs assigned by private endpoint, you can 
either search it in Azure portal or can go directly by clicking on the link 
provided in the preceding figure:
Figure 6.15: Private IPs assigned by private endpoint

Configuring Container Security      383
	
	
As shown in the preceding figure, our container registry got three private 
IPs from the subnet range which we selected. We connect to registry through 
assigned private IPs or FQDN.
	
9.	 In addition to setting up this private endpoint, you can disable public access 
on this registry. This will completely isolate your registry from outside 
internet. To restrict public access, go to Public access under Networking:
Figure 6.16: Disable public access on container registry
	
	
As shown in the preceding figure, there are three options to restrict public 
access. Either you can allow unrestricted access from all networks, this 
includes all public and private networks, else you can just allow access from 
selected networks, this includes access from selected public IP, or IP ranges, 
you can put your on-premises network range also, else you can disable 
complete access over the public network.
	
	
In both the scenarios, All networks and Selected networks, the request goes 
over the internet to registry. Your source machine or service which is trying 
to reach the registry will require internet access. But by setting up private 
endpoint you can restrict this traffic over private network.
	
	
Any virtual machine or service which can access to this subnet can reach 
to the registry over private IP. You can test this connectivity by creating a 
virtual machine in your network and access the registry over private IP.
Accessing registry from selected public network
Now in this section, we will see how to allow access from selected IP or IP range. 
This will help you to allow registry access only from trusted network. For this follow 
these steps:
	
1.	 Login to Azure portal and go to the container registry. As shown in Figure 
6.16, go to Public access under Networking and select Selected networks.
	
2.	 Here you can put the public IP of your virtual machine or on-premises 
gateway:

384      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 6.17: Allow access to container registry from trusted IPs
	
	
As shown in the preceding figure, put a range of on-premises public IP or a IP. 
You can allow your current machine’s public IP also by selecting the check box.
	
3.	 Click on Save to enable this setting.
Now after selecting IP address to allow traffic, you will be able to access container 
registry only from these IPs.
Securing data protection in container registry
In coming few sections, we will see how you can secure image and artifacts in 
container registry. This helps you meet your organization compliance policies for 
data protection.
Encryption of container registry
Images and other artifacts in an Azure Container Registry are always encrypted at 
rest with  service-managed keys. You can additionally encrypt container registry 
with your custom managed key, created, and managed in Azure Key Vault. This 
feature is available in the Premium container registry service tier. For now, you can 
enable encryption only while creation of container registry and you cannot disable 
customer managed key encryption once you have enabled it.
For customer managed key encryption, you require an Azure Key Vault to store 
encryption key. We will study in deep about Azure Key Vault in coming chapters. 
Along with encryption key, you also require managed identity. Managed identity 
helps your container registry to access Key Vault securely. Let’s follow these steps to 
encrypt container registry.

Configuring Container Security      385
Create managed identity
Let’s understand managed identity in brief, it is a feature of Azure AD. Through 
managed identities, you can authenticate to any Azure service that supports Azure 
AD authentication. This eliminates the need to credentials in your code. Managed 
identities feature is free with Azure AD and there is no additional cost.
There are two types of managed identities:
	
•	
System-assigned managed identity: System assigned managed identity is 
enabled directly on an Azure service instance. When you enable this identity, 
Azure creates an identity for the instance in the Azure AD tenant. This identity 
is then trusted by the subscription of the instance. This process provisions 
the credentials onto the instance. The life cycle of a system-assigned identity 
is tied to the Azure service instance that it is enabled on. If you delete the 
instance, the credentials and the identity will also be deleted automatically 
in Azure AD.
	
•	
User-assigned managed identity: User assigned managed identity is created 
as a standalone Azure resource. For user assigned managed identity, Azure 
creates an identity in the Azure AD tenant that is trusted by the subscription. 
Once you created a managed identity, you can assign it to one or more Azure 
service instances. The life cycle of a user-assigned identity is independent 
from the life cycle of the Azure service instances to which it is assigned.
Let’s follow these steps to create a user assigned managed identity:
	
1.	 Login in to Azure portal and search for managed identities. Click on + Add 
to create new managed identity:
Figure 6.18: Create user assigned managed identity for container registry

386      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding figure, fill the basic details related to subscription, 
resources group, and location. Click on Create.
Once the deployment is completed, you will get a managed identity. Now you can 
attach this managed identity to any supported your Azure service. We will attach 
this managed identity with our container registry.
Create Azure Key Vault
Although we will study about Azure Key Vault in detail in coming chapter, but here 
we will understand this in brief for container registry encryption purpose:
	
1.	 Login to Azure portal and search for key vaults. Click on + Add to create new 
key vault.
	
2.	 In Basics tab, fill the details about subscription, resources group, and location. 
Standard pricing tier is enough for this demo. But you can go for Premium 
also.
	
3.	 In the Access policy tab, click on + Add access policy. It will open a new 
blade to give permissions to a service principal:
Figure 6.19: Create access policy in Azure Key vault for managed identity
	
	
As shown in the preceding figure, select Get, Unwrap key, and Wrap key¸ 
from the Key permissions drop-down. In the Select principal section, select 
the managed identity which we created in last section.

Configuring Container Security      387
	
4.	 Leave the rest of the settings as default and click on Create.
	
5.	 Now we need to create a key in this key vault. For this go to Keys under the 
Settings section.
	
6.	 Click on Generate/Import to create a new key. It will open a new blade to fill 
the details about key:
Figure 6.20: Create key in Azure Key Vault
	
	
As shown in the preceding figure, give a name to the key and click on Create.
Now, we have both the prerequisites managed identity and Key Vault in place for 
container registry encryption.
Creating container registry with encryption
Now to create a container registry with encryption let’s follow these steps. We 
already have seen the steps to deploy container registry without encryption. You 
can follow those steps which we discussed in the Create container registry section. 
Here we need to choose Premium SKU for encryption.
Here, the Encryption tab important for customer-managed encryption. In the 
Encryption tab, you need to give details about managed identity and encryption 
key:

388      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 6.21: Enable encryption for container registry
As shown in the preceding figure, select the managed identity which you created 
in the previous section. Here you are attaching the managed identity with your 
container registry. After this attachment, your container registry will be able to use 
this managed identity for authentication to key vault.
In key vault, select the key vault, key, and version of key for encryption. Click on 
Create:
Figure 6.22: Encryption status for container registry
As shown in the preceding figure, to check the encryption status of container 
registry, go to the Encryption section of your container registry.

Configuring Container Security      389
In this section, we saw the process to encrypt your container registry. After this now, 
you are able to encrypt your container registry, images, and artifacts.
Content trust in Azure Container Registry
Being a security administrator, it is important that you verify both the source and 
the integrity of data entering to the system. Consumers of the data need to be able 
to verify both the publisher (source) of the data, as well as ensure it is not been 
modified after it was published (integrity).
While pushing the images into your registry, you can sign them with content trust. 
This sign assures the trust of integrity and also verifies the source. People or system 
can be the consumers of your images. They can configure their Docker clients to 
pull only signed or trusted images. Content trust helps consumers to assure that the 
signed images in the registry were indeed published by you, and that they have not 
been modified since being published.
You need to enable content trust in container registry. Once you enable content trust, 
clients (users or services) can push signed images to your registry. Enabling content 
trust on your registry does not restrict you to use registry only with trusted, signed, 
or tagged content. Consumers without content trust enabled can continue to use 
your registry as normal. Consumers who have enabled content trust in their clients, 
will be able to see only signed images in your registry. To enable content trust for 
your registry, let’s follow these simple steps:
	
1.	 Login to Azure portal and go to your container registry. In your registry 
select Content trust under the Policies section:
Figure 6.23: Enable Content trust in the container registry
	
2.	 As shown in the preceding figure, click on Enabled and save it.
	
	
Content trust feature is not supported in encryption-enabled 
container registry.

390      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
To work with trusted images, both image publishers and consumers need to enable 
content trust for their Docker clients. As a publisher, you can sign the images you 
push to a content trust-enabled registry. As a consumer, enabling content trust limits 
your view of a registry to signed images only. By default, content trust is disabled 
in Docker clients, but you can enable it. Only the users or systems you have granted 
permission can push trusted images to your registry.
Vulnerability scan for Azure Container Registry
Azure Container Registry (ACR) is a private Docker registry service that stores 
and manages your container images and artifacts. To do vulnerability scan on your 
container registry, you need to enable Azure Defender for container registry in Azure 
Security Center. You can use Qualys to scan your environment. Connecting with 
Azure Security Center brings deeper visibility into the vulnerabilities of the images. 
Enabling Security Center ensures that Security Center is ready to scan images that get 
pushed to the registry. Whenever an image is pushed to your registry, Security Center 
automatically scans that image. You will see Security Center recommendations and 
get notified when the scan completes. It also gives the severity of the vulnerability 
and remediation plan for that.
Enabling monitoring for container registry
In this chapter, we will see how to collect log data for an Azure Container Registry. 
Azure Monitor collects diagnostic logs for user-driven events in your registry. You 
can collect logs for the following listed activities:
	
•	
Image Push: This event is been generated when you push any image to the 
repository.
	
•	
Image Pull: This event is been generated when you pull any image from the 
repository.
	
•	
Image Untag: This event is been generated when you untag a tagged image.
	
•	
Delete (including repository delete events): This event is been generated 
when you delete any item from the repository.
	
•	
Purge tag and Purge manifest: This event is been generated when you purge 
any tag or manifest from any of the item in repository.
Diagnostic logs contain information emitted by Azure resources that describe their 
internal operation. For an Azure Container Registry, the logs contain authentication 
and repository-level events stored in the following tables:
	
•	
ContainerRegistryLoginEvents: Registry authentication events and status, 
including the incoming identity, and IP address.

Configuring Container Security      391
	
•	
ContainerRegistryRepositoryEvents: Operations such as push and pull for 
images and other artifacts in registry repositories.
	
•	
AzureMetrics: Container registry metrics such as aggregated push and pull 
counts.
In addition to performance-based diagnostic logs, you can also store activity logs 
such as the creation or deletion of a container registry. These logs can be archived 
into Azure Storage for future analysis.
Creating Log Analytics workspace
We will study about Log Analytics workspace in detail in the coming chapter. Log 
Analytics workspace is used to collect diagnostic logs, performance metrics, activity 
logs at centralized analytics location:
	
1.	 Login to Azure portal, search for Log Analytics workspaces and click on + 
Add to create a new workspace:
Figure 6.24: Basic details to deploy Log Analytics workspace
	
2.	 As shown in the preceding figure, fill basic details about your Log Analytics 
workspace and click on Create.
We will use this Log Analytics workspace to analyze diagnostic logs, performance 
metrics, and activity logs of our container registry.

392      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Enable collection of diagnostic logs
Collection of diagnostic logs for a container registry isn’t enabled by default. You 
need to explicitly enable diagnostic settings for each registry you want to monitor:
	
1.	 Login in to Azure portal and go to your container registry.
	
2.	 Click on Diagnostic settings under the Monitoring section:
Figure 6.25: Diagnostics settings dashboard in container registry
	
	
The preceding figure shows default dashboard of diagnostic settings.
	
3.	 Click + Add diagnostic setting to enable collection. It will open a new 
window to select logs and metrics which you want to monitor:
Figure 6.26: Enable Diagnostics collection to Log Analytics workspace

Configuring Container Security      393
	
4.	 As shown in the preceding figure, in Category details, select the logs and 
metrics you want to monitor, in Destination details, select Log Analytics 
workspace where you want to push the logs. Here I am selecting the 
workspace which we created in last section. Click on Save.
In this section we saw how to create prerequisites services to store logs and how to 
enable logs collection for container registry.
Configuring security for different types of 
containers
In one of the preceding sections, we studied about the security best practice for 
Azure Container Registry. In this section, we will study how to use Azure Security 
Center to secure your containerized environment. Azure Security Center provides 
security bast practices and services for your AKS clusters, container hosts running 
on virtual machines and Azure Container Registries.
In this section, we will see how you can use Azure Security Center to secure your 
containerized environment:
	
•	
Vulnerability scan: You can use Qualys in Azure Security Center to scan 
the images in ACR. To enable vulnerability scan you need to enable Azure 
Defender for container registry in Azure Security Center.
	
•	
Continues monitoring of AKS cluster by security center: When you 
integrate your AKS cluster with Azure Security Center, Azure Security Center 
continuously monitors your AKS cluster and gives recommendations. Azure 
Security Center can collect audit logs, security events from log analytics 
agents, AKS cluster configuration details, and workload configuration from 
Azure Policy add-on for Kubernetes.
	
•	
Enable Kubernetes admission control: You can install Azure Policy add-on 
for Kubernetes to get a good range of recommendations about your AKS 
cluster. This add-on scans every request on the AKS cluster against the 
predefined set of best practices and gives recommendations. You can enforce 
these recommendations and make mandatory for future workloads.
	
•	
Host level run time protection by Azure Defender: Azure Defender can 
monitor suspicious activities on your Linux AKS with the log analytics 
agents which security center uses on other Azure VMs. This gives the host 
level of threat protection.
	
•	
AKS cluster level run time protection by Azure Defender: This service is 
provided by Azure Defender for Kubernetes. Azure Defender collects logs 

394      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
from Kubernetes cluster and analyze them. For this, you need to enable Azure 
Defender in Security Center for Kubernetes services. This gives cluster level 
of threat protection.
Azure Kubernetes Services
Kubernetes is an open-source system. This helps you in automating the deployments, 
scaling, and management of containerized applications. AKS is an Azure offering to 
manage Kubernetes on Azure platform.
We will not go in deep to learn about AKS functionality, deployment, management, 
and configuration in this chapter. We will focus on how to secure your AKS cluster.
Configuring authentication for AKS cluster
In the previous section, we studied that Azure Container Registry has many ways 
to authenticate. In this section, we will study about the authentication ways for AKS 
cluster. AKS supports Kubernetes RBAC, Azure RBAC, Azure AD for secure and 
granular authentication process:
	
•	
AKS cluster access control through Azure RBAC: You already know what 
is Azure RBAC. You can control access on your AKS cluster through Azure 
RBAC roles. There are many built-in RBAC roles to grant access over AKS 
cluster. You can also create custom RBAC roles if you need additional roles 
to control access over AKS cluster.
• 
Azure AD integration for AKS cluster: You can improve your AKS cluster 
security by integrating AKS cluster with Azure AD. A user can authenti­
cate himself with Azure AD to get access on AKS cluster.
• 
AKS cluster access control through Kubernetes RBAC: AKS cluster uses 
Kubernetes RBAC roles to provide granular access to users. These roles 
also can be assigned to users or groups. You can scope these roles to a 
single namespace or entire AKS cluster. AKS RBAC roles do not have any 
deny permission. So, you just have an option to grant permission or not to 
grant.
Cluster isolation in AKS cluster
Being a security administrator, you need to plan that you keep AKS clusters isolated 
wherever it is required. The isolation requirement can be due to running multiple 
customers or applications on the same AKS cluster. This isolation feature helps you 
to run multi-tenant environment on your AKS cluster.

Configuring Container Security      395
A  namespace  in Kubernetes creates a logical isolation boundary. The goal of 
isolation is to minimize the requirement of physical AKS clusters to isolate teams 
or applications. With logical isolation, a single AKS cluster can be used for multiple 
workloads, teams, or environments.  Kubernetes  namespaces  form the logical 
isolation boundary for workloads and resources:
Figure 6.27: Logical Isolation of nodes in AKS cluster
As shown in the preceding diagram, a cluster of four node has multiple pods. These 
pods are divided among different teams.
Logical separation of clusters usually provides a higher pod density than physically 
isolated clusters. It also saves the wastage of computing capacity by sitting idle. You 
combine it with Kubernetes autoscaling feature to meet the requirement of a number 
of nodes. With autoscaling the number of nodes can go up and down based on the 
requirement. Autoscaling helps you to run only required number of nodes and to 
minimizes the cost.
You may have different customers who are market competitors of each other they 
would not want you to put their AKS clusters on the same nodes. For them, you 
will have to provide them physical isolation. In physical isolation, you provide 
separate and dedicated clusters and nodes to each client, team, and application. This 
approach looks the easiest way to provide isolation among the clusters, but it also 
increases management and financial overhead:

396      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Figure 6.28: Physical Isolation of nodes in AKS cluster
As shown in the preceding diagram, we had to create multiple clusters for different 
teams. In this scenario, mostly we over-provision the resources and do not use the 
full capacity of provisioned infrastructure. Due to this physical isolation, the un-
used resources of one cluster cannot be used by another team.
Security best practices for AKS cluster
Now let’s have a look on some security best practices for AKS cluster. These security 
best practices are divided among networking, data protection, monitoring, access 
control, and so on. Let’s take them one by one.
Networking best practices
In this section, we will see what Azure services you can use to secure your AKS 
cluster networking:
	
•	
Use Azure CNI-based networking to control network traffic flow.
	
•	
You can enable network security group flow logs and send the logs to an 
Azure Storage account for auditing. You can also send the flow logs to a Log 
Analytics workspace and then use Traffic Analytics to provide insights into 

Configuring Container Security      397
traffic patterns in your Azure cloud to visualize network activity.
	
•	
You can use Azure Application Gateway with Web Application Firewall 
(WAF) in front of an AKS cluster to provide an additional layer of security 
by filtering the incoming traffic to your web applications.
	
•	
You can enable standard distributed denial-of-service (DDoS) protection 
on the virtual networks where AKS components are deployed for protections 
against DDoS attacks.
	
•	
Enable network watcher packet capture to investigate anomalous network 
activities.
	
•	
Enable application gateway with WAF on your AKS cluster to have IPS/IDS 
capabilities.
	
•	
Allow only HTTPS ingress in Kubernetes cluster.
	
•	
Allow traffic only from authorized IP ranges on Kubernetes services.
	
•	
Secure access to the API server using authorized IP address ranges in AKS.
Logging and monitoring best practices
In this section, we will see logs and monitoring related best practices for AKS cluster:
	
•	
Enable audit logs on Azure Kubernetes service.
	
•	
Install Log Analytics agents to collect data from the AKS cluster nodes.
	
•	
Archive security logs in Azure storage account.
	
•	
Enable diagnostic settings on AKS cluster.
	
•	
Integrate your AKS cluster with Security Center and configure alerts for 
anomalous activities.
	
•	
Install and enable Microsoft anti-malware for Azure to AKS.
Identity and access management best practices
In this section, we will study how to grant granular access to your AKS cluster:
	
•	
Maintain an inventory for access management and keep the record that who 
has what access.
	
•	
Use Azure RBAC, Kubernetes RBAC, and Azure AD to provide access to 
AKS cluster.
	
•	
Enable SSO for AKS with Azure AD integrated authentication for an AKS 
cluster.
	
•	
Integrate AKS authentication with Azure AD and enable Azure AD MFA.

398      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Use Azure RBAC to define access to the Kubernetes configuration file in 
AKS.
Data protection best practices
In this section, we will study best practices about data protection in AKS:
	
•	
Do data classification based on sensitivity.
	
•	
Logically or physically isolate your AKS environment containing sensitive 
data.
	
•	
Create an HTTPS ingress controller and use your own TLS certificates for 
your AKS deployments.
	
•	
Encrypt data at rest with customer managed key.
Vulnerability management best practices
In this section, we will study the best practices about vulnerability management:
	
•	
Use Azure Security Center for vulnerability scan your AKS and compare 
consecutive scans to check that you are not getting the same vulnerabilities 
after remediating them.
	
•	
Enable automatic OS patch management on AKS cluster nodes.
	
•	
Enable automatic patch management for third party software running on the 
nodes.
	
•	
Use a strong antimalware solution.
	
•	
Ensure antimalware solutions and signatures are up to date.
Inventory and asset management
In this section, we will study that how to keep the records of your assets:
	
•	
Use Azure Resource Graph to query/discover all resources within your 
subscriptions.
	
•	
Apply tags to Azure resources to get the knowledge like who, when, and 
why created this resource.
	
•	
Define a list of approved Azure resources/services and approved software 
based on organizational business needs.
	
•	
Physically or logically isolate critical application clusters.

Configuring Container Security      399
Conclusion
In this chapter, you learnt ways to secure Azure Container Services, Azure Container 
Registries, and Azure Kubernetes clusters. After this chapter, you are now able to 
take proper measurements to secure containers in your environment. You are now 
able to take decision how to securely allow traffic to containers, how to securely 
push and pull images from container registry. You also understand security the best 
practices about AKS clusters.
In the next chapter, we will learn the monitoring offerings from Azure. These 
monitoring offerings help you take proactive decisions to prevent any failure or 
outage in your environment. We will also study about Azure Security Center in 
detail.
Multiple choice questions
	
1.	 Private networking is supported by:
	
	
A.	 Windows containers.
	
	
B.	 Linux containers.
	
	
C.	 Windows and Linux both.
	
	
D.	 None of these.
	
	
Answer: B
	
2.	 Among the followings, which is the correct option for the isolation of 
containers in Azure?
	
	
A.	 Process isolation.
	
	
B.	 Hyper-V isolation.
	
	
C.	 Both of the above.
	
	
D.	 None of these.
	
	
Answer: C
	
3.	 Content trust feature is not supported for?
	
	
A.	 Encrypted container registry.
	
	
B.	 Windows containers.
	
	
C.	 Linux containers.
	
	
D.	 Publicly accessible containers.
	
	
Answer: A

400      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
4.	 Which Azure service you will use to archive diagnostics/resource logs of 
your container registry?
	
	
A.	 Azure Log Analytics workspace.
	
	
B.	 Azure Event Hub.
	
	
C.	 Azure Monitor.
	
	
D.	 Azure Storage.
	
	
Answer: D

Chapter 7
Monitoring Security 
by Using Azure 
Monitor
In this chapter, we will get through various monitoring services in Azure. Monitoring 
of infrastructure and application is very important service to take proactive decisions 
to prevent unwanted break downs. This chapter will include setting up monitoring of 
Azure resources and services, capturing the different logs and diagnostic parameters, 
passing these logs to alert generator. After this chapter, you will be able to setup a 
monitoring setup for your infrastructure including on-premises and Azure.
By the end of this chapter, you will be able to decide best monitoring configuration 
and alerting system for your environment. The monitoring setup will help to 
proactively take action on any potential outage.
Structure
In this chapter, we will learn about following topics:
	
•	
Type of logs in Azure
	
•	
Configure diagnostics logging
	
•	
Log retention management

402      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Azure Monitor
	
•	
Alerts in Azure
	
•	
Create and customize alerts
Objectives
The objective of this chapter is to learn about monitoring, logging, and alert generating 
services in Azure. After reading this chapter, you should be able to collect logs for 
Azure resources and set up a proactive Azure Monitoring tool. You will also be able 
to create custom alerts, alert based on metric, activity logs. By the end of this chapter, 
you will also be able to configure diagnostic logs collection for security monitoring.
Type of logs in Azure
Proactive monitoring is always an important parameter for any of the organization. 
There are multiple third-party monitoring tools as well as Microsoft native Azure 
Monitor to monitor the activity, performance, and any proactive outage. Most of the 
monitoring tools work on the same background architecture. The monitoring tools 
collects logs from the resources and analyses the logs. Based on the analysis and 
data pattern learning they make proactive predictions. Apart from the predictions, 
monitoring tools also show real time health and activities on the resources.
In Azure, there are different kind of logs generated by resources. You can feed these 
logs into any monitoring tool to do the analysis. You can divide Azure logs broadly 
three categories:
	
•	
Performance/platform matrices: This kind of logs provide telemetry data 
from the resources. These are numeric values about the performance of 
your resources. There are different kind of matrices generated by different 
Azure resources. For an example, Azure VM has CPU, disk, network-related 
matrices whereas database has DTU, IOPS related matrices.
	
•	
Resource logs: This kind of logs provide information related to operations 
performed within an Azure resource. For an example, initiation of backup in 
backup vault.
	
•	
Activity logs: This kind of logs provide insight into the operations on each 
Azure resource. For an example, creation, deletion, modification on any of 
the Azure resource. When you create, start or delete any virtual machine, 
there will be an activity log created for each activity.

Monitoring Security by Using Azure Monitor      403
In the coming sections, we will see how to configure and use these logs for analysis. 
With the help of proactive analysis, you can prevent any potential outage into your 
environment.
Configure diagnostic logging
Azure activity log and resource logs provide detailed diagnostic and auditing 
information for Azure resources and the Azure platform they depend on. In this 
section, you will go through creating and configuring diagnostic settings to send 
logs to different destinations.
Each Azure resource requires its own diagnostic setting. Each Azure resource type 
has different categories of logs and metrics data. You can send this data different 
destinations. Currently, Azure has Log Analytics workspace, Event Hub, and 
storage as destinations for data. Each diagnostic setting is combination of categories 
of data and destination. In one diagnostic setting, you can select multiple available 
categories of data and multiple destination. Each resource can have maximum five 
diagnostic settings.
Choose the proper destination
As said in the preceding section, Azure provides three destinations to send logs data. 
But how to decide that which one should be opted and when. Let’s try to understand 
this:
	
•	
Log Analytics workspace: Collecting logs into a Log Analytics workspace 
allows you to analyze them with other monitoring data collected by Azure 
Monitor and to leverage other Azure Monitor features such as alerts and 
visualizations.
	
•	
Event Hub: Sending logs to Event Hubs allows you to stream data to external 
systems such as third-party SIEMs and other log analytics solutions.
	
•	
Azure storage account: Archiving logs to an Azure storage account is useful 
for audit, static analysis, or backup.
Based on the source of logs, retention period, analysis requirement, and strategy you 
can choose the target of log data. In the coming sections, we will use some of them 
to store and to do analysis of log data.

404      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Configure diagnostic settings in Azure portal
There are two ways to create diagnostic setting for a resource, either from the menu 
of the resource or from the menu of Azure Monitor. It depends on Azure resource 
that from where you configure the diagnostic settings.
Configuring diagnostic from Azure resource menu
You choose this way when you want to enable diagnostic setting on a particular 
resource. Let’s go through these steps to configure diagnostic setting from Azure 
resource menu:
	
1.	 Login to Azure portal and search for the resource for which you want to 
create diagnostic setting.
	
2.	 Go to Diagnostic settings under the Monitoring section:
Figure 7.1: Configure diagnostic settings
	
	
The preceding figure shows the default dashboard of Diagnostic settings 
of your virtual machine. It shows that diagnostic setting is not configured 
for the VM. It shows the respective diagnostic settings once you enable and 
configure them.
	
3.	 Depending upon the type of resource you will see different types of log 
categories. I choose a virtual machine. For a virtual machine, you can enable 
performance counters, logs, and crash dumps collection.
	
4.	 Go to the respective section to configure logs and metrics. When you go to 
the Performance counter section you can choose None, Basic, or Custom 
counters. Basic counters have a small list of counters, whereas custom 
counters have a long of counters. In Custom counters, you can create your 
own counters as well:

Monitoring Security by Using Azure Monitor      405
Figure 7.2: VM custom performance counters
	
	
As shown in the preceding figure, you can select the required counters for 
monitoring and also can set the sample rate duration in seconds.
	
5.	 In the next tab, you can configure the type of event logs to collect from the 
virtual machine. You can select Application, Security, and System logs. You 
can collect IIS and your .NET application logs also:
Figure 7.3: VM event logs collection

406      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
As shown in the preceding figure, we are selecting Critical, Error, and 
Warning event logs for Application and System events. We are pushing the 
IIS logs and failed request logs into storage containers. As we discussed in 
previous section, storage account is used to archive the logs. You can retrieve 
these logs in future if required.
	
6.	 In next section, you can configure collection of crash dump. You may 
probably know; crash dumps can help you to analyze the cause of operating 
system crash. Most of the time the Blue Screen of Death (BSOD) issues in 
Windows servers are being resolved with the help of crash dump:
Figure 7.4: VM crash dump collection configuration
	
	
As shown in the preceding figure, you can enable the Mini or Full crash 
dump collection to a storage account. Mini crash dump just has information 
about operating system related things, but full crash dump collects details 
about all installed applications also.
	
7.	 In the next Sinks section, you can configure, if you want to send VM log data 
to Azure Monitor and application insight for analysis:

Monitoring Security by Using Azure Monitor      407
Figure 7.5: Sink logs data to Azure Monitor
	
8.	 In the last Agent tab, you can see the status of diagnostic agent. Diagnostic 
agent is responsible to collect the logs and metrics from the VM. The 
diagnostic agent should be installed, updated, and healthy for proper log 
collection:
Figure 7.6: Diagnostics agent status

408      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
You can configure the storage account where to push the diagnostic logs, 
dedicated space on disk to store logs data on local machine and log level 
which you want to monitor.
	
9.	 Similarly, if you go to any other resource, you may see different category of 
logs and metrics.
	
10.	 For another example, if I go to a virtual network, I will see a different list of 
available metrics:
Figure 7.7: Diagnostics counters for virtual networks
	
	
In the preceding figure, we are trying to configure diagnostic logs for Azure 
Virtual Network (VNet).
	
11.	 Click on + Add diagnostic setting to configure diagnostic settings. When 
you click on this a new window will open to take inputs:
Figure 7.8: Enable diagnostics settings for virtual network

Monitoring Security by Using Azure Monitor      409
	
	
As shown in the preceding figure, give a name to this diagnostic setting. 
Select the log categories from the Category details section. You can select 
multiple log categories as per your business requirement. On the right side, 
you can select the destination to store the logs. You can send these logs 
to multiple destinations. We are configuring setting to send logs to Log 
Analytics workspace for live analysis and also archiving logs into a storage 
account for future.
	
	
When you choose archival of logs in storage, you need to provide the log 
retention period also. It can be from 1 to 365 days. If you want to retain log 
data forever, then set the retention value to 0. Once you have configured the 
collection setting, you can click on Save to bring this in effect.
In this section, we saw how to enable diagnostic settings for different Azure 
resources. We also saw how to send the diagnostic logs to Log Analytics workspace 
and archive them into Azure storage.
Configure diagnostic logs from Azure Monitor
In the previous section, we saw how you can enable diagnostic setting directly from 
the Azure resource. But you can enable diagnostic setting from Azure Monitor also. 
You choose this method when you want to check the current status of diagnostic 
setting for multiple resources and then want to enable diagnostic setting for multiple 
resources:
	
1.	 Login to Azure portal and go to Azure Monitor by searching Monitor.
	
2.	 In Azure Monitor, go to Diagnostic settings under the Settings section:
Figure 7.9: Configure diagnostic settings from Azure Monitor
	
	
As shown in the preceding figure, you scan filter the desired resources 
by applying filter on Subscription, Resource group, Resource type, and 

410      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
resource. It will show you the filtered resources and their diagnostic setting 
status. You can click on Disabled to enable and configure diagnostic setting 
for a resource.
	
3.	 When you click Disabled to enable and configure diagnostic setting, a new 
will open as we seen in the last section:
Figure 7.10: Enable diagnostic settings from Azure Monitor
	
	
Here also you can choose the logs from the list of available categories and 
the destination. Click on Save to bring this setting in effect. You can enable 
setting for other resources also by following these steps.
	
4.	 You can see the update status of diagnostic setting for your resource. When 
a diagnostic setting is been enabled, the status will change to Enabled:
Figure 7.11: Updated status of diagnostic settings
	
5.	 You can edit or add another diagnostic setting to same resource by clicking 
on Enabled. Once you click in Enabled, a new window will open. There 

Monitoring Security by Using Azure Monitor      411
you can see the exiting diagnostic settings. You can edit those settings by 
clicking Edit setting and you can add another new setting also by clicking + 
Add diagnostic setting. You can add up to five diagnostic settings only to a 
resource:
Figure 7.12: Edit or add diagnostic settings
In this section, we saw how to enable diagnostic log collection for Azure resources 
from Azure Monitor. The advantage of diagnostic log collection from Azure Monitor 
is that you can control the diagnostic log collection centrally. You can enable and 
disable diagnostic logs for Azure resources directly from Azure Monitor and you 
will not need to jump from resource to another.
Log retention management
When you configure your resources to send their performance and other log data 
to Log Analytics workspace then you may also want to decide how long and how 
much log data will remain in the workspace. The duration and quantity of data 
directly affects the cost.
Control log retention period
Longer you keep the data in workspace more you pay. You can set retention period 
from 30 to 730 days. Let’s follow these steps to set log retention period:
	
1.	 Login to Azure portal and go to the Log Analytics workspace where you are 
pushing log data.
	
2.	 In Log Analytics workspace, go to Usage and estimated costs under the 
General section:

412      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
Figure 7.13: See log retention settings
	
3.	 Click on the Data Retention option to set the period. After click, a new blade 
will open to take the input:
 
Figure 7.14: Set log retention duration
You can move the slider or can enter the number of days in the text box. The 
maximum value can be 730.
Here we saw how to set up log retention duration in Log Analytics workspace. The 
log retention duration is an important factor because it decided the pricing of your 
Log Analytics workspace. Longer the retention period higher the price.
Control log collection quantity
You can configure the limit to collect data into the workspace. You can set daily 
cap to limit the ingress of data logs. Daily cap helps you to manage the unexpected 

Monitoring Security by Using Azure Monitor      413
increase in data volume from your resources and stay within your limit. With this 
limit you can control your unplanned charges for your workspace. The collection of 
billable data types stops for the rest of the day once you reach to your daily limit. 
You can setup alert to notify when the daily data limit has been reached:
	
1.	 Login to Azure portal and go to the Log Analytics workspace where you are 
pushing log data.
	
2.	 In Log Analytics workspace, go to Usage and estimated costs under the 
General section:
Figure 7.15: Set log retention period
	
3.	 Click on the Daily cap option to set the period. After click, a new blade will 
open to take the input:
Figure 7.16: Set daily cap for log data collection

414      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
By default, the daily cap is OFF, click on ON to setup the daily cap. You need 
to put the data limit in text box and click on OK.
In the previous section, we saw the cap on retention duration and in this section, we 
saw the cap on log size. In this section, we understood the way to control the amount 
of log collection in Log Analytics workspace. Similar to retention period, higher the 
log data higher the log analytics workspace price.
Azure Monitor
Azure Monitor is Azure native tool for monitoring Azure resources. It has wide 
capabilities to monitor, analysis, and alerting. It can connect with any kind of 
Azure or non-Azure resource to collect logs. With the help of Azure Monitor, you 
can significantly increase the availability and performance of your applications and 
background infrastructure by doing proactive monitoring. It helps you understand 
how your applications and infrastructure components are performing and 
proactively identifies issues affecting them and the resources they depend on.
The following are the few examples of what you can do with Azure Monitor:
 
• 
Detect and diagnose issues across applications and dependencies 
with application insights.
 
• 
Correlate infrastructure issues with  Azure Monitor for VMs  and  Azure 
Monitor for containers.
 
• 
Drill into your monitoring data with Log Analytics for troubleshooting and 
deep diagnostics.
 
• 
Support operations at scale with smart alerts and automated actions.
 
• 
Create visualizations with Azure dashboards and workbooks.
Let’s understand more concepts of Azure Monitor.
Overview
Monitoring is the act of collecting and analyzing data to determine the performance, 
health, and availability of your business application and the resources it depends on. 
An effective monitoring strategy will help you understand the detailed operation 
of the different components of your application and to increase your uptime by 
proactively notifying you of critical issues so that you can resolve them before 
they become problems. Monitoring in Azure is primarily provided by  Azure 
Monitor which provides common stores for storing monitoring data, multiple data 
sources for collecting data from the different tiers supporting your application, and 
features for analyzing and responding to collected data.

Monitoring Security by Using Azure Monitor      415
Azure Monitor is the unified monitoring solution in Azure that provides full-stack 
observability across applications and infrastructure in the cloud and on-premises. It 
works seamlessly with Visual Studio and Visual Studio Code during development 
and test and integrates with Azure DevOps for release management and work item 
management during deployment and operations. It even integrates across the ITSM 
and SIEM tools of your choice to help track issues and incidents within your existing 
IT processes.
Monitoring data sources
Azure Monitor uses basic data types such as logs and metrics. You can collect data 
into Azure Monitor from multiple Azure resources. By collecting data into Azure 
Monitor, you can do various analysis on it to take some business decision such 
as capacity planning, risk management, proactive monitoring, and so on. In this 
section, we will discuss about different monitoring data sources:
 
•	
Azure tenant: Azure AD is the service which is common for all resources in 
Azure tenant. Azure Monitor collects Azure AD audit logs. The audit logs 
contain the history of sign-in activity and audit trail of changes made within 
a particular tenant.
 
•	
Azure subscription: At subscription level, Azure Monitor collects two types 
of logs: Azure Activity Logs, and Azure Service Health. The Azure Activity 
Log includes service health records along with records on any configuration 
changes made to the resources in your Azure subscription. Azure Service 
Health provides information about the health of the Azure services in your 
subscription that your application and resources rely on. Activity logs 
provide information about external operations.
 
•	
Azure resources: Azure resources also produce two types of logs: platform 
metrics and resource logs. They provide information about internal 
operations. Platform metrics show internal performance of resources. Resource 
logs provide information about internal operation of an Azure resource.
 
•	
Guest operating system: This kind of logs are being collected by compute 
resources. Azure Monitor can collect guest operating system logs from any 
Azure or non-Azure compute resource. To collect such logs, you need to 
install agents on compute resources. The agent can gather telemetry from 
the guest into Azure Monitor to analyze it.
 
•	
Application code: Azure Monitor can monitor till application code level. 
Application insight is a service in Azure Monitor which can investigate till 
code level of your application. You can integrate application insight with any 
kind of application running on Azure or non-Azure platform.

416      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
 
•	
Custom sources: You can collect logs data from other third-party sources. 
Such as non-Azure resources or third-party monitoring tools. You can collect 
data from Azure Security Center and Azure Sentinel also.
We saw the different types of data sources for Azure Monitor. As described, you can 
push logs and performance metrics data from multiple resource and different types 
of resources. Azure Monitor is a next generation monitoring tool which can integrate 
with different type of sources.
Insights in Azure Monitor
Azure Monitor provides monitoring insight about the multiple Azure and non-
Azure resources. You can see the available monitoring insights features in Azure 
Monitor under the Insights section. As per current offering you can monitor the 
following Azure resources and services:
 
•	
Applications
Virtual machines
 
•	
Storage accounts
 
•	
Backup
 
•	
Containers
 
•	
Networks
 
•	
Azure Cosmos DB
 
•	
Key Vault
 
•	
Azure cache for Redis
 
•	
Azure Data Explorer clusters
 
•	
SQL workloads
 
•	
Windows virtual desktop
This list is continuously extending and new resource types are been added.
Let’s briefly understand about some of the preceding offerings:
	
•	
Applications: Azure Monitor provides application insights service to 
monitor your applications. It is an Application Performance Management 
(APM) service for web developers on multiple platforms. You can use it 
to monitor your live web applications. It works for applications on a wide 
variety of platforms including .NET, Node.js, and Java EE, hosted on-
premises, hybrid, or any public cloud. It also integrates with your DevOps 
process and has connection points to a variety of development tools.

Monitoring Security by Using Azure Monitor      417
	
•	
Virtual machines: Azure Monitor monitors your Azure Virtual Machines and 
virtual machine scale sets. It analyzes the performance and health of your 
Windows and Linux VMs and monitors their processes and dependencies on 
other resources and external processes.
	
•	
Storage accounts: Here you can see the performance and capacity of your 
Azure Storage accounts. In performance, it shows you the transactions, end-
to-end latency, server latency.
	
•	
Containers: Azure Monitor monitors the performance of container workloads 
deployed to either Azure Container Instances or managed Kubernetes 
clusters hosted on Azure Kubernetes Service (AKS).
	
•	
Networks: It provides a comprehensive view of health and metrics for all 
your network resource. The advanced search capability helps you identify 
resource dependencies, enabling scenarios like identifying resource that are 
hosting your website, by simply searching for your website name.
	
•	
Cosmos DB: Azure Monitor provides capacity and performance details 
about Cosmos DB also. You can see the available storage, data and index 
usages, any request failures and many more.
	
•	
Resource group: You can monitor the overall health of your resource group 
also. This health has been calculated based on the overall health of all 
resources in that resource group.
Here, we saw the resource which supports insights feature of Azure Monitor. Insight 
provides more detailed performance metrics.
Azure Monitor for virtual machine
Azure Monitor  starts collecting data from Azure Virtual Machines the moment 
virtual machines are created. In this section, we will go through that how can you 
enable Azure Monitor for virtual machine to collect different type of data. Azure 
Monitor analyze data from the guest operating system including processes and 
their dependencies. Azure Monitor can collect metrics and activity logs directly 
from the host VM. But you need an agent and some configuration to collect and 
analyze monitoring data from the guest operating system and its workloads. Azure 
Monitor for VMs installs these agents and provides additional powerful features 
for monitoring your virtual machines. You can enable Azure Monitor on virtual 
machine by different ways, from Azure portal, Azure Policy, Azure PowerShell. 
You also require Log Analytics workspace to collect performance data from virtual 
machine.

418      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Configuring Log Analytics workspace
Azure Log Analytics workspace collects data from the virtual machines and 
Azure Monitor uses that data to do analysis. Let’s see how you create log analytics 
workspace and will integrate the virtual machines to it to collect the data. We already 
have seen the way to create Log Analytics workspace in the previous sections. So, 
just for recap, we are taking you through how you can attach virtual machine to Log 
Analytics workspace.
Connect virtual machine to workspace
	
1.	 Login to Azure portal and search for the Log Analytics workspace to which 
you want to attach your virtual machine.
	
2.	 Go to Virtual machines under the Workspace Data Sources section:
Figure 7.17: Register VM to Log Analytics workspace
	
	
The preceding figure shows a not connected virtual machine.
	
3.	 You can apply respective filters to search for your VM.
	
4.	 Once you click on the VM and a new blade will open, there click on the 
Connect button to connect the VM to this workspace.
Here once you connected the virtual machine to workspace, now you can configure 
log collection from this machine. Now the logs can be pushed to log analytics 
workspace for analysis.
Configuring logs collection
When you create a new Log Analytics workspace and attach virtual machines to it 
then the workspace needs to be configured to collect logs. This configuration only 
needs to be performed once since configuration is sent to any virtual machines that 
connect to it.
	
1.	 Go to the Log Analytics workspace where you connected the virtual 
machines.

Monitoring Security by Using Azure Monitor      419
	
2.	 Now to enable data collection, go to Agent configuration under the Settings 
section. Under this tab, you see multiple options to collect the logs. You 
can collect Windows event logs, Windows performance counters, Linux 
performance counters, IIS logs, Syslog, and custom logs. You can go to 
respective log collection section to enable log collection. Once you enable this 
collection setting, this setting will apply on all servers which are attached to 
this workspace:
 
Figure 7.18: Collect Windows event logs
	
	
As shown in the preceding figure, in the Windows event logs section, put 
the name of event type and you can select which kind of events (Errors, 
Warning, and Information) to be reported or collected:
 
Figure 7.19: Collect Windows performance counter

420      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
1.	 Similarly, to collect Windows performance counters, go to under that tab 
and select what all performance counters you want to collect. Then click on 
Add the selected performance counters.
	
2.	 Click on Save once you have selected all counters. The selected counter logs 
will be sent to Log Analytics workspace and will be stored there.
In this section, we saw how to push logs’ data from different sources to workspace. 
You can use single workspace to collect data from different sources. But it is 
recommended to have separate workspaces based on the applications and their 
environments.
Connecting Log Analytics workspace to Azure 
Monitor
We have configured Log Analytics workspace to collect logs data from the virtual 
machines. Now we need to configure Azure Monitor to collect logs from the 
workspace:
	
1.	 Go to Azure Monitor and then to Virtual Machines under Insights as shown 
in the following figure:
Figure 7.20: Attach log analytics workspace to Azure Monitor
	
	
The preceding figure shows the list of connected workspaces with Azure 
Monitor. As of now, there is no workspace connected with Azure Monitor.
	
2.	 Here, you can see the virtual machines which are monitored, not monitored. 
To attach the workspace, go to the Workspace configuration tab. There 
you will see the list of workspaces; you can apply filters and select your 
workspace where you configured data collection:

Monitoring Security by Using Azure Monitor      421
Figure 7.21: Select workspace to attach with Azure Monitor
	
	
Select the workspace and click Configure selected. Now Azure Monitor can 
collect data from the workspace.
	
	
By following the preceding steps, we connected workspace with Azure 
Monitor. Now Azure Monitor can collect data from Log Analytics workspace.
Enable monitoring for Azure Virtual Machine
Now in the next step, we will enable Azure Monitor to collect data for a particular 
virtual machine from the selected workspace:
	
1.	 Go to the Not monitored section in workspace. There you will see a 
hierarchical representation of your virtual machines. The following figure 
will clarify this statement:
Figure 7.22: Enable virtual machine monitoring in Azure Monitor
	
	
As shown in the preceding figure, you will see virtual machine from each 
subscription and resources group.
	
2.	 When you click on Enable, a new window will open to enable Azure Monitor 
on the virtual machine. You can enable this Azure Monitor setting from 
virtual machine also. To enable it from virtual machine, you can go to the 

422      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
virtual machine and then Insights under Monitoring. You will see the same 
screen as shown in the following figure to enable monitoring:
Figure 7.23: Enable Azure Monitor from virtual machine
	
3.	 Click on Enable again to start the monitoring. This process can take 5-10 
minutes to push log data from workspace to Azure Monitor.
With the end of these steps, now you connected workspace with Azure Monitor 
and also enabled monitoring on Azure Virtual Machine. Now Azure VM can send 
data to Azure Monitor and you can centrally monitor and analyze performance of 
different Azure resources in Azure Monitor.
See the performance charts and mapping
After 10-15 minutes, you can see the performance charts and resource mapping of 
virtual machine in Azure Monitor.
Go to the Performance tab, to see the performance charts for CPU utilization, 
available memory, disk space utilization, and network bytes sent and received:

Monitoring Security by Using Azure Monitor      423
Figure 7.24: See performance chart in Azure Monitor
In the Map section, you can see how the virtual machine is connecting and 
communicating with other machines and which port. You can see deep inside details 
about applications talking to other applications on other servers and resources.You 
can go to other resources’ section under the Insight section to configure and monitor 
them.
Alerts in Azure
Azure provides platform to setup different kind of alert. Alert in Azure is not part 
of Azure Monitor. All Azure resources generate metrics, activity logs, performance, 
and platform logs. These logs and metrics can be feed into alerts in Azure Monitor. 
All alerting systems work on triggers. When a certain condition becomes true or 
false, an event gets trigger. This trigger pushes the alerting mechanism to send an 
alert notification. In the coming sections, we will see how to use the logs data to set 
threshold to trigger alerts.
Types of alerts
Azure provides platform to deploy different type of resources. These resources 
generate different kind of metrics, performance and platform logs. In this section, 
we will see the types of logs generated by Azure resources:
	
•	
Metric alert: Most of the Azure resources generate performance metrics. 
Metric alerts in Azure Monitor provide a way to get notified when one of 
your metrics crosses a threshold.

424      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
•	
Application availability alert: This kind of alert sends a notification if your 
web application goes down. Once you deploy your web app/website, you 
can set up recurring tests to monitor availability and responsiveness of 
your app/website. Azure Application Insights sends web requests to your 
application at regular intervals from points around the world. It can alert 
you if your application is not responding, or if it responds too slowly.
	
•	
Log alerts: When Azure resources generate logs, Azure shows few metrics 
and alerts on portal. This result is shown by preconfigured queries and setup 
of commands. But this is not all, you can create your own custom alerts 
and metrics based on the log data. This log data is stored in log analytics 
workspace, you can use Kusto query language to write custom alert codes.
	
•	
Activity logs alert: Any activity on Azure resource creates activity logs. 
Activity log alerts are the alerts that get activated when a new activity log 
event occurs that matches the conditions specified in the alert.
	
•	
Security alerts: In Azure Security Center, there are a variety of alerts for 
many different resource types. Security Center generates alerts for resources 
deployed on Azure, and for resources deployed on on-premises and hybrid 
cloud environments.
The preceding list is the type of logs generated by different Azure resources. We 
can use them in Azure Monitor to analyze the health and performance of Azure 
resources. Based on the health and performance parameters we can create rules to 
generate alerts.
Application availability alert
Once you deployed your web app/website, you can set up recurring tests to monitor 
availability and responsiveness.  This monitoring is done by Azure Application 
Insight. Azure Application Insights  sends web requests to your application at 
regular intervals from points around the world. It can alert you if your application is 
not responding, or if it responds too slowly.
You can set up availability tests for any HTTP or HTTPS endpoint that is accessible 
from the public internet. You do not have to make any changes to the website you 
are testing.
Create Azure Application Insights
Let’s setup application insights to monitor the availability of your application:
	
1.	 Go to Azure portal and search for an application for which you want to 
enable application insights.

Monitoring Security by Using Azure Monitor      425
	
2.	 Click on Application Insights under the Settings section. In the next blade, 
click on Turn on Application Insights as shown in the following figure:
Figure 7.25: Turn on Application Insights for a web app
	
3.	 In the next window, you will get option to Enable or Disable an application 
insights:
Figure 7.26: Enable application insights for a web app
	
4.	 You get an option to create a new application insights instance or to use an 
existing:
Figure 7.27: Choose existing or create new application insights for a web app

426      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
5.	 After selecting an application insights instance, you can select the application 
code type from .NET, .NET Core, Node.js, Java, Python. For .NET and 
.NET Core, you do not need to install any SDK. But other platforms, need 
respective SDK installed with your application.
	
6.	 Depending on the code platform, you see multiple monitoring options. You 
can enable or disable them as per your need. We are leaving them as default.
	
7.	 Click on Apply to attach an application insights to your application. It will 
restart your application.
Here, we learnt the process to deploy application insight from Azure portal to 
monitor the performance and health of your applications.
Setup availability test
Once you have created an application insights instance for the application now 
you can set up availability test alert. It can help you to measure the availability and 
responsiveness of your web application. To test the availability of your application, 
Azure Application Insights  sends web requests to your application at regular 
intervals from points around the world. It can alert you if your application is not 
responding, or if it responds too slowly:
	
1.	 Go to an application insights which you created in last section in Azure 
portal. You can go to application insights from the application or directly by 
searching the name of it in portal.
	
2.	 In application insights, go to Availability under the Investigate section. 
This availability testing is not making any use of Internet Control Message 
Protocol (ICMP) to check your site’s availability. Instead, it uses more 
advanced HTTP request functionality to validate whether an endpoint is 
responding. It also measures the performance associated with that response.
	
3.	 Click on + Add Standard test and it will open a new blade as shown in the 
following figure. You can give a name to this test, in the URL field, enter the 
URL of your application which you want to monitor and which you have 
attached to this application insights. This URL should be accessible publicly.
	
4.	 You can set up test frequency and locations from where you want to check 
the accessibility of this web app.
	
5.	 Parse dependent requests: If you check this box, the test requests images, 
scripts, style files, and other files that are part of the web page under test. 
The recorded response time includes the time taken to get these files. The test 
fails if any of these resources cannot be successfully downloaded within the 
timeout for the whole test. If the option is not checked, the test only requests 
the file at the URL you specified.

Monitoring Security by Using Azure Monitor      427
	
6.	 Enable retries for availability test failures: When the test fails, it is retried 
after a short interval. A failure is reported only if three successive attempts 
fail. Subsequent tests are then performed at the usual test frequency. 
Retry is temporarily suspended until the next success. This rule is applied 
independently at each test location.
	
7.	 Enable SSL certificate validity: If your web app is using any SSL certificate for 
SSL connection, here you can test the validity of the SSL certificate attached 
to your website.
	
8.	 Test frequency: Here you set how often the test is run from each test location. 
With a default frequency of five minutes and five test locations, your site is 
tested on average every minute:
Figure 7.28: Create URL ping test on application insights for a web app
	
9.	 You need to enable Alerts; this alert setting you can modify after the ping test 
is setup.
Here, we learnt the process to deploy application test in application insight from 
Azure portal to monitor availability of your applications.

428      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Setup alert for URL ping test failure
First you need to be clear that URL ping test is not making any use of to check 
the availability if your web applications. It uses more advanced HTTP request 
functionality to validate whether an endpoint is responding or not. It also measures 
the performance of the response. Based on the performance of the response, you can 
set up alert rules:
	
1.	 Once you have set up ping test, you will see the following figure. Click on 
Open rules (alert) page. This will open a new window to configure alert:
Figure 7.29: Create alert for URL ping test on application insights for a web app
	
2.	 In alert editing window, here you will see alerts related your web app. You 
can also modify current alerts or can create new alerts from here.
	
3.	 Now click on the alert to modify it. You can disable or delete this alert from here:
Figure 7.30: Edit URL ping test alert for a web app

Monitoring Security by Using Azure Monitor      429
 
•	
In the RESOURCE section, you see the name of your web app for which you 
are setting this alert.
 
•	
In the HIERARCHY section, you see the resource hierarchy starting from 
Subscription to resources group.
 
•	
In the CONDITION section, you can set when the alert needs to be generated. 
The default condition says that an alert will be triggered when there is a 
failure from two locations. You can edit this condition by clicking on this.
 
•	
In the ACTIONs section, here you set up the action which will be taken once 
the alert triggers. You can add an existing group or can create a new. Click 
on Add action groups to create a new group. This will open a new blade as 
shown in the following figure.
 
•	
In Basic tab you can give a name to this group, select the subscription and 
resources group where you want to create this action group.
 
•	
In Notification section, you can select the notification type from the 
dropdown. From the dropdown, you can choose to send email notification 
to Azure resource manager roles like Owners, Contributor, and you can also 
select to send notification through Email/SMS/Push/Voice. Once you select 
Email/SMS/Push/Voice notification option, a new window will open. Here 
you can fill the details regarding Email/SMS/Push/Voice: 
Figure 7.31: Create action group for test alert for a web app

430      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
1.	 Click on OK to set up this action group.
	
2.	 In Actions tab, you can choose other actions such as Automation runbook, 
Azure function, ITSM, Logic App, Secure Webhook, Webhook. So, based on 
this alert you can trigger other actions also.
	
3.	 Once you set up the action group, it will be visible under the ACTIONS 
GROUPS section. You can add multiple action groups:
Figure 7.32: Set the severity of alert
	
	
In ALERT rule description, you can put a description about this alert and set 
the severity for the alert. Save the applied changes. It can take up 10 minutes 
to enable the alert.
	
	
The alert setup process and action group create process is same for all Azure 
resources. The only change you can see in conditions. There are different 
conditions for every resource type.
	
4.	 After setting up the alert, if there is any failure in availability of the web app. 
You will get email as shown in the following figure:

Monitoring Security by Using Azure Monitor      431
Figure 7.33: Email alert for URL ping test
	
	
This alert gives brief description about the outage.
In this section, we saw the steps to configure alerts based on URL ping test’s response 
result and performance.
Metric alert rules
Metric alerts in Azure Monitor work on top of multi-dimensional metrics. These 
metrics could be platform metrics, custom metrics, popular logs from Azure Monitor 
converted to metrics  and application insights metrics. Metric alerts evaluate at 
regular intervals to check if conditions on one or more metric time-series are true 
and notify you when the evaluations are met. Metric alerts are stateful, that is, they 
only send out notifications when the state changes.

432      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
How do metric alerts work?
There are a few parameters to define a metric alert rule. You need to specify a target 
resource to be monitored, metric name, condition type (static or dynamic), and 
the condition (an operator and a threshold/sensitivity), and an action group to be 
triggered when the alert rule fires. Condition types affect the way thresholds are 
determined.
Alert rule with static condition type
For an example, you have created a simple static threshold metric alert rule as 
follows:
 
•	
Target Resource (the Azure resource you want to monitor): DemoVM.
 
•	
Metric: Percentage Memory.
 
•	
Condition Type: Static.
 
•	
Time Aggregation (statistic that is run over raw metric values. Supported 
time aggregations are Min, Max, Avg, Total, Count): Average.
 
•	
Period (the look back window over which metric values are checked): Over 
the last 10 minutes.
 
•	
Frequency (the frequency with which the metric alert checks if the conditions 
are met): five minutes.
 
•	
Operator: Greater than.
 
•	
Threshold: 60.
So, to explain the preceding scenario, from the time the alert rule is created, the 
monitor runs every 5 minutes and looks at metric values for the last 10 minutes 
and checks if the average of those values exceeds 60. If the condition is met that 
is, the average percentage memory for the last 10 minutes exceeds 60, the alert rule 
fires an activated notification. You will receive an activated notification if you have 
configured an email or a web hook action in the action group associated with the 
alert rule.
If you are use multiple conditions in one rule, then the rule ands (Boolean operation) 
the conditions together. In that case, the alert will fire when all the conditions in the 
alert evaluate as true and resolve when one of the conditions is no longer true. An 
example of this type of alert would be alert when memory higher than 60% and CPU 
higher than 50%.

Monitoring Security by Using Azure Monitor      433
Alert rule with dynamic condition type
For an example, you have created a simple dynamic thresholds metric alert rule as 
follows:
 
• Target Resource (the Azure resource you want to monitor): DemoVM.
 
• Metric: Percentage Memory.
 
• Condition Type: Dynamic.
 
• Time Aggregation (statistic that is run over raw metric values. Supported 
time aggregations are Min, Max, Avg, Total, Count): Average
 
• Period (the look back window over which metric values are checked): Over 
the last ten minutes.
 
• Frequency (the frequency with which the metric alert checks if the conditions 
are met): five minutes.
 
• Operator: Greater than.
 
• Sensitivity: Medium.
 
• Look Back Periods: 4.
 
• Number of Violations: 4.
In dynamic threshold, you do not set threshold manually. But once the alert rule is 
created, the dynamic thresholds machine learning algorithm will acquire historical 
data that is available, calculate threshold that best fits the metric series behavior 
pattern, and will continuously learn based on new data to make the threshold more 
accurate.
From the time the alert rule is created, the monitor runs every 5 minutes and looks 
at metric values in the last 40 minutes grouped into 10 minutes periods and checks 
if the average of the period values in each of the four periods exceed the expected 
threshold. If the condition is met, that is, the average percentage memory in the last 
40 minutes (four 10 minutes periods) deviated from expected behavior four times, the 
alert rule fires an activated notification. You will receive an activated notification if 
you have configured an email or a web hook action in the action group associated 
with the alert rule.
Setup metric alert
You will get notified by metric alerts when one of your metrics crosses a threshold. 
Metric alerts work on a range of multi-dimensional platform metrics, custom metrics, 

434      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Application insights standard and custom metrics. In this section, we will discuss 
how to create, view, and manage metric alert rules through Azure portal.
Let’s follow these procedures how to create a metric alert rule in Azure portal:
	
1.	 Log in to Azure portal and search for Monitor.
	
2.	 Click Alerts then click + New alert rule.
	
3.	 Click  Select resource, this will open a new blade. In new blade, fill the 
details as shown in the following figure. To select a target resource for that 
you want to setup alert. Use subscription and resource type dropdowns to 
find the resource you want to monitor. You can also use the search bar to find 
your resource:
Figure 7.34: Setup alert from Azure Monitor
	
4.	 If the selected resource has metrics, you can create alerts on,  available 
signals on the bottom right will include metrics.
	
5.	 Once you have selected a target resource, click on Add condition. A new 
blade will open to take the condition for alert:

Monitoring Security by Using Azure Monitor      435
Figure 7.35: Select the condition for alert
	
	
You will see a list of signals supported for the resource; select the metric you 
want to create an alert on.
	
6.	 You will see a chart for the selected metric for the last six hours. Use the Chart 
period drop-down to select to see longer history for the metric.
	
7.	 Select the threshold type, operator, aggregation type, and threshold value. 
This will determine the logic that the metric alert rule will evaluate.
	
8.	 Optionally, refine the condition by adjusting aggregation granularity period 
and frequency of evaluation. Aggregation granularity defines the interval 
over which datapoints are grouped using the aggregation type function. 
Frequency of evaluation defines the frequency on how often the alert rule 
should be run. Click on Done.
	
9.	 Optionally, you can add other criteria if you want to monitor a complex 
alert rule. This you can do only when you select the Static threshold. But 
currently, you can set up only one criterion if you select dynamic thresholds.
	
	
Now click on Select action group. Here you set up the details about alert 
receiver. So, when the alert is being triggered the receiver will get notification. 

436      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
A new blade will open. There you can either choose an existing group or 
create a new group.
	
	
You can give a name to this group, select the subscription, and resources 
group where you want to create this action group.
	
	
In the Actions section, give a name to the action. There are multiple action 
types available under the drop down. You can choose the appropriate action 
type based on your requirement. We are choosing to send an email for the 
alert. You can refer the preceding e section to understand action group 
creation in detail.
	
	
Once you set up the action group, it will be visible under the ACTION 
GROUPS section. You can add multiple action groups.
	
10.	 Fill in alert details like Alert rule name, Description, and Severity:
Figure 7.36: Setup alert details
	
11.	 Click Create alert rule to save the metric alert rule.
	
	
In the last chapter, we saw that Azure Monitor can multiple performance 
metrics of different resources. In this section, we used those metrics to setup 
alerts. Metric alerts are very important scenario or parameter in day-to-day 
operation work. It can help you to take some proactive decisions to prevent 
any potential outage, security and cost saving.
Review and manage the alerts
You can view and manage metric alert rules using the Manage rules blade under 
Alerts. The following procedure shows you how to view your metric alert rules and 
edit one of them:

Monitoring Security by Using Azure Monitor      437
	
1.	 Login to Azure portal, search for monitor. Click on Alerts. Here you can see 
the list of any active alert for your environment.
	
2.	 Click on  Manage alert rules, in this  blade, you can view all your alert 
rules across subscriptions. You can further filter the rules using Resource 
group, Resource type, and Resource. If you want to see only metric alerts, 
select Signal type as Metrics:
Figure 7.37: Manage alert rules in Azure Monitor
	
3.	 In the Manage alert rules  blade, you can select multiple alert rules and 
enable/disable them. This might be useful when certain target resources 
need to be put under maintenance
	
4.	 Click on the name of the metric alert rule you want to edit.
	
5.	 In the edit rule, click on Alert criteria you want to edit. You can change the 
metric, threshold condition, and other fields as required but you cannot edit 
the Target resource and Alert rule name after the metric alert is created.
	
6.	 Click Done to save your edits.
After creating alerts, it is even more important to regularly review the alerting 
rules and modify the alert rules whenever required. In this section, we saw the 
process that how you can review the alerting rules and modify and manage the 
rules regularly.

438      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
Creating active logs alerts in Azure Monitor
Azure creates activity logs whenever any action is taken on any Azure resource. 
Each resource has activity logs section on their pane. But Azure Monitor also collects 
these activity logs from all Azure resources. You can see activity logs of any resource 
from Azure Monitor also.
Sometimes it becomes important to get notification when there is any action 
performed on any Azure resource. You can get such notification by creating alerts 
for activity logs. So, whenever there is any specific action happen on Azure resource, 
you get the notification.
See activity logs in Azure Monitor
Follow these steps to see activity logs in Azure Monitor:
	
1.	 Login to Azure portal and go to Azure Monitor.
	
2.	 In Azure Monitor, go to Activity log. There you can see a long list of activity 
logs from various Azure resources. There you can see Active Directory 
activities also. You can filter these logs by applying appropriate filters:
Figure 7.38: Activity logs in Azure Monitor
	
3.	 In the preceding example, we applied filter to select activity logs of logic apps. 
The result show detail about Operation name, Status, when it happened, 
and who initiated this activity. You can adjust the view by selecting Edit 
columns. Here, you can select which column you want to see and which not.
In this section, we learnt how to review and analyze the activity logs of any Azure 
resources. In the next section, we will study about how to create alerts for activity logs.
Creating alert for activity logs
In this section, we will see how you can create alerts for activity logs:

Monitoring Security by Using Azure Monitor      439
	
1.	 Go to Alerts in Azure Monitor and click on + New alert rule.
	
2.	 It will open a new window to create new alert. Click on Select resource:
Figure 7.39: Select resource for activity log
	
3.	 You can select the resource by applying filter. On bottom right of the 
preceding figure, you can see available signal types. This shows, for what 
all kind of logs we can get from this selected resource and can create alerts. 
Click on Done.
	
4.	 Now click on Select condition to select the condition to trigger the alert:
Figure 7.40: Select activity condition to generate alert

440      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
5.	 Select Activity Log – Administrative from the drop down of Monitor 
service. You can choose a particular condition for alert or All Administrative 
operations to select all available operations.
	
6.	 A new window opens when you select a condition. It will show bar graphs to 
represent the occurrence of this condition. Keep the default setting and click 
on Done.
	
7.	 You can only define one activity log signal per alert rule. To create alert on 
more signals, please create additional alert rules:
	
8.	 Now click on Select action group. Here you setup the details about alert 
receiver. So, when the alert is being triggered the receiver will get notification. 
A new blade will open. There you can either choose an existing group or 
create a new group.
	
	
You can give a name to this group, select the subscription, and resources 
group where you want to create this action group.
	
	
In Actions section, give a name to the action. There are multiple action types 
available under the Action Types drop-down. You can choose the appropriate 
action type based on your requirement. We are choosing to send an email for 
the alert. You can refer the preceding section to understand action group 
creation in detail.
	
	
Once you setup the action group, it will be visible under the ACTION GROUPS 
section. You can add multiple action groups.
	
9.	 Fill in alert details like alert rule name, description, resource group for alert, 
and severity.
	
10.	 Click on Create alert rule to create this activity log alert.
In this section, we saw the steps to configure alerts based on activity logs. Activity 
logs alerts are really helpful to track any modification on your Azure resources. With 
the help of activity logs alerts, you will get notified when someone makes changes 
on your Azure resources.
Create custom alerts from Azure Monitor
Azure alerts provide you a good number of built-in conditions to create alerts but 
there may be some other conditions which you may want to monitor and generate 
alert for them. Through custom alerts, you can write your own condition to generate 
alerts. The custom alerts are written in Kusto Query Language (KQL).
It also has almost same steps as we followed in the previous sections to create metric 
and activity alerts:

Monitoring Security by Using Azure Monitor      441
	
1.	 Go to Alerts in Azure Monitor and click on + New alert rule.
	
2.	 It will open a new window to create new alert. Click on Select resource:
Figure 7.41: Select resource scope for custom alert setup
	
	
Custom alerts use logs feature of Log Analytics workspace so in target 
resource you need to select the Log analytics workspace where you connected 
your resources. As shown in the preceding figure, select your subscription 
and Log Analytics workspace in the Filter by resource type drop-down. It 
will show you available Log Analytics workspaces in selected subscription.
	
3.	 Choose the Log Analytics workspaces and click on Done.
	
4.	 Now to add alert condition you need to click on Add condition. A new blade 
will open and there you will find first option Custom log search:
Figure 7.42: Write query for custom condition
	
	
A new blade will open once you click on custom log search option. There you 
can write your own query in the Search query box.
	
5.	 Now you can fill the value of threshold, period, and frequency as you did in 
the previous Setup Metric alert section.

442      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
In this section, we studied how to create custom condition to generate custom alert.
Create custom alert from Log Analytics 
workspace
In the previous section, we studied how to create custom alert from Azure Monitor 
but now we also know that custom alert uses Log Analytics workspace to create 
custom condition. So, in this section, let’s see how to create custom alert directly 
from Log Analytics workspace. For this, let’s follow these steps:
	
1.	 Login to Azure portal and go to the Log Analytics workspace where you 
connected your resources.
	
2.	 Go to Logs, under the General section. It will open a new window to write 
the query:
Figure 7.43: Write query in Log analytics workspace for custom condition
	
	
As shown in the preceding figure, write your query in query pane and run it. 
If the query is correct, then it will show the result.
	
3.	 Click on + New alert rule to create new alert from based on this custom 
query.
	
4.	 It will open the same window which we saw in Figure 7.42, and from here, 
you can take it forward by putting the value of threshold, frequency, period, 
and action group.
	
5.	 The rest of the steps are similar to previous sections.

Monitoring Security by Using Azure Monitor      443
In this section, we learnt how to create custom alert from Log Analytics workspace.
Conclusion
In this chapter, we learnt in deep about configuring multiple features of Azure Monitor 
and Azure alerts. Now you will be capable to setup a comprehensive monitoring 
solution for your infrastructure through Azure Monitor. You can monitor different 
type of Azure resources through Azure Monitor. You also learnt, how to retain logs for 
future analysis. Now you can setup alerts for any unauthorized activity or degraded 
performance of any Azure resource. In this interactive alert and monitoring system, 
you can set up alert triggering conditions and notification receiver groups. You saw 
how to configure different kind of alerts at platforms, matrices, logs, and activity 
level. You learnt how to set up alerts threshold in Azure Monitor.
In next chapter, we will go through Azure Security Center (ASC). We will learn how 
to setup Azure Security Center in your environment, what all recommendations 
ASC provides, how to take action on those recommendations.
Multiple choice questions
	
1.	 You want to see the performance of your application, which Azure solution 
deployment will fulfill this requirement?
	
	
A.	 Azure Security Center.
	
	
B.	 Adaptive application control.
	
	
C.	 Adaptive network hardening.
	
	
D.	 Application insight.
	
	
Answer: D
	
2.	 Which of the following features of Log Analytics workspace is used by 
Custom alerts?
	
	
A.	 Logs.
	
	
B.	 Automation account.
	
	
C.	 Application insight.
	
	
D.	 Adaptive application control.
	
	
Answer: A
	
3.	 You want to see who powered off the virtual machine. Which type of alert 
you will set up?
	
	
A.	 Metric alert.

444      Microsoft Azure Security Technologies (AZ-500) - A Certification Guide
	
	
B.	 Application insight alert.
	
	
C.	 Activity log alert.
	
	
D.	 Diagnostic settings alert.
	
	
Answer: C
	
4.	 You want to do performance issue troubleshooting for your virtual machine. 
Which feature you will configure on your virtual machine?
	
	
A.	 Boot diagnostic.
	
	
B.	 Diagnostic settings.
	
	
C.	 Activity logs.
	
	
D.	 None of these.
	
	
Answer: B
	
5.	 Which of these is not a type of alerts in Azure?
	
	
A.	 Activity alerts.
	
	
B.	 Metrics alerts.
	
	
C.	 Security alerts.
	
	
D.	 RBAC alerts.
	
	
Answer: D
	
6.	 You want to check performance of your application. Which monitoring tool 
will you use?
	
	
A.	 Logic app.
	
	
B.	 Application insights.
	
	
C.	 Azure Security Center.
	
	
D.	 Azure alerts.
	
	
Answer: B
	
7.	 You want to get alert for any modification on any Azure resource, which type 
of alert you will create?
	
	
A.	 Metrics alerts.
	
	
B.	 Security threat alert.
	
	
C.	 Activity logs alert.
	
	
D.	 Application availability alert.
	
	
Answer: C

In this chapter, we will go through Azure Security in detail. Azure Security Center is 
a centralized service which keeps an eye on your complete environment resources. 
Its surveillance is not only limited to Azure, but can also scan any on-premises and 
third-party cloud environment. We will study about different SKUs of security center 
and their respective features. To protect the environment and follow the organization 
level compliances, you would like to setup certain security policies. This chapter 
will include managing security baseline polices. After this chapter, you will be able 
to configure security policies management and remediation of the recommendations 
provided by the security center.
Structure
In this chapter, we will learn the following topics:
	
•	
Azure Security Center
	
•	
Configure Azure Security Center
	
•	
Azure Security Center features
	
•	
Azure Defender features in security center
	
•	
Configure centralized management of policies by using Azure Security 
Center
Chapter 8
Monitoring Security 
by Using Azure 
Security Center

446      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
Configure Just-in-Time (JIT) virtual machine access by using Azure Security 
Center
	
•	
Configure a playbook for a security event by using Azure Security Center 
(workflow automation)
	
•	
Vulnerability scans from Azure Security Center
	
•	
Regulatory compliance management by using Azure Security Center
	
•	
Investigate security center threat alerts
Objectives
The objective of this chapter is to understand feature of Azure Security Center. After 
this chapter you should be able to configure Azure Security Center to see security 
loopholes and recommendations to fix them. You will be able to learn multiple 
features from Azure Defender such as vulnerability scan for Azure VMs, SQL and 
container images, adaptive application control and adaptive network handling. By 
the end of this chapter, you will be able to manage JIT for limited time period access 
on virtual machines and industry standard regulatory compliance by using security 
center.
Azure Security Center
Azure Security Center is a compact infrastructure security management system. 
It helps you strengthen the security posture of your data centers and provides 
advanced threat protection across your Azure and non-Azure workloads.
Securing your resources is a joint effort between Azure and you. When you move 
to cloud, you have to make sure your workloads are secure. There is more customer 
responsibility when you move to Infrastructure as a Service (IaaS) than Platform as 
a Service (PaaS) and Software as a Service (SaaS). Azure Security Center provides 
you the recommendations and tools to harden your infrastructure, services and 
applications.
Azure Security Center addresses the three most urgent security challenges:
	
•	
Rapidly changing workloads: It is both a strength and a challenge of the 
cloud. As fast as services and flexibilities are increasing in cloud, the security 
risks are also increasing in the same ratio. Your users and administrators are 
empowered to do more. On the other hand, it is becoming difficult to keep 
all deployments secure and follow your security standards and security 
best practices. Azure Security Center helps you to keep an eye on all these 
challenges.

Monitoring Security by Using Azure Security Center      447
	
•	
Increasingly sophisticated attacks: As the remote work culture and remote 
availability of resources are increasing the attacks keep getting more 
sophisticated. You have to secure your public cloud workloads. In the public 
cloud, there are many resources which use services over the internet that can 
leave you even more vulnerable if you don’t follow security best practices. 
Security center assesses your workloads and raises threat prevention 
recommendations and security alerts.
	
•	
Security skills are in short supply: As the technologies are changing rapidly, 
the number of administrators with the necessary background and experience 
are also short in supply. Staying up to date with the latest attacks is a constant 
challenge. Security center provides you the latest security approach faster 
than any manual security expert.
Overview
Security center is an Azure natively service. So Azure PaaS services such as service 
fabric, SQL databases, and storage accounts are monitored and protected by security 
center without any extra deployment. Security center can protect non-Azure servers 
and virtual machines in any public or private cloud or on-premise for both Windows 
and Linux servers by installing the log analytics agent on them. The Azure virtual 
machines are auto covered in security center.
The events collected from the log analytics agents and from Azure are correlated in 
the security analytics engine to provide you tailored recommendations (hardening 
tasks) that you should follow to make your workloads secure. When you enable the 
security center, the security policy built-in to the security center is reflected in Azure 
Policy as a built-in initiative under security center category. The built-in initiative 
is automatically assigned to all security center registered subscriptions (free or 
standard tiers). 
Why to use Azure Security Center?
We have seen what all security challenges we may need to face when moved into 
cloud. The one stop solution for all these challenges is the Azure Security Center. 
Let’s see what all it can do for you to keep your environment complaint to the 
security best practices:
	
•	
Manage security policy and compliance: It is a security basic to have 
some security policies in place to know and make sure your workloads 
are secure. The policies in security center are built on top of Azure Policy 
controls. In security center, you can set your policies to run on management 

448      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
groups across subscriptions and even for a whole tenant. You can associate 
the required policies as per your business need and security center can let 
you track and manage compliance and governance over time. The overall 
compliance provides you with a measure of how much your subscriptions 
are compliant with the policies associated with your workload.
	
•	
Continuous assessment: Security center continuously discovers new 
resources that are being deployed and assesses whether they are configured 
according to security best practices or not. If any resource is not meeting 
the set compliance, they’re flagged, and you get a prioritized list of 
recommendations for what you need to fix in order to protect your machines.
	
	
You can also see the network map of your resources. The map enables 
you to see the topology of your workloads. You can see how your nodes 
are connected, which helps you block unwanted connections that could 
potentially make it easier for an attacker to creep along your network.
	
•	
Recommendations to optimize and improve the security: Azure Security 
Center provides tailored recommendations to the particular security 
concerns found on your workloads, and security center does the security 
admin work for you. It not just finds your vulnerabilities, but also provides 
you with specific instructions on how to get rid of them.
	
•	
Integration with Microsoft Defender threat protection: When you configure 
Azure Security Center, it automatically natively integrates with Microsoft 
Defender Advanced Threat Protection. This means that your Windows and 
Linux machines are fully integrated with security center’s recommendations 
and assessments without any extra configuration.
	
•	
Protection for PaaS resources: Azure Security Center not only covers 
infrastructure related resources, but also provides a good cover for PaaS 
resources as well. Security center helps you detect threats across Azure PaaS 
services. You can detect threats targeting Azure services including Azure 
App Service, Azure SQL, Azure Storage Account and many more services.
	
•	
Block brute force attacks: Azure Security Center helps you to limit exposure 
to brute force attacks by controlling and securing the access for your virtual 
machines by providing different recommendations such as, JIT access, no 
public IP, limited access for users, inbound and out bound traffic control.
	
•	
Protect IoT and hybrid cloud workloads: Azure Security Center for Internet 
of Things (IoT) simplifies hybrid workload protection by delivering unified 
visibility and control, adaptive threat prevention and intelligent threat 
protection and response across workloads running on edge, on-premises, in 
Azure and in other clouds.

Monitoring Security by Using Azure Security Center      449
	
•	
Automatic discovery and onboarding of Azure resources: Being a native 
Azure service, Azure Security Center can integrate with Azure and Azure 
resources seamlessly. It means that you can pull together a complete security 
story involving Azure Policy and built-in security center policies across 
all your Azure resources and makes sure the whole thing is automatically 
applied to newly discovered resources as you create them in Azure.
	
•	
Wide range of supportive platforms: Azure Security Center supports 
wide range of platforms. It can cover Azure, other clouds and on-premises 
resources. It supports various operating systems also. Azure Security Center 
depends on Log Analytics workspace to collect the logs so that the servers 
supported by Log Analytics workspace are also supported by Azure Security 
Center.
In this section, we saw the features of Azure Security Center. These will help you to 
choose security center for your environment. Azure Security Center is a very nice 
and important service of Azure. It helps you find the security gaps for different 
Azure resources with respect to Azure security best practices.
Azure Security Center support for Azure 
resources
In this section, we will see some features supported by Azure Security Center for 
Azure virtual machines and will also see the list of PaaS resources which are covered 
under Azure Security Center.
Azure Security Center features for Azure Virtual 
Machines
Here is the list of supported features by Azure Security Center for Azure Virtual 
Machines:
Features 
Support for Windows 
machines
Support for Linux 
machines
Microsoft Defender ATP integration
✔
(on supported versions)
Virtual machine behavioral analytics 
(and security alerts)
✔
✔
(on supported versions)
Fileless security alerts
✔
Contd…

450      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Features 
Support for Windows 
machines
Support for Linux 
machines
Network-based security alerts
✔
✔
Just-in-time VM access
✔
✔
Native vulnerability assessment
✔
✔
File integrity monitoring
✔
✔
Adaptive application controls
✔
✔
Network map
✔
✔
Adaptive network hardening
✔
✔
Adaptive network controls
✔
✔
Regulatory compliance dashboard 
and  reports
✔
✔
Missing OS patches assessment
✔
✔
Security misconfigurations 
assessment
✔
✔
Endpoint protection assessment
✔
Disk encryption assessment
✔
✔
Third-party vulnerability 
assessment
✔
✔
Network security assessment
✔
✔
Table 8.1: Azure Security Center features for Windows and Linux VMs
The preceding table shows the features of Azure Security Center for Windows and 
Linux VMs. Although most of the features are supported by both Windows and 
Linux VMs, there are a few features missing in Linux based VMs. You can refer this 
table to identify what features can be supported by security center for your VMs.
Azure Security Center support for Azure PaaS 
services
Here is the list of Azure PaaS services which are covered by Azure Security Center:
Services
Services
Azure App Service
Azure Event Hubs namespace
Azure Automation account
Azure Functions app
Azure Batch account
Azure Key Vault
Contd…

Monitoring Security by Using Azure Security Center      451
Services
Services
Azure Blob storage
Azure Kubernetes Service
Azure Cache for Redis
Azure Load Balancer
Azure Cloud services
Azure Logic Apps
Azure Cognitive Search
Azure SQL databases
Azure Container Registry
Azure Service Bus namespace
Azure Cosmos DB
Azure Service Fabric account
Azure Data Lake Analytics
Azure Storage accounts
Azure Data Lake Storage
Azure Stream Analytics
Azure Database for MySQL
Azure Subscription
Azure Database for PostgreSQL
Azure Virtual Network (including subnets, NICs, 
and network security groups)
Table 8.2: Azure PaaS services supported by Azure Security Center
The preceding table shows the list of Azure PaaS services supported by Azure 
Security Center. Microsoft is adding new services regularly to extend this list, but 
these are the current PaaS services which are supported by security center at the 
time of writing this book. You can leverage Azure Security Center service to identify 
security gaps for the above listed PaaS services with respect to best practices.
Configure Azure Security Center
In the previous sections, we went through various concepts of Azure Security 
Center. Now, let’s have some hands on and configure the security center in your 
environment. Here, we will also see other features of security center.
Azure Security Center has two pricing models: Basic (Free) and Azure Defender. 
Basic is the default but for Azure Defender, you need to upgrade the plan. Free tier 
offers limited security for your Azure resources only and the Azure Defender tier 
extends these capabilities to on-premises and other clouds. Security center Azure 
Defender SKU helps you find and fix security vulnerabilities, apply access and 
application controls to block malicious activity, detect threats using analytics and 
intelligence and respond quickly when under attack.
The free tier is always available for you and you can see the recommendations within 
a minute when you open security center for the first time. For an enterprise level of 
offering, you would like to go for Azure Security Center Azure Defender tier.

452      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Upgrade Azure Security Center to Azure 
Defender
Azure Defender tier of Azure Security Center gives you the next level of security 
monitoring, compliance and recommendations. Let’s see how you can upgrade your 
free plan to Azure Defender plan:
	
1.	 Login to the Azure portal and search for security center.
	
2.	 When you go to the Security Center page, you will see multiple features. 
We will discuss about them in the coming sections. For now, please go to the 
Pricing & Settings section.
	
3.	 In the Pricing & Settings page, you can see the current pricing tier of your 
subscriptions:
 
Figure 8.1: Security center pricing tier overview
	
4.	 To change the pricing tier, click on the subscription name and a new window 
will open. As you can see in the following figure, this window also has 
multiple settings. Azure Defender plan is the first one. You can see two boxes 
for each offering. The default selected box is for free offering where Azure 
Defender is off and the next box is for Azure Defender offering where Azure 
Defender is on. You can click on Azure Defender offering box to enable 
Azure Defender tier:

Monitoring Security by Using Azure Security Center      453
Figure 8.2: Enable Azure Defender plan in security center
	
5.	 When you click on Azure Defender offering box, some other features enable 
on this same page. In the following figure, you can see the list of resources in 
your subscription and a switch to On and Off the Azure Defender plan:
Figure 8.3: Enable standard offering for subscription and resources
	
	
From this switch, you can choose for which resource type you want to enable 
Azure Defender tier and for which you want to keep the free. On this same 

454      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
page, you can also see the pricing of Azure Defender tier for each resource 
type. This resource type list is not just limited to the shown resources, but 
will also extend once you create other types of resources.
	
	
So, select the resources and click on Save to enable standard tier for them.
Here, we saw the process to upgrade Azure Security Center from free tier to Azure 
Defender tier. Once you upgrade Security Center, it enables complete suite of 
features. We will discuss those features in the coming sections.
Azure Security Center features
Alright, we have seen how to control security center pricing tier for your subscriptions. 
Now, let’s discuss how to use different features of Azure Security Center.
Azure Security Center overview
On the Overview page, you can see the graphs for multiple security recommendations. 
The Overview page shows details about various security center features. You can 
give a quick glance to see the security position of your environment:
Figure 8.4: Azure Security Center overview1
The preceding figure shows the overall secure score of your environment and 
compliance status against few standard compliances regulators:
Figure 8.5: Azure Security Center overview2

Monitoring Security by Using Azure Security Center      455
The preceding figure shows the criticality of security gaps. It is showing how many 
compute, web, data, storage resources have high, medium and low severity security 
gaps:
Figure 8.6: Azure Security Center overview3
The preceding figure shows the count of threats with respect to their severity over 
the time.
As shown in the preceding figure s, you can see the brief details graphically. You 
can see the detailed report about each of them by clicking the respective graph. If 
you have multiple subscriptions covered under security center, you can apply the 
subscription-based filtering of recommendation.
Pricing and Settings
Although we have seen this section already, there are many more settings apart from 
just Pricing. So, let’s go there once again. When you go into the Pricing & Settings 
section, you see the following settings and we will discuss them one by one:
	
•	
Azure Defender plans: We already have discussed about this. Here, you can 
see what the current pricing tier of your Azure Security Center is. Also, you 
can change the pricing tier if you require.
	
•	
Auto provisioning: Security center collects security data and events from 
your resources and services to help you prevent, detect and respond to threats.
When you enable an extension, it will be installed on any new or existing 
resource by assigning a security policy. From this feature, you can control 
the data collection:

456      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 8.7: Enable auto-provisioning of log analytics agent for Azure Security Center
	
	
As shown in the preceding figure, you toggel Status switch between On 
and Off to enable data collection auto provisioning option. If you switch Log 
Analytics agent for Azure VMs to On, it will open a new blade to gether the 
data about Log Analytics workspace:
Figure 8.8: Azure Security Center data collection1

Monitoring Security by Using Azure Security Center      457
Figure 8.9: Azure Security Center data collection2
	
	
The preceding figure  describe the data collection page. If you enable the 
Auto Provisioning option, this enables the automatic installation of the 
Microsoft monitoring agent on all the VMs in your subscription. Also, any 
new or existing VM without an installed Microsoft Monitoring Agent 
(MMA) extension, will have it provisioned.
	
	
Azure Security Center requires a Log Analytics workspace to store the data 
and logs. You can select the workspace created by you or the default created 
by security center.
	
	
If you enable Azure Security Center Azure Defender tier, then you can store 
Windows server’s security events also.
	
•	
Email notifications: Being a security administrator, you may want to get 
auto alerts whenever these is any high severity event generated in your 
subscription. You can setup email and phone notification for such events:
 
Figure 8.10: Setup email notification in Azure Security Center

458      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
As shown in the preceding figure, you can select Azure resource manager 
roles and can put the email addresses of administrators to send email 
notifications.
 
• 
Integration: Azure Security Center also does the threat detection for your 
resources. There are some other native services running in the background 
which do the threat detection work. These services also need data and logs 
from your resources. They can use the same data which was collected by 
security center for other services. In this section, you allow threat detection 
services to use data collected by security center:
 
Figure 8.11: Enable threat detection in Azure Security Center
	
	
Microsoft Cloud App Security and Windows Defender ATP are the two 
services which access your security center data for threat protection.
	
•	
Workflow automation: You can define an automated workflow based on the 
trigger of any alert. This automation uses Azure Logic Apps in background 
to act based on the trigger. We will see how to configure Azure Logic Apps 
workflow in the coming chapter.
	
•	
Continuous export: You can export the security events to event hub and Log 
Analytics workspace. By enabling this export, you can use these logs to feed 
into any Security Information and Event Management (SIEM) solution.
	
•	
Cloud connectors: You can connect other public cloud environments such 
AWS and GCP with Azure Security Center and can manage security policies 
and recommendations for third-party cloud environments also.
In this section, we saw some advance settings of Azure Security Center. Here, we saw 
the process to enable integration for threat protection and send email notification for 
data collection. Threat protection is a very important and critical feature of security 
center. Being a security administrator, proactive threat detection is very much 
important and you can achieve this by security center.

Monitoring Security by Using Azure Security Center      459
Coverage
In this section, you can see what all subscriptions are covered by Azure Security 
Center. It shows the list of not covered, partially covered and fully covered 
subscriptions. Partially covered subscription has Azure Defender tier enabled for 
few of the resource types and fully covered has standard tier for all resource types.
Secure Score
Azure Security Center helps to achieve two main goals. First, it helps you to 
understand your current security situation and second helps you to efficiently 
and effectively improve your security. Security center provides secure score to 
understand how much you are complaint and what gaps do you have to achieve 
100% compliance.
Security center continually assesses your resources, subscriptions and organization 
for security issues. It then aggregates all the findings into a single score so that you 
can tell, at a glance your current security situation. The higher the score, the lower 
the identified risk level:
Figure 8.12: Secure score card in Azure Security Center 
The Secure Score page shows the overall secure score of all your subscriptions. That 
can be considered as the overall secure score for your complete environment. You 

460      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
can also drill down at a subscription level secure score on the same page. You can see 
all subscription level recommendations by clicking on the subscription.
When you click on the subscription name, in next window you will see the secure 
score of that subscription and the respective recommendations also. You will see 
how many recommendations are completely achieved and how many are remaining:
Figure 8.13: Azure Security Center recommendations
The preceding figure shows the brief details about security gaps in a subscription. 
You can get detailed information about each section by clicking on them:
Figure 8.14: Security controls and recommendations in Azure Security Center
As shown in the preceding figure, you can see the how many security controls you 
have completed and how many are remaining. Each control is a logical group of 
related security recommendations and reflects your vulnerable attack surfaces. 
A control is a set of security recommendations with instructions that help you 
implement those recommendations. 

Monitoring Security by Using Azure Security Center      461
Your score only improves if you remediate all of the recommendations for a single 
resource within a control. So, your score only improves when you have improved 
the security of a resource.
You can see the recommendations listed under the control by clicking on the control. 
Furthermore, if you click on the recommendation, you will see more details about 
the recommendation:
Figure 8.15: Details about security recommendation1
Figure 8.16: Details about security recommendation2 
In the preceding figure, I have selected one of the recommendations to see the 
details about this. When I clicked on this, a new window opened with the details 

462      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
shown in the preceding figure. This window tells me about the description of this 
recommendation, what is the impact of this recommendation and what will be the 
level of efforts to implement this recommendation. The next information it gives is 
about the threats and what threats you may have if you do not implement this. In 
the next section, the detailed steps are described to remediate this security gap. And 
finally, it shows what all resources are affected with this. It shows the list of healthy, 
unhealthy and not applicable resources.
Recommendations
Here in this section, you can see the recommendations for your all subscriptions at 
one place. It also has the same details as shown in Figure 8.15. Same as previously 
described, you can go into the control to see the recommendations and furthermore 
deep into the recommendation to see the details about it with the implementation 
steps.
Inventory
Inventory section in Azure Security Center keeps the record of all resources attached 
with this subscription. You can also add non-Azure servers also to the security center 
and those can also be viewed under this pane:
Figure 8.17: List of Azure resources monitored by Azure Security Center
As shown in the preceding figure, the Inventory section shows the details about 
each resource. You can filter the resources based on the resource types and many 

Monitoring Security by Using Azure Security Center      463
other filters. If you want to see only virtual machines, then set the Resource types 
filter value to Virtual machine.
The Inventory pane also shows monitoring state, Azure Defender state and 
recommendations about the resource. You can also download the list of resources.
If you click on three dots at the end of resource name, you will see an option to view 
resource. There you can see detailed recommendations about that resource:
Figure 8.18: Azure Security Center recommendations for a resource
As shown in the preceding figure, you can see detailed recommendations about the 
selected VM. You can create logic app workflow to remediate the recommendations.
Security solutions
You can extend Azure Security Center to various other platforms also. You can on 
board non-Azure server (on-premises or any third-party cloud servers), connect 
security center with SIEM tool and connect your Azure application gateway with 
Web Application Firewall (WAF) to security center.

464      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
You can manage this integration from the security solution section of security center.
Azure Defender features in security center
Azure Defender gives a wide range of additional services in security center. To 
use these services, you need to enable Azure Defender tier of security center. Let’s 
go through the features provided by Azure Defender. You will find the following 
described features under the Azure Defender section of security center.
Adaptive application control
Adaptive application control is an intelligent, automated and end-to-end solution 
from Azure Security Center. With the help of adaptive application control, you control 
which applications can run on your Azure and non-Azure machines (Windows and 
Linux). This also helps harden your machines against malware. Security center uses 
machine learning to analyze the applications running on your machines and creates 
an allow list from this intelligence. This enables you to:
	
•	
Block or alert on attempts to run malicious applications, including those that 
might otherwise be missed by antimalware solutions
	
•	
Comply with your organization’s security policy that dictates the use of only 
licensed software
	
•	
Avoid unwanted software to be used in your environment
	
•	
Avoid old and unsupported apps to run
	
•	
Prevent specific software tools that are not allowed in your organization
	
•	
Enable IT to control the access to sensitive data through app usage
How to enable Adaptive application control
Adaptive application controls help you define a set of applications that can run on 
configured groups of machines. This feature is available for both Azure and non-
Azure Windows and Linux machines. Adaptive application control requires Azure 
Defender version of security center. Let’s go through the following steps to configure 
your application allow lists:
	
1.	 Login to Azure portal and go to security center.
	
2.	 In the left pane, select Adaptive application controls located under Azure 
Defender.

Monitoring Security by Using Azure Security Center      465
	
3.	 When you click on Adaptive application controls, a new window will 
open:
Figure 8.19: Adaptive application control
	
	
In the preceding figure, there are three tabs: Configured, Recommended and No 
Recommendation:
	
	
•	
Configured: This tab has a list of groups containing the VMs that were 
configured with application control.
	
	
•	
Recommended: This tab has a list of groups for which application control 
is recommended. Security center uses machine learning to identify VMs 
that are good candidates for application control based on whether the 
VMs consistently run the same applications.
	
	
•	
No Recommendation : This tab has a list of all VMs which do not have the 
required agent installed or the agent is not able to send the event. 
	
4.	 On the top of this page, you see + Add custom group to create a new 
application adaptive control. It will open a new blade:

466      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
  
Figure 8.20: Add custom adaptive application control
	
5.	 As shown in the preceding figure, you can create a group of servers and can 
put them under Adaptive application controls.
	
6.	 When you enable the audit, you can see the group under the Configured tab:
Figure 8.21: Updated adaptive application control dashboard
	
7.	 Once you create the server group, you need to add details about the 
applications which you want to control. Click on the group and a new 
window will open. There you can configure application details:

Monitoring Security by Using Azure Security Center      467
Figure 8.22: Edit application control settings
	
As shown in the preceding figure, the policy control panel has various sections:
	
•	
Recent Alerts: This section keeps the alerts about any violation of application 
control policy.
	
•	
Configured VMs/servers: This section keeps the list of servers which are a 
part of this group.
	
•	
Publisher whitelisting rules: This section keeps the list of application 
publishers which are allowed by you. So, the applications from those 
publishers can run on the servers.
	
•	
Path whitelisting rules: This section keeps the list of applications which 
can run on the servers. Here, you put the path of application on the servers.
	
	
Click on + Add rule to add any new rule. As shown in the following figure, 
it will open a new blade. There, you can give choose the application path:
Figure 8.23: Add custom adaptive application control rule

468      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
In this section, we learnt about adaptive application control. Now, you should be 
able to define a rule to control application installation in your servers. You can 
monitor the servers to know if they meet the adaptive application compliance. You 
can restrict users to install unwanted applications on servers.
Adaptive network hardening
You can apply Network Security Groups (NSG) or firewalls to filter traffic to and 
from the resources. This setup improves your network security posture. However, 
there can still be some cases in which the actual traffic flowing through the NSG is a 
subset of the NSG rules defined. In these cases, you can further improve the security 
posture by hardening the NSG rules based on the actual traffic patterns.
Adaptive network hardening uses a machine learning algorithm that factors in 
actual traffic, known trusted configuration, threat intelligence and other indicators of 
compromise and then provides recommendations to allow traffic only from specific 
IP/port tuples to further harden the NSG rules.
For example, let’s say the existing NSG rule is to allow traffic from 192.168.40.0/24 
on port 3389. The adaptive network hardening’s recommendation based on the 
analysis would be to narrow the range and allow traffic from 192.168.40.0/29, 
which is a narrower IP range and deny all other traffic to that port.
Adaptive network hardening recommendations are only supported on the 
following specific ports (for both UDP and TCP): 13, 17, 19, 22, 23, 53, 69, 81, 111, 
119, 123, 135, 137, 138, 139, 161, 162, 389, 445, 512, 514, 593, 636, 873, 1433, 1434, 
1900, 2049, 2301, 2323, 2381, 3268, 3306, 3389, 4333, 5353, 5432, 5555, 5800, 5900, 
5900, 5985, 5986, 6379, 6379, 7000, 7001, 7199, 8081, 8089, 8545, 9042, 9160, 9300, 
11211, 16379, 26379, 27017, 37215.
View and Apply Adaptive network hardening 
recommendations
Let’s follow these simple steps to enable and configure adaptive network hardening. 
We will also study some fundamentals about adaptive network hardening while 
configuring it:
	
1.	 Go to Azure Security Center, Adaptive network hardening under Azure 
Defender.
	
2.	 When you get into the Adaptive networking hardening page, you will see 
the detailed description, general information, threats and steps to remediate 
the gap:

Monitoring Security by Using Azure Security Center      469
Figure 8.24: Adaptive network hardening recommendation1
Figure 8.25: Adaptive network hardening recommendation2
	
	
The last section has three tabs: Unhealthy resources, Healthy resources 
and Not applicable resources:
	
	
•	
Unhealthy resources: VMs that currently have recommendations and 
alerts that were triggered by running the adaptive network hardening 
algorithm
	
	
•	
Healthy resources: VMs without alerts and recommendations

470      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
•	
Not applicable resources: VMs that the adaptive network hardening 
algorithm cannot be run on because of one of the following reasons:
	
	
	
o	
VMs are classic VMs: Only Azure Resource Manager VMs are 
supported.
	
	
	
o	
Not enough data is available: In order to generate accurate traffic 
hardening recommendations, security center requires at least 30 days 
of traffic data.
	
	
	
o	
VM is not protected by ASC standard: Only VMs that are set to 
security center’s standard pricing tier are eligible for this feature.
	
3.	 From the Unhealthy tab, select a VM to see its recommendation rules and 
alerts.
	
4.	 A new window will open and show the recommendation rules and alerts:
Figure 8.26: Enforce adaptive network hardening recommendation
	
5.	 You can create your custom rules by clicking + Add rule. You can edit only 
custom created rules.
	
6.	 Select the rule(s) and click on Enforce to apply the rule of virtual machine.
	
7.	 In the Alerts tab, you can see the existing alerts generated due to this security 
gap:

Monitoring Security by Using Azure Security Center      471
Figure 8.27: Enforce adaptive network hardening alerts
	
	
You can see more information about the alert by clicking on that.
	
8.	 When you enforce the rule, it will create a new NSG rule to fix this gap:
Figure 8.28: Update NSG after enforcing adaptive network hardening
In this section, you learnt the process to setup adaptive network hardening in your 
environment. As you know, adaptive network hardening uses a machine learning 
algorithm for its recommendations. You can further narrow down the source and 
destination IP ranges to improve the security posture by hardening the NSG rules 
based on the actual traffic patterns.
File integrity monitoring in Azure Security Center
You would like to monitor any changes in files and registries of operating systems and 
application software. It may be difficult to identify the changes in files and registries 
by just logging into the servers. File Integrity Monitoring (FIM), also known as 
change monitoring examines the changes in files and registries of operating system 
and application software that might indicate an attack. A comparison method is used 
to determine if the current state of the file is different from the last scan of the file. 
You can leverage this comparison to determine if valid or suspicious modifications 
have been made to your files.

472      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
FIM validates the integrity of Windows files, Windows registry and Linux files. You 
select the files that you want monitored by enabling FIM. Security center monitors 
files with FIM enabled for activity such as:
	
•	
File and registry creation and removal.
	
•	
File modifications (changes in file size, access control lists and hash of the 
content).
	
•	
Registry modifications (changes in size, access control lists, type and the 
content).
Security center recommends entities on which you should enable FIM. You can also 
define your own FIM policies or entities to monitor. FIM uses the Azure Change 
Tracking solution to track and identify changes in your environment. When FIM is 
enabled, a new solution, change tracking gets created in Log Analytics workspace. 
If you remove the change tracking resource, the FIM feature will also disable in 
security center.
You should think about the files that are critical for your system and applications 
when choosing which files to monitor. Consider choosing files that you do not 
expect to change without planning. Choosing files that are frequently changed by 
applications or operating system (such as log files and text files) create a lot of noise 
which make it difficult to identify an attack.
Enable file integrity monitoring
Let’s follow these steps to configure FIM in your environment:
	
1.	 Login to Azure portal and go to Azure Security Center.
	
2.	 In left pane, go to File Integrity Monitoring under Advance Cloud 
Defense.
	
3.	 When you get into the File Integrity Monitoring page, you will see the 
list of all Log Analytics workspaces:
Figure 8.29: File Integrity Monitoring dashboard

Monitoring Security by Using Azure Security Center      473
	
	
You will see the following information here on this page.
	
	
•	
Name of the workspace integrated
	
	
•	
Total number of changes happened in the last week (you may see a dash 
- if FIM is not enabled on the workspace)
	
	
•	
Total number of VMs reporting to the workspace
	
	
•	
Geographic location of the workspace
	
	
•	
Azure subscription of the workspace
	
	
•	
ENABLE indicates that FIM is not enabled for the workspace. Selecting the 
workspace lets you enable FIM on all machines under the workspace.
	
	
•	
Upgrade Plan indicates that the workspace or subscription is not running 
under security center’s Azure Defender tier. To use the FIM feature, your 
subscription must be running on Azure Defender tier.
	
	
•	
A blank (there is no button) means that FIM is already enabled on the 
workspace.
	
4.	 Click on the workspace or the ENABLE button to enable FIM. When you click 
on the ENABLE button, a new window will open. In this window, you can 
see the list of recommended settings. These settings have a list of files and 
registry recommended by Azure Security Center:
Figure 8.30: Enforce file integrity monitoring on workspace

474      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
You can select or deselect the files based on your requirement. Click on 
Enable File Integrity Monitoring to enable this feature. Enabling this 
will affect all the machines registered into the selected workspace.
Here, you learnt the process to setup FIM in your environment. In the next section, 
we will see how to study dashboard of FIM. We will see what all information is 
shown on the FIM dashboard.
File integrity monitor dashboard
You can see the dashboard only for that workspace for which you enable the FIM.
On the FIM dashboard, you can see the following details:
	
•	
Total number of machines connected as a source to the workspace.
	
•	
Total number of changes happened during the selected time period.
	
•	
Details about change type (files, registry, and so on).
	
•	
Details about change category (modified, added or removed).
It also has two tabs - Servers and Changes. The Servers tab shows the list of 
connected servers and the Changes tab shows the list of changes happened on all 
connected servers over the period:
Figure 8.31: Updated file integrity monitoring dashboard
In Settings, you can see the list of monitored files, registry and services. You can add 
your own file paths, registry path and service details which you want to monitor:

Monitoring Security by Using Azure Security Center      475
Figure 8.32: Update FIM monitoring setting
In Settings, you can see that the recommended registry paths are added for 
monitoring but their monitoring is not enabled. You need to enable monitoring for 
them manually one by one.
Add a new monitoring parameter
Apart from default selection of files, registry and services, you can add your custom 
file,  folder paths and registry paths for monitoring:
	
•	
Do add custom entry, go to the respective tab that is, Windows Registry, 
Windows Files, Linux Files, File Content and Windows Services.
	
•	
Click on + Add. A new blade will open to take the details about your custom 
parameter.
	
•	
For example, I selected Windows Files. When I went there, the following 
details shown were asked:
Figure 8.33: Add custom folder path for monitoring

476      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
This new parameter will be monitored for connected servers whether all the 
servers have this path or not.
In this section, we saw the steps to modify the FIM parameters. It is very important 
in day-to-day tasks when you may get a task to add a new monitoring rule or remove 
some old monitoring rules.
Manage JIT access through Azure Security Center
Being a security administrator, you would not like to expose your servers all the time 
to all users. You will look for a solution which asks users to take approval before 
getting inside the servers and the time duration of access window also been limited. 
You can get these solutions from Azure Security Center if you are on security center’s 
standard pricing tier. You can lock down inbound traffic to your Azure VMs with JIT 
virtual machine (VM) access. This reduces exposure to attacks while providing easy 
access to connect to VMs when needed.
Brute force attacks commonly target management ports to gain access to a VM. If 
successful, an attacker can take control over the VM and establish a foothold into 
your environment.
You can reduce brute force attacks by limiting the amount of time a port is open. 
Management ports don’t need to be open at all times. They only need to be open 
while an administrator wants to connect to the VM for perform management or 
maintenance tasks. When JIT is enabled, security center uses NSG and Azure 
Firewall rules, which restrict access to management ports so that they cannot be 
targeted by attackers.
Just-in-time access overview
When JIT is enabled, security center creates an NSG rule to lock down inbound 
traffic to your Azure VMs. You select the ports on the VM to which inbound traffic 
will be locked down. These ports are controlled by the just-in-time solution.
When a user requests access to a VM, security center checks that the user has Role-
Based Access Control (RBAC) permissions for that VM. If the request is approved, 
security center automatically configures the NSGs and Azure Firewall to allow 
inbound traffic to the selected ports and requested source IP addresses or ranges for 
the time that was specified. After the time has expired, security center restores the 
NSGs to their previous states. Those connections that are already established are not 
being interrupted.

Monitoring Security by Using Azure Security Center      477
Configure JIT access in Azure Security Center
You can configure JIT access feature from Azure Security Center and ask for the 
access. Let’s follow these listed simple steps to configure JIT access from security 
center:
	
1.	 Login to Azure portal and go to security center.
	
2.	 Go to Just-in-time VM access under the Advance Cloud Defense section:
 
Figure 8.34: JIT dashboard in security center
	
	
You will see the dashboard as shown in the preceding figure. This dashboard 
shows information about the state of your VMs. This dashboard has three 
tabs:
	
	
•	
Configured: This tab shows the VMs that have been configured to support 
JIT VM access. The data presented is for the last week and includes for 
each VM the number of approved requests, last access date and time and 
last user.
	
	
•	
Not Configured: This tab shows the VMs that can support JIT VM access 
but have not been configured to. 

478      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
•	
Unsupported: This tab shows the list of VMs for which JIT is not 
recommended. Reasons that can cause a VM not to be recommended are:
	
	
	
o	
Missing NSG: The JIT solution requires an NSG to be in place.
	
	
	
o	
Classic VM: Security center JIT VM access currently supports 
only VMs deployed through Azure resource manager. A classic 
deployment is not supported by the JIT solution.
	
	
	
o	
Other: A VM is in this category if the JIT solution is turned off in the 
security policy of the subscription or the resource group or if the VM 
is missing a public IP and does not have an NSG in place.
	
3.	 Click on the Not Configured tab. It will show the list of servers for which you 
can enable JIT. Select the server(s) and click on Enable JIT on VMs.
	
4.	 This will open a new window. In this window, you can see the list of pre-
recommended ports and also can add rule for any new port by clicking +Add:
Figure 8.35: JIT VM access configuration
	
5.	 Click on OK and save to enable JIT with configured settings on the selected 
VMs.
	
6.	 Now on the dashboard, you can see the entry of this VM under the Configured 
tab.
	
7.	 After enabling JIT on VMs, you can see the changes in respective NSGs of 
those VMS:

Monitoring Security by Using Azure Security Center      479
Figure 8.36: Change in NSG rules after applying JIT access
	
	
As shown in the preceding figure, a new NSG rule is been created with 
highest priority to block the access on port 22, 80, 3389, 5985, 5986. We will 
see what changes happens in NSG when a user request for access.
In this section, we saw a step-by-step process to enable and configure JIT access. In 
the next section, we will see how to raise a request for JIT access.
Request JIT access
In the previous steps, you have setup JIT and have configured JIT for one virtual 
machine. In this section, we will see how to request JIT access for the virtual machine:
	
1.	 A user who wants to access the virtual machine needs to go to security center 
and JIT access for the VMs section.
	
2.	 On JIT access dashboard, you can see the configured VM under the Configured 
tab:
Figure 8.37: Request access in JIT

480      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
3.	 You can select the virtual machine and click on Request access. This will 
open a new window to choose the ports to be open during JIT access:
Figure 8.38: Choose the ports to open through JIT access
	
4.	 In this window, you can see the list of ports which you put in JIT access 
requirement. You can toggle the button to On to select the port to be open. 
In Allowed Source IP, if you choose My IP, then the portal detects your 
public IP to allow port access from this IP. If you want to put a custom IP or 
IP range, then you can choose IP Range option. By selecting IP Range, the 
next column becomes active to enter the IP range. You can move the slider to 
change the allowed time period of access.
	
5.	 Once you put all these settings, you can put a justification and click on Open 
ports.
	
6.	 After this request, you see the updated JIT dashboard as shown in the 
following figure:
Figure 8.39: Updated JIT dashboard

Monitoring Security by Using Azure Security Center      481
	
	
The updated dashboard shows that one request was approved, the last 
approved session is still active, the request was to access port 3389 and the 
request was made by user Jayant.
	
7.	 Now, let’s see what changes happen in virtual machine’s NSG. Go to the 
virtual machine and networking to see the applied NSG rules:
Figure 8.40: Update NSG rules after JIT access enablement
	
	
You can see that a new allowed rule is been created to allow port 3389 from 
source (being my public IP) to destination (private IP of this VM).
In this section, we saw the process to request for JIT access. Now by the end of this 
section, you are now prepared to configure, manage and maintain JIT access feature 
in your environment. You can now manage restricted access for your users.
Revoke JIT access for a user
As you have seen in the preceding section, to grant the access, a new NSG rule has 
been created. You can just delete the rule if you want to revoke access for any of the 
user. You can just delete the respective allowed NSG rule.
VM vulnerability assessment through security center
Vulnerability identification and analysis is a core component of every cyber risk and 
security program. You can enable vulnerability scanning for your virtual machines 
from Azure Security Center’s Azure Defender pricing tier.
Security center presents two recommendations if it does not find a vulnerability 
assessment solution installed on a VM:
	
•	
Enable the built-in vulnerability assessment solution on virtual machines 
(powered by Qualys): You can see this recommendation only if you have 

482      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
standard tiers of Azure Security Center. It is an invitation to install an Azure 
Security Center Vulnerability assessment extension (powered by Qualys) on 
your machines. This vulnerability scan extension reports its findings directly 
back to security center.
	
•	
Vulnerability assessment solution should be installed on your virtual 
machines: This recommendation appears for both standard and free tiers. 
Use this recommendation to install any of the supported partner solutions. 
You’ll need to purchase a license for your chosen solution separately. 
Supported solutions report vulnerability data to the partner’s management 
platform. You can identify vulnerable VMs on the security center dashboard. 
Switch to the partner management console directly from security center for 
additional reports and information.
	
	
Security center also offers vulnerability analysis for your SQL databases and 
Azure Container Registry images.
Overview
The vulnerability scanner extension works in following phases:
	
•	
Deploy: Azure Security Center deploys the Qualys extension to the selected 
virtual machines.
	
•	
Gather information: The extension collects artifacts and sends them for 
analysis in the Qualys cloud service in the defined region.
	
•	
Analyze: Qualys’s cloud service conducts the vulnerability assessment and 
sends its findings to security center.
	
•	
Report: The findings are available to you in security center.
We will study about these phases in brief in the coming section. We will also see how 
to configure vulnerability scanner in your environment.
Deploy Qualys built-in vulnerability scanner
The simplest way to scan your Azure-based virtual machines for vulnerabilities is to 
use the built-in vulnerability scanner.
To deploy the vulnerability scanner extension:
	
1.	 Open Azure Security Center and go to VM vulnerability assessment under 
the Azure Defender section.
	
2.	 A new window will open with the details and remediation steps for this 
recommendation. In this window, you will see your VMs listed under three 
tabs:

Monitoring Security by Using Azure Security Center      483
	
	
•	
Healthy resources: The vulnerability scanner extension has been 
deployed to these VMs.
	
	
•	
Unhealthy resources: The vulnerability scanner extension can be 
deployed to these VMs.
	
	
•	
Not applicable resources: These VMs can’t have the vulnerability 
scanner extension deployed. Your VM might be in this tab because it’s 
on the free pricing tier, it’s missing the ImageReference class (relevant to 
custom images and VMs restored from backup or it’s not running one of 
the supported OSes:
Figure 8.41: Enable Qualys built-in vulnerability scan1
Figure 8.42: Enable Qualys built-in vulnerability scan2

484      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
3.	 Select the machines on which you want to run the Qualys scan and click 
on Remediate. The scanner extension will be installed on all of the selected 
VMs. Scanning begins automatically as soon as the extension is successfully 
deployed. Scans will then run at four-hour intervals. This interval is hard-
coded and not configurable.
	
	
If the deployment fails on one or more VMs, ensure the target VMs can 
communicate with Qualys’s cloud service on the following two IP addresses:
	
	
•	
64.39.104.113
	
	
•	
154.59.121.74
	
	
In this section, we saw the process to setup Qualys vulnerability scanner 
service. Removal or fixing of vulnerability is very important for any 
environment. Hackers keep an eye on these back doors to get into your 
system.
Container registry image scanning
In the previous section, we used Azure Security Center to check the vulnerability 
of Azure VM. You can use Azure Security Center to scan your container registry 
images also. This also uses Qualys for scanning. The scanning process is same as 
we did in the last section. To scan your container registry images, go to Container 
image scanning in the Azure Defender section. There you will find the list of your 
container registries. Select the required container registry and run the remediation.
The Qualys scan will begin on the container registry and will scan all images in­
side the registry.
Vulnerability scan for SQL database
Azure Defender should be enabled for Azure SQL to scan vulnerability on Azure 
SQL. SQL vulnerability assessment provides visibility into your Azure SQL database 
security state. It is a built-in service in Azure SQL database. It provides actionable 
steps to resolve security issues and enhance your database security. You can enable 
it on Azure SQL database, SQL managed instance database or Azure Synapse.
Let’s follow these steps to run vulnerability scan on Azure SQL DB:
	
1.	 Login to Azure portal and go to the database where you want to enable SQL 
vulnerability assessment.
	
2.	 Go to Security Center under the Security section.
	
3.	 It will open a new window. There you will get an option to enable Azure 
Defender for SQL if you have not enabled these yet. Once Azure Defender is 

Monitoring Security by Using Azure Security Center      485
enabled, you can setup vulnerability assessment for this database.
	
4.	 Scroll down to the end of the page and you will see the View additional 
findings in vulnerability assessment option:
Figure 8.43: Vulnerability assessment for Azure SQL DB
	
5.	 As shown in the preceding figure, you can click on Scan to run the assessment. 
Once the scan is complete, you will also get the assessment report on this 
page. You can export the scan results also.
	
6.	 You can also see the scan history on this page.
You can obtain the same result in Azure Security Center also in SQL vulnerability 
assessment under the Azure Defender section.
Network map
This is another beautiful service of Azure Security Center. Here, you can see the 
network topology of your environment. You can also see the allowed network traffic 
directions:

486      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 8.44: View network topology map in Azure Security Center
As shown in the preceding figure, you can see the subscription at the center and 
VNet, subnets and VMs connected to that.
Azure Defender for IoT devices
Now, most of the machines are being IoT enabled. This makes it very important to 
secure these devices. You can on board your IoT sensors to Azure Security Center to 
scan them against security best practices.
Centralized management of policies by using 
Azure Security Center (regulatory compliance)
Azure Security Center gives the recommendation based on predefined built-in or 
custom policies. When you enable Azure Security Center monitoring for any Azure 
resource, the relative policies evaluate the security compliance for those resources. 
Based on the gap in standard and actual environment, Azure Security Center makes 
the recommendations.

Monitoring Security by Using Azure Security Center      487
Overview
A security policy defines the desired configuration of your workloads and helps you 
to ensure that you are complying with the security requirements of your company 
or regulators.
Azure Security Center makes its security recommendations based on your chosen 
policies. Security center policies are based on policy initiatives created in Azure 
Policy. You can use Azure Policy to manage your policies and to set policies across 
management groups and across multiple subscriptions.
In Security Center, the following options are available to work with security policies:
	
•	
View and edit the built-in default policy: When you enable security center, 
a built-in initiative named ASC default is automatically assigned to all 
security center registered subscriptions (free or standard tiers). To customize 
this initiative, you can enable or disable individual policies within it.
	
•	
Add your own custom policies: If you want to customize the security 
initiatives applied to your subscription, you can do so with custom policies 
in security center. 
	
•	
Add regulatory compliance policies: Security center’s regulatory compliance 
dashboard shows the status of all the assessments within your environment 
in the context of a particular standard or regulation (such as Azure CIS, 
NIST SP 800-53 R4, SWIFT CSP CSCF-v2020).
The preceding listed points are some of the features which you can use through 
Azure Security Center to control Azure Policies.
Enable and disable security policies in security center
In this section, we will see how to enable and disable security policies on your 
subscription or management group.
Enable Security policies
Let’s follow these steps to apply Azure Policies from Azure Security Center:
	
1.	 Login to Azure portal and go to security center.
	
2.	 In security center, go to Security policy under the Management section. 
In security policy, you can see the list of your management groups and 
underlying subscriptions.
	
3.	 You can click on the required management group or subscription to enable, 
edit or view the security policies.

488      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
4.	 Scroll down on the same page and click on Add a custom initiative. 
Here, you can create your custom initiative by choosing the required Azure 
Policies to assign on your subscription or management group. Click on + 
Create new and it will open a new window to take the inputs about policy 
assignments. In the previous chapter, we have already learnt about Azure 
Policy and initiative creation and assignments. Please refer those sections to 
create initiative and assign them to security center.
	
5.	 Once you assign an initiative on security center, it scans your environment 
and gives the recommendations. You can see the recommendations in the 
Recommendations blade and this also can be controlled from the Regulatory 
compliance option under the Cloud security section.
Now, by the end of these steps, you should be capable of applying and managing 
Azure Policies from Azure Security Center. In the next section, we will see how to 
apply compliance standards through security center.
Add industry and regulatory compliance 
standards
Every organization follows some level of compliance. These compliance parameters 
can be your own internal or can be defined by some regulatory standards. There 
are many regulatory standards which monitor and govern the compliance for 
industries. These regulatory standards create compliance rules based on the 
country’s policies and various industry-related aspects. For example, most of the 
financial organizations follow PCI DSS regulatory compliance standards. For 
Azure Security Center, you can check your infrastructure compliance status for any 
desired compliance standard.
Azure Security Center has some pre-defined regulatory compliances listed. You can 
enable the assessment for your environment against those compliances to see the 
gaps between standard and actual security setup.
On the same Security Policy page, you can see the Industry & regulatory 
standards option. Few compliance standards are by default enabled on your 
environment as a part of security center offering:

Monitoring Security by Using Azure Security Center      489
Figure 8.45: Add regulatory compliance standards
You can add few more compliances manually as per your requirement by clicking 
on Add more standards.
You can reach to this point from the Regulatory compliance option under the Cloud 
security section.
Disable security policies in security center
You can disable the applied security policy or parameters at any time based on your 
business requirements:
	
1.	 Login to Azure portal and go to security center.
	
2.	 In security center, go to Security policy under Policy and compliance. 
In security policy, you can see the list of your management groups and 
underlying subscriptions.
	
3.	 You can click on the required management group or subscription to view 
and disable the security policies.
	
4.	 Click on View effective policy. It will open a window. On this page, click 
on Disable to disable this policy from the defined scope.

490      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
This is a quite simple process to disable applied security policies. You just need 
to follow the preceding steps described to disable applied security policies. It is 
important for you to know about the process to enable and disable security policies 
as per the business requirement. You can periodically enable and disable policies for 
better management purpose.
Configure a playbook for a security event 
by using Azure Security Center (workflow 
automation)
In the last chapter, we saw how security center can help produce security alerts. And 
in this chapter, we saw how Azure Monitor produces alerts. In the previous sections, 
we also saw how to configure notification for alerts. There can be different ways of 
notification. Every security and monitoring program includes multiple workflows 
for incident response. These processes might include notifying relevant stakeholders, 
launching a change management process and applying specific remediation steps. 
It is always recommended that you automate as many steps of those procedures 
as you can. This automation reduces manual overhead and can also improve your 
security by ensuring the process steps are done quickly, consistently and according 
to your predefined requirements.
In Azure Security Center, you can create a workflow with predefined remediation 
and notification steps. You use logic apps to trigger notification and remediation on 
security alerts and recommendations. Mostly Azure Monitor just sends platform, 
performance, activity and logs related alerts. We need to configure workflow in 
Azure Security Center to send alert notification from it. This notification has been 
sent by logic apps.
Create logic apps
Azure logic apps is a cloud service. With the help of this you can schedule, automate 
and orchestrate tasks, business processes and workflows when you need to integrate 
apps, data, systems and services across enterprises or organizations. Logic apps 
workflow starts with a trigger. This trigger fires when a specific event happens or 
when new available data meets specific criteria.
Each time the trigger fires, the logic apps engine creates a logic app instance that 
runs the actions in the workflow. These actions can also include data conversions 
and workflow controls such as conditional statements, switch statements, loops and 
branching. You can build your logic apps visually with the Logic Apps Designer, 
which is available in the Azure portal through your browser and in Visual Studio:

Monitoring Security by Using Azure Security Center      491
	
1.	 Login to Azure portal and search for logic apps.
	
2.	 On this page you can see the existing logic apps. Click on + Add to create a 
new logic app. Consumption based Logic app would be enough for this task.
	
3.	 Fill the details as shown in the following figure and click on Review + create:
Figure 8.46: Create logic apps
	
4.	 Once the logic app is created, click on Logic app designer. Although you 
can create your workflow from here, this section has various predefined 
workflows. For security center alerts, select Security from Category:
Figure 8.47: Select logic app workflow templates for security center
	
	
There are few built-in workflow templates: Get notification email when 
Security Center creates a recommendation and Get a notification email 

492      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
when Security Center detects a threat. Click on the template to select 
it. You can choose one or both. Both workflows get triggered from security 
center event and sends email notification.
	
5.	 When you select any of the template, you see the following figure. Here, you 
can configure workflow to define the receiver of email notification:
Figure 8.48: Configure logic app workflow
	
	
Click on + sign next to Office 365 Outlook to attach this logic app with Office 
365 service.
	
	
Now, click on + sign next to Security Center Recommendation to attach this 
logic app with security center. Press Continue when both steps are validated.
	
6.	 When you click on Continue, a workflow will open:
Figure 8.49: Configure email notification template

Monitoring Security by Using Azure Security Center      493
	
	
The preceding figure shows the body of email notification. You can edit the 
fonts and details. From Add new parameter, you can add sender’s email, CC, 
BCC, attachement and importance level. Click on + New step if you want to 
add any other action to this workflow.
	
7.	 Click on Save to save the workflow configuration:
Figure 8.50: Save the workflow configuration
Now, go back to the security center to complete the alert configuration.
In this section, we saw the process to configure Azure logic apps workflow for 
security center. We just saw a small use of Azure logic apps. You can configure even 
more complex workflows and can integrate them with different Azure resources 
such as Azure web apps, function app, and so on.
Configure workflow in Azure Security Center
In the previous section, you have created logic apps workflow for security Center. 
Now, we need to do some configurations in security center to use the logic app:
	
1.	 Login to Azure portal and go to security center.
	
2.	 Go to Workflow automation. Here, you can see existing workflow automations. 
You can enable, disable or delete them from here. Click on + Add Workflow 
automation to create a new workflow.
	
3.	 A new blade will open to take the details about the workflow. There, fill the 
details as shown in the following figure. Give a name to this workflow and 
write a brief description about this workflow. Select the subscription and 
resource group where you want to create this workflow.

494      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
Define the condition of trigger in the Trigger condition section. You can 
choose either security center recommendation or threats detection alert from 
the Select Security Center data types section. You can select some particular 
recommendations or all for trigger condition from the Recommendation name 
section. There are three levels of recommendation severities: Low, Medium 
and High. You can select some or all from the Recommendation severity 
dropdown. Recommendation state can be at Healthy, Unhealthy or Not 
applicable state. Select the Unhealthy state if you want to get trigger for 
non-complaint resource.
	
	
To complete the workflow creation, under the Actions section, select the 
logic app which you created in the last section and click on Create:
Figure 8.51: Fill general information about workflow in Azure Security Center

Monitoring Security by Using Azure Security Center      495
Figure 8.52: Add workflow automation to security center
	
	
Now, the receiver will get email notifications when any recommendation is 
generated by the security center:
Figure 8.53: Email notification from security center
	
	
In the preceding figure, you see an email notification when a recommendation 
triggers.
In the last section, we created Azure logic apps for security center and in this section, 
we learned how to integrate these logic apps with Azure Security Center. After this 
integration, you can directly push the emails from Azure Security Center to recipients.
Investigate security center threat alerts
In the previous section, you have configured the alerts for any recommendation 

496      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
and threat in security center. Now, it is important that you review these alerts 
and recommendations, investigate them and do the remediation. Although you 
have configured alerts to send notification, security center also shows these 
recommendations and threat alerts in its dashboard. You can investigate and 
remediate these alerts from the security center dashboard. In the last chapter, we 
have seen how to remediate recommendation alerts. In this section, we will see how 
to investigate and remediate threat detection:
	
1.	 Go to Azure Security Center, Security alerts under the General section. 
There, you will see the bar graphs to show the alert with different severity:
Figure 8.54: Threat alerts in security center
	
2.	 Click on any of the alert to investigate. A new window will and It will show 
full details about the alert:
Figure 8.55: See active threat alerts in security center

Monitoring Security by Using Azure Security Center      497
	
3.	 In next window you will see details about this alert:
Figure 8.56: General information about threat alert1
	
4.	 On the same page you can see more details about the alert. The following 
figure shows details about this unusual password reset alert:
Figure 8.57: General information about threat alert2
	
	
General information shows the details about the attack. It shows description, 
source, time, number of attempts and so on.

498      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
5.	 Click on Take action to see how you can resolve this alert:
Figure 8.58: Remediation steps for threat alert
As we discussed at various places, threat protection is a very critical feature and 
service for any organization. But after setting up the threat protection service, it 
becomes even more important to analyze and review the recommendations of threat 
protection. In the preceding steps, we saw the process to review the recommendations 
of threat protection. We also saw how threat protection guides us to take necessary 
actions to remediate the threats.
Conclusion
In this chapter, we learned in deep about configuring multiple features of Azure 
Security Center and Azure Defender. You can scan your workloads for vulnerabilities 
through Qualys scan. You can manage policies centrally for your management 
groups, subscription, resource groups and resources from Azure Security Center. 
You also learned how to restrict user access on virtual machines.

Monitoring Security by Using Azure Security Center      499
You are now capable to decide relevant security policies and compliances for 
your environment. You can identify the security gaps based on the security center 
recommendations and can remediate them.
In the next chapter, we will go through Azure Sentinel a SIEM solution from Microsoft 
Azure. We will see how to create alerts for any security incident monitoring issue. 
Also, we will learn more about how to investigate and remediate these alerts.
Multiple Choice Questions
	 1.	 Which Azure service will you use to identify any change in your files?
	
A.	Azure Monitor	
	
	
B.	 Adaptive application control
	
C.	 Just-in-Time VM access	
D.	File Integrity Management
	
Answer: D
	 2.	 Which Azure service will you use to restrict user access on Azure VM?
	
A.	Just-in-Time VM access
	
B.	 Vulnerability scan through built-in Qualys
	
C.	 Adaptive application control
	
D.	Adaptive network hardening
	
Answer: A
	 3.	 You want to scan your environment for one of the regulatory compliance 
standards. Which Azure service will you deploy in your environment?
	
A.	Azure Monitor	
	
	
B.	 Azure Network Watcher
	
C.	 Azure Security Center	
D.	Azure Update Manager
	
Answer: C
	 4.	 You want to control the allowed applications on the servers. Which Azure 
solution will you configure for this purpose?
	
A.	Azure Sentinel	
	
	
B.	 Azure Monitor
	
C.	 Application Insight	 	
D.	Adaptive Application Control
	
Answer: D
	 5.	 Which Azure service would you like to use to send alerts for threats detected 
by security center?
	
A.	Log alerts	
	
	
B.	 Function apps
	
C.	 Logic apps	
	
	
D.	Azure Monitor
	
Answer: C


In this chapter, we will study about Microsoft native Security Information Event 
Management (SIEM) and Security Orchestration Automated Response (SOAR) 
tool, Azure Sentinel. We will study how to configure Azure Sentinel in your 
environment and how to on-board different Azure and non-Azure data sources 
into Azure Sentinel. We will see how to configure built-in and custom alerts when 
Azure Sentinel detects an unusual or threat event. We will do in detail analysis of 
the events generated by Azure Sentinel and will configure automated workflow for 
the event remediation.
Structure
In this chapter, we will learn about following topics:
	
•	
Overview of Azure Sentinel
	
•	
Features of Azure Sentinel
	
•	
Terminologies used in Azure Sentinel
	
•	
Configure data source to Azure Sentinel
	
•	
Monitor the data collected by connected data sources
	
•	
Azure Sentinel overview dashboard
Chapter 9
Monitoring Security 
by Using Azure 
Sentinel

502      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
Analytics in Azure Sentinel
	
•	
See detailed information of threat incidents in Azure Sentinel
	
•	
Investigate threat incidents in Azure Sentinel
	
•	
Workflow automation in Azure Sentinel
	
•	
Threat hunting in Azure Sentinel
	
•	
User and entity behavior analytics in Azure Sentinel
	
•	
Some preview features of Azure Sentinel
	
•	
Conclusion
	
•	
Multiple choice questions (MCQs)
Objective
The objective of this chapter is to understand the functionality of Azure Sentinel, an 
Azure native SIEM tool. After studying this, chapter you should be able to understand 
the features and use cases of Azure Sentinel. You will see how to connect different 
data sources to collect different types of events and configure Azure Sentinel to 
generate alerts and incidents from collected events. You will also be able to configure 
playbooks to automate threat response process. By the end of this chapter, you will 
be able to understand Azure Sentinel dashboard, investigate the incidents and alerts 
and configure Azure Sentinel for proactive hunting and UEBA.
Overview of Azure Sentinel
Azure Sentinel is a Microsoft Azure native SIEM and SOAR solution. Azure Sentinel 
provides comprehensive security analytics and threat intelligence across the 
enterprise. With Azure Sentinel, you get alert detection, threat visibility, proactive 
hunting and threat response. It can collect data from a wide range of platforms such 
as on-premises, multiple clouds, applications, devices and users. Azure Sentinel can 
detect old threats also which were not identified earlier. So, with Azure Sentinel 
you can see current and previous undetected threats. Microsoft uses their years 
of data to provide you artificial intelligence to investigate threats and suspicious 
activities. Azure Sentinel provides built-in orchestration, automated workbooks and 
workflows for rapid response on any threat.
So, Azure Sentinel has four main features: collect, detect, investigate and respond. 
In the coming sections, we will explore more about these features.

Monitoring Security by Using Azure Sentinel      503
Features of Azure Sentinel
In this section, we will study about the features of Azure Sentinel. This will help you 
take decisions about why to use Azure Sentinel:
	
•	
Connect to multiple data sources: As described in the Overview section, 
Azure Sentinel analyzes data collected from various data sources and then 
gives the recommendations. Azure Sentinel can connect with various data 
sources and understand different types of real time data. Azure Sentinel also 
supports non-Microsoft data sources.
	
•	
Workbooks in Azure Sentinel: Once you connect the data source to your 
Azure Sentinel, you can monitor the data in Azure Monitor using Azure 
Sentinel integration with Azure Monitor Workbook. Azure Sentinel has 
many built-in workbooks to work on your data. You can also write your 
custom Workbooks to gain insights on your data.
	
•	
Analytics in Azure Sentinel: When you connect multiple data sources to 
Azure Sentinel, the amount of collected logs become very high. Now, it 
becomes very important to reduce noise and minimize the number of alerts 
you have to review and investigate. Azure Sentinel uses its analytics feature 
to correlate multiple alerts into incidents. Incidents are groups of correlated 
or similar alerts that together create an actionable possible threat that you 
can investigate and resolve. You can use built-in correlation rules or create 
your own correlation rules for analytics. Azure Sentinel also uses machine 
learning rules to map your network activities and then provides an insight 
about anomalies of your resources.
	
•	
Security automation and orchestration: Azure Sentinel uses other Azure 
services such as logic apps and playbooks to automate your common tasks. 
Azure Sentinel uses Azure Logic Apps as a foundation for orchestration and 
automation. There are multiple built-in playbooks for using more than 200 
connectors such as ServiceNow, Azure functions, Jira, Microsoft Teams, 
Slack and so on.
	
•	
Threat investigation in Azure Sentinel: Azure Sentinel uses deep 
investigation tools to understand the scope and root cause of a potential 
security threat.
	
•	
Security threat hunting in Azure Sentinel: Azure Sentinel uses search and 
query tools based on MITRE framework. This helps you to proactively hunt 
for security threats before an alert is triggered.

504      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Microsoft is continuously enhancing the capabilities of Azure Sentinel that will add 
more features in future.
Terminologies used in Azure Sentinel
Before starting the setup, configuration and management of Azure Sentinel, it is 
important that we understand the terminologies used in Azure Sentinel. This will 
help you to correlate the terms which we will use in the coming sections. SIEM 
solutions have never been easy because of their multilayer and multifunction 
structure. But, we can make them a simple and easy tool if we understand their 
terminologies and functionalities step by step:
	
•	
SIEM: Security information and event management.
	
•	
SOAR: Security Orchestration, Automation and Response.
	
•	
MITRE ATT&CK: MITRE ATT&CK is a globally accessible knowledge base 
of adversary tactics and techniques based on real-world observations.
	
•	
Data connectors: Data connectors are the sources to which you can connect 
Azure Sentinel. Azure Sentinel can be feed with the logs collected from these 
data connectors.
	
•	
Events: Events are the logs collected from the connected data source. You 
use Azure Log Analytics Workspace to collect and store the events data. 
For example, if you connect Azure Activity as a data collector, then Azure 
Activity sends all activity logs to Sentinel. These activity logs will be counted 
as events.
	
•	
Alert: Alert is a notification that gets triggered when it meets a defined 
condition. For example, you setup a condition and trigger an alert if someone 
deletes user from Windows server’s administrator group. So, if someone 
deletes a user from the administrator group, Sentinel will report an alert.
	
•	
Incident: Incident is a group of alerts based on some common properties. 
Sentinel may get many alerts for same kind of activities; you may not want to 
get notification for each similar activity. Azure Sentinel uses fusion technique 
to correlate alerts into incidents, so that you get notifications for only required 
alerts. Incidents are automatically created as a result of alerts triggered based 
on detections defined in security analytics.
	
•	
Defined detection: Detection is the condition from which you want to get the 
alert triggered. In alert definition, deletion of a user from the administrator 
group was the defined detection.
	
•	
Workbook: Workbook is a common service across all Azure resources. You 
can see multiple built-in workbooks for many Azure resources. Workbooks 

Monitoring Security by Using Azure Sentinel      505
provide a place for data analysis on log data collected from multiple sources. 
Here, you can write your own query in Kusto Query Language (KQL) to 
analyze the log data collected from data sources. This data analysis can be 
shown in different graphs styles (bar, grid, pie, line, scatter, and so on). The 
analysis chats/graphs can be pinned to Azure dashboard.
	
•	
Workbook template: Workbook template is a collection of multiple 
workbooks. You can collect multiple templates together to see their results at 
one place. Azure Sentinel provides multiple built-in workbook templates.
	
•	
Analytics rule template: Analytics rule template is made of various 
components. It includes a Kusto query, settings to collect events from data 
sources, settings to convert those events into alerts, settings to convert alerts 
into incidents and settings to take action on those incidents.
	
•	
Tactics: Tactics is a categorization of analytics templates. You can decide the 
tactic of a template based on the event collected by its query. You can read 
about tactics on MITRE ATT&CK official page:
	
	
https://attack.mitre.org/tactics/enterprise/
In this section, we learned about few important key words which will be used 
frequently in the coming sections and while configuring Sentinel.
Configuring data source to Azure Sentinel
Once you created Azure Sentinel, the next task is to connect data source with Azure 
Sentinel for data streaming. In this section, you will study about how to setup Azure 
Sentinel in your environment. Azure Sentinel requires to have a Log Analytics 
workspace to store the data from multiple data sources. We have seen how to create 
Log Analytics workspace in the previous chapters which you can refer. There are 
various ways in which Azure Sentinel can connect with different data sources:
	
•	
Service-to-service integration: In this kind of integration, services are 
connected natively such as Microsoft Azure, Windows and AWS services. 
These services use Azure foundation for integration. The following are few 
examples:
	
	
o	
Azure Active Directory
	
	
o	
Azure DDoS protection
	
	
o	
Azure Firewall
	
	
o	
Microsoft 365 defender
	
	
o	
Windows firewall
	
	
o	
Windows security event

506      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
External solutions via API: Some data sources use APIs to connect with 
Azure Sentinel. These APIs are provided by data sources. The APIs connect 
to Azure Sentinel and gather specific data types and send them to Azure Log 
Analytics. The following are few examples:
	
	
o	
Barracuda firewall
	
	
o	
Cisco umbrella
	
	
o	
F5 Big IP
	
	
o	
Qualys VM
	
	
o	
Sophos Cloud Optix
	
•	
External solutions via agents: Some of the data sources need agents to be 
installed for data collection. Azure Sentinel can connect to data sources 
through agents for real time data streaming. Most appliances use Syslog 
protocol to send events to Log Analytics workspace. The format of the logs 
varies but most of the appliances send logs in Common Event Format (CEF) 
based format. Log analytics agent converts CEF formatted logs into the 
format supported by log analytics. The following are few examples:
	
	
o	
Check point
	
	
o	
Cisco ASA
	
	
o	
Fortinet
	
	
o	
Trend micro deep security
	
	
o	
Zscaler
	
	
o	
Juniper SRX
	
	
o	
Symantec VIP
	
	
o	
Azure stack VMs
	
	
o	
Other cloud VMs
	
	
o	
On-premises VMs
Follow these steps to create Azure Sentinel in your environment:
	
1.	 Login to Azure portal, search for Azure Sentinel and click on Create.
	
2.	 A new window will open to connect a Log Analytics workspace. You can 
create a new workspace or can choose the existing.
	
3.	 Once you choose the workspace, Azure Sentinel gets created and connected 
to the selected workspace. Once you connect Azure Sentinel to a workspace, 
you cannot move the workspace to other resource group or subscription.

Monitoring Security by Using Azure Sentinel      507
	
4.	 Now, you need to connect data collectors to your Azure Sentinel. Azure 
Sentinel supports various types of data collectors. You can install log analytics 
agents on physical and virtual machines to collect the logs and send them 
to Azure Sentinel. To collect logs from firewall servers, you can install log 
analytics agents on a Linux Syslog server.
	
5.	 To connect a data source, click on Data Connectors under the Configuration 
section. You will see a list of available data sources. You can choose the data 
sources as per your business requirement:
Figure 9.1: Select data source for connection
	
	
As shown in the preceding figure, you can select the data connector and also 
see the connected data connectors.
	
6.	 In this exercise, we will select few different data collectors. Search and select 
Azure Active Directory from the list. You will see an option to click on Open 
Connector Page. This will open a new window.
	
	
As shown in the following figure, you can see what prerequisites you need 
to configure this type of data source. It also shows the status of prerequisites 
fulfilment. You can select the required events to capture and monitor from 
the list of check boxes. Once you met the prerequisites and select the required 
events, you can click on Apply Changes:

508      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 9.2: Configure ingress data type from Azure AD data source
	
	
The same window has the Next steps tab. It shows relevant built-in 
workbooks, sample queries and analytics rule templates that accompany the 
data connector. You can use these as-is or modify them.
	
	
In the preceding figure, you can also see a left section. This left section shows 
the details about built-in workbooks, queries and analytics rules templates. 
So, for your data connector Azure Active Directory, Azure Sentinel already 
has some built-in content for security analysis on the data collected from 
Azure AD. In the coming sections, we will see how to use these contents.
Once the data source is connected to your Azure Sentinel, it will start data streaming 
into Azure Sentinel. You can view the logs in the built-in workbook and start building 
queries in Log Analytics workspace to investigate the data.
Monitoring the data collected by connected 
data sources
In this section, we will study about how to visualize the data collected from your 
data sources. When you connect your data sources to Azure Sentinel, it starts 
collecting the data. You can use built-in or custom workbooks to visualize this data. 

Monitoring Security by Using Azure Sentinel      509
The workbooks use Kusto queries to analyze the data and show the result in graphs. 
By using the results of these workbooks, you can create your custom dashboard to 
show different graphs for different data sources.
It is simple to use built-in workbooks to visualize the data collected from connected 
data sources. Let’s follow these steps:
	
1.	 Login to Azure portal and go to your Azure Sentinel. In Azure Sentinel, you 
can find the Workbooks section under the Threat management section:
Figure 9.3: Look for built-in workbook for data monitoring
	
	
It will open a new window. Here, you can see all built-in templates under the 
Templates tab. You can also search any requirement template by typing its 
name in the search bar.
	
2.	 Once you get your required template, click on that. It will open a new 
information box in the right pane. This information box contains description 
about this workbook. The description tells what data you can visualize 
through this workbook. This will help you decide the right workbook.
	
	
The Required data types section shows what kind of data you are required 
to collect to use this workbook. If it has green check mark, it means that you 
are collecting the required data, else you will need to connect the right data 
source to collect the required data.

510      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
The Relevant data connectors section shows which data source is required 
to collect the required data type:
Figure 9.4: Information box about the selected workbook
	
	
As shown in the preceding figure, we have the right data source connected 
and Sentinel is also collecting the required data. You can click on View 
template to see the result of this workbook. You can use the Save button to 
save this workbook for any customization. You can see the saved workbooks 
under the My workbooks tab.
	
3.	 A new window will open to show the result of this workbook. You can click 
on small log analytics icon to investigate more about these activities. Next to 
the log analytics icon, you can see three dots (…). They give you more options 
to download this result in excel and pin this result to a dashboard:

Monitoring Security by Using Azure Sentinel      511
Figure 9.5: See the results of selected workbook
	
	
So, here we saw how to use built-in workbooks to visualize the data collected 
from data sources.
	
4.	 If you want to edit this workbook to make a customized copy, you can click 
on the Save button. It will ask you the Azure region to save this workbook. 
You can choose any region because workbooks can be accessed across the 
regions.
	
5.	 Once it is saved, you can find it under the My workbooks tab:
Figure 9.6: See saved workbooks under My workbooks tab

512      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
As shown in the preceding figure, I have two saved workbooks.
	
6.	 To edit any of the workbooks, click on the workbook and it will open a new 
blade in right pane. There you can see the View saved workbook option:
Figure 9.7: Edit saved workbook
	
	
As shown in the preceding figure, this gives you various options to customize 
this saved workbook.
In this section, we studied about the use of workbooks in Azure Sentinel. You can 
create new custom workbooks also as per your requirement. You can click on the + 
Add Workbook option to get start from the scratch to create a new workbook.

Monitoring Security by Using Azure Sentinel      513
Azure Sentinel overview dashboard
In the last sections, we learned about features of Azure Sentinel, how to create Azure 
Sentinel and how to connect different data sources to Azure Sentinel. The Overview 
page of Azure Sentinel has many tiles which gives you different information 
about what is happening in your environment. In this section, we will study about 
these different tiles and information shown by them. Azure Sentinel uses built-in 
workbooks to collect this information from the connected data sources.
You can see the information in the form of tables and charts. So, you can use built-in 
workbooks or can create your custom workbooks to collect logs from the connected 
sources.
To analyze your environment, you can click on each element of these tiles to drill 
down to the raw data from where they are created.
When you go to the Overview page of your Azure Sentinel, you see a toolbar at the 
top of the page. This toolbar tells how many events Sentinel collected over the time 
period selected. By default, it shows the details about last 24 hours.
The small number next to the event collected number shows the change in events 
collected in the last 24 hours. Next, the events counter toolbar shows the number 
of alerts based on your alert generation conditions. We will see how to create and 
enable alerts in the coming sections:
Figure 9.8: Azure Sentinel toolbar in overview page
As you know, Azure Sentinel uses fusion technique to correlate alerts into incidents. 
The next information Azure Sentinel toolbar provides is incidents counts. You can 
also see incident counts by their status. Toolbar also tells the counts of new, active, 
closed (true positive) and closed (false positive) alerts. Being a security administrator, 
you need to pay attention if you see any unusual hike or drop in any counter.
In the following figure, you can see the Events and alerts over time section. Here 
you can see the bar graph for number of events collected from different connected 
data sources and line graph for number of alerts:

514      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 9.9: Event and alert graph on Azure Sentinel overview page
The Potential Malicious event section shows the alert on the map if Azure Sentinel 
detects any inbound or outbound traffic from and to your Azure environment. The 
orange-colored activities are inbound and red colored activities are outbound.
The Recent incidents section shows the recent incidents, their severity and number 
of alerts associated with the incidents:
Figure 9.10: Recent incidents details on Azure Sentinel overview page
Microsoft’s data analysts constantly search the data from your connected data 
sources for anomalies. The Data source anomalies section shows graph if it detects 
any anomalies in your connected data sources:

Monitoring Security by Using Azure Sentinel      515
Figure 9.11: Details about anomalies in data sources
As shown in the preceding figure, if you get anomalies spike chart, you click on the 
chart to see the time period when the spike happened and you can filter the activities 
that occurred during that time period.
Analytics in Azure Sentinel
In the previous sections you studied how to create Azure Sentinel in your environment 
and how to connect data sources with your Azure Sentinel. Now in this section, we 
will study how to generate alerts from the events collected from connected data 
sources. The alert generation rules can be classified into four categories:
	
•	
Scheduled analytics rule: This kind of rules trigger at predefined schedule. 
There are already many built-in scheduled analytics rules’ templates created 
by Microsoft. Each analytics rule template has some query written in it. While 
configuring the rule, you can enable the analytics rule and set the duration 
when they will need to be triggered. For example, you can set schedule to 
run a query every two hours. So, this rule will be triggered and the query 
will run every two hours.
	
	
Apart from these built-in scheduled analytics rules, you can create your own 
custom rules with your own custom queries.

516      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
Microsoft incident creation rule: This type of rule uses Microsoft security 
services to trigger alert. This is a run time alert generation mechanism. Azure 
Sentinel provides a list of Microsoft security services and you can choose a 
security service from the list.
	
•	
Fusion rule: Fusion technology uses scalable machine learning algorithms. 
These algorithms correlate many low-fidelity alerts and events across 
multiple products into high-fidelity and actionable incidents. This fusion 
technology helps in advanced multistage attack detection in Azure 
Sentinel. Fusion is enabled by default. Since the logic is hidden, you cannot 
customize it.
	
•	
Machine learning behavioral analytics rule: This type of rule uses machine 
learning algorithms to analyze your environment. You cannot see the logic 
behind these rules, so you would not know how they work and when they 
run. Due to these hidden properties, you cannot customize them.
Azure Sentinel uses MITRE ATT&CK security framework for reference. You can 
follow this https://attack.mitre.org/ link to know more about MITRE ATT&CK 
framework. The explanation of this framework is out of scope of this book.
Here, we studied about different types of analytics rules. In the coming sections, we 
will see how to implement them.
Creating alerts from built-in scheduled 
analytics rules
You can connect different types of data connectors with Azure Sentinel. When 
Azure Sentinel gets the events from these data connectors, you can configure rules 
to generate alerts based on some threshold and suspicious activity. So, whenever 
the event meets the defined threshold or sees any suspicious activity, it generates an 
alert. A rule with defined threshold is also called as defined detection. Azure gives 
multiple built-in rules templates for each data connector. You can configure these 
rules to get alerts. These built-in rule templates are created by Microsoft’s security 
experts based on known threats, common attack vectors and suspicious activities. In 
this section, we will see how to configure built-in rules to generate alerts:
	
1.	 Login to Azure portal and go to Analytics under the Configuration section 
in your Azure Sentinel.
	
2.	 It will open a new window and shows the Analytics dashboard as shown in 
the following figure:

Monitoring Security by Using Azure Sentinel      517
Figure 9.12: Analytics dashboard before analytics rules configuration
	
	
As shown in the preceding figure, you can see the number of Active rules 
(configured rules), details about active rules under the Active rules tab, 
number of rules as per severity and list of built-in rules under the Rule 
templates tab. Here, you also get options to enable or disable active rules by 
selecting them. When you select any rule template, you can see description 
about that rule in the right section.
	
	
You can scroll to the right section to get more details like SEVERITY, STATUS 
(Enabled/Disabled), description, required data connectors, tactics and edit 
option for the selected rule. You can also create and delete a rule from the 
Analytics page.
	
3.	 Click on the Rule templates to see the built-in rules:
Figure 9.13: Filter and select built-in analytics rules

518      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
As shown in the preceding figure, you can filter the rule based on SEVERITY, 
RULE TYPE, DATA SOURCES and TACTICS. I put a filter for Security Events 
data connector and got the relevant rules. I selected the New user created 
and added to the built-in administrator group rule. The portal showed 
the details about this rule in the right panel. The selected rule also showed 
the required data connector to enable it. You first need to make sure that you 
have the required data connector connected to the Sentinel.
	
	
As the right pane shows, my selected rule requires Security Events data 
connector to be connected. So, I connected this data connector with Sentinel.
	
4.	 Move to the right pane. Here, you can see the rule query written in KQL. This 
is the logic behind this built-in rule. You can use this query to create your 
custom analytics rule. Scroll down to the end and you will see the Create 
rule option. Click on it to configure this rule.
	
5.	 It will open a new window:
Figure 9.14: Fill general details while creating scheduled analytics rule
	
	
As shown in the preceding figure, in the General tab you will see pre-filled 
basic information about this built-in rule template like Name, Description, 
Tactics and Severity. You can update these fields as per your requirements. 
When you create your custom rule template, you will need to fill in these 
details on your own.
	
6.	 Once you are satisfied with the information and settings in the General tab, 
you can move to next Set rule logic tab. The information in this tab is 

Monitoring Security by Using Azure Sentinel      519
important. In this tab, you can see the backend Kusto query which will run 
when this rule gets triggered. You can update this query or write your own 
query to customize this rule template:
Figure 9.15: Defined logic query behind selected analytics rule
 
 
As shown in the preceding figure, you can see logical query behind this rule.
 
7. On the same page, you will find Alert enrichment section. When your SOC 
analyst gets the incident, he/she will need to understand quickly what the 
incident is about. Alert enrichment has two features to enrich your alert 
with more relevant information. It makes SOC analyst’s task easier and 
investigation faster:
Figure 9.16: Entity mapping for query code

520      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
•	
Entity mapping
	
	
	
As you know, Azure Sentinel uses MITRE ATT&CK framework as a 
reference. MITRE ATT&CK attaches different types of data identifiers 
with some pre-defined entities. So, entity is a collection of data identifier. 
Azure also uses these entities and data identifiers. Each query collects 
some data from connected data collectors. The collected data can 
represent a data identifier.
	
	
	
To understand more about data identifiers and entities, let’s take our 
scenario. Here, we are collecting security event data from connected 
Windows machines. In this security event data, we get information 
about 
the 
computer, 
TimeStamp, 
CreatedUser, 
CreatedUsersID, 
AccountThatAddedUser, 
CreatedUserEventID 
and 
many 
more. 
This information can be linked with some data identifiers, such as, 
AccountThatAddedUser can be linked to name, CreatedUser can be linked 
to display name and computer can be linked to HostName.
	
	
	
Name and display name data identifiers represent account entity and 
HostName represents host entity. So, if you need to choose the correct 
entity for your query, you need to take the bottom to top approach. There, 
you will need to identify the collected data, data identifier and entity.
	
	
	
You can add up to three data identifiers to an entity and five entities to a 
query rule.
	
	
	
If you choose an entity, it may have some required identifiers which 
should be presented. Like, account has Name and host has HostName as 
a required identifier. You cannot add these entities without adding the 
required identifiers.
	
	
	
You can follow this Microsoft reference link to know about pre-defined 
entities and their data identifiers:
	
	
	
https://docs.microsoft.com/en-us/azure/sentinel/entities-reference
	
	
•	
Custom details
	
	
	
This is the second feature of alert enrichment. Although alert may have 
sufficient information to tell you about the issue, you can add few 
custom details also. The Custom details section use the data which was 
collected by an event.
	
	
	
To understand this, let’s take our scenario:

Monitoring Security by Using Azure Sentinel      521
Figure 9.17: Configure custom details for alert
	
	
	
As shown in the preceding figure, I am adding two custom details about 
user creation time and user addition time. You can add up to twenty 
custom details to a rule.
	
	
•	
Alert details
	
	
	
Here, you can select parameters in your alert that can be represented in 
the name or description in each instance of the alert, or can contain the 
tactics and severity assigned to that instance of the alert. Enter free text 
in the following fields and to insert a parameter, type a column name 
from the query results surrounded by double curly brackets for example 
{{columnName}}. If the parameter has no value (or an invalid value in the 
case of tactics and severity), the alert details will revert to the defaults 
specified in the first page of the wizard.
	
8.	 The next section on this page is Query scheduling:
Figure 9.18: Setup scheduled to run the query
	
	
In query scheduling, we setup the frequency of query execution and period 
to analyze data. As shown in the preceding figure, I am running query every 
day (frequency) and analyzing data for every day. The data analysis duration 
value cannot be less than frequency.

522      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
9.	 The next section on this page is Alert threshold:
Figure 9.19: Setup alert threshold
	
	
In Alert threshold, we define the threshold when the alert should get 
triggered. In our scenario, I am configuring threshold to zero. So, if we get 
any such event, it will trigger an alert.
	
10.	 The next section on this page is Event grouping:
Figure 9.20: Select how to group events in alerts
	
	
In Event grouping, you decide how to group events generated for this rule 
in alert. You can configure to group all events generated in defined time 
period in single alert or in separate alerts. For now, a rule can generate up to 
20 alerts. If you set Event grouping to Trigger an alert for each event 
(preview), and the rule’s query returns more than 20 events, then each of the 
first 19 events will generate a unique alert and the 20th alert will summarize 
the entire set of returned events. In other words, the 20th alert is what would 
have been generated under the Group all events into a single alert 
option.
	
11.	 The next section on this page is alert Suppression:
Figure 9.21: Set alert suppression for some time

Monitoring Security by Using Azure Sentinel      523
	
	
Sometimes, you do some activity in your environment, and you know that 
this activity will generate alerts. You would not want to generate those 
false alerts while you are doing the activity. So, you can suppress alerts for 
some time. You can toggle the switch to On and can put the duration for 
suppression.
	
12.	 The next section on this page is Results simulation. Results simulation is 
a beautiful feature of Azure Sentinel. You can use current data and query 
to check the outcome. This will also help you verify the correctness of your 
query. You can click on the Test with current data option to feed the data 
in simulator and it will you the result:
Figure 9.22: See the query result in results simulation section
	
	
The preceding figure is showing that there are two such events where user 
has been added to the administrator group.
	
13.	 Once all the preceding configurations have been made, you can move to the 
next tab, Incident settings (Preview) as shown in the following figure:

524      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 9.23: Enable incident creation from alerts
	
	
The first section on this page is Incident settings. Azure Sentinel can 
group multiple events together and can generate a single incident on behalf 
of them. Here, you can decide whether the alerts that are triggered by this 
analytics rule should generate incidents or not.
	
14.	 Once you have decided to create incidents from the alerts, you need to decide 
whether you want to group these alerts into incident. If the answer is yes, 
then what should be the logic or parameter to group the alerts? You setup 
this logic in the Alert grouping section:
Figure 9.24: Set alerts grouping for incidents creation

Monitoring Security by Using Azure Sentinel      525
	
	
As shown in preceding figure, you toggle the enable switch to enable alerts 
grouping into incidents. Up to 150 alerts can be grouped into a single incident. 
If more than 150 alerts are generated, a new incident will be created with the 
same incident details as the original and the excess alerts will be grouped 
into the new incident.
	
	
Next, you select the time frame you would like to group the alerts which will 
be generated in this time frame. Our configuration says, group all alerts into 
incident which are generated in last 5 hours.
	
	
Now you can decide the logic to group the alerts. As of now, you have three 
options to group the alerts:
	
	
•	
Grouping alerts into a single incident if all the entities match 
(recommended)
	
	
•	
Grouping all alerts triggered by this rule into a single incident
	
	
•	
Grouping alerts into a single incident if the selected entities’ 
types and details match (you can select the defined entities and details from 
the drop down).
	
15.	 Finally on this page, you also get an option to open previously closed similar 
incidents.
	
16.	 The next tab is Automated response. Here you can define automate action 
when an alert or incident triggers. It uses Azure Logic App based playbooks 
to automate the response. We will study about automated playbooks in the 
coming sections. For now, I am leaving default configuration.
	
17.	 Click on Review and create to create this rule.
In this section, we studied how to create alerts from built-in scheduled analytics 
rules. While creating custom scheduled analytics rules, you can follow the same 
steps described earlier in this section. The main change required is, you will need to 
write your own Kusto logic query.
Creating alerts from built-in Microsoft security 
analytics rules
In the previous section, we studied about creation of alerts from built-in scheduled 
analytics rules. In this section, we will study about creation of alerts from Microsoft 
analytics rules. As of now Microsoft analytics rules support only few data sources. 
So, you can create alert based on those Microsoft services only. Here is the list of 
supported Microsoft security services for analytics rules:

526      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
Azure Defender
	
•	
Azure Active Directory Identity Protection
	
•	
Azure Defender for IoT
	
•	
Microsoft Cloud App Security
	
•	
Microsoft Defender for Office 365
	
•	
Microsoft Defender for Endpoint
	
•	
Microsoft Defender for Identity
To configure alerts from built-in Microsoft security rules, let’s follow these steps:
	
1.	 Go to Analytics under the Configuration section of Azure Sentinel in Azure 
portal.
	
2.	 Click on Rule templates to see the list of built-in templates:
Figure 9.25: Filter and select built-in Microsoft security analytics rule
	
	
As shown in the preceding figure, apply filter to select rule type and data 
source. Here, I am selecting Azure Defender as a data source. To collect data 
from Azure Defender, you need to enable Azure Defender plan for your 
Azure subscription in Azure Security Center.
	
3.	 Click on the template and a new information box will open to the right. 
Here, we are selecting a built-in Create incidents based on all alerts 
generated in Azure Security Center template. In the right box, you will 
find the information about connection status of your data source when it got 
connected. Scroll down to the end and you will find the option to Create 
rule. Click on it.

Monitoring Security by Using Azure Sentinel      527
	
4.	 A new window will open with General information:
Figure 9.26: Fill general details while configuring new Microsoft security analytics rules
	
	
As shown in the preceding figure, you can see the name and description of 
this rule. You can modify them if needed. You can toggle between Enabled 
and Disabled for this rule.
	
	
Analytics rule logic shows a dropdown. The Azure Defender option 
is already selected there as a default data source. You should not change 
that because that will change the backend configuration and can break the 

528      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
connection between query and data source type. This may result in no event 
collection.
	
	
In the Filter by severity option, you can decide which severity alerts you 
want to collect from Azure Security Center.
	
	
In the Include specific alerts option, you can put a keyword which you 
want to look for while creating Azure Sentinel incidents from security center 
alerts. After putting the specific keyword, Sentinel will only create incidents 
from alerts that contain the following text in the alert name.
	
	
In the Exclude specific alerts option, you can put a key word which you 
want to ignore while creating Azure Sentinel incidents from security center 
alerts. After putting the specific keyword, Sentinel will only create incidents 
from alerts that do not contain the following text in the alert name.
	
5.	 You can move to the next tab once you fill this information. In Microsoft 
security services-based analytics rules, you cannot see the backend query 
logic like you could see in scheduled analytics rules. The next section is for 
automated response. Here, you can create an automated response playbook by 
using Azure Logic Apps. We will see the playbook creation in the coming 
section. You can move to the next tab to review and create this rule.
	
6.	 Once you create the rule, you can see the rule on the Analytics dashboard:
Figure 9.27: Analytics dashboard after analytics rules activation
	
	
The preceding figure shows our all-active analytics rules.
In this section, we created built-in Microsoft security services-based analytics rule. 
You can also create custom Microsoft security services-based analytics rules. Since 

Monitoring Security by Using Azure Sentinel      529
for configuring custom Microsoft security services-based analytics rules you do not 
need to write the Kusto query, it becomes easier. You can follow the same steps 
which we used to create custom scheduled analytics rules. While following those 
steps, you just need to select Microsoft Incident creation rule from the + Create 
drop-down.
Detailed information of threat incidents in 
Azure Sentinel
In the previous sections, we studied how to connect data sources to Azure Sentinel 
and how to use analytics rules to create incidents from the alerts collected through 
data sources. In this section, we will study, how to see detailed information of threat 
incidents. Here, you will see the details of alerts and events associated with the 
incidents. You will also learn how to assign an incident, change the severity and 
status.
Let’s follow these steps to see details about an incident in Azure Sentinel:
	
1.	 In Azure Sentinel, go to Incidents section under Threat management. There, 
you can see the list of all incidents. This list gives information about how 
many incidents you have, what is their status (open, in progress or closed), 
time of incident occurrence and time of incident update:
Figure 9.28: See the status of incidents
	
	
As shown in the preceding figure, you can set the time period for which you 
want to see the incident details. You can see the count of Open incidents, new 

530      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
incidents and Active incidents for a selected time period. In the list, you 
can see title of the incident, number of alerts associated with the incident, 
data source collector, time of incident creation, time of last update on the 
incident and user ID of whom the incident is assigned.
	
	
You can filter the incidents based on Severity, Status, Product name and 
Owner. Based on Severity and Status, you can decide the incident to 
work on.
	
2.	 Now to further investigate, click on the incident and it will open a new 
information box on the right side:
Figure 9.29: See brief detail about the incident
	
	
Here, you can click on the Owner tab to assign ownership to this incident. 
From the Status tab, you can change the status and from the Severity tab 
you can change the severity of this incident. You can also see the row events 
collected from the data sources which triggered the alerts and details about 
the alerts also.
	
3.	 Click on the View full details button to see more information about this 
incident. This will open a new window:

Monitoring Security by Using Azure Sentinel      531
Figure 9.30: Detailed timeline of incident
	
	
The new window has few tabs. Each tab will help you investigate the incident. 
The Timeline (Preview) tab shows the list of all alerts and the right box 
shows detail about these alerts. You can see more information about the alert 
in log analytics by clicking on Link to LA.
	
	
The Alerts tab shows the list of all alerts which are used to create this 
incident:
Figure 9.31: List of alerts which generated the incident
	
	
Here, you can see the severity of alerts, name of alerts, number of events 
associated with the alert and other information. You can also view the 

532      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
automated playbook to act on these alerts. You can see more details about 
the event by clicking on the number of events.
	
	
In the Entities tab, you can see the list of entities associated with this alert. 
You can click on each entity to view the associated incidents with the entity.
Investigating threat incidents in Azure 
Sentinel
In the last section, you studied how to see the details about an incident. In this section, 
you will study how to investigate threat incidents. In incident analysis process, you 
try to find the source of threat, impacted resources and threat remediation plan.
To analyze the threat incident, you need to define entity mapping fields when you set 
up your analytics rule. The investigation graph requires that your original incident 
includes entities. Azure Sentinel uses investigation graph service to show deep dive 
relations between entities, threat sources and impacted targets.
The investigation graph helps you understand the scope and identify the root cause 
of a potential security threat by correlating relevant data with any involved entity. 
You can dive deeper and investigate any entity presented in the graph by selecting 
it and choosing between different expansion options.
The investigation graph provides you with:
	
•	
Visual context from raw data: The live, visual graph displays entity 
relationships extracted automatically from the raw data. This enables you to 
easily see connections across different data sources.
	
•	
Full investigation scope discovery: Expand your investigation scope using 
built-in exploration queries to surface the full scope of a breach.
	
•	
Built-in investigation steps: Use predefined exploration options to make 
sure you are asking the right questions in the face of a threat.
Let’s follow these steps to investigate an incident:
	
1.	 Click on the Investigate button in Figure 9.29, it will open an investigation 
graph. Investigation graph will show entities connecting with alerts. each 
resource connected further:

Monitoring Security by Using Azure Sentinel      533
Figure 9.32: Investigation graph in Azure Sentinel
	
	
The preceding figure shows a relation between entities and alerts.
	
2.	 You can click on an entity to see brief information about that:
Figure 9.33: See details about entity in investigation graph

534      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
You can see full detail about entity by clicking on the View full details 
option:
Figure 9.34: Detailed information about entity through investigation graph
	
	
The full details option shows more information about the entity. It the entity is 
an Azure resource then you get its Azure related information also. Out select 
entity is an Azure VM so you can see its Azure platform information such as 
subscription name, ID, resource group, location, heartbeat synchronization 
with Azure Monitor, any recommendations, and alerts from Azure Defender 
(Azure Security Center), and Microsoft Defender for endpoint.
	
3.	 You can further investigate about these recommendations and alerts by 
clicking on them.
	
	
On this same page, in right box you can see a graph and a list to show alerts 
and event s associated to this entity. The following figure is showing number 
of alerts and security events associated with this entity.

Monitoring Security by Using Azure Sentinel      535
	
	
You can further click on alert counts to get more details about them. Similarly, 
you can click on event counts also to get more information about events 
related to this entity:
Figure 9.35: List and graph related to events and alerts for an entity
	
	
When you click on alert or event counts, a new window will open with a 
Kusto query. This query will fetch the details about alerts and events.
	
4.	 In the investigation graph, if you click on the entity, you can also see a list of 
questions that was designed by Microsoft security experts and analysts per 
entity type to deepen your investigation. These options are called exploration 
queries:

536      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 9.36: Exploration of queries in investigation graph
	
	
In our example, you see the preceding figure when you click on computer 
entity.
	
5.	 Now if you further click on the Related alerts and User accounts created 
or deleted options, the investigation graph will get further extended:
Figure 9.37: Extended information in investigation graph

Monitoring Security by Using Azure Sentinel      537
	
	
The investigation graph gets transformed in as shown in the preceding figure 
once you click on related alerts and user account created options. So, from 
here going through the alerts and its events you can do a deep investigation 
about an incident.
	
6.	 After investigating the root cause and source of threat, you can close the 
incident. To close an incident, go back to the incident’s full details page. On 
the left top of this page, you get option to change the status to Closed from 
the dropdown.
	
	
Sentinel provides you different categories to put incident closure reason. 
Based on your investigation you can select a best fit for your closure reason. 
Sentinel also gives you an option to put comment about your closure. You 
can put your investigation findings there before closing the incident:
Figure 9.38: Select the closure reason while closing the incident
	
	
After choosing the classification for closure and providing the comment, you 
can click on the Apply button to close the incident.
In this section, we studied about investigation process and investigation graph in 
Azure Sentinel. There could many other approaches to investigate on an incident 
based on security administrator’s thought process. But here we went through 
the core components of Azure Sentinel investigation feature which any security 

538      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
administrator would use while investigation. So, after this section you can evaluate 
the incidents, alerts and event in Azure Sentinel and can identify the root cause of 
threats, source of threats, and target impacted resources.
Workflow automation in Azure Sentinel
In this section, we will study about Azure Sentinel automation rules are, and how 
to use them to implement your Security Orchestration, Automation, and Response 
(SOAR) operations. Workflow automation is a centralized place from where you 
can centrally manage all the automation of incident handling. With automation rules 
you can streamline automation use in Azure Sentinel and can simplify complex 
workflows for your incident orchestration processes. Automation rules are triggered 
by the creation of incidents. You can set conditions when actions will run based on 
the incident and entity details and on analytics rules. You can also set the order of 
actions and the rule’s expiration time.
Workflow automation can simplify and accelerate the actions on incidents. With 
these workflows you can assign incidents to someone, change incident severity, 
send email notifications, send alerts through any incident management tool, run 
playbook to take any action, and many more. Workflow automation uses playbooks 
created using Azure Logic Apps. Playbooks are collection of actions sequence which 
can be taken in response to an alert or incident in Azure Sentinel. Playbooks can 
be run automatically based on defined thresholds or conditions. You can also run 
playbooks manually or on-demand.
The steps taken in a playbook can different based on the task, incident, and alerts. 
For example, you want to create playbook where you want to get notified when any 
new user is added to Azure Active Directory and promoted to global administrator. 
You can create a playbook which takes the following listed actions:
	
1.	 When playbook is called by an incident created for new Azure AD user with 
global administrator role, it opens a ticket in your IT ticketing system.
	
2.	 Playbook also sends a notification to Microsoft teams or Slack channel of 
your security team.
	
3.	 Playbook can also send an email to senior security administrators with 
complete details of the alert. The email can also have links for some actions, 
those can be taken by security administrators. It may have action for Delete 
and Ignore.
	
4.	 Playbook can wait until security administrator gives any input. If security 
administrator presses Delete, playbook will delete newly created global 
administrator, playbook will ignore this incident if security administrator 
presses the Ignore button.

Monitoring Security by Using Azure Sentinel      539
When you create playbooks, these playbooks will be stored into a resource group. 
Azure Security Insight should have Azure Sentinel Automation Contributor 
permissions on the resource group where you are storing your playbooks. It allows 
automation rules to run playbooks.
Creating Playbook for Azure Sentinel
In this section, we will study how to create a playbook in Azure Logic App to 
automate an action for Azure Sentinel incident. This playbook will get triggered 
when it meets the trigger condition set for it. In the playbook, you will define the 
actions taken when the playbook gets triggered.
Now let’s follow these steps to create new playbook and attach it with new 
automation rule/condition:
	
1.	 In Azure Sentinel, go to Automation under the Configuration section. It 
will open a new window. There you can see existing automation rules and 
playbooks.
	
2.	 Click on + Create and choose the Add new playbook option. It will open a 
new window to take inputs to create new logic app for this playbook.
	
3.	 As shown in the following figure, you can fill basic details:
Figure 9.39: Create new logic app for playbook
	
	
Select subscription, choose, or create new resource group for the logic app. 
Give a name to this logic app and select the deployment region. You can 

540      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
leave remaining setting as default or if you want to monitor your playbook’s 
activity then you can mark the Enable log analytics check box and enter 
your log analytics workspace name. Click on Create to start the deployment.
	
4.	 Once the deployment is complete, go to the logic app. Click on Logic app 
designer under the Deployment tools section. Here, you can find many 
built-in logic app templates for different Azure services.
	
5.	 Click on Blank Logic App and it will open a new window. Each playbook 
starts with a trigger. The trigger defines the action that will start the playbook 
and the schema that the playbook is expected to receive. Search for Azure 
Sentinel in the search bar.
	
6.	 Azure Sentinel offers two built-in triggers. (More would be added in future):
	
	
•	
When a response to an Azure Sentinel Alert is triggered (preview)
	
	
•	
When Azure Sentinel incident creation rule was triggered 
(preview)
	
	
You can select the trigger as per your requirement. I am choosing When Azure 
Sentinel incident creation rule was triggered (preview) as shown in 
the following figure:
Figure 9.40: Built-in triggers in logic app for Azure Sentinel
	
	
The preceding figure shows the result of triggers associated for Azure 
Sentinel. The Actions tab shows the list of actions which can be taken by the 

Monitoring Security by Using Azure Sentinel      541
playbook when any selected trigger activates this playbook.
	
7.	 Now after selecting this trigger, you need to add actions to this playbook. 
These actions will be taken when this playbook gets activated. The action 
defines what happens when this playbook executes. You can add actions, 
logical conditions and loops by selecting New step:
Figure 9.41: Add action to the logic app
	
	
You get the preceding figure when you click on the New step option. Here, 
you can search for required actions and connectors for this logic app.
	
8.	 In the next step, I am attaching this trigger to send an email to security 
administrators. So, I searched Outlook in the search bar of the Choose an 
operation box. You will be asked to sign in to connect with your mailbox.
	
9.	 Once you are connected with your organization’s mailbox, you can enter the 
email address of recipients:
 
Figure 9.42: Configure playbook to send an email for an incident in Azure Sentinel

542      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
As shown in the preceding figure, in the subject you can add any custom 
message with a dynamic content. In the body box, you can put any custom 
message which you want to show. You can click on the link icon and from 
there you can select some predefined dynamic content about the incidents, 
alerts, entities and tactics from Sentinel.
	
10.	 For this demonstration, I am just sending an email as an action. You can add 
more conditions and actions to make it a more complex workflow. Click on 
Save to finalize the workflow in the logic app:
Figure 9.43: Email notification from logic app for a threat incident
	
	
You get this type of email notification from logic app for an incident.
In this section, you studied the process of creating playbook for Azure Sentinel. In 
the next section, we will bind this playbook with Azure Sentinel incident.
Automating threat incident response in Azure 
Sentinel through playbook
In the previous section, you created your playbook, defined the trigger and 
prescribed the actions that it will take and the outputs it will produce. Now, you 
need to determine the criteria under which it will run and set up the automation 
mechanism that will run it when those criteria are met. There are various places from 
where you can setup this automation mechanism like automation blade, analytics 
rules wizard and incident rule wizard. We will set it from the Automation option 
under the Configuration section:
	
1.	 Go to the Automation option in Azure Sentinel. It will open a new window. 
Here you can see the count of automation rules, enabled automation rules 
and playbooks associated with Sentinel.

Monitoring Security by Using Azure Sentinel      543
	
2.	 Click on + Create and select Add new rule to create a new automation rule.
	
3.	 A new blade will open to take some inputs. Here, you will define the 
condition and associate the actions for this rule.
	
4.	 Let’s start filling this blade:
Figure 9.44: Create new automation rule in Azure Sentinel
	
	
As shown in the preceding figure, you can put a name for this automation 
rule. After this actual configuration starts, in the Conditions section, you 
need to put the condition when you want to trigger this rule. You can select 
an analytics rule from the drop-down list. It shows all analytics rules which 
are active in your Sentinel. You can add multiple conditions in sequence by 
clicking on + Add condition. So, this rule will activate when it meets all the 
defined conditions.
	
	
In the Actions section, you can select actions from the drop-down. You 
can create a sequence of actions to be taken by this automation rule. In our 
example, we are assigning the incident an owner, then changing its status to 
Active (in progress) and then triggering the playbook which we created in 
the previous section.
	
	
As you know, there are two types of built-in triggers in logic app for Azure 
Sentinel. You can only select the playbooks which starts with trigger When 
Azure Sentinel incident creation rule was triggered. Any playbook 
starting with trigger When a response to an Azure Sentinel Alert is 
triggered will not be shown in the drop-down.

544      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
To access the playbook, your Sentinel should have access on the resource 
group where these playbooks are residing. If the Sentinel does not have 
correct permission on the playbook’s resource group, then the playbooks 
will appear greyed out in the drop-down.
	
5.	 You can also set an expiry date for this automation rule. After that, this rule 
will be disabled and will not take any action although it meets the conditions.
	
6.	 Automation rules run according to priority. You can set the priority order for 
this automation rule.
	
7.	 Once you have filled the preceding information, you can click on Apply.
When you are configuring Azure Sentinel to run a playbook through automation 
rule, your account should have Logic App Contributor access on the resource group 
where the logic app/playbook is residing. Also, Azure Security Insights require 
Azure Sentinel Automation Contributor permission on the resource group where 
the logic app/playbook is residing.
In this section, we studied how to configure automated response for a threat incident 
in Azure Sentinel. In the next section, we will study how to configure automated 
response for an alert from analytics rule.
Automating alert response through playbook
In the Analytics in Azure Sentinel section, we studied about setting up analytics rules 
in Azure Sentinel. While setting up the rules, there was a step to configure automated 
response. We skipped that step while studying about analytics rule setup. We will 
pick that now. To set up the playbook for analytics rules, let’s follow these steps:
	
1.	 Go to the Analytics tab under the Configuration section.
	
2.	 Here, you can see a list of all active analytics rules. Select the analytics rule 
for which you want to configure automated response.
	
3.	 It will open a new blade on the right side. Scroll down till the end to find the 
Edit button.
	
4.	 The Edit button will open a new window. This window shows the 
configuration details about this analytics rule.
	
5.	 Go to the Automated response tab of this configuration. Here, you get 
options to setup playbooks. Under the Alert automation section, you can 
select the playbooks which start with trigger type When a response to an 
Azure Sentinel Alert is triggered and under the Incident automation 
section, you can select the playbooks which start with trigger type When 
Azure Sentinel incident creation rule was triggered.

Monitoring Security by Using Azure Sentinel      545
In this section, you studied how to configure automate response for an existing 
analytics rule. You can also use this process while newly creating an analytics rule.
Threat hunting in Azure Sentinel
Azure Sentinel provides you a proactive security threat hunting feature. Various 
connected data sources generate tons of events and it would be difficult for a security 
analyst to filter out only meaningful events. Azure Sentinel’s hunting tool searches 
security threats across your all-connected data sources. There may be chances that 
your security analyst and analytics queries could not detect the anomalies in the 
data you already have on your network. Hunting feature of Azure Sentinel provides 
your security analyst the capability to look proactively for new anomalies.
For example, you built a query which provides data when someone creates user in 
Azure AD. You would not want an alert when each time someone creates Azure AD 
users but you might want a query which filters out such results. You may refer these 
results or configure new alerts in future.
Azure Sentinel provides some built-in hunting queries. You can access them from the 
main hunting page of Azure Sentinel. These built-in hunting queries are developed 
by Microsoft security researchers on a continuous basis, both adding new queries 
and fine-tuning existing queries. You can also write custom hunting query in KQL.
On the Hunting dashboard, you can see the list of built-in and custom queries. From 
here, you can also take actions on the queries:
Figure 9.45: Hunting dashboard in Azure Sentinel

546      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
The preceding figure shows the list of all hunting queries present in your environment. 
The queries are categorized in MITRE ATT&CK tactics. You can also click on the 
tactic to see the queries related to that. You can create new custom query by clicking 
on + New Query. You can select all or set of queries to run them. You can run the 
queries by clicking on Run all queries (preview). You can also apply filters to see 
relevant queries.
Livestream is the next tab on hunting dashboard. Livestream creates interactive 
sessions that lets you test newly created queries as events occur, get notifications 
from the sessions when a match is found and launch investigations if necessary.
Bookmark is the next tab on hunting dashboard. During the threat investigation 
process, investigators find events that they want to remember, revisit and analyze 
later for validating potential hypotheses and understanding the full story of a 
compromise. Hunting bookmarks in Azure Sentinel help you do this by preserving 
the queries you ran in Azure Sentinel – Logs.
User and entity behavior analytics in 
Azure Sentinel
Identifying a compromised entity or a malicious insider has always been a tough 
and time-consuming task for security analysts. Investigating alerts, making a co-
relation and proactive hunting all add up to massive amounts of time and effort. 
This could be a real drudgery task for your security analyst.
The User and Entity Behavior Analytics (UEBA) capability eliminates the 
uncertainty from analyst’s efforts and delivers high-fidelity, actionable intelligence, 
so that they can focus on investigation and remediation.
As Azure Sentinel collects logs and alerts from multiple connected data sources, it 
analyzes them and builds baseline behavioral profiles of your organization’s entities 
(such as users, hosts, IP addresses and applications) across time and peer group 
horizon. Using a variety of techniques and machine learning capabilities, Azure 
Sentinel can then identify anomalous activity and help you determine if an asset 
has been compromised. Not only that, it can also figure out the relative sensitivity of 
assets, identify peer groups of assets and evaluate the potential impact of any given 
compromised asset (its blast radius).

Monitoring Security by Using Azure Sentinel      547
To enable UEBA, your account should be a part of your organization’s Azure AD 
tenant and it should not be a guest account. You must have global administrator or 
security administrator role in Azure AD. Your account should have Azure Sentinel 
Contributor or Log Analytics Contributor role assigned on resource group or 
subscription level. Log Analytics workspace does not have Azure Resource Lock:
	
1.	 To enable UEBA in your Azure Sentinel, go to Entity behavior under the 
Threat management section.
	
2.	 Click on the Entity behavior settings option:
Figure 9.46: Enable UEBA on selected data sources

548      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
As shown in the preceding figure, you will see a list of connected data sources 
which support UEBA. Select the data sources by marking the check box and 
click on Apply.
	
3.	 Now after enabling UEBA in your sentinel, you can see the alert’s counts for 
different entities. These entities are picked from the active analytics rule:
Figure 9.47: Alert counts based on entities in UEBA portal
	
	
As shown in the preceding figure, you can search the entity in search bar. 
UEBA also shows alert’s counts based on accounts, hosts and IPs.
In this section, we studied about UEBA, what is UEBA and how to use UEBA.
Some preview features of Azure Sentinel
In this section, we will study about some other features of Azure Sentinel which are 
in preview at the time of writing this book. Although these features are not currently 
a part of certification exam, they may become a part of the exam once they come into 
general availability. So, we will study in brief about these preview features.
Threat intelligence
Threat indicators are the most used features in any SIEM solution. Azure Sentinel 
also provides the capabilities to connect and collect data from many threat indicators. 
Threat indicators scan incoming and outgoing traffic from and to URLs and IP 
addresses. It also scans hashes of files in your organization. Threat indicators then 
compare the scan results with the known malicious URLs, IP addresses and files. 

Monitoring Security by Using Azure Sentinel      549
Threat indicators then send the details of affected resources to any SIEM solution.
Here are some high-level steps you can follow to integrate threat intelligence (TI) 
into Azure Sentinel:
	
•	
Register an app with Azure Active Directory.
	
•	
Grant the ThreatIndicators.ReadWrite.OwnedBy permission to Microsoft 
Graph API on newly registered Azure AD app.
	
•	
Obtain an application ID and client secret from your Azure Active Directory.
	
•	
Input this information into your TIP solution.
	
•	
Enable the threat intelligence platform’s data connector in Azure Sentinel.
	
•	
You can view and manage the imported threat intelligence in logs and in the 
new threat intelligence area of Azure Sentinel.
	
•	
Generate security alerts and incidents using the built-in analytics rule 
templates.
	
•	
Visualize key information about your threat intelligence in Azure Sentinel 
with the threat intelligence workbook.
Here is a Microsoft official link to see the supported TIP. Here, you can also get the 
details about the process to connect your required TIP with Azure Sentinel:
https://docs.microsoft.com/en-us/azure/sentinel/threat-intelligence-integration
Solutions in Azure Sentinel
Solutions in Azure Sentinel include combinations of one or more data connectors, 
workbooks, analytics rules, playbooks, hunting queries, parsers, watchlists and 
other components for Azure Sentinel. So, when you configure any solution in 
Azure Sentinel, it connects all data sources, adds new workbooks, analytics rules, 
playbooks, hunting queries and so on related to that solution.
Go to Solutions tab under the Configuration section to see the list of supported 
solutions. From there, you can select the desired solution for which you want to 
upgrade Azure Sentinel configuration. When you add any new solution, it just adds 
items in the list of workbooks, analytics rules, playbooks, hunting queries and so on. 
It does not enable any of these until you do.
Watchlist in Azure Sentinel
With Azure Sentinel watchlists, you can collect data from external data sources for 
correlation with the events in your Azure Sentinel environment. Once the watchlists 

550      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
are created, you can use them in your search, detection rules, threat hunting and 
response playbooks. Watchlists are stored in your Azure Sentinel workspace as 
name-value pairs and are cached for optimal query performance and low latency.
Common scenarios for using watchlists include:
	
•	
Investigating threats and responding to incidents quickly with the rapid 
import of IP addresses, file hashes and other data from CSV files. Once 
imported, you can use watchlist name-value pairs for joins and filters in alert 
rules, threat hunting, workbooks, notebooks and general queries.
	
•	
Importing business data as a watchlist. For example, import user lists with 
privileged system access or terminated employees and then use the watchlist 
to create allow and deny lists used to detect or prevent those users from 
logging in to the network.
	
•	
Reducing alert fatigue. Create allow lists to suppress alerts from a group 
of users such as users from authorized IP addresses that perform tasks that 
would normally trigger the alert and prevent benign events from becoming 
alerts.
	
•	
Enriching event data. Use watchlists to enrich your event data with name-
value combinations derived from external data sources.
These are few of the use cases of watchlists.
Conclusion
In this chapter, you learned about Azure Sentinel as an SIEM and SOAR solution. 
After this chapter, you can now enable Azure Sentinel in your environment. We 
went through the features and terminology of Azure Sentinel. You can connect 
multiple data sources (Azure native, Microsoft native and third-party) to collect 
different types of events. You also learned about analytics in Azure Sentinel, how 
to configure alert generation based on the events and incidents from the alerts. We 
also went through the investigation and automated threat response process through 
workflow automation. After this chapter, you would be able to design a complete 
SIEM solution for your organization.
In the next chapter, you will study about security posture of Azure Storage services. 
You will study about access control, authentication and encryption process of Azure 
Storage accounts.

Monitoring Security by Using Azure Sentinel      551
Multiple Choice Questions
	 1.	 Among these, which is an Azure native SIEM and SOAR solution?
	
A.	Azure Automation Account	
B.	 Azure Sentinel
	
C.	 Azure Security Center	
D.	Azure Logic App
	
Answer: B
	 2.	 Among these, which framework does Azure Sentinel follow?
	
A.	TOGAF	
	
	
B.	 ITIL V4
	
C.	 MITRE ATT&CK		
	
D.	None of these
	
Answer: C
	 3.	 Azure Active Directory Identity Protection would be a part of which type of 
analytics rule?
	
A.	Microsoft security services analytics rules
	
B.	 Fusion
	
C.	 Scheduled analytics rules
	
D.	ML behavior analytics rules
	
Answer: A
	 4.	 Which Azure service is used by playbooks to automate incident response?
	
A.	Azure App Service	 	
B.	 Azure Functions
	
C.	 Azure Log Analytics	
D.	Azure Logic App
	
Answer: D
	 5.	 What access Azure Sentinel does needs on logic app to automate threat incident 
response?
	
A.	Azure Sentinel automation contributor
	
B.	 Security contributor
	
C.	 Contributor	
	
	
D.	Reader
	
Answer: A
	 6.	 Which Azure Sentinel feature will help you collect data from external sources 
to correlate with the events in your Azure Sentinel environment?
	
A.	Hunting	
	
	
B.	 Watchlist
	
C.	 Notebook	
	
	
D.	Automation
	
Answer: B

552      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide

In the previous chapter, you studied about Azure Sentinel. Now, in this chapter, 
you are going to study about security best practices related to Azure Storage. Azure 
provides capability to store and consume the data at different places, such as Azure 
PaaS databases, storage accounts, data lake, and so on. Every data, coming or being 
consumed by these should meet the compliance and should be accessed securely. 
Azure provides various security controls to secure your data containers. You can 
choose the controls which you want to apply in your environment.
By the end of this chapter, you will be able to decide the best secure way to store 
your data in Azure Storage accounts.
Structure
In this chapter, we will learn the following topics:
	
•	
Security recommendation for Azure Storage
	
•	
Configuring Azure Storage service encryption
	
•	
Authorizing and access control in Azure Storage
	
•	
Configuring Azure AD authentication for Azure Storage
	
•	
Grant Azure Storage account access through Shared Access Signature (SAS)
Chapter 10
Configuring Security 
for Azure Storage

554      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
Network security for Azure Storage accounts
	
•	
Enabling advance threat protection on Azure Storage
	
•	
Azure file share authentication with Azure Active Directory Domain 
Services (AD DS)
	
•	
Conclusion 
	
•	
Multiple choice questions (MCQs)
Objective
The objective of this chapter is to understand security best practices for Azure 
storage accounts. After is chapter, you should be able to design and deploy secure 
Azure Storage accounts to keep your data safe. You will be able to encrypt storage 
account as well as data in it. You will also learn how to manage different types of 
authentications for your storage accounts, restrict your storage accounts access from 
public IP address or untrusted networks and grant granular access over Azure files 
through AD DS. By the end of this chapter, you will learn how to scan your Azure 
Storage accounts for threat or security gap through Azure Defender.
Security Recommendation for Azure 
Storage
Let’s have an overview on security best practices about Azure Storage. In this section, 
you will study about security recommendations for Azure Storage. If you enable 
Azure Security Center in your environment, then Azure Security Center also suggests 
some of the following recommendations. Azure Security Center periodically scans 
your Azure resources to identify potential security vulnerabilities. It then provides 
you the recommendations with their remediation plan and steps.
Secure data protection recommendations
Although we have seen various best practices to secure your data, let’s now study 
about few best practices which you can apply for data protection in Azure Storage:
	
•	
Create Azure Storage in Azure Resource Manager deployment model: 
Azure has two deployment models: Resource Manager deployment 
and Classic deployment model. It is recommended to create new storage 
accounts using Azure Resource Manager deployment model. You should 
plan to migrate existing storage accounts from classic deployment model to 
Azure Resource Manager.

Configuring Security for Azure Storage      555
	
•	
Enable the secure transfer in Azure Storage: This feature helps you encrypt 
data in transit. When you enable this option, all requests made against the 
storage account will take place over secure connections. Request over HTTP 
will fail.
	
•	
Enable Azure Defender for Azure Storage accounts: With Azure Defender, 
you get an additional layer of security. This helps you detect unusual and 
potentially harmful attempts to access accounts.
	
•	
Turn on soft delete for blob data: With enabled soft delete feature, you can 
recover deleted Binary Large Object (BLOB) data.
	
•	
Turn on soft delete for container: With enabled soft delete feature you can 
recover deleted container.
	
•	
Enable lock on storage account: With lock feature, you can prevent accidental 
deletion of storage accounts.
	
•	
Use immutable blobs to store business-critical data: With immutable 
BLOBs, you can configure time-based retention policies to store blob data 
in a Write Once, Read Many (WORM) state. BLOBs stored immutably can 
be read but cannot be modified or deleted for the duration of the retention 
interval.
	
•	
Use HTTPs connections only in shared access signature (SAS) tokens: 
When you create any SAS tokens to access Azure Storage account, limit the 
access only over HTTPs protocol.
Although all of the preceding listed best practices are recommended to have in your 
environment, you can choose the best fit for your environment. We will study about 
some of these in detail in the coming sections.
Identity and Access Management
Right and granular access control is very important for any organization. Being a 
security administrator, you would not want to grant unlimited and unconditional 
access to everyone. In this section, let’s see the best recommendations about identity 
and access management for your storage accounts. We will see what all levers you 
can apply to control accesses:
	
•	
Use Azure AD to access BLOB data: There are various authentication 
processes to access BLOB data. Among all authentication processes, Azure 
AD provides superior security and ease to access blob data.
	
•	
Assign least privilege to an Azure AD security principal via RBAC: 
Assigning only relevant role to any security principal (user, group or 

556      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
application) so that they have only necessary permissions to perform their 
tasks.
	
•	
Use a user delegation SAS to grant limited access to clients: Use designated 
SAS token for different users. You can control SAS token expiry and 
permissions in SAS token configuration.
	
•	
Use Azure Key Vault to secure your account access keys: It is recommended 
to use Azure AD to authorize requests to Azure Storage. But if you have 
a business requirement to use shared key authorization, then secure your 
account keys with Azure Key Vault. Your application can retrieve access keys 
directly from Azure Key Vault.
	
•	
Rotate storage access keys periodically: Rotating storage access keys 
periodically to reduce the risk of exposing your data to malicious actors.
	
•	
Disable shared key authentication: By enabling this, you will not be able 
to generate any SAS token or access Azure Storage account through access 
keys. Users will only be able to access storage account through Azure AD 
authentication.
	
•	
Set a revocation plan for delegated SAS tokens issued to clients: You will 
want to revoke a compromised SAS token as soon as possible. To revoke a 
user delegation SAS, revoke the user delegation key to quickly invalidate all 
signatures associated with that key.
	
•	
Limit anonymous public read access to containers: With anonymous public 
read access, any user over internet can gain read-only access over containers 
and its BLOBs. You should avoid enabling public read access unless you 
want to publish something over the internet.
In this section, you studied various ways to control accesses and provide the right 
amount of access to users.
Networking
The advantage of cloud services is that you can access them from anywhere anytime. 
This advantage can become a drawback if you do not apply proper network 
accessibility rules. You need to define proper network security rules to control 
accessibility of your Azure Storage account over private and public network:
	
•	
Enable firewall rules: On Azure Storage account, configure network firewall 
rules to limit the access from specified IP addresses or ranges.
	
•	
Allow trusted Microsoft services to access the storage account: If you enable 
network firewall rules on your storage account, it will block any incoming 
requests, unless the request has been originated from an allowed IP range. 

Configuring Security for Azure Storage      557
You can add exception in storage firewall rules for trusted Microsoft services 
to access the storage account. 
	
•	
Use private endpoints: A private endpoint assigns a private IP address 
from your Azure Virtual Network to the storage account. It secures all traffic 
between your virtual network and the storage account over a private link.
	
•	
Configure minimum required TLS version: You can setup the minimum 
TLS version when any client wants to connect to Azure Storage account over 
HTTPs. It is recommended to use TLS version 1.2 or higher version.
	
•	
Configure network routing preference: You can setup traffic routing for 
any client accessing your Azure Storage account. You can specify how traffic 
reaches to your storage account from a client over Microsoft global network 
or internet routing.
In this section, we saw the best practices and recommendations to secure network 
access for your storage accounts.
Configuring Azure Storage service 
encryption
Azure Storage automatically encrypts your data when it is persisted to the cloud. 
Azure uses 256-bit AES encryption to encrypt data in Azure Storage. Azure 
enables encryption for all new resource managers and classic storage accounts. 
This is also called platform level of encryption. You cannot disable platform level 
encryption. Azure Storage encryption does not need any modification in your code 
or applications.
Microsoft encrypts all storage accounts regardless of standard or premium 
performance tier, hot, cold or archive access tier, Azure Resource Manager or classic 
deployment model, any redundance option, or any storage resources type such as 
BLOBs, disks, files, queues and tables. Azure Storage encryption also encrypts object 
metadata. You do not need to worry about the cost of these encryptions. There is no 
additional cost for Azure Storage encryption.
By default, Azure uses Microsoft-managed keys to encrypt the data in a new storage 
account but you can also use your own keys for data encryption. You have two 
options if you want to manage encryption with your own keys:
	
•	
You can specify a customer-managed key with Azure Key Vault to use for 
encrypting and decrypting data in BLOB storage and Azure files.

558      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
You can specify a customer-provided key on BLOB storage operations. A 
client making a read or write request against BLOB storage can include an 
encryption key on the request for granular control over how BLOB data is 
encrypted and decrypted.
Now, Azure Storage account supports double encryption of data with infrastructure 
encryption. In infrastructure encryption process, Azure encrypts the data twice. 
First, the data is encrypted at service level and second, at infrastructure level. Both 
these encryptions use different encryption algorithms and keys. In service level 
encryption process, you can use Microsoft-managed encryption key or customer-
managed encryption key with Azure Key Vault. In infrastructure level of encryption, 
you do not have a choice for encryption keys. Infrastructure level of encryption 
happens through Microsoft-managed key only.
As per security best practices, any data at rest and in transit should be encrypted. In 
the coming sections, you will study about the various methods of data encryption at 
rest and in transit.
Encryption of data at rest
For data at rest, you can do multiple levels of encryptions. You can also choose the 
encryption key for data at rest encryption process. Let’s go through the processes of 
data at rest encryption.
Enable infrastructure encryption
As you know, in infrastructure encryption process, Azure encrypts the data twice. 
Infrastructure level of encryption happens through Microsoft-managed key only. 
You cannot disable this encryption once you have enabled it. You can only enable 
this while creating new storage account. Let’s follow these steps to see how to enable 
infrastructure encryption while creating a new storage account:
	
1.	 Login to Azure portal and search for storage account to create new storage 
account.
	
2.	 Fill in the basic details related to subscription, resource groups, location, 
storage account name and so on in the Basics tab.
	
3.	 Move to the next Advanced tab. Here, you see a check box to enable 
infrastructure encryption for your storage account. Mark the check box to 
enable infrastructure encryption:

Configuring Security for Azure Storage      559
Figure 10.1: Enable infrastructure encryption for Azure Storage
Once you check the Enable infrastructure encryption checkbox, you will see a 
warning that you cannot disable the encryption after the storage account is created.
You can follow these steps to enable infrastructure encryption for a storage account. 
You cannot enable or disable after the storage account is created.
Use customer-managed keys with Azure Key Vault to 
manage Azure Storage encryption
Azure Storage is always encrypted with Microsoft-managed key. In this section, you 
will study the process to encrypt Azure Storage with customer-managed key with 
Azure Key Vault. You can use your own encryption key to protect the data in your 
storage account. 
You must use Azure Key Vault to store your customer managed keys. You can either 
create your own keys and store them in a key vault or bring your own key and 
store them in a key vault. The storage account and the key vault must be in the 
same region and in the same Azure Active Directory (AD) tenant, but they can be in 
different subscriptions.
In the Configure Advance Security for Compute chapter, you studied about Azure Key 
Vault in deep. You can create a key vault and key for this exercise. I will be using my 
already existing key vault:

560      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
1.	 Login to Azure portal and go to the storage account which you want to 
encrypt.
	
2.	 Select the Encryption section. On the next page, you will see Microsoft-
managed keys is selected for Encryption type.
	
3.	 Select the Customer-managed keys options to choose your key from Azure 
Key Vault:
Figure 10.2: Select customer-managed key option for encryption
	
	
It will grant storage account access on the key vault and also enable soft 
delete and purge protection on the key vault it that is not enabled.
	
4.	 If you know the URI of your encryption key, you can select the Enter key 
URI option to enter details about the key. But if you do not know the key URI, 
you can select the Select from key vault option. It will give you the option 
to select the key from Azure Key Vault:
Figure 10.3: Select key vault and key for encryption

Configuring Security for Azure Storage      561
	
	
As shown in the preceding figure, select right subscription, key vault and 
key for encryption and click on Select.
	
5.	 Once you have selected the required key, save the changes:
Figure 10.4: Encryption status of Azure Storage with customer-managed key
In the preceding figure, you can see the final state of your storage encryption.
If you choose customer-managed key for Azure Storage account encryption and 
enable automated key rotation, Azure Storage checks the key vault daily for a 
new version of the customer-managed key and automatically updates the key to 
the latest version.
In this section, we saw how to encrypt Azure Storage account by using customer-
managed key.
Encryption of data in transit
In the previous section, you studied the process to encrypt data at rest in Azure 
Storage account. In this section, you will study how to enable encryption of data in 
transit. You can enable this encryption while creating new storage account or on an 
existing storage account.

562      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
The secure transfer option enhances the security of your storage account by only 
allowing requests to the storage account by secure connection. For example, when 
calling REST APIs to access your storage accounts, you must connect using HTTPs. 
Any requests using HTTP will be rejected when ‘secure transfer required’ is enabled. 
When you are using the Azure files service, connection without encryption will fail, 
including scenarios using SMB 2.1, SMB 3.0 without encryption and some flavors 
of the Linux SMB client. Since Azure Storage does not support HTTPs for custom 
domain names, this option is not applied when using a custom domain name.
Let’s see how to enable this encryption for a storage account:
	
1.	 Login to Azure portal and search for storage account to create new storage 
account.
	
2.	 Fill in the basic details related to subscription, resource groups, location, 
storage account name and so on in the Basics tab.
	
3.	 Move to next Advanced tab. Here, you can see a check box to enable secure 
transfer for your storage account. Mark the check box for Enable secure 
transfer:
Figure 10.5: Enable Secure transfer while creating Azure Storage account
Once you check the Enable secure transfer checkbox, you will see a warning that, 
you cannot disable the encryption after the storage account is created.
You can follow the preceding steps to enable secure transfer while creating a new 
storage account. Let’s follow these steps to enable secure transfer for the existing 
storage accounts.

Configuring Security for Azure Storage      563
	
1.	 Login to the Azure portal and go to the storage account for which you want 
to enable secure transfer.
	
2.	 Go to the Configuration section on the selected storage account:
Figure 10.6: Enable secure transfer on an existing Azure Storage account
	
	
As shown in the preceding figure, select Enabled under the Secure transfer 
required option.
In this section, you learned the use case of secure transfer to Azure Storage account 
and the process to enable it.
Encryption scope in Azure Storage
In the Encryption of data at rest section, you studied the process to enable encryption 
for complete storage account with customer managed key. There may be a need that 
you have a single storage account shared amongst multiple customers and their 
data is segregated amongst different containers or BLOBs. Here, you may want to 
encrypt each customer’s container or BLOB with different encryption key. So, you 
can scope key to manage encryption for a container or BLOB.
An encryption scope contains few information such as enablement of infrastructure 
level encryption, Microsoft or customer-managed key for the encryption. Your 
encryption scope can have multiple combinations with these available options. You 
can create multiple encryption scopes, but a container or blob can be attached with 
only one scope.
In the Encryption of data at rest section, you saw that a storage account is by default 
encrypted with Microsoft-managed key or can be encrypted by customer-managed 
key. When you create an encryption scope, you define an encryption key in its 

564      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
configuration. This encryption scope and key can be scoped for a container or 
BLOB. When you apply an encryption scope to a container or BLOB, their data gets 
encrypted with the defined encryption key in the scope.
When you apply encryption scope to a container, it becomes a default scope and all 
BLOBs under that container can be encrypted with the same key. You can enforce all 
underlined BLOBs to inherit the encryption key from the default scope. You can also 
allow BLOBs to override default scope and have their own encryption scope with 
different encryption key.
When you create an encryption scope, you can specify the type of encryption key, 
Microsoft-managed key or customer managed key with Azure Key Vault in the 
encryption scope. You can create multiple encryption scopes in a storage account. 
Different encryption scopes can use either Microsoft-managed key or customer-
managed key. You can also switch between Microsoft-managed key and customer-
managed key at any time after creation also.
If you enable infrastructure encryption for an account, then any encryption scope 
created on that account automatically uses infrastructure encryption. If infrastructure 
encryption is not enabled at the account level, then you have the option to enable 
it for an encryption scope at the time that you create the scope. The infrastructure 
encryption setting for an encryption scope cannot be changed after the scope is 
created.
If your encryption scope is protected with a customer-managed key and you delete 
the key in the key vault, the data will become inaccessible.
Let’s go through the following example to configure encryption scope and encrypt 
the containers and BLOBs.
In this example, we are going to enable infrastructure encryption for Azure Storage 
account. So, let’s see what options you get while creating encryption scope:
	
1.	 Go to the storage account in the Azure portal and select the Encryption 
setting. It will open a new window with two tabs. Click on the Encryption 
scopes tab.
	
2.	 Click on + Add. It will open a new blade to take input about encryption 
configuration:

Configuring Security for Azure Storage      565
Figure 10.7: Create encryption scope with customer-managed key on infrastructure encryption 
enabled Azure Storage account
	
	
As shown in the preceding figure, you can give a name to this encryption 
scope, then select the key type (Microsoft-managed or customer-managed) 
and if you have selected customer-managed key, fill the details about it. You 
can see the Infrastructure encryption option is already enabled because 
we had enabled infrastructure encryption at storage account level and you 
cannot modify that setting now. Click on Create to finish the configuration.
	
3.	 You can click on three dots at the end of existing encryption scope to edit it:

566      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 10.8: Edit existing encryption scope
	
	
It will open a new blade as shown in the preceding figure. Here, you can 
update the status, encryption type and customer-managed encryption key. 
After update, save the changes.
	
4.	 You can apply encryption scope to a container only while creating the 
container:
Figure 10.9: Apply encryption scope to a new blob container

Configuring Security for Azure Storage      567
	
	
While creating the container, click on the Advanced option. You can see the 
list of all existing encryption scopes. Select the one which you want to apply 
on this container.
	
5.	 You can click on the Use this encryption scope for all blobs in the 
container checkbox to make this encryption scope as a default scope for all 
underlying BLOBs with override prohibited. So, after enabling this check 
box, all underlying BLOBs can use only the same encryption scope which 
is defined at container level and they cannot have their own dedicated or 
different encryption scope.
	
6.	 Now, let’s see what Encryption scope option you will get while uploading 
a new BLOB to this container:
Figure 10.10: Upload a BLOB to a container with default encryption scope
	
	
Let’s upload a new BLOB to ContosoCustomerContainer. When you scroll 
down to see the encryption scope, the option is disabled because we prohibited 
BLOBSs to have their own encryption scope. So, now this BLOB will inherit 
encryption scope from parent container ContosoCustomerContainer.
In the preceding example, you studied about enabling encryption scope on container 
and setting up a prohibition to change it at BLOB level.

568      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Now, let’s create another container and do not check the Use this encryption 
scope for all blobs in the container checkbox. Now, if you try to upload a 
new BLOB, it gives the option to select the encryption scope. You can either use the 
encryption scope from parent container or select a different encryption scope from 
the drop-down:
Figure 10.11: Upload a BLOB to a container without prohibition of encryption scope change
In the preceding scenario, we saw the encryption scope behavior for a storage 
account with enabled infrastructure encryption. Now, let’s see what options you get 
in encryption scope when infrastructure encryption is not enabled.
For this, let’s create new Azure Storage account and not enable infrastructure 
encryption on this. Now, when you follow the steps to create new encryption scope, 
you get an option to enable or disable infrastructure encryption for this:

Configuring Security for Azure Storage      569
Figure 10.12: Create encryption scope for Azure Storage account 
without infrastructure encryption
In the preceding figure, we are creating a new encryption scope and also getting 
options to choose the status of infrastructure encryption.
Authorizing and Access Control in Azure 
Storage
When you access data in your storage account, your client makes a request over 
HTTP/HTTPS to Azure Storage. Every request to a secure resource must be 
authorized, so that the service ensures that the client has the permissions required to 
access the data. There is mostly six ways to authorize access in Azure Storage. They 
are briefly described here:

570      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
Azure Active Directory (Azure AD) integration: In this authentication type, 
you use Azure AD provided role-based access control (RBAC) AD to control 
access on BLOBs and queues in a storage account.
	
•	
Azure Active Directory Domain Services (Azure AD DS) authentication: 
This type of authentication is limited to only Azure Files as of now. Through 
Azure AD DS, Azure files support identity-based authorization over Server 
Message Block (SMB).
	
•	
On-premises Active Directory Domain Services: As you know, Azure files 
support identity-based authorization over SMB through AD DS. This AD DS 
environment can be hosted in on-premises machines or Azure VMs. SMB 
access to files is supported using AD DS credentials from domain joined 
machines. You can use a combination of RBAC for share level access control 
and NTFS discretionary access control lists (DACLs) for directory/file level 
permission enforcement.
	
•	
Shared key authorization: You can use this kind of authentication for BLOBs, 
files, queues and tables. A client using shared key passes a header with every 
request that is signed using the storage account access key.
	
•	
Shared access signatures: You can use this kind of authentication for BLOBs, 
files, queues and tables. Shared access signatures (SAS) provide limited 
delegated access to resources in a storage account. Adding constraints on 
the time interval for which the signature is valid or on permissions it grants 
provides flexibility in managing access.
	
•	
Anonymous public read access: The anonymous access can be given on 
containers and blobs. For anonymous access, authorization is not required.
You can use any of the preceding listed ways to access your Azure Storage account. 
Let’s study few of them in the coming sections.
Azure AD integration for Blobs and queues
You can use Azure AD to authorize requests to BLOB and queue storage. You can 
use RBAC to grant permissions to a security principal, which may be a user, group 
or application service principal. The security principal is authenticated by Azure 
AD to return an OAuth 2.0 token. The token can then be used to authorize a request 
against BLOB or queue storage.
It is recommended to use Azure AD authorization over any authorization with your 
BLOB and queue applications. Azure AD authorization minimizes potential security 
vulnerabilities inherent in shared key. Currently, Azure Table storage does not 

Configuring Security for Azure Storage      571
support authorization with Azure AD. You can use shared key to authorize requests 
to table storage.
Overview
If a BLOB does not have anonymous access allowed, any security principal who 
attempts to access a BLOB or queue resource must be authorized to access the BLOB. 
With Azure AD authorization, the access is a two-step process. First, the security 
principal’s identity is authenticated by Azure AD and an OAuth 2.0 token is returned 
to the security principal. Next, the token is passed as a part of a request to the BLOB 
or queue service and used by the service to authorize access to the specified resource.
For the authorization process, the security principal must have one or more RBAC 
roles assigned to it. The RBAC roles have defined sets of permissions. The RBAC 
roles that are assigned to a security principal determine the permissions for the 
service principal.
Assign Azure AD RBAC roles for access control
Azure provides a set of built-in RBAC roles for Azure Storage. These roles include 
common sets of permissions used to access BLOB and queue data. You can also 
define custom rules for access to BLOB and queue data.
When an RBAC role is assigned to an Azure AD security principal, Azure grants 
defined permissions to the security principal. Access can be scoped at the level of 
management group, subscription, resource group, storage account or an individual 
container or queue. The following is the list of built-in RBAC rules for BLOBs and 
queues.
We have seen how to assign built-in RBAC rules and how to create custom RBAC 
roles in Chapter 3, Manage Azure Access Control. You can refer Chapter 3, Manage Azure 
Access Control to see the procedure of RBAC assignment.
When you access BLOB or queue data using the Azure portal, the portal makes 
requests to Azure Storage in the background. A request to Azure Storage can be 
authorized using either your Azure AD account or the storage account access key. 
The portal indicates which method you are using and enables you to switch between 
the two if you have the appropriate permissions.
Let’s see how to view the current authentication method and how to switch between 
the authentication methods:
	
1.	 Login to Azure portal and go to the storage account.

572      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
2.	 Click on Container and in container, click on any existing BLOB:
Figure 10.13: Current authentication method for blob
	
	
The preceding figure shows that the current authentication is happening 
through access key. You can switch the authentication method by clicking 
Switch to Azure AD User Account. You will be able to switch if your Azure 
AD account has appropriate permissions, else you will get an error as shown 
in the following figure:
Figure 10.14: Error while switching authentication method
	
3.	 To fix this error, go to Access Control (IAM) of this container. Assign any of 
the role from the following listed roles:

Configuring Security for Azure Storage      573
Figure 10.15: Built in RBAC for Azure AD authentication over BLOB
	
4.	 Now, go back to BLOB and try to switch from access key authentication to 
Azure AD authentication:
Figure 10.16: Switched authentication method to Azure AD authentication
In the preceding figure, you can see the authentication method is changed to Azure 
AD user account.
In this section, you learned how to setup Azure AD authentication for your storage 
account. Now, instead of public and anonymous access, you can control storage 
access more granularly by using Azure AD.

574      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Manage Azure Storage account access through 
managed identity
In this section, you will study about granting access over storage account through 
managed identity. Managed identity helps developers to access Azure services and 
resources without storing and managing credentials in code. Managed identity uses 
Azure AD for authentication. There are two types to manage identities:
	
•	
System assigned: System assigned managed identities are created directly 
on a resource. When you enable a system-assigned managed identity on a 
resource, an identity is created in Azure AD. This managed identity then ties 
to the lifecycle of that service instance. So, when the resource is deleted, the 
identity gets deleted automatically. System assigned managed identity can 
be accessed only by the resource on which it was created.
	
•	
User assigned: User assigned managed identity is created as a standalone 
azure resource. This standalone managed identity can be assigned to 
multiple azure resources. The life cycle of user assigned managed identity is 
independent to the life cycle of the resource where it has been attached.
Let’s follow these steps to grant access over a storage account through managed 
identity:
	
1.	 Login to Azure portal and go to the Azure resource to which you want to 
grant access on Azure storage account.
	
2.	 I have an Azure VM running in my subscription and I want to grant access 
to it over a storage account through managed identity.
	
3.	 Go to the Identity section on the selected VM. It will open a new window 
to enable managed identity. There you will have two tabs. One for System 
assigned and another for User assigned:
Figure 10.17: Enable system assigned managed identity on Azure VM

Configuring Security for Azure Storage      575
	
	
As shown in the preceding figure, toggle the status option to On to enable 
system assigned managed identity. Click on Save.
	
4.	 Once system assigned managed identity is enabled, you get the option to 
Azure role assignments:
Figure 10.18: Grant permission over storage account through system assigned managed identity
As shown in the preceding figure, you can select the scope, subscription, resource 
name and RBAC role to grant access.
Now, you can use managed identity to grant access over storage or any supported 
Azure service.
Manage Azure Storage account access through 
shared key
With every storage account, you get two 512-bit storage account access keys. Storage 
account access keys can be used for shared key based authorization process to 
authorize access to data in your storage account. You can store access keys securely 
in Azure Key Vault. It is recommended that you regularly rotate and regenerate your 
storage account access keys. Azure Key Vault makes key rotation easier without any 
interruption to your applications. You can also manually rotate your keys.
Storage account access keys work as a root password for your storage account. Since 
the keys have highest privilege, you need to be careful to protect your access keys. 
You should avoid distributing access keys to other users, hard coding them or saving 
them anywhere in plain text that is accessible to others. If you believe the keys have 

576      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
been compromised, rotate them immediately. If possible, use Azure AD to authorize 
requests to BLOB and queue storage instead of shared key.
View Azure Storage account access key
Every storage account has two shared access keys: primary and secondary. You can 
view them from the portal:
	
1.	 Login to Azure portal and go to Azure Storage account.
	
2.	 In the storage account, go to Access keys under the Security section:
 
Figure 10.19: Azure Storage account shared access key
As shown in the preceding figure you can see two access keys.
A proper permission is required to view or read storage access keys. A user with 
service administrator, or an RBAC role that includes the Microsoft.Storage/
storageAccounts/listkeys/action can read or view storage access keys. Owner, 
Contributor and Storage Account Key Operator Service roles already include  these 
permissions.

Configuring Security for Azure Storage      577
To keep your storage account secure, you should rotate your access keys periodically. 
Azure Key Vault can be used to manage your access keys. This helps in key rotation 
also. With two access keys, you can perform key rotation easily. Two keys help 
your application to maintain continuous access to the Azure Storage throughout 
the process. A user with service administrator role or an RBAC role that includes 
Microsoft.Storage/storageAccounts/regeneratekey/action 
permission 
can 
rotate the access keys. Owner, Contributor and Storage Account Key Operator 
Service roles include these action permissions.
Manually Azure Storage account access key 
management
You can rotate storage account access keys from Azure portal, Azure CLI or Azure 
PowerShell. There are simple steps to rotate access keys from Azure portal. Let’s 
follow these steps to rotate storage account access keys:
	
1.	 Login to Azure portal and copy secondary access key of your storage account.
	
2.	 First, update your application code’s connection strings to reference the 
secondary access key of the storage account.
	
3.	 Now on your storage account, go to access keys section under Security + 
networking.
	
4.	 Click on the Regenerate button next to the primary access key to regenerate 
the primary access key for your storage account.
	
5.	 Now, go back to your application and update the connection strings to 
reference the new primary access key.
	
6.	 Click on the Regenerate button next to the secondary access key to regenerate 
the primary access key for your storage account.
By following these simple steps, you can secure your applications without downtime.
As Microsoft recommends using Azure AD for storage account authentication, 
you can also disable access key authentication proactively. To disable access key 
authentication, go to the Configuration section of your Azure Storage account. 
You will see an option to enable or disable storage account key access. Set this 
option Disabled.

578      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Grant Azure Storage account access through 
Shared Access Signature (SAS)
With shared access signature (SAS), you can provide secure delegated access to 
resources (BLOB, file, queue, table) in your storage account. SAS gives you a granular 
control to manage client access on your data. In SAS, you can control what resources 
the client may access, what permissions they have on those resources and how long 
the SAS is valid among other parameters.
Types of shared access signatures
Azure Storage supports three types of shared access signatures:
	
•	
User delegation SAS: A user delegation SAS uses Azure AD credentials for 
authentication. Here, you can define the required permissions for clients/
users. A user delegation SAS applies to Blob storage only.
	
•	
Service SAS: A service SAS uses storage account key for authentication. A 
service SAS can be created only for one of the Azure Storage services: BLOB 
storage, queue storage, table storage or Azure Files. So, if you created service 
SAS for BLOB, then you can just access BLOB through that service SAS. You 
will need to create another service SAS if you want to access queue, file or 
table.
	
•	
Account SAS: An account SAS also uses storage account key for 
authentication. With an account SAS, you can grant access to one or more 
resources of a storage account. Account SAS has all the features which a 
service or user delegation SAS has. Additionally, with the account SAS, you 
can delegate access to operations that apply at the level of the service, such 
as Get/Set Service Properties and Get Service Stats operations. You can also 
delegate access to read, write and delete operations on BLOB containers, 
tables, queues and file shares that are not permitted with a service SAS.
Working mechanism of shared access signature
When you create a shared access signature, it generates a signed URI. This URI 
points to one or more storage resources of a storage account. The URI also includes 
a token with a set of query parameters. The token keeps the information on how 
storage resources may be accessed by the client. Azure Storage uses SAS to authorize 
the access for users. SAS has two parts:

Configuring Security for Azure Storage      579
	
•	
SAS signature: You can sign a SAS in one of two ways:
	
	
o	
First with a user delegation key, that was created using Azure AD 
credentials. A user delegation SAS uses a user delegation key. You 
need to assign an RBAC role that includes the Microsoft.Storage/
storageAccounts/blobServices/generateUserDelegationKey action to 
an Azure AD security principal to get the user delegation key and create 
the SAS.
	
	
o	
Second, with the storage account key. Both a service SAS and an account 
SAS use storage account key for authentication. To create a SAS that 
is signed with the account key, an application must have access to the 
account key.
	
•	
SAS token: The SAS token is a string that you generate in Azure Storage 
account by providing details about Azure resources, permissions, start/
expiry date and so on. You can create unlimited number of SAS tokens but 
Azure Storage does not keep track of them. These SAS can be distributed to 
client applications that require access to resources in your storage account. 
When a client application provides a SAS URI to Azure Storage as part of a 
request, the service checks the SAS parameters and signature to verify that it 
is valid for authorizing the request.
There are many use cases of using SAS. One of them is, you can use a SAS when 
you want to provide secure access with expiry time to any client who does not have 
permissions on your storage resources.
Best practices when using SAS
Indeed, SAS gives you lot many flexibilities for access control but it also brings some 
responsibilities for you:
	
•	
A leaked SAS can potentially compromise your storage account.
	
•	
SAS comes with expiry date and an expired SAS can break application’s 
functionality.
The following are few recommendations from Microsoft to mitigate these risks:
	
•	
Always use HTTPS to create or distribute a SAS: A SAS passed over HTTP 
can be intercepted; an attacker can read the SAS and then use it just as the 
intended user could have.

580      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
Use a user delegation SAS when possible: A user delegation SAS uses Azure 
AD credentials for authentication, so that you do not need to use account key 
with your code.
	
•	
Have a revocation plan in place for a SAS: You need to have a SAS revocation 
plan if a SAS is compromised.
	
•	
Define a stored access policy for a service SAS: With stored access policies, 
you can revoke permissions for a service SAS without regenerating the 
storage account keys. You can set the expiration date very far in the future.
	
•	
Use near-term expiration times on an ad hoc SAS, service SAS or account 
SAS: With a short expiration time, if a SAS is compromised, it will be valid 
only for a short time. This can be used if you cannot use stored access policy 
to manage SAS. With near-term expiration times, you can also limit the 
amount of data that can be written to a BLOB by limiting the time available 
to upload it.
	
•	
Have clients automatically renew the SAS if necessary: You can setup 
automatic renewal for trusted clients.
	
•	
Be careful with SAS start time: If you set the start time for a SAS to now, 
then due to clock skew (differences in current time according to different 
machines), failures may be observed intermittently for the first few minutes. 
In general, set the start time to be at least 15 minutes in the past or do not set 
it at all, which will make it valid immediately in all cases. The same generally 
applies to expiry time as well.
	
•	
Be specific with the resource to be accessed: Least privilege is one of the 
best practices in security. It is recommended to provide minimum required 
privileges to a user. If a user only needs read access to a BLOB, then grant 
them only read access to the BLOB and not read/write/delete access.
	
•	
Understand that your account will be billed for any usage, including via a 
SAS: If you provide write access to a BLOB, a user may choose to upload a 
100 GB BLOB. If you have given them read access as well, they may choose 
to download it 10 times, incurring 1 TB in egress costs for you.
You can use the preceding listed best practices while creating SAS. These will help 
you create secure and reliable SAS.

Configuring Security for Azure Storage      581
Setup account shared access signature
In this section, we will see how to generate SAS:
	
1.	 Login to Azure portal and go to the Storage Account option.
	
2.	 In that storage account, click on Shared Access Signature.
	
	
As shown in the following figure, you can make various combinations to 
generate an account SAS.
	
	
•	
Allowed services: Here you can select the storage services on which 
you want to grant access. You can select required services from the check 
box. You can choose one or multiple form of Blob, Queue, File and Table.
	
	
•	
Allowed resource types: Here, you can select the API level accesses for 
the preceding selected storage services. There are three API level accesses 
you can grant in a SAS:
	
	
	
o	
Service: Access to service-level APIs (for example, Get/Set Service 
Properties, Get Service Stats and List Containers/Queues/Tables/
Shares).
	
	
	
o	
Container: Access to container-level APIs (for example, Create/
Delete Container, Create/Delete Queue, Create/Delete Table, 
Create/Delete Share, List Blobs/Files and Directories).
	
	
	
o	
Object: Access to object-level APIs for BLOBs, queue messages, table 
entities and files (for example, Put Blob, Query Entity, Get Messages, 
Create File and so on).
	
	
	
Here, the term mentioned container is not a BLOB container. The term 
container meant here is something that  is going to have some child 
objects or elements:
	
	
	
o	
In context to blob, container will refer to a BLOB container and will 
have child objects as BLOBs.
	
	
	
o	
In context to file, container will refer to shares and will have child 
objects as files and directories.
	
	
	
o	
In context to table, container will refer to tables and will have child 
objects as entities.
	
	
	
o	
In context to queue, container will refer to queue and will have child 
objects as messages.

582      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 10.20: Generate Share Access Signature key for Azure Storage account
	
	
•	
Allowed permissions: Here, you can choose the permissions you want 
to grant through SAS over selected services and resource types.
	
	
•	
Blob versioning permissions: With this, you can grant permission to 
delete BLOB versions.
	
	
•	
Allowed 
blob 
index 
permissions: With this, you can grant 
permissions for viewing, creating and filtering blob indexes.

Configuring Security for Azure Storage      583
	
	
•	
Start and expiry date/time: Here, you can set date and time to start 
and expire the SAS. If you do not define expiry date, it means token will 
never expire or will expire on 9999-12-31.
	
	
•	
Allowed IP addresses: You can restrict access from trusted IP addresses 
or IP address ranges.
	
	
•	
Allowed protocols: You can define protocol to access storage services. 
You can select HTTPS only or HTTPS and HTTP both. It is recommended to 
use HTTPS only.
	
	
•	
Preferred routing tier: You can reach to storage service over internet 
or Microsoft backbone network.
	
	
•	
Signing key: As we are creating account SAS, it will use storage account 
access key for authentication. Here, you can choose the access key for 
authentication.
	
	
After filling the details, click on Generate SAS and connection string.
	
3.	 Once you click on Generate SAS and connection string, SAS tokens will 
be generated as shown in the following figure:
Figure 10.21: SAS token URLs for newly generated Share Access Signature key
The preceding figure shows SAS URLs for BLOB, queue and table services. Since we 
did not select file service, SAS URL for file service was not generated.
You can give these URLs to users who want to access this storage account. By using 
these URLs, users will only get restricted and defined access. Based on SAS key 
configuration, the access can be revoked after defined expiry time.

584      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Stored access policy in Azure Storage
With stored access policy, you get additional control over service-level shared access 
signature. With stored access policy, you can change the start time, expiry time or 
permissions for a signature, or revoke it after it has been issued. Blob container, file 
shares, queue and table all support stored access policy. Stored access policy can be 
applied at BLOB container or at BLOBs it contains, at file shares or at files under the 
shares, at table and at queue level.
In this section, you will study how to create SAS with stored access policy. We will 
create stored access policy in Azure portal and will use it to create SAS through 
Azure Storage Explorer. Let’s follow these steps to create SAS by using stored access 
policy:
	
1.	 Login to Azure portal and go to the storage account.
	
2.	 In storage account, go to Containers. Here, you can see a list of existing 
containers or create new containers.
	
3.	 I am using my existing container, contosocustomer. Here, you can see all 
BLOBs under this container or upload a new BLOB.
	
4.	 Click on Access policy and it will open a new window to enter details about 
the access policy:
Figure 10.22: Create store access policy from Azure portal

Configuring Security for Azure Storage      585
	
	
As shown in the preceding figure, while creating the access policy, you need 
to provide a name under identifier, select permissions from the drop-down 
and start expiry date and time. Click on OK once you fill these details.
	
	
Here, I am just providing Read and List permission through this shared 
access policy.
	
5.	 Now, to create SAS, we will use Azure Storage Explorer. You can download 
and install it on your local machine. Here is the download link:
	
	
https://aka.ms/portalfx/downloadstorageexplorer
	
6.	 Now, go to your Azure Storage Explorer:
Figure 10.23: Login to Azure Storage explorer
	
	
Click on Add an account… and select subscription to login. Enter your 
credentials when prompted.
	
7.	 Once you login to Azure subscription from storage explorer, you can see all 
storage accounts, BLOB containers, BLOBs, file shares, files, tables, queues 
and disks in that subscription:

586      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 10.24: Explore storage resources from storage explorer
	
	
The preceding figure shows expanded view of storage explorer.
	
8.	 Here, we will create a SAS by using stored access policy for a BLOB container. 
So, right click on any BLOB container:
Figure 10.25: Actions available for container from storage explorer

Configuring Security for Azure Storage      587
	
	
It will open a list of actions available for the container. As shown in the 
preceding figure, you can take multiple actions on this container from the 
storage explorer. You can also manage stored access policy from here.
	
9.	 Click on Get Shared Access Signature…:
Figure 10.26: Create SAS from stored access policy
	
	
It will open a new window. Under Access policy, select the access policy 
which you created in the previous steps. Once you select the desired access 
policy and permissions, the start and expiry date and time gets auto filled as 
per the access policy configuration. Click on Create.

588      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
10.	 Once the SAS has been created, the details will be shown in the next window:
Figure 10.27: SAS created from stored access policy
	
	
The preceding figure shows the SAS URL and SAS token. Copy and save 
this SAS URL. You can share this URL and query string with your users and 
application to access the container.
	
11.	 Now to verify the access, again go to your storage explorer tool and click on 
Add an account. This time, select Blob Containers under Azure resource 
type.
	
12.	 In the next window, select the Shared access signature URL (SAS) option:
Figure 10.28: Enter SAS details to connect with blob container
	
	
Click on Create.

Configuring Security for Azure Storage      589
	
13.	 Once you have connected the BLOB container through SAS URL, you can see 
the BLOBs under the container:
Figure 10.29: See the BLOB under the container connected through SAS URL
The preceding figure shows that we have a new BLOB container connected into our 
storage explorer and we can also see the list of BLOBs under that container.
In this section, you learned the use case of stored access policy. Now, you can control 
access for any SAS directly from access policy without regenerating it.
Anonymous access on Azure Storage containers 
and blobs
You can enable anonymous, public read access to a container, and its BLOBs in 
Azure Blob Storage. You can grant only read-only access to these resources without 
sharing your account key, and without requiring a shared access signature (SAS). 
Anonymous access is only possible for read operation on containers and BLOBs.
Public read access is best when you want certain BLOBs to always be available for 
anonymous read access. For more fine-grained control, you can create a shared 
access signature. Shared access signatures enable you to provide restricted access 
using different permissions, for a specific time.

590      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Setup anonymous access on Azure Storage containers 
and blobs
By default, a container and any BLOBs within it may be accessed only by the user 
who has been given appropriate permissions. To grant anonymous users read access 
to a container and its BLOBs, you can set the container public access level. When 
you grant public access to a container, the anonymous users can read BLOBs within 
a publicly accessible container without authorizing the request.
You can configure a container with the following permissions:
	
•	
No public read access (Private): The container and its BLOBs can be 
accessed only by authorized users and services. This is the default for all 
new containers.
	
•	
Public read access for blobs only (Blob): With this access, BLOBs within the 
container can be read by anonymous user over public network. But users 
cannot see the list of BLOBs in the container or in other words, the user 
cannot read the container to know about other BLOBs.
	
•	
Public read access for container and its blobs (Container): With this access, 
container and BLOBs data can be read by anonymous user. Along with 
BLOBs data, clients can also see the BLOBs within the container. But users 
cannot see containers within the storage account.
Let’s follow these steps to setup anonymous access:
	
1.	 To allow public access on containers and BLOBs, you need to enable BLOB 
public access on storage account level. Login to Azure portal and go to the 
storage account.
	
2.	 Click on Configuration in storage settings:
Figure 10.30: Enable BLOB public access on Azure Storage account

Configuring Security for Azure Storage      591
	
	
It will open a new window. Click on Enabled for the Allow Blob public 
access option.
	
3.	 Now, in the same storage account, click on Containers. It will open a new 
page and show the list of all containers.
	
4.	 Select the container on which you want to setup anonymous access:
Figure 10.31: Select Azure Storage container for anonymous access
	
5.	 Once you select the container, the Change access level option will be 
enabled. Click on this option and you will get a list of available access levels. 
Select the access level which you want to setup:
Figure 10.32: Anonymous access level types
In this section, we saw the process to setup anonymous access for your storage 
account. This kind of access is only recommended when you have some public 
content in your storage account and you want it to be accessible for everyone.

592      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Azure Storage access authorize with condition
Microsoft Azure came up with a new feature for access control through condition 
called Azure Attributes Based Access Control (ABAC). Azure ABAC uses Azure 
RBAC in background by added conditions to Azure role assignments. ABAC can be 
set only for BLOBs as of now. It is not supported for file, queue and table. You can 
configure condition on DataAction RBAC roles. To configure ABAC role, you should 
have Storage blob data owner permission. ABAC uses blob index tags to match 
the conditions. Blob index tags are only available on general-purpose v2 accounts 
with hierarchical namespace (HNS) disabled. Premium storage account does not 
support premium tags.
With this feature, you can control access for any service principal based on specified 
conditions. Service principal will get access if the condition becomes true. While 
granting conditional access, in Action, you define built-in or custom RBAC roles and 
attributes related to those actions and any required logical operators. A conditional 
access can have multiple actions and attributes (expressions). You can also combine 
multiple conditions, actions and expressions with logical operators.
Add attribute based access control (ABAC) on blob
In this section, you will study about the process to setup ABAC for BLOB data access. 
Since ABAC uses index tags for condition check, you will also study how to add blob 
index tag to a new and existing BLOB.
Until this feature is in preview, you will need to register your subscription to use 
index tags for conditional access. You can use PowerShell commands or Azure 
CLI to register your subscription.
PowerShell command:
Register-AzProviderFeature 
-FeatureName 
BlobIndex 
-ProviderNamespace 
Microsoft.Storage
Register-AzResourceProvider -ProviderNamespace Microsoft.Storage

Configuring Security for Azure Storage      593
Azure CLI command:
az feature register --namespace Microsoft.Storage --name BlobIndex
az provider register --namespace ‘Microsoft.Storage’
Let’s first go through the process to setup index tag on BLOBs:
	
1.	 Login to Azure portal and go to the storage account.
	
2.	 Click on Containers. It will open a new window. Here, you can see existing 
containers and create new containers.
	
3.	 Click on the container name under which you want to upload new BLOB or 
have existing BLOB to apply index tag.
	
4.	 Once you click on the container name, a new window will open. Here, you 
can see all existing BLOBs and upload new BLOBs.
	
5.	 To update index tags for an existing BLOB, click on three dots (…) at the end 
of the BLOB.
	
6.	 It will show a list of actions which you can take on the selected BLOB.
	
7.	 Click on Properties and it will open a new blade that will show properties 
of the selected BLOB:
Figure 10.33: Add index tag on an existing BLOB 
	
	
Scroll down to find a field to add BLOB index tags. As shown in the preceding 
figure, you can add tag in key value pair. You can add up to 10 index tags. 
Click on Save to finalize the changes.

594      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
8.	 Now to add index tag on a new BLOB:
Figure 10.34: Upload new BLOB and add an index tag
While uploading the BLOB, you can set index tags with key value pairs.
Now, we have two BLOBs with two different index tags. Now, let’s see how to use 
these tags to setup conditional access through ABAC.
Here, we will setup ABAC on blobs based on index tags. We will setup a condition 
so that Jayant and Shashwat can access only their own BLOBs:
	
1.	 Login to Azure portal and make sure you have these users in your Azure 
AD. They may be native or guest users. If you do not have these users, then 
create their account in Azure AD.
	
2.	 If you do not have, create a storage account with general purpose V2 which 
supports index tags.

Configuring Security for Azure Storage      595
	
3.	 If you do not have, create a new container and upload BLOBs there. I will be 
using my old container which I used to upload new BLOB in the preceding 
steps. So now, I have a container with two BLOBs in it.
	
4.	 Now, you need to decide the scope for permissions. It can be at subscription 
level, resources group level, storage account level or container level. I am 
choosing storage account for permission scope. So, go to the storage account 
and click on Access Control (IAM). It will open a new window:
Figure 10.35: Assign ABAC rule
	
	
Click on Add role assignment (Preview). This feature is in preview while 
writing this book. Its name and position may change once it comes into 
general availability.
	
5.	 It will open a new window and list all existing built-in and custom roles:
Figure 10.36: Select required permissions from existing assignment roles

596      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
You can search the required role from the list and click on Next. Here, we are 
selecting the Storage Blob Data Contributor role.
	
6.	 Under the Members tab, you can select any service principals and managed 
identities to add with this role assignment:
Figure 10.37: Add a member to this role assignment
	
7.	 After adding service principal, move to the next tab, Condition. The access 
condition can be configured through UI or code. You can select either of the 
way from editor type:
Figure 10.38: Create a condition and an action with it

Configuring Security for Azure Storage      597
	
	
Here, you can add multiple conditions for this role assignment. Each condition 
can have one action and multiple expressions. Click on + Add action. It will 
open a new blade as shown in the preceding figure. This blade will show 
you a list of permissions available with the selected role assignment. You can 
select the permissions which can be controlled by index tags.
	
	
If you want to add multiple actions, then you need to create multiple 
conditions.
	
8.	 After defining the action, now define the expression. Here, you configure 
when this action will be activated:
Figure 10.39: Configure expression for conditional ABAC
	
9.	 Click on + Add to add new expression. Select Resource from Attribute 
source, Blob index tags (Values in key) in Attribute, put the key name 
and value. Save the changes to bring this in effect.
In this section, you learned how to grant conditional access over storage BLOB by 
using key value pair of index tags.

598      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Network Security for Azure Storage 
Accounts
In the preceding section, we saw how to grant access on storage accounts. In this 
section, we will see how to restrict storage access from trusted network or IP. You 
can restrict Azure Storage access from defined IPs or IP ranges. When you make 
container private, it can only be accessed by Azure services under your tenant. But, 
you can further control the access by defining selected IP ranges.
Basic network security principal says that you first deny access from all networks 
and then grant access to traffic from specific virtual networks. You can also configure 
rules to grant access to traffic from selected public internet IP address ranges. 
Network rules are enforced on all network protocols for Azure storage including 
REST, SMB and SAS tokens. To access data using tools such as the Azure portal, 
Storage Explorer and AzCopy, explicit network rules must be configured.
IP network rules are only allowed for public IP addresses and not for private IP 
addresses. To grant access from your on-premises network to Azure Storage account, 
you will need to know internet facing IP addresses used by your network. One 
storage account can have up to 200 virtual network rules.
Control Azure Storage account access from 
selected network
In this section, you will study how to configure storage accounts access only from 
specific subnets. For this, you will need to enable service endpoint for Azure Storage 
within the virtual network. The service endpoint routes traffic from the virtual 
network through an optimal path to the Azure Storage service. The identities of the 
subnet and virtual network are also transmitted with each request. You will also see 
how to create service endpoint in the coming steps:
	
1.	 Login to Azure portal and go to the storage account.
	
2.	 Go to the Networking option under the Security + networking section:

Configuring Security for Azure Storage      599
Figure 10.40: Allow Azure Storage access from selected network
	
	
It will show the current networking configuration. By default, access from 
All networks is selected. This means, this storage account can be accessed 
from anywhere. You can access this storage from the internet also if access 
tier is not set to Private.
	
3.	 Now, before restricting the access from a subnet, you need to enable storage 
service endpoint on the subnet. For that, go to virtual network from where 
you want to access storage account:
 
Figure 10.41: Enable service endpoint on subnet

600      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
In Virtual network, select Service endpoints under Settings. Click on + 
Add to add new service endpoint. Select Microsoft.Storage from the Service 
drop-down and select the subnet from where you want to access the storage 
account.
	
4.	 Once the service endpoint is added, go back to storage account and click on 
the Selected networks option to allow access from desired networks only:
 
Figure 10.42: Select virtual network to access Azure Storage
	
	
Click on + Add existing network to grant access from existing network, else 
you have the option to create a new network and grant access from that.

Configuring Security for Azure Storage      601
	
5.	 You can also add any IP or IP range if you want to grant access from selected 
IP:
Figure 10.43: Add public IP of on-premises network in Azure Storage firewall
	
	
The preceding figure shows that we added a public IP of my on-premises 
network to grant access from on-premises network to Azure Storage.
	
6.	 Along with this firewall rule, you can setup exception for Azure services to 
access this storage account. Some Azure services do not use networks, hence, 
those cannot be included in your network rules. You can grant access to 
trusted Azure services by creating a network rule exception. In Figure 10.42, 
you can click on the check mark to grant access for trusted Azure services.
In this section, you learned how to control access for Azure Storage from trusted 
network, IP addresses and Azure services. In the next section, you will study how to 
grant private IP to an Azure Storage and access that over private network.
Access Azure Storage account through private 
endpoint
Private endpoint uses a private IP address from your virtual network, effectively 
bringing the service into your virtual network. With private endpoint connection, 
network communication between the clients on the virtual network and the storage 
account happens over the virtual network and the private link on the Microsoft 
backbone network. This eliminates the exposure of client and storage account from 
the public internet.
With private endpoint connection, you get a special network interface for an Azure 
service. This special network interface gets an IP address from the IP address range 
of your virtual network. Clients in the virtual network can connect to the storage 
service over the private IP.

602      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Let’s follow these steps to provide connectivity for Azure Storage through private 
endpoint:
	
1.	 Login to Azure portal and go to the storage account where you want to setup 
private endpoint.
	
2.	 Click on Networking and it will open a new window. There, you can see 
current networking configuration for your Azure Storage.
	
3.	 Click on the Private endpoint connections tab. There, you can see any 
existing private endpoint connection or create new by clicking on + Private 
endpoint.
	
4.	 It will open another new window with options to create new private 
endpoint connection. In this window, the first tab is about the Basics details. 
Fill it with subscription name, resources group name, location and private 
endpoint connection name:
Figure 10.44: Define target resource type for private endpoint connection
	
	
Since you are creating this private endpoint connection directly from a 
storage account, Resource type has already been selected as storage account. 
In Target sub-resource, you can select any one from the list of BLOB, file, 
tables, queue, DFS or web. Here, we are creating private endpoint connection 
for BLOB. So, we have selected BLOB from the drop-down.
	
5.	 Now in the next step, you need to select a virtual network and subnet for this 
private endpoint connection:

Configuring Security for Azure Storage      603
Figure 10.45: Select virtual network and subnet name for private endpoint connection
The private endpoint connection will get private IP from the selected subnet range. 
You can leave rest of the settings as default and click on Create.
Your storage account will get a private IP from the selected subnet. To see the private 
IP, you can go to the virtual network and check the list of connected devices. You 
will see an entry of new network interface card (NIC) with the name of your private 
endpoint connection. Now, you can use this private IP to control traffic on this 
storage account’s BLOBs.
Network Routing Preference for Azure Storage
With Azure routing preference, you can choose how your traffic routes between Azure 
and the internet. In Azure you get two traffic routing preferences, either through 
Microsoft network or ISP network (public internet). Traffic routing preference can be 
setup for the services which hold public IP. Along with public IP based services, you 
can also set the routing preference for Azure Storage resources. By default, traffic is 
routed via the Microsoft global network for all Azure services.
Routing via Microsoft global network
In Microsoft routing preference, traffic travels on Microsoft backbone network as 
long as it can. If a user from India wants to access any Azure resources hosted in 
East US, then traffic enters into Microsoft global network through the nearest Edge 
Point of Presence (POP) and travels on Microsoft network to the service hosted in 
East US. Similarly, the response also follows the same principle. The response traffic 

604      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
travels on Microsoft global network as long as it can and exits from the closest edge 
POP to the user:
Figure 10.46: Traffic flow through Microsoft global network routing preference
Microsoft global network is a very reliable, secure, redundant and highly available 
network. It has a global span over 160,000 miles of fiber with over 165 edge POP. 
Microsoft routing preference is also known as cold potato routing.
Routing over Public Internet (ISP network)
In Internet routing preference, user traffic travels majority on public internet. If 
a user in India wants to access Azure resources hosted in East US, then traffic will 
travel majorly on internet and will enter into Microsoft global network through 
nearest edge POP to East US region. Similarly, the response traffic will exit from East 
US Microsoft global network and travel over the internet to the user in India:
Figure 10.47: Traffic flow through internet routing preference
The preceding figure shows that the user traffic is traveling over the internet mostly.
Configure routing preference for Azure Storage
Now, let’s see how you can configure routing preference in Azure Storage. You can 
configure it while creating a storage account or after creation:
	
1.	 Login to Azure portal and go to the storage account.
	
2.	 Click on Networking and you will have an option to select the network 
routing preference:

Configuring Security for Azure Storage      605
Figure 10.48: Set routing preference in Azure Storage account
You can select either Microsoft network routing or Internet routing.
In this section, you studied the concept of different network routing preference 
options for Azure Storage account.
Enabling advance threat protection on 
Azure Storage
With Azure Defender, you get additional layers of security intelligence. Azure 
Defender detects unusual and potentially harmful attempts to access or exploit 
storage accounts. With Azure Defender, you can easily address threats without 
being a security expert or managing any third-party security monitoring systems.
You can enable Azure Defender for Azure Storage resources from Azure Security 
Center. Azure Defender triggers security alerts when it detects any anomalies about 
Azure Storage activity. These security alerts can be sent via email to administrators 
with details of suspicious activity and recommendations about investigation and 
remediation steps.
Azure Defender for Azure Storage is currently available only for Blob storage, 
Azure Files and Azure Data Lake Storage Gen2. Follow these steps to enable Azure 
Defender for Azure Storage:
	
1.	 Login to Azure portal and go to Security Center.
	
2.	 In Security Center, select Pricing and settings. There, you can see your all 
subscriptions. Select the subscription of your storage account.
	
3.	 It will open a window to enable or disable Azure Defender. Click on the 
Azure Defender On box to enable Azure Defender on your subscription:

606      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
 
Figure 10.49: Enable Azure Defender for storage accounts
You can see the list of Azure services which support Azure Defender. Under Select 
Azure Defender plan by resource type, locate the storage row and select ON in the 
Plan column. This will enable Azure Defender on all supported storage accounts in 
your environment.
In this book, at various points we saw that Azure Defender is a very important 
service to proactively protect your Azure environment and it is recommended at 
various places to enable it for your resources. In this section, we saw the steps to 
enable Azure Defender for our storage accounts.

Configuring Security for Azure Storage      607
Azure File Share Authentication with 
Azure AD DS
You can grant access on Azure Files over Server Message Block (SMB) through on-
premises Active Directory Domain Services (AD DS) and Azure Active Directory 
Domain Services (AD DS). In this section, we will see how Azure File shares can use 
Azure AD DS to support identity-based access over SMB. Enabling identity-based 
access for your Azure File shares allows you to replace existing file servers with 
Azure File shares without replacing your existing directory service and maintaining 
seamless user access to shares.
While accessing Azure Files over SMB, user needs to have two authorizations, first at 
Azure file share level and second at directory/file level. File share-level permission 
assignment can be performed on Azure Active Directory (AD) by assigning proper 
role-based access control (RBAC) role. With RBAC, the credentials you use for file 
access should be available or synced to Azure AD. You can assign built-in RBAC 
roles like storage file data SMB share reader to users or groups in Azure AD to grant 
read access to an Azure File share.
At the directory/file level, Azure Files supports Windows DACLs just like any 
Windows file servers. You can choose to keep Windows DACLs when copying data 
over SMB between your existing file share and Azure File shares.
To setup Azure AD DS authentication for your file share, you need the following 
resources:
	
•	
Azure AD Tenant
	
•	
Azure AD DS in your Azure AD Tenant
	
•	
Domain joined VM with Azure AD DS
	
•	
Azure File share
Mount Azure File share to any VM in your network (This VM should be domain 
joined).
Steps to configure Azure AD DS authentication 
for Azure File share
We can divide this process in further sub parts:

608      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Create Azure AD DS
Azure AD DS is a PaaS offering for AD DS. It has almost same features which you 
have in Windows AD DS. When you create Azure AD DS in your Azure environment, 
you get two IPs for two domain controllers. In Azure AD DS, you cannot RDP into 
the domain controller VMs. Let’s see the following steps to create and configure 
Azure AD DS in your environment:
	
1.	 Login to Azure portal and search for Azure AD DS service.
	
2.	 It will open a new window to take details about new Azure AD DS service:
Figure 10.50: Create Azure Active Directory Domain Services

Configuring Security for Azure Storage      609
	
3.	 As shown in the preceding figure, fill the basic details and move to next 
step to configure networking. In the Networking section, choose an existing 
virtual network or create a new virtual network to accommodate this Azure 
AD DS.
	
4.	 In the Synchronization tab, choose All Users and click on Create. It will 
take around an hour to deploy. After deployment, it will create two DNS 
servers in the selected virtual network address range.
	
5.	 You need to peer the virtual networks where you want to use Azure AD DS 
created DNS servers and add these DNS server entries into custom DNS 
option of the virtual networks.
Here, we saw the steps to deploy Azure AD DS in your Azure environment. Azure 
AD DS is a very useful and interesting service provided by Azure. You can use this 
service to achieve the capabilities of conventional on-premises domain control. 
This can be used for the organizations which want to use Azure only services for 
authentication purpose and does not have any server-based domain controllers.
Enable Azure AD DS identity-based authentication 
for Azure File share
Azure AD DS may take some time in deployment. Meanwhile, you can start 
configuring Azure AD DS based authentication for your Azure File shares:
	
1.	 To enable Azure AD DS identity-based authentication for Azure File share, 
go to the Azure Storage account and select Configuration under Settings. 
It will show multiple configuration settings. Toggle the switch to Enabled 
under the Azure Active Directory Domain Services (Azure AD DS) 
option:
 
Figure 10.51: Enable Azure AD DS authentication for Azure File share

610      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
2.	 Save the changes.
Enabling Azure AD DS authentication for Azure Storage account is as simple as 
described in the preceding step. Once you have deployed Azure AD DS in your 
environment, you can just follow these steps to enable Azure AD DS authentication 
for your storage accounts. You can enable Azure AD DS authentication over SMB 
only after you have successfully deployed Azure AD DS to your Azure AD Tenant.
Assign permission to an identity
As described in the previous section, a user needs to go through two authorization 
steps. In this section, you will see how to grant Azure File share level access through 
Azure AD. Azure provides some built-in Azure AD roles to grant access to users 
on Azure Files. The purpose of having these roles is to specify the type of access a 
particular user has to a file share.
Azure has three built-in roles for granting share-level permissions to users:
	
•	
Storage File Data SMB Share Reader: It allows read access in Azure Storage 
file shares over SMB.
	
•	
Storage File Data SMB Share Contributor: It allows read, write and delete 
access in Azure Storage file shares over SMB.
	
•	
Storage File Data SMB Share Elevated Contributor: It allows read, write, 
delete and modify NTFS permissions in Azure Storage file shares over SMB.
You can assign these built-in RBAC roles to an identity on the storage account of 
your file share.
Mount file share from domain joined VM
Use the Windows net use command to mount the Azure File share. Replace 
the placeholder values in the following example with your own values. Run the 
following command in elevated Command Prompt in Windows servers:
net use <desired-drive-letter>: \\<storage-account-name>.file.core.win­
dows.net\<share-name> 
/user:Azure\<storage-account-name><storage-ac­
count-key>
This VM should be domain joined with Azure AD DS. Domain joining is required to 
grant permission to a domain user.
Configure NTFS permission over SMB share
After you assign share-level permissions with RBAC, you must assign proper NTFS 

Configuring Security for Azure Storage      611
permissions at the root, directory or file level. Share-level permissions in Azure AD 
are outer gatekeepers that determine whether a user can access the Azure Files. NTFS 
permissions check access at more granular level and determine what operations the 
user can do at the directory or file level.
Azure Files support the full set of NTFS basic and advanced permissions. You can 
view and configure NTFS permissions on directories and files in an Azure File share 
by mounting the share and then using Windows File Explorer.
Let’s follow these steps to grant NTFS permissions to Azure File share from Windows 
File Explorer:
	
1.	 Login to the Windows machine where you mounted Azure File share and 
open the mounted file share drive in windows file explorer.
	
2.	 Right click on the files or directory in the mounted drive and click on 
Properties. It will open the Properties box.
	
3.	 Go to the Security tab and click on Edit to change permissions. Here, 
you can change permissions for any existing user or click on Add to grant 
permissions to a new user.
	
4.	 It will prompt a window for adding new users. Enter the username you want 
to grant permission to in the Enter the object names to select box and 
click on Check Names to find the full UPN name of the selected user. Once the 
user full UPN name is populated, click on OK.
	
5.	 Back to the Security tab, select all permissions you want to grant to your 
new user and click on Apply.
In this section, you studied how to grant access on Azure File share through Azure 
AD DS. Azure File share now also supports access management through on-premises 
Windows AD DS. With AD DS access management, you can now granularly control 
access on Azure File share and replace old Windows File servers with Azure File 
shares.
Conclusion
In this chapter, you learned security best practices for Azure Storage account. After 
this chapter, you can analyze gap between current security setup and recommended 
setup. You can now plan the correct and required security features for your Azure 
Storage. You also learned how to manage Azure AD authentication for Azure File 
share and access control for Azure Storage account. You learned about data encryption 
at rest and in transit Azure Storage with Microsoft-managed and customer-managed 
encryption key.

612      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
In the next chapter, you will study the security principals to secure your SQL 
databases in Azure. You will study about different authentication and encryption 
methods for Azure SQL database.
Multiple Choice Questions
	 1.	 Share Access Signature can be used ______________.
	
A.	to grant anonymous access
	
B.	 to grant signature on data in Azure Storage
	
C.	 for data encryption
	
D.	to grant limited access to user
	
Answer: D
	 2.	 Which Azure service will you use to encrypt Azure Storage?
	
A.	Azure Key Vault		
	
B.	 Azure Transparent data encryption
	
C.	 Share access signature	
D.	Advance threat protection
	
Answer: A
	 3.	 Which feature you will enable in Azure Storage to encrypt data in transit?
	
A.	Customer-managed key	
B.	 Infrastructure encryption
	
C.	 TLS 1.2 Share access signature	
D.	Microsoft-managed key
	
Answer: C
	 4.	 You shared a Shared Access Signature URL with your end users. Without 
regenerating the SAS URL, you want to modify its permissions. Which storage 
feature will you use for this?
	
A.	Azure Key Vault		
	
B.	 Stored access
	
C.	 Private endpoint		
	
D.	Azure AD DS
	
Answer: B
	 5.	 You want to grant access on storage account based on index tags. Which Azure 
service will you use in Azure Storage?
	
A.	Azure Attributed based access control
	
B.	 Azure Privileged access control
	
C.	 Azure multi-factor authentication
	
D.	Advance threat protection
	
Answer: A

In the previous chapter, we studied security best practices for Azure Storage accounts. 
Now in this chapter, we are going to study security best practices for Azure SQL 
Servers. Azure provide capability to store and consume the data at different places, 
such as Azure PaaS databases, storage accounts, data lakes and so on. Every data, 
coming or being consumed by these should meet the compliance and be accessed 
securely. Azure provides controls on how and how much you want to secure your 
data containers. We will cover different security best practices to secure your Azure 
SQL Servers and data.
In Azure SQL security best practices, some are Azure SQL server centric and some 
are database centric. In the coming sections, we will go through most of them. By 
the end of this chapter, you will be able to decide the best secure way to store your 
data in Azure SQL Servers. We will study the best practices to encrypt, authorize and 
classify the data in Azure SQL Servers.
Structure
In this chapter, we will learn about following topics:
	
•	
Security layers for Azure SQL Database
	
•	
Security best practices for Azure SQL
Chapter 11
Configuring Security 
for Azure SQL 
Databases

614      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
Authentication processes for Azure SQL Server
	
•	
Enabling auditing on Azure SQL
	
•	
Implementing database encryption
	
•	
Implement Azure SQL Database always encryption
	
•	
Enabling Azure Defender for Azure SQL Server
	
•	
Data discovery and classification
	
•	
Dynamic data masking
	
•	
Conclusion
	
•	
Multiple choice questions (MCQ)
Objective
The objective of this chapter is to understand the security best practices for Azure 
SQL databases. After is chapter, you should be able to decide and apply appropriate 
security features to Azure SQL Database. You will be able to learn how to setup 
server level and database level auditing and  how to setup advance threat protection 
for Azure SQL Database. You will also be able to allow and deny access from trusted 
and untrusted locations to Azure SQL Database. By the end of this chapter, you will 
be able to set up different type of encryptions and authentications for Azure SQL 
databases.
Security Layers for Azure SQL Database
In this section, we will see the available security options to secure Azure SQL 
Database and Azure SQL Managed Instance. We will understand in deep about how 
you can apply them on your Azure SQL Servers and databases. Azure provides five 
layers of security to secure customer data:
	
•	
Network security
	
•	
Access management
	
•	
Threat protection
	
•	
Information protection
	
•	
Security assessment
Let’s discuss these layers one-by-one in brief.

Configuring Security for Azure SQL Databases      615
Network Security
Network security is the first layer of security to customer database. With Microsoft 
firewalls, you can control network traffic to Azure SQL server based on source IP 
addresses and trusted virtual networks of your environment:
	
•	
IP firewall rules: You can create an allow firewall rule on Azure SQL server 
based on the source IP address of the request. This rule is only valid for 
Azure SQL and does not apply to SQL Managed Instance.
	
•	
Virtual network firewall rules: You can enable service endpoints in your 
virtual network. These service endpoints extend your virtual network 
connectivity over the Azure backbone and enable Azure SQL Database to 
identify the virtual network subnet that traffic originates from.
Access Management
The next level of security is access management. Azure provides various options to 
control user access on Azure SQL Servers and databases:
	
•	
Authentication: Azure SQL and SQL Managed Instance support these two 
types of authentications:
	
	
o	
SQL authentication: In this authentication process, the user uses 
username and password to login to Azure SQL Database or Azure 
SQL Managed Instance. A server admin login must have been created 
when the server is being created. Server admin can authenticate to any 
database on that server with database owner access. After logging in, 
you can create additional SQL logins for other users. This will enable 
users to connect using Azure SQL server local username and password.
	
	
o	
Azure Active Directory authentication: This is another authentication 
way to connect with Azure SQL server. You can use this method for 
Azure SQL Database, Azure Managed Instance and Azure Synapse 
Analytics. By Azure AD authentication, the administrators can centrally 
manage the identities and permissions of database users and hence, this 
authentication method is more recommended.
Since Azure Active Directory authentication comes with various new features and 
modern authentication process, it is recommended for use over SQL authentication.

616      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Threat Protection
Threat protection is the third layer of security for customer data in Azure SQL 
Database and SQL Managed Instance:
	
•	
SQL auditing in Azure Monitor logs and event hubs: You can enable auditing 
for Azure SQL Server, Azure SQL Database and SQL Managed Instance. This 
auditing helps you track Azure SQL Server and database activities. Along 
with live streaming of audit logs into log analytics and event hub, you can 
also store the audit logs in Azure Storage account for longer retention.
	
•	
Advanced threat protection: Advanced threat protection can be setup 
to analyze your logs to detect unusual behavior and potentially harmful 
attempts to access or exploit databases. You can setup alerts for any suspicious 
activities such as SQL injection, potential data infiltration and brute force 
attacks or for anomalies in access patterns.
Information Protection and Encryption
This is fourth layer of data protection. In this layer, Azure provides different ways 
to encrypt your data:
	
•	
Encryption in transit: Azure provides Transport Layer Security (TLS) to 
encrypt data in motion. Both Azure SQL Database and SQL Managed Instance 
support TLS. When you enable TLS over SQL Database and SQL Managed 
Instance, it always enforces encryption (SSL/TLS) for all connections. This 
ensures all data is encrypted in transit between the client and server.
	
•	
Encryption at rest: Azure provides Transparent Data Encryption (TDE) 
to encrypt data at rest.  TDE encrypts the entire database using encryption 
algorithm. With this encryption, application developers do not need to make 
any changes to existing applications.
	
•	
Encryption in use: With always encrypted feature, you can enable protection 
for the database columns with sensitive data. Examples of sensitive data 
include bank account numbers, personal health details and so on. When this 
encryption is in place, database administrators or other privileged users will 
also not able to access the data in the encrypted columns. The data always 
remains encrypted, which means the encrypted data is decrypted only for 
processing by client applications with access to the encryption key.
	
•	
Dynamic data masking: Dynamic data masking limits sensitive data 
exposure by masking it to non-privileged users. You can select the columns 
with sensitive data which you want to mask.

Configuring Security for Azure SQL Databases      617
Security Management
This is the final layer for data security in the list. But the data security parameters 
do not limit till here. In the security management process, Azure provides few more 
parameters to check the current security state of your database. Based on the state, 
you can take further actions to secure your database:
	
•	
Vulnerability assessment: Vulnerability assessment discovers, tracks and 
helps you remediate potential database vulnerabilities. You need to enable 
Azure Defender for Azure SQL Database to run vulnerability assessment.
	
•	
Data discovery and classification: With data discovery and classification, 
you get advanced capabilities for Azure SQL Database and SQL Managed 
Instance for discovering, classifying, labeling and protecting the sensitive 
data in your databases.
	
•	
Compliance: You can setup a security baseline to secure all your SQL 
servers. It is equally important to monitor how much they are compliant to 
the baseline.
Security best practices for Azure SQL
In this section, we will see the common security challenges the organizations face 
and what are the best practices to remediate those challenges. This section applies 
for Azure SQL Database and Azure SQL Managed Instances. This section does not 
apply for Azure SQL Data Warehouse, Azure SQL VMs and on-premises SQL Server.
Authentication best practices
Let’s see the best practices related to authentication and authorization. They provide 
the insights on various ways to secure your authentication process:
	
•	
Use Azure AD authentication as much as possible. This helps you to maintain 
a list of administrative accounts, collect logs of suspicious login attempts and 
setup alerts on account login behavior deviation.
	
•	
Enable Multifactor Authentication (MFA) to access Azure SQL.
	
•	
Enable conditional access to allow SQL access from only specific logical 
groupings of IP address ranges or countries/regions.
	
•	
Minimize SQL authentication-based authentication.
	
•	
Minimize the password-based authentication for applications.
	
•	
Store passwords and connection strings in Azure Key Vault.
	
•	
Use SQL authentication only for legacy applications.

618      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
These are few of the best practices related to authentication process. You can choose 
the best suitable one as per your business need.
Data protection best practices
The following are few best practices related to data protection:
	
•	
Maintain the classification of data.
	
•	
Encrypt data at rest by TDE.
	
•	
Encrypt data in transit by TLS.
	
•	
Apply data masking to prevent unauthorized viewing of data.
	
•	
Apply always encryption to protect miss of data from highly privileged and 
unauthorized users.
	
•	
Apply cell level encryption to control application to access sensitive data.
	
•	
Enable SQL vulnerability assessment to scan your database for security 
issues, and to automatically run periodically on your databases.
	
•	
Use SQL data discovery and classification to discover, classify, label and 
protect the sensitive data in your databases.
The preceding listed best practices can help you secure your data at rest, in transit 
and while processing.
Network security best practices
The following is the list of network security best practices. We have already studied 
many of these in Chapter 4, Implementing Advance Network Security and will study 
some of these in this chapter also:
	
•	
Ensure that client machines connecting to Azure SQL Database and SQL 
Managed Instance are using Transport Layer Security (TLS).
	
•	
Enable service endpoint on Azure VNet to access Azure SQL through 
Microsoft backbone network.
	
•	
Use Azure private link to access Azure SQL over private IP.
	
•	
Restrict public IP whitelisting in Azure SQL server firewall.
	
•	
Enable DDoS protection standard on the virtual networks associated with 
your Azure SQL Database for protections from distributed denial-of-service 
attacks.
This is not a complete list. This list can have many more other best practices 
depending on your environment and business components.

Configuring Security for Azure SQL Databases      619
Monitoring, logging, and auditing best practices
In Chapter 7, Monitor Security by Using Azure Monitor, we saw various monitoring 
and alerting tools for Azure resources. We can use some of them for data stores’ 
security also. The following is the list of few best practices related to monitoring and 
alerting:
	
•	
Configure advance threat protection for SQL to protect database from attacks.
	
•	
Enable advance data security for SQL.
	
•	
Enable SQL database auditing for Azure SQL Database.
	
•	
Enable managed instance auditing for Azure Managed Instance.
	
•	
Archive the security logs in Azure Storage.
	
•	
Stream audit logs into event hub and log analytics.
	
•	
Enable Azure Security Center and Azure Monitor for security scan and to 
monitor the SQL servers.
	
•	
Setup alerts in Azure Alerts for any anomalous activity.
In Chapter 7, we saw the detailed process and steps to configure Azure Monitor and 
alerts for your Azure resources and services.
Authentication Processes for Azure SQL 
Server
Azure SQL Database supports Azure Active Directory authentication and SQL 
authentication methods. SQL authentication method is a conventional or traditional 
authentication process whereas Azure AD authentication method is a modern 
authentication process. We will study about them in this section. There are different 
business use cases for different authentication methods.
SQL authentication method
This is a native authentication method for SQL database. In this authentication 
method, the user account is created locally on the SQL server and then appropriate 
access is granted to the user account over underlying databases. The local account 
can be created while creating any new Azure SQL server or after creation of the Azure 
SQL server. In SQL authentication, you create a login account in the master database 
of the Azure SQL server and then a user account on your desired user database. 
This user account will be granted appropriate permissions on user database. The 
master database login account and user database username need to be linked with 

620      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
each other so that the user can login to the Azure SQL server and perform desired 
operation on user database based on the assigned permissions.
The master database login account helps users to connect with SQL servers and the 
database user account helps users to connect with desired user database. The first 
local account which was created while creating Azure SQL server gets complete 
access on Azure SQL server and underlying databases. The first local admin account 
gets SysAdmin permissions on Azure SQL server.
Let’s follow these steps to create SQL authentication local admin account while 
deploying Azure SQL server:
	
1.	 Login to Azure portal and search for SQL servers. Click on Create.
	
2.	 While creating the database, in the Basics tab you will find fields to enter 
username and password for server administrator account:
Figure 11.1: Setup local admin for Azure SQL server
	
	
You can enter a username and complex password of your choice. Once the 
Azure SQL server is deployed, you can change your server administrator 
password (if required but not mandatory) from Azure portal also.
	
3.	 To reset the administrator password, go to the Azure SQL server in Azure 
portal.
	
4.	 On the Overview page, you will get the option to reset server admin password:
Figure 11.2: Option to reset local admin password for Azure SQL Server
	
	
When you click on Reset password, it will open a new blade to take input of 
new password. There, you can enter your new password. From the password 
reset option, you cannot change the username of admin account. Also, you 
cannot add new admin account from here.

Configuring Security for Azure SQL Databases      621
	
5.	 If you forgot Azure SQL server local admin username, you could view it 
from Azure SQL server properties:
Figure 11.3: Check the Azure SQL Server local admin username
	
	
In the preceding steps, you learned how to create Azure SQL local admin 
account while deploying new Azure SQL server and reset its password. You 
can create more local accounts and grant them access to other databases.
In the next section, we will study about Azure Active Directory authentication 
process.
Azure Active Directory authentication for Azure 
SQL server
Azure Active Directory (AD) authentication is supported by Azure SQL Database, 
Azure SQL Managed Instance and Azure Synapse Analytics by using Azure AD 
identities. Azure AD is a central ID management provider. It manages database 
users and simplifies permission management. The following are some benefits of 
Azure AD authentication:
	
•	
It is a modern authentication process and an alternative to SQL server 
authentication.
	
•	
Since Azure AD is a centralized place to hold all identities, it allows password 
rotation at a single place.
	
•	
With Azure AD, you can manage database permissions for external/invited/
guest users also.

622      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
•	
Azure AD authentication uses contained database users to authenticate 
identities at the database level.
	
•	
MFA can be integrated with Azure AD authentication.
To create new users, you must have the ALTER ANY USER permission in the database. 
The ALTER ANY USER permission can be granted to any database user. The ALTER 
ANY USER permission is also held by the server administrator accounts, database 
users with the CONTROL ON DATABASE or ALTER ON DATABASE permission for 
that database and by members of the DB_OWNER database role.
As you know, Azure AD authentication process for Azure SQL server uses contained 
database user model. This user model does not require login in the master database. 
Although the authentication happens at the user database,  the database user in the 
user database does not have an associated login in the master database. Both Windows 
authentication and SQL server authentication supports the contained database user 
model. When you try to connect as a contained database user, you need to put a 
parameter for the user database in the connection string so that the database engine 
knows which database is responsible for managing the authentication process. In 
contained database user model, user access is limited only to the authenticating 
database. So, the database user cannot work on other databases. To login to a 
different database, the users must create a new connection with new connection 
string. Contained database users in SQL Server can change databases if an identical 
user is present in another database.
You need to connect to the database with Azure AD administrator account (who has 
owner access on the database) to create first contained database user in Azure SQL 
Database, SQL Managed Instance or Azure Synapse. We will see how to configure 
first Azure AD authentication admin for Azure SQL Database in the coming section. 
Azure AD authentication is only possible if the Azure AD admin was created for 
Azure SQL Database, SQL Managed Instance or Azure Synapse. If you remove the 
Azure Active Directory admin from the server, the existing Azure Active Directory 
users created previously inside SQL Server will no longer be able to connect to the 
database using their Azure Active Directory credentials and will get Cannot connect 
to server error.
Steps to configure Azure Active Directory 
authentication for Azure SQL Database and Azure 
SQL Managed Instance
Azure SQL Database, Azure SQL Managed Instance and Azure Synapse Analytics 
supports the following authentication methods:

Configuring Security for Azure SQL Databases      623
	
•	
Azure AD cloud-only identities
	
•	
Azure AD hybrid identities that support:
	
	
o	
Cloud authentication with two options coupled with seamless single 
sign-on (SSO)
	
	
o	
Azure AD password hash authentication
	
	
o	
Azure AD pass-through authentication
	
	
o	
Federated authentication
We have learned how to setup password hash, pass-through and federated 
authentication processes in the previous chapters.
When you create Azure SQL server, you need to create an SQL server local 
administrator account. This local server administrator account becomes the 
administrator of the entire server. Azure AD administrator will be the second 
administrator account. This principal is created as a contained database user in the 
master database of the server. Administrator accounts are members of the db_owner 
role in every user database. When you setup geo-replication for Azure SQL server, 
the Azure Active Directory administrator must be configured for both the primary 
and secondary servers.
Azure AD authentication for Azure SQL Database
In this section, we will see how to configure Azure AD admin for Azure SQL 
Database:
	
1.	 Login to Azure portal and go to Azure SQL server where you want to 
configure Azure AD authentication.
	
2.	 Go to Active Directory admin under Settings and click on Set admin:
Figure 11.4: Setup Azure AD admin for Azure SQL server

624      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
3.	 In the Add admin page, search for a user, select the user or group to be an 
administrator. Click on Select and then Save these changes.
	
4.	 On the same page, you also see an option just to allow Azure AD 
authentication for this Azure SQL server. You can enable this option if you 
just want to use Azure AD for authentication. When you allow this feature, 
SQL authentication will be disabled.
You can follow the preceding steps to enable Azure Active Directory authentication 
for your Azure SQL Database servers. Azure SQL Managed Instance has a slightly 
different process to enable AAD authentication. We will study about that process in 
the next section.
Azure AD authentication for Azure SQL Managed Instance
Azure SQL Managed Instance needs permissions to read Azure AD to accomplish 
authentication of users through security group membership or creation of new users. 
For this, you need to grant read permission to the SQL Managed Instance on Azure 
AD. Follow these steps to do this:
	
1.	 Login to Azure portal and go to the Azure SQL Managed instance.
	
2.	 Go to Active Directory admin under Settings and click on Set admin.
	
3.	 On the Set admin page, you will see a banner to connect managed instance 
to Azure Active Directory. A new massage box will open. Click on Grant 
permissions:
Figure 11.5: Connect managed instance to Azure AD to support Azure AD admin

Configuring Security for Azure SQL Databases      625
	
4.	 In the Add admin page, search for a user. Select the user or group to be an 
administrator. Click on Select and then Save these changes.
In this section, we saw how to connect Azure SQL Managed Instance to Azure Active 
Directory and enable AAD authentication.
Add other users from Azure Active Directory
Azure SQL Managed Instance directly supports Azure AD logins and thus, contained 
database users are not required. With Azure AD logins, you can create logins for 
Azure AD users, groups or applications:
	
1.	 Login to Azure SQL server through SQL Server Management Studio (SSMS). 
Use the latest SSMS version. To login, select the proper authentication method 
from the drop-down. If your Azure AD admin account has MFA enabled, 
you need to select Azure Active Directory - Universal with MFA:
Figure 11.6: Connect Azure SQL server through SSMS
	
2.	 Once you are logged to Azure SQL server through Azure AD admin user, 
you can add other Azure AD users to Azure SQL Databases.
	
3.	 In contained database user model, you need not create user in master 
database. So, to add other users to Azure SQL Database, click on the user 
database and then click on New Query. You can run the following query to 
add Azure AD user to the database:
	
	
CREATE USER <[Azure_AD_principal_name]> FROM EXTERNAL PROVIDER;
	
	
Example is as follows:
	
	
CREATE USER [jayantsharma2202@bookdemo.com] FROM EXTERNAL PROVIDER;

626      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 11.7: Run query on Azure SQL DB to add Azure AD user
	
4.	 When you write the query, click on Execute to run the query. The query 
result will look as the following figureand shows that the user is added to the 
database:
Figure 11.8: Add Azure AD user query result
	
	
You can add more new contained database users and grant them appropriate 
permissions over the databases.
	
5.	 Since this added a new contained database user to your user database, you 
will need to provide the user database name while connecting to it through 
SSMS.
	
6.	 In SSMS, enter the Azure SQL server name, new contained database username 
and password:

Configuring Security for Azure SQL Databases      627
Figure 11.9: Connect to Azure SQL server with new contained database user
	
	
Now, move to the next Connection Properties tab. In this tab, enter the 
database name with which you want to connect:
Figure 11.10: Put the database name in SSMS to connect with contained database username
	
	
Once you fill in all the details, click on Connect to connect with the database.

628      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
In this article, we saw the process to grant access to an external user on your database. 
Now, you can grant access to someone who is not a part of your domain.
Enabling auditing on Azure SQL
With auditing, you can track database events and write these audit logs in event 
hubs, storage accounts or log analytics workspace. You can retain audit logs to 
selected events. You can define categories of database actions to be audited. You can 
generate report based on database activity. There are many pre-configured reports 
and dashboards. You can use them to see activity and event reports. With these 
reports, you can analyze any suspicious, unusual events and activities.
Azure SQL Database and Azure Synapse support two types of auditing - server-level 
auditing and database level auditing. If you enable server-level auditing policy, 
it applies to all existing and newly created databases on the server. If you enable 
server-level auditing, the underlying databases will always be audited regardless 
of whether you enable auditing on database-level or not. If you enable database-
level of auditing along with sever level auditing policy, then your database will be 
audited two times with both audit policies.
It is recommended to avoid enabling both server and database auditing unless you 
have different audit policies for different databases. Enabling auditing on a paused 
Azure Synapse and dedicated SQL pool is not supported. To enable auditing, resume 
Azure Synapse and dedicated SQL pool.
Enabling server level auditing
In this section, let’s see how to enable auditing policy at Azure SQL server level:
	
1.	 Login to Azure portal and go to the Azure SQL server where you want to 
enable server level audit policy.
	
2.	 Click on Auditing. You will see the option to enable server-level auditing for 
this Azure SQL server. Toggle the switch to enable auditing:

Configuring Security for Azure SQL Databases      629
Figure 11.11: Enable server level auditing policy for Azure SQL server
	
	
As shown in the preceding figure, you can send audit logs to three Azure 
services: Azure Storage, Log Analytics, and Event Hub. You can select one 
or all three to send your audit logs.
	
	
Azure Storage account archives the logs whereas log analytics and event hub 
are used to analyze live data. In this scenario, we are archiving logs into 
Azure Storage. Select Azure Storage account and log retention days.
	
3.	 Once you have selected the correct destination, click on Save.
In this section, we learned how to enable server-level auditing. This will be applied 
on all underlying databases of this server.
Audit for Microsoft support operations
Auditing of Microsoft support operations tracks Microsoft support engineers’ 
operations on your server and writes them to an audit log in your Azure Storage 
account, log analytics workspace or event hub:

630      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
1.	 Login to Azure portal and go to the Azure SQL server where you want to 
enable server level audit policy.
	
2.	 Click on Auditing. You will see a section for enabling audit for Microsoft 
support operations.
	
3.	 Toggle the switch to enable it.
	
4.	 You can choose either different or same destination for audit logs storage:
Figure 11.12: Enable Azure SQL server level auditing for Microsoft support operations
	
	
As shown in the preceding figure, toggle the switch to enable auditing for 
Microsoft support operations and select the destination to store the logs.
In this section, we enabled auditing for Microsoft support operations.
Enabling database level auditing
In the previous sections, you studied about Azure SQL server level auditing. In this 
section, we will study how to enable database level of auditing:
	
1.	 To enable database level of auditing, go to the Azure SQL Database in Azure 
portal.
	
2.	 Click on Auditing in the left panel. It will open a new window. There, you 
can see the status of server level and database level auditing:

Configuring Security for Azure SQL Databases      631
Figure 11.13: Status of Azure SQL Server level auditing 
	
	
In the preceding figure, you can see that our current Azure SQL server 
already has server level auditing enabled.
	
3.	 To enable database level of auditing, toggle the switch:
Figure 11.14: Enable Azure SQL Database level auditing 
	
	
Similarly, as storage level auditing, you can select different destinations for 
audit logs. You can archive them in Azure Storage and send them to log 
analytics and event hub for further analysis and streaming.

632      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
View audit logs
In this section, we will go through the process to view the audit logs. There are 
multiple ways to view the audit logs. This will help you analyze operations on your 
Azure SQL. You can see which activity succeeded and which failed and what actions 
were taken by whom.
View audit logs in Azure portal
Let’s follow these steps to see audit logs from Azure portal:
	
1.	 Login in to Azure portal and go to the Azure Database for which you want 
to see the audit logs. Audit logs can be seen at database auditing page also 
and not only in the server auditing page. You can see the View audit logs 
option in database Auditing page.
	
2.	 Click on the View audit logs option. It will open a new window. In the 
previous sections, since we enabled auditing at both levels server and 
database levels, we are getting two options to select audit source. You can 
select the audit source to view the respective logs. You can filter the audit 
logs for your required time window:
Figure 11.15: View Azure SQL audit logs in Azure Portal 
	
	
The preceding figure shows the time of event, account which executed the 
event, type of event and status of the action.

Configuring Security for Azure SQL Databases      633
	
3.	 Click on the event to know more details about it. It will open a new window 
with the information shown about the event. I clicked on the first failed event 
to know more details about it.
Figure 11.16: View detailed information about the audit logs
	
	
The preceding figure shows additional information like Azure SQL server 
name, application from which the action was triggered, public IP from which 
the action was triggered and the statement or query ran during the action. 

634      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Additional information field shows the error or cause of failure of this event/
action.
In this section, we saw how to view audit logs from Azure portal. You can do more 
analysis on the audit logs if you send them to Azure Log Analytics Workspace. If you 
send audit logs to log analytics workspace, the Log Analytics and View dashboard 
options get enabled on the View audit logs page.
View audit logs in Azure storage
In this section, we will study how to see audit logs which you sent to Azure Storage 
account:
	
1.	 To view audit logs from Azure Storage account, you need to connect to Azure 
Storage account where you are storing the audit logs. To connect with Azure 
Storage account, you can use Azure Storage Explorer or Azure portal.
	
2.	 Login to Azure portal and go to the Azure Storage account where you are 
storing the audit logs.
	
3.	 In target storage account, you will find a container by name sqldbauditlogs:
Figure 11.17: View Azure SQL audit logs in Azure Storage account 
	
	
Under this container, you will find hierarchal folders for audit logs for 
different SQL servers, underlying databases, audit types and dates. Select a 
date for which you want to view the logs.
	
4.	 You may see multiple log files. The log files are in .xel format. You can 
download one or multiple .xel formatted files.

Configuring Security for Azure SQL Databases      635
	
5.	 Once the files are downloaded in your local system, you can double click on 
them to open them. You will require SSMS to view the audit logs.
Now, you know how to enable different types of auditing on Azure SQL and how to 
view audit logs and analyze them.
Implementing Database Encryption
Every security best practice says that data at rest and in transit should be encrypted. 
In the coming sections, we will study about different types of encryptions, their 
business use cases and how to implement them.
Transparent data encryption
With Transparent Data Encryption (TDE), you can encrypt your data at rest in 
Azure SQL Database, Azure SQL Managed Instance and Azure Synapse Analytics. 
This protects your data from the threat of malicious activity. You need not make 
any changes in your application to run TDE. TDE performs real-time encryption 
and decryption of the database, associated backups and transaction log files at rest 
without requiring changes to the application.
Transparent data encryption performs real-time I/O encryption and decryption 
of the data at the page level. Each page is decrypted when it is read into memory 
and then encrypted before being written to disk. TDE also encrypts the storage of 
entire database by using a symmetric key. This symmetric key is called the Database 
Encryption Key (DEK). DEK is protected by the TDE protector. TDE protector can 
use either Microsoft managed or customer managed key for encryption.
The TDE protector is set at the server level for Azure SQL Database and Azure 
Synapse and is inherited by all underlying databases of that server. Whereas the 
TDE protector is set at the instance level for Azure SQL Managed Instance and is 
inherited by all underlying databases on that instance.
When you do some operations on an encrypted database within Azure, you need 
not decrypt databases for them. The TDE settings of the source database or primary 
database are transparently copied on the target. Such operations include:
	
•	
Geo-restore of SQL database
	
•	
Self-service point-in-time restore
	
•	
Restoration of a deleted database
	
•	
Active geo-replication
	
•	
Creation of a database copy
	
•	
Restore of backup file to Azure SQL Managed Instance

636      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
When you export a TDE-protected database, the exported content of the database 
is not encrypted. This exported content is stored in unencrypted BACPAC files. So, 
you need to place the BACPAC files securely and enable TDE. After you import it, 
restore the database. But if you export a database to and from SQL Database, the 
TDE will be enabled on the new database, but the BACPAC file itself will still not be 
encrypted.
Service-managed transparent data encryption
In the service managed TDE, a built-in server certificate is used to protect DEK. This 
built-in server certificate is unique for each Azure SQL server. The built-in server 
certificate uses AES 256. In case of a geo-replication database, both the primary and 
geo-secondary databases are protected by the primary database’s parent server key. 
All the child databases of same parent server also share the same built-in certificate. 
In this type of TDE, Microsoft automatically rotates these certificates in compliance 
with their internal security policy and the root key is protected by a Microsoft 
internal secret store.
Customer-managed transparent data encryption
In this scenario, you can use your own asymmetric key to encrypt the DEK. This is 
also known as Bring Your Own Key (BYOK). This key can be stored in a customer-
owned and managed Azure Key Vault. You can generate the TDE protector in Azure 
Key Vault or transfer to the key vault from an on-premises hardware security module 
(HSM) device. The SQL database, SQL Managed Instance and Azure Synapse need 
to be granted permissions to the customer-owned key vault to decrypt and encrypt 
the DEK. If permissions of the server to the key vault are revoked, the database will 
be inaccessible and all data is encrypted.
With TDE with Azure Key Vault integration, you can control key management tasks 
such as key rotations, key vault permissions, key backups and enable auditing/
reporting on all TDE protectors using Azure Key Vault functionality.
Enable TDE on Azure SQL Database
By default, service managed TDE is already enabled on Azure SQL Servers. But in 
this section, we will see how you can enable TDE with your managed key. This is 
called a customer managed TDE process:
	
1.	 Login to Azure portal and go to the Azure SQL server.
	
2.	 On Azure SQL server, go to Transparent data encryption under the 
Security section. Here, you can see the current encryption status of your 

Configuring Security for Azure SQL Databases      637
Azure SQL server. As said earlier, Azure SQL server is already encrypted 
with service-managed key:
Figure 11.18: Current TDE status on Azure SQL server
	
3.	 Switch to Customer-managed key to use your own key for encryption. This 
will require Azure Key Vault. If you, have it already, you can use that key 
vault. If not, you can create a new one in this process.
	
4.	 Once you click on Customer-managed key, few more options will display:
Figure 11.19: Options to select key vault for custom managed key TDE

638      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
Click on Change key to choose encryption key. Once you click on Change key, 
it will open a new window. There you can select any existing key vault and 
encryption keys or create new key vault and encryption key.
	
5.	 In this demo, we will be using one of our existing key vaults and encryption 
key:
Figure 11.20: Select key vault and encryption key for TDE 
	
	
After making these changes, click on Save on TDE dashboard.
As we know, data encryption at rest and in transit is an important part of cyber 
security best practices. In this section, we saw the process to enable encryption for 
data at rest with customer managed encryption key.
Implement Azure SQL Database Always 
encryption
Always Encrypted is a security feature designed for SQL databases to protect sensitive 
data such as credit card details, account numbers, etc. stored in SQL Database. 
Always Encrypted allows you to encrypt sensitive data inside applications also 
and never reveals the encryption keys to the database engine. As a result, Always 
Encrypted provides a separation between those who own the data and can view it 
and those who manage the data but should have no access.
Always encryption workflow
Always Encryption can be enabled for individual database columns containing your 
sensitive data. When you set up encryption for a column, you need to specify the 

Configuring Security for Azure SQL Databases      639
information about encryption algorithm and cryptographic keys used to protect the 
data in the column. Always Encrypted feature uses two keys for encryption process: 
column encryption keys and column master keys. A column encryption key is 
used to encrypt column data. A column master key is a key-protecting key. Column 
master key can be used to encrypt one or more column encryption keys.
The database engine stores encryption configuration for each column in database 
metadata. The database engine never stores or uses the keys of either type in plaintext. 
It only stores encrypted values of column encryption keys and the information about 
the location of column master keys. You can store column master keys in external 
trusted key stores such as Azure Key Vault, Windows Certificate Store on a client 
machine or an HSM.
To access data stored in an encrypted column in plain text, an application must 
use an Always Encrypted enabled client driver. When an application issue a query 
to access the encrypted data, the driver collaborates with the database engine to 
determine the target encrypted columns and thus, should be encrypted. For each 
column that needs to be encrypted, the driver obtains the information about the 
encryption algorithm, the encrypted value of the column encryption key for the 
column and the location of its corresponding column master key.
Next, the driver contacts the key store containing the column master key in order to 
decrypt the encrypted column encryption key value and then, it uses the plain text 
column encryption key to encrypt the parameter. The resultant plain text column 
encryption key is cached to reduce the number of round trips to the key store on 
subsequent use of the same column encryption key.
Types of encryptions in Always Encryption
Always Encrypted supports two types of encryptions: randomized encryption and 
deterministic encryption:
	
•	
Deterministic encryption: This kind of encryption always generates the same 
encrypted value for any given plain text value. Deterministic encryption 
helps you to point lookups, equality joins, grouping and indexing on 
encrypted columns. However, it may also allow unauthorized users to guess 
information about encrypted values by examining patterns in the encrypted 
column, especially if there’s a small set of possible encrypted values.
	
•	
Randomized encryption: This kind of encryption uses a method that encrypts 
data in a less predictable manner. It generates different encryption values 
for any given plain text value. Randomized encryption is more secure, but 
prevents searching, grouping, indexing and joining on encrypted columns.
You can use deterministic encryption for columns that will be used as search or 
grouping parameters. You can use randomized encryption for data such as 

640      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
confidential investigation comments which are not grouped with other records and 
are not used to join tables.
Getting started with Always Encrypted
In this section, we will see how to use Always Encryption feature for SQL database. 
We will use SSMS tool to encrypt database columns. We will provision the required 
keys and configure encryption for selected columns. We will also see encrypted data 
for those selected columns. Let’s follow these steps to encrypt columns.
Prerequisites
To encrypt database columns, you need to meet these prerequisites:
	
•	
You should have access to create new database or have an existing database.
	
•	
You should have SSMS version 13.0.700.242 or above.
	
•	
You should have a centralized location to store column master key. This can 
be Windows Certificate Store or Azure Key Vault.
	
•	
You should have .NET Framework 4.6 or later (on the client computer).
Implementation steps
After achieving the preceding prerequisites, you can follow these steps to enable 
Always Encryption for your database:
	
1.	 I assume that you already have a test database with you, else you can create 
one from Azure portal.
	
2.	 Connect to Azure SQL Database through SSMS tool. You need to login to 
Azure SQL Database with the account which has access to Azure Key Vault, 
because we will be using Azure Key Vault for master key store:
Figure 11.21: Connect to Azure SQL Database through SSMS

Configuring Security for Azure SQL Databases      641
	
3.	 In this demo, I will encrypt City column from SalesLT.Address table:
Figure 11.22: See unencrypted value in table
	
	
I will use deterministic encryption for the City column. This will also help to 
under difference between deterministic and randomized encryption.
	
4.	 Right-click your database, point to Tasks and then click Encrypt Columns… to 
open the Always Encrypted Wizard:
Figure 11.23: Select database to encrypt columns
	
5.	 Review the Introduction page and then click Next.
	
6.	 On the Column Selection page, expand SalesLT.Address table and select 
the City column to encrypt.

642      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
7.	 For the City column, select Deterministic encryption:
Figure 11.24: Select columns and encryption type
	
8.	 For each column selected for encryption, select an encryption key. Since we 
do not have any existing column encryption key, select the default choice of 
a new autogenerated key and then click Next.
	
9.	 On the Master Key Configuration page, select a location to store the new key 
and select a master key source. Here, we will use Azure Key Vault to store 
column master key. You should have access to Azure Key Vault to store key 
in it. You will need to login to Azure Key Vault:
Figure 11.25: Select master key store location

Configuring Security for Azure SQL Databases      643
	
	
Select the Azure Key Vault option and click on Sign In…:
Figure 11.26: Login to Azure and select key vault to store master key
	
	
After logging in, you can choose a subscription and key vault to store the 
master key.
	
10.	 On the Validation page, choose whether to run the script immediately or 
create a PowerShell script and then click Next:
Figure 11.27: Validation step

644      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
11.	 On the Summary page, review the options you selected and then click Finish. 
Close the wizard when completed:
Figure 11.28: Summary of Encryption process
	
	
Validate the summary of configuration and click on Next. The next page will 
show the progress of process. It may take some time to encrypt columns 
depending on the number of columns, rows and type of encryption.
	
12.	 Once the encryption process is complete, login to the SSMS and connect to 
the database. If you login with the user who has access on Azure Key Vault 
which is used to store master key, then the encrypted column data will be 
shown as plain text. But, if a user does not have access on Azure Key Vault, 
the encrypted column data will be shown as encrypted value:
Figure 11.29: Encrypted values in database column

Configuring Security for Azure SQL Databases      645
	
	
As shown in the preceding figure, column City data is encrypted.
	
13.	 Now, to understand the difference between deterministic and randomized 
encryption, pay attention to encryption value of the City column. In Figure 
11.22, you can see that unencrypted data has same city name in row number 
one and two. Due to deterministic encryption, the encrypted values for these 
two rows are also same. But, if we would have used randomized encryption, 
the encrypted value would have been different.
Hope these steps clear the difference between deterministic and randomized 
encryption. Also, it would have helped you to understand how to setup Always 
Encryption for your database.
Rotate Column Master Key (CMK) and Column encryption 
key (CEK)
As per your security policy, you may want to rotate all connection strings, encryption 
keys and passwords periodically. In this section, we will see how to rotate column 
master and column encryption keys.
Rotate column master key
The rotation of a column master key is the process of replacing an existing column 
master key with a new column master key. A column master key rotation involves 
decrypting column encryption keys that are protected with the current column 
master key, re-encrypting them using the new column master key and updating the 
key metadata. Let’s follow these steps to rotate column master key:
	
1.	 First, let’s create a new column master key. When you enable Always 
Encryption for your database, it creates a new sub folder Always Encrypted 
Keys under the Security folder.
	
2.	 Expand the Security folder and go to Always Encrypted Keys sub folder:

646      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 11.30: Create new column master key
	
	
As shown in the preceding figure, there are two sub folders under Always 
Encrypted Keys, Column Master Keys and Column Encryption Keys.
	
3.	 Right-click on the Column Master Keys folder and select the New Column 
Master Key… option. It will open a new window to generate or select new 
column master key:

Configuring Security for Azure SQL Databases      647
Figure 11.31: Generate or select new column master key
	
	
As shown in the preceding figure, you need to select the location to store 
column master key. I am selecting Azure Key Vault. You will need to login 
to Azure to access Key Vault. Once you login to Azure, it will show the list 
of subscriptions. Select the subscription where you have your desired key 
vault. Then, select the key vault from the drop-down.
	
4.	 There are two ways to get column master key. Either you can go to Azure Key 
Vault and create a key there or you can generate a key from the preceding 
shown window. In both the cases, the key will be visible in the list. You can 
click on OK once you generated a key.
	
5.	 Now, once you created new Column Master Key (CMK), you will need to 
encrypt Column Encryption Key (CEK) with this new CMK. A CMK protects 
one or more CEK. Each column encryption key has an encrypted value stored 
in the database, that is the product of encrypting the column encryption key 

648      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
with the column master key. In this step, we will see how to encrypt each of 
the column encryption keys with new column master key and store the new 
encrypted value in the database. As a result, each column encryption key 
that is affected by the rotation will have two encrypted values: one value 
encrypted with the existing column master key and a new value encrypted 
with the new column master key.
	
6.	 For this, go to the Security > Always Encrypted Keys > Column Master 
Keys folder and locate the old column master key which you are rotating:
Figure 11.32: Rotate columns master key
	
	
Right-click on column master key and click on Rotate.
	
7.	 It will open a new window. In the Column Master Key Rotation dialog, 
select the name of your new column master key that you created in Step 3 in 
the Target field:
Figure 11.33: Rotate existing column master key with new column master key

Configuring Security for Azure SQL Databases      649
	
	
It also shows the list of affected column encryption keys. You can currently 
see column encryption key has only one encrypted value since it is only 
encrypted by old CMK.
	
8.	 Once you rotate the CMK, you need to make your application aware of this. 
If CMK is stored in Azure Key Vault, you need to make sure your application 
has access to the key vault and can access key. If the certificate is stored in 
the current user certificate store location, the certificate needs to be imported 
into the current user store of the application’s Windows identity (user). 
If the certificate is stored in the local computer certificate store location, 
the application›s Windows identity must have permission to access the 
certificate.
	
9.	 In this step, we will clean up the column encryption value encrypted with old 
column master key. Once you have configured all your applications to use 
the new column master key, you can remove the values of column encryption 
keys that are encrypted with the old column master key from the database. 
Removing old values will ensure you are ready for the next rotation. Another 
reason to clean up the old value before archiving or removing the old column 
master key is performance-related: when querying an encrypted column, an 
Always Encrypted-enabled client driver might need to attempt to decrypt 
two values - the old value and the new one. The driver does not know which 
of the two column master keys is valid in the application’s environment. So, 
the driver will retrieve both encrypted values from the server. If decrypting 
one of the values fails as it is protected with the column master key that is 
not available (for example, the old column master key that has been removed 
from the store), the driver will attempt to decrypt another value using the 
new column master key.
	
10.	 For cleanup, go to Security > Always Encrypted Keys folder and locate the 
existing old column master key you want to replace:
Figure 11.34: Cleanup old column master key

650      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
Right-click on your existing column master key and select Cleanup.
	
11.	 In the next window, you can see that your column encryption key has been 
encrypted by multiple column master keys. One encrypted value is for old 
CMK and another for new CMK:
Figure 11.35: Select old column master key for cleanup
	
	
As shown in the preceding figure, bold value will be cleaned.
	
12.	 Now by this setup, you have created new CMK, associated your application 
with new CMK, encrypted CEK with new CMK and removed or cleaned up 
CEK encryption from old CMK. Now, you are all set to delete old CMK. The 
old CMK does not have any link with your environment. For this, go to the 
Security > Always Encrypted Keys > Column Master Keys folder and locate 
the old column master key to be removed from the database:
Figure 11.36: Delete old column master key
	
	
Right-click on the old column master key and select Delete.
	
	
In this section, you learned how to rotate column master key during periodic 
key rotation activity. In the next section, we will see the steps to rotate column 
encryption key.

Configuring Security for Azure SQL Databases      651
It is highly recommended that you do not permanently delete the old column 
master key after the rotation. Instead, you should keep the old column master key 
in its current key store or archive it in another secure place. If you restore your 
database from a backup file to a point in time before the new column master key 
was configured, you will need the old key to access the data.
Rotate column encryption key
In the previous section, you rotated column master key. You can rotate column 
encryption key as well. For rotating CEK, it is not necessary to rotate CMK. You can 
rotate CEK with old or existing CMK also.
CEK rotation has the same steps as you encrypt your database first time. While 
encrypting first time, you do not get the option to choose existing CEK or to create 
new CEK. But while rotating CEK, you get the option to choose existing CEK or to 
create new CEK. When you select option create new CEK, it means you choose CEK 
rotation:
	
1.	 Right-click your database, point to Tasks and then click Encrypt Columns to 
open the Always Encrypted wizard.
	
2.	 Review the Introduction page and then click Next.
	
3.	 On the Column Selection page, expand SalesLT.Address table, and select 
the City column to encrypt:
Figure 11.37: See current encryption state
	
	
In the preceding figure, you can see the City column is already showing 
encrypted with CEK_Auto1 encryption key and the encryption type is 
Deterministic.
	
4.	 Now to rotate CEK, click on the Encryption Key drop-down. You will see the 
option to select the CEK_Auto2 (New) key:

652      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 11.38: Select column encryption key
	
	
As shown in the preceding figure, you can change the encryption type also.
	
5.	 On the Master Key Configuration page, you can select existing master key 
from the drop-down. Since you are rotating existing CEK, you already have 
CMK also:
Figure 11.39: Select existing column master key while rotating column encryption key
	
6.	 On the Validation page, choose whether to run the script immediately or 
create a PowerShell script and then click Next:
Figure 11.40: Encryption process validation page

Configuring Security for Azure SQL Databases      653
	
7.	 On the Summary page, review the options you selected and then click Finish. 
Close the wizard when completed:
Figure 11.41: Encryption process summary result page
	
	
Validate the summary of configuration and click on Next. The next page will 
show the progress of process. It may take some time to encrypt columns 
depending on number of columns, rows and type of encryption.
	
8.	 Once the encryption process is complete, login to the SSMS and connect to 
the database. If you login with the user who has access on Azure Key Vault 
which is used to store master key, the encrypted column data will be shown 
as plain text. But, if a user does not have access on Azure Key Vault, the 
encrypted column data will be shown as encrypted value:
Figure 11.42: Encrypted column with new CEK value
As shown in the preceding figure, column City data is encrypted with new value. 
The preceding two sections complete the key rotation activity. It is recommended to 
rotate encryption keys at regular intervals.

654      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Enabling Azure Defender for Azure SQL 
Server
In Chapter 8, Monitor Security by Using Azure Security Center, you studied about 
Azure Defender in detail. You know how to enable that at subscription level and for 
any supported Azure Services. In the previous chapter, you studied how to enable 
Azure Defender for Azure Storage accounts. In this chapter, you will study how to 
enable Azure Defender for Azure SQL Servers. By enabling Azure Defender, you 
will activate many other security features for Azure SQL Servers like vulnerability 
assessment. Azure Defender gives you proactive insights about your security gaps 
and recommendations to remediate those gaps.
Although we studied in depth about how to enable Azure Defender in Chapter 8, 
Monitor Security by Using Azure Security Center and Chapter 10, Configure Security for 
Storage, in this chapter, let’s see the high-level steps to enable Azure Defender for 
Azure SQL Server:
	
1.	 Login to Azure portal and go to Azure Security Center.
	
2.	 In Azure Security Center, go to Pricing & Settings to enable Azure Defender 
on your subscription:
Figure 11.43: Enable Azure Defender for Azure SQL Database
	
	
As shown in the preceding figure, choose Azure Defender plan and toggle 
the On switch for Azure SQL Databases.

Configuring Security for Azure SQL Databases      655
	
3.	 Save the changes and it will enable Azure Defender for Azure SQL Databases 
in your subscription.
Once you have enabled Azure Defender for your databases, you can use extended 
features of Azure Defender on your Azure SQL Databases.
Configure Vulnerability Assessment
SQL vulnerability assessment can discover, track and help you remediate potential 
database vulnerabilities. Vulnerability assessment is also a part of the Azure Defender 
Security offering. Vulnerability assessment is a built-in scanning service to Azure SQL 
Database. It highlights deviations from best practices, such as misconfigurations, 
excessive permissions and unprotected sensitive data.
These rules are based on Microsoft’s best practices and focus on the security issues 
that present risks to your database. The rules cover database level issues and server 
level security issues, such as server firewall settings and server level permissions:
	
1.	 To run the SQL vulnerability assessment, go to the Azure SQL Server and 
then go to the Security Center option under Security. It will open a 
new window. Here, you can see current security center configuration and 
recommendations for this Azure SQL Server:
Figure 11.44: Recommendations for Azure Security Center and Azure Defender status for Azure 
SQL Database
	
2.	 Click on Configure. It will open Azure SQL Server level settings. You can 
enable Azure Defender from here also. Select the Azure subscription and 
Azure Storage account to store the vulnerability result.
	
	
You can also enable periodic vulnerability scan. This will scan your Azure 
SQL Databases every 7 days from the enabling day.
	
	
You can send the vulnerability report to any desired email address also. You 
can check the box to send report to subscription owners and admin without 
entering their email addresses:

656      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 11.45: Put configuration to enable vulnerability scan on Azure SQL Server
	
	
Save the configuration and it will enable the vulnerability scan for your 
Azure SQL Databases.
	
3.	 You can see the vulnerability scan result on the Security Center page of 
Azure SQL Server and Azure SQL Database under the Vulnerability 
Assessment Findings section.
	
4.	 Click on View additional findings in Vulnerability Assessment to see 
more details about the vulnerabilities and to start on demand scan:

Configuring Security for Azure SQL Databases      657
Figure 11.46: See current vulnerability scan report and start on demand vulnerability scan
	
	
The preceding figure shows that there is no vulnerability scan data available 
as of now. Click on the Scan button to start on demand vulnerability scan.
	
5.	 Once you start the scan, it will take some time to complete the scan on this 
database and show the result:
Figure 11.47: Result of vulnerability scan
	
	
As shown in the preceding figure, you can see the current vulnerabilities 
with severity for your Azure SQL Database, export the vulnerability scan 
result and see the scan history. You can click on any of the finding to see more 
details about that vulnerability.

658      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
In this section, we learned the process to enable and configure vulnerability scan for 
our Azure SQL Data Servers. Vulnerability management is a very important aspect 
of cybersecurity.
Configure advance threat protection
Advanced threat protection works for Azure SQL Database, Azure SQL Managed 
Instance and Azure Synapse. It detects anomalous activities indicating unusual 
and potentially harmful attempts to access or exploit databases. Advanced threat 
protection is a part of the advanced data security offering.
With advanced threat protection, you get a new layer of security, which enables you 
to detect and respond to potential threats as they occur by providing security alerts 
on anomalous activities. You can select instances for which you want to generate 
alerts. The following is the list of instances:
	
•	
SQL Injection
	
•	
SQL Injection Vulnerability
	
•	
Data Exfiltration
	
•	
Unsafe Action
	
•	
Brute Force
	
•	
Anomalous Client Login
You can enable audit logs for a full investigation experience. It writes database 
events to an audit log in your Azure storage account. You can give the email ID of 
the admin whom you want to send the ATP alert:
	
1.	 To configure the ATP alert, go to the Azure SQL Server and then go to the 
Security Center option under Security. It will open a new window as shown 
in the Figure 11.44. Here, you can see current security center configuration 
and recommendations for this Azure SQL server.
	
2.	 Click on Configure. It will open Azure SQL Server level settings as shown in 
the Figure 11.45.
	
3.	 Scroll down the Security Center page and you will see an Advance Threat 
Protection Settings section. Click on Add your contact details to the 
subscription’s email settings in Azure Security Center.
	
4.	 Once you click on Add your contact details to the subscription’s 
email settings in Azure Security Center, it will open a new window to 
fill details to configure advance threat protection:

Configuring Security for Azure SQL Databases      659
Figure 11.48: Configure ATP for Azure SQL Server
	
	
The preceding figure is to configure email notification for Azure threat 
protection. Azure Security Center sends email notification when it detects 
any threat.
	
	
For email notification, you can select user rules from the drop-down and 
enter email addresses also. All the users aligned with that particular rule 
will get the email notification and you need not put their email addresses 
separately.
	
	
In the Notification types field, you can select the alert severity for  which 
you want to get the email notifications.
In this section, we studied about Advance Threat Protection (ATP). We saw the 
advantages and uses of ATP. Now, you can decide when and how to configure ATP 
in your environment.
Data discovery and classification
Data discovery and classification works for Azure SQL Database, Azure SQL 
Managed Instance and Azure Synapse. Data discovery and classification helps you in 
discovering, classifying, labeling and reporting the sensitive data in your databases.

660      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
For most of the organizations, the sensitive data might include business, financial, 
healthcare or personal information. Discovering and classifying this data can play an 
important role in your organization’s information-protection approach. By setting 
up a data discovery and classification process, you can:
	
•	
Try to meet standards for data privacy and requirements for regulatory 
compliance.
	
•	
Plan and setup various security scenarios such as monitoring and alerting on 
anomalous access to sensitive data.
	
•	
Control access security of databases that contain highly sensitive data.
Data discovery and classification forms a new information-protection paradigm for 
SQL Database, SQL Managed Instance and Azure Synapse, aimed at protecting the 
data and not just the database. The paradigm includes:
	
•	
Discovery and recommendations: The data classification engine scans your 
database and identifies columns that contain potentially sensitive data. Then, 
you can apply recommended classification via the Azure portal.
	
•	
Labeling: Labeling can be used to define the sensitivity of your data. You can 
apply sensitivity-classification labels persistently to columns.
	
•	
Query result-set sensitivity: The sensitivity of a query result set is calculated 
in real time for auditing purposes.
	
•	
Visibility: It also provides a detailed dashboard to show the database-
classification state in the Azure portal. This report can be downloaded in 
Excel format.
Discover, classify, and label sensitive columns
In this section, we will see how to setup discovery, classify and label the columns that 
contain sensitive data. When we setup the classification, it includes two attributes:
	
•	
Labels: This attribute is used to define the sensitivity level of the data stored 
in the column.
	
•	
Information types: This attribute provides more granular information about 
the type of data stored in the column.
Now, while setting up data discovery and classification, you need to decide what 
kind of data is sensitive for you and what is the level of sensitivity. Data discovery and 
classification has some built-in set of sensitivity labels and built-in set of information 
types with discovery logic/patterns. You can customize these labels.

Configuring Security for Azure SQL Databases      661
As a part of your security policy, you can define and customize your classification 
taxonomy in Azure Security Center for your entire Azure organization. After the 
organization-wide policy has been defined, you can continue classifying individual 
databases by using your customized policy:
	
1.	 To classify your data, go to Azure portal and to the SQL server. Here, go to 
the SQL database.
	
2.	 Go to Advance data security under the Security section. Select the Data 
Discovery & Classification card.
	
3.	 On the Overview page, you will see the number of classified columns and 
number of tables containing sensitive data:
Figure 11.49: Data classification dashboard in Azure SQL
	
4.	 On the Overview page, you can see a Configure gear to manage existing labels 
and information types. You can click on this to see existing labels for data 
classification. Also, you can create new labels from here:

662      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 11.50: Default data classification labels
	
	
The preceding figure shows the default labels. You can also see the state and 
description of the labels. You can modify them by selecting them.
	
	
On the same page, you can see another option to Manage information types. 
This option helps you to define information type for your data. For example, 
the data can be contact number, SSN, financial, credentials or some personal 
details. So, to classify the data and to apply the correct label, you need to 
identify the type of information. When you click on this option, it will show 
you the existing information types:
Figure 11.51: Available information types to assign on labels

Configuring Security for Azure SQL Databases      663
	
	
You can update the existing information types by selecting them. When you 
want to update them, you get the following options:
Figure 11.52: Update existing information types
	
	
You can see the name, description and the name of the label to which this is 
associated. You can change the label association from the drop-down. In the 
Pattern column, you can see the pattern of data for which this information 
type can be applied. If Azure detects such pattern in any data, it relates that 
data to this information type. For example. if Azure detects %savings%acc% in 
data, then Azure will consider that data as a banking data. The next column 
shows whether the data can have numeric value or not.
	
	
While modifying information type, if you want to remove any predefined 
pattern, you can delete it by clicking on X. Also, you can add your own 
pattern.

664      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
You can create your own new information type also. To create new information 
type, click on + Create information type:
Figure 11.53: Create new information types
	
	
When you click on that option, you see a new blade to provide the details 
about new information type. After giving the name and description, you can 
associate it to a label now or later. In the Pattern box, you need to define 
what kind of data pattern is covered under this information type. I just said 
that any data that has %balance%sheet% in it, can be considered as new finance 
info type information.
	
	
The next check box following Allow numeric shows that %balance%sheet% 
pattern can have some numeric values in its string name. Click on OK to create 
this. You can find this information type in the list of available information 
types.

Configuring Security for Azure SQL Databases      665
	
	
Now, click on + Create label to create new custom label for data classification:
Figure 11.54: Create a custom label
	
	
Once you click for new label creation, it opens a new blade where you can 
fill the details about new label. The required details are very simple. You just 
need to set the state, ON or OFF, name of the label and a brief description.
	
	
Now, you can apply this label manually or Azure can help you to apply this 
automatically. To apply this label automatically, you need to configure for 
which kind of information you want to apply this label. Click on Associate 
an information type to define the information type. You can select the 
information type from the list which you created previously.
	
	
I am choosing the information type which we create previously. If you choose 
the existing information type which is already associated to a label, it will 
break the existing association and will create a new association. Click on Add 
and save the changes:

666      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Figure 11.55: Updated list of available information types
	
	
This process completes the configuration of new label and information type.
	
	
After configuring labels and information types, you can move to the 
Classification tab. In this tab, you can setup classification for your SQL 
data. Based on the data and schema, Azure also provides recommendations 
for data classification:

Configuring Security for Azure SQL Databases      667
Figure 11.56: Data classification suggestions from Azure
	
	
The preceding figure shows the recommendations from Azure with respect 
to tables and then for columns. It indicates the column has what kind of 
information type and what should be the sensitivity label for that information 
type. You can select the recommendation or create a new.
	
	
To create a new classification, click on + Add classification:
 
Figure 11.57: Add classification for Azure SQL Database

668      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
	
	
As shown in the preceding figure, you can select the required fields and add 
a new classification.
In this section, we learned in deep about data classification for Azure Database. We 
saw detailed steps to classify data, create new information types and apply labels 
accordingly. Now, you understand the concept of data classification and labeling 
and can implement this in your environment.
Dynamic Data Masking (DDM)
You can apply this on Azure SQL Database, Azure SQL Managed Instance and 
Azure Synapse Analytics. You can limit the exposure of sensitive data by masking it 
for non-privileged users.
Dynamic data masking prevents unauthorized access to sensitive data. It helps you 
to designate how much of the sensitive data to reveal with minimal impact on the 
application layer. It’s a policy-based security feature. So, it hides the sensitive data 
in the result of the query over designated database fields. But it does not change the 
data in the database.
For example, a call center executive at a call center may identify callers by several 
digits of their credit card number. But those data items should not be fully exposed 
to the executive. A masking rule can be defined to mask all but the last four digits of 
any credit card number in the result set of any query.
To configure dynamic data masking, you should have any of these roles - Azure SQL 
Database admin, server admin or SQL Security Manager roles:
	
•	
SQL users excluded from masking: You can exclude certain users from 
masking. Administrators are always excluded from masking. They can see 
the original data without any mask.
	
•	
Masking rules: These are a set of rules that define the designated fields to be 
masked and the masking function that is used. The designated fields can be 
defined using a database schema name, table name and column name.
	
•	
Masking functions: These are a set of methods that control the exposure of 
data for different scenarios.

Configuring Security for Azure SQL Databases      669
The following table shows the different scenarios and respective masking logics:
Masking 
function
Masking logic
Default
Full masking according to the data types of the designated fields:
•  Use XXXX or fewer Xs if the size of the field is less than four characters 
for string data types. 
•  Use a zero value for numeric data types.
•  Use 01-01-1900 for date/time data types.
Credit card
This masking method exposes the last four digits of the designated field 
and adds a constant string as a prefix in the form of a credit card:
XXXX-XXXX-XXXX-1234
Email
This masking method exposes the first letter and replaces the domain 
with XXXX.com.
jxx@xxxx.com
Random 
number
This masking method generates a random number according to the 
selected boundaries and actual data types. If the designated boundaries 
are equal, then the masking function is a constant number:
Custom text
This masking method exposes the first and last characters and adds a 
custom padding string in the middle. If the original string is shorter than 
the exposed prefix and suffix, only the padding string is used:
prefix[padding]suffix
Table 11.1: Data masking logics
The preceding table is taken from Microsoft document to understand official 
scenarios.

670      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Configure Dynamic Data Masking (DDM) for a 
Database
Let’s follow these steps to configure dynamic data masking for your database:
	
1.	 Login to Azure portal and go to Azure SQL Database on which you want to 
enable DDM.
	
2.	 On Azure SQL Database, go to Dynamic Data Masking under the Security 
section. On DDM dashboard, you can see some masking recommendations 
provided by Azure. Azure flags certain fields from your database as 
potentially sensitive fields. You can consider them for masking. In the 
Dynamic Data Masking blade in the portal, you will see the recommended 
columns for your database.
	
3.	 To enable masking for recommended columns, you just need to click Add 
mask and then Save to apply a mask for these fields:
 
Figure 11.58: Dynamic Data masking dashboard
	
4.	 To add a custom mask, click on + Add mask on the top of the page. It will 
open a new blade to take the inputs:

Configuring Security for Azure SQL Databases      671
Figure 11.59: Add custom data masking rule
	
5.	 As shown in the preceding figure, you can select the values of the Schema, 
Table and Column field to define which data you want to mask. In the Masking 
field format, you select how the masked data will be visible to query runner. 
So, for the preceding example, if the original email address is jayantsharma@
demo.com then the query result will show it as jxxx@xxx.com.
	
6.	 In this way, you can mask the sensitive information.
You can follow these steps to apply different types of masks on your other databases 
also.
Conclusion
In this chapter, you learned security best practices for Azure SQL Database. After 
this chapter, now you can analyze the gap between current security setup and 
recommended setup. You can now plan correct and required security features 
for your Azure SQL Database. You also learned how to manage different types of 
authentications for Azure SQL servers including Azure AD authentication.
You also learned about data masking, data classification, data encryption at rest and 
in transit for Azure SQL Database.

672      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Multiple Choice Questions
	 1.	 Which service will you use in Azure SQL Database for data at rest encryption?
	
A.	Azure Disk Encryption
	
B.	 Azure Storage Encryption
	
C.	 Transparent Data Encryption
	
D.	Transport Layer Security
	
Answer: C
	 2.	 Which Azure service alerts will you use for suspicious activities such as SQL 
injection, potential data infiltration and brute force attacks or for anomalies in 
access patterns?
	
A.	Azure Advance Threat Protection
	
B.	 Azure Audit logs
	
C.	 Azure Transport Layer Protection
	
D.	Azure Transparent Data Encryption
	
Answer: A
	 3.	 Dynamic data masking can be used for _____________.
	
A.	Encryption of data
	
B.	 To limit exposure of sensitive data
	
C.	 Limit unauthorized access
	
D.	Access data dynamically
	
Answer: B
	 4.	 Which feature will you use in Azure SQL to see the activities at database level?
	
A.	Activity logs from Azure portal	
B.	 Data classification
	
C.	 SQL always encryption	
D.	Azure audit logs
	
Answer: D
	 5.	 What do you understand by a contained user?
	
A.	A user sign in created at database level which does not need login created 
in master database
	
B.	 A user account created while creating Azure SQL Server
	
Answer: A

Symbols
256-bit AES encryption  557
A
access control, through condition
ABAC, adding on blob  592
access management, Azure SQL Database
authentication  615
access review
configuring  88-93
account permission
setting up, for Azure AD Connect  60, 61
Active Directory Federation (AD FS)  31
active logs alerts
creating, in Azure Monitor  438
activity logs  402
activity logs, Azure Monitor
alert, creating  438-440
viewing  438
adaptive application control 464
enabling  464-468
adaptive network hardening 468
configuring  468-471
viewing  468
administrator roles  121
advance threat protection
configuring, for Azure SQL protection  
658, 659
enabling, on Azure Storage  605, 606
AFD service  227
backend host, adding  236
backend pool  230
building blocks  229
concepts  229
Index
creating  234
features  227-229
frontend host  230
frontend host, creating  235
routing rules  232
routing rules, creating  237
AKS cluster
authentication, configuring  394
cluster isolation  394-396
security best practices  396
alert generation rules, Azure Sentinel
fusion rule  516
machine learning behavioral analytics 
rule  516
Microsoft incident creation rule  516
scheduled analytics rule  515
alerts
managing  88
alerts, Azure Sentinel
creating, from built-in Microsoft security 
analytics rules  525-529
creating, from built-in scheduled analyt­
ics rules  516-525
alerts, in Azure
activity logs alert  424
application availability alert  424
log alerts  424
metric alert  423
security alert  424
types  423
Always Encryption
column encryption key, rotating  651-653
column master key, rotating  645-650
deterministic encryption  639
implementing  640-645

674      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
prerequisites  640
randomized encryption  639
workflow  638, 639
working with  640
application availability alert
application insights, setting up  424-426
availability test, setting up  426, 427
setting up  424
setting up, for URL ping test 
failure  428-431
application gateway
building blocks  209
configuring, for app service  221-224
configuring, for app service security  205
configuring, for multiple sites  216-220
configuring, with WAF  224, 225
deploying, for hosting single site  211-216
deploying, with WAF  227
features  205
request, accepting  207, 208
request, routing  208
traffic flow  207
Application Gateway Ingress Controller 
(AGIC)  206
application ID URI  69
application permission  70
applications account types
multi-tenant  66
multi-tenant with personal Microsoft 
accounts  66
single tenant  66
Application Security Group (ASG)  192
app registration
application account types  66
application object  65
creating  65
permission scopes configuration  69
required access level  66, 67
service principal object  65
through Azure portal  67, 68
attribute based access control (ABAC)
adding, on blob  592-597
auditing on Azure SQL
audit logs, viewing  632
audit logs, viewing in Azure 
portal  632-634
audit logs, viewing in Azure 
Storage  634, 635
database level auditing, enabling  630, 631
Microsoft support operations, 
auditing  629, 630
server level auditing, enabling  628, 629
authentication methods
Active Directory Federation (AD FS)  31
configuring  30
Pass-through Authentication (PTA)  31
Password Hash Authentication (PHA)  
31
selecting  32
types  31
authentication methods, Azure Container 
Registry
configuring  372
individual login, with Azure AD 
identity  372, 373
login, through managed identity  374
login, with ACR local admin  374
login, with AKS service  374
login, with Azure AD service principal  373
authentication processes, Azure SQL 
Database
Azure Active Directory authentication  
621, 622
SQL authentication method  619-621
automation account
creating  289, 290
Azure Account Center  3
URL  141
Azure Active Directory authentication
configuring  622
configuring, for Azure SQL 
Database  623, 624
configuring, for Azure SQL Managed 
Instance  624, 625
Azure Active Directory Identity 
Protection  5
Azure AD  1
activating, in PIM  98, 99
app registration, creating  65
authentication methods, configuring  30
company brand, adding  13
custom domain, adding  10-13
group management  27
groups, types  21

Index      675
key features  8
licenses  4
overview  2
passwordless authentication options  62
Privileged Identity Management (PIM)  74
Self Service Password Reset, enabling  58
tenant, creating  9, 10
user accounts, types  20
user management  21
users and groups, managing  20
versions  4
Azure AD administrator roles  142
Azure AD architecture  5
Azure AD service architecture design  6
continuous availability  7
datacenters  8
scalability  7
secondary replicas  6
Azure AD authorization
access control, through condition  592
anonymous access, enabling on contain­
ers and blobs  589-591
Azure AD integration, for Blobs and 
queues  570, 571
RBAC roles, assigning for access 
control  571-573
storage account access, granting through 
SAS  578
storage account access key, managing 
manually  577
storage account access key, viewing  576, 577
storage account access, managing 
through 
managed identity  574, 575
storage account access, managing 
through 
shared key  575
Azure AD Cloud  33
Azure AD components
account  3
Account administrator  3
Azure AD account  3
Azure AD directory  3
Azure AD global administrator  3
Azure subscription  3
Azure tenant  3
custom domain  4
identity  4
Microsoft account  4
multi-tenant  4
owner  4
service administrator  4
single tenant  4
Azure AD conditional access  110
terms of use, setting up  123-125
VPN connectivity  125
Azure AD Connect  31
account permission, setting up  60, 61
configuring, for password 
writeback  61, 62
features  56, 57
installing for federation, with AD 
FS  46-55
installing, with Pass-through 
authentication  40-46
installing, with Password Hash 
Synchronization  35-40
password writeback, setting up 
through  57
prerequisites  33
topologies  55
Azure AD Connect server  34
Azure AD DS authentication
Azure AD DS, creating  608, 609
configuring, for file share  607-610
file share, mounting from domain joined 
VM  610
NTFS permission, configuring over SMB 
share  610, 611
permission, assigning to identity  610
Azure AD Identity Protection  126
dashboard  126
risk types  128
security overview  126
simulate risk detection  130
Azure AD Identity Protection policies  131
MFA registration policy  132
sign-in risk policy  134, 135
user risk policy  133
Azure AD replication process  6
primary replica  6
Azure AD roles
access review, configuring  88-93
alerts, managing  88

676      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
assigning  82-87
assignments, reviewing  87
managing  82
PIM, administrating for  93, 94
Azure AD threat intelligence risk 
detection  130
Azure Application Security Group 
(ASG)  204, 205
Azure App Service  221
Azure private endpoint connection, 
setting up  339, 340
configuring, for using Microsoft 
account  333-335
restricted network access  337-339
security parameters, deploying  332
SSL/TLS certificate, adding  335, 336
virtual network integration  340, 341
Azure automation  289
configuration management  289
process automation  289
update management  289
Azure Bastion  262
architecture  263
configuring  264, 265
features  263, 264
remote access management  262, 263
Azure Blueprint  160
artifacts  161
assignment  162
core components  161
definition  161
parameters  161
publishing  162
security settings, configuring  162-170
terminology  161
Azure Container Instances
benefits  358
building blocks  360
concepts  360
container group  360
deploying  365-368
features  358-364
isolation modes  368
network planning  364
overview  358
security best practices  361
unsupported networking features  365
Azure Container Registry
authentication, configuring  372
best practices  377
content trust, enabling  389, 390
creating  370-372
data protection, securing  384
diagnostic logs  390
diagnostics settings dashboard  392
features  369, 370
geo replication, setting up  374-376
monitoring, enabling  390, 391
overview  369
secure network connectivity features  380
security best practices  377
vulnerability scan  390
Azure Defender
enabling, for Azure Key Vault  324
enabling, for Azure SQL Server  654, 655
enabling, for Azure Storage  605
features  464
for IoT devices  486
Azure Disk Encryption, for VMs
disabling  331, 332
enabling, on new data disk  329-331
for existing VM  327
for existing Windows servers  327-329
Key Vault, preparing  326
unsupported scenarios  325, 326
Azure Firewall  238
creating  239-241
features  238, 239
public IP, configuring  245
user defined route, creating  241-244
Azure Firewall Manager
Azure Firewall Policies  261
features  259, 260
managing  260
overview  259
Security Partner Providers  261
virtual hubs  260
virtual networks  260
Azure Firewall policy
components  245, 246
connecting, with VNet and hubs  248, 
249
creating  245-247

Index      677
creating, from Azure Firewall 
Manager  247
custom DNS and DNS proxy, 
enabling  255, 256
from Azure portal  247
IDPS mode, enabling  258, 259
managing  249
threat intelligence, enabling  256, 257
TLS inspection, enabling  257, 258
with application rule collection  253-255
with DNAT rule collections  249-251
with network rule collection  251-253
Azure Key Vault  296, 297
alerts, configuring  313-318
certificates  303
creating  297, 298
deleted keys, managing  300
firewall, setting up  269, 270
keys, generating  298, 299
keys, importing  299
keys, restoring from backup  299, 300
logging  318
logging, configuring  318, 319
logs, accessing  320
managing  298
metrics, for monitoring  311
overview  311
recovery options  321
secrets  301
security best practices  306
Azure Kubernetes Service (AKS)  206
Azure logs
activity logs  402
performance/platform matrices  402
resource logs  402
types  402
Azure MFA
authentication methods  100
bulk MFA update  103
disabling  102
enabling  102
OATH tokens  108
prerequisites  101
settings, configuring  103-110
use cases  100
versions  101
Azure Monitor  414
active logs alerts, creating  438
data sources, monitoring  415, 416
enabling, for virtual machine  421, 422
examples  414
insights features  416, 417
Log Analytics workspace, connecting 
to  420, 421
overview  414, 415
Azure Monitor, for virtual machine  417
Log Analytics workspace, 
configuring  418
logs collection, configuring  418-420
mapping  423
performance charts  422
virtual machine, connecting to 
workspace  418
Azure network gateway connection
creating  186-191
Azure NSGs
Access control (IAM)  199
Activity log  198
associating, to network interfaces  202, 203
associating, to subnets  203, 204
configuring  198-201
creating  197
dissociating, from network interfaces  
203
dissociating, to subnets  204
inbound security rules  199, 200
managing  201
network interfaces  200, 201
outbound security rules  200
overview  198
security rules, modifying  201, 202
subnets  201
traffic flow  194, 195
Azure PaaS services
list  450, 451
Azure Policy  154
assigning, from portal  155-160
effects  154, 155
Azure Private Link  380
configuring, for container registry  380
Azure RBAC roles  142
Azure Resource Firewall  267
Azure Key Vault  269, 270
Azure PaaS SQL  267, 268

678      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
Azure storage account  268, 269
Azure resource lock  152
applying  152, 153
removing  152, 153
Azure resource roles
access review, managing  98
activating, in PIM  98, 99
alerts, managing  98
assigning, in PIM  95-97
assignments, managing  97
managing  95
Azure resources
PIM, administrating for  95
PIM, managing for  94
Azure roles
account administrator role  141
classic subscription administrator role  141
co-administrator role  141
service administrator role  141
Azure Security Center  281-446
auto provisioning option, enabling  456
Azure Defender  451
basic model  451
configuring  451
coverage  459
data collection  457
features  447-454
file integrity monitoring  471, 472
for Azure PaaS services  450, 451
for Azure resources  449
inventory section  462, 463
network map  485, 486
overview  454, 455
Pricing and Settings  455
recommendations  462
secure score  459-461
security challenges, addressing  446, 447
security policies  486
security solutions  463
supported features, for virtual machine  
449, 450
threat detection, enabling  458
upgrading, to Azure Defender  452-454
workflow automation  490
Azure Sentinel
analytics  515, 516
creating  506
data source, configuring  505-508
features  502, 503
overview  502, 513-515
preview features  548
terminologies  504
threat hunting  545
threat incidents  529-532
threat incidents, investigating  532-537
User and Entity Behavior Analytics 
(UEBA)  546
User and Entity Behavior Analytics 
(UEBA), enabling  547, 548
workflow automation  538, 539
Azure service endpoint  266
Azure SQL Database
Always Encryption, implementing  638
auditing, enabling  628
authentication processes  619
Azure AD authentication, 
configuring  623, 624
data discovery and classification  659, 660
dynamic data masking, 
configuring  670, 671
security best practices  617
security layers  614
Azure SQL Managed Instance
Azure AD authentication, 
configuring  624
other users, adding  625-627
Azure Storage
access control  569
advance threat protection, enabling  605, 
606
authorizing  569, 570
network security  598
security recommendation  554
Azure Storage service encryption
configuring  557, 558
data at rest encryption  558
data in transit encryption  561
encryption scope  563
Azure subscription
about  16, 17
associating, to directory  18
creating  17
transferring, between Azure AD 
tenants  18, 19

Index      679
Azure Virtual Network (VNet)  174
basic definitions  175
connectivity scenarios  176
connectivity, through IPsec/IKE 
tunnel  183
containers, deploying  364
creating  177
fundamental concepts  175
gateway creating  183-186
peering, between same and different 
subscription  176, 177
service endpoint, configuring  266
service tags  193, 194 
setting up  176
shielding, with DDoS protection  261, 262
Azure VNet to on-premises network con­
nection  188, 189
B
backend pool, AFD
sub-components  230-232
backend pools, types  208
backup protection  9
building blocks, application gateway
backend pools  211
custom error pages  209
frontend IP address  209
health probes  211
HTTP settings  210
listeners  209
redirection support  210
request routing rules  210
rewrite HTTP headers  210
built-in RBAC roles
access, removing from resource  146, 147
assigned access, checking  145, 146
assigning  145
Business-to-Customer (B2C)  5
C
certificates, Azure Key Vault  303, 304
generating  304-306
classic administrator roles
assigning  142
column encryption key  639
column master key  639
combined registration experience, 
enabling  63
combined security information 
registration  101
company administrator  3
company brand
adding  13
sign-in page, customizing  13
components, Azure Firewall policy
DNS proxy  245
DNS settings  245
DPS bypass list  246
IDPS support  246
Network Address Translation (NAT) rule 
collections  246
parent policy  246
rule collection type  246
Threat Intelligence  246
TLS inspection  246
components, RBAC
role definition  143
scope  144
security principal  143
conditional access, Azure AD  110
available conditions  112-114
components, building for policy  111, 112
location condition  117-121
policies  111
report only mode  114
service dependencies  116, 117
setting up, for enforcing MFA for 
administrators  121-123
What If tool  115, 116
connection test
performing, after hybrid 
connection  352, 353
performing, from app service to target 
server  348
consumer account user  20
container group  360
content trust
enabling, in container registry  389, 390
continuous availability  7
custom alerts
creating, from Azure Monitor  440, 441
creating, from Log Analytics 
workspace  442

680      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
custom DNS and DNS proxy
enabling, in Azure Firewall policy  255, 256
custom domain
adding  10-13
custom RBAC role
creating, through JSON  147-152
D
dashboard, Azure AD Identity Protection
high risk users  127
Identity Secure Score  127
Legacy authentication  127
medium risk users  127
new risky sign-ins detected  127
new risky users detected  127
unprotected risky sign-ins  127
data at rest encryption, Azure Storage
customer-managed keys, using with 
Azure Key Vault  559-561
infrastructure encryption, 
enabling  558, 559
data at transit encryption, Azure 
Storage  561
enabling  562, 563
database encryption
implementing  635
Transparent Data Encryption 
(TDE)  635, 636
Database Encryption Key (DEK)  635
datacenters  8
data consistency  8
data discovery and classification, Azure 
SQL Database  659, 660
setting up  660-668
data protection, Azure SQL Database
dynamic data masking  616
encryption at rest  616
encryption in transit  616
encryption in use  616
data protection, in container registry
Azure Key Vault, creating  386, 387
container registry, creating, with encryp­
tion  387, 388
encryption  384
managed identity, creating  385
securing  384
data source, configuring to Azure Sentinel
collected data, monitoring  508-512
external solutions via agents  506
external solutions via API  506
service-to-service integration  505
DDoS attacks
protocol attacks  261
resource (application) layer attacks  261
volumatic attacks  261
delegated permissions  69
deterministic encryption  639
diagnostic logging
collection, enabling for container 
registry  392
configuring  403
configuring, from Azure Monitor  409-411
configuring, from resource menu  404-409
destination, selecting  403
settings, configuring in Azure portal  404
DigiCert  303
Docker Registry 2.0  369
Dynamic Data Masking (DDM)
configuring  668
configuring, for Azure SQL 
Database  670, 671
scenarios and masking logics  669
E
early-bound policy enforcement  116
encryption scope, Azure Storage  563
applying  564-567
BLOB, uploading  568
creating  564, 565
editing  566
example  564
EnforceOPAConstraint  154
EnforceRegoPolicy  154
F
features, application gateway
autoscaling  206
connection draining  207
custom error pages  207
ingress controller for AKS  206
multiple-site hosting  206
session affinity  206, 207

Index      681
SSL/TLS termination  205, 206
Static VIP  206
URL-based routing  206
WAF  206
zone redundancy  206
file integrity monitoring
dashboard  474, 475
enabling  472-474
in Azure Security Center  471, 472
new monitoring parameter, adding  475, 476
G
gateway-required virtual network 
integration  341
configuring  344-346
creating  344
limitations  344
geo replication
setting up  374-376
global administrator  3, 21
GlobalSign  303
group management  27
assigned group creation  28
dynamic group creation  29
groups expiration policy, setting  29, 30
naming convention policy, setting up  30
groups, types
Office 365  21
security  21
guest users  20
H
hunting dashboard, Azure Sentinel  545
bookmark tab  546
livestream tab  546
+ new query tab  546
hybrid connections
adding  349
benefits  347
configuring  347-351
creating  349
limitations  348
workflow  347
Hyper-V isolation mode  368, 369
I
IdFix  33
IDPS mode
enabling, in Azure Firewall policy  258, 259
internal load balancer (ILB) endpoint  211
Internet routing preference  604
isolation modes, Azure Container Instances
Hyper-V isolation  368, 369
process isolation  368
J
JIT access
configuring, in Azure Security Center  
477-479
managing, through Azure Security Cen­
ter  476
overview  476
requesting  479-481
revoking  481
Just-in-Time (JIT) access  74
K
key features, Azure AD
backup protection  9
data consistency  8
metrics  9
monitors  9
Key Vault logs
accessing  320
interpreting  321
Kubernetes  394
Kusto Query Language (KQL)  440
L
late-bound policy enforcement  117
leaked credentials risk detection  129
licenses, Azure AD
Azure AD Free  4
Azure AD Premium P1  5
Azure AD Premium P2  5
Pay as you go feature licenses  5
listeners, application gateway
basic  209
multi-site  209

682      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
local network gateway
creating  189, 190
location-based conditional access policy
setting up  117-121
Log Analytics workspace  287
creating  287, 288
virtual machines, attaching  288
log retention management  411
log collection quantity, controlling  412-414
retention period, controlling  411, 412
M
managed identity 121
system-assigned managed identity  385
user-assigned managed identity  385
metaclasses. See Python metaclasses
metric alerts
dynamic condition type  433
managing  437
reviewing  436
rules  431
setting up  433-436
static condition type  432
working  432
metrics  9
metrics, Azure Key Vault
configuring  312, 313
error codes  312
Service API latency  312
Total API hits  312
Vault availability  311
Vault saturation  311
MFA registration policy  132
Microsoft Antimalware Client and 
Service  276, 277
Microsoft Authenticator App  62
Microsoft Endpoint Protection  274
architecture  276, 277
detection/remediation  275
enabling  277
enabling, on running virtual machine  
280, 281
enabling, while creating virtual 
machine  278, 279
features  275, 276
monitoring, on running virtual 
machine  281, 282
real-time protection  275
scanning options  275
Microsoft global network  604
Microsoft Graph API service  8
Microsoft Identity Manager  5
MITRE ATT&CK
reference link  505
monitoring data sources
application code  415
Azure resources  415
Azure subscription  415
Azure tenant  415
custom sources  416
guest operating system  415
monitors  9
multi-factor authentication (MFA). 
See Azure MFA
N
native users  20
networking  174
network interfaces (NIC)  201
network planning, for Azure Container 
Instances  364
network routing preference, for Azure 
Storage
configuring  604, 605
routing, over Public Internet (ISP 
network)  604
routing, via Microsoft global 
network  603, 604
network security, Azure SQL Database
IP firewall rules  615
virtual network firewall rules  615
network security, for Azure Storage  598
routing preference  603
storage account access, configuring from 
selected network  598-601
storage account access, through private 
endpoint  601-603
Network Security Group (NSG)  192
network security rule, components  192
security rules  192, 193
network security rule
components  192, 193
NSG rules, for incoming traffic
VM1  195

Index      683
VM2  195
VM3  195
VM4  195
NSG rules, for outbound traffic
VM1  196
VM2  196
VM3  196
VM4  196
NTFS permission
configuring, over SMB share  611
O
OAuth 2.0  69, 570
offline detection types
admin confirmed user compromised  129
Atypical travel  129
malicious IP address  129
malware linked IP address  129
on-premises AD  33
on-premises VPN device
configuring  191, 192
OpenID  69
P
PaaS SQL
firewall, setting up  267, 268
passing parameters  83
Pass-through Authentication (PTA)  31
Password Hash Authentication (PHA)  31
passwordless authentication  62, 100
passwordless authentication methods
enabling  63, 64
password writeback
enabling, in Azure AD Connect  61, 62
password writeback setup
prerequisites  57
through Azure AD Connect  57
performance/platform matrices  402
periodic review  88
permissions, types
application permission  70
delegated permission  69
platform level of encryption  557
Point of Presence (POP)  603
prerequisites, MFA
cloud-only identity environment  101
hybrid identity environment  101
on-premise legacy applications 
published for cloud access  102
RADIUS authentication  102
preview feature, Azure Sentinel
solutions  549
threat intelligence  548, 549
watchlist  549, 550
private endpoint connection  601
Privileged Identity Management (PIM)  74
administrating, for Azure AD roles  93, 94
administrating, for Azure resources  95
benefits  75
configuring  79-82
managing, for Azure AD roles  82
managing, for Azure resources  94
planning  76
security best practices  77-79
setting up, for organization  76
terminology  75
process isolation mode  368
R
randomized encryption  639
RBAC roles
for controlling user access  140
types  144
read-only domain controller (RODC)  33
read-write consistency  8
recovery options, Azure Key Vault
backup  321, 322
Key Vault, recovering  323, 324
soft delete, enabling  322
soft delete protected Key Vault, 
deleting  323
turning on  321
regional virtual network integration  341
configuring  343
remote access management
through Azure Bastion  262, 263
report only mode, Azure AD conditional 
access
reoprt-only:failure  114
reoprt-only:not applied  115
reoprt-only:success  114
reoprt-only:user action required  114

684      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
required access level, app registration  66, 67
resource logs  402
risk types, Azure Identity Protection
offline detection type  129
real-time detection types  128
sign in risk  128
user risk  129
risky users report  127
role-based access control (RBAC  140
components, building  143
contributor access  140
owner access  140
reader access  140
rules  140
working  143
role definition
structure  143, 144
routing rules, AFD  232
left-hand-side configuration  232
right-hand-side configuration  232- 234
routing rules, application gateway
basic  210
path-based  210
S
SAS token  579
scalability  7
scopes  69
secrets, Azure Key Vault
deleted secrets, managing  303
generating  301
restoring, from backup  302
value, checking  301, 302
secure network connectivity features, con­
tainer registry
container registry, connecting through 
private link  380-383
registry, accessing from selected public 
network  383, 384
Secure Sockets Layer (SSL)  212
security
configuring, for types of containers  393
security best practices, AKS cluster
data protection  398
identity and access management  397
inventory and asset management  398
logging and monitoring  397
networking  396, 397
vulnerability management  398
security best practices, Azure SQL Database
authentication  617
data protection  618
monitoring and alerting  619
network security  618
security best practices, container registry
data protection  379
identity and access control  378, 379
logging and monitoring  378
network security  377, 378
security best practices, for Azure Container 
Instances
data protection  362, 363
identity and access management  362
logging and monitoring  361, 362
network security  361
recommendations  363, 364
security best practices, PIM  77-79
security best practices, virtual 
machines  282-284
Security Center reports
issues  282
security center threat alerts
investigating  496-498
security layers, for Azure SQL Database  614
access management  615
data protection  616
network security  615
security management  617
threat protection  616
security management, Azure SQL Database
compliance  617
data discovery and classification  617
vulnerability assessment  617
security parameters, Azure Key Vault
identity and access management  306-310
monitoring  310, 311
secure network access  310
security parameters, for Azure App Service
authentication  332, 333
authorization  332, 333
deploying  332
security policies, security center
disabling  489, 490

Index      685
enabling  487, 488
industry and regulatory compliance 
standards, adding  488, 489
overview  487
security compliance, evaluating  486
working with  487
security recommendation, for Azure 
Storage
identity and access management  555, 556
networking  556, 557
secure data protection recommendations  
554, 555
security settings, Azure Blueprint
configuring  162-170
Self Service Password Reset (SSPR)
authentication options, selecting  58, 59
enabling, in Azure AD  58
registration options, selecting  59, 60
service endpoint, Azure  266
configuring, in Azure Virtual 
Network  266
service tags  194
settings, MFA
account lockout  106
app passwords  105
block/unblock users  106
caching rules  110
configuring  103, 104
fraud alert  107, 108
notifications  108
one-time bypass  109
phone call settings  108
remember multifactor-authentication  105
trusted ips  105
verification options  105
shared access signature (SAS)
account SAS  578
account setup  581
best practices  579, 580
creating, with stored access policy  584-589
generating  581-583
service SAS  578
signing  579
user delegation SAS  578
working mechanism  578, 579
sign-in page, company brand
customized branding, setting up  13-16
customizing  13
sign-in risk policy  134, 135
simulate risk detection
anonymous IP address  131
Atypical travel  131
unfamiliar sign-in properties  130, 131
soft delete
enabling, for Key Vault  322
solutions, Azure Sentinel  549
SQL Server 2012 Express LocalDB  34
SQL vulnerability assessment 
configuration 655-657
SSL certificate  34
storage account
firewall, setting up  268, 269
system-assigned managed identity  385
T
tenant
creating  9, 10
terminologies, azure Sentinel
alert  504
analytics rule template  505
data connectors  504
defined detection  504
events  504
incident  504
MITRE ATT&CK  504
SIEM  504
SOAR  504
tactics  505
workbook  504
workbook template  505
terminology, PIM
activate  76
activated  75
active  75
assigned  75
categories  76
eligible  75
expire active  76
expire eligible  75
just-in-time (JIT) access  76
permanent active  75
permanent eligible  75
principle of least privilege access  76

686      Microsoft Azure Security Technologies (AZ-500) – A Certification Guide
terms of use, Azure AD conditional access
setting up  123, 124, 125
threat hunting, Azure Sentinel  545
example  545
hunting dashboard  545
threat incidents, Azure Sentinel
detailed information  529-531
investigating  532-537
threat intelligence
enabling, in Azure Firewall policy  256, 257
integrating, in Azure Sentinel  548, 549
threat protection, Azure SQL Database
advanced threat protection  616
SQL auditing  616
TLS inspection
enabling, in Azure Firewall policy  257, 258
topologies, Azure AD Connect  55, 56
traffic flow, Azure NSGs
inbound traffic  195
intra-subnet traffic  196
outbound traffic  195
Transparent Data Encryption (TDE)  296, 635
customer-managed TDE  636
enabling, on Azure SQL Database  636-638
service-managed TDE  636
Transport Layer Security (TLS)  212
types, RBAC roles
built-in RBAC roles  145
custom RBAC roles  147
U
Update Management
configuring, for virtual machines  287
deployment, scheduling  293-296
enabling  285
enabling, for virtual machines  290-293
for servers  284
overview  285
supported and unsupported client  286
user accounts, types
consumer account user  20
guest users  20
native users  20
user administrator  21
User and Entity Behavior Analytics 
(UEBA)  546
enabling  547, 548
user-assigned managed identity  385
creating  385, 386
user creation
consumer user  25
guest user  23, 24
native user  21-23
User Defined Routes (UDR)
creating  241-244
user management
licenses, assigning to users and 
groups  26, 27
licenses, removing from users and 
groups  27
user creation  21
user deletion  26
user risk policy  133
V
virtual machines
security, configuring  282-284
virtual network integration
gateway-required virtual network inte­
gration  341
limitations  342
regional virtual network integration  341
VM vulnerability assessment
through security center  481, 482
VNet peering  177
creating, between Azure VNets  180-182
setting up  177-179
VPN connectivity, Azure AD conditional 
access  125
vulnerability assessment, SQL
configuring  655-657
vulnerability scan, for Azure Container 
Registry
performing  390
vulnerability scanner, Azure Security 
Center
built-in vulnerability scanner  482
container registry image scanning  484
deploying  482-484
for SQL database  484, 485
working  482

Index      687
W
WAF
application gateway, deploying with  227
benefits, on application gateway  225
features, on application gateway  226
watchlists, Azure Sentinel  549
use cases  550
What if tool  115, 116
workflow automation, in Azure Sentinel  538
alert response, automating through play­
book  544, 545
playbook, creating  539-542
threat incident response, automating 
through playbook  542-544
workflow automation, security center  490
configuring  493-495
logic apps, creating  490-493
workspace
virtual machines, attaching to  288

