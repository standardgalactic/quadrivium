
HTTP 
Request Methods

Request Methods
• Request methods, also known as verbs, are used to 
indicate the desired action to be performed  
• GET - is a request for a resource (html ﬁle, javascript 
ﬁle, image, etc) 
• GET - is used when you visit a website.  
• HEAD - is like GET, but only asks for meta information 
without the body. 

Request Methods
• POST - is used to post data to the server.  
• Typical use case for POST is to post form data to the server 
(like a checkout form) 
• PUT - is a request for the enclosed entity be stored at the 
supplied URI. If the entity exists, it is expected to be updated. 
• POST is a create request 
• PUT is a create OR update request

Request Methods
• DELETE - Is a request to delete the speciﬁed 
resource 
• TRACE - Will echo the received request. Can be 
used to see if request was altered by 
intermediate servers 
• OPTIONS - Returns the HTTP methods 
supported by the server for the speciﬁed URL

Request Methods
• CONNECT - Converts the request to a 
transparent TCP/IP tunnel, typically for HTTPS 
through an unencrypted HTTP proxy 
• PATCH - Applies partial modiﬁcations to the 
speciﬁed resource 

Safe Methods
• Safe Methods are considered safe to use 
because they only fetch information and do not 
cause changes on the server 
• The Safe Methods are: GET, HEAD, OPTIONS, 
and TRACE

Idempotent Methods
• Idempotence - A quality of an action such that 
repetitions of the action have no further effect on the 
outcome 
• PUT and DELETE are Idempotent Methods 
• Safe Methods (GET, HEAD, TRACE, OPTIONS) are 
also Idempotent 
• Being truly Idempotent is not enforced by the protocol

Non-Idempotent Methods
• POST is NOT Idempotent 
• Multiple Posts are likely to create multiple 
resources  
• Ever seen websites asking you to click submit 
only once?

METHOD
Request 
Body
Response 
Body
Safe
Idempotent
Cachable
GET
No
Yes
Yes
Yes
Yes
HEAD
No
No
Yes
Yes
Yes
POST
Yes
Yes
No
No
Yes
PUT
Yes
Yes
No
Yes
No
DELETE
No
Yes
No
Yes
No
CONNECT
Yes
Yes
No
No
No
OPTIONS
Optional
Yes
Yes
Yes
No
TRACE
No
Yes
Yes
Yes
No
PATCH
Yes
Yes
No
No
Yes

HTTP Status Codes
• 100 series are informational in nature 
• 200 series indicate successful request 
• 300 series are redirections 
• 400 series are client errors 
• 500 series are server side errors

Common HTTP Status Codes
• 200 Okay; 201 Created; 204 Accepted 
• 301 Moved Permanently 
• 400 Bad Request; 401 Not Authorized; 404 Not 
Found 
• 500 Internal Server Error; 503 Service 
Unavailable


