
The Art of Asking ChatGPT for High-Quality
Answers
A Complete Guide to Prompt Engineering Techniques
Ibrahim John
Nzunda Technologies Limited
 
 

Copyright © 2023 Ibrahim John
All rights reserved

The characters and events portrayed in this book are fictitious. Any similarity to real persons,
living or dead, is coincidental and not intended by the author.

No part of this book may be reproduced, or stored in a retrieval system, or transmitted in any
form or by any means, electronic, mechanical, photocopying, recording, or otherwise, without
express written permission of the publisher.

ISBN-13: 9781234567890
ISBN-10: 1477123456

Cover design by: Art Painter
Library of Congress Control Number: 2018675309
Printed in the United States of America

Table of Contents
Introduction
Chapter 1: Introduction to Prompt Engineering Techniques
What is Prompt engineering?
Chapter 2: Instructions Prompt Technique
Examples:
Chapter 3: Role Prompting
Chapter 4: Standard Prompts
Chapter 5: Zero, One and Few Shot Prompting
Chapter 6: "Let’s think about this” prompt
Chapter 7: Self-Consistency Prompt
Chapter 8: Seed-word Prompt
Chapter 9: Knowledge Generation prompt
Chapter 10: Knowledge Integration prompts
How to use it with ChatGPT:
Chapter 11: Multiple Choice prompts
Chapter 12: Interpretable Soft Prompts
Chapter 13: Controlled Generation prompts
Chapter 14: Question-answering prompts
Chapter 15: Summarization prompts
How to use it with ChatGPT:
Chapter 16: Dialogue prompts
Chapter 17: Adversarial prompts
Chapter 18: Clustering prompts
How to use it with ChatGPT:
Chapter 19: Reinforcement learning prompts
Chapter 20: Curriculum learning prompts
Chapter 21: Sentiment analysis prompts
Chapter 22: Named entity recognition prompts
Chapter 23: Text classification prompts
Chapter 24: Text generation prompts
Conclusion

Introduction

I am thrilled to welcome you to my latest book, "The Art of Asking
ChatGPT for High-Quality Answers: A complete Guide to Prompt
Engineering Techniques”.
This book is a comprehensive guide to understanding and
utilizing various prompt techniques used to generate high-quality
answers from ChatGPT.
We will explore how different prompt engineering techniques
can be used to achieve different goals. ChatGPT is a state-of-the-art
language model that is capable of generating human-like text.
However, it is vital to understand the right way to ask ChatGPT in
order to get the high-quality outputs we desire.
And that is the purpose of this book. Whether you are a normal
person, a researcher, a developer, or simply someone who wants to
use ChatGPT as his personal assistant in your field, this book is
written for you.
I have used simple language with on-point practical
explanations, together with examples and prompt formulas on
every prompt technique. With this book, you'll learn how to use
prompt engineering techniques to control the output of ChatGPT and
generate text that is tailored to your specific needs.
Throughout this book, we also provide examples of how to
combine different prompt techniques to  achieve more specific
outcomes. 

I hope that you will find this book informative and enjoyable as
much as I enjoyed writing it.

Chapter 1: Introduction to Prompt Engineering
Techniques
What is Prompt engineering?
Prompt engineering is the process of creating prompts or asking or
instructions that guide the output of a language model like ChatGPT. It
allows users to control the output of the model and generate text that
is tailored to their specific needs.
ChatGPT is a state-of-the-art language model that is capable of
generating human-like text. It is built on the transformer architecture,
which allows it to handle large amounts of data and generate high-
quality text.
However, in order to get the best results from ChatGPT, it is
important to understand how to properly prompt the model.
Prompting allows users to control the output of the model and
generate text that is relevant, accurate, and of high-quality.
When working with ChatGPT, it is important to understand its
capabilities and limitations.
The model is capable of generating human-like text, but it may not
always produce the desired output without proper guidance.
This is where prompt engineering comes in, by providing clear and
specific instructions, you can guide the model's output and ensure that
it is relevant.
A prompt formula is a specific format for the prompt, it is generally
composed of 3 main elements:
task: a clear and concise statement of what the prompt is
asking the model to generate.
instructions: the instructions that should be followed by the
model when generating text.
role: the role that the model should take on when generating
text.
In this book, we will explore the various prompt engineering
techniques that can be used with ChatGPT. We will discuss the

different types of prompts, as well as how to use them to achieve
specific goals you want.

Chapter 2: Instructions Prompt Technique
Now, let us start by exploring the “instructions prompt technique”
and how it can be used to generate high-quality text from ChatGPT.
The instructions prompt technique is a way of guiding the output of
ChatGPT by providing specific instructions for the model to follow.
This technique is useful for ensuring that the output is relevant and
high-quality.
To use the instructions prompt technique, you will need to provide
a clear and concise task for the model, as well as specific instructions
for the model to follow.
For example, if you are generating customer service responses,
you would provide a task such as "generate responses to customer
inquiries" and instructions such as "responses should be professional
and provide accurate information".
Prompt formula: "Generate [task] following these instructions:
[instructions]"
Examples:
Generating customer service responses:
Task: Generate responses to customer inquiries
Instructions: The responses should be professional and
provide accurate information
Prompt formula: "Generate professional and accurate
responses to customer inquiries following these instructions:
The responses should be professional and provide accurate
information."
Generating a legal document:
Task: Generate a legal document
Instructions: The document should be in compliance with
relevant laws and regulations
Prompt formula: "Generate a legal document that is
compliant with relevant laws and regulations following these

instructions: The document should be in compliance with
relevant laws and regulations."
When using the instructions prompt technique, it is important to
keep in mind that the instructions should be clear and specific. This
will help to ensure that the output is relevant and high-quality. The
instructions prompt technique can be combined together with “role
prompting” and “seed-word prompting” as explained in the next
chapter to enhance the output of ChatGPT.

Chapter 3: Role Prompting
The role prompting technique is a way of guiding the output of
ChatGPT by providing a specific role for the model to take on. This
technique is useful for generating text that is tailored to a specific
context or audience.
To use the role prompting technique, you will need to provide a
clear and specific role for the model to take on. For example, if you are
generating customer service responses, you would provide a role
such as "customer service representative".
Prompt formula: "Generate [task] as a [role]"
Example:
Generating customer service responses:
Task: Generate responses to customer inquiries
Role: Customer service representative
Prompt formula: "Generate responses to customer inquiries
as a customer service representative."
Generating a legal document:
Task: Generate a legal document
Role: Lawyer
Prompt formula: "Generate a legal document as a lawyer."
Using the role prompting technique with instruction prompting and
seed-word prompting will enhance the output of ChatGPT.
Here is an example of how the instruction prompting, role
prompting, and seed-word prompting techniques can be combined:
Task: Generate a product description for a new smartphone
Instructions: 
The 
description 
should 
be 
informative,
persuasive and highlight the unique features of the
smartphone
Role: Marketing representative
Seed-word: "innovative"

Prompt formula: "As a marketing representative, generate an
informative, persuasive product description that highlights
the innovative features of the new smartphone. The
smartphone has the following features [insert your features]”
In this example, the instruction prompting is used to ensure that
the product description is informative and persuasive. The role
prompting is used to ensure that the description is written from the
perspective of a marketing representative. And the seed-word
prompting is used to ensure that the description focuses on the
innovative features of the smartphone.

Chapter 4: Standard Prompts
Standard prompts are a simple way to guide the output of
ChatGPT by providing a specific task for the model to complete.
For example, if you want to generate a summary of a news article,
you would provide a task such as "summarize this news article".
Prompt formula: "Generate a [task]"
Example:
Generating a summary of a news article:
Task: Summarize this news article
Prompt formula: "Generate a summary of this news article"
 
Generating a product review:
Task: Write a review of a new smartphone
Prompt formula: "Generate a review of this new smartphone"
Also, Standard prompts can be combined with other techniques
like role prompting and seed-word prompting to enhance the output of
ChatGPT.
Here is an example of how the standard prompts, role prompting,
and seed-word prompting techniques can be combined:
Task: Generate a product review for a new laptop
Instructions: The review should be objective, informative and
highlight the unique features of the laptop
Role: Tech expert
Seed-word: "powerful"
Prompt formula: "As a tech expert, generate an objective and
informative product review that highlights the powerful
features of the new laptop."

In this example, the standard prompts technique is used to ensure
that the model generates a product review. The role prompting is used
to ensure that the review is written from the perspective of a tech
expert. And the seedword prompting is used to ensure that the review
focuses on the powerful features of the laptop.

Chapter 5: Zero, One and Few Shot Prompting
Zero-shot, one-shot, and few-shot prompting are techniques used
to generate text from ChatGPT with minimal or no examples. These
techniques are useful when there is limited data available for a
specific task or when the task is new and not well-defined.
The zero-shot prompting technique is used when there are no
examples available for the task. The model is provided with a general
task and it generates text based on its understanding of the task.
The one-shot prompting technique is used when there is only one
example available for the task. The model is provided with the
example and generates text based on its understanding of the
example.
The few-shot prompting technique is used when there are a limited
number of examples available for the task. The model is provided with
the examples and generates text based on its understanding of the
examples.
Prompt formula: "Generate text based on [number] examples"
Example:
Generating a product description for a new product with no
examples available:
Task: Write a product description for a new smartwatch
Prompt formula: "Generate a product description for this new
smartwatch with zero examples"
Generating a product comparison with one example
available:
Task: Compare a new smartphone to the latest iPhone
Prompt formula: "Generate a product comparison of this new
smartphone with one example (latest iPhone)"
Generating a product review with few examples available:

Task: Write a review of a new e-reader
Prompt formula: "Generate a review of this new e-reader with
few examples (3 other e-readers)"
These techniques can be used to generate text based on a
model's understanding of the task or examples provided.

Chapter 6: "Let’s think about this” prompt
The "Let's think about this" prompt is a technique used to
encourage ChatGPT to generate text that is reflective and
contemplative. This technique is useful for tasks such as writing
essays, poetry, or creative writing.
The prompt formula for the "Let's think about this" prompt is simply
the phrase "Let's think about this" followed by a topic or question.
Example:
Generating a reflective essay:
Task: Write a reflective essay on the topic of personal growth
Prompt formula: "Let's think about this: personal growth"
Generating a poem:
Task: Write a poem about the changing seasons
Prompt formula: "Let's think about this: the changing seasons"
This prompt is asking for a conversation or discussion about a
specific topic or idea. The speaker is inviting ChatGPT to engage in a
dialogue about the subject at hand.
The model is provided with a prompt, which serves as the starting
point for the conversation or text generation.
The model then uses its training data and algorithms to generate a
response that is relevant to the prompt. This technique allows
ChatGPT to generate contextually appropriate and coherent text
based on the provided prompt.
To use the "Let’s think about this prompt" technique with ChatGPT,
you can follow these steps:
1. 
Identify the topic or idea you want to discuss.
2. 
Formulate a prompt that clearly states the topic or idea, and
starts the conversation or text generation.
3. 
Preface the prompt with "Let's think about" or "Let's discuss"
to indicate that you're initiating a conversation or discussion.

Here are a few examples of prompts using this technique:
Prompt: "Let's think about the impact of climate change on
agriculture"
Prompt: "Let's discuss the current state of artificial intelligence"
Prompt: "Let's talk about the benefits and drawbacks of remote
work"
You can also add a open-ended question, statement or a piece of
text that you want the model to continue or build upon.
Once you provide the prompt, the model will use its training data
and algorithms to generate a response that is relevant to the prompt
and will continue the conversation in a coherent way.
This unique prompt helps ChatGPT to give answers in different
perspectives and angles, resulting in more dynamic and informative
passages.
The steps to use the prompt are simple and easy to follow, and it
can truly make a difference in your writing. Give it a try and see for
yourself

Chapter 7: Self-Consistency Prompt
The Self-Consistency prompt is a technique used to ensure that
the output of ChatGPT is consistent with the input provided. This
technique is useful for tasks such as fact-checking, data validation, or
consistency checking in text generation.
The prompt formula for the Self-Consistency prompt is the input
text followed by the instruction "Please ensure the following text is
self-consistent"
Alternatively, the model can be prompted to generate text that is
consistent with the provided input.
Prompt Examples and their Formula:
Example 1: Text Generation
Task: Generate a product review
Instructions: The review should be consistent with the
product information provided in the input
Prompt formula: "Generate a product review that is
consistent with the following product information [insert
product information]"
Example 2: Text Summarization
Task: Summarize a news article
Instructions: The summary should be consistent with the
information provided in the article
Prompt formula: "Summarize the following news article in a
way that is consistent with the information provided [insert
news article]"
Example 3: Text Completion
Task: Complete a sentence
Instructions: The completion should be consistent with the
context provided in the input

Prompt formula: "Complete the following sentence in a way
that is consistent with the context provided [insert sentence]"
Example 4:
1. 
Fact-checking:
Task: Check for consistency in a given news article
Input text: "The article states that the population of the city is
5 million, but later on, it says that the population is 7 million."
Prompt formula: "Please ensure the following text is self-
consistent: The article states that the population of the city is
5 million, but later on, it says that the population is 7 million."
 
2. 
Data validation:
Task: Check for consistency in a given data set
Input text: "The data shows that the average temperature in
July is 30 degrees, but the minimum temperature is recorded
as 20 degrees."
Prompt formula: "Please ensure the following text is self-
consistent: The data shows that the average temperature in
July is 30 degrees, but the minimum temperature is recorded
as 20 degrees."

Chapter 8: Seed-word Prompt
The Seed-word prompt is a technique used to control the output of
ChatGPT by providing it with a specific seed-word or phrase.
The prompt formula for the Seed-word prompt is the seed-word or
phrase followed by the instruction "Please generate text based on the
following seed-word"
Examples:
Text generation:
Task: Generate a story about a dragon
Seed-word: "Dragon"
Prompt formula: "Please generate text based on the following
seed-word: Dragon"
Language Translation:
Task: Translate a sentence from English to Spanish
Seed-word: "Hello"
Prompt formula: "Please generate text based on the following
seed-word: Hello"
This technique allows the model to generate text that is related to
the seed word and expand on it. It's a way to control the model's
generated text to be related to a certain topic or context.
The Seed-word prompt can be combined with role prompting and
instruction prompting to create more specific and targeted generated
text. By providing a seed word or phrase, the model can generate text
that is related to that seed word or phrase and by providing
information about the desired output and role, the model can generate
text in a specific style or tone that is consistent with the role or
instructions. This allows for more control over the generated text and
can be useful for a wide range of applications
Here are Prompt Examples and their Formula:
Example 1: Text Generation

Task: Generate a poem
Instructions: The poem should be related to the seed word
"love" and should be written in the style of a sonnet.
Role: Poet
Prompt formula: "Generate a sonnet related to the seed word
'love' as a poet"
Example 2: Text Completion
Task: Complete a sentence
Instructions: The completion should be related to the seed
word "science" and should be written in the style of a research
paper
Role: Researcher
Prompt formula: "Complete the following sentence in a way
that is related to the seed word 'science' and in the style of a
research paper as a researcher: [insert sentence]"
Example 3: Text Summarization
Task: Summarize a news article
Instructions: The summary should be related to the seed word
"politics" and should be written in a neutral and unbiased tone
Role: Journalist
Prompt formula: "Summarize the following news article in a
way that is related to the seed word 'politics' in a neutral and
unbiased tone as a journalist: [insert news article]"

Chapter 9: Knowledge Generation prompt
The Knowledge Generation prompt is a technique used to elicit
new and original information from ChatGPT.
The prompt formula for the Knowledge Generation prompt is
"Please generate new and original information about X" where X is the
topic of interest.
This is a technique that uses a model's pre-existing knowledge to
generate new information or to answer a question.
To use this prompt with ChatGPT, the model should be provided
with a question or topic as input, along with a prompt that specifies the
task or goal for the generated text. The prompt should include
information about the desired output, such as the type of text to be
generated and any specific requirements or constraints.
Here are Prompt Examples and their Formula:
Example 1: Knowledge Generation
Task: Generate new information about a specific topic
Instructions: The generated information should be accurate
and relevant to the topic
Prompt formula: "Generate new and accurate information
about [specific topic] "
Example 2: Question Answering
Task: Answer a question
Instructions: The answer should be accurate and relevant to
the question
Prompt formula: "Answer the following question: [insert
question]"
Example 3: Knowledge Integration
Task: Integrate new information with the existing knowledge

Instructions: The integration should be accurate and relevant
to the topic
Prompt formula: "Integrate the following information with the
existing 
knowledge 
about 
[specific 
topic]: 
[insert 
new
information]"
 
Example 4: Data Analysis:
Task: Generate insights about customer behavior from a given
dataset
Prompt 
formula: 
"Please 
generate 
new 
and 
original
information about customer behavior from this dataset"

Chapter 10: Knowledge Integration prompts
This technique uses a model's pre-existing knowledge to integrate
new information or to connect different pieces of information.
This technique is useful for combining existing knowledge with new
information to generate a more comprehensive understanding of a
specific topic.
How to use it with ChatGPT:
The model should be provided with a new information and the
existing knowledge as input, along with a prompt that specifies the
task or goal for the generated text. The prompt should include
information about the desired output, such as the type of text to be
generated and any specific requirements or constraints.
Prompt Examples and their Formula:
Example 1: Knowledge Integration
Task: Integrate new information with the existing knowledge
Instructions: The integration should be accurate and relevant
to the topic
Prompt formula: "Integrate the following information with the
existing 
knowledge 
about 
[specific 
topic]: 
[insert 
new
information]"
Example 2: Connecting pieces of information
Task: Connect different pieces of information
Instructions: The connections should be relevant and logical
Prompt formula: "Connect the following pieces of information
in a way that is relevant and logical: [insert information 1] [insert
information 2]"
Example 3: Updating existing knowledge
Task: Update existing knowledge with new information

Instructions: The updated information should be accurate and
relevant
Prompt formula: "Update the existing knowledge about
[specific topic] with the following information: [insert new
information]"

Chapter 11: Multiple Choice prompts
This technique presents a model with a question or task and a set
of predefined options as potential answers.
This technique is useful for generating text that is limited to a
specific set of options and can be used for question-answering, text
completion and other tasks. The model can generate text that is
limited to the predefined options.
To use the multiple-choice prompt with ChatGPT, the model should
be provided with a question or task as input, along with a set of
predefined options as potential answers. The prompt should also
include information about the desired output, such as the type of text
to be generated and any specific requirements or constraints.
Prompt Examples and their Formula:
Example 1: Question Answering
Task: Answer a multiple-choice question
Instructions: The answer should be one of the predefined
options
Prompt formula: "Answer the following question by selecting
one of the following options: [insert question] [insert option 1]
[insert option 2] [insert option 3]"
Example 2: Text completion
Task: Complete a sentence with one of the predefined options
Instructions: The completion should be one of the predefined
options
Prompt formula: "Complete the following sentence by
selecting one of the following options: [insert sentence] [insert
option 1] [insert option 2] [insert option 3]"
Example 3: Sentiment analysis
Task: Classify a text as positive, neutral or negative

Instructions: The classification should be one of the
predefined options
Prompt formula: "Classify the following text as positive, neutral
or negative by selecting one of the following options: [insert text]
[positive] [neutral] [negative]"

Chapter 12: Interpretable Soft Prompts
Interpretable soft prompts is a technique that allows to control the
model's generated text while providing some flexibility to the model.
It is done by providing the model with a set of controlled inputs and
some additional information about the desired output. This technique
allows for more interpretable and controllable generated text.
Prompt Examples and their Formula:
Example 1: Text generation
Task: Generate a story
Instructions: The story should be based on a given set of
characters and a specific theme
Prompt formula: "Generate a story based on the following
characters: [insert characters] and the theme: [insert theme]"
Example 2: Text completion
Task: Complete a sentence
Instructions: The completion should be in the style of a
specific author
Prompt formula: "Complete the following sentence in the style
of [specific author]: [insert sentence]"
Example 3: Language modeling
Task: Generate text in a specific style
Instructions: The text should be in the style of a specific period
Prompt formula: "Generate text in the style of [specific period]:
[insert context]"

Chapter 13: Controlled Generation prompts
Controlled generation prompts are techniques that allows to
generate text with a high level of control over the output.
This is achieved by providing the model with a specific set of
inputs, such as a template, a specific vocabulary, or a set of
constraints, that can be used to guide the generation process.
Here are some Prompt Examples and their Formula:
Example 1: Text generation
Task: Generate a story
Instructions: The story should be based on a specific template
Prompt formula: "Generate a story based on the following
template: [insert template]"
Example 2: Text completion
Task: Complete a sentence
Instructions: The completion should use a specific vocabulary
Prompt formula: "Complete the following sentence using the
following vocabulary: [insert vocabulary]: [insert sentence]"
Example 3: Language modeling
Task: Generate text in a specific style
Instructions: The text should follow a specific set of
grammatical rules
Prompt formula: "Generate text that follows the following
grammatical rules: [insert rules]: [insert context]"
By providing the model with a specific set of inputs that can be
used to guide the generation process, controlled generation prompts
allows more controllable and predictable generated text

Chapter 14: Question-answering prompts
Question-answering prompts is a technique that allows a model to
generate text that answers a specific question or task. This is
achieved by providing the model with a question or task as input,
along with any additional information that may be relevant to the
question or task.
Some Prompt Examples and their Formula are;
Example 1: Factual question answering
Task: Answer a factual question
Instructions: The answer should be accurate and relevant
Prompt formula: "Answer the following factual question: [insert
question]"
Example 2: Definition
Task: Provide the definition of a word
Instructions: The definition should be precise
Prompt formula: "Define the following word: [insert word]"
Example 3: Information Retrieval
Task: Retrieve information from a specific source
Instructions: The retrieved information should be relevant
Prompt formula: "Retrieve information about [specific topic]
from the following source: [insert source]"
This can be useful for tasks such as question-answering and
information retrieval.

Chapter 15: Summarization prompts
Summarization prompts is a technique that allows a model to
generate a shorter version of a given text while retaining its main
ideas and information.
This is achieved by providing the model with a longer text as input
and asking it to generate a summary of that text.
This technique is useful for tasks such as text summarization and
information compression.
How to use it with ChatGPT:
The model should be provided with a longer text as input and
asked to generate a summary of that text. The prompt should also
include information about the desired output, such as the desired
length of the summary and any specific requirements or constraints.
Prompt Examples and their Formula:
Example 1: Article summarization
Task: Summarize a news article
Instructions: The summary should be a brief overview of the
main points of the article
Prompt formula: "Summarize the following news article in one
short sentence: [insert article]"
Example 2: Meeting notes
Task: Summarize a meeting transcript
Instructions: The summary should highlight the main decisions
and actions from the meeting
Prompt formula: "Summarize the following meeting transcript
by listing the main decisions and actions taken: [insert transcript]"
Example 3: Book Summary
Task: Summarize a book

Instructions: The summary should be a brief overview of the
main points of the book
Prompt formula: "Summarize the following book in one short
paragraph: [insert book title]"

Chapter 16: Dialogue prompts
Dialogue prompts is a technique that allows a model to generate
text that simulates a conversation between two or more entities. By
providing the model with a context and a set of characters or entities,
along with their roles and backgrounds, and asking the model to
generate dialogue between them
Therefore, the model should be provided with a context and a set
of characters or entities, along with their roles and backgrounds. The
model should also be provided with information about the desired
output, such as the type of conversation or dialogue and any specific
requirements or constraints.
Prompt Examples and their Formula:
Example 1: Dialogue generation
Task: Generate a conversation between two characters
Instructions: The conversation should be natural and relevant
to the given context
Prompt formula: "Generate a conversation between the
following characters [insert characters] in the following context
[insert context]"
Example 2: Story writing
Task: Generate a dialogue in a story
Instructions: The dialogue should be consistent with the
characters and events of the story
Prompt formula: "Generate a dialogue between the following
characters [insert characters] in the following story [insert story]"
Example 3: Chatbot development
Task: Generate a dialogue for a customer service chatbot
Instructions: The dialogue should be professional and provide
accurate information

Prompt formula: "Generate a professional and accurate
dialogue for a customer service chatbot, when the customer asks
about [insert topic]"
Hence this technique is useful for tasks such as dialogue
generation, story writing, and chatbot development.

Chapter 17: Adversarial prompts
Adversarial prompts is a technique that allows a model to generate
text that is resistant to certain types of attacks or biases. This
technique can be used to train models that are more robust and
resistant to certain types of attacks or biases.
To use adversarial prompts with ChatGPT, the model should be
provided with a prompt that is designed to be difficult for the model to
generate text that is consistent with the desired output. The prompt
should also include information about the desired output, such as the
type of text to be generated and any specific requirements or
constraints.
Prompt Examples and their Formula:
Example 1: Adversarial prompt for text classification
Task: Generate text that is classified as a specific label
Instructions: The generated text should be difficult to classify
as the specific label
Prompt formula: "Generate text that is difficult to classify as
[insert label]"
Example 2: Adversarial prompt for sentiment analysis
Task: Generate text that is difficult to classify as a specific
sentiment
Instructions: The generated text should be difficult to classify
as the specific sentiment
Prompt formula: "Generate text that is difficult to classify as
having the sentiment of [insert sentiment]"
Example 3: Adversarial prompt for language translation
Task: Generate text that is difficult to translate
Instructions: The generated text should be difficult to translate
to the target language

Prompt formula: "Generate text that is difficult to translate to
[insert target language]"

Chapter 18: Clustering prompts
Clustering prompts is a technique that allows a model to group
similar data points together based on certain characteristics or
features.
This is achieved by providing the model with a set of data points
and asking it to group them into clusters based on certain
characteristics or features.
This technique is useful for tasks such as data analysis, machine
learning, and natural language processing.

How to use it with ChatGPT:
The model should be provided with a set of data points and asked
to group them into clusters based on certain characteristics or
features. The prompt should also include information about the
desired output, such as the number of clusters to be generated and
any specific requirements or constraints.
Prompt Examples and their Formula:
Example 1: Clustering of customer reviews
Task: Group similar customer reviews together
Instructions: The reviews should be grouped based on
sentiment
Prompt formula: "Group the following customer reviews into
clusters based on sentiment: [insert reviews]"
Example 2: Clustering of news articles
Task: Group similar news articles together
Instructions: The articles should be grouped based on topic
Prompt formula: "Group the following news articles into
clusters based on topic: [insert articles]"
Example 3: Clustering of scientific papers
Task: Group similar scientific papers together
Instructions: The papers should be grouped based on
research area
Prompt formula: "Group the following scientific papers into
clusters based on research area: [insert papers]"

Chapter 19: Reinforcement learning prompts
Reinforcement learning prompts is a technique that allows a model
to learn from its past actions and improve its performance over time.
To use reinforcement learning prompts with ChatGPT, the model
should be provided with a set of inputs and rewards, and allowed to
adjust its behavior based on the rewards it receives. The prompt
should also include information about the desired output, such as the
task to be accomplished and any specific requirements or constraints.
This technique is useful for tasks such as decision making, game
playing, and natural language generation.
Prompt Examples and their Formula:
Example 1: Reinforcement learning for text generation
Task: Generate text that is consistent with a specific style
Instructions: The model should adjust its behavior based on
the rewards it receives for generating text that is consistent with
the specific style
Prompt formula: "Use reinforcement learning to generate text
that is consistent with the following style [insert style]"
Example 2: Reinforcement learning for language translation
Task: Translate text from one language to another
Instructions: The model should adjust its behavior based on
the rewards it receives for producing accurate translations
Prompt formula: "Use reinforcement learning to translate the
following text [insert text] from [insert language] to [insert
language]"
Example 3: Reinforcement learning for question answering
Task: Generate answer to a question
Instructions: The model should adjust its behavior based on
the rewards it receives for producing accurate answers

Prompt formula: "Use reinforcement learning to generate an
answer to the following question [insert question]"

Chapter 20: Curriculum learning prompts
Curriculum learning is a technique that allows a model to learn a
complex task by first training on simpler tasks and gradually
increasing the difficulty.
To use curriculum learning prompts with ChatGPT, the model
should be provided with a sequence of tasks that gradually increase in
difficulty. The prompt should also include information about the
desired output, such as the final task to be accomplished and any
specific requirements or constraints.
This technique is useful for tasks such as natural language
processing, image recognition, and machine learning.
Prompt Examples and their Formula:
Example 1: Curriculum learning for text generation
Task: Generate text that is consistent with a specific style
Instructions: The model should be trained on simpler styles
before moving on to more complex styles
Prompt formula: "Use curriculum learning to generate text that
is consistent with the following styles [insert styles] in the
following order [insert order]"
Example 2: Curriculum learning for language translation
Task: Translate text from one language to another
Instructions: The model should be trained on simpler
languages before moving on to more complex languages
Prompt formula: "Use curriculum learning to translate text
from the following languages [insert languages] in the following
order [insert order]"
Example 3: Curriculum learning for question answering
Task: Generate answer to a question

Instructions: The model should be trained on simpler
questions before moving on to more complex questions
Prompt formula: "Use curriculum learning to generate
answers to the following questions [insert questions] in the
following order [insert order]"

Chapter 21: Sentiment analysis prompts
Sentiment analysis is a technique that allows a model to determine
the emotional tone or attitude of a piece of text, such as whether it is
positive, negative, or neutral.
To use sentiment analysis prompts with ChatGPT, the model
should be provided with a piece of text and asked to classify it based
on its sentiment.
The prompt should also include information about the desired
output, such as the type of sentiment to be detected (e.g. positive,
negative, neutral) and any specific requirements or constraints.
Prompt Examples and their Formula:
Example 1: Sentiment analysis of customer reviews
Task: Determine the sentiment of customer reviews
Instructions: The model should classify the reviews as
positive, negative, or neutral
Prompt formula: "Perform sentiment analysis on the following
customer reviews [insert reviews] and classify them as positive,
negative, or neutral."
Example 2: Sentiment analysis of tweets
Task: Determine the sentiment of tweets
Instructions: The model should classify the tweets as positive,
negative, or neutral
Prompt formula: "Perform sentiment analysis on the following
tweets [insert tweets] and classify them as positive, negative, or
neutral."
Example 3: Sentiment analysis of product reviews
Task: Determine the sentiment of product reviews
Instructions: The model should classify the reviews as
positive, negative, or neutral

Prompt formula: "Perform sentiment analysis on the following
product reviews [insert reviews] and classify them as positive,
negative, or neutral."
This technique is useful for tasks such as natural language
processing, customer service, and market research.

Chapter 22: Named entity recognition prompts
Named entity recognition (NER) is a technique that allows a model
to identify and classify named entities in text, such as people,
organizations, locations, and dates.
To use named entity recognition prompts with ChatGPT, the model
should be provided with a piece of text and asked to identify and
classify named entities within the text.
The prompt should also include information about the desired
output, such as the types of named entities to be identified (e.g.
people, organizations, locations, dates) and any specific requirements
or constraints.
Prompt Examples and their Formula:
Example 1: Named entity recognition in a news article
Task: Identify and classify named entities in a news article
Instructions: The model should identify and classify people,
organizations, locations, and dates
Prompt formula: "Perform named entity recognition on the
following news article [insert article] and identify and classify
people, organizations, locations, and dates."
Example 2: Named entity recognition in a legal document
Task: Identify and classify named entities in a legal document
Instructions: The model should identify and classify people,
organizations, locations, and dates
Prompt formula: "Perform named entity recognition on the
following legal document [insert document] and identify and
classify people, organizations, locations, and dates."
Example 3: Named entity recognition in a research paper
Task: Identify and classify named entities in a research paper

Instructions: The model should identify and classify people,
organizations, locations, and dates
Prompt formula: "Perform named entity recognition on the
following research paper [insert paper] and identify and classify
people, organizations, locations, and dates."

Chapter 23: Text classification prompts
Text classification is a technique that allows a model to categorize
text into different classes or categories. This technique is useful for
tasks such as natural language processing, text analytics, and
sentiment analysis.
It's important to note that Text classification is different from
sentiment analysis. Sentiment analysis specifically focus on
determining the sentiment or emotion expressed in text.
This could include determining whether the text expresses a
positive, negative, or neutral sentiment. Sentiment analysis is often
used in the context of customer reviews, social media posts, and other
forms of text where the sentiment expressed is important.
To use text classification prompts with ChatGPT, the model should
be provided with a piece of text and asked to classify it based on
predefined categories or labels. The prompt should also include
information about the desired output, such as the number of classes
or categories, and any specific requirements or constraints.
Prompt Examples and their Formula:
Example 1: Text classification of customer reviews
Task: Classify customer reviews into different categories such
as electronics, clothing and furniture
Instructions: The model should classify the reviews based on
their content
Prompt formula: "Perform text classification on the following
customer reviews [insert reviews] and classify them into different
categories such as electronics, clothing and furniture based on
their content."
Example 2: Text classification of news articles
Task: Classify news articles into different categories such as
sports, politics, and entertainment

Instructions: The model should classify the articles based on
their content
Prompt formula: "Perform text classification on the following
news articles [insert articles] and classify them into different
categories such as sports, politics, and entertainment based on
their content."
Example 3: Text classification of emails
Task: Classify emails into different categories such as spam,
important, or urgent
Instructions: The model should classify the emails based on
their content and sender
Prompt formula: "Perform text classification on the following
emails [insert emails] and classify them into different categories
such as spam, important, or urgent based on their content and
sender."

Chapter 24: Text generation prompts
Text generation prompts are related to several other prompt
techniques mentioned in this book, such as: Zero, One and Few Shot
Prompting, Controlled generation prompts, Translation prompts,
Language modeling prompts, Sentence completion prompts.
All these prompts are related because they all involve generating
text, but they differ in the way the text is generated and the specific
requirements or constraints that are placed on the generated text.
Text generation prompts can be used to fine-tune a pre-trained
model or to train a new model for specific tasks.
Prompt Examples and their Formula:
Example 1: Text generation for story writing
Task: Generate a story based on a given prompt
Instructions: The story should be at least 1000 words and
include a specific set of characters and a plot
Prompt formula: "Generate a story of at least 1000 words,
including characters [insert characters] and a plot [insert plot]
based on the following prompt [insert prompt]."
Example 2: Text generation for language translation
Task: Translate a given text into another language
Instructions: The translation should be accurate and idiomatic
Prompt formula: "Translate the following text [insert text] into
[insert target language] and make sure that it is accurate and
idiomatic."
Example 3: Text generation for text completion
Task: Complete a given text
Instructions: The generated text should be coherent and
consistent with the input text

Prompt formula: "Complete the following text [insert text] and
make sure that it is coherent and consistent with the input
text."Chapter 26: Word prediction prompts

Conclusion
As we've explored throughout this book, prompt engineering is a
powerful tool to get high-quality answers from language models like
ChatGPT. By carefully crafting prompts that incorporate various
techniques, we can guide the model to generate text that is tailored to
our specific needs and requirements.
In chapter 2, we looked at how instructions prompts can be used to
provide clear and specific guidance to the model. In chapter 3, we
explored how role prompts can be used to generate text in a specific
voice or style. In chapter 4, we examined how standard prompts can
be used as a starting point for fine-tuning the model's performance.
We also looked at several advanced prompt techniques such as
Zero, One and Few Shot Prompting, Self-Consistency, Seed-word
Prompt, Knowledge Generation prompt, Knowledge Integration
prompts, Multiple Choice prompts, Interpretable Soft Prompts,
Controlled 
generation 
prompts, 
Question-answering 
prompts,
Summarization prompts, Dialogue prompts, Adversarial prompts,
Clustering prompts, Reinforcement learning prompts, Curriculum
learning prompts, Sentiment analysis prompts, Named entity
recognition prompts, and Text classification prompts
Each of these techniques can be used in different ways to achieve
a wide range of different results, and as you continue to work with
ChatGPT and other language models, it's worth experimenting with
different combinations of techniques to see what works best for your
specific use case.
Lastly you can check to see other books I have written on other
topics.
Thanks for reading the entire book. See you in my other books.
 

About The Author
Ibrahim John
 
Ibrahim John is the author of "The Art of Asking ChatGPT for High-
Quality Answers: A Complete Guide to Prompt Engineering
Techniques". 

He was born in Tanzania and is a well-known figure in the field of
technology and business. 

He is the founder of three successful companies: Nzunda
Technologies Limited, Kingbest Companye Limited and Agrasa
Agriculture Limited. 

With his extensive knowledge and experience in the field, Ibrahim
brings a unique perspective to the topic of prompt engineering and its
applications in language modeling. He is passionate about sharing his
knowledge and expertise with others and is dedicated to helping
people understand and utilize the power of ChatGPT and other state-
of-the-art language models.

