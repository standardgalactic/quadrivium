Master	  Method	  
Design	  and	  Analysis	  
of	  Algorithms	  I	  
Mo5va5on	  

Integer	  Mul5plica5on	  Revisited	  
Mo5va5on	  :	  poten5ally	  useful	  algorithmic	  ideas	  
o<en	  need	  mathema5cal	  analysis	  to	  evaluate	  
Recall	  :	  grade-­‐school	  mul5plica5on	  algorithm	  uses	  	  	  	  
	  opera5on	  to	  mul5ply	  two	  n-­‐digit	  numbers	  

A	  Recursive	  Algorithm	  
Recursive	  approach	  
Write	  	  
[where	  a,b,c,d	  are	  n/2	  –	  digit	  numbers]	  
So	  :	  
Algorithm#1	  :	  recursively	  compute	  ac,ad,bc,bd,	  
then	  compute	  (*)	  in	  the	  obvious	  way.	  

A	  Recursive	  Algorithm	  
T(n)	  =	  maximum	  number	  of	  opera5ons	  this	  algorithm	  
needs	  to	  mul5ply	  two	  n-­‐digit	  numbers	  
Recurrence	  :	  express	  T(n)	  in	  terms	  of	  running	  5me	  of	  
recursive	  calls.	  
Base	  Case	  :	  T(1)	  <=	  	  a	  constant.	  
For	  all	  n	  >	  1	  	  :	  	  

A	  BeVer	  Recursive	  Algorithm	  
Algorithm	  #2	  (Gauss)	  :	  	  recursively	  compute	  ac,	  bd,	  	  
(a+b)(c+d) 	  [recall	  ad+bc	  =	  (3)	  –	  (1)	  –	  (2)	  ]	  
New	  Recurrence	  :	  
Base	  Case	  :	  T(1)	  <=	  a	  constant	  

Tem
ver
Which	  recurrence	  best	  describes	  the	  running	  5me	  of	  Gauss’s	  
algorithm	  for	  integer	  mul5plica5on?	  

A	  BeVer	  Recursive	  Algorithm	  
Algorithm	  #2	  (Gauss)	  :	  	  recursively	  compute	  ac,	  bd,	  	  
(a+b)(c+d) 	  [recall	  ad+bc	  =	  (3)	  –	  (1)	  –	  (2)	  ]	  
New	  Recurrence	  :	  
Base	  Case	  :	  T(1)	  <=	  a	  constant	  
For	  all	  n>1	  :	  	  

