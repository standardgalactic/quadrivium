Kurt Marti
Stochastic 
Optimization 
Methods
Applications in Engineering and 
Operations Research
Fourth Edition

Stochastic Optimization Methods

Kurt Marti 
Stochastic Optimization 
Methods 
Applications in Engineering and Operations 
Research 
Fourth Edition

Kurt Marti 
Institute for Mathematics and Computer 
Science 
Federal Armed Forces University Munich 
Munich, Germany 
ISBN 978-3-031-40058-2
ISBN 978-3-031-40059-9 (eBook) 
https://doi.org/10.1007/978-3-031-40059-9 
1st–3rd editions: © Springer-Verlag Berlin Heidelberg 2005, 2008, 2015 
4th edition: © The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer 
Nature Switzerland AG 2024 
This work is subject to copyright. All rights are solely and exclusively licensed by the Publisher, whether 
the whole or part of the material is concerned, speciﬁcally the rights of translation, reprinting, reuse 
of illustrations, recitation, broadcasting, reproduction on microﬁlms or in any other physical way, and 
transmission or information storage and retrieval, electronic adaptation, computer software, or by similar 
or dissimilar methodology now known or hereafter developed. 
The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication 
does not imply, even in the absence of a speciﬁc statement, that such names are exempt from the relevant 
protective laws and regulations and therefore free for general use. 
The publisher, the authors, and the editors are safe to assume that the advice and information in this book 
are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or 
the editors give a warranty, expressed or implied, with respect to the material contained herein or for any 
errors or omissions that may have been made. The publisher remains neutral with regard to jurisdictional 
claims in published maps and institutional afﬁliations. 
This Springer imprint is published by the registered company Springer Nature Switzerland AG 
The registered company address is: Gewerbestrasse 11, 6330 Cham, Switzerland 
Paper in this product is recyclable.

Preface 
Optimization problems in practice depend mostly on several model parameters, noise 
factors, uncontrollable parameters, etc., which are not given ﬁxed quantities at the 
planning stage. Due to several types of stochastic uncertainties (physical uncertainty, 
economic uncertainty, statistical uncertainty, model uncertainty), these parameters 
must be modeled by random variables having a certain probability distribution. In 
most cases at least certain moments of this distribution are known. 
In order to cope with these uncertainties, a basic procedure in the behavior of 
the structure/system from the prescribed performance (output, behavior), i.e., the 
tracking error, is compensated by (online) input corrections. However, the online 
correction of a system/structure is often time consuming and causes mostly increasing 
expenses (correction, repair, or recourse costs). Very large recourse costs may arise in 
case of damages or failures of the plant. This can be omitted to a large extent by taking 
into account already at the planning stage the possible consequences of the tracking 
errors and the known prior and sample information about the random data of the 
problem. Hence, instead of relying on ordinary deterministic parameter optimization 
methods—based on some nominal parameter values—and applying then just some 
correction actions, stochastic optimization methods should be applied: Incorporating 
the consequences of stochastic parameter variations into the optimization process, 
large and increasing recourse, repair, recovery costs can be omitted or at least reduced 
to a large extent. 
Consequently, for the computation of robust optimal decisions/designs, i.e., 
optimal decisions which are insensitive with respect to random parameter varia-
tions, appropriate deterministic substitute problems must be formulated ﬁrst. Based 
on decision theoretical principles, these substitute problems depend on probabilities 
of failure/success and/or on more general expected cost/loss terms. Since proba-
bilities and expectations are deﬁned by multiple integrals in general, the resulting 
often nonlinear and also non-convex deterministic substitute problems can be solved 
by approximate methods only. Two basic types of deterministic substitute problems 
occur mostly in practice:
v

vi
Preface
• Minimization of the expected primary costs subject to expected recourse cost 
constraints (reliability constraints) and remaining deterministic constraints, e.g., 
box constraints. 
• Expected Total Cost Minimization Problems subject to deterministic constraints. 
In case of piecewise constant cost functions, probabilistic objective functions and/or 
probabilistic constraints occur. 
Main analytical properties of the substitute problems have been examined in the 
ﬁrst three editions of the book, where also appropriate deterministic and stochastic 
approximation and solution procedures can be found. 
The aim of the present fourth edition is the presentation of updated methods 
for the transformation of actual technical and economic optimization problems 
with random parameters into appropriate deterministic substitute problems. Hence, 
updated analytical and numerical tools are provided for the approximate computa-
tion of robust optimal decisions/designs/control, as needed in concrete engineering/ 
economic applications. 
Last but not least I would like to thank Dipl. Math. Ina Stein, Munich, for her excel-
lent support in the LaTeX-typesetting as well as in the ﬁnal proofreading. Moreover, I 
am indebted to Springer Nature for inviting a new edition of the monograph Stochastic 
Optimization Methods. I would like to thank especially the Senior Editor for Business/ 
Economics/Operations Research of Springer-Verlag Heidelberg, Germany, Christian 
Rauscher and the Springer Editors Yvonne Schwark-Reiber, Books Editorial Projects 
Management, and Jialin Yan, Book Editor Operations Research and Management, 
Information Systems and Applied Statistics, for their advice during the preparation 
of this new edition. 
Munich, Germany 
March 2024 
Kurt Marti

Contents 
1
Stochastic Optimization Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1 
1.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2 
1.2
Deterministic Substitute Problems: Basic Formulation . . . . . . . . .
4 
1.2.1
Minimum or Bounded Expected Costs . . . . . . . . . . . . . . .
5 
1.2.2
Minimum or Bounded Maximum Costs (Worst 
Case) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7 
1.3
Optimal Decision/Design Problems with Random 
Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
8 
1.4
Deterministic Substitute Problems in Optimal Decision/ 
Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
12 
1.4.1
Expected Cost or Loss Functions . . . . . . . . . . . . . . . . . . . .
14 
1.5
Basic Properties of Deterministic Substitute Problems . . . . . . . . .
15 
1.6
Approximations of Deterministic Substitute Problems 
in Optimal Design/Decision . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
17 
1.6.1
Approximation of the Loss Function . . . . . . . . . . . . . . . . .
18 
1.6.2
Approximation of State (Performance) Functions . . . . . .
20 
1.6.3
Taylor Expansion Methods . . . . . . . . . . . . . . . . . . . . . . . . .
25 
1.7
Approximation of Probabilities—Probability Inequalities . . . . . .
28 
1.7.1
Bonferroni-Type Inequalities . . . . . . . . . . . . . . . . . . . . . . .
28 
1.7.2
Tschebyscheff-Type Inequalities . . . . . . . . . . . . . . . . . . . .
30 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
35 
2
Solution of Stochastic Linear Programs by Discretization 
Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
37 
2.1
A Priori Error Bounds . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
38 
2.2
Disretization and Error Bounds . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
39 
2.2.1
Special Representations of the Random Matrix
l
ef t parenth
esis upper T left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesis
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
44
vii

viii
Contents
2.3
Approximations of upper F with a Given Error Level epsilon
. . . . . . . . . . . . .
49 
2.4
Norm Bounds for Optimal Solutions of (2.2a)–(2.2c) . . . . . . . . . .
50 
2.5
Invariant Discretizations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
54 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
57 
3
Optimal Control Under Stochastic Uncertainty . . . . . . . . . . . . . . . . . .
59 
3.1
Stochastic Control Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
60 
3.1.1
Random Differential and Integral Equations . . . . . . . . . .
61 
3.1.2
Objective Function . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
67 
3.2
Control Laws . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
71 
3.3
Convex Approximation by Inner Linearization . . . . . . . . . . . . . . . .
74 
3.4
Computation of Directional Derivatives . . . . . . . . . . . . . . . . . . . . . .
80 
3.5
Canonical (Hamiltonian) System of Differential Equations/ 
Two-Point Boundary Value Problem . . . . . . . . . . . . . . . . . . . . . . . .
88 
3.6
Stationary Controls . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
90 
3.7
Canonical (Hamiltonian) System of Differential . . . . . . . . . . . . . .
93 
3.8
Computation of Expectations by Means of Taylor 
Expansions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
94 
3.8.1
Complete Taylor Expansion . . . . . . . . . . . . . . . . . . . . . . . .
96 
3.8.2
Inner or Partial Taylor Expansion . . . . . . . . . . . . . . . . . . .
97 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
100 
4
Random Search Methods for Global Optimization—Basics . . . . . . . .
103 
4.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
103 
4.2
The Convergence of the Basic Random Search Procedure . . . . . .
105 
4.2.1
Discrete Optimization Problems . . . . . . . . . . . . . . . . . . . .
108 
4.3
Adaptive Random Search Methods . . . . . . . . . . . . . . . . . . . . . . . . . .
109 
4.3.1
Inﬁnite-Stage Search Processes . . . . . . . . . . . . . . . . . . . . .
114 
4.4
Convex Problems
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
115 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
117 
5
Controlled Random Search Methods as a Stochastic Decision 
Process . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
119 
5.1
The Controlled (or Adaptive) Random Search Method . . . . . . . . .
119 
5.1.1
The Convergence of the Controlled Random 
Search Procedure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
123 
5.1.2
A Stopping Rule . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
125 
5.2
Computation of the Conditional Distribution of upper F Given 
the Process History: Information Processing . . . . . . . . . . . . . . . . . .
126 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
129 
6
Applications to Random Search Methods with Joint Normal 
Search Variates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
131 
6.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
131 
6.2
Convergence of the Random Search Procedure (6.2) . . . . . . . . . . .
133 
6.3
Controlled Random Search Methods . . . . . . . . . . . . . . . . . . . . . . . .
135 
6.4
Computation of Optimal Controls . . . . . . . . . . . . . . . . . . . . . . . . . . .
136

Contents
ix
6.5
Convergence Rates of Controlled Random Search 
Procedures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
139 
6.6
Numerical Realizations of Optimal Control Laws . . . . . . . . . . . . .
141 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
146 
7
Random Search Methods with Multiple Search Points . . . . . . . . . . . .
147 
7.1
Standard RSM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
147 
7.2
Multiple RSM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
148 
7.3
Probability of Failure, Probability of Success . . . . . . . . . . . . . . . . .
149 
7.3.1
Monotonicity of the Probability Functions p Su bscript f Baseline comma p Subscript s Baseline
. . . . .
151 
7.3.2
Asymptotic Behavior in Case of i.i.d. Search 
Variables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
152 
7.3.3
Estimation of p Subscript f and p Subscript s in Case of Arbitrary 
Stochastically Independent Search Variables 
upper Y S ubscript t comma j Baseline equals upper Y Subscript j . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
152 
7.4
Reachability Results Multiple RSM . . . . . . . . . . . . . . . . . . . . . . . . .
154 
7.5
Optimal Search Point Among Multiple Search Variables . . . . . . .
158 
7.5.1
The Optimized Search Process . . . . . . . . . . . . . . . . . . . . . .
158 
7.5.2
Probability of Reaching upper B Subscript epsilon from the Outside . . . . . . . . . .
159 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
160 
8
Approximation of Feedback Control Systems . . . . . . . . . . . . . . . . . . . .
161 
8.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
161 
8.2
Control Laws . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
162 
8.3
Linear State-Feedback Control Systems . . . . . . . . . . . . . . . . . . . . .
163 
8.3.1
Taylor Expansion of the Feedback Control System 
with Respect to the Gain Matrix up per G  equals left parenthesis g Subscript i j Baseline right parenthesis . . . . . . . . . . .
164 
8.3.2
Time-Dependent Gain Matrices . . . . . . . . . . . . . . . . . . . . .
167 
8.4
Optimal Feedback Control Problem . . . . . . . . . . . . . . . . . . . . . . . . .
169 
8.4.1
Stepwise Optimization of u 0 left parenthesis dot right parenthesis comma upper G . . . . . . . . . . . . . . . . . . .
170 
8.5
Approximation of Nonlinear Feedback Control Systems . . . . . . .
171 
8.6
Approximation Error . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
172 
8.7
Extensions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
173 
8.7.1
Special Representations of the Open-Loop (Prior) 
Control Function u 0 left parenthesis dot right parenthesis . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
174 
8.7.2
Nonlinear Feedback Function . . . . . . . . . . . . . . . . . . . . . . .
175 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
177 
9
Stochastic Optimal Open-Loop Feedback Control . . . . . . . . . . . . . . . .
179 
9.1
Dynamic Structural Systems Under Stochastic Uncertainty . . . . .
179 
9.1.1
Stochastic Optimal Structural Control: Active 
Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
179 
9.1.2
Stochastic Optimal Design of Regulators . . . . . . . . . . . . .
181 
9.1.3
Robust (Optimal) Open-Loop Feedback Control . . . . . . .
182 
9.1.4
Stochastic Optimal Open-Loop Feedback Control . . . . .
183

x
Contents
9.2
Expected Total Cost Function . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
184 
9.3
Open-Loop Control Problem on the Remaining Time 
Interval left br ac ket t Subscript b Baseline comma t Subscript f Baseline right bracket . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
185 
9.4
The Stochastic Hamiltonian of (9.7a)–(9.7d) . . . . . . . . . . . . . . . . .
185 
9.4.1
Expected Hamiltonian (with Respect to the Time 
Interval left br ac ket t Subscript b Baseline comma t Subscript f Baseline right bracketand Information German upper A Subscript t Sub Subscript b) . . . . . . . . . . . . . . . . .
186 
9.4.2
upper H-Minimal Control on left br ac ket t Subscript b Baseline comma t Subscript f Baseline right bracket . . . . . . . . . . . . . . . . . . . . . .
186 
9.5
Canonical (Hamiltonian) System . . . . . . . . . . . . . . . . . . . . . . . . . . .
187 
9.6
Minimum-Energy Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
188 
9.6.1
Endpoint Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
189 
9.6.2
Endpoint Control with Different Cost Functions . . . . . . .
192 
9.6.3
Weighted Quadratic Terminal Costs . . . . . . . . . . . . . . . . .
194 
9.7
Nonzero Costs for Displacements . . . . . . . . . . . . . . . . . . . . . . . . . . .
197 
9.7.1
Quadratic Control and Terminal Costs . . . . . . . . . . . . . . .
199 
9.8
Stochastic Weight Matrix up per Q equals upper Q left parenthesis t comma omega right parenthesis . . . . . . . . . . . . . . . . . . . . . .
202 
9.9
Uniformly Bounded Sets of Controls uper D Subs crip t t Baseline comma t 0 less than or equals t less than or equals t Subscript f Baseline
. . . . . . . . . .
206 
9.10 
Approximate Solution of the Two-Point Boundary Value 
Problem (BVP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
210 
9.10.1 
Approximate Solution of the Fixed Point Eq. (9.75) . . . .
211 
9.11 
Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
213 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
216 
10 
Adaptive Optimal Stochastic Trajectory Planning and Control 
(AOSTPC) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
219 
10.1 
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
219 
10.2 
Optimal Trajectory Planning for Robots . . . . . . . . . . . . . . . . . . . . .
221 
10.3 
Problem Transformation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
224 
10.3.1 
Transformation of the Dynamic Equation . . . . . . . . . . . . .
226 
10.3.2 
Transformation of the Control Constraints . . . . . . . . . . . .
227 
10.3.3 
Transformation of the State Constraints . . . . . . . . . . . . . .
228 
10.3.4 
Transformation of the Objective Function . . . . . . . . . . . .
229 
10.4 
OSTP—Optimal Stochastic Trajectory Planning . . . . . . . . . . . . . .
230 
10.4.1 
Computational Aspects . . . . . . . . . . . . . . . . . . . . . . . . . . . .
236 
10.4.2 
Optimal Reference Trajectory, Optimal 
Feedforward Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
241 
10.5 
AOSTP—Adaptive Optimal Stochastic Trajectory Planning . . . .
242 
10.5.1 
(OSTP)-Transformation . . . . . . . . . . . . . . . . . . . . . . . . . . .
246 
10.5.2 
The Reference Variational Problem . . . . . . . . . . . . . . . . . .
247 
10.5.3 
Numerical Solutions of (OSTP) in Real-Time . . . . . . . . .
250 
10.6 
Online Control Corrections: PD-Controller . . . . . . . . . . . . . . . . . . .
256 
10.6.1 
Basic Properties of the Embedding q le ft parenthesis t comma epsilon right parenthesis . . . . . . . . . . . .
258 
10.6.2 
The First-Order Differential d q . . . . . . . . . . . . . . . . . . . . .
260 
10.6.3 
The Second-Order Differential d squared q . . . . . . . . . . . . . . . . . .
267 
10.6.4 
Third and Higher Order Differentials . . . . . . . . . . . . . . . .
270

Contents
xi
10.7 
Online Control Corrections: PID Controllers . . . . . . . . . . . . . . . . .
272 
10.7.1 
Basic Properties of the Embedding q le ft parenthesis t comma epsilon right parenthesis . . . . . . . . . . . .
274 
10.7.2 
Taylor Expansion with Respect to epsilon
. . . . . . . . . . . . . . . . .
275 
10.7.3 
The First-Order Differential d q . . . . . . . . . . . . . . . . . . . . .
276 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
291 
11 
Machine Learning Under Stochastic Uncertainty . . . . . . . . . . . . . . . . .
295 
11.1 
Foundations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
295 
11.2 
Stochastic Optimization Methods in Machine Learning . . . . . . . .
298 
11.2.1 
Least Squares Estimation of the Parameter Vector . . . . .
298 
11.3 
Estimation with Sublinear Loss Function q equals q left parenthesis z right parenthesis . . . . . . . . . . . .
299 
11.3.1 
Representation by a Stochastic Linear 
Optimization Problem (SLOP) . . . . . . . . . . . . . . . . . . . . . .
300 
11.3.2 
Numerical Solution of the (SLOP) . . . . . . . . . . . . . . . . . .
302 
11.3.3 
Two-Stage Stochastic Linear Programs (SLP) . . . . . . . . .
303 
11.4 
Two and Multiple Group Classiﬁcation Under Stochastic 
Uncertainty . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
305 
11.4.1 
Two Classes lef t paren thesis upper J equals 2 comma upper L equals 1 right parenthesis . . . . . . . . . . . . . . . . . . . . . . .
306 
11.5 
Multi-classiﬁcation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
310 
11.5.1 
Reduction of a Multi-classiﬁer to Several 
Two-Class Classiﬁers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
311 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
312 
12 
Stochastic Structural Optimization with Quadratic Loss 
Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
313 
12.1 
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
314 
12.2 
State and Cost Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
317 
12.2.1 
Cost Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
321 
12.3 
Minimum Expected Quadratic Costs . . . . . . . . . . . . . . . . . . . . . . . .
323 
12.4 
Deterministic Substitute Problems . . . . . . . . . . . . . . . . . . . . . . . . . .
328 
12.4.1 
Weight (Volume)-Minimization Subject 
to Expected Cost Constraints . . . . . . . . . . . . . . . . . . . . . . .
329 
12.4.2 
Minimum Expected Total Costs . . . . . . . . . . . . . . . . . . . . .
331 
12.5 
Stochastic Nonlinear Programming . . . . . . . . . . . . . . . . . . . . . . . . .
332 
12.5.1 
Symmetric, Non-uniform Yield Stresses . . . . . . . . . . . . . .
335 
12.5.2 
Non Symmetric Yield Stresses . . . . . . . . . . . . . . . . . . . . . .
337 
12.6 
Reliability Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
339 
12.7 
Numerical Example: 12-Bar Truss . . . . . . . . . . . . . . . . . . . . . . . . . .
342 
12.7.1 
Numerical Results: MEC . . . . . . . . . . . . . . . . . . . . . . . . . .
344 
12.7.2 
Numerical Results: ECBO . . . . . . . . . . . . . . . . . . . . . . . . .
345 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
346

xii
Contents
13 
Maximum Entropy Techniques . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
347 
13.1 
Uncertainty Functions Based on Decision Problems . . . . . . . . . . .
348 
13.1.1 
Optimal Decisions Based on the Two-Stage 
Hypothesis Finding (Estimation) 
and Decision-Making Procedure . . . . . . . . . . . . . . . . . . . .
348 
13.1.2 
Stability/Instability Properties . . . . . . . . . . . . . . . . . . . . . .
353 
13.2 
The Generalized Inaccuracy Function upper H left parenthesis lamda comma beta right parenthesis . . . . . . . . . . . . . . .
356 
13.2.1 
Special Loss Sets upper V . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
358 
13.2.2 
Representation of upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisand upper H left parenthesis lamda comma beta right parenthesis
by Means of Lagrange Duality . . . . . . . . . . . . . . . . . . . . . .
367 
13.3 
Generalized Divergence and Generalized Minimum 
Discrimination Information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
370 
13.3.1 
Generalized Divergence . . . . . . . . . . . . . . . . . . . . . . . . . . .
370 
13.3.2
upper I-, upper J-Projections . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
376 
13.3.3 
Minimum Discrimination Information . . . . . . . . . . . . . . .
378 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
380 
Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
381

Chapter 1 
Stochastic Optimization Methods 
Abstract Basic methods for treating stochastic optimization problems (SOP), 
hence, optimization problems with random data are presented: Optimization prob-
lems in practice depend mostly on several model parameters, noise factors, uncon-
trollable parameters, etc., which are not given ﬁxed quantities at the planning stage. 
Typical examples from engineering and economics/operations research are: Material 
parameters (e.g., elasticity moduli, yield stresses, allowable stresses, moment capac-
ities, speciﬁc gravity), external loadings, friction coefﬁcients, moments of inertia, 
length of links, mass of links, location of the center of gravity of links, manufactur-
ing errors, tolerances, noise terms, demand parameters, technological coefﬁcients in 
input-output functions, cost factors, interest rates, exchange rates, etc. Due to sev-
eral types of stochastic uncertainties (physical uncertainty, economic uncertainty, 
statistical uncertainty, model uncertainty) these parameters must be modeled by ran-
dom variables having a certain probability distribution. In most cases at least certain 
moments of this distribution are known.n order to cope with these uncertainties, a 
basic procedure in the engineering/economic practice is to replace ﬁrst the unknown 
parameters by some chosen nominal values, e.g., estimates, guesses, of the parame-
ters. Then, the resulting and mostly increasing deviation of the performance (output, 
behavior) of the structure/system from the prescribed performance (output, behavior), 
i.e., the tracking error, is compensated by (online) input corrections. However, the 
online correction of a system/structure is often time consuming and causes mostly 
increasing expenses (correction or recourse costs). Very large recourse costs may 
arise in case of damages or failures of the plant. This can be omitted to a large extent 
by taking into account already at the planning stage the possible consequences of the 
tracking errors and the known prior and sample information about the random data 
of the problem. Hence, instead of relying on ordinary deterministic parameter opti-
mization methods - based on some nominal parameter values—and applying then 
just some correction actions, stochastic optimization methods should be applied: 
Incorporating stochastic parameter variations into the optimization process, expen-
sive and increasing online correction expenses can be omitted or at least reduced to a 
large extent. Consequently, for the computation of robust optimal decisions/designs, 
i.e., optimal decisions which are insensitive with respect to random parameter varia-
tions, appropriate deterministic substitute problems must be formulated ﬁrst. Based 
on decision theoretical principles, these substitute problems depend on probabilities 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_1 
1

2
1
Stochastic Optimization Methods
of failure/success and/or on more general expected cost/loss terms. Two basic types 
of deterministic substitute problems occur mostly in practice: 
• Reliability-Based Optimization Problems: primary cost minimization subject to 
expected recourse (correction) cost constraints: Minimization of the expected pri-
mary costs subject to expected recourse cost constraints (reliability constraints) 
and remaining deterministic constraints, e.g., box constraints. In case of piece-
wise constant cost functions, probabilistic objective functions and/or probabilistic 
constraints occur; 
• Expected Total Cost Minimization Problems: Minimization of the expected total 
costs (costs of construction, design, recourse/correction, repair costs, etc.) subject 
to the remaining deterministic constraints. 
Since probabilities and expectations are deﬁned by multiple integrals in general, the 
resulting often nonlinear and also non-convex deterministic substitute problems can 
be solved by approximate methods only. 
1.1 
Introduction 
Many concrete problems from engineering, economics, operations research, etc., can 
be formulated by an optimization problem of the type 
StartLayout 1st Row 1st Column min 2nd Column f 0 left parenthesis a comma x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column f Subscript i Baseline left parenthesis a comma x right parenthesis less than or equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column g Subscript i Baseline left parenthesis a comma x right parenthesis equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript g Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayoutmin
f0(a, x)
(1.1a) 
StartLayout 1st Row 1st Column min 2nd Column f 0 left parenthesis a comma x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column f Subscript i Baseline left parenthesis a comma x right parenthesis less than or equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column g Subscript i Baseline left parenthesis a comma x right parenthesis equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript g Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayouts.t.
fi(a, x) ≤0,
i = 1, . . . , m f
(1.1b) 
StartLayout 1st Row 1st Column min 2nd Column f 0 left parenthesis a comma x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column f Subscript i Baseline left parenthesis a comma x right parenthesis less than or equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column g Subscript i Baseline left parenthesis a comma x right parenthesis equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript g Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayoutgi(a, x) = 0,
i = 1, . . . , mg
(1.1c) 
StartLayout 1st Row 1st Column min 2nd Column f 0 left parenthesis a comma x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column f Subscript i Baseline left parenthesis a comma x right parenthesis less than or equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column g Subscript i Baseline left parenthesis a comma x right parenthesis equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript g Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayoutx ∈D0.
(1.1d) 
Here, the objective (goal) function f 0 equals f 0 left parenthesis a comma x right parenthesis f0 = f0(a, x) and the constraint functions 
f Subscript i Baseline equals f Subscript i Baseline left parenthesis a comma x right parenthesis comma i equals 1 comma ellipsis comma m Subscript f Baseline fi = fi(a, x), i = 1, . . . , m f and g Subscript i Baseline equals g Subscript i Baseline left parenthesis a comma x right parenthesis comma i equals 1 comma ellipsis comma m Subscript g Baseline commagi = gi(a, x), i = 1, . . . , mg, deﬁned on a joint 
subset of double struck upper R Superscript nu Baseline times double struck upper R Superscript rRν × Rr, depend on a decision, design, control orinput vector x equals left parenthesis x 1 comma x 2 comma ellipsis comma x Subscript r Baseline right parenthesis Superscript upper Tx =
(x1, x2, . . . , xr)T and a vector a equals left parenthesis a 1 comma a 2 comma ellipsis comma a Subscript nu Baseline right parenthesis Superscript upper Ta = (a1, a2, . . . , aν)T ofmodel parameters. Typical 
model parameters in technical applications, operations research, and economics are 
material parameters, external load parameters, cost factors, technological parameters 
in input-output operators, demand factors. Furthermore, manufacturing and model-
ing errors, disturbances or noise factors, etc., may occur. Frequent decision, control, 
or input variables are material, topological, geometrical and cross-sectional design 
variables in structural optimization [ 23], forces and moments in optimal control of 
dynamic systems and factors of production in operations research and economic 
design. 
The objective function (1.1a) to be optimized describes the aim, the goal of the 
modeled optimal decision/design problem or the performance of a technical, eco-
nomic system or process to be controlled optimally. Furthermore, the constraints

1.1 Introduction
3
(1.1b)–(1.1d) represent the operating conditions guaranteeing a safe structure, a cor-
rect functioning of the underlying system, process, etc. Note that the constraint (1.1d) 
with a given, ﬁxed convex subsetupper D 0 subset of double struck upper R Superscript rD0 ⊂Rr summarizes all (deterministic) constraints 
being independent of unknown model parameters aa, as, e.g., box constraints: 
x Superscript upper L Baseline less than or equals x less than or equals x Superscript upper Ux L ≤x ≤xU
(1.1e) 
with given bounds x Superscript upper L Baseline comma x Superscript upper Ux L, xU. 
Important concrete optimization problems, which may be formulated, at least 
approximate, this way, are problems from optimal design of mechanical structures 
and structural systems [ 1, 23, 43, 48], adaptive trajectory planning for robots [ 2, 
3, 14, 30, 37, 45], adaptive control of dynamic system [ 46, 47], optimal design of 
economic systems [ 22], production planning, manufacturing [ 26, 38] and sequential 
decision processes [ 34], etc. 
In optimal control, cf. Chap. 3, the input vector x colon equals u left parenthesis dot right parenthesisx := u(·) is interpreted as a 
function, a control or input function u equals u left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline commau = u(t), t0 ≤t ≤t f , on a certain given time 
interval left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. Moreover, see Chap. 3, the objective function f 0 equals f 0 left parenthesis a comma u left parenthesis dot right parenthesis right parenthesis f0 = f0(a, u(·)) is 
deﬁned by a certain integral over the time intervalleft bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. In addition, the constraint 
functionsf Subscript j Baseline equals f Subscript j Baseline left parenthesis a comma u left parenthesis dot right parenthesis right parenthesis f j = f j(a, u(·))are deﬁned by integrals overleft bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ],orf Subscript j Baseline equals f Subscript j Baseline left parenthesis t comma a comma u left parenthesis t right parenthesis right parenthesis f j = f j(t, a, u(t))
may be functions of time tt and the control input u left parenthesis t right parenthesisu(t) at time tt. 
A basic problem in practice is that the vector of model parameters a equals left parenthesis a 1 comma ellipsis comma a Subscript nu Baseline right parenthesis Superscript upper Ta = (a1, . . . ,
aν)T is not a given, ﬁxed quantity. Model parameters are often unknown, only partly 
known and/or may vary randomly to some extent. 
Several techniques have been developed in the recent years in order to cope with 
uncertainty with respect to model parameters aa. A well-known basic method, often 
used in engineering practice, is the following two-step procedure [ 3, 14, 37, 45, 46]: 
(I) Parameter Estimation and Approximation: 
First, replace ﬁrst the nuν-vector aa of the unknown or stochastic varying model 
parameters a 1 comma ellipsis comma a Subscript nu Baselinea1, . . . , aν by some estimated/chosen ﬁxed vector a 0a0 of so-called 
nominal values a Subscript 0 l Baseline comma l equals 1 comma ellipsis comma nua0l,l = 1, . . . , ν. 
Then, apply an optimal decision (control)x Superscript asterisk Baseline equals x Superscript asterisk Baseline left parenthesis a 0 right parenthesisx∗= x∗(a0) with respect to the result-
ing approximate optimization problem 
StartLayout 1st Row 1st Column min 2nd Column f 0 left parenthesis a 0 comma x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column f Subscript i Baseline left parenthesis a 0 comma x right parenthesis less than or equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column g Subscript i Baseline left parenthesis a 0 comma x right parenthesis equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript g Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayoutmin
f0(a0, x)
(1.2a) 
StartLayout 1st Row 1st Column min 2nd Column f 0 left parenthesis a 0 comma x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column f Subscript i Baseline left parenthesis a 0 comma x right parenthesis less than or equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column g Subscript i Baseline left parenthesis a 0 comma x right parenthesis equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript g Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayouts.t.
fi(a0, x) ≤0,
i = 1, . . . , m f
(1.2b) 
StartLayout 1st Row 1st Column min 2nd Column f 0 left parenthesis a 0 comma x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column f Subscript i Baseline left parenthesis a 0 comma x right parenthesis less than or equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column g Subscript i Baseline left parenthesis a 0 comma x right parenthesis equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript g Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayoutgi(a0, x) = 0,
i = 1, . . . , mg
(1.2c) 
StartLayout 1st Row 1st Column min 2nd Column f 0 left parenthesis a 0 comma x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column f Subscript i Baseline left parenthesis a 0 comma x right parenthesis less than or equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column g Subscript i Baseline left parenthesis a 0 comma x right parenthesis equals 0 comma 3rd Column Blank 4th Column i equals 1 comma ellipsis comma m Subscript g Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayoutx ∈D0.
(1.2d) 
Due to the deviation of the actual parameter vector aa from the nominal vector 
a 0a0 of model parameters, deviations of the actual state, trajectory or performance 
of the system from the prescribed state, trajectory, goal values occur.

4
1
Stochastic Optimization Methods
(II) Compensation or correction: 
Then, the deviation of the actual state, trajectory or performance of the system 
from the prescribed values/functions is compensated by online measurement and 
correction actions (decisions or controls). Consequently, in general, increasing 
measurement and correction expenses result in course of time. 
Considerable improvements of this standard procedure can be obtained by taking 
into account already at the planning stage, i.e., ofﬂine, the mostly available a priori 
(e.g., the type of random variability) and sample information about the parameter 
vectoraa. Indeed, based, e.g., on some structural insight, or by parameter identiﬁcation 
methods, regression techniques, calibration methods, etc., in most cases information 
about the vectoraa of model parameters can be extracted. Repeating this information 
gathering procedure at some later time points t Subscript j Baseline greater than t 0t j > t0 (= initial time point), j equals 1 comma 2 comma ellipsis comma j =
1, 2, . . . , adaptive decision/control procedures occur [ 34]. 
Based on the inherent random nature of the parameter vector aa, the observation 
or measurement mechanism, resp., or adopting a Bayesian approach concerning 
unknown parameter values [ 6], here we make the following basic assumption: 
Stochastic (Probabilistic) Uncertainty : The unknown parameter vector aa is a 
realization 
a equals a left parenthesis omega right parenthesis omega element of normal upper Omega commaa = a(ω)ω ∈Ω,
(1.3) 
of a random nuν-vector a left parenthesis omega right parenthesisa(ω) on a certain probability space left parenthesis normal upper Omega comma script upper A 0 comma upper P right parenthesis(Ω, A0, P), where the 
probability distribution upper P Subscript a left parenthesis dot right parenthesisPa(·) of a left parenthesis omega right parenthesisa(ω) is known, or it is known that upper P Subscript a left parenthesis dot right parenthesisPa(·) lies within 
a given range upper WW of probability measures on double struck upper R Superscript nuRν. Using a Bayesian approach, the 
probability distribution upper P Subscript a left parenthesis dot right parenthesisPa(·) of a left parenthesis omega right parenthesisa(ω) may also describe the subjective or personal 
probability of the decision maker, the designer. 
Hence, in order to take into account the stochastic variations of the parameter 
vector aa, to incorporate the a priori and/or sample information about the unknown 
vector aa, resp., the standard approach “insert a certain nominal parameter vector 
a 0a0, and correct then the resulting error”, must be replaced by a more appropriate 
deterministic substitute problem for the basic optimization problem (1.1a)–(1.1d) 
under stochastic uncertainty. 
1.2 
Deterministic Substitute Problems: Basic Formulation 
The proper selection of a deterministic substitute problem is a decision theoretical 
task, see [ 27]. Hence, for (1.1a)–(1.1d) we have ﬁrst to consider the outcome map 
StartLayout 1st Row 1st Column e 2nd Column equals e left parenthesis a comma x right parenthesis 2nd Row 1st Column Blank 2nd Column colon equals left parenthesis f 0 left parenthesis a comma x right parenthesis comma f 1 left parenthesis a comma x right parenthesis comma ellipsis comma f Subscript m Sub Subscript f Subscript Baseline left parenthesis a comma x right parenthesis comma g 1 left parenthesis a comma x right parenthesis comma ellipsis comma g Subscript m Sub Subscript g Subscript Baseline left parenthesis a comma x right parenthesis right parenthesis Superscript upper T Baseline comma 3rd Row 1st Column a 2nd Column element of double struck upper R Superscript nu Baseline comma x element of double struck upper R Superscript r Baseline comma left parenthesis x element of upper D 0 right parenthesis comma EndLayoute = e(a, x)
:=
(
f0(a, x), f1(a, x), . . . , fm f (a, x), g1(a, x), . . . , gmg(a, x)
)T
,
(1.4a) 
a ∈ Rν , x ∈ Rr , (x ∈ D0),

1.2 Deterministic Substitute Problems: Basic Formulation
5
and to evaluate then the outcomes e element of script upper E subset of double struck upper R Superscript 1 plus m 0 Baseline comma m 0 colon equals m Subscript f Baseline plus m Subscript g Baseline commae ∈E ⊂R1+m0, m0 := m f + mg, by means of 
certain loss or cost functions 
StartLayout 1st Row 1st Column gamma Subscript i Baseline colon script upper E right arrow double struck upper R comma 2nd Column Blank 3rd Column i equals 0 comma 1 comma ellipsis comma m EndLayoutγi : E →R,
i = 0, 1, . . . , m
(1.4b) 
with an integerm greater than or equals 0m ≥0. For the processing of the numerical outcomesgamma Subscript i Baseline left parenthesis e left parenthesis a comma x right parenthesis right parenthesis comma i equals 0 comma 1 comma ellipsis comma mγi
(
e(a, x)
)
, i =
0, 1, . . . , m, there are two basic concepts: 
1.2.1 
Minimum or Bounded Expected Costs 
Consider the vector of (conditional) expected losses or costs 
StartLayout 1st Row 1st Column bold upper F left parenthesis x right parenthesis equals Start 4 By 1 Matrix 1st Row upper F 0 left parenthesis x right parenthesis 2nd Row upper F 1 left parenthesis x right parenthesis 3rd Row vertical ellipsis 4th Row upper F Subscript m Baseline left parenthesis x right parenthesis EndMatrix colon equals Start 4 By 1 Matrix 1st Row upper E gamma 0 left parenthesis e left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis 2nd Row upper E gamma 1 left parenthesis e left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis 3rd Row vertical ellipsis 4th Row upper E gamma Subscript m Baseline left parenthesis e left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis EndMatrix comma 2nd Column Blank 3rd Column x element of double struck upper R Superscript r Baseline comma EndLayoutF(x) =
⎛
⎜⎜⎜⎝
F0(x)
F1(x)
...
Fm(x)
⎞
⎟⎟⎟⎠:=
⎛
⎜⎜⎜⎝
Eγ0(e(a(ω), x))
Eγ1(e(a(ω), x))
...
Eγm(e(a(ω), x))
⎞
⎟⎟⎟⎠,
x ∈Rr,
(1.5) 
where the (conditional) expectation “upper EE” is taken with respect to the time history 
German upper A equals German upper A Subscript t Baseline comma left parenthesis German upper A Subscript j Baseline right parenthesis subset of German upper A 0A = At, (A j) ⊂A0 up to a certain time point tt or stage j j. A short deﬁnition of 
expectations is given in Sect. 1.3, for more details, see, e.g., [ 5, 18, 40]. 
Having different expected cost or performance functions upper F 0 comma upper F 1 comma ellipsis comma upper F Subscript m BaselineF0, F1, . . . , Fm to be 
minimized or bounded, as a basic deterministic substitute problem for (1.1a)–(1.1d) 
with a random parameter vector a equals a left parenthesis omega right parenthesisa = a(ω) we may consider the multi-objective 
expected cost minimization problem 
StartLayout 1st Row 1st Column left double quotation mark min right double quotation mark 2nd Column bold upper F left parenthesis x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D 0 period EndLayout“min” F(x)
(1.6a) 
StartLayout 1st Row 1st Column left double quotation mark min right double quotation mark 2nd Column bold upper F left parenthesis x right parenthesis 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D 0 period EndLayouts.t.
x ∈D0.
(1.6b) 
Obviously, a good compromise solution x Superscript asteriskx∗of this vector optimization problem 
should have at least one of the following properties [ 13, 41]: 
Deﬁnition 1.1 
(a) A vectorx Superscript 0 Baseline element of upper D 0x0 ∈D0 is called a functional-efﬁcient or Pareto optimal solution of 
the vector optimization problem (1.6a), (1.6b) if there is no x element of upper D 0x ∈D0 such that 
StartLayout 1st Row 1st Column Blank 2nd Column upper F Subscript i Baseline left parenthesis x right parenthesis less than or equals upper F Subscript i Baseline left parenthesis x Superscript 0 Baseline right parenthesis comma 3rd Column Blank 4th Column i equals 0 comma 1 comma ellipsis comma m EndLayoutFi(x) ≤Fi(x0),
i = 0, 1, . . . , m
(1.7a) 
and 
StartLayout 1st Row 1st Column Blank 2nd Column upper F Subscript i 0 Baseline left parenthesis x right parenthesis less than upper F Subscript i 0 Baseline left parenthesis x Superscript 0 Baseline right parenthesis 3rd Column Blank 4th Column for at least one i 0 comma 0 less than or equals i 0 less than or equals m period EndLayoutFi0(x) < Fi0(x0)
for at least one i0, 0 ≤i0 ≤m.
(1.7b)

6
1
Stochastic Optimization Methods
(b) A vectorx Superscript 0 Baseline element of upper D 0x0 ∈D0 is called a weak functional-efﬁcient or weak Pareto optimal 
solution of (1.6a)–(1.6b) if there is no x element of upper D 0x ∈D0 such that 
upper F Subscript i Baseline left parenthesis x right parenthesis less than upper F Subscript i Baseline left parenthesis x Superscript 0 Baseline right parenthesis comma i equals 0 comma 1 comma ellipsis comma mFi(x) < Fi(x0),
i = 0, 1, . . . , m
(1.8) 
(Weak) Pareto optimal solutions of (1.6a)–(1.6b) may be obtained now by means 
of scalarizations of the vector optimization problem (1.6a)–(1.6b). Three main ver-
sions are stated in the following: 
(I) Minimization of primary expected cost/loss under expected cost constraints 
StartLayout 1st Row 1st Column min 2nd Column upper F 0 left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper F Subscript i Baseline left parenthesis x right parenthesis less than or equals upper F Subscript i Superscript max Baseline comma i equals 1 comma ellipsis comma m 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayoutmin
F0(x)
(1.9a) 
StartLayout 1st Row 1st Column min 2nd Column upper F 0 left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper F Subscript i Baseline left parenthesis x right parenthesis less than or equals upper F Subscript i Superscript max Baseline comma i equals 1 comma ellipsis comma m 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayouts.t.
Fi(x) ≤Fmax
i
,
i = 1, . . . , m
(1.9b) 
StartLayout 1st Row 1st Column min 2nd Column upper F 0 left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper F Subscript i Baseline left parenthesis x right parenthesis less than or equals upper F Subscript i Superscript max Baseline comma i equals 1 comma ellipsis comma m 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D 0 period EndLayoutx ∈D0.
(1.9c) 
Here,upper F 0 equals upper F 0 left parenthesis x right parenthesisF0 = F0(x) is assumed to describe the primary goal of the design/decision-
making problem, while upper F Subscript i Baseline equals upper F Subscript i Baseline left parenthesis x right parenthesis comma i equals 1 comma ellipsis comma mFi = Fi(x), i = 1, . . . , m, describe secondary goals. 
Moreover, upper F Subscript i Superscript max Baseline comma i equals 1 comma ellipsis comma mFmax
i
, i = 1, . . . , m, denote given upper cost/loss bounds. 
Remark 1.1 An optimal solutionx Superscript asteriskx∗of (1.9a)–(1.9c) is a weak Pareto optimal solu-
tion of (1.6a)–(1.6b). 
(II) Minimization of the total weighted expected costs 
Selecting certain positive weight factors c 0 comma c 1 comma ellipsis comma c Subscript m Baselinec0, c1, . . . , cm, the expected weighted 
total costs are deﬁned by 
StartLayout 1st Row 1st Column ModifyingAbove upper F With tilde left parenthesis x right parenthesis 2nd Column colon equals sigma summation Underscript i equals 0 Overscript m Endscripts c Subscript i Baseline upper F Subscript i Baseline left parenthesis x right parenthesis equals upper E f left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma EndLayout ˜F(x) :=
m
∑
i=0
ci Fi(x) = E f
(
a(ω), x
)
,
(1.10a) 
where 
StartLayout 1st Row 1st Column f left parenthesis a comma x right parenthesis 2nd Column colon equals sigma summation Underscript i equals 0 Overscript m Endscripts c Subscript i Baseline gamma Subscript i Baseline left parenthesis e left parenthesis a comma x right parenthesis right parenthesis period EndLayout f (a, x) :=
m
∑
i=0
ciγi
(
e(a, x)
)
.
(1.10b) 
Consequently, minimizing the expected weighted total costsModifyingAbove upper F With tilde equals ModifyingAbove upper F With tilde left parenthesis x right parenthesis ˜F = ˜F(x) subject 
to the remaining deterministic constraint (1.1d), the following deterministic 
substitute problem for (1.1a)–(1.1d) occurs 
StartLayout 1st Row 1st Column min 2nd Column sigma summation Underscript i equals 0 Overscript m Endscripts c Subscript i Baseline upper F Subscript i Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D 0 period EndLayoutmin
m
∑
i=0
ci Fi(x)
(1.11a) 
StartLayout 1st Row 1st Column min 2nd Column sigma summation Underscript i equals 0 Overscript m Endscripts c Subscript i Baseline upper F Subscript i Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D 0 period EndLayouts.t.
x ∈D0.
(1.11b)

1.2 Deterministic Substitute Problems: Basic Formulation
7
Remark 1.2 Let c Subscript i Baseline greater than 0 comma i equals 1 comma 1 comma ellipsis comma mci > 0, i = 1, 1, . . . , m, be any positive weight factors. Then, an 
optimal solutionx Superscript asteriskx∗of (1.11a)–(1.11b) is a Pareto optimal solution of (1.6a)–(1.6b). 
(III) Minimization of the maximum weighted expected costs 
Instead of adding weighted expected costs, we may consider the maximum of 
the weighted expected costs: 
ModifyingAbove upper F With tilde left parenthesis x right parenthesis colon equals max Underscript 0 less than or equals i less than or equals m Endscripts c Subscript i Baseline upper F Subscript i Baseline left parenthesis x right parenthesis equals max Underscript 0 less than or equals i less than or equals m Endscripts c Subscript i Baseline upper E gamma Subscript i Baseline left parenthesis e left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis period ˜F(x) := max
0≤i≤m ci Fi(x) = max
0≤i≤m ci Eγi
(
e
(
a(ω), x
))
.
(1.12) 
Here again, c 0 comma c 1 comma ellipsis comma c Subscript m Baselinec0, c1, . . . , cm, are positive weight factors. 
Thus, minimizing ModifyingAbove upper F With tilde equals ModifyingAbove upper F With tilde left parenthesis x right parenthesis ˜F = ˜F(x) we have the deterministic substitute problem 
StartLayout 1st Row 1st Column min 2nd Column max Underscript 0 less than or equals i less than or equals m Endscripts c Subscript i upper F Subscript i Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D 0 period EndLayoutmin
max
0≤i≤m ci Fi(x)
(1.13a) 
StartLayout 1st Row 1st Column min 2nd Column max Underscript 0 less than or equals i less than or equals m Endscripts c Subscript i upper F Subscript i Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D 0 period EndLayouts.t.
x ∈D0.
(1.13b) 
Remark 1.3 Let c Subscript i Baseline comma i equals 0 comma 1 comma ellipsis comma mci, i = 0, 1, . . . , m, be any positive weight factors. An optimal 
solution ofx Superscript asteriskx∗of (1.13a)–(1.13b) is a weak Pareto optimal solution of (1.6a)–(1.6b). 
1.2.2 
Minimum or Bounded Maximum Costs (Worst Case) 
Instead of taking expectations, we may consider the worst case with respect to the 
cost variations caused by the random parameter vectora equals a left parenthesis omega right parenthesisa = a(ω). Hence, the random 
cost function 
omega right arrow gamma Subscript i Baseline left parenthesis e left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesisω →γi
(
e
(
a(ω), x
))
(1.14a) 
is evaluated by means of 
upper F Subscript i Superscript sup Baseline left parenthesis x right parenthesis colon equals e s s s u p gamma Subscript i Baseline left parenthesis e left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis comma i equals 0 comma 1 comma ellipsis comma m periodFsup
i
(x) := ess sup γi
(
e
(
a(ω), x
))
,
i = 0, 1, . . . , m.
(1.14b) 
Here, ess supleft parenthesis ellipsis right parenthesis(. . .) denotes the (conditional) essential supremum with respect to the 
random vectora equals a left parenthesis omega right parenthesisa = a(ω), given informationGerman upper AA, i.e., the inﬁmum of the supremum of 
(1.14a) on sets upper A element of German upper A 0A ∈A0 of (conditional) probability one, see, e.g., [ 40]. 
Consequently, the vector function bold upper F equals bold upper F Superscript sup Baseline left parenthesis x right parenthesisF = Fsup(x) is then deﬁned by 
bold upper F Superscript sup Baseline left parenthesis x right parenthesis equals Start 4 By 1 Matrix 1st Row upper F 0 left parenthesis x right parenthesis 2nd Row upper F 1 left parenthesis x right parenthesis 3rd Row vertical ellipsis 4th Row upper F Subscript m Baseline left parenthesis x right parenthesis EndMatrix colon equals Start 4 By 1 Matrix 1st Row e s s sup gamma 0 left parenthesis e left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis 2nd Row e s s sup gamma 1 left parenthesis e left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis 3rd Row vertical ellipsis 4th Row e s s sup gamma Subscript m Baseline left parenthesis e left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis EndMatrix periodFsup(x) =
⎛
⎜⎜⎜⎝
F0(x)
F1(x)
...
Fm(x)
⎞
⎟⎟⎟⎠:=
⎛
⎜⎜⎜⎜⎜⎜⎝
ess sup γ0
(
e
(
a(ω), x
))
ess sup γ1
(
e
(
a(ω), x
))
...
ess sup γm
(
e
(
a(ω), x
))
⎞
⎟⎟⎟⎟⎟⎟⎠
.
(1.15)

8
1
Stochastic Optimization Methods
Working with the vector functionbold upper F equals bold upper F Superscript sup Baseline left parenthesis x right parenthesisF = Fsup(x), we have then the vector minimization 
problem 
StartLayout 1st Row 1st Column left double quotation mark min right double quotation mark 2nd Column bold upper F Superscript sup Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D 0 period EndLayout“min” Fsup(x)
(1.16a) 
StartLayout 1st Row 1st Column left double quotation mark min right double quotation mark 2nd Column bold upper F Superscript sup Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D 0 period EndLayouts.t.
x ∈D0.
(1.16b) 
By scalarization of (1.16a)–(1.16b) we then obtain deterministic substitute prob-
lems for (1.1a)–(1.1d) related to the substitute problem (1.6a)–(1.6b) introduced in 
Sect. 1.2.1. 
More details on the selection and solution of appropriate deterministic substitute 
problems for (1.1a)–(1.1d) are given in the next sections. Deterministic substitute 
problems for optimal control problems under stochastic uncertainty are considered 
in Chap. 3. 
1.3 
Optimal Decision/Design Problems with Random 
Parameters 
In the optimal design of technical or economic structures/systems, in optimal decision 
problems arising in technical or economic systems, resp., two basic classes of criteria 
appear. 
First there is a primary cost function 
upper G 0 equals upper G 0 left parenthesis a comma x right parenthesis periodG0 = G0(a, x).
(1.17a) 
Important examples are the total weight or volume of a mechanical structure, the 
costs of construction, design of a certain technical or economic structure/system, 
or the negative utility or reward in a general decision situation. Basic examples in 
optimal control, cf. Chap. 3, are the total run time, the total energy consumption of 
the process or a weighted mean of these two cost functions. 
For the representation of the structural/system safety or failure, for the represen-
tation of the admissibility of the state, or for the formulation of the basic operating 
conditions of the , certain state, performance or response functions 
y Subscript i Baseline equals y Subscript i Baseline left parenthesis a comma x right parenthesis comma i equals 1 comma ellipsis comma m Subscript y Baselineyi = yi(a, x), i = 1, . . . , my
(1.17b) 
are chosen. In structural design these functions are also called “limit state func-
tions” or “safety margins”. Frequent examples are some displacement, stress, load 
(force and moment) components in structural design, or more general system output 
functions in engineering design. Furthermore, production functions and several cost 
functions are possible performance functions in production planning problems, opti-
mal mix problems, transportation problems, allocation problems and other problems 
of economic decision.

1.3 Optimal Decision/Design Problems with Random Parameters
9
In (1.17a,b), the design or input vector xx denotes the rr-vector of design or input 
variables, x 1 comma x 2 comma ellipsis comma x Subscript r Baselinex1, x2, . . . , xr, as, e.g., structural dimensions, sizing variables, such as 
cross-sectional areas, thickness in structural design, or factors of production, actions 
in economic decision problems. For the decision, design or input vector xx one has 
mostly some basic deterministic constraints, e.g., nonnegativity constraints, box con-
straints, represented by 
x element of upper D commax ∈D,
(1.17c) 
where upper DD is a given convex subset of double struck upper R Superscript rRr. Moreover, aa is the nuν-vector of model 
parameters. In optimal structural/engineering design 
a equals StartBinomialOrMatrix p Choose upper R EndBinomialOrMatrixa =
( p
R
)
(1.17d) 
is composed of the following two subvectors:upper RR is themm-vector of the acting external 
loads or structural/system inputs, e.g., wave, wind loads, payload, etc. Moreover, 
pp denotes the left parenthesis nu minus m right parenthesis(ν −m)-vector of the further model parameters, as, e.g., material 
parameters, like strength parameters, yield/allowable stresses, elastic moduli, plastic 
capacities, etc., of the members of a mechanical structure, parameters of an electric 
circuit, such as resistances, inductances, capacitances, the manufacturing tolerances 
and weight or more general cost coefﬁcients. 
In linear programming, as, e.g., in production planning problems, 
a equals left parenthesis upper A comma b comma c right parenthesisa = (A, b, c)
(1.17e) 
is composed of the m times rm × r matrix upper AA of technological coefﬁcients, the demand mm-
vector bb and the rr-vector cc of unit costs. 
Based on the m Subscript ymy-vector of state functions 
y left parenthesis a comma x right parenthesis colon equals left parenthesis y 1 left parenthesis a comma x right parenthesis comma y 2 left parenthesis a comma x right parenthesis comma ellipsis comma y Subscript m Sub Subscript y Subscript Baseline left parenthesis a comma x right parenthesis right parenthesis Superscript upper T Baseline commay(a, x) :=
(
y1(a, x), y2(a, x), . . . , ymy(a, x)
)T
,
(1.17f) 
the admissible or safe states of the structure/system can be characterized by the 
condition 
y left parenthesis a comma x right parenthesis element of upper B commay(a, x) ∈B,
(1.17g) 
where upper BB is a certain subset of double struck upper R Superscript m Super Subscript y Superscript Baseline semicolon upper B equals upper B left parenthesis a right parenthesisRmy; B = B(a) may depend also on some model 
parameters. 
In production planning problems, typical operating conditions are given, cf. 
(1.17e), by 
StartLayout 1st Row 1st Column y left parenthesis a comma x right parenthesis colon equals upper A x minus b greater than or equals 0 2nd Column Blank 3rd Column o r 4th Column Blank 5th Column y left parenthesis a comma x right parenthesis equals 0 comma x greater than or equals 0 period EndLayouty(a, x) := Ax −b ≥0
or
y(a, x) = 0, x ≥0.
(1.18a) 
In mechanical structures/structural systems, the safety (survival) of the struc-
ture/system is described by the operating conditions

10
1
Stochastic Optimization Methods
y Subscript i Baseline left parenthesis a comma x right parenthesis greater than 0 f o r a l l i equals 1 comma ellipsis comma m Subscript y Baselineyi(a, x) > 0
for all
i = 1, . . . , my
(1.18b) 
with state functions y Subscript i Baseline equals y Subscript i Baseline left parenthesis a comma x right parenthesis comma i equals 1 comma ellipsis comma m Subscript y Baselineyi = yi(a, x), i = 1, . . . , my, depending on certain response 
components of the structure/system, such as displacement, stress, force, moment 
components. 
Hence, a failure occurs if and only if the structure/system is in the ii-th failure 
mode (failure domain) 
y Subscript i Baseline left parenthesis a comma x right parenthesis less than or equals 0yi(a, x) ≤0
(1.18c) 
for at least one index i comma 1 less than or equals i less than or equals m Subscript y Baselinei, 1 ≤i ≤my. 
Note 1.1 The numberm Subscript ymy of safety margins or limit state functionsy Subscript i Baseline equals y Subscript i Baseline left parenthesis a comma x right parenthesis comma i equals 1 comma ellipsis comma m Subscript y Baselineyi = yi(a, x), i =
1, . . . , my, may be very large. For example, in optimal plastic design the limit state 
functions are determined by the extreme points of the admissible domain of the dual 
pair of static/kinematic LPs related to the equilibrium and linearized convex yield 
condition, see [ 32, 33]. 
Basic problems in optimal decision/design are 
(I) Primary (construction, planning, investment, etc.) cost minimization under oper-
ating or safety conditions 
StartLayout 1st Row 1st Column min 2nd Column upper G 0 left parenthesis a comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column y left parenthesis a comma x right parenthesis element of upper B 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayoutmin G0(a, x)
(1.19a) 
StartLayout 1st Row 1st Column min 2nd Column upper G 0 left parenthesis a comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column y left parenthesis a comma x right parenthesis element of upper B 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayouts.t.
y(a, x) ∈B
(1.19b) 
StartLayout 1st Row 1st Column min 2nd Column upper G 0 left parenthesis a comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column y left parenthesis a comma x right parenthesis element of upper B 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayoutx ∈D.
(1.19c) 
Obviously we have upper B equals left parenthesis 0 comma plus normal infinity right parenthesis Superscript m Super Subscript yB = (0, +∞)my in (1.18b) and upper B equals left bracket 0 comma plus normal infinity right parenthesis Superscript m Super Subscript yB = [0, +∞)my or upper B equals StartSet 0 EndSetB = {0} in 
(1.18a). 
(II) Failure or recourse cost minimization under primary cost constraints 
StartLayout 1st Row 1st Column left double quotation mark min right double quotation mark 2nd Column gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper G 0 left parenthesis a comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayout“min” γ
(
y(a, x)
)
(1.20a) 
StartLayout 1st Row 1st Column left double quotation mark min right double quotation mark 2nd Column gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper G 0 left parenthesis a comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayouts.t.
G0(a, x) ≤Gmax
(1.20b) 
StartLayout 1st Row 1st Column left double quotation mark min right double quotation mark 2nd Column gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper G 0 left parenthesis a comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayoutx ∈D.
(1.20c) 
In (1.20a) gamma equals gamma left parenthesis y right parenthesisγ = γ (y) is a scalar or vector valued cost/loss function evaluating viola-
tions of the operating conditions (1.19b). Depending on the application, these costs 
are called “failure” or “recourse” costs [ 20, 21, 31, 39, 43, 44]. As already discussed 
in Sect. 1.1, solving problems of the above type, a basic difﬁculty is the uncertainty 
about the true value of the vector aa of model parameters or the (random) variability 
of aa. In practice, due to several types of uncertainties such as, see [ 49],

1.3 Optimal Decision/Design Problems with Random Parameters
11
• physical uncertainty (variability of physical quantities, like material, loads, dimen-
sions, etc.) 
• economic uncertainty (trade, demand, costs, etc.) 
• statistical uncertainty (e.g., estimation errors of parameters due to limited sample 
data) 
• model uncertainty (model errors). 
The nuν-vector aa of model parameters must be modeled by a random vector 
a equals a left parenthesis omega right parenthesis comma omega element of normal upper Omega commaa = a(ω), ω ∈Ω,
(1.21a) 
on a certain probability space left parenthesis normal upper Omega comma German upper A 0 comma upper P right parenthesis(Ω, A0, P) with sample space normal upper OmegaΩ having elements omegaω, 
see (1.3). For the mathematical representation of the corresponding (conditional) 
probability distribution upper P Subscript a left parenthesis dot right parenthesis Baseline equals upper P Subscript a left parenthesis dot right parenthesis Superscript German upper APa(·) = PA
a(·) of the random vector a equals a left parenthesis omega right parenthesisa = a(ω) (given the time 
history or informationGerman upper A subset of German upper A 0A ⊂A0), two main distribution models are taken into account 
in practice: 
(i) Discrete probability distributions, 
(ii) Continuous probability distributions. 
In the ﬁrst case there is a ﬁnite or countably inﬁnite number l 0 element of double struck upper N union StartSet normal infinity EndSetl0 ∈N ∪{∞} of 
realizations or scenarios a Superscript l Baseline element of double struck upper R Superscript nu Baseline comma l equals 1 comma ellipsis comma l 0 commaal ∈Rν,
l = 1, . . . ,l0,
upper P left parenthesis a left parenthesis omega right parenthesis equals a Superscript l Baseline right parenthesis equals alpha Subscript l Baseline comma l equals 1 comma ellipsis comma l 0 commaP
(
a(ω) = al)
= αl,
l = 1, . . . ,l0,
(1.21b) 
taken with probabilities alpha Subscript l Baseline comma l equals 1 comma ellipsis comma l 0αl, l = 1, . . . ,l0. 
In the second case, the probability that the realization a left parenthesis omega right parenthesis equals aa(ω) = a lies in a certain 
(measurable) subset upper B subset of double struck upper R Superscript nuB ⊂Rν is described by the multiple integral 
upper P left parenthesis a left parenthesis omega right parenthesis element of upper B right parenthesis equals integral Underscript upper B Endscripts phi left parenthesis a right parenthesis d aP
(
a(ω) ∈B
)
=
{
B
ϕ(a) da
(1.21c) 
with a certain probability density function phi equals phi left parenthesis a right parenthesis greater than or equals 0 comma a element of double struck upper R Superscript nu Baseline comma integral phi left parenthesis a right parenthesis d a equals 1ϕ = ϕ(a) ≥0, a ∈Rν,
{
ϕ(a)da = 1. 
The properties of the probability distribution upper P Subscript a left parenthesis dot right parenthesisPa(·) may be described—fully or in 
part—by certain numerical characteristics, called parameters of upper P Subscript a left parenthesis dot right parenthesisPa(·). These distri-
bution parameters theta equals theta Subscript hθ = θh are obtained by considering expectations 
theta Subscript h Baseline colon equals upper E h left parenthesis a left parenthesis omega right parenthesis right parenthesisθh := Eh
(
a(ω)
)
(1.22a) 
of some (measurable) functions 
left parenthesis h degrees a right parenthesis left parenthesis omega right parenthesis colon equals h left parenthesis a left parenthesis omega right parenthesis right parenthesis(h ◦a)(ω) := h
(
a(ω)
)
(1.22b)

12
1
Stochastic Optimization Methods
composed of the random vector a equals a left parenthesis omega right parenthesisa = a(ω) with certain (measurable) mappings 
h colon double struck upper R Superscript nu Baseline long right arrow double struck upper R Superscript s Super Subscript h Superscript Baseline comma s Subscript h Baseline greater than or equals 1 periodh : Rν −→Rsh,
sh ≥1.
(1.22c) 
According to the type of the probability distributionupper P Subscript a left parenthesis dot right parenthesisPa(·) ofa equals a left parenthesis omega right parenthesisa = a(ω), the expec-
tation upper E h left parenthesis a left parenthesis omega right parenthesis right parenthesisEh
(
a(ω)
)
is deﬁned, cf. [ 4, 5], by 
upper E h left parenthesis a left parenthesis omega right parenthesis right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column sigma summation Underscript l equals 1 Overscript l 0 Endscripts h left parenthesis a Superscript l Baseline right parenthesis alpha Subscript l Baseline comma 2nd Column Blank 3rd Column i n t h e d i s c r e t e c a s e left parenthesis 1.21 b right parenthesis 2nd Row 1st Column integral Underscript double struck upper R Superscript nu Baseline Endscripts h left parenthesis a right parenthesis phi left parenthesis a right parenthesis d a comma 2nd Column Blank 3rd Column i n t h e c o n t i n u o u s c a s e left parenthesis 1.21 c right parenthesis period EndLayoutEh
(
a(ω)
)
=
⎧
⎪⎨
⎪⎩
l0∑
l=1
h
(
al)
αl,
in the discrete case (1.21b)
{
Rν h(a)ϕ(a) da, in the continuous case (1.21c).
(1.22d) 
Further distribution parameters thetaθ are functions 
theta equals normal upper Psi left parenthesis theta Subscript h 1 Baseline comma ellipsis comma theta Subscript h Sub Subscript s Subscript Baseline right parenthesisθ = ψ(θh1, . . . , θhs)
(1.23) 
of certain “hh-moments” theta Subscript h 1 Baseline comma ellipsis comma theta Subscript h Sub Subscript s Subscript Baselineθh1, . . . , θhs of the type (1.22a). Important examples of the 
type (1.22a), (1.23), resp., are the expectation 
ModifyingAbove a With quotation dash equals upper E a left parenthesis omega right parenthesis left parenthesis for h 1 left parenthesis a right parenthesis colon equals ModifyingAbove a With quotation dash comma ModifyingAbove a With quotation dash element of double struck upper R Superscript nu Baseline right parenthesisa = Ea(ω) (for h1(a) := a, a ∈Rν)
(1.24a) 
and the covariance matrix 
upper Q colon equals upper E left parenthesis a left parenthesis omega right parenthesis minus ModifyingAbove a With quotation dash right parenthesis left parenthesis a left parenthesis omega right parenthesis minus ModifyingAbove a With quotation dash right parenthesis Superscript upper T Baseline equals upper E a left parenthesis omega right parenthesis a left parenthesis omega right parenthesis Superscript upper T Baseline minus ModifyingAbove a With quotation dash ModifyingAbove a With quotation dash Superscript upper TQ := E
(
a(ω) −a
)(
a(ω) −a
)T
= Ea(ω)a(ω)T −a aT
(1.24b) 
of the random vector a equals a left parenthesis omega right parenthesisa = a(ω). 
Due to the stochastic variability of the random vector a left parenthesis dot right parenthesisa(·) of model parameters, 
and since the realizationa left parenthesis omega right parenthesis equals aa(ω) = a is not available at the decision-making stage, the 
optimal design problem (1.19a)–(1.19c) or  (1.20a)–(1.20c) under stochastic uncer-
tainty cannot be solved directly. 
Hence, appropriate deterministic substitute problems must be chosen taking into 
account the randomness of a equals a left parenthesis omega right parenthesisa = a(ω), cf. Sect. 1.2. 
1.4 
Deterministic Substitute Problems in Optimal 
Decision/Design 
According to Sect. 1.2, a basic deterministic substitute problem in optimal design 
under stochastic uncertainty is the minimization of the total expected costs including 
the expected costs of failure

1.4 Deterministic Substitute Problems in Optimal Decision/Design
13
StartLayout 1st Row 1st Column min 2nd Column c Subscript upper G Baseline dot upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis plus c Subscript f Baseline dot p Subscript f Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D period EndLayoutmin cG · EG0
(
a(ω), x
)
+ c f · p f (x)
(1.25a) 
StartLayout 1st Row 1st Column min 2nd Column c Subscript upper G Baseline dot upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis plus c Subscript f Baseline dot p Subscript f Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D period EndLayouts.t.
x ∈D.
(1.25b) 
Here, 
StartLayout 1st Row 1st Column p Subscript f Baseline equals 2nd Column p Subscript f Baseline left parenthesis x right parenthesis colon equals upper P left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis not an element of upper B right parenthesis EndLayoutp f =p f (x) := P
(
y
(
a(ω), x
)
/∈B
)
(1.25c) 
is the probability of failure or the probability that a safe function of the structure, 
the system is not guaranteed. Furthermore,c Subscript upper GcG is a certain weight factor, andc Subscript f Baseline greater than 0c f > 0
describes the failure or recourse costs. In the present deﬁnition of expected failure 
costs, constant costs for each realization a equals a left parenthesis omega right parenthesisa = a(ω) of a left parenthesis dot right parenthesisa(·) are assumed. Obviously, 
it is 
p Subscript f Baseline left parenthesis x right parenthesis equals 1 minus p Subscript s Baseline left parenthesis x right parenthesisp f (x) = 1 −ps(x)
(1.25d) 
with the probability of safety or survival 
p Subscript s Baseline left parenthesis x right parenthesis colon equals upper P left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis element of upper B right parenthesis periodps(x) := P
(
y
(
a(ω), x
)
∈B
)
.
(1.25e) 
In case (1.18b) we have  
p Subscript f Baseline left parenthesis x right parenthesis equals upper P left parenthesis y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals 0 f o r a t l e a s t o n e i n d e x i comma 1 less than or equals i less than or equals m Subscript y Baseline right parenthesis periodp f (x) = P
(
yi
(
a(ω), x
)
≤0 for at least one index i, 1 ≤i ≤my
)
.
(1.25f) 
The objective function (1.25a) may be interpreted as the Lagrangian (with given 
cost multiplier c Subscript fc f ) of the following reliability-based optimization (RBO) problem, 
cf. [ 1, 29, 39, 43, 49]: 
StartLayout 1st Row 1st Column min 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 4th Row 1st Column Blank 2nd Column p Subscript f Baseline left parenthesis x right parenthesis less than or equals alpha Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D comma EndLayoutmin
EG0
(
a(ω), x
)
(1.26a) 
StartLayout 1st Row 1st Column min 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 4th Row 1st Column Blank 2nd Column p Subscript f Baseline left parenthesis x right parenthesis less than or equals alpha Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D comma EndLayouts.t.
p f (x) ≤αmax
(1.26b) 
StartLayout 1st Row 1st Column min 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 4th Row 1st Column Blank 2nd Column p Subscript f Baseline left parenthesis x right parenthesis less than or equals alpha Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D comma EndLayoutx ∈D,
(1.26c) 
wherealpha Superscript max Baseline greater than 0αmax > 0 is a prescribed maximum failure probability, e.g.,alpha Superscript max Baseline equals 0.001αmax = 0.001, cf.  
(1.19a)–(1.19c). 
The “dual” version of (1.26a)–(1.26c) reads 
StartLayout 1st Row 1st Column min 2nd Column p Subscript f Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D EndLayoutmin
p f (x)
(1.27a) 
StartLayout 1st Row 1st Column min 2nd Column p Subscript f Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D EndLayouts.t.
EG0
(
a(ω), x
)
≤Gmax
(1.27b) 
StartLayout 1st Row 1st Column min 2nd Column p Subscript f Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D EndLayoutx ∈D
(1.27c) 
with a maximal (upper) cost bound upper G Superscript maxGmax, see  (1.20a)–(1.20c).

14
1
Stochastic Optimization Methods
1.4.1 
Expected Cost or Loss Functions 
Further substitute problems are obtained by considering more general expected fail-
ure or recourse cost functions 
normal upper Gamma left parenthesis x right parenthesis equals upper E gamma left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis⎡(x) = Eγ
(
y
(
a(ω), x
))
(1.28a) 
arising from structural systems weakness or failure, or because of false operation. 
Here, 
y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis colon equals left parenthesis y 1 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma ellipsis comma y Subscript m Sub Subscript y Subscript Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis Superscript upper Ty
(
a(ω), x
)
:=
(
y1
(
a(ω), x
)
, . . . , ymy
(
a(ω), x
))T
(1.28b) 
is again the random vector of state or performance functions, and 
gamma colon double struck upper R Superscript m Super Subscript y Superscript Baseline right arrow double struck upper R Superscript m Super Subscript gamma Superscriptγ : Rmy →Rmγ
(1.28c) 
is a scalar or vector valued cost or loss function. In case upper B equals left parenthesis 0 comma plus normal infinity right parenthesis Superscript m Super Subscript yB = (0, +∞)my or upper B equals left bracket 0 comma plus normal infinity right parenthesis Superscript m Super Subscript yB =
[0, +∞)my it is often assumed that gamma equals gamma left parenthesis y right parenthesisγ = γ (y) is a non-increasing function, hence, 
gamma left parenthesis y right parenthesis greater than or equals gamma left parenthesis z right parenthesis comma i f y less than or equals z commaγ (y) ≥γ (z), if y ≤z,
(1.28d) 
where inequalities between vectors are deﬁned component-by-component. 
Example 1.1 If gamma left parenthesis y right parenthesis equals 1γ (y) = 1 for y element of upper B Superscript cy ∈Bc (complement of upper BB) and gamma left parenthesis y right parenthesis equals 0γ (y) = 0 for y element of upper By ∈B, 
then normal upper Gamma left parenthesis x right parenthesis equals p Subscript f Baseline left parenthesis x right parenthesis⎡(x) = p f (x). 
Example 1.2 Suppose that gamma equals gamma left parenthesis y right parenthesisγ = γ (y) is a nonnegative measurable scalar function 
on double struck upper R Superscript m Super Subscript yRmy such that 
gamma left parenthesis y right parenthesis greater than or equals gamma 0 greater than 0 f o r a l l y not an element of upper Bγ (y) ≥γ0 > 0 for all y /∈B
(1.29a) 
with a constant gamma 0 greater than 0γ0 > 0. Then for the probability of failure we ﬁnd the following 
upper bound 
p Subscript f Baseline left parenthesis x right parenthesis equals upper P left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis not an element of upper B right parenthesis less than or equals StartFraction 1 Over gamma 0 EndFraction upper E gamma left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis commap f (x) = P
(
y
(
a(ω), x
)
/∈B
)
≤1
γ0
Eγ
(
y
(
a(ω), x
))
,
(1.29b) 
where the right-hand side of (1.29b) is obviously an expected cost function of type 
(1.28a)–(1.28c). Hence, the condition (1.26b) can be guaranteed by the expected cost 
constraint 
upper E gamma left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis less than or equals gamma 0 alpha Superscript max Baseline periodEγ
(
y
(
a(ω), x
))
≤γ0αmax.
(1.29c) 
Example 1.3 If the loss function gamma left parenthesis y right parenthesisγ (y) is deﬁned by a vector of individual loss 
functions gamma Subscript iγi for each state function y Subscript i Baseline equals y Subscript i Baseline left parenthesis a comma x right parenthesis comma i equals 1 comma ellipsis comma m Subscript y Baselineyi = yi(a, x), i = 1, . . . , my, hence, 
gamma left parenthesis y right parenthesis equals left parenthesis gamma 1 left parenthesis y 1 right parenthesis comma ellipsis comma gamma Subscript m Sub Subscript y Subscript Baseline left parenthesis y Subscript m Sub Subscript y Subscript Baseline right parenthesis right parenthesis Superscript upper T Baseline commaγ (y) =
(
γ1(y1), . . . , γmy(ymy)
)T
,
(1.30a)

1.5 Basic Properties of Deterministic Substitute Problems
15
then 
normal upper Gamma left parenthesis x right parenthesis equals left parenthesis normal upper Gamma 1 left parenthesis x right parenthesis comma ellipsis comma normal upper Gamma Subscript m Sub Subscript y Subscript Baseline left parenthesis x right parenthesis right parenthesis Superscript upper T Baseline comma normal upper Gamma Subscript i Baseline left parenthesis x right parenthesis colon equals upper E gamma Subscript i Baseline left parenthesis y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis comma 1 less than or equals i less than or equals m Subscript y Baseline comma⎡(x) =
(
⎡1(x), . . . , ⎡my(x)
)T , ⎡i(x) := Eγi
(
yi
(
a(ω), x
))
, 1 ≤i ≤my,
(1.30b) 
i.e., the m Subscript ymy state functions y Subscript i Baseline comma i equals 1 comma ellipsis comma m Subscript y Baseline commayi, i = 1, . . . , my, will be treated separately. 
Working with the more general expected failure or recourse cost functions normal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis⎡=
⎡(x), instead of (1.25a)–(1.25c), (1.26a)–(1.26c) and (1.27a)–(1.27c) we have the  
related substitute problems: 
(I) Expected total cost minimization 
StartLayout 1st Row 1st Column min 2nd Column c Subscript upper G Baseline upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis plus c Subscript f Superscript upper T Baseline normal upper Gamma left parenthesis x right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D period EndLayoutmin cG EG0
(
a(ω), x
)
+ cT
f ⎡(x),
(1.31a) 
StartLayout 1st Row 1st Column min 2nd Column c Subscript upper G Baseline upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis plus c Subscript f Superscript upper T Baseline normal upper Gamma left parenthesis x right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column x element of upper D period EndLayouts.t.
x ∈D.
(1.31b) 
(II) Expected primary cost minimization under expected failure or recourse cost 
constraints 
StartLayout 1st Row 1st Column min 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column normal upper Gamma left parenthesis x right parenthesis less than or equals normal upper Gamma Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D comma EndLayoutmin
EG0
(
a(ω), x
)
(1.32a) 
StartLayout 1st Row 1st Column min 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column normal upper Gamma left parenthesis x right parenthesis less than or equals normal upper Gamma Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D comma EndLayouts.t.
⎡(x) ≤⎡max
(1.32b) 
StartLayout 1st Row 1st Column min 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column normal upper Gamma left parenthesis x right parenthesis less than or equals normal upper Gamma Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D comma EndLayoutx ∈D,
(1.32c) 
(III) Expected failure or recourse cost minimization under expected primary cost 
constraints 
StartLayout 1st Row 1st Column min 2nd Column normal upper Gamma left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayoutmin ⎡(x)
(1.33a) 
StartLayout 1st Row 1st Column min 2nd Column normal upper Gamma left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayouts.t.
EG0
(
a(ω), x
)
≤Gmax
(1.33b) 
StartLayout 1st Row 1st Column min 2nd Column normal upper Gamma left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayoutx ∈D.
(1.33c) 
Here, c Subscript upper G Baseline comma c Subscript f BaselinecG, c f are (vectorial) weight coefﬁcients, normal upper Gamma Superscript max⎡max is the vector of upper loss 
bounds, and “min” indicates again that normal upper Gamma left parenthesis x right parenthesis⎡(x) may be a vector valued function. 
1.5 
Basic Properties of Deterministic Substitute Problems 
As can be seen from the conversion of an optimization problem with random param-
eters into a deterministic substitute problem, cf. Sect. 1.4.1, a central role is played 
by expectation or mean value functions of the type

16
1
Stochastic Optimization Methods
StartLayout 1st Row 1st Column normal upper Gamma left parenthesis x right parenthesis 2nd Column equals upper E gamma left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis comma 3rd Column x element of upper D 0 comma 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank EndLayout⎡(x) = Eγ
(
y
(
a(ω), x
))
,
x ∈D0,
(1.34a) 
or more general 
StartLayout 1st Row 1st Column normal upper Gamma left parenthesis x right parenthesis 2nd Column equals upper E g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma 3rd Column x element of upper D 0 period EndLayout⎡(x) = Eg
(
a(ω), x
)
,
x ∈D0.
(1.34b) 
Here, a equals a left parenthesis omega right parenthesisa = a(ω) is a random nuν-vector, y equals y left parenthesis a comma x right parenthesisy = y(a, x) is an m Subscript ymy-vector valued function 
on a certain subset of double struck upper R Superscript nu Baseline times double struck upper R Superscript rRν × Rr, and gamma equals gamma left parenthesis z right parenthesisγ = γ (z) is a real-valued function on a certain 
subset of double struck upper R Superscript m Super Subscript yRmy. 
Furthermore, g equals g left parenthesis a comma x right parenthesisg = g(a, x) denotes a real-valued function on a certain subset of 
double struck upper R Superscript nu Baseline times double struck upper R Superscript rRν × Rr. In the following we suppose that the expectation in (1.34a)–(1.34b) exists  
and is ﬁnite for all input vectors xx lying in an appropriate set upper D 0 subset of double struck upper R Superscript rD0 ⊂Rr, cf.  [  7]. 
The following basic properties of the mean value functions normal upper Gamma⎡are needed in the 
following again and again. 
Lemma 1.1 (Convexity) Suppose thatx right arrow g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisx →g
(
a(ω), x
)
is convex a.s. (almost sure) 
on a ﬁxed convex domain upper D 0 subset of double struck upper R Superscript rD0 ⊂Rr. If  upper E g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisEg
(
a(ω), x
)
exists and is ﬁnite for each 
x element of upper D 0x ∈D0, then normal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis⎡= ⎡(x) is convex on upper D 0D0. 
Proof This property follows [ 20, 21, 27] directly from the linearity of the expectation 
operator.
⬜ 
If g equals g left parenthesis a comma x right parenthesisg = g(a, x) is deﬁned by g left parenthesis a comma x right parenthesis colon equals gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesisg(a, x) := γ
(
y(a, x)
)
, see  (1.34a), then the above 
theorem yields the following result: 
Corollary 1.1 Suppose that gammaγ is convex and upper E gamma left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesisEγ
(
y
(
a(ω), x
))
exists and is ﬁnite 
for each x element of upper D 0x ∈D0. 
(a) If x right arrow y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisx →y
(
a(ω), x
)
is linear a.s., then normal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis⎡= ⎡(x) is convex. 
(b) Ifx right arrow y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisx →y
(
a(ω), x
)
is convex a.s., andgammaγ is a convex, monotoneous nondecreasing 
function, then normal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis⎡= ⎡(x) is convex. 
It is well known [ 25] that a convex function is continuous on each open subset of 
its domain. A general sufﬁcient condition for the continuity of normal upper Gamma⎡is given next. 
Lemma 1.2 (Continuity) Suppose that upper E g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisEg
(
a(ω), x
)
exists and is ﬁnite for each 
x element of upper D 0x ∈D0, and assume that x right arrow g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisx →g
(
a(ω), x
)
is continuous at x 0 element of upper D 0x0 ∈D0 a.s.. If there is 
a function psi equals psi left parenthesis a left parenthesis omega right parenthesis right parenthesisψ = ψ
(
a(ω)
)
having ﬁnite expectation such that 
StartAbsoluteValue g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis EndAbsoluteValue less than or equals psi left parenthesis a left parenthesis omega right parenthesis right parenthesis a period s period f o r a l l x element of upper U left parenthesis x 0 right parenthesis intersection upper D 0 comma
|||g
(
a(ω), x
)||| ≤ψ
(
a(ω)
)
a.s. for all x ∈U(x0) ∩D0,
(1.35) 
where upper U left parenthesis x 0 right parenthesisU(x0) is a neighborhood of x 0x0, then normal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis⎡= ⎡(x) is continuous at x 0x0.

1.6 Approximations of Deterministic Substitute Problems in Optimal Design/Decision
17
Proof The assertion can be shown by using Lebesgue’s dominated convergence 
theorem, see, e.g., [ 27].
⬜ 
For the consideration of the differentiability of normal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis⎡= ⎡(x), let  upper DD denote an open 
subset of the domain upper D 0D0 of normal upper Gamma⎡. 
Lemma 1.3 (Differentiability) Suppose that 
(i) upper E g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisEg
(
a(ω), x
)
exists and is ﬁnite for each x element of upper D 0x ∈D0, 
(ii) x right arrow g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisx →g
(
a(ω), x
)
is differentiable on the open subset upper DD of upper D 0D0 a.s. and 
(iii) 
double vertical bar nabla Subscript x Baseline g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis double vertical bar less than or equals psi left parenthesis a left parenthesis omega right parenthesis right parenthesis comma x element of upper D comma a period s period comma
||||||∇xg
(
a(ω), x
)|||||| ≤ψ
(
a(ω)
)
,
x ∈D, a.s.,
(1.36a) 
wherepsi equals psi left parenthesis a left parenthesis omega right parenthesis right parenthesisψ = ψ
(
a(ω)
)
is a function having ﬁnite expectation. Then the expectation of 
nabla Subscript x Baseline g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis∇xg
(
a(ω), x
)
exists and is ﬁnite, normal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis⎡= ⎡(x) is differentiable on upper DD and 
nabla normal upper Gamma left parenthesis x right parenthesis equals nabla Subscript x Baseline upper E g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals upper E nabla Subscript x Baseline g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma x element of upper D period∇⎡(x) = ∇x Eg
(
a(ω), x
)
= E∇xg
(
a(ω), x
)
,
x ∈D.
(1.36b) 
Proof Considering the difference quotientsStartFraction Delta normal upper Gamma Over Delta x Subscript k Baseline EndFraction comma k equals 1 comma ellipsis comma r Δ⎡
Δxk
, k = 1, . . . ,r, ofnormal upper Gamma⎡at a ﬁxed point 
x 0 element of upper Dx0 ∈D, the assertion follows by means of the mean value theorem, inequality (1.36a) 
and Lebesgue’s dominated convergence theorem, cf. [ 20, 21, 27].
⬜ 
Example 1.4 In case (1.34a), under obvious differentiability assumptions con-
cerning gammaγ and yy we have nabla Subscript x Baseline g left parenthesis a comma x right parenthesis equals nabla Subscript x Baseline y left parenthesis a comma x right parenthesis Superscript upper T Baseline nabla gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis∇xg(a, x) = ∇x y(a, x)T ∇γ
(
y(a, x)
)
, where nabla Subscript x Baseline y left parenthesis a comma x right parenthesis∇x y(a, x)
denotes the Jacobian of y equals y left parenthesis a comma x right parenthesisy = y(a, x) with respect to aa. Hence, if (1.36b) holds, then 
nabla normal upper Gamma left parenthesis x right parenthesis equals upper E nabla Subscript x Baseline y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline nabla gamma left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis period∇⎡(x) = E∇x y
(
a(ω), x
)T
∇γ
(
y
(
a(ω), x
))
.
(1.36c) 
1.6 
Approximations of Deterministic Substitute Problems 
in Optimal Design/Decision 
The main problem in solving the deterministic substitute problems deﬁned above is 
that the arising probability and expected cost functionsp Subscript f Baseline equals p Subscript f Baseline left parenthesis x right parenthesis comma normal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis comma x element of double struck upper R Superscript rp f = p f (x), ⎡= ⎡(x), x ∈
Rr, are deﬁned by means of multiple integrals over a nuν-dimensional space. 
Thus, the substitute problems may be solved, in practice, only by some approx-
imative analytical and numerical methods [ 16, 20, 27, 33]. In the following we 
consider possible approximations for substitute problems based on general expected 
recourse cost functions normal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis⎡= ⎡(x) according to (1.34a) having a real-valued convex 
loss functiongamma left parenthesis z right parenthesisγ (z). Note that the probability of failure functionp Subscript f Baseline equals p Subscript f Baseline left parenthesis x right parenthesisp f = p f (x) may be

18
1
Stochastic Optimization Methods
approximated from above, see (1.29a)–(1.29b), by expected cost functionsnormal upper Gamma equals normal upper Gamma left parenthesis x right parenthesis⎡= ⎡(x)
having a nonnegative function gamma equals gamma left parenthesis z right parenthesisγ = γ (z) being bounded from below on the failure 
domain upper B Superscript cBc. In the following several basic approximation methods are presented. 
1.6.1 
Approximation of the Loss Function 
Suppose here that gamma equals gamma left parenthesis y right parenthesisγ = γ (y) is a continuously differentiable, convex loss function 
on double struck upper R Superscript m Super Subscript yRmy. Let then denote 
ModifyingAbove y With quotation dash left parenthesis x right parenthesis colon equals upper E y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals left parenthesis upper E y 1 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma ellipsis comma upper E y Subscript m Sub Subscript y Subscript Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis Superscript upper Ty(x) := Ey
(
a(ω), x
)
=
(
Ey1
(
a(ω), x
)
, . . . , Eymy
(
a(ω), x
))T
(1.37) 
the expectation of the vector y equals y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisy = y
(
a(ω), x
)
of state functions y Subscript i Baseline equals y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis commayi = yi
(
a(ω), x
)
,
i equals 1 comma ellipsis comma m Subscript y Baselinei = 1, . . . , my. 
For an arbitrary continuously differentiable, convex loss function gammaγ we have 
gamma left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis greater than or equals gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus nabla gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis Superscript upper T Baseline left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis periodγ
(
y
(
a(ω), x
))
≥γ
(
y(x)
)
+ ∇γ
(
y(x)
)T (
y
(
a(ω), x
)
−y(x)
)
.
(1.38a) 
Thus, taking expectations in (1.38a), we ﬁnd Jensen’s inequality 
normal upper Gamma left parenthesis x right parenthesis equals upper E gamma left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis greater than or equals gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis⎡(x) = Eγ
(
y
(
a(ω), x
))
≥γ
(
y(x)
)
(1.38b) 
which holds for any convex function gammaγ . Using the mean value theorem, we have 
gamma left parenthesis y right parenthesis equals gamma left parenthesis ModifyingAbove y With quotation dash right parenthesis plus nabla gamma left parenthesis ModifyingAbove y With caret right parenthesis Superscript upper T Baseline left parenthesis y minus ModifyingAbove y With quotation dash right parenthesis commaγ (y) = γ (y) + ∇γ ( ˆy)T (y −y),
(1.38c) 
where ModifyingAbove y With caret ˆy is a point on the line segment ModifyingAbove y With quotation dash yyy between ModifyingAbove y With quotation dashy and yy. By means of (1.38b), 
(1.38c) we get 
0 less than or equals normal upper Gamma left parenthesis x right parenthesis minus gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis less than or equals upper E double vertical bar nabla gamma left parenthesis ModifyingAbove y With caret left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis double vertical bar dot double vertical bar y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus ModifyingAbove y With quotation dash left parenthesis x right parenthesis double vertical bar period0 ≤⎡(x) −γ
(
y(x)
)
≤E
||||||∇γ
(
ˆy
(
a(ω), x
))|||||| ·
||||||y
(
a(ω), x
)
−y(x)
|||||| . (1.38d) 
(a) Bounded gradient 
If the gradient nabla gamma∇γ is bounded on convex hull upper R Superscript c o n v Baseline left parenthesis y left parenthesis dot comma dot right parenthesis right parenthesisRconv(y(·, ·)) of the range of 
y equals y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma omega element of normal upper Omega comma x element of upper Dy = y
(
a(ω), x
)
, ω ∈Ω, x ∈D, i.e., if 
double vertical bar nabla gamma left parenthesis y right parenthesis double vertical bar less than or equals theta Superscript max Baseline f o r e a c h y element of upper R Superscript c o n v Baseline left parenthesis y left parenthesis dot comma dot right parenthesis right parenthesis comma ||∇γ (y)|| ≤ϑmax
for each y ∈Rconv(y(·, ·)),
(1.39a) 
with a constant theta Superscript max Baseline greater than 0ϑmax > 0, then

1.6 Approximations of Deterministic Substitute Problems in Optimal Design/Decision
19
0 less than or equals normal upper Gamma left parenthesis x right parenthesis minus gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis less than or equals theta Superscript max Baseline upper E double vertical bar y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus ModifyingAbove y With quotation dash left parenthesis x right parenthesis double vertical bar comma x element of upper D period0 ≤⎡(x) −γ
(
y(x)
)
≤ϑmaxE
||||||y
(
a(ω), x
)
−y(x)
|||||| ,
x ∈D.
(1.39b) 
Since t right arrow StartRoot t EndRoot comma t greater than or equals 0t →√t, t ≥0, is a concave function, we get 
0 less than or equals normal upper Gamma left parenthesis x right parenthesis minus gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis less than or equals theta Superscript max Baseline StartRoot q left parenthesis x right parenthesis EndRoot comma0 ≤⎡(x) −γ
(
y(x)
)
≤ϑmax√
q(x) ,
(1.39c) 
where 
q left parenthesis x right parenthesis colon equals upper E double vertical bar y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus ModifyingAbove y With quotation dash left parenthesis x right parenthesis double vertical bar squared equals t r upper Q left parenthesis x right parenthesisq(x) := E
||||||y
(
a(ω), x
)
−y(x)
||||||
2
= tr Q(x)
(1.39d) 
is the generalized variance, and 
upper Q left parenthesis x right parenthesis colon equals c o v left parenthesis y left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis right parenthesisQ(x) := cov
(
y
(
a(·), x
))
(1.39e) 
denotes the covariance matrix of the random vector y equals y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisy = y
(
a(ω), x
)
. Conse-
quently, the expected loss function normal upper Gamma left parenthesis x right parenthesis⎡(x) can be approximated from above by 
normal upper Gamma left parenthesis x right parenthesis less than or equals gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus theta Superscript max Baseline StartRoot q left parenthesis x right parenthesis EndRoot f o r x element of upper D period⎡(x) ≤γ
(
y(x)
)
+ ϑmax√
q(x) for x ∈D.
(1.39f) 
(b) Bounded eigenvalues of the Hessian 
Considering second-order expansions of gammaγ , with a vector y overTilde element of y overbar y ˜y ∈¯yy we ﬁnd 
gamma left parenthesis y right parenthesis minus gamma left parenthesis ModifyingAbove y With quotation dash right parenthesis equals nabla gamma left parenthesis ModifyingAbove y With quotation dash right parenthesis Superscript upper T Baseline left parenthesis y minus ModifyingAbove y With quotation dash right parenthesis plus one half left parenthesis y minus ModifyingAbove y With quotation dash right parenthesis Superscript upper T Baseline nabla squared gamma left parenthesis y overTilde right parenthesis left parenthesis y minus ModifyingAbove y With quotation dash right parenthesis periodγ (y) −γ (y) = ∇γ (y)T (y −y) + 1
2(y −y)T ∇2γ ( ˜y)(y −y).
(1.40a) 
Suppose that the eigenvalueslamdaλ ofnabla squared gamma left parenthesis y right parenthesis∇2γ (y) are bounded from below and above on 
the convex hullupper R Superscript c o n v Baseline left parenthesis y left parenthesis dot comma dot right parenthesis right parenthesisRconv(y(·, ·)) of the range ofy equals y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisy = y
(
a(ω), x
)
for allomega element of normal upper Omega comma x element of upper Dω ∈Ω, x ∈
D, i.e., 
0 less than lamda Superscript min Baseline less than or equals lamda left parenthesis nabla squared gamma left parenthesis y right parenthesis right parenthesis less than or equals lamda Superscript max Baseline less than plus normal infinity comma f o r e a c h y element of upper R Superscript c o n v Baseline left parenthesis y left parenthesis dot comma dot right parenthesis right parenthesis comma0 < λmin ≤λ
(
∇2γ (y)
)
≤λmax < +∞, for each y ∈Rconv(y(·, ·)), (1.40b) 
with constants 0 less than lamda Superscript min Baseline less than or equals lamda Superscript max0 < λmin ≤λmax. Taking expectations in (1.40a), we get 
gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus StartFraction lamda Superscript min Baseline Over 2 EndFraction q left parenthesis x right parenthesis less than or equals normal upper Gamma left parenthesis x right parenthesis less than or equals gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus StartFraction lamda Superscript max Baseline Over 2 EndFraction q left parenthesis x right parenthesis comma x element of upper D periodγ
(
y(x)
)
+ λmin
2 q(x) ≤⎡(x) ≤γ
(
y(x)
)
+ λmax
2 q(x),
x ∈D.
(1.40c) 
Consequently, using (1.39f) or (1.40c), various approximations for the determinis-
tic substitute problems, (1.31a), (1.31b), (1.32a)–(1.32c), (1.33a)–(1.33c) may be 
obtained.

20
1
Stochastic Optimization Methods
Based on the above approximations of expected cost functions, we state the fol-
lowing two approximates to (1.32a)–(1.32c), (1.33a)–(1.33c), resp., which are well 
known in robust optimal design: 
(i) Expected primary cost minimization under approximate expected failure or 
recourse cost constraints 
StartLayout 1st Row 1st Column min 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus c 0 q left parenthesis x right parenthesis less than or equals normal upper Gamma Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D comma EndLayoutmin
EG0
(
a(ω), x
)
(1.41a) 
StartLayout 1st Row 1st Column min 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus c 0 q left parenthesis x right parenthesis less than or equals normal upper Gamma Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D comma EndLayouts.t.
γ
(
y(x)
)
+ c0q(x) ≤⎡max
(1.41b) 
StartLayout 1st Row 1st Column min 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus c 0 q left parenthesis x right parenthesis less than or equals normal upper Gamma Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D comma EndLayoutx ∈D,
(1.41c) 
where c 0c0 is a scale factor, cf. (1.39f) and (1.40c); 
(ii) Approximate expected failure or recourse cost minimization under expected pri-
mary cost constraints 
StartLayout 1st Row 1st Column min 2nd Column gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus c 0 q left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayoutmin γ
(
y(x)
)
+ c0q(x)
(1.42a) 
StartLayout 1st Row 1st Column min 2nd Column gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus c 0 q left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayouts.t.
EG0
(
a(ω), x
)
≤Gmax
(1.42b) 
StartLayout 1st Row 1st Column min 2nd Column gamma left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis right parenthesis plus c 0 q left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper G Superscript max Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayoutx ∈D.
(1.42c) 
Obviously, by means of (1.41a)–(1.41c) or  (1.42a)–(1.42c) optimal designs x Superscript asteriskx∗
are achieved which 
• yield a high mean performance of the structure/structural system 
• are minimally sensitive or have a limited sensitivity with respect to random param-
eter variations (material, load, manufacturing, process, etc.) and 
• cause only limited costs for design, construction, maintenance, etc. 
1.6.2 
Approximation of State (Performance) Functions 
The numerical solution is simpliﬁed considerably if one can work with one single 
state function y equals y left parenthesis a comma x right parenthesisy = y(a, x). Formally, this is possible by deﬁning the function 
y Superscript min Baseline left parenthesis a comma x right parenthesis colon equals min Underscript 1 less than or equals i less than or equals m Subscript y Baseline Endscripts y Subscript i Baseline left parenthesis a comma x right parenthesis periodymin(a, x) := min
1≤i≤my yi(a, x).
(1.43a)

1.6 Approximations of Deterministic Substitute Problems in Optimal Design/Decision
21
Fig. 1.1 Loss functiongammaγ
Indeed, according to (1.18b), (1.18c) the failure of the structure, the system can 
be represented by the condition 
y Superscript min Baseline left parenthesis a comma x right parenthesis less than or equals 0 periodymin(a, x) ≤0.
(1.43b) 
Thus, the weakness or failure of the technical or economic device can be evaluated 
numerically by the function 
normal upper Gamma left parenthesis x right parenthesis colon equals upper E gamma left parenthesis y Superscript min Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis⎡(x) := Eγ
(
ymin(
a(ω), x
))
(1.43c) 
with a non-increasing loss function gamma colon double struck upper R right arrow double struck upper R Subscript plus Baselineγ : R →R+, see Fig. 1.1. 
However, the “min”-operator in (1.43a) yields a nonsmooth function y Superscript min Baseline equals y Superscript min Baseline left parenthesis a comma x right parenthesisymin =
ymin(a, x) in general, and the straightforward computation of the mean and vari-
ance function 
StartLayout 1st Row 1st Column ModifyingAbove y Superscript min Baseline With quotation dash left parenthesis x right parenthesis 2nd Column colon equals upper E y Superscript min Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column sigma Subscript y Sub Superscript min Superscript 2 Baseline left parenthesis x right parenthesis 2nd Column colon equals upper V a r left parenthesis y Superscript min Baseline left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis right parenthesis EndLayoutymin(x) := Eymin(
a(ω), x
)
(1.43d) 
StartLayout 1st Row 1st Column ModifyingAbove y Superscript min Baseline With quotation dash left parenthesis x right parenthesis 2nd Column colon equals upper E y Superscript min Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column sigma Subscript y Sub Superscript min Superscript 2 Baseline left parenthesis x right parenthesis 2nd Column colon equals upper V a r left parenthesis y Superscript min Baseline left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis right parenthesis EndLayoutσ 2
ymin(x) := Var
(
ymin(
a(·), x
))
(1.43e) 
by means of Taylor expansion with respect to the model parameter vector aa at ModifyingAbove a With quotation dash equals upper E a left parenthesis omega right parenthesisa =
Ea(ω) is not possible, cf. Sect. 1.6.3. 
According to the deﬁnition (1.43a), an upper bound for ModifyingAbove y Superscript min Baseline With quotation dash left parenthesis x right parenthesisymin(x) is given by 
ModifyingAbove y Superscript min Baseline With quotation dash left parenthesis x right parenthesis less than or equals min Underscript 1 less than or equals i less than or equals m Subscript y Baseline Endscripts ModifyingAbove y With quotation dash Subscript i Baseline left parenthesis x right parenthesis equals min Underscript 1 less than or equals i less than or equals m Subscript y Baseline Endscripts upper E y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis periodymin(x) ≤min
1≤i≤my yi(x) = min
1≤i≤my Eyi
(
a(ω), x
)
.
Further approximations of y Superscript min Baseline left parenthesis a comma x right parenthesisymin(a, x) and its moments can be found by using the 
representation 
min left parenthesis a comma b right parenthesis equals one half left parenthesis a plus b minus StartAbsoluteValue a minus b EndAbsoluteValue right parenthesismin(a, b) = 1
2
(
a + b −|a −b|
)

22
1
Stochastic Optimization Methods
of the minimum of two numbers a comma b element of double struck upper Ra, b ∈R. For example, for an even index m Subscript ymy we 
have 
StartLayout 1st Row 1st Column y Superscript min Baseline left parenthesis a comma x right parenthesis 2nd Column equals min Underscript i equals 1 comma 3 comma ellipsis comma m Subscript y Baseline minus 1 Endscripts min left parenthesis y Subscript i Baseline left parenthesis a comma x right parenthesis comma y Subscript i plus 1 Baseline left parenthesis a comma x right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals min Underscript i equals 1 comma 3 comma ellipsis comma m Subscript y Baseline minus 1 Endscripts one half left parenthesis y Subscript i Baseline left parenthesis a comma x right parenthesis plus y Subscript i plus 1 Baseline left parenthesis a comma x right parenthesis minus StartAbsoluteValue y Subscript i Baseline left parenthesis a comma x right parenthesis minus y Subscript i plus 1 Baseline left parenthesis a comma x right parenthesis EndAbsoluteValue right parenthesis period EndLayoutymin(a, x) =
min
i=1,3,...,my−1 min
(
yi(a, x), yi+1(a, x)
)
=
min
i=1,3,...,my−1
1
2
(
yi(a, x) + yi+1(a, x) −
||yi(a, x) −yi+1(a, x)
||
)
.
In many cases we may suppose that the state (performance) functions y Subscript i Baseline equals y Subscript i Baseline left parenthesis a comma x right parenthesis comma i equals 1 comma ellipsis comma m Subscript y Baselineyi =
yi(a, x), i = 1, . . . , my, are bounded from below, hence, 
y Subscript i Baseline left parenthesis a comma x right parenthesis greater than negative upper A comma i equals 1 comma ellipsis comma m Subscript y Baseline commayi(a, x) > −A,
i = 1, . . . , my,
for all left parenthesis a comma x right parenthesis(a, x) under consideration with a positive constant upper A greater than 0A > 0. Thus, deﬁning 
ModifyingAbove y With tilde Subscript i Baseline left parenthesis a comma x right parenthesis colon equals y Subscript i Baseline left parenthesis a comma x right parenthesis plus upper A comma i equals 1 comma ellipsis comma m Subscript y Baseline comma ˜yi(a, x) := yi(a, x) + A,
i = 1, . . . , my,
and therefore 
ModifyingAbove y With tilde Superscript min Baseline left parenthesis a comma x right parenthesis colon equals min Underscript 1 less than or equals i less than or equals m Subscript y Baseline Endscripts ModifyingAbove y With tilde Subscript i Baseline left parenthesis a comma x right parenthesis equals y Superscript min Baseline left parenthesis a comma x right parenthesis plus upper A comma ˜ymin(a, x) := min
1≤i≤my ˜yi(a, x) = ymin(a, x) + A,
we have 
y Superscript min Baseline left parenthesis a comma x right parenthesis less than or equals 0 i f a n d o n l y i f ModifyingAbove y With tilde Superscript min Baseline left parenthesis a comma x right parenthesis less than or equals upper A periodymin(a, x) ≤0
if and only if
˜ymin(a, x) ≤A.
Hence, the survival/failure of the system or structure can also be studied by means 
of the positive functionModifyingAbove y With tilde Superscript min Baseline equals ModifyingAbove y With tilde Superscript min Baseline left parenthesis a comma x right parenthesis ˜ymin = ˜ymin(a, x). Using now the theory of power or Hölder 
means [ 12], the minimum ModifyingAbove y With tilde Superscript min Baseline left parenthesis a comma x right parenthesis ˜ymin(a, x) of positive functions can be represented also 
by the limit 
ModifyingAbove y With tilde Superscript min Baseline left parenthesis a comma x right parenthesis equals limit Underscript lamda right arrow negative normal infinity Endscripts left parenthesis StartFraction 1 Over m Subscript y Baseline EndFraction sigma summation Underscript i equals 1 Overscript m Subscript y Baseline Endscripts ModifyingAbove y With tilde Subscript i Baseline left parenthesis a comma x right parenthesis Superscript lamda Baseline right parenthesis Superscript 1 divided by lamda ˜ymin(a, x) =
lim
λ→−∞
(
1
my
my
∑
i=1
˜yi(a, x)λ
)1/λ
of the decreasing family of power means 
upper M Superscript left bracket lamda right bracket Baseline left parenthesis y overTilde right parenthesis colon equals left parenthesis StartFraction 1 Over m Subscript y Baseline EndFraction sigma summation Underscript i equals 1 Overscript m Subscript y Baseline Endscripts y overTilde Subscript i Superscript lamda Baseline right parenthesis Superscript 1 divided by lamda Baseline comma lamda less than 0 periodM[λ]( ˜y) :=
(
1
my
my
∑
i=1
˜yλ
i
)1/λ
,
λ < 0.
Consequently, for each ﬁxed p greater than 0p > 0 we also have 
y overTilde Superscript min Baseline left parenthesis a comma x right parenthesis Superscript p Baseline equals limit Underscript lamda right arrow negative normal infinity Endscripts left parenthesis StartFraction 1 Over m Subscript y Baseline EndFraction sigma summation Underscript i equals 1 Overscript m Subscript y Baseline Endscripts y overTilde Subscript i Baseline left parenthesis a comma x right parenthesis Superscript lamda Baseline right parenthesis Superscript p divided by lamda Baseline period ˜ymin(a, x)p =
lim
λ→−∞
(
1
my
my
∑
i=1
˜yi(a, x)λ
)p/λ
.

1.6 Approximations of Deterministic Substitute Problems in Optimal Design/Decision
23
Fig. 1.2 ApproximationModifyingAbove y With tilde left parenthesis a comma x right parenthesis ˜y(a, x) ofy Superscript min Baseline left parenthesis a comma x right parenthesisymin(a, x) for givenxx
Assuming that the expectation upper E upper M Superscript left bracket lamda right bracket Baseline left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis right parenthesis comma x right parenthesis Superscript pE M[λ](
˜y
(
a(ω)
)
, x
)p
exists for an exponent lamda equals lamda 0 less than 0λ =
λ0 < 0, by means of Lebesgue’s bounded convergence theorem we get the moment 
representation 
upper E y overTilde Superscript min Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript p Baseline equals limit Underscript lamda right arrow negative normal infinity Endscripts upper E left parenthesis StartFraction 1 Over m Subscript y Baseline EndFraction sigma summation Underscript i equals 1 Overscript m Subscript y Baseline Endscripts y overTilde Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript lamda Baseline right parenthesis Superscript p divided by lamda Baseline periodE ˜ymin(
a(ω), x
)p
=
lim
λ→−∞E
(
1
my
my
∑
i=1
˜yi
(
a(ω), x
)λ
)p/λ
.
Since t right arrow t Superscript p divided by lamda Baseline comma t greater than 0t →t p/λ, t > 0, is convex for each ﬁxed p greater than 0p > 0 and lamda less than 0λ < 0, by Jensen’s 
inequality we have the lower moment bound 
upper E y overTilde Superscript min Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript p Baseline greater than or equals limit Underscript lamda right arrow negative normal infinity Endscripts left parenthesis StartFraction 1 Over m Subscript y Baseline EndFraction sigma summation Underscript i equals 1 Overscript m Subscript y Baseline Endscripts upper E y overTilde Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript lamda Baseline right parenthesis Superscript p divided by lamda Baseline periodE ˜ymin(
a(ω), x
)p
≥
lim
λ→−∞
(
1
my
my
∑
i=1
E ˜yi
(
a(ω), x
)λ
)p/λ
.
Hence, for the ppth order moment of ModifyingAbove y With tilde Superscript min Baseline left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis ˜ymin(
a(·), x
)
we get the approximations 
upper E left parenthesis StartFraction 1 Over m Subscript y Baseline EndFraction sigma summation Underscript i equals 1 Overscript m Subscript y Baseline Endscripts ModifyingAbove y With tilde Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis Superscript p divided by lamda Baseline greater than or equals left parenthesis StartFraction 1 Over m Subscript y Baseline EndFraction sigma summation Underscript i equals 1 Overscript m Subscript y Baseline Endscripts upper E ModifyingAbove y With tilde Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript lamda Baseline right parenthesis Superscript p divided by lamdaE
(
1
my
my
∑
i=1
˜yi
(
a(ω), x
))p/λ
≥
(
1
my
my
∑
i=1
E ˜yi
(
a(ω), x
)λ
)p/λ
for some lamda less than 0λ < 0. 
Using regression techniques, Response Surface Methods (RSM), etc., for given 
vector xx, the function a right arrow y Superscript min Baseline left parenthesis a comma x right parenthesisa →ymin(a, x) can be approximated [ 8, 11, 19, 24, 42] by  
functionsModifyingAbove y With tilde equals ModifyingAbove y With tilde left parenthesis a comma x right parenthesis~y = ~y(a, x) being sufﬁciently smooth with respect to the parameter vector 
aa (Fig. 1.2). 
In many important cases, for each i equals 1 comma ellipsis comma m Subscript y Baseline commai = 1, . . . , my, the state functions 
left parenthesis a comma x right parenthesis long right arrow y Subscript i Baseline left parenthesis a comma x right parenthesis(a, x) −→yi(a, x)

24
1
Stochastic Optimization Methods
are bilinear functions. Thus, in this case y Superscript min Baseline equals y Superscript min Baseline left parenthesis a comma x right parenthesisymin = ymin(a, x) is a piecewise linear 
function with respect to aa. Fitting a linear or quadratic Response Surface Model 
[ 9, 10, 35, 36] 
ModifyingAbove y With tilde left parenthesis a comma x right parenthesis colon equals c left parenthesis x right parenthesis plus q left parenthesis x right parenthesis Superscript upper T Baseline left parenthesis a minus ModifyingAbove a With quotation dash right parenthesis plus left parenthesis a minus ModifyingAbove a With quotation dash right parenthesis Superscript upper T Baseline upper Y left parenthesis x right parenthesis left parenthesis a minus ModifyingAbove a With quotation dash right parenthesis~y(a, x) := c(x) + q(x)T (a −a) + (a −a)T Y(x)(a −a)
(1.43f) 
to a right arrow y Superscript min Baseline left parenthesis a comma x right parenthesisa →ymin(a, x), after the selection of appropriate reference points 
a Superscript left parenthesis j right parenthesis Baseline colon equals ModifyingAbove a With quotation dash plus d Subscript a Superscript left parenthesis j right parenthesis Baseline comma j equals 1 comma ellipsis comma p commaa( j) := a + d( j)
a , j = 1, . . . , p,
(1.43g) 
with “design” points d Subscript a Superscript left parenthesis j right parenthesis Baseline element of double struck upper R Superscript nu Baseline comma j equals 1 comma ellipsis comma pd( j)
a
∈Rν, j = 1, . . . , p, the unknown coefﬁcients c equals c left parenthesis x right parenthesis comma q equals q left parenthesis x right parenthesisc = c(x),
q = q(x) and upper Y equals upper Y left parenthesis x right parenthesisY = Y(x) are obtained by minimizing the mean square error 
rho left parenthesis c comma q comma upper Y right parenthesis colon equals sigma summation Underscript j equals 1 Overscript p Endscripts left parenthesis ModifyingAbove y With tilde left parenthesis a Superscript left parenthesis j right parenthesis Baseline comma x right parenthesis minus y Superscript min Baseline left parenthesis a Superscript left parenthesis j right parenthesis Baseline comma x right parenthesis right parenthesis squaredρ(c, q, Y) :=
p
∑
j=1
(
~y(a( j), x) −ymin(a( j), x)
)2
(1.43h) 
with respect to left parenthesis c comma q comma upper Y right parenthesis(c, q, Y). Since the model (1.43f) depends linearly on the function 
parameters left parenthesis c comma q comma upper Y right parenthesis(c, q, Y), explicit formulas for the optimal coefﬁcients 
c Superscript asterisk Baseline equals c Superscript asterisk Baseline left parenthesis x right parenthesis comma q Superscript asterisk Baseline equals q Superscript asterisk Baseline left parenthesis x right parenthesis comma upper Y Superscript asterisk Baseline equals upper Y Superscript asterisk Baseline left parenthesis x right parenthesisc∗= c∗(x), q∗= q∗(x), Y ∗= Y ∗(x)
(1.43i) 
are obtained from this least squares estimation method, cf. [ 33]. 
1.6.2.1
Approximation of Expected Loss Functions 
Corresponding to the approximation (1.43f) of  y Superscript min Baseline equals y Superscript min Baseline left parenthesis a comma x right parenthesisymin = ymin(a, x), using again least 
squares techniques, a mean value function normal upper Gamma left parenthesis x right parenthesis equals upper E gamma left parenthesis y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis⎡(x) = Eγ
(
y
(
a(ω), x
))
, cf. (1.28a), 
can be approximated at a given point x 0 element of double struck upper R Superscript nux0 ∈Rν by a linear or quadratic Response 
Surface Function 
ModifyingAbove normal upper Gamma With tilde left parenthesis x right parenthesis colon equals beta 0 plus beta Subscript upper I Superscript upper T Baseline left parenthesis x minus x 0 right parenthesis plus left parenthesis x minus x 0 right parenthesis Superscript upper T Baseline upper B left parenthesis x minus x 0 right parenthesis comma~⎡(x) := β0 + βT
I (x −x0) + (x −x0)T B(x −x0),
(1.43j) 
with scalar, vector and matrix parametersbeta 0 comma beta Subscript upper I Baseline comma upper Bβ0, βI, B. In this case estimatesy Superscript left parenthesis i right parenthesis Baseline equals ModifyingAbove normal upper Gamma With caret Superscript left parenthesis i right parenthesisy(i) = ˆ⎡(i)
of normal upper Gamma left parenthesis x right parenthesis⎡(x) are needed at some reference points x Superscript left parenthesis i right parenthesis Baseline equals x 0 plus d Superscript left parenthesis i right parenthesis Baseline comma i equals 1 comma ellipsis comma px(i) = x0 + d(i), i = 1, . . . , p. Details 
are given in [ 33].

1.6 Approximations of Deterministic Substitute Problems in Optimal Design/Decision
25
1.6.3 
Taylor Expansion Methods 
As can be seen above, cf. (1.34a)–(1.34b), in the objective and/or in the constraints 
of substitute problems for optimization problems with random data mean value func-
tions of the type 
normal upper Gamma left parenthesis x right parenthesis colon equals upper E g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis⎡(x) := Eg
(
a(ω), x
)
occur. Here, g equals g left parenthesis a comma x right parenthesisg = g(a, x) is a real-valued function on a subset of double struck upper R Superscript nu Baseline times double struck upper R Superscript rRν × Rr, and a equals a left parenthesis omega right parenthesisa =
a(ω) is a random nuν vector. 
1.6.3.1
(Complete) Expansion with Respect to aa
Suppose that on its domain the function g equals g left parenthesis a comma x right parenthesisg = g(a, x) has partial derivatives 
nabla Subscript a Superscript l Baseline g left parenthesis a comma x right parenthesis comma l equals 0 comma 1 comma ellipsis comma l Subscript g Baseline plus 1∇l
ag(a, x),l = 0, 1, . . . ,lg + 1, up to orderl Subscript g Baseline plus 1lg + 1. Note that the gradientnabla Subscript a Baseline g left parenthesis a comma x right parenthesis∇ag(a, x)
contains the so-called sensitivities StartFraction partial differential g Over partial differential a Subscript j Baseline EndFraction left parenthesis a comma x right parenthesis comma j equals 1 comma ellipsis comma nu ∂g
∂a j
(a, x), j = 1, . . . , ν, of gg with respect to the 
parameter vector aa at left parenthesis a comma x right parenthesis(a, x). In the same way, the higher order partial derivatives 
nabla Subscript a Superscript l Baseline g left parenthesis a comma x right parenthesis comma l greater than 1∇l
ag(a, x),l > 1, represent the higher order sensitivities of gg with respect to aa at 
left parenthesis a comma x right parenthesis(a, x). Taylor expansion of g equals g left parenthesis a comma x right parenthesisg = g(a, x) with respect to aa at ModifyingAbove a With quotation dash colon equals upper E a left parenthesis omega right parenthesisa := Ea(ω) yields 
g left parenthesis a comma x right parenthesis equals sigma summation Underscript l equals 0 Overscript l Subscript g Baseline Endscripts StartFraction 1 Over l factorial EndFraction nabla Subscript a Superscript l Baseline g left parenthesis a overbar comma x right parenthesis dot left parenthesis a minus a overbar right parenthesis Superscript l Baseline plus StartFraction 1 Over left parenthesis l Subscript g Baseline plus 1 right parenthesis factorial EndFraction nabla Subscript a Superscript l g plus 1 Baseline g left parenthesis ModifyingAbove a With caret comma x right parenthesis dot left parenthesis a minus a overbar right parenthesis Superscript l Super Subscript g Superscript plus 1 Baseline commag(a, x) =
lg
∑
l=0
1
l!∇l
ag(¯a, x) · (a −¯a)l +
1
(lg + 1)!∇lg+1
a
g(ˆa, x) · (a −¯a)lg+1,
(1.44a) 
whereModifyingAbove a With caret colon equals a overbar plus theta left parenthesis a minus a overbar right parenthesis comma 0 less than theta less than 1ˆa := ¯a + ϑ(a −¯a), 0 < ϑ < 1, andleft parenthesis a minus a overbar right parenthesis Superscript l(a −¯a)l denotes the system ofll-th order 
products 
product Underscript j equals 1 Overscript nu Endscripts left parenthesis a Subscript j Baseline minus a overbar Subscript j Baseline right parenthesis Superscript l Super Subscript j
ν∏
j=1
(a j −¯a j)l j
with l Subscript j Baseline element of double struck upper N union StartSet 0 EndSet comma j equals 1 comma ellipsis comma nu comma l 1 plus l 2 plus ellipsis plus l Subscript nu Baseline equals ll j ∈N ∪{0}, j = 1, . . . , ν,l1 + l2 + . . . + lν = l. If g equals g left parenthesis a comma x right parenthesisg = g(a, x) is deﬁned by 
g left parenthesis a comma x right parenthesis colon equals gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis commag(a, x) := γ
(
y(a, x)
)
,
see (1.34a), then the partial derivatives nabla Subscript a Superscript l Baseline g∇l
ag of gg up to the second-order read 
StartLayout 1st Row 1st Column nabla Subscript a Baseline g left parenthesis a comma x right parenthesis 2nd Column equals left parenthesis nabla Subscript a Baseline y left parenthesis a comma x right parenthesis right parenthesis Superscript upper T Baseline nabla gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column nabla Subscript a Superscript 2 Baseline g left parenthesis a comma x right parenthesis 2nd Column equals left parenthesis nabla Subscript a Baseline y left parenthesis a comma x right parenthesis right parenthesis Superscript upper T Baseline nabla squared gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis nabla Subscript a Baseline y left parenthesis a comma x right parenthesis 4th Row 1st Column Blank 2nd Column plus nabla gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis dot nabla Subscript a Superscript 2 Baseline y left parenthesis a comma x right parenthesis comma EndLayout∇ag(a, x) =
(
∇ay(a, x)
)T
∇γ
(
y(a, x)
)
(1.44b) 
StartLayout 1st Row 1st Column nabla Subscript a Baseline g left parenthesis a comma x right parenthesis 2nd Column equals left parenthesis nabla Subscript a Baseline y left parenthesis a comma x right parenthesis right parenthesis Superscript upper T Baseline nabla gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column nabla Subscript a Superscript 2 Baseline g left parenthesis a comma x right parenthesis 2nd Column equals left parenthesis nabla Subscript a Baseline y left parenthesis a comma x right parenthesis right parenthesis Superscript upper T Baseline nabla squared gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis nabla Subscript a Baseline y left parenthesis a comma x right parenthesis 4th Row 1st Column Blank 2nd Column plus nabla gamma left parenthesis y left parenthesis a comma x right parenthesis right parenthesis dot nabla Subscript a Superscript 2 Baseline y left parenthesis a comma x right parenthesis comma EndLayout∇2
ag(a, x) =
(
∇ay(a, x)
)T
∇2γ
(
y(a, x)
)
∇ay(a, x)
(1.44c) 
+ ∇γ 
( 
y(a, x) 
) 
· ∇2 
a y(a, x),

26
1
Stochastic Optimization Methods
where 
left parenthesis nabla gamma right parenthesis dot nabla Subscript a Superscript 2 Baseline y colon equals left parenthesis left parenthesis nabla gamma right parenthesis Superscript upper T Baseline StartFraction partial differential squared y Over partial differential a Subscript k Baseline partial differential a Subscript l Baseline EndFraction right parenthesis Subscript k comma l equals 1 comma ellipsis comma nu dot(∇γ ) · ∇2
a y :=
(
(∇γ )T
∂2y
∂ak∂al
)
k,l=1,...,ν
·
(1.44d) 
Taking expectations in (1.44a), normal upper Gamma left parenthesis x right parenthesis⎡(x) can be approximated, cf. Sect. 1.6.1, by  
ModifyingAbove normal upper Gamma With tilde left parenthesis x right parenthesis colon equals g left parenthesis ModifyingAbove a With bar comma x right parenthesis plus sigma summation Underscript l equals 2 Overscript l Subscript g Baseline Endscripts nabla Subscript a Superscript l Baseline g left parenthesis ModifyingAbove a With bar comma x right parenthesis dot upper E left parenthesis a left parenthesis omega right parenthesis minus ModifyingAbove a With bar right parenthesis Superscript l Baseline comma~⎡(x) := g(¯a, x) +
lg
∑
l=2
∇l
ag(¯a, x) · E
(
a(ω) −¯a
)l
,
(1.45a) 
whereupper E left parenthesis a left parenthesis omega right parenthesis minus ModifyingAbove a With bar right parenthesis Superscript lE
(
a(ω) −¯a
)l
denotes the system of mixedllth central moments of the random 
vector a left parenthesis omega right parenthesis equals left parenthesis a 1 left parenthesis omega right parenthesis comma ellipsis comma a Subscript nu Baseline left parenthesis omega right parenthesis right parenthesis Superscript upper Ta(ω) =
(
a1(ω), . . . , aν(ω)
)T
. Assuming that the domain of g equals g left parenthesis a comma x right parenthesisg = g(a, x) is 
convex with respect to aa, we get the error estimate 
StartLayout 1st Row 1st Column Blank 2nd Column StartAbsoluteValue normal upper Gamma left parenthesis x right parenthesis minus ModifyingAbove normal upper Gamma With tilde left parenthesis x right parenthesis EndAbsoluteValue less than or equals StartFraction 1 Over left parenthesis l Subscript g Baseline plus 1 right parenthesis factorial EndFraction upper E sup Underscript 0 less than or equals theta less than or equals 1 Endscripts double vertical bar nabla Subscript a Superscript l Super Subscript g Superscript plus 1 Baseline g left parenthesis ModifyingAbove a With bar plus theta left parenthesis a left parenthesis omega right parenthesis minus ModifyingAbove a With bar right parenthesis comma x right parenthesis double vertical bar 2nd Row 1st Column Blank 2nd Column times double vertical bar a left parenthesis omega right parenthesis minus ModifyingAbove a With bar double vertical bar Superscript l Super Subscript g Superscript plus 1 Baseline period EndLayout
|||⎡(x) −~⎡(x)
||| ≤
1
(lg + 1)! E sup
0≤ϑ≤1
||||||∇
lg+1
a
g
(
¯a + ϑ
(
a(ω) −¯a
)
, x
)||||||
×
||||||a(ω) −¯a
||||||
lg+1
.
(1.45b) 
In many practical cases the random parameter nuν-vector a equals a left parenthesis omega right parenthesisa = a(ω) has a convex, 
bounded support, and nabla Subscript a Superscript l Super Subscript g Superscript plus 1 Baseline g∇
lg+1
a
g is continuous. Then the upper L Subscript normal infinityL∞-norm 
r left parenthesis x right parenthesis colon equals StartFraction 1 Over left parenthesis l Subscript g Baseline plus 1 right parenthesis factorial EndFraction backslash esssup Subscript omega element of normal upper Omega Baseline double vertical bar nabla Subscript a Superscript l Super Subscript g Superscript plus 1 Baseline g left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis double vertical barr(x) :=
1
(lg + 1)! ess sup
ω∈Ω
||||||∇
lg+1
a
g
(
a(ω), x
)||||||
(1.45c) 
is ﬁnite for all xx under consideration, and (1.45b), (1.45c) yield the error bound 
StartAbsoluteValue normal upper Gamma left parenthesis x right parenthesis minus ModifyingAbove normal upper Gamma With tilde left parenthesis x right parenthesis EndAbsoluteValue less than or equals r left parenthesis x right parenthesis upper E double vertical bar a left parenthesis omega right parenthesis minus ModifyingAbove a With bar double vertical bar Superscript l Super Subscript g Superscript plus 1 Baseline period
|||⎡(x) −~⎡(x)
||| ≤r(x)E
||||||a(ω) −¯a
||||||
lg+1
.
(1.45d) 
Remark 1.4 The above-described method can be extended to the case of vector 
valued loss functions gamma left parenthesis z right parenthesis equals left parenthesis gamma 1 left parenthesis z right parenthesis comma ellipsis comma gamma Subscript m Sub Subscript gamma Subscript Baseline left parenthesis z right parenthesis right parenthesis Superscript upper Tγ (z) =
(
γ1(z), . . . , γmγ (z)
)T
. 
1.6.3.2
Inner (Partial) Expansions with Respect to aa
In generalization of (1.34a), in many cases normal upper Gamma left parenthesis x right parenthesis⎡(x) is deﬁned by 
normal upper Gamma left parenthesis x right parenthesis equals upper E gamma left parenthesis a left parenthesis omega right parenthesis comma y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis comma⎡(x) = Eγ
(
a(ω), y
(
a(ω), x
))
,
(1.46a) 
hence, the loss functiongamma equals gamma left parenthesis a comma y right parenthesisγ = γ (a, y) depends also explicitly on the parameter vector 
aa. This may occur, e.g., in case of randomly varying cost factors.

1.6 Approximations of Deterministic Substitute Problems in Optimal Design/Decision
27
Linearizing now the vector function y equals y left parenthesis a comma x right parenthesisy = y(a, x) with respect to aa at a overbar¯a, thus, 
y left parenthesis a comma x right parenthesis almost equals y Subscript left parenthesis 1 right parenthesis Baseline left parenthesis a comma x right parenthesis colon equals y left parenthesis a overbar comma x right parenthesis plus nabla Subscript a Baseline y left parenthesis a overbar comma x right parenthesis left parenthesis a minus a overbar right parenthesis commay(a, x) ≈y(1)(a, x) := y(¯a, x) + ∇ay(¯a, x)(a −¯a),
(1.46b) 
the mean value function normal upper Gamma left parenthesis x right parenthesis⎡(x) is approximated by 
ModifyingAbove normal upper Gamma With tilde left parenthesis x right parenthesis colon equals upper E gamma left parenthesis a left parenthesis omega right parenthesis comma y left parenthesis ModifyingAbove a With bar comma x right parenthesis plus nabla Subscript a Baseline y left parenthesis ModifyingAbove a With bar comma x right parenthesis left parenthesis a left parenthesis omega right parenthesis minus ModifyingAbove a With bar right parenthesis right parenthesis period~⎡(x) := Eγ
(
a(ω), y(¯a, x) + ∇ay(¯a, x)
(
a(ω) −¯a
))
.
(1.46c) 
This approximation is very advantageous in case that the cost function gamma equals gamma left parenthesis a comma y right parenthesisγ = γ (a, y)
is a quadratic function in yy. In case of a cost function gamma equals gamma left parenthesis a comma y right parenthesisγ = γ (a, y) being linear in 
the vector yy, also  quadratic expansions of y equals y left parenthesis a comma x right parenthesisy = y(a, x) with respect to aa many be 
taken into account. 
Corresponding to (1.37), (1.39e), deﬁne 
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Subscript left parenthesis 1 right parenthesis Baseline left parenthesis x right parenthesis 2nd Column colon equals upper E y Subscript left parenthesis 1 right parenthesis Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals y left parenthesis ModifyingAbove a With quotation dash comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper Q Subscript left parenthesis 1 right parenthesis Baseline left parenthesis x right parenthesis 2nd Column colon equals c o v left parenthesis y Subscript left parenthesis 1 right parenthesis Baseline left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis right parenthesis equals nabla Subscript a Baseline y left parenthesis ModifyingAbove a With quotation dash comma x right parenthesis c o v left parenthesis a left parenthesis dot right parenthesis right parenthesis nabla Subscript a Baseline y left parenthesis ModifyingAbove a With quotation dash comma x right parenthesis Superscript upper T Baseline period EndLayouty(1)(x) := Ey(1)
(
a(ω), x
)
= y(a, x)
(1.46d) 
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Subscript left parenthesis 1 right parenthesis Baseline left parenthesis x right parenthesis 2nd Column colon equals upper E y Subscript left parenthesis 1 right parenthesis Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals y left parenthesis ModifyingAbove a With quotation dash comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper Q Subscript left parenthesis 1 right parenthesis Baseline left parenthesis x right parenthesis 2nd Column colon equals c o v left parenthesis y Subscript left parenthesis 1 right parenthesis Baseline left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis right parenthesis equals nabla Subscript a Baseline y left parenthesis ModifyingAbove a With quotation dash comma x right parenthesis c o v left parenthesis a left parenthesis dot right parenthesis right parenthesis nabla Subscript a Baseline y left parenthesis ModifyingAbove a With quotation dash comma x right parenthesis Superscript upper T Baseline period EndLayoutQ(1)(x) := cov
(
y(1)
(
a(·), x
))
= ∇ay(a, x) cov
(
a(·)
)
∇ay(a, x)T .
(1.46e) 
In case of convex loss functionsgammaγ , approximates ofnormal upper Gamma overTilde~⎡and the corresponding substi-
tute problems based on normal upper Gamma overTilde~⎡may be obtained now by applying the methods described 
in Sect. 1.6.1 Explicit representations for normal upper Gamma overTilde~⎡are obtained in case of quadratic loss 
functions gammaγ . 
Error estimates can be derived easily for Lipschitz(L)-continuous or convex loss 
function gammaγ . In case of a Lipschitz-continuous loss function gamma left parenthesis a comma dot right parenthesisγ (a, ·) with Lipschitz 
constantupper L equals upper L left parenthesis a right parenthesis greater than 0L = L(a) > 0, e.g., for sublinear [ 27, 28] loss functions, using (1.46d) we  
have 
StartAbsoluteValue normal upper Gamma left parenthesis x right parenthesis minus ModifyingAbove normal upper Gamma With tilde left parenthesis x right parenthesis EndAbsoluteValue less than or equals upper L 0 dot upper E double vertical bar y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus y Subscript left parenthesis 1 right parenthesis Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis double vertical bar comma
|||⎡(x) −~⎡(x)
||| ≤L0 · E
||||||y
(
a(ω), x
)
−y(1)
(
a(ω), x
)|||||| ,
(1.46f) 
provided that upper L 0L0 denotes a ﬁnite upper bound of the L-constants upper L equals upper L left parenthesis a right parenthesisL = L(a). 
Applying the mean value theorem [ 15], under appropriate second-order differ-
entiability assumptions, for the right-hand side of (1.46f) we ﬁnd the following 
stochastic version of the mean value theorem 
StartLayout 1st Row 1st Column Blank 2nd Column upper E double vertical bar y left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus y Subscript left parenthesis 1 right parenthesis Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis double vertical bar 2nd Row 1st Column Blank 2nd Column less than or equals upper E double vertical bar a left parenthesis omega right parenthesis minus ModifyingAbove a With quotation dash double vertical bar squared sup Underscript 0 less than or equals theta less than or equals 1 Endscripts double vertical bar nabla Subscript a Superscript 2 Baseline y left parenthesis ModifyingAbove a With quotation dash plus theta left parenthesis a left parenthesis omega right parenthesis minus ModifyingAbove a With quotation dash right parenthesis comma x right parenthesis double vertical bar period EndLayoutE
||||||y
(
a(ω), x
)
−y(1)
(
a(ω), x
)||||||
≤E
||||||a(ω) −a
||||||
2
sup
0≤ϑ≤1
||||||∇2
a y
(
a + ϑ
(
a(ω) −a
)
, x
)|||||| .
(1.46g)

28
1
Stochastic Optimization Methods
1.7 
Approximation of Probabilities—Probability 
Inequalities 
In reliability analysis of engineering/economic structures or systems, a main problem 
is the computation of probabilities 
upper P left parenthesis union Underscript i equals 1 Overscript upper N Endscripts upper V Subscript i Baseline right parenthesis colon equals upper P left parenthesis a left parenthesis omega right parenthesis element of union Underscript i equals 1 Overscript upper N Endscripts upper V Subscript i Baseline right parenthesisP
( N
U
i=1
Vi
)
:= P
(
a(ω) ∈
N
U
i=1
Vi
)
(1.47a) 
or 
upper P left parenthesis intersection Underscript j equals 1 Overscript upper N Endscripts upper S Subscript j Baseline right parenthesis colon equals upper P left parenthesis a left parenthesis omega right parenthesis element of intersection Underscript j equals 1 Overscript upper N Endscripts upper S Subscript j Baseline right parenthesisP
⎛
⎝
N
∩
j=1
Sj
⎞
⎠:= P
⎛
⎝a(ω) ∈
N
∩
j=1
Sj
⎞
⎠
(1.47b) 
of unions and intersections of certain failure/survival domains (events) upper V Subscript j Baseline comma upper S Subscript j BaselineVj, Sj, 
j equals 1 comma ellipsis comma upper N j = 1, . . . , N. These domains (events) arise from the representation of the structure 
or system by a combination of certain series and/or parallel substructures/systems. 
Due to the high complexity of the basic physical relations, several approximation 
techniques are needed for the evaluation of (1.47a), (1.47b). 
1.7.1 
Bonferroni-Type Inequalities 
In the following upper V 1 comma upper V 2 comma ellipsis comma upper V Subscript upper N BaselineV1, V2, . . . , VN denote arbitrary (Borel-)measurable subsets of the 
parameter space double struck upper R Superscript nuRν, and the abbreviation 
upper P left parenthesis upper V right parenthesis colon equals upper P left parenthesis a left parenthesis omega right parenthesis element of upper V right parenthesisP(V ) := P
(
a(ω) ∈V
)
(1.47c) 
is used for any measurable subset upper VV of double struck upper R Superscript nuRν. 
Starting from the representation of the probability of a union of upper NN events, 
upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis equals sigma summation Underscript k equals 1 Overscript upper N Endscripts left parenthesis negative 1 right parenthesis Superscript k minus 1 Baseline s Subscript k comma upper N Baseline commaP
⎛
⎝
N
U
j=1
Vj
⎞
⎠=
N
∑
k=1
(−1)k−1sk,N,
(1.48a) 
where 
s Subscript k comma upper N Baseline colon equals sigma summation Underscript 1 less than or equals i 1 less than i 2 less than midline horizontal ellipsis less than i Subscript k Baseline less than or equals upper N Endscripts upper P left parenthesis intersection Underscript l equals 1 Overscript k Endscripts upper V Subscript i Sub Subscript l Subscript Baseline right parenthesis commask,N :=
∑
1≤i1<i2<···<ik≤N
P
( k∩
l=1
Vil
)
,
(1.48b) 
we obtain [ 17] the well-known basic Bonferroni bounds

1.7 Approximation of Probabilities—Probability Inequalities
29
StartLayout 1st Row 1st Column upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis 2nd Column less than or equals sigma summation Underscript k equals 1 Overscript rho Endscripts left parenthesis negative 1 right parenthesis Superscript k minus 1 Baseline s Subscript k comma upper N Baseline f o r rho greater than or equals 1 comma rho o d d 2nd Row 1st Column Blank 3rd Row 1st Column upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis 2nd Column greater than or equals sigma summation Underscript k equals 1 Overscript rho Endscripts left parenthesis negative 1 right parenthesis Superscript k minus 1 Baseline s Subscript k comma upper N Baseline f o r rho greater than or equals 1 comma rho e v e n period EndLayoutP
⎛
⎝
N
U
j=1
Vj
⎞
⎠≤
ρ
∑
k=1
(−1)k−1sk,N for ρ ≥1, ρ odd
(1.48c) 
StartLayout 1st Row 1st Column upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis 2nd Column less than or equals sigma summation Underscript k equals 1 Overscript rho Endscripts left parenthesis negative 1 right parenthesis Superscript k minus 1 Baseline s Subscript k comma upper N Baseline f o r rho greater than or equals 1 comma rho o d d 2nd Row 1st Column Blank 3rd Row 1st Column upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis 2nd Column greater than or equals sigma summation Underscript k equals 1 Overscript rho Endscripts left parenthesis negative 1 right parenthesis Superscript k minus 1 Baseline s Subscript k comma upper N Baseline f o r rho greater than or equals 1 comma rho e v e n period EndLayoutP
⎛
⎝
N
U
j=1
Vj
⎞
⎠≥
ρ
∑
k=1
(−1)k−1sk,N for ρ ≥1, ρ even.
(1.48d) 
Besides (1.48c), (1.48d), a large amount of related bounds of different complexity 
are available, cf. [ 17, 50]. Important bounds of ﬁrst and second degree are given 
below: 
StartLayout 1st Row 1st Column Blank 2nd Column max Underscript 1 less than or equals j less than or equals upper N Endscripts q Subscript j Baseline less than or equals upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis less than or equals upper Q 1 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper Q 1 minus upper Q 2 less than or equals upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis less than or equals upper Q 1 minus max Underscript 1 less than or equals l less than or equals upper N Endscripts sigma summation Underscript i not equals l Endscripts q Subscript i l Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column StartFraction upper Q 1 squared Over upper Q 1 plus 2 upper Q 2 EndFraction less than or equals upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis less than or equals upper Q 1 period EndLayout max
1≤j≤N q j ≤P
⎛
⎝
N
U
j=1
Vj
⎞
⎠≤Q1
(1.49a) 
StartLayout 1st Row 1st Column Blank 2nd Column max Underscript 1 less than or equals j less than or equals upper N Endscripts q Subscript j Baseline less than or equals upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis less than or equals upper Q 1 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper Q 1 minus upper Q 2 less than or equals upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis less than or equals upper Q 1 minus max Underscript 1 less than or equals l less than or equals upper N Endscripts sigma summation Underscript i not equals l Endscripts q Subscript i l Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column StartFraction upper Q 1 squared Over upper Q 1 plus 2 upper Q 2 EndFraction less than or equals upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis less than or equals upper Q 1 period EndLayoutQ1 −Q2 ≤P
⎛
⎝
N
U
j=1
Vj
⎞
⎠≤Q1 −max
1≤l≤N
∑
i/=l
qil
(1.49b) 
StartLayout 1st Row 1st Column Blank 2nd Column max Underscript 1 less than or equals j less than or equals upper N Endscripts q Subscript j Baseline less than or equals upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis less than or equals upper Q 1 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper Q 1 minus upper Q 2 less than or equals upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis less than or equals upper Q 1 minus max Underscript 1 less than or equals l less than or equals upper N Endscripts sigma summation Underscript i not equals l Endscripts q Subscript i l Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column StartFraction upper Q 1 squared Over upper Q 1 plus 2 upper Q 2 EndFraction less than or equals upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis less than or equals upper Q 1 period EndLayout
Q2
1
Q1 + 2Q2
≤P
⎛
⎝
N
U
j=1
Vj
⎞
⎠≤Q1.
(1.49c) 
The above quantities q Subscript j Baseline comma q Subscript i j Baseline comma upper Q 1 comma upper Q 2q j, qi j, Q1, Q2 are deﬁned as follows: 
StartLayout 1st Row 1st Column upper Q 1 2nd Column colon equals sigma summation Underscript j equals 1 Overscript upper N Endscripts q Subscript j Baseline w i t h q Subscript j colon equals upper P left parenthesis upper V Subscript j Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper Q 2 2nd Column colon equals sigma summation Underscript j equals 2 Overscript upper N Endscripts sigma summation Underscript i equals 1 Overscript j minus 1 Endscripts q Subscript i j Baseline w i t h q Subscript i j Baseline colon equals upper P left parenthesis upper V Subscript i Baseline intersection upper V Subscript j Baseline right parenthesis period EndLayoutQ1 :=
N
∑
j=1
q j with q j := P(Vj)
(1.49d) 
StartLayout 1st Row 1st Column upper Q 1 2nd Column colon equals sigma summation Underscript j equals 1 Overscript upper N Endscripts q Subscript j Baseline w i t h q Subscript j colon equals upper P left parenthesis upper V Subscript j Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper Q 2 2nd Column colon equals sigma summation Underscript j equals 2 Overscript upper N Endscripts sigma summation Underscript i equals 1 Overscript j minus 1 Endscripts q Subscript i j Baseline w i t h q Subscript i j Baseline colon equals upper P left parenthesis upper V Subscript i Baseline intersection upper V Subscript j Baseline right parenthesis period EndLayoutQ2 :=
N
∑
j=2
j−1
∑
i=1
qi j with qi j := P(Vi ∩Vj).
(1.49e) 
Moreover, deﬁning 
q colon equals left parenthesis q 1 comma ellipsis comma q Subscript upper N Baseline right parenthesis comma upper Q colon equals left parenthesis q Subscript i j Baseline right parenthesis Subscript 1 less than or equals i comma j less than or equals upper N Baseline commaq := (q1, . . . , qN), Q := (qi j)1≤i, j≤N,
(1.49f) 
we have 
upper P left parenthesis union Underscript j equals 1 Overscript upper N Endscripts upper V Subscript j Baseline right parenthesis greater than or equals q Superscript upper T Baseline upper Q Superscript minus Baseline q commaP
⎛
⎝
N
U
j=1
Vj
⎞
⎠≥qT Q−q,
(1.49g) 
where upper Q Superscript minusQ−denotes the generalized inverse of upper QQ, cf.  [  50].

30
1
Stochastic Optimization Methods
1.7.2 
Tschebyscheff-Type Inequalities 
In many cases the survival or feasible domain (event)upper S equals intersection Underscript i equals 1 Overscript m Endscripts upper S Subscript iS = ∩m
i=1 Si is represented by 
a certain number mm of inequality constraints of the type 
y Subscript l i Baseline less than left parenthesis less than or equals right parenthesis y Subscript i Baseline left parenthesis a comma x right parenthesis less than left parenthesis less than or equals right parenthesis y Subscript u i Baseline comma i equals 1 comma ellipsis comma m commayli < (≤)yi(a, x) < (≤)yui,
i = 1, . . . , m,
(1.50a) 
as, e.g., operating conditions, behavioral constraints. Hence, for a ﬁxed input, design 
or control vector xx, the event upper S equals upper S left parenthesis x right parenthesisS = S(x) is given by 
upper S colon equals left brace a element of double struck upper R Superscript nu Baseline colon y Subscript l i Baseline less than left parenthesis less than or equals right parenthesis y Subscript i Baseline left parenthesis a comma x right parenthesis less than left parenthesis less than or equals right parenthesis y Subscript u i Baseline comma i equals 1 comma ellipsis comma m right brace periodS := {a ∈Rν : yli < (≤)yi(a, x) < (≤)yui, i = 1, . . . , m} .
(1.50b) 
Here, 
y Subscript i Baseline equals y Subscript i Baseline left parenthesis a comma x right parenthesis comma i equals 1 comma ellipsis comma myi = yi(a, x),
i = 1, . . . , m
(1.50c) 
are certain functions, e.g., response, output, or performance functions of the structure, 
system, deﬁned on (a subset of) double struck upper R Superscript nu Baseline times double struck upper R Superscript rRν × Rr. 
Moreover, y Subscript l i Baseline less than y Subscript u i Baseline comma i equals 1 comma ellipsis comma myli < yui, i = 1, . . . , m, are lower and upper bounds for the variables 
y Subscript i Baseline comma i equals 1 comma ellipsis comma myi, i = 1, . . . , m. In the case of one-sided constraints some boundsy Subscript l i Baseline comma y Subscript u i Baselineyli, yui are inﬁnite. 
1.7.2.1
Two-Sided Constraints 
If y Subscript l i Baseline less than y Subscript u i Baseline comma i equals 1 comma ellipsis comma myli < yui, i = 1, . . . , m, are ﬁnite bounds, (1.50a) can be represented by 
StartAbsoluteValue y Subscript i Baseline left parenthesis a comma x right parenthesis minus y Subscript i c Baseline EndAbsoluteValue less than left parenthesis less than or equals right parenthesis rho Subscript i Baseline comma i equals 1 comma ellipsis comma m comma|yi(a, x) −yic| < (≤)ρi,
i = 1, . . . , m,
(1.50d) 
where the quantities y Subscript i c Baseline comma rho Subscript i Baseline comma i equals 1 comma ellipsis comma myic, ρi, i = 1, . . . , m, are deﬁned by 
y Subscript i c Baseline colon equals StartFraction y Subscript l i Baseline plus y Subscript u i Baseline Over 2 EndFraction comma rho Subscript i Baseline colon equals StartFraction y Subscript u i Baseline minus y Subscript l i Baseline Over 2 EndFraction periodyic := yli + yui
2
,
ρi := yui −yli
2
.
(1.50e) 
Consequently, for the probability upper P left parenthesis upper S right parenthesisP(S) of the event upper SS, deﬁned by (1.50b), we have 
upper P left parenthesis upper S right parenthesis equals upper P left parenthesis StartAbsoluteValue y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus y Subscript i c Baseline EndAbsoluteValue less than left parenthesis less than or equals right parenthesis rho Subscript i Baseline comma i equals 1 comma ellipsis comma m right parenthesis periodP(S) = P
(|||yi
(
a(ω), x
)
−yic
||| < (≤)ρi, i = 1, . . . , m
)
.
(1.50f) 
Introducing the random variables 
ModifyingAbove y With tilde Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis colon equals StartFraction y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus y Subscript i c Baseline Over rho Subscript i Baseline EndFraction comma i equals 1 comma ellipsis comma m comma ˜yi
(
a(ω), x
)
:=
yi
(
a(ω), x
)
−yic
ρi
,
i = 1, . . . , m,
(1.51a) 
and the set 
upper B colon equals left brace y element of double struck upper R Superscript m Baseline colon StartAbsoluteValue y Subscript i Baseline EndAbsoluteValue less than left parenthesis less than or equals right parenthesis 1 comma i equals 1 comma ellipsis comma m right brace commaB :=
{
y ∈Rm : |yi| < (≤)1, i = 1, . . . , m
}
,
(1.51b)

1.7 Approximation of Probabilities—Probability Inequalities
31
with y overTilde equals left parenthesis y overTilde Subscript i Baseline right parenthesis Subscript 1 less than or equals i less than or equals m Baseline comma ˜y = ( ˜yi)1≤i≤m, we get 
upper P left parenthesis upper S right parenthesis equals upper P left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis element of upper B right parenthesis periodP(S) = P
(
˜y
(
a(ω), x
)
∈B
)
.
(1.51c) 
Considering any (measurable) function phi colon double struck upper R Superscript m Baseline right arrow double struck upper Rϕ : Rm →R such that 
StartLayout 1st Row 1st Column i right parenthesis 2nd Column phi left parenthesis y right parenthesis greater than or equals 0 comma 3rd Column y element of double struck upper R Superscript m 4th Column Blank 5th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column i i right parenthesis 2nd Column phi left parenthesis y right parenthesis greater than or equals phi 0 greater than 0 comma 3rd Column i f y not an element of upper B comma EndLayouti)ϕ(y) ≥0,
y ∈Rm
(1.51d) 
StartLayout 1st Row 1st Column i right parenthesis 2nd Column phi left parenthesis y right parenthesis greater than or equals 0 comma 3rd Column y element of double struck upper R Superscript m 4th Column Blank 5th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column i i right parenthesis 2nd Column phi left parenthesis y right parenthesis greater than or equals phi 0 greater than 0 comma 3rd Column i f y not an element of upper B comma EndLayoutii)ϕ(y) ≥ϕ0 > 0,
if y /∈B,
(1.51e) 
with a positive constant phi 0ϕ0, we ﬁnd the following result: 
Theorem 1.1 For
any
(measurable)
function
phi colon double struck upper R Superscript m Baseline right arrow double struck upper Rϕ : Rm →R
fulﬁlling 
conditions (1.51d), (1.51e), the following Tschebyscheff-type inequality holds 
StartLayout 1st Row upper P left parenthesis y Subscript l i Baseline less than left parenthesis less than or equals right parenthesis y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than left parenthesis less than or equals right parenthesis y Subscript u i Baseline comma i equals 1 comma ellipsis comma m right parenthesis 2nd Row greater than or equals 1 minus StartFraction 1 Over phi 0 EndFraction upper E phi left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis comma EndLayoutP
(
yli < (≤)yi
(
a(ω), x
)
< (≤)yui, i = 1, . . . , m
)
≥1 −1
ϕ0
Eϕ
(
˜y
(
a(ω), x
))
,
(1.52) 
provided that the expectation in (1.52) exists and is ﬁnite. 
Proof If upper P Subscript ModifyingAbove y With tilde left parenthesis a left parenthesis dot right parenthesis comma x right parenthesisP˜y
(
a(·),x
) denotes the probability distribution of the random mm-vector ModifyingAbove y With tilde equals ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis ˜y =
˜y
(
a(ω), x
)
, then 
StartLayout 1st Row 1st Column upper E phi left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis 2nd Column equals integral Underscript y element of upper B Endscripts phi left parenthesis y right parenthesis upper P Subscript ModifyingAbove y With tilde left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis Baseline left parenthesis d y right parenthesis plus integral Underscript y element of upper B Superscript c Baseline Endscripts phi left parenthesis y right parenthesis upper P Subscript ModifyingAbove y With tilde left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis Baseline left parenthesis d y right parenthesis 2nd Row 1st Column Blank 2nd Column greater than or equals integral Underscript y element of upper B Superscript c Baseline Endscripts phi left parenthesis y right parenthesis upper P Subscript ModifyingAbove y With tilde left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis Baseline left parenthesis d y right parenthesis greater than or equals phi 0 integral Underscript y element of upper B Superscript c Baseline Endscripts upper P Subscript ModifyingAbove y With tilde left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis Baseline left parenthesis d y right parenthesis 3rd Row 1st Column Blank 2nd Column equals phi 0 upper P left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis not an element of upper B right parenthesis equals phi 0 left parenthesis 1 minus upper P left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis element of upper B right parenthesis right parenthesis comma EndLayoutEϕ
(
˜y
(
a(ω), x
))
=
{
y∈B
ϕ(y)P˜y(a(·),x)(dy) +
{
y∈Bc
ϕ(y)P˜y(a(·),x)(dy)
≥
{
y∈Bc
ϕ(y)P˜y(a(·),x)(dy) ≥ϕ0
{
y∈Bc
P˜y(a(·),x)(dy)
= ϕ0P
(
˜y
(
a(ω), x
)
/∈B
)
= ϕ0
(
1 −P
(
˜y
(
a(ω), x
)
∈B
))
,
which yields the assertion, cf. (1.51c).
⬜ 
Remark 1.5 Note thatupper P left parenthesis upper S right parenthesis greater than or equals alpha Subscript sP(S) ≥αs with a given minimum reliabilityalpha Subscript s Baseline element of left parenthesis 0 comma 1 right bracketαs ∈(0, 1] can 
be guaranteed by the expected cost constraint 
upper E phi left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis less than or equals left parenthesis 1 minus alpha Subscript s Baseline right parenthesis phi 0 periodEϕ
(
˜y
(
a(ω), x
))
≤(1 −αs)ϕ0.
Example 1.5 If phi equals 1 Subscript upper B Sub Superscript cϕ = 1Bc is the indicator function of the complement upper B Superscript cBc of upper BB, then 
phi 0 equals 1ϕ0 = 1 and (1.52) holds with the equality sign (Fig. 1.3). 
Example 1.6 For a given positive deﬁnite m times mm × m matrix upper CC, deﬁne phi left parenthesis y right parenthesis colon equals y Superscript upper T Baseline upper C y comma y element of double struck upper R Superscript mϕ(y) := yT Cy,
y ∈Rm. Then, cf. (1.51b), (1.51d), (1.51e),

32
1
Stochastic Optimization Methods
Fig. 1.3 Functionphi equals phi left parenthesis y right parenthesisϕ = ϕ(y)
min Subscript y element of vertical bar upper B Baseline phi left parenthesis y right parenthesis equals min Underscript 1 less than or equals i less than or equals m Endscripts left brace min Underscript y Subscript i Baseline greater than or equals 1 Endscripts y Superscript upper T Baseline upper C y comma min Underscript y Subscript i Baseline less than or equals negative 1 Endscripts y Superscript upper T Baseline upper C y right brace periodminy∈| Bϕ(y) = min
1≤i≤m
{
min
yi≥1 yT Cy, min
yi≤−1 yT Cy
}
.
(1.53a) 
Thus, the lower bound phi 0ϕ0 follows by considering the convex optimization prob-
lems arising in the right-hand side of (1.53a). Moreover, the expectation upper E phi left parenthesis y overTilde right parenthesisEϕ( ˜y)
needed in (1.52) is given, see (1.51a), by 
StartLayout 1st Row 1st Column Blank 2nd Column upper E phi left parenthesis ModifyingAbove y With tilde right parenthesis equals upper E ModifyingAbove y With tilde Superscript upper T Baseline upper C ModifyingAbove y With tilde equals upper E t r upper C ModifyingAbove y With tilde ModifyingAbove y With tilde Superscript upper T Baseline comma 2nd Row 1st Column Blank 2nd Column equals t r upper C left parenthesis d i a g rho right parenthesis Superscript negative 1 Baseline left parenthesis c o v y left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis plus left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis minus y Subscript c Baseline right parenthesis left parenthesis ModifyingAbove y With quotation dash left parenthesis x right parenthesis minus y Subscript c Baseline right parenthesis Superscript upper T Baseline right parenthesis left parenthesis d i a g rho right parenthesis Superscript negative 1 Baseline comma EndLayoutEϕ( ˜y) = E ˜yT C ˜y = EtrC ˜y ˜yT ,
= trC(diag ρ)−1
(
cov y
(
a(·), x
)
+
(
y(x) −yc
)(
y(x) −yc
)T )
(diag ρ)−1,
(1.53b) 
where ”tr” denotes the trace of a matrix, diag rhoρ is the diagonal matrix diag rho colon equals left parenthesis rho Subscript i Baseline delta Subscript i j Baseline right parenthesis comma y Subscript c Baseline colon equals left parenthesis y Subscript i c Baseline right parenthesisρ :=
(ρiδi j), yc := (yic), see  (1.50e), and ModifyingAbove y With quotation dash equals ModifyingAbove y With quotation dash left parenthesis x right parenthesis colon equals left parenthesis upper E y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesisy = y(x) :=
(
Eyi
(
a(ω), x
))
. Moreover, for 
upper E phi left parenthesis y overTilde right parenthesisEϕ( ˜y) we have the upper bound 
upper E phi left parenthesis ModifyingAbove y With tilde right parenthesis less than or equals parallel to upper C parallel to parallel to left parenthesis d i a g rho right parenthesis Superscript negative 1 Baseline parallel to squared left parenthesis t r c o v y left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis plus parallel to ModifyingAbove y With quotation dash left parenthesis x right parenthesis minus y Subscript c Baseline parallel to squared right parenthesis periodEϕ( ˜y) ≤||C|| ||(diag ρ)−1||2(
tr covy
(
a(·), x
)
+ ||y(x) −yc||2)
.
(1.53c) 
Example 1.7 Assuming in Example 1.6 that upper C equalsC = diag left parenthesis c Subscript i i Baseline right parenthesis(cii) is a diagonal matrix 
with positive elements c Subscript i i Baseline greater than 0 comma i equals 1 comma ellipsis comma mcii > 0, i = 1, . . . , m, then 
min Subscript y element of vertical bar upper B Baseline phi left parenthesis y right parenthesis equals min Subscript 1 less than or equals i less than or equals m Baseline c Subscript i i Baseline greater than 0 commaminy∈| Bϕ(y) = min1≤i≤mcii > 0,
(1.53d) 
and upper E phi left parenthesis y overTilde right parenthesisEϕ( ˜y) is given by

1.7 Approximation of Probabilities—Probability Inequalities
33
StartLayout 1st Row 1st Column upper E phi left parenthesis ModifyingAbove y With tilde right parenthesis 2nd Column equals sigma summation Underscript i equals 1 Overscript m Endscripts c Subscript i i Baseline StartFraction upper E left parenthesis y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus y Subscript i c Baseline right parenthesis squared Over rho Subscript i Superscript 2 Baseline EndFraction 2nd Row 1st Column Blank 2nd Column equals sigma summation Underscript i equals 1 Overscript m Endscripts c Subscript i i Baseline StartFraction sigma Subscript y Sub Subscript i Subscript Superscript 2 Baseline left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis plus left parenthesis ModifyingAbove y With quotation dash Subscript i Baseline left parenthesis x right parenthesis minus y Subscript i c Baseline right parenthesis squared Over rho Subscript i Superscript 2 Baseline EndFraction period EndLayoutEϕ( ˜y) =
m
∑
i=1
cii
E
(
yi
(
a(ω), x
)
−yic
)2
ρ2
i
(1.53e) 
= 
m
∑ 
i=1 
cii 
σ 2 
yi 
( 
a(·), x 
) 
+ 
( 
yi (x) − yic 
)2 
ρ2 
i 
. 
1.7.2.2
One-Sided Inequalities 
Suppose that exactly one of the two boundsy Subscript l i Baseline less than y Subscript u iyli < yui is inﬁnite for eachi equals 1 comma ellipsis comma mi = 1, . . . , m. 
Multiplying the corresponding constraints in (1.50a) by negative 1−1, the admissible domain 
upper S equals upper S left parenthesis x right parenthesisS = S(x), cf.  (1.50b), can be represented by 
upper S left parenthesis x right parenthesis equals left brace a element of double struck upper R Superscript nu Baseline colon ModifyingAbove y With tilde Subscript i Baseline left parenthesis a comma x right parenthesis less than left parenthesis less than or equals right parenthesis 0 comma i equals 1 comma ellipsis comma m right brace commaS(x) = {a ∈Rν : ˜yi(a, x) < (≤) 0, i = 1, . . . , m} ,
(1.54a) 
where y overTilde Subscript i Baseline colon equals y Subscript i minus y Subscript u i ˜yi := yi −yui, if  y Subscript l i Baseline equals negative normal infinityyli = −∞, and y overTilde Subscript i Baseline colon equals y Subscript l i minus y Subscript i ˜yi := yli −yi, if  y Subscript u i Baseline equals plus normal infinityyui = +∞. If we set  
ModifyingAbove y With tilde left parenthesis a comma x right parenthesis colon equals left parenthesis ModifyingAbove y With tilde Subscript i Baseline left parenthesis a comma x right parenthesis right parenthesis ˜y(a, x) :=
(
˜yi(a, x)
)
and 
upper B overTilde colon equals left brace y element of double struck upper R Superscript m Baseline colon y Subscript i Baseline less than left parenthesis less than or equals right parenthesis 0 comma i equals 1 comma ellipsis comma m right brace comma ˜B :=
{
y ∈Rm : yi < (≤) 0, i = 1, . . . , m
}
,
(1.54b) 
then 
upper P left parenthesis upper S left parenthesis x right parenthesis right parenthesis equals upper P left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis element of upper B overTilde right parenthesis periodP
(
S(x)
)
= P
(
˜y
(
a(ω), x
)
∈˜B
)
.
(1.54c) 
In this case, cf. (1.51d), (1.51e), also consider a function phi colon double struck upper R Superscript m Baseline right arrow double struck upper Rϕ : Rm →R such that 
StartLayout 1st Row 1st Column i right parenthesis 2nd Column phi left parenthesis y right parenthesis greater than or equals 0 comma 3rd Column y element of double struck upper R Superscript m 4th Column Blank 5th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column i i right parenthesis 2nd Column phi left parenthesis y right parenthesis greater than or equals phi 0 greater than 0 comma 3rd Column i f y not an element of upper B overTilde period EndLayouti)ϕ(y) ≥0,
y ∈Rm
(1.55a) 
StartLayout 1st Row 1st Column i right parenthesis 2nd Column phi left parenthesis y right parenthesis greater than or equals 0 comma 3rd Column y element of double struck upper R Superscript m 4th Column Blank 5th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column i i right parenthesis 2nd Column phi left parenthesis y right parenthesis greater than or equals phi 0 greater than 0 comma 3rd Column i f y not an element of upper B overTilde period EndLayoutii)ϕ(y) ≥ϕ0 > 0,
if y /∈˜B.
(1.55b) 
Then, corresponding to Theorem 1.1, we have this result: 
Theorem 1.2 (Markov-type inequality) If phi colon double struck upper R Superscript m Baseline right arrow double struck upper Rϕ : Rm →R is any (measurable) func-
tion fulﬁlling conditions (1.55a,b), then 
upper P left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than left parenthesis less than or equals right parenthesis 0 right parenthesis greater than or equals 1 minus StartFraction 1 Over phi 0 EndFraction upper E phi left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis commaP
(
˜y
(
a(ω), x
)
< (≤) 0
)
≥1 −1
ϕ0
Eϕ
(
˜y
(
a(ω), x
))
,
(1.56) 
provided that the expectation in (1.56) exists and is ﬁnite. 
Remark 1.6 Note that a related inequality was already used in Example 1.2. 
Example 1.8 If phi left parenthesis y right parenthesis colon equals sigma summation Underscript i equals 1 Overscript m Endscripts w Subscript i Baseline e Superscript alpha Super Subscript i Superscript y Super Subscript iϕ(y) :=
m∑
i=1
wieαi yi with positive constants w Subscript i Baseline comma alpha Subscript i Baseline comma i equals 1 comma ellipsis comma mwi, αi, i = 1, . . . , m, 
then

34
1
Stochastic Optimization Methods
inf Underscript y element of vertical bar upper B overTilde Endscripts phi left parenthesis y right parenthesis equals min Subscript 1 less than or equals i less than or equals m Baseline w Subscript i Baseline greater than 0 inf
y∈| ˜B
ϕ(y) = min1≤i≤mwi > 0
(1.57a) 
and 
upper E phi left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis equals sigma summation Underscript i equals 1 Overscript m Endscripts w Subscript i Baseline upper E e Superscript alpha Super Subscript i Superscript ModifyingAbove y With tilde Super Subscript i Superscript left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Baseline commaEϕ
(
˜y
(
a(ω), x
))
=
m
∑
i=1
wi Eeαi ˜yi
(
a(ω),x
)
,
(1.57b) 
where the expectation in (1.57b) can be computed approximately by Taylor expan-
sion: 
StartLayout 1st Row 1st Column upper E e Superscript alpha Super Subscript i Superscript ModifyingAbove y With tilde Super Subscript i 2nd Column equals e Superscript alpha Super Subscript i Superscript ModifyingAbove Above ModifyingAbove y With tilde With quotation dash Super Subscript i Superscript left parenthesis x right parenthesis Baseline upper E e Superscript alpha Super Subscript i Superscript left parenthesis ModifyingAbove y With tilde Super Subscript i Superscript minus ModifyingAbove Above ModifyingAbove y With tilde With quotation dash Super Subscript i Superscript left parenthesis x right parenthesis right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column almost equals e Superscript alpha Super Subscript i Superscript ModifyingAbove Above ModifyingAbove y With tilde With quotation dash Super Subscript i Superscript left parenthesis x right parenthesis Baseline left parenthesis 1 plus StartFraction alpha Subscript i Superscript 2 Baseline Over 2 EndFraction upper E left parenthesis y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus ModifyingAbove y With quotation dash Subscript i Baseline left parenthesis x right parenthesis right parenthesis squared right parenthesis 3rd Row 1st Column Blank 2nd Column equals e Superscript alpha Super Subscript i Superscript ModifyingAbove Above ModifyingAbove y With tilde With quotation dash Super Subscript i Superscript left parenthesis x right parenthesis Baseline left parenthesis 1 plus StartFraction alpha Subscript i Superscript 2 Baseline Over 2 EndFraction sigma Subscript y Sub Subscript i Subscript left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis Superscript 2 Baseline right parenthesis period EndLayoutEeαi ˜yi = eαi ˜yi(x)Eeαi
(
˜yi−˜yi(x)
)
≈eαi ˜yi(x)
(
1 + α2
i
2 E
(
yi
(
a(ω), x
)
−yi(x)
)2)
= eαi ˜yi(x)
(
1 + α2
i
2 σ 2
yi(a(·),x)
)
.
(1.57c) 
Supposing that y Subscript i Baseline equals y Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisyi = yi
(
a(ω), x
)
is a normal distributed random variable, then 
upper E e Superscript alpha Super Subscript i Superscript ModifyingAbove y With tilde Super Subscript i Superscript Baseline equals e Superscript alpha Super Subscript i Superscript ModifyingAbove Above ModifyingAbove y With tilde With bar Super Subscript i Superscript left parenthesis x right parenthesis Baseline e Superscript one half alpha Super Subscript i Super Superscript 2 Superscript sigma Super Subscript y Super Sub Subscript i Super Subscript left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis Super Superscript 2 Superscript Baseline periodEeαi ˜yi = eαi ¯˜yi(x)e
1
2 α2
i σ 2
yi (a(·),x).
(1.57d) 
Example 1.9 Consider phi left parenthesis y right parenthesis colon equals left parenthesis y minus b right parenthesis Superscript upper T Baseline upper C left parenthesis y minus b right parenthesisϕ(y) := (y −b)T C(y −b), where, cf. Example 1.6, upper CC is a 
positive deﬁnite m times mm × m matrix and b less than 0b < 0 a ﬁxed  mm-vector. In this case we again 
have 
min Subscript y element of vertical bar upper B overTilde Baseline phi left parenthesis y right parenthesis equals min Subscript 1 less than or equals i less than or equals m Baseline min Subscript y Sub Subscript i Subscript greater than or equals 0 Baseline phi left parenthesis y right parenthesisminy∈| ˜Bϕ(y) = min1≤i≤m minyi≥0ϕ(y)
and 
StartLayout 1st Row 1st Column upper E phi left parenthesis ModifyingAbove y With tilde right parenthesis 2nd Column equals upper E left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus b right parenthesis Superscript upper T Baseline upper C left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus b right parenthesis 2nd Row 1st Column Blank 2nd Column equals t r upper C upper E left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus b right parenthesis left parenthesis ModifyingAbove y With tilde left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus b right parenthesis Superscript upper T Baseline period EndLayoutEϕ( ˜y) = E
(
˜y
(
a(ω), x
)
−b
)T
C
(
˜y
(
a(ω), x
)
−b
)
= trC E
(
˜y
(
a(ω), x
)
−b
) (
˜y
(
a(ω), x
)
−b
)T
.
Note that 
ModifyingAbove y With tilde Subscript i Baseline left parenthesis a comma x right parenthesis minus b Subscript i Baseline equals StartLayout Enlarged left brace 1st Row 1st Column y Subscript i Baseline left parenthesis a comma x right parenthesis minus left parenthesis y Subscript u i Baseline plus b Subscript i Baseline right parenthesis comma 2nd Column i f y Subscript l i Baseline equals negative normal infinity 2nd Row 1st Column y Subscript l i Baseline minus b Subscript i Baseline minus y Subscript i Baseline left parenthesis a comma x right parenthesis comma 2nd Column i f y Subscript u i Baseline equals plus normal infinity comma EndLayout ˜yi(a, x) −bi =
{ yi(a, x) −(yui + bi), if yli = −∞
yli −bi −yi(a, x),
if yui = +∞,
where y Subscript u i Baseline plus b Subscript i Baseline less than y Subscript u iyui + bi < yui and y Subscript l i Baseline less than y Subscript l i Baseline minus b Subscript iyli < yli −bi. 
Remark 1.7 The one-sided case can also be reduced approximatively to the two-
sided case by selecting a sufﬁciently large, but ﬁnite upper bound y overTilde Subscript u i Baseline element of double struck upper R ˜yui ∈R, lower  
bound y overTilde Subscript l i Baseline element of double struck upper R ˜yli ∈R, resp., if y Subscript u i Baseline equals plus normal infinity comma y Subscript l i Baseline equals negative normal infinityyui = +∞, yli = −∞.

References
35
References 
1. Augusti, G., et al.: Probabilistic Methods in Structural Engineering. Chapman and Hall, London 
(1984). https://doi.org/10.1201/9781482267457 
2. Aurnhammer, A.: Optimale Stochastische Trajektorienplanung und Regelung von Industrier-
obotern. No. 1032 in Fortschrittberichte VDI, Reihe 8. VDI-Verlag GmbH, Düsseldorf (2004) 
3. Bastian, G., et al.: Theory of Robot Control. Springer, Berlin (1996) 
4. Bauer, H.: Wahrscheinlichkeitstheorie und Grundzüge der Masstheorie. Walter de Gruyter & 
Co., Berlin (1968) 
5. Bauer, H.: Probability Theory. De Gruyter, Berlin (1996) 
6. Berger, J.: Statistical Decision Theory and Bayesian Analysis. Springer, New York (1985) 
7. Bertsekas, D.: Stochastic optimization problems with nondifferentiable cost functionals. J. 
Optim. Theory Appl. 12(2), 218–231 (1973). https://doi.org/10.1007/BF00934819 
8. Biles, W.E., Swain, J.J.: Mathematical programming and the optimization of computer simula-
tions. In: R.S. Avriel M.and Dembo (ed.) Engineering Optimization, Mathematical Program-
ming Studies, vol. 11, pp. 189–207. Springer, Berlin (1979) 
9. Box, G., Draper, N.: Empirical Model-building and Response Surfaces. Wiley, New York 
(1987) 
10. Box, G.E.P., Wilson, K.B.: On the experimental attainment of optimum conditions. J. Roy. 
Stat. Soc.: Ser. B (Methodol.) 13(1), 1–38 (1951). https://doi.org/10.1111/j.2517-6161.1951. 
tb00067.x 
11. Bucher, C., Bourgund, U.: A fast and efﬁcient response surface approach for structural reliability 
problems. Struct. Saf. 7(1), 57–66 (1990). https://doi.org/10.1016/0167-4730(90)90012-E 
12. Bullen, P.: Handbook of Means and Their Inequalities. Kluwer Academic Publishing, Dordrecht 
(2003) 
13. Chankong, V., Haimes, Y.Y.: Multiobjective Decision Making. North Holland, New York (1983) 
14. Craig, J.: Adaptive Control of Mechanical Manipulators. Addison-Wesley (1988) 
15. Dieudonné, J.: Foundations of Modern Analysis. Academic, New York (1969) 
16. Ermoliev, Y., Wets, R. (eds.): Numerical Techniques for Stochastic Optimization, Springer 
Series in Computational Mathematics, vol. 10. Springer, Berlin (1988) 
17. Galambos, J., Simonelli, I.: Bonferroni-Type Inequalities with Applications. Springer, New 
York (1996) 
18. Gänssler, P., Stute, W.: Wahrscheinlichkeitstheorie. Springer, Berlin (1977) 
19. Jacobson, S., Schruben, L.: Techniques for simulation response optimization. Oper. Res. Lett. 
8(1), 1–9 (1989). https://doi.org/10.1016/0167-6377(89)90025-4 
20. Kall, P.: Stochastic Linear Programming. Springer, Berlin (1976) 
21. Kall, P., Wallace, S.: Stochastic Programming. Stochastic Programming. Wiley, Chichester 
(1994) 
22. Kesten, O., et al. (eds.): Review of Economic Design. Springer, Heidelberg 
23. Kirsch, U.: Structural Optimization. Springer, Berlin (1993) 
24. Kleijnen, J.: Statistical Tools for Simulation Practitioners. No. 76 in Statistics. Marcel Dekker 
(1987) 
25. Luenberger, D.: Optimization by Vector Space Methods. Wiley, New York (1969) 
26. Luenberger, D.: Introduction to Linear and Nonlinear Programming. Addison-Wesley Publish-
ing Company, Reading (1973) 
27. Marti, K.: Approximationen stochastischer Optimierungsprobleme. Hain Konigstein/Ts (1979) 
28. Marti, K.: Optimierungsverfahren. Vorlesung an der Hochschule der Bundeswehr München 
(1983) 
29. Marti, K.: Stochastic optimization methods in structural mechanics. ZAMM 70, T 742–T745 
(1990)) 
30. Marti, K.: Path planning for robots under stochastic uncertainty. Optimization 45(1–4), 163– 
195 (1999). https://doi.org/10.1080/02331939908844432 
31. Marti, K.: Stochastic optimization methods in optimal engineering design under stochastic 
uncertainty. ZAMM 83(11), 1–18 (2003)

36
1
Stochastic Optimization Methods
32. Marti, K.: Reliability analysis of technical systems/structures by means of polyhedral approx-
imation of the safe/unsafe domain. GAMM Mitteilungen 30(2), 211–254 (2007) 
33. Marti, K.: Stochastic Optimization Methods, 2nd edn. Springer, Berlin (2008). https://doi.org/ 
10.1007/978-3-540-79458-5 
34. Marti, K., Ermoliev, Y., Pﬂug, G. (eds.): Dynamic Stochastic Optimization, LNEMS, vol. 532. 
Springer, Berlin (2004) 
35. Montgomery, C.: Design and Analysis of Experiments. Wiley, New York (1984) 
36. Myers, R.: Response Surface Methodology. Allyn and Bacon, Boston (1971) 
37. Pfeiffer, F., Johanni, R.: A concept for manipulator trajectory planning. IEEE J. Robot. Autom. 
3(2), 115–123 (1987) 
38. Prékopa, A., Szántai, T.: Flood control reservoir system design using stochastic programming. 
In: Balinski, M.L., Lemarechal, C. (eds.) Mathematical Programming in Use, pp. 138–151. 
Springer, Berlin (1978) 
39. Rackwitz, R., Cuntze, R.: Formulations of reliability-oriented optimization. Eng. Optim. 11(1– 
2), 69–76 (1987). https://doi.org/10.1080/03052158708941037 
40. Richter, H.: Wahrscheinlichkeitstheorie. Springer, Berlin (1966) 
41. Sawaragi, Y., Nakayama, H., Tanino, T.: Theory of Multiobjective Optimization. Academic, 
New York (1985) 
42. Schoofs, A.: Experimental design and structural optimization. Ph.D. thesis, Mechanical Engi-
neering (1987). https://doi.org/10.6100/IR270283 
43. Schuëller, G., Gasser, M.: Some basic principles of reliability-based optimization (rbo) of 
structure and mechanical components. In: Marti, K., Kall, P. (eds.) Stochastic Programming 
Methods and Technical Applications. Lecture Notes in Economics and Mathematical Systems 
(LNEMS), vol. 458, pp. 80–103. Springer, Berlin (1998) 
44. Schuëller, G., Stix, R.: A critical appraisal of methods to determine failure probabilities. Struct. 
Saf. 4(4), 293–309 (1987). https://doi.org/10.1016/0167-4730(87)90004-X 
45. Sciavicco, L., Siciliano, B.: Modeling and Control of Robot Manipulators. Springer, London 
(2000) 
46. Slotine, J.J., Li, W.: Applied Nonlinear Control. Prentice-Hall Int. Inc., Englewood Chiffs 
(1991) 
47. Stengel, R.: Stochastic Optimal Control: Theory and Application. Wiley, New York (1986) 
48. Stöckl, G.: Optimaler Entwurf Elastoplastischer Mechanischer Strukturen Unter Stochastischer 
Unsicherheit. No. 278 in Fortschritt-Berichte VDI, Reihe 18. VDI-Verlag GmbH, Düsseldorf 
(2003) 
49. Thoft-Christensen, P., Baker, M.: Structural Reliability Theory and its Applications. Springer, 
Berlin (1982) 
50. Tong, Y.: Probability Inequalities in Multivariate Distributions. Academic, New York (1980)

Chapter 2 
Solution of Stochastic Linear Programs 
by Discretization Methods 
Abstract Solution procedures for stochastic linear optimization problems (also 
called stochastic linear programs (SLP)) by means of discretization of the probability 
distribution of the random parameters are treated in this chapter: Given a stochastic 
cost vector c left parenthesis omega right parenthesisc(ω), a stochastic technology matrix upper T left parenthesis omega right parenthesisT (ω) and a stochastic right-hand 
side, h left parenthesis omega right parenthesish(ω), consider a linear program for minimizing a linear function c left parenthesis omega right parenthesis Superscript upper T Baseline xc(ω)T x of 
the design vector xx subject to the linear constraints upper T left parenthesis omega right parenthesis x equals h left parenthesis omega right parenthesisT (ω)x = h(ω), x greater than or equals 0x ≥0. Due  to  
the stochastic variations of the dataleft parenthesis c comma upper T comma h right parenthesis equals left parenthesis c left parenthesis omega right parenthesis comma upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis(c, T, h) = (c(ω), T (ω), h(ω)), for the selection 
of an optimal decision vector x Superscript asteriskx∗, an appropriate deterministic substitute problem 
has to be chosen. Here, we look for optimal decision vectors x Superscript asterisk Baseline greater than or equals 0x∗≥0 minimizing 
the expected total cost deﬁned by the sum of the primal costs c left parenthesis omega right parenthesis Superscript upper T Baseline xc(ω)T x and the costs 
p left parenthesis upper T left parenthesis omega right parenthesis x minus h left parenthesis omega right parenthesis right parenthesisp(T (ω)x −h(ω)) caused by the violation of the equality constraintsupper T left parenthesis omega right parenthesis x equals h left parenthesis omega right parenthesisT (ω)x = h(ω). 
These costs are determined here by means of sublinear functionsp equals p left parenthesis z right parenthesisp = p(z), involving, 
e.g., the class of norms for an error vector zz. Moreover, several sublinear cost func-
tions can be represented by the value function of an optimization problem, as, e.g., 
a Minkowski functional, see Chap. 11. Then, error estimates are given, and a priori 
bounds for the approximation error are derived. Furthermore, exploiting invariance 
properties of the probability distribution of the random parameters, problem-oriented 
discretizations are derived which simplify then the computation of admissible descent 
directions at non-stationary points. 
Reproduced with permission from Springer Nature: Marti, K. (2002). On Solution of Stochastic 
Linear Programs by Discretization Methods. In: Dzemyda, G., normal upper S With caronˇSaltenis, V., normal upper Z With caronˇZilinskas, A. (eds) 
Stochastic and Global Optimization. Nonconvex Optimization and Its Applications, vol 59. Springer, 
Boston, MA. https://doi.org/10.1007/0-306-47648-7_11. 
© Kluwer Academic Publishers, part of Springer Nature 2002 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_2 
37

38
2
Solution of Stochastic Linear Programs by Discretization Methods
2.1 A Priori Error Bounds 
A well-known method to handle linear programs 
StartLayout 1st Row 1st Column min 2nd Column c left parenthesis omega right parenthesis Superscript upper T Baseline x 2nd Row 1st Column s period t period 2nd Column Blank 3rd Row 1st Column Blank 2nd Column upper T left parenthesis omega right parenthesis x equals h left parenthesis omega right parenthesis comma 4th Row 1st Column Blank 2nd Column x element of upper D EndLayout min c(ω)T x
(2.1) 
s.t. 
T (ω)x = h(ω), 
x ∈ D 
with random dataleft parenthesis c left parenthesis omega right parenthesis comma upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
c(ω), T (ω), h(ω)
)
on a probability spaceleft parenthesis normal upper Omega comma script upper A comma upper P right parenthesis(Ω, A, P) is to replace 
(2.1), cf. [ 5, 10], by the stochastic optimization problem 
StartLayout 1st Row 1st Column min 2nd Column upper F left parenthesis x right parenthesis 2nd Row 1st Column s period t period 2nd Column x element of upper D comma EndLayout min
F(x)
(2.2a) 
s.t. 
x ∈ D, 
where 
upper F left parenthesis x right parenthesis equals upper E left parenthesis c left parenthesis omega right parenthesis Superscript upper T Baseline x plus p left parenthesis h left parenthesis omega right parenthesis minus upper T left parenthesis omega right parenthesis x right parenthesis right parenthesisF(x) = E
(
c(ω)T x + p
(
h(ω) −T (ω)x
))
(2.2b) 
and p equals p left parenthesis z right parenthesisp = p(z) denote the so-called second stage costs deﬁned by 
p left parenthesis z right parenthesis equals inf left brace g Superscript upper T Baseline y colon upper W y equals z comma y greater than or equals 0 right brace comma z element of double struck upper R Superscript m Baseline periodp(z) = inf{gT y : W y = z, y ≥0},
z ∈Rm.
(2.2c) 
Here,upper DD is a ﬁxed convex polyhedron indouble struck upper R Superscript nRn, hence, “x element of upper Dx ∈D” represents the deter-
ministic constraints in (2.1), and “E” denotes the expectation operator. In the follow-
ing we suppose that the m times n 1m × n1 matrix upper WW and the mm vector qq are related such that 
StartLayout 1st Row 1st Column StartSet upper W y colon x greater than or equals 0 EndSet 2nd Column equals 3rd Column double struck upper R Superscript m Baseline period 2nd Row 1st Column Blank 3rd Row 1st Column StartSet v colon upper W Superscript upper T Baseline v less than or equals q EndSet 2nd Column not equals 3rd Column normal empty set period EndLayout{W y : x ≥0} = Rm.
(2.3a) 
StartLayout 1st Row 1st Column StartSet upper W y colon x greater than or equals 0 EndSet 2nd Column equals 3rd Column double struck upper R Superscript m Baseline period 2nd Row 1st Column Blank 3rd Row 1st Column StartSet v colon upper W Superscript upper T Baseline v less than or equals q EndSet 2nd Column not equals 3rd Column normal empty set period EndLayout{v : W T v ≤q} /= ∅.
(2.3b) 
Thus, the loss functionpp is deﬁned on the wholedouble struck upper R Superscript mRm. Ifq greater than or equals 0q ≥0, then (2.3b) holds, 
and pp is nonnegative. According to [ 4] we know that pp is a sublinear function on 
double struck upper R Superscript mRm, thus 
StartLayout 1st Row 1st Column p left parenthesis z plus w right parenthesis 2nd Column less than or equals p left parenthesis z right parenthesis plus p left parenthesis w right parenthesis 3rd Column f o r a l l 4th Column z comma w element of double struck upper R Superscript m Baseline 2nd Row 1st Column Blank 3rd Row 1st Column p left parenthesis lamda z right parenthesis 2nd Column equals lamda p left parenthesis z right parenthesis 3rd Column f o r a l l 4th Column z element of double struck upper R Superscript m Baseline comma lamda greater than or equals 0 period EndLayoutp(z + w) ≤p(z) + p(w)
for all z, w ∈Rm
(2.4a) 
StartLayout 1st Row 1st Column p left parenthesis z plus w right parenthesis 2nd Column less than or equals p left parenthesis z right parenthesis plus p left parenthesis w right parenthesis 3rd Column f o r a l l 4th Column z comma w element of double struck upper R Superscript m Baseline 2nd Row 1st Column Blank 3rd Row 1st Column p left parenthesis lamda z right parenthesis 2nd Column equals lamda p left parenthesis z right parenthesis 3rd Column f o r a l l 4th Column z element of double struck upper R Superscript m Baseline comma lamda greater than or equals 0 period EndLayoutp(λz) = λp(z)
for all z ∈Rm, λ ≥0.
(2.4b) 
Consequently, pp is a convex function on double struck upper R Superscript mRm, and we have that 
StartLayout 1st Row 1st Column p left parenthesis 0 right parenthesis 2nd Column equals 0 2nd Row 1st Column Blank 3rd Row 1st Column minus p left parenthesis negative z right parenthesis 2nd Column less than or equals p left parenthesis z right parenthesis 3rd Column f o r a l l 4th Column z element of double struck upper R Superscript m 4th Row 1st Column Blank 5th Row 1st Column minus p left parenthesis z minus w right parenthesis 2nd Column less than or equals p left parenthesis w right parenthesis minus p left parenthesis z right parenthesis less than or equals p left parenthesis w minus z right parenthesis 3rd Column f o r a l l 4th Column z comma w element of double struck upper R Superscript m Baseline period EndLayoutp(0) = 0
(2.4c) 
StartLayout 1st Row 1st Column p left parenthesis 0 right parenthesis 2nd Column equals 0 2nd Row 1st Column Blank 3rd Row 1st Column minus p left parenthesis negative z right parenthesis 2nd Column less than or equals p left parenthesis z right parenthesis 3rd Column f o r a l l 4th Column z element of double struck upper R Superscript m 4th Row 1st Column Blank 5th Row 1st Column minus p left parenthesis z minus w right parenthesis 2nd Column less than or equals p left parenthesis w right parenthesis minus p left parenthesis z right parenthesis less than or equals p left parenthesis w minus z right parenthesis 3rd Column f o r a l l 4th Column z comma w element of double struck upper R Superscript m Baseline period EndLayout −p(−z) ≤p(z)
for all z ∈Rm
(2.4d) 
StartLayout 1st Row 1st Column p left parenthesis 0 right parenthesis 2nd Column equals 0 2nd Row 1st Column Blank 3rd Row 1st Column minus p left parenthesis negative z right parenthesis 2nd Column less than or equals p left parenthesis z right parenthesis 3rd Column f o r a l l 4th Column z element of double struck upper R Superscript m 4th Row 1st Column Blank 5th Row 1st Column minus p left parenthesis z minus w right parenthesis 2nd Column less than or equals p left parenthesis w right parenthesis minus p left parenthesis z right parenthesis less than or equals p left parenthesis w minus z right parenthesis 3rd Column f o r a l l 4th Column z comma w element of double struck upper R Superscript m Baseline period EndLayout −p(z −w) ≤p(w) −p(z) ≤p(w −z)
for all z, w ∈Rm.
(2.4e)

2.2 Disretization and Error Bounds
39
Moreover, if 
parallel to p parallel to equals sup Underscript parallel to z parallel to Subscript upper E Baseline less than or equals 1 Endscripts StartAbsoluteValue p left parenthesis z right parenthesis EndAbsoluteValue equals sup Underscript parallel to z parallel to Subscript upper E Baseline equals 1 Endscripts StartAbsoluteValue p left parenthesis z right parenthesis EndAbsoluteValue left parenthesis less than plus normal infinity right parenthesis||p|| = sup
||z||E≤1
|||p(z)
||| = sup
||z||E=1
|||p(z)
||| (< +∞)
(2.4f) 
denotes the norm of the sublinear function pp, then 
StartLayout 1st Row 1st Column StartAbsoluteValue p left parenthesis z right parenthesis EndAbsoluteValue 2nd Column less than or equals parallel to p parallel to parallel to z parallel to 3rd Column f o r a l l 4th Column z element of double struck upper R Superscript m Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column StartAbsoluteValue p left parenthesis w right parenthesis minus p left parenthesis z right parenthesis EndAbsoluteValue 2nd Column less than or equals parallel to p parallel to parallel to w minus z parallel to 3rd Column f o r a l l 4th Column z comma w element of double struck upper R Superscript m Baseline period EndLayout |p(z)| ≤||p|| ||z||
for all z ∈Rm,
(2.4g) 
StartLayout 1st Row 1st Column StartAbsoluteValue p left parenthesis z right parenthesis EndAbsoluteValue 2nd Column less than or equals parallel to p parallel to parallel to z parallel to 3rd Column f o r a l l 4th Column z element of double struck upper R Superscript m Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column StartAbsoluteValue p left parenthesis w right parenthesis minus p left parenthesis z right parenthesis EndAbsoluteValue 2nd Column less than or equals parallel to p parallel to parallel to w minus z parallel to 3rd Column f o r a l l 4th Column z comma w element of double struck upper R Superscript m Baseline period EndLayout |p(w) −p(z)| ≤||p|| ||w −z||
for all z, w ∈Rm.
(2.4h) 
Denoting upper E c left parenthesis omega right parenthesisEc(ω) by ModifyingAbove c With quotation dashc, (2.2b) reads 
upper F left parenthesis x right parenthesis equals ModifyingAbove c With quotation dash Superscript upper T Baseline x plus upper E p left parenthesis h left parenthesis omega right parenthesis minus upper T left parenthesis omega right parenthesis x right parenthesis periodF(x) = cT x + Ep
(
h(ω) −T (ω)x
)
.
(2.5) 
2.2 Disretization and Error Bounds 
Approximating now the m times left parenthesis n plus 1 right parenthesism × (n + 1) random matrix left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
by a certain 
sequence of random matrices 
left parenthesis upper T Superscript 1 Baseline left parenthesis omega right parenthesis comma h Superscript 1 Baseline left parenthesis omega right parenthesis right parenthesis comma left parenthesis upper T squared left parenthesis omega right parenthesis comma h squared right parenthesis left parenthesis omega right parenthesis right parenthesis comma ellipsis comma left parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis comma h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis comma ellipsis comma
(
T 1(ω), h1(ω)
)
,
(
T 2(ω), h2)(ω)
)
, . . . ,
(
T N(ω), hN(ω)
)
, . . . ,
converging in some probabilistic sense toleft parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
, we obtain the approximative 
objective functions 
upper F Superscript upper N Baseline left parenthesis x right parenthesis equals ModifyingAbove c With quotation dash Superscript upper T Baseline x plus upper E p left parenthesis h Superscript upper N Baseline left parenthesis omega right parenthesis minus upper T Superscript upper N Baseline left parenthesis omega right parenthesis x right parenthesis comma upper N equals 1 comma 2 comma ellipsis periodF N(x) = cT x + Ep
(
hN(ω) −T N(ω)x
)
,
N = 1, 2, . . . .
(2.6) 
Using (2.4d), for upper F left parenthesis x right parenthesis minus upper F Superscript upper N Baseline left parenthesis x right parenthesisF(x) −F N(x) we obtain, see [ 4]. 
minus theta Superscript upper N Baseline left parenthesis x right parenthesis less than or equals upper F left parenthesis x right parenthesis minus upper F Superscript upper N Baseline left parenthesis x right parenthesis less than or equals eta Superscript upper N Baseline left parenthesis x right parenthesis comma −ϑ N(x) ≤F(x) −F N(x) ≤ηN(x),
(2.7a) 
where the lower, upper error term theta Superscript upper N Baseline left parenthesis x right parenthesis comma eta Superscript upper N Baseline left parenthesis x right parenthesisϑ N(x), ηN(x), resp., is deﬁned by 
StartLayout 1st Row 1st Column theta Superscript upper N Baseline left parenthesis x right parenthesis 2nd Column colon equals 3rd Column upper E p left parenthesis left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis x plus left parenthesis h Superscript upper N Baseline left parenthesis omega right parenthesis minus h left parenthesis omega right parenthesis right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column eta Superscript upper N Baseline left parenthesis x right parenthesis 2nd Column colon equals 3rd Column upper E p left parenthesis left parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis minus upper T left parenthesis omega right parenthesis right parenthesis x plus left parenthesis h left parenthesis omega right parenthesis minus h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis right parenthesis period EndLayoutϑ N(x) := Ep
((
T (ω) −T N(ω)
)
x +
(
hN(ω) −h(ω)
))
(2.7b) 
StartLayout 1st Row 1st Column theta Superscript upper N Baseline left parenthesis x right parenthesis 2nd Column colon equals 3rd Column upper E p left parenthesis left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis x plus left parenthesis h Superscript upper N Baseline left parenthesis omega right parenthesis minus h left parenthesis omega right parenthesis right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column eta Superscript upper N Baseline left parenthesis x right parenthesis 2nd Column colon equals 3rd Column upper E p left parenthesis left parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis minus upper T left parenthesis omega right parenthesis right parenthesis x plus left parenthesis h left parenthesis omega right parenthesis minus h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis right parenthesis period EndLayoutηN(x) := Ep
((
T N(ω) −T (ω)
)
x +
(
h(ω) −hN(ω)
))
.
(2.7c) 
Using discretization methods, the approximations left parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis comma h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
T N(ω), hN(ω)
)
are piecewise 
constant random variables, hence 
left parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis comma h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis equals left parenthesis upper T Superscript upper N comma j Baseline comma h Superscript upper N comma j Baseline right parenthesis f o r a l l omega element of normal upper Omega Superscript upper N comma j Baseline comma j equals 1 comma 2 comma ellipsis comma r Subscript upper N Baseline comma
(
T N(ω), hN(ω)
)
=
(
T N, j, hN, j)
for all ω ∈ΩN, j, j = 1, 2, . . . ,rN,
(2.8a)

40
2
Solution of Stochastic Linear Programs by Discretization Methods
where 
normal upper Omega Superscript upper N comma 1 Baseline comma normal upper Omega Superscript upper N comma 2 Baseline comma ellipsis comma normal upper Omega Superscript upper N comma j Baseline comma ellipsis comma normal upper Omega Superscript upper N comma r Super Subscript upper N Superscript Baseline i s a p a r t i t i o n o f normal upper Omega periodΩN,1, ΩN,2, . . . , ΩN, j, . . . , ΩN,rN is a partition of Ω.
(2.8b) 
Consequently, upper F Superscript upper N Baseline left parenthesis x right parenthesisF N(x), given by (2.6), reads 
upper F Superscript upper N Baseline left parenthesis x right parenthesis equals ModifyingAbove c With quotation dash Superscript upper T Baseline x plus sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis p left parenthesis h Superscript upper N comma j Baseline minus upper T Superscript upper N comma j Baseline x right parenthesis periodF N(x) = cT x +
rN
∑
j=1
P(ΩN, j)p(hN, j −T N, jx).
(2.8c) 
Using Jensen’s inequality, for the error estimate theta Superscript upper N Baseline left parenthesis x right parenthesisϑ N(x) we get 
StartLayout 1st Row 1st Column theta Superscript upper N Baseline left parenthesis x right parenthesis 2nd Column equals 3rd Column integral p left parenthesis left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis x plus left parenthesis h Superscript upper N Baseline left parenthesis omega right parenthesis minus h left parenthesis omega right parenthesis right parenthesis right parenthesis upper P left parenthesis d omega right parenthesis 2nd Row 1st Column Blank 2nd Column equals 3rd Column sigma summation Underscript j equals 1 Overscript r Subscript upper N Endscripts integral Underscript normal upper Omega Superscript upper N comma j Endscripts p left parenthesis left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis x plus left parenthesis h Superscript upper N comma j Baseline minus h left parenthesis omega right parenthesis right parenthesis right parenthesis upper P left parenthesis d omega right parenthesis 3rd Row 1st Column Blank 2nd Column greater than or equals 3rd Column sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis p left parenthesis left parenthesis ModifyingAbove upper T With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline minus upper T Superscript upper N comma j Baseline right parenthesis x plus left parenthesis n Superscript upper N comma j Baseline minus ModifyingAbove h With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline right parenthesis right parenthesis comma EndLayoutϑ N(x) =
{
p
((
T (ω) −T N(ω)
)
x +
(
hN(ω) −h(ω)
))
P(dω)
=
rN
∑
j=1
{
ΩN, j
p
((
T (ω) −T N, j)
x +
(
hN, j −h(ω)
))
P(dω)
≥
rN
∑
j=1
P(ΩN, j)p
((
T
ΩN, j
−T N, j)
x +
(
nN, j −h
ΩN, j))
,
(2.9a) 
where 
StartLayout 1st Row 1st Column ModifyingAbove upper T With quotation dash Superscript normal upper Omega Super Superscript upper N comma j 2nd Column equals 3rd Column StartFraction 1 Over upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis EndFraction integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts upper T left parenthesis omega right parenthesis upper P left parenthesis d omega right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove h With quotation dash Superscript normal upper Omega Super Superscript upper N comma j 2nd Column equals 3rd Column StartFraction 1 Over upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis EndFraction integral Underscript normal upper Omega Superscript upper N comma j Endscripts h left parenthesis omega right parenthesis upper P left parenthesis d omega right parenthesis EndLayoutT
ΩN, j
=
1
P(ΩN, j)
{
ΩN, j
T (ω)P(dω),
(2.9b) 
StartLayout 1st Row 1st Column ModifyingAbove upper T With quotation dash Superscript normal upper Omega Super Superscript upper N comma j 2nd Column equals 3rd Column StartFraction 1 Over upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis EndFraction integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts upper T left parenthesis omega right parenthesis upper P left parenthesis d omega right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove h With quotation dash Superscript normal upper Omega Super Superscript upper N comma j 2nd Column equals 3rd Column StartFraction 1 Over upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis EndFraction integral Underscript normal upper Omega Superscript upper N comma j Endscripts h left parenthesis omega right parenthesis upper P left parenthesis d omega right parenthesis EndLayouth
ΩN, j
=
1
P(ΩN, j)
{
ΩN, j
h(ω)P(dω)
(2.9c) 
are the conditional expectation ofupper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesisT (ω), h(ω), resp., with respect tonormal upper Omega Superscript upper N comma jΩN, j. Obviously, 
for eta Superscript upper N Baseline left parenthesis x right parenthesisηN(x) we obtain 
eta Superscript upper N Baseline left parenthesis x right parenthesis greater than or equals sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis p left parenthesis left parenthesis upper T Superscript upper N comma j Baseline minus ModifyingAbove upper T With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline right parenthesis x plus left parenthesis ModifyingAbove h With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline minus h Superscript upper N comma j Baseline right parenthesis right parenthesis periodηN(x) ≥
rN
∑
j=1
P(ΩN, j)p
((
T N, j −T
ΩN, j)
x +
(
h
ΩN, j
−hN, j))
.
(2.9d) 
Several publications [ 1, 2, 11] suggest to select the valuesupper T Superscript upper N comma j Baseline comma h Superscript upper N comma jT N, j, hN, j, resp., accord-
ing to 
StartLayout 1st Row 1st Column upper T Superscript upper N comma j 2nd Column equals 3rd Column ModifyingAbove upper T With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline equals StartFraction 1 Over upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis EndFraction integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts upper T left parenthesis omega right parenthesis upper P left parenthesis d omega right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column h Superscript upper N comma j 2nd Column equals 3rd Column ModifyingAbove h With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline equals StartFraction 1 Over upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis EndFraction integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts h left parenthesis omega right parenthesis upper P left parenthesis d omega right parenthesis period EndLayoutT N, j = T
ΩN, j
=
1
P(ΩN, j)
{
ΩN, j
T (ω)P(dω),
(2.10a) 
StartLayout 1st Row 1st Column upper T Superscript upper N comma j 2nd Column equals 3rd Column ModifyingAbove upper T With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline equals StartFraction 1 Over upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis EndFraction integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts upper T left parenthesis omega right parenthesis upper P left parenthesis d omega right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column h Superscript upper N comma j 2nd Column equals 3rd Column ModifyingAbove h With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline equals StartFraction 1 Over upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis EndFraction integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts h left parenthesis omega right parenthesis upper P left parenthesis d omega right parenthesis period EndLayouthN, j = h
ΩN, j
=
1
P(ΩN, j)
{
ΩN, j
h(ω)P(dω).
(2.10b)

2.2 Disretization and Error Bounds
41
In this case, (2.9a), (2.9d) and (2.4c) immediately yield this result: 
Lemma 2.1 If the approximation left parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis comma h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
T N(ω), hN(ω)
)
of left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
is deﬁned by 
(2.8a), (2.8b) and (2.10a), (2.10b), then theta Superscript upper N Baseline left parenthesis x right parenthesis greater than or equals 0 comma eta Superscript upper N Baseline left parenthesis x right parenthesis greater than or equals 0ϑ N(x) ≥0, ηN(x) ≥0 for all x element of double struck upper R Superscript nx ∈Rn. 
If the norm parallel to p parallel to||p|| of the sublinear loss function is known, then the error terms 
theta Superscript upper N Baseline left parenthesis x right parenthesis comma eta Superscript upper N Baseline left parenthesis x right parenthesisϑ N(x), ηN(x) can be further estimated from above. Indeed, (2.7b), (2.7c) and (2.4f) 
yield 
StartAbsoluteValue theta Superscript upper N Baseline left parenthesis x right parenthesis EndAbsoluteValue comma StartAbsoluteValue eta Superscript upper N Baseline left parenthesis x right parenthesis EndAbsoluteValue less than or equals parallel to p parallel to left parenthesis upper E double vertical bar left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis x double vertical bar plus upper E double vertical bar h Superscript upper N Baseline left parenthesis omega right parenthesis minus h left parenthesis omega right parenthesis double vertical bar right parenthesis period|ϑ N(x)|, |ηN(x)| ≤||p||
(
E
||||||
(
T (ω) −T N(ω)
)
x
|||||| + E
||||hN(ω) −h(ω)
||||
)
.
(2.11a) 
Denoting by 
upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis equals StartFraction 1 Over upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis EndFraction 1 Subscript normal upper Omega Sub Superscript upper N comma j Baseline upper P left parenthesis d omega right parenthesisP N, j(dω) =
1
P(ΩN, j)1ΩN, j P(dω)
(2.11b) 
the restriction of upper PP to the subdomains normal upper Omega Superscript upper N comma jΩN, j of normal upper OmegaΩ, according to (2.8a)–(2.8c), from  
(2.11a), (2.11b) we obtain 
StartLayout 1st Row 1st Column Blank 2nd Column StartAbsoluteValue theta Superscript upper N Baseline left parenthesis x right parenthesis EndAbsoluteValue comma StartAbsoluteValue eta Superscript upper N Baseline left parenthesis x right parenthesis EndAbsoluteValue 2nd Row 1st Column less than or equals 2nd Column parallel to p parallel to sigma summation Underscript j equals 1 Overscript r Subscript upper N Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis left parenthesis integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts double vertical bar left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis x double vertical bar upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis 3rd Row 1st Column Blank 2nd Column plus integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts parallel to h Superscript upper N comma j Baseline minus h left parenthesis omega right parenthesis parallel to upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis period EndLayout|ϑ N(x)|, |ηN(x)|
≤||p||
rN
∑
j=1
P(ΩN, j)
⎛
⎝
{
ΩN, j
||||||
(
T (ω) −T N, j)
x
|||||| P N, j(dω)
+
{
ΩN, j
||hN, j −h(ω)||P N, j(dω)
⎞
⎠.
(2.11c) 
Remark 2.1 (More general loss functions) If the sublinear loss function pp is 
replaced by a more general convex loss function uu, then the inequalities (2.11a), 
(2.11c) remain true if the left-hand side in (2.11a), (2.11c) is simply replaced by 
StartAbsoluteValue upper F left parenthesis x right parenthesis minus upper F Superscript upper N Baseline left parenthesis x right parenthesis EndAbsoluteValue|F(x) −F N(x)|, and parallel to p parallel to||p|| is replaced by a Lipschitz constant upper L greater than 0L > 0 of uu, provided 
that uu is Lipschitzian with constant upper LL on the union of the supports of the random 
mm-vectors upper T left parenthesis omega right parenthesis x minus h left parenthesis omega right parenthesisT (ω)x −h(ω) and upper T Superscript upper N Baseline left parenthesis omega right parenthesis x minus h Superscript upper N Baseline left parenthesis omega right parenthesis comma upper N equals 1 comma 2 comma ellipsis comma x element of upper DT N(ω)x −hN(ω), N = 1, 2, . . . , x ∈D, cf. [  4]. 
Because of 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column double vertical bar left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis x double vertical bar equals left parenthesis double vertical bar left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis x double vertical bar squared right parenthesis Superscript 1 divided by 2 Baseline 2nd Row 1st Column equals 2nd Column Blank 3rd Column left parenthesis x Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis x right parenthesis Superscript 1 divided by 2 EndLayout
||||||
(
T (ω) −T N, j)
x
|||||| =
)||||||
(
T (ω) −T N, j)
x
||||||
2)1/2
=
)
xT (
T (ω) −T N, j)T (
T (ω) −T N, j)
x
)1/2
and the concavity of t right arrow StartRoot t EndRoott →√t, we have that

42
2
Solution of Stochastic Linear Programs by Discretization Methods
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts double vertical bar left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis x double vertical bar upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis less than or equals left parenthesis integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts double vertical bar left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis x double vertical bar squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis Superscript 1 divided by 2 Baseline 2nd Row 1st Column equals 2nd Column Blank 3rd Column left parenthesis x Superscript upper T Baseline left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis upper T Subscript i Baseline left parenthesis omega right parenthesis minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis Superscript upper T Baseline left parenthesis upper T Subscript i Baseline left parenthesis omega right parenthesis minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis x right parenthesis Superscript 1 divided by 2 3rd Row 1st Column less than or equals 2nd Column Blank 3rd Column parallel to x parallel to left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript k equals 1 Overscript n Endscripts integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis t Subscript i k Baseline left parenthesis omega right parenthesis minus t Subscript i k Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis Superscript 1 divided by 2 EndLayout
{
ΩN, j
||||||
(
T (ω) −T N, j)
x
|||||| P N, j(dω) ≤
⎛
⎜⎝
{
ΩN, j
||||||
(
T (ω) −T N, j)
x
||||||
2
P N, j(dω)
⎞
⎟⎠
1/2
=
⎛
⎜⎝xT
⎛
⎜⎝
m
∑
i=1
{
ΩN, j
(
Ti(ω) −T N, j
i
)T (
Ti(ω) −T N, j
i
)
P N, j(dω)
⎞
⎟⎠x
⎞
⎟⎠
1/2
≤||x||
⎛
⎜⎝
m
∑
i=1
n
∑
k=1
{
ΩN, j
(
tik(ω) −t N, j
ik
)2
P N, j(dω)
⎞
⎟⎠
1/2
(2.12a) 
where upper T Subscript i Baseline comma upper T Subscript i Superscript upper N comma jTi, T N, j
i
is the ii-th row of the m times nm × n matrices upper T left parenthesis omega right parenthesis equals left parenthesis t Subscript i k Baseline left parenthesis omega right parenthesis right parenthesis comma upper T Superscript upper N comma j Baseline equals left parenthesis t Subscript i k Superscript upper N comma j Baseline right parenthesisT (ω) =
(
tik(ω)
)
, T N, j =
(
t N, j
ik
)
, respectively. Moreover, 
integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts parallel to h Superscript upper N comma j Baseline minus h left parenthesis omega right parenthesis parallel to upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis less than or equals left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis h Subscript i Superscript upper N comma j Baseline minus h Subscript i Baseline left parenthesis omega right parenthesis right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis period
{
ΩN, j
||hN, j −h(ω)||P N, j(dω) ≤
⎛
⎝
m
∑
i=1
{
ΩN, j
(
hN, j
i
−hi(ω)
)2
P N, j(dω)
⎞
⎠. (2.12b) 
Clearly, if (2.10a), (2.10b) holds, then 
StartLayout 1st Row 1st Column integral Underscript normal upper Omega Superscript upper N comma j Endscripts double vertical bar left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis x double vertical bar upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis 2nd Column less than or equals 3rd Column left parenthesis x prime left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts v a r Superscript upper N comma j Baseline left parenthesis upper T Subscript i Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis x right parenthesis Superscript 1 divided by 2 2nd Row 1st Column Blank 3rd Row 1st Column integral Underscript normal upper Omega Superscript upper N comma j Endscripts parallel to h Superscript upper N comma j Baseline minus h left parenthesis omega right parenthesis parallel to upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis 2nd Column less than or equals 3rd Column left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts v a r Superscript upper N comma j Baseline left parenthesis h Subscript i Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript 1 divided by 2 Baseline comma EndLayout
{
ΩN, j
||||||
(
T (ω) −T N, j)
x
|||||| P N, j(dω) ≤
)
x'
) m
∑
i=1
varN, j (
Ti(·)
))
x
)1/2
(2.12c) 
StartLayout 1st Row 1st Column integral Underscript normal upper Omega Superscript upper N comma j Endscripts double vertical bar left parenthesis upper T left parenthesis omega right parenthesis minus upper T Superscript upper N comma j Baseline right parenthesis x double vertical bar upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis 2nd Column less than or equals 3rd Column left parenthesis x prime left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts v a r Superscript upper N comma j Baseline left parenthesis upper T Subscript i Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis x right parenthesis Superscript 1 divided by 2 2nd Row 1st Column Blank 3rd Row 1st Column integral Underscript normal upper Omega Superscript upper N comma j Endscripts parallel to h Superscript upper N comma j Baseline minus h left parenthesis omega right parenthesis parallel to upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis 2nd Column less than or equals 3rd Column left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts v a r Superscript upper N comma j Baseline left parenthesis h Subscript i Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript 1 divided by 2 Baseline comma EndLayout
{
ΩN, j
||hN, j −h(ω)||P N, j(dω) ≤
) m
∑
i=1
varN, j (
hi(·)
))1/2
,
(2.12d) 
where v a r Superscript upper N comma j Baseline left parenthesis upper T Subscript i Baseline left parenthesis dot right parenthesis right parenthesisvarN, j (
Ti(·)
)
is the covariance matrix of the ii-th row upper T Subscript i Baseline left parenthesis omega right parenthesisTi(ω) of upper T left parenthesis omega right parenthesisT (ω), and 
v a r Superscript upper N comma j Baseline left parenthesis h Subscript i Baseline left parenthesis dot right parenthesis right parenthesisvarN, j (
hi(·)
)
is the variance of the ii-th component h Subscript i Baseline left parenthesis omega right parenthesishi(ω) of h left parenthesis omega right parenthesish(ω) with respect to 
the conditional distribution upper P Superscript upper N comma j Baseline equals upper P vertical bar Subscript normal upper Omega Sub Superscript upper N comma j BaselineP N, j = P|ΩN, j. 
Remark 2.2 For the general case given by (2.12a), (2.12b) we have that 
StartLayout 1st Row integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis upper T Subscript i Baseline left parenthesis omega right parenthesis minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis Superscript upper T Baseline left parenthesis upper T Subscript i Baseline left parenthesis omega right parenthesis minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis equals v a r Superscript upper N comma j Baseline left parenthesis upper T Subscript i Baseline left parenthesis dot right parenthesis right parenthesis 2nd Row plus left parenthesis ModifyingAbove upper T With quotation dash Subscript i Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis Superscript upper T Baseline left parenthesis ModifyingAbove upper T With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis comma 3rd Row Blank 4th Row integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis h Subscript i Baseline left parenthesis omega right parenthesis minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis equals v a r Superscript upper N comma j Baseline left parenthesis h Subscript i Baseline left parenthesis dot right parenthesis right parenthesis plus left parenthesis ModifyingAbove h With quotation dash Subscript i Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared comma EndLayout
{
ΩN, j
(
Ti(ω) −T N, j
i
)T (
Ti(ω) −T N, j
i
)
P N, j(dω) = varN, j (
Ti(·)
)
+
(
T
ΩN, j
i
−T N, j
i
)T (
T
ΩN, j
−T N, j
i
)
, (2.12e) 
StartLayout 1st Row integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis upper T Subscript i Baseline left parenthesis omega right parenthesis minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis Superscript upper T Baseline left parenthesis upper T Subscript i Baseline left parenthesis omega right parenthesis minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis equals v a r Superscript upper N comma j Baseline left parenthesis upper T Subscript i Baseline left parenthesis dot right parenthesis right parenthesis 2nd Row plus left parenthesis ModifyingAbove upper T With quotation dash Subscript i Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis Superscript upper T Baseline left parenthesis ModifyingAbove upper T With quotation dash Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline minus upper T Subscript i Superscript upper N comma j Baseline right parenthesis comma 3rd Row Blank 4th Row integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis h Subscript i Baseline left parenthesis omega right parenthesis minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis equals v a r Superscript upper N comma j Baseline left parenthesis h Subscript i Baseline left parenthesis dot right parenthesis right parenthesis plus left parenthesis ModifyingAbove h With quotation dash Subscript i Superscript normal upper Omega Super Superscript upper N comma j Superscript Baseline minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared comma EndLayout
{
ΩN, j
(
hi(ω) −hN, j
i
)2
P N, j(dω) = varN, j(
hi(·)
)
+
(
h
ΩN, j
i
−hN, j
i
)2
, (2.12f) 
respectively.

2.2 Disretization and Error Bounds
43
Because of (2.11c) and (2.12a), (2.12b) we still have to compute an upper estimate 
ofparallel to p parallel to||p||. Representing any vectorz element of double struck upper R Superscript mz ∈Rm byz equals sigma summation Underscript i equals 1 Overscript m Endscripts z Subscript i Baseline e Subscript iz = ∑m
i=1 ziei, wherez 1 comma z 2 comma ellipsis comma z Subscript m Baselinez1, z2, . . . , zm are 
the components of zz and e 1 comma e 2 comma ellipsis comma e Subscript n Baselinee1, e2, . . . , en are the unit vectors of the mm coordinate 
directions, because of the sublinearity of pp we ﬁnd 
StartLayout 1st Row 1st Column p left parenthesis z right parenthesis 2nd Column equals 3rd Column p left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts z Subscript i Baseline e Subscript i Baseline right parenthesis less than or equals sigma summation Underscript i equals 1 Overscript m Endscripts p left parenthesis z Subscript i Baseline e Subscript i Baseline right parenthesis equals sigma summation Underscript i equals 1 Overscript m Endscripts p left parenthesis left parenthesis z Subscript i Superscript plus Baseline minus z Subscript i Superscript minus Baseline right parenthesis e Subscript i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals 3rd Column sigma summation Underscript i equals 1 Overscript m Endscripts left parenthesis p left parenthesis z Subscript i Superscript plus Baseline e Subscript i Baseline right parenthesis right parenthesis plus p left parenthesis z Subscript i Superscript minus Baseline left parenthesis minus e Subscript i Baseline right parenthesis right parenthesis equals sigma summation Underscript i equals 1 Overscript m Endscripts left parenthesis z Subscript i Superscript plus Baseline p left parenthesis e Subscript i Baseline right parenthesis plus z Subscript i Superscript minus Baseline p left parenthesis minus e Subscript i Baseline right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column less than or equals 3rd Column sigma summation Underscript i equals 1 Overscript m Endscripts left parenthesis z Subscript i Superscript plus Baseline plus z Subscript i Superscript minus Baseline right parenthesis max left brace p left parenthesis e Subscript i Baseline right parenthesis comma p left parenthesis minus e Subscript i Baseline right parenthesis right brace equals sigma summation Underscript i equals 1 Overscript m Endscripts pi Subscript i Baseline StartAbsoluteValue z Subscript i Baseline EndAbsoluteValue comma EndLayoutp(z) = p
) m
∑
i=1
ziei
)
≤
m
∑
i=1
p(ziei) =
m
∑
i=1
p
(
(z+
i −z−
i )ei
)
≤
m
∑
i=1
(
p(z+
i ei)
)
+ p
(
z−
i (−ei)
)
=
m
∑
i=1
(
z+
i p(ei) + z−
i p(−ei)
)
≤
m
∑
i=1
(z+
i + z−
i ) max
{
p(ei), p(−ei)
}
=
m
∑
i=1
πi|zi|,
(2.13a) 
where 
pi Subscript i Baseline equals max left brace p left parenthesis e Subscript i Baseline right parenthesis comma p left parenthesis minus e Subscript i Baseline right parenthesis right brace comma i equals 1 comma 2 comma ellipsis comma m periodπi = max
{
p(ei), p(−ei)
}
,
i = 1, 2, . . . , m.
(2.13b) 
Note that for the computation of the mm coefﬁcients pi 1 comma pi 2 comma ellipsis comma pi Subscript m Baselineπ1, π2, . . . , πm we have to solve 
the following 2 m2m linear programs 
min q Superscript upper T Baseline y s period t period upper W y equals plus or minus e Subscript i Baseline comma y greater than or equals 0 f o r i equals 1 comma 2 comma ellipsis comma m period min qT y
s.t. W y = ±ei, y ≥0 for i = 1, 2, . . . , m.
(2.13c) 
From (2.13a) we obtain 
p left parenthesis z right parenthesis less than or equals parallel to pi parallel to dot parallel to z parallel to commap(z) ≤||π|| · ||z||,
(2.13d) 
whereparallel to pi parallel to comma parallel to z parallel to||π||, ||z|| denote the Euclidean norm ofpi equals left parenthesis pi 1 comma pi 2 comma ellipsis comma pi Subscript m Baseline right parenthesis Superscript upper Tπ = (π1, π2, . . . , πm)T andzz, respec-
tively. 
Thus, according to (2.4f) we have the upper norm bound 
parallel to p parallel to less than or equals parallel to pi parallel to equals left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts pi Subscript i Superscript 2 Baseline right parenthesis Superscript 1 divided by 2 Baseline equals left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts left parenthesis max left brace p left parenthesis e Subscript i Baseline right parenthesis comma p left parenthesis minus e Subscript i Baseline right parenthesis right brace right parenthesis squared right parenthesis Superscript 1 divided by 2 Baseline comma||p|| ≤||π|| =
) m
∑
i=1
π2
i
)1/2
=
) m
∑
i=1
(
max
{
p(ei), p(−ei)
})2
)1/2
,
(2.14) 
where parallel to pi parallel to||π|| can be calculated from the given data, cf.  (2.2c), (2.13c). 
Summarizing the above consierations, from (2.11c), (2.12a)–(2.12f), and (2.14) 
we get 
Theorem 2.1 Ifleft parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis comma h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
T N(ω), hN(ω)
)
is given by (2.8a), (2.8b) and (2.3a), (2.3b) holds, 
then for each x element of double struck upper R Superscript nx ∈Rn we have that

44
2
Solution of Stochastic Linear Programs by Discretization Methods
StartLayout 1st Row 1st Column 0 less than or equals theta Superscript upper N Baseline left parenthesis x right parenthesis comma eta Superscript upper N Baseline left parenthesis x right parenthesis less than or equals parallel to pi parallel to sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis left parenthesis parallel to x parallel to left parenthesis sigma summation Underscript i comma k equals 1 Overscript m Endscripts integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis t Subscript i k Baseline left parenthesis omega right parenthesis minus t Subscript i k Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis right parenthesis Superscript 1 divided by 2 Baseline 2nd Column Blank 3rd Column Blank 2nd Row 1st Column plus left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts integral Underscript normal upper Omega Subscript upper N comma j Baseline Endscripts left parenthesis h Subscript i Baseline left parenthesis omega right parenthesis minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis 2nd Column Blank 3rd Column Blank EndLayout0 ≤ϑ N(x), ηN(x) ≤||π||
rN
∑
j=1
P(ΩN, j)
⎛
⎜⎝||x||
⎛
⎜⎝
m
∑
i,k=1
{
ΩN, j
(
tik(ω) −t N, j
ik
)2
P N, j(dω)
⎞
⎟⎠
⎞
⎟⎠
1/2
+
⎛
⎜⎝
m
∑
i=1
{
ΩN, j
(
hi(ω) −hN, j
i
)2
P N, j(dω)
⎞
⎟⎠
(2.15a) 
Moreover, if equations (2.10a)–(2.10b) hold, then 
StartLayout 1st Row 1st Column 0 less than or equals theta Superscript upper N Baseline left parenthesis x right parenthesis comma eta Superscript upper N Baseline left parenthesis x right parenthesis less than or equals parallel to pi parallel to sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis left parenthesis parallel to x parallel to left parenthesis sigma summation Underscript i comma k equals 1 Overscript m Endscripts v a r Superscript upper N comma j Baseline left parenthesis t Subscript i k Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript 1 divided by 2 Baseline 2nd Column Blank 3rd Column Blank 2nd Row 1st Column plus left parenthesis sigma summation Underscript i equals 1 Overscript m Endscripts v a r Superscript upper N comma j Baseline left parenthesis h Subscript i Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript 1 divided by 2 Baseline right parenthesis period 2nd Column Blank 3rd Column Blank EndLayout0 ≤ϑ N(x), ηN(x) ≤||π||
rN
∑
j=1
P(ΩN, j)
⎛
⎜⎝||x||
⎛
⎝
m
∑
i,k=1
varN, j (
tik(·)
)
⎞
⎠
1/2
+
) m
∑
i=1
varN, j (
hi(·)
))1/2⎞
⎠.
(2.15b) 
2.2.1 
Special Representations of the Random Matrix 
left parenthesis upper T left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesis
(
T(·), h(·)
)
A common, well-known representation of left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
is given by 
left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis equals left parenthesis upper T left parenthesis xi left parenthesis omega right parenthesis right parenthesis comma h left parenthesis xi left parenthesis omega right parenthesis right parenthesis right parenthesis equals left parenthesis ModifyingAbove upper T With quotation dash comma ModifyingAbove h With quotation dash right parenthesis plus sigma summation Underscript s equals 1 Overscript upper L Endscripts xi Subscript s Baseline left parenthesis omega right parenthesis left parenthesis upper T Superscript left parenthesis s right parenthesis Baseline comma h Superscript left parenthesis s right parenthesis Baseline right parenthesis comma
(
T (ω), h(ω)
)
=
(
T
(
ξ(ω)
)
, h
(
ξ(ω)
))
= (T , h) +
L
∑
s=1
ξs(ω)
(
T (s), h(s))
,
(2.16) 
where left parenthesis ModifyingAbove upper T With quotation dash comma ModifyingAbove h With quotation dash right parenthesis(T , h) denotes the mean of left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis comma left parenthesis upper T Superscript left parenthesis s right parenthesis Baseline comma h Superscript left parenthesis s right parenthesis Baseline right parenthesis comma s equals 1 comma 2 comma ellipsis comma upper L
(
T (ω), h(ω)
)
,
(
T (s), h(s))
, s = 1, 2, . . . , L, are  
givenm times left parenthesis n plus 1 right parenthesism × (n + 1) matrices, andxi 1 left parenthesis omega right parenthesis comma xi 2 left parenthesis omega right parenthesis comma ellipsis comma xi Subscript upper L Baselineξ1(ω), ξ2(ω), . . . , ξL, are zero-mean, stochastically 
independent random variables. 
Based on representation (2.16), the approximation left parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis comma h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
T N(ω), hN(ω)
)
of left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω),
h(ω)
)
according to (2.8a), (2.8b) can be described then by the following piecewise 
constant approximation xi Superscript upper N Baseline left parenthesis omega right parenthesisξ N(ω) of the random upper LL-vector xi left parenthesis omega right parenthesis equals left parenthesis xi 1 left parenthesis omega right parenthesis comma xi 2 left parenthesis omega right parenthesis comma ellipsis comma xi Subscript upper L Baseline left parenthesis omega right parenthesis right parenthesisξ(ω) =
(
ξ1(ω), ξ2(ω), . . . ,
ξL(ω)
)
. 
Letnormal upper XiΞ denote the support ofxi left parenthesis omega right parenthesisξ(ω) or a set containing the support ofxi left parenthesis omega right parenthesisξ(ω). Moreover, 
let 
normal upper Xi Superscript upper N comma 1 Baseline comma normal upper Xi Superscript upper N comma 2 Baseline comma ellipsis comma normal upper Xi Superscript upper N comma j Baseline comma ellipsis comma normal upper Xi Superscript upper N comma r Super Subscript upper N SuperscriptΞN,1, ΞN,2, . . . , ΞN, j, . . . , ΞN,rN
(2.17a) 
be the partition of normal upper XiΞ generated by the partition (2.8b) of normal upper OmegaΩ, hence

2.2 Disretization and Error Bounds
45
normal upper Xi Superscript upper N comma j Baseline equals StartSet xi left parenthesis omega right parenthesis colon omega element of normal upper Omega Superscript upper N comma j Baseline EndSet periodΞN, j =
{
ξ(ω) : ω ∈ΩN, j}
.
(2.17b) 
Thus, with ﬁxed upper LL-vectors xi Superscript upper N comma j Baseline equals left parenthesis xi 1 Superscript upper N comma j Baseline comma ellipsis comma xi Subscript upper L Superscript upper N comma j Baseline right parenthesis element of normal upper Xi Superscript upper N comma jξ N, j =
(
ξ N, j
1
, . . . , ξ N, j
L
)
∈ΞN, j we have that 
xi Superscript upper N Baseline left parenthesis omega right parenthesis equals xi Superscript upper N comma j Baseline f o r a l l omega element of normal upper Omega Superscript upper N comma jξ N(ω) = ξ N, j for all ω ∈ΩN, j
(2.17c) 
and therefore 
left parenthesis upper T Superscript upper N comma j Baseline comma h Superscript upper N comma j Baseline right parenthesis equals left parenthesis ModifyingAbove upper T With quotation dash comma ModifyingAbove h With quotation dash right parenthesis plus sigma summation Underscript s equals 1 Overscript upper L Endscripts xi Subscript s Superscript upper N comma j Baseline left parenthesis upper T Superscript left parenthesis s right parenthesis Baseline comma h Superscript left parenthesis s right parenthesis Baseline right parenthesis period(T N, j, hN, j) = (T , h) +
L
∑
s=1
ξ N, j
s
(
T (s), h(s))
.
(2.17d) 
Because of the properties of the random variablesxi 1 left parenthesis omega right parenthesis comma ellipsis comma xi Subscript upper L Baseline left parenthesis omega right parenthesisξ1(ω), . . . , ξL(ω) in the representa-
tion (2.16) ofleft parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
, we suppose that upper E xi Subscript s Superscript upper N Baseline left parenthesis omega right parenthesis equals 0Eξ N
s (ω) = 0 andupper E xi Subscript s Superscript upper N Baseline left parenthesis omega right parenthesis xi Subscript t Superscript upper N Baseline left parenthesis omega right parenthesis equals 0Eξ N
s (ω)ξ N
t (ω) = 0
for all s equals 1 comma ellipsis comma upper L comma t equals 1 comma ellipsis comma upper L comma t not equals ss = 1, . . . , L, t = 1, . . . , L, t /= s, hence 
sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts xi Subscript s Superscript upper N comma j Baseline upper P Subscript xi left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Superscript upper N comma j Baseline right parenthesis equals 0 comma sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts xi Subscript x Superscript upper N comma j Baseline xi Subscript t Superscript upper N comma j Baseline upper P Subscript xi left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Superscript upper N comma j Baseline right parenthesis equals 0 comma
rN
∑
j=1
ξ N, j
s
Pξ(·)(ΞN, j) = 0,
rN
∑
j=1
ξ N, j
x
ξ N, j
t
Pξ(·)
(
ΞN, j)
= 0,
(2.17e) 
whereas s comma t equals 1 comma ellipsis comma upper L comma t not equals ss, t = 1, . . . , L, t /= s. 
In many cases we may suppose that 
normal upper Xi equals product Underscript s equals 1 Overscript upper L Endscripts normal upper Xi Subscript s Baseline comma normal upper Xi Subscript s Baseline equals left bracket alpha Subscript s Baseline comma beta Subscript s Baseline right parenthesisΞ =
L
∏
s=1
Ξs, Ξs = [αs, βs)
(2.18a) 
is a half-open upper LL-dimensional interval. In this case normal upper XiΞ is then partitioned into certain 
subintervals normal upper Xi Superscript upper N comma jΞN, j. Hence, we set 
StartLayout 1st Row 1st Column j 2nd Column equals 3rd Column left parenthesis j 1 comma j 2 comma ellipsis comma j Subscript upper L Baseline right parenthesis comma r Subscript upper N Baseline equals left parenthesis r Subscript upper N Baseline 1 Baseline comma r Subscript upper N Baseline 2 Baseline comma ellipsis comma r Subscript upper N upper L Baseline right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column xi Superscript upper N comma j 2nd Column equals 3rd Column left parenthesis xi 1 Superscript upper N comma j 1 Baseline k comma xi 2 Superscript upper N comma j 2 Baseline comma ellipsis comma xi Subscript upper L Superscript upper N comma j Super Subscript upper L Superscript Baseline right parenthesis comma EndLayout j = ( j1, j2, . . . , jL),rN = (rN1,rN2, . . . ,rN L),
(2.18b) 
StartLayout 1st Row 1st Column j 2nd Column equals 3rd Column left parenthesis j 1 comma j 2 comma ellipsis comma j Subscript upper L Baseline right parenthesis comma r Subscript upper N Baseline equals left parenthesis r Subscript upper N Baseline 1 Baseline comma r Subscript upper N Baseline 2 Baseline comma ellipsis comma r Subscript upper N upper L Baseline right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column xi Superscript upper N comma j 2nd Column equals 3rd Column left parenthesis xi 1 Superscript upper N comma j 1 Baseline k comma xi 2 Superscript upper N comma j 2 Baseline comma ellipsis comma xi Subscript upper L Superscript upper N comma j Super Subscript upper L Superscript Baseline right parenthesis comma EndLayoutξ N, j =
(
ξ N, j1
1
k, ξ N, j2
2
, . . . , ξ N, jL
L
)
,
(2.18c) 
where j Subscript s Baseline equals 1 comma 2 comma ellipsis comma r Subscript upper N Sub Superscript s Subscript Baseline comma s equals 1 comma ellipsis comma upper L js = 1, 2, . . . ,rN s, s = 1, . . . , L, and a cell normal upper Xi Superscript upper N comma jΞN, j is given by 
normal upper Xi Superscript upper N comma j Baseline equals normal upper Xi Superscript upper N comma left parenthesis j 1 comma ellipsis comma j Super Subscript upper L Superscript right parenthesis Baseline equals product Underscript s equals 1 Overscript upper L Endscripts normal upper Xi Subscript s Superscript upper N comma j Super Subscript s SuperscriptΞN, j = ΞN,( j1,..., jL) =
L
∏
s=1
ΞN, js
s
(2.18d) 
with certain half-open subintervals 
normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline equals left bracket alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline comma beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis comma j Subscript s Baseline equals 1 comma 2 comma ellipsis comma r Subscript upper N Sub Superscript s Subscript Baseline comma s equals 1 comma 2 comma ellipsis comma upper LΞN, js
s
=
[
αN, js
s
, β N, js
s
)
,
js = 1, 2, . . . ,rN s,
s = 1, 2, . . . , L
(2.18e) 
with

46
2
Solution of Stochastic Linear Programs by Discretization Methods
xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline element of left bracket alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline comma beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis comma j Subscript s Baseline equals 1 comma 2 comma ellipsis comma r Subscript upper N Sub Superscript s Subscript Baseline comma s equals 1 comma 2 comma ellipsis comma upper L periodξ N, js
s
∈
[
αN, js
s
, β N, js
s
)
,
js = 1, 2, . . . ,rN s,
s = 1, 2, . . . , L.
(2.18f) 
Moreover, (2.17d) reads in the present case 
StartLayout 1st Row 1st Column left parenthesis upper T Superscript upper N comma j Baseline comma h Superscript upper N comma j Baseline right parenthesis 2nd Column equals 3rd Column left parenthesis upper T Superscript upper N comma left parenthesis j 1 comma ellipsis comma j Super Subscript upper L Superscript right parenthesis Baseline comma h Superscript upper N comma left parenthesis j 1 comma ellipsis comma j Super Subscript upper L Superscript right parenthesis Baseline right parenthesis equals 2nd Row 1st Column Blank 2nd Column equals 3rd Column left parenthesis ModifyingAbove upper T With quotation dash comma ModifyingAbove h With quotation dash right parenthesis equals sigma summation Underscript s equals 1 Overscript upper L Endscripts xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis upper T Superscript left parenthesis s right parenthesis Baseline comma h Superscript left parenthesis s right parenthesis Baseline right parenthesis period EndLayout(T N, j, hN, j) =
(
T N,( j1,..., jL), hN,( j1,..., jL))
=
= (T , h) =
L
∑
s=1
ξ N, js
s
(
T (s), h(s))
.
(2.18g) 
For the integrals in the error estimation (2.15a), by (2.16), (2.17d), (2.18g) and 
the cell representation (2.18d), we get 
integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis t Subscript i k Baseline left parenthesis omega right parenthesis minus t Subscript i k Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis equals StartFraction 1 Over upper P Subscript xi left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Superscript upper N comma j Baseline right parenthesis EndFraction integral Underscript xi element of normal upper Xi Superscript upper N comma j Baseline Endscripts left parenthesis t Subscript i k Baseline left parenthesis xi right parenthesis minus t Subscript i k Superscript upper N comma j Baseline right parenthesis squared upper P Subscript xi left parenthesis dot right parenthesis Baseline left parenthesis d xi right parenthesis
{
ΩN, j
(
tik(ω) −t N, j
ik
)2
P N, j(dω) =
1
Pξ(·)(ΞN, j)
{
ξ∈ΞN, j
(
tik(ξ) −t N, j
ik
)2
Pξ(·)(dξ)
and therefore 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis t Subscript i k Baseline left parenthesis omega right parenthesis minus t Subscript i k Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis equals sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts t Subscript i k Superscript left parenthesis s right parenthesis Baseline t Subscript i k Superscript left parenthesis sigma right parenthesis Baseline left parenthesis ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline minus xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis ModifyingAbove xi With quotation dash Subscript sigma Superscript normal upper Xi Super Subscript sigma Super Superscript upper N comma j Super Super Subscript sigma Super Superscript Superscript Baseline minus xi Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus sigma summation Underscript s equals 1 Overscript upper L Endscripts t Subscript i k Superscript left parenthesis s right parenthesis 2 Baseline StartFraction 1 Over upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis EndFraction integral Underscript xi Subscript s Baseline element of normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Endscripts left parenthesis xi Subscript s Baseline minus xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis squared upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis d xi Subscript s Baseline right parenthesis EndLayout
{
ΩN, j
(
tik(ω) −t N, j
ik
)2
P N, j(dω) =
L
∑
s,σ=1
s/=σ
t(s)
ik t(σ)
ik
)
ξ
ΞN, js
s
s
−ξ N, js
s
) )
ξ
ΞN, jσ
σ
σ
−ξ N, jσ
σ
)
+
L
∑
s=1
t(s)2
ik
1
Pξs(·)(ΞN, js
s
)
{
ξs∈ΞN, js
s
(ξs −ξ N, js
s
)2Pξs(·)(dξs)
(2.19a) 
as well as 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis h Subscript i Baseline left parenthesis omega right parenthesis minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis equals sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts h Subscript i Superscript left parenthesis s right parenthesis Baseline h Subscript i Superscript left parenthesis sigma right parenthesis Baseline left parenthesis ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline minus xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis ModifyingAbove xi With quotation dash Subscript sigma Superscript normal upper Xi Super Subscript sigma Super Superscript upper N comma j Super Super Subscript sigma Super Superscript Superscript Baseline minus xi Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus sigma summation Underscript s equals 1 Overscript upper L Endscripts h Subscript i Superscript left parenthesis s right parenthesis 2 Baseline StartFraction 1 Over upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis EndFraction integral Underscript xi Subscript s Baseline element of normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Endscripts left parenthesis xi Subscript s Baseline minus xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis squared upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis d xi Subscript s Baseline right parenthesis comma EndLayout
{
ΩN, j
(
hi(ω) −hN, j
i
)2
P N, j(dω) =
L
∑
s,σ=1
s/=σ
h(s)
i h(σ)
i
)
ξ
ΞN, js
s
s
−ξ N, js
s
) )
ξ
ΞN, jσ
σ
σ
−ξ N, jσ
σ
)
+
L
∑
s=1
h(s)2
i
1
Pξs(·)(ΞN, js
s
)
{
ξs∈ΞN, js
s
(ξs −ξ N, js
s
)2Pξs(·)(dξs),
(2.19b) 
where 
ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Baseline equals upper E left parenthesis xi Subscript s Baseline vertical bar normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis colon equals StartFraction 1 Over upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis EndFraction integral Underscript xi Subscript s Baseline element of normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Endscripts xi Subscript s Baseline upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis d xi Subscript s Baseline right parenthesisξ
ΞN, js
s
s
= E(ξs|ΞN, js
s
) :=
1
Pξs(·)(ΞN, js
s
)
{
ξs∈ΞN, js
s
ξs Pξs(·)(dξs)
(2.19c) 
in the conditional mean of xi Subscript s Baseline left parenthesis omega right parenthesisξs(ω) with respect to normal upper Xi Subscript s Superscript upper N comma j Super Subscript s SuperscriptΞN, js
s
, cf.  (2.9b), (2.9c). 
Since xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline element of left bracket alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline comma beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesisξ N, js
s
∈
[
αN, js
s
, β N, js
s
)
, cf. (2.18f), and ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Baseline element of left bracket alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline comma beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesisξ
ΞN, js
s
s
∈
[
αN, js
s
, β N, js
s
)
, the ﬁrst 
terms in (2.19a), (2.19b) can be estimated from above as follows:

2.2 Disretization and Error Bounds
47
StartLayout 1st Row 1st Column StartAbsoluteValue sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts t Subscript i k Superscript left parenthesis s right parenthesis Baseline t Subscript i k Superscript left parenthesis sigma right parenthesis Baseline left parenthesis ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline minus xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis ModifyingAbove xi With quotation dash Subscript sigma Superscript normal upper Xi Super Subscript sigma Super Superscript upper N comma j Super Super Subscript sigma Super Superscript Superscript Baseline minus xi Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis EndAbsoluteValue 2nd Column less than or equals 3rd Column Blank 2nd Row 1st Column sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue t Subscript i k Superscript left parenthesis s right parenthesis Baseline t Subscript i k Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis beta Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline minus alpha Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis comma 2nd Column Blank 3rd Column Blank 3rd Row 1st Column Blank 4th Row 1st Column StartAbsoluteValue sigma summation Underscript s comma sigma equals 1 Overscript upper L Endscripts h Subscript i Superscript left parenthesis s right parenthesis Baseline h Subscript i Superscript left parenthesis sigma right parenthesis Baseline left parenthesis ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline minus xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis ModifyingAbove xi With quotation dash Subscript sigma Superscript normal upper Xi Super Subscript sigma Super Superscript upper N comma j Super Super Subscript sigma Super Superscript Superscript Baseline minus xi Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis EndAbsoluteValue 2nd Column less than or equals 3rd Column Blank 5th Row 1st Column sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue h Subscript i Superscript left parenthesis s right parenthesis Baseline h Subscript i Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis beta Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline minus alpha Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis period 2nd Column Blank 3rd Column Blank EndLayout
|||||||
L
∑
s,σ=1
s/=σ
t(s)
ik t(σ)
ik
)
ξ
ΞN, js
s
s
−ξ N, js
s
) )
ξ
ΞN, jσ
σ
σ
−ξ N, jσ
σ
)
|||||||
≤
L
∑
s,σ=1
s/=σ
|||t(s)
ik t(σ)
ik
|||
(
β N, js
s
−αN, js
s
)(
β N, jσ
σ
−αN, jσ
σ
)
,
(2.19d) 
StartLayout 1st Row 1st Column StartAbsoluteValue sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts t Subscript i k Superscript left parenthesis s right parenthesis Baseline t Subscript i k Superscript left parenthesis sigma right parenthesis Baseline left parenthesis ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline minus xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis ModifyingAbove xi With quotation dash Subscript sigma Superscript normal upper Xi Super Subscript sigma Super Superscript upper N comma j Super Super Subscript sigma Super Superscript Superscript Baseline minus xi Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis EndAbsoluteValue 2nd Column less than or equals 3rd Column Blank 2nd Row 1st Column sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue t Subscript i k Superscript left parenthesis s right parenthesis Baseline t Subscript i k Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis beta Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline minus alpha Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis comma 2nd Column Blank 3rd Column Blank 3rd Row 1st Column Blank 4th Row 1st Column StartAbsoluteValue sigma summation Underscript s comma sigma equals 1 Overscript upper L Endscripts h Subscript i Superscript left parenthesis s right parenthesis Baseline h Subscript i Superscript left parenthesis sigma right parenthesis Baseline left parenthesis ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline minus xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis ModifyingAbove xi With quotation dash Subscript sigma Superscript normal upper Xi Super Subscript sigma Super Superscript upper N comma j Super Super Subscript sigma Super Superscript Superscript Baseline minus xi Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis EndAbsoluteValue 2nd Column less than or equals 3rd Column Blank 5th Row 1st Column sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue h Subscript i Superscript left parenthesis s right parenthesis Baseline h Subscript i Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis beta Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline minus alpha Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis period 2nd Column Blank 3rd Column Blank EndLayout
|||||
L
∑
s,σ=1
h(s)
i h(σ)
i
(
ξ
ΞN, js
s
s
−ξ N, js
s
)(
ξ
ΞN, jσ
σ
σ
−ξ N, jσ
σ
)||||| ≤
L
∑
s,σ=1
s/=σ
|||h(s)
i h(σ)
i
|||
(
β N, js
s
−αN, js
s
)(
β N, jσ
σ
−αN, jσ
σ
)
.
(2.19e) 
If the interval normal upper Xi Subscript s Baseline equals left bracket alpha Subscript s Baseline comma beta Subscript s Baseline right parenthesisΞs = [αs, βs) is partitioned into r Subscript upper N srNs equidistant subintervals 
left bracket alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline comma beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis comma j Subscript s Baseline equals 1 comma 2 comma ellipsis comma r Subscript upper N s Baseline[αN, js
s
, β N, js
s
), js = 1, 2, . . . ,rNs, then 
StartLayout 1st Row 1st Column sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue t Subscript i k Superscript left parenthesis s right parenthesis Baseline t Subscript i k Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis beta Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline minus alpha Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis 2nd Column Blank 3rd Column Blank 2nd Row 1st Column equals StartFraction left parenthesis beta Subscript s Baseline minus alpha Subscript s Baseline right parenthesis Over r Subscript upper N s Baseline EndFraction StartFraction left parenthesis beta Subscript sigma Baseline minus alpha Subscript sigma Baseline right parenthesis Over r Subscript upper N sigma Baseline EndFraction sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue t Subscript i k Superscript left parenthesis s right parenthesis Baseline t Subscript i k Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue comma 3rd Row 1st Column Blank 4th Row 1st Column sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue h Subscript i Superscript left parenthesis s right parenthesis Baseline h Subscript i Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis beta Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline minus alpha Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis 2nd Column Blank 3rd Column Blank 5th Row 1st Column equals StartFraction left parenthesis beta Subscript s Baseline minus alpha Subscript s Baseline right parenthesis squared Over r Subscript upper N s Baseline r Subscript upper N sigma Baseline EndFraction sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue h Subscript i Superscript left parenthesis s right parenthesis Baseline h Subscript i Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue period 2nd Column Blank 3rd Column Blank EndLayout
L
∑
s,σ=1
s/=σ
|||t(s)
ik t(σ)
ik
|||
(
β N, js
s
−αN, js
s
) (
β N, jσ
σ
−αN, jσ
σ
)
= (βs −αs)
rNs
(βσ −ασ)
rNσ
L
∑
s,σ=1
s/=σ
|||t(s)
ik t(σ)
ik
|||,
(2.19f) 
StartLayout 1st Row 1st Column sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue t Subscript i k Superscript left parenthesis s right parenthesis Baseline t Subscript i k Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis beta Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline minus alpha Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis 2nd Column Blank 3rd Column Blank 2nd Row 1st Column equals StartFraction left parenthesis beta Subscript s Baseline minus alpha Subscript s Baseline right parenthesis Over r Subscript upper N s Baseline EndFraction StartFraction left parenthesis beta Subscript sigma Baseline minus alpha Subscript sigma Baseline right parenthesis Over r Subscript upper N sigma Baseline EndFraction sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue t Subscript i k Superscript left parenthesis s right parenthesis Baseline t Subscript i k Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue comma 3rd Row 1st Column Blank 4th Row 1st Column sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue h Subscript i Superscript left parenthesis s right parenthesis Baseline h Subscript i Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis left parenthesis beta Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline minus alpha Subscript sigma Superscript upper N comma j Super Subscript sigma Superscript Baseline right parenthesis 2nd Column Blank 3rd Column Blank 5th Row 1st Column equals StartFraction left parenthesis beta Subscript s Baseline minus alpha Subscript s Baseline right parenthesis squared Over r Subscript upper N s Baseline r Subscript upper N sigma Baseline EndFraction sigma summation Underscript StartLayout 1st Row s comma sigma equals 1 2nd Row s not equals sigma EndLayout Overscript upper L Endscripts StartAbsoluteValue h Subscript i Superscript left parenthesis s right parenthesis Baseline h Subscript i Superscript left parenthesis sigma right parenthesis Baseline EndAbsoluteValue period 2nd Column Blank 3rd Column Blank EndLayout
L
∑
s,σ=1
s/=σ
|||h(s)
i h(σ)
i
|||
(
β N, js
s
−αN, js
s
)(
β N, jσ
σ
−αN, jσ
σ
)
= (βs −αs)2
rNsrNσ
L
∑
s,σ=1
s/=σ
|||h(s)
i h(σ)
i
|||.
(2.19g) 
If the values xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline comma j Subscript s Baseline equals 1 comma 2 comma ellipsis comma r Subscript upper N s Baseline comma s equals 1 comma 2 comma ellipsis comma upper Lξ N, js
s
, js = 1, 2, . . . ,rNs, s = 1, 2, . . . , L, are selected such that 
xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline equals ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline comma j Subscript s Baseline equals 1 comma 2 comma ellipsis comma r Subscript upper N Baseline s comma s equals 1 comma 2 comma ellipsis comma upper L commaξ N, js
s
= ξ
ΞN, js
s
s
,
js = 1, 2, . . . ,rNs,
s = 1, 2, . . . , L,
(2.20a) 
see (2.10a), (2.10b) then (2.19a), (2.19b) is reduced to 
StartLayout 1st Row 1st Column integral Underscript normal upper Omega Superscript upper N comma j Endscripts left parenthesis t Subscript i k Baseline left parenthesis omega right parenthesis minus t Subscript i k Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis 2nd Column equals 3rd Column sigma summation Underscript s equals 1 Overscript upper L Endscripts t Subscript i k Superscript left parenthesis s right parenthesis 2 Baseline v a r Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis xi Subscript s Baseline left parenthesis dot right parenthesis right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column integral Underscript normal upper Omega Superscript upper N comma j Endscripts left parenthesis h Subscript i Baseline left parenthesis omega right parenthesis minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis 2nd Column equals 3rd Column sigma summation Underscript s equals 1 Overscript upper L Endscripts h Subscript i Superscript left parenthesis s right parenthesis 2 Baseline v a r Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis xi Subscript s Baseline left parenthesis dot right parenthesis right parenthesis comma EndLayout
{
ΩN, j
(
tik(ω) −t N, j
ik
)2
P N, j(dω) =
L
∑
s=1
t(s)2
ik
varN, js (
ξs(·)
)
,
(2.20b) 
StartLayout 1st Row 1st Column integral Underscript normal upper Omega Superscript upper N comma j Endscripts left parenthesis t Subscript i k Baseline left parenthesis omega right parenthesis minus t Subscript i k Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis 2nd Column equals 3rd Column sigma summation Underscript s equals 1 Overscript upper L Endscripts t Subscript i k Superscript left parenthesis s right parenthesis 2 Baseline v a r Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis xi Subscript s Baseline left parenthesis dot right parenthesis right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column integral Underscript normal upper Omega Superscript upper N comma j Endscripts left parenthesis h Subscript i Baseline left parenthesis omega right parenthesis minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis 2nd Column equals 3rd Column sigma summation Underscript s equals 1 Overscript upper L Endscripts h Subscript i Superscript left parenthesis s right parenthesis 2 Baseline v a r Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis xi Subscript s Baseline left parenthesis dot right parenthesis right parenthesis comma EndLayout
{
ΩN, j
(
hi(ω) −hN, j
i
)2
P N, j(dω) =
L
∑
s=1
h(s)2
i
varN, js(
ξs(·)
)
,
(2.20c)

48
2
Solution of Stochastic Linear Programs by Discretization Methods
where 
v a r Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis xi Subscript s Baseline left parenthesis dot right parenthesis right parenthesis equals StartFraction 1 Over upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis EndFraction integral Underscript xi Subscript s Baseline element of normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Endscripts left parenthesis xi Subscript s Baseline minus ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline right parenthesis squared upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis d xi Subscript s Baseline right parenthesisvarN, js (
ξs(·)
)
=
1
Pξs(·)(ΞN, js
s
)
{
ξs∈ΞN, js
s
(
ξs −ξ
ΞN, js
s
s
)2
Pξs(·)(dξs)
(2.20d) 
is the conditional variance of xi Subscript s Baseline left parenthesis omega right parenthesisξs(ω) with respect to normal upper Xi Subscript s Superscript upper N comma j Super Subscript s SuperscriptΞN, js
s
. 
Example 2.1 Suppose thatxi Subscript s Baseline left parenthesis omega right parenthesisξs(ω) has a densityf Subscript s Baseline left parenthesis z right parenthesis fs(z) such that for alls equals 1 comma 2 comma ellipsis comma upper Ls = 1, 2, . . . , L
and j Subscript s Baseline equals 1 comma 2 comma ellipsis comma r Subscript upper N comma s Baseline js = 1, 2, . . . ,rN,s we have that 
StartLayout 1st Row 1st Column 0 less than f Subscript s comma m Superscript upper N comma j Super Subscript s Superscript Baseline 2nd Column colon equals 3rd Column inf left brace f Subscript s Baseline left parenthesis z right parenthesis colon z element of normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right brace 2nd Row 1st Column less than or equals f Subscript s comma upper M Superscript upper N comma j Super Subscript s Superscript Baseline 2nd Column colon equals 3rd Column sup left brace f Subscript s Baseline left parenthesis z right parenthesis colon z element of normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right brace less than plus normal infinity period EndLayout0 < f N, js
s,m
:= inf
{
fs(z) : z ∈ΞN, js
s
}
≤f N, js
s,M := sup
{
fs(z) : z ∈ΞN, js
s
}
< +∞.
(2.21a) 
This yields 
StartLayout 1st Row 1st Column upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis 2nd Column greater than or equals f Subscript s comma m Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column integral Underscript xi Subscript s Baseline element of normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Endscripts left parenthesis xi Subscript s Baseline minus ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline right parenthesis squared upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis d xi Subscript s Baseline right parenthesis 2nd Column less than or equals f Subscript s comma upper M Superscript upper N comma j Super Subscript s Superscript Baseline integral Subscript alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Superscript beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Baseline left parenthesis xi Subscript s Baseline minus ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline right parenthesis squared d xi Subscript s Baseline EndLayoutPξs(·)(ΞN, js
s
) ≥f N, js
s,m
(
β N, js
s
−αN, js
s
)
,
(2.21b) 
StartLayout 1st Row 1st Column upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis 2nd Column greater than or equals f Subscript s comma m Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column integral Underscript xi Subscript s Baseline element of normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Endscripts left parenthesis xi Subscript s Baseline minus ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline right parenthesis squared upper P Subscript xi Sub Subscript s Subscript left parenthesis dot right parenthesis Baseline left parenthesis d xi Subscript s Baseline right parenthesis 2nd Column less than or equals f Subscript s comma upper M Superscript upper N comma j Super Subscript s Superscript Baseline integral Subscript alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Superscript beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Baseline left parenthesis xi Subscript s Baseline minus ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline right parenthesis squared d xi Subscript s Baseline EndLayout
{
ξs∈ΞN, js
s
(
ξs −ξ
ΞN, js
s
s
)2
Pξs(·)(dξs) ≤f N, js
s,M
β N, js
s{
αN, js
s
(
ξs −ξ
ΞN, js
s
s
)2
dξs
(2.21c) 
and therefore 
StartLayout 1st Row 1st Column v a r Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis xi Subscript s Baseline left parenthesis dot right parenthesis right parenthesis 2nd Column less than or equals StartFraction f Subscript s comma upper M Superscript upper N comma j Super Subscript s Superscript Baseline Over f Subscript s comma m Superscript upper N comma j Super Subscript s Superscript Baseline EndFraction left parenthesis StartFraction 1 Over beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline EndFraction integral Subscript alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Superscript beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Baseline left parenthesis xi Subscript s Baseline minus StartFraction alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline plus beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Over 2 EndFraction right parenthesis squared d xi Subscript s Baseline 2nd Row 1st Column Blank 2nd Column plus left parenthesis StartFraction alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline plus beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Over 2 EndFraction minus ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline right parenthesis squared right parenthesis 3rd Row 1st Column Blank 2nd Column equals StartFraction f Subscript s comma upper M Superscript upper N comma j Super Subscript s Superscript Baseline Over f Subscript s comma m Superscript upper N comma j Super Subscript s Superscript Baseline EndFraction left parenthesis StartFraction left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis squared Over 12 EndFraction plus left parenthesis StartFraction alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline plus beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Over 2 EndFraction minus ModifyingAbove xi With quotation dash Subscript s Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscript Superscript Baseline right parenthesis squared right parenthesis period EndLayoutvarN, js(
ξs(·)
)
≤f N, js
s,M
f N, js
s,m
⎛
⎜⎝
1
β N, js
s
−αN, js
s
β N, js
s{
αN, js
s
)
ξs −αN, js
s
+ β N, js
s
2
)2
dξs
+
)
αN, js
s
+ β N, js
s
2
−ξ
ΞN, js
s
s
)2⎞
⎠
= f N, js
s,M
f N, js
s,m
⎛
⎝(β N, js
s
−αN, js
s
)2
12
+
)
αN, js
s
+ β N, js
s
2
−ξ
ΞN, js
s
s
)2⎞
⎠.
(2.21d) 
SinceStartFraction alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline plus beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline Over 2 EndFraction αN, js
s
+β N, js
s
2
andModifyingAbove xi Subscript s Baseline With quotation dash Superscript normal upper Xi Super Subscript s Super Superscript upper N comma j Super Super Subscript s Super Superscriptξs
ΞN, js
s
are elements ofnormal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline equals left bracket alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline comma beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesisΞN, js
s
=
[
αN, js
s
, β N, js
s
)
, from  (2.20d) 
and (2.21a)–(2.21d) we obtain 
v a r Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis xi Subscript s Baseline left parenthesis dot right parenthesis right parenthesis less than or equals StartFraction f Subscript s comma upper M Superscript upper N comma j Super Subscript s Superscript Baseline Over f Subscript s comma m Superscript upper N comma j Super Subscript s Superscript Baseline EndFraction StartFraction 13 Over 12 EndFraction left parenthesis beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline right parenthesis squaredvarN, js (
ξs(·)
)
≤f N, js
s,M
f N, js
s,m
13
12
(
β N, js
s
−αN, js
s
)2
(2.22a)

2.3 Approximations of F with a Given Error Level ε
49
If each normal upper Xi Subscript sΞs is partitioned into r Subscript upper N srNs equidistant subintervals normal upper Xi Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline comma j Subscript s Baseline equals 1 comma 2 comma ellipsis comma r Subscript upper N s BaselineΞN, js
s
, js = 1, 2, . . . ,
rNs, then beta Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline minus alpha Subscript s Superscript upper N comma j Super Subscript s Superscript Baseline equals StartFraction 1 Over r Subscript upper N s Baseline EndFractionβ N, js
s
−αN, js
s
=
1
rNs for all j equals 1 comma 2 comma ellipsis comma r Subscript upper N s Baseline j = 1, 2, . . . ,rNs and therefore 
v a r Superscript upper N comma j Super Subscript s Superscript Baseline left parenthesis xi Subscript s Baseline left parenthesis dot right parenthesis right parenthesis less than or equals StartFraction 13 Over 12 EndFraction StartFraction f Subscript s comma upper M Superscript upper N comma j Super Subscript s Superscript Baseline Over f Subscript s comma m Superscript upper N comma j Super Subscript s Superscript Baseline EndFraction dot StartFraction 1 Over r Subscript upper N s Superscript 2 Baseline EndFraction periodvarN, js (
ξs(·)
)
≤13
12
f N, js
s,M
f N, js
s,m
· 1
r2
Ns
.
(2.22b) 
2.3 Approximations of upper FF with a Given Error Level epsilonε
According to (2.7a)–(2.7c) and (2.15a), (2.15b) we have that 
StartAbsoluteValue upper F left parenthesis x right parenthesis minus upper F Superscript upper N Baseline left parenthesis x right parenthesis EndAbsoluteValue less than or equals parallel to pi parallel to sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis left parenthesis parallel to x parallel to upper V Superscript upper N comma j Baseline left parenthesis upper T left parenthesis dot right parenthesis right parenthesis plus upper V Superscript upper N comma j Baseline left parenthesis h left parenthesis dot right parenthesis right parenthesis right parenthesis comma
|||F(x) −F N(x)
||| ≤||π||
rN
∑
j=1
P(ΩN, j)
(
||x||V N, j(
T (·)
)
+ V N, j(
h(·)
))
, (2.23a) 
with the estimation errors 
StartLayout 1st Row 1st Column upper V Superscript upper N comma j Baseline left parenthesis upper T left parenthesis dot right parenthesis right parenthesis 2nd Column equals 3rd Column left parenthesis sigma summation Underscript i comma k equals 1 Overscript upper N Endscripts integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis t Subscript i k Baseline left parenthesis omega right parenthesis minus t Subscript i k Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis Superscript 1 divided by 2 Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column upper V Superscript upper N comma j Baseline left parenthesis h left parenthesis dot right parenthesis right parenthesis 2nd Column equals 3rd Column left parenthesis sigma summation Underscript i comma k equals 1 Overscript upper N Endscripts integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis h Subscript i Baseline left parenthesis omega right parenthesis minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis Superscript 1 divided by 2 Baseline period EndLayoutV N, j(
T (·)
)
=
⎛
⎝
N
∑
i,k=1
{
ΩN, j
(
tik(ω) −t N, j
ik
)2
P N, j(dω)
⎞
⎠
1/2
,
(2.23b) 
StartLayout 1st Row 1st Column upper V Superscript upper N comma j Baseline left parenthesis upper T left parenthesis dot right parenthesis right parenthesis 2nd Column equals 3rd Column left parenthesis sigma summation Underscript i comma k equals 1 Overscript upper N Endscripts integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis t Subscript i k Baseline left parenthesis omega right parenthesis minus t Subscript i k Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis Superscript 1 divided by 2 Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column upper V Superscript upper N comma j Baseline left parenthesis h left parenthesis dot right parenthesis right parenthesis 2nd Column equals 3rd Column left parenthesis sigma summation Underscript i comma k equals 1 Overscript upper N Endscripts integral Underscript normal upper Omega Superscript upper N comma j Baseline Endscripts left parenthesis h Subscript i Baseline left parenthesis omega right parenthesis minus h Subscript i Superscript upper N comma j Baseline right parenthesis squared upper P Superscript upper N comma j Baseline left parenthesis d omega right parenthesis right parenthesis Superscript 1 divided by 2 Baseline period EndLayoutV N, j(
h(·)
)
=
⎛
⎝
N
∑
i,k=1
{
ΩN, j
(
hi(ω) −hN, j
i
)2
P N, j(dω)
⎞
⎠
1/2
.
(2.23c) 
Knowing that upper DD is bounded, hence 
upper D subset of StartSet x element of double struck upper R Superscript n Baseline colon parallel to x parallel to less than or equals rho 0 EndSetD ⊂
{
x ∈Rn : ||x|| ≤ρ0
}
(2.24a) 
for some rho 0 greater than 0ρ0 > 0, from (2.23a) we obviously get 
StartAbsoluteValue upper F Superscript asterisk Baseline minus upper F Superscript upper N Baseline Superscript asterisk Baseline EndAbsoluteValue less than or equals parallel to pi parallel to sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis left parenthesis rho 0 upper V Superscript upper N comma j Baseline left parenthesis upper T left parenthesis dot right parenthesis right parenthesis plus upper V Superscript upper N comma j Baseline left parenthesis h left parenthesis dot right parenthesis right parenthesis right parenthesis comma|F∗−F N ∗| ≤||π||
rN
∑
j=1
P(ΩN, j)
(
ρ0V N, j(
T (·)
)
+ V N, j(
h(·)
))
,
(2.24b) 
where upper F Superscript asteriskF∗is the optimal value of (2.2a)–(2.2c) and upper F Superscript upper N Baseline Superscript asteriskF N ∗the optimal value of the 
approximating problem 
min upper F Superscript upper N Baseline left parenthesis x right parenthesis s period t period x element of upper D period min F N(x) s.t. x ∈D.
(2.24c) 
Furthermore, if it is known that there is an optimal solution x Superscript asteriskx∗of (2.2a)–(2.2c) 
such that with some p greater than or equals 1p ≥1 we have that 
parallel to x Superscript asterisk Baseline parallel to Subscript p Baseline less than or equals rho Subscript 0 p Baseline f o r s o m e g i v e n rho Subscript 0 p Baseline greater than 0 comma||x∗||p ≤ρ0p for some given ρ0p > 0,
(2.25a)

50
2
Solution of Stochastic Linear Programs by Discretization Methods
where parallel to x parallel to Subscript p||x||p is the pp-norm of xx, then again (2.7a)–(2.7c) and (2.15a), (2.15b) yield 
StartAbsoluteValue upper F Superscript asterisk Baseline minus upper F Subscript rho 0 Superscript upper N Baseline Superscript asterisk Baseline EndAbsoluteValue less than or equals parallel to pi parallel to sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis left parenthesis rho 0 upper V Superscript upper N comma j Baseline left parenthesis upper T left parenthesis dot right parenthesis right parenthesis plus upper V Superscript upper N comma j Baseline left parenthesis h left parenthesis dot right parenthesis right parenthesis right parenthesis comma
|||F∗−F N
ρ0
∗| ≤||π||
rN
∑
j=1
P(ΩN, j)
(
ρ0V N, j(
T (·)
)
+ V N, j(
h(·)
))
,
(2.25b) 
whererho 0 colon equals rho Subscript 0 p Baseline max left brace parallel to u parallel to colon parallel to u parallel to Subscript p Baseline less than or equals 1 right braceρ0 := ρ0p max{||u|| : ||u||p ≤1}, andupper F Subscript rho 0 Superscript upper N Baseline Superscript asteriskF N
ρ0
∗is the optimal value of the approx-
imation 
min upper F Superscript upper N Baseline left parenthesis x right parenthesis s period t period x element of upper D comma parallel to x parallel to Subscript p Baseline less than or equals rho Subscript 0 p Baseline period min F N(x) s.t. x ∈D, ||x||p ≤ρ0p.
(2.25c) 
Note that if upper F Superscript upper N Baseline left parenthesis x right parenthesisF N(x) is generated by a discretization process of upper P Subscript left parenthesis upper T left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesisP(
T (·),h(·)
), and 
p equals 1p = 1 or p equals 1p = 1 or p equals plus normal infinityp = +∞, then (2.25c) can again be represented by a linear 
program. 
The above considerations yield now the following result: 
Theorem 2.2 Selecting the approximationleft parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis comma h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
T N(ω), hN(ω)
)
ofleft parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
such 
that 
parallel to pi parallel to sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis left parenthesis rho 0 upper V Superscript upper N comma j Baseline left parenthesis upper T left parenthesis dot right parenthesis right parenthesis plus upper V Superscript upper N comma j Baseline left parenthesis h left parenthesis dot right parenthesis right parenthesis right parenthesis less than or equals epsilonparallel to pi parallel to sigma summation Underscript j equals 1 Overscript r Subscript upper N Baseline Endscripts upper P left parenthesis normal upper Omega Superscript upper N comma j Baseline right parenthesis left parenthesis rho 0 upper V Superscript upper N comma j Baseline left parenthesis upper T left parenthesis dot right parenthesis right parenthesis plus upper V Superscript upper N comma j Baseline left parenthesis h left parenthesis dot right parenthesis right parenthesis right parenthesis less than or equals epsilon||π||
rN
∑
j=1
P(ΩN, j)
(
ρ0V N, j(
T (·)
)
+ V N, j(
h(·)
))
≤ε,
(2.26a) 
where epsilon greater than 0ε > 0 is an a priori given error bound, then in cases (2.24a) and (2.25a) we 
have the a priori error bound 
StartAbsoluteValue upper F Superscript asterisk Baseline minus upper F Superscript upper N Baseline Superscript asterisk Baseline EndAbsoluteValue less than epsilon comma StartAbsoluteValue upper F Superscript asterisk Baseline minus upper F Subscript rho 0 Superscript upper N Baseline Superscript asterisk Baseline EndAbsoluteValue less than epsilonStartAbsoluteValue upper F Superscript asterisk Baseline minus upper F Superscript upper N Baseline Superscript asterisk Baseline EndAbsoluteValue less than epsilon comma StartAbsoluteValue upper F Superscript asterisk Baseline minus upper F Subscript rho 0 Superscript upper N Baseline Superscript asterisk Baseline EndAbsoluteValue less than epsilon|F∗−F N ∗| < ε, |F∗−F N
ρ0
∗| < ε,
(2.26b) 
respectively. 
While (2.24a) is a simple property of the convex polyhedron upper DD which may hold 
or not, the relation (2.25a) is more involved. 
2.4 Norm Bounds for Optimal Solutions of (2.2a)–(2.2c) 
For ﬁnding upper norm bounds rho 0ρ0 for an optimal solution x Superscript asteriskx∗of (2.2a)–(2.2c) we  
have to study the growth properties of upper FF ﬁrst. These can be obtained if for the loss 
function pp, see  (2.2c), appropriate lower bounds can be derived. 
Using condition (2.3a), (2.3b), where we assume that qq has components 
q 1 greater than 0 comma q 2 greater than 0 comma ellipsis comma q Subscript mu Baseline greater than 0 commaq1 > 0, q2 > 0, . . . , qμ > 0,
(2.27a) 
we deﬁne now the closed, convex polyhedron upper KK by 
upper K equals c o n v StartSet StartFraction 1 Over q 1 EndFraction w 1 comma StartFraction 1 Over q 2 EndFraction w 2 comma ellipsis comma StartFraction 1 Over q Subscript mu Baseline EndFraction w Subscript mu Baseline EndSet commaK = conv
{ 1
q1
w1, 1
q2
w2, . . . , 1
qμ
wμ
}
,
(2.27b)

2.4 Norm Bounds for Optimal Solutions of (2.2a)–(2.2c)
51
where q Subscript k Baseline greater than 0 comma k equals 1 comma ellipsis comma muqk > 0, k = 1, . . . , μ, are the components of qq and w 1 comma w 2 comma ellipsis comma w Subscript mu Baselinew1, w2, . . . , wμ are 
the columns of the matrix upper WW, cf. (2.13c), where we may assume—without any 
restrictions—that w Subscript k Baseline not equals 0wk /= 0 for all k equals 1 comma ellipsis comma muk = 1, . . . , μ. According to [ 3, 4] we know that in 
this situation the loss function pp has the representation 
p left parenthesis z right parenthesis equals inf left brace lamda greater than 0 colon StartFraction z Over lamda EndFraction element of upper K right brace comma z element of double struck upper R Superscript m Baseline periodp(z) = inf
{
λ > 0 : z
λ ∈K
}
, z ∈Rm.
(2.28) 
Having (2.27a), (2.27b) and deﬁning 
q 0 equals max Underscript 1 less than or equals k less than or equals mu Endscripts StartFraction 1 Over q Subscript k Baseline EndFraction parallel to w Subscript k Baseline parallel to commaq0 = max
1≤k≤μ
1
qk
||wk||,
(2.29a) 
where q 0 greater than 0q0 > 0, we ﬁnd 
parallel to ModifyingBelow z With quotation dash parallel to less than or equals q 0 f o r e a c h z element of upper K period||z|| ≤q0 for each z ∈K.
Since the relationStartFraction 1 Over lamda EndFraction z element of upper K1
λz ∈K obviously implies thatdouble vertical bar StartFraction 1 Over lamda EndFraction z double vertical bar less than or equals q 0
||||||||
1
λz
|||||||| ≤q0, for the loss function 
pp, having representation (2.28), for each z element of double struck upper R Superscript mz ∈Rm we have that 
p left parenthesis z right parenthesis greater than or equals inf left brace lamda greater than 0 colon double vertical bar StartFraction z Over lamda EndFraction double vertical bar less than or equals q 0 right brace equals StartFraction 1 Over q 0 EndFraction parallel to z parallel to equals left parenthesis min Underscript 1 less than or equals k less than or equals mu Endscripts StartFraction q Subscript k Baseline Over parallel to w Subscript k Baseline parallel to EndFraction right parenthesis parallel to z parallel to periodp(z) ≥inf
{
λ > 0 :
|||||| z
λ
|||||| ≤q0
}
= 1
q0
||z|| =
)
min
1≤k≤μ
qk
||wk||
)
||z||.
(2.29b) 
If (2.29b) holds, then (2.5) yields 
upper F left parenthesis x right parenthesis greater than or equals ModifyingAbove c With quotation dash Superscript upper T Baseline x plus ModifyingBelow p With quotation dash upper E parallel to upper T left parenthesis omega right parenthesis x minus h left parenthesis omega right parenthesis parallel to commaF(x) ≥cT x + pE||T (ω)x −h(ω)||,
(2.30a) 
where 
ModifyingBelow p With quotation dash equals min Underscript 1 less than or equals k less than or equals mu Endscripts StartFraction q Subscript k Baseline Over parallel to w Subscript k Baseline parallel to EndFraction periodp = min
1≤k≤μ
qk
||wk||.
(2.30b) 
In the following we assume that left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
is bounded a.s., hence, there is a 
constant normal upper Gamma greater than 0⎡> 0 such that 
double vertical bar left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis double vertical bar less than or equals normal upper Gamma w period p period 1 period
||||||
(
T (ω), h(ω)
)|||||| ≤⎡w.p. 1.
(2.31) 
Deﬁning for any x element of double struck upper R Superscript nx ∈Rn
ModifyingAbove x With caret equals left parenthesis x Superscript upper T Baseline comma 1 right parenthesis Superscript upper T Baseline comma e Subscript ModifyingAbove x With caret Baseline equals StartFraction ModifyingAbove x With caret Over parallel to ModifyingAbove x With caret parallel to EndFraction commaˆx = (xT , 1)T ,
eˆx =
ˆx
||ˆx||,
we ﬁnd 
parallel to upper T left parenthesis omega right parenthesis x minus h left parenthesis omega right parenthesis parallel to equals double vertical bar left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis ModifyingAbove x With caret double vertical bar equals parallel to ModifyingAbove x With caret parallel to dot double vertical bar left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis e Subscript ModifyingAbove x With caret Baseline double vertical bar semicolon||T (ω)x −h(ω)|| =
||||||
(
T (ω), h(ω)
)
ˆx
|||||| = ||ˆx|| ·
||||||
(
T (ω), h(ω
)
eˆx
|||||| ;

52
2
Solution of Stochastic Linear Programs by Discretization Methods
furthermore, we have that 
StartLayout 1st Row 1st Column double vertical bar left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis e Subscript ModifyingAbove x With caret Baseline double vertical bar squared 2nd Column equals 3rd Column double vertical bar left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis e Subscript ModifyingAbove x With caret Baseline double vertical bar dot double vertical bar left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis e Subscript ModifyingAbove x With caret Baseline double vertical bar 2nd Row 1st Column Blank 2nd Column less than or equals 3rd Column double vertical bar left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis e Subscript ModifyingAbove x With caret Baseline double vertical bar dot normal upper Gamma EndLayout
||||||
(
T (ω), h(ω)
)
eˆx
||||||
2
=
||||||
(
T (ω), h(ω)
)
eˆx
|||||| ·
||||||
(
T (ω), h(ω)
)
eˆx
||||||
≤
||||||
(
T (ω), h(ω)
)
eˆx
|||||| · ⎡
and therefore 
double vertical bar upper T left parenthesis omega right parenthesis x minus h left parenthesis omega right parenthesis double vertical bar less than or equals StartFraction 1 Over normal upper Gamma EndFraction parallel to ModifyingAbove x With caret parallel to dot double vertical bar left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis e Subscript ModifyingAbove x With caret Baseline double vertical bar squared comma
||||||T (ω)x −h(ω)
|||||| ≤1
⎡||ˆx|| ·
||||||
(
T (ω), h(ω)
)
eˆx
||||||
2
,
(2.32a) 
see (2.31). Taking expectations on both sides of (2.32a), we get 
upper E parallel to upper T left parenthesis omega right parenthesis x minus h left parenthesis omega right parenthesis parallel to greater than or equals StartFraction 1 Over normal upper Gamma EndFraction parallel to ModifyingAbove x With caret parallel to e Subscript ModifyingAbove x With caret Superscript upper T Baseline upper E left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis e Subscript ModifyingAbove x With caret Baseline periodE||T (ω)x −h(ω)|| ≥1
⎡||ˆx||eT
ˆx E
(
T (ω), h(ω)
)T (
T (ω), h(ω)
)
eˆx.
(2.32b) 
Denoting by lamda Subscript min Baseline left parenthesis upper Q right parenthesisλmin(Q) the minimal eigenvalue of any symmetric matrix upper QQ, from  
(2.32b) we obtain 
StartLayout 1st Row 1st Column upper E parallel to upper T left parenthesis omega right parenthesis x minus h left parenthesis omega right parenthesis parallel to 2nd Column greater than or equals 3rd Column StartFraction 1 Over normal upper Gamma EndFraction parallel to ModifyingAbove x With caret parallel to lamda Subscript min Baseline left parenthesis upper E left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column greater than or equals 3rd Column StartFraction 1 Over normal upper Gamma EndFraction parallel to ModifyingAbove x With caret parallel to upper E lamda Subscript min Baseline left parenthesis left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis right parenthesis period EndLayoutE||T (ω)x −h(ω)|| ≥1
⎡||ˆx||λmin
)
E
(
T (ω), h(ω)
)T (
T (ω), h(ω)
))
≥1
⎡||ˆx||Eλmin
)(
T (ω), h(ω)
)T (
T (ω), h(ω)
))
.
(2.32c) 
Note that 
upper E left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis equals sigma summation Underscript i equals 1 Overscript m Endscripts left parenthesis c o v left parenthesis upper T Subscript i Baseline left parenthesis dot right parenthesis comma h Subscript i Baseline left parenthesis dot right parenthesis right parenthesis plus left parenthesis ModifyingAbove upper T With quotation dash Subscript i Baseline comma ModifyingAbove h With quotation dash Subscript i Baseline right parenthesis Superscript upper T Baseline left parenthesis ModifyingAbove upper T With quotation dash Subscript i Baseline comma ModifyingAbove h With quotation dash Subscript i Baseline right parenthesis right parenthesis commaE
(
T (ω), h(ω)
)T (
T (ω), h(ω)
)
=
m
∑
i=1
(
cov
(
Ti(·), hi(·)
)
+ (T i, hi)T (T i, hi)
)
,
(2.32d) 
where cov left parenthesis upper T Subscript i Baseline left parenthesis dot right parenthesis comma h Subscript i Baseline left parenthesis dot right parenthesis right parenthesis
(
Ti(·), hi(·)
)
designates the covariance matrix of the ii-th row left parenthesis upper T Subscript i Baseline comma h Subscript i Baseline right parenthesis(Ti, hi) of 
left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
. If the random matrix left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
is represented by (2.16), then 
upper E left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis equals ModifyingAbove upper T With quotation dash Superscript upper T Baseline upper T plus sigma summation Underscript s equals 1 Overscript upper L Endscripts c o v left parenthesis xi Subscript s Baseline right parenthesis upper T Superscript left parenthesis s right parenthesis Baseline Superscript upper T Baseline upper T Superscript left parenthesis s right parenthesis Baseline commaE
(
T (ω), h(ω)
)T (
T (ω), h(ω)
)
= T
T T +
L
∑
s=1
cov (ξs)T (s)T T (s),
(2.32e) 
hence, this matrix can be computed easily. Let then lamda 0λ0 be deﬁned by 
StartLayout 1st Row 1st Column lamda 0 colon equals lamda Subscript min Baseline left parenthesis upper E left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis right parenthesis o r 2nd Column Blank 3rd Column Blank 2nd Row 1st Column lamda 0 equals upper E lamda Subscript min Baseline left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis period EndLayoutλ0 := λmin
)
E
(
T (ω), h(ω)
)T (
T (ω), h(ω)
))
or
λ0 = Eλmin
(
T (ω), h(ω)
)T (
T (ω), h(ω)
)
.
(2.33)

2.4 Norm Bounds for Optimal Solutions of (2.2a)–(2.2c)
53
Summarizing the above considerations, according to (2.30a) and (2.32b) we ﬁnd 
the following result. 
Lemma 2.2 Suppose that conditions (2.3a), (2.3b) and (2.31) hold true. IfModifyingBelow p With quotation dash comma normal upper Gamma comma lamda 0p, ⎡, λ0
are deﬁned by (2.30b), (2.31), (2.33), resp., then 
upper F left parenthesis x right parenthesis greater than or equals ModifyingAbove c With quotation dash Superscript upper T Baseline x plus StartFraction ModifyingBelow p With quotation dash lamda 0 Over normal upper Gamma EndFraction parallel to ModifyingAbove x With caret parallel to f o r a l l x element of double struck upper R Superscript n Baseline periodF(x) ≥cT x +
pλ0
⎡||ˆx||
for all x ∈Rn.
(2.34) 
Consider now any elementx Superscript 0x0 of the feasible domainupper DD of (2.2a). Ifx Superscript asteriskx∗is an optimal 
solution of (2.2a)–(2.2c), then (2.34) and (2.13d) yield the following inequalities 
StartLayout 1st Row 1st Column ModifyingAbove c With quotation dash Superscript upper T Baseline x Superscript asterisk plus StartFraction ModifyingBelow p With quotation dash lamda 0 Over normal upper Gamma EndFraction parallel to ModifyingAbove x Superscript asterisk Baseline With caret parallel to 2nd Column less than or equals upper F left parenthesis x Superscript asterisk Baseline right parenthesis less than or equals upper F left parenthesis x Superscript 0 Baseline right parenthesis equals ModifyingAbove c With quotation dash Superscript upper T Baseline x Superscript 0 Baseline plus parallel to pi parallel to upper E parallel to upper T left parenthesis omega right parenthesis x Superscript 0 Baseline minus h left parenthesis omega right parenthesis parallel to 2nd Row 1st Column Blank 2nd Column less than or equals ModifyingAbove c With quotation dash Superscript upper T Baseline x Superscript 0 Baseline plus parallel to pi parallel to left parenthesis ModifyingAbove x Superscript 0 Baseline With caret upper E left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis ModifyingAbove x Superscript 0 Baseline With caret right parenthesis Superscript 1 divided by 2 Baseline 3rd Row 1st Column Blank 2nd Column colon equals upper F Superscript 0 Baseline comma EndLayoutcT x∗+
pλ0
⎡||⌃
x∗|| ≤F(x∗) ≤F(x0) = cT x0 + ||π||E||T (ω)x0 −h(ω)||
≤cT x0 + ||π||
)
⌃
x0E
(
T (ω), h(ω)
)T (
T (ω), h(ω)
)
⌃
x0
)1/2
:= F0,
(2.35) 
where the last inequality is guaranteed by the concavity of the functionz right arrow StartRoot z EndRootz →√z. Note  
that the upper bound upper F Superscript 0F0 can be computed easily, see (2.14), (2.32e). Since parallel to ModifyingAbove x Superscript asterisk Baseline With caret parallel to equals left parenthesis 1 plus parallel to x Superscript asterisk Baseline parallel to squared right parenthesis Superscript 1 divided by 2||⌃
x∗|| =
(
1 + ||x∗||2)1/2
, we now have the following norm bounds for optimal solutions x Superscript asteriskx∗
of (2.2a)–(2.2c). 
Theorem 2.3 Suppose that the assumptions of Lemma 2.2 hold, and let x Superscript 0x0 be any 
feasible solution of (2.2a)–(2.2c). Moreover, let upper F Superscript 0F0 be deﬁned as in (2.35). 
(a) If ModifyingBelow c With quotation dash prime x greater than or equals 0c'x ≥0 for all x element of upper Dx ∈D, then for any optimal solution x Superscript asteriskx∗of (2.2a)–(2.2c) we 
have that 
parallel to x Superscript asterisk Baseline parallel to less than or equals left parenthesis left parenthesis StartFraction normal upper Gamma Over ModifyingBelow p With quotation dash lamda 0 minus normal upper Gamma parallel to ModifyingBelow c With quotation dash parallel to EndFraction upper F left parenthesis x Superscript 0 Baseline right parenthesis right parenthesis squared minus 1 right parenthesis Superscript 1 divided by 2 Baseline less than or equals left parenthesis left parenthesis StartFraction normal upper Gamma upper F Superscript 0 Baseline Over ModifyingBelow p With quotation dash lamda 0 EndFraction right parenthesis squared minus 1 right parenthesis Superscript 1 divided by 2 Baseline period||x∗|| ≤
⎛
⎝
)
⎡
pλ0 −⎡||c|| F(x0)
)2
−1
⎞
⎠
1/2
≤
⎛
⎝
)
⎡F0
pλ0
)2
−1
⎞
⎠
1/2
. (2.36a) 
(b) If parallel to ModifyingAbove c With quotation dash parallel to less than StartFraction ModifyingBelow p With quotation dash lamda 0 Over normal upper Gamma EndFraction||c|| <
pλ0
⎡, then for any optimal solution x Superscript asteriskx∗of (2.2a)–(2.2c) it holds 
parallel to x Superscript asterisk Baseline parallel to less than or equals left parenthesis left parenthesis StartFraction upper F left parenthesis x Superscript 0 Baseline right parenthesis normal upper Gamma Over ModifyingBelow p With quotation dash lamda 0 minus normal upper Gamma parallel to ModifyingAbove c With quotation dash parallel to EndFraction right parenthesis squared minus 1 right parenthesis Superscript 1 divided by 2 Baseline less than or equals left parenthesis left parenthesis StartFraction upper F Superscript 0 Baseline normal upper Gamma Over ModifyingBelow p With quotation dash lamda 0 minus normal upper Gamma parallel to ModifyingAbove c With quotation dash parallel to EndFraction right parenthesis squared minus 1 right parenthesis Superscript 1 divided by 2 Baseline period||x∗|| ≤
⎛
⎝
)
F(x0)⎡
pλ0 −⎡||c||
)2
−1
⎞
⎠
1/2
≤
⎛
⎝
)
F0⎡
pλ0 −⎡||c||
)2
−1
⎞
⎠
1/2
.
(2.36b)

54
2
Solution of Stochastic Linear Programs by Discretization Methods
Proof 
(a) Here, from (2.34) and (2.35) we get 
upper F Superscript 0 Baseline greater than or equals upper F left parenthesis x Superscript 0 Baseline right parenthesis greater than or equals ModifyingAbove c With quotation dash Superscript upper T Baseline x Superscript asterisk Baseline plus StartFraction ModifyingBelow p With quotation dash lamda 0 Over normal upper Gamma EndFraction parallel to ModifyingAbove x Superscript asterisk Baseline With caret parallel to greater than or equals StartFraction ModifyingBelow p With quotation dash lamda 0 Over normal upper Gamma EndFraction left parenthesis 1 plus parallel to x Superscript asterisk Baseline parallel to squared right parenthesis Superscript 1 divided by 2F0 ≥F(x0) ≥cT x∗+
pλ0
⎡||⌃
x∗|| ≥
pλ0
⎡
(
1 + ||x∗||2)1/2
which yields the ﬁrst assertion (2.36a). 
(b) The next assertion (2.36b) follows from 
StartLayout 1st Row 1st Column upper F Superscript 0 Baseline greater than or equals upper F left parenthesis x Superscript 0 Baseline right parenthesis 2nd Column greater than or equals 3rd Column ModifyingAbove c With quotation dash Superscript upper T Baseline x Superscript asterisk Baseline plus StartFraction ModifyingBelow p With quotation dash lamda 0 Over normal upper Gamma EndFraction parallel to ModifyingAbove x Superscript asterisk Baseline With caret parallel to greater than or equals minus parallel to ModifyingAbove c With quotation dash parallel to dot parallel to x Superscript asterisk Baseline parallel to plus StartFraction ModifyingBelow p With quotation dash lamda 0 Over normal upper Gamma EndFraction parallel to ModifyingAbove x Superscript asterisk Baseline With caret parallel to 2nd Row 1st Column Blank 2nd Column greater than or equals 3rd Column left parenthesis minus parallel to ModifyingAbove c With quotation dash parallel to plus StartFraction ModifyingBelow p With quotation dash lamda 0 Over normal upper Gamma EndFraction right parenthesis left parenthesis 1 plus parallel to x Superscript asterisk Baseline parallel to squared right parenthesis Superscript 1 divided by 2 Baseline period 3rd Row 1st Column Blank EndLayoutF0 ≥F(x0) ≥cT x∗+
pλ0
⎡||⌃
x∗|| ≥−||c|| · ||x∗|| +
pλ0
⎡||⌃
x∗||
≥
)
−||c|| +
pλ0
⎡
)
(1 + ||x∗||2)1/2.
□
2.5 Invariant Discretizations 
According to Theorem 2.1, (2.23a)–(2.23c), there is a large variety of possible dis-
cretizations left parenthesis upper T Superscript upper N Baseline comma h Superscript upper N Baseline right parenthesis(T N, hN) of left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
guaranteeing a certain given a priori error 
bound, see (2.26b). Hence, the problem is to ﬁnd discretizations taking into consid-
eration the special structure of the underlying problem [ 6]. A main idea in stochastic 
linear programming with recourse is the use of special reﬁning strategies for reﬁn-
ing the partitions normal upper Xi Superscript upper N comma 1 Baseline comma ellipsis comma normal upper Xi Superscript upper N comma r Super Subscript upper N SuperscriptΞN,1, . . . , ΞN,rN of normal upper XiΞ, see  (2.17a)–(2.17e), such that only cells 
normal upper Xi Superscript upper N comma jΞN, j are further partitioned which contribute most to the increase of the accuracy of 
approximation, see [ 1, 2]. 
Very often the probability distributionupper P Subscript left parenthesis upper T left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesisP(
T(·),h(·)
) has certain symmetry or invari-
ance properties, [ 7]. Not destroying these invariance properties during the discretiza-
tion process, in several cases descent discretions can be constructed very easily. 
Considering the approximation left parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis comma h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
T N(ω), hN(ω)
)
, given by (2.8a), (2.8b) or  
(2.17a)–(2.17e), we deﬁne left parenthesis upper T 0 Superscript upper N Baseline left parenthesis omega right parenthesis comma h 0 Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
T N
0 (ω), hN
0 (ω)
)
by 
left parenthesis upper T 0 Superscript upper N Baseline left parenthesis omega right parenthesis comma h 0 Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis colon equals left parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis minus ModifyingAbove upper T With quotation dash Superscript upper N Baseline comma h Superscript upper N Baseline left parenthesis omega right parenthesis minus ModifyingAbove h With quotation dash Superscript upper N Baseline right parenthesis comma
(
T N
0 (ω), hN
0 (ω)
)
:=
(
T N(ω) −T
N, hN(ω) −h
N)
,
(2.37a) 
whereleft parenthesis ModifyingAbove upper T With quotation dash Superscript upper N Baseline comma ModifyingAbove h With quotation dash Superscript upper N Baseline right parenthesis
(
T
N, h
N)
is the mean ofleft parenthesis upper T Superscript upper N Baseline left parenthesis omega right parenthesis comma h Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
T N(ω), hN(ω)
)
. Using the results of [ 9], we deﬁne 
the distribution invariance as follows, where the setscript upper B Subscript alphaBα ofr Subscript upper N Baseline times r Subscript upper NrN × rN matricesupper B equals left parenthesis b Subscript i j Baseline right parenthesisB = (bi j)
is given by 
script upper B Subscript alpha Baseline equals left brace upper B colon 1 Superscript upper T Baseline upper B equals 1 Superscript upper T Baseline comma upper B alpha equals alpha comma upper B greater than or equals 0 right brace periodBα = {B : 1T B = 1T , Bα = α, B ≥0}.
(2.37b)

2.5 Invariant Discretizations
55
Here, 1 denotes the r Subscript upper NrN-vector 1 equals left parenthesis 1 comma 1 comma ellipsis comma 1 right parenthesis1 = (1, 1, . . . , 1) and alphaα is the r Subscript upper NrN-vector 
alpha equals left parenthesis upper P left parenthesis normal upper Omega Superscript upper N comma 1 Baseline right parenthesis comma upper P left parenthesis normal upper Omega Superscript upper N comma 2 Baseline right parenthesis comma ellipsis comma upper P left parenthesis normal upper Omega Superscript upper N comma r Super Subscript upper N Superscript Baseline right parenthesis right parenthesis Superscript upper Tα =
(
P(ΩN,1), P(ΩN,2), . . . , P(ΩN,rN )
)T
(2.37c) 
or 
alpha equals left parenthesis upper P Subscript xi left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Superscript upper N comma 1 Baseline right parenthesis comma upper P Subscript xi left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Superscript upper N comma 2 Baseline right parenthesis comma ellipsis comma upper P Subscript xi left parenthesis dot right parenthesis Baseline left parenthesis normal upper Xi Superscript upper N comma r Super Subscript upper N Superscript Baseline right parenthesis right parenthesis Superscript upper Tα =
(
Pξ(·)(ΞN,1), Pξ(·)(ΞN,2), . . . , Pξ(·)(ΞN,rN )
)T
(2.37d) 
and upper B greater than or equals 0B ≥0 means that b Subscript i j Baseline greater than or equals 0bi j ≥0 for all elements b Subscript i jbi j of upper BB. 
Deﬁnition 2.1 The distribution upper P Subscript left parenthesis upper T 0 Sub Superscript upper N Subscript left parenthesis dot right parenthesis comma h 0 Sub Superscript upper N Subscript left parenthesis dot right parenthesis right parenthesisP(
T N
0 (·),hN
0 (·)
) of left parenthesis upper T 0 Superscript upper N Baseline left parenthesis omega right parenthesis comma h 0 Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
T N
0 (ω), hN
0 (ω)
)
is called invari-
ant if there is a matrix upper B element of script upper B Subscript alphaB ∈Bα and an n times nn × n matrix upper CC such that for each row 
i equals 1 comma 2 comma ellipsis comma mi = 1, 2, . . . , m we have that 
StartLayout 1st Row 1st Column upper B Superscript upper T Baseline Start 4 By 1 Matrix 1st Row upper T Subscript 0 comma i Superscript upper N comma 1 2nd Row upper T Subscript 0 comma i Superscript upper N comma 2 3rd Row vertical ellipsis 4th Row upper T Subscript 0 comma i Superscript upper N comma r Super Subscript upper N Superscript EndMatrix 2nd Column equals 3rd Column Start 4 By 1 Matrix 1st Row upper T Subscript 0 comma i Superscript upper N comma 1 2nd Row upper T Subscript 0 comma i Superscript upper N comma 2 3rd Row vertical ellipsis 4th Row upper T Subscript 0 comma i Superscript upper N comma r Super Subscript upper N Superscript EndMatrix upper C 2nd Row 1st Column Blank 3rd Row 1st Column upper B Superscript upper T Baseline Start 4 By 1 Matrix 1st Row h Subscript 0 comma i Superscript upper N comma 1 2nd Row h Subscript 0 comma i Superscript upper N comma 2 3rd Row vertical ellipsis 4th Row upper T Subscript 0 comma i Superscript upper N comma r Super Subscript upper N Superscript EndMatrix 2nd Column equals 3rd Column Start 4 By 1 Matrix 1st Row h Subscript 0 comma i Superscript upper N comma 1 Baseline 2nd Row h Subscript 0 comma i Superscript upper N comma 2 Baseline 3rd Row vertical ellipsis 4th Row h Subscript 0 comma i Superscript upper N comma r Super Subscript upper N Superscript Baseline EndMatrix period EndLayoutBT
⎛
⎜⎜⎜⎝
T N,1
0,i
T N,2
0,i...
T N,rN
0,i
⎞
⎟⎟⎟⎠=
⎛
⎜⎜⎜⎝
T N,1
0,i
T N,2
0,i...
T N,rN
0,i
⎞
⎟⎟⎟⎠C
(2.38a) 
StartLayout 1st Row 1st Column upper B Superscript upper T Baseline Start 4 By 1 Matrix 1st Row upper T Subscript 0 comma i Superscript upper N comma 1 2nd Row upper T Subscript 0 comma i Superscript upper N comma 2 3rd Row vertical ellipsis 4th Row upper T Subscript 0 comma i Superscript upper N comma r Super Subscript upper N Superscript EndMatrix 2nd Column equals 3rd Column Start 4 By 1 Matrix 1st Row upper T Subscript 0 comma i Superscript upper N comma 1 2nd Row upper T Subscript 0 comma i Superscript upper N comma 2 3rd Row vertical ellipsis 4th Row upper T Subscript 0 comma i Superscript upper N comma r Super Subscript upper N Superscript EndMatrix upper C 2nd Row 1st Column Blank 3rd Row 1st Column upper B Superscript upper T Baseline Start 4 By 1 Matrix 1st Row h Subscript 0 comma i Superscript upper N comma 1 2nd Row h Subscript 0 comma i Superscript upper N comma 2 3rd Row vertical ellipsis 4th Row upper T Subscript 0 comma i Superscript upper N comma r Super Subscript upper N Superscript EndMatrix 2nd Column equals 3rd Column Start 4 By 1 Matrix 1st Row h Subscript 0 comma i Superscript upper N comma 1 Baseline 2nd Row h Subscript 0 comma i Superscript upper N comma 2 Baseline 3rd Row vertical ellipsis 4th Row h Subscript 0 comma i Superscript upper N comma r Super Subscript upper N Superscript Baseline EndMatrix period EndLayoutBT
⎛
⎜⎜⎜⎝
hN,1
0,i
hN,2
0,i...
T N,rN
0,i
⎞
⎟⎟⎟⎠=
⎛
⎜⎜⎜⎝
hN,1
0,i
hN,2
0,i...
hN,rN
0,i
⎞
⎟⎟⎟⎠.
(2.38b) 
For the general case, we have to introduce some more notations: 
Let denote z overTilde˜z the left parenthesis 1 plus m right parenthesis(1 + m)-vector 
z overTilde equals StartBinomialOrMatrix t Choose z EndBinomialOrMatrix w i t h t element of double struck upper R comma z element of double struck upper R Superscript m Baseline comma˜z =
)t
z
)
with t ∈R, z ∈Rm,
(2.39a) 
where we setz overTilde equals left parenthesis z overTilde Subscript 0 Baseline comma z overTilde Subscript 1 Baseline comma ellipsis comma z overTilde Subscript m Baseline right parenthesis˜z = (˜z0, ˜z1, . . . , ˜zm) withz overTilde Subscript 0 Baseline equals t comma z overTilde Subscript i Baseline equals z Subscript i Baseline comma i equals 1 comma ellipsis comma m Subscript i Baseline˜z0 = t, ˜zi = zi, i = 1, . . . , mi. Furthermore, 
let u left parenthesis z overTilde right parenthesisu(˜z) denote the total loss function 
u left parenthesis z overTilde right parenthesis equals t plus p left parenthesis z right parenthesisu(˜z) = t + p(z)
(2.39b) 
of (2.2a)–(2.2c). 
Obviously, the total loss function u equals u left parenthesis z overTilde right parenthesisu = u(˜z) is monotonous nondecreasing with 
respect to the component z 0 equals tz0 = t. In many cases the loss function pp itself has 
some (partial) monotonicity properties, see, e.g., [ 8]. Hence, supposing in the 
following—for example—that pp is also partially nondecreasing, we have a subset 
upper J subset of StartSet 0 comma 1 comma ellipsis comma m EndSetJ ⊂{0, 1, . . . , m} with 0 element of upper J0 ∈J and a corresponding partition 
z overTilde equals StartBinomialOrMatrix z overTilde Subscript upper I Baseline Choose z overTilde Subscript upper I upper I Baseline EndBinomialOrMatrix comma z overTilde Subscript upper I Baseline equals left parenthesis z overTilde Subscript i Baseline right parenthesis Subscript i element of upper J Baseline comma z overTilde Subscript upper I upper I Baseline equals left parenthesis z Subscript i Baseline right parenthesis Subscript i not an element of upper J Baseline˜z =
) ˜zI
˜zI I
)
,
˜zI = (˜zi)i∈J,
˜zI I = (zi)i /∈J
(2.40a)

56
2
Solution of Stochastic Linear Programs by Discretization Methods
ofz overTilde˜z into two subvectorsz overTilde Subscript upper I Baseline comma z overTilde Subscript upper I upper I Baseline˜zI, ˜zI I such that for any vectors z overTilde comma w overTilde element of double struck upper R Superscript 1 plus m˜z, ˜w ∈R1+m the following 
relation hold: 
z overTilde Subscript upper I Baseline less than or equals w overTilde Subscript upper I Baseline comma z overTilde Subscript upper I upper I Baseline equals w overTilde Subscript upper I upper I Baseline right double arrow u left parenthesis z overTilde right parenthesis less than or equals u left parenthesis w overTilde right parenthesis comma˜zI ≤˜wI, ˜zI I = ˜wI I
⇒
u(˜z) ≤u( ˜w),
(2.40b) 
where z overTilde Subscript upper I Baseline less than or equals w overTilde Subscript upper I˜zI ≤˜wI means that z Subscript i Baseline less than or equals w Subscript izi ≤wi for all i element of upper Ji ∈J. Of course, in many cases we also 
have the stronger condition 
z overTilde Subscript upper I Baseline less than or equals w overTilde Subscript upper I Baseline comma z overTilde Subscript upper I upper I Baseline equals w overTilde Subscript upper I upper I Baseline comma z overTilde Subscript i Baseline less than w overTilde Subscript i Baseline f o r a t l e a s t o n e i element of upper J right double arrow u left parenthesis z overTilde right parenthesis less than u left parenthesis w overTilde right parenthesis period˜zI ≤˜wI, ˜zI I = ˜wI I, ˜zi < ˜wi for at least one i ∈J
⇒
u(˜z) < u( ˜w).
(2.40c) 
Based on the above deﬁnitions, the invariance of an arbitrary distribution 
upper P Subscript left parenthesis upper A Sub Superscript upper N Subscript left parenthesis dot right parenthesis comma b Sub Superscript upper N Subscript left parenthesis dot right parenthesis right parenthesisP(
AN (·),bN (·)
) with 
left parenthesis upper A Superscript upper N Baseline left parenthesis omega right parenthesis comma b Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis equals Start 2 By 2 Matrix 1st Row 1st Column ModifyingAbove c With quotation dash Superscript upper T Baseline 2nd Column 0 2nd Row 1st Column upper T Superscript upper N Baseline left parenthesis omega right parenthesis 2nd Column h Superscript upper N Baseline left parenthesis omega right parenthesis EndMatrix
(
AN(ω), bN(ω)
)
=
)
cT
0
T N(ω) hN(ω)
)
(2.41) 
is stated as follows, where the following inclusion is still assumed: 
upper D subset of double struck upper R Subscript plus Superscript n Baseline periodD ⊂Rn
+.
(2.42) 
Deﬁnition 2.2 The probability distribution upper P Subscript left parenthesis upper A Sub Superscript upper N Subscript left parenthesis dot right parenthesis comma b Sub Superscript upper N Subscript left parenthesis dot right parenthesis right parenthesisP(
AN (·),bN (·)
) of left parenthesis upper A Superscript upper N Baseline left parenthesis omega right parenthesis comma b Superscript upper N Baseline left parenthesis omega right parenthesis right parenthesis
(
AN(ω), bN(ω)
)
is 
called invariant it there is a matrix upper B element of script upper B Subscript alphaB ∈Bα and an n times nn × n matrix upper CC such that the 
following relations hold: 
(i) 
ModifyingAbove c With quotation dash greater than or equals ModifyingAbove c With quotation dash Superscript upper T Baseline upper Cc ≥cT C
(2.43a) 
(ii) 
StartLayout 1st Row 1st Column ModifyingAbove upper T With quotation dash Subscript upper I 2nd Column less than or equals 3rd Column ModifyingAbove upper T With quotation dash Subscript upper I Baseline upper C 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper T With quotation dash Subscript upper I upper I 2nd Column equals 3rd Column ModifyingAbove upper T With quotation dash Subscript upper I upper I Baseline upper C EndLayoutT I ≤T IC
(2.43b) 
StartLayout 1st Row 1st Column ModifyingAbove upper T With quotation dash Subscript upper I 2nd Column less than or equals 3rd Column ModifyingAbove upper T With quotation dash Subscript upper I Baseline upper C 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper T With quotation dash Subscript upper I upper I 2nd Column equals 3rd Column ModifyingAbove upper T With quotation dash Subscript upper I upper I Baseline upper C EndLayoutT I I = T I IC
(2.43c) 
(iii) 
left parenthesis 2.8 normal a right parenthesis normal a normal n normal d left parenthesis 2.38 normal b right parenthesis normal a normal r normal e normal f normal u normal l normal f normal i normal l normal l normal e normal d period(2.8a) and (2.38b) are fulﬁlled.
(2.43d) 
whereModifyingAbove upper T With quotation dash Subscript upper I Baseline comma ModifyingAbove upper T With quotation dash Subscript upper I upper I BaselineT I, T I I, resp. is the matrix containing the rowsModifyingAbove upper T With quotation dash Subscript iT i withi element of upper J comma i not an element of upper Ji ∈J, i /∈J, respec-
tively. 
Remark 2.3 Note that condition (2.43d), hence, relations (2.38a) and (2.38b) can be 
interpreted as conditions for the discretization of the distribution of the centralized 
random matrixleft parenthesis upper T 0 left parenthesis omega right parenthesis comma h 0 left parenthesis omega right parenthesis right parenthesis equals left parenthesis upper T left parenthesis omega right parenthesis minus ModifyingAbove upper T With quotation dash comma h left parenthesis omega right parenthesis minus ModifyingAbove h With quotation dash right parenthesis
(
T0(ω), h0(ω)
)
=
(
T (ω) −T , h(ω) −h
)
, whereleft parenthesis ModifyingAbove upper T With quotation dash comma ModifyingAbove h With quotation dash right parenthesis(T , h) is the mean 
of left parenthesis upper T left parenthesis omega right parenthesis comma h left parenthesis omega right parenthesis right parenthesis
(
T (ω), h(ω)
)
.

References
57
The signiﬁcance of the above invariance concept follows from the following result, 
cf. [ 9]. 
Theorem 2.4 Suppose thatupper D subset of double struck upper R Subscript plus Superscript nD ⊂Rn
+. Ifleft parenthesis upper A Superscript upper N Baseline left parenthesis dot right parenthesis comma b Superscript upper N Baseline left parenthesis dot right parenthesis
(
AN(·), bN(·
)
has an invariant distribution 
with matrices upper B element of script upper B Subscript alpha Baseline comma upper CB ∈Bα, C according to Deﬁnition 2.2, then 
(I) upper F Superscript upper N Baseline left parenthesis y right parenthesis less than or equals upper F Superscript upper N Baseline left parenthesis x right parenthesisF N(y) ≤F N(x) with y colon equals upper C xy := Cx for every x element of double struck upper R Superscript nx ∈Rn
(II) h equals y minus xh = y −x is a descent direction for upper F Superscript upper NF N at xx, provided that only upper F Superscript upper NF N is not 
constant on the line segment x yxy joining xx and y not equals xy /= x. 
As an important consequence of Theorem 5.1 we ﬁnd the following result: 
Corollary 2.1 Assume that upper P Subscript left parenthesis upper A Sub Superscript upper N Subscript left parenthesis dot right parenthesis comma b Sub Superscript upper N Subscript left parenthesis dot right parenthesis right parenthesisP(
AN (·),bN (·)
) is invariant with matrices upper B element of script upper B Subscript alpha Baseline comma upper CB ∈Bα, C
according to Deﬁnition 2.2. Furthermore, suppose that upper F Superscript upper N Baseline left parenthesis x right parenthesisF N(x) is not constant on 
each line segmentx yxy inupper DD. Ifx Superscript asteriskx∗is an optimal solution of the approximating problem 
(2.24c), then 
StartLayout 1st Row upper C x Superscript asterisk Baseline equals x Superscript asterisk Baseline o r 2nd Row h equals upper C x Superscript asterisk Baseline minus x Superscript asterisk Baseline i s n o t a f e a s i b l e d i r e c t i o n f o r upper D a t x Superscript asterisk Baseline period EndLayoutCx∗= x∗or
h = Cx∗−x∗is not a feasible direction for D at x∗.
Note 2.1 Corollary 2.1 holds also under weaker conditions concerning upper F Superscript upper NF N. 
References 
1. Kall, P.: Stochastic Linear Programming. Springer, Berlin (1976) 
2. Kall, P., Wallace, S.: Stochastic Programming. Stochastic Programming. Wiley, Chichester 
(1994) 
3. Marti, K.: Entscheidungsprobleme mit linearem Aktionen- und Ergebnisraum. Zeitschrift für 
Wahrscheinlichkeitstheorie und Verwandte Gebiete 23, 133–147 (1972) 
4. Marti, K.: Approximationen der Entscheidungsprobleme mit linearer Ergebnisfunktion und 
positiv homogener, subadditiver Verlustfunktion. Zeitschrift für Wahrscheinlichkeitstheorie 
und Verwandte Gebiete 31, 203–233 (1975) 
5. Marti, K.: Approximationen stochastischer Optimierungsprobleme. Hain Konigstein/Ts (1979) 
6. Marti, K.: Diskretisierung stochastischer Programme unter Berücksichtigung der Problem-
struktur. Z. Angew. Math. Mech. 59, T105–T108 (1979) 
7. Marti, K.: Computation of descent directions in stochastic optimization problems with invariant 
distributions. ZAMM - J. Appl. Math. Mech./Zeitschrift für Angewandte Mathematik und 
Mechanik 65(8), 355–378 (1985). https://doi.org/10.1002/zamm.19850650813 
8. Marti, K.: Descent Directions and Efﬁcient Solutions in Discretely Distributed Stochastic 
Programs. Lecture Notes in Economics and Mathematical Systems, vol. 299. Springer, Berlin 
(1988) 
9. Marti, K.: Computation of efﬁcient solutions of discretely distributed stochastic optimization 
problems. ZOR Methods Model. Oper. Res. 36(3), 259–294 (1992). https://doi.org/10.1007/ 
BF01415892 
10. Marti, K.: Optimal design of trusses as a stochastic linear programming problem. In: Nowak, A. 
(ed.) Reliability and Optimization of Structural Systems, pp. 231–239. University of Michigan 
Press, Ann Arbor (1998) 
11. Mayer, J.: Stochastic Linear Programming Algorithms: A Comparison Based on a Model 
Management System. Gordon and Breach Science Publishers, Amsterdam (1998)

Chapter 3 
Optimal Control Under Stochastic 
Uncertainty 
Abstract Optimal control problems as arising in different technical (mechanical, 
electrical, thermodynamic, chemical, etc.) plants and economic systems are modeled 
mathematically by a system of ﬁrst-order nonlinear differential equations for the plant 
state vectorz equals z left parenthesis t right parenthesisz = z(t) involving, e.g., displacements, stresses, voltages, currents, pres-
sures, concentration of chemicals, demands, etc. This system of differential equations 
depends on the vector u left parenthesis t right parenthesisu(t) of input or control variables and a vector a equals a left parenthesis omega right parenthesisa = a(ω) of 
certain random model parameters. Moreover, also the vector z 0z0 of initial values of 
the plant state vector z equals z left parenthesis t right parenthesisz = z(t) at the initial time t equals t 0t = t0 may be subject to random 
variations. While the actual realizations of the random parameters and initial values 
are not known at the planning stage, we may assume that the probability distribution 
or at least the occurring moments, such as expectations, variances, etc., are known. 
Moreover, we suppose that the costs along the trajectory and the terminal costsupper GG are 
convex functions with respect to the pairleft parenthesis u comma z right parenthesis(u, z) of control and state variables u, z, the 
ﬁnal statez left parenthesis t Subscript f Baseline right parenthesisz(t f ), respectively. The problem is then to determine an open-loop, closed-
loop, or an intermediate open-loop feedback control law minimizing the expected 
total costs consisting of the sum of the costs along the trajectory and the terminal 
costs. For the computation of stochastic optimal open-loop controls at each starting 
time point t Subscript btb, the stochastic Hamilton function of the control problem is introduced 
ﬁrst. Then, a upper H minusupper HHupper H minusminimal control can be determined by solving a ﬁnite-dimensional 
stochastic optimization problem for minimizing the conditional expectation of the 
stochastic Hamiltonian subject to the remaining deterministic control constraints at 
each time point tt. Having a  upper H minusupper HHupper H minusminimal control, the related Hamiltonian two-point 
boundary value problem with random parameters is formulated for the computation 
of the stochastic optimal state and adjoint state trajectory. In the case of a linear-
quadratic control problem the state and adjoint state trajectory can be determined 
analytically to a large extent. Inserting then these trajectories into the upper HH-minimal 
control, stochastic optimal open-loop controls are found. For approximate solutions 
of the stochastic two-point boundary problem, cf. [ 31]. 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_3 
59

60
3
Optimal Control Under Stochastic Uncertainty
3.1 
Stochastic Control Systems 
Optimal control and regulator problems arise in many concrete applications (mechan-
ical, electrical, thermodynamical, chemical, etc.) are modeled [ 3, 17, 34, 37] by  
dynamical control systems obtained from physical measurements and/or known 
physical laws. The basic control system (input-output system) is mathematically 
represented [ 18, 38] by a system of ﬁrst-order random differential equations: 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of normal upper Omega 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis period EndLayout˙z(t) = g
 
t, ω, z(t), u(t)
 
,
t0 ≤t ≤t f , ω ∈ 
(3.1a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of normal upper Omega 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis period EndLayoutz(t0) = z0(ω).
(3.1b) 
Here,omegaω is the basic random element taking values in a probability spaceleft parenthesis normal upper Omega comma German upper A comma upper P right parenthesis( , A, P), 
and describing the present random variations of model parameters or the inﬂuence 
of noise terms. The probability space left parenthesis normal upper Omega comma German upper A comma upper P right parenthesis( , A, P) consists of the sample space or set 
of elementary events normal upper Omega , the  sigmaσ-algebra German upper AA of events and the probability measure upper PP. 
The plant state vector z equals z left parenthesis t comma omega right parenthesisz = z(t, ω) is an mm-vector involving direct or indirect mea-
surable/observable quantities like displacements, stresses, voltage, current, pressure, 
concentrations, etc., and their time derivatives (velocities),z 0 left parenthesis omega right parenthesisz0(ω) is the random initial 
state. The plant control or control inputu left parenthesis t right parenthesisu(t) is a deterministic or stochasticnn-vector 
denoting system inputs like external forces or moments, voltages, ﬁeld current, thrust 
program, fuel consumption, production rate, etc. Furthermore, ModifyingAbove z With dot˙z denotes the deriva-
tive with respect to the timett. We assume that an inputu equals u left parenthesis t right parenthesisu = u(t) is chosen such that 
u left parenthesis dot right parenthesis element of upper Uu(·) ∈U, where upper UU is a suitable linear space of input functions u left parenthesis dot right parenthesis colon left bracket t 0 comma t Subscript f Baseline right bracket right arrow double struck upper R Superscript nu(·) : [t0, t f ] →Rn
on the time intervalleft bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. Examples forupper UU are subspaces of the spaceupper P upper C 0 Superscript n Baseline left bracket t 0 comma t Subscript f Baseline right bracketPCn
0[t0, t f ] of 
piecewise continuous functionsu left parenthesis dot right parenthesis colon left bracket t 0 comma t Subscript f Baseline right bracket right arrow double struck upper R Superscript nu(·) : [t0, t f ] →Rn normed by the supremum norm 
StartLayout 1st Row double vertical bar u left parenthesis dot right parenthesis double vertical bar Subscript normal infinity Baseline equals sup left brace double vertical bar u left parenthesis t right parenthesis double vertical bar colon t 0 less than or equals t less than or equals t Subscript f Baseline right brace period EndLayout
   u(·)
   
∞= sup
   u(t)
  : t0 ≤t ≤t f
 
.
Note that a function on a closed, bounded interval is called piecewise continuous if it 
is continuous up to at most a ﬁnite number of points, where the one-sided limits of the 
function exist. Other important examples forupper UU are the Banach spaces of integrable, 
essentially bounded measurable or regulated [ 8] functions upper L Subscript p Superscript n Baseline left parenthesis left bracket t 0 comma t Subscript f Baseline right bracket comma script upper B Superscript 1 Baseline comma lamda Superscript 1 Baseline right parenthesis comma p greater than or equals 1Ln
p([t0, t f ], B1, λ1), p ≥
1, upper L Subscript normal infinity Superscript n Baseline left parenthesis left bracket t 0 comma t Subscript f Baseline right bracket comma script upper B Superscript 1 Baseline comma lamda Superscript 1 Baseline right parenthesisLn
∞([t0, t f ], B1, λ1), upper R e g left parenthesis left bracket t 0 comma t Subscript f Baseline right bracket semicolon double struck upper R Superscript n Baseline right parenthesisReg([t0, t f ]; Rn), resp., on left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. Here, left parenthesis left bracket t 0 comma t Subscript f Baseline right bracket comma script upper B Superscript 1 Baseline comma lamda Superscript 1 Baseline right parenthesis
 
[t0, t f ], B1, λ1 
denotes the measure space on left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ] with the sigma minusσ−algebra script upper B Superscript 1B1 of Borel sets and 
the Lebesgue-measurelamda Superscript 1λ1 onleft bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. Obviously,upper P upper C 0 Superscript n Baseline left bracket t 0 comma t Subscript f Baseline right bracket subset of upper L Subscript normal infinity Superscript n Baseline left parenthesis left bracket t 0 comma t Subscript f Baseline right bracket comma script upper B Superscript 1 Baseline comma lamda Superscript 1 Baseline right parenthesisPCn
0[t0, t f ] ⊂Ln
∞([t0, t f ], B1, λ1). 
If u equals u left parenthesis t comma omega right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baselineu = u(t, ω), t0 ≤t ≤t f , is a random input function, then correspondingly we 
suppose that u left parenthesis dot comma omega right parenthesis element of upper Uu(·, ω) ∈U a.s. (almost sure or with probability 1). Moreover, we 
suppose that the function g equals g left parenthesis t comma omega comma z comma u right parenthesisg = g(t, ω, z, u) of the plant differential equation (3.1a) 
and its partial derivatives (Jacobians) upper D Subscript z Baseline g comma upper D Subscript u Baseline gDzg, Dug with respect to zz and uu are at least 
measurable on the space left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega times double struck upper R Superscript m Baseline times double struck upper R Superscript n[t0, t f ] ×  × Rm × Rn. 
The possible trajectories of the plant, hence, absolutely continuous [ 32] m-vector 
functions, are contained in the linear space upper Z equals upper C 0 Superscript m Baseline left bracket t 0 comma t Subscript f Baseline right bracketZ = Cm
0 [t0, t f ] of continuous functions 
z left parenthesis dot right parenthesis colon left bracket t 0 comma t Subscript f Baseline right bracket right arrow double struck upper R Superscript mz(·) : [t0, t f ] →Rm on left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. The space upper ZZ contains the set upper P upper C 1 Superscript m Baseline left bracket t 0 comma t Subscript f Baseline right bracketPCm
1 [t0, t f ] of con-

3.1 Stochastic Control Systems
61
tinuous, piecewise differentiable functions on the interval left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. A function on a  
closed, bounded interval is called piecewise differentiable if the function is differen-
tiable up to at most a ﬁnite number of points, where the function and its derivative 
have existing one-sided limits. The space upper ZZ is also normed by the supremum norm. 
upper D left parenthesis subset of upper U right parenthesisD(⊂U) denotes the convex set of admissible controls u left parenthesis dot right parenthesisu(·), deﬁned, e.g., by some 
box constraints. Using the available informationGerman upper A Subscript tAt up to a certain timett, the problem 
is then to ﬁnd an optimal control function u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t right parenthesisu∗= u∗(t) being most insensitive with 
respect to random parameter variations. This can be obtained by minimizing the 
total (conditional) expected costs arising along the trajectory z equals z left parenthesis t right parenthesisz = z(t) and/or at the 
terminal statez Subscript f Baseline equals z left parenthesis t Subscript f Baseline right parenthesisz f = z(t f ) subject to the plant differential equation (3.1a), (3.1b) and 
the required control and state constraints. Optimal controls being most insensitive 
with respect to random parameter variations are also called robust controls. Such 
controls can be obtained by stochastic optimization methods [ 26]. 
Since feedback control (FB) laws can be approximated very efﬁciently, cf. [ 2, 
19, 34], by means of open-loop feedback (OLF) control laws, see Sect. 3.2, for  
practical purposes we may conﬁne to the computation of deterministic stochastic 
optimal open-loop (OL) controls u equals u left parenthesis dot semicolon t Subscript b Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline commau = u(·; tb), tb ≤t ≤t f , on arbitrary “remaining 
time intervals”left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ] ofleft bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. Here,u equals u left parenthesis dot semicolon t Subscript b Baseline right parenthesisu = u(·; tb) is stochastic optimal with respect 
to the information German upper A Subscript t Sub Subscript bAtb at the “initial” time point t Subscript btb. 
3.1.1 
Random Differential and Integral Equations 
In many technical applications the random variations are not caused by an additive 
white noise term, but by means of possibly time-dependent random parameters. 
Hence, in the following the dynamics of the control system is represented by random 
differential equation, i.e., a system of ordinary differential equations (3.1a), (3.1b) 
with random parameters. Furthermore, solutions of random differential equations 
are deﬁned here in the parameter (point)-wise sense, cf. [ 4, 6]. 
In case of a discrete or discretized probability distribution of the random ele-
ments, model parameters, i.e., normal upper Omega equals StartSet omega 1 comma omega 2 comma ellipsis comma omega Subscript rho Baseline EndSet comma upper P left parenthesis omega equals omega Subscript j Baseline right parenthesis equals alpha Subscript j Baseline greater than 0 comma j equals 1 comma ellipsis comma rho comma sigma summation Underscript j equals 1 Overscript rho Endscripts alpha Subscript j Baseline equals 1 = {ω1, ω2, . . . , ω }, P(ω = ω j) = α j > 0, j =
1, . . . ,  ,
  
j=1
α j = 1, we can redeﬁne (3.1a), (3.1b) by  
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove z With dot left parenthesis t right parenthesis equals g left parenthesis t comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column z left parenthesis t 0 right parenthesis equals z 0 comma EndLayout˙z(t) = g
 
t, z(t), u(t)
 
,
t0 ≤t ≤t f ,
(3.1c) 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove z With dot left parenthesis t right parenthesis equals g left parenthesis t comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column z left parenthesis t 0 right parenthesis equals z 0 comma EndLayoutz(t0) = z0,
(3.1d) 
with the vectors and vector functions 
StartLayout 1st Row 1st Column z left parenthesis t right parenthesis 2nd Column colon equals left parenthesis z left parenthesis t comma omega Subscript j Baseline right parenthesis right parenthesis Subscript j equals 1 comma ellipsis comma rho Baseline comma 3rd Column Blank 4th Column z 0 colon equals left parenthesis z 0 left parenthesis omega Subscript j Baseline right parenthesis right parenthesis Subscript j equals 1 comma ellipsis comma rho 2nd Row 1st Column g left parenthesis t comma z comma u right parenthesis 2nd Column colon equals left parenthesis g left parenthesis t comma omega Subscript j Baseline comma z Subscript left parenthesis j right parenthesis Baseline comma u right parenthesis right parenthesis Subscript j equals 1 comma ellipsis comma rho Baseline comma 3rd Column Blank 4th Column z colon equals left parenthesis z Subscript left parenthesis j right parenthesis Baseline right parenthesis Subscript j equals 1 comma ellipsis comma rho Baseline element of double struck upper R Superscript rho m Baseline period EndLayoutz(t) :=
 
z(t, ω j)
 
j=1,..., ,
z0 :=
 
z0(ω j)
 
j=1,..., 
g(t, z, u) :=
 
g(t, ω j, z( j), u)
 
j=1,..., ,
z := (z( j)) j=1,..., ∈R m.

62
3
Optimal Control Under Stochastic Uncertainty
Hence, in this case (3.1c), (3.1d) represent again an ordinary system of ﬁrst order 
differential equations for the rho m m unknown functions 
StartLayout 1st Row z Subscript i j Baseline equals z Subscript i Baseline left parenthesis t comma omega Subscript j Baseline right parenthesis comma i equals 1 comma ellipsis comma m comma j equals 1 comma ellipsis comma rho period EndLayoutzi j = zi(t, ω j),
i = 1, . . . , m,
j = 1, . . . ,  .
Results on the existence and uniqueness of the systems (3.1a), (3.1b) and (3.1c), 
(3.1d) and their dependence on the inputs can be found in [ 8]. 
Also in the general case we consider a solution in the point-wise sense. This  
means that for each random elementomega element of normal upper Omegaω ∈ , (3.1a), (3.1b) is interpreted as a system 
of ordinary ﬁrst-order differential equations with the initial values z 0 equals z 0 left parenthesis omega right parenthesisz0 = z0(ω) and 
control inputu equals u left parenthesis t right parenthesisu = u(t). Hence, we assume that to each deterministic controlu left parenthesis dot right parenthesis element of upper Uu(·) ∈U
and each random element omega element of normal upper Omegaω ∈ there exists a unique solution 
z left parenthesis dot comma omega right parenthesis equals upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis equals upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis commaz(·, ω) = S
 
ω, u(·)
 
= S
 
ω, u(·)
 
,
(3.2a) 
z left parenthesis dot comma omega right parenthesis element of upper C 0 Superscript m Baseline left bracket t 0 comma t Subscript f Baseline right bracketz(·, ω) ∈Cm
0 [t0, t f ], of the integral equation 
z left parenthesis t right parenthesis equals z 0 left parenthesis omega right parenthesis plus integral Subscript t 0 Superscript t Baseline g left parenthesis s comma omega comma z left parenthesis s right parenthesis comma u left parenthesis s right parenthesis right parenthesis d s comma t 0 less than or equals t less than or equals t Subscript f Baseline commaz(t) = z0(ω) +
t 
t0
g
 
s, ω, z(s), u(s)
 
ds,
t0 ≤t ≤t f ,
(3.2b) 
such that left parenthesis t comma omega right parenthesis right arrow upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis(t, ω) →S
 
ω, u(·)
 
(t) is measurable. This solution is also denoted by 
z left parenthesis t comma omega right parenthesis equals z Subscript u Baseline left parenthesis t comma omega right parenthesis equals z left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline periodz(t, ω) = zu(t, ω) = z(t, ω, u(·)),
t0 ≤t ≤t f .
(3.2c) 
Obviously, the integral equation (3.2b) is the integral version of the initial value 
problem (3.1a), (3.1b): Indeed, if, for givenomega element of normal upper Omegaω ∈ ,z equals z left parenthesis t comma omega right parenthesisz = z(t, ω) is a solution of (3.1a), 
(3.1b), i.e.,z left parenthesis dot comma omega right parenthesisz(·, ω) is absolutely continuous, satisﬁes (3.1a) for almost allt element of left bracket t 0 comma t Subscript f Baseline right brackett ∈[t0, t f ]
and fulﬁlls (3.1b), then z equals z left parenthesis t comma omega right parenthesisz = z(t, ω) is also a solution of (3.2b). Conversely, if, for 
given omega element of normal upper Omegaω ∈ , z equals z left parenthesis t comma omega right parenthesisz = z(t, ω) is a solution of (3.2b), such that the integral on the right-
hand side exists in the Lebesgue-sense for each t element of left bracket t 0 comma t Subscript f Baseline right brackett ∈[t0, t f ], then this integral as a 
function of the upper boundtt and therefore also the functionz equals z left parenthesis t comma omega right parenthesisz = z(t, ω) is absolutely 
continuous. Hence, by taking t equals t 0t = t0 and by differentiation of (3.2b) with respect to 
tt, cf.  [  32], we have that z equals z left parenthesis t comma omega right parenthesisz = z(t, ω) is also a solution of (3.1a), (3.1b). 
3.1.1.1
Parametric Representation of the Random Differential/Integral 
Equation 
In the following we want to justify the above assumption that the initial value problem 
(3.1a), (3.1b), the equivalent integral equation (3.2b), resp., has a unique solution 
z equals z left parenthesis t comma omega right parenthesisz = z(t, ω). For this purpose, lettheta equals theta left parenthesis t comma omega right parenthesisθ = θ(t, ω) be anrr-dimensional stochastic process, 
as, e.g., time-varying disturbances, random parameters, etc., of the system, such that 
the sample functions theta left parenthesis dot comma omega right parenthesisθ(·, ω) are continuous with probability one. Furthermore, let

3.1 Stochastic Control Systems
63
StartLayout 1st Row g overTilde colon left bracket t 0 comma t Subscript f Baseline right bracket times double struck upper R Superscript r Baseline times double struck upper R Superscript m Baseline times double struck upper R Superscript n Baseline right arrow double struck upper R Superscript m EndLayout ˜g : [t0, t f ] × Rr × Rm × Rn →Rm
be a continuous function having continuous Jacobiansupper D Subscript theta Baseline q overTilde comma upper D Subscript z Baseline g overTilde comma upper D Subscript u Baseline g overTildeDθ ˜q, Dz ˜g, Du ˜g with respect to 
theta comma z comma uθ, z, u. Now consider the case that the functiongg of the process differential equation 
(3.1a), (3.1b) is given by 
StartLayout 1st Row g left parenthesis t comma omega comma z comma u right parenthesis colon equals ModifyingAbove g With tilde left parenthesis t comma theta left parenthesis t comma omega right parenthesis comma z comma u right parenthesis comma left parenthesis t comma omega comma z comma u right parenthesis element of left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega times double struck upper R Superscript m Baseline times double struck upper R Superscript n Baseline period EndLayoutg(t, ω, z, u) := ˜g
 
t, θ(t, ω), z, u
 
,
(t, ω, z, u) ∈[t0, t f ] ×  × Rm × Rn.
The spaces upper U comma upper ZU, Z of possible inputs, trajectories, resp., of the plant are chosen as 
follows:upper U colon equals upper R e g left parenthesis left bracket t 0 comma t Subscript f Baseline right bracket semicolon double struck upper R Superscript n Baseline right parenthesisU := Reg([t0, t f ]; Rn) is the Banach space of all regulated functionsu left parenthesis dot right parenthesis colon left bracket t 0 comma t Subscript f Baseline right bracket right arrow double struck upper R Superscript nu(·) :
[t0, t f ] →Rn, normed by the supremum norm parallel to dot parallel to Subscript normal infinity ·  ∞. 
Furthermore, we set upper Z colon equals upper C 0 Superscript m Baseline left bracket t 0 comma t Subscript f Baseline right bracketZ := Cm
0 [t0, t f ] and normal upper Theta colon equals upper C 0 Superscript r Baseline left bracket t 0 comma t Subscript f Baseline right bracket := Cr
0[t0, t f ]. Here, for an integer nuν, 
upper C 0 Superscript nu Baseline left bracket t 0 comma t Subscript f Baseline right bracketCν
0[t0, t f ] denotes the Banach space of all continuous functions of left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ] into double struck upper R Superscript nuRν
normed by the supremum normparallel to dot parallel to Subscript normal infinity ·  ∞. By our assumption we havetheta left parenthesis dot comma omega right parenthesis element of normal upper Thetaθ(·, ω) ∈ a.s. 
(almost sure). Deﬁne 
StartLayout 1st Row normal upper Xi equals double struck upper R Superscript m Baseline times normal upper Theta times upper U semicolon EndLayout = Rm ×  × U;
normal upper Xi is the space of possible initial values, time-varying model/environmental param-
eters and inputs of the dynamic system. Hence, normal upper Xi may be considered as the total 
space of inputs 
xi colon equals Start 3 By 1 Matrix 1st Row z 0 2nd Row theta left parenthesis dot right parenthesis 3rd Row u left parenthesis dot right parenthesis EndMatrixξ :=
⎛
⎝
z0
θ(·)
u(·)
⎞
⎠
into the plant, consisting of the random initial state z 0z0, the random input function 
theta equals theta left parenthesis t comma omega right parenthesisθ = θ(t, ω) and the control functionu equals u left parenthesis t right parenthesisu = u(t). Let now the mappingtau colon normal upper Xi times upper Z right arrow upper Zτ :  × Z →Z
related to the plant equation (3.1a), (3.1b) or (3.2b) be given by 
tau left parenthesis xi comma z left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis equals z left parenthesis t right parenthesis minus left parenthesis z 0 plus integral Subscript t 0 Superscript t Baseline ModifyingAbove g With tilde left parenthesis s comma theta left parenthesis s right parenthesis comma z left parenthesis s right parenthesis comma u left parenthesis s right parenthesis right parenthesis d s right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline periodτ
 
ξ, z(·)
 
(t) = z(t) −
⎛
⎝z0 +
t 
t0
˜g
 
s, θ(s), z(s), u(s)
 
ds
⎞
⎠,
t0 ≤t ≤t f .
(3.2d) 
Note that for each input vectorxi element of normal upper Xiξ ∈ and functionz left parenthesis dot right parenthesis element of upper Zz(·) ∈Z the integrand in (3.2d) 
is piecewise continuous, bounded or at least essentially bounded on left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. Hence, 
the integral in (3.2d) as a function of its upper limit tt yields again a continuous 
function on the interval left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ], and therefore an element of upper ZZ. This shows that tauτ
maps normal upper Xi times upper Z × Z into upper ZZ. 
Obviously, the initial value problem (3.1a), (3.1b) or its integral form (3.2b) can 
be represented by the operator equation 
tau left parenthesis xi comma z left parenthesis dot right parenthesis right parenthesis equals 0 periodτ(ξ, z(·)) = 0.
(3.2e)

64
3
Optimal Control Under Stochastic Uncertainty
Operators of the type (3.2d) are well studied, see, e.g., [ 8, 20]: It is known that 
tauτ is continuously Fréchet left parenthesis upper F right parenthesis(F)-differentiable [ 8, 20]. Note that the F-differential is a 
generalization of the derivatives (Jacobians) of mappings between ﬁnite-dimensional 
spaces to mappings between arbitrary normed spaces. Thus, theupper FF-derivativeupper D tauDτ of 
tauτ at a certain point left parenthesis ModifyingAbove xi With quotation dash comma ModifyingAbove z With quotation dash left parenthesis dot right parenthesis right parenthesis
 
ξ, z(·)
 
is given by 
StartLayout 1st Row 1st Column Blank 2nd Column left parenthesis upper D tau left parenthesis xi overbar comma ModifyingAbove z With bar left parenthesis dot right parenthesis right parenthesis dot left parenthesis xi comma z left parenthesis dot right parenthesis right parenthesis right parenthesis left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column equals z left parenthesis t right parenthesis minus left parenthesis z 0 plus integral Subscript t 0 Superscript t Baseline upper D Subscript z Baseline ModifyingAbove g With tilde left parenthesis s comma ModifyingAbove theta With bar left parenthesis s right parenthesis comma ModifyingAbove z With bar left parenthesis s right parenthesis comma ModifyingAbove u With bar left parenthesis s right parenthesis right parenthesis z left parenthesis s right parenthesis d s 3rd Row 1st Column Blank 2nd Column plus integral Subscript t 0 Superscript t Baseline upper D Subscript theta Baseline ModifyingAbove g With tilde left parenthesis s comma ModifyingAbove theta With bar left parenthesis s right parenthesis comma ModifyingAbove z With bar left parenthesis s right parenthesis comma ModifyingAbove u With bar left parenthesis s right parenthesis right parenthesis theta left parenthesis s right parenthesis d s 4th Row 1st Column Blank 2nd Column plus integral Subscript t 0 Superscript t Baseline upper D Subscript u Baseline ModifyingAbove g With tilde left parenthesis s comma ModifyingAbove theta With bar left parenthesis s right parenthesis comma ModifyingAbove z With bar left parenthesis s right parenthesis comma ModifyingAbove u With bar left parenthesis s right parenthesis right parenthesis u left parenthesis s right parenthesis d s right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma EndLayout
 
Dτ
 
¯ξ, ¯z(·)
 
·
 
ξ, z(·)
  
(t)
(3.2g) 
= z(t) −
 
z0 + 
t 
t0 
Dz ˜g
 
s, ¯θ(s), ¯z(s), ¯u(s)
 
z(s)ds 
+ 
t 
t0 
Dθ ˜g
 
s, ¯θ(s), ¯z(s), ¯u(s)
 
θ(s)ds 
+ 
t 
t0 
Du ˜g
 
s, ¯θ(s), ¯z(s), ¯u(s)
 
u(s)ds 
⎞ 
⎠ , t0 ≤ t ≤ t f , 
wherexi overbar equals left parenthesis z overbar Subscript 0 Baseline comma ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis¯ξ =
 
¯z0, ¯θ(·), ¯u(·)
 
andxi equals left parenthesis z 0 comma theta left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesisξ =
 
z0, θ(·), u(·)
 
. Especially, for the derivative of 
tauτ with respect to z left parenthesis dot right parenthesisz(·) we ﬁnd 
left parenthesis upper D Subscript z Baseline tau left parenthesis xi overbar comma ModifyingAbove z With bar left parenthesis dot right parenthesis right parenthesis dot z left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis equals z left parenthesis t right parenthesis minus integral Subscript t 0 Superscript t Baseline upper D Subscript z Baseline ModifyingAbove g With tilde left parenthesis s comma ModifyingAbove theta With bar left parenthesis s right parenthesis comma ModifyingAbove z With bar left parenthesis s right parenthesis comma ModifyingAbove u With bar left parenthesis s right parenthesis right parenthesis z left parenthesis s right parenthesis d s comma t 0 less than or equals t less than or equals t Subscript f Baseline period
 
Dzτ
 
¯ξ, ¯z(·)
 
· z(·)
 
(t) = z(t) −
t 
t0
Dz ˜g
 
s, ¯θ(s), ¯z(s), ¯u(s)
 
z(s)ds, t0 ≤t ≤t f .
(3.2g) 
The related equation 
upper D Subscript z Baseline tau left parenthesis xi overbar comma ModifyingAbove z With bar left parenthesis dot right parenthesis right parenthesis dot z left parenthesis dot right parenthesis equals y left parenthesis dot right parenthesis comma y left parenthesis dot right parenthesis element of upper ZDzτ
 
¯ξ, ¯z(·)
 
· z(·) = y(·), y(·) ∈Z
(3.2h) 
is a linear vectorial Volterra integral equation. By our assumptions this equation has 
a unique solution z left parenthesis dot right parenthesis element of upper Zz(·) ∈Z. Note, that the corresponding result for scalar Volterra 
equations, see, e.g., [ 36], can be transferred to the present vectorial case. Therefore, 
upper D Subscript z Baseline tau left parenthesis xi overbar comma ModifyingAbove z With bar left parenthesis dot right parenthesis right parenthesisDzτ
 
¯ξ, ¯z(·)
 
is a linear, continuous one-to-one map from upper ZZ onto upper ZZ. 
Hence, its inverseleft parenthesis upper D Subscript z Baseline tau left parenthesis xi overbar comma ModifyingAbove z With bar left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript negative 1
 
Dzτ
 
¯ξ, ¯z(·)
  −1
exists. Using the implicit function theorem 
[ 8, 20], we now obtain the following result: 
Lemma 3.1 For givenxi overbar equals left parenthesis z overbar Subscript 0 Baseline comma ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis¯ξ =
 
¯z0, ¯θ(·), ¯u(·)
 
, letleft parenthesis xi overbar comma ModifyingAbove z With bar left parenthesis dot right parenthesis right parenthesis element of normal upper Xi times upper Z
 
¯ξ, ¯z(·)
 
∈ × Z be selected such 
that tau left parenthesis xi overbar comma ModifyingAbove z With bar left parenthesis dot right parenthesis right parenthesis equals 0τ
 
¯ξ, ¯z(·)
 
= 0, hence, ModifyingAbove z With bar left parenthesis dot right parenthesis element of upper Z¯z(·) ∈Z is supposed to be the solution of

3.1 Stochastic Control Systems
65
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals ModifyingAbove g With tilde left parenthesis t comma ModifyingAbove theta With bar left parenthesis t right parenthesis comma z left parenthesis t right parenthesis comma ModifyingAbove u With bar left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals ModifyingAbove z With bar Subscript 0 EndLayout˙z(t) = ˜g
 
t, ¯θ(t), z(t), ¯u(t)
 
,
t0 ≤t ≤t f ,
(3.3a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals ModifyingAbove g With tilde left parenthesis t comma ModifyingAbove theta With bar left parenthesis t right parenthesis comma z left parenthesis t right parenthesis comma ModifyingAbove u With bar left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals ModifyingAbove z With bar Subscript 0 EndLayoutz(t0) = ¯z0
(3.3b) 
in the integral sense (3.2b). Then there is an open neighborhood of xi overbar¯ξ, denoted by 
upper V Superscript 0 Baseline left parenthesis xi overbar right parenthesisV 0(¯ξ), such that for each open connected neighborhood upper V left parenthesis xi overbar right parenthesisV (¯ξ) of xi overbar¯ξ contained in 
upper V Superscript 0 Baseline left parenthesis xi overbar right parenthesisV 0(¯ξ) there exists a unique continuous mappingupper S colon upper V left parenthesis xi overbar right parenthesis right arrow upper ZS : V (¯ξ) →Z such that (a)upper S left parenthesis xi overbar right parenthesis equals ModifyingAbove z With bar left parenthesis dot right parenthesisS(¯ξ) =
¯z(·); (b)tau left parenthesis xi comma upper S left parenthesis xi right parenthesis right parenthesis equals 0τ
 
ξ, S(ξ)
 
= 0 for eachxi element of upper V left parenthesis xi overbar right parenthesisξ ∈V (¯ξ), i.e.,upper S left parenthesis xi right parenthesis equals upper S left parenthesis xi right parenthesis left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f BaselineS(ξ) = S(ξ)(t), t0 ≤t ≤t f , is the  
solution of 
z left parenthesis t right parenthesis equals z 0 plus integral Subscript t 0 Superscript t Baseline ModifyingAbove g With tilde left parenthesis s comma theta left parenthesis s right parenthesis comma z left parenthesis s right parenthesis comma u left parenthesis s right parenthesis right parenthesis d s comma t 0 less than or equals t less than or equals t Subscript f Baseline commaz(t) = z0 +
t 
t0
˜g
 
s, θ(s), z(s), u(s)
 
ds,
t0 ≤t ≤t f ,
(3.3c) 
wherexi equals left parenthesis z 0 comma theta left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesisξ =
 
z0, θ(·), u(·)
 
; (c)upper SS is continuously differentiable onupper V left parenthesis xi overbar right parenthesisV (¯ξ), and it holds 
upper D Subscript u Baseline upper S left parenthesis xi right parenthesis equals minus left parenthesis upper D Subscript z Baseline tau left parenthesis xi comma upper S left parenthesis xi right parenthesis right parenthesis right parenthesis Superscript negative 1 Baseline upper D Subscript u Baseline tau left parenthesis xi comma upper S left parenthesis xi right parenthesis right parenthesis comma xi element of upper V left parenthesis xi overbar right parenthesis periodDuS(ξ) = −
 
Dzτ
 
ξ, S(ξ)
  −1
Duτ
 
ξ, S(ξ)
 
,
ξ ∈V (¯ξ).
(3.3d) 
An immediate consequence is given next: 
Corollary 3.1 The directional derivativezeta left parenthesis dot right parenthesis equals zeta Subscript u comma h Baseline left parenthesis dot right parenthesis equals upper D Subscript u Baseline upper S left parenthesis xi right parenthesis h left parenthesis dot right parenthesis left parenthesis element of upper Z right parenthesis comma h left parenthesis dot right parenthesis element of upper Uζ(·) = ζu,h(·) = DuS(ξ)h(·)(∈Z), h(·) ∈
U, satisﬁes the integral equation 
StartLayout 1st Row 1st Column zeta left parenthesis t right parenthesis 2nd Column Blank 3rd Column minus integral Subscript t 0 Superscript t Baseline upper D Subscript z Baseline ModifyingAbove g With tilde left parenthesis s comma theta left parenthesis s right parenthesis comma upper S left parenthesis xi right parenthesis left parenthesis s right parenthesis comma u left parenthesis s right parenthesis right parenthesis zeta left parenthesis s right parenthesis d s 2nd Row 1st Column Blank 2nd Column Blank 3rd Column equals integral Subscript t 0 Superscript t Baseline upper D Subscript u Baseline ModifyingAbove g With tilde left parenthesis s comma theta left parenthesis s right parenthesis comma upper S left parenthesis xi right parenthesis left parenthesis s right parenthesis comma u left parenthesis s right parenthesis right parenthesis h left parenthesis s right parenthesis d s comma EndLayoutζ(t) −
t 
t0
Dz ˜g
 
s, θ(s), S(ξ)(s), u(s)
 
ζ(s)ds
=
t 
t0
Du ˜g
 
s, θ(s), S(ξ)(s), u(s)
 
h(s)ds,
(3.3e) 
where t 0 less than or equals t less than or equals t Subscript ft0 ≤t ≤t f and xi equals left parenthesis z 0 comma theta left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesisξ =
 
z0, θ(·), u(·)
 
. 
Remark 3.1 Taking the time derivative of equation (3.3e) shows that this integral 
equation is equivalent to the so-called perturbation equation, see, e.g., [ 18]. 
For an arbitrary h left parenthesis dot right parenthesis element of upper Uh(·) ∈U the mappings 
StartLayout 1st Row left parenthesis t comma xi right parenthesis right arrow upper S left parenthesis xi right parenthesis left parenthesis t right parenthesis comma left parenthesis t comma xi right parenthesis right arrow left parenthesis upper D Subscript u Baseline upper S left parenthesis xi right parenthesis h left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis comma left parenthesis t comma xi right parenthesis element of left bracket t 0 comma t Subscript f Baseline right bracket times upper V left parenthesis ModifyingAbove xi With quotation dash right parenthesis EndLayout(t, ξ) →S(ξ)(t), (t, ξ) →
 
DuS(ξ)h(·)
 
(t), (t, ξ) ∈[t0, t f ] × V (ξ) (3.3f) 
are continuous and therefore also measurable. 
The existence of a unique solution ModifyingAbove z With bar equals ModifyingAbove z With bar left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma¯z = ¯z(t), t0 ≤t ≤t f , of the reference dif-
ferential equation (3.3a), (3.3b) can be guaranteed as follows, where solution is 
interpreted in the integral sense, i.e.,ModifyingAbove z With bar equals ModifyingAbove z With bar left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma¯z = ¯z(t), t0 ≤t ≤t f , is absolutely continuous,

66
3
Optimal Control Under Stochastic Uncertainty
satisﬁes equation (3.3a) almost everywhere in the time intervalleft bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ] and the initial 
condition (3.3b), cf. [ 7, 40]. 
Lemma 3.2 Consider an arbitrary input vector xi overbar equals left parenthesis z overbar Subscript 0 Baseline comma ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis element of normal upper Xi¯ξ =
 
¯z0, ¯θ(·), ¯u(·)
 
∈ , and 
deﬁne, see (3.3a), (3.3b), the functionModifyingAbove g With tilde Subscript ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline equals ModifyingAbove g With tilde Subscript ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis t comma z right parenthesis colon equals ModifyingAbove g With tilde left parenthesis t comma ModifyingAbove theta With bar left parenthesis t right parenthesis comma z comma ModifyingAbove u With bar left parenthesis t right parenthesis right parenthesis ˜g ¯θ(·),¯u(·) = ˜g ¯θ(·),¯u(·)
 
t, z
 
:= ˜g
 
t, ¯θ(t), z, ¯u(t)
 
. 
Suppose that 
(i) z right arrow ModifyingAbove g With tilde Subscript ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis t comma z right parenthesisz →˜g ¯θ(·),¯u(·)
 
t, z
 
is continuous for each time t element of left bracket t 0 comma t Subscript f Baseline right brackett ∈[t0, t f ], 
(ii) t right arrow ModifyingAbove g With tilde Subscript ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis t comma z right parenthesist →˜g ¯θ(·),¯u(·)
 
t, z
 
is measurable for each vector zz, 
(iii) generalized Lipschitz condition: For each closed sphere upper K subset of double struck upper R Superscript nK ⊂Rn there exists 
a nonnegative, integrable function upper L Subscript upper S Baseline left parenthesis dot right parenthesisL S(·) on left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ] such that 
(iv) parallel to ModifyingAbove g With tilde Subscript ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis t comma 0 right parenthesis parallel to less than or equals upper L Subscript upper K Baseline left parenthesis t right parenthesis ˜g ¯θ(·),¯u(·)
 
t, 0
 
 ≤L K(t),
and
parallel to ModifyingAbove g With tilde Subscript ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis t comma z right parenthesis minus ModifyingAbove g With tilde Subscript ModifyingAbove theta With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis t comma w right parenthesis parallel to less than or equals upper L Subscript upper K Baseline left parenthesis t right parenthesis parallel to z minus w parallel to ˜g ¯θ(·),¯u(·)
 
t, z
 
−˜g ¯θ(·),¯u(·)
 
t, w
 
 ≤L K(t)
 z −w on left bracket t 0 comma t Subscript f Baseline right bracket times upper K[t0, t f ] × K. 
Then, the initial value problem (3.3a), (3.3b) has a unique solution ModifyingAbove z With bar equals ModifyingAbove z With bar left parenthesis t semicolon xi overbar right parenthesis¯z = ¯z(t; ¯ξ). 
Proof Proofs can be found in [ 7, 40].
 
We observe that the controlled stochastic processz equals z left parenthesis t comma omega right parenthesisz = z(t, ω) deﬁned by the plant 
differential equation (3.1a), (3.1b) may be a non Markovian stochastic process, see 
[ 3, 17]. Moreover, note that the random input function theta equals theta left parenthesis t comma omega right parenthesisθ = θ(t, ω) is not just an 
additive noise term, but may describe also a disturbance which is part of the nonlinear 
dynamics of the plant, random varying model parameters such as material, load or 
cost parameters, etc. 
3.1.1.2
Stochastic Differential Equations 
In some applications [ 3], instead of the system (3.1a), (3.1b) of ordinary differential 
equations with (time-varying) random parameters, a so-called stochastic differential 
equation [ 33] is taken into account: 
d z left parenthesis t comma omega right parenthesis equals ModifyingAbove g With tilde left parenthesis t comma z left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t plus ModifyingAbove h With tilde left parenthesis t comma z left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis d theta left parenthesis t comma omega right parenthesis perioddz(t, ω) = ˜g
 
t, z(t, ω), u(t)
 
dt + ˜h
 
t, z(t, ω), u(t)
 
dθ(t, ω).
(3.4a) 
Here, the “noise” termtheta equals theta left parenthesis t comma omega right parenthesisθ = θ(t, ω) is a certain stochastic process, as, e.g., the Brow-
nian motion, having continuous paths, and ModifyingAbove g With tilde equals ModifyingAbove g With tilde left parenthesis t comma z comma u right parenthesis comma ModifyingAbove h With tilde equals ModifyingAbove h With tilde left parenthesis t comma z comma u right parenthesis ˜g = ˜g(t, z, u), ˜h = ˜h(t, z, u) are given, 
sufﬁciently smooth vector/matrix functions. 
Corresponding to the integral equation (3.2a), (3.2b), the above stochastic differ-
ential equation is replaced by the stochastic integral equation 
z left parenthesis t comma omega right parenthesis equals z 0 left parenthesis omega right parenthesis plus integral Subscript t 0 Superscript t Baseline ModifyingAbove g With tilde left parenthesis s comma z left parenthesis s comma omega right parenthesis comma u left parenthesis s right parenthesis right parenthesis d s plus integral Subscript t 0 Superscript t Baseline ModifyingAbove h With tilde left parenthesis s comma z left parenthesis s comma omega right parenthesis comma u left parenthesis s right parenthesis right parenthesis d theta left parenthesis s comma omega right parenthesis periodz(t, ω) = z0(ω) +
t 
t0
˜g
 
s, z(s, ω), u(s)
 
ds +
t 
t0
˜h
 
s, z(s, ω), u(s)
 
dθ(s, ω).
(3.4b) 
The meaning of this equation depends essentially on the deﬁnition (interpretation) 
of the “stochastic integral”

3.1 Stochastic Control Systems
67
upper I left parenthesis xi left parenthesis dot comma dot right parenthesis comma z left parenthesis dot comma dot right parenthesis right parenthesis left parenthesis t right parenthesis colon equals integral Subscript t 0 Superscript t Baseline ModifyingAbove h With tilde left parenthesis s comma z left parenthesis s comma omega right parenthesis comma u left parenthesis s right parenthesis right parenthesis d theta left parenthesis s comma omega right parenthesis periodI
 
ξ(·, ·), z(·, ·)
 
(t) :=
t 
t0
˜h
 
s, z(s, ω), u(s)
 
dθ(s, ω).
(3.4c) 
Note, that in case of closed-loop and open-loop feedback controls, see the next 
Sect. 3.2, the control function u equals u left parenthesis s comma omega right parenthesisu = u(s, ω) is random. If 
ModifyingAbove h With tilde left parenthesis s comma z comma u right parenthesis equals ModifyingAbove h With tilde left parenthesis s comma u left parenthesis s right parenthesis right parenthesis˜h(s, z, u) = ˜h
 
s, u(s)
 
(3.5a) 
with a deterministic control u equals u left parenthesis t right parenthesisu = u(t) and a matrix function ModifyingAbove h With tilde equals ModifyingAbove h With tilde left parenthesis s comma u right parenthesis˜h = ˜h(s, u), such that 
s right arrow ModifyingAbove h With tilde left parenthesis s comma u left parenthesis s right parenthesis right parenthesiss →˜h
 
s, u(s)
 
is differentiable, by partial integration we get, cf. [ 33], 
StartLayout 1st Row 1st Column upper I left parenthesis xi comma z left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals upper I left parenthesis theta left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis equals ModifyingAbove h With tilde left parenthesis t comma u left parenthesis t right parenthesis right parenthesis theta left parenthesis t right parenthesis minus ModifyingAbove h With tilde left parenthesis t 0 comma u left parenthesis t 0 right parenthesis right parenthesis theta left parenthesis t 0 right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column minus integral Subscript t 0 Superscript t Baseline theta left parenthesis s right parenthesis StartFraction d Over d s EndFraction ModifyingAbove h With tilde left parenthesis s comma u left parenthesis s right parenthesis right parenthesis d s comma EndLayoutI
 
ξ, z(·)
 
(t) = I
 
θ(·), u(·)
 
(t) = ˜h
 
t, u(t)
 
θ(t) −˜h
 
t0, u(t0)
 
θ(t0)
−
t 
t0
θ(s) d
ds
˜h
 
s, u(s)
 
ds,
(3.5b) 
where theta equals theta left parenthesis s right parenthesisθ = θ(s) denotes a sample function of the stochastic process theta equals theta left parenthesis t comma omega right parenthesisθ = θ(t, ω). 
Hence, in this case the operator tau equals tau left parenthesis xi comma z left parenthesis dot right parenthesis right parenthesisτ = τ
 
ξ, z(·)
 
, cf.  (3.2d), is deﬁned by 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column tau left parenthesis xi comma z left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis colon equals z left parenthesis t right parenthesis minus left parenthesis z 0 plus integral Subscript t 0 Superscript t Baseline ModifyingAbove g With tilde left parenthesis s comma z left parenthesis s right parenthesis comma u left parenthesis s right parenthesis right parenthesis d s plus ModifyingAbove h With tilde left parenthesis t comma u left parenthesis t right parenthesis right parenthesis theta left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column minus ModifyingAbove h With tilde left parenthesis t 0 comma u left parenthesis t 0 right parenthesis right parenthesis theta left parenthesis t 0 right parenthesis minus integral Subscript t 0 Superscript t Baseline theta left parenthesis s right parenthesis StartFraction d Over d s EndFraction ModifyingAbove h With tilde left parenthesis s comma u left parenthesis s right parenthesis right parenthesis d s right parenthesis period EndLayout τ
 
ξ, z(·)
 
(t) := z(t) −
 
z0 +
t 
t0
˜g
 
s, z(s), u(s)
 
ds + ˜h
 
t, u(t)
 
θ(t)
−˜h
 
t0, u(t0)
 
θ(t0) −
t 
t0
θ(s) d
ds
˜h
 
s, u(s)
 
ds
 
.
(3.5c) 
Obviously, for the consideration of the existence and differentiability of solutions 
z left parenthesis dot right parenthesis equals z left parenthesis dot comma xi right parenthesisz(·) = z(·, ξ) of the operator equation tau left parenthesis xi comma z left parenthesis dot right parenthesis right parenthesis equals 0τ
 
ξ, z(·)
 
= 0, the same procedure as in 
Sect. 3.1.1 may be applied. 
3.1.2 
Objective Function 
The aim is to obtain optimal controls being robust, i.e., most insensitive with respect 
to stochastic variations of the model/environmental parameters and initial values of 
the process. Hence, incorporating stochastic parameter variations into the optimiza-
tion process, for a deterministic control functionu equals u left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baselineu = u(t), t0 ≤t ≤t f , the objective 
functionupper F equals upper F left parenthesis u left parenthesis dot right parenthesis right parenthesisF = F
 
u(·)
 
of the controlled processz equals z left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesisz = z(t, ω, u(·)) is deﬁned, cf. [ 26],

68
3
Optimal Control Under Stochastic Uncertainty
by the conditional expectation of the total costs arising along the whole control pro-
cess: 
upper F left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals upper E f left parenthesis omega comma upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis comma u left parenthesis dot right parenthesis right parenthesis periodF
 
u(·)
 
:= E f
 
ω, S
 
ω, u(·)
 
, u(·)
 
.
(3.6a) 
Here, upper E equals upper E left parenthesis dot vertical bar German upper A Subscript t 0 Baseline right parenthesisE = E(·|At0), denotes the conditional expectation given the information German upper A Subscript t 0At0
about the control process up to the considered starting time point t 0t0. Moreover, 
f equals f left parenthesis omega comma z left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis f = f
 
ω, z(·), u(·)
 
denote the stochastic total costs arising along the trajectory 
z equals z left parenthesis t comma omega right parenthesisz = z(t, ω) and at the terminal point z Subscript f Baseline equals z left parenthesis t Subscript f Baseline comma omega right parenthesisz f = z(t f , ω), cf.  [  3, 38]. Hence, 
f left parenthesis omega comma z left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis colon equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper L left parenthesis t comma omega comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t plus upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis comma f
 
ω, z(·), u(·)
 
:=
t f
 
t0
L
 
t, ω, z(t), u(t)
 
dt + G
 
t f , ω, z(t f )
 
,
(3.6b) 
z left parenthesis dot right parenthesis element of upper Z comma u left parenthesis dot right parenthesis element of upper Uz(·) ∈Z, u(·) ∈U. Here, 
StartLayout 1st Row StartLayout 1st Row 1st Column upper L colon left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega times double struck upper R Superscript m Baseline times double struck upper R Superscript n Baseline 2nd Column right arrow double struck upper R comma 2nd Row 1st Column upper G colon left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega times double struck upper R Superscript m Baseline 2nd Column right arrow double struck upper R EndLayout EndLayout L : [t0, t f ] ×  × Rm × Rn →R,
G : [t0, t f ] ×  × Rm
→R
are given measurable cost functions. We suppose thatupper L left parenthesis t comma omega comma dot comma dot right parenthesisL(t, ω, ·, ·) andupper G left parenthesis t comma omega comma dot right parenthesisG(t, ω, ·) are 
convex functions for eachleft parenthesis t comma omega right parenthesis element of left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega(t, ω) ∈[t0, t f ] ×  , having continuous partial derivatives 
nabla Subscript z Baseline upper L left parenthesis dot comma omega comma dot comma dot right parenthesis comma nabla Subscript u Baseline upper L left parenthesis dot comma omega comma dot comma dot right parenthesis comma nabla Subscript z Baseline upper G left parenthesis dot comma omega comma dot right parenthesis∇zL(·, ω, ·, ·), ∇uL(·, ω, ·, ·), ∇zG(·, ω, ·). Note that in this case 
left parenthesis z left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis right arrow integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper L left parenthesis t comma omega comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t plus upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis
 
z(·), u(·)
 
→
t f
 
t0
L
 
t, ω, z(t), u(t)
 
dt + G
 
t f , ω, z(t f )
 
(3.6c) 
is a convex function onupper Z times upper UZ × U for eachomega element of normal upper Omegaω ∈ . Moreover, assume that the expectation 
upper F left parenthesis u left parenthesis dot right parenthesis right parenthesisF
 
u(·)
 
exists and is ﬁnite for each admissible control u left parenthesis dot right parenthesis element of upper Du(·) ∈D. 
In the case of random inputs u equals u left parenthesis t comma omega right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of normal upper Omegau = u(t, ω), t0 ≤t ≤t f , ω ∈ , with deﬁnition 
(3.6b), the objective function upper F equals upper F left parenthesis u left parenthesis dot comma dot right parenthesis right parenthesisF = F
 
u(·, ·)
 
reads 
upper F left parenthesis u left parenthesis dot comma dot right parenthesis right parenthesis colon equals upper E f left parenthesis omega comma upper S left parenthesis omega comma u left parenthesis dot comma omega right parenthesis right parenthesis comma u left parenthesis dot comma omega right parenthesis right parenthesis periodF
 
u(·, ·)
 
:= E f
 
ω, S
 
ω, u(·, ω)
 
, u(·, ω)
 
.
(3.6d) 
Example 3.1 (Tracking problems) If a trajectoryz Subscript f Baseline equals z Subscript f Baseline left parenthesis t comma omega right parenthesisz f = z f (t, ω), e.g., the trajectory 
of a moving target, known up to a certain stochastic uncertainty, must be followed 
or reached during the control process, then the cost function upper LL along the trajectory 
can be deﬁned by 
upper L left parenthesis t comma omega comma z left parenthesis t right parenthesis comma u right parenthesis colon equals double vertical bar normal upper Gamma Subscript z Baseline left parenthesis z left parenthesis t right parenthesis minus z Subscript f Baseline left parenthesis t comma omega right parenthesis right parenthesis double vertical bar squared plus phi left parenthesis u right parenthesis periodL
 
t, ω, z(t), u
 
:=
    z
 
z(t) −z f (t, ω)
    
2
+ ϕ(u).
(3.6e) 
In (3.6e) normal upper Gamma Subscript z z is a weight matrix, and phi equals phi left parenthesis u right parenthesisϕ = ϕ(u) denotes the control costs, as, e.g.,

3.1 Stochastic Control Systems
69
phi left parenthesis u right parenthesis equals parallel to normal upper Gamma Subscript u Baseline u parallel to squaredϕ(u) =   uu 2
(3.6f) 
with a further weight matrix normal upper Gamma Subscript u u. 
If a random targetz Subscript f Baseline equals z Subscript f Baseline left parenthesis omega right parenthesisz f = z f (ω) has to be reached at the terminal time pointt Subscript ft f only, 
then the terminal cost function upper GG may be deﬁned, e.g., by 
upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis colon equals double vertical bar upper G Subscript f Baseline left parenthesis z left parenthesis t Subscript f Baseline right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis double vertical bar squaredG
 
t f , ω, z(t f )
 
:=
   G f
 
z(t f ) −z f (ω)
    
2
(3.6g) 
with a weight matrix upper G Subscript fG f . 
Example 3.2 (Active structural control, control of robots) In case of active structural 
control or for optimal regulator design of robots, cf. [ 24, 37], the total cost function 
f f is given by deﬁning the individual cost functions upper LL and upper GG as follows: 
StartLayout 1st Row 1st Column upper L left parenthesis t comma omega comma z comma u right parenthesis colon equals 2nd Column z Superscript upper T Baseline upper Q left parenthesis t comma omega right parenthesis z plus u Superscript upper T Baseline upper R left parenthesis t comma omega right parenthesis u 2nd Row 1st Column Blank 3rd Row 1st Column upper G left parenthesis t Subscript f Baseline comma omega comma z right parenthesis colon equals 2nd Column upper G left parenthesis omega comma z right parenthesis period EndLayoutL(t, ω, z, u) :=zT Q(t, ω)z + uT R(t, ω)u
(3.6h) 
StartLayout 1st Row 1st Column upper L left parenthesis t comma omega comma z comma u right parenthesis colon equals 2nd Column z Superscript upper T Baseline upper Q left parenthesis t comma omega right parenthesis z plus u Superscript upper T Baseline upper R left parenthesis t comma omega right parenthesis u 2nd Row 1st Column Blank 3rd Row 1st Column upper G left parenthesis t Subscript f Baseline comma omega comma z right parenthesis colon equals 2nd Column upper G left parenthesis omega comma z right parenthesis period EndLayoutG(t f , ω, z) :=G(ω, z).
(3.6i) 
Here, upper Q equals upper Q left parenthesis t comma omega right parenthesisQ = Q(t, ω) and upper R equals upper R left parenthesis t comma omega right parenthesisR = R(t, ω), resp., are certain positive (semi)deﬁnite 
m times m comma n times nm × m, n × n matrices which may depend also on left parenthesis t comma omega right parenthesis(t, ω). Moreover, the terminal 
cost function upper GG depends then on left parenthesis omega comma z right parenthesis(ω, z). For example, in case of endpoint control, 
the cost function upper GG is given by 
upper G left parenthesis omega comma z right parenthesis equals left parenthesis z minus z Subscript f Baseline right parenthesis Superscript upper T Baseline upper G Subscript f Baseline left parenthesis omega right parenthesis left parenthesis z minus z Subscript f Baseline right parenthesisG(ω, z) = (z −z f )T G f (ω)(z −z f )
(3.6j) 
with a certain desired, possibly random terminal point z Subscript f Baseline equals z Subscript f Baseline left parenthesis omega right parenthesisz f = z f (ω) and a positive 
(semi)deﬁnite, possibly random weight matrix upper G Subscript f Baseline equals upper G Subscript f Baseline left parenthesis omega right parenthesisG f = G f (ω). 
3.1.2.1
Optimal Control Under Stochastic Uncertainty 
For ﬁnding optimal controls being robust with respect to stochastic parameter vari-
ationsu Superscript star Baseline left parenthesis dot right parenthesis comma u Superscript star Baseline left parenthesis dot comma dot right parenthesisu (·), u (·, ·), resp., in this chapter we are presenting now several methods for 
approximation of the following minimum expected total cost problem: 
min upper F left parenthesis u left parenthesis dot right parenthesis right parenthesis s period t period u left parenthesis dot right parenthesis element of upper D comma min F
 
u(·)
 
s.t. u(·) ∈D,
(3.7) 
StartLayout 1st Row 1st Column min upper F left parenthesis u left parenthesis dot comma dot right parenthesis right parenthesis s period t period u left parenthesis dot comma omega right parenthesis element of upper D 2nd Column Blank 3rd Column a period s period left parenthesis a l m o s t s u r e right parenthesis comma 2nd Row 1st Column Blank 2nd Column Blank 3rd Column u left parenthesis t comma dot right parenthesis script upper A Subscript t Baseline minus m e a s u r a b l e comma left parenthesis ModifyingAbove 3.7 With tilde right parenthesis EndLayout
min F
 
u(·, ·)
 
s.t. u(·, ω) ∈D
a.s. (almost sure) ,
u(t, ·) At-measurable,
( 
3.7)
where German upper A Subscript t Baseline subset of German upper A comma t greater than or equals t 0At ⊂A, t ≥t0, denotes the sigmaσ-algebra of events upper A element of German upper AA ∈A until time tt.

70
3
Optimal Control Under Stochastic Uncertainty
Information set German upper A Subscript tAt at time tt: In many cases, as, e.g., for upper P upper D minusP D−and upper P upper I upper D minusP I D−con-
trollers, see Chap. 10, the information sigmaσ-algebra German upper A Subscript tAt is given by German upper A Subscript t Baseline equals German upper A left parenthesis y left parenthesis t comma dot right parenthesis right parenthesisAt = A(y(t, ·)), 
where y equals y left parenthesis t comma omega right parenthesisy = y(t, ω) denotes the m overbar minus ¯m−vector function of state-measurements or -
observations at time tt. Then, an German upper A Subscript t minusAt−measurable control u equals u left parenthesis t comma omega right parenthesisu = u(t, ω) has the repre-
sentation, cf. [ 5], 
u left parenthesis t comma omega right parenthesis equals eta left parenthesis t comma y left parenthesis t comma omega right parenthesis right parenthesisu(t, ω) = η(t, y(t, ω))
(3.8) 
with a measurable function eta left parenthesis t comma dot right parenthesis colon double struck upper R Superscript m overbar Baseline right arrow double struck upper R Superscript mη(t, ·) : R ¯m →Rm. 
Since parameter-insensitive optimal controls can be obtained by stochastic opti-
mization methods incorporating random parameter variations into the optimization 
procedure, see [ 26], the aim is to determine stochastic optimal controls: 
Deﬁnition 3.1 An optimal solution of the expected total cost minimization problem 
(3.7), (ModifyingAbove 3.7 With tilde 
3.7), resp., providing robust optimal controls, is called a stochastic optimal 
control. 
Note 3.1 For controlled processes working on a time range t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f with an 
intermediate starting time point t Subscript btb, the objective function upper F equals upper F left parenthesis u left parenthesis dot right parenthesis right parenthesisF = F(u(·)) is deﬁned 
also by (3.6a), but with the conditional expectation operator upper E equals upper E left parenthesis dot vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesisE = E(·|Atb), where 
German upper A Subscript t Sub Subscript bAtb denotes the information about the controlled process available up to time t Subscript btb. 
Problem (3.7) is of course equivalentleft parenthesis upper E equals upper E left parenthesis dot vertical bar script upper A Subscript t 0 Baseline right parenthesis right parenthesis
 
E = E(·|At0)
 
to the optimal control prob-
lem under stochastic uncertainty: 
min upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper L left parenthesis t comma omega comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t plus upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis vertical bar German upper A Subscript t 0 Baseline right parenthesis min E
⎛
⎝
t f
 
t0
L
 
t, ω, z(t), u(t)
 
dt + G
 
t f , ω, z(t f )
    At0
⎞
⎠
(3.9a) 
s.t. 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma a period s period 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis comma a period s period 4th Row 1st Column Blank 5th Row 1st Column u left parenthesis dot right parenthesis 2nd Column Blank 3rd Column element of upper D comma EndLayout˙z(t) = g
 
t, ω, z(t), u(t)
 
,
t0 ≤t ≤t f , a.s.
(3.9b) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma a period s period 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis comma a period s period 4th Row 1st Column Blank 5th Row 1st Column u left parenthesis dot right parenthesis 2nd Column Blank 3rd Column element of upper D comma EndLayoutz(t0, ω) = z0(ω), a.s.
(3.9c) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma a period s period 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis comma a period s period 4th Row 1st Column Blank 5th Row 1st Column u left parenthesis dot right parenthesis 2nd Column Blank 3rd Column element of upper D comma EndLayoutu(·) ∈D,
(3.9d) 
cf. [ 21, 22]. 
Remark 3.2 Similar representations can be obtained also for the second type of 
stochastic control problem (ModifyingAbove 3.7 With tilde 
3.7). 
Remark 3.3 State constraints. In addition to the plant differential equation (dynamic 
equation) (3.9b), (3.9c) and the control constraints (3.9d), we may still have some 
stochastic state constraints 
h Subscript upper I Baseline left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis right parenthesis less than or equals left parenthesis equals right parenthesis 0 a period s periodhI
 
t, ω, z(t, ω)
 
≤(=)0 a.s.
(3.9e)

3.2 Control Laws
71
as well as state constraints involving (conditional) expectations 
upper E h Subscript upper I upper I Baseline left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis right parenthesis equals upper E left parenthesis h Subscript upper I upper I Baseline left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis right parenthesis vertical bar German upper A Subscript t 0 Baseline right parenthesis less than or equals left parenthesis equals right parenthesis 0 periodEhI I
 
t, ω, z(t, ω)
 
= E
 
hI I
 
t, ω, z(t, ω)
    At0
 
≤(=)0.
(3.9f) 
Here,h Subscript upper I Baseline equals h Subscript upper I Baseline left parenthesis t comma omega comma z right parenthesis comma h Subscript upper I upper I Baseline equals h Subscript upper I upper I Baseline left parenthesis t comma omega comma z right parenthesishI = hI(t, ω, z), hI I = hI I(t, ω, z) are given vector functions ofleft parenthesis t comma omega comma z right parenthesis(t, ω, z). By  
means of (penalty) cost functions, the random condition (3.9e) can be incorporated 
into the objective function (3.9a). As explained in Sect. 3.8, the expectations arising 
in the mean value constraints (3.9f) and in the objective function (3.9a) can be 
computed approximatively by means of Taylor expansion with respect to the vector 
theta equals theta left parenthesis omega right parenthesis colon equals left parenthesis z 0 left parenthesis omega right parenthesis comma theta left parenthesis omega right parenthesisϑ = ϑ(ω) := (z0(ω), θ(ω) of random initial values and model parameters at the 
conditional meanModifyingAbove theta With quotation dash equals ModifyingAbove theta With quotation dash Superscript left parenthesis t 0 right parenthesis Baseline colon equals upper E left parenthesis theta left parenthesis omega right parenthesis vertical bar German upper A Subscript t 0 Baseline right parenthesisϑ = ϑ
(t0) := E
 
ϑ(ω)|At0
 
. This yields then ordinary deterministic 
constraints for the extended deterministic trajectory (nominal state and sensitivity) 
StartLayout 1st Row t right arrow left parenthesis z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis comma t greater than or equals t 0 period EndLayoutt →
 
z(t, ϑ), Dϑz(t, ϑ)
 
,
t ≥t0.
3.2 
Control Laws 
Control or guidance usually refers [ 3, 18, 20] to direct inﬂuence on a dynamic system 
to achieve the desired performance. In optimal control of dynamic systems mostly 
the following types of control laws or control policies are considered: 
(I) Open-Loop Control (OL) 
Here, the control function u equals u left parenthesis t right parenthesisu = u(t) is a deterministic function depending only 
on the (a priori) information script upper I Subscript t 0It0 about the system, the model parameters, resp., 
available at the starting time pointt 0t0. Hence, for the optimal selection of optimal 
(OL) controls 
u left parenthesis t right parenthesis equals u left parenthesis t semicolon t 0 comma script upper I Subscript t 0 Baseline right parenthesis comma t greater than or equals t 0 commau(t) = u
 
t; t0, It0
 
, t ≥t0,
(3.10a) 
we get optimal control problems of type (3.7). 
(II) Closed-Loop control (CL) or Feedback Control 
In this case the control function u equals u left parenthesis t right parenthesisu = u(t) is a stochastic function 
u equals u left parenthesis t comma omega right parenthesis equals u left parenthesis t comma script upper I Subscript t Baseline right parenthesis comma t greater than or equals t 0u = u(t, ω) = u(t, It),
t ≥t0
(3.10b) 
depending on timett and the total informationscript upper I Subscript tIt about the system available up to 
timett. Especiallyscript upper I Subscript tIt may contain information about the statez left parenthesis t right parenthesis equals z left parenthesis t comma omega right parenthesisz(t) = z(t, ω) up to 
time tt. Optimal (CL) or feedback controls are obtained by solving problems of 
type (ModifyingAbove 3.7 With tilde 
3.7). 
Remark 3.4 Information set German upper A Subscript tAt at time tt: Often the information script upper I Subscript tIt available up to 
timett is described by the information set orsigma minusσ−algebraGerman upper A Subscript t Baseline subset of script upper AAt ⊂A of eventsupper AA occurred

72
3
Optimal Control Under Stochastic Uncertainty
Fig. 3.1 Remaining time interval for intermediate time pointstt
up to time tt. In the important case German upper A Subscript t Baseline equals German upper A left parenthesis y left parenthesis t comma dot right parenthesis right parenthesisAt = A(y(t, ·)), where y equals y left parenthesis t comma omega right parenthesisy = y(t, ω) denotes the 
m overbar minus ¯m−vector function of state-measurements or -observations at time tt, then an German upper A Subscript t minusAt−
measurable control u equals u left parenthesis t comma omega right parenthesisu = u(t, ω), see problem (ModifyingAbove 3.7 With tilde 
3.7), has the representation, cf. [ 5], 
u left parenthesis t comma omega right parenthesis equals eta Subscript t Baseline left parenthesis y left parenthesis t comma omega right parenthesis right parenthesisu(t, ω) = ηt(y(t, ω))
(3.10c) 
with a measurable function eta Subscript t Baseline colon double struck upper R Superscript m overbar Baseline right arrow double struck upper R Superscript mηt : R ¯m →Rm. Important examples of this type are the 
upper P upper D minusP D−and upper P upper I upper D minusP I D−controllers, see Chap. 10. 
(III) Open-Loop Feedback (OLF) Control/Stochastic Open-Loop Feedback (SOLF) 
Control 
Due to their large complexity, in general, optimal feedback control laws can 
be determined approximatively only. A very efﬁcient approximation procedure 
for optimal feedback controls, being functions of the information script upper I Subscript tIt, is the  
approximation by means of optimal open-loop controls. In this combination 
of (OL) and (CL) control, at each intermediate time point t Subscript b Baseline colon equals ttb := t, t 0 less than or equals t less than or equals t Subscript ft0 ≤t ≤t f , 
given the information script upper I Subscript tIt up to time tt, ﬁrst the open-loop control function for 
the remaining time interval t less than or equals s less than or equals t Subscript ft ≤s ≤t f , see Fig. 3.1, is computed, hence, 
u Subscript left bracket t comma t Sub Subscript f Subscript right bracket Baseline left parenthesis s right parenthesis equals u left parenthesis s semicolon t comma script upper I Subscript t Baseline right parenthesis comma s greater than or equals t periodu[t,t f ](s) = u
 
s; t, It
 
,
s ≥t.
(3.10d) 
Then, an approximate feedback control policy, originally proposed by Dreyfus 
(1964), cf. [ 10], can be deﬁned as follows: 
Deﬁnition 3.2 The hybrid control law, deﬁned by 
phi left parenthesis t comma script upper I Subscript t Baseline right parenthesis colon equals u left parenthesis t semicolon t comma script upper I Subscript t Baseline right parenthesis comma t greater than or equals t 0ϕ(t, It) := u
 
t; t, It
 
, t ≥t0
(3.10e) 
is called open-loop feedback (OLF) control law. 
Thus, the OL control u Subscript left bracket t comma t Sub Subscript f Subscript right bracket Baseline left parenthesis s right parenthesis comma s greater than or equals tu[t,t f ](s), s ≥t, for the remaining time interval left bracket t comma t Subscript f Baseline right bracket[t, t f ] is 
used only at time s equals ts = t, see also [ 2, 9– 11, 15, 19, 39]. Optimal (OLF) controls 
are obtained therefore by solving again control problems of the type (3.7) at each 
intermediate starting time point t Subscript b Baseline colon equals ttb := t, t element of left bracket t 0 comma t Subscript f Baseline right brackett ∈[t0, t f ]. 
A major issue in optimal control is the robustness, cf.  [  12], i.e., the insensitivity of 
an optimal control with respect to parameter variations. In case of random parameter 
variations robust optimal controls can be obtained by means of stochastic optimiza-
tion methods, cf. [ 26], incorporating the probability distribution, i.e., the random

3.2 Control Laws
73
characteristics, of the random parameter variation into the optimization process, cf. 
Deﬁnition 3.1. 
Thus, constructing stochastic optimal open-loop feedback controls, hence, optimal 
open-loop feedback control laws being insensitive as far as possible with respect 
to random parameter variations, means that besides the optimality of the control 
policy also its insensitivity with respect to stochastic parameter variations should be 
guaranteed. Hence, in the following sections we also develop a stochastic version 
of the optimal open-loop feedback control method, cf. [ 25, 27– 29]. A short overview 
on this novel stochastic optimal open-loop feedback control concept is given below: 
At each intermediate time pointt Subscript b Baseline equals t element of left bracket t 0 comma t Subscript f Baseline right brackettb = t ∈[t0, t f ], based on the given process obser-
vation script upper I Subscript tIt, e.g., the observed state z Subscript t Baseline equals z left parenthesis t right parenthesiszt = z(t) at t Subscript b Baseline equals ttb = t, a stochastic optimal open-loop 
control u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis s right parenthesis equals u Superscript asterisk Baseline left parenthesis s semicolon t comma script upper I Subscript t Baseline right parenthesis comma t less than or equals s less than or equals t Subscript f Baselineu∗= u∗(s) = u∗(s; t, It), t ≤s ≤t f , is determined ﬁrst on the remaining 
time interval left bracket t comma t Subscript f Baseline right bracket[t, t f ], see Fig. 3.1, by stochastic optimization methods, cf. [ 26] .  
Having a stochastic optimal open-loop control u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis s semicolon t comma script upper I Subscript t Baseline right parenthesis comma t less than or equals s less than or equals t Subscript f Baselineu∗= u∗(s; t, It), t ≤s ≤t f , on  
each remaining time interval left bracket t comma t Subscript f Baseline right bracket[t, t f ] with an arbitrary starting time point tt, t 0 less than or equals t less than or equals t Subscript ft0 ≤t ≤
t f , a  stochastic optimal open-loop feedback (SOLF) control law is then deﬁned— 
corresponding to Deﬁnition 3.2—as follows: 
Deﬁnition 3.3 The hybrid control law, deﬁned by 
phi Superscript asterisk Baseline left parenthesis t comma script upper I Subscript t Baseline right parenthesis colon equals u Superscript asterisk Baseline left parenthesis t semicolon t comma script upper I Subscript t Baseline right parenthesis comma t greater than or equals t 0 periodϕ∗(t, It) := u∗ 
t; t, It
 
,
t ≥t0.
(3.10f) 
is called the stochastic optimal open-loop feedback (SOLF) control law. 
Thus, at time t Subscript b Baseline equals ttb = t just the “ﬁrst” control value u Superscript asterisk Baseline left parenthesis t right parenthesis equals u Superscript asterisk Baseline left parenthesis t semicolon t comma script upper I Subscript t Baseline right parenthesisu∗(t) = u∗(t; t, It) of u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis dot semicolon t comma script upper I Subscript t Baseline right parenthesisu∗=
u∗(·; t, It) is used only. 
For ﬁnding stochastic optimal open-loop controls, on the remaining time inter-
vals t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f with t 0 less than or equals t Subscript b Baseline less than or equals t Subscript ft0 ≤tb ≤t f , the stochastic Hamilton function of the control 
problem is introduced. Then, the class ofupper H minusupper HHupper H minusminimal controls, cf. [ 18], can be deter-
mined in case of stochastic uncertainty by solving a ﬁnite-dimensional stochastic 
optimization problem for minimizing the conditional expectation of the stochastic 
Hamiltonian subject to the remaining deterministic control constraints at each time 
pointtt. Having aupper HH-minimal control, the related two-point boundary value problem 
with random parameters will be formulated for the computation of a stochastic opti-
mal state- and costate-trajectory. In the important case of a linear-quadratic structure 
of the underlying control problem, the state and costate trajectory can be determined 
analytically to a large extent. Inserting then these trajectories into the H-minimal 
control, stochastic optimal open-loop controls are found on an arbitrary remaining 
time interval. According to Deﬁnition 3.2, these controls yield then immediately a 
stochastic optimal open-loop feedback control law. Moreover, the obtained controls 
can be realized in real-time, which is already shown for applications in optimal 
control of industrial robots, cf. [ 35].

74
3
Optimal Control Under Stochastic Uncertainty
(III.1) Nonlinear Model Predictive Control (NMPC)/Stochastic Nonlinear Model 
Predictive Control (SNMPC) 
Optimal open-loop feedback (OLF) control is the basic tool in Nonlinear 
Model Predictive Control (NMPC). Corresponding to the approximation tech-
nique for feedback controls described above, (NMPC) is a method to solve 
complicated feedback control problems by means of stepwise computations 
of open-loop controls. Hence, in (NMPC), see [ 1, 13, 14, 34] optimal open-
loop controls 
u equals u Subscript left bracket t comma t plus upper T Sub Subscript p Subscript right bracket Baseline left parenthesis s right parenthesis comma t less than or equals s less than or equals t plus upper T Subscript p Baseline commau = u[t,t+Tp](s),
t ≤s ≤t + Tp,
(3.10g) 
cf. (3.8), are determined ﬁrst on the time interval left bracket t comma t plus upper T Subscript p Baseline right bracket[t, t + Tp] with a certain 
so-called prediction time horizon upper T Subscript p Baseline greater than 0Tp > 0. In sampled-data MPC, cf. [ 13], 
optimal open-loop controlsu equals u Subscript left bracket t Sub Subscript i Subscript comma t Sub Subscript i Subscript plus upper T Sub Subscript p Subscript right bracketu = u[ti,ti+Tp], are determined at certain sampling 
instants t Subscript i Baseline comma i equals 0 comma 1 comma ellipsisti, i = 0, 1, . . ., using the information German upper A Subscript t Sub Subscript iAti about the control process 
and its neighborhood up to time t Subscript i Baseline comma i equals 0 comma 1 comma ellipsisti, i = 0, 1, . . ., see also [ 24]. The optimal 
open-loop control at stage “ii” is applied then, 
u equals u Subscript left bracket t Sub Subscript i Subscript comma t Sub Subscript i Subscript plus upper T Sub Subscript p Subscript right bracket Baseline left parenthesis t right parenthesis comma t Subscript i Baseline less than or equals t less than or equals t Subscript i plus 1 Baseline commau = u[ti,ti+Tp](t),
ti ≤t ≤ti+1,
(3.10h) 
until the next sampling instant t Subscript i plus 1ti+1. This method is closely related to the 
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC) 
procedure described in [ 23, 24]. 
Corresponding to the extension of (OLF) control to (SOLF) control, (NMPC) 
can be extended to Stochastic Nonlinear Model Predictive Control (SNMPC). For  
control policies of this type, robust (NMPC) with respect to stochastic variations 
of model parameters and initial values are determined in the following way: 
• Use the a posteriori distribution upper P left parenthesis d omega vertical bar German upper A Subscript t Baseline right parenthesisP(dω|At) of the basic random element omega element of normal upper Omegaω ∈ , 
given the process information German upper A Subscript tAt up to time tt, and 
• apply stochastic optimization methods to incorporate random parameter variations 
into the optimal (NMPC) control design. 
3.3 
Convex Approximation by Inner Linearization 
We observe ﬁrst that (3.7), (ModifyingAbove 3.7 With tilde 
3.7), resp., is in general a non-convex optimization 
problem, cf. [ 20]. Since for convex (deterministic) optimization problems there is 
a well-established theory, we approximate the original problems (3.7), (ModifyingAbove 3.7 With tilde 
3.7) by a  
sequence of suitable convex problems. In the following we describe ﬁrst a single 
step of this procedure. Due to the consideration in Sect. 3.2, we may concentrate 
here to problem (3.7) or  (3.9a)–(3.9d) for deterministic controls u left parenthesis dot right parenthesisu(·), as needed in 
the computation of optimal (OL), (OLF), (SOLF) as well as (NMP), (SNMP) controls 
being most important for practical problems.

3.3 Convex Approximation by Inner Linearization
75
Fig. 3.2 Convex approximation 
Let v left parenthesis dot right parenthesis element of upper Dv(·) ∈D be an arbitrary, but ﬁxed admissible initial or reference control and 
assume, see Lemma 3.1, for the input-output map z left parenthesis dot right parenthesis equals upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesisz(·) = S(ω, u(·)): 
Assumption 3.1 upper S left parenthesis omega comma dot right parenthesisS(ω, ·) is upper FF-differentiable at v left parenthesis dot right parenthesisv(·) for each omega element of normal upper Omegaω ∈ . 
Denote the upper FF-derivative of upper S left parenthesis omega comma dot right parenthesisS(ω, ·) at v left parenthesis dot right parenthesisv(·) by upper D upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesisDS
 
ω, v(·)
 
and replace the cost 
function upper F equals upper F left parenthesis u left parenthesis dot right parenthesis right parenthesisF = F
 
u(·)
 
with 
upper F Subscript v left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals upper E f left parenthesis omega comma upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis plus upper D upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis left parenthesis u left parenthesis dot right parenthesis minus v left parenthesis dot right parenthesis right parenthesis comma u left parenthesis dot right parenthesis right parenthesisFv(·)
 
u(·)
 
:= E f
 
ω, S
 
ω, v(·)
 
+ DS
 
ω, v(·)
  
u(·) −v(·)
 
, u(·)
 
(3.11) 
whereu left parenthesis dot right parenthesis element of upper Uu(·) ∈U, cf. Fig. 3.2. Assume thatupper F Subscript v left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis element of double struck upper RFv(·)
 
u(·)
 
∈R for all pairsleft parenthesis u left parenthesis dot right parenthesis comma v left parenthesis dot right parenthesis right parenthesis element of upper D times upper D
 
u(·), v(·)
 
∈
D × D. 
Then, replace the optimization problem (3.7), see [ 21], by 
StartLayout 1st Row min upper F Subscript v left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis normal s period normal t period u left parenthesis dot right parenthesis element of upper D period left parenthesis 3.7 right parenthesis Subscript v left parenthesis dot right parenthesis Baseline EndLayout
min Fv(·)
 
u(·)
 
s.t. u(·) ∈D.
(3.7)v(·)
Lemma 3.3 left parenthesis 3.7 right parenthesis Subscript v left parenthesis dot right parenthesis(3.7)v(·) is a convex optimization problem. 
Proof According to Sect. 3.1, function (3.6c) is convex. The assertion follows now 
from the linearity of the upper FF-differential of upper S left parenthesis omega comma dot right parenthesisS(ω, ·).
 
Remark 3.5 Note that the approximate upper F Subscript v left parenthesis dot right parenthesisFv(·) of upper FF is obtained from (3.6a), (3.6b) 
by means of linearization of the input-output map upper S equals upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesisS = S
 
ω, u(·)
 
with respect to 
the control u left parenthesis dot right parenthesisu(·) at v left parenthesis dot right parenthesisv(·), hence, by inner linearization of the control problem with 
respect to the control u left parenthesis dot right parenthesisu(·) at v left parenthesis dot right parenthesisv(·). 
Remark 3.6 (Linear input-output map) In case that upper S equals upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis colon equals upper S left parenthesis omega right parenthesis u left parenthesis dot right parenthesisS = S(ω, u(·)) := S(ω)u(·)
is linear with respect to the control u left parenthesis dot right parenthesisu(·), then upper D upper S left parenthesis omega comma v left parenthesis dot right parenthesis equals upper S left parenthesis omega right parenthesisDS(ω, v(·) = S(ω) and we have 
upper F Subscript v left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis equals upper F left parenthesis u left parenthesis dot right parenthesis right parenthesisFv(·)
 
u(·)
 
= F(u(·)). In this case the problems (3.7) andleft parenthesis 3.7 right parenthesis Subscript v left parenthesis dot right parenthesis(3.7)v(·) coincide for each 
input vector v left parenthesis dot right parenthesisv(·).

76
3
Optimal Control Under Stochastic Uncertainty
For a real-valued convex functionphi colon upper X right arrow double struck upper Rφ : X →R on a linear spaceupper XX the directional 
derivative phi prime Subscript plus Baseline left parenthesis x semicolon y right parenthesisφ 
+(x; y) exists, see, e.g., [ 16], at each point x element of upper Xx ∈X and in each direction 
y element of upper Xy ∈X. According to Lemma 3.3 the objective function upper F Subscript v left parenthesis dot right parenthesisFv(·) of the approximate 
problemleft parenthesis 3.7 right parenthesis Subscript v left parenthesis dot right parenthesis(3.7)v(·) is convex. Using the theorem of the monotone convergence, [  5], for 
all u left parenthesis dot right parenthesis comma v left parenthesis dot right parenthesis element of upper Du(·), v(·) ∈D and h left parenthesis dot right parenthesis element of upper Uh(·) ∈U the directional derivative of upper F Subscript v left parenthesis dot right parenthesisFv(·) is given, see [ 22], 
Satz 1.4, by 
StartLayout 1st Row 1st Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper E f prime Subscript plus Baseline left parenthesis omega comma upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis plus upper D upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis left parenthesis u left parenthesis dot right parenthesis minus v left parenthesis dot right parenthesis right parenthesis comma 2nd Row 1st Column Blank 2nd Column Blank 3rd Column u left parenthesis dot right parenthesis semicolon upper D upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis h left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesis period EndLayoutF 
v(·)+
 
u(·); h(·)
 
= E f  
+
 
ω, S
 
ω, v(·)
 
+ DS
 
ω, v(·)
  
u(·) −v(·)
 
,
u(·); DS
 
ω, v(·)
 
h(·), h(·)
 
.
(3.12a) 
In the special case u left parenthesis dot right parenthesis equals v left parenthesis dot right parenthesisu(·) = v(·) we get 
StartLayout 1st Row 1st Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Column equals upper E f prime Subscript plus Baseline left parenthesis omega comma upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis comma 2nd Row 1st Column Blank 2nd Column v left parenthesis dot right parenthesis semicolon upper D upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis h left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesis period EndLayoutF 
v(·)+
 
v(·); h(·)
 
= E f  
+
 
ω, S
 
ω, v(·)
 
,
(3.12b) 
v(·); DS
 
ω, v(·)
 
h(·), h(·)
 
. 
A solutionModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D¯u(·) ∈D of the convex problemleft parenthesis 3.7 right parenthesis Subscript v left parenthesis dot right parenthesis(3.7)v(·) is then characterized cf. [ 30], 
by 
upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis semicolon u left parenthesis dot right parenthesis minus ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis greater than or equals 0 f o r a l l u left parenthesis dot right parenthesis element of upper D periodF 
v(·)+
 
¯u(·); u(·) −¯u(·)
 
≥0 for all u(·) ∈D.
(3.13) 
Deﬁnition 3.4 For each v left parenthesis dot right parenthesis element of upper Dv(·) ∈D, let  upper M left parenthesis v left parenthesis dot right parenthesis right parenthesisM
 
v(·)
 
be the set of solutions of problem 
left parenthesis 2.7 right parenthesis Subscript v left parenthesis dot right parenthesis(2.7)v(·), i.e., 
upper M left parenthesis v left parenthesis dot right parenthesis right parenthesis colon equals left brace u Superscript 0 Baseline left parenthesis dot right parenthesis element of upper D colon upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u Superscript 0 Baseline left parenthesis dot right parenthesis semicolon u left parenthesis dot right parenthesis minus u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis greater than or equals 0 comma u left parenthesis dot right parenthesis element of upper D right brace periodM
 
v(·)
 
:=
 
u0(·) ∈D : F 
v(·)+
 
u0(·); u(·) −u0(·)
 
≥0, u(·) ∈D
 
.
Note 3.2 If the input-output operator upper S equals upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis colon equals upper S left parenthesis omega right parenthesis u left parenthesis dot right parenthesisS = S(ω, u(·)) := S(ω)u(·) is linear, then 
upper M left parenthesis v left parenthesis dot right parenthesis right parenthesis equals upper MM
 
v(·)
 
= M for each inputv left parenthesis dot right parenthesisv(·), whereupper MM denotes the set of solutions of problem 
(3.7). 
In the following we suppose that optimal solutions ofleft parenthesis 2.7 right parenthesis Subscript v left parenthesis dot right parenthesis(2.7)v(·) exist for eachv left parenthesis dot right parenthesisv(·). 
Assumption 3.2 upper M left parenthesis v left parenthesis dot right parenthesis right parenthesis not equals normal empty setM
 
v(·)
 
 = ∅for each v left parenthesis dot right parenthesis element of upper Dv(·) ∈D. 
A ﬁrst relation between our original problem (3.7) and the family of its approxi-
mates left parenthesis 3.7 right parenthesis Subscript v left parenthesis dot right parenthesis Baseline comma v left parenthesis dot right parenthesis element of upper D(3.7)v(·), v(·) ∈D, is shown in the following: 
Theorem 3.1 Suppose that the directional derivative upper F prime Subscript plus Baseline equals upper F prime Subscript plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesisF 
+ = F 
+
 
v(·); h(·)
 
exists 
and 
upper F prime Subscript plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis equals upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesisF 
+
 
v(·); h(·)
 
= F 
v(·)+
 
v(·); h(·)
 
(3.14) 
for each v left parenthesis dot right parenthesis element of upper Dv(·) ∈D and h left parenthesis dot right parenthesis element of upper D minus upper Dh(·) ∈D −D. Then:

3.3 Convex Approximation by Inner Linearization
77
(I) If ModifyingAbove u With bar left parenthesis dot right parenthesis¯u(·) is an optimal control, then ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis¯u(·) ∈M
 
¯u(·)
 
, i.e., ModifyingAbove u With bar left parenthesis dot right parenthesis¯u(·) is a solution of 
left parenthesis 3.7 right parenthesis Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis(3.7)¯u(·). 
(II) If (3.7) is convex, thenModifyingAbove u With bar left parenthesis dot right parenthesis¯u(·) is an optimal control if and only ifModifyingAbove u With bar left parenthesis dot right parenthesis element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis¯u(·) ∈M
 
¯u(·)
 
. 
Proof Because of the convexity of the approximate control problem left parenthesis 3.7 right parenthesis Subscript v left parenthesis dot right parenthesis(3.7)v(·), the  
conditionv left parenthesis dot right parenthesis element of upper M left parenthesis v left parenthesis dot right parenthesis right parenthesisv(·) ∈M
 
v(·)
 
holds, cf. (3.13), if and only ifupper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon u left parenthesis dot right parenthesis minus v left parenthesis dot right parenthesis right parenthesis greater than or equals 0 normal f normal o normal r normal a normal l normal l u left parenthesis dot right parenthesis element of upper D periodF 
v(·)+
 
v(·); u(·) −v(·)
 
≥
0 for all u(·) ∈D. Because of (3.14), this is equivalent withupper F prime Subscript plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon u left parenthesis dot right parenthesis minus v left parenthesis dot right parenthesis right parenthesis greater than or equals 0 normal f normal o normal r normal a normal l normal l u left parenthesis dot right parenthesis element of upper DF 
+
 
v(·); u(·) −v(·)
 
≥
0 for all u(·) ∈D. However, since the admissible control domain upper DD is convex, for 
an optimal solution v left parenthesis dot right parenthesis colon equals ModifyingAbove u With bar left parenthesis dot right parenthesisv(·) := ¯u(·) of (3.7) this condition is necessary, and necessary 
as also sufﬁcient in case that (3.7) is convex.
 
Assuming that f equals f left parenthesis omega comma dot comma dot right parenthesis f = f (ω, ·, ·) is F-differentiable for each omegaω, by means of (3.12b) 
and the chain rule we have 
StartLayout 1st Row 1st Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper E f prime Subscript plus Baseline left parenthesis omega comma upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis comma v left parenthesis dot right parenthesis semicolon upper D upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis h left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column equals upper E limit Underscript epsilon down arrow 0 Endscripts StartFraction 1 Over epsilon EndFraction left parenthesis f left parenthesis omega comma upper S left parenthesis omega comma v left parenthesis dot right parenthesis plus epsilon h left parenthesis dot right parenthesis right parenthesis comma v left parenthesis dot right parenthesis plus epsilon h left parenthesis dot right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column Blank 3rd Column minus f left parenthesis omega comma upper S left parenthesis omega comma v left parenthesis dot right parenthesis right parenthesis comma v left parenthesis dot right parenthesis right parenthesis right parenthesis period EndLayoutF 
v(·)+
 
v(·); h(·)
 
= E f  
+
 
ω, S
 
ω, v(·)
 
, v(·); DS
 
ω, v(·)
 
h(·), h(·)
 
= E lim
ε↓0
1
ε
 
f
 
ω, S
 
ω, v(·) + εh(·)
 
, v(·) + εh(·)
 
−f
 
ω, S
 
ω, v(·)
 
, v(·)
  
.
(3.15) 
Note 3.3 Because of the properties of the operatorupper S equals upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesisS = S(ω, u(·)), the above equa-
tions holds also for arbitrary convex functions f f such that the expectations under 
consideration exist, see [ 22]. 
Due to the deﬁnition (3.6a) of the objective function upper F equals upper F left parenthesis u left parenthesis dot right parenthesis right parenthesisF = F(u(·)) for condition 
(3.14) the following criterion holds. 
Lemma 3.4 
(a) Condition (3.14) in Theorem 3.1 holds if and only if the expectation operator 
“upper EE” and the limit process “limit Underscript epsilon down arrow 0 Endscriptslim
ε↓0” in (3.15) may be interchanged. 
(b) This interchangeability holds, e.g., ifsup left brace double vertical bar upper D upper S left parenthesis omega comma v left parenthesis dot right parenthesis plus epsilon h left parenthesis dot right parenthesis right parenthesis double vertical bar colon 0 less than or equals epsilon less than or equals 1 right bracesup
   DS
 
ω, v(·) + εh(·)
   : 0 ≤ε ≤1
 
is bounded with probability one, and the convex function f left parenthesis omega comma dot comma dot right parenthesis f (ω, ·, ·) satisﬁes a 
Lipschitz condition 
StartAbsoluteValue f left parenthesis omega comma z left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis minus f left parenthesis omega comma ModifyingAbove z With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis EndAbsoluteValue less than or equals gamma left parenthesis omega right parenthesis double vertical bar left parenthesis z left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis minus left parenthesis ModifyingAbove z With bar left parenthesis dot right parenthesis comma ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis double vertical bar Subscript upper Z times upper U
   f
 
ω, z(·), u(·)
 
−f
 
ω, ¯z(·), ¯u(·)
    ≤γ (ω)
   
 
z(·), u(·)
 
−
 
¯z(·), ¯u(·)
    Z×U
on a setupper Q subset of upper Z times upper UQ ⊂Z × U containing all vectorsleft parenthesis upper S left parenthesis omega comma v left parenthesis dot right parenthesis plus epsilon h left parenthesis dot right parenthesis right parenthesis comma v left parenthesis dot right parenthesis plus epsilon h left parenthesis dot right parenthesis right parenthesis comma 0 less than or equals epsilon less than or equals 1
 
S
 
ω, v(·) + εh(·)
 
, v(·) + εh(·)
 
,
0 ≤ε ≤1, where upper E gamma left parenthesis omega right parenthesis less than plus normal infinityEγ (ω) < +∞, and double vertical bar dot double vertical bar Subscript upper Z times upper U · Z×U denotes the norm on upper Z times upper UZ × U. 
Proof The ﬁrst assertion (a) follows immediately from (3.15) and the deﬁnition of 
the objective function upper FF. Assertion (b) can be obtained by means of the general-
ized mean value theorem for vector functions and Lebesgue’s bounded convergence 
theorem.
 

78
3
Optimal Control Under Stochastic Uncertainty
Remark 3.7 Further conditions are given in [ 22]. 
A second relation between our original problem (3.7) and the family of its approx-
imates left parenthesis 3.7 right parenthesis Subscript v left parenthesis dot right parenthesis Baseline comma v left parenthesis dot right parenthesis element of upper D(3.7)v(·), v(·) ∈D, is shown next. 
Lemma 3.5 
(a) If ModifyingAbove u With bar left parenthesis dot right parenthesis not an element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis¯u(·) /∈M
 
¯u(·)
 
for a control ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D¯u(·) ∈D, then 
StartLayout 1st Row upper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis less than upper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis equals upper F left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis f o r e a c h u left parenthesis dot right parenthesis element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis EndLayoutF¯u(·)
 
u(·)
 
< F¯u(·)
 
¯u(·)
 
= F
 
¯u(·)
 
for each u(·) ∈M
 
¯u(·)
 
(b) Let the controls u left parenthesis dot right parenthesis comma v left parenthesis dot right parenthesis element of upper Du(·), v(·) ∈D be related such that 
StartLayout 1st Row upper F Subscript u left parenthesis dot right parenthesis Baseline left parenthesis v left parenthesis dot right parenthesis right parenthesis less than upper F Subscript u left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis period EndLayoutFu(·)
 
v(·)
 
< Fu(·)
 
u(·)
 
.
If (3.14) holds for the pair left parenthesis u left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesis comma h left parenthesis dot right parenthesis equals v left parenthesis dot right parenthesis minus u left parenthesis dot right parenthesis
 
u(·), h(·)
 
, h(·) = v(·) −u(·), then h left parenthesis dot right parenthesish(·) is an 
admissible direction of decrease forupper FF atu left parenthesis dot right parenthesisu(·), i.e., we haveupper F left parenthesis u left parenthesis dot right parenthesis plus epsilon h left parenthesis dot right parenthesis right parenthesis less than upper F left parenthesis u left parenthesis dot right parenthesis right parenthesisF
 
u(·) + εh(·)
 
<
F
 
u(·)
 
and u left parenthesis dot right parenthesis plus epsilon h left parenthesis dot right parenthesis element of upper Du(·) + εh(·) ∈D on a suitable interval 0 less than epsilon less than epsilon overbar0 < ε < ¯ε. 
Proof According to Deﬁnition 3.4, for u left parenthesis dot right parenthesis element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesisu(·) ∈M
 
¯u(·)
 
we have upper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis less than or equals upper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis v left parenthesis dot right parenthesis right parenthesisF¯u(·)(u(·)) ≤F¯u(·)
(v(·))for allv left parenthesis dot right parenthesis element of upper Dv(·) ∈D and therefore alsoupper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis less than or equals upper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesisF¯u(·)(u(·)) ≤F¯u(·)(¯u(·)). a) In caseupper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis equals upper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesisF¯u(·)(u(·))
= F¯u(·)(¯u(·))we getupper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis less than or equals upper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis v left parenthesis dot right parenthesis right parenthesisF¯u(·)(¯u(·)) ≤F¯u(·)(v(·))for allv left parenthesis dot right parenthesis element of upper Dv(·) ∈D, hence,ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis¯u(·) ∈M
 
¯u(·)
 
. 
Since this is in contradiction to the assumption, it follows upper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis less than upper F Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis Baseline left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesisF¯u(·)(u(·)) < F¯u(·)(¯u(·)). 
b) If controls u left parenthesis dot right parenthesis comma v left parenthesis dot right parenthesis element of upper Du(·), v(·) ∈D are related upper F Subscript u left parenthesis dot right parenthesis Baseline left parenthesis v left parenthesis dot right parenthesis right parenthesis less than upper F Subscript u left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesisFu(·)
 
v(·)
 
< Fu(·)
 
u(·)
 
, then due to the 
convexity of upper F Subscript u left parenthesis dot right parenthesisFu(·) we have upper F prime Subscript u left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon v left parenthesis dot right parenthesis minus u left parenthesis dot right parenthesis right parenthesis less than or equals upper F Subscript u left parenthesis dot Baseline left parenthesis v left parenthesis dot right parenthesis right parenthesis minus upper F Subscript u left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis less than 0F 
u(·)+
 
u(·); v(·) −u(·)
 
≤Fu(·(v(·)) −Fu(·)(u(·)) < 0. 
With (3.14) we then getupper F prime Subscript plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon v left parenthesis dot right parenthesis minus u left parenthesis dot right parenthesis right parenthesis equals upper F prime Subscript u left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon v left parenthesis dot right parenthesis minus u left parenthesis dot right parenthesis right parenthesis less than 0F 
+
 
u(·); v(·) −u(·)
 
= F 
u(·)+
 
u(·); v(·) −u(·)
 
< 0. This  
yields now that h left parenthesis dot right parenthesis colon equals v left parenthesis dot right parenthesis minus u left parenthesis dot right parenthesish(·) := v(·) −u(·) is a feasible descent direction for upper FF at u left parenthesis dot right parenthesisu(·).
 
IfModifyingAbove u With bar left parenthesis dot right parenthesis element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis¯u(·) ∈M
 
¯u(·)
 
, then the convex approximateupper F Subscript u overbarF¯u ofupper FF atu overbar¯u cannot be decreased 
further on D. Thus, the above results suggest the following deﬁnition: 
Deﬁnition 3.5 A control ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D¯u(·) ∈D such that ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis¯u(·) ∈M
 
¯u(·)
 
is called a stationary 
control of the optimal control problem (3.7). 
Under the rather weak assumptions in Theorem 3.1 an optimal control is also 
stationary, and in the case of a convex problem (3.7) the two concepts coincide. 
Hence, stationary controls are candidates for optimal controls. As an appropriate 
substitute/approximate for an optimal control we may determine therefore stationary 
controls. For this purpose algorithms of the following conditional gradient-type may 
be applied:

3.3 Convex Approximation by Inner Linearization
79
Algorithm 3.1 (I) Choose u Superscript 1 Baseline element of upper Du1 ∈D, put j equals 1 j = 1
(II) Ifu Superscript j Baseline left parenthesis dot right parenthesis element of upper M left parenthesis u Superscript j Baseline left parenthesis dot right parenthesis right parenthesisu j(·) ∈M
 
u j(·)
 
, thenu Superscript j Baseline left parenthesis dot right parenthesisu j(·) is stationary and the algorithm stops; otherwise 
ﬁnd a control v Superscript j Baseline left parenthesis dot right parenthesis element of upper M left parenthesis u Superscript j Baseline left parenthesis dot right parenthesis right parenthesisv j(·) ∈M
 
u j(·)
 
(III) Set u Superscript j plus 1 Baseline left parenthesis dot right parenthesis equals v Superscript j Baseline left parenthesis dot right parenthesisu j+1(·) = v j(·) and go to II), putting j right arrow j plus 1 j →j + 1. 
Algorithm 3.2 (I) Choose u Superscript 1 Baseline left parenthesis dot right parenthesis element of upper Du1(·) ∈D, put j equals 1 j = 1
(II) Ifu Superscript j Baseline left parenthesis dot right parenthesis element of upper M left parenthesis u Superscript j Baseline left parenthesis dot right parenthesis right parenthesisu j(·) ∈M
 
u j(·)
 
, thenu Superscript j Baseline left parenthesis dot right parenthesisu j(·) is stationary and the algorithm stops; otherwise 
ﬁnd a v Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis element of upper M left parenthesis u Superscript j Baseline left parenthesis dot right parenthesis right parenthesisv( j)(·) ∈M
 
u j(·)
 
, deﬁne h Superscript j Baseline left parenthesis dot right parenthesis colon equals v Superscript j Baseline left parenthesis dot right parenthesis minus u Superscript j Baseline left parenthesis dot right parenthesish j(·) := v j(·) −u j(·)
(III) CalculateModifyingAbove u With bar left parenthesis dot right parenthesis element of m left parenthesis u Superscript j Baseline left parenthesis dot right parenthesis comma h Superscript j Baseline left parenthesis dot right parenthesis right parenthesis¯u(·) ∈m
 
u j(·), h j(·)
 
, setu Superscript j plus 1 Baseline left parenthesis dot right parenthesis colon equals ModifyingAbove u With bar left parenthesis dot right parenthesisu j+1(·) := ¯u(·) and go to II), puttingj right arrow j plus 1 j →
j + 1. 
Here, based on line search, m left parenthesis u left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesism
 
u(·), h(·)
 
is deﬁned by 
StartLayout 1st Row 1st Column m left parenthesis u left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis right parenthesis 2nd Column equals left brace u left parenthesis dot right parenthesis plus epsilon Superscript asterisk Baseline h left parenthesis dot right parenthesis colon upper F left parenthesis u left parenthesis dot right parenthesis plus epsilon Superscript asterisk Baseline h left parenthesis dot right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals min Underscript 0 less than or equals epsilon less than or equals 1 Endscripts upper F left parenthesis u left parenthesis dot right parenthesis plus epsilon h left parenthesis dot right parenthesis right parenthesis f o r epsilon Superscript asterisk Baseline element of left bracket 0 comma 1 right bracket right brace comma u left parenthesis dot right parenthesis comma h left parenthesis dot right parenthesis element of upper U period EndLayoutm
 
u(·), h(·)
 
=
 
u(·) + ε∗h(·) : F
 
u(·) + ε∗h(·)
 
= min
0≤ε≤1 F
 
u(·) + εh(·)
 
for ε∗∈[0, 1]
 
, u(·), h(·) ∈U.
Concerning Algorithm 3.1 we have the following result. 
Theorem 3.2 Let the set valued mappingu left parenthesis dot right parenthesis right arrow upper M left parenthesis u left parenthesis dot right parenthesis right parenthesisu(·) →M
 
u(·)
 
be closed at eachModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D left parenthesis¯u(·) ∈
D
 
,i.e., the relations u Superscript j Baseline left parenthesis dot right parenthesis right arrow ModifyingAbove u With bar left parenthesis dot right parenthesis comma v Superscript j Baseline left parenthesis dot right parenthesis element of upper M left parenthesis u Superscript j Baseline left parenthesis dot right parenthesis right parenthesis comma j equals 1 comma 2 ellipsisu j(·) →¯u(·), v j(·) ∈M
 
u j(·)
 
, j = 1, 2 . . ., and v Superscript j Baseline left parenthesis dot right parenthesis right arrow ModifyingAbove v With bar left parenthesis dot right parenthesisv j(·) →
¯v(·) imply that also ModifyingAbove v With bar left parenthesis dot right parenthesis element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis right parenthesis¯v(·) ∈M
 
¯u(·)
  
. 
If a sequence u Superscript 1 Baseline left parenthesis dot right parenthesis comma u squared left parenthesis dot right parenthesis comma ellipsisu1(·), u2(·), . . . of controls generated by Algorithm 3.1 converges to 
an element ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D¯u(·) ∈D, then ModifyingAbove u With bar left parenthesis dot right parenthesis¯u(·) is a stationary control. 
A sufﬁcient condition for the closedness of the algorithmic mapu left parenthesis dot right parenthesis right arrow upper M left parenthesis u left parenthesis dot right parenthesis right parenthesisu(·) →M
 
u(·)
 
is given next: 
Lemma 3.6 Let upper DD be a closed set of admissible controls, and let 
StartLayout 1st Row left parenthesis u left parenthesis dot right parenthesis comma v left parenthesis dot right parenthesis right parenthesis right arrow upper F prime Subscript u left parenthesis dot right parenthesis plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon w left parenthesis dot right parenthesis minus v left parenthesis dot right parenthesis right parenthesis EndLayout
 
u(·), v(·)
 
→F 
u(·)+
 
v(·); w(·) −v(·)
 
be continuous onupper D times upper DD × D for eachw left parenthesis dot right parenthesis element of upper Dw(·) ∈D. Thenu left parenthesis dot right parenthesis right arrow upper M left parenthesis u left parenthesis dot right parenthesis right parenthesisu(·) →M
 
u(·)
 
is closed at each 
element of upper DD. 
While the convergence assumption for a sequence u Superscript 1 Baseline left parenthesis dot right parenthesis comma u squared left parenthesis dot right parenthesis comma ellipsisu1(·), u2(·), . . . generated by 
Algorithm 3.1 is rather strong, only the existence of accumulation points ofu Superscript j Baseline left parenthesis dot right parenthesis comma j equals 1 comma 2 comma ellipsisu j(·), j =
1, 2, . . ., has to be required in Algorithm 3.2.

80
3
Optimal Control Under Stochastic Uncertainty
3.4 
Computation of Directional Derivatives 
Suppose here again that upper U colon equals upper L Subscript normal infinity Superscript n Baseline left parenthesis left bracket t 0 comma t Subscript f Baseline right bracket comma script upper B Superscript 1 Baseline comma lamda Superscript 1 Baseline right parenthesisU := Ln
∞([t0, t f ], B1, λ1) is the Banach space of all essen-
tially bounded measurable functions u left parenthesis dot right parenthesis colon left bracket t 0 comma t Subscript f Baseline right bracket right arrow double struck upper R Superscript nu(·) : [t0, t f ] →Rn, normed by the essential 
supremum norm. According to Deﬁnitions 3.4, 3.5 of a stationary control and 
characterization (3.13) of an optimal solution of (3.7)Subscript v left parenthesis dot right parenthesisv(·), we ﬁrst have to deter-
mined the directional derivative upper F prime Subscript v left parenthesis dot right parenthesis plusF 
v(·)+. Based on the justiﬁcation in Sect. 3.1, we  
assume again that the solution z left parenthesis t comma omega right parenthesis equals upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesisz(t, ω) = S
 
ω, u(·)
 
(t) of (3.2b) is measurable in 
left parenthesis t comma omega right parenthesis element of left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega(t, ω) ∈[t0, t f ] ×  for eachu left parenthesis dot right parenthesis element of upper Du(·) ∈D, andu left parenthesis dot right parenthesis right arrow upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesisu(·) →S
 
ω, u(·)
 
is continuously dif-
ferentiable on upper DD for each omega element of normal upper Omegaω ∈ . Furthermore, we suppose that the upper FF-differential 
zeta left parenthesis t right parenthesis equals zeta left parenthesis t comma omega right parenthesis equals left parenthesis upper D Subscript u Baseline upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis h left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis comma h left parenthesis dot right parenthesis element of upper Uζ(t) = ζ(t, ω) =
 
DuS
 
ω, u(·)
 
h(·)
 
(t), h(·) ∈U, is measurable and essentially 
bounded inleft parenthesis t comma omega right parenthesis(t, ω), and is given according to (3.3a)–(3.3f) by the linear integral equa-
tion 
StartLayout 1st Row 1st Column zeta left parenthesis t right parenthesis minus integral Subscript t 0 Superscript t Baseline upper A left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis zeta left parenthesis s right parenthesis d s equals integral Subscript t 0 Superscript t Baseline 2nd Column Blank 3rd Column upper B left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis h left parenthesis s right parenthesis d s comma 2nd Row 1st Column Blank 2nd Column Blank 3rd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma EndLayoutζ(t) −
t 
t0
A
 
t, ω, u(·)
 
ζ(s)ds =
t 
t0
B
 
t, ω, u(·)
 
h(s)ds,
(3.16a) 
t0 ≤ t ≤ t f , 
with the Jacobians 
StartLayout 1st Row 1st Column upper A left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals upper D Subscript z Baseline g left parenthesis t comma omega comma z Subscript u Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper B left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals upper D Subscript u Baseline g left parenthesis t comma omega comma z Subscript u Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis EndLayoutA
 
t, ω, u(·)
 
:= Dzg
 
t, ω, zu(t, ω), u(t)
 
(3.16b) 
StartLayout 1st Row 1st Column upper A left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals upper D Subscript z Baseline g left parenthesis t comma omega comma z Subscript u Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper B left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals upper D Subscript u Baseline g left parenthesis t comma omega comma z Subscript u Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis EndLayoutB
 
t, ω, u(·)
 
:= Dug
 
t, ω, zu(t, ω), u(t)
 
(3.16c) 
and z Subscript u Baseline equals z Subscript u Baseline left parenthesis t comma omega right parenthesiszu = zu(t, ω) deﬁned, cf. (3.3f), by 
z Subscript u Baseline left parenthesis t comma omega right parenthesis colon equals upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis comma left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis element of left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega times upper U periodzu(t, ω) := S
 
ω, u(·)
 
(t),
 
t, ω, u(·)
 
∈[t0, t f ] ×  × U.
(3.16d) 
Here, the random element “omegaω” is also used, cf. Sect. 3.1.1, to denote the realization 
of the random inputs z 0 equals z 0 left parenthesis omega right parenthesis comma theta left parenthesis dot right parenthesis equals theta left parenthesis dot comma omega right parenthesisz0 = z0(ω), θ(·) = θ(·, ω). 
omega colon equals StartBinomialOrMatrix z 0 Choose theta left parenthesis dot right parenthesis EndBinomialOrMatrixω :=
 z0
θ(·)
 
Remark 3.8 Due to the measurability of the functionsz Subscript u Baseline equals z Subscript u Baseline left parenthesis t comma omega right parenthesiszu = zu(t, ω)andu equals u left parenthesis t right parenthesisu = u(t)on 
left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega[t0, t f ] ×  , left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ], resp., and the assumptions on the function gg and its Jacobians 
upper D Subscript z Baseline g comma upper D Subscript u Baseline gDzg, Dug, see Sect. 3.1, also the matrix-valued functions left parenthesis t comma omega right parenthesis right arrow upper A left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis(t, ω) →A(t, ω, u(·)), 
left parenthesis t comma omega right parenthesis right arrow upper B left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis(t, ω) →B(t, ω, u(·)) are measurable and essentially bounded on left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega[t0, t f ] ×  . 
Equation (3.16a) is again a vectorial Volterra integral equation, and the existence

3.4 Computation of Directional Derivatives
81
of a unique measurable solution zeta left parenthesis t right parenthesis equals zeta left parenthesis t comma omega right parenthesisζ(t) = ζ(t, ω) can be shown as for the Volterra 
integral equation (3.2g), 3.2h). 
The differential form of (3.16a) is then the linear perturbation equation 
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals upper A left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis zeta left parenthesis t right parenthesis plus upper B left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis h left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of normal upper Omega 2nd Row 1st Column Blank 3rd Row 1st Column zeta left parenthesis t 0 right parenthesis 2nd Column Blank 3rd Column equals 0 period EndLayout˙ζ(t) = A
 
t, ω, u(·)
 
ζ(t) + B
 
t, ω, u(·)
 
h(t), t0 ≤t ≤t f , ω ∈ 
(3.16e) 
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals upper A left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis zeta left parenthesis t right parenthesis plus upper B left parenthesis t comma omega comma u left parenthesis dot right parenthesis right parenthesis h left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of normal upper Omega 2nd Row 1st Column Blank 3rd Row 1st Column zeta left parenthesis t 0 right parenthesis 2nd Column Blank 3rd Column equals 0 period EndLayoutζ(t0) = 0.
(3.16f) 
The solutionzeta equals zeta left parenthesis t comma omega right parenthesisζ = ζ(t, ω) of (3.16a), (3.16e), (3.16f), resp., is also denoted, cf. (3.3f), 
by 
zeta left parenthesis t comma omega right parenthesis equals zeta Subscript u comma h Baseline left parenthesis t comma omega right parenthesis colon equals left parenthesis upper D Subscript u Baseline upper S left parenthesis omega comma u left parenthesis dot right parenthesis right parenthesis h left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis comma h left parenthesis dot right parenthesis element of upper U periodζ(t, ω) = ζu,h(t, ω) :=
 
DuS
 
ω, u(·)
 
h(·)
 
(t), h(·) ∈U.
(3.16g) 
This means that the approximate (3.7)Subscript v left parenthesis dot right parenthesisv(·) of (3.7) has the following explicit form: 
StartLayout 1st Row 1st Column min upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column plus zeta left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis right parenthesis EndLayout min E
 
t f
 
t0
L
 
t, ω, zv(t, ω) +ζ(t, ω), u(t)
 
dt
+G
 
t f , ω, zv(t f , ω) + ζ(t f , ω)
  
(3.17a) 
s.t. 
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis zeta left parenthesis t comma omega right parenthesis plus upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis left parenthesis u left parenthesis t right parenthesis minus v left parenthesis t right parenthesis right parenthesis normal a period normal s period 2nd Row 1st Column Blank 3rd Row 1st Column zeta left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals 0 normal a period normal s period 4th Row 1st Column Blank 5th Row 1st Column u left parenthesis dot right parenthesis 2nd Column element of 3rd Column upper D period EndLayout˙ζ(t, ω)
= A
 
t, ω, v(·)
 
ζ(t, ω) + B
 
t, ω, v(·)
  
u(t) −v(t)
 
a.s.
(3.17b) 
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis zeta left parenthesis t comma omega right parenthesis plus upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis left parenthesis u left parenthesis t right parenthesis minus v left parenthesis t right parenthesis right parenthesis normal a period normal s period 2nd Row 1st Column Blank 3rd Row 1st Column zeta left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals 0 normal a period normal s period 4th Row 1st Column Blank 5th Row 1st Column u left parenthesis dot right parenthesis 2nd Column element of 3rd Column upper D period EndLayoutζ(t0, ω)
= 0 a.s.
(3.17c) 
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis zeta left parenthesis t comma omega right parenthesis plus upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis left parenthesis u left parenthesis t right parenthesis minus v left parenthesis t right parenthesis right parenthesis normal a period normal s period 2nd Row 1st Column Blank 3rd Row 1st Column zeta left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals 0 normal a period normal s period 4th Row 1st Column Blank 5th Row 1st Column u left parenthesis dot right parenthesis 2nd Column element of 3rd Column upper D period EndLayoutu(·) ∈D.
(3.17d) 
With the convexity assumptions in Sect. 3.1.2, Lemma 3.3 yields that (3.17a)– 
(3.17d) is a convex stochastic control problem, with a linear plant differential equa-
tion. 
For the subsequent analysis of the stochastic control problem we need now a 
representation of the directional derivative upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesisF 
v(·)+
 
u(·); h(·)
 
by a scalar product 
StartLayout 1st Row upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline q left parenthesis t right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t EndLayoutF 
v(·)+
 
u(·); h(·)
 
=
t f
 
t0
q(t)T h(t)dt
with a certain deterministic vector function q equals q left parenthesis t right parenthesisq = q(t). From representation (3.12a) 
of the directional derivative upper F prime Subscript v left parenthesis dot right parenthesis plusF 
v(·)+ of the convex approximate upper F Subscript v left parenthesis dot right parenthesisFv(·) of upper FF, deﬁnition 
(3.6b) of  f equals f left parenthesis omega comma z left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis f = f
 
ω, z(·), u(·)
 
by an integral over left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ] and [ 22], Satz 1.4, with 
(3.16g) we obtain

82
3
Optimal Control Under Stochastic Uncertainty
StartLayout 1st Row 1st Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus nabla Subscript u Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column Blank 3rd Column plus nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayoutF 
v(·)+
 
u(·); h(·)
 
= E
 
t f
 
t0
 
∇zL
 
t, ω, zv(t, ω) + ζv,u−v(t, ω), u(t)
 T
ζv,h(t, ω)
+∇uL
 
t, ω, zv(t, ω) + ζv,u−v(t, ω), u(t)
 T
h(t)
 
+∇zG
 
t f , ω, zv(t f , ω) + ζv,u−v(t f , ω)
 T
ζv,h(t f , ω)
 
.
(3.18) 
Deﬁning the gradients 
StartLayout 1st Row 1st Column a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals nabla Subscript u Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma EndLayouta
 
t, ω, v(·), u(·)
 
:= ∇zL
 
t, ω, zv(t, ω) + ζv,u−v(t, ω), u(t)
 
(3.19a) 
StartLayout 1st Row 1st Column a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals nabla Subscript u Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma EndLayoutb
 
t, ω, v(·), u(·)
 
:= ∇uL
 
t, ω, zv(t, ω) + ζv,u−v(t, ω), u(t)
 
(3.19b) 
StartLayout 1st Row 1st Column a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals nabla Subscript u Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta Subscript v comma u minus v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma EndLayoutc
 
t f , ω, v(·), u(·)
 
:= ∇zG
 
t f , ω, zv(t f , ω) + ζv,u−v(t f , ω)
 
,
(3.19c) 
measurable with respect toleft parenthesis t comma omega right parenthesis(t, ω), the directional derivativeupper F prime Subscript v left parenthesis dot right parenthesis plusF 
v(·)+ can be represented 
by 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis equals upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis right parenthesis d t plus c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayout F 
v(·)+
 
u(·); h(·)
 
= E
 t f
 
t0
 
a
 
t, ω, v(·), u(·)
 T
ζv,h(t, ω)
+b
 
t, ω, v(·), u(·)
 T
h(t)
 
dt + c
 
t f , ω, v(·), u(·)
 T
ζv,h(t f , ω)
 
.
(3.20a) 
According to (3.16a), for zeta Subscript v comma h Baseline equals zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesisζv,h = ζv,h(t, ω) we have 
StartLayout 1st Row zeta Subscript v comma h Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis plus upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis h left parenthesis t right parenthesis right parenthesis d t period EndLayoutζv,h(t f , ω) =
t f
 
t0
 
A
 
t, ω, v(·)
 
ζv,h(t, ω) + B
 
t, ω, v(·)
 
h(t)
 
dt. (3.20b) 
Putting (3.20b) into (3.20a), we ﬁnd 
StartLayout 1st Row 1st Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline a overTilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis d t 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus integral Subscript t 0 Superscript t Subscript f Baseline Baseline b overTilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t right parenthesis comma EndLayoutF 
v(·)+
 
u(·); h(·)
 
= E
 
t f
 
t0
˜a
 
t, ω, v(·), u(·)
 T
ζv,h(t, ω)dt
+
t f
 
t0
˜b
 
t, ω, v(·), u(·)
 T
h(t)dt
 
,
(3.20c)

3.4 Computation of Directional Derivatives
83
where 
StartLayout 1st Row 1st Column ModifyingAbove a With tilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis plus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove b With tilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis plus upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis period EndLayout˜a
 
t, ω, v(·), u(·)
 
:= a
 
t, ω, v(·), u(·)
 
+ A
 
t, ω, v(·)
 T
c
 
t f , ω, v(·), u(·)
 
(3.20d) 
StartLayout 1st Row 1st Column ModifyingAbove a With tilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis plus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove b With tilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis plus upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis period EndLayout˜b
 
t, ω, v(·), u(·)
 
:= b
 
t, ω, v(·), u(·)
 
+ B
 
t, ω, v(·)
 T
c
 
t f , ω, v(·), u(·)
 
. (3.20e) 
Remark 3.9 According to Remark 3.8 also the functions left parenthesis t comma omega right parenthesis right arrow ModifyingAbove a With tilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis(t, ω) →˜a
 
t, ω, v(·),
u(·)
 
, left parenthesis t comma omega right parenthesis right arrow ModifyingAbove b With tilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis(t, ω) →˜b
 
t, ω, v(·), u(·)
 
are measurable on left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega[t0, t f ] ×  . 
In order to transform the ﬁrst integral in (3.20c) into the form of the second integral 
in (3.20c), we introduce the mm-vector function 
StartLayout 1st Row lamda equals lamda Subscript v comma u Baseline left parenthesis t comma omega right parenthesis EndLayoutλ = λv,u(t, ω)
deﬁned by the following integral equation depending on the random parameter omegaω: 
lamda left parenthesis t right parenthesis minus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline integral Subscript t Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis d s equals ModifyingAbove a With tilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis periodλ(t) −A
 
t, ω, v(·)
 T
t f
 
t
λ(s)ds = ˜a
 
t, ω, v(·), u(·)
 
.
(3.21) 
Under the present assumptions, this Volterra integral equation has [ 22] a unique 
measurable solution left parenthesis t comma omega right parenthesis right arrow lamda Subscript v comma u Baseline left parenthesis t comma omega right parenthesis(t, ω) →λv,u(t, ω), see also Remark 3.8. By means of (3.21) 
we obtain 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column integral Subscript t 0 Superscript t Subscript f Baseline a overTilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis d t 2nd Row 1st Column Blank 2nd Column Blank 3rd Column equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis lamda left parenthesis t right parenthesis minus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline integral Subscript t Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis d s right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis d t 3rd Row 1st Column Blank 2nd Column Blank 3rd Column equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline lamda left parenthesis t right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis d t 4th Row 1st Column Blank 2nd Column Blank 3rd Column minus integral Subscript t 0 Superscript t Subscript f Baseline Baseline d t integral Subscript t 0 Superscript t Subscript f Baseline Baseline d s upper J left parenthesis s comma t right parenthesis lamda left parenthesis s right parenthesis Superscript upper T Baseline upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis 5th Row 1st Column Blank 2nd Column Blank 3rd Column equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis s comma omega right parenthesis d s minus integral Subscript t 0 Superscript t Subscript f Baseline Baseline d s integral Subscript t 0 Superscript t Subscript f Baseline Baseline d t upper J left parenthesis s comma t right parenthesis lamda left parenthesis s right parenthesis Superscript upper T Baseline upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis Superscript upper T Baseline left parenthesis zeta Subscript v comma h Baseline left parenthesis s comma omega right parenthesis minus integral Subscript t 0 Superscript s Baseline upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis d t right parenthesis d s comma EndLayout
t f
 
t0
˜a
 
t, ω, v(·), u(·)
 T
ζv,h(t, ω)dt
=
t f
 
t0
 
λ(t) −A
 
t, ω, v(·)
 T
t f
 
t
λ(s)ds
 T
ζv,h(t, ω)dt
=
t f
 
t0
λ(t)T ζv,h(t, ω)dt
−
t f
 
t0
dt
t f
 
t0
ds J(s, t)λ(s)T A
 
t, ω, v(·)
 
ζv,h(t, ω)
=
t f
 
t0
λ(s)T ζv,h(s, ω)ds −
t f
 
t0
ds
t f
 
t0
dt J(s, t)λ(s)T A
 
t, ω, v(·)
 
ζv,h(t, ω)
=
t f
 
t0
λ(s)T
 
ζv,h(s, ω) −
s
 
t0
A
 
t, ω, v(·)
 
ζv,h(t, ω)dt
 
ds,
(3.22a)

84
3
Optimal Control Under Stochastic Uncertainty
whereupper J equals upper J left parenthesis s comma t right parenthesisJ = J(s, t) is deﬁned by 
StartLayout 1st Row upper J left parenthesis s comma t right parenthesis colon equals StartLayout Enlarged left brace 1st Row 1st Column 0 comma 2nd Column t 0 less than or equals s less than or equals t 2nd Row 1st Column 1 comma 2nd Column t less than s less than or equals t Subscript f Baseline period EndLayout EndLayoutJ(s, t) :=
 0, t0 ≤s ≤t
1, t < s ≤t f .
Using now again the perturbation equation (3.16a), (3.16b), from (3.22a) we get 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column integral Subscript t 0 Superscript t Subscript f Baseline Baseline a overTilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline zeta Subscript v comma h Baseline left parenthesis t comma omega right parenthesis d t equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis Superscript upper T Baseline left parenthesis integral Subscript t 0 Superscript s Baseline upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis h left parenthesis t right parenthesis d t right parenthesis d s 2nd Row 1st Column Blank 2nd Column Blank 3rd Column equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline d s lamda left parenthesis s right parenthesis Superscript upper T Baseline integral Subscript t 0 Superscript t Subscript f Baseline Baseline d t upper J left parenthesis s comma t right parenthesis upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis h left parenthesis t right parenthesis equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline d t integral Subscript t 0 Superscript t Subscript f Baseline Baseline d s upper J left parenthesis s comma t right parenthesis lamda left parenthesis s right parenthesis Superscript upper T Baseline upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis h left parenthesis t right parenthesis 3rd Row 1st Column Blank 2nd Column Blank 3rd Column equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis integral Subscript t Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis d s right parenthesis Superscript upper T Baseline upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis h left parenthesis t right parenthesis d t equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline integral Subscript t Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis d s right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t period EndLayout
t f
 
t0
˜a
 
t, ω, v(·), u(·)
 T
ζv,h(t, ω)dt =
t f
 
t0
λ(s)T
 
s
 
t0
B
 
t, ω, v(·)
 
h(t)dt
 
ds
=
t f
 
t0
dsλ(s)T
t f
 
t0
dt J(s, t)B
 
t, ω, v(·)
 
h(t) =
t f
 
t0
dt
t f
 
t0
ds J(s, t)λ(s)T B
 
t, ω, v(·)
 
h(t)
=
t f
 
t0
 
t f
 
t
λ(s)ds
 T
B
 
t, ω, v(·)
 
h(t)dt =
t f
 
t0
 
B
 
t, ω, v(·)
 T
t f
 
t
λ(s)ds
 T
h(t)dt. (3.22b) 
Inserting (3.22b) into (3.20c), we have 
StartLayout 1st Row 1st Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline integral Subscript t Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis d s 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus ModifyingAbove b With tilde left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t right parenthesis period EndLayoutF 
v(·)+
 
u(·); h(·)
 
= E
 
t f
 
t0
 
B
 
t, ω, v(·)
 T
t f
 
t
λ(s)ds
+˜b
 
t, ω, v(·), u(·)
  T
h(t)dt
 
.
(3.23) 
By means of (3.20d), the integral equation (3.21) may be written by 
lamda left parenthesis t right parenthesis minus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline left parenthesis c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis d s right parenthesis equals a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis periodλ(t) −A
 
t, ω, v(·)
 T  
c
 
t f , ω, v(·), u(·)
 
+
t f
 
t
λ(s)ds
 
= a
 
t, ω, v(·), u(·)
 
.
(3.24) 
According to (3.24), deﬁning the mm-vector function 
y equals y Subscript v comma u Baseline left parenthesis t comma omega right parenthesis colon equals c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline lamda Subscript v comma u Baseline left parenthesis s comma omega right parenthesis d s commay = yv,u(t, ω) := c
 
t f , ω, v(·), u(·)
 
+
t f
 
t
λv,u(s, ω)ds,
(3.25a) 
we get 
lamda left parenthesis t right parenthesis minus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y Subscript v comma u Baseline left parenthesis t comma omega right parenthesis equals a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis periodλ(t) −A
 
t, ω, v(·)
 T
yv,u(t, ω) = a
 
t, ω, v(·), u(·)
 
.
(3.25b) 
Replacing in (3.25b) the variable tt by ss and integrating then the equation (3.25b) 
over the time interval left bracket t comma t Subscript f Baseline right bracket[t, t f ], yields

3.4 Computation of Directional Derivatives
85
integral Subscript t Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis d s equals integral Subscript t Superscript t Subscript f Baseline Baseline left parenthesis upper A left parenthesis s comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y Subscript v comma u Baseline left parenthesis s comma omega right parenthesis plus a left parenthesis s comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis right parenthesis d s period
t f
 
t
λ(s)ds =
t f
 
t
 
A
 
s, ω, v(·)
 T
yv,u(s, ω) + a
 
s, ω, v(·), u(·)
  
ds.
(3.25c) 
Finally, using again (3.25a), from (3.25c) we get 
y Subscript v comma u Baseline left parenthesis t comma omega right parenthesis equals c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline left parenthesis upper A left parenthesis s comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y Subscript v comma u Baseline left parenthesis s comma omega right parenthesis plus a left parenthesis s comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis right parenthesis d s periodyv,u(t, ω) = c
 
t f , ω, v(·), u(·)
 
+
t f
 
t
 
A
 
s, ω, v(·)
 T
yv,u(s, ω) + a
 
s, ω, v(·), u(·)
  
ds.
(3.25d) 
Obviously, the differential form of the Volterra integral equation (3.25d) for y equals y Subscript v comma u Baseline left parenthesis t comma omega right parenthesisy =
yv,u(t, ω) reads 
StartLayout 1st Row 1st Column ModifyingAbove y With dot left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals minus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y left parenthesis t right parenthesis minus a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column y left parenthesis t Subscript f Baseline right parenthesis 2nd Column Blank 3rd Column equals c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis period EndLayout ˙y(t) = −A
 
t, ω, v(·)
 T
y(t) −a
 
t, ω, v(·), u(·)
 
, t0 ≤t ≤t f , (3.26a) 
StartLayout 1st Row 1st Column ModifyingAbove y With dot left parenthesis t right parenthesis 2nd Column Blank 3rd Column equals minus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y left parenthesis t right parenthesis minus a left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column y left parenthesis t Subscript f Baseline right parenthesis 2nd Column Blank 3rd Column equals c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis period EndLayouty(t f ) = c
 
t f , ω, v(·), u(·)
 
.
(3.26b) 
System (3.25d), (3.26a), (3.26b), resp., is called the adjoint integral, differential 
equation related to the perturbation equation (3.16a), (3.16b). 
By means of (3.25a), from (3.20e) and (3.23) we now obtain 
StartLayout 1st Row 1st Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Column equals upper E integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline integral Subscript t Superscript t Subscript f Baseline Baseline lamda left parenthesis s right parenthesis d s plus b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline c left parenthesis t Subscript f Baseline comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t 3rd Row 1st Column Blank 2nd Column equals upper E integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y Subscript v comma u Baseline left parenthesis t comma omega right parenthesis plus b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t period EndLayoutF 
v(·)+
 
u(·); h(·)
 
= E
t f
 
t0
 
B
 
t, ω, v(·)
 T
t f
 
t
λ(s)ds + b
 
t, ω, v(·), u(·)
 
+ B
 
t, ω, v(·)
 T
c
 
t f , ω, v(·), u(·)
  T
h(t)dt
= E
t f
 
t0
 
B
 
t, ω, v(·)
 T
yv,u(t, ω) + b
 
t, ω, v(·), u(·)
  T
h(t)dt.
Summarizing the above transformations, we have the following result. 
Theorem 3.3 Let left parenthesis omega comma t right parenthesis right arrow y Subscript v comma u Baseline left parenthesis t comma omega right parenthesis(ω, t) →yv,u(t, ω) be the unique measurable solution of the 
adjoint integral, differential equation (3.25d), (3.26a), (3.26b), respectively. Then, 
StartLayout 1st Row 1st Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper E integral Subscript t 0 Superscript t Subscript f Baseline Baseline left parenthesis upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y Subscript v comma u Baseline left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma u left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t period EndLayoutF 
v(·)+
 
u(·); h(·)
 
= E
t f
 
t0
 
B
 
t, ω, v(·)
 T
yv,u(t, ω)
+b
 
t, ω, v(·), u(·)
  T
h(t)dt.
(3.27)

86
3
Optimal Control Under Stochastic Uncertainty
Note that upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon dot right parenthesisF 
v(·)+
 
u(·); ·
 
is also the Gâteaux-differential of upper F Subscript v left parenthesis dot right parenthesisFv(·) at u left parenthesis dot right parenthesisu(·). 
For a further discussion of formula (3.27) forupper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesisF 
v(·)+
 
u(·); h(·)
 
, in generalization 
of the Hamiltonian of a deterministic control problem, see, e.g., [ 18], we introduce 
now the stochastic Hamiltonian related to the partly linearized control problem 
(3.17a)–(3.17d) based on a reference control v left parenthesis dot right parenthesisv(·): 
StartLayout 1st Row upper H Subscript v left parenthesis dot right parenthesis Baseline left parenthesis t comma omega comma zeta comma y comma u right parenthesis colon equals upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis plus zeta comma u right parenthesis 2nd Row plus y Superscript upper T Baseline left parenthesis upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis zeta plus upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis left parenthesis u minus v left parenthesis t right parenthesis right parenthesis right parenthesis comma EndLayoutHv(·)(t, ω, ζ, y, u) := L
 
t, ω, zv(t, ω) + ζ, u
 
+yT
 
A
 
t, ω, v(·)
 
ζ + B
 
t, ω, v(·)
  
u −v(t)
  
,
(3.28a) 
left parenthesis t comma omega comma z comma y comma u right parenthesis element of left bracket t 0 comma t Subscript f Baseline right bracket times normal upper Omega times double struck upper R Superscript m Baseline times double struck upper R Superscript m Baseline times double struck upper R Superscript n(t, ω, z, y, u) ∈[t0, t f ] ×  × Rm × Rm × Rn. Using  upper H Subscript v left parenthesis dot right parenthesisHv(·), for  upper F prime Subscript v left parenthesis dot right parenthesis plusF 
v(·)+ we ﬁnd the 
representation 
StartLayout 1st Row 1st Column upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis u left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper E nabla Subscript u Baseline upper H Subscript v left parenthesis dot right parenthesis Baseline left parenthesis t comma omega comma zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesis comma 2nd Row 1st Column Blank 2nd Column Blank 3rd Column y Subscript v comma u Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t comma EndLayoutF 
v(·)+
 
u(·); h(·)
 
=
t f
 
t0
E∇u Hv(·)
 
t, ω, ζv,u−v(t, ω),
yv,u(t, ω), u(t)
 T
h(t)dt,
(3.28b) 
where zeta Subscript v comma u minus v Baseline equals zeta Subscript v comma u minus v Baseline left parenthesis t comma omega right parenthesisζv,u−v = ζv,u−v(t, ω) is the solution of the perturbation differential, integral 
equation (3.17b), (3.17c), (3.20b), resp., and y Subscript v comma u Baseline equals y Subscript v comma u Baseline left parenthesis t comma omega right parenthesisyv,u = yv,u(t, ω) denotes the solution 
of the adjoint differential, integral equation (3.26a), (3.26b), (3.25d). 
Let u Superscript 0 Baseline left parenthesis dot right parenthesis element of upper Uu0(·) ∈U denote a given initial control. By means of (3.28a), (3.28b), the 
necessary and sufﬁcient condition for a control u Superscript 1 Baseline left parenthesis dot right parenthesisu1(·) to be an element of the set 
upper M left parenthesis u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesisM
 
u0(·)
 
, i.e., a solution of the approximate convex problem (3.7)Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesisu0(·), reads, see 
Deﬁnition 3.4 and (3.13): 
StartLayout 1st Row integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper E nabla Subscript u Baseline upper H Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma omega comma zeta Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript minus u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis comma y Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript Baseline left parenthesis t comma omega right parenthesis comma 2nd Row u Superscript 1 Baseline left parenthesis t right parenthesis right parenthesis Superscript upper T Baseline left parenthesis u left parenthesis t right parenthesis minus u Superscript 1 Baseline left parenthesis t right parenthesis right parenthesis d t greater than or equals 0 comma u left parenthesis dot right parenthesis element of upper D period EndLayout
t f
 
t0
E∇u Hu0(·)
 
t, ω, ζu0,u1−u0(t, ω), yu0,u1(t, ω),
u1(t)
 T  
u(t) −u1(t)
 
dt ≥0, u(·) ∈D.
(3.29) 
Introducing, for given controls u Superscript 0 Baseline left parenthesis dot right parenthesis comma u Superscript 1 Baseline left parenthesis dot right parenthesisu0(·), u1(·), the convex mean value function 
ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma u Sub Superscript 1 Subscript left parenthesis dot right parenthesis Baseline equals ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma u Sub Superscript 1 Subscript left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesisH u0(·),u1(·) = H u0(·),u1(·)(u(·)) deﬁned by 
StartLayout 1st Row 1st Column ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma u Sub Superscript 1 Subscript left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column colon equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper E upper H Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma omega comma zeta Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript minus u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis comma 2nd Row 1st Column Blank 2nd Column Blank 3rd Column y Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t comma EndLayoutH u0(·),u1(·)
 
u(·)
 
:=
t f
 
t0
E Hu0(·)
 
t, ω, ζu0,u1−u0(t, ω),
yu0,u1(t, ω), u(t)
 
dt,
(3.30a)

3.4 Computation of Directional Derivatives
87
corresponding to the representation (3.12a) and (3.18) of the directional derivative 
of upper FF, it is seen that the left hand side of (3.29) is the directional derivative of the 
function ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma u Sub Superscript 1 Subscript left parenthesis dot right parenthesis Baseline equals ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma u Sub Superscript 1 Subscript left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesisH u0(·),u1(·) = H u0(·),u1(·)(u(·)) at u Superscript 1 Baseline left parenthesis dot right parenthesisu1(·) with increment h left parenthesis dot right parenthesis colon equals u left parenthesis dot right parenthesis minus u Superscript 1 Baseline left parenthesis dot right parenthesish(·) := u(·) −u1(·). 
Consequently, (3.29) is equivalent with the condition: 
StartLayout 1st Row ModifyingAbove upper H With quotation dash prime Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma u Sub Superscript 1 Subscript left parenthesis dot right parenthesis plus Baseline left parenthesis u Superscript 1 Baseline left parenthesis dot right parenthesis right parenthesis semicolon left parenthesis u left parenthesis dot right parenthesis minus u Superscript 1 Baseline left parenthesis dot right parenthesis right parenthesis greater than or equals 0 comma u left parenthesis dot right parenthesis element of upper D period EndLayoutH
 
u0(·),u1(·)+
 
u1(·));
 
u(·) −u1(·)
 
≥0, u(·) ∈D.
(3.30b) 
Due to the equivalence of the conditions (3.29) and (3.30b), for a control u Superscript 1 Baseline left parenthesis dot right parenthesis element of upper M left parenthesis u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesisu1(·) ∈
M
 
u0(·)
 
, i.e., a solution of (3.7)Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesisu0(·) we have the following characterization: 
Theorem 3.4 Let u Superscript 0 Baseline left parenthesis dot right parenthesis element of upper Du0(·) ∈D be a given initial control. A control u Superscript left parenthesis 1 right parenthesis Baseline left parenthesis dot right parenthesis element of upper Uu(1)(·) ∈U is a 
solution of (3.7)Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesisu0(·), i.e.,u Superscript 1 Baseline left parenthesis dot right parenthesis element of upper M left parenthesis u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesisu1(·) ∈M
 
u0(·)
 
, if and only ifu Superscript 1 Baseline left parenthesis dot right parenthesisu1(·) is an optimal solution 
of the convex stochastic optimization problem 
min ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma u Sub Superscript 1 Subscript left parenthesis dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis s period t period u left parenthesis dot right parenthesis element of upper D period min H u0(·),u1(·)
 
u(·)
 
s.t. u(·) ∈D.
(3.31a) 
In the following we study therefore the convex optimization problem (3.31a), 
where we replace next to the yet unknown functions zeta equals zeta Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript minus u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis comma y equals y Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript Baseline left parenthesis t comma omega right parenthesisζ = ζu0,u1−u0(t, ω), y = yu0,u1
(t, ω) by arbitrary stochastic functionszeta equals zeta left parenthesis t comma omega right parenthesis comma y equals y left parenthesis t comma omega right parenthesisζ = ζ(t, ω), y = y(t, ω). Hence, we consider 
the mean value functionModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta left parenthesis dot comma dot right parenthesis comma y left parenthesis dot comma dot right parenthesis Baseline equals ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta left parenthesis dot comma dot right parenthesis comma y left parenthesis dot comma dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesisH u0(·),ζ(·,·),y(·,·) = H u0(·),ζ(·,·),y(·,·)(u(·)) deﬁned, see (3.30a), 
by 
StartLayout 1st Row ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta left parenthesis dot comma dot right parenthesis comma y left parenthesis dot comma dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper E upper H Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma omega comma zeta left parenthesis t comma omega right parenthesis comma y left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t period EndLayoutH u0(·),ζ(·,·),y(·,·)
 
u(·)
 
=
t f
 
t0
E Hu0(·)
 
t, ω, ζ(t, ω), y(t, ω), u(t)
 
dt. (3.31b) 
In practice, the admissible domain upper DD is often given by 
upper D equals left brace u left parenthesis dot right parenthesis element of upper U colon u left parenthesis t right parenthesis element of upper D Subscript t Baseline comma t 0 less than or equals t less than or equals t Subscript f Baseline right brace commaD =
 
u(·) ∈U : u(t) ∈Dt, t0 ≤t ≤t f
 
,
(3.32) 
where upper D Subscript t Baseline subset of double struck upper R Superscript nDt ⊂Rn is a given convex subset of double struck upper R Superscript nRn for each time tt, t 0 less than or equals t less than or equals t Subscript ft0 ≤t ≤t f . Since 
ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta left parenthesis dot comma dot right parenthesis comma y left parenthesis dot comma dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesisH u0(·),ζ(·,·),y(·,·)
 
u(·)
 
has an integral form, the minimum value of ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta left parenthesis dot comma dot right parenthesis comma y left parenthesis dot comma dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesisH u0(·),ζ(·,·),y(·,·)
 
u(·)
 
on upper DD can be obtained—in case (3.32)—by solving the ﬁnite-dimensional 
stochastic optimization problem 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column min upper E upper H Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma omega comma zeta left parenthesis t comma omega right parenthesis comma 2nd Row 1st Column Blank 2nd Column Blank 3rd Column y left parenthesis t comma omega right parenthesis comma u right parenthesis s period t period u element of upper D Subscript t Baseline left parenthesis upper P right parenthesis Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta comma y Superscript t EndLayout
min E Hu0(·)
 
t, ω, ζ(t, ω),
y(t, ω), u
 
s.t. u ∈Dt
(P)t
u0(·),ζ,y
for each t element of left bracket t 0 comma t Subscript f Baseline right brackett ∈[t0, t f ]. Let denote then

88
3
Optimal Control Under Stochastic Uncertainty
ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 
u∗=  
u∗u0(·)
 
t, ζ(t, ·), y(t, ·)
 
,
t0 ≤t ≤t f ,
(3.33a) 
a solution of left parenthesis upper P right parenthesis Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta comma y Superscript t(P)t
u0(·),ζ,y for each t 0 less than or equals t less than or equals t Subscript ft0 ≤t ≤t f . Obviously, if 
ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis dot comma zeta left parenthesis dot comma dot right parenthesis comma y left parenthesis dot comma dot right parenthesis right parenthesis element of upper U left parenthesis a n d t h e r e f o r e ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis dot comma zeta left parenthesis dot comma dot right parenthesis comma y left parenthesis dot comma dot right parenthesis right parenthesis element of upper D right parenthesis comma 
u∗u0(·)
 
·, ζ(·, ·), y(·, ·)
 
∈U
 
and therefore  
u∗u0(·)
 
·, ζ(·, ·), y(·, ·)
 
∈D
 
,
(3.33b) 
then 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis dot comma zeta left parenthesis dot comma dot right parenthesis comma y left parenthesis dot comma dot right parenthesis right parenthesis element of a r g m i n ModifyingAbove upper H With quotation dash Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta left parenthesis dot comma dot right parenthesis comma y left parenthesis dot comma dot right parenthesis Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis period 2nd Row 1st Column Blank 2nd Column Blank 3rd Column u left parenthesis dot right parenthesis element of upper D EndLayout  
u∗u0(·)
 
·, ζ(·, ·), y(·, ·)
 
∈argmin H u0(·),ζ(·,·),y(·,·)
 
u(·)
 
.
u(·) ∈D
(3.33c) 
Because of Theorem 3.4, problemsleft parenthesis upper P right parenthesis Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta comma y Superscript t(P)t
u0(·),ζ,y and (3.33a)–(3.33c), we introduce, 
cf. [ 18], the following deﬁnition: 
Deﬁnition 3.6 Let u Superscript 0 Baseline left parenthesis dot right parenthesis element of upper Du0(·) ∈D be a given initial control. For measurable functions 
zeta equals zeta left parenthesis t comma omega right parenthesis comma y equals y left parenthesis t comma omega right parenthesisζ = ζ(t, ω), y = y(t, ω) on left parenthesis normal upper Omega comma German upper A comma upper P right parenthesis( , A, P), let denote 
StartLayout 1st Row ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma EndLayout 
u∗=  
u∗u0(·)
 
t, ζ(t, ·), y(t, ·)
 
,
t0 ≤t ≤t f ,
a solution of  left parenthesis upper P right parenthesis Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta comma y Superscript t Baseline comma t 0 less than or equals t less than or equals t Subscript f Baseline(P)t
u0(·),ζ,y, t0 ≤t ≤t f . The function ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis 
u∗=  
u∗u0(·)
 
t, ζ(t, ·), y(t, ·)
 
is called a bold upper H Subscript bold u Sub Superscript bold 0 Subscript bold left parenthesis dot bold right parenthesisHu0(·)-minimal control of (3.17a)–(3.17d). The stochastic Hamiltonian 
upper H Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesisHu0(·) is called regular, strictly regular, resp., if aupper H Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesisHu0(·)-minimal control exists and 
is determined uniquely. 
Remark 3.10 Obviously, by means of Deﬁnition 3.6, for an optimal solution u Superscript 1 Baseline left parenthesis dot right parenthesisu1(·)
of (3.7)Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesisu0(·) we have then the “model control law” ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis 
u∗=  
u∗u0(·)
 
t, ζ(t, ·), y(t, ·)
 
depending on still unknown state, costate functions zeta left parenthesis t comma dot right parenthesis comma y left parenthesis dot right parenthesisζ(t, ·), y(·), respectively. 
3.5 
Canonical (Hamiltonian) System of Differential 
Equations/Two-Point Boundary Value Problem 
For a given initial control u Superscript 0 Baseline left parenthesis dot right parenthesis element of upper Du0(·) ∈D, let  ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis dot right parenthesis comma eta left parenthesis dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 
u∗=  
u∗u0(·)
 
t, ζ(·), η(·)
 
, t0 ≤t ≤t f , 
denote a upper H Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesisHu0(·)-minimal control of (3.17a)–(3.17d) according to Deﬁnition 3.6. 
Due to (3.17b), (3.17c) and (3.26a), (3.26b) we consider, cf. [ 18], the following 
so-called canonical or Hamiltonian system of differential equations, hence, a two-
point boundary value problem, with random parameters for the vector functions 
left parenthesis zeta comma y right parenthesis equals left parenthesis zeta left parenthesis t comma omega right parenthesis comma y left parenthesis t comma omega right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of normal upper Omega(ζ, y) =
 
ζ(t, ω), y(t, ω)
 
, t0 ≤t ≤t f , ω ∈ :

3.5 Canonical (Hamiltonian) System of Differential Equations …
89
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot left parenthesis t comma omega right parenthesis equals 2nd Column upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis zeta left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper B left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis left parenthesis ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis minus u Superscript 0 Baseline left parenthesis t right parenthesis right parenthesis comma 3rd Row 1st Column Blank 2nd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 4th Row 1st Column Blank 5th Row 1st Column zeta left parenthesis t 0 comma omega right parenthesis 2nd Column equals 0 a period s period 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis equals 2nd Column minus upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis Superscript upper T y left parenthesis t comma omega right parenthesis 8th Row 1st Column Blank 2nd Column minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis plus zeta left parenthesis t comma omega right parenthesis comma ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma 9th Row 1st Column Blank 2nd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 10th Row 1st Column Blank 11th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayout˙ζ(t, ω) = A
 
t, ω, u0(·)
 
ζ(t, ω)
+ B
 
t, ω, u0(·)
  
 
u∗u0(·)
 
t, ζ(t, ·), y(t, ·)
 
−u0(t)
 
,
t0 ≤t ≤t f ,
(3.34a) 
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot left parenthesis t comma omega right parenthesis equals 2nd Column upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis zeta left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper B left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis left parenthesis ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis minus u Superscript 0 Baseline left parenthesis t right parenthesis right parenthesis comma 3rd Row 1st Column Blank 2nd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 4th Row 1st Column Blank 5th Row 1st Column zeta left parenthesis t 0 comma omega right parenthesis 2nd Column equals 0 a period s period 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis equals 2nd Column minus upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis Superscript upper T y left parenthesis t comma omega right parenthesis 8th Row 1st Column Blank 2nd Column minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis plus zeta left parenthesis t comma omega right parenthesis comma ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma 9th Row 1st Column Blank 2nd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 10th Row 1st Column Blank 11th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayoutζ(t0, ω) = 0 a.s.
(3.34b) 
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot left parenthesis t comma omega right parenthesis equals 2nd Column upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis zeta left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper B left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis left parenthesis ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis minus u Superscript 0 Baseline left parenthesis t right parenthesis right parenthesis comma 3rd Row 1st Column Blank 2nd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 4th Row 1st Column Blank 5th Row 1st Column zeta left parenthesis t 0 comma omega right parenthesis 2nd Column equals 0 a period s period 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis equals 2nd Column minus upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis Superscript upper T y left parenthesis t comma omega right parenthesis 8th Row 1st Column Blank 2nd Column minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis plus zeta left parenthesis t comma omega right parenthesis comma ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma 9th Row 1st Column Blank 2nd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 10th Row 1st Column Blank 11th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayout ˙y(t, ω) = −A
 
t, ω, u0(·)
 T
y(t, ω)
−∇zL
 
t, ω, zu0(t, ω) + ζ(t, ω),  
u∗u0(·)
 
t, ζ(t, ·), y(t, ·)
  
,
t0 ≤t ≤t f ,
(3.34c) 
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot left parenthesis t comma omega right parenthesis equals 2nd Column upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis zeta left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper B left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis left parenthesis ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis minus u Superscript 0 Baseline left parenthesis t right parenthesis right parenthesis comma 3rd Row 1st Column Blank 2nd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 4th Row 1st Column Blank 5th Row 1st Column zeta left parenthesis t 0 comma omega right parenthesis 2nd Column equals 0 a period s period 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis equals 2nd Column minus upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis Superscript upper T y left parenthesis t comma omega right parenthesis 8th Row 1st Column Blank 2nd Column minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis plus zeta left parenthesis t comma omega right parenthesis comma ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma 9th Row 1st Column Blank 2nd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 10th Row 1st Column Blank 11th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayouty(t f , ω) = ∇zG
 
t f , ω, zu0(t f , ω) + ζ(t f , ω)
 
.
(3.34d) 
Remark 3.11 Note that the (deterministic) control lawModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis 
u∗= 
u∗u0(·)
 
t, ζ(t, ·), y(t, ·)
 
depends on the whole random variable left parenthesis zeta left parenthesis t comma omega right parenthesis comma y left parenthesis t comma omega right parenthesis right parenthesis comma omega element of normal upper Omega
 
ζ(t, ω), y(t, ω)
 
, ω ∈ , or the occurring 
moments. In the case of a discrete parameter distribution normal upper Omega equals StartSet omega 1 comma ellipsis comma omega Subscript rho Baseline EndSet = {ω1, . . . , ω }, see  
Sect. 3.1, the control law ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis 
u∗u0(·) depends, 
ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline equals ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta left parenthesis t comma omega 1 right parenthesis comma ellipsis comma zeta left parenthesis t comma omega Subscript rho Baseline right parenthesis comma y left parenthesis t comma omega 1 right parenthesis comma ellipsis comma y left parenthesis t comma omega Subscript rho Baseline right parenthesis right parenthesis comma 
u∗u0(·) =  
u∗u0(·)
 
t, ζ(t, ω1), . . . , ζ(t, ω ), y(t, ω1), . . . , y(t, ω )
 
,
on the 2 rho2 unknown functions zeta left parenthesis t comma omega Subscript i Baseline right parenthesis comma y left parenthesis t comma omega Subscript i Baseline right parenthesis comma i equals 1 comma ellipsis comma rhoζ(t, ωi), y(t, ωi), i = 1, . . . ,  . 
Suppose now that left parenthesis zeta Superscript 1 Baseline comma y Superscript 1 Baseline right parenthesis equals left parenthesis zeta Superscript 1 Baseline left parenthesis t comma omega right parenthesis comma y Superscript 1 Baseline left parenthesis t comma omega right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of left parenthesis normal upper Omega comma German upper A comma upper P right parenthesis(ζ 1, y1) =
 
ζ 1(t, ω), y1(t, ω)
 
, t0 ≤t ≤t f , ω ∈( , A, P), 
is the unique measurable solution of the canonical stochastic system (3.34a)–(3.34d), 
and deﬁne 
u Superscript 1 Baseline left parenthesis t right parenthesis colon equals ModifyingAbove u Superscript asterisk Baseline With tilde Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis Baseline left parenthesis t comma zeta Superscript 1 Baseline left parenthesis t comma dot right parenthesis comma y Superscript 1 Baseline left parenthesis t comma dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline periodu1(t) :=  
u∗u0(·)
 
t, ζ 1(t, ·), y1(t, ·)
 
, t0 ≤t ≤t f .
(3.35) 
System (3.34a)–(3.34d) takes then the following form: 
StartLayout 1st Row 1st Column ModifyingAbove zeta With dot Superscript 1 Baseline left parenthesis t comma omega right parenthesis 2nd Column equals upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis zeta Superscript 1 Baseline left parenthesis t comma omega right parenthesis plus upper B left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis left parenthesis u Superscript 1 Baseline left parenthesis t right parenthesis minus u Superscript 0 Baseline left parenthesis t right parenthesis right parenthesis comma 3rd Column Blank 2nd Row 1st Column Blank 2nd Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 3rd Column left parenthesis 3.34 a prime right parenthesis 3rd Row 1st Column zeta Superscript 1 Baseline left parenthesis t 0 comma omega right parenthesis 2nd Column equals 0 a period s period 3rd Column left parenthesis 3.34 b prime right parenthesis 4th Row 1st Column ModifyingAbove y With dot Superscript 1 Baseline left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A left parenthesis t comma omega comma u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y left parenthesis t comma omega right parenthesis 3rd Column Blank 5th Row 1st Column Blank 2nd Column minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis plus zeta Superscript 1 Baseline left parenthesis t comma omega right parenthesis comma u Superscript 1 Baseline left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 3rd Column left parenthesis 3.34 c prime right parenthesis 6th Row 1st Column y Superscript 1 Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript u Sub Superscript 0 Subscript Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis plus zeta Superscript 1 Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period 3rd Column left parenthesis 3.34 d prime right parenthesis EndLayout
˙ζ 1(t, ω) = A
 
t, ω, u0(·)
 
ζ 1(t, ω) + B
 
t, ω, u0(·)
  
u1(t) −u0(t)
 
,
t0 ≤t ≤t f ,
(3.34a )
ζ 1(t0, ω) = 0 a.s.
(3.34b )
˙y1(t, ω) = −A
 
t, ω, u0(·)
 T
y(t, ω)
−∇zL
 
t, ω, zu0(t, ω) + ζ 1(t, ω), u1(t)
 
, t0 ≤t ≤t f ,
(3.34c )
y1(t f , ω) = ∇zG
 
t f , ω, zu0(t f , ω) + ζ 1(t f , ω)
 
.
(3.34d )
Assuming that 
u Superscript 1 Baseline left parenthesis dot right parenthesis element of upper U commau1(·) ∈U,
(3.36a)

90
3
Optimal Control Under Stochastic Uncertainty
due to the deﬁnition of a upper H Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesisHu0(·)-minimal control we also have 
u Superscript 1 Baseline left parenthesis dot right parenthesis element of upper D periodu1(·) ∈D.
(3.36b) 
According to the notation introduced in (3.16a)–(3.16g), (3.25a)–(3.25d)/(3.26a), 
(3.26b), resp., and the above-assumed uniqueness of the solutionleft parenthesis zeta Superscript 1 Baseline comma y Superscript 1 Baseline right parenthesis(ζ 1, y1) of (3.34a)– 
(3.34d) we have  
StartLayout 1st Row 1st Column zeta Superscript 1 Baseline left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals zeta Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript minus u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column y Superscript 1 Baseline left parenthesis t comma omega right parenthesis 2nd Column equals 3rd Column y Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript Baseline left parenthesis t comma omega right parenthesis EndLayoutζ 1(t, ω)
= ζu0,u1−u0(t, ω)
(3.37a) 
StartLayout 1st Row 1st Column zeta Superscript 1 Baseline left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals zeta Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript minus u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column y Superscript 1 Baseline left parenthesis t comma omega right parenthesis 2nd Column equals 3rd Column y Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript Baseline left parenthesis t comma omega right parenthesis EndLayouty1(t, ω) = yu0,u1(t, ω)
(3.37b) 
with the control u Superscript 1 Baseline left parenthesis dot right parenthesisu1(·) given by (3.35). 
Due to the above construction, we know that u Superscript 1 Baseline left parenthesis t right parenthesisu1(t) solves left parenthesis upper P right parenthesis Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta comma eta Superscript t(P)t
u0(·),ζ,η for 
StartLayout 1st Row 1st Column zeta equals zeta left parenthesis t comma omega right parenthesis 2nd Column colon equals 3rd Column zeta Superscript 1 Baseline left parenthesis t comma omega right parenthesis equals zeta Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript minus u Sub Superscript 0 Subscript Baseline left parenthesis t comma omega right parenthesis 2nd Row 1st Column eta equals eta left parenthesis t comma omega right parenthesis 2nd Column colon equals 3rd Column y Superscript 1 Baseline left parenthesis t comma omega right parenthesis equals y Subscript u Sub Superscript 0 Subscript comma u Sub Superscript 1 Subscript Baseline left parenthesis t comma omega right parenthesis EndLayoutζ = ζ(t, ω) := ζ 1(t, ω) = ζu0,u1−u0(t, ω)
η = η(t, ω) := y1(t, ω) = yu0,u1(t, ω)
for each t 0 less than or equals t less than or equals t Subscript ft0 ≤t ≤t f . Hence, control u Superscript 1 Baseline left parenthesis dot right parenthesisu1(·), given by (3.35), is a solution of (3.31a). 
Summarizing the above construction, from Theorem 3.4 we obtain this result. 
Theorem 3.5 Suppose thatupper DD is given by (3.32),upper M left parenthesis u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesis not equals normal empty setM
 
u0(·)
 
 = ∅, andleft parenthesis upper P right parenthesis Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta comma y Superscript t(P)t
u0(·),ζ,y has 
an optimal solution for eacht comma t 0 less than or equals t less than or equals t Subscript f Baselinet, t0 ≤t ≤t f , and measurable functionszeta left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesisζ(t, ·), y(t, ·). 
Moreover, suppose that the canonical system (3.34a)–(3.34d) has a unique measur-
able solution left parenthesis zeta Superscript 1 Baseline left parenthesis t comma omega right parenthesis comma y Superscript 1 Baseline left parenthesis t comma omega right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of normal upper Omega
 
ζ 1(t, ω), y1(t, ω)
 
, t0 ≤t ≤t f , ω ∈ , such that u Superscript 1 Baseline left parenthesis dot right parenthesis element of upper Uu1(·) ∈U, where 
u Superscript 1 Baseline left parenthesis dot right parenthesisu1(·) is deﬁned by (3.35). Then u Superscript 1 Baseline left parenthesis dot right parenthesisu1(·) is a solution of left parenthesis 3.7 right parenthesis Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis(3.7)u0(·). 
3.6 
Stationary Controls 
Suppose here that condition (3.14) holds for all controls v left parenthesis dot right parenthesisv(·) under consideration, 
cf. Lemma 3.4. Having a method for the construction of improved approximative 
controls u Superscript 1 Baseline left parenthesis dot right parenthesis element of upper M left parenthesis u Superscript 0 Baseline left parenthesis dot right parenthesis right parenthesisu1(·) ∈M
 
u0(·)
 
related to an initial control u Superscript 0 Baseline left parenthesis dot right parenthesis element of upper Du0(·) ∈D, we consider now 
the construction of stationary controls of the control problem (3.7), i.e., elements 
ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D¯u(·) ∈D such that ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper M left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis¯u(·) ∈M
 
¯u(·)
 
, see Deﬁnition 3.5. 
Starting again with formula (3.27), by means of (3.14), for an element v left parenthesis dot right parenthesis element of upper Dv(·) ∈D
we have

3.6 Stationary Controls
91
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper F prime Subscript plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis equals upper F prime Subscript v left parenthesis dot right parenthesis plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper E left parenthesis upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y Subscript v Baseline left parenthesis t comma omega right parenthesis plus b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma v left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t comma EndLayout F 
+
 
v(·); h(·)
 
= F 
v(·)+
 
v(·); h(·)
 
=
t f
 
t0
E
 
B
 
t, ω, v(·)
 T
yv(t, ω) + b
 
t, ω, v(·), v(·)
  T
h(t)dt, (3.38a) 
where 
y Subscript v Baseline left parenthesis t comma omega right parenthesis colon equals y Subscript v comma v Baseline left parenthesis t comma omega right parenthesisyv(t, ω) := yv,v(t, ω)
(3.38b) 
fulﬁlls, cf. (3.26a), (3.26b), the adjoint differential equation 
StartLayout 1st Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals minus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column Blank 3rd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayout ˙y(t, ω) = −A
 
t, ω, v(·)
 T
y(t, ω) −∇zL
 
t, ω, zv(t, ω), v(t)
 
(3.39a) 
StartLayout 1st Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals minus upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column Blank 3rd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z Subscript v Baseline left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayouty(t f , ω) = ∇zG
 
t f , ω, zv(t f , ω)
 
.
(3.39b) 
Moreover, cf. (3.16b), (3.16c), 
StartLayout 1st Row 1st Column upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript z Baseline g left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript u Baseline g left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis EndLayoutA
 
t, ω, v(·)
 
= Dzg
 
t, ω, zv(t, ω), v(t)
 
(3.39c) 
StartLayout 1st Row 1st Column upper A left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript z Baseline g left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper B left parenthesis t comma omega comma v left parenthesis dot right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript u Baseline g left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis EndLayoutB
 
t, ω, v(·)
 
= Dug
 
t, ω, zv(t, ω), v(t)
 
(3.39d) 
and, see (3.19b), 
b left parenthesis t comma omega comma v left parenthesis dot right parenthesis comma v left parenthesis dot right parenthesis right parenthesis equals nabla Subscript u Baseline upper L left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis commab
 
t, ω, v(·), v(·)
 
= ∇uL
 
t, ω, zv(t, ω), v(t)
 
,
(3.39e) 
where z Subscript v Baseline equals z Subscript v Baseline left parenthesis t comma omega right parenthesiszv = zv(t, ω) solves the dynamic equation 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis period backslash dummy EndLayout˙z(t, ω) = g
 
t, ω, z(t, ω), v(t)
 
, t0 ≤t ≤t f ,
(3.39f) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis period backslash dummy EndLayoutz(t0, ω) = z0(ω).
(3.39g) 
Using now the stochastic Hamiltonian, cf. (3.28a), 
upper H left parenthesis t comma omega comma z comma y comma u right parenthesis colon equals upper L left parenthesis t comma omega comma z comma u right parenthesis plus y Superscript upper T Baseline g left parenthesis t comma omega comma z comma u right parenthesisH(t, ω, z, y, u) := L(t, ω, z, u) + yT g(t, ω, z, u)
(3.40a) 
related to the basic control problem (3.9a)–(3.9d), from (3.38a), (3.38b), (3.39a)– 
(3.39g) we get the representation, cf. (3.28a), (3.28b), 
upper F prime Subscript plus Baseline left parenthesis v left parenthesis dot right parenthesis semicolon h left parenthesis dot right parenthesis right parenthesis equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper E nabla Subscript u Baseline upper H left parenthesis t comma omega comma z Subscript v Baseline left parenthesis t comma omega right parenthesis comma y Subscript v Baseline left parenthesis t comma omega right parenthesis comma v left parenthesis t right parenthesis right parenthesis Superscript upper T Baseline h left parenthesis t right parenthesis d t periodF 
+
 
v(·); h(·)
 
=
t f
 
t0
E∇u H
 
t, ω, zv(t, ω), yv(t, ω), v(t)
 T
h(t)dt.
(3.40b)

92
3
Optimal Control Under Stochastic Uncertainty
According to condition (3.13), a stationary control of (3.7), hence, an element 
ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D¯u(·) ∈D such thatModifyingAbove u With bar left parenthesis dot right parenthesis¯u(·) is an optimal solution ofleft parenthesis 3.7 right parenthesis Subscript ModifyingAbove u With bar left parenthesis dot right parenthesis(3.7)¯u(·) is characterized, see (3.14), 
by 
upper F prime Subscript plus Baseline left parenthesis ModifyingAbove u With bar left parenthesis dot right parenthesis semicolon u left parenthesis dot right parenthesis minus ModifyingAbove u With bar left parenthesis dot right parenthesis right parenthesis greater than or equals 0 f o r a l l u left parenthesis dot right parenthesis element of upper D periodF 
+
 
¯u(·); u(·) −¯u(·)
 
≥0 for all u(·) ∈D.
Thus, for stationary controlsModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D¯u(·) ∈D of problem (3.7) we have the characterization 
integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper E nabla Subscript u Baseline upper H left parenthesis t comma omega comma z Subscript ModifyingAbove u With bar Baseline left parenthesis t comma omega right parenthesis comma y Subscript ModifyingAbove u With bar Baseline left parenthesis t comma omega right parenthesis comma ModifyingAbove u With bar left parenthesis t right parenthesis right parenthesis Superscript upper T Baseline left parenthesis u left parenthesis t right parenthesis minus ModifyingAbove u With bar left parenthesis t right parenthesis right parenthesis d t greater than or equals 0 comma u left parenthesis dot right parenthesis element of upper D period
t f
 
t0
E∇u H
 
t, ω, z ¯u(t, ω), y¯u(t, ω), ¯u(t)
 T  
u(t) −¯u(t)
 
dt ≥0, u(·) ∈D. (3.41) 
Comparing (3.29) and (3.41), corresponding to (3.30a), (3.30b), for givenw left parenthesis dot right parenthesis element of upper Dw(·) ∈D
we introduce here the function 
ModifyingAbove upper H With quotation dash Subscript w Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper E upper H left parenthesis t comma omega comma z Subscript w Baseline left parenthesis t comma omega right parenthesis comma y Subscript w Baseline left parenthesis t comma omega right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t commaH w
 
u(·)
 
:=
t f
 
t0
E H
 
t, ω, zw(t, ω), yw(t, ω), u(t)
 
dt,
(3.42a) 
and we consider the optimization problem 
min ModifyingAbove upper H With quotation dash Subscript w Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis s period t period u left parenthesis dot right parenthesis element of upper D period min H w
 
u(·)
 
s.t. u(·) ∈D.
(3.42b) 
Remark 3.12 Because of the assumptions in Sect. 3.1.2, problem (3.42b) is (strictly) 
convex, provided that the process differential equation (3.1a) is afﬁne-linear with 
respect to uu, hence, 
ModifyingAbove z With dot left parenthesis t comma omega right parenthesis equals g left parenthesis t comma omega comma z comma u right parenthesis equals ModifyingAbove g With caret left parenthesis t comma omega comma z right parenthesis plus ModifyingAbove upper B With caret left parenthesis t comma omega comma z right parenthesis u˙z(t, ω) = g(t, ω, z, u) = ˆg(t, ω, z) + ˆB(t, ω, z)u
(3.43) 
with a given vector-, matrix-valued function ModifyingAbove g With caret equals ModifyingAbove g With caret left parenthesis t comma omega comma z right parenthesis comma ModifyingAbove upper B With caret equals ModifyingAbove upper B With caret left parenthesis t comma omega comma z right parenthesis ˆg = ˆg(t, ω, z), ˆB = ˆB(t, ω, z). 
If differentiation and integration/expectation in (3.42a) may be interchanged, 
which is assumed in the following, then (3.41) is a necessary condition for 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column ModifyingAbove u With bar left parenthesis dot right parenthesis element of a r g m i n ModifyingAbove upper H With quotation dash Subscript ModifyingAbove u With bar Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis comma 2nd Row 1st Column Blank 2nd Column Blank 3rd Column u left parenthesis dot right parenthesis element of upper D EndLayout ¯u(·) ∈argmin H ¯u
 
u(·)
 
,
(3.44) 
u(·) ∈ D 
cf. (3.30a), (3.30b), (3.31a), (3.31b). Corresponding to Theorem 3.4, here we have  
this result: 
Theorem 3.6 (Optimality condition for stationary controls) Suppose that a control 
ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D¯u(·) ∈D fulﬁlls (3.44). Then ModifyingAbove u With bar left parenthesis dot right parenthesis¯u(·) is a stationary control of (3.7).

3.7 Canonical (Hamiltonian) System of Differential
93
3.7 
Canonical (Hamiltonian) System of Differential 
Assume now again that the feasible domainupper DD is given by (3.32). In order to solve the 
optimization problem (3.42a), (3.42b), corresponding toleft parenthesis upper P right parenthesis Subscript u Sub Superscript 0 Subscript left parenthesis dot right parenthesis comma zeta comma eta Superscript t(P)t
u0(·),ζ,η, here we consider 
the ﬁnite-dimensional optimization problem 
min upper E upper H left parenthesis t comma omega comma zeta left parenthesis omega right parenthesis comma eta left parenthesis omega right parenthesis comma u right parenthesis s period t period u element of upper D Subscript t Baseline left parenthesis upper P right parenthesis Subscript zeta comma eta Superscript t
min E H
 
t, ω, ζ(ω), η(ω), u
 
s.t. u ∈Dt
(P)t
ζ,η
for each t comma t 0 less than or equals t less than or equals t Subscript f Baselinet, t0 ≤t ≤t f . Furthermore, we use again the following deﬁnition, cf. Def-
inition 3.6. 
Deﬁnition 3.7 For measurable functions zeta left parenthesis dot right parenthesis comma eta left parenthesis dot right parenthesisζ(·), η(·) on left parenthesis normal upper Omega comma script upper A comma upper P right parenthesis( , A, P), let denote 
ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma zeta left parenthesis dot right parenthesis comma eta left parenthesis dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 
u∗=  
u∗
 
t, ζ(·), η(·)
 
, t0 ≤t ≤t f ,
a solution of  left parenthesis upper P right parenthesis Subscript zeta comma eta Superscript t(P)t
ζ,η. The function ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma zeta left parenthesis dot right parenthesis comma eta left parenthesis dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 
u∗=  
u∗
 
t, ζ(·), η(·)
 
, t0 ≤t ≤t f , is called a 
bold upper HH-minimal control of (3.9a)–(3.9d). The stochastic Hamiltonian upper HH is called regu-
lar, strictly regular, resp., if a upper HH-minimal control exists, exists and is determined 
uniquely. 
For a given upper HH-minimal control u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t comma zeta left parenthesis dot right parenthesis comma eta left parenthesis dot right parenthesis right parenthesisu∗= u∗ 
t, ζ(·), η(·)
 
we consider now, see 
(3.34a)–(3.34d), the following canonical (Hamiltonian) two-point boundary value 
problem with random parameters: 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals minus upper D Subscript z Baseline g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline y left parenthesis t comma omega right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 7th Row 1st Column Blank 8th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column Blank 3rd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayout˙z(t, ω) = g
 
t, ω, z(t, ω), u∗ 
t, z(t, ·), y(t, ·)
  
, t0 ≤t ≤t f
(3.45a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals minus upper D Subscript z Baseline g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline y left parenthesis t comma omega right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 7th Row 1st Column Blank 8th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column Blank 3rd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayoutz(t0, ω) = z0(ω)
(3.45b) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals minus upper D Subscript z Baseline g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline y left parenthesis t comma omega right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 7th Row 1st Column Blank 8th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column Blank 3rd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayout ˙y(t, ω) = −Dzg
 
t, ω, z(t, ω), u∗ 
t, z(t, ·), y(t, ·)
  T
y(t, ω)
−∇zL
 
t, ω, z(t, ω), u∗ 
t, z(t, ·), y(t, ·)
  
, t0 ≤t ≤t f
(3.45c) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma omega right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals minus upper D Subscript z Baseline g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline y left parenthesis t comma omega right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column minus nabla Subscript z Baseline upper L left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u Superscript asterisk Baseline left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline 7th Row 1st Column Blank 8th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column Blank 3rd Column equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayouty(t f , ω) = ∇zG
 
t f , ω, z(t f , ω)
 
.
(3.45d) 
Remark 3.13 In case of a discrete distributionnormal upper Omega equals StartSet omega 1 comma ellipsis comma omega Subscript rho Baseline EndSet comma upper P left parenthesis omega equals omega Subscript j Baseline right parenthesis comma j equals 1 comma ellipsis comma rho = {ω1, . . . , ω }, P(ω = ω j), j =
1, . . . ,  , corresponding to Sect. 3.1, for  the upper HH-minimal control we have 
ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma z left parenthesis t comma omega 1 right parenthesis comma ellipsis comma z left parenthesis t comma omega Subscript rho Baseline right parenthesis comma y left parenthesis t comma omega 1 right parenthesis comma ellipsis comma y left parenthesis t comma omega Subscript rho Baseline right parenthesis right parenthesis period 
u∗=  
u∗
 
t, z(t, ω1), . . . , z(t, ω ), y(t, ω1), . . . , y(t, ω )
 
.
Thus, (3.45a)–(3.45d) is then an ordinary two-point boundary value problem for the 
2 rho2 unknown functions z equals z left parenthesis t comma omega Subscript j Baseline right parenthesis comma y equals y left parenthesis t comma omega Subscript j Baseline right parenthesis comma j equals 1 comma ellipsis comma rhoz = z(t, ω j), y = y(t, ω j), j = 1, . . . ,  .

94
3
Optimal Control Under Stochastic Uncertainty
Let denote left parenthesis ModifyingAbove z With bar comma ModifyingAbove y With bar right parenthesis equals left parenthesis ModifyingAbove z With bar left parenthesis t comma omega right parenthesis comma ModifyingAbove y With bar left parenthesis t comma omega right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of left parenthesis normal upper Omega comma German upper A comma upper P right parenthesis(¯z, ¯y) =
 
¯z(t, ω), ¯y(t, ω)
 
, t0 ≤t ≤t f , ω ∈( , A, P), the unique 
measurable solution of (3.45a)–(3.45d) and deﬁne: 
ModifyingAbove u With bar left parenthesis t right parenthesis colon equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma ModifyingAbove z With bar left parenthesis t comma dot right parenthesis comma ModifyingAbove y With bar left parenthesis t comma dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline period¯u(t) :=  
u∗
 
t, ¯z(t, ·), ¯y(t, ·)
 
,
t0 ≤t ≤t f .
(3.46) 
Due to (3.16e) and (3.38b), (3.39a), (3.39b) we have  
StartLayout 1st Row 1st Column ModifyingAbove z With bar left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals z Subscript u overbar Baseline left parenthesis t comma omega right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of left parenthesis normal upper Omega comma German upper A comma upper P right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y With bar left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals y Subscript u overbar Baseline left parenthesis t comma omega right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of left parenthesis normal upper Omega comma script upper A script comma script upper P script right parenthesis script comma EndLayout¯z(t, ω) = z ¯u(t, ω),
t0 ≤t ≤t f , ω ∈( , A, P)
(3.47a) 
StartLayout 1st Row 1st Column ModifyingAbove z With bar left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals z Subscript u overbar Baseline left parenthesis t comma omega right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of left parenthesis normal upper Omega comma German upper A comma upper P right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y With bar left parenthesis t comma omega right parenthesis 2nd Column Blank 3rd Column equals y Subscript u overbar Baseline left parenthesis t comma omega right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma omega element of left parenthesis normal upper Omega comma script upper A script comma script upper P script right parenthesis script comma EndLayout ¯y(t, ω) = y¯u(t, ω),
t0 ≤t ≤t f , ω ∈( , A, P),
(3.47b) 
hence, 
ModifyingAbove u With bar left parenthesis t right parenthesis equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma z Subscript ModifyingAbove u With bar Baseline left parenthesis t comma dot right parenthesis comma y Subscript ModifyingAbove u With bar Baseline left parenthesis t comma dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline period¯u(t) =  
u∗
 
t, z ¯u(t, ·), y¯u(t, ·)
 
,
t0 ≤t ≤t f .
(3.47c) 
Assuming that 
ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper U left parenthesis a n d t h e r e f o r e ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D right parenthesis comma¯u(·) ∈U
(and therefore ¯u(·) ∈D),
(3.48) 
we get this result: 
Theorem 3.7 Suppose that the Hamiltonian system (3.45a)–(3.45d) has a unique 
measurable solution left parenthesis ModifyingAbove z With bar comma ModifyingAbove y With bar right parenthesis equals left parenthesis ModifyingAbove z With bar left parenthesis t comma omega right parenthesis comma ModifyingAbove y With bar left parenthesis t comma omega right parenthesis right parenthesis(¯z, ¯y) =
 
¯z(t, ω), ¯y(t, ω)
 
, and deﬁne ModifyingAbove u With bar left parenthesis dot right parenthesis¯u(·) by (3.46) with a 
upper HH-minimal control ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma zeta comma eta right parenthesis 
u∗=  
u∗(t, ζ, η). If ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper U¯u(·) ∈U, then ModifyingAbove u With bar left parenthesis dot right parenthesis¯u(·) is a stationary control. 
Proof According to the construction of left parenthesis z overbar comma y overbar comma u overbar right parenthesis(¯z, ¯y, ¯u), the control ModifyingAbove u With bar left parenthesis dot right parenthesis element of upper D¯u(·) ∈D minimizes 
ModifyingAbove upper H With quotation dash Subscript ModifyingAbove u With bar Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesisH ¯u
 
u(·)
 
on upper DD. Hence, 
StartLayout 1st Row ModifyingAbove u With bar left parenthesis dot right parenthesis element of a r g m i n ModifyingAbove upper H With quotation dash Subscript ModifyingAbove u With bar Baseline left parenthesis u left parenthesis dot right parenthesis right parenthesis period 2nd Row u left parenthesis dot right parenthesis element of upper D EndLayout¯u(·) ∈argmin H ¯u
 
u(·)
 
.
u(·) ∈D
Theorem 3.6 yields then that ModifyingAbove u With bar left parenthesis dot right parenthesis¯u(·) is a stationary control.
 
3.8 
Computation of Expectations by Means of Taylor 
Expansions 
Corresponding to the assumptions in Sect. 3.1, based on a parametric representa-
tion of the random differential equation with a ﬁnite-dimensional random parameter 
vector theta equals theta left parenthesis omega right parenthesisθ = θ(ω), we suppose that

3.8 Computation of Expectations by Means of Taylor Expansions
95
StartLayout 1st Row 1st Column g left parenthesis t comma w comma z comma u right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove g With tilde left parenthesis t comma theta comma z comma u right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z 0 left parenthesis omega right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove z With tilde Subscript 0 Baseline left parenthesis theta right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper L left parenthesis t comma omega comma z comma u right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove upper L With tilde left parenthesis t comma theta comma z comma u right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper G left parenthesis t comma omega comma z right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove upper G With tilde left parenthesis t comma theta comma z right parenthesis period EndLayoutg(t, w, z, u) = ˜g(t, θ, z, u)
(3.49a) 
StartLayout 1st Row 1st Column g left parenthesis t comma w comma z comma u right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove g With tilde left parenthesis t comma theta comma z comma u right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z 0 left parenthesis omega right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove z With tilde Subscript 0 Baseline left parenthesis theta right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper L left parenthesis t comma omega comma z comma u right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove upper L With tilde left parenthesis t comma theta comma z comma u right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper G left parenthesis t comma omega comma z right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove upper G With tilde left parenthesis t comma theta comma z right parenthesis period EndLayoutz0(ω) = ˜z0(θ)
(3.49b) 
StartLayout 1st Row 1st Column g left parenthesis t comma w comma z comma u right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove g With tilde left parenthesis t comma theta comma z comma u right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z 0 left parenthesis omega right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove z With tilde Subscript 0 Baseline left parenthesis theta right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper L left parenthesis t comma omega comma z comma u right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove upper L With tilde left parenthesis t comma theta comma z comma u right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper G left parenthesis t comma omega comma z right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove upper G With tilde left parenthesis t comma theta comma z right parenthesis period EndLayoutL(t, ω, z, u) = ˜L(t, θ, z, u)
(3.49c) 
StartLayout 1st Row 1st Column g left parenthesis t comma w comma z comma u right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove g With tilde left parenthesis t comma theta comma z comma u right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z 0 left parenthesis omega right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove z With tilde Subscript 0 Baseline left parenthesis theta right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper L left parenthesis t comma omega comma z comma u right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove upper L With tilde left parenthesis t comma theta comma z comma u right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper G left parenthesis t comma omega comma z right parenthesis 2nd Column Blank 3rd Column equals ModifyingAbove upper G With tilde left parenthesis t comma theta comma z right parenthesis period EndLayoutG(t, ω, z) = ˜G(t, θ, z).
(3.49d) 
Here, 
theta equals theta left parenthesis omega right parenthesis comma omega element of left parenthesis normal upper Omega comma German upper A comma upper P right parenthesisθ = θ(ω), ω ∈( , A, P)
(3.49e) 
denotes the time-independentrr-vector of random model parameters and random ini-
tial values, andg overTilde comma z overTilde Subscript 0 Baseline comma upper L overTilde comma upper G overTilde ˜g, ˜z0, ˜L, ˜G are sufﬁciently smooth functions of the variables indicated 
in (3.49a)–(3.49d). For simpliﬁcation of notation we omit symbol “tilde∼” and write 
StartLayout 1st Row 1st Column g left parenthesis t comma w comma z comma u right parenthesis 2nd Column colon equals g left parenthesis t comma theta left parenthesis omega right parenthesis comma z comma u right parenthesis 3rd Column left parenthesis 3.49 a prime right parenthesis 2nd Row 1st Column z 0 left parenthesis omega right parenthesis 2nd Column colon equals z 0 left parenthesis theta left parenthesis omega right parenthesis right parenthesis 3rd Column left parenthesis 3.49 b prime right parenthesis 3rd Row 1st Column upper L left parenthesis t comma omega comma z comma u right parenthesis 2nd Column colon equals upper L left parenthesis t comma theta left parenthesis omega right parenthesis comma z comma u right parenthesis 3rd Column left parenthesis 3.49 c prime right parenthesis 4th Row 1st Column upper G left parenthesis t comma omega comma z comma u right parenthesis 2nd Column colon equals upper G left parenthesis t comma theta left parenthesis omega right parenthesis comma z right parenthesis period 3rd Column left parenthesis 3.49 d prime right parenthesis EndLayout
g(t, w, z, u) := g
 
t, θ(ω), z, u
 
(3.49a )
z0(ω)
:= z0
 
θ(ω)
 
(3.49b )
L(t, ω, z, u) := L
 
t, θ(ω), z, u
 
(3.49c )
G(t, ω, z, u) := G
 
t, θ(ω), z
 
.
(3.49d )
Since the approximate problem (3.17a)–(3.17d), obtained by the above described 
inner linearization, has the same basic structure as the original problem (3.9a)– 
(3.9d), it is sufﬁcient to describe the procedure for problem (3.9a)–(3.9d). Again, 
for simpliﬁcation, the conditional expectation upper E left parenthesis ellipsis vertical bar German upper A Subscript t 0 Baseline right parenthesisE(. . . |At0) given the information German upper A Subscript t 0At0
up to the considered starting time t 0t0 is denoted by “upper EE”. Thus, let denote 
ModifyingAbove theta With quotation dash equals ModifyingAbove theta With quotation dash Superscript t 0 Baseline colon equals upper E theta left parenthesis omega right parenthesis equals upper E left parenthesis theta left parenthesis omega right parenthesis vertical bar German upper A Subscript t 0 Baseline right parenthesisθ = θ
t0 := Eθ(ω) = E
 
θ(ω)|At0
 
(3.50a) 
the conditional expectation of the random vector theta left parenthesis omega right parenthesisθ(ω) given the information German upper A Subscript t 0At0 at 
time point t 0t0. Taking into account the properties of the solution 
z equals z left parenthesis t comma theta right parenthesis equals upper S left parenthesis z 0 left parenthesis theta right parenthesis comma theta comma u left parenthesis dot right parenthesis right parenthesis left parenthesis t right parenthesis comma t greater than or equals t 0 commaz = z(t, θ) = S
 
z0(θ), θ, u(·)
 
(t), t ≥t0,
(3.50b) 
of the dynamic equation (3.3a)–(3.3d), see Lemma 3.1, the expectations arising in 
the objective function (3.9a) can be computed approximatively by means of Taylor 
expansion with respect to thetaθ at ModifyingAbove theta With quotation dashθ.

96
3
Optimal Control Under Stochastic Uncertainty
3.8.1 
Complete Taylor Expansion 
Considering ﬁrst the costs upper LL along the trajectory we obtain, cf. [ 26], 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper L left parenthesis t comma theta comma z left parenthesis t comma theta right parenthesis comma u left parenthesis t right parenthesis right parenthesis equals upper L left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus left parenthesis nabla Subscript theta Baseline upper L left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis plus upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis Superscript upper T Baseline nabla Subscript z Baseline upper L left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis right parenthesis Superscript upper T Baseline left parenthesis theta minus ModifyingAbove theta With quotation dash right parenthesis 3rd Row 1st Column Blank 2nd Column Blank 3rd Column plus one half left parenthesis theta minus ModifyingAbove theta With quotation dash right parenthesis Superscript upper T Baseline upper Q Subscript upper L Baseline left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis left parenthesis theta minus ModifyingAbove theta With quotation dash right parenthesis plus ellipsis period EndLayout L
 
t, θ, z(t, θ), u(t)
 
= L
 
t, θ, z(t, θ), u(t)
 
+
 
∇θ L
 
t, θ, z(t, θ), u(t)
 
+ Dθz(t, θ)T ∇zL
 
t, θ, z(t, θ), u(t)
  T
(θ −θ)
+1
2(θ −θ)T QL
 
t, θ, z(t, θ), Dθz(t, θ), u(t)
 
(θ −θ) + . . . .
(3.51a) 
Retaining only ﬁrst-order derivatives of z equals z left parenthesis t comma theta right parenthesisz = z(t, θ) with respect to thetaθ, the approxi-
mative Hessian upper Q Subscript upper LQL of theta right arrow upper L left parenthesis t comma theta comma z left parenthesis t comma theta right parenthesis comma u right parenthesisθ →L
 
t, θ, z(t, θ), u
 
at theta equals ModifyingAbove theta With quotation dashθ = θ is given by 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper Q Subscript upper L Baseline left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis colon equals nabla Subscript theta Superscript 2 Baseline upper L left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis Superscript upper T Baseline nabla Subscript theta z Superscript 2 Baseline upper L left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis plus nabla Subscript theta z Superscript 2 Baseline upper L left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis Superscript upper T Baseline upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 3rd Row 1st Column Blank 2nd Column Blank 3rd Column plus upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis Superscript upper T Baseline nabla Subscript z Superscript 2 Baseline upper L left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis period EndLayout QL
 
t, θ, z(t, θ), Dθz(t, θ), u(t)
 
:= ∇2
θ L
 
t, θ, z(t, θ), u(t)
 
+Dθz(t, θ)T ∇2
θz L
 
t, θ, z(t, θ), u(t)
 
+ ∇2
θz L
 
t, θ, z(t, θ), u(t)
 T
Dθz(t, θ)
+Dθz(t, θ)T ∇2
z L
 
t, θ, z(t, θ), u(t)
 
Dθz(t, θ).
(3.51b) 
Here, nabla Subscript theta Baseline upper L comma nabla Subscript z Baseline upper L∇θ L, ∇zL denotes the gradient of upper LL with respect to theta comma zθ, z, resp., upper D Subscript theta Baseline zDθz is the 
Jacobian ofz equals z left parenthesis t comma theta right parenthesisz = z(t, θ) with respect tothetaθ, andnabla Subscript theta Superscript 2 Baseline upper L comma nabla Subscript z Superscript 2 Baseline upper L∇2
θ L, ∇2
z L, resp., denotes the Hessian 
of upper LL with respect to theta comma zθ, z. Moreover, nabla Subscript theta z Superscript 2 Baseline upper L∇2
θzL is the r times mr × m matrix of partial derivatives 
of upper LL with respect to theta Subscript iθi and z Subscript kzk, in this order. 
Taking expectations in (3.51a), from (3.51b) we obtain the expansion 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper E upper L left parenthesis t comma theta left parenthesis omega right parenthesis comma z left parenthesis t comma theta left parenthesis omega right parenthesis right parenthesis comma u left parenthesis t right parenthesis right parenthesis equals upper L left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus one half upper E left parenthesis theta left parenthesis omega right parenthesis minus ModifyingAbove theta With quotation dash right parenthesis Superscript upper T Baseline upper Q Subscript upper L Baseline left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis left parenthesis theta left parenthesis omega right parenthesis minus ModifyingAbove theta With quotation dash right parenthesis plus ellipsis 3rd Row 1st Column Blank 2nd Column equals 3rd Column upper L left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis plus one half t r upper Q Subscript upper L Baseline left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis c o v left parenthesis theta left parenthesis dot right parenthesis right parenthesis plus ellipsis period EndLayout
EL
 
t, θ(ω), z
 
t, θ(ω)
 
, u(t)
 
= L
 
t, θ, z(t, θ), u(t)
 
+1
2 E
 
θ(ω) −θ
 T
QL
 
t, θ, z(t, θ), Dθ z(t, θ), u(t)
  
θ(ω) −θ
 
+ . . .
= L
 
t, θ, z(t, θ), u(t)
 
+ 1
2tr QL
 
t, θ, z(t, θ), Dθ z(t, θ), u(t)
 
cov
 
θ(·)
 
+ . . . .(3.52) 
For the terminal costs upper GG, corresponding to the above expansion we ﬁnd 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper G left parenthesis t Subscript f Baseline comma theta comma z left parenthesis t Subscript f Baseline comma theta right parenthesis right parenthesis equals upper G left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash comma z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus left parenthesis nabla Subscript theta Baseline upper G left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash comma z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis plus upper D Subscript theta Baseline z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis Superscript upper T Baseline nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash comma z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis right parenthesis Superscript upper T Baseline left parenthesis theta minus ModifyingAbove theta With quotation dash right parenthesis 3rd Row 1st Column Blank 2nd Column Blank 3rd Column plus one half left parenthesis theta minus ModifyingAbove theta With quotation dash right parenthesis Superscript upper T Baseline upper Q Subscript upper G Baseline left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash comma z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis left parenthesis theta minus ModifyingAbove theta With quotation dash right parenthesis plus ellipsis comma EndLayout G
 
t f , θ, z(t f , θ)
 
= G
 
t f , θ, z(t f , θ)
 
+
 
∇θG
 
t f , θ, z(t f , θ)
 
+ Dθz(t f , θ)T ∇zG
 
t f , θ, z(t f , θ)
  T
(θ −θ)
+1
2(θ −θ)T QG
 
t f , θ, z(t f , θ), Dθz(t f , θ)
 
(θ −θ) + . . . ,
(3.53a)

3.8 Computation of Expectations by Means of Taylor Expansions
97
where upper Q Subscript upper GQG is deﬁned in the same way as upper Q Subscript upper LQL, see  (3.51a). Taking expectations with 
respect to theta left parenthesis omega right parenthesisθ(ω), we get 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper E upper G left parenthesis t Subscript f Baseline comma theta left parenthesis omega right parenthesis comma z left parenthesis t Subscript f Baseline comma theta left parenthesis omega right parenthesis right parenthesis right parenthesis equals upper G left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash comma z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus one half t r upper Q Subscript upper G Baseline left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash comma z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis c o v left parenthesis theta left parenthesis dot right parenthesis right parenthesis plus ellipsis period EndLayout EG
 
t f , θ(ω), z
 
t f , θ(ω)
  
= G
 
t f , θ, z(t f , θ)
 
+1
2tr QG
 
t f , θ, z(t f , θ), Dθz(t f , θ)
 
cov
 
θ(·)
 
+ . . . .
(3.53b) 
Note 3.4 Corresponding to Deﬁnition 3.1 and (3.50a), for the mean and covariance 
matrix of the random parameter vector theta equals theta left parenthesis omega right parenthesisθ = θ(ω) we have 
StartLayout 1st Row 1st Column ModifyingAbove theta With quotation dash 2nd Column equals 3rd Column ModifyingAbove theta With quotation dash Superscript left parenthesis t 0 right parenthesis Baseline colon equals upper E left parenthesis theta left parenthesis omega right parenthesis vertical bar German upper A Subscript t 0 Baseline right parenthesis 2nd Row 1st Column c o v left parenthesis theta left parenthesis dot right parenthesis right parenthesis 2nd Column equals 3rd Column c o v Superscript left parenthesis t 0 right parenthesis Baseline left parenthesis theta left parenthesis dot right parenthesis right parenthesis colon equals upper E left parenthesis left parenthesis theta left parenthesis omega right parenthesis minus ModifyingAbove theta With quotation dash Superscript left parenthesis t 0 right parenthesis Baseline right parenthesis left parenthesis theta left parenthesis omega right parenthesis minus ModifyingAbove theta With quotation dash Superscript left parenthesis t 0 right parenthesis Baseline right parenthesis Superscript upper T Baseline vertical bar German upper A Subscript t 0 Baseline right parenthesis period EndLayoutθ = θ
(t0) := E
 
θ(ω)|At0
 
cov
 
θ(·)
 
= cov(t0) 
θ(·)
 
:= E
  
θ(ω) −θ
(t0)  
θ(ω) −θ
(t0) T    At0
 
.
3.8.2 
Inner or Partial Taylor Expansion 
Instead of a complete expansion of upper L comma upper GL, G with respect to thetaθ, appropriate approxima-
tions of the expected costs upper E upper LEL,upper E upper GEG, resp., may be obtained by the inner ﬁrst-order 
approximation of the trajectory, hence, 
StartLayout 1st Row upper L left parenthesis t comma theta comma z left parenthesis t comma theta right parenthesis comma u left parenthesis t right parenthesis right parenthesis almost equals upper L left parenthesis t comma theta comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis plus upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis left parenthesis theta minus ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis period EndLayoutL
 
t, θ, z(t, θ), u(t)
 
≈L
 
t, θ, z(t, θ) + Dθz(t, θ)(θ −θ), u(t)
 
. (3.54a) 
Taking expectations in (3.54a), for the expected cost function we get the approx-
imation 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper E upper L left parenthesis t comma theta comma z left parenthesis t comma theta right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column almost equals upper E upper L left parenthesis t comma theta left parenthesis omega right parenthesis comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis plus upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis left parenthesis theta left parenthesis omega right parenthesis minus ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis period EndLayout EL
 
t, θ, z(t, θ), u(t)
 
≈EL
 
t, θ(ω), z(t, θ) + Dθz(t, θ)(θ(ω) −θ), u(t)
 
.
(3.54b) 
In many important cases, as, e.g., for cost functionsupper LL being quadratic with respect to 
the state variable zz, the above expectation can be computed analytically. Moreover, 
if the cost function upper LL is convex with respect to zz, then the expected cost function 
upper E upper LEL is convex with respect to both, the state vector z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesisz(t, θ) and the Jacobian matrix 
of sensitivities upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesisDθz(t, θ) evaluated at the mean parameter vector ModifyingAbove theta With quotation dashθ. 
Having the approximate representations (3.52), (3.53b), (3.54b), resp., of the 
expectations occurring in the objective function (3.9a), we still have to compute the 
trajectory t right arrow z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma t greater than or equals t 0t →z(t, θ), t ≥t0, related to the mean parameter vector theta equals ModifyingAbove theta With quotation dashθ = θ and the 
sensitivities t right arrow StartFraction partial differential z Over partial differential theta Subscript i Baseline EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma i equals 1 comma ellipsis comma r comma t greater than or equals t 0t →∂z
∂θi (t, θ), i = 1, . . . ,r, t ≥t0, of the state z equals z left parenthesis t comma theta right parenthesisz = z(t, θ) with respect

98
3
Optimal Control Under Stochastic Uncertainty
to the parameters theta Subscript i Baseline comma i equals 1 comma ellipsis comma rθi, i = 1, . . . ,r, at  theta equals ModifyingAbove theta With quotation dashθ = θ. According to (3.3a), (3.3b) or (3.9b), 
(3.9c), for z equals z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesisz = z(t, θ) we have the system of differential equations 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis period EndLayout˙z(t, θ) = g
 
t, θ, z(t, θ), u(t)
 
, t ≥t0,
(3.55a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis period EndLayoutz(t0, θ) = z0(θ).
(3.55b) 
Moreover, assuming that differentiation with respect to theta Subscript i Baseline comma i equals 1 comma ellipsis comma rθi, i = 1, . . . ,r, and inte-
gration with respect to time tt can be interchanged, see Lemma 3.1, from (3.3c) we  
obtain the following system of linear perturbation the differential equation for the 
Jacobian upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis equals left parenthesis StartFraction partial differential z Over partial differential theta 1 EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma StartFraction partial differential z Over partial differential theta 2 EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma ellipsis comma StartFraction partial differential z Over partial differential theta Subscript r Baseline EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis comma t greater than or equals t 0Dθz(t, θ) =
 
∂z
∂θ1 (t, θ), ∂z
∂θ2 (t, θ), . . . , ∂z
∂θr (t, θ)
 
, t ≥t0: 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction left parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript z Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus upper D Subscript theta Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 3rd Row 1st Column Blank 4th Row 1st Column upper D Subscript theta Baseline z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript theta Baseline z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis period EndLayout d
dt
 
Dθz(t, θ)
 
= Dzg
 
t, θ, z(t, θ), u(t)
 
Dθz(t, θ)
+Dθg
 
t, θ, z(t, θ), u(t)
 
, t ≥t0,
(3.56a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction left parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript z Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus upper D Subscript theta Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 3rd Row 1st Column Blank 4th Row 1st Column upper D Subscript theta Baseline z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript theta Baseline z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis period EndLayoutDθz(t0, θ) = Dθz0(θ).
(3.56b) 
Note 3.5 Equations (3.56a), (3.56b) is closely related to the perturbation equation 
(3.16a), (3.16b) for representing the derivative upper D Subscript u Baseline zDuz of zz with respect to the control 
uu. Moreover, the matrix differential equation (3.56a) can be decomposed into the 
following rr differential equations for the columns StartFraction partial differential z Over partial differential theta Subscript j Baseline EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma j equals 1 comma ellipsis comma r ∂z
∂θ j (t, θ), j = 1, . . . ,r: 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction left parenthesis StartFraction partial differential z Over partial differential theta Subscript j Baseline EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Column Blank 3rd Column equals StartFraction partial differential g Over partial differential theta Subscript j Baseline EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis StartFraction partial differential z Over partial differential theta Subscript j Baseline EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus StartFraction partial differential g Over partial differential theta Subscript j Baseline EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma j equals 1 comma ellipsis comma r period EndLayout d
dt
 ∂z
∂θ j
(t, θ)
 
= ∂g
∂θ j
 
t, θ, z(t, θ), u(t)
 ∂z
∂θ j
(t, θ)
+ ∂g
∂θ j
 
t, θ, z(t, θ), u(t)
 
, t ≥t0, j = 1, . . . ,r.
(3.56c) 
Denoting by 
StartLayout 1st Row ModifyingAbove upper L With tilde equals ModifyingAbove upper L With tilde left parenthesis t comma theta comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma EndLayout ˜L = ˜L
 
t, θ, z(t, θ), Dθz(t, θ), u(t)
 
,
(3.57a) 
StartLayout 1st Row ModifyingAbove upper G With tilde equals ModifyingAbove upper G With tilde left parenthesis t Subscript f Baseline comma theta comma z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis comma EndLayout ˜G = ˜G
 
t f , θ, z(t f , θ), Dθz(t f , θ)
 
,
(3.57b) 
the approximation of the cost functionsupper LL,upper GG by complete, partial Taylor expansion, 
for the optimal control problem under stochastic uncertainty (3.9a)–(3.9d) we now  
obtain the following approximation: 
Theorem 3.8 Suppose that differentiation with respect to the parameters theta Subscript i Baseline comma i equals 1 comma ellipsis comma rθi, i =
1, . . . ,r, and integration with respect to timett can be interchanged in (3.3c). Retain-
ing only ﬁrst-order derivatives of z equals z left parenthesis t comma theta right parenthesisz = z(t, θ) with respect to thetaθ, the optimal control

3.8 Computation of Expectations by Means of Taylor Expansions
99
problem under stochastic uncertainty (3.9a)–(3.9d) can be approximated by the ordi-
nary deterministic control problem: 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column min integral Subscript t 0 Superscript t Subscript f Baseline upper E ModifyingAbove upper L With tilde left parenthesis t comma theta left parenthesis omega right parenthesis comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t 2nd Row 1st Column Blank 2nd Column Blank 3rd Column plus upper E upper G overTilde left parenthesis t Subscript f Baseline comma theta left parenthesis omega right parenthesis comma z left parenthesis t Subscript f Baseline comma ModifyingAbove theta With quotation dash comma upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis EndLayout min
t f
 
t0
E ˜L
 
t, θ(ω), z(t, θ), Dθz(t, θ), u(t)
 
dt
+E ˜G
 
t f , θ(ω), z(t f , θ, Dθz(t, θ)
 
(3.58a) 
subject to 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction left parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript z Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column plus upper D Subscript theta Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 7th Row 1st Column Blank 8th Row 1st Column upper D Subscript theta Baseline z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript theta Baseline z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 9th Row 1st Column Blank 10th Row 1st Column u left parenthesis dot right parenthesis 2nd Column Blank 3rd Column element of upper D period EndLayout˙z(t, θ) = g
 
t, θ, z(t, θ), u(t)
 
, t ≥t0,
(3.58b) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction left parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript z Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column plus upper D Subscript theta Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 7th Row 1st Column Blank 8th Row 1st Column upper D Subscript theta Baseline z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript theta Baseline z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 9th Row 1st Column Blank 10th Row 1st Column u left parenthesis dot right parenthesis 2nd Column Blank 3rd Column element of upper D period EndLayoutz(t0, θ) = z0(θ)
(3.58c) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction left parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript z Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column plus upper D Subscript theta Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 7th Row 1st Column Blank 8th Row 1st Column upper D Subscript theta Baseline z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript theta Baseline z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 9th Row 1st Column Blank 10th Row 1st Column u left parenthesis dot right parenthesis 2nd Column Blank 3rd Column element of upper D period EndLayout d
dt
 
Dθz(t, θ)
 
= Dzg
 
t, θ, z(t, θ), u(t)
 
Dθz(t, θ)
+Dθg
 
t, θ, z(t, θ), u(t)
 
, t ≥t0,
(3.58d) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction left parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript z Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column plus upper D Subscript theta Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 7th Row 1st Column Blank 8th Row 1st Column upper D Subscript theta Baseline z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript theta Baseline z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 9th Row 1st Column Blank 10th Row 1st Column u left parenthesis dot right parenthesis 2nd Column Blank 3rd Column element of upper D period EndLayoutDθz(t0, θ) = Dθz0(θ)
(3.58e) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction left parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript z Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 6th Row 1st Column Blank 2nd Column Blank 3rd Column plus upper D Subscript theta Baseline g left parenthesis t comma ModifyingAbove theta With quotation dash comma z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma 7th Row 1st Column Blank 8th Row 1st Column upper D Subscript theta Baseline z left parenthesis t 0 comma ModifyingAbove theta With quotation dash right parenthesis 2nd Column Blank 3rd Column equals upper D Subscript theta Baseline z 0 left parenthesis ModifyingAbove theta With quotation dash right parenthesis 9th Row 1st Column Blank 10th Row 1st Column u left parenthesis dot right parenthesis 2nd Column Blank 3rd Column element of upper D period EndLayoutu(·) ∈D.
(3.58f) 
Remark 3.14 Obviously, the trajectory of the above deterministic substitute control 
problem (3.58a)–(3.58f) of the original optimal control problem under stochastic 
uncertainty (3.9a)–(3.9d) can be represented by the m left parenthesis r plus 1 right parenthesis minusm(r + 1)−vector function: 
t right arrow xi left parenthesis t right parenthesis colon equals Start 4 By 1 Matrix 1st Row z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 2nd Row StartFraction partial differential z Over partial differential theta 1 EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis 3rd Row vertical ellipsis 4th Row StartFraction partial differential z Over partial differential theta Subscript r Baseline EndFraction left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis EndMatrix comma t 0 less than or equals t less than or equals t Subscript f Baseline periodt →ξ(t) :=
⎛
⎜⎜⎜⎝
z(t, θ)
∂z
∂θ1 (t, θ)
...
∂z
∂θr (t, θ)
⎞
⎟⎟⎟⎠,
t0 ≤t ≤t f .
(3.59) 
Remark 3.15 Constraints of the expectation type (3.9f), i.e., 
upper E h Subscript upper I upper I Baseline left parenthesis t comma theta left parenthesis omega right parenthesis comma z left parenthesis t comma theta left parenthesis omega right parenthesis right parenthesis right parenthesis less than or equals left parenthesis equals right parenthesis 0EhI I
 
t, θ(ω), z
 
t, θ(ω)
  
≤(=)0
can be evaluated as in (3.52) and (3.53b). This yields then deterministic constraints 
for the unknown functions t right arrow z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesist →z(t, θ) and t right arrow upper D Subscript theta Baseline z left parenthesis t comma ModifyingAbove theta With quotation dash right parenthesis comma t greater than or equals t 0t →Dθz(t, θ), t ≥t0. 
Remark 3.16 The expectations upper E upper H Subscript u Sub Superscript degrees Subscript left parenthesis dot right parenthesis Baseline comma upper E upper HE Hu◦(·), E H arising in left parenthesis upper P right parenthesis Subscript u Sub Superscript degrees Subscript left parenthesis dot right parenthesis comma zeta comma eta Superscript t Baseline comma left parenthesis upper P right parenthesis Subscript zeta comma eta Superscript t(P)t
u◦(·),ζ,η, (P)t
ζ,η, resp., 
can be determined approximatively as described above.

100
3
Optimal Control Under Stochastic Uncertainty
References 
1. Allgöwer, F.E.A. (ed.): Nonlinear Model Predictive Control. Birkhäuser Verlag, Basel (2000) 
2. Aoki, M.: Optimization of Stochastic Systems - Topics in Discrete-Time Systems. Academic, 
New York (1967) 
3. Åström, K.: Introduction to Stochastic Control Theory. Elsevier (1970) 
4. Barucha-Reid, A.: Random Integral Equations. Academic, New York (1972) 
5. Bauer, H.: Wahrscheinlichkeitstheorie und Grundzüge der Masstheorie. Walter de Gruyter & 
Co., Berlin (1968) 
6. Bunke, H.: Gewöhnliche Differentialgleichungen mit zufälligen Parametern. Akademie-Verlag, 
Berlin (1972) 
7. Carathéodory, C.: Vorlesungen über reelle Funktionen. Teubner, Leipzig (1918) 
8. Dieudonné, J.: Foundations of Modern Analysis. Academic, New York (1969) 
9. Dreyfus, S.E., Lew, A.: The Art of Dynamic Programming. Academic, New York (1977) 
10. Dreyfus, S.: Some types of optimal control of stochastic systems. J. SIAM Control 2(1), 120– 
134 (1964) 
11. Dreyfus, S.: Dynamic Programming and the Calculus of Variations. Academic, New York 
(1965) 
12. Dullerud, G., Paganini, F.: A Course in Robust Control Theory. Springer, New York (2000) 
13. Findeisen, R., et al.: Sampled–data nonlinear model predictive control for constrained continu-
ous time systems. In: Tarbouriech, S., et al. (ed.) Adaptive Strategies in Control Systems With 
Input and Output Constraints, pp. 207–235. Springer, Berlin (2007) 
14. Garcia, C.E., et al.: Model predictive control: theory and practice - a survey. Automatica 25(3), 
335–348 (1989). https://doi.org/10.1016/0005-1098(89)90002-2 
15. Gessing, R., Jacobs, O.L.R.: On the equivalence between optimal stochastic control and 
open-loop feedback control. Int. J. Control 40(1), 193–200 (1984). https://doi.org/10.1080/ 
00207178408933267 
16. Holmes, R.: A course on opimization and best approximation. Lecture Notes in Mathematics, 
vol. 257. Springer, Berlin (1972) 
17. Howard, R.: Dynamic Probabilistic Systems. Wiley, New York (1971) 
18. Kalman, R., et al.: Topics in Mathematical System Theory. McGraw-Hill Book Company, New 
York (1969) 
19. Ku, R., Athans, M.: On the adaptive control of linear systems using the open-loop feedback 
optimal approach. IEEE Tran. Autom. Control 18, 489–493 (1973) 
20. Luenberger, D.: Optimization by Vector Space Methods. Wiley, New York (1969) 
21. Marti, K.: Convex approximations of stochastic optimization problems. Methods Oper. Res. 
20, 66–76 (1975) 
22. Marti, K.: Approximationen stochastischer Optimierungsprobleme. Hain Konigstein/Ts (1979) 
23. Marti, K.: Stochastic optimization methods in robust adaptive control of robots. In: Groetschel, 
M.E.A. (ed.) Online Optimization of Large Scale Systems, pp. 545–577. Springer, Berlin (2001) 
24. Marti, K.: Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC) for Robots, 
pp. 155–206. Springer, Berlin (2004) 
25. Marti, K.: Stochastic nonlinear model predictive control (snmpc). In: 79th Annual Meeting 
of the International Association of Applied Mathematics and Mechanics (GAMM), Bremen 
2008, PAMM, vol. 8, Issue 1, pp. 10775–10776. Wiley-VCH (2008) 
26. Marti, K.: Stochastic Optimization Methods, 2nd edn. Springer, Berlin (2008). https://doi.org/ 
10.1007/978-3-540-79458-5 
27. Marti, K.: Continuous-time control under stochastic uncertainty. In: Cochran, J.E.A., (ed.) 
Wiley Encyclopedia of Operations Research and Management Science (EORMS). Wiley, 
Hoboken (2010). https://doi.org/10.1002/9780470400531.eorms0839 
28. Marti, K.: Optimal control of dynamical systems and structures under stochastic uncertainty: 
stochastic optimal feedback control. Adv. Engin. Softw. (AES) 46, 43–62 (2012). https://doi. 
org/10.1016/j.advengsoft.2010.09.008

References
101
29. Marti, K.: Stochastic optimal structural control: Stochastic optimal open-loop feedback control. 
Adv. Engin. Softw. 44(1), 26–34 (2012). https://doi.org/10.1016/j.advengsoft.2011.05.040. 
CIVIL-COMP 
30. Marti, K., Gröger, D.: Einführung in die lineare und nichtlineare Optimierung. Springer, Berlin 
(2000) 
31. Marti, K., Stein, I.: Computing stochastic optimal feedback controls using an iterative solution 
of the hamiltonian system (2013). https://doi.org/10.4203/ccp.102.109 
32. Natanson, L.: Theorie der Funktionen einer reellen Veränderlichen. Verlag Harri Deutsch, 
Zürich (1977) 
33. Øksendal, B.: Stochastic Differential Equations. Universitext. Springer, Berlin (2000) 
34. Richalet, J., et al.: Model predictive heuristic control: applications to industrial processes. 
Automatica 14, 413–428 (1978). https://doi.org/10.1016/0005-1098(78)90001-8 
35. Schacher, M.: Stochastisch optimale Regelung von Robotern. No. 1200 in Fortschritt-Berichte 
VDI, Reihe 8, Mess-, Steuerungs- und Regelungstechnik. VDI Verlag GmbH, Düsseldorf 
(2011) 
36. Smirnov, W.: Lehrgang der Höheren Mathematik, Teil IV. Deutscher Verlag der Wissenschaft, 
Berlin (1966) 
37. Soong, T.: Active Structural Control: Theory and Practice. Wiley, New York (1990) 
38. Stengel, R.: Stochastic Optimal Control: Theory and Application. Wiley, New York (1986) 
39. Tse, E., Athans, M.: Adaptive stochastic control for a class of linear systems. IEEE Trans. 
Autom. Control 17(1), 38–52 (1972) 
40. Walter, W.: Gewöhnliche Differentialgleichungen. Springer, Berlin (2000)

Chapter 4 
Random Search Methods for Global 
Optimization—Basics 
Abstract Random Search Methods for solving deterministic optimization prob-
lems, as arising in the deterministic substitute problems of stochastic optimiza-
tion and stochastic optimal control problems, are considered in this chapter and 
Chaps. 5–7. Besides mathematical optimization techniques, one of the major meth-
ods for solving deterministic parameter optimization problems is random search 
methods (RSM), for the following reason: Solving optimization problems from engi-
neering and economics, one meets often the following situation: One should ﬁnd the 
global optimum, hence, most of the deterministic programming procedures, which 
are based on local improvements of the performance indexupper F left parenthesis x right parenthesisF(x), will fail: Concern-
ing the objective functionupper FF one has a black-box—situation, i.e., there is only few a 
priori information about the structure ofupper FF, especially there is no knowledge about the 
direct functional relationship between the control or input vectorx element of upper Dx ∈D and its index 
of performanceupper F left parenthesis x right parenthesisF(x); hence—besides the more or less detailed a priori information 
about upper FF—the only way of getting objective information about the structure of upper FF is 
via evaluations of its values upper F left parenthesis x right parenthesisF(x) by experiments or by means of a numerical pro-
cedure simulating the technical plant. After explaining the basic (RSM)-algorithm, 
conditions are presented guaranteeing the convergence, in some stochastic sense, of 
the search method to a global optimum. As an example, the random search method 
bis applied to discrete optimization problems. Since, especially toward the optimum, 
the speed of convergence may become rather low, possibilities for acceleration of 
(RSM) are considered. A basic method, which will be further developed in the next 
chapters, is to control the distribution of the search variates. 
4.1 
Introduction 
Solving optimization problems from engineering, as, e.g., parameter—or process— 
optimization problems 
min upper F left parenthesis x right parenthesis s period t period x element of upper D comma min F(x)
s.t. x ∈D,
(4.1) 
where upper DD is a subset of double struck upper R Superscript nRn, one meets often the following situation: 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_4 
103

104
4
Random Search Methods for Global Optimization—Basics
(a) One should ﬁnd the global optimum in (4.1), hence most of the deterministic 
programming procedures, which are based on local improvements of the perfor-
mance index upper F left parenthesis x right parenthesisF(x), will fail. 
(b) Concerning the objective functionupper FF one has a black-box—situation, i.e., there 
is only few a priori information about the structure of upper FF, especially there is no 
knowledge about the direct functional relationship between the control or input 
vector x element of upper Dx ∈D and its index of performance upper F left parenthesis x right parenthesisF(x); hence—besides the more or 
less detailed a priori information about upper FF—the only way of getting objective 
information about the structure of upper FF is via evaluations of its values upper F left parenthesis x right parenthesisF(x) by 
experiments or by means of a numerical procedure simulating the technical 
plant. 
Consequently, engineers use in these situations often a certain search procedure 
for ﬁnding an optimal vectorxx, see, e.g., Box’ EVOP method in [ 2] and the random 
search methods as ﬁrst proposed by Anderson [ 1], Brooks [ 3] and Karnopp [ 5]. 
Obviously, deterministic search methods can be considered as special stochastic 
ones. 
In the basic random search routine considered in this section—allowing not only 
local improvements as in mathematical programming—a sequence ofnn-random vec-
tors upper X 0 comma upper X 1 comma ellipsis comma upper X Subscript t Baseline comma ellipsisX0, X1, . . . , Xt, . . . in upper DD is constructed according to the following recurrence 
relation: 
upper X Subscript t plus 1 Baseline colon equals StartLayout Enlarged left brace 1st Row 1st Column z Subscript t plus 1 Baseline comma z Subscript t plus 1 Baseline element of upper D a n d upper F left parenthesis z Subscript t plus 1 Baseline right parenthesis 2nd Column less than upper F left parenthesis upper X Subscript t Baseline right parenthesis 2nd Row 1st Column upper X Subscript t Baseline comma i f z Subscript t plus 1 Baseline not an element of upper D o r upper F left parenthesis z Subscript t plus 1 Baseline right parenthesis 2nd Column greater than or equals upper F left parenthesis upper X Subscript t Baseline right parenthesis comma EndLayoutXt+1 :=
 zt+1, zt+1 ∈D and F(zt+1) < F(Xt)
Xt, if zt+1 /∈D or F(zt+1) ≥F(Xt),
(4.2a) 
t equals 0 comma 1 comma 2 comma ellipsist = 0, 1, 2, . . ., where the starting point upper X 0 colon equals x 0X0 := x0 is a realization x 0x0 of the random 
vector upper X 0X0 having the given distribution upper P Subscript upper X 0 Baseline colon equals pi Subscript s t a r tPX0 := πstart concentrated on the domain 
upper D Subscript s t a r tDstart. In many cases we have upper D Subscript s t a r t Baseline subset of upper DDstart ⊂D. If the search process starts at a given, 
ﬁxed point x 0x0, then pi Subscript s t a r t Baseline equals epsilon Subscript x 0πstart = εx0, where epsilon Subscript x 0εx0 denotes the one-point measure at the 
point x 0x0. Moreover, z 1 equals upper Z 1 left parenthesis omega right parenthesis comma z 2 equals upper Z 2 left parenthesis omega right parenthesis comma ellipsisz1 = Z1(ω), z2 = Z2(ω), . . . are realizations of nn-random vec-
tors upper Z 1 comma upper Z 2 comma ellipsisZ1, Z2, . . . such that 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper P left parenthesis upper Z Subscript t plus 1 Baseline element of upper B vertical bar upper X 0 equals x 0 comma upper X 1 equals x 1 comma ellipsis comma upper X Subscript t Baseline equals x Subscript t Baseline comma upper Z 1 equals z 1 comma upper Z 2 equals z 2 comma ellipsis comma upper Z Subscript t Baseline equals z Subscript t Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals 3rd Column upper P left parenthesis upper Z Subscript t plus 1 Baseline element of upper B vertical bar upper X 0 equals x 0 comma upper X 1 equals x 1 comma ellipsis comma upper X Subscript Baseline t equals x Subscript t Baseline right parenthesis equals pi Subscript t Baseline left parenthesis x Superscript t Baseline comma upper B right parenthesis comma EndLayout
P
(
Zt+1 ∈B|X0 = x0, X1 = x1, . . . , Xt = xt, Z1 = z1, Z2 = z2, . . . , Zt = zt
)
= P
(
Zt+1 ∈B|X0 = x0, X1 = x1, . . . , Xt = xt
)
= πt(xt, B),
(4.2b) 
where x Superscript t Baseline colon equals left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline right parenthesisxt := (x0, x1, . . . , xt) and pi Subscript t Baseline left parenthesis x Superscript t Baseline comma dot right parenthesisπt(xt, ·) is a given transition probability distribu-
tion, as, e.g., a joint normal distribution with meanx Subscript txt and covariance matrixupper Q equals upper Q Subscript tQ = Qt. 
According to Deﬁnition (4.2a), given the states upper X Superscript t Baseline equals x Superscript tXt = xt, ﬁrst an nn-vector z Subscript t plus 1zt+1 is 
generated randomly according to the distribution pi Subscript t Baseline left parenthesis x Superscript t Baseline comma dot right parenthesisπt(xt, ·). Then, if z Subscript t plus 1zt+1 drops into 
the area of success upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesisG F(xt), where 
upper G Subscript upper F Baseline left parenthesis x right parenthesis colon equals StartSet y element of upper D colon upper F left parenthesis y right parenthesis less than upper F left parenthesis x right parenthesis EndSet commaG F(x) :=
{
y ∈D : F(y) < F(x)
}
,
(4.3) 
we move to upper X Subscript t plus 1 Baseline equals z Subscript t plus 1Xt+1 = zt+1, otherwise we stay at upper X Subscript t plus 1 Baseline equals upper X Subscript tXt+1 = Xt. Thus, the whole search 
process upper X Subscript t Baseline right parenthesisXt) stays within the union upper D 0 colon equals upper D Subscript s t a r t union upper DD0 := Dstart ∪D of the domain of the starting

4.2 The Convergence of the Basic Random Search Procedure
105
points and the feasible domain of the basic optimization problem (4.1). If the set of 
starting points upper D Subscript s t a r t Baseline subset of upper DDstart ⊂D is contained in the feasible domain upper DD, then upper D 0 equals upper DD0 = D. 
Moreover, we observe that ifupper X Subscript t plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesisXt+1 ∈G F(xt), then alsoupper X Subscript s Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesisXs ∈G F(xt) for alls greater than ts > t. 
Furthermore, ifupper F Superscript asterisk Baseline equals inf left brace upper F left parenthesis x right parenthesis colon x element of upper D right braceF∗= inf
{
F(x) : x ∈D
}
and, for given levelsepsilon greater than 0 comma upper M less than 0ε > 0, M < 0, resp., 
the set of epsilon minus comma upper M minusε−, M−optimal solutions of (4.1) is deﬁned by 
upper B Subscript epsilon comma upper M Baseline colon equals left brace y element of upper D colon upper F left parenthesis y right parenthesis less than or equals upper F Superscript asterisk Baseline plus epsilon comma i f upper F Superscript asterisk Baseline element of double struck upper R comma upper F left parenthesis y right parenthesis less than or equals upper M comma i f upper F Superscript asterisk Baseline equals negative normal infinity comma r e s p period right brace commaBε,M :=
{
y ∈D : F(y) ≤F∗+ ε, if F∗∈R, F(y) ≤M, if F∗= −∞, resp.
}
,
(4.4a) 
then 
upper X Subscript s Baseline element of upper B Subscript epsilon comma upper M Baseline right double arrow upper X Subscript s plus 1 Baseline element of upper B Subscript epsilon comma upper M Baseline comma s equals 0 comma 1 comma 2 comma ellipsis periodXs ∈Bε,M ⇒Xs+1 ∈Bε,M,
s = 0, 1, 2, . . . .
(4.4b) 
Hence, 
upper P left parenthesis upper X Subscript s Baseline element of upper B Subscript epsilon comma upper M Baseline right parenthesis less than or equals upper P left parenthesis upper X Subscript s plus 1 Baseline element of upper B Subscript epsilon comma upper M Baseline right parenthesis comma s equals 0 comma 1 comma 2 comma ellipsis periodP(Xs ∈Bε,M) ≤P(Xs+1 ∈Bε,M),
s = 0, 1, 2, . . . .
(4.4c) 
In the following we assume that the objective functionupper FF of (4.1) is a measurable 
function on double struck upper R Superscript nRn. 
4.2 
The Convergence of the Basic Random Search 
Procedure 
For considering the convergence behavior of the search method (4.2a), we examine 
the probability 
upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon comma upper M Baseline right parenthesis comma t equals 0 comma 1 comma 2 comma ellipsis commaP(Xt ∈Bε,M),
t = 0, 1, 2, . . . ,
that the tt-th iterate upper X Subscript tXt is an epsilonε-, upper M minusM−optimal solution, resp., of (4.1), where epsilon greater than 0 comma upper M less than 0ε >
0, M < 0 are given numbers. According to the considerations at the end of Sect. 4.1 
these probabilities form a nondecreasing, convergent sequence, and due to (4.4b) we  
have that 
upper X Subscript t Baseline not an element of upper B Subscript epsilon comma upper M Baseline left right double arrow upper X 0 not an element of upper B Subscript epsilon comma upper M Baseline comma upper X 1 not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon comma upper M Baseline commaXt /∈Bε,M ⇔X0 /∈Bε,M, X1 /∈Bε,M, . . . , Xt /∈Bε,M,
(4.5a) 
hence, 
StartLayout 1st Row 1st Column upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon comma upper M Baseline right parenthesis 2nd Column equals 1 minus upper P left parenthesis upper X 0 not an element of upper B Subscript epsilon comma upper M Baseline comma upper X 1 not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon comma upper M Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals 1 minus integral Underscript x 0 not an element of upper B Subscript epsilon comma upper M Baseline Endscripts upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon comma upper M Baseline vertical bar upper X 0 equals x 0 right parenthesis pi left parenthesis d x 0 right parenthesis period EndLayoutP(Xt ∈Bε,M) = 1 −P(X0 /∈Bε,M, X1 /∈Bε,M, . . . , Xt /∈Bε,M)
(4.5b) 
= 1 −
 
x0 /∈Bε,M 
P(X1 /∈ Bε,M , . . . ,  Xt /∈ Bε,M|X0 = x0)π(dx0). 
Denoting by upper K Subscript t Baseline left parenthesis x Superscript t Baseline comma midline horizontal ellipsis right parenthesisKt(xt, · · · ) the conditional distribution of upper X Subscript t plus 1Xt+1 given upper X 0 equals x 0 comma upper X 1 equals x 1 comma ellipsis comma upper X Subscript t Baseline equals x Subscript t BaselineX0 = x0, X1 =
x1, . . . , Xt = xt, we have  
upper K Subscript t Baseline left parenthesis x Superscript t Baseline comma upper B right parenthesis equals pi Subscript t Baseline left parenthesis x Superscript t Baseline comma upper B intersection upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis plus left parenthesis 1 minus pi Subscript t Baseline left parenthesis left parenthesis x Superscript t Baseline comma upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis right parenthesis epsilon Subscript x Sub Subscript t Subscript Baseline left parenthesis upper B right parenthesis commaKt(xt, B) = πt
(
xt, B ∩G F(xt)
)
+
(
1 −πt(
(
xt, G F(xt)
))
εxt(B),
(4.6a)

106
4
Random Search Methods for Global Optimization—Basics
where epsilon Subscript xεx is the one-point-measure at xx. Thus, with ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline colon equals upper D 0 minus ModifyingAbove upper B With quotation dash Subscript epsilon comma upper MBε,M := D0\Bε,M, we get 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon comma upper M Baseline vertical bar upper X 0 equals x 0 right parenthesis equals integral Underscript x 1 element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline Endscripts upper K 0 left parenthesis x 0 comma d x 1 right parenthesis ellipsis 2nd Row 1st Column Blank 2nd Column Blank 3rd Column integral Underscript x Subscript t minus 1 Baseline element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline Endscripts upper K Subscript t minus 2 Baseline left parenthesis x Superscript t minus 2 Baseline comma d x Subscript t minus 1 Baseline right parenthesis dot integral Underscript x Subscript t Baseline element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline Endscripts upper K Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma d x Subscript t Baseline right parenthesis period EndLayout P(X1 /∈Bε,M, . . . , Xt /∈Bε,M|X0 = x0) =
 
x1∈Bε,M
K0(x0, dx1) . . .
 
xt−1∈Bε,M
Kt−2(xt−2, dxt−1) ·
 
xt∈Bε,M
Kt−1(xt−1, dxt).
(4.6b) 
Considering ﬁrst the tt-th integral in the above equation, we obtain 
StartLayout 1st Row 1st Column integral Underscript x Subscript t Baseline element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Endscripts upper K Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma d x Subscript t Baseline right parenthesis 2nd Column equals upper K Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma upper D 0 minus upper B Subscript epsilon comma upper M Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper K Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma upper D 0 right parenthesis minus upper K Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma upper B Subscript epsilon comma upper M Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column equals 1 minus upper K Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma upper B Subscript epsilon comma upper M Baseline right parenthesis period EndLayout
 
xt∈Bε,M
Kt−1(xt−1, dxt) = Kt−1(xt−1, D0\Bε,M)
(4.6c) 
= Kt−1(xt−1 , D0) − Kt−1(xt−1 , Bε,M ) 
= 1 − Kt−1(xt−1 , Bε,M ). 
Having x Subscript t minus 1 Baseline not an element of upper B Subscript epsilon comma upper Mxt−1 /∈Bε,M we get epsilon Subscript x Sub Subscript t minus 1 Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis equals 0εxt−1(Bε,M) = 0 and upper B Subscript epsilon comma upper M Baseline subset of upper G Subscript upper F Baseline left parenthesis x Subscript t minus 1 Baseline right parenthesisBε,M ⊂G F(xt−1), see the deﬁ-
nitions (4.3), (4.4a). Hence, (4.6a)–(4.6c) yield 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column integral Underscript x Subscript t Baseline element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline Endscripts upper K Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma d x Subscript t Baseline right parenthesis less than or equals 1 minus pi Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma upper B Subscript epsilon comma upper M Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals 3rd Column 1 minus inf left brace pi Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma upper B Subscript epsilon comma upper M Baseline right parenthesis colon x Subscript s Baseline element of upper D 0 minus upper B Subscript epsilon comma upper M Baseline comma 0 less than or equals s less than or equals t minus 1 right brace EndLayoutStartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column integral Underscript x Subscript t Baseline element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline Endscripts upper K Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma d x Subscript t Baseline right parenthesis less than or equals 1 minus pi Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma upper B Subscript epsilon comma upper M Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals 3rd Column 1 minus inf left brace pi Subscript t minus 1 Baseline left parenthesis x Superscript t minus 1 Baseline comma upper B Subscript epsilon comma upper M Baseline right parenthesis colon x Subscript s Baseline element of upper D 0 minus upper B Subscript epsilon comma upper M Baseline comma 0 less than or equals s less than or equals t minus 1 right brace EndLayout
 
xt∈Bε,M
Kt−1(xt−1, dxt) ≤1 −πt−1(xt−1, Bε,M)
(4.7) 
≤ 1 − inf
{
πt−1(xt−1 , Bε,M ) : xs ∈ D0\Bε,M , 0 ≤ s ≤ t − 1
}
for all x Subscript s Baseline element of upper D 0 minus upper B Subscript epsilon comma upper M Baseline comma s equals 0.1 comma ellipsis comma t minus 1xs ∈D0\Bε,M, s = 0.1, . . . , t −1. 
Deﬁning now alpha Subscript t Baseline comma t equals 0 comma 1 comma period period period commaαt, t = 0, 1, ..., by 
alpha Subscript t Baseline colon equals alpha Subscript t Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis equals inf left brace pi Subscript t Baseline left parenthesis x Superscript t Baseline comma upper B Subscript epsilon comma upper M Baseline right parenthesis colon x Subscript s Baseline element of upper D 0 minus upper B Subscript epsilon comma upper M Baseline comma 0 less than or equals s less than or equals t right brace commaαt := αt(Bε,M) = inf
{
πt(xt, Bε,M) : xs ∈D0\Bε,M, 0 ≤s ≤t
}
,
(4.8) 
from (4.6a), (4.6b) we now obtain 
StartLayout 1st Row 1st Column upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon comma upper M Baseline vertical bar upper X 0 equals x 0 right parenthesis 2nd Column less than or equals 3rd Column product Underscript s equals 0 Overscript t minus 1 Endscripts left parenthesis 1 minus alpha Subscript s Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis right parenthesis EndLayoutStartLayout 1st Row 1st Column upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon comma upper M Baseline vertical bar upper X 0 equals x 0 right parenthesis 2nd Column less than or equals 3rd Column product Underscript s equals 0 Overscript t minus 1 Endscripts left parenthesis 1 minus alpha Subscript s Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis right parenthesis EndLayoutP(X1 /∈Bε,M, . . . , Xt /∈Bε,M|X0 = x0) ≤
t−1
| |
s=0
(1 −αs(Bε,M))
(4.9a) 
Hence, by (4.5b) and (4.9a) it is  
StartLayout 1st Row 1st Column Blank 2nd Column upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon comma upper M Baseline right parenthesis greater than or equals 2nd Row 1st Column Blank 2nd Column 1 minus integral Underscript x 0 not an element of upper B Subscript epsilon comma upper M Endscripts upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon comma upper M Baseline vertical bar upper X 0 equals x 0 right parenthesis pi Subscript s t a r t Baseline left parenthesis d x 0 right parenthesis 3rd Row 1st Column Blank 2nd Column greater than or equals 1 minus left parenthesis 1 minus pi Subscript s t a r t Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis right parenthesis product Underscript s equals 0 Overscript t minus 1 Endscripts left parenthesis 1 minus alpha Subscript s Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis right parenthesis period EndLayout
P(Xt ∈Bε,M) ≥
1 −
 
x0 /∈Bε,M
P(X1 /∈Bε,M, . . . , Xt /∈Bε,M|X0 = x0)πstart(dx0)
≥1 −(1 −πstart(Bε,M))
t−1
| |
s=0
(1 −αs(Bε,M)).
(4.9b)

4.2 The Convergence of the Basic Random Search Procedure
107
Since log u less than or equals u minus 1u ≤u −1, for u greater than 0u > 0 we have 
left parenthesis 1 minus pi Subscript s t a r t Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis right parenthesis product Underscript s equals 0 Overscript t minus 1 Endscripts left parenthesis 1 minus alpha Subscript t Baseline right parenthesis less than or equals exp left parenthesis minus pi Subscript s t a r t Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis minus sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts alpha Subscript s Baseline right parenthesis(1 −πstart(Bε,M))
t−1
| |
s=0
(1 −αt) ≤exp
(
−πstart(Bε,M) −
t−1
∑
s=0
αs
)
(4.9c) 
and therefore also 
upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon comma upper M Baseline right parenthesis greater than or equals 1 minus exp left parenthesis minus pi Subscript s t a r t Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis minus sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts alpha Subscript s Baseline right parenthesis periodP(Xt ∈Bε,M) ≥1 −exp
(
−πstart(Bε,M) −
t−1
∑
s=0
αs
)
.
(4.9d) 
Thus, from (4.9d) we get the following convergence result. 
Theorem 4.1 The search process (4.2a) has the following convergence properties: 
(a) If for an epsilon greater than 0 comma upper M less than 0ε > 0, M < 0, resp., 
sigma summation Underscript s equals 0 Overscript normal infinity Endscripts alpha Subscript s Baseline left parenthesis upper B Subscript epsilon comma upper M Baseline right parenthesis equals plus normal infinity comma
∞
∑
s=0
αs(Bε,M) = +∞,
(4.10) 
then limit Underscript t right arrow normal infinity Endscripts upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon comma upper M Baseline right parenthesis equals 1 lim
t→∞P(Xt ∈Bε,M) = 1 . 
(b) Suppose that upper F Superscript asterisk Baseline element of double struck upper RF∗∈R and 
limit Underscript n right arrow normal infinity Endscripts upper P left parenthesis upper X Subscript n Baseline element of upper B Subscript epsilon Baseline right parenthesis equals 1 f o r e v e r y epsilon greater than 0 period lim
n→∞P(Xn ∈Bε) = 1 for every ε > 0.
(4.11) 
Then limit Underscript n right arrow normal infinity Endscripts upper F left parenthesis upper X Subscript n Baseline right parenthesis equals upper F Superscript asterisk lim
n→∞F(Xn) = F∗a.s. (with probability one), 
(c) Assume thatupper F Superscript asterisk Baseline element of double struck upper RF∗∈R andupper FF is continuous and that the level setsupper D Subscript epsilonDε are nonempty 
and compact for each epsilon greater than 0ε > 0. Then limit Underscript t right arrow normal infinity Endscripts upper F left parenthesis upper X Subscript t Baseline right parenthesis equals upper F Superscript asterisk lim
t→∞F(Xt) = F∗implies that also limit Underscript t right arrow normal infinity Endscripts lim
t→∞dist 
left parenthesis upper X Subscript t Baseline comma upper D Superscript asterisk Baseline right parenthesis equals 0(Xt, D∗) = 0, where dist left parenthesis upper X Subscript t Baseline comma upper D Superscript asterisk Baseline right parenthesis(Xt, D∗) denotes the distance between upper X Subscript tXt and the set 
upper D Superscript asteriskD∗of global minimum points of (4.1). 
Proof For a proof of assertions (b) and (c), see [ 8].
◻
Note 4.1 
(a) For the case that the distribution pi Subscript tπt of upper Z Subscript t plus 1Zt+1 does not depend on the states x Superscript txt, 
preliminary versions of the decisive inequality (4.9a) may already be found in 
the early Random Search literature, see, e.g., [ 3]. 
(b) Comparing the above theorem with the 0-1-laws of probability theory we observe 
that this result is essentially a consequence from the Borel-Cantelli-type laws, 
see, e.g., [ 9, p. 400] and [ 4, pp. 1–6, 51–52]. 
Working with random search procedures, one observes that the rate of 
convergence—especially near to the optimum—may be very poor. Hence, in the 
following we consider modiﬁed random search procedures with an improved con-
vergence behavior.

108
4
Random Search Methods for Global Optimization—Basics
4.2.1 
Discrete Optimization Problems 
Consider now the case that upper DD contains a ﬁnite number rr of elements d Subscript i Baseline element of double struck upper R Superscript ndi ∈Rn, thus, 
upper D equals StartSet d 1 comma d 2 comma ellipsis comma d Subscript r Baseline EndSet periodD = {d1, d2, . . . , dr}.
(4.12a) 
Furthermore, assume that upper D Subscript s t a r t Baseline subset of upper DDstart ⊂D, hence upper D 0 equals upper DD0 = D, and let 
upper P left parenthesis upper Z Subscript t plus 1 Baseline element of upper B vertical bar upper X 0 comma upper X 1 comma ellipsis comma upper X Subscript t Baseline right parenthesis equals upper P left parenthesis upper Z Subscript t plus 1 Baseline element of upper B vertical bar upper X Subscript t Baseline right parenthesis periodP
(
Zt+1 ∈B|X0, X1, . . . , Xt
)
= P
(
Zt+1 ∈B|Xt
)
.
(4.12b) 
Hence, left parenthesis upper Z Subscript t Baseline right parenthesis(Zt) and left parenthesis upper X Subscript t Baseline right parenthesis(Xt) are discrete-time stochastic processes. Therefore left parenthesis upper Z Subscript t Baseline right parenthesis(Zt) is 
described by a transition matrixleft parenthesis pi Subscript i j Superscript t Baseline right parenthesis(πt
i j) fromupper X Subscript t Baseline equals iXt = i toupper Z Subscript t plus 1 Baseline equals jZt+1 = j, and the iteratesleft parenthesis upper X Subscript t Baseline right parenthesis(Xt)
are described by the transition matrixleft parenthesis p Subscript i j Superscript t Baseline right parenthesis(pt
i j) fromupper X Subscript t Baseline equals iXt = i toupper X Subscript t plus 1 Baseline equals jXt+1 = j,t equals 0 comma 1 comma ellipsist = 0, 1, . . . . 
For upper X Subscript t Baseline equals d Subscript iXt = di we have upper G Subscript upper F Baseline left parenthesis d Subscript i Baseline right parenthesis equals upper G Subscript upper F Baseline left parenthesis i right parenthesis equals StartSet j colon upper F left parenthesis d Subscript j Baseline right parenthesis less than upper F left parenthesis d Subscript i Baseline right parenthesis EndSetG F(di) = G F(i) =
{
j : F(d j) < F(di)
}
. The relationship 
between left parenthesis pi Subscript i j Superscript t Baseline right parenthesis(πt
i j) and left parenthesis p Subscript i j Superscript t Baseline right parenthesis(pt
i j) reads then: 
p Subscript i j Superscript t Baseline equals p Subscript i j Superscript left parenthesis t comma t plus 1 right parenthesis Baseline equals StartLayout Enlarged left brace 1st Row 1st Column 0 comma 2nd Column i f j not an element of upper G Subscript upper F Baseline left parenthesis i right parenthesis a n d j not equals i 2nd Row 1st Column 1 minus sigma summation Underscript l element of upper G Subscript upper F Baseline left parenthesis i right parenthesis Endscripts pi Subscript i l Superscript t Baseline comma 2nd Column i f j equals i 3rd Row 1st Column pi Subscript i j Superscript t Baseline comma 2nd Column i f j element of upper G Subscript upper F Baseline left parenthesis i right parenthesis period EndLayoutpt
i j = p(t,t+1)
i j
=
⎧
⎪⎨
⎪⎩
0,
if j /∈G F(i) and j /= i
1 −
∑
l∈G F(i)
πt
il, if j = i
πt
i j,
if j ∈G F(i).
(4.12c) 
Assuming now stationary search variables upper Z Subscript t Baseline left parenthesis omega right parenthesisZt(ω), i.e., in case pi Subscript i j Superscript t Baseline equals pi Subscript i jπt
i j = πi j for all 
t equals 0 comma 1 comma ellipsist = 0, 1, . . ., then alsoleft parenthesis upper X Subscript t Baseline right parenthesis(Xt) is stationary and by searching for stationary distributions 
of left parenthesis p Subscript i j Baseline right parenthesis(pi j) we get this result. 
Theorem 4.2 Let pi Subscript i j Baseline greater than 0πi j > 0 for all i comma j equals 1 comma period period period comma ri, j = 1, ...,r or suppose that sigma summation Underscript j element of upper G Subscript upper F Baseline left parenthesis i right parenthesis Endscripts pi Subscript i j Baseline greater than 0 ∑
j∈G F(i)
πi j > 0 for 
all 1 less than or equals i less than or equals r1 ≤i ≤r such that d Subscript idi is not a solution of the optimization problem (4.1). Then 
left parenthesis upper X Subscript t Baseline left parenthesis omega right parenthesis right parenthesis
(
Xt(ω)
)
converges with probability one to a solution of problem (4.1). 
Proof Without limitation we may assume here that0 less than epsilon less than upper F Subscript m a x Baseline minus upper F Superscript asterisk0 < ε < Fmax −F∗. According 
to (4.8) and the above assumptions, for the minimum probabilities alpha Subscript t Baseline equals alpha Subscript t Baseline left parenthesis epsilon right parenthesisαt = αt(ε) we 
have 
StartLayout 1st Row 1st Column alpha Subscript t Baseline left parenthesis epsilon right parenthesis equals 2nd Column inf left brace pi Subscript t Baseline left parenthesis x Superscript t Baseline comma upper B Subscript epsilon Baseline right parenthesis colon x Subscript s Baseline element of upper D minus upper B Subscript epsilon Baseline comma 0 less than or equals s less than or equals t right brace equals inf left brace pi left parenthesis x Subscript t Baseline comma upper B Subscript epsilon Baseline right parenthesis colon x Subscript t Baseline element of upper D minus upper B Subscript epsilon Baseline right brace 2nd Row 1st Column Blank 2nd Column equals inf left brace sigma summation Underscript d Subscript j Baseline element of upper B Subscript epsilon Baseline Endscripts pi Subscript i j Baseline colon d Subscript i Baseline not an element of upper B Subscript epsilon Baseline right brace equals colon alpha 0 greater than 0 comma EndLayoutαt(ε) = inf
{
πt(xt, Bε) : xs ∈D\Bε, 0 ≤s ≤t
}
= inf
{
π(xt, Bε) : xt ∈D\Bε
}
= inf
{ ∑
d j∈Bε
πi j : di /∈Bε
}
=: α0 > 0,
(4.12d) 
provided that pi Subscript i j Baseline greater than 0πi j > 0 for all indices i comma ji, j. Since alpha Subscript t Baseline left parenthesis epsilon right parenthesis equals alpha 0 greater than 0αt(ε) = α0 > 0 for all t equals 0 comma 1 comma period period period commat = 0, 1, ...,
and eachepsilon comma 0 less than epsilon less than upper F Subscript m a x Baseline minus upper F Superscript asteriskε, 0 < ε < Fmax −F∗, the assertion follows now from Theorem 4.1. Since 
in the present case there are a ﬁnite number elements of feasible pointsd Subscript i Baseline comma i period period period comma rdi, i...,r, and 
the sets upper G Subscript upper F Baseline left parenthesis i right parenthesis comma upper B Subscript epsilon BaselineG F(i), Bε are contained in each other for corresponding values of epsilon comma upper F left parenthesis d Subscript i Baseline right parenthesisε, F(di), 
resp., the proof for the second case follows then also from (4.12d).
◻
Example 4.1 For illustration we may assume—without limitation—that the ele-
ments d 1 comma d 2 comma ellipsis comma d Subscript r Baselined1, d2, . . . , dr of the feasible domain upper DD are arranged such that

4.3 Adaptive Random Search Methods
109
upper F left parenthesis d 1 right parenthesis less than upper F left parenthesis d 2 right parenthesis less than ellipsis less than upper F d Subscript r Baseline right parenthesis periodF(d1) < F(d2) < . . . < Fdr).
(4.13a) 
Hence,d 1d1 is the unique minimum point, and the remaining pointsd Subscript jd j are arranged in 
strictly increasing order of the function values upper F left parenthesis d Subscript j Baseline right parenthesisF(d j). With the stationary transition 
probabilities pi Subscript i j Superscript left parenthesis t comma t plus 1 right parenthesis Baseline equals pi Subscript i jπ(t,t+1)
i j
= πi j from upper X Subscript tXt to upper Z Subscript t plus 1Zt+1, the stationary transition matrix upper P Superscript t Baseline equals upper P colon equals left parenthesis p Subscript i j Baseline right parenthesisPt =
P := (pi j) from upper X Subscript tXt to upper X Subscript t plus 1Xt+1 reads 
upper P equals Start 5 By 5 Matrix 1st Row 1st Column 1 2nd Column 0 3rd Column 0 4th Column ellipsis 5th Column 0 2nd Row 1st Column pi 21 Superscript t Baseline 2nd Column 1 minus pi 21 Superscript t Baseline 3rd Column 0 4th Column ellipsis 5th Column 0 3rd Row 1st Column pi 31 Superscript t Baseline 2nd Column pi 32 Superscript t Baseline 3rd Column 1 minus left parenthesis pi 31 Superscript t Baseline plus pi 32 Superscript t Baseline right parenthesis 4th Column ellipsis 5th Column 0 4th Row 1st Column vertical ellipsis 2nd Column vertical ellipsis 3rd Column vertical ellipsis 4th Column down right diagonal ellipsis 5th Column vertical ellipsis 5th Row 1st Column pi Subscript r Baseline 1 Superscript t Baseline 2nd Column pi Subscript r Baseline 2 Superscript t Baseline 3rd Column pi Subscript r Baseline 3 Superscript t Baseline 4th Column ellipsis 5th Column pi Subscript r r Superscript t Baseline EndMatrix periodP =
⎛
⎜⎜⎜⎜⎜⎝
1
0
0
. . . 0
πt
21 1 −πt
21
0
. . . 0
πt
31
πt
32
1 −(πt
31 + πt
32) . . . 0
...
...
...
...
...
πt
r1
πt
r2
πt
r3
. . . πt
rr
⎞
⎟⎟⎟⎟⎟⎠
.
(4.13b) 
Corresponding to Theorem 4.2 we ﬁnd that q Superscript upper T Baseline colon equals left parenthesis 1 comma 0 comma ellipsis comma 0 right parenthesisqT := (1, 0, . . . , 0) is a left ﬁxed 
point of upper PP and limit Underscript t right arrow normal infinity Endscripts upper X Subscript t Baseline equals q lim
t→∞Xt = q with probability 11. 
4.3 
Adaptive Random Search Methods 
In this section we describe a general method how to ﬁnd search variables left parenthesis upper Z Subscript t Baseline right parenthesis(Zt) such 
that the convergence ofleft parenthesis upper X Subscript t Baseline right parenthesis(Xt) toward a solution of our basic problem (4.1) is acceler-
ated. This can be achieved by an adaptive selection of the probability distribution of 
the search variatesupper Z 1 comma upper Z 2 comma ellipsisZ1, Z2, . . .. In order to control the sequenceleft parenthesis upper Z Subscript t Baseline right parenthesis(Zt) we assume that 
the probability distribution 
pi Subscript t Baseline left parenthesis x 0 comma x 1 comma ellipsis x Subscript t Baseline comma dot right parenthesis equals pi Subscript t Baseline left parenthesis a Subscript t Baseline comma x 0 comma x 1 comma ellipsis comma x Subscript t Baseline comma dot right parenthesisπt(x0, x1, . . . xt, ·) = πt(at, x0, x1, . . . , xt, ·)
(4.14a) 
of upper Z Subscript t plus 1Zt+1 depends on a control parameter vector a Subscript t Baseline element of upper A Subscript t Baseline left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline right parenthesisat ∈At(x0, x1, . . . , xt), where 
upper A Subscript t Baseline subset of upper AAt ⊂A is the set of admissible controls at time tt and given state-history x Superscript t Baseline colon equals left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline right parenthesisxt :=
(x0, x1, . . . , xt). Moreover upper A Subscript tAt is assumed to be contained in a ﬁxed set upper AA. By  
delta equals left parenthesis delta Subscript t Baseline right parenthesis Subscript t greater than or equals 0 Baseline comma delta Subscript t Baseline colon double struck upper R Superscript n left parenthesis 1 plus t right parenthesis Baseline right arrow upper A comma t equals 0 comma 1 comma ellipsisδ = (δt)t≥0, δt : Rn(1+t) →A, t = 0, 1, . . .
(4.14b) 
we denote a decision rule, composed of the control functions or strategies delta Subscript t Baseline comma t equals 0 comma 1 comma ellipsisδt, t =
0, 1, . . ., such that the control parameter vectors a Subscript tat are given by 
a Subscript t Baseline colon equals delta Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis element of upper A Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis f o r x Subscript s Baseline element of upper D comma 0 less than or equals s less than or equals t comma t equals 0 comma 1 comma ellipsis periodat := δt(xt) ∈At(xt) for xs ∈D,
0 ≤s ≤t,
t = 0, 1, . . . .
(4.14c) 
The set Delta∆of admissible decision rules deltaδ is deﬁned then by 
StartLayout 1st Row Delta colon equals left brace delta colon delta equals left parenthesis delta Subscript t Baseline right parenthesis Subscript t greater than or equals 0 Baseline comma delta Subscript t Baseline left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline right parenthesis element of upper A Subscript t Baseline left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline right parenthesis 2nd Row f o r x Subscript s Baseline element of upper D comma 0 less than or equals s less than or equals t comma t equals 0 comma 1 comma ellipsis right brace period EndLayout∆:=
{
δ : δ = (δt)t≥0, δt(x0, x1, . . . , xt) ∈At(x0, x1, . . . , xt)
for xs ∈D, 0 ≤s ≤t, t = 0, 1, . . .
}
.
(4.14d)

110
4
Random Search Methods for Global Optimization—Basics
Note 4.2 Since the transition probabilities pi Subscript t Baseline left parenthesis a Subscript t Baseline comma x 0 comma x 1 comma ellipsis comma x Subscript t Baseline comma dot right parenthesisπt(at, x0, x1, . . . , xt, ·) depend on the 
controls a Subscript tat, the expectation operator upper E equals upper E Superscript deltaE = Eδ depends on the decision rule deltaδ. 
Looking for an optimal decision rule delta Superscript asteriskδ∗, clearly we have to guarantee that the 
process left parenthesis upper X Subscript t Baseline right parenthesis(Xt) generated by delta Superscript asteriskδ∗converges actually to a solution of (4.1). 
Note that the reachability property in Theorem 4.1 holds, e.g., if the decision rules 
satisﬁes the condition, see (4.8), 
sigma summation Underscript t equals 0 Overscript normal infinity Endscripts inf left brace pi Subscript t Baseline left parenthesis delta Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis comma x Superscript t Baseline comma upper B Subscript epsilon Superscript upper F Baseline right parenthesis colon x Superscript t Baseline equals left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline right parenthesis comma x Subscript s Baseline element of upper D minus upper B Subscript epsilon Baseline comma 0 less than or equals s less than or equals t right brace equals plus normal infinity comma
∞
∑
t=0
inf
{
πt
(
δt(xt), xt, BF
ε ) : xt = (x0, x1, . . . , xt), xs ∈D\Bε, 0 ≤s ≤t
}
= +∞,
(4.15a) 
where, cf. (4.4a) 
upper B Subscript epsilon Baseline colon equals StartSet y element of upper D colon upper F left parenthesis y right parenthesis less than or equals upper F Superscript asterisk Baseline plus epsilon EndSet periodBε :=
{
y ∈D : F(y) ≤F∗+ ε
}
.
(4.15b) 
In the stationary case pi Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma dot right parenthesis equals pi left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma dot right parenthesisπt(at, xt, ·) = π(at, xt, ·) and delta Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis equals delta left parenthesis x Subscript t Baseline right parenthesis comma t equals 0 comma 1 comma ellipsisδt(xt) = δ(xt), t = 0, 1, . . .
(4.14a) is reduced to the much simpler condition 
inf left brace pi left parenthesis delta left parenthesis x right parenthesis comma x comma upper B Subscript epsilon Superscript upper F Baseline right parenthesis colon x element of upper D minus upper B Subscript epsilon Baseline right brace greater than 0 period inf
{
π
(
δ(x), x, B F
ε
)
: x ∈D\Bε
}
> 0.
(4.15c) 
Appropriate utility- or reward-criterion for the evaluation of the individual steps 
left parenthesis upper X Subscript t Baseline right parenthesis right arrow upper X Subscript t plus 1(Xt) →Xt+1 of the search process left parenthesis upper X Subscript t Baseline right parenthesis(Xt) are, e.g., 
(a) Probability of success 
u Subscript t Baseline left parenthesis x Subscript t Baseline comma x Subscript t plus 1 Baseline right parenthesis equals StartLayout Enlarged left brace 1st Row 1 comma x Subscript t plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis 2nd Row 0 comma o t h e r w i s e comma EndLayoutut(xt, xt+1) =
 1, xt+1 ∈G F(xt)
0, otherwise,
(4.16a) 
hence upper E Superscript delta Baseline left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma upper X Subscript t Baseline comma upper X Subscript t plus 1 Baseline right parenthesis vertical bar upper X Subscript t Baseline right parenthesis equals upper P left parenthesis upper X Subscript t plus 1 Baseline element of upper G left parenthesis upper X Subscript t Baseline right parenthesis vertical bar upper X Subscript t Baseline right parenthesisEδ(
ut(at, Xt, Xt+1)|Xt
)
= P
(
Xt+1 ∈G(Xt)|Xt
)
is the (conditional) 
probability of a success in the state upper S Subscript tSt. 
(b) Step length 
u Subscript t Baseline left parenthesis upper X Subscript t Baseline comma upper X Subscript t plus 1 Baseline right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column parallel to upper X Subscript t plus 1 Baseline minus upper X Subscript t Baseline parallel to Superscript p Baseline 2nd Column comma upper X Subscript t plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis 2nd Row 1st Column 0 2nd Column comma o t h e r w i s e comma EndLayoutut(Xt, Xt+1) =
 ||Xt+1 −Xt||p , Xt+1 ∈G F(Xt)
0
, otherwise,
(4.16b) 
where p greater than or equals 1p ≥1 is a ﬁxed number. Here upper E left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma upper X Subscript t Baseline comma upper X Subscript t plus 1 Baseline vertical bar upper X Subscript t Baseline right parenthesisE
(
ut(at, Xt, Xt+1|Xt
)
is the average step 
length of upper X Subscript t plus 1Xt+1 into the area of success upper G left parenthesis upper X Subscript t Baseline right parenthesisG(Xt). 
A modiﬁcation of the above case is 
(c) Relative step length 
u Subscript t Baseline left parenthesis upper X Subscript t Baseline comma upper X Subscript t plus 1 Baseline right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column left parenthesis StartFraction parallel to upper X Subscript t plus 1 Baseline minus upper X Subscript t Baseline parallel to Over parallel to upper X Subscript t Baseline parallel to EndFraction right parenthesis Superscript p Baseline 2nd Column comma upper X Subscript t plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis 2nd Row 1st Column 0 2nd Column comma o t h e r w i s e period EndLayoutut(Xt, Xt+1) =
⎧
⎨
⎩
(||Xt+1 −Xt||
||Xt||
)p
, Xt+1 ∈G F(Xt)
0
, otherwise.
(4.16c) 
Obviously, any linear combination of the above three criteria yields criterion. In 
the following we suppose

4.3 Adaptive Random Search Methods
111
upper F Superscript asterisk Baseline equals inf left brace upper F left parenthesis x right parenthesis colon x element of upper D right brace greater than negative normal infinity periodF∗= inf{F(x) : x ∈D} > −∞.
Search procedures with an improved performance can be constructed now by maxi-
mizing [ 7] the expected (total) reward function 
upper U Subscript normal infinity Baseline left parenthesis x 0 comma delta right parenthesis colon equals upper E Superscript delta Baseline sigma summation Underscript s equals 0 Overscript normal infinity Endscripts rho Superscript s Baseline u Subscript s Baseline left parenthesis delta Subscript s Baseline left parenthesis x Superscript s Baseline right parenthesis comma x Subscript s Baseline comma x Subscript s plus 1 Baseline right parenthesis commaU∞(x0, δ) := Eδ
∞
∑
s=0
 sus(δs(xs), xs, xs+1),
(4.17a) 
with respect to the decision ruledelta equals left parenthesis delta Subscript s Baseline right parenthesisδ = (δs) involving the control functionsdelta Subscript sδs satisfying 
the constraints (4.14c). Here, rho comma 0 less than rho less than 1 comma , 0 <  < 1, denotes still a certain discount factor. 
For the maximization of the expectation of upper U Subscript normal infinity Baseline left parenthesis x 0 comma delta right parenthesisU∞(x0, δ) next to we consider the 
left parenthesis upper T minus t right parenthesis(T −t)-stage search processes left parenthesis upper X Subscript s Baseline right parenthesis(Xs) starting at time tt and running then up to time 
upper T greater than tT > t. Hence, with upper X Superscript s Baseline equals left parenthesis upper X 0 comma upper X 1 comma ellipsis comma upper X Subscript s Baseline right parenthesis comma upper X 0 colon equals x 0Xs = (X0, X1, . . . , Xs), X0 := x0, and a Subscript s Baseline equals delta left parenthesis upper X Superscript s Baseline right parenthesis comma s equals t comma t plus 1 comma ellipsis comma upper T minus 1as = δ(Xs), s = t, t +
1, . . . , T −1, let  
StartLayout 1st Row 1st Column Blank 2nd Column upper U Subscript upper T Baseline left parenthesis t comma x Superscript t Baseline semicolon delta Subscript t Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column colon equals upper E Superscript delta Baseline left parenthesis sigma summation Underscript s equals t Overscript upper T minus 1 Endscripts rho Superscript left parenthesis s minus t right parenthesis Baseline u Subscript s Baseline left parenthesis delta Subscript s Baseline left parenthesis upper X Superscript s Baseline right parenthesis comma upper X Subscript s Baseline comma upper X Subscript s plus 1 Baseline right parenthesis vertical bar upper X 0 equals x 0 comma upper X 1 equals x 1 comma ellipsis comma upper X Subscript t Baseline equals x Subscript t Baseline right parenthesis EndLayoutUT (t, xt; δt, . . . , δT −1)
:= Eδ( T −1
∑
s=t
 (s−t)us(δs(Xs), Xs, Xs+1)|X0 = x0, X1 = x1, . . . , Xt = xt
)
(4.17b) 
denote the conditional expected reward of thisleft parenthesis upper T minus t right parenthesis minus(T −t)−stage process, given the time 
history upper X Subscript s Baseline equals x Subscript s Baseline comma s equals 0 comma 1 comma ellipsis comma tXs = xs, s = 0, 1, . . . , t, and the control functions delta Subscript t Baseline comma ellipsis comma delta Subscript upper T minus 1 Baselineδt, . . . , δT −1. 
Denote by upper K Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma dot right parenthesisKt(at, xt, ·) the transition probabilities for upper X Subscript t Baseline right arrow upper X Subscript t plus 1Xt →Xt+1
upper K Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma upper B right parenthesis equals upper P left parenthesis upper X Subscript t plus 1 Baseline element of upper B vertical bar upper X Superscript t Baseline equals x Superscript t Baseline right parenthesisKt(at, xt, B) = P(Xt+1 ∈B|Xt = xt)
(4.18a) 
of the processleft parenthesis upper X Subscript t Baseline right parenthesis(Xt) based on search variatesleft parenthesis upper Z Subscript t Baseline right parenthesis(Zt) controlled by control inputsa Subscript t Baseline comma t equals 0 comma 1 comma ellipsisat, t =
0, 1, . . . , whereupper X Superscript t Baseline equals left parenthesis upper X 0 comma upper X 1 comma ellipsis comma upper X Subscript t Baseline right parenthesisXt = (X0, X1, . . . , Xt) andupper BB is any Borel subset ofdouble struck upper R Superscript nRn. According 
to the basic deﬁnition (4.2a), (4.2b) of upper X Subscript tXt and (4.14a)–(4.14d) it holds 
StartLayout 1st Row upper K Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma upper B right parenthesis equals upper K Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma upper B right parenthesis equals pi Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma upper B intersection upper G left parenthesis x Subscript t Baseline right parenthesis right parenthesis 2nd Row plus left parenthesis 1 minus pi Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma upper G left parenthesis x Subscript t Baseline right parenthesis right parenthesis right parenthesis epsilon Subscript x Sub Subscript t Subscript Baseline left parenthesis upper B right parenthesis comma EndLayoutKt(at, xt, B) = Kt(at, xt, B) = πt
(
at, xt, B ∩G(xt)
)
+
(
1 −πt
(
at, xt, G(xt)
))
εxt(B),
(4.18b) 
cf. (4.6b), wherea Subscript t Baseline equals delta Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesisat = δt(xt), andepsilon Subscript xεx denotes again the one-point measure at the point 
x element of double struck upper R Superscript nx ∈Rn. 
Due to the above deﬁnitions, the reward functions upper U Subscript upper T Baseline left parenthesis t comma x Superscript t Baseline semicolon delta Subscript t Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesisUT (t, xt; δt, . . . , δT −1), t equals 0 comma 1 ellipsis comma upper T minus 2 comma upper T minus 1t =
0, 1 . . . , T −2, T −1, see  (4.17b), satisfy the recurrence rations 
StartLayout 1st Row 1st Column Blank 2nd Column upper U Subscript upper T Baseline left parenthesis t comma x Superscript t Baseline semicolon delta Subscript t Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis equals integral left parenthesis u Subscript t Baseline left parenthesis delta Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis comma x Subscript t Baseline comma x Subscript t plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus rho upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma x Subscript t plus 1 Baseline right parenthesis semicolon delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis right parenthesis right parenthesis upper K Subscript t Baseline left parenthesis delta left parenthesis x Superscript t Baseline right parenthesis comma d x Subscript t plus 1 Baseline right parenthesis equals ModifyingAbove u With bar Subscript t Baseline left parenthesis delta Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis comma x Superscript t Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column plus rho integral upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis right parenthesis upper K Subscript t Baseline left parenthesis delta left parenthesis x Superscript t Baseline right parenthesis comma x Superscript t Baseline comma d y right parenthesis comma EndLayout
UT (t, xt; δt, . . . , δT −1) =
 (
ut
(
δt(xt), xt, xt+1
)
+ UT
(
t + 1, (xt, xt+1); δt+1, . . . , δT −1)
))
Kt(δ(xt), dxt+1) = ¯ut(δt(xt), xt)
+ 
 
UT
(
t + 1, (xt, y); δt+1, . . . , δT −1)
)
Kt(δ(xt), xt, dy),
(4.19a)

112
4
Random Search Methods for Global Optimization—Basics
where 
ModifyingAbove u With bar Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline right parenthesis equals upper E left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma upper X Subscript t Baseline comma upper X Subscript t plus 1 Baseline right parenthesis vertical bar upper X Superscript t Baseline equals x Superscript t Baseline right parenthesis equals integral u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma y right parenthesis upper K Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma d y right parenthesis period¯ut(at, xt) = E
(
ut(at, Xt, Xt+1)|Xt = xt)
=
 
ut(at, xt, y)Kt(at, xt, dy).
(4.19b) 
With the set Delta∆of admissible decision rules deltaδ, cf.  (4.14d), the value function of the 
left parenthesis upper T minus t right parenthesis(T −t)-stage process upper X Subscript t Baseline comma ellipsis comma upper X Subscript upper T BaselineXt, . . . , XT with given state-history x Superscript txt is now deﬁned by 
StartLayout 1st Row 1st Column upper V Subscript t Superscript upper T Baseline left parenthesis x Superscript t Baseline right parenthesis 2nd Column colon equals sup Underscript delta Subscript t Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline Endscripts left brace upper U Subscript upper T Baseline left parenthesis t comma x Superscript t Baseline semicolon delta Subscript t Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis colon 2nd Row 1st Column Blank 2nd Column delta Subscript s Baseline left parenthesis x Superscript s Baseline right parenthesis element of upper A Subscript s Baseline left parenthesis x Superscript s Baseline right parenthesis comma x Subscript s Baseline element of upper D Superscript left parenthesis s plus 1 right parenthesis Baseline comma t less than or equals s less than or equals upper T minus 1 right brace comma EndLayoutV T
t (xt) :=
sup
δt,...,δT −1
{
UT (t, xt; δt, . . . , δT −1) :
δs(xs) ∈As(xs), xs ∈D(s+1), t ≤s ≤T −1
}
,
(4.20) 
where upper D Superscript left parenthesis s plus 1 right parenthesisD(s+1) denotes the left parenthesis s plus 1 right parenthesis(s + 1)-fold Carthesian product of upper DD. 
As mentioned already above, the set of restrictions in (4.20) should also include a 
condition guaranteeing that the whole search processleft parenthesis upper X Subscript t Baseline right parenthesis(Xt) controlled by the decision 
rule delta equals left parenthesis delta Subscript t Baseline right parenthesisδ = (δt) satisﬁes a reachability condition according to Theorem 4.1. However, 
in many practical problems this condition may be deleted since the optimal decision 
functions delta Subscript t Superscript asteriskδ∗
t deﬁned by the optimization problem (4.20) can be shown to generate a 
search process left parenthesis upper X Subscript t Superscript asterisk Baseline right parenthesis(X∗
t ) fulﬁlling a sufﬁcient reachability condition. 
From (4.19a), (4.19b), for the value functions upper V Subscript t Superscript upper T Baseline left parenthesis x Superscript t Baseline right parenthesisV T
t (xt) we get then the following 
recurrence relation: 
Theorem 4.3 Let upper V Subscript upper T Superscript upper T Baseline left parenthesis x Superscript upper T Baseline right parenthesis equals 0V T
T (xT ) = 0 for all x Superscript upper T Baseline element of double struck upper R Superscript left parenthesis upper T plus 1 right parenthesis nxT ∈R(T +1)n. If for all steps tt under consid-
eration the maximum is attained in (4.20), then the following backwards recurrence 
relation holds 
StartLayout 1st Row 1st Column upper V Subscript t Superscript upper T Baseline left parenthesis x Superscript t Baseline right parenthesis 2nd Column equals 3rd Column sup Underscript a element of upper A Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis Endscripts integral left parenthesis u Subscript t Baseline left parenthesis a comma x Subscript t Baseline comma y right parenthesis plus upper V Subscript t plus 1 Superscript upper T Baseline left parenthesis left parenthesis x Superscript t Baseline comma y right parenthesis right parenthesis right parenthesis upper K Subscript t Baseline left parenthesis a comma x Superscript t Baseline comma d y right parenthesis 2nd Row 1st Column Blank 2nd Column equals 3rd Column sup Underscript a element of upper A Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis Endscripts left parenthesis ModifyingAbove u With bar Subscript t Baseline left parenthesis a comma x Superscript t Baseline right parenthesis plus integral upper V Subscript t plus 1 Superscript upper T Baseline left parenthesis x Superscript t Baseline comma y right parenthesis upper K Subscript t Baseline left parenthesis a comma x Superscript t Baseline comma d y right parenthesis right parenthesis comma EndLayoutV T
t (xt) =
sup
a∈At(xt)
 (
ut(a, xt, y) + V T
t+1
(
(xt, y)
))
Kt(a, xt, dy)
(4.21) 
= sup 
a∈At (xt )
(
¯ut (a, xt ) +
 
V T 
t+1(xt , y)Kt (a, xt , dy)
)
, 
t equals upper T minus 1 comma upper T minus 2 comma ellipsis comma 1 comma 0t = T −1, T −2, . . . , 1, 0, where a equals delta Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesisa = δt(xt). 
Proof Omitting for simpliﬁcation the constraint set in (4.20), from (4.19a), (4.19b) 
we get 
StartLayout 1st Row 1st Column upper V Subscript t Superscript upper T Baseline left parenthesis x Superscript t Baseline right parenthesis 2nd Column colon equals sup Underscript delta Subscript t Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline Endscripts upper U Subscript upper T Baseline left parenthesis t comma x Superscript t Baseline semicolon delta Subscript t Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis equals sup Underscript delta Subscript t Baseline Endscripts sup Underscript delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline Endscripts upper U Subscript upper T Baseline left parenthesis t comma x Superscript t Baseline semicolon delta Subscript t Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals sup Underscript delta Subscript t Baseline Endscripts sup Underscript delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline Endscripts left parenthesis ModifyingAbove u With bar Subscript t Baseline left parenthesis delta Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis comma x Superscript t Baseline right parenthesis 3rd Row 1st Column plus 2nd Column rho integral upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis right parenthesis upper K Subscript t Baseline left parenthesis delta left parenthesis x Superscript t Baseline right parenthesis comma x Superscript t Baseline comma d y right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column equals sup Underscript a Subscript t Baseline element of upper A Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis Endscripts left parenthesis ModifyingAbove u With bar Subscript t Baseline left parenthesis a Subscript t Baseline left parenthesis comma x Superscript t Baseline right parenthesis 5th Row 1st Column Blank 2nd Column plus rho sup Underscript delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline Endscripts integral upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis right parenthesis upper K Subscript t Baseline left parenthesis delta left parenthesis x Superscript t Baseline right parenthesis comma x Superscript t Baseline comma d y right parenthesis right parenthesis period EndLayoutV T
t (xt) :=
sup
δt,...,δT −1
UT (t, xt; δt, . . . , δT −1) = sup
δt
sup
δt+1,...,δT −1
UT (t, xt; δt, . . . , δT −1)
= sup
δt
sup
δt+1,...,δT −1
(
¯ut(δt(xt), xt)
+ 
 
UT
(
t + 1, (xt, y); δt+1, . . . , δT −1)
)
Kt(δ(xt), xt, dy)
)
=
sup
at∈At(xt)
(
¯ut(at(, xt)
+  
sup
δt+1,...,δT −1
 
UT
(
t + 1, (xt, y); δt+1, . . . , δT −1)
)
Kt(δ(xt), xt, dy)
)
.
(4.22a)

4.3 Adaptive Random Search Methods
113
Now, according to (4.17b) we have  
StartLayout 1st Row 1st Column Blank 2nd Column upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis equals upper E Subscript x Sub Superscript t Subscript comma y Baseline u Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis comma delta Subscript t plus 1 Baseline left parenthesis x Superscript t Baseline comma y right parenthesis comma 2nd Row 1st Column Blank 2nd Column delta Subscript t plus 2 Baseline left parenthesis x Superscript t Baseline comma y comma upper X Subscript t plus 2 Baseline right parenthesis comma ellipsis comma delta Subscript upper T minus 1 Baseline left parenthesis x Superscript t Baseline comma y comma upper X Subscript t plus 2 Baseline comma ellipsis comma upper X Subscript upper T minus 1 Baseline right parenthesis right parenthesis comma EndLayoutUT (t + 1, (xt, y); δt+1, . . . , δT −1) = Ext,yuT (t + 1, (xt, y), δt+1(xt, y),
δt+2(xt, y, Xt+2), . . . , δT −1(xt, y, Xt+2, . . . , XT −1)),
(4.22b) 
where upper E Subscript x Sub Superscript t Subscript comma yExt,y denotes the conditional expectation given upper X Superscript t plus 1 Baseline equals left parenthesis x Superscript t Baseline comma y right parenthesisXt+1 = (xt, y) and upper X Subscript jX j are 
random vectors deﬁned by (4.2a), (4.2b) and u Subscript upper TuT is the sum in (4.17b). Taking 
now, cf. (4.22a), the integral in (4.22b) with respect to yy and then the supre-
mum with respect to delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baselineδt+1, . . . , δT −1 under the constraints delta Subscript s Baseline left parenthesis x Superscript s Baseline right parenthesis element of upper A Subscript s Baseline left parenthesis x Superscript s Baseline right parenthesis comma x Superscript s Baseline element of upper D Superscript left parenthesis s plus 1 right parenthesis Baseline comma t plus 1 less than or equals s less than or equals upper T minus 1δs(xs) ∈As(xs), xs ∈
D(s+1), t + 1 ≤s ≤T −1, see  (4.20), the question is whether the integral and the 
supremum can be interchanged. Assuming that the suprema in (4.22b) are attained 
at a Subscript s Superscript asterisk Baseline equals delta Subscript s Superscript asterisk Baseline left parenthesis x Superscript s Baseline right parenthesis comma x Superscript s Baseline element of upper D Superscript left parenthesis s plus 1 right parenthesis Baseline comma t plus 1 less than or equals s less than or equals upper T minus 1a∗
s = δ∗
s (xs), xs ∈D(s+1), t + 1 ≤s ≤T −1, with the conditional expectation 
operator upper E Subscript x Sub Superscript tExt with respect to upper X Superscript t Baseline equals x Superscript tXt = xt, from (4.22b) we get 
StartLayout 1st Row 1st Column Blank 2nd Column upper E Subscript x Sub Superscript t Baseline upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Superscript asterisk Baseline comma ellipsis comma delta Subscript upper T minus 1 Superscript asterisk Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals sup Underscript delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline Endscripts upper E Subscript x Sub Superscript t Subscript Baseline upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column less than or equals upper E Subscript x Sub Superscript t Subscript Baseline sup Underscript delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline Endscripts upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column equals upper E Subscript x Sub Superscript t Subscript Baseline upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Superscript asterisk Baseline comma ellipsis comma delta Subscript upper T minus 1 Superscript asterisk Baseline right parenthesis right parenthesis period EndLayoutExtUT
(
t + 1, (xt, y); δ∗
t+1, . . . , δ∗
T −1
)
≤
sup
δt+1,...,δT −1
ExtUT
(
t + 1, (xt, y); δt+1, . . . , δT −1)
)
≤Ext
sup
δt+1,...,δT −1
UT
(
t + 1, (xt, y); δt+1, . . . , δT −1)
)
= ExtUT
(
t + 1, (xt, y); δ∗
t+1, . . . , δ∗
T −1)
)
.
(4.22c) 
Thus, (4.22c) yields 
StartLayout 1st Row 1st Column Blank 2nd Column sup Underscript delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline Endscripts upper E Subscript x Sub Superscript t Subscript Baseline upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper E Subscript x Sub Superscript t Subscript Baseline sup Underscript delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline Endscripts upper U Subscript upper T Baseline left parenthesis t plus 1 comma left parenthesis x Superscript t Baseline comma y right parenthesis semicolon delta Subscript t plus 1 Baseline comma ellipsis comma delta Subscript upper T minus 1 Baseline right parenthesis right parenthesis equals upper V Subscript t plus 1 Superscript upper T Baseline left parenthesis x Superscript t Baseline comma y right parenthesis period EndLayout
sup
δt+1,...,δT −1
ExtUT
(
t + 1, (xt, y); δt+1, . . . , δT −1)
)
= Ext
sup
δt+1,...,δT −1
UT
(
t + 1, (xt, y); δt+1, . . . , δT −1)
)
= V T
t+1(xt, y).
(4.22d) 
The assertion follows now from equation (4.22a) and (4.22d).
◻
Remark 4.1 According to the deﬁnition (4.18b) of upper K Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma dot right parenthesisKt(at, xt, ·) we have 
StartLayout 1st Row 1st Column Blank 2nd Column integral upper V Subscript t plus 1 Superscript upper T Baseline left parenthesis x Superscript t Baseline comma y right parenthesis upper K Subscript t Baseline left parenthesis a comma x Superscript t Baseline comma d y right parenthesis equals integral Underscript y element of upper G left parenthesis x Subscript t Baseline right parenthesis Endscripts upper V Subscript t plus 1 Superscript upper T Baseline left parenthesis x Superscript t Baseline comma y right parenthesis pi Subscript t Baseline left parenthesis a comma x Superscript t Baseline comma d y right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper V Subscript t plus 1 Superscript upper T Baseline left parenthesis x Superscript t Baseline comma x Subscript t Baseline right parenthesis left parenthesis 1 minus pi Subscript t Baseline left parenthesis a comma x Superscript t Baseline comma upper G left parenthesis x Subscript t Baseline right parenthesis right parenthesis right parenthesis period EndLayout
 
V T
t+1(xt, y)Kt(a, xt, dy) =
 
y∈G(xt)
V T
t+1(xt, y)πt(a, xt, dy)
+V T
t+1(xt, xt)
(
1 −πt
(
a, xt, G(xt)
))
.
(4.23a) 
Furthermore, assumingu Subscript t Baseline left parenthesis a comma x comma x right parenthesis equals 0ut(a, x, x) = 0 for allt equals 0 comma 1 comma ellipsist = 0, 1, . . ., andx element of double struck upper R Superscript nx ∈Rn, we have,  
cf. (4.19b), 
ModifyingAbove u With bar Subscript t Baseline left parenthesis a comma x Superscript t Baseline right parenthesis equals integral Underscript y element of upper G left parenthesis x Subscript t Baseline right parenthesis Endscripts u Subscript t Baseline left parenthesis a comma x Subscript t Baseline comma y right parenthesis pi Subscript t Baseline left parenthesis a comma x Superscript t Baseline comma d y right parenthesis period¯ut(a, xt) =
 
y∈G(xt)
ut(a, xt, y)πt(a, xt, dy).
(4.23b) 
In the important Markovian case, i.e., if 
pi Subscript t Baseline left parenthesis a comma x Superscript t Baseline comma dot right parenthesis equals pi Subscript t Baseline left parenthesis a comma x Subscript t Baseline comma dot right parenthesis a n d upper A Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis equals upper A Subscript t Baseline left parenthesis x Subscript t Baseline right parenthesis commaπt(a, xt, ·) = πt(a, xt, ·) and At(xt) = At(xt),
(4.23c)

114
4
Random Search Methods for Global Optimization—Basics
the value function upper V Subscript t Superscript upper TV T
t
depends only on x Subscript txt, see  (4.14a)–(4.14d), (4.17b), (4.18a), 
(4.18b), and (4.21) has the form 
upper V Subscript t Superscript upper T Baseline left parenthesis x Subscript t Baseline right parenthesis equals sup Underscript a element of upper A Subscript t Baseline left parenthesis x Subscript t Baseline right parenthesis Endscripts left parenthesis ModifyingAbove u With bar Subscript t Baseline left parenthesis a comma x Subscript t Baseline right parenthesis plus integral upper V Subscript t plus 1 Superscript upper T Baseline left parenthesis y right parenthesis upper K Subscript t Baseline left parenthesis a comma x Subscript t Baseline comma d y right parenthesis right parenthesis periodV T
t (xt) =
sup
a∈At(xt)
(
¯ut(a, xt) +
 
V T
t+1(y)Kt(a, xt, dy)
)
.
(4.23d) 
In the one-stage case t equals upper T minus 1t = T −1 equation (4.21) has the simple form 
upper V Subscript upper T minus 1 Superscript upper T Baseline left parenthesis x Superscript upper T minus 1 Baseline right parenthesis equals sup left brace ModifyingAbove u With bar Subscript upper T minus 1 Baseline left parenthesis a comma x Superscript upper T minus 1 Baseline right parenthesis colon a element of upper A Subscript upper T minus 1 Baseline left parenthesis x Superscript upper T minus 1 Baseline right parenthesis right brace periodV T
T −1(xT −1) = sup
{
¯uT −1(a, xT −1) : a ∈AT −1(xT −1)
}
.
(4.23e) 
4.3.1 
Inﬁnite-Stage Search Processes 
The decision process deﬁned by (4.21) is called the sequential stochastic decision 
process associated with the random search procedure (4.2a), (4.2b). An important 
variant of this decision process results in the inﬁnite-stage stationary Markovian case. 
Letpi Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma dot right parenthesis equals pi left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma dot right parenthesisπt(at, xt, ·) = π(at, xt, ·),upper A Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis equals upper A left parenthesis x Subscript t Baseline right parenthesisAt(xt) = A(xt) ,u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma x Subscript t plus 1 Baseline right parenthesis equals u left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma x Subscript t plus 1 Baseline right parenthesisut(at, xt, xt+1) = u(at, xt, xt+1), 
delta Subscript t Baseline left parenthesis x Superscript t Baseline right parenthesis equals delta left parenthesis x Subscript t Baseline right parenthesis comma t equals 0 comma 1 comma ellipsisδt(xt) = δ(xt), t = 0, 1, . . . . Moreover, let 0 less than rho less than 10 <  < 1 be a certain discount factor. 
According to Theorem 4.3, the value functionupper V Subscript t Superscript upper T Baseline equals upper V Subscript t Superscript upper T Baseline left parenthesis x right parenthesisV T
t
= V T
t (x) of the (T-t)-stage process 
depends only on the state x Subscript t Baseline equals xxt = x and fulﬁlls the recurrence relation: 
upper V Subscript t Superscript upper T Baseline left parenthesis x right parenthesis equals sup Underscript a element of upper A left parenthesis x right parenthesis Endscripts left parenthesis ModifyingAbove u With bar left parenthesis a comma x right parenthesis plus integral upper V Subscript t plus 1 Superscript upper T Baseline left parenthesis y right parenthesis upper K left parenthesis a comma x comma d y right parenthesis right parenthesis commaV T
t (x) = sup
a∈A(x)
(
¯u(a, x) +
 
V T
t+1(y)K(a, x, dy)
)
,
(4.24a) 
t equals upper T minus 1 comma upper T minus 2 comma ellipsis comma 1 comma 0t = T −1, T −2, . . . , 1, 0, where a equals delta left parenthesis x Subscript t Baseline right parenthesisa = δ(xt). Introducing the stage transformation 
left parenthesis upper T minus t right parenthesis right arrow t(T −t) →t, the transformed value function 
upper W Subscript t Baseline left parenthesis x right parenthesis colon equals upper V Subscript upper T minus t Superscript upper T Baseline left parenthesis x right parenthesis comma t equals 0 comma 1 comma ellipsisWt(x) := V T
T −t(x), t = 0, 1, . . .
(4.24b) 
satisﬁes (insert s colon equals upper T minus ts := T −t and replace then again s right arrow ts →t) the forward recurrence 
relations 
upper W Subscript t Baseline left parenthesis x right parenthesis equals sup Underscript a element of upper A left parenthesis x right parenthesis Endscripts left parenthesis ModifyingAbove u With bar left parenthesis a comma x right parenthesis plus rho integral upper W Subscript t minus 1 Baseline left parenthesis y right parenthesis upper K left parenthesis a comma x comma d y right parenthesis right parenthesis comma t equals 0 comma 1 comma ellipsis commaWt(x) = sup
a∈A(x)
(
¯u(a, x) +  
 
Wt−1(y)K(a, x, dy)
)
, t = 0, 1, . . . ,
(4.24c) 
where the functional equation (4.24c) holds for each integer upper TT , and we have, cf. 
Theorem 4.3, upper W 0 left parenthesis x right parenthesis equals 0W0(x) = 0. 
Under certain conditions the sequence left parenthesis upper W Subscript t Baseline left parenthesis x right parenthesis right parenthesis
(
Wt(x)
)
is convergent to the function 
upper W Superscript asterisk Baseline left parenthesis x right parenthesisW ∗(x) satisfying the asymptotic functional equation 
upper W Superscript asterisk Baseline left parenthesis x right parenthesis equals sup Underscript a element of upper A left parenthesis x right parenthesis Endscripts left parenthesis ModifyingAbove u With bar left parenthesis a comma x right parenthesis plus rho integral upper W Superscript asterisk Baseline left parenthesis y right parenthesis upper K left parenthesis a comma x comma d y right parenthesis right parenthesis periodW ∗(x) = sup
a∈A(x)
(
¯u(a, x) +  
 
W ∗(y)K(a, x, dy)
)
.
(4.24d)

4.4 Convex Problems
115
Moreover, an optimal decision rule delta Superscript asteriskδ∗is then given by delta Superscript asterisk Baseline left parenthesis x right parenthesis equals a Superscript asterisk Baseline element of upper A left parenthesis x right parenthesisδ∗(x) = a∗∈A(x), where 
a Superscript asteriska∗is a solution of the maximization problem in (4.24d). 
4.4 
Convex Problems 
For simplicity, here we only consider here the minimization of a real-valued convex 
function upper F colon double struck upper R right arrow double struck upper RF : R →R with respect to upper D equals double struck upper RD = R. Assuming the second derivative upper F double primeF''
exists and upper F double prime left parenthesis x right parenthesis greater than 0F''(x) > 0 for all x element of double struck upper Rx ∈R, the interval upper G left parenthesis x right parenthesis equals StartSet y element of double struck upper R colon upper F left parenthesis y right parenthesis less than upper F left parenthesis x right parenthesis EndSetG(x) =
{
y ∈R : F(y) < F(x)
}
may be approximated by the interval 
upper H left parenthesis x right parenthesis equals StartSet y element of upper K colon upper F prime left parenthesis x right parenthesis left parenthesis y minus x right parenthesis plus StartFraction upper F double prime left parenthesis x right parenthesis Over 2 EndFraction left parenthesis y minus x right parenthesis squared less than 0 EndSet periodH(x) =
 
y ∈K : F'(x)(y −x) + F''(x)
2
(y −x)2 < 0
 
.
(4.25a) 
It is easy to see that 
StartLayout 1st Row 1st Column upper H left parenthesis x right parenthesis 2nd Column equals StartSet y element of double struck upper R colon x less than y less than x minus 2 StartFraction upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndSet comma 3rd Column i f upper F prime left parenthesis x right parenthesis less than 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column upper H left parenthesis x right parenthesis 2nd Column equals upper G left parenthesis x right parenthesis equals normal empty set comma 3rd Column i f upper F prime left parenthesis x right parenthesis equals 0 comma 4th Row 1st Column Blank 5th Row 1st Column upper H left parenthesis x right parenthesis 2nd Column equals StartSet y element of double struck upper R colon x minus 2 StartFraction upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction less than y less than x EndSet comma 3rd Column i f upper F prime left parenthesis x right parenthesis greater than 0 period EndLayoutH(x) =
 
y ∈R : x < y < x −2 F'(x)
F''(x)
 
,
if F'(x) < 0,
(4.25b) 
StartLayout 1st Row 1st Column upper H left parenthesis x right parenthesis 2nd Column equals StartSet y element of double struck upper R colon x less than y less than x minus 2 StartFraction upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndSet comma 3rd Column i f upper F prime left parenthesis x right parenthesis less than 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column upper H left parenthesis x right parenthesis 2nd Column equals upper G left parenthesis x right parenthesis equals normal empty set comma 3rd Column i f upper F prime left parenthesis x right parenthesis equals 0 comma 4th Row 1st Column Blank 5th Row 1st Column upper H left parenthesis x right parenthesis 2nd Column equals StartSet y element of double struck upper R colon x minus 2 StartFraction upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction less than y less than x EndSet comma 3rd Column i f upper F prime left parenthesis x right parenthesis greater than 0 period EndLayoutH(x) = G(x) = ∅,
if F'(x) = 0,
(4.25c) 
StartLayout 1st Row 1st Column upper H left parenthesis x right parenthesis 2nd Column equals StartSet y element of double struck upper R colon x less than y less than x minus 2 StartFraction upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndSet comma 3rd Column i f upper F prime left parenthesis x right parenthesis less than 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column upper H left parenthesis x right parenthesis 2nd Column equals upper G left parenthesis x right parenthesis equals normal empty set comma 3rd Column i f upper F prime left parenthesis x right parenthesis equals 0 comma 4th Row 1st Column Blank 5th Row 1st Column upper H left parenthesis x right parenthesis 2nd Column equals StartSet y element of double struck upper R colon x minus 2 StartFraction upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction less than y less than x EndSet comma 3rd Column i f upper F prime left parenthesis x right parenthesis greater than 0 period EndLayoutH(x) =
 
y ∈R : x −2 F'(x)
F''(x) < y < x
 
,
if F'(x) > 0.
(4.25d) 
For the conditional distribution pi left parenthesis a comma x comma dot right parenthesisπ(a, x, ·) of the search variables left parenthesis upper Z Subscript t Baseline right parenthesis(Zt) given upper X Subscript t Baseline equals xXt = x
we choose now a normal distribution with meanmu equals xμ = x and variancesigma squared equals a squaredσ 2 = a2. Hence, 
in this case our decision parameter aa is then the standard deviation sigmaσ. Furthermore, 
according to the above approximation of upper G left parenthesis x right parenthesisG(x) by upper H left parenthesis x right parenthesisH(x), we approximate the utility 
function u left parenthesis a comma x comma y right parenthesisu(a, x, y) of Sect. 4.3, by  
ModifyingAbove u With tilde left parenthesis a comma x comma y right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column StartAbsoluteValue y minus x EndAbsoluteValue 2nd Column comma y element of upper H left parenthesis x right parenthesis 2nd Row 1st Column 0 2nd Column comma o t h e r w i s e period EndLayout˜u(a, x, y) =
 |y −x| ,
y ∈H(x)
0
,
otherwise.
(4.26a) 
Obviously, the stochastic decision process associated with the random search 
procedure (4.2a), (4.2b) is stationary and ModifyingAbove u With bar left parenthesis a comma x right parenthesis¯u(a, x) may be approximated by 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column ModifyingAbove Above ModifyingAbove u With tilde With bar left parenthesis a comma x right parenthesis colon equals integral Underscript y element of upper H left parenthesis x right parenthesis Endscripts ModifyingAbove u With tilde left parenthesis a comma x comma y right parenthesis pi left parenthesis a comma x comma d y right parenthesis 2nd Row 1st Column Blank 2nd Column equals 3rd Column StartFraction sigma Over StartRoot 2 pi EndRoot EndFraction left parenthesis 1 minus exp left parenthesis minus one half left parenthesis StartFraction 2 upper F prime left parenthesis x right parenthesis Over sigma upper F double prime left parenthesis x right parenthesis EndFraction right parenthesis squared right parenthesis right parenthesis period EndLayout
¯˜u(a, x) :=
 
y∈H(x)
˜u(a, x, y)π(a, x, dy)
=
σ
√
2π
(
1 −exp
(
−1
2
( 2F'(x)
σ F''(x)
)2))
.
(4.26b)

116
4
Random Search Methods for Global Optimization—Basics
Starting from ModifyingAbove upper W With tilde Subscript 0 Baseline left parenthesis x right parenthesis equals upper W 0 left parenthesis x right parenthesis equals 0 ˜
W0(x) = W0(x) = 0, the approximate ModifyingAbove upper W With tilde Subscript 1 Baseline left parenthesis x right parenthesis equals sup Underscript sigma greater than 0 Endscripts ModifyingAbove Above ModifyingAbove u With tilde With bar left parenthesis sigma comma x right parenthesis ˜
W1(x) = sup
σ>0
¯˜u(σ, x) to the 
value function upper W 1 left parenthesis x right parenthesisW1(x), see  (4.24c) and the approximative decision function ModifyingAbove sigma With tilde Subscript 1 Baseline equals ModifyingAbove sigma With tilde Subscript 1 Baseline left parenthesis x right parenthesis˜σ1 =
˜σ1(x), deﬁned by ModifyingAbove upper W With tilde Subscript 1 Baseline left parenthesis x right parenthesis equals ModifyingAbove Above ModifyingAbove u With tilde With bar left parenthesis sigma overTilde Subscript 1 Baseline comma x right parenthesis ˜
W1(x) = ¯˜u(˜σ1, x), are given by the following theorem. 
Theorem 4.4 Let gg be the function g left parenthesis t right parenthesis equals StartFraction 1 Over StartRoot 2 pi EndRoot t EndFraction left parenthesis 1 minus exp left parenthesis minus one half t squared right parenthesis right parenthesisg(t) =
1
√
2πt
(
1 −exp(−1
2t2)
)
, and let denote 
t Superscript asterisk Baseline greater than 0t∗> 0 the number where gg attains its maximum g Superscript asteriskg∗. Then, 
ModifyingAbove upper W With tilde Subscript 1 Baseline left parenthesis x right parenthesis equals g Superscript asterisk Baseline StartAbsoluteValue StartFraction 2 upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndAbsoluteValue a n d ModifyingAbove sigma With tilde Subscript 1 Baseline left parenthesis x right parenthesis equals StartFraction 1 Over t Superscript asterisk Baseline EndFraction StartAbsoluteValue StartFraction 2 upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndAbsoluteValue period ˜
W1(x) = g∗
||||
2F'(x)
F''(x)
|||| and ˜σ1(x) = 1
t∗
||||
2F'(x)
F''(x)
|||| .
(4.27) 
Proof Using the transformation sigma right arrow t colon equals StartFraction 1 Over sigma EndFraction StartAbsoluteValue StartFraction 2 upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndAbsoluteValueσ →t := 1
σ
||| 2F'(x)
F''(x)
|||, according to (4.26b) and the 
above deﬁnition of the functiong equals g left parenthesis t right parenthesisg = g(t),wehaveModifyingAbove Above ModifyingAbove u With tilde With bar left parenthesis sigma comma x right parenthesis equals StartAbsoluteValue StartFraction 2 upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndAbsoluteValue g left parenthesis t right parenthesis¯˜u(σ, x) =
||| 2F'(x)
F''(x)
||| g(t). This yields 
the assertion.
◻
Obviously, according to (4.26a), ModifyingAbove upper W With tilde Subscript 1 Baseline left parenthesis x right parenthesis equals g Superscript asterisk Baseline StartAbsoluteValue StartFraction 2 upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndAbsoluteValue ˜
W1(x) = g∗||| 2F'(x)
F''(x)
||| is an approximate to the 
average step length s 1 left parenthesis x right parenthesiss1(x) of the ﬁrst step upper X 0 right arrow upper X 1X0 →X1 of the search process left parenthesis upper X Subscript t Baseline right parenthesis(Xt). 
Comparing this result with Newton’s method x right arrow y equals x minus alpha left parenthesis x right parenthesis StartFraction upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction comma alpha left parenthesis x right parenthesis greater than 0x →y = x −α(x) F'(x)
F''(x), α(x) > 0
for the minimization of upper FF, we observe that in Newton’s method the step length 
s Subscript upper N Baseline left parenthesis x right parenthesis equals StartAbsoluteValue y minus x EndAbsoluteValue equals alpha left parenthesis x right parenthesis StartAbsoluteValue StartFraction upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndAbsoluteValuesN(x) = |y −x| = α(x)
||| F'(x)
F''(x)
||| has—up to a normalizing factor—the same form as 
s 1 left parenthesis x right parenthesiss1(x). 
Similar results are obtained from comparisons of Theorem 4.4 with deterministic 
and stochastic gradient procedures. 
In general, the computation of the further iterates upper W overTilde Subscript t ˜
Wt and delta overTilde Subscript t Baseline comma t equals 2 comma 3 comma ellipsis˜δt, t = 2, 3, . . . will 
be in general hardly carried out in practice, because of its difﬁculty and because 
ModifyingAbove sigma With tilde left parenthesis x right parenthesis equals tau left parenthesis x right parenthesis StartAbsoluteValue StartFraction 2 upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndAbsoluteValue˜σ(x) = τ(x)
||| 2F'(x)
F''(x)
||| with a normalizing factortau left parenthesis x right parenthesis greater than 0τ(x) > 0 is a reasonable approximate 
to the optimal decision rule. This is also conﬁrmed by numerical experiments. On 
the other hand, for the quadratic case 
upper F left parenthesis x right parenthesis equals x squaredF(x) = x2
we can obtain the exact results. In fact, then we have that upper H left parenthesis x right parenthesis equals upper G left parenthesis x right parenthesisH(x) = G(x) and 
upper W 1 left parenthesis x right parenthesis equals ModifyingAbove upper W With tilde Subscript 1 Baseline left parenthesis x right parenthesis equals 2 g Superscript asterisk Baseline StartAbsoluteValue x EndAbsoluteValueW1(x) = ˜
W1(x) = 2g∗|x| as alsosigma 1 left parenthesis x right parenthesis equals ModifyingAbove sigma With tilde Subscript 1 Baseline left parenthesis x right parenthesis equals StartFraction 2 Over t Superscript asterisk Baseline EndFraction StartAbsoluteValue x EndAbsoluteValueσ1(x) = ˜σ1(x) = 2
t∗|x|. For solving now the func-
tional equation (4.24b) we work therefore with the assumptions 
upper W Superscript asterisk Baseline left parenthesis x right parenthesis equals upper C StartAbsoluteValue x EndAbsoluteValue a n d sigma Superscript asterisk Baseline left parenthesis x right parenthesis equals c StartAbsoluteValue x EndAbsoluteValue commaW ∗(x) = C|x| and σ ∗(x) = c|x|,
(4.28) 
where upper C comma cC, c are positive constants. 
Theorem 4.5 The optimal valueupper W Superscript asteriskW ∗and the optimal decision ruledelta Superscript asterisk Baseline left parenthesis x right parenthesis equals sigma Superscript asterisk Baseline left parenthesis x right parenthesisδ∗(x) = σ ∗(x) of 
the inﬁnite-stage stationary stochastic decision process associated with the random 
search procedure for the minimization of upper F left parenthesis x right parenthesis equals x squaredF(x) = x2 has the form (4.28), where 
c almost equals StartFraction 8 StartRoot pi EndRoot Over 4 StartRoot pi EndRoot minus rho StartRoot 2 EndRoot EndFractionc ≈
8√π
4√π − 
√
2
and upper C almost equals StartFraction 1 Over StartRoot 2 pi EndRoot EndFraction minus StartFraction rho Over 4 pi EndFractionC ≈
1
√
2π
− 
4π .

References
117
Proof See [ 6].
◻
Note 4.3 As was mentioned in Sect. 4.1, often an analytic expression for upper FF is not 
known and only the function values upper F left parenthesis x right parenthesisF(x) may be obtained. Hence the derivatives 
upper F prime left parenthesis x right parenthesis comma upper F double prime left parenthesis x right parenthesisF'(x), F''(x) in the “optimal” decision rule ModifyingAbove sigma With tilde left parenthesis x right parenthesis equals tau left parenthesis x right parenthesis StartAbsoluteValue StartFraction 2 upper F prime left parenthesis x right parenthesis Over upper F double prime left parenthesis x right parenthesis EndFraction EndAbsoluteValue˜σ(x) = τ(x)
||| 2F'(x)
F''(x)
||| must be estimated 
from observations of upper FF. 
References 
1. Anderson, R.: Recent advances in ﬁnding best operating conditions. J. Am. Stat. Assoc. 48(264), 
789–798 (1953). http://www.jstor.org/stable/2281072 
2. Box, G.: Evolutionary operation: a method for increasing industrial productivity. J. R. Stat. Soc. 
Ser. C 6(2), 81–101 (1957). https://doi.org/10.2307/2985505 
3. Brooks, S.: A discussion of random methods for seeking maxima. Oper. Res. 6(2), 244–251 
(1958). https://doi.org/10.1287/opre.6.2.244 
4. Iosifescu, M., Theodorescu, R.: Random Process and Learning. Springer, Berlin (1969) 
5. Karnopp, D.C.: Random search techniques for optimization problems. Automatica 1(2–3), 111– 
121 (1963). https://doi.org/10.1016/0005-1098(63)90018-9 
6. Marti, K.: On accelerations of the convergence in random search methods. Methods Oper. Res. 
37, 391–406 (1980) 
7. Neumann, K.: Dynamische Optimierung. Bibliographisches Institut, Mannheim (1969) 
8. Rappl, G.: Konvergenzraten von Random-Search-Verfahren zur globalen Optimierung. Ph.D. 
thesis, UniBw München (1984) 
9. Richter, H.: Wahrscheinlichkeitstheorie. Springer, Berlin (1966)

Chapter 5 
Controlled Random Search Methods 
as a Stochastic Decision Process 
Abstract As already discussed in the preceding chapter, in order to develop proce-
dures for increasing the rate of convergence of the basic search method, the stochas-
tic search procedure is equipped with a mechanism for controlling the conditional 
probability distributions of the search variates at the iteration points, generating the 
new trial points for improving the current iteration point. In an attendant control or 
stochastic decision process, the parameters of the search variables can be selected to 
maximize criteria for measuring the progress of the search, such as the probability 
of a step into the area of success, or the mean step length into the area of success 
at a certain iteration point. Due to the black-box situation concerning the objective 
function upper FF, we have a stochastic control or decision process under uncertainty con-
cerning the objective function. Based on a Bayesian approach, with the obtained 
information from the search algorithm, the conditional distribution of upper FF, given  the  
information obtained during the search, can be determined. 
5.1 
The Controlled (or Adaptive) Random Search Method 
In order to increase the rate of convergence of the basic search method (4.2a), accord-
ing to Sect. 4.3 we consider the following procedure, cf. [ 2, 3]. Based on the basic 
random search method (4.2a), by means of the deﬁnitions (I)–(III) we describe ﬁrst 
an (inﬁnite-stage) sequential stochastic decision process associated to (4.2a). 
(I) We use next to the fact that the transition probabilities pi Subscript t Baseline left parenthesis x Superscript t Baseline comma dot right parenthesisπt(xt, ·) depend 
pi Subscript t Baseline left parenthesis x Superscript t Baseline comma dot right parenthesis equals pi Subscript t Baseline left parenthesis a comma x Superscript t Baseline comma dot right parenthesisπt(xt, ·) = πt(a, xt, ·)
usually on certain parameters a equals left parenthesis a Subscript j Baseline right parenthesis Subscript j epsilon upper J Baseline element of upper Aa = (a j) jεJ ∈A, as, e.g., on certain (mixed) 
moments of the random vector upper Z Subscript t plus 1Zt+1. Let  
ModifyingAbove h With caret Superscript t Baseline equals left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline comma z 1 comma ellipsis comma z Subscript t minus 1 Baseline right parenthesisˆht = (x0, x1, . . . , xt, z1, . . . , zt−1)
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_5 
119

120
5
Controlled Random Search Methods as a Stochastic Decision Process
be the process history of upper X Subscript t Baseline comma upper Z Subscript t BaselineXt, Zt up to time tt. The idea, developed ﬁrst in [ 2, 
3], is now to run the random search not with a ﬁxed parameter aa, but to use an 
“optimal” control 
a equals a Subscript t Superscript asterisk Baseline left parenthesis x Superscript t Baseline right parenthesis o r a equals a Subscript t Superscript asterisk Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesisa = a∗
t (xt) or a = a∗
t (ˆht)
of the parameter aa such that a certain criterion measuring the progress of the 
search, as, e.g., the probability of a search success or the mean step length 
into the area of success at each step upper X Subscript t Baseline right arrow upper X Subscript t plus 1Xt →Xt+1 is as large as possible. In the 
following, 
h Superscript t Baseline equals left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline comma z 1 comma z 2 comma ellipsis comma z Subscript t Baseline comma a 0 comma a 1 comma ellipsis comma a Subscript t minus 1 Baseline right parenthesisht = (x0, x1, . . . , xt, z1, z2, . . . , zt, a0, a1, . . . , at−1)
denotes the total process history up to time tt. 
(II) To each step x Subscript t Baseline right arrow upper X Subscript t plus 1xt →Xt+1 there is associated a conditional mean (search-) gain 
upper E left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma upper X Subscript t plus 1 Baseline right parenthesis vertical bar h Superscript t Baseline right parenthesis upper E left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma upper Z Subscript t plus 1 Baseline right parenthesis vertical bar h Superscript t Baseline right parenthesis periodE
(
ut(at, xt, Xt+1)|ht)
E
(
ut(at, xt, Zt+1)|ht)
.
(5.1a) 
Working, e.g., with the probability of a search success resp. the mean improve-
ment of upper FF resp. the mean (relative) step length into the area of success, u Subscript tut is 
given by 
StartLayout 1st Row 1st Column u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma z Subscript t plus 1 Baseline right parenthesis 2nd Column equals 3rd Column 1 comma equals upper F left parenthesis x Subscript t Baseline right parenthesis minus upper F left parenthesis z Subscript t plus 1 Baseline right parenthesis comma equals parallel to x Subscript t Baseline minus z Subscript t plus 1 Baseline parallel to 2nd Row 1st Column Blank 2nd Column equals 3rd Column StartFraction parallel to x Subscript t Baseline minus z Subscript t plus 1 Baseline parallel to Over parallel to x Subscript t Baseline parallel to EndFraction comma r e s p period comma i f z Subscript t plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis 3rd Row 1st Column u Subscript t 2nd Column equals 3rd Column 0 i f z Subscript t plus 1 Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis period EndLayoutut(at, xt, zt+1) = 1, = F(xt) −F(zt+1), = ||xt −zt+1||
= ||xt −zt+1||
||xt||
, resp., if zt+1 ∈G F(xt)
ut = 0 ifzt+1 /∈G F(xt).
(5.1b) 
Calculating the conditional mean again in (5.1a) we have to solve next to inte-
grals of the type 
upper J left parenthesis x Superscript t Baseline comma upper F right parenthesis equals integral Underscript StartLayout 1st Row upper F left parenthesis z Subscript t plus 1 Baseline right parenthesis less than upper F left parenthesis x Subscript t Baseline right parenthesis 2nd Row z Subscript t plus 1 Baseline element of upper D EndLayout Endscripts u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma z Subscript t plus 1 Baseline right parenthesis pi Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma d z Subscript t plus 1 Baseline right parenthesis periodJ(xt, F) =
 
F(zt+1)<F(xt )
zt+1∈D
ut(at, xt, zt+1)πt(at, xt, dzt+1).
(5.2) 
However, because of the black-box-situation concerning the objective func-
tion upper FF of (4.1), i.e., having available at stage tt only the discrete upper FF-values 
upper F left parenthesis x 0 right parenthesis comma upper F left parenthesis z 1 right parenthesis comma ellipsis comma upper F left parenthesis z Subscript t Baseline right parenthesisF(x0), F(z1), . . . , F(zt) as also the given some a priori information on upper FF, the  
inequality upper F left parenthesis z Subscript t plus 1 Baseline right parenthesis less than upper F left parenthesis x Subscript t Baseline right parenthesisF(zt+1) < F(xt) in (5.2) can not be evaluated in general. Conse-
quently, the integral upper J left parenthesis x Superscript t Baseline comma upper F right parenthesisJ(xt, F) can not be computed in general because of the 
missing knowledge about upper FF. 
(III) In order to cope with this uncertainty, we may proceed in the following two 
different ways: 
III.1 Approximation of the area of success upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesisG F(xt), see  (4.3),  by a set  ModifyingAbove upper G With tilde Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis 
G F(xt)
which may be described by the information available onupper FF up to the current 
time tt.

5.1 The Controlled (or Adaptive) Random Search Method
121
As an example we mention here the following Random-Search-Newton-
Method [ 3]: Similar to the (deterministic) Newton method in optimization, 
at statex Subscript txt we approximate ﬁrst the valueupper F left parenthesis z Subscript t plus 1 Baseline right parenthesisF(zt+1) by the second-order Taylor 
polynomial 
StartLayout 1st Row 1st Column Blank 2nd Column upper F left parenthesis z Subscript t plus 1 Baseline right parenthesis 2nd Row 1st Column almost equals 2nd Column upper F left parenthesis x Subscript t Baseline right parenthesis plus nabla upper F left parenthesis x Subscript t Baseline right parenthesis Superscript upper T Baseline left parenthesis z Subscript t plus 1 Baseline minus x Subscript t Baseline right parenthesis plus one half left parenthesis z Subscript t plus 1 Baseline minus x Subscript t Baseline right parenthesis Superscript upper T nabla squared upper F left parenthesis x Subscript t Baseline right parenthesis left parenthesis z Subscript t plus 1 Baseline minus x Subscript t Baseline right parenthesis EndLayoutF(zt+1)
≈F(xt) + ∇F(xt)T (zt+1 −xt) + 1
2(zt+1 −xt)T ∇2F(xt)(zt+1 −xt)
(5.3a) 
at x Subscript txt, where the derivatives nabla upper F comma nabla squared upper F∇F, ∇2F of upper FF may be obtained approximately 
by a numerical differentiation procedure using the process history h Superscript tht. 
Then, upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesisG F(xt) can be approximated by the set 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove upper G With tilde Subscript upper F Baseline left parenthesis x Subscript t Baseline semicolon ModifyingAbove h With caret Superscript t Baseline right parenthesis colon equals left brace y element of upper D colon ModifyingAbove nabla upper F With tilde left parenthesis x Subscript t Baseline semicolon ModifyingAbove h With caret Superscript t Baseline right parenthesis Superscript upper T Baseline left parenthesis y minus x Subscript t Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus one half left parenthesis y minus x Subscript t Baseline right parenthesis Superscript upper T Baseline ModifyingAbove nabla squared upper F With tilde left parenthesis x Subscript t Baseline semicolon ModifyingAbove h With caret Superscript t Baseline right parenthesis left parenthesis y minus x Subscript t Baseline right parenthesis less than 0 right brace comma EndLayout  
G F(xt; ˆht) :=
{
y ∈D :  
∇F(xt; ˆht)T (y −xt)
+1
2(y −xt)T  
∇2F(xt; ˆht)(y −xt) < 0
}
,
(5.3b) 
whereModifyingAbove nabla upper F With tilde left parenthesis x Subscript t Baseline semicolon ModifyingAbove h With caret Superscript t Baseline right parenthesis comma ModifyingAbove nabla squared upper F With tilde left parenthesis x Subscript t Baseline semicolon ModifyingAbove h With caret Superscript t Baseline right parenthesis 
∇F(xt; ˆht),  
∇2F(xt; ˆht) are approximations to the gradient, Hessian, 
resp., nabla upper F left parenthesis x Subscript t Baseline right parenthesis comma nabla squared upper F left parenthesis x Subscript t Baseline right parenthesis∇F(xt), ∇2F(xt) of upper FF at x Subscript txt based on the process history h Superscript tht. The  
conditional mean gain (5.1a), (5.1b) be approximated now by 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper E left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma upper Z Subscript t plus 1 Baseline right parenthesis vertical bar h Superscript t Baseline right parenthesis almost equals upper E left parenthesis ModifyingAbove u With tilde Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma upper Z Subscript t plus 1 Baseline right parenthesis vertical bar ModifyingAbove h With caret Superscript t Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column colon equals 3rd Column integral Underscript z Subscript t plus 1 Baseline epsilon ModifyingAbove upper G With tilde Subscript upper F Baseline left parenthesis x Subscript t Baseline semicolon ModifyingAbove h With caret Superscript t Baseline right parenthesis Endscripts u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma z Subscript t plus 1 Baseline right parenthesis pi Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma d z Subscript t plus 1 Baseline right parenthesis period EndLayout
E
(
ut(at, xt, Zt+1)|ht)
≈E
(
˜ut(at, xt, Zt+1)|ˆht)
:=
 
zt+1ε 
G F(xt;ˆht)
ut(at, xt, zt+1)πt(at, xt, dzt+1).
(5.3c) 
By (I), (II), (III.1) we have now an inﬁnite-stage sequential stochastic deci-
sion process for the deﬁnition of an optimal parameter control a Subscript t Superscript asterisk Baseline equals a Subscript t Superscript asterisk Baseline left parenthesis h Superscript t Baseline right parenthesisa∗
t = a∗
t (ht)
speeding up the random search according to the chosen searching-gain crite-
riau Subscript tut. Since in practice our aim is to speed up to some extent the convergence 
of the basic random search procedure (4.2a) for solving (4.1), the compu-
tational effort for ﬁnding an optimal decision rule a Subscript t Superscript asterisk Baseline comma t equals 0 comma 1 comma ellipsisa∗
t , t = 0, 1, . . ., should 
remain in realistic bounds. Hence, for practical purposes we are not inter-
ested in the exact solution a Subscript t Superscript asterisk Baseline equals a Subscript t Superscript asterisk Baseline left parenthesis h Superscript t Baseline right parenthesisa∗
t = a∗
t (ht) of the associated decision process, 
but we are looking for a sub-optimal control a Subscript t Superscript asteriska∗
t obtainable by a reasonable 
computational effort. Approximating therefore the inﬁnite-stage decision 
process by the family of 1-stage decision processes, a Subscript t Superscript asteriska∗
t may be deﬁned by 
a Subscript t Superscript asterisk Baseline equals a Subscript t Superscript asterisk Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis element of a r g max Underscript a element of upper A Subscript t Baseline left parenthesis x Subscript t Baseline right parenthesis Endscripts upper E left parenthesis ModifyingAbove u With tilde Subscript t Baseline left parenthesis a comma x Subscript t Baseline comma upper Z Subscript t plus 1 Baseline right parenthesis vertical bar ModifyingAbove h With caret Superscript t Baseline right parenthesis commaa∗
t = a∗
t (ˆht) ∈arg
max
a∈At(xt) E
(
˜ut(a, xt, Zt+1)|ˆht)
,
(5.4) 
where upper A Subscript t Baseline equals upper A Subscript t Baseline left parenthesis x Subscript t Baseline right parenthesisAt = At(xt) denotes still the set of parameters available at left parenthesis t comma x Subscript t Baseline right parenthesis(t, xt). 
Having by the application of a Subscript t Superscript asteriska∗
t a local improvement of the convergence

122
5
Controlled Random Search Methods as a Stochastic Decision Process
behavior of the random search, we will show later on also the convergence 
of the controlled process upper X Subscript t Superscript asteriskX∗
t toward upper B Subscript epsilon comma upper MBε,M. 
Now the second method for handling the uncertainty concerning upper FF is 
described. 
III.2 Because of the missing information about the objective function upper FF, actu-
ally we have a sequential stochastic decision process under uncertainty. 
Hence, the conditional mean search gain (5.1a), (5.1b) must be deﬁned by 
upper E left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma upper X Subscript t plus 1 Baseline right parenthesis vertical bar h Superscript t Baseline right parenthesis equals integral upper J left parenthesis x Superscript t Baseline comma upper F right parenthesis mu Subscript h Sub Superscript t Subscript Baseline left parenthesis d upper F right parenthesis commaE
(
ut(at, xt, Xt+1)|ht)
=
 
J(xt, F)μht(dF),
(5.5) 
where upper J left parenthesis x Superscript t Baseline comma upper F right parenthesisJ(xt, F) is given by (5.2), and mu Subscript h Sub Superscript tμht is the conditional distribution 
of the unknown bold upper FF, given the process history bold h Superscript bold tht. For the proper deﬁnition 
of mu Subscript h Sub Superscript tμht we need ﬁrst a mathematical representation of the given a priori 
information aboutupper FF, as, e.g.,upper F“upper FF is an unknown polynomial innn variables” 
or a left parenthesis x right parenthesis less than or equals upper F left parenthesis x right parenthesis less than or equals b left parenthesis x right parenthesis“a left parenthesis x right parenthesis less than or equals upper F left parenthesis x right parenthesis less than or equals b left parenthesis x right parenthesisa(x) ≤F(x) ≤b(x) for all x element of upper Dx ∈D with given functions a left parenthesis dot right parenthesis comma b left parenthesis dot right parenthesisa(·), b(·)”. 
We use a Bayesian model for the unknown upper FF: We assume that there is 
a measurable space left parenthesis theta comma upper A right parenthesis(θ, A) of parameters thetaθ and an a priori distribution mu Superscript 0μ0
of the parameters thetaθ on upper AA such that the objective function upper FF of (4.1) is a  
realization 
upper F left parenthesis x right parenthesis equals f left parenthesis x comma theta Superscript 0 Baseline right parenthesis comma x element of double struck upper R Superscript n Baseline commaF(x) = f (x, θ0),
x ∈Rn,
(5.6a) 
a. of a stochastic functiony equals f left parenthesis x comma theta right parenthesis comma x element of double struck upper R Superscript n Baseline comma theta element of normal upper Thetay = f (x, θ), x ∈Rn, θ ∈ , ondouble struck upper R Superscript nRn, wheretheta Superscript 0θ0 is the 
true, but unknown parameter. We assume that each realization f left parenthesis dot comma theta right parenthesis f (·, θ) of f f
is a measurable function on double struck upper R Superscript nRn. 
Note 5.1 We observe that similar models for unknown functions in engineering have 
been used also in [ 1, 4]. 
In the next Sect. 5.2 we will show that 
mu Subscript h Sub Superscript t Subscript Baseline equals mu Subscript ModifyingAbove h With caret Sub Superscript t Subscript Baseline commaμht = μˆht,
i.e., the posterior distribution mu Subscript h Superscript tμt
h of upper FF depends only on ModifyingAbove h With caret Superscript t Baseline equals left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline comma z 1 commaˆht = (x0, x1, . . . , xt, z1,
ellipsis comma z Subscript t Baseline right parenthesis. . . , zt), but not on a 0 comma a 1 comma ellipsis comma a Subscript t minus 1 Baselinea0, a1, . . . , at−1. Hence, due to (5.5) it is  
StartLayout 1st Row upper E left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma upper X Subscript t plus 1 Baseline right parenthesis vertical bar h Superscript t Baseline right parenthesis equals integral upper J left parenthesis x Superscript t Baseline comma upper F right parenthesis mu Subscript h Sub Superscript t Baseline left parenthesis d upper F right parenthesis 2nd Row equals integral upper J left parenthesis x Superscript t Baseline comma upper F right parenthesis mu Subscript ModifyingAbove h With caret Sub Superscript t Subscript Baseline left parenthesis d upper F right parenthesis equals upper E left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma upper X Subscript t plus 1 Baseline right parenthesis vertical bar ModifyingAbove h With caret Superscript t Baseline right parenthesis period EndLayoutE
(
ut(at, xt, Xt+1)|ht)
=
 
J(xt, F)μht(dF)
=
 
J(xt, F)μˆht(dF) = E
(
ut(at, xt, Xt+1)|ˆht)
.
(5.7a)

5.1 The Controlled (or Adaptive) Random Search Method
123
Approximating as in approach III.1 the associated inﬁnite-stage stochastic decision 
process by the family of 1-stage decision processes, a (sub-) optimal controla Subscript t Superscript asteriska∗
t may 
be deﬁned by 
a Subscript t Superscript asterisk Baseline equals a Subscript t Superscript asterisk Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis equals a Subscript t Superscript asterisk Baseline left parenthesis x Subscript t Baseline comma mu Subscript ModifyingAbove h With caret Sub Superscript t Subscript Baseline right parenthesis element of arg max Underscript a element of upper A Subscript t Baseline left parenthesis x Subscript t Baseline right parenthesis Endscripts upper E left parenthesis u Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma upper X Subscript t plus 1 Baseline right parenthesis vertical bar ModifyingAbove h With caret Superscript t Baseline right parenthesis perioda∗
t = a∗
t (ˆht) = a∗
t (xt, μˆht) ∈arg max
a∈At(xt) E
(
ut(at, xt, Xt+1)|ˆht)
.
(5.7b) 
Hence in both cases (5.4), (5.7b), thepi Subscript tπt-parameter controla Subscript t Superscript asteriska∗
t depends on theleft parenthesis upper X Subscript t Baseline comma upper Z Subscript t Baseline right parenthesis(Xt, Zt)-
history ModifyingAbove h With caret Superscript tˆht only. 
5.1.1 
The Convergence of the Controlled Random Search 
Procedure 
As mentioned at the end of III.1 we have now to consider the convergence of the 
process upper X 0 Superscript asterisk Baseline comma upper X 1 Superscript asterisk Baseline comma ellipsisX∗
0, X∗
1, . . . controlled by a Subscript t Superscript asterisk Baseline comma t equals 0 comma 1 comma ellipsisa∗
t , t = 0, 1, . . ., toward the set upper B Subscript epsilon comma upper MBε,M of left parenthesis epsilon comma upper M right parenthesis(ε, M)-
optimal solutions of (4.1), cf. (4.4a). 
For this controlled procedure, denoted by upper Z Subscript t Superscript asterisk Baseline comma upper X Subscript t Superscript asteriskZ∗
t , X∗
t , we consider similar to Sect. 
4.3 ﬁrst the conditional distributionModifyingAbove upper K With tilde Subscript t Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline comma dot right parenthesis  
Kt(ˆht, ·) of the tupleleft parenthesis upper Z Subscript t plus 1 Superscript asterisk Baseline comma upper X Subscript t plus 1 Superscript asterisk Baseline right parenthesis(Z∗
t+1, X∗
t+1), given upper Z Superscript asterisk t Baseline equals z Superscript t Baseline comma upper X Superscript asterisk t Baseline equals x Superscript tZ∗t =
zt, X∗t = xt as also given the unknown upper FF. Denoting by upper T Subscript upper F comma xTF,x the mapping 
upper T Subscript upper F comma x Baseline left parenthesis y right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column y comma 2nd Column i f y element of upper G Subscript upper F Baseline left parenthesis x right parenthesis comma 2nd Row 1st Column x comma 2nd Column e l s e EndLayout commaTF,x(y) =
 y, if y ∈G F(x),
x, else
,
(5.8) 
obviously we have that upper X Subscript t plus 1 Baseline equals upper T Subscript upper F comma x Sub Subscript t Subscript Baseline left parenthesis upper Z Subscript t plus 1 Baseline right parenthesisXt+1 = TF,xt(Zt+1) and therefore 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column ModifyingAbove upper K With tilde Subscript t Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline comma upper A times upper B right parenthesis colon equals upper P left parenthesis upper Z Subscript t plus 1 Superscript asterisk Baseline element of upper A comma upper X Subscript t plus 1 Superscript asterisk Baseline element of upper B vertical bar upper Z Superscript asterisk t Baseline equals z Superscript t Baseline comma upper X Superscript asterisk t Baseline equals x Superscript t Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals 3rd Column upper P left parenthesis upper Z Subscript t plus 1 Superscript asterisk Baseline element of upper A comma upper T Subscript upper F comma x Sub Subscript t Subscript Baseline left parenthesis upper Z Subscript t plus 1 Superscript asterisk Baseline right parenthesis element of upper B vertical bar upper Z Superscript asterisk t Baseline equals z Superscript t Baseline comma upper X Superscript asterisk t Baseline equals x Superscript t Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column Blank 3rd Column equals integral Underscript StartLayout 1st Row z Subscript t plus 1 Baseline element of normal upper Lamda 2nd Row upper T Subscript upper F comma x Sub Subscript t Subscript Baseline left parenthesis z Subscript t plus 1 Baseline right parenthesis element of upper B EndLayout Endscripts pi Subscript t Baseline left parenthesis a Subscript t Superscript asterisk Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis comma x Superscript t Baseline comma d z Subscript t plus 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column equals 3rd Column integral Underscript StartLayout 1st Row z Subscript t plus 1 Baseline element of upper A intersection upper B 2nd Row z Subscript t plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis EndLayout Endscripts pi Subscript t Baseline left parenthesis a Subscript t Superscript asterisk Baseline comma x Superscript t Baseline comma d z Subscript t plus 1 Baseline right parenthesis plus left parenthesis integral Underscript StartLayout 1st Row z Subscript t plus 1 Baseline element of upper A 2nd Row z Subscript t plus 1 Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis EndLayout Endscripts pi Subscript t Baseline left parenthesis a Subscript t Superscript asterisk Baseline comma x Superscript t Baseline comma d z Subscript t plus 1 Baseline right parenthesis right parenthesis epsilon Subscript x Sub Subscript t Subscript Baseline left parenthesis upper B right parenthesis comma EndLayout
 
Kt(ˆht, A × B) := P(Z∗
t+1 ∈A, X∗
t+1 ∈B|Z∗t = zt, X∗t = xt)
= P
(
Z∗
t+1 ∈A, TF,xt(Z∗
t+1) ∈B|Z∗t = zt, X∗t = xt)
=
 
zt+1∈ 
TF,xt (zt+1)∈B
πt
(
a∗
t (ˆht), xt, dzt+1
)
=
 
zt+1∈A∩B
zt+1∈GF (xt )
πt(a∗
t , xt, dzt+1) +
⎛
⎜⎜⎝
 
zt+1∈A
zt+1 /∈GF (xt )
πt(a∗
t , xt, dzt+1)
⎞
⎟⎟⎠εxt(B),
(5.9) 
where the last equality follows fromz Subscript t plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right double arrow upper T Subscript upper F comma x Sub Subscript t Subscript Baseline left parenthesis z Subscript t plus 1 Baseline right parenthesis equals z Subscript t plus 1zt+1 ∈G F(xt) ⇒TF,xt(zt+1) = zt+1 andz Subscript t plus 1 Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right double arrow upper T Subscript upper F comma x Sub Subscript t Subscript Baseline left parenthesis z Subscript t plus 1 Baseline right parenthesis equals x Subscript tzt+1 /∈
G F(xt) ⇒TF,xt(zt+1) = xt. 
Corresponding to (4.5a), (4.5b), (4.6a), and (4.6b), for the unknown, but ﬁxed 
objective function upper FF it holds then that 
upper P left parenthesis upper X Subscript t Superscript asterisk Baseline element of upper B Subscript epsilon comma upper M Baseline vertical bar upper F right parenthesis equals 1 minus left parenthesis 1 minus 1 Subscript upper B Sub Subscript epsilon comma upper M Subscript Baseline left parenthesis x 0 right parenthesis right parenthesis upper P left parenthesis upper X 1 Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline vertical bar upper F right parenthesis periodP(X∗
t ∈Bε,M|F) = 1 −
(
1 −1Bε,M(x0)
)
P(X∗
1 /∈Bε,M, . . . , X∗
t /∈Bε,M|F).
(5.10)

124
5
Controlled Random Search Methods as a Stochastic Decision Process
Putting ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline colon equals upper D minus upper B Subscript epsilon comma upper MBε,M := D\Bε,M, we get 
StartLayout 1st Row 1st Column Blank 2nd Column upper P left parenthesis upper X 1 Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline vertical bar upper F right parenthesis equals 2nd Row 1st Column Blank 2nd Column equals upper P left parenthesis left parenthesis upper Z 1 Superscript asterisk Baseline comma upper X 1 Superscript asterisk Baseline right parenthesis element of double struck upper R Superscript n Baseline times ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline comma left parenthesis upper Z 2 Superscript asterisk Baseline comma upper X 2 Superscript asterisk Baseline right parenthesis element of double struck upper R Superscript n Baseline times ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline comma ellipsis comma left parenthesis upper Z Subscript t Superscript asterisk Baseline comma upper X Subscript t Superscript asterisk Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column element of double struck upper R Superscript n Baseline times ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline vertical bar upper F right parenthesis 4th Row 1st Column Blank 2nd Column equals integral Underscript StartLayout 1st Row z 1 element of double struck upper R Superscript n Baseline 2nd Row x 1 element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline EndLayout Endscripts ModifyingAbove upper K With tilde Subscript 0 Baseline left parenthesis x 0 comma d z 1 comma d x 1 right parenthesis ellipsis integral Underscript StartLayout 1st Row z Subscript t minus 1 Baseline element of double struck upper R Superscript n Baseline 2nd Row x Subscript t minus 1 Baseline element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline EndLayout Endscripts ModifyingAbove upper K With tilde Subscript t minus 2 Baseline left parenthesis ModifyingAbove h With caret Superscript t minus 2 Baseline comma d z Subscript t minus 1 Baseline comma d x Subscript t minus 1 Baseline right parenthesis comma 5th Row 1st Column Blank 2nd Column dot integral Underscript StartLayout 1st Row z Subscript t Baseline element of double struck upper R Superscript n Baseline 2nd Row x Subscript t Baseline element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M Baseline EndLayout Endscripts ModifyingAbove upper K With tilde Subscript t minus 1 Baseline left parenthesis ModifyingAbove h With caret Superscript t minus 1 Baseline comma d z Subscript t Baseline comma d x Subscript t Baseline right parenthesis period EndLayout
P(X∗
1 /∈Bε,M, . . . , X∗
t /∈Bε,M|F) =
= P
(
(Z∗
1, X∗
1) ∈Rn × Bε,M, (Z∗
2, X∗
2) ∈Rn × Bε,M, . . . , (Z∗
t , X∗
t )
∈Rn × Bε,M|F
)
=
 
z1∈Rn
x1∈Bε,M
 
K0(x0, dz1, dx1) . . .
 
zt−1∈Rn
xt−1∈Bε,M
 
Kt−2(ˆht−2, dzt−1, dxt−1),
·
 
zt ∈Rn
xt ∈Bε,M
 
Kt−1(ˆht−1, dzt, dxt).
(5.11) 
Proceeding now as in (4.7)–(4.9d), we obtain next to by means of x Subscript t minus 1 Baseline not an element of upper B Subscript epsilon comma upper Mxt−1 /∈Bε,M and 
(5.8) 
StartLayout 1st Row 1st Column integral Underscript StartLayout 1st Row z Subscript t Baseline element of double struck upper R Superscript n 2nd Row x Subscript t Baseline element of ModifyingAbove upper B With quotation dash Subscript epsilon comma upper M EndLayout Endscripts ModifyingAbove upper K With tilde Subscript t minus 1 Baseline left parenthesis ModifyingAbove h With caret Superscript t minus 1 Baseline comma d z Subscript t Baseline comma d x Subscript t Baseline right parenthesis 2nd Column equals ModifyingAbove upper K With tilde Subscript t minus 1 Baseline left parenthesis ModifyingAbove h With caret Superscript t minus 1 Baseline comma double struck upper R Superscript n Baseline times left parenthesis upper D minus upper B Subscript epsilon comma upper M Baseline right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals 1 minus ModifyingAbove upper K With tilde Subscript t minus 1 Baseline left parenthesis ModifyingAbove h With caret Superscript t minus 1 Baseline comma double struck upper R Superscript n Baseline times upper B Subscript epsilon comma upper M Baseline right parenthesis 3rd Row 1st Column equals 1 minus integral Underscript upper T Subscript upper F comma x Sub Subscript t minus 1 Subscript Baseline left parenthesis z Subscript t Baseline right parenthesis element of upper B Subscript epsilon comma upper M Baseline Endscripts pi Subscript t minus 1 Baseline left parenthesis a Subscript t minus 1 Superscript asterisk Baseline comma x Superscript t minus 1 Baseline comma d z Subscript t Baseline right parenthesis 2nd Column equals 1 minus pi Subscript t minus 1 Baseline left parenthesis a Subscript t minus 1 Superscript asterisk Baseline comma x Superscript t minus 1 Baseline comma upper B Subscript epsilon comma upper M Baseline intersection upper G Subscript upper F Baseline left parenthesis x Subscript t minus 1 Baseline right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column equals 1 minus pi Subscript t minus 1 Baseline left parenthesis a Subscript t minus 1 Superscript asterisk Baseline comma x Superscript t minus 1 Baseline comma upper B Subscript epsilon comma upper M Baseline right parenthesis comma EndLayout
 
zt ∈Rn
xt ∈Bε,M
 
Kt−1(ˆht−1, dzt, dxt) =  
Kt−1
(ˆht−1, Rn × (D\Bε,M)
)
= 1 − 
Kt−1(ˆht−1, Rn × Bε,M)
= 1 −
 
TF,xt−1(zt)∈Bε,M
πt−1(a∗
t−1, xt−1, dzt) = 1 −πt−1
(
a∗
t−1, xt−1, Bε,M ∩G F(xt−1)
)
= 1 −πt−1(a∗
t−1, xt−1, Bε,M),
(5.12a) 
where the last two equalities hold because ofx Subscript t minus 1 Baseline not an element of upper B Subscript epsilon comma upper Mxt−1 /∈Bε,M. Denoting byupper UU a subset of 
double struck upper R Superscript nRn containing all supports of the conditional distributionspi Subscript t Baseline left parenthesis a Subscript t Baseline comma x Subscript t Baseline comma dot right parenthesis comma t equals 0 comma 1 comma ellipsis commaπt(at, xt, ·), t = 0, 1, . . . ,
corresponding to alpha Subscript tαt in Sect. 4.2.1 
StartLayout 1st Row 1st Column alpha Subscript t Superscript asterisk 2nd Column equals alpha Subscript t Superscript asterisk Baseline left parenthesis epsilon comma upper M comma upper F right parenthesis 2nd Row 1st Column Blank 2nd Column equals inf left brace pi Subscript t Baseline left parenthesis alpha Subscript t Superscript asterisk Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis comma x Superscript t Baseline comma upper B Subscript epsilon comma upper M Baseline right parenthesis colon z Subscript s Baseline element of upper U comma x Subscript s Baseline element of upper D minus upper B Subscript epsilon comma upper M Baseline comma 1 less than or equals s less than or equals t right brace EndLayoutα∗
t = α∗
t (ε, M, F)
= inf
{
πt
(
α∗
t (ˆht), xt, Bε,M
)
: zs ∈U, xs ∈D\Bε,M, 1 ≤s ≤t
}
(5.12b) 
is the minimal probability for ﬁnding an left parenthesis epsilon comma upper M right parenthesis(ε, M)-optimal solution of (4.1) at stage 
t equals 1 comma 2 comma ellipsist = 1, 2, . . .. Because of 
integral Underscript StartLayout 1st Row z Subscript t Baseline element of double struck upper R Superscript n Baseline 2nd Row x Subscript t Baseline element of upper B Subscript epsilon comma upper M Baseline EndLayout Endscripts ModifyingAbove upper K With tilde Subscript t minus 1 Baseline left parenthesis ModifyingAbove h With caret Superscript t minus 1 Baseline comma d z Subscript t Baseline comma d x Subscript t Baseline right parenthesis less than or equals 1 minus alpha Subscript t minus 1 Superscript asterisk Baseline comma t equals 1 comma 2 comma ellipsis comma
 
zt ∈Rn
xt ∈Bε,M
 
Kt−1(ˆht−1, dzt, dxt) ≤1 −α∗
t−1, t = 1, 2, . . . ,
(5.12c) 
from (5.11) we obtain with alpha 0 Superscript asterisk Baseline equals pi 0 left parenthesis a 0 Superscript asterisk Baseline left parenthesis x 0 right parenthesis comma x 0 comma upper B Subscript epsilon comma upper M Baseline right parenthesisα∗
0 = π0
(
a∗
0(x0), x0, Bε,M
)
that

5.1 The Controlled (or Adaptive) Random Search Method
125
StartLayout 1st Row upper P left parenthesis upper X 1 Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline comma ellipsis comma upper X Subscript t Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline vertical bar upper F right parenthesis 2nd Row less than or equals left parenthesis 1 minus pi 0 left parenthesis a 0 Superscript asterisk Baseline left parenthesis x 0 right parenthesis comma x 0 comma upper B Subscript epsilon comma upper M Baseline right parenthesis right parenthesis sigma summation Underscript s equals 1 Overscript t minus 1 Endscripts left parenthesis 1 minus alpha Subscript s Superscript asterisk Baseline right parenthesis equals product Underscript s equals 0 Overscript t minus 1 Endscripts left parenthesis 1 minus alpha Subscript s Superscript asterisk Baseline right parenthesis period EndLayoutP(X∗
1 /∈Bε,M, . . . , X∗
t /∈Bε,M|F)
≤
(
1 −π0
(
a∗
0(x0), x0, Bε,M
)) t−1
∑
s=1
(1 −α∗
s ) =
t−1
| |
s=0
(1 −α∗
s ).
(5.13) 
Thus, by (5.10) and (5.13) yield, cf. (4.9a)–(4.9d), 
upper P left parenthesis upper X Subscript t Superscript asterisk Baseline element of upper B Subscript epsilon comma upper M Baseline vertical bar upper F right parenthesis greater than or equals 1 minus product Underscript s equals 0 Overscript t minus 1 Endscripts left parenthesis 1 minus alpha Subscript s Superscript asterisk Baseline right parenthesis greater than or equals 1 minus exp left parenthesis minus sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts alpha Subscript s Superscript asterisk Baseline right parenthesis periodP(X∗
t ∈Bε,M|F) ≥1 −
t−1
| |
s=0
(1 −α∗
s ) ≥1 −exp
(
−
t−1
∑
s=0
α∗
s
)
.
(5.14) 
Hence, we proved the following result, see Theorem 4.1. 
Theorem 5.1 (Convergence of the controlled Random Search Method) 
If sigma summation Underscript s equals 1 Overscript normal infinity Endscripts alpha Subscript s Superscript asterisk Baseline left parenthesis epsilon comma upper M comma upper F right parenthesis equals plus normal infinity
∞
∑
s=1
α∗
s (ε, M, F) = +∞, 
then limit Underscript t right arrow normal infinity Endscripts upper P left parenthesis upper X Subscript t Superscript asterisk Baseline element of upper B Subscript epsilon comma upper M Baseline vertical bar upper F right parenthesis equals 1 lim
t→∞P(X∗
t ∈Bε,M|F) = 1. 
Example 5.1 Letpi Subscript t Baseline left parenthesis a Subscript t Baseline comma x Superscript t Baseline comma dot right parenthesisπt(at, xt, ·) be a normal distribution with meanx Subscript txt and covariance 
matrix upper Q equals left parenthesis sigma Subscript i Superscript 2 Baseline delta Subscript i k Baseline right parenthesisQ = (σ 2
i δik), where 
a Subscript t Baseline equals a Subscript t Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis equals left parenthesis sigma 1 left parenthesis ModifyingAbove h With caret Superscript 1 Baseline right parenthesis comma sigma 2 left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis comma ellipsis comma sigma Subscript n Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis right parenthesis Superscript upper Tat = at(ˆht) =
(
σ1(ˆh1), σ2(ˆht), . . . , σn(ˆht)
)T
anddelta Subscript i j Baseline equals 1δi j = 1 ifi equals j comma delta Subscript i j Baseline equals 0i = j, δi j = 0 ifi not equals ji /= j. If we know aboutupper FF at least thatupper B Subscript epsilon comma upper MBε,M is bounded 
and has non-zero measure, then from the above theorem we get immediately this 
consequence. 
Corollary 5.1 Let upper B Subscript epsilon comma upper MBε,M be bounded and have non-zero Lebesgue-measure. 
If the variance controla Subscript t Superscript asterisk Baseline equals left parenthesis sigma 1 Superscript asterisk Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis comma ellipsis sigma Subscript n Superscript asterisk Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis right parenthesis Superscript upper Ta∗
t =
(
σ ∗
1 (ˆht), . . . σ ∗
n (ˆht)
)T fulﬁllssigma Subscript t Superscript asterisk Baseline left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis greater than or equals sigma 0 greater than 0σ ∗
t (ˆht) ≥σ0 > 0 for allt equals 1 comma 2 comma ellipsist =
1, 2, . . . and all values of ModifyingAbove h With caret Superscript tˆht, then sigma summation Underscript s equals 1 Overscript normal infinity Endscripts alpha Subscript s Superscript asterisk Baseline equals normal infinity
∞
∑
s=1
α∗
s = ∞and therefore limit Underscript t right arrow normal infinity Endscripts upper P left parenthesis upper X Subscript t Superscript asterisk Baseline element of upper B Subscript epsilon comma upper M Baseline vertical bar upper F right parenthesis equals 1 lim
t→∞P(X∗
t ∈Bε,M|F)
= 1. 
For practical purposes—besides the convergence ofupper X Subscript t Superscript asteriskX∗
t toward anleft parenthesis epsilon comma upper M right parenthesis(ε, M)-optimal 
solution of (4.1)—of great importance is a stopping criterion for the searching 
procedure. 
5.1.2 
A Stopping Rule 
A suitable criterion for terminating the search at stage t equals upper Tt = T would be 
upper P left parenthesis upper X 1 Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline right parenthesis less than or equals upper P commaP(X∗
1 /∈Bε,M) ≤P,
(5.15) 
i.e., the probability that upper X Subscript upper T Superscript asteriskX∗
T is not an left parenthesis epsilon comma upper M right parenthesis(ε, M)-optimal solution of (4.1) is not greater 
than a prescribed small value pp. By (5.11) and (5.13) for this probability we have 
the estimate

126
5
Controlled Random Search Methods as a Stochastic Decision Process
upper P left parenthesis upper X Subscript upper T Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline right parenthesis equals upper P left parenthesis upper X Subscript upper T Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline vertical bar upper F right parenthesis less than or equals product Underscript s equals 0 Overscript upper T minus 1 Endscripts left parenthesis 1 minus alpha Subscript s Superscript asterisk Baseline left parenthesis epsilon comma upper M comma upper F right parenthesis right parenthesis periodP(X∗
T /∈Bε,M) = P(X∗
T /∈Bε,M|F) ≤
T −1
| |
s=0
(
1 −α∗
s (ε, M, F)
)
.
(5.16) 
If the minimal probabilitiesalpha Subscript s Superscript asterisk Baseline left parenthesis epsilon comma upper M comma upper F right parenthesisα∗
s (ε, M, F) have a lower boundalpha overTilde greater than 0˜α > 0, then from (5.15) 
we get obviously this next result. 
Lemma 5.1 Let alpha Subscript t Superscript asterisk Baseline left parenthesis epsilon comma upper M comma upper F right parenthesis greater than ModifyingAbove alpha With tilde greater than 0α∗
t (ε, M, F) > ˜α > 0 for all t equals 0 comma 1 comma 2 comma ellipsist = 0, 1, 2, . . .. 
Then, the stopping criterion (5.15) is satisﬁed if 
upper T greater than or equals StartFraction log p Over log left parenthesis 1 minus alpha overTilde right parenthesis EndFraction periodT ≥
log p
log(1 −˜α).
(5.17) 
Due to the uncertainty concerningupper FF we can not work in general with the expression 
in (5.15) and (5.16) directly. However, replacing the unknown function upper FF by its 
conditional distributionmu Subscript h Sub Superscript upper T Subscript minus 1μhT −1 known at stageupper T minus 1T −1, we may approximate (5.15) by  
the stopping rules 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column integral upper P left parenthesis upper X Subscript upper T Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline left parenthesis normal upper Gamma right parenthesis vertical bar upper F right parenthesis mu Subscript h Sub Superscript upper T minus 1 Subscript Baseline left parenthesis d upper F right parenthesis less than or equals p comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column Blank 3rd Column integral product Underscript s equals 0 Overscript upper T minus 1 Endscripts left parenthesis 1 minus alpha Subscript s Superscript asterisk Baseline left parenthesis epsilon comma upper M comma upper F right parenthesis right parenthesis mu Subscript h Sub Superscript upper T minus 1 Subscript Baseline left parenthesis d upper F right parenthesis less than or equals p comma EndLayout
 
P
(
X∗
T /∈Bε,M( )|F
)
μhT −1(dF) ≤p,
(5.18a) 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column integral upper P left parenthesis upper X Subscript upper T Superscript asterisk Baseline not an element of upper B Subscript epsilon comma upper M Baseline left parenthesis normal upper Gamma right parenthesis vertical bar upper F right parenthesis mu Subscript h Sub Superscript upper T minus 1 Subscript Baseline left parenthesis d upper F right parenthesis less than or equals p comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column Blank 3rd Column integral product Underscript s equals 0 Overscript upper T minus 1 Endscripts left parenthesis 1 minus alpha Subscript s Superscript asterisk Baseline left parenthesis epsilon comma upper M comma upper F right parenthesis right parenthesis mu Subscript h Sub Superscript upper T minus 1 Subscript Baseline left parenthesis d upper F right parenthesis less than or equals p comma EndLayout
 
T−1
| |
s=0
(
1 −α∗
s (ε, M, F)
)
μhT −1(dF) ≤p,
(5.18b) 
5.2 
Computation of the Conditional Distribution of upper FF
Given the Process History: Information Processing 
According to the uncertainty-model for the unknown objective function upper FF of (5.6a) 
described in Sect. 5.1, (III.2), we assume that upper FF is a realization upper F left parenthesis x right parenthesis equals f left parenthesis x comma theta Superscript 0 Baseline right parenthesisF(x) = f (x, θ0)
of a stochastic function y equals f left parenthesis x comma theta right parenthesis comma theta element of normal upper Thetay = f (x, θ), θ ∈ . Moreover, mu Superscript 0μ0 denotes the a priori dis-
tribution (on a sigmaσ-algebra German upper AA on normal upper Theta ) of the stochastic parameter thetaθ, and by f equals f left parenthesis x right parenthesis f = f (x)
we denote any realization f left parenthesis dot comma theta right parenthesis f (·, θ) of the stochastic function y equals f left parenthesis x comma theta right parenthesisy = f (x, θ). Instead 
of mu Superscript 0 Baseline left parenthesis d theta right parenthesis comma mu Subscript h Sub Superscript t Subscript Baseline left parenthesis d theta right parenthesisμ0(dθ), μht(dθ), we also write mu Superscript 0 Baseline left parenthesis d f right parenthesis comma mu Subscript h Sub Superscript t Subscript Baseline left parenthesis d f right parenthesisμ0(d f ), μht(d f ), resp., interpreting then mu Superscript 0 Baseline comma mu Subscript h Sub Superscript t Baselineμ0, μht
as conditional probability distributions on a certainsigmaσ-algebraGerman upper A Subscript script upper FAF on an appropriate 
spacescript upper FF of possible objective functionsf f deﬁned (at least) on the admissible domain 
upper D comma upper D subset of double struck upper R Superscript nD, D ⊂Rn. 
Given the process history h Superscript t Baseline equals left parenthesis x 0 comma x 1 comma ellipsis comma x Subscript t Baseline comma z 1 comma z 2 comma ellipsis comma z Subscript t Baseline comma a 0 comma a 1 comma ellipsis comma a Subscript t minus 1 Baseline right parenthesisht = (x0, x1, . . . , xt, z1, z2, . . . , zt, a0, a1, . . . , at−1)
obtained from the search process left parenthesis upper Z Subscript t Baseline comma upper X Subscript t Baseline comma t equals 1 comma 2 comma period period period(Zt, Xt, t = 1, 2, ..., to ﬁnd the minimum of the 
function upper F equals upper F left parenthesis x right parenthesisF = F(x), according to the deﬁnition of the random search process we 
have the following relations: 
upper T Subscript upper F comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript s plus 1 Baseline comma t 0 comma 1 comma ellipsis comma t minus 1 commaTF,xs(zs+1) = xs+1, t0, 1, . . . , t −1,
(5.19) 
where upper T Subscript upper F comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesisTF,xs(zs+1) is deﬁned by (4.3), (5.8).

5.2 Computation of the Conditional Distribution of F Given …
127
At each stage s equals 0 comma 1 comma ellipsis comma t minus 1s = 0, 1, . . . , t −1, there are then three different possibilities: 
(i) z Subscript s plus 1 Baseline not an element of upper Dzs+1 /∈D (search failure I). 
In this case it is z Subscript s plus 1 Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript s Baseline right parenthesiszs+1 /∈G F(xs) and therefore 
x Subscript s plus 1 Baseline equals upper T Subscript upper F comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript s Baseline periodxs+1 = TF,xs(zs+1) = xs.
But in the same way, for each realizationf f off left parenthesis x comma theta right parenthesis f (x, θ) because ofz Subscript s plus 1 Baseline not an element of upper Dzs+1 /∈D we 
ﬁnd that 
upper T Subscript f comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript s Baseline periodT f,xs(zs+1) = xs.
Hence, because of x Subscript s plus 1 Baseline equals x Subscript sxs+1 = xs, in this case (i) the constraint 
upper T Subscript f comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript s plus 1T f,xs(zs+1) = xs+1
is satisﬁed automatically and can therefore be omitted. 
(ii) z Subscript s plus 1 Baseline element of upper Dzs+1 ∈D and upper F left parenthesis z Subscript s plus 1 Baseline right parenthesis greater than or equals upper F left parenthesis x Subscript s Baseline right parenthesisF(zs+1) ≥F(xs) (search failure II). 
In this case we again have that 
x Subscript s plus 1 Baseline equals upper T Subscript upper F comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript s Baseline periodxs+1 = TF,xs(zs+1) = xs.
Now for f f we have the constraint 
upper T Subscript f comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript s plus 1 Baseline equals x Subscript sT f,xs(zs+1) = xs+1 = xs
which holds if and only if 
f left parenthesis z Subscript s plus 1 Baseline right parenthesis greater than or equals f left parenthesis x Subscript s Baseline right parenthesis period f (zs+1) ≥f (xs).
Indeed, assume that f left parenthesis z Subscript s plus 1 Baseline right parenthesis less than f left parenthesis x Subscript s Baseline right parenthesis f (zs+1) < f (xs). But this implies that z Subscript s plus 1 Baseline not equals x Subscript szs+1 /= xs and 
x Subscript s plus 1 Baseline equals upper T Subscript f comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals z Subscript s plus 1 Baseline not equals x Subscript sxs+1 = T f,xs(zs+1) = zs+1 /= xs which is a contradiction to the constraint 
upper T Subscript f comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript s plus 1 Baseline equals x Subscript sT f,xs(zs+1) = xs+1 = xs. 
(iii) z Subscript s plus 1 Baseline element of upper Dzs+1 ∈D and upper F left parenthesis z Subscript s plus 1 Baseline right parenthesis less than upper F left parenthesis x Subscript s Baseline right parenthesisF(zs+1) < F(xs) (search success). 
Here it is 
x Subscript s plus 1 Baseline equals upper F Subscript upper F comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals z Subscript s plus 1 Baseline not equals x Subscript s Baseline commaxs+1 = FF,xs(zs+1) = zs+1 /= xs,
hence for f f we have the constraint 
upper T Subscript f comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript s plus 1 Baseline equals z Subscript s plus 1 Baseline not equals x Subscript sT f,xs(zs+1) = xs+1 = zs+1 /= xs
which is possible if and only if 
f left parenthesis z Subscript s plus 1 Baseline right parenthesis less than f left parenthesis x Subscript s Baseline right parenthesis period f (zs+1) < f (xs).
Indeed, assume that f left parenthesis z Subscript s plus 1 Baseline right parenthesis greater than or equals f left parenthesis x Subscript s Baseline right parenthesis f (zs+1) ≥f (xs). This implies upper T Subscript f comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript sT f,xs(zs+1) = xs, which is 
a contradiction.

128
5
Controlled Random Search Methods as a Stochastic Decision Process
Based on the segment x Subscript s Baseline comma z Subscript s plus 1 Baseline comma z Subscript s plus 1 Baselinexs, zs+1, zs+1 of the time history ModifyingAbove h With caret Superscript tˆht and the observed 
values of the true, but unknown function upper F left parenthesis x right parenthesis equals f left parenthesis x comma theta Superscript 0 Baseline right parenthesisF(x) = f (x, θ0), we ﬁnd that the 
following constraints for the parameter thetaθ of the unknown model function f equals f left parenthesis x comma theta right parenthesis f =
f (x, θ): 
upper T Subscript f comma x Sub Subscript s Subscript Baseline left parenthesis z Subscript s plus 1 Baseline right parenthesis equals x Subscript s plus 1 Baseline i s e q u i v a l e n t t o StartLayout Enlarged left brace 1st Row n o c o n s t r a i n t comma i f z Subscript s plus 1 Baseline not an element of upper D 2nd Row f left parenthesis z Subscript s plus 1 Baseline right parenthesis greater than or equals f left parenthesis x Subscript s Baseline right parenthesis comma i f z Subscript s plus 1 Baseline element of upper D 3rd Row a n d upper F left parenthesis z Subscript s plus 1 Baseline right parenthesis greater than or equals upper F left parenthesis x Subscript s Baseline right parenthesis 4th Row f left parenthesis z Subscript s plus 1 Baseline right parenthesis less than f left parenthesis x Subscript s Baseline right parenthesis comma i f z Subscript s plus 1 Baseline element of upper D 5th Row a n d upper F left parenthesis z Subscript s plus 1 Baseline right parenthesis less than upper F left parenthesis x Subscript s Baseline right parenthesis period EndLayoutT f,xs(zs+1) = xs+1 is equivalent to
⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
no constraint, if zs+1 /∈D
f (zs+1) ≥f (xs), if zs+1 ∈D
and F(zs+1) ≥F(xs)
f (zs+1) < f (xs), if zs+1 ∈D
and F(zs+1) < F(xs).
(5.20a) 
Consequently, given the time historynormal upper Theta left parenthesis h Superscript t Baseline right parenthesis (ht),ModifyingAbove h With caret Superscript tˆht, the  setnormal upper Theta h Superscript t Baseline equals normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis ht =  (ˆht) of admis-
sible parameters thetaθ up to stage tt is deﬁned recursively by 
StartLayout 1st Row 1st Column normal upper Theta left parenthesis h Superscript 0 Baseline right parenthesis equals normal upper Theta left parenthesis h Superscript 0 Baseline right parenthesis 2nd Column colon equals 3rd Column normal upper Theta 2nd Row 1st Column Blank 3rd Row 1st Column normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t plus 1 Baseline right parenthesis 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis comma i f z Subscript t plus 1 Baseline not an element of upper D 2nd Row StartSet theta element of normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis colon f left parenthesis z Subscript t plus 1 Baseline comma theta right parenthesis greater than or equals f left parenthesis x Subscript t Baseline comma theta right parenthesis EndSet comma i f z Subscript t Baseline element of upper D 3rd Row a n d upper F left parenthesis z Subscript t plus 1 Baseline right parenthesis greater than or equals upper F left parenthesis x Subscript t Baseline right parenthesis 4th Row StartSet theta element of normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis colon f left parenthesis z Subscript t plus 1 Baseline comma theta right parenthesis less than f left parenthesis x Subscript t Baseline comma theta right parenthesis EndSet comma i f z Subscript t Baseline element of upper D 5th Row a n d upper F left parenthesis z Subscript t plus 1 Baseline less than upper F left parenthesis x Subscript t Baseline right parenthesis period EndLayout EndLayout (h0) =  (h0) :=  
(5.20b) 
StartLayout 1st Row 1st Column normal upper Theta left parenthesis h Superscript 0 Baseline right parenthesis equals normal upper Theta left parenthesis h Superscript 0 Baseline right parenthesis 2nd Column colon equals 3rd Column normal upper Theta 2nd Row 1st Column Blank 3rd Row 1st Column normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t plus 1 Baseline right parenthesis 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis comma i f z Subscript t plus 1 Baseline not an element of upper D 2nd Row StartSet theta element of normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis colon f left parenthesis z Subscript t plus 1 Baseline comma theta right parenthesis greater than or equals f left parenthesis x Subscript t Baseline comma theta right parenthesis EndSet comma i f z Subscript t Baseline element of upper D 3rd Row a n d upper F left parenthesis z Subscript t plus 1 Baseline right parenthesis greater than or equals upper F left parenthesis x Subscript t Baseline right parenthesis 4th Row StartSet theta element of normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis colon f left parenthesis z Subscript t plus 1 Baseline comma theta right parenthesis less than f left parenthesis x Subscript t Baseline comma theta right parenthesis EndSet comma i f z Subscript t Baseline element of upper D 5th Row a n d upper F left parenthesis z Subscript t plus 1 Baseline less than upper F left parenthesis x Subscript t Baseline right parenthesis period EndLayout EndLayout (ˆht+1) =
⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
 (ˆht), if zt+1 /∈D
{
θ ∈ (ˆht) : f (zt+1, θ) ≥f (xt, θ)
}
, if zt ∈D
and F(zt+1) ≥F(xt)
{
θ ∈ (ˆht) : f (zt+1, θ) < f (xt, θ)
}
, if zt ∈D
and F(zt+1 < F(xt).
(5.20c) 
Note 5.2 Obviously we have 
theta Superscript 0 Baseline element of normal upper Theta left parenthesis h Superscript t Baseline right parenthesis subset of normal upper Theta left parenthesis h Superscript t minus 1 Baseline right parenthesis comma t equals 0 comma 1 comma ellipsis periodθ0 ∈ (ht) ⊂ (ht−1), t = 0, 1, . . . .
From the above consideration we get the following result: 
Theorem 5.2 (Representation of the admissible set of parameters) 
(a) Given the time history h Superscript tht, the recursion for the admissible parameter domains 
normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis (ˆht) can be given by 
StartLayout 1st Row 1st Column normal upper Theta left parenthesis h Superscript 0 Baseline right parenthesis 2nd Column equals normal upper Theta left parenthesis h Superscript 0 Baseline right parenthesis colon equals normal upper Theta comma 2nd Row 1st Column Blank 3rd Row 1st Column normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t plus 1 Baseline right parenthesis 2nd Column equals StartSet theta element of normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis colon upper T Subscript f left parenthesis dot comma theta right parenthesis comma x Sub Subscript t Subscript Baseline left parenthesis z Subscript t plus 1 Baseline right parenthesis equals x Subscript t plus 1 Baseline EndSet comma t equals 0 comma 1 comma period period period EndLayout (h0) =  (h0) :=  ,
(5.21a) 
StartLayout 1st Row 1st Column normal upper Theta left parenthesis h Superscript 0 Baseline right parenthesis 2nd Column equals normal upper Theta left parenthesis h Superscript 0 Baseline right parenthesis colon equals normal upper Theta comma 2nd Row 1st Column Blank 3rd Row 1st Column normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t plus 1 Baseline right parenthesis 2nd Column equals StartSet theta element of normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis colon upper T Subscript f left parenthesis dot comma theta right parenthesis comma x Sub Subscript t Subscript Baseline left parenthesis z Subscript t plus 1 Baseline right parenthesis equals x Subscript t plus 1 Baseline EndSet comma t equals 0 comma 1 comma period period period EndLayout (ˆht+1) =
{
θ ∈ (ˆht) : T f (·,θ),xt(zt+1) = xt+1
}
,
t = 0, 1, ...
(5.21b) 
(b) Let then the index sets upper I 1 left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesisI1(ˆht), upper I 2 left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesisI2(ˆht) be deﬁned by 
StartLayout 1st Row 1st Column upper I 1 left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis 2nd Column equals left brace s colon 0 less than or equals s less than or equals t minus 1 comma z Subscript s plus 1 Baseline element of upper D a n d upper F left parenthesis z Subscript s plus 1 Baseline right parenthesis greater than or equals normal upper Gamma left parenthesis x Subscript s Baseline right parenthesis right brace comma 2nd Row 1st Column Blank 3rd Row 1st Column upper I 2 left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis 2nd Column equals left brace s colon 0 less than or equals s less than or equals t minus 1 comma z Subscript s plus 1 Baseline element of upper D a n d upper F left parenthesis z Subscript s plus 1 Baseline right parenthesis less than upper F left parenthesis x Subscript s Baseline right parenthesis right brace period EndLayoutI1(ˆht) =
{
s : 0 ≤s ≤t −1, zs+1 ∈D and F(zs+1) ≥ (xs)
}
,
(5.21c) 
StartLayout 1st Row 1st Column upper I 1 left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis 2nd Column equals left brace s colon 0 less than or equals s less than or equals t minus 1 comma z Subscript s plus 1 Baseline element of upper D a n d upper F left parenthesis z Subscript s plus 1 Baseline right parenthesis greater than or equals normal upper Gamma left parenthesis x Subscript s Baseline right parenthesis right brace comma 2nd Row 1st Column Blank 3rd Row 1st Column upper I 2 left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis 2nd Column equals left brace s colon 0 less than or equals s less than or equals t minus 1 comma z Subscript s plus 1 Baseline element of upper D a n d upper F left parenthesis z Subscript s plus 1 Baseline right parenthesis less than upper F left parenthesis x Subscript s Baseline right parenthesis right brace period EndLayoutI2(ˆht) =
{
s : 0 ≤s ≤t −1, zs+1 ∈D and F(zs+1) < F(xs)
}
.
(5.21d) 
By these deﬁnitions the set normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis (ˆht) of admissible parameters at stage tt can be 
represented in the following form:

References
129
StartLayout 1st Row 1st Column normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis equals left brace theta element of normal upper Theta colon 2nd Column Blank 3rd Column f left parenthesis z Subscript s plus 1 Baseline comma theta right parenthesis greater than or equals f left parenthesis x Subscript s Baseline comma theta right parenthesis f o r s element of upper I 1 left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis comma 2nd Row 1st Column Blank 2nd Column Blank 3rd Column f left parenthesis z Subscript s plus 1 Baseline comma theta right parenthesis less than f left parenthesis x Subscript s Baseline comma theta right parenthesis f o r s element of upper I 2 left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis right brace period EndLayout (ˆht) =
{
θ ∈ :
f (zs+1, θ) ≥f (xs, θ) for s ∈I1(ˆht),
(5.21e) 
f (zs+1, θ  )  <  f (xs, θ  )  for s ∈ I2( ˆht )
}
. 
Having the set normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis (ˆht) of admissible parameters thetaθ of the model f equals f left parenthesis x comma theta right parenthesis f = f (x, θ) for 
the analytically not given objective function upper FF, given the process history ModifyingAbove h With caret Superscript tˆht, we get 
this result: 
Theorem 5.3 (Conditional probability of upper FF) With the a priori distributionmu Superscript 0μ0 of the 
model parametersthetaθ of the unknown objective functionupper FF, the conditional probability 
of upper FF, given the process history ModifyingAbove h With caret Superscript tˆht, reads 
mu Subscript ModifyingAbove h With caret Sub Superscript t Subscript Baseline left parenthesis upper W right parenthesis equals StartFraction mu Superscript 0 Baseline left parenthesis upper W intersection normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis right parenthesis Over mu Superscript 0 Baseline left parenthesis normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis right parenthesis EndFraction commaμˆht(W) = μ0(
W ∩ (ˆht)
)
μ0(
 (ˆht)
)
,
(5.22) 
for each measurable set upper W subset of normal upper ThetaW ⊂ . 
Example 5.2 
f left parenthesis x comma theta right parenthesis equals sigma summation Underscript i equals 1 Overscript r Endscripts f Subscript i Baseline left parenthesis x right parenthesis theta Subscript i f (x, θ) =
r
∑
i=1
fi(x)θi
(5.23a) 
for upper FF, where f 1 comma f 2 comma ellipsis comma f Subscript r Baseline f1, f2, . . . , fr are known functions and theta Subscript i Baseline comma i equals 1 comma ellipsis comma rθi, i = 1, . . . ,r, are unknown 
real parameters with an a priori distribution mu Superscript 0μ0 on left parenthesis normal upper Theta comma script upper A script right parenthesis( , A) = (double struck upper R Superscript rRr,script upper B Superscript rBr), then normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis (ˆht) is 
described by a ﬁnite number left parenthesis less than or equals t right parenthesis(≤t) of linear inequalities. 
Here, the conditional distribution mu Subscript ModifyingAbove h With caret Sub Superscript tμˆht of upper FF, given the search history ModifyingAbove h With caret Superscript tˆht, is the  
restriction of the a priori distribution mu Superscript 0μ0 to set normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis (ˆht). Thus, if mu Superscript 0μ0 has a probability 
density phi 0 equals phi 0 left parenthesis theta right parenthesisφ0 = φ0(θ), then the probability density phi Subscript ModifyingAbove h With caret Sub Superscript t Baseline equals phi Subscript ModifyingAbove h With caret Sub Superscript t Baseline left parenthesis theta right parenthesisφˆht = φˆht(θ) of mu Subscript ModifyingAbove h With caret Sub Superscript tμˆht reads 
phi Subscript ModifyingAbove h With caret Sub Superscript t Subscript Baseline left parenthesis theta right parenthesis equals bold 1 Subscript normal upper Theta left parenthesis ModifyingAbove h With caret Sub Superscript t Subscript right parenthesis Baseline left parenthesis theta right parenthesis StartFraction phi 0 left parenthesis theta right parenthesis Over mu Superscript 0 Baseline left parenthesis normal upper Theta left parenthesis ModifyingAbove h With caret Superscript t Baseline right parenthesis right parenthesis EndFraction periodφˆht(θ) = 1 (ˆht)(θ)
φ0(θ)
μ0( (ˆht))
.
(5.23b) 
References 
1. Kushner, A.: A versatile stochastic model of a function of unknown and time varying form. J. 
Math. Anal. Appl. 9, 379–388 (1962) 
2. Marti, K.: Diskretisierung stochastischer Programme unter Berücksichtigung der Problemstruk-
tur. Z. Angew. Math. Mech. 59, T105–T108 (1979) 
3. Marti, K.: Adaptive Zufallssuche in der Optimierung. ZAMM 60, 357–359 (1980) 
4. Mockus, J.: On bayesian methods of optimisation. In: Dixon, L., Szegö, G. (eds.) Towards Global 
Optimisation, pp. 166–181. North-Holland Publishing Company, Amsterdam (1975)

Chapter 6 
Applications to Random Search Methods 
with Joint Normal Search Variates 
Abstract As an application of the previous description of a general method to accel-
erate random search algorithms, in the following we consider search variates upper Z Subscript n plus 1Zn+1
at an iteration point upper X Subscript n Baseline equals x Subscript nXn = xn having a joint normal conditional distribution with 
mean and covariance matrix left parenthesis mu comma normal upper Lamda right parenthesis equals left parenthesis mu left parenthesis x Subscript n Baseline right parenthesis comma normal upper Lamda left parenthesis x Subscript n Baseline right parenthesis right parenthesis(μ, ∆) = (μ(xn), ∆(xn)). The mean search gain for 
a step  upper X Subscript n Baseline right arrow upper X Subscript n plus 1Xn →Xn+1 is determined by means of the mean decrease of the objective 
function. For simpliﬁcation, instead of the inﬁnite-stage optimal decision process 
for the selection of the parameters of the joint normal distribution, only the optimal 
one-step, upper X Subscript n Baseline right arrow upper X Subscript n plus 1Xn →Xn+1, gains are taken into account, where the convergence rate of 
the ﬁxed parameter and the optimized search method is evaluated. Since the optimal 
parameters of the normal distribution depend on the gradient and Hesse matrix of the 
objective functionupper FF, in a numerical realization of the optimal RSM, Quasi-Newton 
methods can be applied. 
6.1 
Introduction 
Solving optimization problems arising from engineering and economics, as, e.g., 
parameter- or process-optimization problems, 
min upper F left parenthesis x right parenthesis s period t period x element of upper D comma min F(x) s.t. x ∈D,
(6.1) 
where upper DD is a measurable subset of double struck upper R Superscript dRd and upper FF is a measurable real function deﬁned 
(at least) on upper DD, one meets often the following situation: 
(I) One should ﬁnd the global minimum upper F Superscript asteriskF∗and/or a global minimum point x Superscript asteriskx∗
of (6.1). Hence, most of the deterministic programming procedures, which are 
based on local improvements of the objective function upper F left parenthesis x right parenthesisF(x), will fail. 
(II) Concerning the objective functionupper F left parenthesis x right parenthesisF(x) one has a black-box-situation, i.e., there 
is only few a priori information aboutupper FF especially there is no (complete) knowl-
edge about the direct functional relationship between the control or input vector 
x element of upper Dx ∈D and its function valuey equals upper F left parenthesis x right parenthesisy = F(x). Hence, besides the limited a priori infor-
mation about upper FF, only by evaluating upper FF numerically or by experiments at certain 
points z 1 comma z 2 comma ellipsisz1, z2, . . . of double struck upper R Superscript dRd one gets further information on upper FF. 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_6 
131

132
6
Applications to Random Search Methods with Joint Normal Search Variates
Consequently, engineers use in these situations usually a certain search procedure 
for ﬁnding the global minimumupper FF and an optimal solutionx Superscript asteriskx∗of (6.1), see, e.g., Box’ 
EVOP method [ 2] and the random search methods as ﬁrst proposed by Anderson [ 1], 
Brooks [ 3] and Karnopp [ 5]. More recent descriptions of random search procedures 
were given by [ 6– 8, 10, 12– 14]. 
In the random search method considered here the sequence upper X 0 left parenthesis omega right parenthesisX0(ω), upper X 1 left parenthesis omega right parenthesisX1(ω), ellipsis. . ., 
upper X Subscript n Baseline left parenthesis omega right parenthesis comma ellipsisXn(ω), . . . of random iterates is constructed according to the following recurrence 
schema: 
upper X Subscript n plus 1 Baseline left parenthesis omega right parenthesis equals StartLayout Enlarged left brace 1st Row z Subscript n plus 1 Baseline comma i f z Subscript n plus 1 Baseline element of upper D a n d upper F left parenthesis z Subscript n plus 1 Baseline right parenthesis less than upper F left parenthesis upper X Subscript n Baseline left parenthesis omega right parenthesis right parenthesis 2nd Row upper X Subscript n Baseline left parenthesis omega right parenthesis comma e l s e comma EndLayoutXn+1(ω) =
 zn+1, if zn+1 ∈D and F(zn+1) < F
 
Xn(ω)
 
Xn(ω), else ,
(6.2) 
n equals 0 comma 1 comma ellipsis comman = 0, 1, . . . , where x 0 left parenthesis omega right parenthesis equals x 0 element of upper Dx0(ω) = x0 ∈D is a given starting point in upper DD and z 1 comma z 2 comma ellipsis comma z Subscript n Baseline comma ellipsisz1, z2, . . . ,
zn, . . . are realizations of a sequence of random dd-vectors 
upper Z 1 left parenthesis omega right parenthesis comma upper Z 2 left parenthesis omega right parenthesis comma ellipsis comma upper Z Subscript n Baseline left parenthesis omega right parenthesis comma ellipsisZ1(ω), Z2(ω), . . . , Zn(ω), . . .
having conditional distributions 
StartLayout 1st Row 1st Column Blank 2nd Column upper P left parenthesis upper Z Subscript n plus 1 Baseline left parenthesis omega right parenthesis element of upper B vertical bar upper X 0 equals x 0 comma upper X 1 equals x 1 comma ellipsis comma upper X Subscript n Baseline equals x Subscript n Baseline comma upper Z 1 equals z 1 comma ellipsis comma upper Z Subscript n Baseline equals z Subscript n Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper P left parenthesis upper Z Subscript n plus 1 Baseline left parenthesis omega right parenthesis element of upper B vertical bar upper X Subscript n Baseline equals x Subscript n Baseline right parenthesis equals pi Subscript n Baseline left parenthesis x Subscript n Baseline comma upper B right parenthesis EndLayout P
 
Zn+1(ω) ∈B|X0 = x0, X1 = x1, . . . , Xn = xn, Z1 = z1, . . . , Zn = zn
 
= P
 
Zn+1(ω) ∈B|Xn = xn
 
= πn(xn, B)
(6.3a) 
for each Borel subsetupper BB ofdouble struck upper R Superscript dRd. Here,pi Subscript n Baseline left parenthesis x Subscript n Baseline comma dot right parenthesis comma n equals 0 comma 1 comma period period period commaπn(xn, ·), n = 0, 1, ..., is a sequence of transi-
tion probability measures to be selected by the user of the search procedure. In many 
concrete cases upper Z Subscript n plus 1Zn+1 has a d minusd−dimensional normal distribution with mean vector mu Subscript nμn
and covariance matrix normal upper Lamda Subscript n∆n, i.e., 
pi Subscript n Baseline left parenthesis x Subscript n Baseline comma dot right parenthesis equals upper N left parenthesis mu Subscript n Baseline comma normal upper Lamda Subscript n Baseline right parenthesis comma n equals 0 comma 1 comma ellipsis commaπn(xn, ·) = N(μn, ∆n),
n = 0, 1, . . . ,
(6.3b) 
where mu Subscript n Baseline equals mu Subscript n Baseline left parenthesis x Subscript n Baseline right parenthesisμn = μn(xn) and normal upper Lamda Subscript n Baseline equals normal upper Lamda Subscript n Baseline left parenthesis x Subscript n Baseline right parenthesis∆n = ∆n(xn) are certain functions of the last state left parenthesis n comma x Subscript n Baseline right parenthesis(n, xn). 
Let the area of success upper G Subscript upper F Baseline left parenthesis x right parenthesisG F(x) at a point x element of double struck upper R Superscript dx ∈Rd be deﬁned by 
upper G Subscript upper F Baseline left parenthesis x right parenthesis equals StartSet y element of upper D colon upper F left parenthesis y right parenthesis less than upper F left parenthesis x right parenthesis EndSet periodG F(x) =
{
y ∈D : F(y) < F(x)
}
.
(6.4) 
At an iteration point x Subscript nxn by the random search procedure (6.2) a  dd-vector z Subscript n plus 1zn+1 is 
generated randomly according to the transition probability distributionpi Subscript n Baseline left parenthesis x Subscript n Baseline comma dot right parenthesisπn(xn, ·) and 
from x Subscript nxn we move to x Subscript n plus 1 Baseline equals z Subscript n plus 1xn+1 = zn+1 provided that z Subscript n plus 1 Baseline less than or equals upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesiszn+1 ≤G F(xn). Otherwise we stay 
at x Subscript n plus 1 Baseline equals x Subscript nxn+1 = xn and generate a new random point z Subscript n plus 2zn+2 according to the distribution 
pi Subscript n plus 1 Baseline left parenthesis x Subscript n plus 1 Baseline comma dot right parenthesis equals pi Subscript n plus 1 Baseline left parenthesis x Subscript n Baseline comma dot right parenthesisπn+1(xn+1, ·) = πn+1(xn, ·). 
We observe that upper X Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesisXn+1 ∈G F(xn) implies upper X Subscript t Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesisXt ∈G F(xn) for all t greater than nt > n. Let the set 
upper D Subscript epsilonDε of epsilonε-optimal solutions of our global minimization problem (6.1) be deﬁned by 
upper D Subscript epsilon Baseline equals StartSet y less than or equals upper D colon upper F left parenthesis y right parenthesis less than or equals normal upper Gamma Superscript asterisk Baseline plus c EndSet commaDε =
{
y ≤D : F(y) ≤ ∗+ c
}
,
(6.5) 
where c greater than 0c > 0 and upper F Superscript asteriskF∗is given by

6.2 Convergence of the Random Search Procedure (6.2)
133 
upper F Superscript asterisk Baseline equals inf left brace upper F left parenthesis x right parenthesis colon x element of upper D right brace semicolonF∗= inf
{
F(x) : x ∈D
}
;
let upper F Superscript asterisk Baseline greater than negative normal infinityF∗> −∞. Note that upper S Subscript n Baseline element of upper D Subscript epsilonSn ∈Dε implies upper X Subscript t Baseline less than or equals upper D Subscript epsilonXt ≤Dε for all t greater than nt > n. Hence, 
upper P left parenthesis upper X Subscript n Baseline element of upper D Subscript epsilon Baseline right parenthesis comma n equals 1 comma 2 comma ellipsisP(Xn ∈Dε),
n = 1, 2, . . .
is a non-increasing sequence for each ﬁxed epsilon greater than 0ε > 0. 
6.2 
Convergence of the Random Search Procedure (6.2) 
Letalpha Subscript n Baseline left parenthesis upper D Subscript epsilon Baseline right parenthesisαn(Dε) denote the minimal probability that at thenn-th iteration stepupper X Subscript n Baseline right arrow upper S Subscript n plus 1Xn →Sn+1
we reach the set upper D Subscript epsilonDε from any point upper X Subscript n Baseline equals x Subscript nXn = xn outside this set, i.e., 
alpha Subscript n Baseline left parenthesis upper D Subscript epsilon Baseline right parenthesis equals inf left brace pi Subscript n Baseline left parenthesis x Subscript n Baseline comma upper D Subscript epsilon Baseline right parenthesis colon x Subscript n Baseline element of upper D minus upper D Subscript epsilon Baseline right brace periodαn(Dε) = inf
{
πn(xn, Dε) : xn ∈D\Dε
}
.
(6.6) 
According to [ 6] we have  
Theorem 6.1 (a) If for an epsilon greater than 0ε > 0
sigma summation Underscript n equals 0 Overscript normal infinity Endscripts alpha Subscript n Baseline left parenthesis upper D Subscript epsilon Baseline right parenthesis equals plus normal infinity comma
∞
∑
n=0
αn(Dε) = +∞,
(6.7) 
then limit Underscript n right arrow normal infinity Endscripts upper P left parenthesis upper X Subscript n Baseline element of upper D Subscript epsilon Baseline right parenthesis equals 1 lim
n→∞P(Xn ∈Dε) = 1 for every epsilon greater than 0ε > 0. 
(b) Suppose that 
limit Underscript n right arrow normal infinity Endscripts upper P left parenthesis upper X Subscript n Baseline element of upper D Subscript epsilon Baseline right parenthesis equals 1 f o r e v e r y epsilon greater than 0 period lim
n→∞P(Xn ∈Dε) = 1 for every ε > 0.
(6.8) 
Then limit Underscript n right arrow normal infinity Endscripts upper F left parenthesis upper X Subscript n Baseline right parenthesis equals upper F Superscript asterisk lim
n→∞F(Xn) = F∗a.s. (with probability one) for every starting point x 0 element of nx0 ∈
n. 
(c) Assume thatupper FF is continuous and that the level setsupper D Subscript epsilonDε are nonempty and compact 
for eachepsilon greater than 0ε > 0. Thenlimit Underscript n right arrow normal infinity Endscripts upper F left parenthesis upper X Subscript n Baseline right parenthesis equals upper F Superscript asterisk lim
n→∞F(Xn) = F∗implies that alsolimit Underscript n right arrow normal infinity Endscripts lim
n→∞distleft parenthesis upper X Subscript n Baseline comma upper D Superscript asterisk Baseline right parenthesis equals 0(Xn, D∗) = 0, 
where dist left parenthesis upper X Subscript n Baseline comma upper D Superscript asterisk Baseline right parenthesis(Xn, D∗) denotes the distance between upper X Subscript nXn and the set upper D Superscript asterisk Baseline equals upper D 0D∗= D0 of 
global minimum points x Superscript asteriskx∗of (6.1). 
Example 6.1 Ifpi Subscript n Baseline left parenthesis x Subscript n Baseline comma dot right parenthesis equals pi left parenthesis dot right parenthesisπn(xn, ·) = π(·) is a ﬁxed probability measure, thenlimit Underscript n right arrow normal infinity Endscripts upper F left parenthesis upper X Subscript n Baseline right parenthesis equals upper F Superscript asterisk lim
n→∞F(Xn) =
F∗a.s. holds, provided that 
pi left parenthesis StartSet y element of upper D colon upper F left parenthesis y right parenthesis less than or equals upper F Superscript x Baseline plus epsilon EndSet right parenthesis greater than 0 f o r e a c h epsilon greater than 0 periodπ
({
y ∈D : F(y) ≤F x + ε
})
> 0
for each ε > 0.
This is true, e.g., is upper D Subscript epsilonDε has a non-zero Lebesque measure for all epsilon greater than 0ε > 0 and piπ has a 
probability density phiφ with phi left parenthesis x right parenthesis greater than 0φ(x) > 0 almost everywhere.

134
6
Applications to Random Search Methods with Joint Normal Search Variates
Note 6.1 Further convergence results of this type were given by [ 11, 13]. 
Knowing several (weak) conditions which guarantee the convergence a.s. ofleft parenthesis upper X Subscript n Baseline right parenthesis(Xn)
to the global minimumupper F Superscript asteriskF∗, to the set of global minimum pointsupper D Superscript asteriskD∗, resp., one should 
also have some information concerning the rate of convergence of upper F left parenthesis upper X Subscript n Baseline right parenthesis comma left parenthesis upper X Subscript n Baseline right parenthesisF(Xn), (Xn) to 
upper F Superscript asterisk Baseline comma upper D Superscript asteriskF∗, D∗, respectively. 
By [ 13] we have now the following result. Of course, as in the deterministic opti-
mization, in order to prove theorems about the speed of convergence, the optimization 
problem (6.1) must fulﬁll some additional regularity conditions. 
Theorem 6.2 Suppose thatupper D Superscript asterisk Baseline not equals normal empty setD∗/= ∅and the transition probability measurepi left parenthesis x Subscript n Baseline comma dot right parenthesisπ(xn, ·)
is a dd-dimensional normal distribution upper N left parenthesis mu left parenthesis x Subscript n Baseline right parenthesis comma normal upper Lamda right parenthesisN
 
μ(xn), ∆
 
with a ﬁxed covariance 
matrix normal upper Lamda∆. 
(a) Letupper D Subscript epsilonDε be bonded for someepsilon equals epsilon 0 greater than 0ε = ε0 > 0 and assume thatupper FF is convex in a certain 
neighborhood of upper D Superscript asteriskD∗. Then 
limit Underscript n right arrow normal infinity Endscripts n Superscript gamma Baseline left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis equals 0 a period s period lim
n→∞nγ  
F(Xn) −F∗ 
= 0
a.s.
(6.9) 
for each constant gammaγ such that 0 less than gamma less than StartFraction 1 Over d EndFraction0 < γ < 1
d and every starting point x 0x0. 
(b) Let upper D Subscript epsilonDε be compact, upper D Superscript asterisk Baseline equals StartSet x Superscript asterisk Baseline EndSetD∗= {x∗}, where s Superscript asterisk Baseline element of i n t left parenthesis upper D right parenthesiss∗∈int(D) ( = interior of upper DD), and sup-
pose that upper FF is continuous and twice continuously differentiable in a certain 
neighborhood of x Superscript asteriskx∗. Moreover, assume that upper FF has a positive deﬁnite Hessian 
matrix at x Superscript asteriskx∗. Then for each starting point x 0 element of upper Dx0 ∈D it is 
StartLayout 1st Row 1st Column Blank 2nd Column limit Underscript n right arrow normal infinity Endscripts n Superscript gamma Baseline left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis equals 0 3rd Column Blank 4th Column a period s period f o r e a c h 0 less than gamma less than StartFraction 2 Over d EndFraction comma 5th Column Blank 6th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column limit Underscript n right arrow normal infinity Endscripts n Superscript gamma Baseline parallel to upper X Subscript n Baseline minus x Superscript asterisk Baseline parallel to equals 0 3rd Column Blank 4th Column a period s period f o r e a c h 0 less than gamma less than StartFraction 1 Over d EndFraction comma 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column limit sup Underscript n right arrow normal infinity Endscripts n Superscript StartFraction 2 Over d EndFraction Baseline upper E left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis less than or equals tau left parenthesis x 0 right parenthesis less than 3rd Column Blank 4th Column normal infinity comma EndLayout lim
n→∞nγ  
F(Xn) −F∗ 
= 0
a.s. for each 0 < γ < 2
d ,
(6.10a) 
StartLayout 1st Row 1st Column Blank 2nd Column limit Underscript n right arrow normal infinity Endscripts n Superscript gamma Baseline left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis equals 0 3rd Column Blank 4th Column a period s period f o r e a c h 0 less than gamma less than StartFraction 2 Over d EndFraction comma 5th Column Blank 6th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column limit Underscript n right arrow normal infinity Endscripts n Superscript gamma Baseline parallel to upper X Subscript n Baseline minus x Superscript asterisk Baseline parallel to equals 0 3rd Column Blank 4th Column a period s period f o r e a c h 0 less than gamma less than StartFraction 1 Over d EndFraction comma 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column limit sup Underscript n right arrow normal infinity Endscripts n Superscript StartFraction 2 Over d EndFraction Baseline upper E left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis less than or equals tau left parenthesis x 0 right parenthesis less than 3rd Column Blank 4th Column normal infinity comma EndLayout lim
n→∞nγ ||Xn −x∗|| = 0
a.s. for each 0 < γ < 1
d ,
(6.10b) 
StartLayout 1st Row 1st Column Blank 2nd Column limit Underscript n right arrow normal infinity Endscripts n Superscript gamma Baseline left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis equals 0 3rd Column Blank 4th Column a period s period f o r e a c h 0 less than gamma less than StartFraction 2 Over d EndFraction comma 5th Column Blank 6th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column limit Underscript n right arrow normal infinity Endscripts n Superscript gamma Baseline parallel to upper X Subscript n Baseline minus x Superscript asterisk Baseline parallel to equals 0 3rd Column Blank 4th Column a period s period f o r e a c h 0 less than gamma less than StartFraction 1 Over d EndFraction comma 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column limit sup Underscript n right arrow normal infinity Endscripts n Superscript StartFraction 2 Over d EndFraction Baseline upper E left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis less than or equals tau left parenthesis x 0 right parenthesis less than 3rd Column Blank 4th Column normal infinity comma EndLayout lim sup
n→∞
n
2
d E
 
F(Xn) −F∗ 
≤τ(x0) < ∞,
(6.10c) 
where tau left parenthesis x 0 right parenthesisτ(x0) is a nonnegative ﬁnite constant depending on the starting point 
x 0 element of upper Dx0 ∈D and upper EE denotes the expectation operator. 
(c) Under the same assumptions as in (b) we also have for each starting point 
x 0 element of upper D comma x 0 not equals x Superscript asteriskx0 ∈D, x0 /= x∗, 
limit inf Underscript n right arrow normal infinity Endscripts n Superscript StartFraction 2 Over d EndFraction Baseline upper L left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis greater than or equals h left parenthesis x 0 right parenthesis comma lim inf
n→∞n
2
d L
 
F(Xn) −F∗ 
≥h(x0),
(6.11) 
where h left parenthesis x 0 right parenthesish(x0) is a nonnegative constant depending on the starting point x 0x0. Fur-
thermore for each x 0 element of upper D comma x 0 not equals x Superscript asteriskx0 ∈D, x0 /= x∗, it is  
limit inf Underscript n right arrow normal infinity Endscripts n Superscript gamma Baseline parallel to upper X Subscript n Baseline minus x Superscript asterisk Baseline parallel to equals plus normal infinity f o r e a c h gamma greater than StartFraction 2 Over d EndFraction period lim inf
n→∞nγ ||Xn −x∗|| = +∞
for each γ > 2
d .
(6.12)

6.3 Controlled Random Search Methods
135
Note 6.2 (a) Theorem 6.2 holds also for many non-normal classes of transition 
probability measures pi Subscript n Baseline left parenthesis x Subscript n Baseline comma dot right parenthesis right parenthesisπn(xn, ·)), see  [  13]. 
(b) It turns out that under the assumptions of Theorem 6.2b the speed of convergence 
of (6.2) to the global minimum of (6.1) is  exactly given by 
upper E left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline equals upper O left parenthesis n Superscript minus StartFraction 2 Over d EndFraction Baseline right parenthesis periodE
 
F(Xn) −F∗= O(n−2
d ).
(6.13) 
(c) The above convergence rates reﬂect the fact that in practice one observes that the 
speed of convergence may be very poor—especially near to the optimum of (6.1). 
Hence, using random search procedures, a main problem is the control of the 
basic random search algorithm (6.2) such that the speed of convergence ofleft parenthesis upper X Subscript n Baseline right parenthesis(Xn)
of upper F Superscript asterisk Baseline comma upper D Superscript asteriskF∗, D∗, resp., is increased. 
6.3 
Controlled Random Search Methods 
A general procedure how to speed up the search routine (6.2) is described in [ 6– 
8]. The idea is to associated with the random search routine (6.2) a sequential 
stochastic decision process deﬁned by the following items (I)–(III): 
(I) We observe that the conditional probability distributionpi Subscript n Baseline left parenthesis x Subscript n Baseline comma dot right parenthesisπn(xn, ·) ofupper Z Subscript n plus 1Zn+1 given 
upper X Subscript n Baseline equals x Subscript nXn = xn depends in general on a certain (vector valued) parameter aa, i.e., 
pi Subscript n Baseline left parenthesis x Subscript n Baseline comma dot right parenthesis equals pi Subscript n Baseline left parenthesis a comma x Subscript n Baseline comma dot right parenthesis comma a element of upper A commaπn(xn, ·) = πn(a, xn, ·),
a ∈A,
(6.14) 
where upper AA is the set of admissible parameters aa. The method, developed ﬁrst in 
[ 6– 8], is now to run the algorithm (6.2) not with a ﬁxed parameteraa, but to use 
an optimal control 
a equals a Subscript n Superscript asterisk Baseline left parenthesis x Subscript n Baseline right parenthesisa = a∗
n(xn)
(6.15) 
of aa such that a certain criterion—to be explained in (II)—is maximized. 
Exemplary,pi Subscript n Baseline left parenthesis x Subscript n Baseline comma dot right parenthesisπn(xn, ·) is  assumed to be add-dimensional normal distribution with 
mean mu Subscript nμn and covariance matrix normal upper Lamda Subscript n∆n. Hence, in this case we have 
a equals left parenthesis mu comma normal upper Lamda right parenthesis element of upper A colon equals upper M times script upper Q commaa = (μ, ∆) ∈A := M × Q,
(6.16) 
where upper M subset of double struck upper R Superscript dM ⊂Rd and script upper QQ is the set containing all symmetric, positive deﬁnite 
d times dd × d matrices and the zero matrix. 
(II) To search step upper X Subscript n Baseline right arrow upper X Subscript n plus 1Xn →Xn+1 there is associated a mean search gain 
upper U Subscript n Baseline left parenthesis a Subscript n Baseline comma x Subscript n Baseline right parenthesis equals upper E left parenthesis u left parenthesis x Subscript n Baseline comma upper X Subscript n plus 1 Baseline right parenthesis vertical bar upper X Subscript n Baseline equals x Subscript n Baseline right parenthesis commaUn(an, xn) = E
 
u(xn, Xn+1)|Xn = xn
 
,
(6.17) 
where the gain function u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline right parenthesisu(xn, xn+1) is deﬁned, e.g., by

136
6
Applications to Random Search Methods with Joint Normal Search Variates
StartLayout 1st Row 1st Column u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row 1st Column 1 comma 2nd Column i f x Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Row 1st Column 0 comma 2nd Column e l s e EndLayout 2nd Row 1st Column Blank 3rd Row 1st Column u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline right parenthesis 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row 1st Column upper F left parenthesis x Subscript n Baseline right parenthesis minus upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis comma 2nd Column i f x Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Row 1st Column 0 comma 2nd Column e l s e EndLayout 4th Row 1st Column Blank 5th Row 1st Column u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline right parenthesis 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row 1st Column parallel to x Subscript n Baseline minus x Subscript n plus 1 Baseline parallel to comma 2nd Column i f x Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Row 1st Column 0 comma 2nd Column e l s e EndLayout EndLayoutu(xn, xn+1 =
 1,
if xn+1 ∈G F(xn)
0,
else
(6.18a) 
StartLayout 1st Row 1st Column u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row 1st Column 1 comma 2nd Column i f x Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Row 1st Column 0 comma 2nd Column e l s e EndLayout 2nd Row 1st Column Blank 3rd Row 1st Column u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline right parenthesis 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row 1st Column upper F left parenthesis x Subscript n Baseline right parenthesis minus upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis comma 2nd Column i f x Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Row 1st Column 0 comma 2nd Column e l s e EndLayout 4th Row 1st Column Blank 5th Row 1st Column u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline right parenthesis 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row 1st Column parallel to x Subscript n Baseline minus x Subscript n plus 1 Baseline parallel to comma 2nd Column i f x Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Row 1st Column 0 comma 2nd Column e l s e EndLayout EndLayoutu(xn, xn+1) =
 F(xn) −F(xn+1),
if xn+1 ∈G F(xn)
0,
else
(6.18b) 
StartLayout 1st Row 1st Column u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row 1st Column 1 comma 2nd Column i f x Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Row 1st Column 0 comma 2nd Column e l s e EndLayout 2nd Row 1st Column Blank 3rd Row 1st Column u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline right parenthesis 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row 1st Column upper F left parenthesis x Subscript n Baseline right parenthesis minus upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis comma 2nd Column i f x Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Row 1st Column 0 comma 2nd Column e l s e EndLayout 4th Row 1st Column Blank 5th Row 1st Column u left parenthesis x Subscript n Baseline comma x Subscript n plus 1 Baseline right parenthesis 2nd Column equals 3rd Column StartLayout Enlarged left brace 1st Row 1st Column parallel to x Subscript n Baseline minus x Subscript n plus 1 Baseline parallel to comma 2nd Column i f x Subscript n plus 1 Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Row 1st Column 0 comma 2nd Column e l s e EndLayout EndLayoutu(xn, xn+1) =
 ||xn −xn+1||,
if xn+1 ∈G F(xn)
0,
else
(6.18c) 
Hence, in the ﬁrst case upper U Subscript n Baseline left parenthesis a Subscript n Baseline comma x Subscript n Baseline right parenthesisUn(an, xn) is the probability of a search success, in the 
second case upper U Subscript n Baseline left parenthesis a Subscript n Baseline comma x Subscript n Baseline right parenthesisUn(an, xn) is the mean improvement of the value of the objective 
function and in case (6.18c) upper U Subscript n Baseline left parenthesis a Subscript n Baseline comma x Subscript n Baseline right parenthesisUn(an, xn) is the mean step length of a successful 
iteration step upper X Subscript n Baseline right arrow upper X Subscript n plus 1Xn →Xn+1. 
(III) Obviously, the convergence behavior of the random search processleft parenthesis upper S Subscript n Baseline right parenthesis(Sn) can be 
improved now by maximizing the mean total search gain 
upper U Subscript normal infinity Baseline equals upper U Subscript normal infinity Baseline left parenthesis a 0 comma a 1 comma ellipsis right parenthesis colon equals upper E sigma summation Underscript n equals 0 Overscript normal infinity Endscripts rho Superscript n Baseline u left parenthesis upper X Subscript n Baseline comma upper X Subscript n plus 1 Baseline right parenthesisU∞= U∞(a0, a1, . . .) := E
∞
∑
n=0
ρnu(Xn, Xn+1)
subject to the controlsa Subscript n Baseline equals a Subscript n Baseline left parenthesis x Subscript n Baseline right parenthesis element of upper A comma n equals 0 comma 1 comma ellipsisan = an(xn) ∈A, n = 0, 1, . . ., whererho greater than 0ρ > 0 is a certain 
discount factor. This maximization can be done in principle by the methods of 
stochastic dynamic programming, see, e.g., [ 9]. 
6.4 
Computation of Optimal Controls 
In order to weaken the computational complexity, the inﬁnite-stage stochastic deci-
sion process deﬁned in Sect. 6.3 is replaced by the sequence of 1-stage decision 
problems 
max upper U Subscript n Baseline left parenthesis a Subscript n Baseline comma x Subscript n Baseline right parenthesis s period t period a Subscript n Baseline element of upper A comma max Un(an, xn)
s.t. an ∈A,
n equals 0 comma 1 comma 2 comma ellipsisn = 0, 1, 2, . . .. Hence the optimal control a Subscript n Superscript asterisk Baseline equals a Superscript asterisk Baseline left parenthesis x Subscript n Baseline right parenthesisa∗
n = a∗(xn) is deﬁned as a solution of 
max Underscript a element of upper A Endscripts integral Underscript y element of upper G Subscript upper F Baseline left parenthesis x right parenthesis Endscripts u left parenthesis x comma y right parenthesis pi left parenthesis a comma x comma d y right parenthesis period max
a∈A
 
y∈G F(x)
u(x, y)π(a, x, dy).
(6.19) 
In the following we consider the gain function (6.18b), i.e., 
u left parenthesis x comma y right parenthesis equals upper F left parenthesis x right parenthesis minus upper F left parenthesis y right parenthesis periodu(x, y) = F(x) −F(y).
Since an exact analytical solution of (6.19) is not possible in general, we have to apply 
some approximations. Firstly, the area of successupper G Subscript upper F Baseline left parenthesis x right parenthesisG F(x) is approximated according 
to

6.4 Computation of Optimal Controls
137
upper G Subscript upper F Baseline left parenthesis x right parenthesis almost equals left parenthesis y element of double struck upper R Superscript d Baseline colon nabla upper F left parenthesis x right parenthesis Superscript upper T Baseline left parenthesis y minus x right parenthesis plus one half left parenthesis y minus x right parenthesis Superscript upper T Baseline nabla squared upper F left parenthesis x right parenthesis left parenthesis y minus x right parenthesis less than 0 right parenthesis commaG F(x) ≈
(
y ∈Rd : ∇F(x)T (y −x) + 1
2(y −x)T ∇2F(x)(y −x) < 0
)
,
(6.20) 
wherenabla upper F left parenthesis x right parenthesis∇F(x) denotes the gradient ofupper FF andnabla squared upper F∇2F is the Hessian matrix ofupper FF atxx. We  
assume thatnabla squared upper F left parenthesis x right parenthesis∇2F(x) is regular andnabla upper F left parenthesis x right parenthesis not equals 0∇F(x) /= 0. Deﬁning then the vectorw element of double struck upper R Superscript dw ∈Rd by 
y minus x equals w minus nabla squared upper F left parenthesis x right parenthesis Superscript negative 1 Baseline nabla upper F left parenthesis x right parenthesis commay −x = w −∇2F(x)−1∇F(x),
(6.21) 
the quadratic inequality contained in (6.20) has the form 
w Superscript upper T Baseline StartFraction nabla squared upper F left parenthesis x right parenthesis Over r EndFraction w less than 1 commawT ∇2F(x)
r
w < 1,
where r greater than 0r > 0 is deﬁned by 
r equals nabla upper F left parenthesis x right parenthesis Superscript upper T Baseline nabla squared upper F left parenthesis x right parenthesis Superscript negative 1 Baseline nabla upper F left parenthesis x right parenthesis periodr = ∇F(x)T ∇2F(x)−1∇F(x).
By the Cholesky-decomposition of StartFraction nabla squared normal upper Gamma left parenthesis x right parenthesis Over r EndFraction∇2 (x)
r
we can determine a matrix normal upper Gamma such that 
StartFraction nabla squared upper F left parenthesis x right parenthesis Over r EndFraction equals normal upper Gamma normal upper Gamma Superscript upper T Baseline period∇2F(x)
r
=   T .
(6.22) 
Deﬁning 
v equals normal upper Gamma Superscript upper T Baseline w commav =  T w,
(6.23) 
the approximation (6.20) ofupper G Subscript upper F Baseline left parenthesis x right parenthesisG F(x) can be represented according to (6.21) and (6.22) 
by 
upper G Subscript upper F Baseline left parenthesis x right parenthesis almost equals left parenthesis x Subscript upper N Baseline plus normal upper Gamma Superscript negative 1 Baseline Superscript upper T Baseline v colon parallel to v parallel to less than 1 right parenthesis commaG F(x) ≈
 
xN +  −1T v : ||v|| < 1
 
,
(6.24) 
where parallel to dot parallel to|| · || is the Euclidean norm and x Subscript upper NxN is given by 
x Subscript upper N Baseline equals x minus nabla squared upper F left parenthesis x right parenthesis Superscript negative 1 Baseline nabla upper F left parenthesis x right parenthesis periodxN = x −∇2F(x)−1∇F(x).
It is then easy to verify that by the same transformation 
v equals v left parenthesis omega right parenthesis colon equals normal upper Gamma Superscript upper T Baseline left parenthesis y left parenthesis omega right parenthesis minus x Subscript upper N Baseline right parenthesisv = v(ω) :=  T (y(ω) −xN)
the search gain u left parenthesis x comma y right parenthesis equals normal upper Gamma left parenthesis x right parenthesis minus upper F left parenthesis y right parenthesisu(x, y) =  (x) −F(y) can be approximated by 
u left parenthesis x comma y right parenthesis almost equals StartFraction r Over 2 EndFraction left parenthesis 1 minus parallel to v parallel to squared right parenthesis periodu(x, y) ≈r
2
 
1 −||v||2 
.
(6.25) 
By means of (6.24) and (6.25) the objective functionupper U left parenthesis a comma x right parenthesis comma a equals left parenthesis mu comma normal upper Lamda right parenthesisU(a, x), a = (μ, ∆), of (6.19) 
can be approximated by

138
6
Applications to Random Search Methods with Joint Normal Search Variates
ModifyingAbove upper U With tilde left parenthesis a comma upper Q right parenthesis equals StartFraction r Over 2 EndFraction integral Underscript parallel to v parallel to less than 1 Endscripts left parenthesis 1 minus parallel to v parallel to squared right parenthesis f left parenthesis q comma upper Q comma v right parenthesis d v comma 
U(a, Q) = r
2
 
||v||<1
 
1 −||v||2 
f (q, Q, v)dv,
(6.26) 
where the probability density f equals f left parenthesis q comma upper Q comma v right parenthesis f = f (q, Q, v) of the transformation v equals v left parenthesis omega right parenthesisv = v(ω) of 
y equals y left parenthesis omega right parenthesisy = y(ω) is given by 
f left parenthesis q comma upper Q comma v right parenthesis equals StartFraction 1 Over left parenthesis 2 pi right parenthesis Superscript d divided by 2 Baseline left parenthesis det upper Q right parenthesis Superscript 1 divided by 2 Baseline EndFraction exp left parenthesis minus one half left parenthesis v minus q right parenthesis Superscript upper T Baseline upper Q Superscript negative 1 Baseline left parenthesis v minus q right parenthesis right parenthesis period f (q, Q, v) =
1
(2π)d/2(det Q)1/2 exp
(
−1
2(v −q)T Q−1(v −q)
)
.
Here the dd-vector qq and the positive deﬁnite d times dd × d matrix upper QQ are given by 
StartLayout 1st Row 1st Column q equals upper E v left parenthesis omega right parenthesis 2nd Column equals 3rd Column normal upper Gamma Superscript upper T Baseline left parenthesis mu minus x Subscript n Baseline right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column upper Q equals c o v left parenthesis v left parenthesis dot right parenthesis right parenthesis 2nd Column equals 3rd Column normal upper Gamma Superscript upper T Baseline normal upper Lamda normal upper Gamma period EndLayoutq = Ev(ω) =  T (μ −xn),
(6.27) 
StartLayout 1st Row 1st Column q equals upper E v left parenthesis omega right parenthesis 2nd Column equals 3rd Column normal upper Gamma Superscript upper T Baseline left parenthesis mu minus x Subscript n Baseline right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column upper Q equals c o v left parenthesis v left parenthesis dot right parenthesis right parenthesis 2nd Column equals 3rd Column normal upper Gamma Superscript upper T Baseline normal upper Lamda normal upper Gamma period EndLayoutQ = cov(v(·)) =  T ∆ .
(6.28) 
By the 1-1-transformations (6.27) and (6.28), the maximization problem (6.19) can 
be approximated by 
max Underscript q element of upper K comma upper Q element of script upper Q Endscripts ModifyingAbove upper U With tilde left parenthesis q comma upper Q right parenthesis comma
max
q∈K,Q∈Q
 
U(q, Q),
(6.29) 
where upper KK and script upper QQ are deﬁned by 
StartLayout 1st Row 1st Column upper K 2nd Column equals upper K left parenthesis upper M right parenthesis equals StartSet normal upper Gamma Superscript upper T Baseline left parenthesis mu minus x Subscript upper N Baseline right parenthesis colon mu element of upper M EndSet comma 2nd Row 1st Column script upper Q 2nd Column equals StartSet 0 EndSet union StartSet normal upper Lamda colon normal upper Lamda p o s i t i v e d e f i n i t e dollar sign d times d dollar sign m a t r i x EndSet EndLayoutK = K(M) =
{
 T (μ −xN) : μ ∈M
}
,
Q = {0} ∪{∆: ∆positive deﬁnite d × d matrix}
and upper MM is a certain subset of double struck upper R Superscript dRd. 
By the preceding considerations we obtain the following result: 
Theorem 6.3 Let q Superscript asterisk Baseline comma upper Q Superscript asteriskq∗, Q∗be an optimal solution of (6.29) and deﬁne mu Superscript asterisk Baseline comma normal upper Lamda Superscript asteriskμ∗, ∆∗by 
StartLayout 1st Row 1st Column mu Superscript asterisk 2nd Column equals x Subscript upper N Baseline plus normal upper Gamma Superscript upper T Baseline Superscript negative 1 Baseline q Superscript asterisk Baseline comma 2nd Row 1st Column normal upper Lamda Superscript asterisk 2nd Column equals left parenthesis normal upper Gamma upper Q Superscript asterisk negative 1 Baseline normal upper Gamma Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline period EndLayoutμ∗= xN +  T −1q∗,
∆∗= ( Q∗−1 T )−1.
(6.30) 
Then the 1-stage optimal controla Superscript asterisk Baseline left parenthesis x right parenthesis equals left parenthesis mu Superscript asterisk Baseline comma normal upper Lamda Superscript asterisk Baseline right parenthesisa∗(x) = (μ∗, ∆∗) is given approximately by (6.30). 
In order to determine q Superscript asteriskq∗and upper Q Superscript asteriskQ∗, we suppose now that the feasible set upper MM for the 
mean value muμ is deﬁned by 
upper M equals left brace mu element of double struck upper R Superscript d Baseline colon gamma 1 squared r less than left parenthesis mu minus x Subscript upper N Baseline right parenthesis Superscript upper T Baseline nabla squared upper F left parenthesis x right parenthesis left parenthesis mu minus x Subscript upper N Baseline right parenthesis less than or equals gamma 2 squared r right parenthesis commaM =
{
μ ∈Rd : γ 2
1 r < (μ −xN)T ∇2F(x)(μ −xN) ≤γ 2
2 r
 
,
(6.31) 
where0 less than gamma 1 less than or equals gamma 20 < γ1 ≤γ2 are arbitrary, but ﬁxed constants. In this caseupper K equals upper K left parenthesis upper M right parenthesisK = K(M) is given 
by 
upper K equals StartSet q element of double struck upper R Superscript d Baseline colon gamma 1 less than or equals parallel to q parallel to less than or equals gamma 2 EndSet commaK =
{
q ∈Rd : γ1 ≤||q|| ≤γ2
}
,
whereparallel to dot parallel to|| · || denotes the Euclidean norm. Note that the important caseupper M equals StartSet x EndSetM = {x}, i.e., 
mu equals xμ = x(= last iteration point), corresponds to the case gamma 1 equals gamma 2 equals 1γ1 = γ2 = 1.

6.5 Convergence Rates of Controlled Random Search Procedures
139
Assume now that upper MM is given by (6.31). Since each upper QQ has the form upper Q equals upper T Delta upper T Superscript upper TQ = T ∆T T , 
whereupper TT is an orthogonal matrix andDelta∆is a diagonal matrix, the minimization problem 
(6.29) is equivalent to 
StartLayout 1st Row 1st Column Blank 2nd Column max ModifyingAbove upper U With tilde left parenthesis q comma Delta right parenthesis 2nd Row 1st Column Blank 2nd Column s period t period gamma 1 less than or equals parallel to q parallel to less than or equals gamma 2 comma 3rd Row 1st Column Blank 2nd Column Delta element of script upper Q comma normal upper Lamda d i a g o n a l period EndLayout max
 
U(q, ∆)
(6.32) 
s.t.
γ1 ≤||q|| ≤ γ2,
∆∈ Q, ∆diagonal. 
By a further approximation, we ﬁnd then that an optimal solution q Superscript asterisk Baseline comma upper Q Superscript asteriskq∗, Q∗of (6.32) 
is given approximately by this equations 
StartLayout 1st Row 1st Column q Superscript asterisk 2nd Column equals k Superscript asterisk Baseline 1 comma 1 equals left parenthesis 1 comma ellipsis comma 1 right parenthesis Superscript upper T Baseline comma k Superscript asterisk Baseline element of double struck upper R 2nd Row 1st Column upper Q Superscript asterisk 2nd Column equals c Superscript asterisk Baseline upper I comma upper I equals i d e n t i t y m a t r i x comma c Superscript asterisk Baseline greater than 0 period EndLayoutq∗= k∗1, 1 = (1, . . . , 1)T , k∗∈R
(6.33) 
Q∗ = c∗ I, I = identity matrix, c∗ > 0. 
Now (6.30), (6.33) and (6.22) yield 
StartLayout 1st Row 1st Column mu Superscript asterisk 2nd Column equals x Subscript upper N Baseline plus k Superscript asterisk Baseline normal upper Gamma Superscript upper T Baseline Superscript negative 1 Baseline 1 comma 2nd Row 1st Column normal upper Lamda Superscript asterisk 2nd Column equals left parenthesis normal upper Gamma StartFraction 1 Over c Superscript asterisk Baseline EndFraction normal upper Gamma Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline equals c Superscript asterisk Baseline left parenthesis normal upper Gamma normal upper Gamma Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline equals c Superscript asterisk Baseline left parenthesis StartFraction v squared left parenthesis upper F left parenthesis x right parenthesis Over r EndFraction right parenthesis Superscript negative 1 Baseline 3rd Row 1st Column Blank 2nd Column equals c Superscript asterisk Baseline r nabla squared upper F left parenthesis x right parenthesis Superscript negative 1 Baseline period EndLayoutμ∗= xN + k∗ T −11,
∆∗=
(
 1
c∗ T
)−1
= c∗(  T )−1 = c∗
(v2(F(x)
r
)−1
= c∗r∇2F(x)−1.
Hence, we have this result. 
Theorem 6.4 The 1-stage optimal control a Superscript asterisk Baseline left parenthesis x right parenthesis equals left parenthesis mu Superscript asterisk Baseline comma normal upper Lamda Superscript asterisk Baseline right parenthesisa∗(x) = (μ∗, ∆∗) of the random search 
procedure (6.2) is given approximately by 
StartLayout 1st Row 1st Column mu Superscript asterisk 2nd Column equals x Subscript upper N Baseline plus k Superscript asterisk Baseline normal upper Gamma Superscript upper T Baseline Superscript negative 1 Baseline comma 2nd Row 1st Column normal upper Lamda Superscript asterisk 2nd Column equals c Superscript asterisk Baseline left parenthesis nabla upper F left parenthesis x right parenthesis Superscript upper T Baseline nabla squared upper F left parenthesis x right parenthesis Superscript negative 1 Baseline nabla upper F left parenthesis x right parenthesis right parenthesis nabla squared upper F left parenthesis x right parenthesis Superscript negative 1 Baseline comma EndLayoutμ∗= xN + k∗ T −1,
(6.34)
∆∗ = c∗(
∇ F(x)T ∇2 F(x)−1∇ F(x)
)
∇2 F(x)−1 , 
where k Superscript asterisk Baseline element of double struck upper R comma c Superscript asterisk Baseline greater than 0k∗∈R, c∗> 0 are certain ﬁxed parameters. 
6.5 
Convergence Rates of Controlled Random Search 
Procedures 
Assume that the random search procedure (6.2) has normal distributed search variates 
upper Z 1 left parenthesis omega right parenthesis comma upper Z 2 left parenthesis omega right parenthesis comma ellipsis comma upper Z Subscript n Baseline left parenthesis omega right parenthesis comma ellipsisZ1(ω), Z2(ω), . . . , Zn(ω), . . . controlled by means of the following control law 
StartLayout 1st Row 1st Column mu Superscript 0 Baseline left parenthesis x right parenthesis 2nd Column equals x 2nd Row 1st Column normal upper Lamda Superscript 0 Baseline left parenthesis x right parenthesis 2nd Column equals c left parenthesis nabla upper F left parenthesis x right parenthesis Superscript upper T Baseline nabla squared upper F left parenthesis x right parenthesis Superscript negative 1 Baseline nabla upper F left parenthesis x right parenthesis right parenthesis nabla squared upper F left parenthesis x right parenthesis Superscript negative 1 Baseline comma EndLayoutμ0(x) = x
∆0(x) = c
(
∇F(x)T ∇2F(x)−1∇F(x)
)
∇2F(x)−1,
(6.35)

140
6
Applications to Random Search Methods with Joint Normal Search Variates
where c greater than 0c > 0 is a ﬁxed parameter. For control (6.35) we obtain, see the later consid-
erations, this result: 
Theorem 6.5 Suppose that upper DD is a compact, convex subset of double struck upper R Superscript dRd and let x Superscript asteriskx∗be the 
unique optimal solution of (6.1). Letx Superscript asterisk Baseline element of i n t left parenthesis upper D right parenthesisx∗∈int(D) (= interior ofupper DD) and assume that 
upper FF is twice continuously differentiable in a certain neighborhood of x Superscript asteriskx∗. Moreover, 
suppose thatnabla squared upper F∇2F is positive deﬁnite atx Superscript asteriskx∗. Then there is a constantkappa greater than 1κ > 1 such that 
kappa Superscript n Baseline upper E left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis right arrow 0 a s n right arrow normal infinityκnE
 
F(Xn) −F∗ 
→0
as n →∞
and 
kappa Superscript n Baseline left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis right arrow 0 a s n right arrow normal infinity comma a period s periodκn 
F(Xn) −F∗ 
→0
as n →∞,
a.s.
(6.36) 
for all starting points contained in a certain neighborhood of x Superscript asteriskx∗. 
Note 6.3 (a) Comparing Theorem 6.2 and Theorem 6.5, we ﬁnd that—at least 
locally—the convergence rate of (6.2) is increased very much by applying a 
suitable control, as, e.g., the control (6.35). 
(b) However, the high convergence rate (6.36) holds only if the starting point x 0x0 is 
sufﬁciently close to x Superscript asteriskx∗, while the low convergence rate found in Theorem 6.2 
holds for arbitrary starting points x 0 element of upper Dx0 ∈D. 
Hence, the question arises whether by a certain combination of a controlled ran-
dom search procedure we also can guarantee a linear convergence rate for all starting 
points x 0 element of upper Dx0 ∈D. 
Given an increasing sequence upper NN of integers 
n 1 less than n 2 less than ellipsis less than n Subscript k Baseline less than n Subscript k plus 1 Baseline less than ellipsis comman1 < n2 < . . . < nk < nk+1 < . . . ,
let the controlsa Subscript n Baseline minus left parenthesis mu Subscript n Baseline comma normal upper Lamda Subscript n Baseline right parenthesisan −(μn, ∆n) of the normal distributed search variatesupper Z Subscript n plus 1 Baseline left parenthesis omega right parenthesis comma n equals 0 comma 1 comma 2 comma ellipsisZn+1(ω), n =
0, 1, 2, . . ., be deﬁned by 
mu Subscript n Baseline equals x Subscript nμn = xn
and 
normal upper Lamda Subscript n Baseline equals StartLayout Enlarged left brace 1st Row 1st Column normal upper Lamda Superscript 0 Baseline left parenthesis x Subscript n Baseline right parenthesis 2nd Column comma i f n element of upper N 2nd Row 1st Column upper R 2nd Column comma i f n not an element of upper N comma EndLayout∆n =
 ∆0(xn) , if n ∈N
R
, if n /∈N,
(6.37) 
where normal upper Lamda Superscript 0 Baseline left parenthesis x right parenthesis∆0(x) is deﬁned by (6.35) and upper RR is a ﬁxed positive deﬁnite d times dd × d matrix. 
Hence, according to (6.37), the search procedure is controlled only at the times 
n 1 comma n 2 comma ellipsisn1, n2, . . . . 
Now, we have this result. 
Theorem 6.6 Suppose thatupper DD is a compact, convex subset odouble struck upper R Superscript dRd and letx Superscript asterisk Baseline element of i n t left parenthesis upper D right parenthesisx∗∈int(D)
be the unique optimal solution of (6.1). Assume that upper FF is twice continuously differ-
entiable in a certain neighborhood ofx Superscript asteriskx∗and letnabla squared upper F left parenthesis x Superscript asterisk Baseline right parenthesis∇2F(x∗) be positive deﬁnite. Deﬁne 
then 
h Subscript n Baseline equals max left brace k colon n Subscript k Baseline less than n right brace periodhn = max{k : nk < n}.

6.6 Numerical Realizations of Optimal Control Laws
141
Then for every starting point x 0 element of upper Dx0 ∈D there is a constant beta greater than 1β > 1 such that 
beta Superscript h Super Subscript n Superscript Baseline upper E left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus normal upper Gamma Superscript asterisk Baseline right parenthesis right arrow 0 a s n right arrow normal infinityβhn E
 
F(Xn) − ∗ 
→0
as n →∞
and 
beta Superscript h Super Subscript n Superscript Baseline left parenthesis upper F left parenthesis upper X Subscript n Baseline right parenthesis minus upper F Superscript asterisk Baseline right parenthesis right arrow 0 a s n right arrow normal infinity comma a period s period commaβhn 
F(Xn) −F∗ 
→0
as n →∞,
a.s.,
(6.38) 
provided that limit sup Underscript n right arrow normal infinity Endscripts StartFraction h Subscript n Baseline Over n EndFraction less than 1lim sup
n→∞
hn
n < 1. 
Note 6.4 (a) Hence, the linear convergence rate (6.38) can be obtained by a suitable 
control of the type (6.37) for each starting points x 0 element of upper Dx0 ∈D. 
(b) If n Subscript k Baseline equals StartFraction k Over p EndFractionnk = k
p for some p element of double struck upper Np ∈N, then beta Superscript h Super Subscript n Baseline equals left parenthesis RootIndex p StartRoot beta EndRoot right parenthesis Superscript nβhn = ( p√β)n. 
6.6 
Numerical Realizations of Optimal Control Laws 
In order to realize the control laws obtained in (6.34), (6.35), (6.37), one has to 
compute the gradient nabla upper F left parenthesis x right parenthesis∇F(x) and the inverse Hessian Matrix nabla squared upper F left parenthesis x right parenthesis Superscript negative 1∇2F(x)−1 of upper FF at 
xx. However, since the derivatives nabla upper F∇F and nabla squared upper F∇2F of upper FF are not given in analytical 
form in practice, the gradient and the Hessian matrix of normal upper Gamma must be approximated 
by means of the information obtained aboutnormal upper Gamma during the search process. Hence, for 
an approximate computation of v upper FvF and nabla squared upper F∇2F we may use the sequence of sample 
points, iteration points and function values 
x 0 comma upper F left parenthesis x 0 right parenthesis comma z 1 comma upper F left parenthesis z 1 right parenthesis comma x 1 comma z 2 comma upper F left parenthesis z 2 right parenthesis comma x 2 comma ellipsis periodx0, F(x0), z1, F(z1), x1, z2, F(z2), x2, . . . .
In order to deﬁne a recursive approximation procedure, forn equals 0 comma 1 comma 2 comma ellipsisn = 0, 1, 2, . . . let denote 
StartLayout 1st Row 1st Column g Subscript n 2nd Column Blank 3rd Column t h e a p p r o x i m a t i o n o f nabla upper F left parenthesis x Subscript n Baseline right parenthesis comma 2nd Row 1st Column upper B Subscript n 2nd Column Blank 3rd Column t h e a p p r o x i m a t i o n o f nabla squared upper F left parenthesis x Subscript n Baseline right parenthesis comma 3rd Row 1st Column upper H Subscript n 2nd Column Blank 3rd Column t h e a p p r o x i m a t i o n o f nabla squared upper F left parenthesis x Subscript n Baseline right parenthesis Superscript negative 1 Baseline period EndLayoutgn
the approximation of ∇F(xn),
Bn
the approximation of ∇2F(xn),
Hn
the approximation of ∇2F(xn)−1.
Proceeding recursively, we suppose at the nn-th stage of the search process we 
know the approximations g Subscript n Baseline comma upper B Subscript n Baselinegn, Bn and upper H Subscript nHn of nabla upper F left parenthesis x Subscript n Baseline right parenthesis comma nabla squared upper F left parenthesis x Subscript n Baseline right parenthesis∇F(xn), ∇2F(xn) and nabla squared upper F left parenthesis x Subscript n Baseline right parenthesis Superscript negative 1∇2F(xn)−1, 
respectively. Hence, we may compute—approximately—the control a Subscript n Baseline equals left parenthesis mu Subscript n Baseline comma normal upper Lamda Subscript n Baseline right parenthesisan = (μn, ∆n)
according to one of the formulas (6.34), (6.35) or (6.37) by replacing nabla upper F left parenthesis x Subscript n Baseline right parenthesis∇F(xn) and 
nabla squared upper F left parenthesis x Subscript n Baseline right parenthesis Superscript negative 1∇2F(xn)−1 by g Subscript n Baseline comma upper H Subscript n Baselinegn, Hn, respectively. The search process (6.2) yields then the sample 
pointz Subscript n plus 1zn+1, its function valueupper F left parenthesis z Subscript n plus 1 Baseline right parenthesisF(zn+1) and the next iteration pointx Subscript n plus 1xn+1. Now  we  have  
to perform the update 
g Subscript n Baseline right arrow g Subscript n plus 1 Baseline comma upper B Subscript n Baseline right arrow upper B Subscript n plus 1 Baseline a n d upper H Subscript n Baseline right arrow upper H Subscript n plus 1 Baselinegn →gn+1, Bn →Bn+1 and Hn →Hn+1
(6.39) 
by using the information s Subscript n Baseline comma upper F left parenthesis x Subscript n Baseline right parenthesis comma z Subscript n plus 1 Baseline comma upper F left parenthesis z Subscript n plus 1 Baseline right parenthesis comma x Subscript n plus 1 Baselinesn, F(xn), zn+1, F(zn+1), xn+1 about upper FF.

142
6
Applications to Random Search Methods with Joint Normal Search Variates
(a) Search failure at x Subscript nxn
If z Subscript n plus 1 Baseline not an element of upper Dzn+1 /∈D or upper F left parenthesis z Subscript n plus 1 Baseline right parenthesis greater than or equals upper F left parenthesis x Subscript n Baseline right parenthesisF(zn+1) ≥F(xn), then x Subscript n plus 1 Baseline equals x Subscript nxn+1 = xn. Since in this case we stay at 
x Subscript nxn, we may deﬁne the update (6.39) by  
StartLayout 1st Row 1st Column g Subscript n plus 1 2nd Column equals g Subscript n Baseline comma 2nd Row 1st Column upper B Subscript n plus 1 2nd Column equals upper B Subscript n Baseline comma 3rd Row 1st Column upper H Subscript n plus 1 2nd Column equals upper H Subscript n Baseline period EndLayoutgn+1 = gn,
Bn+1 = Bn,
Hn+1 = Hn.
(b) Search success at x Subscript nxn
In this case it is z Subscript n plus 1 Baseline element of upper Dzn+1 ∈D and upper F left parenthesis z Subscript n plus 1 Baseline right parenthesis less than upper F left parenthesis x Subscript n Baseline right parenthesisF(zn+1) < F(xn), hence x Subscript n plus 1 Baseline equals z Subscript n plus 1 Baseline not equals x Subscript nxn+1 = zn+1 /= xn. By  
a quadratic approximation of upper FF at x Subscript n plus 1xn+1 we ﬁnd then 
StartLayout 1st Row 1st Column upper F left parenthesis x Subscript n Baseline right parenthesis 2nd Column almost equals upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis plus nabla upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis Superscript upper T Baseline left parenthesis x Subscript n Baseline minus x Subscript n plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus one half left parenthesis x Subscript n Baseline minus x Subscript n plus 1 Baseline right parenthesis Superscript upper T nabla squared upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis left parenthesis x Subscript n Baseline minus x Subscript n plus 1 Baseline right parenthesis EndLayoutF(xn) ≈F(xn+1) + ∇F(xn+1)T (xn −xn+1)
+ 1
2(xn −xn+1)T ∇2F(xn+1)(xn −xn+1)
and therefore 
nabla upper F left parenthesis x Subscript n plus 1 Superscript upper T Baseline s Subscript n Baseline minus one half s Subscript n Superscript upper T Baseline nabla squared upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis s Subscript n Baseline almost equals Delta upper F Subscript n Baseline comma∇F(xT
n+1sn −1
2sT
n ∇2F(xn+1)sn ≈∆Fn,
(6.40) 
where 
StartLayout 1st Row 1st Column s Subscript n 2nd Column equals x Subscript n plus 1 Baseline minus x Subscript n Baseline equals z Subscript n plus 1 Baseline minus x Subscript n Baseline comma 2nd Row 1st Column Delta upper F Subscript n Baseline 2nd Column equals upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis minus upper F left parenthesis x Subscript n Baseline right parenthesis equals upper F left parenthesis z Subscript n plus 1 Baseline right parenthesis minus upper F left parenthesis x Subscript n Baseline right parenthesis period EndLayoutsn
= xn+1 −xn = zn+1 −xn,
∆Fn = F(xn+1) −F(xn) = F(zn+1) −F(xn).
Now we have to deﬁne the new approximationsg Subscript n plus 1gn+1 andupper B Subscript n plus 1Bn+1 ofnabla upper F left parenthesis x Subscript n Baseline n plus 1 right parenthesis∇F(xnn + 1)
and nabla squared upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis∇2F(xn+1), respectively. 
Because of (6.40), in order to deﬁne the update (6.39), we demand next to the 
following 
Modiﬁed Quasi-Newton Condition 
g Subscript n plus 1 Superscript upper T Baseline s Subscript n Baseline minus one half s Subscript n Superscript upper T Baseline upper B Subscript n plus 1 Baseline s Subscript n Baseline equals Delta upper F Subscript n BaselinegT
n+1sn −1
2sT
n Bn+1sn = ∆Fn
(6.41) 
or 
g Subscript n plus 1 Superscript upper T Baseline s Subscript n Baseline minus one half s Subscript n Superscript upper T Baseline upper B Subscript n plus 1 Baseline s Subscript n Baseline less than 0 periodgT
n+1sn −1
2sT
n Bn+1sn < 0.
(6.42) 
Note 6.5 (i) In contrary to (6.41), the modiﬁed Quasi-Newton condition (6.42) 
uses only the information that the function value of upper FF at x Subscript n plus 1xn+1 is less than that 
at x Subscript nxn. 
(ii) If Delta upper F Subscript n Baseline equals upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis dot upper F left parenthesis x Subscript n Baseline right parenthesis less than 0∆Fn = F(xn+1) · F(xn) < 0, then minus s Subscript n Baseline equals x Subscript n Baseline minus x Subscript n plus 1−sn = xn −xn+1 is an ascent direction of 
upper FF atx Subscript n plus 1xn+1. Hence, sincenabla upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis∇F(xn+1) is the best ascent direction ofupper FF atx Subscript n plus 1 Baseline comma minus s Subscript n Baselinexn+1, −sn
may be used to deﬁne the approximation g Subscript n plus 1gn+1 of nabla upper F left parenthesis x Subscript n plus 1 Baseline right parenthesis∇F(xn+1).

6.6 Numerical Realizations of Optimal Control Laws
143
Since g Subscript n plus 1gn+1 is not completely determined by the modiﬁed Quasi-Newton condi-
tion (6.41) or (6.42), resp., there are still many possibilities to deﬁne the update 
formulas (6.39). Clearly, since upper B Subscript nBn is an approximation to a symmetric matrix, 
we suppose that upper B Subscript nBn is a symmetric matrix. 
(A) Additive rank-one-updates 
In order to select a particular tupleleft parenthesis g Subscript n plus 1 Baseline comma upper B Subscript n plus 1 Baseline right parenthesis(gn+1, Bn+1)we may require thatleft parenthesis g Subscript n plus 1 Baseline comma upper B Subscript n plus 1 Baseline right parenthesis(gn+1, Bn+1)
is an optimal solution left parenthesis ModifyingAbove g With quotation dash comma ModifyingAbove upper B With quotation dash right parenthesis(g, B) of the distance-minimization problem 
StartLayout 1st Row 1st Column Blank 2nd Column min d 1 left parenthesis ModifyingAbove upper B With quotation dash comma upper B right parenthesis plus d 2 left parenthesis ModifyingAbove g With quotation dash comma g right parenthesis 2nd Row 1st Column Blank 2nd Column s period t period ModifyingAbove g With quotation dash Superscript upper T Baseline s minus one half s Superscript upper T Baseline ModifyingAbove upper B With quotation dash s equals Delta upper F comma EndLayout min
d1(B, B) + d2(g, g)
(6.43) 
s.t.
gT s − 1 
2 sT Bs = ∆F, 
where upper B equals upper B Subscript n Baseline comma g equals g Subscript n Baseline comma Delta upper F equals Delta upper F Subscript n BaselineB = Bn, g = gn, ∆F = ∆Fn and d 1 comma d 2d1, d2 are certain distance measures. 
We suppose here that d 1 comma d 2d1, d2 are deﬁned by 
StartLayout 1st Row 1st Column d 1 left parenthesis ModifyingAbove upper B With quotation dash comma upper B right parenthesis 2nd Column equals one half sigma summation Underscript i comma j minus 1 Overscript d Endscripts left parenthesis ModifyingAbove b With quotation dash Subscript i j Baseline minus b Subscript i j Baseline right parenthesis squared comma 2nd Row 1st Column d 2 left parenthesis ModifyingAbove g With quotation dash comma g right parenthesis 2nd Column equals one half sigma summation Underscript j minus 1 Overscript d Endscripts left parenthesis ModifyingAbove g With quotation dash Subscript j Baseline minus g Subscript j Baseline right parenthesis squared comma EndLayoutd1(B, B) = 1
2
d∑
i, j−1
(bi j −bi j)2,
d2(g, g) = 1
2
d∑
j−1
(g j −g j)2,
(6.44) 
whereModifyingAbove b With quotation dash Subscript i j Baseline comma b Subscript i j Baselinebi j, bi j are the elements ofModifyingAbove upper B With quotation dashB andupper BB, resp., andModifyingAbove g With quotation dash Subscript j Baseline comma g Subscript j Baselineg j, g j denote the compo-
nents of ModifyingAbove g With quotation dash comma gg, g, respectively. 
Note 6.6 The minimization (6.43) is a generalization of the minimality principles 
characterizing some of the well-known Quasi-Newton update formulas, see, e.g., [ 4]. 
Solving (6.43), (6.44), we ﬁnd that ModifyingAbove g With quotation dash comma ModifyingAbove upper B With quotation dashg, B are given by 
StartLayout 1st Row 1st Column ModifyingAbove g With quotation dash 2nd Column equals g minus lamda s 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper B With quotation dash 2nd Column equals upper B plus StartFraction lamda Over 2 EndFraction s s Superscript upper T Baseline comma EndLayoutg
= g −λs
(6.45) 
StartLayout 1st Row 1st Column ModifyingAbove g With quotation dash 2nd Column equals g minus lamda s 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper B With quotation dash 2nd Column equals upper B plus StartFraction lamda Over 2 EndFraction s s Superscript upper T Baseline comma EndLayoutB = B + λ
2ssT ,
(6.46) 
where the Lagrange multiplier lamdaλ is given by 
lamda equals StartFraction g Superscript upper T Baseline s minus one half s Superscript upper T Baseline upper B s minus Delta normal upper Gamma Over s Superscript upper T Baseline s left parenthesis 1 plus one fourth s Superscript upper T Baseline s right parenthesis EndFraction periodλ = gT s −1
2sT Bs −∆ 
sT s
 
1 + 1
4sT s
 
.
(6.47) 
If the distance functions d 1 comma d 2d1, d2 are changed, then other update formulas may 
be generated. If, e.g., d 2d2 is replaced by d 2 left parenthesis ModifyingAbove g With quotation dash comma g right parenthesis equals one half left parenthesis ModifyingAbove g With quotation dash minus g right parenthesis upper B Superscript negative 1 Baseline left parenthesis ModifyingAbove g With quotation dash minus g right parenthesisd2(g, g) = 1
2(g −g)B−1(g −g), then ModifyingAbove g With quotation dash equals g minus lamda upper B sg =
g −λBs. 
Supposing now that upper BB is positive deﬁnite, it is known that the matrix ModifyingAbove upper B With quotation dashB deﬁned 
by (6.46) is positive deﬁnite if and only if 
1 plus StartFraction lamda Over 2 EndFraction s Superscript upper T Baseline upper H s greater than 0 comma1 + λ
2sT Hs > 0,
(6.48)

144
6
Applications to Random Search Methods with Joint Normal Search Variates
where upper H equals upper B Superscript negative 1H = B−1 is our approximation to the inverse Hessian matrix nabla squared upper F left parenthesis x right parenthesis Superscript negative 1∇2F(x)−1 of 
upper FF at x equals x Subscript nx = xn. Hence, if ModifyingAbove upper H With quotation dash equals ModifyingAbove upper B With quotation dash Superscript negative 1H = B
−1 denotes the approximation of the inverse Hessian 
matrix ofupper FF atx Subscript n plus 1xn+1, then by (6.46) and (6.48) the following update formulaupper H right arrow ModifyingAbove upper H With quotation dashH →H
for the inverse Hessian matrix of normal upper Gamma may be established: 
ModifyingAbove upper H With quotation dash equals StartLayout Enlarged left brace 1st Row 1st Column upper H minus one half StartStartFraction lamda OverOver 1 plus StartFraction lamda Over 2 EndFraction s Superscript upper T Baseline upper H s EndEndFraction upper H s s Superscript upper T Baseline upper H comma 2nd Column i f left parenthesis 6.48 right parenthesis h o l d s 2nd Row 1st Column upper H comma 2nd Column e l s e comma EndLayoutH =
 
H −1
2
λ
1+ λ
2 sT Hs HssT H,
if (6.48) holds
H,
else,
(6.49) 
Updates in the Case of a Search Failure 
If z Subscript n plus 1 Baseline not an element of upper Dzn+1 /∈D or upper F left parenthesis z Subscript n plus 1 Baseline right parenthesis greater than or equals upper F left parenthesis x Subscript n Baseline right parenthesisF(zn+1) ≥F(xn), then we stay at x Subscript n plus 1 Baseline equals x Subscript nxn+1 = xn and we may deﬁne 
thereforeModifyingAbove g With quotation dash equals g comma ModifyingAbove upper B With quotation dash equals upper Bg = g, B = B andModifyingAbove upper H With quotation dash equals upper HH = H. However, also in the case of a search failure the 
tupleleft parenthesis z Subscript n plus 1 Baseline comma upper F left parenthesis z Subscript n plus 1 Baseline right parenthesis right parenthesis
 
zn+1, F(zn+1)
 
yields new information aboutupper FF, provided only thatz Subscript n plus 1 Baseline not equals x Subscript nzn+1 /= xn. 
Hence, replacing the modiﬁed Quasi-Newton condition (6.41) by  
ModifyingAbove g With quotation dash Superscript upper T Baseline s plus one half s Superscript upper T Baseline ModifyingAbove upper B With quotation dash s equals Delta upper F commagT s + 1
2sT Bs = ∆F,
where now s equals z Subscript n plus 1 Baseline minus x Subscript n Baseline comma Delta upper F equals upper F left parenthesis z Subscript n plus 1 Baseline right parenthesis minus upper F left parenthesis x Subscript n Baseline right parenthesiss = zn+1 −xn, ∆F = F(zn+1) −F(xn), we may derive by the above 
procedure also update formulas g right arrow ModifyingAbove g With quotation dash comma upper B right arrow ModifyingAbove upper B With quotation dash comma upper H right arrow ModifyingAbove upper H With quotation dashg →g, B →B, H →H for deﬁning improved 
approximation ModifyingAbove g With quotation dash comma ModifyingAbove upper B With quotation dash comma ModifyingAbove upper H With quotation dashg, B, H of nabla upper F comma nabla squared∇F, ∇2 and nabla squared upper F Superscript negative 1∇2F−1, respectively, at x Subscript n plus 1 Baseline equals x Subscript nxn+1 = xn. 
(B) Multiplicative rank-one-updates 
By (6.45)–(6.49) we have given a ﬁrst concrete procedure for the realization of 
the optimal control laws (6.34), (6.35) and (6.37), respectively. Indeed, having, 
e.g., the mean mu Subscript n Baseline equals x Subscript nμn = xn and the covariance matrix 
normal upper Lamda Subscript n Baseline equals c Superscript asterisk Baseline left parenthesis g Subscript n Superscript upper T Baseline upper H Subscript n Baseline g Subscript n Baseline right parenthesis upper H Subscript n Baseline comma∆n = c∗(gT
n Hngn)Hn,
(6.50) 
the random variable upper Z Subscript n plus 1Zn+1 may be deﬁned by 
upper Z Subscript n plus 1 Baseline equals mu Subscript n Baseline plus normal upper Gamma Subscript n Baseline upper Z Subscript n plus 1 Superscript 0Zn+1 = μn +  n Z0
n+1
whereupper Z Subscript n plus 1 Superscript 0Z0
n+1 is a normal distributed with mean zero and covariance matrix equal 
to the identity matrix, and normal upper Gamma Subscript n n is a d times dd × d matrix such that 
normal upper Gamma Subscript n Baseline normal upper Gamma Subscript n Superscript upper T Baseline equals normal upper Lamda Subscript n Baseline period n T
n = ∆n.
(6.51) 
Hence, at each iteration point x Subscript nxn the (Cholesky-)decomposition (6.51) of  normal upper Lamda Subscript n∆n
have to be computed. 
In order to omit this time consuming step, we still ask whether update formulas 
normal upper Gamma Subscript n Baseline right arrow normal upper Gamma Subscript n plus 1 n → n+1 for the Cholesky-factors normal upper Gamma Subscript n n may be obtained. 
Since upper H Subscript n Baseline equals upper B Subscript n Superscript negative 1Hn = B−1
n
we suppose that upper B Subscript nBn may be represented by 
upper T Subscript n Baseline upper T Subscript n Superscript upper T Baseline equals upper B Subscript n Baseline periodTnT T
n = Bn.

6.6 Numerical Realizations of Optimal Control Laws
145
Then normal upper Lamda Subscript n∆n is given by 
normal upper Lamda Subscript n Baseline equals c Superscript asterisk Baseline left parenthesis left parenthesis upper T Subscript n Superscript negative 1 Baseline g Subscript n Baseline right parenthesis Superscript upper T Baseline upper T Subscript n Superscript negative 1 Baseline g Subscript n Baseline right parenthesis upper T Subscript n Superscript negative 1 Baseline Superscript upper T Baseline upper T Subscript n Superscript negative 1∆n = c∗ 
(T −1
n
gn)T T −1
n
gn
 
T −1
n
T T −1
n
and the factor normal upper Gamma Subscript n n may be deﬁned, cf. (6.50) by  
normal upper Gamma Subscript n Baseline equals StartRoot c Superscript asterisk Baseline EndRoot parallel to upper T Subscript n Superscript negative 1 Baseline g Subscript n Baseline parallel to upper T Subscript n Superscript negative 1 Baseline period n =
√
c∗||T −1
n
gn||T −1
n .
(6.52) 
In order to deﬁne the update upper T right arrow ModifyingAbove upper T With quotation dashT →T , where upper T equals upper T Subscript nT = Tn and ModifyingAbove upper T With quotation dash equals upper T Subscript n plus 1T = Tn+1 with 
upper T Subscript n plus 1 Baseline upper T Subscript n plus 1 Superscript upper T Baseline equals upper B Subscript n plus 1Tn+1T T
n+1 = Bn+1, we require that upper TT is changed only in the direction of s equals x Subscript n plus 1 Baseline minus x Subscript ns =
xn+1 −xn. Hence, we assume that 
ModifyingAbove upper T With quotation dash equals left parenthesis upper I plus StartFraction gamma minus 1 Over s Superscript upper T Baseline s EndFraction comma s s Superscript upper T Baseline right parenthesis upper T commaT = (I + γ −1
sT s , ssT )T,
where gammaγ is real parameter to be determined. Furthermore, the distance-
minimization problem (6.43) is then replaced by 
StartLayout 1st Row 1st Column Blank 2nd Column min d 1 left parenthesis ModifyingAbove upper T With quotation dash comma upper T right parenthesis plus d 2 left parenthesis ModifyingAbove g With quotation dash comma g right parenthesis 2nd Row 1st Column Blank 2nd Column s period t period ModifyingAbove g With quotation dash Superscript upper T Baseline s equals one half s Superscript upper T Baseline ModifyingAbove upper B With quotation dash s equals Delta upper F comma EndLayout min
d1(T , T ) + d2(g, g)
(6.53) 
s.t.
gT s = 1 
2 sT Bs = ∆F, 
where now 
ModifyingAbove upper B With quotation dash equals left parenthesis upper I plus StartFraction gamma minus 1 Over s Superscript upper T Baseline s EndFraction s s Superscript upper T Baseline right parenthesis upper B left parenthesis upper I plus StartFraction gamma minus 1 Over s Superscript upper T Baseline s EndFraction s s Superscript upper T Baseline right parenthesis comma w i t h upper B equals upper T upper T Superscript upper T Baseline periodB =
(
I + γ −1
sT s ssT
)
B
(
I + γ −1
sT s ssT
)
,
with B = T T T .
(6.54) 
If the distance functions d 1 comma d 2d1, d2 are again deﬁned corresponding to (6.44), then 
d1(T , T ) = 1 
2
(γ − 1 
s's
)2
||ssT T ||2 
E ,
(6.55) 
where parallel to upper T parallel to Subscript upper E||T ||E denotes the Euclidian norm of upper TT . Hence, by (6.53) a particular 
tupleleft parenthesis ModifyingAbove g With quotation dash comma gamma right parenthesis(g, γ ) is selected. Because of (6.54) and (6.55), the minimization problem 
(6.53) has the form 
min
||ssT T ||2 
E 
2
(
γ −1 
s's
)2 
+ 1 
2||g − g||2 
E
(6.56) 
s.t.
gT s − γ 2 
2 sT Bs −∆F, 
hence, the tuple left parenthesis ModifyingAbove g With quotation dash comma gamma right parenthesis(g, γ ) is projected onto the parabola in double struck upper R Superscript d plus 1Rd+1 deﬁned by the 
constraint in (6.56).

146
6
Applications to Random Search Methods with Joint Normal Search Variates
Note 6.7 
(a) Other update formulas may be gained by changing the objective function of 
(6.56). 
(b) Also in the case of a search failure, a similar method updates formulas may be 
derived. 
References 
1. Anderson, R.: Recent advances in ﬁnding best operating conditions. J. Am. Stat. Assoc. 48(264), 
789–798 (1953). http://www.jstor.org/stable/2281072 
2. Box, G.: Evolutionary operation: a method for increasing industrial productivity. J. R. Stat. 
Soc. Ser. C 6(2), 81–101 (1957). https://doi.org/10.2307/2985505 
3. Brooks, S.: A discussion of random methods for seeking maxima. Oper. Res. 6(2), 244–251 
(1958). https://doi.org/10.1287/opre.6.2.244 
4. Dennis, J., Schnabel, R.: Numerical Methods for Unconstrained Optimization and Nonlinear 
Equations. Prentice-Hall, Englewood Cliffs (1983) 
5. Karnopp, D.C.: Random search techniques for optimization problems. Automatica 1(2–3), 
111–121 (1963). https://doi.org/10.1016/0005-1098(63)90018-9 
6. Marti, K.: Random search in optimization problems as a stochastic decision process (adaptive 
random search). Methods Oper. Res. 36, 223–234 (1979) 
7. Marti, K.: Adaptive Zufallssuche in der Optimierung. ZAMM 60, 357–359 (1980) 
8. Marti, K.: On accelerations of the convergence in random search methods. Methods Oper. Res. 
37, 391–406 (1980) 
9. Müller, P., Nollau, V.: Steuerung stochastischer Prozesse. Akademie-Verlag, Berlin (1984) 
10. Müller, 
P.E.A.: 
Optimierung 
mittels 
stochastischer 
Suchverfahren. 
Wissenschaftliche 
Zeitschrift der TU Dresden 21(1), 69–75 (1983) 
11. Oppel, U.: Random search and evolution. In: Trans. Symposia in Applied Mathematics. Thes-
saloniki (1976) 
12. Rappl, G.: Optimierung durch Zufallsirchungsverfahren. Simulation und Optimierung det. und 
stoch. dynam, Systeme (1980) 
13. Rappl, G.: Konvergenzraten von Random-Search-Verfahren zur globalen Optimierung. Ph.D. 
thesis, UniBw München (1984) 
14. Zielinski, R., Neumann, P.: Stochastische Verfahren zur Suche nach dem Minimum einer Funk-
tion. Akademie-Verlag, Berlin (1983)

Chapter 7 
Random Search Methods with Multiple 
Search Points 
Abstract Similar to the multi-start procedures in mathematical programming, here 
we consider random search methods working with multiple search variates (points) at 
an iteration point. The probability of failure, success, resp., and their properties at an 
iteration point are then evaluated for conditional independent, i.i.d., resp, stochastic 
search points. Furthermore, reachability results are given, i.e., results on the proba-
bility to reach anepsilon∈-optimal point with increasing stage or time. Finally, an optimized 
search process is studied based on the search point with minimum function value 
among all successful search points at the current iteration point. 
7.1 
Standard RSM 
Given the optimization problem 
StartLayout 1st Row min upper F left parenthesis x right parenthesis s u b j e c t t o x element of upper D EndLayout min F(x) subject to x ∈D
(7.1) 
with the objective function upper F equals upper F left parenthesis x right parenthesisF = F(x) on double struck upper R Superscript nRn and the feasible domain upper D subset of double struck upper R Superscript nD ⊂Rn, the  
Random Search Method (RSM) for solving (7.1) generates a (minimizing) random 
sequence left parenthesis upper X Subscript t Baseline right parenthesis(Xt) by the algorithm 
upper X Subscript t plus 1 Baseline colon equals upper T Subscript upper F comma x Sub Subscript t Subscript Baseline left parenthesis upper Z Subscript t Baseline right parenthesis comma f o r upper X Subscript t Baseline equals x Subscript t Baseline comma t equals 0 comma 1 comma 2 comma ellipsis commaXt+1 := TF,xt(Zt),
for Xt = xt, t = 0, 1, 2, . . . ,
(7.2a) 
where x 0 element of upper Dx0 ∈D is a given starting point, 
upper T Subscript upper F comma x Baseline left parenthesis z right parenthesis colon equals StartLayout Enlarged left brace 1st Row 1st Column z comma 2nd Column for z element of upper G Subscript upper F Baseline left parenthesis x right parenthesis 2nd Row 1st Column x comma 2nd Column else EndLayoutTF,x(z) :=
{ z, for z ∈G F(x)
x, else
(7.2b) 
and 
upper G Subscript upper F Baseline left parenthesis x right parenthesis colon equals StartSet z element of upper D colon upper F left parenthesis z right parenthesis less than upper F left parenthesis x right parenthesis EndSet periodG F(x) := {z ∈D : F(z) < F(x)} .
(7.2c) 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_7 
147

148
7
Random Search Methods with Multiple Search Points
The sequence left parenthesis upper X Subscript t Baseline right parenthesis(Xt) can also be represented by 
StartLayout 1st Row upper X Subscript t plus 1 Baseline equals upper Z Subscript t Baseline 1 Subscript upper G Sub Subscript upper F Subscript left parenthesis upper X Sub Subscript t Subscript right parenthesis Baseline left parenthesis upper Z Subscript t Baseline right parenthesis plus upper X Subscript t Baseline 1 Subscript upper G Sub Subscript upper F Subscript left parenthesis upper X Sub Subscript t Subscript right parenthesis Sub Superscript complement Subscript Baseline left parenthesis upper Z Subscript t Baseline right parenthesis comma t equals 0 comma 1 comma 2 comma ellipsis comma EndLayoutXt+1 = Zt1G F(Xt)(Zt) + Xt1G F(Xt)C(Zt),
t = 0, 1, 2, . . . ,
(7.3) 
where 1 Subscript upper M Baseline equals 1 Subscript upper M Baseline left parenthesis x right parenthesis comma 1 Subscript upper M Sub Superscript complement Subscript Baseline equals 1 Subscript upper M Sub Superscript complement Subscript Baseline left parenthesis x right parenthesis1M = 1M(x), 1MC = 1MC(x), resp. denote the characteristic functions of the 
set upper M subset of double struck upper R Superscript nM ⊂Rn and its complement upper M Superscript complementMC. 
7.2 
Multiple RSM 
In contrast to standard RSM, in multiple RSM for each iteration staget equals 0 comma 1 comma 2 comma ellipsis commat = 0, 1, 2, . . . ,
we have a number r element of double struck upper Nr ∈N of stochastic search variables at point upper X Subscript tXt: 
StartLayout 1st Row upper Y Subscript t comma 1 Baseline comma upper Y Subscript t comma 2 Baseline comma ellipsis comma upper Y Subscript t comma j Baseline comma ellipsis comma upper Y Subscript t comma r Baseline comma t greater than or equals 0 period EndLayoutYt,1, Yt,2, . . . , Yt, j, . . . , Yt,r,
t ≥0.
(7.4) 
The random search process left parenthesis upper X Subscript t Baseline right parenthesis(Xt) is then deﬁned as follows: 
StartLayout 1st Row upper X Subscript t plus 1 Baseline colon equals StartLayout Enlarged left brace 1st Row 1st Column upper Y Subscript t comma 1 2nd Column i f 3rd Column upper Y Subscript t comma 1 Baseline element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis comma 4th Column Blank 2nd Row 1st Column upper Y Subscript t comma 2 2nd Column i f 3rd Column upper Y Subscript t comma 1 Baseline not an element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis comma 4th Column upper Y Subscript t comma 2 Baseline element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis comma 3rd Row 1st Column vertical ellipsis 2nd Column Blank 4th Row 1st Column upper Y Subscript t comma i 2nd Column i f 3rd Column upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis f o r Baseline 1 less than or equals j less than or equals i minus 1 comma 4th Column upper Y Subscript t comma i Baseline element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis comma 5th Row 1st Column vertical ellipsis 2nd Column Blank 6th Row 1st Column upper Y Subscript t comma r 2nd Column i f 3rd Column upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis f o r Baseline 1 less than or equals j less than or equals r minus 1 comma 4th Column upper Y Subscript t comma r Baseline element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis comma 7th Row 1st Column upper X Subscript t 2nd Column i f 3rd Column upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis f o r Baseline 1 less than or equals j less than or equals r period EndLayout EndLayoutXt+1 :=
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
Yt,1 if Yt,1 ∈G F(Xt),
Yt,2 if Yt,1 /∈G F(Xt),
Yt,2 ∈G F(Xt),
...
Yt,i if Yt, j /∈G F(Xt) for 1 ≤j ≤i −1, Yt,i ∈G F(Xt),
...
Yt,r if Yt, j /∈G F(Xt) for 1 ≤j ≤r −1, Yt,r ∈G F(Xt),
Xt
if Yt, j /∈G F(Xt) for 1 ≤j ≤r.
(7.5) 
For each stage t equals 0 comma 1 comma 2 comma ellipsist = 0, 1, 2, . . . the algorithm (7.5) is based on the events 
StartLayout 1st Row 1st Column upper S Subscript t comma i colon equals 2nd Column left bracket upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis comma 1 less than or equals j less than or equals i minus 1 comma upper Y Subscript t comma i Baseline element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis right bracket comma i equals 1 comma 2 comma ellipsis r comma EndLayoutSt,i :=
[
Yt, j /∈G F(Xt), 1 ≤j ≤i −1, Yt,i ∈G F(Xt)
]
,
i = 1, 2, . . .r, (7.6a) 
of a search success after i minus 1i −1 search failures. Moreover, 
StartLayout 1st Row 1st Column upper S Subscript t comma f colon equals 2nd Column left bracket upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesis comma j equals 1 comma 2 comma ellipsis r right bracket EndLayoutSt, f :=
[
Yt, j /∈G F(Xt), j = 1, 2, . . .r
]
(7.6b) 
denotes the complete failure event that no search variable drops into the domain of 
success upper G Subscript upper F Baseline left parenthesis upper X Subscript t Baseline right parenthesisG F(Xt) at stage tt. 
According to the deﬁnitions (7.6a), (7.6b), the following properties hold:

7.3 Probability of Failure, Probability of Success
149
Lemma 7.1 
StartLayout 1st Row 1st Column left parenthesis a right parenthesis 2nd Column For each given stage t comma t greater than or equals 0 comma upper S Subscript t comma i Baseline comma i equals 1 comma 2 comma ellipsis comma r are disjoint events period 2nd Row 1st Column left parenthesis b right parenthesis 2nd Column upper S Subscript t Baseline colon equals union Underscript i equals 1 Overscript r Endscripts upper S Subscript t comma i Baseline denotes the event of a search success at stage t period 3rd Row 1st Column Blank 4th Row 1st Column left parenthesis c right parenthesis 2nd Column The event being represented by the complement of upper S Subscript t Baseline comma 5th Row 1st Column Blank 2nd Column upper S Subscript t Superscript complement Baseline equals intersection Underscript i equals i Overscript r Endscripts upper S Subscript t comma i Superscript complement Baseline equals upper S Subscript t comma f Baseline 6th Row 1st Column Blank 2nd Column represents the complete search failure at stage t period EndLayout(a) For each given stage t, t ≥0, St,i, i = 1, 2, . . . ,r are disjoint events.
(b) St :=
rU
i=1
St,i denotes the event of a search success at stage t.
(7.6c) 
StartLayout 1st Row 1st Column left parenthesis a right parenthesis 2nd Column For each given stage t comma t greater than or equals 0 comma upper S Subscript t comma i Baseline comma i equals 1 comma 2 comma ellipsis comma r are disjoint events period 2nd Row 1st Column left parenthesis b right parenthesis 2nd Column upper S Subscript t Baseline colon equals union Underscript i equals 1 Overscript r Endscripts upper S Subscript t comma i Baseline denotes the event of a search success at stage t period 3rd Row 1st Column Blank 4th Row 1st Column left parenthesis c right parenthesis 2nd Column The event being represented by the complement of upper S Subscript t Baseline comma 5th Row 1st Column Blank 2nd Column upper S Subscript t Superscript complement Baseline equals intersection Underscript i equals i Overscript r Endscripts upper S Subscript t comma i Superscript complement Baseline equals upper S Subscript t comma f Baseline 6th Row 1st Column Blank 2nd Column represents the complete search failure at stage t period EndLayout(c) The event being represented by the complement of St,
SC
t =
r∩
i=i
SC
t,i = St, f
(7.6d) 
represents the complete search failure at stage t. 
Proof Properties in (a) and (b) follow directly from the deﬁnitions (7.6a) and (7.6c). 
From (7.6c) we get, with upper G Subscript upper F Baseline equals upper G Subscript upper F Baseline left parenthesis x right parenthesisG F = G F(x)
StartLayout 1st Row 1st Column upper S Subscript t Superscript complement 2nd Column equals intersection Underscript i equals 1 Overscript r Endscripts upper S Subscript t comma i Superscript complement Baseline 2nd Row 1st Column Blank 2nd Column equals left bracket upper Y Subscript t comma 1 Baseline not an element of upper G Subscript upper F Baseline right bracket 3rd Column intersection left parenthesis left bracket upper Y Subscript t comma 1 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection left bracket upper Y Subscript t comma 2 Baseline element of upper G Subscript upper F Baseline right bracket right parenthesis Superscript complement Baseline 3rd Row 1st Column Blank 2nd Column intersection left parenthesis left bracket upper Y Subscript t comma 1 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection left bracket upper Y Subscript t comma 2 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection left bracket upper Y Subscript t comma 3 Baseline element of upper G Subscript upper F Baseline right bracket right parenthesis Superscript complement Baseline 4th Row 1st Column Blank 2nd Column intersection ellipsis 3rd Column intersection left parenthesis left bracket upper Y Subscript t comma 1 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection midline horizontal ellipsis intersection left bracket upper Y Subscript t comma i minus 1 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection left bracket upper Y Subscript t comma i Baseline element of upper G Subscript upper F Baseline right bracket right parenthesis Superscript complement Baseline 5th Row 1st Column Blank 2nd Column intersection ellipsis 3rd Column intersection left parenthesis left bracket upper Y Subscript t comma 1 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection midline horizontal ellipsis intersection left bracket upper Y Subscript t comma r minus 1 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection left bracket upper Y Subscript t comma r Baseline element of upper G Subscript upper F Baseline right bracket right parenthesis Superscript complement Baseline comma EndLayoutSC
t
=
r∩
i=1
SC
t,i
=
[
Yt,1 /∈G F
]
∩
([
Yt,1 /∈G F
]
∩
[
Yt,2 ∈G F
])C
∩
([
Yt,1 /∈G F
]
∩
[
Yt,2 /∈G F
]
∩
[
Yt,3 ∈G F
])C
∩
. . .
∩
([
Yt,1 /∈G F
]
∩· · · ∩
[
Yt,i−1 /∈G F
]
∩
[
Yt,i ∈G F
])C
∩
. . .
∩
([
Yt,1 /∈G F
]
∩· · · ∩
[
Yt,r−1 /∈G F
]
∩
[
Yt,r ∈G F
])C ,
hence, 
StartLayout 1st Row 1st Column upper S Subscript t Superscript complement 2nd Column equals left bracket upper Y Subscript t comma 1 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection left parenthesis left bracket upper Y Subscript t comma 1 Baseline element of upper G Subscript upper F Baseline right bracket union left bracket upper Y Subscript t comma 2 Baseline not an element of upper G Subscript upper F Baseline right bracket right parenthesis 2nd Row 1st Column Blank 2nd Column intersection left parenthesis left bracket upper Y Subscript t comma 1 Baseline element of upper G Subscript upper F Baseline right bracket union left bracket upper Y Subscript t comma 2 Baseline element of upper G Subscript upper F Baseline right bracket union left bracket upper Y Subscript t comma 3 Baseline not an element of upper G Subscript upper F Baseline right bracket right parenthesis 3rd Row 1st Column Blank 2nd Column intersection ellipsis 4th Row 1st Column Blank 2nd Column equals left bracket upper Y Subscript t comma 1 Baseline not an element of upper G Subscript upper F Baseline comma upper Y Subscript t comma 2 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection left parenthesis left bracket upper Y Subscript t comma 1 Baseline element of upper G Subscript upper F Baseline right bracket union left bracket upper Y Subscript t comma 2 Baseline element of upper G Subscript upper F Baseline right bracket union left bracket upper Y Subscript t comma 3 Baseline not an element of upper G Subscript upper F Baseline right bracket right parenthesis 5th Row 1st Column Blank 2nd Column intersection ellipsis 6th Row 1st Column equals 2nd Column left bracket upper Y Subscript t comma 1 Baseline not an element of upper G Subscript upper F Baseline comma upper Y Subscript t comma 2 Baseline not an element of upper G Subscript upper F Baseline comma upper Y Subscript t comma 3 Baseline not an element of upper G Subscript upper F Baseline right bracket intersection ellipsis period EndLayoutSC
t =
[
Yt,1 /∈G F
]
∩
([
Yt,1 ∈G F
]
∪
[
Yt,2 /∈G F
])
∩
([
Yt,1 ∈G F
]
∪
[
Yt,2 ∈G F
]
∪
[
Yt,3 /∈G F
])
∩. . .
=
[
Yt,1 /∈G F, Yt,2 /∈G F
]
∩
([
Yt,1 ∈G F
]
∪
[
Yt,2 ∈G F
]
∪
[
Yt,3 /∈G F
])
∩. . .
=
[
Yt,1 /∈G F, Yt,2 /∈G F, Yt,3 /∈G F
]
∩. . . .
Proceeding this way, we ﬁnd (7.6d).
□
7.3 
Probability of Failure, Probability of Success 
According to (7.6b) and Lemma 7.1, the probability of failure p Subscript fp f at point upper X Subscript t Baseline equals x Subscript tXt = xt
is given by 
StartLayout 1st Row p Subscript f Baseline equals p Subscript f Baseline left parenthesis t comma upper X Subscript t Baseline right parenthesis colon equals upper P left parenthesis upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis comma j equals 1 comma 2 comma ellipsis comma r right parenthesis period EndLayoutp f = p f (t, Xt) := P
(
Yt, j /∈G F(xt), j = 1, 2, . . . ,r
)
.
(7.7a)

150
7
Random Search Methods with Multiple Search Points
If, as assumed in many (practical) cases, the search variables upper Y Subscript t comma jYt, j, j equals 1 comma ellipsis r j = 1, . . .r, are  
stochastically independent for given upper X Subscript t Baseline equals x Subscript tXt = xt, then 
StartLayout 1st Row 1st Column p Subscript f Baseline left parenthesis t comma x Subscript t Baseline right parenthesis 2nd Column equals product Underscript j equals 1 Overscript r Endscripts upper P left parenthesis upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus upper P left parenthesis upper Y Subscript t comma j Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis right parenthesis period EndLayoutp f (t, xt) =
r∏
j=1
P
(
Yt, j /∈G F(xt)
)
=
r∏
j=1
(
1 −P(Yt, j ∈G F(xt))
)
.
(7.7b) 
Consequently, the probability of success at point upper X Subscript t Baseline equals x Subscript tXt = xt reads 
StartLayout 1st Row 1st Column p Subscript s Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 2nd Column 1 minus p Subscript f Baseline left parenthesis t comma x Subscript t Baseline right parenthesis 2nd Row 1st Column equals 2nd Column 1 minus upper P left parenthesis upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis comma j equals 1 comma 2 comma ellipsis comma r right parenthesis comma EndLayoutps(t, xt) =1 −p f (t, xt)
=1 −P
(
Yt, j /∈G F(xt), j = 1, 2, . . . ,r
)
,
(7.8a) 
and for stochastically independent search variablesupper Y Subscript t comma j Baseline comma j equals 1 comma 2 comma ellipsis comma rYt, j, j = 1, 2, . . . ,r, atupper X t equals x Subscript tXt = xt
we have 
StartLayout 1st Row p Subscript s Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 1 minus product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus upper P left parenthesis upper Y Subscript t comma j Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis right parenthesis period EndLayoutps(t, xt) = 1 −
r∏
j=1
(
1 −P
(
Yt, j ∈G F(xt)
))
.
(7.8b) 
For the important special case 
StartLayout 1st Row upper P left parenthesis upper Y Subscript t comma j Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis equals alpha Subscript upper F Baseline left parenthesis t comma x Subscript t Baseline right parenthesis comma j equals 1 comma 2 comma ellipsis comma r comma EndLayoutP
(
Yt, j ∈G F(xt)
)
= αF(t, xt), j = 1, 2, . . . ,r,
(7.9) 
e.g., for i.i.d. search variables at upper X Subscript t Baseline equals x Subscript tXt = xt, with a probability alpha Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesisαF(xt) independent of 
index j j, according to (7.7b), (7.8b) and (7.9), we have the following result. 
Lemma 7.2 In case of independent search variables upper Y Subscript t comma j Baseline comma j equals 1 comma 2 comma ellipsis comma rYt, j, j = 1, 2, . . . ,r, having 
probability of successalpha Subscript upper F Baseline equals alpha Subscript upper F Baseline left parenthesis t comma x Subscript t Baseline right parenthesisαF = αF(t, xt) at pointupper X Subscript t Baseline equals x Subscript tXt = xt, the probability functionsp Subscript fp f
and p Subscript sps are given by 
StartLayout 1st Row 1st Column p Subscript f Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 2nd Column left parenthesis 1 minus alpha Subscript upper F Baseline right parenthesis Superscript r 2nd Row 1st Column Blank 3rd Row 1st Column p Subscript s Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 2nd Column 1 minus left parenthesis 1 minus alpha Subscript upper F Baseline right parenthesis Superscript r Baseline comma EndLayoutp f (t, xt) =(1 −αF)r
(7.10a) 
StartLayout 1st Row 1st Column p Subscript f Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 2nd Column left parenthesis 1 minus alpha Subscript upper F Baseline right parenthesis Superscript r 2nd Row 1st Column Blank 3rd Row 1st Column p Subscript s Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 2nd Column 1 minus left parenthesis 1 minus alpha Subscript upper F Baseline right parenthesis Superscript r Baseline comma EndLayoutps(t, xt) =1 −(1 −αF)r,
(7.10b) 
with alpha Subscript upper F Baseline equals alpha Subscript upper F Baseline left parenthesis t comma x Subscript t Baseline right parenthesisαF = αF(t, xt)
According to the above lemma, the probability functionsp Subscript f Baseline comma p Subscript s Baselinep f , ps can be represented 
by means of the binomial formula. Hence, for p Subscript sps we get 
StartLayout 1st Row 1st Column p Subscript s Baseline left parenthesis t comma x Subscript t Baseline right parenthesis 2nd Column equals ModifyingAbove p With tilde Subscript s Baseline left parenthesis r comma alpha Subscript upper F Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals sigma summation Underscript j equals 1 Overscript r Endscripts StartBinomialOrMatrix r Choose j EndBinomialOrMatrix left parenthesis negative 1 right parenthesis Superscript j plus 1 Baseline alpha Subscript upper F Superscript j Baseline equals r alpha Subscript upper F Baseline minus StartBinomialOrMatrix r Choose 2 EndBinomialOrMatrix alpha Subscript upper F Superscript 2 Baseline plus StartBinomialOrMatrix r Choose 3 EndBinomialOrMatrix alpha Subscript upper F Superscript 3 Baseline plus or minus midline horizontal ellipsis plus left parenthesis negative 1 right parenthesis Superscript r plus 1 Baseline alpha Superscript r Baseline period EndLayoutps(t, xt) = ˜ps(r, αF)
=
r
∑
j=1
(r
j
)
(−1) j+1α j
F = rαF −
(r
2
)
α2
F +
(r
3
)
α3
F ± · · · + (−1)r+1αr.
(7.11)

7.3 Probability of Failure, Probability of Success
151
For a search success with probability 1 at an index j equals j 0 j = j0, special values of p Subscript f Baseline comma p Subscript s Baselinep f , ps
result, cf. (7.7b), (7.8b). 
Remark 7.1 Let upper Y Subscript t comma j Baseline comma j equals 1 comma 2 comma ellipsis comma rYt, j, j = 1, 2, . . . ,r be stochastically independent. 
If upper P left parenthesis upper Y Subscript t comma j Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis equals 1P
(
Yt, j ∈G F(xt)
)
= 1 for j equals j 0 comma 1 less than or equals j 0 less than or equals r j = j0, 1 ≤j0 ≤r, then 
StartLayout 1st Row 1st Column p Subscript f Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 0 2nd Column Blank 3rd Column a n d 4th Column Blank 5th Column p Subscript s Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 1 period EndLayoutp f (t, xt) = 0
and
ps(t, xt) = 1.
7.3.1 
Monotonicity of the Probability Functions p Subscript f Baseline comma p Subscript s Baseline p f , ps
We now examine the dependence ofp Subscript s Baseline comma p Subscript f Baselineps, p f onrr, the number of the used search vari-
ables upper Y Subscript t comma j Baseline comma j equals 1 comma ellipsis comma rYt, j, j = 1, . . . ,r, for a given stage tt. According to (7.7a) for the probability 
of failure we get 
StartLayout 1st Row 1st Column p Subscript f Baseline left parenthesis r plus 1 comma t comma x Subscript t Baseline right parenthesis equals 2nd Column upper P left parenthesis left bracket upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis comma j equals 1 comma ellipsis comma r right bracket intersection left bracket upper Y Subscript t comma r plus 1 Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right bracket right parenthesis 2nd Row 1st Column less than or equals 2nd Column upper P left parenthesis upper Y Subscript t comma j Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis comma j equals 1 comma ellipsis comma r right parenthesis equals p Subscript f Baseline left parenthesis r comma t comma x Subscript t Baseline right parenthesis period EndLayoutp f (r + 1, t, xt) =P
([
Yt, j /∈G F(xt), j = 1, . . . ,r
]
∩
[
Yt,r+1 /∈G F(xt)
])
≤P
(
Yt, j /∈G F(xt), j = 1, . . . ,r
)
= p f (r, t, xt).
(7.12a) 
For stochastically independent search variables upper Y Subscript t comma j Baseline comma j equals 1 comma 2 comma ellipsis comma rYt, j, j = 1, 2, . . . ,r, this decrease 
of p Subscript f Baseline equals p Subscript f Baseline left parenthesis r comma t comma x Subscript t Baseline right parenthesisp f = p f (r, t, xt) with respect to rr can be seen directly from (7.7b). In this case 
we have 
StartLayout 1st Row p Subscript f Baseline left parenthesis r plus 1 comma t comma x Subscript t Baseline right parenthesis less than p Subscript f Baseline left parenthesis r comma t comma x Subscript t Baseline right parenthesis EndLayoutp f (r + 1, t, xt) < p f (r, t, xt)
(7.12b) 
if p Subscript f Baseline left parenthesis r comma t comma x Subscript t Baseline right parenthesis greater than 0p f (r, t, xt) > 0 and 0 less than or equals upper P left parenthesis upper Y Subscript t comma r plus 1 Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis less than 10 ≤P
(
Yt,r+1 /∈G F(xt)
)
< 1. 
Consequently, from (7.12a), (7.12b) we have  
StartLayout 1st Row p Subscript f Baseline left parenthesis r comma t comma x Subscript t Baseline right parenthesis less than or equals left parenthesis less than right parenthesis p Subscript f Baseline left parenthesis rho comma t comma x Subscript t Baseline right parenthesis comma r greater than rho period EndLayoutp f (r, t, xt) ≤(<) p f (ρ, t, xt),
r > ρ.
(7.12c) 
Comparing the multiple search left parenthesis upper Y Subscript t comma j Baseline comma 1 less than or equals j less than or equals r right parenthesis
(
Yt, j, 1 ≤j ≤r
)
with the single search upper Y Subscript t Baseline equals upper Y Subscript t comma 1Yt = Yt,1, 
we get 
StartLayout 1st Row upper P left parenthesis upper Y Subscript t Baseline not an element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis greater than or equals left parenthesis greater than right parenthesis p Subscript f Baseline left parenthesis r comma t comma x Subscript t Baseline right parenthesis comma r greater than 1 period EndLayoutP (Yt /∈G F(xt)) ≥(>) p f (r, t, xt), r > 1.
(7.12d) 
Hence, with increasing number of search variables upper Y Subscript t comma j Baseline comma j equals 1 comma ellipsis comma rYt, j, j = 1, . . . ,r the search 
failure is decreasing. According to (7.8a), (7.8b) for the probability of a search 
success p Subscript s Baseline equals p Subscript s Baseline left parenthesis r comma t comma x Subscript t Baseline right parenthesisps = ps(r, t, xt) at stage tt we have 
StartLayout 1st Row p Subscript s Baseline left parenthesis r comma t comma x Subscript t Baseline right parenthesis greater than or equals left parenthesis greater than right parenthesis p Subscript s Baseline left parenthesis rho comma t comma x Subscript t Baseline right parenthesis greater than or equals left parenthesis greater than right parenthesis upper P left parenthesis upper Y Subscript t Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis right parenthesis comma r greater than rho period EndLayoutps(r, t, xt) ≥(>) ps(ρ, t, xt) ≥(>) P (Yt ∈G F(xt)) ,
r > ρ.
(7.12e) 
Thus, the probability of success can be increased by this method.

152
7
Random Search Methods with Multiple Search Points
7.3.2 
Asymptotic Behavior in Case of i.i.d. Search Variables 
Suppose here that upper Y Subscript t comma j Baseline comma 1 less than or equals j less than or equals rYt, j, 1 ≤j ≤r, are i.i.d. stochastic search variables such that 
(7.9) holds. According to Lemma 7.2, we then have 
StartLayout 1st Row 1st Column p Subscript f Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 2nd Column ModifyingAbove p With tilde Subscript f Baseline left parenthesis r comma alpha Subscript upper F Baseline right parenthesis equals left parenthesis 1 minus alpha Subscript upper F Baseline right parenthesis Superscript r Baseline 2nd Row 1st Column p Subscript s Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals 2nd Column ModifyingAbove p With tilde Subscript s Baseline left parenthesis r comma alpha Subscript upper F Baseline right parenthesis equals 1 minus left parenthesis 1 minus alpha Subscript upper F Baseline right parenthesis Superscript r Baseline comma EndLayoutp f (t, xt) = ˜p f (r, αF) = (1 −αF)r
ps(t, xt) = ˜ps(r, αF) = 1 −(1 −αF)r,
withalpha Subscript upper F Baseline equals alpha Subscript upper F Baseline left parenthesis t comma x Subscript t Baseline right parenthesis greater than 0αF = αF(t, xt) > 0. In order to consider the asymptotic behavior ofp Subscript f Baseline comma p Subscript s Baselinep f , ps for 
r right arrow normal infinityr →∞, we use the inequality 
StartLayout 1st Row left parenthesis 1 minus x y right parenthesis Superscript n Baseline less than or equals 1 minus x plus normal e Superscript minus y n Baseline comma 0 less than or equals x comma y less than or equals 1 comma n greater than 0 period EndLayout(1 −xy)n ≤1 −x + e−yn,
0 ≤x, y ≤1,
n > 0.
(7.13) 
see [ 1], Lemma 10.5.3, p. 320. Applying (7.13) to ModifyingAbove p With tilde Subscript upper F Baseline equals p Subscript upper F Baseline left parenthesis r comma alpha right parenthesis ˜pF = pF(r, α), we get 
StartLayout 1st Row ModifyingAbove p With tilde Subscript f Baseline left parenthesis t comma x Subscript t Baseline right parenthesis equals left parenthesis 1 minus alpha Subscript upper F Baseline right parenthesis Superscript r Baseline less than or equals normal e Superscript minus r alpha Super Subscript upper F Superscript Baseline comma r equals 1 comma 2 comma ellipsis period EndLayout ˜p f (t, xt) = (1 −αF)r ≤e−rαF,
r = 1, 2, . . . .
(7.14) 
Inequality (7.14) yields the following result. 
Lemma 7.3 Suppose alpha Subscript upper F Baseline equals alpha Subscript upper F Baseline left parenthesis t comma x Subscript t Baseline right parenthesis greater than 0αF = αF(t, xt) > 0. Then 
StartLayout 1st Row 1st Column p Subscript f Baseline left parenthesis t comma x Subscript t Baseline right parenthesis 2nd Column equals ModifyingAbove p With tilde Subscript f Baseline left parenthesis r comma alpha Subscript upper F Baseline right parenthesis right arrow 0 comma r right arrow normal infinity 2nd Row 1st Column Blank 3rd Row 1st Column p Subscript s Baseline left parenthesis t comma x Subscript t Baseline right parenthesis 2nd Column equals ModifyingAbove p With tilde Subscript s Baseline left parenthesis r comma alpha Subscript upper F Baseline right parenthesis right arrow 1 comma r right arrow normal infinity period EndLayoutp f (t, xt) = ˜p f (r, αF) →0,r →∞
(7.15a) 
StartLayout 1st Row 1st Column p Subscript f Baseline left parenthesis t comma x Subscript t Baseline right parenthesis 2nd Column equals ModifyingAbove p With tilde Subscript f Baseline left parenthesis r comma alpha Subscript upper F Baseline right parenthesis right arrow 0 comma r right arrow normal infinity 2nd Row 1st Column Blank 3rd Row 1st Column p Subscript s Baseline left parenthesis t comma x Subscript t Baseline right parenthesis 2nd Column equals ModifyingAbove p With tilde Subscript s Baseline left parenthesis r comma alpha Subscript upper F Baseline right parenthesis right arrow 1 comma r right arrow normal infinity period EndLayoutps(t, xt) = ˜ps(r, αF) →1,r →∞.
(7.15b) 
7.3.3 
Estimation of p Subscript f p f and p Subscript s ps in Case of Arbitrary 
Stochastically Independent Search Variables upper Y Subscript t comma j Baseline equals upper Y Subscript jYt, j = Y j
In general we have 
StartLayout 1st Row p Subscript f Baseline left parenthesis r comma x Subscript t Baseline right parenthesis equals product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus alpha Subscript j Baseline right parenthesis comma alpha Subscript j Baseline colon equals upper P left parenthesis upper Y Subscript j Baseline element of upper G Subscript upper F Baseline right parenthesis period EndLayoutp f (r, xt) =
r∏
j=1
(1 −α j),
α j := P
(
Y j ∈G F
)
.
In the following we assume that 
StartLayout 1st Row ModifyingBelow alpha With quotation dash less than or equals alpha Subscript j Baseline less than or equals ModifyingAbove alpha With quotation dash comma j equals 1 comma 2 comma ellipsis comma r EndLayoutα ≤α j ≤α,
j = 1, 2, . . . ,r
(7.16a) 
with given, ﬁxed probability boundsModifyingBelow alpha With quotation dash comma ModifyingAbove alpha With quotation dash comma 0 less than or equals ModifyingBelow alpha With quotation dash less than ModifyingAbove alpha With quotation dash less than or equals 1α, α, 0 ≤α < α ≤1 for all values ofalpha Subscript j Baseline comma 1 less than or equals j less than or equals rα j, 1 ≤
j ≤r. The above inequalities for alpha Subscript j Baseline comma 1 less than or equals j less than or equals rα j, 1 ≤j ≤r then yield 
StartLayout 1st Row 0 less than or equals 1 minus ModifyingAbove alpha With quotation dash less than or equals 1 minus alpha Subscript j Baseline less than or equals 1 minus ModifyingBelow alpha With quotation dash less than or equals 1 comma 1 less than or equals j less than or equals r period EndLayout0 ≤1 −α ≤1 −α j ≤1 −α ≤1,
1 ≤j ≤r.

7.3 Probability of Failure, Probability of Success
153
Multiplying these inequalities by nonnegative values we get 
StartLayout 1st Row left parenthesis 1 minus ModifyingAbove alpha With quotation dash right parenthesis Superscript r Baseline less than or equals product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus alpha Subscript j Baseline right parenthesis less than or equals left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r EndLayout(1 −α)r ≤
r∏
j=1
(1 −α j) ≤(1 −α)r
(7.16b) 
and therefore 
StartLayout 1st Row left parenthesis 1 minus ModifyingAbove alpha With quotation dash right parenthesis Superscript r Baseline less than or equals p Subscript f Baseline left parenthesis r comma x Subscript t Baseline right parenthesis less than or equals left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r Baseline period EndLayout(1 −α)r ≤p f (r, xt) ≤(1 −α)r.
(7.16c) 
Moreover, for p Subscript s Baseline equals 1 minus p Subscript fps = 1 −p f we get 
StartLayout 1st Row 1 minus left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r Baseline less than or equals p Subscript s Baseline less than or equals 1 minus left parenthesis 1 minus ModifyingAbove alpha With quotation dash right parenthesis Superscript r Baseline period EndLayout1 −(1 −α)r ≤ps ≤1 −(1 −α)r.
(7.16d) 
7.3.3.1
Error Estimation 
Considering p Subscript f Baseline equals p Subscript f Baseline left parenthesis r comma x Subscript t Baseline right parenthesisp f = p f (r, xt), we have the errors 
StartLayout 1st Row 1st Column e left parenthesis r comma ModifyingAbove alpha With quotation dash right parenthesis colon 2nd Column equals p Subscript f Baseline minus left parenthesis 1 minus ModifyingAbove alpha With quotation dash right parenthesis Superscript r Baseline left parenthesis left error right parenthesis 2nd Row 1st Column e left parenthesis r comma ModifyingBelow alpha With quotation dash right parenthesis colon 2nd Column equals left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r Baseline minus p Subscript f Baseline left parenthesis right error right parenthesis EndLayoute(r, α) : = p f −(1 −α)r (left error)
e(r, α) : = (1 −α)r −p f (right error)
from using the lower, upper, resp. , approximation of p Subscript fp f . 
Thus 
StartLayout 1st Row e left parenthesis r comma x Subscript t Baseline right parenthesis colon equals e left parenthesis r comma ModifyingAbove alpha With quotation dash right parenthesis plus e left parenthesis r comma ModifyingBelow alpha With quotation dash right parenthesis equals left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r Baseline minus left parenthesis 1 minus ModifyingAbove alpha With quotation dash right parenthesis Superscript r EndLayoute(r, xt) := e(r, α) + e(r, α) = (1 −α)r −(1 −α)r
(7.17a) 
denotes the maximum error for approximating p Subscript fp f by a value of the interval left bracket left parenthesis 1 minus ModifyingAbove alpha With quotation dash right parenthesis Superscript r Baseline comma left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r Baseline right bracket[(1 −
α)r, (1 −α)r]. 
Estimation of the maximum error e left parenthesis r comma x Subscript t Baseline right parenthesise(r, xt) by the mean value theorem 
StartLayout 1st Row 1st Column e left parenthesis r comma x Subscript t Baseline right parenthesis 2nd Column equals left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r Baseline minus left parenthesis 1 minus ModifyingAbove alpha With quotation dash right parenthesis Superscript r Baseline 2nd Row 1st Column Blank 2nd Column equals minus r left parenthesis 1 minus left parenthesis ModifyingAbove alpha With quotation dash plus theta left parenthesis ModifyingBelow alpha With quotation dash minus ModifyingAbove alpha With quotation dash right parenthesis right parenthesis right parenthesis Superscript r minus 1 Baseline left parenthesis ModifyingBelow alpha With quotation dash minus ModifyingAbove alpha With quotation dash right parenthesis 3rd Row 1st Column Blank 2nd Column equals r left parenthesis 1 minus left parenthesis ModifyingAbove alpha With quotation dash plus theta left parenthesis ModifyingBelow alpha With quotation dash minus ModifyingAbove alpha With quotation dash right parenthesis right parenthesis right parenthesis Superscript r minus 1 Baseline left parenthesis ModifyingAbove alpha With quotation dash minus ModifyingBelow alpha With quotation dash right parenthesis 4th Row 1st Column Blank 2nd Column less than or equals r left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r minus 1 Baseline left parenthesis ModifyingAbove alpha With quotation dash minus ModifyingBelow alpha With quotation dash right parenthesis comma 0 less than theta less than 1 period EndLayoute(r, xt) = (1 −α)r −(1 −α)r
= −r
(
1 −
(
α + ϑ(α −α)
))r−1 (α −α)
= r
(
1 −
(
α + ϑ(α −α)
))r−1 (α −α)
≤r(1 −α)r−1(α −α),
0 < ϑ < 1.
(7.17b) 
Using (7.13) in Sect. 7.3.2, we ﬁnally have 
StartLayout 1st Row 1st Column e left parenthesis r comma x Subscript t Baseline right parenthesis 2nd Column equals left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r Baseline minus left parenthesis 1 minus ModifyingAbove alpha With quotation dash right parenthesis Superscript r Baseline 2nd Row 1st Column Blank 2nd Column less than or equals r e Superscript minus left parenthesis r minus 1 right parenthesis ModifyingBelow alpha With quotation dash Baseline left parenthesis ModifyingAbove alpha With quotation dash minus ModifyingBelow alpha With quotation dash right parenthesis 3rd Row 1st Column Blank 2nd Column equals StartFraction r left parenthesis ModifyingAbove alpha With quotation dash minus ModifyingBelow alpha With quotation dash right parenthesis Over e Superscript minus left parenthesis r minus 1 right parenthesis ModifyingBelow alpha With quotation dash Baseline EndFraction period EndLayoute(r, xt) = (1 −α)r −(1 −α)r
≤re−(r−1)α(α −α)
= r(α −α)
e−(r−1)α .
(7.17c)

154
7
Random Search Methods with Multiple Search Points
Since the exponential function increases much faster than any power ofrr, forModifyingBelow alpha With quotation dash greater than 0α > 0
we have 
StartLayout 1st Row 1st Column e left parenthesis r comma x Subscript t Baseline right parenthesis 2nd Column equals left parenthesis 1 minus ModifyingBelow alpha With quotation dash right parenthesis Superscript r Baseline minus left parenthesis 1 minus ModifyingAbove alpha With quotation dash right parenthesis Superscript r Baseline right arrow 0 comma r right arrow normal infinity period EndLayoute(r, xt) = (1 −α)r −(1 −α)r →0,
r →∞.
(7.17d) 
7.4 
Reachability Results Multiple RSM 
According to Chap. 4, here we have to study the sequence of probabilities 
StartLayout 1st Row upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon Baseline right parenthesis comma t equals 1 comma 2 comma ellipsis EndLayoutP (Xt ∈B∈) ,
t = 1, 2, . . .
(7.18a) 
for 
StartLayout 1st Row upper B Subscript epsilon Baseline colon equals StartSet x element of upper D colon upper F left parenthesis x right parenthesis less than or equals upper F Superscript asterisk Baseline plus epsilon EndSet comma epsilon greater than 0 comma EndLayoutB∈:=
{
x ∈D : F(x) ≤F∗+ ∈
}
,
∈> 0,
(7.18b) 
where the iterates upper X Subscript t Baseline comma t equals 1 comma 2 comma ellipsisXt, t = 1, 2, . . . are given by (7.5). We have 
StartLayout 1st Row 1st Column upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon Baseline right parenthesis 2nd Column equals 1 minus upper P left parenthesis upper X Subscript t Baseline not an element of upper B Subscript epsilon Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals 1 minus upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon Baseline comma upper X 2 not an element of upper B Subscript epsilon Baseline comma ellipsis comma upper B Subscript t Baseline not an element of upper B Subscript epsilon Baseline right parenthesis comma EndLayoutP(Xt ∈B∈) = 1 −P(Xt /∈B∈)
= 1 −P(X1 /∈B∈, X2 /∈B∈, . . . , Bt /∈B∈),
(7.19a) 
with 
StartLayout 1st Row 1st Column Blank 2nd Column upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon Baseline comma upper X 2 not an element of upper B Subscript epsilon Baseline comma ellipsis comma upper B Subscript t Baseline not an element of upper B Subscript epsilon Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals integral Underscript x 1 not an element of upper B Subscript epsilon Baseline Endscripts upper K 0 left parenthesis x 0 comma d x 1 right parenthesis ellipsis integral Underscript x Subscript t minus 1 Baseline not an element of upper B Subscript epsilon Baseline Endscripts upper K Subscript t minus 2 Baseline left parenthesis x Subscript t minus 2 Baseline comma d x Subscript t minus 1 Baseline right parenthesis integral Underscript x Subscript t Baseline not an element of upper B Subscript epsilon Baseline Endscripts upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma d x Subscript t Baseline right parenthesis comma EndLayoutP(X1 /∈B∈, X2 /∈B∈, . . . , Bt /∈B∈)
=
{
x1 /∈B∈
K0(x0, dx1) . . .
{
xt−1 /∈B∈
Kt−2(xt−2, dxt−1)
{
xt /∈B∈
Kt−1(xt−1, dxt),
(7.19b) 
whereupper K Subscript s Baseline left parenthesis x Subscript s Baseline comma dot right parenthesisKs(xs, ·) denotes the probability distribution ofupper X Subscript s plus 1Xs+1, givenupper X Subscript s Baseline equals x Subscript sXs = xs. The par-
tial integrals on left bracket x Subscript s Baseline not an element of upper B epsilon right bracket comma s equals 1 comma 2 comma ellipsis comma t[xs /∈B∈], s = 1, 2, . . . , t, are now estimated from above stepwise 
s equals t comma t minus 1 comma ellipsis comma 1s = t, t −1, . . . , 1. For s equals ts = t we get 
StartLayout 1st Row 1st Column Blank 2nd Column integral Underscript x Subscript t Baseline not an element of upper B Subscript epsilon Baseline Endscripts upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma d x Subscript t Baseline right parenthesis equals upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma upper D minus upper B Subscript epsilon Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma upper D right parenthesis minus upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis equals 1 minus upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis comma x Subscript t minus 1 Baseline not an element of upper B Subscript epsilon Baseline comma EndLayout
{
xt /∈B∈
Kt−1(xt−1, dxt) = Kt−1(xt−1, D \ B∈)
= Kt−1(xt−1, D) −Kt−1(xt−1, B∈) = 1 −Kt−1(xt−1, B∈),
xt−1 /∈B∈,
(7.20) 
since subset of upper D comma x 0 element of upper D⊂D, x0 ∈D and upper X Subscript s Baseline element of upper D comma s equals 1 comma 2 comma ellipsisXs ∈D, s = 1, 2, . . . . 
Because of x Subscript t minus 1 Baseline not an element of upper B Subscript epsilonxt−1 /∈B∈, hence, 
StartLayout 1st Row upper F left parenthesis x right parenthesis less than or equals upper F Superscript asterisk Baseline plus epsilon less than upper F left parenthesis x Subscript t minus 1 Baseline right parenthesis f o r a l l x element of upper B Subscript epsilon Baseline comma EndLayoutF(x) ≤F∗+ ∈< F(xt−1)
for all x ∈B∈,

7.4 Reachability Results Multiple RSM
155
we have 
StartLayout 1st Row upper B Subscript epsilon Baseline subset of upper G Subscript upper F Baseline left parenthesis x Subscript t minus 1 Baseline right parenthesis period EndLayoutB∈⊂G F(xt−1).
(7.21a) 
Consequently, for x Subscript t minus 1 Baseline not an element of upper B Subscript epsilonxt−1 /∈B∈we get 
StartLayout 1st Row 1st Column upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis 2nd Column equals upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t minus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper P left parenthesis upper X Subscript t Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t minus 1 Baseline right parenthesis comma upper X Subscript t Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t minus 1 Baseline right parenthesis period EndLayoutKt−1(xt−1, B∈) = P(Xt ∈B∈| xt−1)
= P (Xt ∈G F(xt−1), Xt ∈B∈| xt−1) .
(7.21b) 
According to the deﬁnition of left parenthesis upper X Subscript t Baseline right parenthesis Subscript t greater than or equals 1(Xt)t≥1, since upper X Subscript t Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t minus 1 Baseline right parenthesisXt ∈G F(xt−1) in this case we get 
upper X Subscript t Baseline equals upper Y Subscript t comma jXt = Yt, j for one index 1 less than or equals j less than or equals r1 ≤j ≤r, and 
StartLayout 1st Row upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis equals upper P left parenthesis upper S Subscript upper B Sub Subscript epsilon Subscript Baseline vertical bar x Subscript t minus 1 Baseline right parenthesis comma x Subscript t minus 1 Baseline not an element of upper B Subscript epsilon Baseline comma EndLayoutKt−1(xt−1, B∈) = P(SB∈| xt−1),
xt−1 /∈B∈,
(7.21c) 
where upper S Subscript upper B Sub Subscript epsilonSB∈, the set of elementary events having search variables reaching the set upper B Subscript epsilonB∈
of epsilon∈-optimal points, is given by 
StartLayout 1st Row 1st Column upper S Subscript upper B Sub Subscript epsilon Baseline equals 2nd Column left bracket upper Y Subscript t minus 1 comma 1 Baseline element of upper B Subscript epsilon Baseline right bracket union left bracket upper Y Subscript t minus 1 comma 1 Baseline not an element of upper B Subscript epsilon Baseline comma upper Y Subscript t minus 1 comma 2 Baseline element of upper B Subscript epsilon Baseline right bracket union ellipsis 2nd Row 1st Column Blank 2nd Column union left bracket upper Y Subscript t minus 1 comma 1 Baseline not an element of upper B Subscript epsilon Baseline comma ellipsis comma upper Y Subscript t minus 1 comma r minus 1 Baseline not an element of upper B Subscript epsilon Baseline comma upper Y Subscript t minus 1 comma r Baseline element of upper B Subscript epsilon Baseline right bracket period EndLayoutSB∈= [Yt−1,1 ∈B∈] ∪[Yt−1,1 /∈B∈, Yt−1,2 ∈B∈] ∪. . .
∪[Yt−1,1 /∈B∈, . . . , Yt−1,r−1 /∈B∈, Yt−1,r ∈B∈].
(7.21d) 
Corresponding to the domain of successupper G Subscript upper F Baseline left parenthesis x Subscript s Baseline right parenthesisG F(xs), in case of stochastically independent 
search variables upper Y Subscript t minus 1 comma j Baseline comma 1 less than or equals j less than or equals rYt−1, j, 1 ≤j ≤r, we have, cf. (7.8a), (7.8b), 
StartLayout 1st Row 1st Column upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis 2nd Column equals 1 minus product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus upper P left parenthesis upper Y Subscript t minus 1 comma j Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t minus 1 Baseline right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals 1 minus product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus normal upper Pi Subscript t minus 1 comma j Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis right parenthesis comma EndLayoutKt−1(xt−1, B∈) = 1 −
r∏
j=1
(
1 −P(Yt−1, j ∈B∈| xt−1)
)
= 1 −
r∏
j=1
(
1 −∏t−1, j(xt−1, B∈)
)
,
(7.22a) 
where normal upper Pi Subscript t minus 1 comma j Baseline left parenthesis x Subscript t minus 1 Baseline comma dot right parenthesis∏t−1, j(xt−1, ·) denotes the probability distribution of upper Y Subscript t minus 1 comma jYt−1, j, given  upper X Subscript t minus 1 Baseline equals x Subscript t minus 1Xt−1 =
xt−1. 
Thus, for x Subscript t minus 1 Baseline not an element of upper B Subscript epsilonxt−1 /∈B∈we have 
StartLayout 1st Row integral Underscript x Subscript t Baseline not an element of upper B Subscript epsilon Baseline Endscripts upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma d x Subscript t Baseline right parenthesis equals product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus normal upper Pi Subscript t minus 1 comma j Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis right parenthesis period EndLayout
{
xt /∈B∈
Kt−1(xt−1, dxt) =
r∏
j=1
(
1 −∏t−1, j(xt−1, B∈)
)
.
(7.22b) 
For the probability that upper X Subscript tXt does not reach the set upper B Subscript epsilonB∈, provided that the realization 
upper X Subscript t minus 1 Baseline equals x Subscript t minus 1Xt−1 = xt−1 is also outside of upper B Subscript epsilonB∈, we get the upper bound 
StartLayout 1st Row integral Underscript x Subscript t Baseline not an element of upper B Subscript epsilon Baseline Endscripts upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma d x Subscript t Baseline right parenthesis less than or equals product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus inf left brace normal upper Pi Subscript t minus 1 comma j Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis colon x Subscript t minus 1 Baseline not an element of upper B Subscript epsilon Baseline right brace right parenthesis period EndLayout
{
xt /∈B∈
Kt−1(xt−1, dxt) ≤
r∏
j=1
(
1 −inf
{
∏t−1, j(xt−1, B∈) : xt−1 /∈B∈
})
.
(7.23a)

156
7
Random Search Methods with Multiple Search Points
In the special case 
StartLayout 1st Row normal upper Pi Subscript t minus 1 comma j Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis equals normal upper Pi Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis comma j equals 1 comma ellipsis comma r comma EndLayout∏t−1, j(xt−1, B∈) = ∏t−1(xt−1, B∈),
j = 1, . . . ,r,
(7.23b) 
we get 
StartLayout 1st Row integral Underscript x Subscript t Baseline not an element of upper B Subscript epsilon Baseline Endscripts upper K Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma d x Subscript t Baseline right parenthesis less than or equals left parenthesis 1 minus inf left brace normal upper Pi Subscript t minus 1 Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis colon x Subscript t minus 1 Baseline not an element of upper B Subscript epsilon Baseline right brace right parenthesis Superscript r Baseline period EndLayout
{
xt /∈B∈
Kt−1(xt−1, dxt) ≤(1 −inf {∏t−1(xt−1, B∈) : xt−1 /∈B∈})r .
(7.23c) 
After estimating the last integral, i.e., the probability that upper X Subscript tXt does not reach upper B Subscript epsilonB∈, 
given upper X Subscript t minus 1 Baseline equals x Subscript t minus 1 Baseline not an element of upper B Subscript epsilonXt−1 = xt−1 /∈B∈, we get 
StartLayout 1st Row 1st Column Blank 2nd Column upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon Baseline comma upper X 2 not an element of upper B Subscript epsilon Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals integral Underscript x 1 not an element of upper B Subscript epsilon Baseline Endscripts upper K 0 left parenthesis x 0 comma d x 1 right parenthesis ellipsis integral Underscript x Subscript negative 1 Baseline not an element of upper B Subscript epsilon Baseline Endscripts upper K Subscript t minus 2 Baseline left parenthesis x Subscript t minus 2 Baseline comma d x Subscript t minus 1 Baseline right parenthesis product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus alpha Subscript t minus 1 comma j Baseline right parenthesis comma EndLayoutP (X1 /∈B∈, X2 /∈B∈, . . . , Xt /∈B∈)
≤
{
x1 /∈B∈
K0(x0, dx1) . . .
{
x−1 /∈B∈
Kt−2(xt−2, dxt−1)
r∏
j=1
(1 −αt−1, j),
(7.24a) 
where 
StartLayout 1st Row alpha Subscript t minus 1 comma j Baseline colon equals inf left brace normal upper Pi Subscript t minus 1 comma j Baseline left parenthesis x Subscript t minus 1 Baseline comma upper B Subscript epsilon Baseline right parenthesis colon x Subscript t minus 1 Baseline not an element of upper B Subscript epsilon Baseline right brace period EndLayoutαt−1, j := inf
{
∏t−1, j(xt−1, B∈) : xt−1 /∈B∈
}
.
(7.24b) 
Proceeding this way, we obtain 
StartLayout 1st Row upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon Baseline comma upper X 2 not an element of upper B Subscript epsilon Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon Baseline right parenthesis less than or equals product Underscript s equals 0 Overscript t minus 1 Endscripts product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus alpha Subscript s comma j Baseline right parenthesis EndLayoutP (X1 /∈B∈, X2 /∈B∈, . . . , Xt /∈B∈) ≤
t−1
∏
s=0
r∏
j=1
(1 −αs, j)
(7.25a) 
with 
StartLayout 1st Row alpha Subscript s comma j Baseline colon equals inf left brace normal upper Pi Subscript s comma j Baseline left parenthesis x Subscript s Baseline comma upper B Subscript epsilon Baseline right parenthesis colon x Subscript s Baseline not an element of upper B Subscript epsilon Baseline right brace s equals 0 comma 1 comma ellipsis comma t minus 1 period EndLayoutαs, j := inf
{
∏s, j(xs, B∈) : xs /∈B∈
}
s = 0, 1, . . . , t −1.
(7.25b) 
Since ln u less than or equals u minus 1ln u ≤u −1, for u greater than 0u > 0, we have  
StartLayout 1st Row 1st Column ln left parenthesis product Underscript s equals 0 Overscript t minus 1 Endscripts product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus alpha Subscript s comma j Baseline right parenthesis right parenthesis 2nd Column equals sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts sigma summation Underscript j equals 1 Overscript r Endscripts ln left parenthesis 1 minus alpha Subscript s comma j Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts sigma summation Underscript j equals 1 Overscript r Endscripts left parenthesis minus alpha Subscript s comma j Baseline right parenthesis equals minus sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript s comma j EndLayout ln
⎛
⎝
t−1
∏
s=0
r∏
j=1
(1 −αs, j)
⎞
⎠=
t−1
∑
s=0
r
∑
j=1
ln(1 −αs, j)
≤
t−1
∑
s=0
r
∑
j=1
(−αs, j) = −
t−1
∑
s=0
r
∑
j=1
αs, j
(7.26a)

7.4 Reachability Results Multiple RSM
157
and therefore 
StartLayout 1st Row product Underscript s equals 0 Overscript t minus 1 Endscripts product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus alpha Subscript s comma j Baseline right parenthesis less than or equals e x p left parenthesis minus sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript s comma j Baseline right parenthesis period EndLayout
t−1
∏
s=0
r∏
j=1
(1 −αs, j) ≤exp
⎛
⎝−
t−1
∑
s=0
r
∑
j=1
αs, j
⎞
⎠.
(7.26b) 
With the above inequalities, for upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon Baseline right parenthesisP(Xt ∈B∈) we now ﬁnd 
StartLayout 1st Row 1st Column upper P left parenthesis upper X Subscript t Baseline element of upper B Subscript epsilon Baseline right parenthesis 2nd Column equals 1 minus upper P left parenthesis upper X 1 not an element of upper B Subscript epsilon Baseline comma ellipsis comma upper X Subscript t Baseline not an element of upper B Subscript epsilon Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column greater than or equals 1 minus product Underscript s equals 0 Overscript t minus 1 Endscripts product Underscript j equals 1 Overscript r Endscripts left parenthesis 1 minus alpha Subscript s comma j Baseline right parenthesis greater than or equals 1 minus e x p left parenthesis minus sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript s comma j Baseline right parenthesis period EndLayoutP(Xt ∈B∈) = 1 −P(X1 /∈B∈, . . . , Xt /∈B∈)
≥1 −
t−1
∏
s=0
r∏
j=1
(1 −αs, j) ≥1 −exp
⎛
⎝−
t−1
∑
s=0
r
∑
j=1
αs, j
⎞
⎠.
(7.27) 
Consequently, we now get the following result. 
Theorem 7.1 Suppose that 
StartLayout 1st Row 1st Column left parenthesis i right parenthesis 2nd Column sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript s comma j Baseline right arrow normal infinity comma t right arrow normal infinity comma for a given integer r greater than or equals 1 comma or 2nd Row 1st Column Blank 3rd Row 1st Column left parenthesis i i right parenthesis 2nd Column sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript s comma j Baseline equals sigma summation Underscript j equals 1 Overscript r Endscripts sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts alpha Subscript s comma j Baseline right arrow normal infinity comma r right arrow normal infinity comma f o r a g i v e n s t a g e dollar sign t greater than or equals 1 dollar sign comma EndLayout(i)
t−1
∑
s=0
r
∑
j=1
αs, j →∞,
t →∞, for a given integer r ≥1, or
(7.28a) 
StartLayout 1st Row 1st Column left parenthesis i right parenthesis 2nd Column sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript s comma j Baseline right arrow normal infinity comma t right arrow normal infinity comma for a given integer r greater than or equals 1 comma or 2nd Row 1st Column Blank 3rd Row 1st Column left parenthesis i i right parenthesis 2nd Column sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript s comma j Baseline equals sigma summation Underscript j equals 1 Overscript r Endscripts sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts alpha Subscript s comma j Baseline right arrow normal infinity comma r right arrow normal infinity comma f o r a g i v e n s t a g e dollar sign t greater than or equals 1 dollar sign comma EndLayout(ii)
t−1
∑
s=0
r
∑
j=1
αs, j =
r
∑
j=1
t−1
∑
s=0
αs, j →∞,
r →∞, for a given stage t ≥1,
(7.28b) 
then, with upper X Subscript t Baseline equals upper X Subscript t comma rXt = Xt,r we have 
StartLayout 1st Row upper P left parenthesis upper X Subscript t comma r Baseline element of upper B Subscript epsilon Baseline right parenthesis right arrow 1 comma t right arrow normal infinity comma r right arrow normal infinity comma r e s p e c t i v e l y comma EndLayoutP(Xt,r ∈B∈) →1,
t →∞,r →∞, respectively,
(7.28c) 
In the special case 
StartLayout 1st Row alpha Subscript s comma j Baseline equals alpha Subscript s Baseline comma j equals 1 comma ellipsis comma r EndLayoutαs, j = αs,
j = 1, . . . ,r
(7.29a) 
with a ﬁxed probability alpha Subscript s Baseline greater than 0αs > 0, we get  
StartLayout 1st Row upper P left parenthesis upper X Subscript t comma r Baseline element of upper B Subscript epsilon Baseline right parenthesis greater than or equals 1 minus e x p left parenthesis minus r sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts alpha Subscript s Baseline right parenthesis period EndLayoutP(Xt,r ∈B∈) ≥1 −exp
(
−r
t−1
∑
s=0
αs
)
.
(7.29b) 
In this case we have upper P left parenthesis upper X Subscript t comma r Baseline element of upper B Subscript epsilon Baseline right parenthesis greater than 1 minus deltaP(Xt,r ∈B∈) > 1 −δ with a given delta greater than 0δ > 0, provided that 
StartLayout 1st Row r sigma summation Underscript s equals 0 Overscript t minus 1 Endscripts alpha Subscript s Baseline greater than ln StartFraction 1 Over delta EndFraction period EndLayoutr
t−1
∑
s=0
αs > ln 1
δ .
(7.29c)

158
7
Random Search Methods with Multiple Search Points
7.5 
Optimal Search Point Among Multiple Search 
Variables 
Among the search variablesupper Y Subscript t comma j Baseline equals upper Y Subscript t comma j Baseline left parenthesis omega right parenthesis comma j equals 1 comma ellipsis comma r comma omega element of normal upper OmegaYt, j = Yt, j(ω), j = 1, . . . ,r, ω ∈Ω,attimett,see (7.4), 
the best search variable is given at a point x Subscript txt by 
StartLayout 1st Row upper Y Subscript t Superscript asterisk Baseline equals upper Y Subscript t comma j Sub Superscript asterisk Subscript Baseline colon equals underset upper Y Subscript t comma j Baseline element of upper G Subscript upper F Baseline left parenthesis x Subscript t Baseline right parenthesis comma 1 less than or equals j less than or equals r of a r g m i n upper F left parenthesis upper Y Subscript t comma j Baseline right parenthesis period EndLayoutY ∗
t = Yt, j∗:=
argmin
Yt, j∈G F(xt),1≤j≤r
F(Yt, j).
(7.30) 
If the minimum is attained at several indices j j, j Superscript asterisk Baseline equals j Superscript asterisk Baseline left parenthesis t comma omega right parenthesis j∗= j∗(t, ω) denotes the smallest 
index. 
7.5.1 
The Optimized Search Process 
Corresponding to the search process left parenthesis upper X Subscript t Baseline right parenthesis(Xt) with multiple search variables upper Y Subscript t comma j Baseline comma j equals 1 comma ellipsis comma rYt, j, j =
1, . . . ,r, see  (7.4), (7.5), using the best search variable upper Y Subscript t Superscript asterisk Baseline equals upper Y Subscript t comma j Sub Superscript asterisk Subscript Baseline comma j Superscript asterisk Baseline equals j Superscript asterisk Baseline left parenthesis t comma omega right parenthesisY ∗
t = Yt, j∗, j∗= j∗(t, ω), 
deﬁned by (7.30), we now consider the optimized search process left parenthesis upper X Subscript t Superscript asterisk Baseline right parenthesis(X∗
t ) with the 
realizations upper X Subscript t Superscript asterisk Baseline left parenthesis omega right parenthesis equals x Subscript t Superscript asteriskX∗
t (ω) = x∗
t , deﬁned, cf. Fig. 7.1, by  
StartLayout 1st Row 1st Column upper X 0 Superscript asterisk 2nd Column colon equals x 0 Superscript asterisk Baseline equals x 0 2nd Row 1st Column Blank 3rd Row 1st Column x Subscript t plus 1 Superscript asterisk 2nd Column colon equals StartLayout Enlarged left brace 1st Row 1st Column upper Y Subscript t comma j Sub Superscript asterisk Subscript left parenthesis t comma omega right parenthesis Baseline comma 2nd Column if there exists at least one variable 2nd Row 1st Column Blank 2nd Column upper Y Subscript t comma j Baseline element of upper G Subscript f Baseline left parenthesis x Subscript t Superscript asterisk Baseline right parenthesis comma 1 less than or equals j less than or equals r 3rd Row 1st Column Blank 4th Row 1st Column x Subscript t Superscript asterisk Baseline comma 2nd Column else period EndLayout EndLayoutX∗
0 := x∗
0 = x0
(7.31a) 
StartLayout 1st Row 1st Column upper X 0 Superscript asterisk 2nd Column colon equals x 0 Superscript asterisk Baseline equals x 0 2nd Row 1st Column Blank 3rd Row 1st Column x Subscript t plus 1 Superscript asterisk 2nd Column colon equals StartLayout Enlarged left brace 1st Row 1st Column upper Y Subscript t comma j Sub Superscript asterisk Subscript left parenthesis t comma omega right parenthesis Baseline comma 2nd Column if there exists at least one variable 2nd Row 1st Column Blank 2nd Column upper Y Subscript t comma j Baseline element of upper G Subscript f Baseline left parenthesis x Subscript t Superscript asterisk Baseline right parenthesis comma 1 less than or equals j less than or equals r 3rd Row 1st Column Blank 4th Row 1st Column x Subscript t Superscript asterisk Baseline comma 2nd Column else period EndLayout EndLayoutx∗
t+1 :=
⎧
⎪⎪⎨
⎪⎪⎩
Yt, j∗(t,ω), if there exists at least one variable
Yt, j ∈G f (x∗
t ),
1 ≤j ≤r
x∗
t ,
else.
(7.31b) 
Fig. 7.1 Feasible points,epsilon∈-optimal points

7.5 Optimal Search Point Among Multiple Search Variables
159
Remark 7.2 (Multi-Start Methods) Instead of the iteration process (7.31a), (7.31a) 
and corresponding to multi-start methods, cf. [ 2], we may use the 1-step iterations 
StartLayout 1st Row upper X 0 Superscript asterisk Baseline equals x 0 Superscript asterisk Baseline colon equals x Subscript 0 comma k Baseline right arrow upper X 1 Superscript asterisk Baseline equals upper X Subscript 1 comma k Superscript asterisk Baseline comma k equals 1 comma 2 comma ellipsis comma upper K comma EndLayoutX∗
0 = x∗
0 := x0,k →X∗
1 = X∗
1,k,
k = 1, 2, . . . , K,
(7.31c) 
based on a random variation of the initial pointx 0 equals x Subscript 0 comma k Baseline comma k equals 1 comma 2 comma ellipsis comma upper Kx0 = x0,k, k = 1, 2, . . . , K, accord-
ing to a certain probability distribution on the feasible domain upper DD. 
7.5.2 
Probability of Reaching upper B Subscript epsilonB∈from the Outside 
Having a point upper X Subscript t Superscript asterisk Baseline equals x Subscript t Superscript asterisk Baseline not an element of upper B Subscript epsilonX∗
t = x∗
t /∈B∈outside the set upper B Subscript epsilonB∈of epsilon∈-optimal points, we consider 
the probability that the next iteration point upper X Subscript t plus 1 Superscript asteriskX∗
t+1 is in upper B Subscript epsilonB∈. 
Assuming upper F Superscript asterisk Baseline plus epsilon less than upper F left parenthesis x Superscript asterisk Baseline right parenthesisF∗+ ∈< F(x∗) and therefore upper B Subscript epsilon Baseline subset of upper G Subscript upper F Baseline left parenthesis x Subscript t Superscript asterisk Baseline right parenthesisB∈⊂G F(x∗
t ), we have  
StartLayout 1st Row upper Y Subscript t Superscript asterisk Baseline element of upper B Subscript epsilon Baseline long left right double arrow upper Y Subscript t comma j Baseline element of upper B Subscript epsilon Baseline subset of upper G Subscript upper F Baseline left parenthesis x Subscript t Superscript asterisk Baseline right parenthesis f o r a t l e a s t o n e i n d e x j comma 1 less than or equals j less than or equals r period EndLayoutY ∗
t ∈B∈⇐⇒Yt, j ∈B∈⊂G F(x∗
t ) for at least one index j, 1 ≤j ≤r. (7.32a) 
Thus, 
StartLayout 1st Row upper P left parenthesis upper Y Subscript t Superscript asterisk Baseline not an element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis equals upper P left parenthesis upper Y Subscript t comma 1 Baseline not an element of upper B Subscript epsilon Baseline comma ellipsis comma upper Y Subscript t comma r Baseline not an element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis EndLayoutP(Y ∗
t /∈B∈| x∗
t ) = P(Yt,1 /∈B∈, . . . , Yt,r /∈B∈| x∗
t )
and therefore 
StartLayout 1st Row upper P left parenthesis upper Y Subscript t Superscript asterisk Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis equals 1 minus upper P left parenthesis upper Y Subscript t comma 1 Baseline not an element of upper B Subscript epsilon Baseline comma ellipsis comma upper Y Subscript t comma r Baseline not an element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis period EndLayoutP(Y ∗
t ∈B∈| x∗
t ) = 1 −P(Yt,1 /∈B∈, . . . , Yt,r /∈B∈| x∗
t ).
(7.32b) 
According to the deﬁnition (7.31a), (7.31b) of upper X Subscript t plus 1 Superscript asteriskX∗
t+1, we then get 
StartLayout 1st Row 1st Column upper P left parenthesis upper X Subscript t plus 1 Superscript asterisk Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis 2nd Column equals upper P left parenthesis upper Y Subscript t Superscript asterisk Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals 1 minus upper P left parenthesis upper Y Subscript t comma j Baseline not an element of upper B Subscript epsilon Baseline comma 1 less than or equals j less than or equals r vertical bar x Subscript t Superscript asterisk Baseline right parenthesis comma x Subscript t Superscript asterisk Baseline not an element of upper B Subscript epsilon Baseline period EndLayoutP(X∗
t+1 ∈B∈| x∗
t ) = P(Y ∗
t ∈B∈| x∗
t )
= 1 −P(Yt, j /∈B∈, 1 ≤j ≤r | x∗
t ),
x∗
t /∈B∈.
(7.32c) 
Hence, from (7.32c) and inequality (7.13) we get the following result. 
Lemma 7.4 Letx Subscript t Superscript asterisk Baseline not an element of upper B epsilonx∗
t /∈B∈be a realization of an iteration pointupper X Subscript t Superscript asteriskX∗
t outside the set of 
epsilon∈-optimal points upper B Subscript epsilonB∈. 
(a) Ifupper Y Subscript t comma j Baseline comma 1 less than or equals j less than or equals rYt, j, 1 ≤j ≤r, are stochastically independent search points, givenupper X Subscript t Superscript asterisk Baseline equals x Subscript t Superscript asteriskX∗
t = x∗
t , 
then 
StartLayout 1st Row upper P left parenthesis upper X Subscript t plus 1 Superscript asterisk Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis equals 1 minus product Underscript j equals 1 Overscript r Endscripts upper P left parenthesis upper Y Subscript t comma j Baseline not an element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis period EndLayoutP(X∗
t+1 ∈B∈| x∗
t ) = 1 −
r∏
j=1
P(Yt, j /∈B∈| x∗
t ).
(7.32d)

160
7
Random Search Methods with Multiple Search Points
(b) In case of i.i.d. (independent, identically distributed) variables upper Y Subscript t comma j Baseline equals upper Y Subscript t Baseline commaYt, j = Yt, j equals 1 comma ellipsis comma r j =
1, . . . ,r, it is  
StartLayout 1st Row upper P left parenthesis upper X Subscript t plus 1 Superscript asterisk Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis equals 1 minus left parenthesis upper P left parenthesis upper Y Subscript t Baseline not an element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis right parenthesis Superscript r Baseline period EndLayoutP(X∗
t+1 ∈B∈| x∗
t ) = 1 −
(
P(Yt /∈B∈| x∗
t )
)r .
(7.32e) 
(c) For i.i.d. variables upper Y Subscript t comma j Baseline equals upper Y Subscript t Baseline comma j equals 1 comma ellipsis comma rYt, j = Yt, j = 1, . . . ,r we also have 
StartLayout 1st Row upper P left parenthesis upper X Subscript t plus 1 Superscript asterisk Baseline element of upper B Subscript epsilon Baseline right parenthesis equals 1 minus left parenthesis 1 minus upper P left parenthesis upper Y Subscript t Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis right parenthesis Superscript r Baseline greater than or equals 1 minus e Superscript r upper P left parenthesis upper Y Super Subscript t Superscript element of upper B Super Subscript epsilon Superscript vertical bar x Super Subscript t Super Superscript asterisk Superscript right parenthesis EndLayoutP(X∗
t+1 ∈B∈) = 1 −
(
1 −P(Yt ∈B∈| x∗
t )
)r ≥1 −er P(Yt∈B∈| x∗
t )
(7.32f) 
and therefore 
StartLayout 1st Row upper P left parenthesis upper X Subscript t plus 1 Superscript asterisk Baseline element of upper B Subscript epsilon Baseline vertical bar x Subscript t Superscript asterisk Baseline right parenthesis right arrow 1 comma r right arrow normal infinity period EndLayoutP(X∗
t+1 ∈B∈| x∗
t ) →1,
r →∞.
(7.32g) 
References 
1. Cover, T.M., Thomas, J.A.: Elements of Information Theory, 2nd edn. Wiley Series in Telecom-
munications and Signal Processing. Wiley-Interscience, Hoboken (2006) 
2. Martí, R., et al.: Multi-start methods. In: Martí, R., et al. (eds.) Handbook of Heuristics, pp. 
155–175. Springer International Publishing, Cham (2018)

Chapter 8 
Approximation of Feedback Control 
Systems 
Abstract Optimal feedback controls under stochastic uncertainty can be obtained in 
general by approximate methods only. In this chapter approximate feedback controls 
are obtained by Taylor expansion of the state function with respect to the gain matrix 
or the gain parameters. Since the state function is the solution of the state equation, 
hence, a ﬁrst-order system of differential equations, corresponding systems of dif-
ferential equations for the partial derivatives of the state function with respect to the 
gain matrix, the gain parameters, resp., can be obtained by partial differentiation of 
the state equation with respect to the gain matrix, the gain parameters. Corresponding 
approximate optimal stochastic feedback control problems are then derived. 
8.1 
Introduction 
In addition to the approximation method based on open-loop feedback control, pre-
sented in Sect. 3.2, an approximation procedure for feedback control systems is 
proposed by using Taylor expansion methods. 
Here, we consider nonlinear and linear control systems: 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals f left parenthesis t comma a comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 left parenthesis a right parenthesis comma EndLayout˙z(t) = f (t, a, z(t), u(t)),
t ≥t0
(8.1a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals f left parenthesis t comma a comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 left parenthesis a right parenthesis comma EndLayoutz(t0) = z0(a),
(8.1b) 
and 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t comma a right parenthesis z left parenthesis t right parenthesis plus upper B left parenthesis t comma a right parenthesis u left parenthesis t right parenthesis plus c left parenthesis t comma a right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 left parenthesis a right parenthesis period EndLayout˙z(t) = A(t, a)z(t) + B(t, a)u(t) + c(t, a),
t ≥t0
(8.2a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t comma a right parenthesis z left parenthesis t right parenthesis plus upper B left parenthesis t comma a right parenthesis u left parenthesis t right parenthesis plus c left parenthesis t comma a right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 left parenthesis a right parenthesis period EndLayoutz(t0) = z0(a).
(8.2b) 
In (8.1a)–(8.2b),t t denotes the continuous time,t 0t0 the initial time.z equals z left parenthesis t right parenthesisz = z(t) andu equals u left parenthesis t right parenthesisu =
u(t)are the statenn-vector and the controlmm-vector, resp..aa denotes a possibly random 
parameterrr-vector on a probability spaceleft parenthesis normal upper Omega comma German upper A comma script upper P right parenthesis(Ω, A, P). Moreover,f equals f left parenthesis t comma a comma z comma u right parenthesis f = f (t, a, z, u) is 
a sufﬁciently smooth function of left parenthesis t comma a comma z comma u right parenthesis(t, a, z, u). 
For the linear case upper A equals upper A left parenthesis t comma a right parenthesis comma upper B equals upper B left parenthesis t comma a right parenthesisA = A(t, a), B = B(t, a) are n times n comma m times mn × n, m × m matrices and 
c equals c left parenthesis t comma a right parenthesisc = c(t, a) is an nn-vector. They all may depend on time tt and parameter vector aa. 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_8 
161

162
8
Approximation of Feedback Control Systems
Furthermore, we assume that the systems of differential equations (8.1a)–(8.1b) 
and (8.2a)–(8.2b) have a unique solution 
StartLayout 1st Row z equals z left parenthesis t comma t 0 comma z 0 comma a comma u left parenthesis dot right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma EndLayoutz = z(t, t0, z0, a, u(·)),
t0 ≤t ≤t f ,
(8.3) 
on the time intervalsleft bracket t 0 semicolon t Subscript f Baseline right bracket[t0; t f ] under consideration and that this solution is sufﬁciently 
differentiable with respect to the parameters arising, e.g., in the feedback control 
function. 
Optimizing the underlying control system (8.1a)–(8.1b) or  (8.2a)–(8.2b), one has 
an objective function f equals upper F left parenthesis u left parenthesis dot right parenthesis right parenthesis f = F(u(·)) deﬁned by the total costs 
StartLayout 1st Row upper F left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals integral Subscript t 0 Superscript t Subscript f Baseline upper L left parenthesis t comma a comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t plus upper L Subscript f Baseline left parenthesis t Subscript f Baseline comma a comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis EndLayoutF(u(·)) :=
t f
∮
t0
L(t, a, z(t), u(t)) dt + L f (t f , a, z(t f ))
(8.4a) 
along the trajectory z equals z left parenthesis t right parenthesisz = z(t) and the terminal point z Subscript f Baseline equals z left parenthesis t Subscript f Baseline right parenthesisz f = z(t f ). In case of optimal 
control systems under stochastic uncertainty, the objective function is deﬁned by the 
expected total costs 
StartLayout 1st Row upper F left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper L left parenthesis t comma a left parenthesis omega right parenthesis comma z left parenthesis t comma omega right parenthesis comma u left parenthesis t comma omega right parenthesis right parenthesis d t plus upper L Subscript f Baseline left parenthesis t Subscript f Baseline comma a left parenthesis omega right parenthesis comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis right parenthesis period EndLayoutF(u(·)) := E
⎛
⎝
t f
∮
t0
L(t, a(ω), z(t, ω), u(t, ω)) dt + L f (t f , a(ω), z(t f , ω))
⎞
⎠.
(8.4b) 
8.2 
Control Laws 
There are three main types of control functions, see Sect. 3.2: 
(i) open-loop control u equals u left parenthesis t right parenthesis comma t greater than or equals t 0u = u(t), t ≥t0
Here, the control is amm-vector valued function on the time intervalleft bracket t 0 semicolon t Subscript f Baseline right bracket[t0; t f ] with 
a certain initial and terminal time t 0 comma t Subscript f Baselinet0, t f . 
(ii) closed-loop or (state-) feedback control u equals u left parenthesis t comma z left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0u = u(t, z(t)), t ≥t0
The (state-) feedback control is a function depending on time tt and the state 
z equals z left parenthesis t right parenthesisz = z(t) arising at time tt. More general, the feedback control can be deﬁned 
by a function of time tt and the information German upper A Subscript tAt available up to time tt. In many  
cases linear feedback functions 
StartLayout 1st Row u left parenthesis t right parenthesis equals u 0 left parenthesis t right parenthesis plus upper G left parenthesis t right parenthesis z left parenthesis t right parenthesis comma t greater than or equals t 0 EndLayoutu(t) = u0(t) + G(t)z(t),
t ≥t0
(8.5) 
are taken, where upper G equals upper G left parenthesis t right parenthesisG = G(t) is the so-called n times mn × m gain matrix which may 
depend on time tt. Furthermore, u 0 equals u 0 left parenthesis t right parenthesisu0 = u0(t) is a certain function on time tt.

8.3 Linear State-Feedback Control Systems
163
(iii) open-loop feedback control 
This is an approximate feedback control obtained by means of repeated open-
loop control: 
Based on the time intervalleft bracket t 0 semicolon t Subscript f Baseline right bracket[t0; t f ], consider an intermediate time point, selected 
continuously 
t Subscript b Baseline equals t comma t 0 less than or equals t less than t Subscript f Baseline commatb = t, t0 ≤t < t f ,
(8.6a) 
or selected stepwise with a time step Delta t greater than 0Δt > 0, 
t Subscript b Baseline equals t Subscript k Baseline colon equals t 0 plus k Delta t less than t Subscript f Baseline comma k equals 0 comma 1 comma 2 comma ellipsis commatb = tk := t0 + kΔt < t f , k = 0, 1, 2, . . . ,
(8.6b) 
and the informationGerman upper A Subscript t Sub Subscript bAtb, known up to timet Subscript btb, as, e.g., the state vectorz Subscript b Baseline equals z left parenthesis t Subscript b Baseline right parenthesiszb = z(tb)
at time t Subscript btb. Then, determine the open-loop control 
u equals u Subscript left bracket t Sub Subscript b Subscript semicolon t Sub Subscript f Subscript right bracket Baseline left parenthesis s semicolon t Subscript b Baseline semicolon German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals s less than or equals t Subscript f Baseline commau = u[tb;t f ](s; tb; Atb), tb ≤s ≤t f ,
(8.6c) 
for the remaining time interval left bracket t Subscript b Baseline semicolon t Subscript f Baseline right bracket[tb; t f ]. Taking then only the control value at 
time s equals t Subscript bs = tb, the open-loop feedback control is deﬁned by 
u Subscript upper O upper L upper F Baseline left parenthesis t Subscript b Baseline right parenthesis colon equals u Subscript left bracket t Sub Subscript b Subscript semicolon t Sub Subscript f Subscript right bracket Baseline left parenthesis t Subscript b Baseline semicolon t Subscript f Baseline semicolon German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesisuOLF(tb) := u[tb;t f ](tb; t f ; Atb)
(8.6d) 
continuously, stepwise, resp., fort Subscript b Baseline equals t comma t 0 less than or equals t less than t Subscript f Baselinetb = t, t0 ≤t < t f , ort Subscript b Baseline equals t Subscript k Baseline colon equals t 0 plus k Delta t less than t Subscript f Baseline comma k equals 0 comma 1 comma 2 comma ellipsistb = tk := t0 + kΔt <
t f , k = 0, 1, 2, . . . . 
8.3 
Linear State-Feedback Control Systems 
We start our feedback control approximation method with the linear control system 
(8.2a)–(8.2b) and the state-feedback control (8.5). 
Hence, for the statenn-vectorz equals z left parenthesis t right parenthesisz = z(t) we have the system of ﬁrst-order differential 
equations 
StartLayout 1st Row ModifyingAbove z With dot left parenthesis t right parenthesis equals upper A left parenthesis t right parenthesis z left parenthesis t right parenthesis plus upper B left parenthesis t right parenthesis left parenthesis u 0 left parenthesis t right parenthesis plus upper G z left parenthesis t right parenthesis right parenthesis plus c left parenthesis t right parenthesis comma t greater than or equals t 0 period EndLayout˙z(t) = A(t)z(t) + B(t) (u0(t) + Gz(t)) + c(t),
t ≥t0.
(8.7) 
The m times nm × n gain matrix upper GG is represented by 
StartLayout 1st Row upper G equals sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline upper E Subscript i j EndLayoutG =
m
∑
i=1
n
∑
j=1
gi j Ei j
(8.8a) 
with the elements g Subscript i jgi j of the matrix upper GG and the m times nm × n matrices 
StartLayout 1st Row upper E Subscript i j Baseline equals left parenthesis e Subscript l k Superscript left parenthesis i j right parenthesis Baseline right parenthesis Subscript l comma k equals 1 comma ellipsis m comma n EndLayoutEi j =
(
e(i j)
lk
)
l,k=1,...m,n
(8.8b)

164
8
Approximation of Feedback Control Systems
with 
StartLayout 1st Row 1st Column e Subscript l k Superscript left parenthesis i j right parenthesis Baseline equals 1 comma left parenthesis l comma k right parenthesis equals left parenthesis i comma j right parenthesis comma 2nd Column Blank 3rd Column e Subscript l k Superscript left parenthesis i j right parenthesis Baseline equals 0 comma left parenthesis l comma k right parenthesis not equals left parenthesis i comma j right parenthesis period EndLayoute(i j)
lk
= 1, (l, k) = (i, j),
e(i j)
lk
= 0, (l, k) /= (i, j).
(8.8c) 
Inserting (8.8a) into (8.7), we get 
StartLayout 1st Row ModifyingAbove z With dot equals upper A left parenthesis t right parenthesis z plus upper B left parenthesis t right parenthesis left parenthesis u 0 left parenthesis t right parenthesis plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline upper E Subscript i j Baseline z right parenthesis plus c left parenthesis t right parenthesis comma t greater than or equals t 0 period EndLayout˙z = A(t)z + B(t)
⎛
⎝u0(t) +
m
∑
i=1
n
∑
j=1
gi j Ei jz
⎞
⎠+ c(t),
t ≥t0.
(8.9a) 
Now it holds 
StartLayout 1st Row upper E Subscript i j Baseline z equals z Subscript j Baseline e Subscript j Baseline comma i equals 1 comma ellipsis m comma j equals 1 comma ellipsis comma n EndLayoutEi jz = z je j,
i = 1, . . . m,
j = 1, . . . , n
(8.9b) 
and with theii-th columne Subscript iei of them times mm × m unit matrixupper II and theii-th columnb Subscript ibi ofupper BB, 
StartLayout 1st Row upper B left parenthesis t right parenthesis upper E Subscript i j Baseline z equals upper B left parenthesis t right parenthesis z Subscript j Baseline e Subscript i Baseline equals z Subscript j Baseline b Subscript i Baseline comma i equals 1 comma ellipsis comma m comma j equals 1 comma ellipsis comma n period EndLayoutB(t)Ei jz = B(t)z jei = z jbi,
i = 1, . . . , m,
j = 1, . . . , n.
(8.9c) 
Because of (8.9b)–(8.9c), system (8.9a) can be represented by 
StartLayout 1st Row ModifyingAbove z With dot equals upper A left parenthesis t right parenthesis z plus upper B left parenthesis t right parenthesis u 0 left parenthesis t right parenthesis plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline z Subscript j Baseline b Subscript i Baseline left parenthesis t right parenthesis plus c left parenthesis t right parenthesis comma t greater than or equals t 0 period EndLayout˙z = A(t)z + B(t)u0(t) +
m
∑
i=1
n
∑
j=1
gi jz jbi(t) + c(t),
t ≥t0.
(8.10) 
8.3.1 
Taylor Expansion of the Feedback Control System with 
Respect to the Gain Matrix upper G equals left parenthesis g Subscript i j Baseline right parenthesisG = (gi j)
Based on calculus, see, e.g., [ 1, 2], we assume that for the initial state z 0z0, the prior 
control functionu 0 equals u 0 left parenthesis t right parenthesisu0 = u0(t) and the elementsg Subscript i jgi j of the gain matrixupper GG under consid-
eration there exists a unique solution 
StartLayout 1st Row z equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma g Subscript i j Baseline comma i equals 1 comma ellipsis m comma j equals 1 comma ellipsis n right parenthesis comma t greater than or equals t 0 EndLayoutz = z(t, t0, z0, u0(·), gi j, i = 1, . . . m, j = 1, . . . n),
t ≥t0
(8.11) 
of (8.10) on the time interval left bracket t 0 semicolon t Subscript f Baseline right bracket[t0; t f ]. 
Moreover, we assume that the state function (8.11) is sufﬁciently often differen-
tiable with respect to the gain elementsg Subscript i j Baseline comma 1 equals 1 comma ellipsis comma m j equals 1 comma ellipsis comma ngi j, 1 = 1, . . . , m j = 1, . . . , n and that the 
time derivative StartFraction d Over d t EndFraction d
dt and the partial derivatives StartFraction partial differential Over partial differential g Subscript i j Baseline EndFraction ∂
∂gi j can be interchanged. 
Starting now the expansion of the solution (8.11) of the state equation (8.10) with 
respect to the elements g Subscript i jgi j of upper GG at upper G equals 0G = 0, for upper G equals 0G = 0 we get the open-loop system: 
StartLayout 1st Row 1st Column ModifyingAbove z With dot 2nd Column equals upper A left parenthesis t right parenthesis z left parenthesis t right parenthesis plus upper B left parenthesis t right parenthesis u 0 left parenthesis t right parenthesis plus c left parenthesis t right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 period EndLayout˙z = A(t)z(t) + B(t)u0(t) + c(t),
t ≥t0
(8.12a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot 2nd Column equals upper A left parenthesis t right parenthesis z left parenthesis t right parenthesis plus upper B left parenthesis t right parenthesis u 0 left parenthesis t right parenthesis plus c left parenthesis t right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 period EndLayoutz(t0) = z0.
(8.12b)

8.3 Linear State-Feedback Control Systems
165
If normal upper Phi equals normal upper Phi left parenthesis t comma s right parenthesisϕ = ϕ(t, s) denotes the fundamental matrix of the system matrix upper A equals upper A left parenthesis t right parenthesisA = A(t), 
(8.12a)–(8.12b) has the solution 
StartLayout 1st Row 1st Column z left parenthesis t right parenthesis 2nd Column equals z left parenthesis t comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis 2nd Row 1st Column Blank 2nd Column equals normal upper Phi left parenthesis t comma t 0 right parenthesis z 0 plus integral Subscript t 0 Superscript t Baseline normal upper Phi left parenthesis t comma s right parenthesis left parenthesis upper B left parenthesis s right parenthesis u 0 left parenthesis s right parenthesis plus c left parenthesis s right parenthesis right parenthesis d s comma t greater than or equals t 0 period EndLayoutz(t) = z(t, z0, u0(·), 0)
= ϕ(t, t0)z0 +
t∮
t0
ϕ(t, s) (B(s)u0(s) + c(s)) ds,
t ≥t0.
(8.12c) 
According to the above assumptions, for the partial derivatives 
StartLayout 1st Row StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis equals StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis comma l equals 1 comma ellipsis comma m j equals 1 comma ellipsis comma n EndLayout ∂z
∂glk
(t) = ∂z
∂glk
(t, t0, z0, u0(·), G),
l = 1, . . . , m j = 1, . . . , n
we get the following systems of differential equations (variational or perturbation 
equations): 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction plus z Subscript k Baseline b Subscript l Baseline plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline StartFraction partial differential z Subscript j Baseline Over partial differential g Subscript l k Baseline EndFraction b Subscript i Baseline comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma l equals 1 comma ellipsis m comma k equals 1 comma ellipsis n period EndLayout d
dt
∂z
∂glk
(t) = A(t) ∂z
∂glk
+ zkbl +
m
∑
i=1
n
∑
j=1
gi j
∂z j
∂glk
bi,
t ≥t0
(8.13a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction plus z Subscript k Baseline b Subscript l Baseline plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline StartFraction partial differential z Subscript j Baseline Over partial differential g Subscript l k Baseline EndFraction b Subscript i Baseline comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma l equals 1 comma ellipsis m comma k equals 1 comma ellipsis n period EndLayout ∂z
∂glk
(t0) = 0,
l = 1, . . . m, k = 1, . . . n .
(8.13b) 
Taking upper G equals 0G = 0 in (8.13a)–(8.13b), for the partial derivatives 
StartLayout 1st Row StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis equals StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis comma l equals 1 comma ellipsis m comma j equals 1 comma ellipsis n comma EndLayout ∂z
∂glk
(t) = ∂z
∂glk
(t, t0, z0, u0(·), G),
l = 1, . . . m, j = 1, . . . n,
we have the system of linear differential equations 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis plus z Subscript k Baseline left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis t right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma EndLayout d
dt
∂z
∂glk
(t) = A(t) ∂z
∂glk
(t) + zk(t, t0, z0, u0(t), 0)bl(t),
t ≥t0
(8.14a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis plus z Subscript k Baseline left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis t right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma EndLayout ∂z
∂glk
(t0) = 0,
(8.14b) 
where function z Subscript k Baseline left parenthesis t right parenthesis equals z Subscript k Baseline left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis t right parenthesis comma 0 right parenthesiszk(t) = zk(t, t0, z0, u0(t), 0) is determined by (8.12c). Correspond-
ing to (8.12c), the solution of (8.14a)–(8.14b) reads 
StartLayout 1st Row StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 period z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis equals integral Subscript t 0 Superscript t Baseline normal upper Phi left parenthesis t comma s right parenthesis z Subscript k Baseline left parenthesis s comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis s right parenthesis d s comma t greater than or equals t 0 period EndLayout ∂z
∂glk
(t, t0.z0, u0(·), 0) =
t∮
t0
ϕ(t, s)zk(s, t0, z0, u0(·), 0)bl(s) ds,
t ≥t0.
(8.15) 
By further partial differentiation of (8.13a)–(8.13b), for the second-order partial 
derivatives we get

166
8
Approximation of Feedback Control Systems
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t right parenthesis plus StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript l k Baseline EndFraction b Subscript l Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline StartFraction partial differential squared z Subscript j Baseline Over g Subscript l k Superscript 2 Baseline EndFraction b Subscript i Baseline StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript l k Baseline EndFraction b Subscript l Baseline left parenthesis t right parenthesis comma 3rd Column Blank 4th Column t greater than or equals t 0 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma EndLayout d
dt
∂2z
∂g2
lk
(t) = A(t) ∂2z
∂g2
lk
(t) + ∂zk
∂glk
bl(t)
+
m
∑
i=1
n
∑
j=1
gi j
∂2z j
g2
lk
bi
∂zk
∂glk
bl(t),
t ≥t0
(8.16a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t right parenthesis plus StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript l k Baseline EndFraction b Subscript l Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline StartFraction partial differential squared z Subscript j Baseline Over g Subscript l k Superscript 2 Baseline EndFraction b Subscript i Baseline StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript l k Baseline EndFraction b Subscript l Baseline left parenthesis t right parenthesis comma 3rd Column Blank 4th Column t greater than or equals t 0 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma EndLayout ∂2z
∂g2
lk
(t0) = 0,
(8.16b) 
and for left parenthesis u comma v right parenthesis not equals left parenthesis l comma k right parenthesis(u, v) /= (l, k)
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z squared Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis plus StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript u v Baseline EndFraction b Subscript l Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline StartFraction partial differential squared z Subscript j Baseline Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis b Subscript i Baseline plus StartFraction partial differential z Subscript v Baseline Over partial differential g Subscript l k Baseline EndFraction b Subscript u Baseline left parenthesis t right parenthesis comma 3rd Column Blank 4th Column t greater than or equals t 0 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout d
dt
∂z2
∂guv∂glk
(t) = A(t)
∂2z
∂guv∂glk
(t) + ∂zk
∂guv
bl(t)
+
m
∑
i=1
n
∑
j=1
gi j
∂2z j
∂guv∂glk
(t)bi + ∂zv
∂glk
bu(t),
t ≥t0
(8.16c) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z squared Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis plus StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript u v Baseline EndFraction b Subscript l Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline StartFraction partial differential squared z Subscript j Baseline Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis b Subscript i Baseline plus StartFraction partial differential z Subscript v Baseline Over partial differential g Subscript l k Baseline EndFraction b Subscript u Baseline left parenthesis t right parenthesis comma 3rd Column Blank 4th Column t greater than or equals t 0 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout
∂2z
∂guv∂glk
(t0) = 0.
(8.16d) 
Taking upper G equals 0G = 0 in (8.16a)–(8.16d) for the derivatives 
StartLayout 1st Row StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis comma StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis EndLayout ∂2z
∂g2
lk
(t, t0, z0, u0(·), 0),
∂2z
∂guv∂glk
(t, t0, z0, u0(·), 0)
we have the following systems of linear differential equations: 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z squared Over partial differential g Subscript l k Superscript 2 Baseline EndFraction plus 2 StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z squared Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis plus StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript u v Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis 6th Row 1st Column Blank 2nd Column plus StartFraction partial differential z Subscript v Baseline Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript u Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 7th Row 1st Column Blank 8th Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout d
dt
∂2z
∂g2
lk
(t) = A(t) ∂z2
∂g2
lk
+ 2 ∂zk
∂glk
(t, t0, z0, u0(·), 0)bl(t),
t ≥t0
(8.17a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z squared Over partial differential g Subscript l k Superscript 2 Baseline EndFraction plus 2 StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z squared Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis plus StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript u v Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis 6th Row 1st Column Blank 2nd Column plus StartFraction partial differential z Subscript v Baseline Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript u Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 7th Row 1st Column Blank 8th Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout ∂2z
∂g2
lk
(t0) = 0
(8.17b) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z squared Over partial differential g Subscript l k Superscript 2 Baseline EndFraction plus 2 StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z squared Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis plus StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript u v Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis 6th Row 1st Column Blank 2nd Column plus StartFraction partial differential z Subscript v Baseline Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript u Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 7th Row 1st Column Blank 8th Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout d
dt
∂z2
∂guv∂glk
(t) = A(t)
∂2z
∂guv∂glk
(t) + ∂zk
∂guv
(t, t0, z0, u0(·), 0)bl(t)
+ ∂zv
∂glk
(t, t0, z0, u0(·), 0)bu(t),
t ≥t0
(8.17c) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z squared Over partial differential g Subscript l k Superscript 2 Baseline EndFraction plus 2 StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript l k Superscript 2 Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z squared Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis plus StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript u v Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis t right parenthesis 6th Row 1st Column Blank 2nd Column plus StartFraction partial differential z Subscript v Baseline Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript u Baseline left parenthesis t right parenthesis comma t greater than or equals t 0 7th Row 1st Column Blank 8th Row 1st Column StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout
∂2z
∂guv∂glk
(t0) = 0.
(8.17d) 
Consequently, corresponding to the ﬁrst-order derivatives ofz equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesisz = z(t, t0, z0, u0(·), G)
atupper G equals 0G = 0 and according to (8.17a)–(8.17d), the second-order derivatives can be rep-
resented by

8.3 Linear State-Feedback Control Systems
167
StartLayout 1st Row 1st Column Blank 2nd Column StartFraction partial differential squared z Over partial differential g Subscript u v Baseline partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis 2nd Row 1st Column Blank 2nd Column equals integral Subscript t 0 Superscript t Baseline normal upper Phi left parenthesis t comma s right parenthesis left parenthesis StartFraction partial differential z Subscript k Baseline Over partial differential g Subscript u v Baseline EndFraction left parenthesis s comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript l Baseline left parenthesis s right parenthesis 3rd Row 1st Column Blank 2nd Column plus StartFraction partial differential z Subscript v Baseline Over partial differential g Subscript l k Baseline EndFraction left parenthesis s comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis b Subscript u Baseline left parenthesis s right parenthesis right parenthesis d s comma t greater than or equals t 0 period EndLayout
∂2z
∂guv∂glk
(t, t0, z0, u0(·), 0)
=
t∮
t0
ϕ(t, s)
( ∂zk
∂guv
(s, t0, z0, u0(·), 0)bl(s)
+ ∂zv
∂glk
(s, t0, z0, u0(·), 0)bu(s)
(
ds,
t ≥t0.
(8.18) 
According to (8.12c), (8.15), (8.18) with further partial differentiation of (8.17a)– 
(8.17d) and stepwise setting upper G equals 0G = 0, we get the following result: 
Theorem 8.1 For each order p equals 1 comma 2 comma ellipsisp = 1, 2, . . . the partial derivatives with respect to 
the gain elements g Subscript i jgi j at upper G equals 0G = 0 of the state function z equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesisz = z(t, t0, z0, u0(·), G) of the 
feedback control system (8.7), (8.10) resp., have an integral representation involving 
the p minus 1p −1th order partial derivatives of z equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesisz = z(t, t0, z0, u0(·), G) with respect to g Subscript i jgi j
at upper G equals 0G = 0. 
8.3.2 
Time-Dependent Gain Matrices 
Considering now time-dependent gain matricesupper G equals upper G left parenthesis t right parenthesisG = G(t), we suppose thatupper G left parenthesis t right parenthesisG(t) can 
be represented by 
StartLayout 1st Row 1st Column upper G left parenthesis t right parenthesis 2nd Column equals sigma summation Underscript s equals 0 Overscript ModifyingAbove s With quotation dash Endscripts tau Subscript s Baseline left parenthesis t right parenthesis upper G Subscript s Baseline equals upper G 0 plus sigma summation Underscript s equals 1 Overscript ModifyingAbove s With quotation dash Endscripts tau Subscript s Baseline left parenthesis t right parenthesis upper G Subscript s EndLayoutG(t) =
s
∑
s=0
τs(t)Gs = G0 +
s
∑
s=1
τs(t)Gs
(8.19a) 
with time functionstau Subscript s Baseline equals tau Subscript s Baseline left parenthesis t right parenthesis comma s equals 0 comma 1 comma ellipsis comma s overbar commaτs = τs(t), s = 0, 1, . . . , ¯s, andtau 0 left parenthesis t right parenthesis colon equals 1τ0(t) := 1 as, e.g., for the pow-
erstau Subscript s Baseline left parenthesis t right parenthesis equals t Superscript s Baseline comma s equals 0 comma 1 comma ellipsis comma ModifyingAbove s With quotation dash periodτs(t) = ts, s = 0, 1, . . . , s. Moreover,upper G Subscript s Baseline comma s comma equals 0 comma ellipsis comma ModifyingAbove s With quotation dash commaGs, s, = 0, . . . , s, are ﬁxedm times nm × n matri-
ces, represented, cf. (8.8a)–(8.8c), by their elements g Subscript s Baseline Subscript i jgsi j, hence 
StartLayout 1st Row 1st Column upper G Subscript s 2nd Column equals sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript s Baseline Subscript i j Baseline upper E Subscript i j Baseline period EndLayoutGs =
m
∑
i=1
n
∑
j=1
gsi j Ei j.
(8.19b) 
Thus, we have 
StartLayout 1st Row 1st Column upper G left parenthesis t right parenthesis 2nd Column equals sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts left parenthesis sigma summation Underscript s equals 0 Overscript ModifyingAbove s With quotation dash Endscripts tau Subscript s Baseline left parenthesis t right parenthesis g Subscript s Baseline Subscript i j Baseline right parenthesis upper E Subscript i j Baseline period EndLayoutG(t) =
m
∑
i=1
n
∑
j=1
( s
∑
s=0
τs(t)gsi j
)
Ei j.
(8.19c) 
Inserting (8.19c) into the feedback control system (8.7), due to (8.9b)–(8.9c) and 
corresponding to case (8.10) with ﬁxed matrices upper G Subscript sGs, we get

168
8
Approximation of Feedback Control Systems
StartLayout 1st Row 1st Column ModifyingAbove z With dot 2nd Column equals upper A left parenthesis t right parenthesis z left parenthesis t right parenthesis plus upper B left parenthesis t right parenthesis u 0 left parenthesis t right parenthesis plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts left parenthesis sigma summation Underscript s equals 0 Overscript ModifyingAbove s With quotation dash Endscripts tau Subscript s Baseline left parenthesis t right parenthesis g Subscript s Baseline Subscript i j Baseline right parenthesis z Subscript j Baseline left parenthesis t right parenthesis b Subscript i Baseline left parenthesis t right parenthesis plus c left parenthesis t right parenthesis comma t greater than or equals t 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 period EndLayout˙z = A(t)z(t) + B(t)u0(t) +
m
∑
i=1
n
∑
j=1
( s
∑
s=0
τs(t)gsi j
)
z j(t)bi(t) + c(t),
t ≥t0,
(8.20a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot 2nd Column equals upper A left parenthesis t right parenthesis z left parenthesis t right parenthesis plus upper B left parenthesis t right parenthesis u 0 left parenthesis t right parenthesis plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts left parenthesis sigma summation Underscript s equals 0 Overscript ModifyingAbove s With quotation dash Endscripts tau Subscript s Baseline left parenthesis t right parenthesis g Subscript s Baseline Subscript i j Baseline right parenthesis z Subscript j Baseline left parenthesis t right parenthesis b Subscript i Baseline left parenthesis t right parenthesis plus c left parenthesis t right parenthesis comma t greater than or equals t 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 period EndLayoutz(t0) = z0.
(8.20b) 
Corresponding to (8.10) and (8.11), we also assume, that for the initial state z 0z0, the  
prior control u 0 equals u 0 left parenthesis t right parenthesisu0 = u0(t) and the time-dependent gain matrix upper G equals upper G left parenthesis t right parenthesisG = G(t), (8.20a)– 
(8.20b) has a unique solution 
StartLayout 1st Row z equals z left parenthesis t comma t 0 comma z 0 comma u Subscript o Baseline left parenthesis dot right parenthesis comma g Subscript s Baseline Subscript i j Baseline comma 0 less than or equals s less than or equals ModifyingAbove s With quotation dash comma 1 less than or equals i less than or equals m comma 1 less than or equals j less than or equals n right parenthesis EndLayoutz = z(t, t0, z0, uo(·), gsi j, 0 ≤s ≤s, 1 ≤i ≤m, 1 ≤j ≤n)
(8.21) 
on the time interval left bracket t 0 semicolon t Subscript f Baseline right bracket[t0; t f ] under consideration. Moreover, we suppose, see [ 1, 2], 
that the state function (8.21) is sufﬁciently often differentiable with respect to the 
gain parameters g Subscript s Baseline Subscript i jgsi j. 
According to the above remarks, also in the time-dependent case, the partial 
derivatives with respect to the gain parametersg Subscript s Baseline Subscript i j Baseline comma s equals 0 comma ellipsis comma ModifyingAbove s With quotation dash comma i equals 1 comma ellipsis comma m comma j equals 1 comma ellipsis comma ngsi j, s = 0, . . . , s, i = 1, . . . , m, j =
1, . . . , n of the state function (8.21) can be obtained by the same method as for 
constant gain matrices. 
We show this for the ﬁrst-order derivatives of (8.21) with respect to a gain param-
eter g Subscript r Baseline Subscript l kgrlk with 0 less than or equals r less than or equals ModifyingAbove s With quotation dash comma 1 less than or equals l less than or equals m comma 1 less than or equals k less than or equals n0 ≤r ≤s, 1 ≤l ≤m, 1 ≤k ≤n. 
By partial differentiation of (8.20a)–(8.20b) with respect to g Subscript r Baseline Subscript l kgrlk we get 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction plus StartFraction partial differential Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction sigma summation Underscript s equals 0 Overscript ModifyingAbove s With quotation dash Endscripts sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript s Baseline Subscript i j Baseline left parenthesis tau Subscript s Baseline left parenthesis t right parenthesis z Subscript j Baseline left parenthesis t right parenthesis b Subscript i Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction plus tau Subscript r Baseline left parenthesis t right parenthesis z Subscript k Baseline left parenthesis t right parenthesis b Subscript l Baseline left parenthesis t right parenthesis 3rd Row 1st Column Blank 2nd Column plus sigma summation Underscript s equals 0 Overscript ModifyingAbove s With quotation dash Endscripts sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript s Baseline Subscript i j Baseline StartFraction partial differential Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis tau Subscript s Baseline left parenthesis t right parenthesis z Subscript j Baseline left parenthesis t right parenthesis b Subscript i Baseline left parenthesis t right parenthesis right parenthesis comma 4th Row 1st Column Blank 5th Row 1st Column StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout d
dt
∂z
∂grlk
(t) = A(t) ∂z
∂grlk
+
∂
∂grlk
s
∑
s=0
m
∑
i=1
n
∑
j=1
gsi j
(
τs(t)z j(t)bi(t)
)
= A(t) ∂z
∂grlk
+ τr(t)zk(t)bl(t)
+
s
∑
s=0
m
∑
i=1
n
∑
j=1
gsi j
∂
∂grlk
(
τs(t)z j(t)bi(t)
)
,
(8.22a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction plus StartFraction partial differential Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction sigma summation Underscript s equals 0 Overscript ModifyingAbove s With quotation dash Endscripts sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript s Baseline Subscript i j Baseline left parenthesis tau Subscript s Baseline left parenthesis t right parenthesis z Subscript j Baseline left parenthesis t right parenthesis b Subscript i Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction plus tau Subscript r Baseline left parenthesis t right parenthesis z Subscript k Baseline left parenthesis t right parenthesis b Subscript l Baseline left parenthesis t right parenthesis 3rd Row 1st Column Blank 2nd Column plus sigma summation Underscript s equals 0 Overscript ModifyingAbove s With quotation dash Endscripts sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript s Baseline Subscript i j Baseline StartFraction partial differential Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis tau Subscript s Baseline left parenthesis t right parenthesis z Subscript j Baseline left parenthesis t right parenthesis b Subscript i Baseline left parenthesis t right parenthesis right parenthesis comma 4th Row 1st Column Blank 5th Row 1st Column StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout ∂z
∂grlk
(t0) = 0.
(8.22b) 
Setting now g Subscript s Baseline Subscript i j Baseline equals 0gsi j = 0 for all indices s comma i comma js, i, j for the partial derivative 
StartLayout 1st Row StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t right parenthesis equals StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t comma t 0 period z 0 period u 0 left parenthesis dot right parenthesis comma g Subscript s Baseline Subscript i j Baseline equals 0 for all s comma i comma j right parenthesis comma EndLayout ∂z
∂grlk
(t) =
∂z
∂grlk
(t, t0.z0.u0(·), gsi j = 0 for all s, i, j),
(8.22c)

8.4 Optimal Feedback Control Problem
169
we have the ordinary linear system of differential equations 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction plus tau Subscript r Baseline left parenthesis t right parenthesis z Subscript k Baseline left parenthesis t right parenthesis b Subscript l Baseline left parenthesis t right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma EndLayout d
dt
∂z
∂grlk
(t) = A(t) ∂z
∂grlk
+ τr(t)zk(t)bl(t),
(8.23a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction plus tau Subscript r Baseline left parenthesis t right parenthesis z Subscript k Baseline left parenthesis t right parenthesis b Subscript l Baseline left parenthesis t right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential z Over partial differential g Subscript r Baseline Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma EndLayout ∂z
∂grlk
(t0) = 0,
(8.23b) 
with z Subscript k Baseline left parenthesis t right parenthesis equals z Subscript k Baseline left parenthesis t comma t 0 comma u 0 left parenthesis dot right parenthesis comma g Subscript s Baseline Subscript i j Baseline equals 0 for all s comma i comma j right parenthesiszk(t) = zk(t, t0, u0(·), gsi j = 0 for all s, i, j). 
Remark 8.1 In the time-dependent case (8.19a)–(8.19b), the partial derivatives of 
the state functionz left parenthesis dot right parenthesisz(·) atupper G equals 0G = 0 have the same properties as stated in theorem 8.1 for 
the time-independent case treated in Sect. 8.3.1. 
8.4 
Optimal Feedback Control Problem 
Based on the Taylor expansion of the state function (8.11), we now present an approx-
imate optimal feedback control problem for the case of a time-independent gain 
matrix upper G equals left parenthesis g Subscript i j Baseline right parenthesisG = (gi j) , including a ﬁrst-order approximation of the state function z left parenthesis dot right parenthesisz(·)
with respect to upper GG at upper G equals 0G = 0. Hence, let 
StartLayout 1st Row 1st Column z Superscript left parenthesis 1 right parenthesis 2nd Column equals z Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 comma u Subscript o Baseline left parenthesis dot right parenthesis comma upper G right parenthesis 2nd Row 1st Column Blank 2nd Column colon equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts StartFraction partial differential z Over partial differential g Subscript i j Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis g Subscript i j EndLayoutz(1) = z(1)(t, t0, z0, uo(·), G)
:= z(t, t0, z0, u0(·), 0) +
m
∑
i=1
n
∑
j=1
∂z
∂gi j
(t, t0, z0, u0(·), 0)gi j
(8.24a) 
denote the ﬁrst-order approximation of the state function (8.11), where the zero-
and ﬁrst-order derivatives at left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis(t, t0, z0, u0(·), 0) are determined by the systems of 
linear differential equations (8.12a)–(8.12b) and (8.14a)–(8.14b). Moreover, using 
here the approximate state function (8.24a), the feedback control function (8.5) can 
be approximated by 
StartLayout 1st Row 1st Column u Superscript left parenthesis 1 right parenthesis 2nd Column equals u Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis colon equals u 0 left parenthesis t right parenthesis plus upper G z Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis period EndLayoutu(1) = u(1)(t, t0, z0, u0(·), G) := u0(t) + Gz(1)(t, t0, z0, u0(·), G).
(8.24b) 
In the optimal feedback control problem with an objective function (8.4b) we now  
apply the state and feedback control functions (8.24a)–(8.24b). This yields the fol-
lowing approximate optimal feedback control problem under stochastic uncertainty

170
8
Approximation of Feedback Control Systems
StartLayout 1st Row 1st Column min 2nd Column upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper L left parenthesis t comma a left parenthesis omega right parenthesis comma z Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 left parenthesis omega right parenthesis comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis comma u Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 left parenthesis omega right parenthesis comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis right parenthesis d t 2nd Row 1st Column Blank 2nd Column plus upper L Subscript f Baseline left parenthesis t Subscript f Baseline comma a left parenthesis omega right parenthesis comma z Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t Subscript f Baseline comma t 0 comma z 0 left parenthesis omega right parenthesis comma a left parenthesis omega right parenthesis comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis right parenthesis right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column Blank 5th Row 1st Column Blank 2nd Column conditions left parenthesis 8.12 a right parenthesis minus left parenthesis 8.12 b right parenthesis comma left parenthesis 8.14 a right parenthesis minus left parenthesis 8.14 b right parenthesis for z Superscript left parenthesis 1 right parenthesis Baseline comma u Superscript left parenthesis 1 right parenthesis Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column u 0 left parenthesis dot right parenthesis element of upper U comma upper G element of normal upper Gamma comma EndLayout min
E
⎛
⎝
t f
∮
t0
L
(
t, a(ω), z(1)(t, t0, z0(ω), u0(·), G), u(1)(t, t0, z0(ω), u0(·), G)
)
dt
+L f
(
t f , a(ω), z(1)(t f , t0, z0(ω), a(ω), u0(·), G)
))
(8.25a) 
StartLayout 1st Row 1st Column min 2nd Column upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper L left parenthesis t comma a left parenthesis omega right parenthesis comma z Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 left parenthesis omega right parenthesis comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis comma u Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 left parenthesis omega right parenthesis comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis right parenthesis d t 2nd Row 1st Column Blank 2nd Column plus upper L Subscript f Baseline left parenthesis t Subscript f Baseline comma a left parenthesis omega right parenthesis comma z Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t Subscript f Baseline comma t 0 comma z 0 left parenthesis omega right parenthesis comma a left parenthesis omega right parenthesis comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis right parenthesis right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column Blank 5th Row 1st Column Blank 2nd Column conditions left parenthesis 8.12 a right parenthesis minus left parenthesis 8.12 b right parenthesis comma left parenthesis 8.14 a right parenthesis minus left parenthesis 8.14 b right parenthesis for z Superscript left parenthesis 1 right parenthesis Baseline comma u Superscript left parenthesis 1 right parenthesis Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column u 0 left parenthesis dot right parenthesis element of upper U comma upper G element of normal upper Gamma comma EndLayouts.t.
conditions (8.12a) −(8.12b), (8.14a) −(8.14b) for z(1), u(1)
(8.25b) 
StartLayout 1st Row 1st Column min 2nd Column upper E left parenthesis integral Subscript t 0 Superscript t Subscript f Baseline Baseline upper L left parenthesis t comma a left parenthesis omega right parenthesis comma z Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 left parenthesis omega right parenthesis comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis comma u Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 left parenthesis omega right parenthesis comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis right parenthesis d t 2nd Row 1st Column Blank 2nd Column plus upper L Subscript f Baseline left parenthesis t Subscript f Baseline comma a left parenthesis omega right parenthesis comma z Superscript left parenthesis 1 right parenthesis Baseline left parenthesis t Subscript f Baseline comma t 0 comma z 0 left parenthesis omega right parenthesis comma a left parenthesis omega right parenthesis comma u 0 left parenthesis dot right parenthesis comma upper G right parenthesis right parenthesis right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column Blank 5th Row 1st Column Blank 2nd Column conditions left parenthesis 8.12 a right parenthesis minus left parenthesis 8.12 b right parenthesis comma left parenthesis 8.14 a right parenthesis minus left parenthesis 8.14 b right parenthesis for z Superscript left parenthesis 1 right parenthesis Baseline comma u Superscript left parenthesis 1 right parenthesis Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column u 0 left parenthesis dot right parenthesis element of upper U comma upper G element of normal upper Gamma comma EndLayoutu0(·) ∈U, G ∈⎡,
(8.25c) 
where upper U comma normal upper GammaU, ⎡resp., denote feasible domains for u 0 left parenthesis dot right parenthesis comma upper Gu0(·), G. 
8.4.1 
Stepwise Optimization of u 0 left parenthesis dot right parenthesis comma upper Gu0(·), G
Solving (8.25a)–(8.25c) approximately, we may ﬁrst optimize the open-loop control 
u 0 left parenthesis dot right parenthesisu0(·) with the corresponding zero-state function 
StartLayout 1st Row z Superscript left parenthesis 0 right parenthesis Baseline equals z Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t comma t 0 comma z 0 comma a comma u 0 left parenthesis dot right parenthesis right parenthesis colon equals z left parenthesis t comma t 0 comma z 0 comma s comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis EndLayoutz(0) = z(0)(t, t0, z0, a, u0(·)) := z(t, t0, z0, s, u0(·), 0)
(8.26) 
by 
Step 1: Optimization of the open-loop control u 0 left parenthesis dot right parenthesisu0(·) only. 
Solve (8.25a)–(8.25c) with the following changes: 
(i) In (8.25a), replace z Superscript left parenthesis 1 right parenthesis Baseline right arrow z Superscript left parenthesis 0 right parenthesis Baseline comma u Superscript left parenthesis 1 right parenthesis Baseline right arrow u 0 left parenthesis dot right parenthesisz(1) →z(0), u(1) →u0(·), 
(ii) in (8.25b), only use (8.12a)–(8.12b), 
(iii) in (8.25c), only use “u 0 left parenthesis dot right parenthesis element of upper Uu0(·) ∈U”. 
Let thenu 0 Superscript asterisk Baseline left parenthesis dot right parenthesisu∗
0(·) denote the optimal solution of the resulting simpliﬁed control problem 
(8.24a)–(8.25c)Subscript u 0 left parenthesis dot right parenthesisu0(·). 
Step 2: Optimization of the gain matrixupper GG Solve (8.25a)–(8.25c) with these changes: 
(i) In (8.25a), replace u 0 left parenthesis dot right parenthesisu0(·) by u 0 Superscript asterisk Baseline left parenthesis dot right parenthesisu∗
0(·), 
(ii) in (8.25b), replace u 0 left parenthesis dot right parenthesisu0(·) by u 0 Superscript asterisk Baseline left parenthesis dot right parenthesisu∗
0(·), 
(iii) in (8.25c), only use “upper G element of normal upper GammaG ∈⎡”. 
Denote thenupper G Superscript asterisk Baseline equals left parenthesis g Subscript i j Superscript asterisk Baseline right parenthesisG∗= (g∗
i j) the optimal solution of the resulting simpliﬁed control prob-
lem (8.25a)–(8.25c)Subscript upper GG. 
Having an optimal solution left parenthesis u 0 Superscript asterisk Baseline left parenthesis dot right parenthesis comma upper G Superscript asterisk Baseline right parenthesis(u∗
0(·), G∗) of (8.25a)–(8.25c), or an approximate 
stepwise solution of (8.25a)–(8.25c) as described above, the optimal control of the 
original problem of minimizing (8.4b) subject to (8.1a)–(8.1b), (8.2a)–(8.2b), resp. 
and possible constraints for the control u 0 left parenthesis dot right parenthesisu0(·) and the gain matrix upper GG can be approxi-
mated, cf. (8.5), by 
StartLayout 1st Row u Superscript asterisk Baseline left parenthesis t right parenthesis almost equals u 0 Superscript asterisk Baseline left parenthesis t right parenthesis plus upper G Superscript asterisk Baseline z left parenthesis t right parenthesis comma EndLayoutu∗(t) ≈u∗
0(t) + G∗z(t),
(8.27a) 
where z equals z left parenthesis t right parenthesisz = z(t) denotes the state vector observed/measured at time t comma t 0 less than or equals t less than or equals t Subscript f Baselinet, t0 ≤t ≤t f .

8.5 Approximation of Nonlinear Feedback Control Systems
171
Improvements of this method can be obtained by updating left parenthesis u 0 Superscript asterisk Baseline left parenthesis dot right parenthesis comma upper G Superscript asterisk Baseline right parenthesis(u∗
0(·), G∗) at certain 
intermediate initial data 
StartLayout 1st Row left parenthesis t Subscript b Baseline comma z Subscript b Baseline right parenthesis comma z Subscript b Baseline equals z left parenthesis t Subscript b Baseline right parenthesis comma t 0 less than t Subscript b Baseline less than t Subscript f Baseline comma EndLayout(tb, zb), zb = z(tb), t0 < tb < t f ,
(8.27b) 
where z Subscript bzb denotes the actual state vector at an intermediate time t Subscript btb. 
8.5 
Approximation of Nonlinear Feedback Control Systems 
We now consider nonlinear control systems represented, see (8.1a)–(8.1b), by 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals f left parenthesis t comma a comma z left parenthesis z right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 comma EndLayout˙z(t) = f (t, a, z(z), u(t)),
t0 ≤t ≤t f ,
(8.28a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals f left parenthesis t comma a comma z left parenthesis z right parenthesis comma u left parenthesis t right parenthesis right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 comma EndLayoutz(t0) = z0,
(8.28b) 
where the control function u equals u left parenthesis t right parenthesisu = u(t) is given, cf. (8.5), by 
StartLayout 1st Row 1st Column u left parenthesis t right parenthesis 2nd Column equals u 0 left parenthesis t right parenthesis plus upper G z left parenthesis t right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline comma EndLayoutu(t) = u0(t) + Gz(t),
t0 ≤t ≤t f ,
(8.28c) 
with an open-loop control u 0 equals u 0 left parenthesis t right parenthesisu0 = u0(t). 
Since time-dependent gain matricesupper G equals upper G left parenthesis t right parenthesisG = G(t) can be treated similar to stationary 
ones, we only consider here time-independent gain matrices represented, see (8.8a), 
by 
StartLayout 1st Row upper G equals sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline upper E Subscript i j Baseline period EndLayoutG =
m
∑
i=1
n
∑
j=1
gi j Ei j.
(8.28d) 
Thus, corresponding to (8.10), in the present case, for the state function 
StartLayout 1st Row z equals left parenthesis t comma t 0 comma z 0 comma a comma u 0 left parenthesis dot right parenthesis comma g Subscript i j Baseline comma i equals 1 comma ellipsis comma m comma j equals 1 comma ellipsis comma n right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma EndLayoutz = (t, t0, z0, a, u0(·), gi j, i = 1, . . . , m, j = 1, . . . , n),
t0 ≤t ≤t f ,
(8.28e) 
we have, see (8.9b), the following system of differential equations 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals f left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis plus upper G z left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals f left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline z Subscript j Baseline left parenthesis t right parenthesis e Subscript i Baseline right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 comma EndLayout˙z(t) = f (t, a, z(t), u0(t) + Gz(t))
= f
⎛
⎝t, a, z(t), u0(t) +
m
∑
i=1
n
∑
j=1
gi jz j(t)ei
⎞
⎠,
t0 ≤t ≤t f ,
(8.29a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals f left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis plus upper G z left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals f left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis plus sigma summation Underscript i equals 1 Overscript m Endscripts sigma summation Underscript j equals 1 Overscript n Endscripts g Subscript i j Baseline z Subscript j Baseline left parenthesis t right parenthesis e Subscript i Baseline right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 comma EndLayoutz(t0) = z0,
(8.29b) 
where e Subscript iei denotes again the ii-th column of the m times mm × m unit matrix.

172
8
Approximation of Feedback Control Systems
Corresponding to (8.13a)–(8.13b), by differentiation of (8.29a)–(8.29b) with 
respect to a gain parameterg Subscript l kglk, for the partial derivative of the state function (8.28e) 
with respect to g Subscript l kglk we get the system of linear differential equations 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals StartFraction partial differential f Over partial differential z EndFraction left parenthesis t comma a comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus StartFraction partial differential f Over partial differential u EndFraction left parenthesis t comma a comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis left parenthesis z Subscript k Baseline left parenthesis t right parenthesis e Subscript l Baseline plus upper G StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma l equals 1 comma ellipsis comma m comma k equals 1 comma ellipsis comma n period EndLayout d
dt
∂z
∂glk
(t) = ∂f
∂z (t, a, z(t), u(t)) ∂z
∂glk
(t)
+ ∂f
∂u (t, a, z(t), u(t))
(
zk(t)el + G ∂z
∂glk
(t)
(
(8.30a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals StartFraction partial differential f Over partial differential z EndFraction left parenthesis t comma a comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus StartFraction partial differential f Over partial differential u EndFraction left parenthesis t comma a comma z left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis left parenthesis z Subscript k Baseline left parenthesis t right parenthesis e Subscript l Baseline plus upper G StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma l equals 1 comma ellipsis comma m comma k equals 1 comma ellipsis comma n period EndLayout ∂z
∂glk
(t0) = 0,
l = 1, . . . , m, k = 1, . . . , n.
(8.30b) 
Taking upper G equals 0G = 0, for the derivative 
StartLayout 1st Row StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction equals StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma a comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis EndLayout ∂z
∂glk
= ∂z
∂glk
(t, t0, z0, a, u0(·), 0)
we get the system of linear differential equations 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g l k EndFraction left parenthesis t right parenthesis 2nd Column equals StartFraction partial differential f Over partial differential z EndFraction left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis right parenthesis StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus StartFraction partial differential f Over partial differential u EndFraction left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis right parenthesis z Subscript k Baseline left parenthesis t right parenthesis e Subscript l Baseline comma t 0 less than or equals t less than or equals t Subscript f Baseline 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma EndLayout d
dt
∂z
∂glk (t) = ∂f
∂z (t, a, z(t), u0(t)) ∂z
∂glk
(t)
+ ∂f
∂u (t, a, z(t), u0(t))zk(t)el,
t0 ≤t ≤t f
(8.31a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g l k EndFraction left parenthesis t right parenthesis 2nd Column equals StartFraction partial differential f Over partial differential z EndFraction left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis right parenthesis StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus StartFraction partial differential f Over partial differential u EndFraction left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis right parenthesis z Subscript k Baseline left parenthesis t right parenthesis e Subscript l Baseline comma t 0 less than or equals t less than or equals t Subscript f Baseline 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential z Over partial differential g Subscript l k Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 comma EndLayout ∂z
∂glk
(t0) = 0,
(8.31b) 
where z left parenthesis t right parenthesis equals z 1 left parenthesis t right parenthesis comma ellipsis comma z Subscript n Baseline left parenthesis t right parenthesis right parenthesis Superscript upper T Baseline equals z left parenthesis t comma t 0 comma z 0 comma a comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesisz(t) = z1(t), . . . , zn(t))T = z(t, t0, z0, a, u0(·), 0) is determined by the sys-
tems of differential equations 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals f left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 period EndLayout˙z(t) = f (t, a, z(t), u0(t)),
t0 ≤t ≤t f ,
(8.31c) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t right parenthesis 2nd Column equals f left parenthesis t comma a comma z left parenthesis t right parenthesis comma u 0 left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 period EndLayoutz(t0) = z0.
(8.31d) 
Remark 8.2 Second and higher order derivatives of z equals z left parenthesis t right parenthesisz = z(t), see  (8.28a)–(8.28e), 
with respect to g Subscript i j Baseline comma i equals 1 comma ellipsis comma m j equals 1 comma ellipsis comma ngi j, i = 1, . . . , m j = 1, . . . , n can be obtained as shown in case of 
state linear differential equations. 
8.6 
Approximation Error 
According to the properties of parameter-dependent systems of differential equations, 
see [ 1, 2], under weak assumptions, the unique solution 
StartLayout 1st Row z equals left parenthesis z Subscript k Baseline left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma g Subscript i j Baseline comma i equals 1 comma ellipsis comma m comma j equals 1 comma ellipsis comma n right parenthesis right parenthesis Subscript 1 less than or equals k less than or equals n EndLayoutz =
(
zk(t, t0, z0, u0(·), gi j, i = 1, . . . , m, j = 1, . . . , n)
)
1≤k≤n
(8.32a)

8.7 Extensions
173
of (8.1a)–(8.1b), (8.2a)–(8.2b), (8.28a)–(8.28b), (8.29a)–(8.29b), resp., is a sufﬁ-
ciently differentiable nn-vector function of, among other variables, the gain parame-
ters 
StartLayout 1st Row g equals left parenthesis g 1 comma g 2 comma ellipsis comma g Subscript m dot n Baseline right parenthesis Superscript upper T Baseline colon equals left parenthesis g 11 comma ellipsis comma g Subscript 1 n Baseline comma ellipsis comma g Subscript m Baseline 1 Baseline comma ellipsis comma g Subscript m n Baseline right parenthesis Superscript upper T Baseline period EndLayoutg = (g1, g2, . . . , gm·n)T := (g11, . . . , g1n, . . . , gm1, . . . , gmn)T .
(8.32b) 
Hence, the accuracy of a linear or higher order approximation of the state variables 
z Subscript k Baseline equals z Subscript k Baseline left parenthesis t right parenthesis comma k equals 1 comma ellipsis comma nzk = zk(t), k = 1, . . . , n by the Taylor polynomials with respect to gg, 
StartLayout 1st Row 1st Column upper T Subscript p Baseline left parenthesis t right parenthesis 2nd Column equals upper T Subscript p Baseline left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma g right parenthesis 2nd Row 1st Column Blank 2nd Column colon equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis plus sigma summation Underscript l equals 1 Overscript m dot n Endscripts StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis g Subscript l plus midline horizontal ellipsis 3rd Row 1st Column Blank 2nd Column plus StartFraction 1 Over p factorial EndFraction sigma summation Underscript l 1 comma l 2 comma ellipsis comma l Subscript n Baseline equals 1 Overscript m dot n Endscripts ContinuedFraction partial differential Superscript p Baseline z Over partial differential g Subscript l 1 Baseline partial differential g Subscript l 2 Baseline ellipsis partial differential g Subscript l Sub Subscript n Subscript Baseline left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis product Underscript l equals 1 Overscript m dot n Endscripts g Subscript l EndLayoutTp(t) = Tp(t, t0, z0, u0(·), g)
:= z(t, t0, z0, u0(·), 0) +
m·n
∑
l=1
∂z
∂gl
(t, t0, z0, u0(·), 0)gl + · · ·
+ 1
p!
m·n
∑
l1,l2,...,ln=1
∂pz
∂gl1∂gl2 . . . ∂gln
(t, t0, z0, u0(·), 0)
m·n
∏
l=1
gl
(8.32c) 
can be evaluated by means of the Taylor formula. The corresponding Lagrange 
remainder term reads 
StartLayout 1st Row upper R Subscript p Baseline left parenthesis t comma g comma 0 right parenthesis colon equals StartFraction 1 Over left parenthesis p plus 1 right parenthesis factorial EndFraction sigma summation Underscript l 1 comma l 2 comma ellipsis comma l Subscript n plus 1 Baseline Overscript m dot n Endscripts ContinuedFraction partial differential Superscript p plus 1 Baseline z Over partial differential g Subscript l 1 Baseline partial differential g Subscript l 2 Baseline ellipsis partial differential g Subscript l Sub Subscript n plus 1 Subscript Baseline left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma theta Subscript g Baseline right parenthesis product Underscript i equals 1 Overscript p plus 1 Endscripts g Subscript l Sub Subscript i EndLayoutRp(t, g, 0) :=
1
(p + 1)!
m·n
∑
l1,l2,...,ln+1
∂p+1z
∂gl1∂gl2 . . . ∂gln+1
(t, t0, z0, u0(·), ϑg)
p+1
∏
i=1
gli
(8.32d) 
with 0 less than theta less than 10 < ϑ < 1. 
Remark 8.3 
(a) The sums and products in (8.32c)–(8.32d) can be represented component-wise 
for the components z Subscript k Baseline comma k equals 1 comma 2 comma ellipsis comma nzk, k = 1, 2, . . . , n of the state vector function z equals z left parenthesis t right parenthesisz = z(t). 
(b) The derivativesContinuedFraction partial differential Superscript p Baseline z Over partial differential g Subscript l 1 Baseline ellipsis partial differential g Subscript l Sub Subscript p Subscript Baseline
∂pz
∂gl1...∂glp are build, see Theorem 8.1, in nested way by the corre-
sponding lower order, p minus 1 comma p minus 2 comma ellipsis comma 0p −1, p −2, . . . , 0, derivatives up to the state function 
z equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma g right parenthesisz = z(t, t0, z0, u0(·), g). 
8.7 
Extensions 
In this Section, ﬁrst special representations of the open-loop or prior control function 
u 0 equals u 0 left parenthesis t right parenthesisu0 = u0(t) are presented. Moreover, generalizations of the approximation method 
for feedback control systems with linear to nonlinear feedback functions of the state 
z equals z left parenthesis t right parenthesisz = z(t) are presented.

174
8
Approximation of Feedback Control Systems
8.7.1 
Special Representations of the Open-Loop (Prior) 
Control Function u 0 left parenthesis dot right parenthesisu0(·)
Solving optimal (feedback) control problems as considered in Sect. 8.6, advantages 
can be obtained if the open-loop controlmm-vector functionu 0 equals u 0 left parenthesis t right parenthesisu0 = u0(t) is represented 
by 
StartLayout 1st Row 1st Column u 0 left parenthesis t right parenthesis 2nd Column equals sigma summation Underscript l equals 1 Overscript upper L Endscripts script upper T Subscript l Baseline left parenthesis t right parenthesis u Subscript l Baseline comma EndLayoutu0(t) =
L
∑
l=1
Tl(t)ul,
(8.33a) 
where 
StartLayout 1st Row 1st Column script upper T Subscript l Baseline left parenthesis t right parenthesis 2nd Column equals Start 3 By 4 Matrix 1st Row 1st Column tau Subscript l Baseline Subscript 11 Baseline left parenthesis t right parenthesis 2nd Column tau Subscript l Baseline Subscript 12 Baseline left parenthesis t right parenthesis 3rd Column ellipsis 4th Column tau Subscript l Baseline Subscript 1 m Baseline left parenthesis t right parenthesis 2nd Row 1st Column vertical ellipsis 2nd Column vertical ellipsis 3rd Column Blank 4th Column vertical ellipsis 3rd Row 1st Column tau Subscript l Baseline Subscript m Baseline 1 Baseline left parenthesis t right parenthesis 2nd Column tau Subscript l Baseline Subscript m Baseline 2 Baseline left parenthesis t right parenthesis 3rd Column ellipsis 4th Column tau Subscript l Baseline Subscript m m Baseline left parenthesis t right parenthesis EndMatrix comma t greater than or equals t 0 comma l equals 1 comma ellipsis comma upper L comma EndLayoutTl(t) =
⎛
⎜⎝
τl11(t) τl12(t) . . . τl1m(t)
...
...
...
τlm1(t) τlm2(t) . . . τlmm(t)
⎞
⎟⎠,
t ≥t0, l = 1, . . . , L,
(8.33b) 
are left parenthesis m comma m right parenthesis(m, m)-matrix functions involving given time functions tau Subscript l Baseline Subscript i j Baseline equals tau Subscript l Baseline Subscript i j Baseline left parenthesis t right parenthesis comma i comma j equals 1 comma ellipsis comma m comma l equals 1 comma ellipsis comma upper Lτli j = τli j(t), i, j =
1, . . . , m, l = 1, . . . , L, as, e.g., certain powers of time tt. 
Furthermore, u Subscript l Baseline comma l equals 1 comma ellipsis comma upper Lul, l = 1, . . . , L, are unknown mm-vectors to be determined opti-
mally. 
8.7.1.1
Linear State Equations 
In case of optimal open-loop control problems with linear state equations, cf. (8.12a), 
(8.12b) and Sect. 8.4, the state function z left parenthesis t right parenthesis equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis right parenthesisz(t) = z(t, t0, z0, u0(·)) is given by 
StartLayout 1st Row z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis right parenthesis equals normal upper Phi left parenthesis t comma t 0 right parenthesis z 0 plus integral Subscript t 0 Superscript t Baseline normal upper Phi left parenthesis t comma s right parenthesis left parenthesis upper B left parenthesis s right parenthesis u 0 left parenthesis s right parenthesis plus c left parenthesis s right parenthesis right parenthesis d s comma EndLayoutz(t, t0, z0, u0(·)) = ϕ(t, t0)z0 +
∮t
t0
ϕ(t, s) (B(s)u0(s) + c(s)) ds,
where, with the fundamental matrix upper Y equals upper Y left parenthesis t right parenthesisY = Y(t) of the system matrix upper A equals upper A left parenthesis t right parenthesisA = A(t), it  
holds normal upper Phi left parenthesis t comma s right parenthesis equals upper Y left parenthesis t right parenthesis upper Y left parenthesis s right parenthesis Superscript negative 1ϕ(t, s) = Y(t)Y(s)−1. 
Using now deﬁnition (8.33a), (8.33b) of u 0 left parenthesis dot right parenthesisu0(·), we ﬁnd 
StartLayout 1st Row z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis right parenthesis equals normal upper Phi left parenthesis t comma t 0 right parenthesis z 0 plus sigma summation Underscript l equals 1 Overscript upper L Endscripts left parenthesis integral Subscript t 0 Superscript t Baseline normal upper Phi left parenthesis t comma s right parenthesis upper B left parenthesis s right parenthesis upper T Subscript l Baseline left parenthesis s right parenthesis d s right parenthesis u Subscript l Baseline plus integral Subscript t 0 Superscript t Baseline normal upper Phi left parenthesis t comma s right parenthesis c left parenthesis s right parenthesis d s period EndLayoutz(t, t0, z0, u0(·)) = ϕ(t, t0)z0 +
L
∑
l=1
(∮t
t0
ϕ(t, s)B(s)Tl(s) ds
(
ul +
∮t
t0
ϕ(t, s)c(s) ds.
(8.34a) 
Thus, the state functionz equals z left parenthesis t right parenthesisz = z(t) can be represented as an afﬁne-linear function 
StartLayout 1st Row z left parenthesis t right parenthesis equals z left parenthesis t comma t 0 comma z 0 comma u 1 comma ellipsis comma u Subscript upper L Baseline right parenthesis EndLayoutz(t) = z(t, t0, z0, u1, . . . , uL)
(8.34b) 
of the parameter mm-vectors u Subscript l Baseline comma l equals 1 comma ellipsis comma upper Lul, l = 1, . . . , L.

8.7 Extensions
175
This yields considerable simpliﬁcations, e.g., in endpoint control problems and 
trajectory optimization problems, see Chapters 9 and 10. 
8.7.2 
Nonlinear Feedback Function 
Generalizing the control function (8.5) with a linear feedback termu Subscript upper F Baseline left parenthesis t comma z right parenthesis equals upper G left parenthesis t right parenthesis zuF(t, z) = G(t)z, 
we consider here control functions with nonlinear feedback laws 
StartLayout 1st Row 1st Column u left parenthesis t comma z right parenthesis 2nd Column equals u 0 left parenthesis t right parenthesis plus upper G left parenthesis t comma z right parenthesis period EndLayoutu(t, z) = u0(t) + G(t, z).
(8.35a) 
Here, upper G equals upper G left parenthesis t comma z right parenthesisG = G(t, z) is deﬁned by 
StartLayout 1st Row 1st Column upper G left parenthesis t comma z right parenthesis 2nd Column colon equals sigma summation Underscript l equals 1 Overscript upper L Endscripts g Subscript l Baseline upper G Subscript l Baseline left parenthesis t comma z right parenthesis EndLayoutG(t, z) :=
L
∑
l=1
glGl(t, z)
(8.35b) 
with given mm-vector functions upper G Subscript l Baseline equals upper G Subscript l Baseline left parenthesis t comma z right parenthesis comma l equals 1 comma ellipsis comma upper LGl = Gl(t, z), l = 1, . . . , L, being nonlinear in zz, 
and scalar parameters g Subscript l Baseline comma l equals 1 comma ellipsis comma upper Lgl, l = 1, . . . , L. A further representation is 
StartLayout 1st Row upper G left parenthesis t comma z right parenthesis colon equals sigma summation Underscript l equals 1 Overscript upper L Endscripts upper G Subscript l Baseline left parenthesis t comma z right parenthesis g Subscript l EndLayoutG(t, z) :=
L
∑
l=1
Gl(t, z)gl
(8.35c) 
with matrix functions upper G Subscript l Baseline equals upper G Subscript l Baseline left parenthesis t comma z right parenthesisGl = Gl(t, z), being nonlinear in state zz, and corresponding 
vectorial parametersg Subscript l Baseline comma l equals 1 comma ellipsis comma upper Lgl, l = 1, . . . , L. Using the feedback representation deﬁned by 
(8.35a)–(8.35c), the state function z left parenthesis t right parenthesis equals z left parenthesis t comma t 0 comma z 0 comma u left parenthesis dot comma dot right parenthesis right parenthesisz(t) = z(t, t0, z0, u(·, ·)) is reduced to 
StartLayout 1st Row z equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma g 1 comma ellipsis comma g Subscript upper L Baseline right parenthesis EndLayoutz = z(t, t0, z0, u0(·), g1, . . . , gL)
(8.36a) 
involving the open-loop control u 0 left parenthesis dot right parenthesisu0(·) and the parameter vector 
StartLayout 1st Row g colon equals left parenthesis g 1 comma g 2 comma ellipsis comma g Subscript upper L Baseline right parenthesis Superscript upper T Baseline comma g equals left parenthesis g 1 Superscript upper T Baseline comma g 2 Superscript upper T Baseline comma ellipsis comma g Subscript upper L Superscript upper T Baseline right parenthesis Superscript upper T Baseline r e s p period period EndLayoutg := (g1, g2, . . . , gL)T ,
g = (gT
1 , gT
2 , . . . , gT
L )T resp..
(8.36b) 
For simplicity, consider only linear systems of differential equations for the state 
function (8.36a), (8.36b). In case of scalar feedback parametersg 1 comma ellipsis comma g Subscript upper L Baselineg1, . . . , gL, we have  
the differential equation 
StartLayout 1st Row 1st Column StartFraction d z Over d t EndFraction left parenthesis t right parenthesis 2nd Column equals upper A t right parenthesis z left parenthesis t right parenthesis plus upper B left parenthesis t right parenthesis left parenthesis u 0 left parenthesis t right parenthesis plus sigma summation Underscript l equals 1 Overscript upper L Endscripts g Subscript l Baseline upper G Subscript l Baseline left parenthesis t comma z left parenthesis t right parenthesis right parenthesis right parenthesis plus c left parenthesis t right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 period EndLayoutdz
dt (t) = At)z(t) + B(t)
(
u0(t) +
L
∑
l=1
glGl(t, z(t))
)
+ c(t)
(8.37a) 
StartLayout 1st Row 1st Column StartFraction d z Over d t EndFraction left parenthesis t right parenthesis 2nd Column equals upper A t right parenthesis z left parenthesis t right parenthesis plus upper B left parenthesis t right parenthesis left parenthesis u 0 left parenthesis t right parenthesis plus sigma summation Underscript l equals 1 Overscript upper L Endscripts g Subscript l Baseline upper G Subscript l Baseline left parenthesis t comma z left parenthesis t right parenthesis right parenthesis right parenthesis plus c left parenthesis t right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t 0 right parenthesis 2nd Column equals z 0 period EndLayoutz(t0) = z0.
(8.37b)

176
8
Approximation of Feedback Control Systems
Using the method suggested above for linear feedback, under corresponding assump-
tions, Taylor expansions of the state function (8.36a), (8.36b) with respect to gg at 
g equals 0g = 0 can be derived. 
For g equals 0g = 0 we start again with the solution 
StartLayout 1st Row z left parenthesis t right parenthesis equals z left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis EndLayoutz(t) = z(t, t0, z0, u0(·), 0)
(8.38) 
of the open-loop state equation (8.12a), (8.12b). Corresponding to (8.13a), (8.13b), 
for the partial derivatives of the state function (8.36a) with respect tog Subscript l Baseline comma l equals 1 comma ellipsis comma upper Lgl,l = 1, . . . , L, 
by partial differentiation of system (8.37a), (8.37b) with respect tog Subscript l Baseline comma l equals 1 comma ellipsis comma upper Lgl, l = 1, . . . , L, 
we get the systems 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper B left parenthesis t right parenthesis left parenthesis upper G Subscript l Baseline left parenthesis t comma z left parenthesis t right parenthesis right parenthesis plus sigma summation Underscript lamda equals 1 Overscript upper L Endscripts g Subscript lamda Baseline StartFraction partial differential upper G Subscript lamda Baseline Over partial differential z EndFraction left parenthesis t comma z left parenthesis t right parenthesis right parenthesis StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis comma right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout d
dt
∂z
∂gl
(t) = A(t) ∂z
∂gl
(t)
+ B(t)
(
Gl(t, z(t)) +
L
∑
λ=1
gλ
∂Gλ
∂z (t, z(t)) ∂z
∂gl
(t),
)
(8.39a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper B left parenthesis t right parenthesis left parenthesis upper G Subscript l Baseline left parenthesis t comma z left parenthesis t right parenthesis right parenthesis plus sigma summation Underscript lamda equals 1 Overscript upper L Endscripts g Subscript lamda Baseline StartFraction partial differential upper G Subscript lamda Baseline Over partial differential z EndFraction left parenthesis t comma z left parenthesis t right parenthesis right parenthesis StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis comma right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout ∂z
∂gl
(t0) = 0.
(8.39b) 
Taking now g equals 0g = 0, for the partial derivatives 
StartLayout 1st Row StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction equals StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t comma t 0 comma z 0 comma u 0 left parenthesis dot right parenthesis comma 0 right parenthesis comma l equals 1 comma ellipsis upper L comma EndLayout ∂z
∂gl
= ∂z
∂gl
(t, t0, z0, u0(·), 0),
l = 1, . . . L,
we get the linear differential equations 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis plus upper B left parenthesis t right parenthesis upper G Subscript l Baseline left parenthesis t comma z left parenthesis t comma t 0 comma z 0 comma u left parenthesis dot right parenthesis comma 0 right parenthesis right parenthesis comma t greater than or equals 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout d
dt
∂z
∂gl
(t) = A(t) ∂z
∂gl
(t) + B(t)Gl(t, z(t, t0, z0, u(·), 0)),
t ≥0
(8.40a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis 2nd Column equals upper A left parenthesis t right parenthesis StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t right parenthesis plus upper B left parenthesis t right parenthesis upper G Subscript l Baseline left parenthesis t comma z left parenthesis t comma t 0 comma z 0 comma u left parenthesis dot right parenthesis comma 0 right parenthesis right parenthesis comma t greater than or equals 0 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential z Over partial differential g Subscript l Baseline EndFraction left parenthesis t 0 right parenthesis 2nd Column equals 0 period EndLayout ∂z
∂gl
(t0) = 0.
(8.40b) 
Remark 8.4 
(a) Obviously, similar systems of differential equations for higher order partial 
derivatives of (8.36a) with respect to the parameters g Subscript l Baseline comma l equals 1 comma ellipsis comma upper Lgl, l = 1, . . . , L at g equals 0g = 0
can be obtained. 
(b) Furthermore, comparing the above system of differential equations for the case 
of nonlinear feedback with the related systems (8.7), (8.13a), (8.13b), (8.14a), 
(8.14b) for linear feedback, we ﬁnd that they have the same structures concerning 
the sequence of higher partial derivatives, cf. Theorem 8.1.

References
177
References 
1. Dieudonné, J.: Foundations of Modern Analysis. Academic, New York (1969) 
2. Walter, W.: Gewöhnliche Differentialgleichungen. Springer, Berlin (2000)

Chapter 9 
Stochastic Optimal Open-Loop Feedback 
Control 
Abstract In this chapter a second procedure for an approximate determination of 
stochastic optimal feedback controls is based on the stochastic open-loop feedback 
method. This very efﬁcient approximation method is also the basis of the model 
predictive control procedures. Using the methods mentioned in Chap. 3, stochastic 
optimal open-loop feedback controls are constructed by computing next to stochastic 
optimal open-loop controls on the remaining time intervals t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f with t 0 less than or equals t Subscript b Baseline less than or equals t Subscript ft0 ≤
tb ≤t f . Having stochastic optimal open-loop feedback controls on each remaining 
time intervalt Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f witht 0 less than or equals t Subscript b Baseline less than or equals t Subscript ft0 ≤tb ≤t f , a stochastic optimal open-loop feedback 
control law follows then immediately by evaluating each of the stochastic optimal 
open-loop controls ont Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f at the corresponding initial time pointt equals t Subscript bt = tb. The  
efﬁciency of this method has been proved already by applications to the stochastic 
optimization of regulators for robots. 
9.1 
Dynamic Structural Systems Under Stochastic 
Uncertainty 
9.1.1 
Stochastic Optimal Structural Control: Active Control 
In order to omit structural damages and therefore high compensation (recourse) costs, 
active control techniques are used in structural engineering. The structures usually 
are stationary, safe, and stable without considerable external dynamic disturbances. 
Thus, in case of heavy dynamic external loads, such as earthquakes, wind turbulences, 
water waves, etc., which cause large vibrations with possible damages, additional 
control elements can be installed in order to counteract applied dynamic loads, see 
[ 3, 18, 19]. 
The structural dynamics is modeled mathematically by means of a linear system 
of second-order differential equations for the m minusm−vector q equals q left parenthesis t right parenthesisq = q(t) of displacements. 
The system of differential equations involves random dynamic parameters, random 
initial values, the random dynamic load vector, and a control force vector depending 
on an input control function u equals u left parenthesis t right parenthesisu = u(t). Robust, i.e., parameter-insensitive optimal 
feedback controlsu Superscript asterisku∗are determined in order to cope with the stochastic uncertainty 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_9 
179

180
9
Stochastic Optimal Open-Loop Feedback Control
involved in the dynamic parameters, the initial values, and the applied loadings. In 
practice, the design of controls is directed often to reduce the mean square response 
(displacements and their time derivatives) of the system to a desired level within a 
reasonable span of time. 
The performance of the resulting structural control problem under stochastic 
uncertainty is evaluated therefore by means of a convex quadratic cost function 
upper L equals upper L left parenthesis t comma z comma u right parenthesisL = L(t, z, u) of the state vector z equals z left parenthesis t right parenthesisz = z(t) and the control input vector u equals u left parenthesis t right parenthesisu = u(t). 
While the actual time path of the random external load is not known at the planning 
stage, we may assume that the probability distribution or at least the moments under 
consideration of the applied load and other random parameters are known. The prob-
lem is then to determine a robust, i.e., parameter-insensitive (open-loop) feedback 
control law by minimization of the expected total costs, hence, a stochastic optimal 
control law. 
As mentioned above, in active control of dynamic structures, cf. [ 3, 14, 18– 22], 
the behavior of the mm-vector q equals q left parenthesis t right parenthesisq = q(t) of displacements with respect to time tt is 
described by a system of second-order linear differential equations forq left parenthesis t right parenthesisq(t) having a 
right-hand side being the sum of the stochastic applied load process and the control 
force depending on a control nn-vector function u left parenthesis t right parenthesisu(t): 
upper M q With two dots plus upper D ModifyingAbove q With dot plus upper K q left parenthesis t right parenthesis equals f left parenthesis t comma omega comma u left parenthesis t right parenthesis right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline periodM ¨q + D ˙q + Kq(t) = f
(
t, ω, u(t)
)
,
t0 ≤t ≤t f .
(9.1a) 
Hence, the force vector f equals f left parenthesis t comma omega comma u left parenthesis t right parenthesis right parenthesis f = f
(
t, ω, u(t)
)
on the right-hand side of the dynamic 
equation (9.1a) is given by the sum 
f left parenthesis t comma omega comma u right parenthesis equals f 0 left parenthesis t comma omega right parenthesis plus f Subscript a Baseline left parenthesis t comma omega comma u right parenthesis f (t, ω, u) = f0(t, ω) + fa(t, ω, u)
(9.1b) 
of the applied loadf 0 equals f 0 left parenthesis t comma omega right parenthesis f0 = f0(t, ω) being a vector valued stochastic process describing, 
e.g., external loads or excitation of the structure caused by earthquakes, wind turbu-
lences, water waves, etc., and the actuator or control force vector f Subscript a Baseline equals f Subscript a Baseline left parenthesis t comma omega comma u right parenthesis fa = fa(t, ω, u)
depending on an input or control nn-vector function u equals u left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baselineu = u(t), t0 ≤t ≤t f . Here, omegaω
denotes the random element, lying in a certain probability space left parenthesis normal upper Omega comma upper A comma upper P right parenthesis(Ω, A, P), used to  
represent random variations. Furthermore,upper M comma upper D comma upper KM, D, K, resp., denotes them times mm × m mass, 
damping and stiffness matrix. In many cases the actuator or control forcef Subscript a fa is linear, 
i.e., 
f Subscript a Baseline equals normal upper Gamma Subscript u Baseline u fa = [uu
(9.1c) 
with a certain m times nm × n matrix normal upper Gamma Subscript u[u. 
By introducing appropriate matrices, the linear system of second-order differential 
equations (9.1a), (9.1b) can be represented by a system of ﬁrst-order differential 
equations as follows: 
ModifyingAbove z With dot equals g left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u right parenthesis colon equals upper A z left parenthesis t comma omega right parenthesis plus upper B u plus b left parenthesis t comma omega right parenthesis˙z = g(t, ω, z(t, ω), u) := Az(t, ω) + Bu + b(t, ω)
(9.2a)

9.1 Dynamic Structural Systems Under Stochastic Uncertainty
181
with 
StartLayout 1st Row upper A colon equals Start 2 By 2 Matrix 1st Row 1st Column 0 2nd Column upper I 2nd Row 1st Column minus upper M Superscript negative 1 Baseline upper K 2nd Column minus upper M Superscript negative 1 Baseline upper D EndMatrix comma upper B colon equals StartBinomialOrMatrix 0 Choose upper M Superscript negative 1 Baseline normal upper Gamma Subscript u Baseline EndBinomialOrMatrix comma 2nd Row Blank 3rd Row b left parenthesis t comma omega right parenthesis colon equals StartBinomialOrMatrix 0 Choose upper M Superscript negative 1 Baseline f 0 left parenthesis t comma omega right parenthesis period EndBinomialOrMatrix EndLayoutA :=
(
0
I
−M−1K −M−1D
)
,
B :=
(
0
M−1[u
)
,
(9.2b) 
StartLayout 1st Row upper A colon equals Start 2 By 2 Matrix 1st Row 1st Column 0 2nd Column upper I 2nd Row 1st Column minus upper M Superscript negative 1 Baseline upper K 2nd Column minus upper M Superscript negative 1 Baseline upper D EndMatrix comma upper B colon equals StartBinomialOrMatrix 0 Choose upper M Superscript negative 1 Baseline normal upper Gamma Subscript u Baseline EndBinomialOrMatrix comma 2nd Row Blank 3rd Row b left parenthesis t comma omega right parenthesis colon equals StartBinomialOrMatrix 0 Choose upper M Superscript negative 1 Baseline f 0 left parenthesis t comma omega right parenthesis period EndBinomialOrMatrix EndLayoutb(t, ω) :=
(
0
M−1 f0(t, ω).
)
(9.2c) 
Moreover, z equals z left parenthesis t right parenthesisz = z(t) is the 2 m2m-state vector deﬁned by 
z equals StartBinomialOrMatrix q Choose ModifyingAbove q With dot EndBinomialOrMatrixz =
(q
˙q
)
(9.2d) 
fulﬁlling a certain initial condition 
z left parenthesis t 0 right parenthesis equals StartBinomialOrMatrix q left parenthesis t 0 right parenthesis Choose ModifyingAbove q With dot left parenthesis t 0 right parenthesis EndBinomialOrMatrix colon equals StartBinomialOrMatrix q 0 Choose ModifyingAbove q With dot Subscript 0 EndBinomialOrMatrixz(t0) =
(q(t0)
˙q(t0)
)
:=
(q0
˙q0
)
(9.2e) 
with given or stochastic initial values q 0 equals q 0 left parenthesis omega right parenthesis comma ModifyingAbove q With dot Subscript 0 Baseline equals ModifyingAbove q With dot Subscript 0 Baseline left parenthesis omega right parenthesisq0 = q0(ω), ˙q0 = ˙q0(ω). 
9.1.2 
Stochastic Optimal Design of Regulators 
In the optimal design of regulators for dynamic systems, see also Chap. 10, the  
(mm-) vectorq equals q left parenthesis t right parenthesisq = q(t) of tracking errors is described by a system of2 n d2nd order linear 
differential equations: 
upper M left parenthesis t right parenthesis q With two dots plus upper D left parenthesis t right parenthesis ModifyingAbove q With dot plus upper K left parenthesis t right parenthesis q left parenthesis t right parenthesis equals minus upper Y left parenthesis t right parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis plus Delta u left parenthesis t comma omega right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline periodM(t)¨q + D(t)˙q + K(t)q(t) = −Y(t)ΔpD(ω) + Δu(t, ω),
t0 ≤t ≤t f .
(9.3) 
Here, upper M left parenthesis t right parenthesis comma upper D left parenthesis t right parenthesis comma upper K left parenthesis t right parenthesis comma upper Y left parenthesis t right parenthesisM(t), D(t), K(t), Y(t) denote certain time-dependent Jacobians arising 
from the linearization of the dynamic equation around the stochastic optimal refer-
ence trajectory and the conditional expectation ModifyingAbove p Subscript upper D Baseline With quotation dashpD of the vector of dynamic param-
eters p Subscript upper D Baseline left parenthesis omega right parenthesispD(ω). The deviation between the vector of dynamic parameters p Subscript upper D Baseline left parenthesis omega right parenthesispD(ω) and 
its conditional expectationModifyingAbove p Subscript upper D Baseline With quotation dashpD is denoted byDelta p Subscript upper D Baseline left parenthesis omega right parenthesis colon equals p Subscript upper D Baseline left parenthesis omega right parenthesis minus ModifyingAbove p Subscript upper D Baseline With quotation dashΔpD(ω) := pD(ω) −pD. Furthermore, 
Delta u left parenthesis t right parenthesisΔu(t) denotes the correction of the feedforward control u Superscript 0 Baseline equals u Superscript 0 Baseline left parenthesis t right parenthesisu0 = u0(t). 
By introducing appropriate matrices, system (9.3) can be represented by the 1 s t1st
order system of linear differential equations: 
ModifyingAbove z With dot equals upper A left parenthesis t right parenthesis z left parenthesis t comma omega right parenthesis plus upper B Delta u plus b left parenthesis t comma omega right parenthesis˙z = A(t)z(t, ω) + BΔu + b(t, ω)
(9.4a) 
with

182
9
Stochastic Optimal Open-Loop Feedback Control
StartLayout 1st Row upper A left parenthesis t right parenthesis colon equals Start 2 By 2 Matrix 1st Row 1st Column 0 2nd Column upper I 2nd Row 1st Column minus upper M left parenthesis t right parenthesis Superscript negative 1 Baseline upper K 2nd Column minus upper M left parenthesis t right parenthesis Superscript negative 1 Baseline upper D left parenthesis t right parenthesis EndMatrix comma upper B colon equals StartBinomialOrMatrix 0 Choose upper M left parenthesis t right parenthesis Superscript negative 1 Baseline EndBinomialOrMatrix comma 2nd Row Blank 3rd Row b left parenthesis t comma omega right parenthesis colon equals StartBinomialOrMatrix 0 Choose minus upper M left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y left parenthesis t right parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis EndBinomialOrMatrix period EndLayoutA(t) :=
(
0
I
−M(t)−1K −M(t)−1D(t)
)
,
B :=
(
0
M(t)−1
)
,
(9.4b) 
StartLayout 1st Row upper A left parenthesis t right parenthesis colon equals Start 2 By 2 Matrix 1st Row 1st Column 0 2nd Column upper I 2nd Row 1st Column minus upper M left parenthesis t right parenthesis Superscript negative 1 Baseline upper K 2nd Column minus upper M left parenthesis t right parenthesis Superscript negative 1 Baseline upper D left parenthesis t right parenthesis EndMatrix comma upper B colon equals StartBinomialOrMatrix 0 Choose upper M left parenthesis t right parenthesis Superscript negative 1 Baseline EndBinomialOrMatrix comma 2nd Row Blank 3rd Row b left parenthesis t comma omega right parenthesis colon equals StartBinomialOrMatrix 0 Choose minus upper M left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y left parenthesis t right parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis EndBinomialOrMatrix period EndLayoutb(t, ω) :=
(
0
−M(t)−1Y(t)ΔpD(ω)
)
.
(9.4c) 
Again, the (2 m2m-) state vector z equals z left parenthesis t right parenthesisz = z(t) is deﬁned by 
z equals StartBinomialOrMatrix q Choose ModifyingAbove q With dot EndBinomialOrMatrix periodz =
(q
˙q
)
.
(9.4d) 
9.1.3 
Robust (Optimal) Open-Loop Feedback Control 
According to the description in Sect. 3.2, a feedback control is deﬁned, cf. (3.10b), 
by 
u left parenthesis t right parenthesis colon equals phi left parenthesis t comma script upper I Subscript t Baseline right parenthesis comma t greater than or equals t 0 commau(t) := ϕ(t, It), t ≥t0,
(9.5a) 
where script upper I Subscript tIt denotes again the total information about the control system up to time tt
and phi left parenthesis dot comma dot right parenthesisϕ(·, ·) designates the feedback control law. If the state z Subscript t Baseline colon equals z left parenthesis t right parenthesiszt := z(t) is available at 
each time point tt, the control input nn-vector function u equals u left parenthesis t right parenthesisu = u(t), Delta u equals Delta u left parenthesis t right parenthesisΔu = Δu(t), resp., 
can be generated by means of a upper P upper DP D -controller, hence, 
u left parenthesis t right parenthesis left parenthesis Delta u left parenthesis t right parenthesis right parenthesis colon equals phi left parenthesis t comma z left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 commau(t)(Δu(t)) := ϕ
(
t, z(t)
)
,
t ≥t0,
(9.5b) 
with a feedback control lawphi equals phi left parenthesis t comma q comma ModifyingAbove q With dot right parenthesis equals phi left parenthesis t comma z left parenthesis t right parenthesis right parenthesisϕ = ϕ(t, q, ˙q) = ϕ(t, z(t)). Efﬁcient approximate feed-
back control laws are constructed here by using the concept of open-loop feedback 
control. Open-loop feedback control is the main tool in model predictive control, cf.  
[ 1, 8, 16], which is very often used to solve optimal control problems in practice. 
The idea of open-loop feedback control is to construct a feedback control law quasi 
argument-wise, see cf. [ 2, 5]. 
A major issue in optimal control is the robustness, cf.  [  4], i.e., the insensitivity of 
the optimal control with respect to parameter variations. In case of random parameter 
variations, robust optimal controls can be obtained by means of stochastic optimiza-
tion methods, cf. [ 10]. Thus, we introduce the following concept of an stochastic 
optimal (open-loop) feedback control. 
Deﬁnition 9.1 In case of stochastic parameter variations, robust, hence, parameter-
insensitive optimal (open-loop) feedback controls obtained by stochastic optimiza-
tion methods are also called stochastic optimal (open-loop) feedback controls.

9.1 Dynamic Structural Systems Under Stochastic Uncertainty
183
9.1.4 
Stochastic Optimal Open-Loop Feedback Control 
Finding a stochastic optimal open-loop feedback control, hence, an optimal (open-
loop) feedback control law, see Sect. 3.2, being insensitive as far as possible with 
respect to random parameter variations, means that besides optimality of the control 
law also its insensitivity with respect to stochastic parameter variations should be 
guaranteed. Hence, in the following sections we develop now a stochastic version of 
the (optimal) open-loop feedback control method, cf. [ 9, 11– 13]. A short overview 
on this novel stochastic optimal open-loop feedback control concept is given below. 
At each intermediate time pointt Subscript b Baseline element of left bracket t 0 comma t Subscript f Baseline right brackettb ∈[t0, t f ], based on the informationscript upper I Subscript t Sub Subscript bItb available 
at timet Subscript btb, a stochastic optimal open-loop controlu Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baselineu∗= u∗(
t; tb, Itb
)
, tb ≤t ≤t f , is  
determined ﬁrst on the remaining time interval left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ], see Fig. 9.1, by stochastic 
optimization methods, cf. [ 10]. 
Having a stochastic optimal open-loop controlu Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baselineu∗= u∗(
t; tb, Itb
)
, tb ≤t ≤t f ,on 
each remaining time interval left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ] with an arbitrary starting time t Subscript btb, t 0 less than or equals t Subscript b Baseline less than or equals t Subscript f t0 ≤tb ≤t f , 
a stochastic optimal open-loop feedback control law is then deﬁned, see Deﬁnition 
3.2, as follows: 
Deﬁnition 9.2 
phi Superscript asterisk Baseline equals phi left parenthesis t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis colon equals u Superscript asterisk Baseline left parenthesis t Subscript b Baseline right parenthesis equals u Superscript asterisk Baseline left parenthesis t Subscript b Baseline semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t 0 less than or equals t Subscript b Baseline less than or equals t Subscript f Baseline periodϕ∗= ϕ
(
tb, Itb
)
:= u∗(tb) = u∗(
tb; tb, Itb
)
,
t0 ≤tb ≤t f .
(9.5c) 
Hence, at time t equals t Subscript bt = tb just the “ﬁrst” control value u Superscript asterisk Baseline left parenthesis t Subscript b Baseline right parenthesis equals u Superscript asterisk Baseline left parenthesis t Subscript b Baseline semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesisu∗(tb) = u∗(
tb; tb, Itb
)
of 
u Superscript asterisk Baseline left parenthesis dot semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesisu∗(
·; tb, Itb
)
is used only. For each other argument left parenthesis t comma script upper I Subscript t Baseline right parenthesis
(
t, It
)
the same construction 
is applied. 
For ﬁnding stochastic optimal open-loop controls, based on the methods devel-
oped in Chap. 3, on the remaining time intervals t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f with t 0 less than or equals t Subscript b Baseline less than or equals t Subscript ft0 ≤tb ≤t f , the  
stochastic Hamilton function of the control problem is introduced. Then, the class 
of upper H minusH−minimal controls, cf. Deﬁnitions 3.6 and 3.7, can be determined in case of 
stochastic uncertainty by solving a ﬁnite-dimensional stochastic optimization prob-
lem for minimizing the conditional expectation of the stochastic Hamiltonian sub-
ject to the remaining deterministic control constraints at each time point tt. Having  
a upper H minusH−minimal control, the related two-point boundary value problem with random 
parameters can be formulated for the computation of a stochastic optimal state- and 
costate trajectory. Due to the linear-quadratic structure of the underlying control 
problem, the state and costate trajectory can be determined analytically to a large 
extent. Inserting then these trajectories into the H-minimal control, stochastic optimal 
open-loop controls are found on an arbitrary remaining time interval. According to 
Fig. 9.1 Remaining time interval

184
9
Stochastic Optimal Open-Loop Feedback Control
Deﬁnition 9.2, these controls yield then immediately a stochastic optimal open-loop 
feedback control law. Moreover, the obtained controls can be realized in real-time, 
which is already shown for applications in optimal control of industrial robots, cf. 
[ 17]. 
Summarizing, we get optimal (open-loop) feedback controls under stochastic 
uncertainty minimizing the effects of external inﬂuences on system behavior, subject 
to the constraints of not having a complete representation of the system, cf. [ 4]. 
Hence, robust or stochastic optimal active controls are obtained by new techniques 
from Stochastic Optimization, see  [  10]. Of course, the construction can be applied 
also to upper P upper D minusP D−and upper P upper I upper D minusP I D−controllers. 
9.2 
Expected Total Cost Function 
The performance function upper FF for active structural control systems is deﬁned, cf. 
[ 6– 8], by the conditional expectation of the total costs being the sum of costs upper LL
along the trajectory, arising from the displacementsz equals z left parenthesis t comma omega right parenthesisz = z(t, ω) and the control input 
u equals u left parenthesis t comma omega right parenthesisu = u(t, ω) , and possible terminal costsupper GG arising at the ﬁnal statez Subscript fz f . Hence, on the 
remaining time interval t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f we have the following conditional expectation 
of the total cost function with respect to the informationGerman upper A Subscript t Sub Subscript bAtb available up to timet Subscript btb: 
upper F colon equals upper E left parenthesis integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline upper L left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma u left parenthesis t comma omega right parenthesis right parenthesis d t plus upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis periodF := E
⎛
⎝
t f
{
tb
L
(
t, ω, z(t, ω), u(t, ω)
)
dt + G(t f , ω, z(t f , ω))
|| Atb
⎞
⎠.
(9.6a) 
Supposing quadratic costs along the trajectory, the function upper LL is given by 
upper L left parenthesis t comma omega comma z comma u right parenthesis colon equals one half z Superscript upper T Baseline upper Q left parenthesis t comma omega right parenthesis z plus one half u Superscript upper T Baseline upper R left parenthesis t comma omega right parenthesis uL(t, ω, z, u) := 1
2zT Q(t, ω)z + 1
2uT R(t, ω)u
(9.6b) 
with positive (semi) deﬁnite2 m times 2 m comma n times n2m × 2m, n × n, resp., matrix functionsupper Q equals upper Q left parenthesis t comma omega right parenthesis comma upper R equals upper R left parenthesis t comma omega right parenthesisQ = Q(t, ω),
R = R(t, ω). In the simplest case the weight matrices upper Q comma upper RQ, R are ﬁxed. A special 
selection for upper QQ reads 
upper Q equals Start 2 By 2 Matrix 1st Row 1st Column upper Q Subscript q Baseline 2nd Column 0 2nd Row 1st Column 0 2nd Column upper Q Subscript ModifyingAbove q With dot EndMatrixQ =
( Qq 0
0 Q ˙q
)
(9.6c) 
with positive (semi) deﬁnite weight matrices upper Q Subscript q Baseline comma upper Q Subscript ModifyingAbove q With dot BaselineQq, Q ˙q, resp., for q comma ModifyingAbove q With dotq, ˙q. Furthermore, 
upper G equals upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesisG = G(t f , ω, z(t f , ω)) describes possible terminal costs. In case of endpoint control 
upper GG is deﬁned by 
upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis colon equals one half left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline upper G Subscript f Baseline left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis commaG(t f , ω, z(t f , ω)) := 1
2(z(t f , ω) −z f (ω))T G f (z(t f , ω) −z f (ω)),
(9.6d) 
where upper G Subscript f Baseline equals upper G Subscript f Baseline left parenthesis omega right parenthesisG f = G f (ω) is a positive (semi) deﬁnite, possible random weight matrix, 
and z Subscript f Baseline equals z Subscript f Baseline left parenthesis omega right parenthesisz f = z f (ω) denotes the (possible random) ﬁnal state.

9.4 The Stochastic Hamiltonian of (9.7a)–(9.7d)
185
Remark 9.1 Instead ofone half u Superscript upper T Baseline upper R u1
2uT Ru, in the following we also use a more general convex 
control cost function upper C equals upper C left parenthesis u right parenthesisC = C(u). 
9.3 
Open-Loop Control Problem on the Remaining Time 
Interval left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ]
In the following we suppose next to that the 2 m times 2 m2m × 2m matrix upper AA and the 2 m times n2m × n
matrix upper BB are given, ﬁxed matrices. 
Having the differential equation with random coefﬁcients derived above, describ-
ing the behavior of the dynamic mechanical structure/system under stochastic 
uncertainty, and the costs arising from displacements and at the terminal state, 
on a given remaining time interval left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ] a stochastic optimal open-loop control 
u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline commau∗= u∗(
t; tb, Itb
)
, tb ≤t ≤t f , is a solution of the following optimal control prob-
lem under stochastic uncertainty: 
StartLayout 1st Row 1st Column min 2nd Column upper E left parenthesis integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline one half left parenthesis z left parenthesis t comma omega right parenthesis Superscript upper T Baseline upper Q z left parenthesis t comma omega right parenthesis plus u left parenthesis t right parenthesis Superscript upper T Baseline upper R u left parenthesis t right parenthesis right parenthesis d t plus upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis equals upper A z left parenthesis t comma omega right parenthesis plus upper B u left parenthesis t right parenthesis plus b left parenthesis t comma omega right parenthesis comma a period s period comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column z left parenthesis t Subscript b Baseline comma omega right parenthesis equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis e s t i m a t e d s t a t e a t t i m e t Subscript b Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column u left parenthesis t right parenthesis element of upper D Subscript t Baseline comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayout min
E
⎛
⎝
t f
{
tb
1
2
(
z(t, ω)T Qz(t, ω) + u(t)T Ru(t)
)
dt + G(t f , ω, z(t f , ω))
|||Atb
⎞
⎠
(9.7a) 
StartLayout 1st Row 1st Column min 2nd Column upper E left parenthesis integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline one half left parenthesis z left parenthesis t comma omega right parenthesis Superscript upper T Baseline upper Q z left parenthesis t comma omega right parenthesis plus u left parenthesis t right parenthesis Superscript upper T Baseline upper R u left parenthesis t right parenthesis right parenthesis d t plus upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis equals upper A z left parenthesis t comma omega right parenthesis plus upper B u left parenthesis t right parenthesis plus b left parenthesis t comma omega right parenthesis comma a period s period comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column z left parenthesis t Subscript b Baseline comma omega right parenthesis equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis e s t i m a t e d s t a t e a t t i m e t Subscript b Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column u left parenthesis t right parenthesis element of upper D Subscript t Baseline comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayouts.t.
˙z(t, ω) = Az(t, ω) + Bu(t) + b(t, ω), a.s.,
tb ≤t ≤t f
(9.7b) 
StartLayout 1st Row 1st Column min 2nd Column upper E left parenthesis integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline one half left parenthesis z left parenthesis t comma omega right parenthesis Superscript upper T Baseline upper Q z left parenthesis t comma omega right parenthesis plus u left parenthesis t right parenthesis Superscript upper T Baseline upper R u left parenthesis t right parenthesis right parenthesis d t plus upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis equals upper A z left parenthesis t comma omega right parenthesis plus upper B u left parenthesis t right parenthesis plus b left parenthesis t comma omega right parenthesis comma a period s period comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column z left parenthesis t Subscript b Baseline comma omega right parenthesis equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis e s t i m a t e d s t a t e a t t i m e t Subscript b Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column u left parenthesis t right parenthesis element of upper D Subscript t Baseline comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayoutz(tb, ω) = zb
(b) (estimated state at time tb)
(9.7c) 
StartLayout 1st Row 1st Column min 2nd Column upper E left parenthesis integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline one half left parenthesis z left parenthesis t comma omega right parenthesis Superscript upper T Baseline upper Q z left parenthesis t comma omega right parenthesis plus u left parenthesis t right parenthesis Superscript upper T Baseline upper R u left parenthesis t right parenthesis right parenthesis d t plus upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis equals upper A z left parenthesis t comma omega right parenthesis plus upper B u left parenthesis t right parenthesis plus b left parenthesis t comma omega right parenthesis comma a period s period comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column z left parenthesis t Subscript b Baseline comma omega right parenthesis equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis e s t i m a t e d s t a t e a t t i m e t Subscript b Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column u left parenthesis t right parenthesis element of upper D Subscript t Baseline comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayoutu(t) ∈Dt,
tb ≤t ≤t f .
(9.7d) 
An important property of (9.7a)–(9.7d) is stated next: 
Lemma 9.1 If the terminal cost function upper G equals upper G left parenthesis t Subscript f Baseline comma omega comma z right parenthesisG = G(t f , ω, z) is convex in zz, and the 
feasible domain upper D Subscript tDt is convex for each time point tt, t 0 less than or equals t less than or equals t Subscript f Baseline commat0 ≤t ≤t f , then the stochastic 
optimal control problem (9.7a)–(9.7d) is a convex optimization problem. 
9.4 
The Stochastic Hamiltonian of (9.7a)–(9.7d) 
According to (3.28a), (3.40a),  see also [  8], the stochastic Hamiltonian upper HH related to 
the stochastic optimal control problem (9.7a)–(9.7d) reads 
StartLayout 1st Row upper H left parenthesis t comma omega comma z comma y comma u right parenthesis colon equals upper L left parenthesis t comma omega comma z comma u right parenthesis plus y Superscript upper T Baseline g left parenthesis t comma omega comma z comma u right parenthesis 2nd Row equals one half z Superscript upper T Baseline upper Q z plus upper C left parenthesis u right parenthesis plus y Superscript upper T Baseline left parenthesis upper A z plus upper B u plus b left parenthesis t comma omega right parenthesis right parenthesis period EndLayoutH(t, ω, z, y, u) := L(t, ω, z, u) + yT g(t, ω, z, u)
= 1
2zT Qz + C(u) + yT (Az + Bu + b(t, ω)) .
(9.8a)

186
9
Stochastic Optimal Open-Loop Feedback Control
9.4.1 
Expected Hamiltonian (with Respect to the Time 
Interval left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ] and Information German upper A Subscript t Sub Subscript bAtb) 
For the deﬁnition of aupper H minusH−minimal control the conditional expectation of the stochas-
tic Hamiltonian is needed: 
StartLayout 1st Row ModifyingAbove upper H With quotation dash Superscript left parenthesis b right parenthesis Baseline colon equals upper E left parenthesis upper H left parenthesis t comma omega comma z comma y comma u right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis equals upper E left parenthesis one half z Superscript upper T Baseline upper Q z plus y Superscript upper T Baseline left parenthesis upper A z plus b left parenthesis t comma omega right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row plus upper C left parenthesis u right parenthesis plus upper E left parenthesis y Superscript upper T Baseline upper B u vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 3rd Row equals upper C left parenthesis u right parenthesis plus upper E left parenthesis upper B Superscript upper T Baseline y left parenthesis t comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis Superscript upper T Baseline u plus midline horizontal ellipsis equals upper C left parenthesis u right parenthesis plus h left parenthesis t right parenthesis Superscript upper T Baseline u plus ellipsis EndLayoutH
(b) := E
(
H(t, ω, z, y, u)
||Atb
)
= E
(1
2zT Qz + yT (Az + b(t, ω))
||Atb
)
+C(u) + E
(
yT Bu
||Atb
)
= C(u) + E
(
BT y(t, ω)
||Atb
)T u + · · · = C(u) + h(t)T u + . . .
(9.8b) 
with 
StartLayout 1st Row h left parenthesis t right parenthesis equals h left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis colon equals upper E left parenthesis upper B left parenthesis omega right parenthesis Superscript upper T Baseline y left parenthesis t comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t greater than or equals t Subscript b Baseline period EndLayouth(t) = h
(
t; tb, Itb
)
:= E
(
B(ω)T y(t, ω)
||Atb
)
,
t ≥tb .
(9.8c) 
9.4.2 
upper HH-Minimal Control on left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ]
In order to formulate the two-point boundary value problem for a stochastic opti-
mal open-loop control u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baselineu∗= u∗(
t; tb, Itb
)
, tb ≤t ≤t f , we need ﬁrst an upper HH-minimal 
control 
ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline comma~
u∗= ~
u∗
(
t, z(t, ·), y(t, ·); tb, Itb
)
,
tb ≤t ≤t f ,
deﬁned, see Deﬁnitions 3.6 and 3.7 and cf. also [ 8], for t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f as a solution of 
the following convex stochastic optimization problem, cf. [ 10]: 
min upper E left parenthesis upper H left parenthesis t comma omega comma z left parenthesis t comma omega right parenthesis comma y left parenthesis t comma omega right parenthesis comma u right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis min E
(
H(t, ω, z(t, ω), y(t, ω), u)
||Atb
)
(9.9a) 
s.t. 
u element of upper D Subscript t Baseline commau ∈Dt,
(9.9b) 
where z equals z left parenthesis t comma omega right parenthesis comma y equals y left parenthesis t comma omega right parenthesisz = z(t, ω), y = y(t, ω) are certain trajectories.

9.5 Canonical (Hamiltonian) System
187
According to (9.9a), (9.9b) the H-minimal control 
ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma h left parenthesis dot semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis right parenthesis~
u∗= ~
u∗
(
t, z(t, ·), y(t, ·); tb, Itb
)
= ~
u∗(t, h
(
·; tb, Itb
)
)
(9.10a) 
is deﬁned by 
StartLayout 1st Row ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma h left parenthesis dot semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis right parenthesis colon equals arg min Underscript u element of upper D Subscript t Baseline Endscripts upper C left parenthesis u right parenthesis plus h left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis Superscript upper T Baseline u f o r t greater than or equals t Subscript b Baseline period EndLayout~
u∗(t, h
(
·; tb, Itb
)
) := argmin
u∈Dt
C(u) + h
(
t; tb, Itb
)T u
for t ≥tb .
(9.10b) 
9.4.2.1
Strictly Convex Cost Function, no Control Constraints 
For strictly convex, differentiable cost functionsupper C equals upper C left parenthesis u right parenthesisC = C(u), as, e.g.,upper C left parenthesis u right parenthesis equals one half u Superscript upper T Baseline upper R uC(u) = 1
2uT Ru
with positive deﬁnite matrix upper RR, the necessary and sufﬁcient condition for u Superscript asterisk Baseline overTilde~
u∗reads 
in case upper D Subscript t Baseline equals double struck upper R Superscript nDt = Rn: 
StartLayout 1st Row nabla upper C left parenthesis u right parenthesis plus h left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis equals 0 period EndLayout∇C(u) + h
(
t; tb, Itb
)
= 0 .
(9.11a) 
If u right arrow from bar nabla upper C left parenthesis u right parenthesisu |→∇C(u) is a 1-1-operator, then the solution of (9.11a) reads 
StartLayout 1st Row u equals v left parenthesis h left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis right parenthesis colon equals nabla upper C Superscript negative 1 Baseline left parenthesis minus h left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis right parenthesis period EndLayoutu = v(h
(
t; tb, Itb
)
) := ∇C−1(−h
(
t; tb, Itb
)
) .
(9.11b) 
With (9.8c) and (9.10b) we then have 
StartLayout 1st Row ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma h right parenthesis equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis h left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis right parenthesis right parenthesis colon equals nabla upper C Superscript negative 1 Baseline left parenthesis minus upper E left parenthesis upper B left parenthesis omega right parenthesis Superscript upper T Baseline y left parenthesis t comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis right parenthesis period EndLayout~
u∗(t, h) = ~
u∗(h
(
t; tb, Itb
)
)) := ∇C−1 (
−E
(
B(ω)T y(t, ω)
||Atb
))
.
(9.11c) 
9.5 
Canonical (Hamiltonian) System 
We suppose here that a upper HH-minimal control ModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma z left parenthesis t comma dot right parenthesis comma y left parenthesis t comma dot right parenthesis semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis~
u∗= ~
u∗(
t, z(t, ·), y(t, ·); tb, Itb
)
, t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤
t ≤t f , i.e., a solutionModifyingAbove u Superscript asterisk Baseline With tilde equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma h right parenthesis equals v left parenthesis h left parenthesis t right parenthesis right parenthesis right parenthesis~
u∗= ~
u∗(t, h) = v(h(t))) of the stochastic optimization prob-
lem (9.9a), (9.9b) is available. Moreover, the conditional expectation upper E left parenthesis xi vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesisE
(
ξ
||Atb
)
of a 
random variable xiξ is also denoted by ModifyingAbove xi With quotation dash Superscript left parenthesis b right parenthesisξ
(b), cf. (9.8b). According to (3.46), Theorem 
3.7, a stochastic optimal open-loop control u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baselineu∗= u∗(t; tb, Itb), tb ≤t ≤t f , 
u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma z Superscript asterisk Baseline left parenthesis t comma dot right parenthesis comma y Superscript asterisk Baseline left parenthesis t comma dot right parenthesis semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline commau∗(t; tb, Itb) = ~
u∗
(
t, z∗(t, ·), y∗(t, ·); tb, Itb
)
,
tb ≤t ≤t f ,
(9.12) 
of the stochastic optimal control problem (9.7a)–(9.7d), can be obtained, see also 
[ 8], by solving the following stochastic two-point boundary value problem related 
to (9.7a)–(9.7d).

188
9
Stochastic Optimal Open-Loop Feedback Control
Theorem 9.1 If z Superscript asterisk Baseline equals z Superscript asterisk Baseline left parenthesis t comma omega right parenthesis comma y Superscript asterisk Baseline equals y Superscript asterisk Baseline left parenthesis t comma omega right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baselinez∗= z∗(t, ω), y∗= y∗(t, ω), t0 ≤t ≤t f , is a solution of 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus ModifyingAbove upper B Superscript upper T Baseline y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus b left parenthesis t comma omega right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus upper Q z left parenthesis t comma omega right parenthesis 6th Row 1st Column Blank 7th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma EndLayout˙z(t, ω) = Az(t, ω) + B∇C−1 (
−BT y(t)
(b))
+ b(t, ω),
tb ≤t ≤t f
(9.13a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus ModifyingAbove upper B Superscript upper T Baseline y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus b left parenthesis t comma omega right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus upper Q z left parenthesis t comma omega right parenthesis 6th Row 1st Column Blank 7th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma EndLayoutz(tb, ω) = zb
(b)
(9.13b) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus ModifyingAbove upper B Superscript upper T Baseline y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus b left parenthesis t comma omega right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus upper Q z left parenthesis t comma omega right parenthesis 6th Row 1st Column Blank 7th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma EndLayout ˙y(t, ω) = −AT y(t, ω) −Qz(t, ω)
(9.13c) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus ModifyingAbove upper B Superscript upper T Baseline y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus b left parenthesis t comma omega right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus upper Q z left parenthesis t comma omega right parenthesis 6th Row 1st Column Blank 7th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma EndLayouty(t f , ω) = ∇G(t f , ω, z(t f , ω)),
(9.13d) 
then the function u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline commau∗= u∗(t; tb, Itb), tb ≤t ≤t f , deﬁned by (9.12) is a stochastic 
optimal open-loop control for the remaining time interval t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f . 
9.6 
Minimum-Energy Control 
In this case we haveupper Q equals 0Q = 0, i.e., there are no costs for the displacementsz equals StartBinomialOrMatrix q Choose ModifyingAbove q With dot EndBinomialOrMatrixz =
(q
˙q
)
. 
In this case the solution of (9.13c), (9.13d) reads 
StartLayout 1st Row 1st Column Blank 2nd Column y left parenthesis t comma omega right parenthesis equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayoutStartLayout 1st Row 1st Column Blank 2nd Column y left parenthesis t comma omega right parenthesis equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayouty(t, ω) = eAT (t f −t)∇zG(t f , ω, z(t f , ω)),
tb ≤t ≤t f .
(9.14a) 
This yields for ﬁxed Matrix upper BB
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma h left parenthesis t right parenthesis right parenthesis equals v left parenthesis h left parenthesis t right parenthesis right parenthesis equals nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline ModifyingAbove nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis comma 2nd Row 1st Column Blank 2nd Column t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayoutStartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma h left parenthesis t right parenthesis right parenthesis equals v left parenthesis h left parenthesis t right parenthesis right parenthesis equals nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline ModifyingAbove nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis comma 2nd Row 1st Column Blank 2nd Column t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayout~
u∗(t, h(t)) = v(h(t)) = ∇C−1 (
−BT eAT (t f −t)∇zG(t f , z(t f ))
(b))
,
tb ≤t ≤t f .
(9.14b) 
Having (9.14a), (9.14b), for the state trajectory z equals z left parenthesis t comma omega right parenthesisz = z(t, ω) we get, see (9.13a), 
(9.13b), the following system of ordinary differential equations 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline ModifyingAbove nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus b left parenthesis t comma omega right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayout˙z(t, ω) = Az(t, ω) + B∇C−1(
−BT eAT (t f −t)∇zG(t f , z(t f ))
(b))
+ b(t, ω),
tb ≤t ≤t f ,
(9.15a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline ModifyingAbove nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus b left parenthesis t comma omega right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayoutz(tb, ω) = zb
(b).
(9.15b) 
The solution of system (9.15a), (9.15b) reads 
StartLayout 1st Row 1st Column z left parenthesis t comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis b left parenthesis s comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis right parenthesis d s comma 3rd Row 1st Column t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayoutz(t, ω) = eA(t−tb)zb
(b) +
t{
tb
eA(t−s)
(
b(s, ω)
+ B∇C−1 (
−BT eAT (t f −s)∇zG(t f , z(t f ))
(b)) )
ds,
tb ≤t ≤t f .
(9.16)

9.6 Minimum-Energy Control
189
For the ﬁnal state z equals z left parenthesis t Subscript f Baseline comma omega right parenthesisz = z(t f , ω) we get the relation: 
StartLayout 1st Row 1st Column z left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis b left parenthesis s comma omega right parenthesis 2nd Row 1st Column plus 2nd Column upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis right parenthesis d s period EndLayoutz(t f , ω) = eA(t f −tb)zb
(b) +
t f
{
tb
eA(t f −s)
(
b(s, ω)
+B∇C−1 (
−BT eAT (t f −s)∇zG(t f , z(t f ))
(b)) )
ds .
(9.17) 
9.6.1 
Endpoint Control 
In the case of endpoint control, the terminal cost function is given by the following 
deﬁnition (9.18a), where z Subscript f Baseline equals z Subscript f Baseline left parenthesis omega right parenthesisz f = z f (ω) denotes the desired—possible random—ﬁnal 
state: 
StartLayout 1st Row 1st Column upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis 2nd Column colon equals one half parallel to z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis parallel to squared period EndLayoutG(t f , ω, z(t f , ω)) := 1
2||z(t f , ω) −z f (ω)||2 .
(9.18a) 
Hence, 
StartLayout 1st Row 1st Column nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis 2nd Column equals z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis EndLayout∇G(t f , ω, z(t f , ω)) = z(t f , ω) −z f (ω)
(9.18b) 
and therefore 
StartLayout 1st Row 1st Column ModifyingAbove nabla upper G left parenthesis t Subscript f Baseline comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column equals upper E left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis minus upper E left parenthesis z Subscript f Baseline left parenthesis omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis period EndLayout∇G(t f , z(t f ))
(b) = z(t f )
(b) −z f
(b)
(9.18c) 
= E
(
z(t f , ω)
||Atb
)
− E
(
z f (ω)
||Atb
)
. 
Thus 
StartLayout 1st Row 1st Column z left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis b left parenthesis s comma omega right parenthesis 2nd Row 1st Column plus 2nd Column upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis right parenthesis right parenthesis d s period EndLayoutz(t f , ω) = eA(t f −tb)zb
(b) +
t f
{
tb
eA(t f −s)
(
b(s, ω)
+B∇C−1 (
−BT eAT (t f −s) (
z(t f )
(b) −z f
(b))) )
ds .
(9.19a) 
Taking expectationsupper E left parenthesis ellipsis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesisE(. . . |Atb)in (9.19a), we get the following condition forModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesisz(t f )
(b): 
StartLayout 1st Row 1st Column ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline equals 2nd Column e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 2nd Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis right parenthesis d s period EndLayoutz(t f )
(b) =eA(t f −tb)zb
(b) +
t f
{
tb
eA(t f −s)b(s)
(b) ds
+
t f
{
tb
eA(t f −s)B∇C−1 (
−BT eAT (t f −s) (
z(t f )
(b) −z f
(b)))
ds .
(9.19b)

190
9
Stochastic Optimal Open-Loop Feedback Control
9.6.1.1
Quadratic Control Costs 
Here, the control cost function upper C equals upper C left parenthesis u right parenthesisC = C(u) reads 
StartLayout 1st Row 1st Column Blank 2nd Column upper C left parenthesis u right parenthesis equals one half u Superscript upper T Baseline upper R u comma EndLayoutC(u) = 1
2uT Ru ,
(9.20a) 
hence, 
StartLayout 1st Row 1st Column Blank 2nd Column nabla upper C equals upper R u EndLayout∇C = Ru
(9.20b) 
and therefore 
StartLayout 1st Row 1st Column Blank 2nd Column nabla upper C Superscript negative 1 Baseline left parenthesis w right parenthesis equals upper R Superscript negative 1 Baseline w period EndLayout∇C−1(w) = R−1w .
(9.20c) 
Consequently, (9.19b) reads 
StartLayout 1st Row 1st Column ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 2nd Row 1st Column Blank 2nd Column minus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis d s ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 3rd Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline d s ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayoutz(t f )
(b) = eA(t f −tb)zb
(b) +
t f
{
tb
eA(t f −s)b(s)
(b) ds
−
t f
{
tb
eA(t f −s)BR−1BT eAT (t f −s) dsz(t f )
(b)
+
t f
{
tb
eA(t f −s)BR−1BT eAT (t f −s) dsz f
(b) .
(9.21) 
Deﬁne now 
StartLayout 1st Row upper U colon equals integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline d s period EndLayoutU :=
t f
{
tb
eA(t f −s)BR−1BT eAT (t f −s) ds .
(9.22) 
Lemma 9.2 upper I plus upper UI + U is regular. 
Proof Due to the previous considerations, upper UU is a positive semideﬁnite 2 m times 2 m2m × 2m
matrix. Hence, upper UU has only nonnegative eigenvalues. 
Assuming that the matrixupper I plus upper UI + U is singular, there is a2 m2m-vectorw not equals 0w /= 0 such that 
StartLayout 1st Row 1st Column Blank 2nd Column left parenthesis upper I plus upper U right parenthesis w equals 0 period EndLayout (I + U) w = 0.
However, this yields 
StartLayout 1st Row 1st Column Blank 2nd Column upper U w equals minus upper I w equals negative w equals left parenthesis negative 1 right parenthesis w comma EndLayoutUw = −Iw = −w = (−1)w,

9.6 Minimum-Energy Control
191
which means that lamda equals negative 1λ = −1 is an eigenvalue of upper UU. Since this contradicts to the above 
mentioned property of upper UU, the matrix upper I plus upper UI + U must be regular.
⬜
From (9.21) we get 
StartLayout 1st Row 1st Column Blank 2nd Column left parenthesis upper I plus upper U right parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline equals e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript b Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s plus upper U ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline comma EndLayout (I + U) z(t f )
(b) = eA(t f −tb)zb
(b) +
tb
{
tb
eA(t f −s)b(s)
(b) ds + Uz f
(b),
(9.23a) 
hence, 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline equals left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline integral Subscript t Subscript b Baseline Superscript t Subscript b Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 3rd Column Blank 2nd Row 1st Column Blank 2nd Column plus left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline upper U ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayoutz(t f )
(b) = (I + U)−1 eA(t f −tb)zb + (I + U)−1
tb
{
tb
eA(t f −s)b(s)
(b) ds
+ (I + U)−1 Uz f
(b) .
(9.23b) 
Now, (9.23b) and (9.18b) yield 
StartLayout 1st Row 1st Column ModifyingAbove nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis With quotation dash 2nd Column equals ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis minus z Subscript f With quotation dash Superscript left parenthesis b right parenthesis Baseline equals ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column equals left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 3rd Row 1st Column Blank 2nd Column plus left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 4th Row 1st Column Blank 2nd Column plus left parenthesis left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline upper U minus upper I right parenthesis ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayout∇zG(t f , z(t f )) = z(t f ) −z f
(b) = z(t f )
(b) −z f
(b)
= (I + U)−1 eA(t f −tb)zb
(b)
+ (I + U)−1
t f
{
tb
eA(t f −s)b(s)
(b) ds
+
(
(I + U)−1 U −I
)
z f
(b) .
(9.24) 
Thus, a stochastic optimal open-loop control u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesisu∗= u∗(t; tb, Itb), t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f , on  
left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ] is given by, cf. (9.11b), 
StartLayout 1st Row 1st Column u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis equals minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline 2nd Column left parenthesis left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column plus left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 3rd Row 1st Column Blank 2nd Column plus left parenthesis left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline upper U minus upper I right parenthesis ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayoutu∗(t; tb, Itb) = −R−1BT eAT (t f −t)
(
(I + U)−1 eA(t f −tb)zb
(b)
+ (I + U)−1
t f
{
tb
eA(t f −s)b(s)
(b) ds
+
(
(I + U)−1 U −I
)
z f
(b)
)
,
tb ≤t ≤t f .
(9.25) 
Finally, the stochastic optimal open-loop feedback control law phi equals phi left parenthesis t comma script upper I Subscript t Baseline right parenthesisϕ = ϕ(t, It) is then 
given by

192
9
Stochastic Optimal Open-Loop Feedback Control
StartLayout 1st Row 1st Column phi left parenthesis t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Column colon equals u Superscript asterisk Baseline left parenthesis t Subscript b Baseline semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 3rd Row 1st Column Blank 2nd Column minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 4th Row 1st Column Blank 2nd Column minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline left parenthesis left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline upper U minus upper I right parenthesis ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis EndLayoutϕ(tb, Itb) := u∗(tb; tb, Itb)
= −R−1BT eAT (t f −tb) (I + U)−1 eA(t f −tb)zb
(b)
−R−1BT eAT (t f −tb) (I + U)−1
t f
{
tb
eA(t f −s)b(s)
(b) ds
−R−1BT eAT (t f −tb) (
(I + U)−1U −I
)
z f
(b)
(9.26) 
with script upper I Subscript t Sub Subscript b Baseline colon equals left parenthesis ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline colon equals ModifyingAbove z left parenthesis t Subscript b Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline comma ModifyingAbove b left parenthesis dot right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline comma ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesisItb :=
(
zb
(b) := z(tb)
(b), b(·)
(b), z f
(b))
. 
Replacing t Subscript b Baseline right arrow ttb →t, we ﬁnd this result: 
Theorem 9.2 The stochastic optimal open-loop feedback control law phi equals phi left parenthesis t comma script upper I Subscript t Baseline right parenthesisϕ = ϕ(t, It)
is given by 
StartLayout 1st Row 1st Column phi left parenthesis t comma script upper I Subscript t Baseline right parenthesis 2nd Column equals ModifyingBelow minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline With bottom brace Underscript normal upper Psi 0 left parenthesis t right parenthesis Endscripts ModifyingAbove z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis t right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column ModifyingBelow minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline integral Subscript t Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis t right parenthesis Baseline d s With bottom brace Underscript normal upper Psi 1 left parenthesis t comma ModifyingAbove b left parenthesis dot right parenthesis With quotation dash Superscript left parenthesis t right parenthesis Baseline right parenthesis Endscripts 3rd Row 1st Column Blank 2nd Column ModifyingBelow minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis left parenthesis upper I plus upper U right parenthesis Superscript negative 1 Baseline upper U minus upper I right parenthesis With bottom brace Underscript normal upper Psi 2 left parenthesis t right parenthesis Endscripts ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis t right parenthesis Baseline comma EndLayoutϕ(t, It) = −R−1BT eAT (t f −t) (I + U)−1 eA(t f −t)
~
~~
~
ψ0(t)
z(t)
(t)
−R−1BT eAT (t f −t) (I + U)−1
t f
{
t
eA(t f −s)b(s)
(t) ds
~
~~
~
ψ1(t,b(·)
(t))
−R−1BT eAT (t f −t) (
(I + U)−1U −I
)
~
~~
~
ψ2(t)
z f
(t) ,
(9.27a) 
hence, 
StartLayout 1st Row 1st Column phi left parenthesis t comma script upper I Subscript t Baseline right parenthesis 2nd Column equals normal upper Psi 0 left parenthesis t right parenthesis ModifyingAbove z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis t right parenthesis Baseline plus normal upper Psi 1 left parenthesis t comma ModifyingAbove b left parenthesis dot right parenthesis With quotation dash Superscript left parenthesis t right parenthesis Baseline right parenthesis plus normal upper Psi 2 left parenthesis t right parenthesis ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis t right parenthesis Baseline comma 2nd Row 1st Column script upper I Subscript t 2nd Column colon equals left parenthesis ModifyingAbove z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis t right parenthesis Baseline comma ModifyingAbove b left parenthesis dot right parenthesis With quotation dash Superscript left parenthesis t right parenthesis Baseline comma ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis t right parenthesis Baseline right parenthesis period EndLayoutϕ(t, It) = ψ0(t)z(t)
(t) + ψ1(t, b(·)
(t)) + ψ2(t)z f
(t) ,
It :=
(
z(t)
(t), b(·)
(t), z f
(t))
.
(9.27b) 
Remark 9.2 Note that the stochastic optimal open-loop feedback law ModifyingAbove z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis t right parenthesis Baseline right arrow from bar phi left parenthesis t comma script upper I Subscript t Baseline right parenthesisz(t)
(t) |→
ϕ(t, It) is not linear in general, but afﬁne linear. 
9.6.2 
Endpoint Control with Different Cost Functions 
In this section we consider more general terminal cost functionsupper GG. Hence, suppose 
StartLayout 1st Row 1st Column upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis colon 2nd Column equals kappa left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis 2nd Column equals nabla kappa left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis period EndLayoutG(t f , ω, z(t f , ω)) : = κ(z(t f , ω) −z f (ω)) ,
(9.28a) 
StartLayout 1st Row 1st Column upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis colon 2nd Column equals kappa left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis 2nd Column equals nabla kappa left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis period EndLayout∇G(t f , ω, z(t f , ω)) = ∇κ(z(t f , ω) −z f (ω)) .
(9.28b)

9.6 Minimum-Energy Control
193
Consequently, 
StartLayout 1st Row 1st Column ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma h left parenthesis t right parenthesis right parenthesis 2nd Column equals v Superscript asterisk Baseline left parenthesis h left parenthesis t right parenthesis right parenthesis equals nabla upper C Superscript negative 1 Baseline left parenthesis upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline ModifyingAbove nabla kappa left parenthesis z left parenthesis t Subscript f Baseline right parenthesis minus z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis EndLayout~
u∗(t, h(t)) = v∗(h(t)) = ∇C−1 (
BT eAT (t f −t)∇κ(z(t f ) −z f
(b))
(9.29a) 
and therefore, see (9.17) 
StartLayout 1st Row 1st Column z left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline b left parenthesis s comma omega right parenthesis d s 2nd Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove nabla kappa left parenthesis z left parenthesis t Subscript f Baseline right parenthesis minus z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s comma 3rd Row 1st Column Blank 2nd Column t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayoutz(t f , ω) = eA(t f −tb)zb +
t f
{
tb
eA(t f −s)b(s, ω) ds
+
t f
{
tb
eA(t f −s)B∇C−1 (
−BT eAT (t f −s)∇κ(z(t f ) −z f
(b))
ds ,
tb ≤t ≤t f .
(9.29b) 
Special case: 
Now a special terminal cost function is considered in more detail: 
StartLayout 1st Row 1st Column kappa left parenthesis z minus z Subscript f Baseline right parenthesis colon 2nd Column equals sigma summation Underscript i equals 1 Overscript 2 m Endscripts left parenthesis z Subscript i Baseline minus z Subscript f Baseline Subscript i Baseline right parenthesis Superscript 4 Baseline 2nd Row 1st Column Blank 3rd Row 1st Column nabla kappa left parenthesis z minus z Subscript f Baseline right parenthesis 2nd Column equals 4 left parenthesis left parenthesis z 1 minus z Subscript f Baseline Subscript 1 Baseline right parenthesis cubed comma ellipsis comma left parenthesis z Subscript 2 m Baseline minus z Subscript f Baseline Subscript 2 m Baseline right parenthesis cubed right parenthesis Superscript upper T Baseline period EndLayoutκ(z −z f ) : =
2m
∑
i=1
(zi −z f i)4
(9.30a) 
StartLayout 1st Row 1st Column kappa left parenthesis z minus z Subscript f Baseline right parenthesis colon 2nd Column equals sigma summation Underscript i equals 1 Overscript 2 m Endscripts left parenthesis z Subscript i Baseline minus z Subscript f Baseline Subscript i Baseline right parenthesis Superscript 4 Baseline 2nd Row 1st Column Blank 3rd Row 1st Column nabla kappa left parenthesis z minus z Subscript f Baseline right parenthesis 2nd Column equals 4 left parenthesis left parenthesis z 1 minus z Subscript f Baseline Subscript 1 Baseline right parenthesis cubed comma ellipsis comma left parenthesis z Subscript 2 m Baseline minus z Subscript f Baseline Subscript 2 m Baseline right parenthesis cubed right parenthesis Superscript upper T Baseline period EndLayout∇κ(z −z f ) = 4
(
(z1 −z f 1)3, . . . , (z2m −z f 2m)3)T .
(9.30b) 
Here, 
StartLayout 1st Row 1st Column ModifyingAbove nabla kappa left parenthesis z minus z Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals 4 left parenthesis upper E left parenthesis left parenthesis z 1 minus z Subscript f Baseline Subscript 1 Baseline right parenthesis cubed vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis comma ellipsis comma upper E left parenthesis left parenthesis z Subscript 2 m Baseline minus z Subscript f Baseline Subscript 2 m Baseline right parenthesis cubed vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis right parenthesis Superscript upper T Baseline 2nd Row 1st Column Blank 2nd Column equals 4 left parenthesis m 3 Superscript left parenthesis b right parenthesis Baseline left parenthesis z 1 left parenthesis t Subscript f Baseline comma dot right parenthesis semicolon z Subscript f Baseline Subscript 1 Baseline left parenthesis dot right parenthesis right parenthesis comma ellipsis comma m 3 Superscript left parenthesis b right parenthesis Baseline left parenthesis z Subscript 2 m Baseline left parenthesis t Subscript f Baseline comma dot right parenthesis semicolon z Subscript f Baseline Subscript 2 m Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis Superscript upper T Baseline 3rd Row 1st Column Blank 2nd Column equals colon 4 m 3 Superscript left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma dot right parenthesis semicolon z Subscript f Baseline left parenthesis dot right parenthesis right parenthesis period EndLayout∇κ(z −z f )
(b) = 4
(
E
(
(z1 −z f 1)3|Atb
)
, . . . , E
(
(z2m −z f 2m)3|Atb
))T
= 4
(
m(b)
3 (z1(t f , ·); z f 1(·)), . . . , m(b)
3 (z2m(t f , ·); z f 2m(·))
)T
=: 4m(b)
3 (z(t f , ·); z f (·)) .
(9.31) 
Thus, 
StartLayout 1st Row 1st Column z left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline b left parenthesis s comma omega right parenthesis d s 2nd Row 1st Column Blank 2nd Column plus ModifyingBelow integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline 4 m 3 Superscript left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma dot right parenthesis semicolon z Subscript f Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis d s With bottom brace Underscript upper J left parenthesis m 3 Superscript left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma dot right parenthesis semicolon z Subscript f Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis Endscripts period EndLayoutz(t f , ω) = eA(t f −tb)zb +
t f
{
tb
eA(t f −s)b(s, ω) ds
+
t f
{
tb
eA(t f −s)B∇C−1 (
−BT eAT (t f −s)4m(b)
3 (z(t f , ·); z f (·))
)
ds
~
~~
~
J
(
m(b)
3 (z(t f ,·);z f (·))
)
.
(9.32) 
Equation (9.32) yields then

194
9
Stochastic Optimal Open-Loop Feedback Control
StartLayout 1st Row 1st Column Blank 2nd Column left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis cubed vertical bar Subscript c minus b y minus c Baseline 2nd Row 1st Column Blank 2nd Column equals left parenthesis e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline minus z Subscript f Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline b left parenthesis s comma omega right parenthesis d s plus upper J left parenthesis m 3 Superscript left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma dot right parenthesis semicolon z Subscript f Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis right parenthesis cubed vertical bar Subscript c minus b y minus c Baseline comma EndLayout
(
z(t f , ω) −z f (ω)
)3
||||
c−by−c
=
⎛
⎝eA(t f −tb)zb −z f +
t f
{
tb
eA(t f −s)b(s, ω) ds + J
(
m(b)
3 (z(t f , ·); z f (·))
)
⎞
⎠
3 ||||
c−by−c
,
(9.33a) 
where “c-by-c” means “component-by-component”. Taking expectations in (9.33a), 
we get the following relation for the moment vector m 3 Superscript left parenthesis b right parenthesism(b)
3 : 
StartLayout 1st Row m 3 Superscript left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma dot right parenthesis semicolon z Subscript f Baseline left parenthesis dot right parenthesis right parenthesis equals normal upper Psi left parenthesis m 3 Superscript left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma dot right parenthesis semicolon z Subscript f Baseline left parenthesis dot right parenthesis right parenthesis right parenthesis period EndLayoutm(b)
3 (z(t f , ·); z f (·)) = ψ
(
m(b)
3 (z(t f , ·); z f (·))
)
.
(9.33b) 
Remark 9.3 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis cubed vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis vertical bar Subscript c minus b y minus c Baseline 2nd Row 1st Column Blank 2nd Column equals upper E Superscript left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis plus ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis cubed 3rd Row 1st Column Blank 2nd Column equals upper E Superscript left parenthesis b right parenthesis Baseline left parenthesis left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis right parenthesis cubed plus 3 left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis right parenthesis squared left parenthesis ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column plus 3 left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis right parenthesis left parenthesis ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis squared plus left parenthesis ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis cubed right parenthesis period EndLayoutE
((
z(t f , ω) −z f (ω)
)3 ||Atb
)||||
c−by−c
= E(b) (
z(t f , ω) −z(b)(t f ) + z(b)(t f ) −z f (ω)
)3
= E(b)
( (
z(t f , ω) −z(b)(t f )
)3 + 3
(
z(t f , ω) −z(b)(t f )
)2 (
z(b)(t f ) −z f (ω)
)
+ 3
(
z(t f , ω) −z(b)(t f )
) (
z(b)(t f ) −z f (ω)
)2 +
(
z(b)(t f ) −z f (ω)
)3 )
.
(9.33c) 
Assuming that z left parenthesis t Subscript f Baseline comma omega right parenthesisz(t f , ω) and z Subscript f Baseline left parenthesis omega right parenthesisz f (ω) are stochastic independent, then 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis cubed vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals m 3 Superscript left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma dot right parenthesis right parenthesis plus 3 sigma Superscript 2 left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma dot right parenthesis right parenthesis left parenthesis ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus ModifyingAbove left parenthesis ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript f Baseline right parenthesis minus z Subscript f Baseline right parenthesis cubed With quotation dash Superscript left parenthesis b right parenthesis Baseline comma EndLayoutE
(
(z(t f , ω) −z f (ω))3||Atb
)
= m(b)
3 (z(t f , ·)) + 3σ 2(b)(z(t f , ·))(z(b)(t f ) −z f
(b)) +
(
z(b)(t f ) −z f
)3(b)
,
(9.33d) 
wheresigma Superscript 2 left parenthesis b right parenthesis Baseline left parenthesis z left parenthesis t Subscript f Baseline comma dot right parenthesisσ 2(b)(z(t f , ·) denotes the conditional variance of the state reached at the ﬁnal 
time point t Subscript ft f , given the information at time t Subscript btb. 
9.6.3 
Weighted Quadratic Terminal Costs 
With a certain (possibly random) weight matrixnormal upper Gamma equals normal upper Gamma left parenthesis omega right parenthesis[ = [(ω), we consider the following 
terminal cost function: 
StartLayout 1st Row 1st Column upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis 2nd Column colon equals f r a c Baseline 1 2 double vertical bar normal upper Gamma left parenthesis omega right parenthesis left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis double vertical bar squared period EndLayoutG(t f , ω, z(t f , ω)) := f rac12
||||[(ω)
(
z(t f , ω) −z f (ω)
)||||2 .
(9.34a) 
This yields

9.6 Minimum-Energy Control
195
StartLayout 1st Row 1st Column nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis 2nd Column equals normal upper Gamma left parenthesis omega right parenthesis Superscript upper T Baseline normal upper Gamma left parenthesis omega right parenthesis left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis comma EndLayout∇G(t f , ω, z(t f , ω)) = [(ω)T [(ω)(z(t f , ω) −z f (ω)) ,
(9.34b) 
and from (9.14a) we get 
StartLayout 1st Row 1st Column y left parenthesis t comma omega right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline normal upper Gamma left parenthesis omega right parenthesis Superscript upper T Baseline normal upper Gamma left parenthesis omega right parenthesis left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis comma EndLayouty(t, ω) = eAT (t f −t)∇zG(t f , ω, z(t f , ω))
= eAT (t f −t)[(ω)T [(ω)(z(t f , ω) −z f (ω)) ,
(9.35a) 
hence, 
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline ModifyingAbove normal upper Gamma Superscript upper T Baseline left parenthesis normal upper Gamma z left parenthesis t Subscript f Baseline right parenthesis minus normal upper Gamma z Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis period EndLayouty(b)(t) = eAT (t f −t)[T (
[z(t f ) −[z f
)(b)
= eAT (t f −t) (
[T [z(t f )
(b) −[T [z f
(b))
.
(9.35b) 
Thus, for the upper H minusH−minimal control we ﬁnd 
StartLayout 1st Row 1st Column ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma h right parenthesis 2nd Column equals v left parenthesis h left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column equals nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline 4th Row 1st Column Blank 2nd Column minus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis right parenthesis period EndLayout~
u∗(t, h) = v(h(t))
= ∇C−1 (
−BT y(b)(t)
)
= ∇C−1
(
−BT eAT (t f −t)(
[T [z(t f )
(b)
−[T [z f
(b)))
.
(9.36) 
We obtain therefore, see (9.16), 
StartLayout 1st Row 1st Column z left parenthesis t comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis b left parenthesis s comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis right parenthesis right parenthesis d s period EndLayoutz(t, ω) = eA(t−tb)zb +
t{
tb
eA(t−s)
(
b(s, ω)
+ B∇C−1
(
−BT eAT (t f −s)(
[T [z(t f )
(b) −[T [z f
(b))))
ds.
(9.37a) 
9.6.3.1
Quadratic Control Costs 
Assume that the control costs and their gradient are given by 
upper C left parenthesis u right parenthesis equals one half u Superscript upper T Baseline upper R u comma nabla upper C left parenthesis u right parenthesis equals upper R u periodC(u) = 1
2uT Ru, ∇C(u) = Ru .
(9.37b) 
Here, (9.37a) yields

196
9
Stochastic Optimal Open-Loop Feedback Control
StartLayout 1st Row 1st Column z left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis b left parenthesis s comma omega right parenthesis 2nd Row 1st Column Blank 2nd Column minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z left parenthesis t Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis right parenthesis d s period EndLayoutz(t f , ω) = eA(t f −tb)zb +
t f
{
tb
eA(t f −s)
(
b(s, ω)
−BR−1BT eAT (t f −s) (
[T [z(t f
(b) −[T [z f
(b)) )
ds .
(9.37c) 
Multiplying with normal upper Gamma left parenthesis omega right parenthesis Superscript upper T normal upper Gamma left parenthesis omega right parenthesis[(ω)T [(ω) and taking expectations, from (9.37c) we get 
StartLayout 1st Row 1st Column ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline b left parenthesis s With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 2nd Row 1st Column minus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis d s 3rd Row 1st Column times 2nd Column left parenthesis ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis period EndLayout[T [z(t f )
(b) = [T [
(b)eA(t f −tb)zb
(b) +
t f
{
tb
[T [eA(t f −s)b(s
(b) ds
−[T [
(b)
t f
{
tb
eA(t f −s)BR−1BT eAT (t f −s) ds
×
(
[T [z(t f )
(b) −[T [z f
(b))
.
(9.38a) 
According to a former lemma, we deﬁne the matrix 
upper U equals integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline d s periodU =
t f
{
tb
eA(t f −s)BR−1BT eAT (t f −s) ds .
From (9.38a) we get then 
StartLayout 1st Row 1st Column Blank 2nd Column left parenthesis upper I plus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline upper U right parenthesis ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Row 1st Column Blank 2nd Column equals ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 3rd Row 1st Column Blank 2nd Column plus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline upper U ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayout
(
I + [T [
(b)U
)
[T [z(t f )
(b)
= [T [
(b)eA(t f −tb)zb
(b) +
t f
{
tb
[T [eA(t f −s)b(s)
(b) ds
+ [T [
(b)U[T [z f
(b).
(9.38b) 
Lemma 9.3 upper I plus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline upper UI + [T [
(b)U is regular. 
Proof First notice that not only upper UU, but also ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis[T [
(b) is positive semideﬁnite: 
StartLayout 1st Row v Superscript upper T Baseline ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline v equals ModifyingAbove v Superscript upper T Baseline normal upper Gamma Superscript upper T Baseline normal upper Gamma v With quotation dash equals ModifyingAbove left parenthesis normal upper Gamma v right parenthesis Superscript upper T Baseline normal upper Gamma v With quotation dash Superscript left parenthesis b right parenthesis Baseline equals ModifyingAbove parallel to normal upper Gamma v parallel to Subscript 2 Superscript 2 Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline greater than or equals 0 period EndLayoutvT [T [
(b)v = vT [T [v = ([v)T [v
(b)
= ||[v||2
2
(b) ≥0 .

9.7 Nonzero Costs for Displacements
197
Then their product ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline upper U[T [
(b)U is positive semideﬁnite as well. This follows immedi-
ately from [ 15] as normal upper Gamma left parenthesis omega right parenthesis Superscript upper T normal upper Gamma left parenthesis omega right parenthesis[(ω)T [(ω) is symmetric.
⬜
Since the matrix upper I plus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline upper UI + [T [
(b)U is regular, we get cf. (9.23a), (9.23b), 
StartLayout 1st Row 1st Column ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals left parenthesis upper I plus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline upper U right parenthesis Superscript negative 1 Baseline ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column plus left parenthesis upper I plus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline upper U right parenthesis Superscript negative 1 Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 3rd Row 1st Column Blank 2nd Column plus left parenthesis upper I plus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline upper U right parenthesis Superscript negative 1 Baseline ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma With quotation dash Superscript left parenthesis b right parenthesis Baseline upper U ModifyingAbove normal upper Gamma z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayout[T [z(t f )
(b) =
(
I + [T [
(b)U
)−1
[T [
(b)eA(t f −tb)zb
(b)
+
(
I + [T [
(b)U
)−1
t f
{
tb
[T [eA(t f −s)b(s)
(b) ds
+
(
I + [T [
(b)U
)−1
[T [
(b)U[z f
(b).
(9.38c) 
Putting (9.38c) into (9.36), corresponding to (9.25) we get the stochastic optimal 
open-loop control 
StartLayout 1st Row 1st Column u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Column equals minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove normal upper Gamma Superscript upper T Baseline normal upper Gamma z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals ellipsis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline comma EndLayoutu∗(t; tb, Itb) = −R−1BT eAT (t f −t) (
[T [z(t f )
(b) −[T [z f
(b))
= . . . ,
tb ≤t ≤t f ,
(9.39) 
which yields then the related stochastic optimal open-loop feedback control phi equals phi left parenthesis t comma script upper I Subscript t Baseline right parenthesisϕ =
ϕ(t, It) law corresponding to Theorem 9.2. 
9.7 
Nonzero Costs for Displacements 
Suppose here that upper Q not equals 0Q /= 0. According to (9.13a)–(9.13d), for the adjoint trajectory 
y equals y left parenthesis t comma omega right parenthesisy = y(t, ω) we have the system of differential equations 
StartLayout 1st Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus upper Q z left parenthesis t comma omega right parenthesis 2nd Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma EndLayout ˙y(t, ω) = −AT y(t, ω) −Qz(t, ω)
y(t f , ω) = ∇G(t f , ω, z(t f , ω)) ,
which has the following solution for given z left parenthesis t comma omega right parenthesisz(t, ω) and nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis∇G(t f , ω, z(t f , ω)): 
StartLayout 1st Row y left parenthesis t comma omega right parenthesis equals integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q z left parenthesis s comma omega right parenthesis d s plus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis period EndLayouty(t, ω) =
t f
{
t
eAT (s−t)Qz(s, ω) ds + eAT (t f −t)∇G(t f , ω, z(t f , ω)).
(9.40) 
Indeed, we get

198
9
Stochastic Optimal Open-Loop Feedback Control
StartLayout 1st Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals 0 plus upper I nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis equals nabla Subscript z Baseline upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis 2nd Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis equals 2nd Column minus e Superscript upper A Super Superscript upper T Superscript dot 0 Baseline upper Q z left parenthesis t comma omega right parenthesis 3rd Row 1st Column Blank 2nd Column minus integral Subscript t Superscript t Subscript f Baseline upper A Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q z left parenthesis s comma omega right parenthesis d s minus upper A Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column equals minus e Superscript upper A Super Superscript upper T Superscript dot 0 Baseline upper Q z left parenthesis t comma omega right parenthesis 5th Row 1st Column Blank 2nd Column minus upper A Superscript upper T Baseline left parenthesis integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q z left parenthesis s comma omega right parenthesis d s plus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis right parenthesis 6th Row 1st Column Blank 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus upper Q z left parenthesis t comma omega right parenthesis period EndLayouty(t f , ω) = 0 + I∇zG(t f , ω, z(t f , ω)) = ∇zG(t f , ω, z(t f , ω))
˙y(t, ω) = −eAT ·0Qz(t, ω)
−
t f
{
t
AT eAT (s−t)Qz(s, ω) ds −AT eAT (t f −t)∇G(t f , ω, z(t f , ω))
= −eAT ·0Qz(t, ω)
−AT
⎛
⎝
t f
{
t
eAT (s−t)Qz(s, ω) ds + eAT (t f −t)∇G(t f , ω, z(t f , ω))
⎞
⎠
= −AT y(t, ω) −Qz(t, ω) .
From (9.40) we then get 
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Column equals upper E Superscript left parenthesis b right parenthesis Baseline left parenthesis y left parenthesis t comma omega right parenthesis right parenthesis equals upper E left parenthesis y left parenthesis t comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis d s plus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline ModifyingAbove nabla upper G left parenthesis t Subscript f Baseline comma z left parenthesis t Subscript f Baseline right parenthesis right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayouty(b)(t) = E(b)(y(t, ω)) = E
(
y(t, ω)|Atb
)
=
t f
{
t
eAT (s−t)Qz(b)(s) ds + eAT (t f −t)∇G(t f , z(t f ))
(b).
(9.41) 
The unknown function ModifyingAbove z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesisz(t)
(b) and the vector z left parenthesis t Subscript f Baseline comma omega right parenthesisz(t f , ω) in this equation are both 
given, based on ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesisy(t)
(b), by the initial value problem, see (9.13a), (9.13b), 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis right parenthesis plus b left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals z Subscript b Baseline period EndLayout˙z(t, ω) = Az(t, ω) + B∇C−1 (
−BT y(b)(t)
)
+ b(t, ω)
(9.42a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis right parenthesis plus b left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals z Subscript b Baseline period EndLayoutz(tb, ω) = zb .
(9.42b) 
Taking expectations, considering the state vector at the ﬁnal time point t Subscript ft f , resp., 
yields the expressions: 
StartLayout 1st Row 1st Column ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis right parenthesis right parenthesis d s comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis b left parenthesis s comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis right parenthesis right parenthesis d s period EndLayoutz(b)(t) = eA(t−tb)zb
(b) +
t{
tb
eA(t−s) (
b(s)
(b) + B∇C−1 (
−BT y(b)(s)
))
ds,
(9.43a) 
StartLayout 1st Row 1st Column ModifyingAbove z With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis right parenthesis right parenthesis d s comma 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis b left parenthesis s comma omega right parenthesis plus upper B nabla upper C Superscript negative 1 Baseline left parenthesis minus upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis right parenthesis right parenthesis d s period EndLayoutz(t f , ω) = eA(t f −tb)zb +
t f
{
tb
eA(t f −s) (
b(s, ω) + B∇C−1 (
−BT y(b)(s)
))
ds.
(9.43b)

9.7 Nonzero Costs for Displacements
199
9.7.1 
Quadratic Control and Terminal Costs 
Corresponding to (9.18a), (9.18b) and (9.20a), (9.20b), suppose 
StartLayout 1st Row 1st Column Blank 2nd Column nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis equals z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis comma 2nd Row 1st Column Blank 2nd Column nabla upper C Superscript negative 1 Baseline left parenthesis w right parenthesis equals upper R Superscript negative 1 Baseline w period EndLayout∇G(t f , ω, z(t f , ω)) = z(t f , ω) −z f (ω) ,
∇C−1(w) = R−1w .
According to (9.12) and (9.11c), in the present case the stochastic optimal open-
loop control is given by 
StartLayout 1st Row u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma h left parenthesis t right parenthesis right parenthesis equals upper R Superscript negative 1 Baseline left parenthesis minus upper E left parenthesis upper B Superscript upper T Baseline y left parenthesis t comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis right parenthesis equals minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayoutu∗(t; tb, Itb) = ~
u∗(t, h(t)) = R−1 (
−E
(
BT y(t, ω)
||Atb
))
= −R−1BT y(t)
(b).
(9.44a) 
Hence, we need the function ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline equals ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesisy(b) = y(t)
(b). From (9.41) and (9.18a), (9.18b) we  
have 
StartLayout 1st Row 1st Column ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q ModifyingAbove z left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s period EndLayouty(t)
(b) = eAT (t f −t) (
z(t f )
(b) −z f
(b))
+
t f
{
t
eAT (s−t)Qz(s)
(b) ds .
(9.44b) 
Inserting (9.43a), (9.43b) into (9.44b), we have 
StartLayout 1st Row 1st Column ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s right parenthesis 3rd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 4th Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d tau right parenthesis d s period EndLayouty(t)
(b) = eAT (t f −t)
(
eA(t f −tb)zb
(b) −z f
(b)
+
t f
{
tb
eA(t f −s) (
b(s)
(b) −BR−1BT y(s)
(b))
ds
)
+
t f
{
t
eAT (s−t)Q
(
eA(s−tb)zb
(b)
+
s
{
tb
eA(s−τ) (
b(τ)
(b) −BR−1BT y(τ)
(b))
dτ
)
ds .
(9.44c) 
In the following we develop a condition that guarantees the existence and unique-
ness of a solution ModifyingAbove y With quotation dash Superscript b Baseline equals ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesisyb = y(t)
(b) of equation (9.44c). 
Theorem 9.3 In the space of continuous functions, the above Eq. (9.44c) has a 
unique solution if 
c Subscript upper B Baseline less than StartFraction 1 Over c Subscript upper A Baseline StartRoot c Subscript upper R Sub Superscript negative 1 Subscript Baseline left parenthesis t Subscript f Baseline minus t 0 right parenthesis left parenthesis 1 plus StartFraction left parenthesis t Subscript f Baseline minus t 0 right parenthesis c Subscript upper Q Baseline Over 2 EndFraction right parenthesis EndRoot EndFraction periodcB <
1
cA
/
cR−1(t f −t0)
(
1 + (t f −t0)cQ
2
) .
(9.45)

200
9
Stochastic Optimal Open-Loop Feedback Control
Here, 
StartLayout 1st Row 1st Column c Subscript upper A Baseline colon equals sup Underscript t Subscript b Baseline less than or equals t less than or equals s less than or equals t Subscript f Baseline Endscripts parallel to e Superscript upper A left parenthesis t minus s right parenthesis Baseline parallel to Subscript upper F 2nd Column Blank 3rd Column c Subscript upper B Baseline colon equals parallel to upper B parallel to Subscript upper F 4th Column Blank 5th Column c Subscript upper R Sub Superscript negative 1 Baseline colon equals parallel to upper R Superscript negative 1 Baseline parallel to Subscript upper F 6th Column Blank 7th Column c Subscript upper Q Baseline colon equals parallel to upper Q parallel to Subscript upper F Baseline comma EndLayoutcA :=
sup
tb≤t≤s≤t f
||eA(t−s)||F
cB := ||B||F
cR−1 := ||R−1||F
cQ := ||Q||F,
and the index upper FF denotes the Frobenius-Norm. 
Proof The proof of the existence and uniqueness of such a solution is based on 
the Banach ﬁxed point theorem. For applying this theorem, we consider the Banach 
space 
script upper X equals left brace f colon left bracket t Subscript b Baseline semicolon t Subscript f Baseline right bracket right arrow double struck upper R Superscript 2 m Baseline colon f c o n t i n u o u s right braceX =
{
f : [tb; t f ] →R2m : f continuous
}
(9.46a) 
equipped with the supremum norm 
parallel to f parallel to Subscript upper L Baseline colon equals sup Underscript t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline Endscripts parallel to f left parenthesis t right parenthesis parallel to Subscript 2 Baseline comma|| f ||L := sup
tb≤t≤t f
|| f (t)||2 ,
(9.46b) 
where parallel to dot parallel to Subscript 2|| · ||2 denotes the Euclidean norm on double struck upper R Superscript 2 mR2m. 
Now we study the operator script upper T colon script upper X right arrow script upper XT : X →X deﬁned by 
StartLayout 1st Row 1st Column left parenthesis script upper T f right parenthesis left parenthesis t right parenthesis equals 2nd Column e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column plus 2nd Column integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline f left parenthesis s right parenthesis right parenthesis d s right parenthesis 3rd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 4th Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline f left parenthesis tau right parenthesis right parenthesis d tau right parenthesis d s period EndLayout(T f )(t) =eAT (t f −t)
(
eA(t f −tb)zb
(b) −z f
(b)
+
t f
{
tb
eA(t f −s) (
b(s)
(b) −BR−1BT f (s)
)
ds
)
+
t f
{
t
eAT (s−t)Q
(
eA(s−tb)zb
(b)
+
s
{
tb
eA(s−τ) (
b(τ)
(b) −BR−1BT f (τ)
)
dτ
)
ds .
(9.47) 
The norm of the differencescript upper T f minus script upper T gT f −T g of the images of two different elementsf comma g element of script upper X f, g ∈
X with respect to script upper TT may be estimated as follows: 
StartLayout 1st Row 1st Column Blank 2nd Column parallel to script upper T f minus script upper T g parallel to 2nd Row 1st Column Blank 2nd Column equals sup Underscript t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline Endscripts left brace double vertical bar e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline left parenthesis g left parenthesis s right parenthesis minus f left parenthesis s right parenthesis right parenthesis d s 3rd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline left parenthesis g left parenthesis tau right parenthesis minus f left parenthesis tau right parenthesis right parenthesis d tau d s double vertical bar Subscript 2 Baseline right brace period EndLayout||T f −T g||
= sup
tb≤t≤t f
{ ||||||||||||
eAT (t f −t)
t f
{
tb
eA(t f −s)BR−1BT (g(s) −f (s)) ds
+
t f
{
t
eAT (s−t)Q
s
{
tb
eA(s−τ)BR−1BT (g(τ) −f (τ)) dτ ds
||||||||||||
2
⎫
⎬
⎭.
(9.48a)

9.7 Nonzero Costs for Displacements
201
Note that the Frobenius norm is submultiplicative and compatible with the Euclidian 
norm. Using these properties, we get 
StartLayout 1st Row 1st Column Blank 2nd Column parallel to script upper T f minus script upper T g parallel to 2nd Row 1st Column less than or equals 2nd Column sup Underscript t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline Endscripts left brace c Subscript upper A Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline c Subscript upper A Baseline c Subscript upper B Baseline c Subscript upper R Sub Superscript negative 1 Subscript Baseline c Subscript upper B Baseline parallel to f left parenthesis s right parenthesis minus g left parenthesis s right parenthesis parallel to Subscript 2 Baseline d s 3rd Row 1st Column Blank 2nd Column plus c Subscript upper A Baseline c Subscript upper Q Baseline integral Subscript t Superscript t Subscript f Baseline Baseline integral Subscript t Subscript b Baseline Superscript s Baseline c Subscript upper A Baseline c Subscript upper B Baseline c Subscript upper R Sub Superscript negative 1 Subscript Baseline c Subscript upper B Baseline parallel to f left parenthesis tau right parenthesis minus g left parenthesis tau right parenthesis parallel to Subscript 2 Baseline d tau d s right brace 4th Row 1st Column less than or equals 2nd Column sup Underscript t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline Endscripts left brace c Subscript upper A Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline c Subscript upper A Baseline c Subscript upper B Baseline c Subscript upper R Sub Superscript negative 1 Subscript Baseline c Subscript upper B Baseline sup Underscript t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline Endscripts parallel to f left parenthesis s right parenthesis minus g left parenthesis s right parenthesis parallel to Subscript 2 Baseline d s 5th Row 1st Column Blank 2nd Column plus c Subscript upper A Baseline c Subscript upper Q Baseline integral Subscript t Superscript t Subscript f Baseline Baseline integral Subscript t Subscript b Baseline Superscript s Baseline c Subscript upper A Baseline c Subscript upper B Baseline c Subscript upper R Sub Superscript negative 1 Subscript Baseline c Subscript upper B Baseline sup Underscript t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline Endscripts parallel to f left parenthesis tau right parenthesis minus g left parenthesis tau right parenthesis parallel to Subscript 2 Baseline d tau d s right brace 6th Row 1st Column Blank 2nd Column equals parallel to f minus g parallel to c Subscript upper A Superscript 2 Baseline c Subscript upper B Superscript 2 Baseline c Subscript upper R Sub Superscript negative 1 Baseline sup Underscript t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline Endscripts left brace left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis plus StartFraction c Subscript upper Q Baseline Over 2 EndFraction left parenthesis left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis squared minus left parenthesis t minus t Subscript b Baseline right parenthesis squared right parenthesis right brace 7th Row 1st Column less than or equals 2nd Column parallel to f minus g parallel to c Subscript upper A Superscript 2 Baseline c Subscript upper B Superscript 2 Baseline c Subscript upper R Sub Superscript negative 1 Subscript Baseline left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis left parenthesis 1 plus StartFraction c Subscript upper Q Baseline Over 2 EndFraction left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis right parenthesis period EndLayout||T f −T g||
≤sup
tb≤t≤t f
{
cA
t f
{
tb
cAcBcR−1cB|| f (s) −g(s)||2 ds
+ cAcQ
t f
{
t
s
{
tb
cAcBcR−1cB|| f (τ) −g(τ)||2 dτ ds
}
≤sup
tb≤t≤t f
{
cA
t f
{
tb
cAcBcR−1cB sup
tb≤t≤t f
|| f (s) −g(s)||2 ds
+ cAcQ
t f
{
t
s
{
tb
cAcBcR−1cB sup
tb≤t≤t f
|| f (τ) −g(τ)||2 dτ ds
}
= || f −g||c2
Ac2
BcR−1sup
tb≤t≤t f
{
(t f −tb) + cQ
2
(
(t f −tb)2 −(t −tb)2)}
≤|| f −g||c2
Ac2
BcR−1(t f −tb)(1 + cQ
2 (t f −tb)) .
(9.48b) 
Thus, script upper TT is a contraction if 
StartLayout 1st Row c Subscript upper B Superscript 2 Baseline less than StartStartFraction 1 OverOver c Subscript upper A Superscript 2 Baseline c Subscript upper R Sub Superscript negative 1 Subscript Baseline left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis left parenthesis 1 plus StartFraction c Subscript upper Q Baseline Over 2 EndFraction left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis right parenthesis EndEndFraction EndLayoutc2
B <
1
c2
AcR−1(t f −tb)
(
1 + cQ
2 (t f −tb)
)
(9.48c) 
and therefore 
StartLayout 1st Row c Subscript upper B Baseline less than StartFraction 1 Over c Subscript upper A Baseline StartRoot c Subscript upper R Sub Superscript negative 1 Subscript Baseline left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis left parenthesis 1 plus StartFraction c Subscript upper Q Baseline Over 2 EndFraction left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis right parenthesis EndRoot EndFraction period EndLayoutcB <
1
cA
/
cR−1(t f −tb)
(
1 + cQ
2 (t f −tb)
) .
(9.48d) 
In order to get a condition that is independent of t Subscript btb, we take the worst case t Subscript b Baseline equals t 0tb = t0, 
hence, 
StartLayout 1st Row c Subscript upper B Baseline less than StartFraction 1 Over c Subscript upper A Baseline StartRoot c Subscript upper R Sub Superscript negative 1 Subscript Baseline left parenthesis t Subscript f Baseline minus t 0 right parenthesis left parenthesis 1 plus StartFraction left parenthesis t Subscript f Baseline minus t 0 right parenthesis c Subscript upper Q Baseline Over 2 EndFraction right parenthesis EndRoot EndFraction period EndLayoutcB <
1
cA
/
cR−1(t f −t0)
(
1 + (t f −t0)cQ
2
) .
(9.48e)
⬜
Remark 9.4 Condition (9.48e) holds if the matrixnormal upper Gamma[ in (9.1c) has a sufﬁciently small 
Frobenius norm. Indeed, according to (9.2b) we have

202
9
Stochastic Optimal Open-Loop Feedback Control
StartLayout 1st Row upper B equals StartBinomialOrMatrix 0 Choose upper M Superscript negative 1 Baseline normal upper Gamma EndBinomialOrMatrix EndLayoutB =
(
0
M−1[
)
and therefore 
StartLayout 1st Row c Subscript upper B Baseline equals parallel to upper B parallel to Subscript upper F Baseline equals parallel to upper M Superscript negative 1 Baseline normal upper Gamma parallel to Subscript upper F Baseline less than or equals parallel to upper M Superscript negative 1 Baseline parallel to Subscript upper F Baseline dot parallel to normal upper Gamma parallel to Subscript upper F Baseline period EndLayoutcB = ||B||F = ||M−1[||F ≤||M−1||F · ||[||F .
Having ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesisy(b)(t), according to (9.44a) a stochastic optimal open-loop control 
u Superscript asterisk Baseline left parenthesis t right parenthesis equals u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesisu∗(t) = u∗(t; tb, Itb), t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f , reads 
StartLayout 1st Row u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis equals minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline period EndLayoutu∗(t; tb, Itb) = −R−1BT y(t)
(b).
(9.49a) 
Moreover, 
StartLayout 1st Row phi left parenthesis t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis colon equals u Superscript asterisk Baseline left parenthesis t Subscript b Baseline right parenthesis comma t 0 less than or equals t Subscript b Baseline less than or equals t Subscript f Baseline EndLayoutϕ(tb, Itb) := u∗(tb), t0 ≤tb ≤t f
(9.49b) 
is then a stochastic optimal open-loop feedback control law. 
Remark 9.5 Puttingupper Q equals 0Q = 0 in (9.40), we again obtain the stochastic optimal open-
loop feedback control law (9.26) in Sect. 9.6.1.1. 
9.8 
Stochastic Weight Matrix upper Q equals upper Q left parenthesis t comma omega right parenthesis Q = Q(t, ω)
In the following we consider the case that, cf. (3.6h,i), the weight matrix for the 
evaluation of the displacements z equals z left parenthesis t comma omega right parenthesisz = z(t, ω) is stochastic and may depend also on 
time t comma t 0 less than or equals t less than or equals t Subscript f Baselinet, t0 ≤t ≤t f . In order to take into account especially the size of the additive 
disturbance term b equals b left parenthesis t comma omega right parenthesisb = b(t, ω), cf.  (9.7b), in the following we consider the stochastic 
weight matrix 
upper Q left parenthesis t comma omega right parenthesis colon equals parallel to b left parenthesis t comma omega right parenthesis parallel to squared upper Q commaQ(t, ω) := ||b(t, ω)||2Q,
(9.50a) 
where upper QQ is again a positive (semi) deﬁnite 2 m times 2 m2m × 2m matrix, and parallel to dot parallel to|| · || denotes the 
Euclidian norm. 
According to (9.13c), (9.13d), for the adjoint variable y equals y left parenthesis t comma omega right parenthesisy = y(t, ω) we then have 
the system of differential equations 
StartLayout 1st Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus beta left parenthesis t comma omega right parenthesis upper Q z left parenthesis t comma omega right parenthesis 2nd Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals nabla upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis comma EndLayout ˙y(t, ω) = −AT y(t, ω) −β(t, ω)Qz(t, ω)
y(t f , ω) = ∇G(t f , ω, z(t f , ω)),
where the stochastic function beta equals beta left parenthesis t comma omega right parenthesisβ = β(t, ω) is deﬁned by 
beta left parenthesis t comma omega right parenthesis colon equals parallel to b left parenthesis t comma omega right parenthesis parallel to squared periodβ(t, ω) := ||b(t, ω)||2.
(9.50b) 
Assuming that we have also the weighted terminal costs,

9.8 Stochastic Weight Matrix Q = Q(t, ω)
203
upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis right parenthesis colon equals one half beta left parenthesis t Subscript f Baseline comma omega right parenthesis parallel to z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis parallel to squared commaG(t f , ω, z(t f , ω)) := 1
2β(t f , ω)||z(t f , ω) −z f (ω)||2,
(9.50c) 
for the adjoint variable y equals y left parenthesis t comma omega right parenthesisy = y(t, ω), we have the boundary value problem 
StartLayout 1st Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus beta left parenthesis t comma omega right parenthesis upper Q z left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals beta left parenthesis t Subscript f Baseline comma omega right parenthesis left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column equals beta left parenthesis t Subscript f Baseline comma omega right parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus beta left parenthesis t Subscript f Baseline comma omega right parenthesis z Subscript f Baseline left parenthesis omega right parenthesis period EndLayout ˙y(t, ω) = −AT y(t, ω) −β(t, ω)Qz(t, ω)
(9.51a) 
StartLayout 1st Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis minus beta left parenthesis t comma omega right parenthesis upper Q z left parenthesis t comma omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals beta left parenthesis t Subscript f Baseline comma omega right parenthesis left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column equals beta left parenthesis t Subscript f Baseline comma omega right parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus beta left parenthesis t Subscript f Baseline comma omega right parenthesis z Subscript f Baseline left parenthesis omega right parenthesis period EndLayouty(t f , ω) = β(t f , ω)
(
z(t f , ω) −z f (ω)
)
= β(t f , ω)z(t f , ω) −β(t f , ω)z f (ω).
(9.51b) 
Corresponding to (9.40), from (9.51a), (9.51b) we then get the solution 
StartLayout 1st Row 1st Column y left parenthesis t comma omega right parenthesis 2nd Column equals integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q beta left parenthesis s comma omega right parenthesis z left parenthesis s comma omega right parenthesis d s 2nd Row 1st Column Blank 2nd Column plus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis beta left parenthesis t Subscript f Baseline comma omega right parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus beta left parenthesis t Subscript f Baseline comma omega right parenthesis z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayouty(t, ω) =
t f
{
t
eAT (s−t)Qβ(s, ω)z(s, ω) ds
+ eAT (t f −t) (
β(t f , ω)z(t f , ω) −β(t f , ω)z f (ω)
)
,
tb ≤t ≤t f .
(9.52a) 
Taking conditional expectations of (9.52a) with respect to German upper A Subscript t Sub Subscript bAtb, corresponding to 
(9.41) we obtain 
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove beta left parenthesis t Subscript f Baseline right parenthesis z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove beta left parenthesis t Subscript f Baseline right parenthesis z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q ModifyingAbove beta left parenthesis s right parenthesis z left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s comma t greater than or equals t Subscript b Baseline period EndLayouty(b)(t) = eAT (t f −t) (
β(t f )z(t f )
(b) −β(t f )z f
(b))
+
t f
{
t
eAT (s−t)Qβ(s)z(s)
(b) ds,
t ≥tb.
(9.52b) 
Since the matricesupper A comma upper BA, B are assumed to be ﬁxed,  see (9.7b), from (9.8c) and (9.52b) 
we get 
StartLayout 1st Row 1st Column h left parenthesis t right parenthesis 2nd Column equals upper E left parenthesis upper B Superscript upper T Baseline y left parenthesis t comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis equals upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript b Baseline period EndLayouth(t) = E
(
BT y(t, ω)|Atb
)
= BT y(b)(t),
t ≥tb.
(9.53a) 
Consequently, corresponding to (9.11c) and (9.12), with (9.53a) the optimal open-
loop control u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t right parenthesisu∗= u∗(t) is given then by 
StartLayout 1st Row 1st Column u Superscript asterisk Baseline left parenthesis t semicolon script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Column equals upper R Superscript negative 1 Baseline left parenthesis minus h left parenthesis t right parenthesis right parenthesis period EndLayoutu∗(t; Itb) = R−1 (−h(t)) .
(9.53b) 
Moreover, the weighted conditional mean trajectory 
StartLayout 1st Row t right arrow ModifyingAbove beta left parenthesis t right parenthesis z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline equals upper E left parenthesis beta left parenthesis t comma omega right parenthesis z left parenthesis t comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t greater than or equals t Subscript b Baseline EndLayoutt →β(t)z(t)
(b) = E
(
β(t, ω)z(t, ω)|Atb
)
,
t ≥tb
(9.54a) 
is determined in the present open-loop feedback approach as follows. We ﬁrst remem-
ber that the optimal trajectory is deﬁned by the initial value problem (9.13a), (9.13b). 
Approximating the weighted conditional mean trajectory (9.54a) by

204
9
Stochastic Optimal Open-Loop Feedback Control
StartLayout 1st Row t right arrow upper E left parenthesis beta left parenthesis t Subscript b Baseline comma omega right parenthesis z left parenthesis t comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline comma EndLayoutt →E
(
β(tb, ω)z(t, ω)|Atb
)
,
tb ≤t ≤t f ,
(9.54b) 
we multiply (9.13a), (9.13b) by  beta left parenthesis t Subscript b Baseline comma omega right parenthesisβ(tb, ω). Thus, the trajectory t right arrow beta left parenthesis t Subscript b Baseline comma omega right parenthesis z left parenthesis t comma omega right parenthesist →β(tb, ω)z(t, ω), 
t greater than or equals t Subscript bt ≥tb, is the solution of the initial value problem 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction beta left parenthesis t Subscript b Baseline comma omega right parenthesis z left parenthesis t comma omega right parenthesis 2nd Column equals upper A beta left parenthesis t Subscript b Baseline comma omega right parenthesis z left parenthesis t comma omega right parenthesis minus upper B upper R Superscript negative 1 Baseline upper B beta left parenthesis t Subscript b Baseline comma omega right parenthesis ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus beta left parenthesis t Subscript b Baseline comma omega right parenthesis b left parenthesis t comma omega right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column beta left parenthesis t Subscript b Baseline comma omega right parenthesis z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals beta left parenthesis t Subscript b Baseline comma omega right parenthesis z Subscript b Baseline period EndLayout d
dt β(tb, ω)z(t, ω) = Aβ(tb, ω)z(t, ω) −BR−1Bβ(tb, ω)y(b)(t)
+ β(tb, ω)b(t, ω)
(9.55a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction beta left parenthesis t Subscript b Baseline comma omega right parenthesis z left parenthesis t comma omega right parenthesis 2nd Column equals upper A beta left parenthesis t Subscript b Baseline comma omega right parenthesis z left parenthesis t comma omega right parenthesis minus upper B upper R Superscript negative 1 Baseline upper B beta left parenthesis t Subscript b Baseline comma omega right parenthesis ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus beta left parenthesis t Subscript b Baseline comma omega right parenthesis b left parenthesis t comma omega right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column beta left parenthesis t Subscript b Baseline comma omega right parenthesis z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals beta left parenthesis t Subscript b Baseline comma omega right parenthesis z Subscript b Baseline period EndLayoutβ(tb, ω)z(tb, ω) = β(tb, ω)zb .
(9.55b) 
Taking conditional expectations of (9.55a), (9.55b) with respect toGerman upper A Subscript t Sub Subscript bAtb, for the approx-
imate weighted conditional mean trajectory (9.54b) we obtain the initial value prob-
lem 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals upper A ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B ModifyingAbove beta With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis b left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline 3rd Row 1st Column Blank 4th Row 1st Column ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z left parenthesis t Subscript b Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline comma EndLayout d
dt β(tb)z(t)
(b) = Aβ(tb)z(t)
(b) −BR−1Bβ
(b)(tb)y(b)(t)
+ β(tb)b(t)
(b)
(9.56a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals upper A ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B ModifyingAbove beta With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis b left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline 3rd Row 1st Column Blank 4th Row 1st Column ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z left parenthesis t Subscript b Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline comma EndLayoutβ(tb)z(tb)
(b) = β(tb)zb
(b) ,
(9.56b) 
where ModifyingAbove beta With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis colon equals upper E left parenthesis beta left parenthesis t comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesisβ
(b)(t) := E
(
β(t, ω)|Atb
)
, t greater than or equals t Subscript b t ≥tb. Consequently, the approximate weighted 
conditional mean trajectory (9.54b) can be represented, cf. (9.43a), (9.43b), by 
StartLayout 1st Row 1st Column ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z Subscript b With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove beta With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis right parenthesis d s comma 3rd Row 1st Column t Subscript b Baseline less than or equals t less than or equals t Subscript f Baseline period EndLayoutβ(tb)z(t)
(b) = eA(t−tb)β(tb)zb
(b)
+
t{
tb
eA(t−s) (
β(tb)b(s)
(b) −BR−1BT β
(b)(tb)y(b)(s)
)
ds,
tb ≤t ≤t f .
(9.57) 
Obviously, a corresponding approximate representation for 
t right arrow ModifyingAbove beta left parenthesis t Subscript f Baseline right parenthesis z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesist →β(t f )z(t f )
(b)
can be obtained, cf. (9.43b), by using (9.57) for t equals t Subscript ft = t f . 
Inserting now (9.57) into (9.52b), corresponding to (9.44c) we ﬁnd the following 
approximate ﬁxed point condition for the conditional mean adjoint trajectory t right arrow from bar ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baselinet |→
y(b)(t), tb ≤t ≤t f , needed in the representation (9.53b) of the stochastic optimal 
open-loop control u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t right parenthesis comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baselineu∗= u∗(t), tb ≤t ≤t f :

9.8 Stochastic Weight Matrix Q = Q(t, ω)
205
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove beta left parenthesis t Subscript f Baseline right parenthesis z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove beta left parenthesis t Subscript f Baseline right parenthesis z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q ModifyingAbove beta left parenthesis s right parenthesis z left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 2nd Row 1st Column almost equals 2nd Column e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove beta left parenthesis t Subscript f Baseline right parenthesis z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 3rd Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove beta With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis right parenthesis d s right parenthesis 4th Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 5th Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline left parenthesis ModifyingAbove beta left parenthesis t Subscript b Baseline right parenthesis b left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove beta With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis d tau right parenthesis d s period EndLayouty(b)(t) = eAT (t f −t) (
β(t f )z(t f )
(b) −β(t f )z f
(b))
+
t f
{
tb
eAT (s−t)Qβ(s)z(s)
(b) ds
≈eAT (t f −t)
(
eA(t f −tb)β(tb)zb
(b) −β(t f )z f
(b)
+
t f
{
tb
eA(t f −s) (
β(tb)b(s)
(b) −BR−1BT β
(b)(tb)y(b)(s)
)
ds
)
+
t f
{
t
eAT (s−t)Q
(
eA(s−tb)β(tb)zb
(b)
+
s
{
tb
eA(s−τ) (
β(tb)b(τ)
(b) −BR−1BT β
(b)(tb)y(b)(τ)
)
dτ
)
ds.
(9.58) 
Corresponding to Theorem 9.3 we can also develop a condition that guarantees 
the existence and uniqueness of a solution ModifyingAbove y With quotation dash Superscript b Baseline equals ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesisyb = y(b)(t) of equation (9.58). 
Theorem 9.4 In the space of continuous functions, Eq. (9.58) has a unique solution 
if 
c Subscript upper B Baseline less than StartFraction 1 Over c Subscript upper A Baseline StartRoot c Subscript upper R Sub Superscript negative 1 Subscript Baseline ModifyingAbove eta With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis left parenthesis t Subscript f Baseline minus t 0 right parenthesis left parenthesis 1 plus StartFraction left parenthesis t Subscript f Baseline minus t 0 right parenthesis c Subscript upper Q Baseline Over 2 EndFraction right parenthesis EndRoot EndFraction periodcB <
1
cA
/
cR−1η(b)(tb)(t f −t0)
(
1 + (t f −t0)cQ
2
) .
(9.59) 
Here again, 
StartLayout 1st Row 1st Column c Subscript upper A Baseline colon equals sup Underscript t Subscript b Baseline less than or equals t less than or equals s less than or equals t Subscript f Baseline Endscripts parallel to e Superscript upper A left parenthesis t minus s right parenthesis Baseline parallel to Subscript upper F 2nd Column Blank 3rd Column c Subscript upper B Baseline colon equals parallel to upper B parallel to Subscript upper F 4th Column Blank 5th Column c Subscript upper R Sub Superscript negative 1 Baseline colon equals parallel to upper R Superscript negative 1 Baseline parallel to Subscript upper F 6th Column Blank 7th Column c Subscript upper Q Baseline colon equals parallel to upper Q parallel to Subscript upper F Baseline comma EndLayoutcA :=
sup
tb≤t≤s≤t f
||eA(t−s)||F
cB := ||B||F
cR−1 := ||R−1||F
cQ := ||Q||F,
and the index upper FF denotes the Frobenius-Norm. 
According to (9.53a), (9.53b), the stochastic optimal open-loop control u Superscript asterisk Baseline left parenthesis t right parenthesisu∗(t), 
t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f , can be obtained as follows: 
Theorem 9.5 WithasolutionModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesisy(b)(t)oftheﬁxedpointcondition(9.58),thestochastic 
optimal open-loop control u Superscript asterisk Baseline left parenthesis t right parenthesisu∗(t), t Subscript b Baseline less than or equals t less than or equals t Subscript ftb ≤t ≤t f , reads 
StartLayout 1st Row u Superscript asterisk Baseline left parenthesis t semicolon script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis equals minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis period EndLayoutu∗(t; Itb) = −R−1BT y(b)(t).
(9.60a) 
Moreover, 
StartLayout 1st Row phi left parenthesis t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis colon equals u Superscript asterisk Baseline left parenthesis t Subscript b Baseline semicolon script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t 0 less than or equals t Subscript b Baseline less than or equals t Subscript f Baseline EndLayoutϕ(tb, Itb) := u∗(tb; Itb),
t0 ≤tb ≤t f
(9.60b) 
is then the stochastic optimal open-loop feedback control law.

206
9
Stochastic Optimal Open-Loop Feedback Control
9.9 
Uniformly Bounded Sets of Controls upper D Subscript t Baseline comma t 0 less than or equals t less than or equals t Subscript f BaselineDt, t0 ≤t ≤t f
The above-shown Theorem 9.4 guaranteeing the existence of a solution of the ﬁxed 
point condition (9.58) can be generalized considerably if we suppose that the sets 
upper D Subscript tDt of feasible controls u equals u left parenthesis t right parenthesisu = u(t) are uniformly bounded with respect to the time 
t comma t 0 less than or equals t less than or equals t Subscript f Baselinet, t0 ≤t ≤t f . Hence, in the following we suppose again: 
• time-independent and deterministic matrices of coefﬁcients, hence 
upper A left parenthesis t comma omega right parenthesis equals upper A upper B left parenthesis t comma omega right parenthesis equals upper BA(t, ω) = A
B(t, ω) = B
(9.61a) 
• quadratic cost functions, 
StartLayout 1st Row 1st Column Blank 2nd Column upper C left parenthesis u right parenthesis equals one half u Superscript upper T Baseline upper R u upper Q left parenthesis z right parenthesis equals one half z Superscript upper T Baseline upper Q z 2nd Row 1st Column Blank 2nd Column upper G left parenthesis t Subscript f Baseline comma omega comma z left parenthesis t Subscript f Baseline comma omega right parenthesis equals one half double vertical bar z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis double vertical bar Subscript 2 Superscript 2 EndLayoutC(u) = 1
2uT Ru
Q(z) = 1
2zT Qz
G(t f , ω, z(t f , ω) = 1
2
||||z(t f , ω) −z f (ω)
||||2
2
(9.61b) 
• uniformly bounded sets of feasible controls, hence, we assume that there exists a 
constant upper C Subscript upper D Baseline greater than or equals 0CD ≥0 such that 
StartLayout 1st Row parallel to u parallel to Subscript 2 Baseline less than or equals c Subscript upper D Baseline f o r a l l u element of union Underscript t element of upper T Endscripts upper D Subscript t Baseline period EndLayout||u||2 ≤cD
for all u ∈
U
t∈T
Dt.
(9.61c) 
According to the above assumed deterministic coefﬁcient matrices upper A comma bA, b, the  upper HH-
minimal control depends only on the conditional expectation of the adjoint trajectory, 
hence, 
StartLayout 1st Row ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t right parenthesis equals ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis t comma ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis period EndLayout~
u∗(t) = ~
u∗(t, y(t)
(b)).
(9.62) 
Thus, the integral form of the related 2-point boundary value problem reads 
StartLayout 1st Row 1st Column z left parenthesis omega comma t right parenthesis 2nd Column equals z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline left parenthesis upper A z left parenthesis omega comma s right parenthesis plus b left parenthesis s comma omega right parenthesis plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis s comma ModifyingAbove y left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s 2nd Row 1st Column Blank 3rd Row 1st Column y left parenthesis omega comma t right parenthesis 2nd Column equals left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline left parenthesis upper A Superscript upper T Baseline y left parenthesis omega comma s right parenthesis plus upper Q z left parenthesis s comma omega right parenthesis right parenthesis d s period EndLayoutz(ω, t) = zb +
t{
tb
(
Az(ω, s) + b(s, ω) + B ~
u∗(s, y(s)
(b))
ds
(9.63a) 
StartLayout 1st Row 1st Column z left parenthesis omega comma t right parenthesis 2nd Column equals z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline left parenthesis upper A z left parenthesis omega comma s right parenthesis plus b left parenthesis s comma omega right parenthesis plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis s comma ModifyingAbove y left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s 2nd Row 1st Column Blank 3rd Row 1st Column y left parenthesis omega comma t right parenthesis 2nd Column equals left parenthesis z left parenthesis t Subscript f Baseline comma omega right parenthesis minus z Subscript f Baseline left parenthesis omega right parenthesis right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline left parenthesis upper A Superscript upper T Baseline y left parenthesis omega comma s right parenthesis plus upper Q z left parenthesis s comma omega right parenthesis right parenthesis d s period EndLayouty(ω, t) =
(
z(t f , ω) −z f (ω)
)
+
t f
{
t
(
AT y(ω, s) + Qz(s, ω)
)
ds.
(9.63b) 
Consequently, for the conditional expectations of the trajectories we get

9.9 Uniformly Bounded Sets of Controls Dt, t0 ≤t ≤t f
207
StartLayout 1st Row 1st Column ModifyingAbove z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline left parenthesis upper A ModifyingAbove z left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis s comma ModifyingAbove y left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline left parenthesis upper A Superscript upper T Baseline ModifyingAbove y left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper Q ModifyingAbove z left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s period EndLayoutz(t)
(b) = zb
(b) +
t{
tb
(
Az(s)
(b) + b(s)
(b) + B ~
u∗(s, y(s)
(b))
ds
(9.64a) 
StartLayout 1st Row 1st Column ModifyingAbove z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline left parenthesis upper A ModifyingAbove z left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis s comma ModifyingAbove y left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline left parenthesis upper A Superscript upper T Baseline ModifyingAbove y left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper Q ModifyingAbove z left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s period EndLayouty(t)
(b) =
(
z(t f )
(b) −z f
(b))
+
t f
{
t
(
AT y(s)
(b) + Qz(s)
(b))
ds.
(9.64b) 
Using the matrix exponential function with respect to upper AA, we have  
StartLayout 1st Row 1st Column ModifyingAbove z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis s comma ModifyingAbove y left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q ModifyingAbove z left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s period EndLayoutz(t)
(b) = eA(t−tb)zb
(b) +
t{
tb
eA(t−s) (
b(s)
(b) + B ~
u∗(s, y(s)
(b))
ds
(9.65a) 
StartLayout 1st Row 1st Column ModifyingAbove z left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis s comma ModifyingAbove y left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q ModifyingAbove z left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s period EndLayouty(t)
(b) = eAT (t f −t) (
z(t f )
(b) −z f
(b))
+
t f
{
t
eAT (s−t)Qz(s)
(b) ds.
(9.65b) 
Putting (9.65a) into (9.65b), for ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesisy(t)
(b) we get then the following ﬁxed point 
condition 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis tau comma ModifyingAbove y left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d tau right parenthesis d s EndLayouty(t)
(b) = eAT (t f −t) (
z(t f )
(b) −z f
(b))
+
t f
{
t
eAT (s−t)Q
⎛
⎝eA(s−tb)zb
(b) +
s
{
tb
eA(s−τ) (
b(τ)
(b) + B ~
u∗(τ, y(τ)
(b))
dτ
⎞
⎠ds
(9.66) 
For the consideration of the existence of a solution of the above ﬁxed point equa-
tion (9.66) we need several auxiliary tools. According to the assumption (9.61c), 
next we have the following lemma: 
Lemma 9.4 There exist constants c Subscript z Baseline comma c Subscript upper G Baseline greater than 0cz, cG > 0 such that 
StartLayout 1st Row 1st Column Blank 2nd Column parallel to ModifyingAbove z left parenthesis f left parenthesis dot right parenthesis comma t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to less than or equals c Subscript z Baseline 3rd Column Blank 4th Column a n d 5th Column Blank 6th Column parallel to ModifyingAbove nabla Subscript z Baseline upper G left parenthesis z left parenthesis f left parenthesis dot right parenthesis comma t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to less than or equals c Subscript upper G Baseline 7th Column Blank 8th Column Blank EndLayout||z( f (·), t)
(b)|| ≤cz
and
||∇zG(z( f (·), t)
(b)|| ≤cG
(9.67a) 
for each time t comma t Subscript b Baseline less than or equals t less than or equals t Subscript f Baselinet, tb ≤t ≤t f , and all f element of script upper C left parenthesis upper T semicolon double struck upper R Superscript m Baseline right parenthesis f ∈C(T ; Rm), where 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove z left parenthesis f left parenthesis dot right parenthesis comma t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline colon equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis f left parenthesis s right parenthesis comma s right parenthesis right parenthesis d s EndLayoutz( f (·), t)
(b) := eA(t−tb)zb
(b) +
t{
tb
eA(t−s) (
b(s)
(b) + B ~
u∗( f (s), s)
)
ds
(9.67b)

208
9
Stochastic Optimal Open-Loop Feedback Control
Proof With c Subscript upper A Baseline colon equals e Superscript parallel to upper A parallel to Super Subscript upper F Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline comma c Subscript upper B Baseline colon equals parallel to upper B parallel to Subscript upper F BaselinecA := e||A||F(t f −tb), cB := ||B||F and c Subscript ModifyingAbove b With quotation dash Sub Superscript left parenthesis b right parenthesis Baseline colon equals parallel to ModifyingAbove b left parenthesis dot right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript normal infinitycb
(b) := ||b(·)
(b)||∞the following 
inequalities hold: 
StartLayout 1st Row 1st Column Blank 2nd Column parallel to ModifyingAbove z left parenthesis f left parenthesis dot right parenthesis comma t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript 2 Baseline less than or equals c Subscript upper A Baseline left parenthesis parallel to ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript 2 Baseline plus left parenthesis c Subscript ModifyingAbove b With quotation dash Sub Superscript left parenthesis b right parenthesis Subscript Baseline plus c Subscript upper B Baseline c Subscript upper D Baseline right parenthesis left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis right parenthesis less than or equals c Subscript z Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column parallel to ModifyingAbove nabla Subscript z Baseline upper G left parenthesis z left parenthesis f left parenthesis dot right parenthesis comma t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript 2 Baseline equals parallel to ModifyingAbove z left parenthesis f left parenthesis dot right parenthesis comma t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to less than or equals c Subscript z Baseline plus parallel to ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript 2 Baseline less than or equals c Subscript upper G Baseline comma EndLayout||z( f (·), t)
(b)||2 ≤cA
(
||zb
(b)||2 +
(
cb
(b) + cBcD
)
(t f −tb)
)
≤cz
(9.68a) 
StartLayout 1st Row 1st Column Blank 2nd Column parallel to ModifyingAbove z left parenthesis f left parenthesis dot right parenthesis comma t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript 2 Baseline less than or equals c Subscript upper A Baseline left parenthesis parallel to ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript 2 Baseline plus left parenthesis c Subscript ModifyingAbove b With quotation dash Sub Superscript left parenthesis b right parenthesis Subscript Baseline plus c Subscript upper B Baseline c Subscript upper D Baseline right parenthesis left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis right parenthesis less than or equals c Subscript z Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column parallel to ModifyingAbove nabla Subscript z Baseline upper G left parenthesis z left parenthesis f left parenthesis dot right parenthesis comma t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript 2 Baseline equals parallel to ModifyingAbove z left parenthesis f left parenthesis dot right parenthesis comma t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to less than or equals c Subscript z Baseline plus parallel to ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript 2 Baseline less than or equals c Subscript upper G Baseline comma EndLayout||∇zG(z( f (·), t)
(b)||2 = ||z( f (·), t f )
(b) −z f
(b)|| ≤cz + ||z f
(b)||2 ≤cG,
(9.68b) 
where c Subscript z Baseline comma c Subscript upper G Baselinecz, cG are arbitrary upper bounds of the corresponding left quantities.
⬜
In the next lemma the operator deﬁned by the right-hand side of (9.66) is studied: 
Lemma 9.5 Let denote again script upper X colon equals script upper C left parenthesis upper T semicolon double struck upper R Superscript m Baseline right parenthesisX := C(T ; Rm) the space of continuous functions f f
onupper TT equipped with the supremum norm. Ifscript upper T overTilde colon script upper X right arrow script upper X ˜T : X →X denotes the operator deﬁned 
by 
StartLayout 1st Row 1st Column Blank 2nd Column left parenthesis script upper T overTilde f right parenthesis left parenthesis t right parenthesis colon equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis tau comma f left parenthesis tau right parenthesis right parenthesis right parenthesis d tau right parenthesis d s comma EndLayout( ˜T f )(t) := eAT (t f −t) (
z(t f )
(b) −z f
(b))
+
t f
{
t
eAT (s−t)Q
⎛
⎝eA(s−tb)zb
(b) +
s
{
tb
eA(s−τ) (
b(τ)
(b) + B ~
u∗(τ, f (τ))
)
dτ
⎞
⎠ds,
(9.69) 
then the image of script upper T overTilde ˜T is relative compact. 
Proof Letc Subscript upper Q Baseline colon equals parallel to upper Q parallel to Subscript upper FcQ := ||Q||F. We have to show thatModifyingAbove script upper T With tilde left parenthesis script upper X right parenthesis ˜T (X) is bounded and equicontinuous. 
• ModifyingAbove script upper T With tilde left parenthesis script upper X right parenthesis ˜T (X) is bounded: 
StartLayout 1st Row 1st Column Blank 2nd Column double vertical bar e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis tau comma f left parenthesis tau right parenthesis right parenthesis right parenthesis d tau right parenthesis d s double vertical bar 3rd Row 1st Column Blank 4th Row 1st Column less than or equals 2nd Column c Subscript upper A Baseline c Subscript upper G plus c Subscript upper A Baseline c Subscript upper Q Baseline left parenthesis c Subscript upper A Baseline parallel to ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline parallel to Subscript 2 Baseline left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis plus left parenthesis c Subscript upper A Baseline c Subscript ModifyingAbove b With quotation dash Sub Superscript left parenthesis b right parenthesis Subscript Baseline plus c Subscript upper B Baseline c Subscript upper D Baseline right parenthesis StartFraction t Subscript f Superscript 2 Baseline minus t Subscript b Superscript 2 Baseline Over 2 EndFraction right parenthesis EndLayout
||||||||eAT (t f −t) (
z(t f )(b) −z f (b))
+
t f
{
t
eAT (s−t)Q
⎛
⎜⎝eA(s−tb)zb(b) +
s
{
tb
eA(s−τ) (
b(τ)(b) + B ~
u∗(τ, f (τ))
)
dτ
⎞
⎟⎠ds
||||||||
≤cAcG + cAcQ
(
cA||zb(b)||2(t f −tb) + (cAcb(b) + cBcD)
t2
f −t2
b
2
)
(9.70) 
• ModifyingAbove script upper T With tilde left parenthesis script upper X right parenthesis ˜T (X) is equicontinuous. 
We have to show that for each epsilon greater than 0∈> 0 there exists a delta greater than 0δ > 0 such that, independent 
of the mapped function f f , the following inequality holds: 
StartAbsoluteValue t minus s EndAbsoluteValue less than delta right double arrow parallel to script upper T overTilde f left parenthesis t right parenthesis minus script upper T overTilde f left parenthesis s right parenthesis parallel to Subscript 2 Baseline less than or equals epsilon period|t −s| < δ
⇒
|| ˜T f (t) −˜T f (s)||2 ≤∈.
Deﬁning the function

9.9 Uniformly Bounded Sets of Controls Dt, t0 ≤t ≤t f
209
StartLayout 1st Row rho left parenthesis t right parenthesis equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus mu right parenthesis Baseline ModifyingAbove b left parenthesis mu right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d mu comma EndLayouto(t) = eA(t−tb)zb +
t{
tb
eA(t−μ)b(μ)
(b) dμ,
(9.71) 
the following inequalities hold: 
StartLayout 1st Row 1st Column Blank 2nd Column double vertical bar script upper T overTilde f left parenthesis t right parenthesis minus script upper T overTilde f left parenthesis s right parenthesis double vertical bar Subscript 2 2nd Row 1st Column Blank 2nd Column equals double vertical bar e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis tau minus t right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis tau minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript tau Baseline e Superscript upper A left parenthesis tau minus mu right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis mu right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis mu comma f left parenthesis mu right parenthesis right parenthesis right parenthesis d mu right parenthesis d tau 4th Row 1st Column Blank 2nd Column minus integral Subscript s Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis tau minus s right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis tau minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript tau Baseline e Superscript upper A left parenthesis tau minus mu right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis mu right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis mu comma f left parenthesis mu right parenthesis right parenthesis right parenthesis d mu right parenthesis d tau double vertical bar period EndLayoutStartLayout 1st Row 1st Column Blank 2nd Column double vertical bar script upper T overTilde f left parenthesis t right parenthesis minus script upper T overTilde f left parenthesis s right parenthesis double vertical bar Subscript 2 2nd Row 1st Column Blank 2nd Column equals double vertical bar e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis tau minus t right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis tau minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript tau Baseline e Superscript upper A left parenthesis tau minus mu right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis mu right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis mu comma f left parenthesis mu right parenthesis right parenthesis right parenthesis d mu right parenthesis d tau 4th Row 1st Column Blank 2nd Column minus integral Subscript s Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis tau minus s right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis tau minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript tau Baseline e Superscript upper A left parenthesis tau minus mu right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis mu right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis mu comma f left parenthesis mu right parenthesis right parenthesis right parenthesis d mu right parenthesis d tau double vertical bar period EndLayout
|||||| ˜T f (t) −˜T f (s)
||||||
2
=
||||||||eAT (t f −t) (
z(t f )
(b) −z f (b))
−eAT (t f −s) (
z(t f )
(b) −z f (b))
+
t f
{
t
eAT (τ−t)Q
⎛
⎝eA(τ−tb)zb +
τ
{
tb
eA(τ−μ) (
b(μ)
(b) + B ~
u∗(μ, f (μ))
)
dμ
⎞
⎠dτ
−
t f
{
s
eAT (τ−s)Q
⎛
⎝eA(τ−tb)zb +
τ
{
tb
eA(τ−μ) (
b(μ)
(b) + B ~
u∗(μ, f (μ))
)
dμ
⎞
⎠dτ
||||||||.
(9.72a) 
From Eq. (9.72a) we get then 
StartLayout 1st Row 1st Column Blank 2nd Column double vertical bar script upper T overTilde f left parenthesis t right parenthesis minus script upper T overTilde f left parenthesis s right parenthesis double vertical bar Subscript 2 2nd Row 1st Column Blank 2nd Column equals double vertical bar left parenthesis e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline right parenthesis left parenthesis ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis tau minus t right parenthesis Baseline upper Q left parenthesis rho left parenthesis tau right parenthesis plus integral Subscript t Subscript b Baseline Superscript tau Baseline upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis mu comma f left parenthesis mu right parenthesis right parenthesis d mu right parenthesis d tau 4th Row 1st Column Blank 2nd Column minus integral Subscript s Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis tau minus s right parenthesis Baseline upper Q left parenthesis rho left parenthesis tau right parenthesis plus integral Subscript t Subscript b Baseline Superscript tau Baseline upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis mu comma f left parenthesis mu right parenthesis right parenthesis d mu right parenthesis d tau double vertical bar Subscript 2 Baseline 5th Row 1st Column less than or equals 2nd Column double vertical bar e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline double vertical bar Subscript 2 Baseline c Subscript upper G 6th Row 1st Column Blank 2nd Column plus double vertical bar left parenthesis e Superscript upper A Super Superscript upper T Superscript left parenthesis negative t right parenthesis Baseline minus e Superscript upper A Super Superscript upper T Superscript left parenthesis negative s right parenthesis Baseline right parenthesis integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript tau Baseline upper Q left parenthesis rho left parenthesis tau right parenthesis plus integral Subscript t Subscript b Baseline Superscript tau Baseline upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis mu comma f left parenthesis mu right parenthesis right parenthesis d mu right parenthesis d tau 7th Row 1st Column Blank 2nd Column minus e Superscript upper A Super Superscript upper T Superscript left parenthesis negative s right parenthesis Baseline integral Subscript s Superscript t Baseline e Superscript upper A Super Superscript upper T Superscript tau Baseline upper Q left parenthesis rho left parenthesis tau right parenthesis plus integral Subscript t Subscript b Baseline Superscript tau Baseline upper B ModifyingAbove u Superscript asterisk Baseline With tilde left parenthesis mu comma f left parenthesis mu right parenthesis right parenthesis d mu right parenthesis d tau double vertical bar Subscript 2 Baseline 8th Row 1st Column less than or equals 2nd Column double vertical bar e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline double vertical bar Subscript 2 Baseline c Subscript upper G 9th Row 1st Column Blank 2nd Column plus double vertical bar e Superscript upper A Super Superscript upper T Superscript left parenthesis negative t right parenthesis Baseline minus e Superscript upper A Super Superscript upper T Superscript left parenthesis negative s right parenthesis Baseline double vertical bar e Superscript parallel to upper A parallel to Super Subscript upper F Superscript t Super Subscript f Baseline c Subscript upper Q Baseline left parenthesis c Subscript rho Baseline plus c Subscript upper B Baseline c Subscript upper D Baseline left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis right parenthesis left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis 10th Row 1st Column Blank 2nd Column plus c Subscript upper A Baseline c Subscript upper Q Baseline left parenthesis c Subscript rho Baseline plus c Subscript upper B Baseline c Subscript upper D Baseline left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis right parenthesis StartAbsoluteValue t minus s EndAbsoluteValue period EndLayout
|||||| ˜T f (t) −˜T f (s)
||||||
2
=
||||||||
(
eAT (t f −t) −eAT (t f −s)) (
z(t f )
(b) −z f (b))
+
t f
{
t
eAT (τ−t)Q
⎛
⎝o(τ) +
τ
{
tb
B ~
u∗(μ, f (μ)) dμ
⎞
⎠dτ
−
t f
{
s
eAT (τ−s)Q
⎛
⎝o(τ) +
τ
{
tb
B ~
u∗(μ, f (μ)) dμ
⎞
⎠dτ
||||||||
2
≤
||||||eAT (t f −t) −eAT (t f −s)||||||
2 cG
+
||||||||||||||
(
eAT (−t) −eAT (−s))
t f
{
t
eAT τ Q
⎛
⎝o(τ) +
τ
{
tb
B ~
u∗(μ, f (μ)) dμ
⎞
⎠dτ
−eAT (−s)
t{
s
eAT τ Q
⎛
⎝o(τ) +
τ
{
tb
B ~
u∗(μ, f (μ)) dμ
⎞
⎠dτ
||||||||||||
2
≤
||||||eAT (t f −t) −eAT (t f −s)||||||
2 cG
+
||||||eAT (−t) −eAT (−s)|||||| e||A||Ft f cQ(co + cBcD(t f −tb))(t f −tb)
+ cAcQ(co + cBcD(t f −tb))|t −s|.
(9.72b)

210
9
Stochastic Optimal Open-Loop Feedback Control
Obviously, the ﬁnal expression in (9.72b) is independent of f left parenthesis dot right parenthesis f (·). Hence, due to 
the continuity of the matrix exponential function and the functionrho left parenthesis dot right parenthesiso(·), the assertion 
follows.
⬜
From the above Lemma 9.5 we now obtain this result: 
Theorem 9.6 The ﬁxed point Eq. (9.66) has a continuous, bounded solution. 
Proof Deﬁne againscript upper X colon equals script upper C left parenthesis upper T semicolon double struck upper R Superscript m Baseline right parenthesisX := C(T ; Rm) and consider the set script upper M subset of script upper XM ⊂X
StartLayout 1st Row script upper M colon equals StartSet f left parenthesis dot right parenthesis element of script upper X vertical bar sup Underscript t element of upper T Endscripts parallel to f left parenthesis t right parenthesis parallel to Subscript 2 Baseline less than or equals upper C EndSet comma EndLayoutM :=
{
f (·) ∈X | sup
t∈T
|| f (t)||2 ≤C
}
,
(9.73a) 
where 
StartLayout 1st Row upper C colon equals c Subscript upper A Baseline c Subscript upper G Baseline plus c Subscript upper A Baseline c Subscript upper Q Baseline left parenthesis c Subscript upper A Baseline parallel to z Subscript b Baseline parallel to Subscript 2 Baseline left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis plus left parenthesis c Subscript upper A Baseline c Subscript ModifyingAbove b With quotation dash Sub Superscript left parenthesis b right parenthesis Subscript Baseline plus c Subscript upper B Baseline c Subscript upper D Baseline right parenthesis StartFraction t Subscript f Superscript 2 Baseline minus t Subscript b Superscript 2 Baseline Over 2 EndFraction right parenthesis period EndLayoutC := cAcG + cAcQ
(
cA||zb||2(t f −tb) + (cAcb
(b) + cBcD)
t2
f −t2
b
2
)
.
(9.73b) 
Moreover, let script upper TT denote the restriction of script upper T overTilde ˜T to script upper MM, hence, 
StartLayout 1st Row script upper T colon script upper M right arrow script upper M comma f right arrow from bar script upper T overTilde f period EndLayoutT : M →M,
f |→˜T f.
(9.74) 
Obviously, the operatorscript upper TT is continuous and, according to Lemma 9.5, the image of 
script upper TT is relative compact. Moreover, the set script upper MM is closed and convex. Hence, according 
to the ﬁxed point theorem of Schauder, script upper TT has a ﬁxed point in script upper MM.
⬜
9.10 
Approximate Solution of the Two-Point Boundary 
Value Problem (BVP) 
According to the previous sections, the remaining problem is then to solve the ﬁxed 
point Eq. (9.44c) or (9.58). In the ﬁrst case, the corresponding equation reads 
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline upper G Subscript f Baseline left parenthesis e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline minus ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis right parenthesis d s right parenthesis 3rd Row 1st Column Blank 2nd Column plus integral Subscript t Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t right parenthesis Baseline upper Q left parenthesis e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 4th Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline left parenthesis ModifyingAbove b left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline minus upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis d tau right parenthesis d s period EndLayouty(b)(t) = eAT (t f −t)G f
(
eA(t f −tb)zb
(b) −z f
(b)
+
t f
{
tb
eA(t f −s) (
b(s)
(b) −BR−1BT y(b)(s)
)
ds
)
+
t f
{
t
eAT (s−t)Q
(
eA(s−tb)zb
(b)
+
s
{
tb
eA(s−τ) (
b(τ)
(b) −BR−1BT y(b)(τ)
)
dτ
)
ds .
(9.75)

9.10 Approximate Solution of the Two-Point Boundary Value Problem (BVP)
211
Based on the present stochastic open-loop feedback control approach, we present 
the following approximation method: 
9.10.1 
Approximate Solution of the Fixed Point Eq. (9.75) 
Step I
According to the equations (9.12) and (9.44a) of the stochastic optimal 
upper O upper L upper F upper COLFC, for each remaining time intervalleft bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ] the value of the stochastic optimal 
open-loop control u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t semicolon t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis comma t less than or equals t Subscript b Baselineu∗= u∗(t; tb, Itb), t ≤tb, is needed at the left time point t Subscript btb
only. 
Thus, putting ﬁrst t equals t Subscript bt = tb in (9.75), we get 
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column plus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 3rd Row 1st Column Blank 2nd Column minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis d s 4th Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline upper Q e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline d s ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis 5th Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline upper Q left parenthesis integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline ModifyingAbove b left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d tau right parenthesis d s 6th Row 1st Column Blank 2nd Column minus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline upper Q left parenthesis integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis tau right parenthesis d tau right parenthesis d s period EndLayouty(b)(tb) = eAT (t f −tb)G f eA(t f −tb)zb
(b) −eAT (t f −tb)G f z f
(b)
+ eAT (t f −tb)G f
t f
{
tb
eA(t f −s)b(s)
(b) ds
−eAT (t f −tb)G f
t f
{
tb
eA(t f −s)BR−1BT y(b)(s) ds
+
t f
{
tb
eAT (s−tb)QeA(s−tb) dszb
(b)
+
t f
{
tb
eAT (s−tb)Q
(
s
{
tb
eA(s−τ)b(τ)
(b) dτ
)
ds
−
t f
{
tb
eAT (s−tb)Q
(
s
{
tb
eA(s−τ)BR−1BT y(b)(τ) dτ
)
ds .
(9.76a) 
Step II
Due to the representation (9.44a) of the stochastic optimal open-loop con-
trol u Superscript asterisku∗and the stochastic OLF construction principle (3.10d,e), the value of the 
conditional mean adjoint variable ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t right parenthesisy(b)(t) is needed at the left boundary point 
t equals t Subscript bt = tb only. Consequently, ModifyingAbove y With quotation dash Superscript b Baseline equals ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesisyb = y(b)(s) is approximated on left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ] by the con-
stant function 
ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis s right parenthesis almost equals ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis comma t Subscript b Baseline less than or equals s less than or equals t Subscript f Baseline periody(b)(s) ≈y(b)(tb), tb ≤s ≤t f .
(9.76b) 
In addition, the related matrix exponential functions right arrow e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesiss →eA(t f −s) is approximated 
on left bracket t Subscript b Baseline comma t Subscript f Baseline right bracket[tb, t f ] in the same way. 
This approach is justiﬁed especially if one works with a receding time horizon or 
moving time horizon 
t Subscript f Baseline colon equals t Subscript b Baseline plus Deltat Subscript f Baseline colon equals t Subscript b Baseline plus Deltat f := tb + Δt Subscript f Baseline colon equals t Subscript b Baseline plus Delta

212
9
Stochastic Optimal Open-Loop Feedback Control
with a short  prediction time horizon DeltaΔ. 
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis almost equals 2nd Column e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis 2nd Row 1st Column Blank 2nd Column plus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s 3rd Row 1st Column Blank 2nd Column minus left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis 4th Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline upper Q e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline d s ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis 5th Row 1st Column Blank 2nd Column plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline upper Q left parenthesis integral Subscript t Subscript b Baseline Superscript s Baseline e Superscript upper A left parenthesis s minus tau right parenthesis Baseline ModifyingAbove b left parenthesis tau right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d tau right parenthesis d s 6th Row 1st Column Blank 2nd Column minus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline left parenthesis s minus t Subscript b Baseline right parenthesis e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline upper Q e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline d s upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis period EndLayouty(b)(tb) ≈eAT (t f −tb)G f eA(t f −tb)zb
(b) −eAT (t f −tb)G f z f
(b)
+ eAT (t f −tb)G f
t f
{
tb
eA(t f −s)b(s)
(b) ds
−(t f −tb)eAT (t f −tb)G f eA(t f −tb)BR−1BT y(b)(tb)
+
t f
{
tb
eAT (s−tb)QeA(s−tb)dszb
(b)
+
t f
{
tb
eAT (s−tb)Q
(
s
{
tb
eA(s−τ)b(τ)
(b) dτ
)
ds
−
t f
{
tb
(s −tb)eAT (s−tb)QeA(s−tb) ds BR−1BT y(b)(tb).
(9.76c) 
Step III
Rearranging terms, (9.76c) yields a system of linear equations forModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesisy(b)(tb): 
StartLayout 1st Row 1st Column ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis almost equals 2nd Column upper A 0 left parenthesis left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column plus upper A 1 left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis dot ModifyingAbove b With quotation dash Subscript left bracket t Sub Subscript b Subscript comma t Sub Subscript f Subscript right bracket Superscript left parenthesis b right parenthesis Baseline left parenthesis dot right parenthesis 3rd Row 1st Column Blank 2nd Column minus upper A 23 left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis comma EndLayouty(b)(tb) ≈A0((tb, t f , G f , Q)zb
(b) −eAT (t f −tb)G f z f
(b)
+ A1(tb, t f , G f , Q) · b
(b)
[tb,t f ](·)
−A23(tb, t f , G f , Q)BR−1BT y(b)(tb),
(9.76d) 
where the matrices, linear operator and function, resp.,upper A 0 comma upper A 1 comma upper A 23 comma ModifyingAbove b With quotation dash Subscript left bracket t Sub Subscript b Subscript comma t Sub Subscript f Subscript right bracket Superscript left parenthesis b right parenthesisA0, A1, A23, b
(b)
[tb,t f ] can be 
easily read from relation (9.76c). Consequently, (9.76d) yields 
StartLayout 1st Row left parenthesis upper I plus upper A 23 left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline right parenthesis ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis almost equals upper A 0 left parenthesis left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper A 1 left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis dot ModifyingAbove b With quotation dash Subscript left bracket t Sub Subscript b Subscript comma t Sub Subscript f Subscript right bracket Superscript left parenthesis b right parenthesis Baseline left parenthesis dot right parenthesis period EndLayout
(
I + A23(tb, t f , G f , Q)BR−1BT )
y(b)(tb) ≈A0((tb, t f , G f , Q)zb
(b)
−eAT (t f −tb)G f z f
(b) + A1(tb, t f , G f , Q) · b
(b)
[tb,t f ](·).
(9.76e) 
For the matrix occurring in (9.76e) we have this result:

9.11 Example
213
Lemma 9.6 The matrix upper I plus upper A 23 left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis upper B upper R Superscript negative 1 Baseline upper B Superscript upper TI + A23(tb, t f , G f , Q)BR−1BT is regular. 
Proof According to (9.76c), (9.76d) we have  
StartLayout 1st Row upper A 23 left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis equals left parenthesis t Subscript f Baseline minus t Subscript b Baseline right parenthesis e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline 2nd Row plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline left parenthesis s minus t Subscript b Baseline right parenthesis e Superscript upper A Super Superscript upper T Superscript left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline upper Q e Superscript upper A left parenthesis s minus t Super Subscript b Superscript right parenthesis Baseline d s period EndLayoutA23(tb, t f , G f , Q) = (t f −tb)eAT (t f −tb)G f eA(t f −tb)
+
t f
{
tb
(s −tb)eAT (s−tb)QeA(s−tb) ds .
Hence, upper A 23 equals upper A 23 left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesisA23 = A23(tb, t f , G f , Q) is a positive deﬁnite matrix. Moreover, upper U colon equals upper B upper R Superscript negative 1 Baseline upper B Superscript upper TU :=
BR−1BT is at least positive semideﬁnite. Consider now the equationleft parenthesis upper I plus upper A 23 upper U right parenthesis w equals 0(I + A23U)w =
0. We get upper A 23 upper U w equals negative wA23Uw = −w and therefore upper U w equals minus upper A 23 Superscript negative 1 Baseline wUw = −A−1
23 w, hence, left parenthesis upper U plus upper A 23 Superscript negative 1 Baseline right parenthesis w equals 0(U + A−1
23 )w = 0. 
However, since the matrix upper U plus upper A 23 Superscript negative 1U + A−1
23 is positive deﬁnite, we have w equals 0w = 0, which 
proves now the assertion.
⬜
The above lemma and (9.76e) yields now 
StartLayout 1st Row ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis almost equals left parenthesis upper I plus upper A 23 left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis upper B upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline left parenthesis upper A 0 left parenthesis left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis ModifyingAbove z Subscript b Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline 2nd Row minus e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t Super Subscript b Superscript right parenthesis Baseline upper G Subscript f Baseline ModifyingAbove z Subscript f Baseline With quotation dash Superscript left parenthesis b right parenthesis Baseline plus upper A 1 left parenthesis t Subscript b Baseline comma t Subscript f Baseline comma upper G Subscript f Baseline comma upper Q right parenthesis dot ModifyingAbove b With quotation dash Subscript left bracket t Sub Subscript b Subscript comma t Sub Subscript f Subscript right bracket Superscript left parenthesis b right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis period EndLayouty(b)(tb) ≈
(
I + A23(tb, t f , G f , Q)BR−1BT )−1(
A0((tb, t f , G f , Q)zb
(b)
−eAT (t f −tb)G f z f
(b) + A1(tb, t f , G f , Q) · b
(b)
[tb,t f ](·)
)
. (9.76f) 
According to (9.75) and (3.10d,e), the stochastic optimal open-loop feedback control 
phi Superscript asterisk Baseline equals phi Superscript asterisk Baseline left parenthesis t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesisϕ∗= ϕ∗(tb, Itb) at t equals t Subscript bt = tb is obtained as follows: 
Theorem 9.7 With the approximative solution ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesisy(b)(tb) of the ﬁxed point condition 
(9.75) at t equals t Subscript bt = tb, represented by (9.76f), the stochastic optimal open-loop feedback 
control law at t equals t Subscript bt = tb is given by 
StartLayout 1st Row phi Superscript asterisk Baseline left parenthesis t Subscript b Baseline comma script upper I Subscript t Sub Subscript b Subscript Baseline right parenthesis colon equals minus upper R Superscript negative 1 Baseline upper B Superscript upper T Baseline ModifyingAbove y With quotation dash Superscript left parenthesis b right parenthesis Baseline left parenthesis t Subscript b Baseline right parenthesis period EndLayoutϕ∗(tb, Itb) := −R−1BT y(b)(tb).
(9.76g) 
Moreover, the whole approximate stochastic optimal open-loop feedback control law 
phi Superscript asterisk Baseline equals phi Superscript asterisk Baseline left parenthesis t comma script upper I Subscript t Baseline right parenthesisϕ∗= ϕ∗(t, It) is obtained from (9.76g) by replacingt Subscript b Baseline right arrow ttb →t for arbitraryt comma t 0 less than or equals t less than or equals t Subscript f Baselinet, t0 ≤t ≤
t f . 
9.11 
Example 
We consider the structure according to Fig.9.2, see  [  3], where we want to control 
the supplementary active system while minimizing the expected total costs for the 
control and the terminal costs. 
The behavior of the vector of displacementsq left parenthesis t comma omega right parenthesisq(t, ω) can be described by a system 
of differential equations of second order:

214
9
Stochastic Optimal Open-Loop Feedback Control
Fig. 9.2 Principle of active 
structural control 
StartLayout 1st Row upper M StartBinomialOrMatrix q With two dots Subscript 0 Baseline left parenthesis t comma omega right parenthesis Choose q With two dots Subscript z Baseline left parenthesis t comma omega right parenthesis EndBinomialOrMatrix plus upper D StartBinomialOrMatrix ModifyingAbove q With dot Subscript 0 Baseline left parenthesis t comma omega comma t Choose ModifyingAbove q With dot Subscript z Baseline left parenthesis t comma omega right parenthesis EndBinomialOrMatrix plus upper K StartBinomialOrMatrix q 0 left parenthesis t comma omega right parenthesis Choose q Subscript z Baseline left parenthesis t comma omega right parenthesis EndBinomialOrMatrix equals f 0 left parenthesis t comma omega right parenthesis plus f Subscript a Baseline left parenthesis t right parenthesis EndLayoutM
( ¨q0(t, ω)
¨qz(t, ω)
)
+ D
( ˙q0(t, ω, t
˙qz(t, ω)
)
+ K
(q0(t, ω)
qz(t, ω)
)
= f0(t, ω) + fa(t)
(9.77) 
with 
StartLayout 1st Row 1st Column upper M 2nd Column equals Start 2 By 2 Matrix 1st Row 1st Column m 0 2nd Column 0 2nd Row 1st Column 0 2nd Column m Subscript z Baseline EndMatrix 3rd Column m a s s m a t r i x 2nd Row 1st Column Blank 3rd Row 1st Column upper D 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column d 0 plus d Subscript z Baseline 2nd Column Blank 3rd Column minus d Subscript z Baseline 2nd Row 1st Column minus d Subscript z Baseline 2nd Column Blank 3rd Column d Subscript z Baseline EndMatrix 3rd Column d a m p i n g m a t r i x 4th Row 1st Column Blank 5th Row 1st Column upper K 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column k 0 plus k Subscript z Baseline 2nd Column Blank 3rd Column minus k Subscript z Baseline 2nd Row 1st Column minus k Subscript z Baseline 2nd Column Blank 3rd Column k Subscript z Baseline EndMatrix 3rd Column s t i f f n e s s m a t r i x 6th Row 1st Column Blank 7th Row 1st Column f Subscript a Baseline left parenthesis t right parenthesis 2nd Column equals StartBinomialOrMatrix negative 1 Choose plus 1 EndBinomialOrMatrix u left parenthesis t right parenthesis 3rd Column a c t u a t o r f o r c e 8th Row 1st Column Blank 9th Row 1st Column f 0 left parenthesis t comma omega right parenthesis 2nd Column equals StartBinomialOrMatrix f 01 left parenthesis t comma omega right parenthesis Choose 0 EndBinomialOrMatrix 3rd Column a p p l i e d l o a d period EndLayoutM =
(m0 0
0 mz
)
mass matrix
(9.78a) 
StartLayout 1st Row 1st Column upper M 2nd Column equals Start 2 By 2 Matrix 1st Row 1st Column m 0 2nd Column 0 2nd Row 1st Column 0 2nd Column m Subscript z Baseline EndMatrix 3rd Column m a s s m a t r i x 2nd Row 1st Column Blank 3rd Row 1st Column upper D 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column d 0 plus d Subscript z Baseline 2nd Column Blank 3rd Column minus d Subscript z Baseline 2nd Row 1st Column minus d Subscript z Baseline 2nd Column Blank 3rd Column d Subscript z Baseline EndMatrix 3rd Column d a m p i n g m a t r i x 4th Row 1st Column Blank 5th Row 1st Column upper K 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column k 0 plus k Subscript z Baseline 2nd Column Blank 3rd Column minus k Subscript z Baseline 2nd Row 1st Column minus k Subscript z Baseline 2nd Column Blank 3rd Column k Subscript z Baseline EndMatrix 3rd Column s t i f f n e s s m a t r i x 6th Row 1st Column Blank 7th Row 1st Column f Subscript a Baseline left parenthesis t right parenthesis 2nd Column equals StartBinomialOrMatrix negative 1 Choose plus 1 EndBinomialOrMatrix u left parenthesis t right parenthesis 3rd Column a c t u a t o r f o r c e 8th Row 1st Column Blank 9th Row 1st Column f 0 left parenthesis t comma omega right parenthesis 2nd Column equals StartBinomialOrMatrix f 01 left parenthesis t comma omega right parenthesis Choose 0 EndBinomialOrMatrix 3rd Column a p p l i e d l o a d period EndLayoutD =
(d0 + dz −dz
−dz
dz
)
damping matrix
(9.78b) 
StartLayout 1st Row 1st Column upper M 2nd Column equals Start 2 By 2 Matrix 1st Row 1st Column m 0 2nd Column 0 2nd Row 1st Column 0 2nd Column m Subscript z Baseline EndMatrix 3rd Column m a s s m a t r i x 2nd Row 1st Column Blank 3rd Row 1st Column upper D 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column d 0 plus d Subscript z Baseline 2nd Column Blank 3rd Column minus d Subscript z Baseline 2nd Row 1st Column minus d Subscript z Baseline 2nd Column Blank 3rd Column d Subscript z Baseline EndMatrix 3rd Column d a m p i n g m a t r i x 4th Row 1st Column Blank 5th Row 1st Column upper K 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column k 0 plus k Subscript z Baseline 2nd Column Blank 3rd Column minus k Subscript z Baseline 2nd Row 1st Column minus k Subscript z Baseline 2nd Column Blank 3rd Column k Subscript z Baseline EndMatrix 3rd Column s t i f f n e s s m a t r i x 6th Row 1st Column Blank 7th Row 1st Column f Subscript a Baseline left parenthesis t right parenthesis 2nd Column equals StartBinomialOrMatrix negative 1 Choose plus 1 EndBinomialOrMatrix u left parenthesis t right parenthesis 3rd Column a c t u a t o r f o r c e 8th Row 1st Column Blank 9th Row 1st Column f 0 left parenthesis t comma omega right parenthesis 2nd Column equals StartBinomialOrMatrix f 01 left parenthesis t comma omega right parenthesis Choose 0 EndBinomialOrMatrix 3rd Column a p p l i e d l o a d period EndLayoutK =
(k0 + kz −kz
−kz
kz
)
stiffness matrix
(9.78c) 
StartLayout 1st Row 1st Column upper M 2nd Column equals Start 2 By 2 Matrix 1st Row 1st Column m 0 2nd Column 0 2nd Row 1st Column 0 2nd Column m Subscript z Baseline EndMatrix 3rd Column m a s s m a t r i x 2nd Row 1st Column Blank 3rd Row 1st Column upper D 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column d 0 plus d Subscript z Baseline 2nd Column Blank 3rd Column minus d Subscript z Baseline 2nd Row 1st Column minus d Subscript z Baseline 2nd Column Blank 3rd Column d Subscript z Baseline EndMatrix 3rd Column d a m p i n g m a t r i x 4th Row 1st Column Blank 5th Row 1st Column upper K 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column k 0 plus k Subscript z Baseline 2nd Column Blank 3rd Column minus k Subscript z Baseline 2nd Row 1st Column minus k Subscript z Baseline 2nd Column Blank 3rd Column k Subscript z Baseline EndMatrix 3rd Column s t i f f n e s s m a t r i x 6th Row 1st Column Blank 7th Row 1st Column f Subscript a Baseline left parenthesis t right parenthesis 2nd Column equals StartBinomialOrMatrix negative 1 Choose plus 1 EndBinomialOrMatrix u left parenthesis t right parenthesis 3rd Column a c t u a t o r f o r c e 8th Row 1st Column Blank 9th Row 1st Column f 0 left parenthesis t comma omega right parenthesis 2nd Column equals StartBinomialOrMatrix f 01 left parenthesis t comma omega right parenthesis Choose 0 EndBinomialOrMatrix 3rd Column a p p l i e d l o a d period EndLayout fa(t) =
(−1
+1
)
u(t)
actuator force
(9.78d) 
StartLayout 1st Row 1st Column upper M 2nd Column equals Start 2 By 2 Matrix 1st Row 1st Column m 0 2nd Column 0 2nd Row 1st Column 0 2nd Column m Subscript z Baseline EndMatrix 3rd Column m a s s m a t r i x 2nd Row 1st Column Blank 3rd Row 1st Column upper D 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column d 0 plus d Subscript z Baseline 2nd Column Blank 3rd Column minus d Subscript z Baseline 2nd Row 1st Column minus d Subscript z Baseline 2nd Column Blank 3rd Column d Subscript z Baseline EndMatrix 3rd Column d a m p i n g m a t r i x 4th Row 1st Column Blank 5th Row 1st Column upper K 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column k 0 plus k Subscript z Baseline 2nd Column Blank 3rd Column minus k Subscript z Baseline 2nd Row 1st Column minus k Subscript z Baseline 2nd Column Blank 3rd Column k Subscript z Baseline EndMatrix 3rd Column s t i f f n e s s m a t r i x 6th Row 1st Column Blank 7th Row 1st Column f Subscript a Baseline left parenthesis t right parenthesis 2nd Column equals StartBinomialOrMatrix negative 1 Choose plus 1 EndBinomialOrMatrix u left parenthesis t right parenthesis 3rd Column a c t u a t o r f o r c e 8th Row 1st Column Blank 9th Row 1st Column f 0 left parenthesis t comma omega right parenthesis 2nd Column equals StartBinomialOrMatrix f 01 left parenthesis t comma omega right parenthesis Choose 0 EndBinomialOrMatrix 3rd Column a p p l i e d l o a d period EndLayout f0(t, ω) =
( f01(t, ω)
0
)
applied load .
(9.78e) 
Here we haven equals 1n = 1, i.e.,u left parenthesis dot right parenthesis element of script upper C left parenthesis upper T comma double struck upper R right parenthesisu(·) ∈C(T, R), and the weight matrixupper RR becomes a positive 
real number. 
To represent the equation of motion (9.77) as a ﬁrst-order differential equation 
we set 
z left parenthesis t comma omega right parenthesis colon equals left parenthesis q left parenthesis t comma omega right parenthesis comma ModifyingAbove q With dot left parenthesis t comma omega right parenthesis right parenthesis Superscript upper T Baseline equals Start 4 By 1 Matrix 1st Row q 0 left parenthesis t comma omega right parenthesis 2nd Row q Subscript z Baseline left parenthesis t comma omega right parenthesis 3rd Row ModifyingAbove q With dot Subscript 0 Baseline left parenthesis t comma omega right parenthesis 4th Row ModifyingAbove q With dot Subscript z Baseline left parenthesis t comma omega right parenthesis EndMatrix periodz(t, ω) := (q(t, ω), ˙q(t, ω))T =
⎛
⎜⎜⎝
q0(t, ω)
qz(t, ω)
˙q0(t, ω)
˙qz(t, ω)
⎞
⎟⎟⎠.

9.11 Example
215
This yields the dynamical equation 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals Start 2 By 3 Matrix 1st Row 1st Column ModifyingBelow bold 0 With quotation dash 2nd Column Blank 3rd Column upper I 2 2nd Row 1st Column minus upper M Superscript negative 1 Baseline upper K 2nd Column Blank 3rd Column minus upper M Superscript negative 1 Baseline upper D EndMatrix z left parenthesis t comma omega right parenthesis plus StartBinomialOrMatrix ModifyingBelow bold 0 With quotation dash Choose upper M Superscript negative 1 Baseline f Subscript a Baseline left parenthesis s right parenthesis EndBinomialOrMatrix plus StartBinomialOrMatrix ModifyingBelow bold 0 With quotation dash Choose upper M Superscript negative 1 Baseline f 0 left parenthesis s comma omega right parenthesis EndBinomialOrMatrix equals 2nd Row 1st Column Blank 2nd Column equals ModifyingBelow Start 4 By 4 Matrix 1st Row 1st Column 0 2nd Column 0 3rd Column 1 4th Column 0 2nd Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 1 3rd Row 1st Column minus StartFraction k 0 plus k Subscript z Baseline Over m 0 EndFraction 2nd Column StartFraction k Subscript z Baseline Over m 0 EndFraction 3rd Column minus StartFraction d 0 plus d Subscript z Baseline Over m 0 EndFraction 4th Column StartFraction d Subscript z Baseline Over m 0 EndFraction 4th Row 1st Column StartFraction k Subscript z Baseline Over m Subscript z Baseline EndFraction 2nd Column minus StartFraction k Subscript z Baseline Over m Subscript z Baseline EndFraction 3rd Column StartFraction d Subscript z Baseline Over m Subscript z Baseline EndFraction 4th Column minus StartFraction d Subscript z Baseline Over m Subscript z Baseline EndFraction EndMatrix With bottom brace Underscript colon equals upper A Endscripts z left parenthesis t comma omega right parenthesis plus ModifyingBelow Start 4 By 1 Matrix 1st Row 0 2nd Row 0 3rd Row minus StartFraction 1 Over m 0 EndFraction 4th Row StartFraction 1 Over m Subscript z Baseline EndFraction EndMatrix With bottom brace Underscript colon equals upper B Endscripts u left parenthesis s right parenthesis plus ModifyingBelow Start 4 By 1 Matrix 1st Row 0 2nd Row 0 3rd Row StartFraction f 0 left parenthesis s comma omega right parenthesis Over m 0 EndFraction 4th Row 0 EndMatrix With bottom brace Underscript colon equals b left parenthesis t comma omega right parenthesis Endscripts comma EndLayout˙z(t, ω) =
(
0
I2
−M−1K −M−1D
)
z(t, ω) +
(
0
M−1 fa(s)
)
+
(
0
M−1 f0(s, ω)
)
=
=
⎛
⎜⎜⎝
0
0
1
0
0
0
0
1
−k0+kz
m0
kz
m0
−d0+dz
m0
dz
m0
kz
mz
−kz
mz
dz
mz
−dz
mz
⎞
⎟⎟⎠
~
~~
~
:=A
z(t, ω) +
⎛
⎜⎜⎝
0
0
−1
m0
1
mz
⎞
⎟⎟⎠
~
~~
~
:=B
u(s) +
⎛
⎜⎜⎝
0
0
f0(s,ω)
m0
0
⎞
⎟⎟⎠
~
~~
~
:=b(t,ω)
,
(9.79) 
whereupper I Subscript pIp denotes thep times pp × p identity matrix. Furthermore, we have the optimal control 
problem under stochastic uncertainty: 
StartLayout 1st Row 1st Column min 2nd Column upper F left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals upper E one half left parenthesis integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline upper R left parenthesis u left parenthesis s right parenthesis right parenthesis squared d s plus z left parenthesis t Subscript f Baseline comma omega right parenthesis Superscript upper T Baseline upper G z left parenthesis t Subscript f Baseline comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column z left parenthesis t comma omega right parenthesis equals z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline left parenthesis upper A z left parenthesis s comma omega right parenthesis plus upper B u left parenthesis s right parenthesis plus b left parenthesis s comma omega right parenthesis right parenthesis d s 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column u left parenthesis dot right parenthesis element of script upper C left parenthesis upper T comma double struck upper R right parenthesis period EndLayout min
F(u(·)) := E 1
2
⎛
⎝
t f
{
tb
R (u(s))2 ds + z(t f , ω)T Gz(t f , ω)
|| Atb
⎞
⎠
(9.80a) 
StartLayout 1st Row 1st Column min 2nd Column upper F left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals upper E one half left parenthesis integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline upper R left parenthesis u left parenthesis s right parenthesis right parenthesis squared d s plus z left parenthesis t Subscript f Baseline comma omega right parenthesis Superscript upper T Baseline upper G z left parenthesis t Subscript f Baseline comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column z left parenthesis t comma omega right parenthesis equals z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline left parenthesis upper A z left parenthesis s comma omega right parenthesis plus upper B u left parenthesis s right parenthesis plus b left parenthesis s comma omega right parenthesis right parenthesis d s 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column u left parenthesis dot right parenthesis element of script upper C left parenthesis upper T comma double struck upper R right parenthesis period EndLayouts.t. z(t, ω) = zb +
t{
tb
(
Az(s, ω) + Bu(s) + b(s, ω)
)
ds
(9.80b) 
StartLayout 1st Row 1st Column min 2nd Column upper F left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals upper E one half left parenthesis integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline upper R left parenthesis u left parenthesis s right parenthesis right parenthesis squared d s plus z left parenthesis t Subscript f Baseline comma omega right parenthesis Superscript upper T Baseline upper G z left parenthesis t Subscript f Baseline comma omega right parenthesis vertical bar German upper A Subscript t Sub Subscript b Subscript Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column z left parenthesis t comma omega right parenthesis equals z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline left parenthesis upper A z left parenthesis s comma omega right parenthesis plus upper B u left parenthesis s right parenthesis plus b left parenthesis s comma omega right parenthesis right parenthesis d s 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column u left parenthesis dot right parenthesis element of script upper C left parenthesis upper T comma double struck upper R right parenthesis period EndLayout u(·) ∈C(T, R).
(9.80c) 
Note that this problem is of the “Minimum-Energy Control”-type, if we apply no 
extra costs for the displacements, i.e., upper Q identical to 0Q ≡0. 
The two-point-boundary problem to be solved reads then, cf. (9.13a)–(9.13d), 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis minus StartFraction 1 Over upper R EndFraction upper B upper B Superscript upper T Baseline ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus b left parenthesis omega comma t right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals z Subscript b Baseline 6th Row 1st Column Blank 7th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals upper G z left parenthesis t Subscript f Baseline comma omega right parenthesis period EndLayout˙z(t, ω) = Az(t, ω) −1
R BBT y(t)
(b) + b(ω, t)
(9.81a) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis minus StartFraction 1 Over upper R EndFraction upper B upper B Superscript upper T Baseline ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus b left parenthesis omega comma t right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals z Subscript b Baseline 6th Row 1st Column Blank 7th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals upper G z left parenthesis t Subscript f Baseline comma omega right parenthesis period EndLayout ˙y(t, ω) = −AT y(t, ω)
(9.81b) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis minus StartFraction 1 Over upper R EndFraction upper B upper B Superscript upper T Baseline ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus b left parenthesis omega comma t right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals z Subscript b Baseline 6th Row 1st Column Blank 7th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals upper G z left parenthesis t Subscript f Baseline comma omega right parenthesis period EndLayoutz(tb, ω) = zb
(9.81c) 
StartLayout 1st Row 1st Column ModifyingAbove z With dot left parenthesis t comma omega right parenthesis 2nd Column equals upper A z left parenthesis t comma omega right parenthesis minus StartFraction 1 Over upper R EndFraction upper B upper B Superscript upper T Baseline ModifyingAbove y left parenthesis t right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline plus b left parenthesis omega comma t right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove y With dot left parenthesis t comma omega right parenthesis 2nd Column equals minus upper A Superscript upper T Baseline y left parenthesis t comma omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column z left parenthesis t Subscript b Baseline comma omega right parenthesis 2nd Column equals z Subscript b Baseline 6th Row 1st Column Blank 7th Row 1st Column y left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Column equals upper G z left parenthesis t Subscript f Baseline comma omega right parenthesis period EndLayouty(t f , ω) = Gz(t f , ω).
(9.81d) 
Hence, the solution of (9.81a)–(9.81d), i.e., the optimal trajectories, reads, cf. (9.14a), 
(9.37a), 
StartLayout 1st Row 1st Column y left parenthesis t comma omega right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline upper G z left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis b left parenthesis s comma omega right parenthesis 4th Row 1st Column Blank 2nd Column minus StartFraction 1 Over upper R EndFraction upper B upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper G ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s period EndLayouty(t, ω) = eAT (t f −t)Gz(t f , ω)
(9.82a) 
StartLayout 1st Row 1st Column y left parenthesis t comma omega right parenthesis 2nd Column equals e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline upper G z left parenthesis t Subscript f Baseline comma omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column z left parenthesis t comma omega right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript b Superscript right parenthesis Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus s right parenthesis Baseline left parenthesis b left parenthesis s comma omega right parenthesis 4th Row 1st Column Blank 2nd Column minus StartFraction 1 Over upper R EndFraction upper B upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper G ModifyingAbove z left parenthesis t Subscript f Baseline right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline right parenthesis d s period EndLayoutz(t, ω) = eA(t−tb)zb +
t{
tb
eA(t−s)
(
b(s, ω)
−1
R BBT eAT (t f −s)Gz(t f )
(b))
ds.
(9.82b)

216
9
Stochastic Optimal Open-Loop Feedback Control
Finally, we get the optimal control, see (9.38c) and (9.39) :  
StartLayout 1st Row 1st Column Blank 2nd Column u Superscript asterisk Baseline left parenthesis t right parenthesis equals minus StartFraction 1 Over upper R EndFraction upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus t right parenthesis Baseline left parenthesis upper I 4 plus upper G upper U right parenthesis Superscript negative 1 Baseline upper G e Superscript upper A t Super Subscript f Baseline left parenthesis e Superscript minus upper A t Super Subscript b Superscript Baseline z Subscript b Baseline plus integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript minus upper A s Baseline ModifyingAbove b left parenthesis s right parenthesis With quotation dash Superscript left parenthesis b right parenthesis Baseline d s right parenthesis EndLayoutu∗(t) = −1
R BT eAT (t f −t) (I4 + GU)−1 GeAt f
⎛
⎝e−Atbzb +
t f
{
tb
e−Asb(s)
(b) ds
⎞
⎠
(9.83) 
with 
StartLayout 1st Row upper U equals StartFraction 1 Over upper R EndFraction integral Subscript t Subscript b Baseline Superscript t Subscript f Baseline Baseline e Superscript upper A left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline upper B upper B Superscript upper T Baseline e Superscript upper A Super Superscript upper T Superscript left parenthesis t Super Subscript f Superscript minus s right parenthesis Baseline d s period EndLayoutU = 1
R
t f
{
tb
eA(t f −s)BBT eAT (t f −s) ds.
(9.84) 
References 
1. Allgöwer, F.E.A. (ed.): Nonlinear Model Predictive Control. Birkhäuser Verlag, Basel (2000) 
2. Aoki, M.: Optimization of Stochastic Systems - Topics in Discrete-Time Systems. Academic, 
New York (1967) 
3. Block, C.: Aktive Minderung personeninduzierter Schwingungen an weit gespannten Struk-
turen im Bauwesen. No. 336 in Fortschrittberichte VDI, Reihe 11, Schwingungstechnik. VDI-
Verlag GmbH, Düsseldorf (2008) 
4. Dullerud, G., Paganini, F.: A Course in Robust Control Theory. Springer, New York (2000) 
5. Ku, R., Athans, M.: On the adaptive control of linear systems using the open-loop feedback 
optimal approach. IEEE Trans. Autom. Control 18, 489–493 (1973) 
6. Marti, K.: Stochastic optimization methods in robust adaptive control of robots. In: Groetschel, 
M.E.A. (ed.) Online Optimization of Large Scale Systems, pp. 545–577. Springer, Berlin (2001) 
7. Marti, K.: Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC) for Robots, 
pp. 155–206. Springer, Berlin (2004) 
8. Marti, K.: Approximate solutions of stochastic control problems by means of convex approx-
imations. In: Topping, B. et al. (eds.) Proceedings of the 9th International Conference on 
Computational Structures Technology (CST08). Civil-Comp Press, Stirlingshire (2008) 
9. Marti, K.: Stochastic nonlinear model predictive control (snmpc). In: 79th Annual Meeting 
of the International Association of Applied Mathematics and Mechanics (GAMM), Bremen 
2008, PAMM, vol. 8, Issue 1, pp. 10775–10776. Wiley-VCH (2008) 
10. Marti, K.: Stochastic Optimization Methods, 2nd edn. Springer, Berlin (2008). https://doi.org/ 
10.1007/978-3-540-79458-5 
11. Marti, K.: Continuous-time control under stochastic uncertainty. In: Cochran, J.E.A. (ed.) Wiley 
Encyclopedia of Operations Research and Management Science (EORMS). Wiley, Hoboken 
(2010). https://doi.org/10.1002/9780470400531.eorms0839 
12. Marti, K.: Optimal control of dynamical systems and structures under stochastic uncertainty: 
stochastic optimal feedback control. Adv. Engin. Softw. (AES) 46, 43–62 (2012). https://doi. 
org/10.1016/j.advengsoft.2010.09.008 
13. Marti, K.: Stochastic optimal structural control: stochastic optimal open-loop feedback con-
trol. Adv. Eng. Softw. 44(1), 26–34 (2012). https://doi.org/10.1016/j.advengsoft.2011.05.040. 
CIVIL-COMP 
14. Nagarajaiah, S., Narasimhan, S.: Optimal control of structures. In: Arora, J. (ed.) Optimization 
of Structural and Mechanical Systems, pp. 221–244. World Scientiﬁc, New Jersey (2007) 
15. Ostrowski, A.: Über Eigenwerte von Produkten Hermitescher Matrizen. Abh. Math. Semin. 
Univ. Hambg. 23, 60–68 (1959)

References
217
16. Richalet, J., et al.: Model predictive heuristic control: applications to industrial processes. 
Automatica 14, 413–428 (1978). https://doi.org/10.1016/0005-1098(78)90001-8 
17. Schacher, M.: Stochastisch optimale Regelung von Robotern. No. 1200 in Fortschritt-Berichte 
VDI, Reihe 8, Mess-, Steuerungs- und Regelungstechnik. VDI Verlag GmbH, Düsseldorf 
(2011) 
18. Soong, T.: Active structural control in civil engineering. Eng. Struct. 10, 74–84 (1988) 
19. Soong, T.: Active Structural Control: Theory and Practice. Wiley, New York (1990) 
20. Soong, T., Costantinou, M.: Passive and Active Structural Vibration Control in Civil Engineer-
ing, CISM Courses and Lectures, vol. 345. Springer, Wien (1994) 
21. Spencer, B., Nagarajaiah, S.: State of the art of structural control. J. Struct. Eng. 129(7), 845– 
856 (2003). https://doi.org/10.1061/(ASCE)0733-9445(2003)129:7(845) 
22. Yang, J., Soong, T.: Recent advances in active control of civil engineering structures. Probab. 
Eng. Mech. 3(4), 179–188 (1988). https://doi.org/10.1016/0266-8920(88)90010-0

Chapter 10 
Adaptive Optimal Stochastic Trajectory 
Planning and Control (AOSTPC) 
Abstract Adaptive Optimal Stochastic Trajectory Planning and Controlleft parenthesis italic AOSTPC right parenthesis(AOSTPC)
are considered in this chapter: In optimal control of dynamic systems the standard 
procedure is to determine ﬁrst ofﬂine an optimal open-loop control, using some nom-
inal or estimated values of the model parameters, and to correct then the resulting 
deviation of the actual trajectory or system performance from the prescribed trajec-
tory (prescribed system performance) by online measurement and control actions. 
However, online measurement and control actions are very expensive and time con-
suming. By adaptive optimal stochastic trajectory planning and control (AOSTPC), 
based on stochastic optimization methods, the available a priori and statistical infor-
mation about the unknown model parameters is incorporating into the optimal control 
design. Consequently, the mean absolute deviation between the actual and prescribed 
trajectory can be reduced considerably, and robust controls are obtained. Using only 
some necessary stability conditions, by means of stochastic optimization methods 
also sufﬁcient stability properties of the corresponding feedforward, feedback (PD-
, PID-) controls, resp., are obtained. Moreover, analytical estimates are given for 
the reduction of the tracking error, hence, for the reduction of the online correction 
expenses by applying (AOSTPC). 
10.1 Introduction 
An industrial, service, or ﬁeld robot is modeled mathematically by its dynamic 
equation, being a system of second-order differential equations for the robot or con-
ﬁguration coordinates q equals left parenthesis q 1 comma ellipsis comma q Subscript n Baseline right parenthesis Superscript upper Tq = (q1, . . . , qn)T (rotation angles in case of revolute links, 
length of translations in case of prismatic links), and the kinematic equation, relat-
ing the space StartSet q EndSet{q} of robot coordinates to the work space StartSet x EndSet{x} of the robot. Thereby 
one meets [ 4, 34, 42, 45, 47, 49] several model parameters, such as length of links, 
l Subscript i Baseline left parenthesis m right parenthesisli(m), location of center of gravity of links, l Subscript c i Baseline left parenthesis m right parenthesislci(m), mass of links, m Subscript i Baseline left parenthesis k g right parenthesismi(kg), payload 
left parenthesis upper N right parenthesis(N), moments of inertia about centroid, upper I Subscript i Baseline left parenthesis k g m squared right parenthesisIi(kgm2), (Coulomb-) friction coefﬁcients, 
upper R Subscript i j Baseline 0 Baseline left parenthesis upper N right parenthesisRi j0(N), etc. Let  p Subscript upper D Baseline comma p Subscript upper K BaselinepD, pK denote the vector of model parameters contained in the 
dynamic, kinematic equation, respectively. A further vector p Subscript upper CpC of model parame-
ters occurs in the formulation of several constraints, especially initial and terminal 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_10 
219

220
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
conditions, control and state constraints of the robot, as, e.g., maximum, minimum 
torques or forces in the links, bounds for the position, maximum joint, path velocities. 
Moreover, certain parameters p Subscript upper JpJ, e.g., cost factors, may occur also in the objective 
(performance, goal) functional J. 
Due to stochastic variations of the material, manufacturing errors, measurement 
(identiﬁcation) errors, stochastic variations of the workspace environment, as, e.g., 
stochastic uncertainty of the payload, randomly changing obstacles, errors in the 
selection of appropriate bounds for the moments, forces, resp., in the links, for the 
position and path velocities, errors in the selection of random cost factors, modeling 
errors, disturbances, etc., the total vector 
p equals Start 4 By 1 Matrix 1st Row p Subscript upper D Baseline 2nd Row p Subscript upper K Baseline 3rd Row p Subscript upper C Baseline 4th Row p Subscript upper J EndMatrixp =
⎛
⎜⎜⎝
pD
pK
pC
pJ
⎞
⎟⎟⎠
(10.1a) 
of model parameters is not a given ﬁxed quantity. The vector pp must be represented 
therefore by a random vector 
p equals p left parenthesis omega right parenthesis comma omega element of left parenthesis normal upper Omega comma script upper A comma upper P right parenthesisp = p(ω),
ω ∈(Ω, A, P)
(10.1b) 
on a certain probability space left parenthesis normal upper Omega comma script upper A comma upper P right parenthesis(Ω, A, P), see  [  3, 14, 32, 45, 50]. 
Having to control a robotic or more general dynamical system, the control law 
u equals u left parenthesis t right parenthesisu = u(t), is represented usually by the sum 
u left parenthesis t right parenthesis colon equals u Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis plus Delta u left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baseline commau(t) := u(0)(t) + Δu(t),
t0 ≤t ≤t f ,
(10.2) 
of a feedforward control (open-loop-control) u 0 left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baselineu0(t), t0 ≤t ≤t f , and an online local 
control correction (feedback control) Delta u left parenthesis t right parenthesisΔu(t). 
In actual engineering practice [ 19, 33, 35, 51], the feedforward control u Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesisu(0)(t)
is determined ofﬂine based on a certain reference trajectory q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baselineq(0)(t), t0 ≤t ≤t f , 
in conﬁguration space, where the unknown parameter vector pp is replaced by a 
certain vector p Superscript left parenthesis 0 right parenthesisp(0) of nominal parameter values, as, e.g., the expectation p Superscript left parenthesis 0 right parenthesis Baseline colon equals ModifyingAbove p With quotation dash equals upper E p left parenthesis omega right parenthesisp(0) :=
p = Ep(ω). The increasing deviation of the actual position and velocity of the robot 
from the prescribed values, caused by the deviation of the actual parameter values 
p left parenthesis omega right parenthesisp(ω) from the chosen nominal values p Superscript left parenthesis 0 right parenthesisp(0), must be compensated by online control 
corrections Delta u left parenthesis t right parenthesis comma t greater than t 0Δu(t), t > t0. This requires usually extensive online state observations 
(measurements) and feedback control actions. 
In order to determine a more reliable reference path q equals q left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baselineq = q(t), t0 ≤t ≤t f , in  
conﬁguration space, being robust with respect to stochastic parameter variations, the a 
priori information (e.g., certain moments or parameters of the probability distribution 
of p left parenthesis dot right parenthesisp(·)) about the random variations of the vector p left parenthesis omega right parenthesisp(ω) of model parameters of the 
robot and its working environment is taken into account already at the planning 
phase. Thus, instead of solving a deterministic trajectory planning problem with 
a ﬁxed nominal parameter vector p Superscript left parenthesis 0 right parenthesisp(0), here, an optimal velocity proﬁle beta Superscript left parenthesis 0 right parenthesis Baseline comma s 0 less than or equals s less than or equals s Subscript f Baselineβ(0), s0 ≤

10.2 Optimal Trajectory Planning for Robots
221
s ≤ s f , and—in case of point-to-point control problems—also an optimal geometric 
pathq Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineq(0)
e (s), s0 ≤s ≤s f , in conﬁguration space is determined by using a stochastic 
optimization approach [ 25, 28– 30, 36]. By means ofbeta Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesisβ(0)(s) andq Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineq(0)
e (s), s0 ≤s ≤s f , 
we then ﬁnd a more reliable, robust reference trajectory q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Superscript left parenthesis 0 right parenthesisq(0)(t), t0 ≤t ≤t(0)
f , in  
conﬁguration space. Applying now the so-called “inverse dynamics approach” [ 1, 
4, 15], more reliable, robust open-loop controls u Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Superscript left parenthesis 0 right parenthesisu(0)(t), t0 ≤t ≤t(0)
f , are obtained. 
Moreover, by linearization of the dynamic equation of the robot in a neighborhood 
of left parenthesis u Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma upper E left parenthesis p Subscript upper M Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis right parenthesis comma t greater than or equals t 0
(
u(0)(t), q(0)(t), E
(
pM(ω)|At0
))
, t ≥t0, where script upper A Subscript t 0At0 denotes the sigmaσ-algebra of 
informations up to the initial time point t 0t0, a control correction Delta u Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t 0Δu(0)(t), t ≥t0, is  
obtained which is related to the so-called feedback linearization of a system [ 4, 15, 
37, 47]. 
At later moments (main correction time points) t Subscript jt j, 
t 0 less than t 1 less than t 2 less than midline horizontal ellipsis less than t Subscript j minus 1 Baseline less than t Subscript j Baseline less than ellipsis commat0 < t1 < t2 < · · · < t j−1 < t j < . . . ,
(10.3) 
further information on the parameters of the control system and its environment 
are available, e.g., by process observation, identiﬁcation, calibration procedures, 
etc. Improvements q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma Delta u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline comma j equals 1 comma 2 comma ellipsisq( j)(t), u( j)(t), Δu( j)(t), t ≥t j, j = 1, 2, . . . , of the preced-
ing reference trajectory q Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t right parenthesisq( j−1)(t), open-loop control u Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t right parenthesisu( j−1)(t), and local control 
correction (feedback control) Delta u Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t right parenthesisΔu( j−1)(t) can be determined by replanning, i.e., 
by optimal stochastic trajectory planning (OSTP) for the remaining time interval 
t greater than or equals t Subscript j Baseline comma j equals 1 comma 2 comma ellipsist ≥t j, j = 1, 2, . . . , and by using the information script upper A Subscript t Sub Subscript jAt j on the robot and its working 
environment available up to the time point t Subscript j Baseline greater than t 0 comma j equals 1 comma 2 comma ellipsist j > t0, j = 1, 2, . . . , see  [  16, 40, 41]. 
10.2 Optimal Trajectory Planning for Robots 
According to [ 4, 34, 45], the dynamic equation for a robot is given by the following 
system of second-order differential equations 
upper M left parenthesis p Subscript upper D Baseline comma q left parenthesis t right parenthesis right parenthesis q With two dots left parenthesis t right parenthesis plus h left parenthesis p Subscript upper D Baseline comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesis equals u left parenthesis t right parenthesis comma t greater than or equals t 0 commaM
(
pD, q(t)
)
¨q(t) + h
(
pD, q(t), ˙q(t)
)
= u(t),
t ≥t0,
(10.4a) 
for the nn-vector q equals q left parenthesis t right parenthesisq = q(t) of the robot or conﬁguration coordinates q 1 comma q 2 comma ellipsis comma q Subscript n Baselineq1, q2, . . . , qn. 
Here, upper M equals upper M left parenthesis p Subscript upper D Baseline comma q right parenthesisM = M(pD, q) denotes the n times nn × n inertia (or mass) matrix, and the vector 
function h equals h left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesish = h(pD, q, ˙q) is given by 
h left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis colon equals upper C left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis ModifyingAbove q With dot plus upper F Subscript upper R Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis plus upper G left parenthesis p Subscript upper D Baseline comma q right parenthesis commah(pD, q, ˙q) := C(pD, q, ˙q)˙q + FR(pD, q, ˙q) + G(pD, q),
(10.4b) 
whereupper C left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis equals upper C left parenthesis p Subscript upper D Baseline comma q right parenthesis ModifyingAbove q With dotC(pD, q, ˙q) = C(pD, q)˙q, andupper C left parenthesis p Subscript upper D Baseline comma q right parenthesis equals left parenthesis upper C Subscript i j k Baseline left parenthesis p Subscript upper D Baseline comma q right parenthesis right parenthesis Subscript 1 less than or equals i comma j comma k less than or equals nC(pD, q) =
(
Ci jk(pD, q)
)
1≤i, j,k≤n is the ten-
sor of Coriolis and centrifugal terms,upper F Subscript upper R Baseline equals upper F Subscript upper R Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesisFR = FR(pD, q, ˙q) denotes the vector of fric-
tional forces and upper G equals upper G left parenthesis p Subscript upper D Baseline comma q right parenthesisG = G(pD, q) is the vector of gravitational forces. Moreover,

222
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
u equals u left parenthesis t right parenthesisu = u(t) is the vector of controls, i.e., the vector of torques/forces in the joints of 
the robot. Standard representations of the friction term upper F Subscript upper RFR are given [ 4, 19, 45] by  
StartLayout 1st Row 1st Column upper F Subscript upper R Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper R Subscript v Baseline left parenthesis p Subscript upper D Baseline comma q right parenthesis ModifyingAbove q With dot comma 2nd Row 1st Column Blank 3rd Row 1st Column upper F Subscript upper R Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper R left parenthesis p Subscript upper D Baseline comma q right parenthesis s g n left parenthesis ModifyingAbove q With dot right parenthesis comma EndLayoutFR(pD, q, ˙q) := Rv(pD, q)˙q,
(10.4c) 
StartLayout 1st Row 1st Column upper F Subscript upper R Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper R Subscript v Baseline left parenthesis p Subscript upper D Baseline comma q right parenthesis ModifyingAbove q With dot comma 2nd Row 1st Column Blank 3rd Row 1st Column upper F Subscript upper R Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper R left parenthesis p Subscript upper D Baseline comma q right parenthesis s g n left parenthesis ModifyingAbove q With dot right parenthesis comma EndLayoutFR(pD, q, ˙q) := R(pD, q)sgn(˙q),
(10.4d) 
where 
s g n left parenthesis ModifyingAbove q With dot right parenthesis colon equals left parenthesis s g n left parenthesis ModifyingAbove q With dot Subscript 1 Baseline right parenthesis comma ellipsis comma s g n left parenthesis ModifyingAbove q With dot Subscript n Baseline right parenthesis right parenthesis Superscript upper Tsgn(˙q) :=
(
sgn(˙q1), . . . , sgn(˙qn)
)T
. In the ﬁrst case (10.4c), 
upper R Subscript v Baseline equals upper R Subscript v Baseline left parenthesis p Subscript upper D Baseline comma q right parenthesisRv =
Rv(pD, q) is the viscous friction matrix, and in the Coulomb approach (10.4d), 
upper R equals upper R left parenthesis p Subscript upper D Baseline comma q right parenthesis equals left parenthesis upper R Subscript i Baseline left parenthesis p comma q right parenthesis delta Subscript i j Baseline right parenthesisR = R(pD, q) =
(
Ri(p, q)δi j
)
is a diagonal matrix. 
Remark 10.1 (Inverse dynamics) Reading the dynamic equation (10.4a) from the  
left to the right-hand side, hence, by inverse dynamics [ 1, 4, 15], the control function 
u equals u left parenthesis t right parenthesisu = u(t) may be described in terms of the trajectoryq equals q left parenthesis t right parenthesisq = q(t) in conﬁguration space. 
The relationship between the so-called conﬁguration space StartSet q EndSet{q} of robot coordi-
nates q equals left parenthesis q 1 comma ellipsis comma q Subscript n Baseline right parenthesis primeq = (q1, . . . , qn)' and the work space StartSet x EndSet{x} of world coordinates (position and 
orientation of the end-effector) x equals left parenthesis x 1 comma ellipsis comma x Subscript n Baseline right parenthesis primex = (x1, . . . , xn)' is represented by the kinematic 
equation 
x equals upper T left parenthesis p Subscript upper K Baseline comma q right parenthesis periodx = T (pK, q).
(10.5) 
As mentioned already in the introduction, p Subscript upper D Baseline comma p Subscript upper K BaselinepD, pK, denote the vectors of dynamic, 
kinematic parameters arising in the dynamic and kinematic equation (10.4a)–(10.4d), 
(10.5). 
Remark 10.2 (Linear parameterization of robots) Note that the parameterization 
of a robot can be chosen, cf. [ 1, 4, 15], so that the dynamic and kinematic equation 
depend linearly on the parameter vectors p Subscript upper D Baseline comma p Subscript upper K BaselinepD, pK. 
The objective of optimal trajectory planning is to determine [ 7, 8, 19, 35, 46] a  
control function u equals u left parenthesis t right parenthesis comma t greater than or equals t 0u = u(t), t ≥t0, so that the cost functional 
upper J left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals integral Subscript t 0 Superscript t Subscript f Baseline upper L left parenthesis t comma p Subscript upper J Baseline comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis d t plus phi left parenthesis t Subscript f Baseline comma p Subscript upper J Baseline comma q left parenthesis t Subscript f Baseline right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript f Baseline right parenthesis right parenthesisJ
(
u(·)
)
:=
t f
{
t0
L
(
t, pJ, q(t), ˙q(t), u(t)
)
dt + φ
(
t f , pJ, q(t f ), ˙q(t f )
)
(10.6) 
is minimized, where the terminal time t Subscript ft f may be given explicitly or implicitly, as, 
e.g., in minimum-time problems. Standard examples are, see, e.g., [ 34]: 
(a) phi equals 0 comma upper L equals 1φ = 0, L = 1 (minimum time), 
(b) phi equals 0 comma upper L equalsφ = 0, L = sum of potential, translatory, and rotational energy of the robot 
(minimum energy), 
(c) phi equals 0 comma upper L equals sigma summation Underscript i equals 1 Overscript n Endscripts left parenthesis ModifyingAbove q With dot Subscript i Baseline left parenthesis t right parenthesis u Subscript i Baseline left parenthesis t right parenthesis right parenthesis squaredφ = 0, L =
n
∑
i=1
(
˙qi(t)ui(t)
)2
(minimum fuel consumption), 
(d) phi equals 0 comma upper L equals sigma summation Underscript i equals 1 Overscript n Endscripts left parenthesis u Subscript i Baseline left parenthesis t right parenthesis right parenthesis squaredφ = 0, L =
n
∑
i=1
(
ui(t)
)2
(minimum force and moment).

10.2 Optimal Trajectory Planning for Robots
223
Furthermore, an optimal control function u Superscript asterisk Baseline equals u Superscript asterisk Baseline left parenthesis t right parenthesisu∗= u∗(t) and the related optimal trajec-
tory q Superscript asterisk Baseline equals q Superscript asterisk Baseline left parenthesis t right parenthesis comma t greater than or equals t 0q∗= q∗(t), t ≥t0, in conﬁguration space must satisfy the dynamic equation 
(10.4a)–(10.4d) and the following constraints [ 7, 8, 10]: 
(i) The initial conditions 
q left parenthesis t 0 right parenthesis equals q 0 left parenthesis omega right parenthesis comma ModifyingAbove q With dot left parenthesis t 0 right parenthesis equals ModifyingAbove q With dot Subscript 0 Baseline left parenthesis omega right parenthesisq(t0) = q0(ω),
˙q(t0) = ˙q0(ω)
(10.7) 
Note that by means of the kinematic equation (10.5), the initial state left parenthesis q 0 left parenthesis omega right parenthesis comma ModifyingAbove q With dot Subscript 0 Baseline left parenthesis omega right parenthesis right parenthesis(q0(ω),
˙q0(ω)) in conﬁguration space can be represented by the initial state left parenthesis x 0 left parenthesis omega right parenthesis comma ModifyingAbove x With dot Subscript 0 Baseline left parenthesis omega right parenthesis right parenthesis
(
x0(ω),
˙x0(ω)
)
in work space. 
(ii) The terminal conditions 
psi left parenthesis t Subscript f Baseline comma p comma q left parenthesis t Subscript f Baseline right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript f Baseline right parenthesis right parenthesis equals 0 commaψ
(
t f , p, q(t f ), ˙q(t f )
)
= 0,
(10.8a) 
e.g., 
q left parenthesis t Subscript f Baseline right parenthesis equals q Subscript f Baseline left parenthesis omega right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript f Baseline right parenthesis equals ModifyingAbove q With dot Subscript f Baseline left parenthesis omega right parenthesis periodq(t f ) = q f (ω),
˙q(t f ) = ˙q f (ω).
(10.8b) 
Again, by means of (10.5),left parenthesis q Subscript f Baseline comma ModifyingAbove q With dot Subscript f Baseline right parenthesis(q f , ˙q f ) may be described in terms of the ﬁnal state 
left parenthesis x Subscript f Baseline comma ModifyingAbove x With dot Subscript f Baseline right parenthesis(x f , ˙x f ) in work space. Note that more general boundary conditions of this type 
may occur at some intermediate time points t 0 less than tau 1 less than tau 2 less than midline horizontal ellipsis less than tau Subscript r Baseline less than t Subscript ft0 < τ1 < τ2 < · · · < τr < t f . 
(iii) Control constraints 
StartLayout 1st Row 1st Column u Superscript min Baseline left parenthesis t comma p right parenthesis less than or equals u left parenthesis t right parenthesis 2nd Column less than or equals u Superscript max Baseline left parenthesis t comma p right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column g Subscript upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Column less than or equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column g Subscript upper I upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Column equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline period EndLayoutumin(t, p) ≤u(t) ≤umax(t, p),
t0 ≤t ≤t f
(10.9a) 
StartLayout 1st Row 1st Column u Superscript min Baseline left parenthesis t comma p right parenthesis less than or equals u left parenthesis t right parenthesis 2nd Column less than or equals u Superscript max Baseline left parenthesis t comma p right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column g Subscript upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Column less than or equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column g Subscript upper I upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Column equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline period EndLayoutgI
(
t, p, q(t), ˙q(t), u(t)
)
≤0,
t0 ≤t ≤t f
(10.9b) 
StartLayout 1st Row 1st Column u Superscript min Baseline left parenthesis t comma p right parenthesis less than or equals u left parenthesis t right parenthesis 2nd Column less than or equals u Superscript max Baseline left parenthesis t comma p right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column g Subscript upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Column less than or equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column g Subscript upper I upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis comma u left parenthesis t right parenthesis right parenthesis 2nd Column equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline period EndLayoutgI I
(
t, p, q(t), ˙q(t), u(t)
)
= 0,
t0 ≤t ≤t f .
(10.9c) 
(iv) State constraints 
StartLayout 1st Row 1st Column upper S Subscript upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesis 2nd Column less than or equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column upper S Subscript upper I upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesis 2nd Column equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline period EndLayoutSI
(
t, p, q(t), ˙q(t)
)
≤0,
t0 ≤t ≤t f
(10.10a) 
StartLayout 1st Row 1st Column upper S Subscript upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesis 2nd Column less than or equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column upper S Subscript upper I upper I Baseline left parenthesis t comma p comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesis 2nd Column equals 0 comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline period EndLayoutSI I
(
t, p, q(t), ˙q(t)
)
= 0,
t0 ≤t ≤t f .
(10.10b) 
Using the kinematic equation (10.5), different types of obstacles in the work 
space can be described by (time-invariant) state constraints of the type (10.10a), 
(10.10b). 
In robotics [ 35] often the following state constraints are used: 
StartLayout 1st Row 1st Column q Subscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals q left parenthesis t right parenthesis 2nd Column less than or equals q Subscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Subscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals ModifyingAbove q With dot left parenthesis t right parenthesis 2nd Column less than or equals ModifyingAbove q With dot Subscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline comma EndLayoutqmin(pC) ≤q(t) ≤qmax(pC),
t0 ≤t ≤t f
(10.10c) 
StartLayout 1st Row 1st Column q Subscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals q left parenthesis t right parenthesis 2nd Column less than or equals q Subscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Subscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals ModifyingAbove q With dot left parenthesis t right parenthesis 2nd Column less than or equals ModifyingAbove q With dot Subscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis comma 3rd Column Blank 4th Column t 0 less than or equals t less than or equals t Subscript f Baseline comma EndLayout˙qmin(pC) ≤˙q(t) ≤˙qmax(pC),
t0 ≤t ≤t f ,
(10.10d) 
with certain vectors q Subscript min Baseline comma q Subscript max Baseline comma ModifyingAbove q With dot Subscript min Baseline comma ModifyingAbove q With dot Subscript max Baselineqmin, qmax, ˙qmin, ˙qmax of (random) bounds.

224
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
A special constraint of the type (10.10b) occurs if the trajectory in work space 
x left parenthesis t right parenthesis colon equals upper T left parenthesis p Subscript upper K Baseline comma q left parenthesis t right parenthesis right parenthesisx(t) := T
(
pK, q(t)
)
(10.11) 
should follow as precise as possible a geometric path in work space 
x Subscript e Baseline equals x Subscript e Baseline left parenthesis p Subscript x Baseline comma s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselinexe = xe(px, s),
s0 ≤s ≤s f
(10.12) 
being known up to a certain random parameter vector p Subscript x Baseline equals p Subscript x Baseline left parenthesis omega right parenthesispx = px(ω), which then is 
added to the total vector pp of model parameters, cf. (10.4a), (10.4b). 
Remark 10.3 In the following we suppose that the functions upper M comma h comma upper L comma phiM, h, L, φ and upper TT
arising in (10.4a)–(10.4d), (10.5), (10.6) as well as the functions psi comma g Subscript upper I Baseline comma g Subscript upper I upper I Baseline comma upper S Subscript upper I Baseline comma upper S Subscript upper I upper I Baselineψ, gI, gI I, SI, SI I
arising in the constraints (10.8a)–(10.10b) are sufﬁciently smooth. 
10.3 Problem Transformation 
Since the terminal time t Subscript ft f may be given explicitly or implicitly, the trajectory q left parenthesis dot right parenthesisq(·)
in conﬁguration space may have a varying domain left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ]. Hence, in order to work 
with a given ﬁxed domain of the unknown functions, the reference trajectory q equals q left parenthesis t right parenthesis comma t greater than or equals t 0q =
q(t), t ≥t0, in conﬁguration space is represented, cf. [ 19], by 
q left parenthesis t right parenthesis colon equals q Subscript e Baseline left parenthesis s left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 periodq(t) := qe
(
s(t)
)
,
t ≥t0.
(10.13a) 
Here, 
s equals s left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baselines = s(t),
t0 ≤t ≤t f
(10.13b) 
is a strictly monotonous increasing transformation from the possibly varying time 
domainleft bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ] into a given ﬁxed parameter intervalleft bracket s 0 comma s Subscript f Baseline right bracket[s0, s f ]. For example,s element of left bracket s 0 comma s Subscript f Baseline right brackets ∈[s0, s f ]
may be the path parameter of a given path in work space, cf. (10.12). Moreover, 
q Subscript e Baseline equals q Subscript e Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineqe = qe(s),
s0 ≤s ≤s f
(10.13c) 
denotes the so-called geometric path in conﬁguration space. 
Remark 10.4 In many more complicated industrial robot tasks such as grinding, 
welding, driving around difﬁcult obstacles, complex assembly, etc., the geometric 
path q Subscript e Baseline left parenthesis dot right parenthesisqe(·) in conﬁguration space is predetermined ofﬂine [ 9, 16, 17] by a separate 
path planning procedure for q Subscript e Baseline equals q Subscript e Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineqe = qe(s), s0 ≤s ≤s f , only. Hence, the trajectory 
planning/replanning is reduced then to the computation/adaptation of the transfor-
mation s equals s left parenthesis t right parenthesiss = s(t) along a given ﬁxed path q Subscript e Baseline left parenthesis dot right parenthesis equals q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis dot right parenthesisqe(·) = q(0)
e (·). 
Assuming that the transformation s equals s left parenthesis t right parenthesiss = s(t) is differentiable on left bracket t 0 comma t Subscript f Baseline right bracket[t0, t f ] with the 
exception of at most a ﬁnite number of points, we introduce now the so-called velocity

10.3 Problem Transformation
225
proﬁlebeta equals beta left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineβ = β(s), s0 ≤s ≤s f , along the geometric pathq Subscript e Baseline left parenthesis dot right parenthesisqe(·) in conﬁguration space 
by 
beta left parenthesis s right parenthesis colon equals ModifyingAbove s With dot squared left parenthesis t left parenthesis s right parenthesis right parenthesis equals left parenthesis StartFraction d s Over d t EndFraction right parenthesis squared left parenthesis t left parenthesis s right parenthesis right parenthesis commaβ(s) := ˙s2(
t(s)
)
=
(ds
dt
)2 (
t(s)
)
,
(10.14) 
where t equals t left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselinet = t(s), s0 ≤s ≤s f , is the  inverse of s equals s left parenthesis t right parenthesis comma t 0 less than or equals t less than or equals t Subscript f Baselines = s(t), t0 ≤t ≤t f . Thus, we have 
that 
d t equals StartFraction 1 Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction d s commadt =
1
√β(s) ds,
(10.15a) 
and the time t greater than or equals t 0t ≥t0 can be represented by the integral 
t equals t left parenthesis s right parenthesis colon equals t 0 plus integral Subscript s 0 Superscript s Baseline StartFraction d sigma Over StartRoot beta left parenthesis sigma right parenthesis EndRoot EndFraction periodt = t(s) := t0 +
s
{
s0
dσ
√β(σ).
(10.15b) 
Using the integral transformation sigma colon equals s 0 plus left parenthesis s minus s 0 right parenthesis rho comma 0 less than or equals rho less than or equals 1 comma t equals t left parenthesis s right parenthesisσ := s0 + (s −s0)ρ, 0 ≤ρ ≤1,
t = t(s)
may be also represented by 
t left parenthesis s right parenthesis equals t 0 plus left parenthesis s minus s 0 right parenthesis integral Subscript 0 Superscript 1 Baseline StartFraction d rho Over StartRoot beta left parenthesis s 0 plus left parenthesis s minus s 0 right parenthesis rho right parenthesis EndRoot EndFraction comma s greater than or equals s 0 periodt(s) = t0 + (s −s0)
1
{
0
dρ
/
β
(
s0 + (s −s0)ρ
),
s ≥s0.
(10.16a) 
By numerical quadrature, i.e., by applying a certain numerical integration formula 
of order nuν and having weights a 0 comma a 1 comma a 2 comma ellipsis comma a Subscript nu Baselinea0, a1, a2, . . . , aν to the integral in (10.16a), the time 
function t equals t left parenthesis s right parenthesist = t(s) can be represented approximatively (with an epsilon 0 greater than 0ε0 > 0) by  
ModifyingAbove t With tilde left parenthesis s right parenthesis colon equals t 0 plus left parenthesis s minus s 0 right parenthesis sigma summation Underscript k equals 0 Overscript nu Endscripts StartFraction a Subscript k Baseline Over StartRoot beta left parenthesis s 0 plus epsilon 0 plus left parenthesis s minus s 0 minus 2 epsilon 0 right parenthesis StartFraction k Over nu EndFraction right parenthesis EndRoot EndFraction comma s greater than or equals s 0 period˜t(s) := t0 + (s −s0)
ν
∑
k=0
ak
/
β
(
s0 + ε0 + (s −s0 −2ε0) k
ν
),
s ≥s0.
(10.16b) 
In case of Simpson’s rule left parenthesis nu equals 2 right parenthesis(ν = 2) we have that 
ModifyingAbove t With tilde left parenthesis s right parenthesis colon equals t 0 plus StartFraction s minus s 0 Over 6 EndFraction left parenthesis StartFraction 1 Over StartRoot beta left parenthesis s 0 plus epsilon 0 right parenthesis EndRoot EndFraction plus StartFraction 4 Over StartRoot beta left parenthesis StartFraction s plus s 0 Over 2 EndFraction right parenthesis EndRoot EndFraction plus StartFraction 1 Over StartRoot beta left parenthesis s minus epsilon 0 right parenthesis EndRoot EndFraction right parenthesis period˜t(s) := t0 + s −s0
6
⎛
⎝
1
√β(s0 + ε0) +
4
/
β
( s+s0
2
) +
1
√β(s −ε0)
⎞
⎠.
(10.16c) 
As long as the basic mechanical equations, the cost and constraint functions do not 
depend explicitly on timett, the transformation of the robot control problem from the 
time onto thess-parameter domain causes no difﬁculties. In the more general case one 
has to use the time representation (10.15b), (10.16a) or its approximates (10.16b), 
(10.16c).

226
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
Obviously, the terminal time t Subscript ft f is given, cf. (10.15b), (10.16a), by 
StartLayout 1st Row 1st Column t Subscript f Baseline equals t left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals t 0 plus integral Subscript s 0 Superscript s Subscript f Baseline Baseline StartFraction d sigma Over StartRoot beta left parenthesis sigma right parenthesis EndRoot EndFraction 2nd Row 1st Column Blank 2nd Column equals t 0 plus left parenthesis s Subscript f Baseline minus s 0 right parenthesis integral Subscript 0 Superscript 1 Baseline StartFraction d rho Over StartRoot beta left parenthesis s 0 plus left parenthesis s Subscript f Baseline minus s 0 right parenthesis rho right parenthesis EndRoot EndFraction period EndLayoutt f = t(s f ) = t0 +
s f
{
s0
dσ
√β(σ)
(10.17) 
= t0 + (s f − s0) 
1
{
0 
dρ
/
β
(
s0 + (s f − s0)ρ
). 
10.3.1 
Transformation of the Dynamic Equation 
Because of (10.13a), (10.13b), we ﬁnd 
StartLayout 1st Row 1st Column ModifyingAbove q With dot left parenthesis t right parenthesis 2nd Column equals q prime Subscript e Baseline left parenthesis s right parenthesis ModifyingAbove s With dot 3rd Column Blank 4th Column left parenthesis ModifyingAbove s With dot colon equals StartFraction d s Over d t EndFraction comma q prime Subscript e Baseline left parenthesis s right parenthesis colon equals StartFraction d q Subscript e Baseline Over d s EndFraction right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column q With two dots left parenthesis t right parenthesis 2nd Column equals q prime Subscript e Baseline left parenthesis s right parenthesis s With two dots plus q double prime Subscript e Baseline left parenthesis s right parenthesis ModifyingAbove s With dot squared period EndLayout˙q(t) = q'
e(s)˙s
(
˙s := ds
dt , q'
e(s) := dqe
ds
)
(10.18a) 
StartLayout 1st Row 1st Column ModifyingAbove q With dot left parenthesis t right parenthesis 2nd Column equals q prime Subscript e Baseline left parenthesis s right parenthesis ModifyingAbove s With dot 3rd Column Blank 4th Column left parenthesis ModifyingAbove s With dot colon equals StartFraction d s Over d t EndFraction comma q prime Subscript e Baseline left parenthesis s right parenthesis colon equals StartFraction d q Subscript e Baseline Over d s EndFraction right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column q With two dots left parenthesis t right parenthesis 2nd Column equals q prime Subscript e Baseline left parenthesis s right parenthesis s With two dots plus q double prime Subscript e Baseline left parenthesis s right parenthesis ModifyingAbove s With dot squared period EndLayout¨q(t) = q'
e(s)¨s + q''
e (s)˙s2.
(10.18b) 
Moreover, according to (10.14) we have that 
ModifyingAbove s With dot squared equals beta left parenthesis s right parenthesis comma ModifyingAbove s With dot equals StartRoot beta left parenthesis s right parenthesis EndRoot comma˙s2 = β(s),
˙s =
√
β(s),
(10.18c) 
and the differentiation of (10.18c) with respect to time tt yields 
s With two dots equals one half beta prime left parenthesis s right parenthesis period¨s = 1
2β'(s).
(10.18d) 
Hence, (10.18a)–(10.18d) yields the following representation 
StartLayout 1st Row 1st Column ModifyingAbove q With dot left parenthesis t right parenthesis 2nd Column equals q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot 2nd Row 1st Column Blank 3rd Row 1st Column q With two dots left parenthesis t right parenthesis 2nd Column equals q prime Subscript e Baseline left parenthesis s right parenthesis one half beta prime left parenthesis s right parenthesis plus q double prime Subscript e Baseline left parenthesis s right parenthesis beta left parenthesis s right parenthesis EndLayout˙q(t) = q'
e(s)
√
β(s)
(10.19a) 
StartLayout 1st Row 1st Column ModifyingAbove q With dot left parenthesis t right parenthesis 2nd Column equals q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot 2nd Row 1st Column Blank 3rd Row 1st Column q With two dots left parenthesis t right parenthesis 2nd Column equals q prime Subscript e Baseline left parenthesis s right parenthesis one half beta prime left parenthesis s right parenthesis plus q double prime Subscript e Baseline left parenthesis s right parenthesis beta left parenthesis s right parenthesis EndLayout¨q(t) = q'
e(s)1
2β'(s) + q''
e (s)β(s)
(10.19b) 
of ModifyingAbove q With dot left parenthesis t right parenthesis comma q With two dots left parenthesis t right parenthesis˙q(t), ¨q(t) in terms of the new unknown functions q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesisqe(·), β(·). 
Inserting now (10.19a), (10.19b) into the dynamic equation (10.4a), we ﬁnd the 
equivalent relation 
u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis equals u left parenthesis t right parenthesis w i t h s equals s left parenthesis t right parenthesis comma t equals t left parenthesis s right parenthesis commaue (pD, s; qe(·), β(·)) = u(t) with s = s(t), t = t(s),
(10.20a) 
where the function u Subscript eue is deﬁned by

10.3 Problem Transformation
227
StartLayout 1st Row 1st Column u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis 2nd Column colon equals upper M left parenthesis p Subscript upper D Baseline comma q Subscript e Baseline left parenthesis s right parenthesis right parenthesis left parenthesis one half q prime Subscript e Baseline left parenthesis s right parenthesis beta prime left parenthesis s right parenthesis plus q double prime Subscript e Baseline left parenthesis s right parenthesis beta left parenthesis s right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column plus h left parenthesis p Subscript upper D Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot right parenthesis period EndLayoutue
(
pD, s; qe(·), β(·)
)
:= M
(
pD, qe(s)
) (1
2q'
e(s)β'(s) + q''
e (s)β(s)
)
+ h
(
pD, qe(s), q'
e(s)
√
β(s)
)
.
(10.20b) 
The initial and terminal conditions (10.7)–(10.8b) are transformed, see (10.13a), 
(10.13b) and (10.19a), as follows 
StartLayout 1st Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals bold italic q 0 left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s Subscript o Baseline right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold 0 Baseline left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column psi left parenthesis t left parenthesis s Subscript f Baseline right parenthesis comma p comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis comma q prime Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis StartRoot beta left parenthesis s Subscript f Baseline right parenthesis EndRoot right parenthesis equals 0 EndLayoutqe(s0) = q0(ω),
q'
e(s0)
√
β(so) = ˙q0(ω)
(10.21a) 
StartLayout 1st Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals bold italic q 0 left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s Subscript o Baseline right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold 0 Baseline left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column psi left parenthesis t left parenthesis s Subscript f Baseline right parenthesis comma p comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis comma q prime Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis StartRoot beta left parenthesis s Subscript f Baseline right parenthesis EndRoot right parenthesis equals 0 EndLayoutψ
(
t(s f ), p, qe(s f ), q'
e(s f )
√
β(s f )
)
= 0
(10.21b) 
or 
q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals bold italic q Subscript f Baseline left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis StartRoot beta left parenthesis s Subscript f Baseline right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold italic f Baseline left parenthesis omega right parenthesis periodqe(s f ) = q f (ω),
q'
e(s f )
√
β(s f ) = ˙q f (ω).
(10.21c) 
Remark 10.5 In most cases we have the robot resting at timet equals t 0t = t0 andt equals t Subscript ft = t f , i.e., 
ModifyingAbove q With dot left parenthesis t 0 right parenthesis equals ModifyingAbove q With dot left parenthesis t Subscript f Baseline right parenthesis equals 0˙q(t0) = ˙q(t f ) = 0, hence, 
beta left parenthesis s 0 right parenthesis equals beta left parenthesis s Subscript f Baseline right parenthesis equals 0 periodβ(s0) = β(s f ) = 0.
(10.21d) 
10.3.2 
Transformation of the Control Constraints 
Using (10.13a), (10.13b), the control constraints (10.9a)–(10.9c) read in ss-form as 
follows: 
StartLayout 1st Row 1st Column Blank 2nd Column u Superscript min Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline right parenthesis less than or equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline right parenthesis comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column g Subscript upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot comma u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column g Subscript upper I upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot comma u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline comma EndLayoutumin(
t(s), pC
)
≤ue
(
pD, s; qe(·), β(·)
)
≤umax(
t(s), pC
)
,
s0 ≤s ≤s f
(10.22a) 
StartLayout 1st Row 1st Column Blank 2nd Column u Superscript min Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline right parenthesis less than or equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline right parenthesis comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column g Subscript upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot comma u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column g Subscript upper I upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot comma u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline comma EndLayoutgI
(
t(s), pC, qe(s), q'
e(s)
√
β(s), ue
(
pD, s; qe(·), β(·)
))
≤0,
s0 ≤s ≤s f
(10.22b) 
StartLayout 1st Row 1st Column Blank 2nd Column u Superscript min Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline right parenthesis less than or equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline right parenthesis comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column g Subscript upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot comma u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column g Subscript upper I upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot comma u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline comma EndLayoutgI I
(
t(s), pC, qe(s), q'
e(s)
√
β(s), ue
(
pD, s; qe(·), β(·)
))
= 0,
s0 ≤s ≤s f ,
(10.22c) 
where t equals t left parenthesis s right parenthesis equals t left parenthesis s semicolon beta left parenthesis dot right parenthesis right parenthesist = t(s) = t
(
s; β(·)
)
or its approximation t equals ModifyingAbove t With tilde left parenthesis s right parenthesis equals ModifyingAbove t With tilde left parenthesis s semicolon beta left parenthesis dot right parenthesis right parenthesist = ˜t(s) = ˜t
(
s; β(·)
)
is deﬁned 
by (10.15b), (10.16a)–(10.16c).

228
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
Remark 10.6 
(I) In the important case that the bounds for u equals u left parenthesis t right parenthesisu = u(t) depend on the system state 
left parenthesis q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesis
(
q(t), ˙q(t)
)
in conﬁguration space,i.e., 
StartLayout 1st Row 1st Column u Superscript min Baseline left parenthesis t comma p Subscript upper C Baseline right parenthesis 2nd Column colon equals u Superscript min Baseline left parenthesis p Subscript upper C Baseline comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesis comma 2nd Row 1st Column u Superscript max Baseline left parenthesis t comma p Subscript upper C Baseline right parenthesis 2nd Column colon equals u Superscript max Baseline left parenthesis p Subscript upper C Baseline comma q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesis EndLayoutumin(t, pC) := umin(
pC, q(t), ˙q(t)
)
,
umax(t, pC) := umax(
pC, q(t), ˙q(t)
)
(10.23a) 
condition (10.22a) is reduced to 
StartLayout 1st Row 1st Column Blank 2nd Column u Superscript min Baseline left parenthesis p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot right parenthesis less than or equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals u Superscript max Baseline left parenthesis p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutumin(
pC, qe(s), q'
e(s)
√
β(s)
)
≤ue
(
pD, s; qe(·), β(·)
)
≤umax(
pC, qe(s), q'
e(s)
√
β(s)
)
,
s0 ≤s ≤s f .
(10.23b) 
(II) If the bounds foru left parenthesis t right parenthesisu(t) in (10.23a) do not depend on the velocityModifyingAbove q With dot left parenthesis t right parenthesis ˙q(t) in conﬁgura-
tion space, and the geometric pathq Subscript e Baseline left parenthesis s right parenthesis equals q Subscript e Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineqe(s) = qe(s), s0 ≤s ≤s f , in conﬁguration 
space is known in advance, then the bounds 
StartLayout 1st Row 1st Column u Superscript min Baseline left parenthesis p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis right parenthesis 2nd Column equals ModifyingAbove u With tilde Superscript min Baseline left parenthesis p Subscript upper C Baseline comma s right parenthesis 2nd Row 1st Column u Superscript max Baseline left parenthesis p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis right parenthesis 2nd Column equals ModifyingAbove u With tilde Superscript max Baseline left parenthesis p Subscript upper C Baseline comma s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline EndLayoutumin(
pC, qe(s)
)
= ˜umin(pC, s)
umax(
pC, qe(s)
)
= ˜umax(pC, s),
s0 ≤s ≤s f
(10.23c) 
depend on left parenthesis p Subscript upper C Baseline comma s right parenthesis(pC, s) only. 
Bounds of the type (10.23c) for the control function u left parenthesis t right parenthesisu(t) may be taken  into  
account as an approximation of the more general bounds in (10.22a). 
10.3.3 
Transformation of the State Constraints 
Applying the transformations (10.13a), (10.13b), (10.18a) and (10.15b) to the state 
constraints (10.10a), (10.10b), we ﬁnd the followingss-form of the state constraints: 
StartLayout 1st Row 1st Column upper S Subscript upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot right parenthesis 2nd Column less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column upper S Subscript upper I upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot right parenthesis 2nd Column equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutSI
(
t(s), pC, qe(s), q'
e(s)
√
β(s)
)
≤0,
s0 ≤s ≤s f
(10.24a) 
StartLayout 1st Row 1st Column upper S Subscript upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot right parenthesis 2nd Column less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column upper S Subscript upper I upper I Baseline left parenthesis t left parenthesis s right parenthesis comma p Subscript upper C Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot right parenthesis 2nd Column equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutSI I
(
t(s), pC, qe(s), q'
e(s)
√
β(s)
)
= 0,
s0 ≤s ≤s f .
(10.24b) 
Obviously, the ss-form of the special state constraints (10.10c), (10.10d) read 
StartLayout 1st Row 1st Column q Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis 2nd Column less than or equals q Subscript e Baseline left parenthesis s right parenthesis less than or equals q Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis 2nd Column less than or equals q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot less than or equals ModifyingAbove q With dot Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutqmin(pC) ≤qe(s) ≤qmax(pC),
s0 ≤s ≤s f ,
(10.24c) 
StartLayout 1st Row 1st Column q Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis 2nd Column less than or equals q Subscript e Baseline left parenthesis s right parenthesis less than or equals q Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis 2nd Column less than or equals q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot less than or equals ModifyingAbove q With dot Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayout˙qmin(pC) ≤q'
e(s)
√
β(s) ≤˙qmax(pC),
s0 ≤s ≤s f .
(10.24d)

10.3 Problem Transformation
229
In the case that the end-effector of the robot has to follow a given path (10.12) in  
work space, Eq. (10.24b) reads 
upper T left parenthesis p Subscript upper K Baseline comma q Subscript e Baseline left parenthesis s right parenthesis right parenthesis minus x Subscript e Baseline left parenthesis p Subscript x Baseline comma s right parenthesis equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline commaT
(
pK, qe(s)
)
−xe(px, s) = 0,
s0 ≤s ≤s f ,
(10.24e) 
with the parameter vectorp Subscript xpx describing possible uncertainties in the selection of the 
path to be followed by the roboter in work space. 
10.3.4 
Transformation of the Objective Function 
Applying the integral transformation t equals t left parenthesis s right parenthesis comma d t equals StartFraction d s Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFractiont = t(s), dt =
ds
√β(s) to the integral in the 
representation (10.6) of the objective function upper J equals upper J left parenthesis u left parenthesis dot right parenthesis right parenthesisJ = J
(
u(·)
)
, and transforming also 
the terminal costs, we ﬁnd the following ss-form of the objective function: 
StartLayout 1st Row upper J left parenthesis u left parenthesis dot right parenthesis right parenthesis equals integral Subscript s 0 Superscript s Subscript f Baseline Baseline upper L left parenthesis t left parenthesis s right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot comma u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis right parenthesis StartFraction d s Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction 2nd Row plus phi left parenthesis t left parenthesis s Subscript f Baseline right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis comma q prime Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis StartRoot beta left parenthesis s Subscript f Baseline right parenthesis EndRoot right parenthesis period EndLayoutJ
(
u(·)
)
=
s f
{
s0
L (t(s), pJ , qe(s), q'
e(s)
√
β(s), ue
(
pD, s; qe(·), β(·)
))
ds
√β(s)
+ φ
(
t(s f ), pJ , qe(s f ), q'
e(s f )
/
β(s f )
)
.
(10.25a) 
Note that beta left parenthesis s Subscript f Baseline right parenthesis equals 0β(s f ) = 0 holds in many practical situations. 
For the class of time-minimum problems we have that 
upper J left parenthesis u left parenthesis dot right parenthesis right parenthesis colon equals t Subscript f Baseline minus t 0 equals integral Subscript t 0 Superscript t Subscript f Baseline Baseline d t equals integral Subscript s 0 Superscript s Subscript f Baseline Baseline StartFraction d s Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction periodJ
(
u(·)
)
:= t f −t0 =
t f
{
t0
dt =
s f
{
s0
ds
√β(s).
(10.25b) 
Optimal deterministic trajectory planning (OSTP). By means of the t minus st −s-
transformation onto the ﬁxedss–parameter domainleft bracket s 0 comma s Subscript f Baseline right bracket[s0, s f ], the optimal control prob-
lem (10.4a)–(10.4d), (10.6)–(10.12) is transformed into a variational problem for 
ﬁnding, see (10.13a)–(10.13c) and (10.14), an optimal velocity proﬁle beta left parenthesis s right parenthesisβ(s) and 
an optimal geometric path q Subscript e Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineqe(s), s0 ≤s ≤s f . In the deterministic case, i.e., if the 
parameter vector pp is assumed to be known, then for the numerical solution of the 
resulting optimal deterministic trajectory planning problem several efﬁcient solution 
techniques are available, cf. [ 7, 8, 10, 19, 25, 30, 46].

230
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
10.4 OSTP—Optimal Stochastic Trajectory Planning 
In the following we suppose that the initial and terminal conditions (10.21d) hold, 
i.e., 
beta 0 equals beta left parenthesis s 0 right parenthesis equals beta Subscript f Baseline equals beta left parenthesis s Subscript f Baseline right parenthesis equals 0 o r ModifyingAbove q With dot left parenthesis t 0 right parenthesis equals ModifyingAbove q With dot left parenthesis t Subscript f Baseline right parenthesis equals 0 periodβ0 = β(s0) = β f = β(s f ) = 0 or ˙q(t0) = ˙q(t f ) = 0.
Based on the  left parenthesis t minus s right parenthesis(t −s)–transformation described in Sect. 10.3, and relying on 
the inverse dynamics approach, the robot control problem (10.6), (10.7)–(10.8b), 
(10.9a)–(10.9c), (10.10a)–(10.10c) can be represented now by a variational prob-
lem for left parenthesis q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis comma beta left parenthesis dot right parenthesis
(
qe(·), β(·)
)
, β(·), resp., given in the following. Having left parenthesis q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis comma beta left parenthesis dot right parenthesis
(
qe(·), β(·)
)
, β(·), 
resp., a reference trajectory and a feedforward control can then be constructed. 
(A) Time-invariant case (autonomous systems) 
If the objective function and the constraint functions do not depend explicitly on 
timett, then the optimal control problem takes the following equivalentss-forms: 
min integral Subscript s 0 Superscript s Subscript f Baseline upper L Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis d s plus phi Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis min
s f
{
s0
L J(
pJ, qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
ds + φ J(
pJ, qe(s f )
)
(10.26a) 
s.t. 
StartLayout 1st Row 1st Column Blank 2nd Column f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 10th Row 1st Column Blank 11th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals bold q 0 left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold 0 Baseline left parenthesis omega right parenthesis 12th Row 1st Column Blank 13th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals bold q Subscript f Baseline left parenthesis omega right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayout f u
I
(
p, qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
≤0,
s0 ≤s ≤s f
(10.26b) 
StartLayout 1st Row 1st Column Blank 2nd Column f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 10th Row 1st Column Blank 11th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals bold q 0 left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold 0 Baseline left parenthesis omega right parenthesis 12th Row 1st Column Blank 13th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals bold q Subscript f Baseline left parenthesis omega right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayout f u
I I
(
p, qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
= 0,
s0 ≤s ≤s f
(10.26c) 
StartLayout 1st Row 1st Column Blank 2nd Column f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 10th Row 1st Column Blank 11th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals bold q 0 left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold 0 Baseline left parenthesis omega right parenthesis 12th Row 1st Column Blank 13th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals bold q Subscript f Baseline left parenthesis omega right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayout f S
I
(
p, qe(s), q'
e(s), β(s)
)
≤0,
s0 ≤s ≤s f
(10.26d) 
StartLayout 1st Row 1st Column Blank 2nd Column f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 10th Row 1st Column Blank 11th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals bold q 0 left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold 0 Baseline left parenthesis omega right parenthesis 12th Row 1st Column Blank 13th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals bold q Subscript f Baseline left parenthesis omega right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayout f S
I I
(
p, qe(s), q'
e(s), β(s)
)
= 0,
s0 ≤s ≤s f
(10.26e) 
StartLayout 1st Row 1st Column Blank 2nd Column f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 10th Row 1st Column Blank 11th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals bold q 0 left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold 0 Baseline left parenthesis omega right parenthesis 12th Row 1st Column Blank 13th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals bold q Subscript f Baseline left parenthesis omega right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayoutβ(s) ≥0,
s0 ≤s ≤s f
(10.26f) 
StartLayout 1st Row 1st Column Blank 2nd Column f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 10th Row 1st Column Blank 11th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals bold q 0 left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold 0 Baseline left parenthesis omega right parenthesis 12th Row 1st Column Blank 13th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals bold q Subscript f Baseline left parenthesis omega right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayoutqe(s0) = q0(ω),
q'
e(s0)
√
β(s0) = ˙q0(ω)
(10.26g) 
StartLayout 1st Row 1st Column Blank 2nd Column f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Column Blank 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis less than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma 3rd Column s 0 less than or equals s less than or equals s Subscript f Baseline 10th Row 1st Column Blank 11th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals bold q 0 left parenthesis omega right parenthesis comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove bold italic q With bold dot Subscript bold 0 Baseline left parenthesis omega right parenthesis 12th Row 1st Column Blank 13th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals bold q Subscript f Baseline left parenthesis omega right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayoutqe(s f ) = q f (ω),
β(s f ) = β f .
(10.26h) 
Under condition (10.21d), a more general version of the terminal condition 
(10.26h) reads, cf. (10.21b), 
psi left parenthesis p comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis equals 0 comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline colon equals 0 period left parenthesis 10.26 h right single quotation mark right parenthesis
ψ
(
p, qe(s f )
)
= 0,
β(s f ) = β f := 0.
(10.26h’)
Here,

10.4 OSTP—Optimal Stochastic Trajectory Planning
231
StartLayout 1st Row 1st Column upper L Superscript upper J 2nd Column equals upper L Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma 3rd Column phi Superscript upper J 4th Column equals phi Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column f Subscript upper I Superscript u 2nd Column equals f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma 3rd Column f Subscript upper I upper I Superscript u 4th Column equals f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column f Subscript upper I Superscript upper S 2nd Column equals f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma beta right parenthesis comma 3rd Column f Subscript upper I upper I Superscript upper S 4th Column equals f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma beta right parenthesis EndLayoutL J = L J(
pJ, qe, q'
e, q''
e , β, β')
,
φ J = φ J(pJ, qe)
(10.27a) 
StartLayout 1st Row 1st Column upper L Superscript upper J 2nd Column equals upper L Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma 3rd Column phi Superscript upper J 4th Column equals phi Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column f Subscript upper I Superscript u 2nd Column equals f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma 3rd Column f Subscript upper I upper I Superscript u 4th Column equals f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column f Subscript upper I Superscript upper S 2nd Column equals f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma beta right parenthesis comma 3rd Column f Subscript upper I upper I Superscript upper S 4th Column equals f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma beta right parenthesis EndLayout f u
I = f u
I (p, qe, q'
e, q''
e , β, β'),
f u
I I = f u
I I(p, qe, q'
e, q''
e , β, β')
(10.27b) 
StartLayout 1st Row 1st Column upper L Superscript upper J 2nd Column equals upper L Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma 3rd Column phi Superscript upper J 4th Column equals phi Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column f Subscript upper I Superscript u 2nd Column equals f Subscript upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma 3rd Column f Subscript upper I upper I Superscript u 4th Column equals f Subscript upper I upper I Superscript u Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column f Subscript upper I Superscript upper S 2nd Column equals f Subscript upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma beta right parenthesis comma 3rd Column f Subscript upper I upper I Superscript upper S 4th Column equals f Subscript upper I upper I Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline comma q prime Subscript e Baseline comma beta right parenthesis EndLayout f S
I = f S
I (p, qe, q'
e, β),
f S
I I = f S
I I(p, qe, q'
e, β)
(10.27c) 
are the functions representing the ss-form of the objective function (10.25a), 
the constraint functions in the control constraints (10.22a)–(10.22c), and in the 
state constraints (10.24a)–(10.24e), respectively. Deﬁne then f Superscript u f u and f Superscript upper S f S by 
f Superscript u Baseline colon equals StartBinomialOrMatrix f Subscript upper I Superscript u Baseline Choose f Subscript upper I upper I Superscript u Baseline EndBinomialOrMatrix comma f Superscript upper S Baseline colon equals StartBinomialOrMatrix f Subscript upper I Superscript upper S Baseline Choose f Subscript upper I upper I Superscript upper S Baseline EndBinomialOrMatrix period f u :=
( f u
I
f u
I I
)
,
f S :=
( f S
I
f S
I I
)
.
(10.27d) 
(B) Time-varying case (non autonomous systems) 
If the time tt occurs explicitly in the objective and/or in some of the constraints 
of the robot control problem, then, using (10.15a), (10.15b), (10.16a)–(10.16c), 
we have that t equals t left parenthesis s semicolon t 0 comma s 0 comma beta left parenthesis dot right parenthesis right parenthesist = t
(
s; t0, s0, β(·)
)
, and the functions (10.27a)–(10.27d) and psiψ
may depend then also on left parenthesis s comma t 0 comma s 0 comma beta left parenthesis dot right parenthesis right parenthesis comma left parenthesis s Subscript f Baseline comma t 0 comma s 0 comma beta left parenthesis dot right parenthesis right parenthesis
(
s, t0, s0, β(·)
)
,
(
s f , t0, s0, β(·)
)
, resp., hence, 
StartLayout 1st Row upper L Superscript upper J Baseline equals upper L Superscript upper J Baseline left parenthesis s comma t 0 comma s 0 comma beta left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis 2nd Row phi Superscript upper J Baseline equals phi Superscript upper J Baseline left parenthesis s Subscript f Baseline comma t 0 comma s 0 comma beta left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline right parenthesis 3rd Row f Superscript u Baseline equals f Superscript u Baseline left parenthesis s comma t 0 comma s 0 comma beta left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis 4th Row f Superscript upper S Baseline equals f Superscript upper S Baseline left parenthesis s comma t 0 comma s 0 comma beta left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q prime Subscript e Baseline comma beta right parenthesis 5th Row psi equals psi left parenthesis s Subscript f Baseline comma t 0 comma s 0 comma beta left parenthesis dot right parenthesis comma p comma q Subscript e Baseline right parenthesis period EndLayout
L J = L J(
s, t0, s0, β(·), pJ, qe, q'
e, q''
e , β, β')
φ J = φ J(
s f , t0, s0, β(·), pJ, qe
)
f u = f u(
s, t0, s0, β(·), p, qe, q'
e, q''
e , β, β')
f S = f S(
s, t0, s0, β(·), p, qe, q'
e, β
)
ψ = ψ
(
s f , t0, s0, β(·), p, qe
)
.
In order to get a reliable optimal geometric path q Subscript e Superscript asterisk Baseline equals q Subscript e Superscript asterisk Baseline left parenthesis s right parenthesisq∗
e = q∗
e (s) in conﬁguration 
space and a reliable optimal velocity proﬁle beta Superscript asterisk Baseline equals beta Superscript asterisk Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineβ∗= β∗(s), s0 ≤s ≤s f , being robust 
with respect to random parameter variations of p equals p left parenthesis omega right parenthesisp = p(ω), the variational problem 
(10.26a)–(10.26h) under stochastic uncertainty must be replaced by an appropriate 
deterministic substitute problem which is deﬁned according to the following princi-
ples [ 21– 24, 30], cf. also [ 20, 21, 24, 26, 27]. 
Assume ﬁrst that the a priori information about the robot and its environment up 
to time t 0t0 is described by means of a sigmaσ–algebra script upper A Subscript t 0At0, and let then 
upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis 0 right parenthesis Baseline equals upper P Subscript p left parenthesis dot right parenthesis Baseline left parenthesis dot vertical bar script upper A Subscript t 0 Baseline right parenthesisP(0)
p(·) = Pp(·)
(
·|At0
)
(10.28) 
denote the a priori distribution of the random vector p equals p left parenthesis omega right parenthesisp = p(ω) given script upper A Subscript t 0At0. 
Depending on the decision theoretical point of view, different approaches are 
possible, e.g., reliability-based substitute problems, belonging essentially to one of 
the following two basic classes of substitute problems:

232
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
(I) Risk(recourse)-constrained minimum expected cost problems 
(II) Expected total cost-minimum problems. 
Substitute problems are constructed by selecting certain scalar or vectorial loss 
or cost functions 
gamma Subscript upper I Superscript u Baseline comma gamma Subscript upper I upper I Superscript u Baseline comma gamma Subscript upper I Superscript upper S Baseline comma gamma Subscript upper I upper I Superscript upper S Baseline comma gamma Superscript psi Baseline comma ellipsisγ u
I , γ u
I I, γ S
I , γ S
I I, γ ψ, . . .
(10.29a) 
evaluating the violation of the random constraints (10.26b), (10.26c), (10.26d), 
(10.26e), (10.26h’), respectively. 
In the following all expectations are conditional expectations with respect to 
the a priori distribution upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis 0 right parenthesisP(0)
p(·) of the random parameter vector p left parenthesis omega right parenthesisp(ω). Moreover, the 
following compositions are introduced: 
StartLayout 1st Row 1st Column f Subscript gamma Superscript u 2nd Column colon equals StartBinomialOrMatrix gamma Subscript upper I Superscript u Baseline degrees f Subscript upper I Superscript u Baseline Choose gamma Subscript upper I upper I Superscript u Baseline degrees f Subscript upper I upper I Superscript u Baseline EndBinomialOrMatrix comma f Subscript gamma Superscript upper S Baseline colon equals StartBinomialOrMatrix gamma Subscript upper I Superscript upper S Baseline degrees f Subscript upper I Superscript upper S Baseline Choose gamma Subscript upper I upper I Superscript upper S Baseline degrees f Subscript upper I upper I Superscript upper S Baseline EndBinomialOrMatrix 2nd Row 1st Column Blank 3rd Row 1st Column psi Subscript gamma 2nd Column colon equals gamma Superscript psi Baseline degrees psi period EndLayout f u
γ :=
( γ u
I ◦f u
I
γ u
I I ◦f u
I I
)
,
f S
γ :=
( γ S
I ◦f S
I
γ S
I I ◦f S
I I
)
(10.29b) 
StartLayout 1st Row 1st Column f Subscript gamma Superscript u 2nd Column colon equals StartBinomialOrMatrix gamma Subscript upper I Superscript u Baseline degrees f Subscript upper I Superscript u Baseline Choose gamma Subscript upper I upper I Superscript u Baseline degrees f Subscript upper I upper I Superscript u Baseline EndBinomialOrMatrix comma f Subscript gamma Superscript upper S Baseline colon equals StartBinomialOrMatrix gamma Subscript upper I Superscript upper S Baseline degrees f Subscript upper I Superscript upper S Baseline Choose gamma Subscript upper I upper I Superscript upper S Baseline degrees f Subscript upper I upper I Superscript upper S Baseline EndBinomialOrMatrix 2nd Row 1st Column Blank 3rd Row 1st Column psi Subscript gamma 2nd Column colon equals gamma Superscript psi Baseline degrees psi period EndLayoutψγ := γ ψ ◦ψ.
(10.29c) 
Now the two basic types of substitute problems are described. 
(I) Risk(recourse)-based minimum expected cost problems 
Minimizing the expected (primal) costsupper E left parenthesis upper J left parenthesis u left parenthesis dot right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesisE
(
J(u(·))|At0
)
, and demanding that the 
risk, i.e., the expected (recourse) costs arising from the violation of the constraints 
of the variational problem (10.26a)–(10.26h) do not exceed given upper bounds, 
in the time-invariant case we ﬁnd the following substitute problem: 
StartLayout 1st Row 1st Column Blank 2nd Column min integral Subscript s 0 Superscript s Subscript f Baseline upper E left parenthesis upper L Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis d s 2nd Row 1st Column Blank 2nd Column plus upper E left parenthesis phi Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis EndLayout min
s f
{
s0
E
(
L J(
pJ, qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
|At0
)
ds
(10.30a) 
+ E
(
φ J(
pJ , qe(s f )
)
|At0
)
s.t. 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript u Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript upper S Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals ModifyingAbove q With quotation dash Subscript 0 Baseline comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Baseline left parenthesis i f phi Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline comma EndLayoutE
(
f u
γ
(
p, qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
|At0
)
≤[u, s0 ≤s ≤s f
(10.30b) 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript u Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript upper S Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals ModifyingAbove q With quotation dash Subscript 0 Baseline comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Baseline left parenthesis i f phi Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline comma EndLayoutE
(
f S
γ
(
p, qe(s), q'
e(s), β(s)
)
|At0
)
≤[S,
s0 ≤s ≤s f
(10.30c) 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript u Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript upper S Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals ModifyingAbove q With quotation dash Subscript 0 Baseline comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Baseline left parenthesis i f phi Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline comma EndLayoutβ(s) ≥0,
s0 ≤s ≤s f
(10.30d) 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript u Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript upper S Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals ModifyingAbove q With quotation dash Subscript 0 Baseline comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Baseline left parenthesis i f phi Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline comma EndLayoutqe(s0) = q0,
q'
e(s0)
√
β(s0) = ˙q0
(10.30e) 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript u Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript u Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Superscript upper S Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column beta left parenthesis s right parenthesis greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s 0 right parenthesis equals ModifyingAbove q With quotation dash Subscript 0 Baseline comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Baseline left parenthesis i f phi Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline comma EndLayoutqe(s f ) = q f (if φ J = 0),
β(s f ) = β f ,
(10.30f)

10.4 OSTP—Optimal Stochastic Trajectory Planning
233
and the more general terminal condition (10.26h’) is replaced by 
beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline colon equals 0 comma upper E left parenthesis psi Subscript gamma Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis less than or equals normal upper Gamma Subscript psi Baseline period left parenthesis 10.30 f right single quotation mark right parenthesis
β(s f ) = β f := 0,
E
(
ψγ
(
p, qe(s f )
)
|At0
)
≤[ψ.
(10.30f’)
Here, 
normal upper Gamma Superscript u Baseline equals normal upper Gamma Superscript u Baseline left parenthesis s right parenthesis comma normal upper Gamma Superscript upper S Baseline equals normal upper Gamma Superscript upper S Baseline left parenthesis s right parenthesis comma normal upper Gamma Subscript psi Baseline equals normal upper Gamma Subscript psi Baseline left parenthesis s right parenthesis[u = [u(s),
[S = [S(s),
[ψ = [ψ(s)
(10.30g) 
denote scalar or vectorial upper risk bounds which may depend on the path 
parameter s element of left bracket s 0 comma s Subscript f Baseline right brackets ∈[s0, s f ]. Furthermore, the initial, terminal values ModifyingAbove q With quotation dash Subscript 0 Baseline comma ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline comma ModifyingAbove q With quotation dash Subscript f Baselineq0, ˙q0, q f in 
(10.30e), (10.30f) are determined according to one of the following relations: 
a. 
ModifyingAbove q With quotation dash Subscript 0 Baseline colon equals ModifyingAbove q With caret left parenthesis t 0 right parenthesis comma ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline colon equals ModifyingAbove Above ModifyingAbove q With dot With caret left parenthesis t 0 right parenthesis comma ModifyingAbove q With quotation dash Subscript f Baseline colon equals ModifyingAbove q With caret left parenthesis t Subscript f Baseline right parenthesis commaq0 := ˆq(t0),
˙q0 := ˆ˙q(t0),
q f := ˆq(t f ),
(10.30h) 
where left parenthesis ModifyingAbove q With caret left parenthesis t right parenthesis comma ModifyingAbove Above ModifyingAbove q With dot With caret left parenthesis t right parenthesis right parenthesis
(
ˆq(t), ˆ˙q(t)
)
denotes an estimate, observation, etc., of the state in 
conﬁguration space at time tt; 
b. 
StartLayout 1st Row 1st Column ModifyingAbove q With quotation dash Subscript 0 2nd Column colon equals upper E left parenthesis q 0 left parenthesis omega right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline colon equals upper E left parenthesis ModifyingAbove q With dot Subscript 0 Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma 2nd Row 1st Column ModifyingAbove q With quotation dash Subscript f Baseline equals ModifyingAbove q Subscript f Baseline With quotation dash Superscript left parenthesis 0 right parenthesis Baseline 2nd Column colon equals upper E left parenthesis q Subscript f Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma EndLayoutq0 := E
(
q0(ω)|At0
)
,
˙q0 := E
(
˙q0(ω)|At0
)
,
q f = q f
(0) := E
(
q f (ω)|At0
)
,
(10.30i) 
where q 0 left parenthesis omega right parenthesis comma ModifyingAbove q With dot Subscript 0 Baseline left parenthesis omega right parenthesisq0(ω), ˙q0(ω) is a random initial position, and q Subscript f Baseline left parenthesis omega right parenthesisq f (ω) is a random 
terminal position. 
Having corresponding information about initial and terminal values x 0 comma ModifyingAbove x With dot Subscript 0 Baselinex0, ˙x0, x Subscript fx f
in work space, related equations forq 0 comma ModifyingAbove q With dot Subscript 0 Baseline comma q Subscript f Baselineq0, ˙q0, q f may be obtained by means of the 
kinematic equation (10.5). 
Remark 10.7 (Average constraints) Taking the average of the pointwise constraints 
(10.30b), (10.30c) with respect to the path parameter s comma s 0 less than or equals s less than or equals s Subscript f Baselines, s0 ≤s ≤s f , we get the 
simpliﬁed integrated constraints 
StartLayout 1st Row 1st Column integral Subscript s 0 Superscript s Subscript f Baseline Baseline upper E left parenthesis f Subscript gamma Superscript u Baseline left parenthesis p comma q Subscript e Baseline comma left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis d s less than or equals normal upper Gamma overTilde Superscript u Baseline 2nd Column left parenthesis 10.30 b right single quotation mark right parenthesis 2nd Row 1st Column integral Subscript s 0 Superscript s Subscript f Baseline Baseline upper E left parenthesis f Subscript gamma Superscript upper S Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis d s less than or equals normal upper Gamma overTilde Superscript upper S Baseline period 2nd Column left parenthesis 10.30 c right single quotation mark right parenthesis EndLayout
s f
{
s0
E
(
f u
γ
(
p, qe, (s), q'
e(s), q''
e (s), β(s), β'(s)
)
|At0
)
ds ≤˜[u
(10.30b’)
s f
{
s0
E
(
f S
γ
(
p, qe(s), q'
e(s), β(s)
)
|At0
)
ds ≤˜[S.
(10.30c’)
Remark 10.8 (Generalized area of admissible motion) In generalization of the 
admissible area of motion [ 19, 25, 33] for path planning problems with a prescribed 
geometrical pathq Subscript e Baseline left parenthesis dot right parenthesis equals ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis dot right parenthesisqe(·) = qe(·) in conﬁguration space, for point-to-point problems the 
constraints (10.30b)–(10.30i) deﬁne for each path points comma s 0 less than or equals s less than or equals s Subscript f Baselines, s0 ≤s ≤s f , a generalized 
admissible area of motion for the vector

234
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
chi left parenthesis s right parenthesis colon equals left parenthesis q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline commaχ(s) :=
(
qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
,
s0 ≤s ≤s f ,
(10.30j) 
including information about the magnitude left parenthesis beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis
(
β(s), β'(s)
)
of the motion as well as 
information about the direction left parenthesis q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis right parenthesis
(
qe(s), q'
e(s), q''
e (s)
)
of the motion. 
Remark 10.9 (Problems with Chance Constraints) Substitute problems having 
chance constraints are obtained if the loss functionsgamma Superscript u Baseline comma gamma Superscript upper Sγ u, γ S for evaluating the viola-
tion of the inequality constraints in (10.26a)–(10.26h), (10.26h’) are 0–1 functions, 
cf. [ 25]. 
To give a characteristic example, we demand that the control, state constraints 
(10.22a), (10.24c), (10.24d), resp., have to be fulﬁlled at least with probability 
alpha Subscript u Baseline comma alpha Subscript q Baseline comma alpha Subscript ModifyingAbove q With dot Baselineαu, αq, α˙q for s 0 less than or equals s less than or equals s Subscript fs0 ≤s ≤s f , hence, 
StartLayout 1st Row 1st Column Blank 2nd Column upper P left parenthesis u Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis greater than or equals alpha Subscript u Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper P left parenthesis q Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals q Subscript e Baseline left parenthesis s right parenthesis less than or equals q Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis greater than or equals alpha Subscript q Baseline comma 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper P left parenthesis ModifyingAbove q With dot Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot less than or equals ModifyingAbove q With dot Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis greater than or equals alpha Subscript ModifyingAbove q With dot Baseline period EndLayoutP
(
umin(pC) ≤ue
(
pD, s; qe(·), β(·)
)
≤umax(pC)|At0
)
≥αu,
(10.31a) 
StartLayout 1st Row 1st Column Blank 2nd Column upper P left parenthesis u Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis greater than or equals alpha Subscript u Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper P left parenthesis q Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals q Subscript e Baseline left parenthesis s right parenthesis less than or equals q Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis greater than or equals alpha Subscript q Baseline comma 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper P left parenthesis ModifyingAbove q With dot Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot less than or equals ModifyingAbove q With dot Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis greater than or equals alpha Subscript ModifyingAbove q With dot Baseline period EndLayoutP
(
qmin(pC) ≤qe(s) ≤qmax(pC)|At0
)
≥αq,
(10.31b) 
StartLayout 1st Row 1st Column Blank 2nd Column upper P left parenthesis u Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis greater than or equals alpha Subscript u Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper P left parenthesis q Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals q Subscript e Baseline left parenthesis s right parenthesis less than or equals q Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis greater than or equals alpha Subscript q Baseline comma 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper P left parenthesis ModifyingAbove q With dot Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis less than or equals q prime Subscript e Baseline left parenthesis s right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot less than or equals ModifyingAbove q With dot Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis greater than or equals alpha Subscript ModifyingAbove q With dot Baseline period EndLayoutP
(
˙qmin(pC) ≤q'
e(s)
√
β(s) ≤˙qmax(pC)|At0
)
≥α˙q.
(10.31c) 
Sufﬁcient conditions for the chance constraints (10.31a)–(10.31c) can be obtained 
by applying certain probability inequalities, see [ 25]. Deﬁning 
StartLayout 1st Row 1st Column u Superscript c Baseline left parenthesis p Subscript upper C Baseline right parenthesis 2nd Column colon equals StartFraction u Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis plus u Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis Over 2 EndFraction comma 2nd Row 1st Column rho Subscript u Baseline left parenthesis p Subscript upper C Baseline right parenthesis 2nd Column colon equals StartFraction u Superscript max Baseline left parenthesis p Subscript upper C Baseline right parenthesis minus u Superscript min Baseline left parenthesis p Subscript upper C Baseline right parenthesis Over 2 EndFraction comma EndLayoutuc(pC) := umax(pC) + umin(pC)
2
,
ρu(pC) := umax(pC) −umin(pC)
2
,
(10.31d) 
then a sufﬁcient conditions for (10.31a) reads, cf. [ 25], 
StartLayout 1st Row 1st Column upper E 2nd Column left parenthesis t r upper B rho Subscript u Baseline left parenthesis p Subscript upper C Baseline right parenthesis Subscript d Superscript negative 1 Baseline left parenthesis u Subscript e Baseline minus u Superscript c Baseline left parenthesis p Subscript upper C Baseline right parenthesis right parenthesis left parenthesis u Subscript e Baseline minus u Superscript c Baseline left parenthesis p Subscript upper C Baseline right parenthesis right parenthesis Superscript upper T Baseline rho Subscript u Baseline left parenthesis p Subscript upper C Baseline right parenthesis Subscript d Superscript negative 1 Baseline vertical bar script upper A Subscript t 0 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals 1 minus alpha Subscript u Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline comma EndLayoutE
(
tr Bρu(pC)−1
d
(
ue −uc(pC)
)(
ue −uc(pC)
)T
ρu(pC)−1
d |At0
)
≤1 −αu,
s0 ≤s ≤s f ,
(10.31e) 
whereu Subscript e Baseline equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesisue = ue
(
pD, s; qe(·), β(·)
)
andrho Subscript u Baseline left parenthesis p Subscript upper C Baseline right parenthesis Subscript dρu(pC)d denotes the diagonal matrix contain-
ing the elements of rho Subscript u Baseline left parenthesis p Subscript upper C Baseline right parenthesisρu(pC) on its diagonal. Moreover, upper BB denotes a positive deﬁnite 
matrix such thatz Superscript upper T Baseline upper B z greater than or equals 1zT Bz ≥1 for all vectorszz such thatparallel to z parallel to Subscript normal infinity Baseline greater than or equals 1||z||∞≥1. Taking, e.g.,upper B equals upper IB = I, 
(10.31e) reads 
StartLayout 1st Row 1st Column upper E 2nd Column left parenthesis parallel to rho Subscript u Baseline left parenthesis p Subscript upper C Baseline right parenthesis Subscript d Superscript negative 1 Baseline left parenthesis u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis minus u Superscript c Baseline left parenthesis p Subscript upper C Baseline right parenthesis right parenthesis parallel to squared vertical bar script upper A Subscript t 0 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals 1 minus alpha Subscript u Baseline comma s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutE
(
||ρu(pC)−1
d
(
ue
(
pD, s; qe(·), β(·)
)
−uc(pC)
)
||2|At0
)
≤1 −αu,
s0 ≤s ≤s f .
(10.31f) 
Obviously, similar sufﬁcient conditions may be derived for (10.31b), (10.31c).

10.4 OSTP—Optimal Stochastic Trajectory Planning
235
We observe that the above class of risk-based minimum expected cost problems 
for the computation of left parenthesis q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis comma beta left parenthesis dot right parenthesis
(
qe(·), β(·)
)
, β(·), resp., is represented completely by the 
following set of 
i n i t i a l p a r a m e t e r s zeta 0 colon t 0 comma s 0 comma ModifyingAbove q With quotation dash Subscript 0 Baseline comma ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline comma upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis 0 right parenthesis Baseline o r nu 0initial parameters ζ0 : t0, s0, q0, ˙q0, P(0)
p(·) or ν0
(10.32a) 
and 
t e r m i n a l p a r a m e t e r s zeta Subscript f Baseline colon t Subscript f Baseline comma s Subscript f Baseline comma beta Subscript f Baseline comma ModifyingAbove q With quotation dash Subscript f Baseline periodterminal parameters ζ f : t f , s f , β f , q f .
(10.32b) 
In case of problems with a given geometric pathq Subscript e Baseline equals q Subscript e Baseline left parenthesis s right parenthesisqe = qe(s) in conﬁguration space, the 
valuesq 0 comma q Subscript f Baselineq0, q f may be deleted. Moreover, approximating the expectations in (10.30a)– 
(10.30f), (10.30f’) by means of Taylor expansions with respect to the parameter 
vector pp at the conditional mean 
ModifyingAbove p With quotation dash Superscript left parenthesis 0 right parenthesis Baseline colon equals upper E left parenthesis p left parenthesis omega right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis commap(0) := E
(
p(ω)|At0
)
,
(10.32c) 
the a priori distribution upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis 0 right parenthesisP(0)
p(·) may be replaced by a certain vector 
nu 0 colon equals left parenthesis upper E left parenthesis product Underscript k equals 1 Overscript r Endscripts p Subscript l Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis Subscript left parenthesis l 1 comma ellipsis comma l Sub Subscript r Subscript right parenthesis element of normal upper Lamda Baseline right parenthesisν0 :=
(
E
( r∏
k=1
pl(ω)|At0
)
(l1,...,lr)∈⌃
)
(10.32d) 
of a priori moments of p left parenthesis omega right parenthesisp(ω) with respect to script upper A Subscript t 0At0. 
Here, normal upper Lamda⌃denotes a certain ﬁnite set of multiple indices left parenthesis l 1 comma ellipsis comma l Subscript tau Baseline right parenthesis comma r less than or equals 1(l1, . . . ,lτ),r ≤1. 
Of course, in the time-variant case the functions upper L Superscript upper J Baseline comma phi Superscript upper J Baseline comma f Superscript u Baseline comma f Superscript upper S Baseline comma psiL J, φ J, f u, f S, ψ as described 
in item (B) have to be used. Thus, t 0 comma t Subscript f Baselinet0, t f occur then explicitly in the parameter list 
(10.32a), (10.32b). 
(II) Expected total cost-minimum problem 
Here, the total costs arising from violations of the constraints in the variational 
problem (10.30a)–(10.30f), (10.30f’) are added to the (primary) costs arising 
along the trajectory, to the terminal costs, respectively. Of course, correspond-
ing weight factors may be included in the cost functions (10.29a). Taking expec-
tations with respect to script upper A Subscript t 0At0, in the  time-invariant case the following substitute 
problem is obtained: 
StartLayout 1st Row min integral Subscript s 0 Superscript s Subscript f Baseline upper E left parenthesis upper L Subscript gamma Superscript upper J Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis d s 2nd Row plus upper E left parenthesis phi Subscript gamma Superscript upper J Baseline left parenthesis p comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis EndLayout min
s f
{
s0
E
(
L J
γ
(
p, qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
|At0
)
ds
+E
(
φ J
γ
(
p, qe(s f )
)
|At0
)
(10.33a) 
s.t.

236
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
StartLayout 1st Row 1st Column beta left parenthesis s right parenthesis 2nd Column greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column q Subscript e Baseline left parenthesis s 0 right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript 0 Baseline comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline 4th Row 1st Column Blank 5th Row 1st Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript f Baseline left parenthesis i f phi Subscript gamma Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline comma EndLayoutβ(s) ≥0,
s0 ≤s ≤s f
(10.33b) 
StartLayout 1st Row 1st Column beta left parenthesis s right parenthesis 2nd Column greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column q Subscript e Baseline left parenthesis s 0 right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript 0 Baseline comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline 4th Row 1st Column Blank 5th Row 1st Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript f Baseline left parenthesis i f phi Subscript gamma Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline comma EndLayoutqe(s0) = q0,
q'
e(s0)
√
β(s0) = ˙q0
(10.33c) 
StartLayout 1st Row 1st Column beta left parenthesis s right parenthesis 2nd Column greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column q Subscript e Baseline left parenthesis s 0 right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript 0 Baseline comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline 4th Row 1st Column Blank 5th Row 1st Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript f Baseline left parenthesis i f phi Subscript gamma Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline comma EndLayoutqe(s f ) = q f
(if φ J
γ = 0), β(s f ) = β f ,
(10.33d) 
where upper L Subscript gamma Superscript upper J Baseline comma phi Subscript gamma Superscript upper JL J
γ , φ J
γ are deﬁned by 
StartLayout 1st Row 1st Column upper L Subscript gamma Superscript upper J 2nd Column colon equals upper L Superscript upper J plus nu Superscript u upper T Baseline f Subscript gamma Superscript u plus nu Superscript upper S upper T Baseline f Subscript gamma Superscript s 2nd Row 1st Column Blank 3rd Row 1st Column phi Subscript gamma Superscript upper J 2nd Column colon equals phi Superscript upper J Baseline o r phi Subscript gamma Superscript upper J Baseline colon equals phi Superscript upper J Baseline plus nu Subscript psi Superscript upper T Baseline psi Subscript gamma Baseline comma EndLayoutL J
γ := L J + νuT f u
γ + νST f s
γ
(10.33e) 
StartLayout 1st Row 1st Column upper L Subscript gamma Superscript upper J 2nd Column colon equals upper L Superscript upper J plus nu Superscript u upper T Baseline f Subscript gamma Superscript u plus nu Superscript upper S upper T Baseline f Subscript gamma Superscript s 2nd Row 1st Column Blank 3rd Row 1st Column phi Subscript gamma Superscript upper J 2nd Column colon equals phi Superscript upper J Baseline o r phi Subscript gamma Superscript upper J Baseline colon equals phi Superscript upper J Baseline plus nu Subscript psi Superscript upper T Baseline psi Subscript gamma Baseline comma EndLayoutφ J
γ := φ J
or
φ J
γ := φ J + νT
ψψγ ,
(10.33f) 
and nu Subscript upper I Superscript u Baseline comma nu Subscript upper I upper I Superscript u Baseline comma nu Subscript upper I Superscript upper S Baseline comma nu Subscript upper I upper I Superscript upper S Baseline comma nu Subscript psi Baseline greater than or equals 0νu
I , νu
I I, νS
I , νS
I I, νψ ≥0 are certain nonnegative (vectorial) scale factors 
which may depend on the path parameter ss. 
We observe that also in this case the initial/terminal parameters characterizing the 
second class of substitute problems (10.33a)–(10.33f) are given again by (10.32a), 
(10.32b). 
In the time-varying case the present substitute problems of class II reads 
StartLayout 1st Row 1st Column min 2nd Column integral Subscript s 0 Superscript s Subscript f Baseline upper E left parenthesis upper L Subscript gamma Superscript upper J Baseline left parenthesis s comma t 0 comma s 0 comma beta left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis d s 2nd Row 1st Column Blank 2nd Column plus upper E left parenthesis phi Subscript gamma Superscript upper J Baseline left parenthesis s Subscript f Baseline comma t 0 comma s 0 comma beta left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis EndLayout min
s f
{
s0
E
(
L J
γ
(
s, t0, s0, β(·), pJ, qe(s), q'
e(s, q''
e (s), β(s), β'(s)
)
|At0
)
ds
+ E
(
φ J
γ
(
s f , t0, s0, β(·), pJ, qe(s f )
)
|At0
)
(10.34a) 
s.t. 
StartLayout 1st Row 1st Column beta left parenthesis s right parenthesis 2nd Column greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column q Subscript e Baseline left parenthesis s 0 right parenthesis 2nd Column equals q 0 comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove q With dot Subscript 0 Baseline 4th Row 1st Column Blank 5th Row 1st Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals q Subscript f Baseline left parenthesis i f phi Subscript gamma Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayoutβ(s) ≥0,
s0 ≤s ≤s f
(10.34b) 
StartLayout 1st Row 1st Column beta left parenthesis s right parenthesis 2nd Column greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column q Subscript e Baseline left parenthesis s 0 right parenthesis 2nd Column equals q 0 comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove q With dot Subscript 0 Baseline 4th Row 1st Column Blank 5th Row 1st Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals q Subscript f Baseline left parenthesis i f phi Subscript gamma Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayoutqe(s0) = q0,
q'
e(s0)
√
β(s0) = ˙q0
(10.34c) 
StartLayout 1st Row 1st Column beta left parenthesis s right parenthesis 2nd Column greater than or equals 0 comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column q Subscript e Baseline left parenthesis s 0 right parenthesis 2nd Column equals q 0 comma q prime Subscript e Baseline left parenthesis s 0 right parenthesis StartRoot beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove q With dot Subscript 0 Baseline 4th Row 1st Column Blank 5th Row 1st Column q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals q Subscript f Baseline left parenthesis i f phi Subscript gamma Superscript upper J Baseline equals 0 right parenthesis comma beta left parenthesis s Subscript f Baseline right parenthesis equals beta Subscript f Baseline period EndLayoutqe(s f ) = q f
( if φ J
γ = 0), β(s f ) = β f .
(10.34d) 
Remark 10.10 (Mixtures of (I), (II)) Several mixtures of the classes (I) and (II) of 
substitute problems are possible. 
10.4.1 
Computational Aspects 
The following techniques are available for solving substitutes problems of type (I), 
(II): 
(a) Reduction to a ﬁnite-dimensional parameter optimization problem 
Here, the unknown functions left parenthesis q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis
(
qe(·), β(·)
)
or beta left parenthesis dot right parenthesisβ(·) are approximated by a linear 
combination

10.4 OSTP—Optimal Stochastic Trajectory Planning
237
StartLayout 1st Row 1st Column q Subscript e Baseline left parenthesis s right parenthesis 2nd Column colon equals sigma summation Underscript l equals 1 Overscript l Subscript q Baseline Endscripts ModifyingAbove q With caret Subscript l Baseline upper B Subscript l Superscript q Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column beta left parenthesis s right parenthesis 2nd Column colon equals sigma summation Underscript l equals 1 Overscript l Subscript beta Baseline Endscripts ModifyingAbove beta With caret Subscript l Baseline upper B Subscript l Superscript beta Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline comma EndLayoutqe(s) :=
lq
∑
l=1
ˆql Bq
l (s),
s0 ≤s ≤s f
(10.35a) 
StartLayout 1st Row 1st Column q Subscript e Baseline left parenthesis s right parenthesis 2nd Column colon equals sigma summation Underscript l equals 1 Overscript l Subscript q Baseline Endscripts ModifyingAbove q With caret Subscript l Baseline upper B Subscript l Superscript q Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column beta left parenthesis s right parenthesis 2nd Column colon equals sigma summation Underscript l equals 1 Overscript l Subscript beta Baseline Endscripts ModifyingAbove beta With caret Subscript l Baseline upper B Subscript l Superscript beta Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline comma EndLayoutβ(s) :=
lβ
∑
l=1
ˆβl Bβ
l (s),
s0 ≤s ≤s f ,
(10.35b) 
whereupper B Subscript l Superscript q Baseline equals upper B Subscript l Superscript q Baseline left parenthesis s right parenthesis comma upper B Subscript l Superscript beta Baseline equals upper B Subscript l Superscript beta Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline comma l equals 1 comma ellipsis comma l Subscript q Baseline left parenthesis l Subscript beta Baseline right parenthesisBq
l = Bq
l (s), Bβ
l = Bβ
l (s), s0 ≤s ≤s f ,l = 1, . . . ,lq(lβ), are given basis 
functions, e.g., B-splines, andModifyingAbove q With caret Subscript l Baseline comma ModifyingAbove beta With caret Subscript l Baseline comma l equals 1 comma ellipsis comma l Subscript q Baseline left parenthesis l Subscript beta Baseline right parenthesisˆql, ˆβl,l = 1, . . . ,lq(lβ), are vectorial, scalar coef-
ﬁcients. Putting (10.35a), (10.35b) into (10.30a)–(10.30f), (10.30f’), (10.33a)– 
(10.33f), resp., a semiinﬁnite optimization problem is obtained. If the inequal-
ities involving explicitly the path parameter s comma s 0 less than or equals s less than or equals s Subscript f Baselines, s0 ≤s ≤s f , are required for a 
ﬁnite number upper NN of parameter values s 1 comma s 2 comma ellipsis comma s Subscript upper N Baselines1, s2, . . . , sN only, then this problem is 
reduced ﬁnally to a ﬁnite-dimensional parameter optimization problem which 
can be solved now numerically by standard mathematical programming routines 
or search techniques. Of course, a major problem is the approximative computa-
tion of the conditional expectations which is done essentially by means of Taylor 
expansion with respect to the parameter vector pp at ModifyingAbove p With quotation dash Superscript left parenthesis 0 right parenthesisp(0). Consequently, several 
conditional moments have to be determined (online, for stagej greater than or equals 1 j ≥1). For details, 
see [ 28– 30, 36] and the program package “OSTP” [ 3]. 
(b) Variational techniques 
Using methods from calculus of variations, necessary and—in some cases—also 
sufﬁcient conditions in terms of certain differential equations may be derived 
for the optimal solutions left parenthesis q Subscript e Superscript left parenthesis 0 right parenthesis Baseline comma beta Superscript left parenthesis 0 right parenthesis Baseline right parenthesis comma beta Superscript left parenthesis 0 right parenthesis
(
q(0)
e , β(0))
, β(0), resp., of the variational problems 
(10.30a)–(10.30f), (10.30f’), (10.33a)–(10.33f). For more details, see [ 36]. 
(c) Linearization methods 
Here, we assume that we already have an approximative optimal solution 
left parenthesis ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline
(
qe(s), β(s)
)
, s0 ≤s ≤s f , of the substitute problem (10.30a)–(10.30f), 
(10.30f’) or (10.33a)–(10.33f) under consideration. For example, an approxi-
mative optimal solutionleft parenthesis ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis dot right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis dot right parenthesis right parenthesis
(
qe(·), β(·)
)
can be obtained by starting from the deter-
ministic substitute problem obtained by replacing the random parameter vector 
p left parenthesis omega right parenthesisp(ω) just by its conditional mean ModifyingAbove p With quotation dash Superscript left parenthesis 0 right parenthesis Baseline colon equals upper E left parenthesis p left parenthesis omega right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesisp(0) := E
(
p(ω)|At0
)
. 
Given an approximate optimal solution left parenthesis ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis dot right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis dot right parenthesis right parenthesis
(
qe(·), β(·)
)
of substitute problem (I) 
or (II), the unknown optimal solution left parenthesis q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis 0 right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis
(
q(0)
e (·), β(0)(·)
)
to be determined is rep-
resented by 
StartLayout 1st Row 1st Column q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis plus Delta q Subscript e Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column beta Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove beta With quotation dash left parenthesis s right parenthesis plus Delta beta left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline comma EndLayoutq(0)
e (s) := qe(s) + Δqe(s), s0 ≤s ≤s f
(10.36a) 
StartLayout 1st Row 1st Column q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis plus Delta q Subscript e Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column beta Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove beta With quotation dash left parenthesis s right parenthesis plus Delta beta left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline comma EndLayoutβ(0)(s) := β(s) + Δβ(s), s0 ≤s ≤s f ,
(10.36b)

238
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
where left parenthesis Delta q Subscript e Baseline left parenthesis s right parenthesis comma Delta beta left parenthesis s right parenthesis right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline
(
Δqe(s), Δβ(s)
)
, s0 ≤s ≤s f , are certain (small) correction terms. In 
the following we assume that the changes Delta q Subscript e Baseline left parenthesis s right parenthesis comma Delta beta left parenthesis s right parenthesisΔqe(s), Δβ(s) and their ﬁrst and 
resp. second order derivatives Delta q prime Subscript e Baseline left parenthesis s right parenthesis comma Delta q double prime Subscript e Baseline left parenthesis s right parenthesis comma Delta beta prime left parenthesis s right parenthesisΔq'
e(s), Δq''
e (s), Δβ'(s) are small. 
We observe that the function arising in the constraints and in the objective of 
(10.30a)–(10.30f), (10.30f’), (10.33a)–(10.33f), resp., are of the following type: 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove g With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column colon equals upper E left parenthesis g left parenthesis p left parenthesis omega right parenthesis comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove phi With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis colon equals upper E left parenthesis phi left parenthesis p left parenthesis omega right parenthesis comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis EndLayoutg(0)(
qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
:= E
(
g
(
p(ω), qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
|At0
)
,
(10.37a) 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove g With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column colon equals upper E left parenthesis g left parenthesis p left parenthesis omega right parenthesis comma q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove phi With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis colon equals upper E left parenthesis phi left parenthesis p left parenthesis omega right parenthesis comma q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis EndLayoutφ
(0)(
qe(s f )
)
:= E
(
φ
(
p(ω), qe(s f )
)
|At0
)
(10.37b) 
and 
ModifyingAbove upper F With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis colon equals integral Subscript s 0 Superscript s Subscript f Baseline ModifyingAbove g With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis d sF
(0)(
qe(·), β(·)
)
:=
s f
{
s0
g(0)(
qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
ds
(10.37c) 
with certain functionsg comma phig, φ. Moreover, if for simpliﬁcation the pointwise (cost-) 
constraints (10.30b), (10.30c) are averaged with respect to the path parameter 
s comma s 0 less than or equals s Subscript f Baselines, s0 ≤s f , then also constraint functions of the type (10.37c) arise, see (10.30b’), 
(10.30c’). 
By means of ﬁrst-order Taylor expansion of g comma phig, φ with respect to left parenthesis Delta q Subscript e Baseline left parenthesis s right parenthesis comma Delta q prime Subscript e Baseline left parenthesis s right parenthesis comma Delta q double prime Subscript e Baseline left parenthesis s right parenthesis comma Delta beta left parenthesis s right parenthesis comma Delta beta prime left parenthesis s right parenthesis right parenthesis(Δqe(s),
Δq'
e(s), Δq''
e (s), Δβ(s), Δβ'(s)
)
atleft parenthesis ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis
(
qe(s), q'
e(s), q''
e(s), β(s), β
'(s)
)
,s 0 less than or equals s less than or equals s Subscript fs0 ≤s ≤
s f , we ﬁnd then the following approximations 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove g With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis q Subscript e Baseline left parenthesis s right parenthesis comma q prime Subscript e Baseline left parenthesis s right parenthesis comma q double prime Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma beta prime left parenthesis s right parenthesis right parenthesis almost equals ModifyingAbove g With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column plus ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis Superscript upper T Baseline Delta q Subscript e Baseline left parenthesis s right parenthesis plus ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis Superscript upper T Baseline Delta q prime Subscript e Baseline left parenthesis s right parenthesis plus ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis Superscript upper T Baseline Delta q double prime Subscript e Baseline left parenthesis s right parenthesis 3rd Row 1st Column Blank 2nd Column plus ModifyingAbove upper D With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis Delta beta left parenthesis s right parenthesis plus ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis Delta beta prime left parenthesis s right parenthesis EndLayoutg(0)(
qe(s), q'
e(s), q''
e (s), β(s), β'(s)
)
≈g(0)(
qe(s), q'
e(s), q''
e(s), β(s), β
'(s)
)
+ A
(0)
g,qe,β(s)T Δqe(s) + B
(0)
g,qe,β(s)T Δq'
e(s) + C
(0)
g,qe,β(s)T Δq''
e (s)
+ D
(0)
g,qe,β(s)Δβ(s) + E
(0)
g,qe,β(s)Δβ'(s)
(10.38a) 
and 
ModifyingAbove phi With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis almost equals ModifyingAbove phi With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis plus ModifyingAbove a With quotation dash Subscript phi comma ModifyingAbove q With quotation dash Sub Subscript e Subscript Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis Superscript upper T Baseline Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis commaφ
(0)(
qe(s f )
)
≈
φ
(0)(
qe(s f )
)
+
a(0)
φ,qe(s f )T Δqe(s f ),
(10.38b) 
where the expected sensitivities of g comma phig, φ with respect to q comma q prime comma q double prime comma betaq, q', q'', β and beta primeβ' are 
given by

10.4 OSTP—Optimal Stochastic Trajectory Planning
239
StartLayout 1st Row 1st Column ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript double prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove upper D With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 8th Row 1st Column Blank 9th Row 1st Column ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta Superscript prime Baseline EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 10th Row 1st Column Blank 11th Row 1st Column ModifyingAbove a With quotation dash Subscript phi comma ModifyingAbove q With quotation dash Sub Subscript e Subscript Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline phi left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutA
(0)
g,qe,β(s) := E
(
∇qg
(
p(ω), qe(s), q'
e(s), q''
e(s), β(s), β
'(s)
)
|At0
)
(10.38c) 
StartLayout 1st Row 1st Column ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript double prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove upper D With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 8th Row 1st Column Blank 9th Row 1st Column ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta Superscript prime Baseline EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 10th Row 1st Column Blank 11th Row 1st Column ModifyingAbove a With quotation dash Subscript phi comma ModifyingAbove q With quotation dash Sub Subscript e Subscript Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline phi left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutB
(0)
g,qe,β(s) := E
(
∇q'g
(
p(ω), qe(s), q'
e(s), q''
e(s), β(s), β
'(s)
)
|At0
)
(10.38d) 
StartLayout 1st Row 1st Column ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript double prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove upper D With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 8th Row 1st Column Blank 9th Row 1st Column ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta Superscript prime Baseline EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 10th Row 1st Column Blank 11th Row 1st Column ModifyingAbove a With quotation dash Subscript phi comma ModifyingAbove q With quotation dash Sub Subscript e Subscript Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline phi left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutC
(0)
g,qe,β(s) := E
(
∇q''g
(
p(ω), qe(s), q'
e(s), q''
e(s), β(s), β
'(s)
)
|At0
)
(10.38e) 
StartLayout 1st Row 1st Column ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript double prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove upper D With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 8th Row 1st Column Blank 9th Row 1st Column ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta Superscript prime Baseline EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 10th Row 1st Column Blank 11th Row 1st Column ModifyingAbove a With quotation dash Subscript phi comma ModifyingAbove q With quotation dash Sub Subscript e Subscript Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline phi left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutD
(0)
g,qe,β(s) := E
(∂g
∂β
(
p(ω), qe(s), q'
e(s), q''
e(s), β(s), β
'(s)
)
|At0
)
(10.38f) 
StartLayout 1st Row 1st Column ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript double prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove upper D With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 8th Row 1st Column Blank 9th Row 1st Column ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta Superscript prime Baseline EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 10th Row 1st Column Blank 11th Row 1st Column ModifyingAbove a With quotation dash Subscript phi comma ModifyingAbove q With quotation dash Sub Subscript e Subscript Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline phi left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayoutE
(0)
g,qe,β(s) := E
( ∂g
∂β'
(
p(ω), qe(s), q'
e(s), q''
e(s), β(s), β
'(s)
)
|At0
)
(10.38g) 
StartLayout 1st Row 1st Column ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Sub Superscript double prime Subscript Baseline g left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column ModifyingAbove upper D With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 8th Row 1st Column Blank 9th Row 1st Column ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals upper E left parenthesis StartFraction partial differential g Over partial differential beta Superscript prime Baseline EndFraction left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis 10th Row 1st Column Blank 11th Row 1st Column ModifyingAbove a With quotation dash Subscript phi comma ModifyingAbove q With quotation dash Sub Subscript e Subscript Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column colon equals upper E left parenthesis nabla Subscript q Baseline phi left parenthesis p left parenthesis omega right parenthesis comma ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline period EndLayouta(0)
φ,qe(s f ) := E
(
∇qφ
(
p(ω), qe(s)
)
|At0
)
, s0 ≤s ≤s f .
(10.38h) 
As mentioned before, cf. (10.32c), (10.32d), the expected values ModifyingAbove g With quotation dash Superscript left parenthesis 0 right parenthesis Baseline comma ModifyingAbove phi With quotation dash Superscript left parenthesis 0 right parenthesisg(0), φ
(0) in 
(10.38a), (10.38b) and the expected sensitivities deﬁned by (10.38c)–(10.38h) 
can be computed approximatively by means of Taylor expansion with respect to 
pp at ModifyingAbove p With quotation dash Superscript left parenthesis 0 right parenthesis Baseline equals upper E left parenthesis p left parenthesis omega right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesisp(0) = E
(
p(ω)|At0
)
. 
According to (10.38a), and using partial integration, for the total costsModifyingAbove upper F With quotation dash Superscript left parenthesis 0 right parenthesisF
(0) along 
the path we get the following approximation: 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove upper F With quotation dash Superscript left parenthesis 0 right parenthesis Baseline almost equals integral Subscript s 0 Superscript s Subscript f Baseline Baseline ModifyingAbove g With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove q With quotation dash double prime Subscript e Baseline left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash left parenthesis s right parenthesis comma ModifyingAbove beta With quotation dash prime left parenthesis s right parenthesis right parenthesis d s 2nd Row 1st Column plus 2nd Column integral Subscript s 0 Superscript s Subscript f Baseline Baseline ModifyingAbove upper G With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis Superscript upper T Baseline Delta q Subscript e Baseline left parenthesis s right parenthesis d s plus integral Subscript s 0 Superscript s Subscript f Baseline Baseline ModifyingAbove upper H With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis Delta beta left parenthesis s right parenthesis d s 3rd Row 1st Column plus 2nd Column left parenthesis ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis minus ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Subscript f Baseline right parenthesis right parenthesis Superscript upper T Baseline Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 4th Row 1st Column plus 2nd Column left parenthesis minus ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s 0 right parenthesis plus ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Super Superscript prime Superscript Baseline left parenthesis s 0 right parenthesis right parenthesis Superscript upper T Baseline Delta q Subscript e Baseline left parenthesis s 0 right parenthesis 5th Row 1st Column plus 2nd Column ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis Superscript upper T Baseline Delta q prime Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis minus ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s 0 right parenthesis Superscript upper T Baseline Delta q prime Subscript e Baseline left parenthesis s 0 right parenthesis 6th Row 1st Column plus 2nd Column ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis Delta beta left parenthesis s Subscript f Baseline right parenthesis minus ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s 0 right parenthesis Delta beta left parenthesis s 0 right parenthesis comma EndLayoutF
(0) ≈
s f
{
s0
g(0)(
qe(s), q'
e(s), q''
e(s), β(s), β
'(s)
)
ds
(10.39a) 
+ 
s f
{
s0 
G 
(0) 
g,qe,β (s)T Δqe(s) ds + 
s f
{
s0 
H 
(0) 
g,qe,β (s)Δβ(s) ds 
+
(
B 
(0) 
g,qe,β (s f ) − C 
(0)'
g,qe,β (s f )
)T
Δqe(s f ) 
+
(
−B 
(0) 
g,qe,β (s0) + C 
(0)'
g,qe,β (s0)
)T
Δqe(s0) 
+C 
(0) 
g,qe,β (s f )T Δq'
e(s f ) − C 
(0) 
g,qe,β (s0)T Δq'
e(s0) 
+E 
(0) 
g,qe,β (s f )Δβ(s f ) − E 
(0) 
g,qe,β (s0)Δβ(s0), 
where

240
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
StartLayout 1st Row 1st Column ModifyingAbove upper G With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis minus ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis prime Baseline left parenthesis s right parenthesis plus ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis double prime Baseline left parenthesis s right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper H With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove upper D With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis minus ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Super Superscript prime Superscript Baseline left parenthesis s right parenthesis period EndLayoutG
(0)
g,qe,β(s) := A
(0)
g,qe,β(s) −B
(0)'
g,qe,β(s) + C
(0)''
g,qe,β(s)
(10.39b) 
StartLayout 1st Row 1st Column ModifyingAbove upper G With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis minus ModifyingAbove upper B With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis prime Baseline left parenthesis s right parenthesis plus ModifyingAbove upper C With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis double prime Baseline left parenthesis s right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper H With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove upper D With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis minus ModifyingAbove upper E With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Super Superscript prime Superscript Baseline left parenthesis s right parenthesis period EndLayoutH
(0)
g,qe,β(s) := D
(0)
g,qe,β(s) −E
(0)'
g,qe,β(s).
(10.39c) 
Conditions (10.30e)–(10.30f), (10.30f’), (10.33c), (10.33d), resp., yield the fol-
lowing initial and terminal conditions for the changes Delta q Subscript e Baseline left parenthesis s right parenthesis comma Delta beta left parenthesis s right parenthesis colonΔqe(s), Δβ(s) :
StartLayout 1st Row 1st Column Delta beta left parenthesis s 0 right parenthesis 2nd Column equals 0 comma Delta q Subscript e Baseline left parenthesis s 0 right parenthesis equals ModifyingAbove q With quotation dash Subscript 0 Baseline minus ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s 0 right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Delta beta left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals 0 comma Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Baseline minus ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis comma i f phi Superscript upper J Baseline equals 0 period EndLayoutΔβ(s0) = 0, Δqe(s0) = q0 −qe(s0)
(10.39d) 
StartLayout 1st Row 1st Column Delta beta left parenthesis s 0 right parenthesis 2nd Column equals 0 comma Delta q Subscript e Baseline left parenthesis s 0 right parenthesis equals ModifyingAbove q With quotation dash Subscript 0 Baseline minus ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s 0 right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Delta beta left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals 0 comma Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Baseline minus ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis comma i f phi Superscript upper J Baseline equals 0 period EndLayoutΔβ(s f ) = 0, Δqe(s f ) = q f −qe(s f ), if φ J = 0.
(10.39e) 
Moreover, if ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline not equals 0˙q0 /= 0 (as in later correction stages, cf. Sect. 10.5), according to 
(10.30e) or (10.33c), conditionDelta beta left parenthesis s 0 right parenthesis equals 0Δβ(s0) = 0 must be replaced by the more general 
one 
left parenthesis ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s 0 right parenthesis plus Delta q prime Subscript e Baseline left parenthesis s 0 right parenthesis right parenthesis StartRoot ModifyingAbove beta With quotation dash left parenthesis s 0 right parenthesis plus Delta beta left parenthesis s 0 right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0
(
q'
e(s0) + Δq'
e(s0)
)/
β(s0) + Δβ(s0) = ˙q0
(10.39f) 
which can be approximated by 
StartRoot ModifyingAbove beta With quotation dash left parenthesis s 0 right parenthesis EndRoot Delta q prime Subscript e Baseline left parenthesis s 0 right parenthesis plus one half StartFraction Delta beta left parenthesis s 0 right parenthesis Over StartRoot ModifyingAbove beta With quotation dash left parenthesis s 0 right parenthesis EndRoot EndFraction ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s 0 right parenthesis almost equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline minus StartRoot ModifyingAbove beta With quotation dash left parenthesis s 0 right parenthesis EndRoot ModifyingAbove q With quotation dash prime Subscript e Baseline left parenthesis s 0 right parenthesis period
/
β(s0)Δq'
e(s0) + 1
2
Δβ(s0)
√
β(s0)
q'
e(s0) ≈˙q0 −
/
β(s0)q'
e(s0).
(10.39f’) 
Applying the above-described linearization (10.38a)–(10.38h) to (10.30a)– 
(10.30e) or to the constraints (10.30b), (10.30c) only, problem (10.30a)–(10.30f), 
(10.30f’) is approximated by a linear variational problem or a variational prob-
lem having linear constraints for the changes Delta q Subscript e Baseline left parenthesis dot right parenthesis comma Delta beta left parenthesis dot right parenthesisΔqe(·), Δβ(·). On the other hand, 
using linearizations of the type (10.38a)–(10.38h) in the variational problem 
(10.33a)–(10.33f), in the average constraints (10.30b’), (10.30c’), resp., an opti-
mization problem forDelta q Subscript e Baseline left parenthesis dot right parenthesis comma Delta beta left parenthesis dot right parenthesisΔqe(·), Δβ(·) is obtained which is linear, which has linear 
constraints, respectively. 
(d) Separated computation of q Subscript e Baseline left parenthesis dot right parenthesisqe(·) and beta left parenthesis dot right parenthesisβ(·)
In order to reduce the computational complexity, the given trajectory planning 
problem is often split up [ 16] into the following two separated problems forq Subscript e Baseline left parenthesis dot right parenthesisqe(·)
and beta left parenthesis dot right parenthesisβ(·): 
(i) Optimal path planning: ﬁnd the shortest collision-free geometric pathq Subscript e Superscript left parenthesis 0 right parenthesis Baseline equals q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineq(0)
e
=
q(0)
e (s), s0 ≤s ≤s f , in conﬁguration space from a given initial point q 0q0 to 
a prescribed terminal point q Subscript fq f . Alternatively, with a given initial velocity 
proﬁle beta left parenthesis dot right parenthesis equals ModifyingAbove beta With quotation dash left parenthesis dot right parenthesisβ(·) = β(·), see  (10.36b), the substitute problem (10.30a)–(10.30f), 
(10.30f’), (10.33a)–(10.33f), resp., may be solved for an approximate geo-
metric path q Subscript e Baseline left parenthesis dot right parenthesis equals q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis dot right parenthesisqe(·) = q(0)
e (·) only. 
(ii) Velocity planning: Determine then an optimal velocity proﬁlebeta Superscript left parenthesis 0 right parenthesis Baseline equals beta Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineβ(0) = β(0)(s),
s0 ≤s ≤s f , along the predetermined path q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis dot right parenthesisq(0)
e (·). 
Having a certain collectionStartSet q Subscript e comma lamda Baseline left parenthesis dot right parenthesis colon lamda element of normal upper Lamda EndSet
{
qe,λ(·) : λ ∈⌃
}
of admissible paths in conﬁguration 
space, a variant of the above procedure (i), (ii) is to determine—in an inner

10.4 OSTP—Optimal Stochastic Trajectory Planning
241
optimization loop—the optimal velocity proﬁle beta Subscript lamda Baseline left parenthesis dot right parenthesisβλ(·) with respect to a given 
pathq Subscript e comma lamda Baseline left parenthesis dot right parenthesisqe,λ(·), and to optimize then the parameterlamdaλ in an outer optimization loop, 
see [ 19]. 
10.4.2 
Optimal Reference Trajectory, Optimal Feedforward 
Control 
Having, at least approximatively, the optimal geometric path q Subscript e Superscript left parenthesis 0 right parenthesis Baseline equals q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesisq(0)
e
= q(0)
e (s) and 
the optimal velocity proﬁle beta Superscript left parenthesis 0 right parenthesis Baseline equals beta Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineβ(0) = β(0)(s), s0 ≤s ≤s f , i.e., the optimal solution 
left parenthesis q Subscript e Superscript left parenthesis 0 right parenthesis Baseline comma beta Superscript left parenthesis 0 right parenthesis Baseline right parenthesis equals left parenthesis q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis comma beta Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baseline
(
q(0)
e , β(0))
=
(
q(0)
e (s), β(0)(s)
)
, s0 ≤s ≤s f , of one of the stochastic path planning 
problems (10.30a)–(10.30f), (10.30f’), (10.33a)–(10.33f), (10.34a)–(10.34d), resp., 
then, according to (10.13a), (10.13b), (10.14), the optimal reference trajectory in 
conﬁguration space q Superscript left parenthesis 0 right parenthesis Baseline equals q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t 0q(0) = q(0)(t), t ≥t0, is deﬁned by 
q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis colon equals q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 periodq(0)(t) := q(0)
e
(
s(0)(t)
)
,
t ≥t0.
(10.40a) 
Here, the optimalleft parenthesis t left right arrow s right parenthesis(t ↔s)-transformations Superscript left parenthesis 0 right parenthesis Baseline equals s Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t 0s(0) = s(0)(t), t ≥t0, is determined by the 
initial value problem 
ModifyingAbove s With dot left parenthesis t right parenthesis equals StartRoot beta Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis EndRoot comma t greater than or equals t 0 comma s left parenthesis t 0 right parenthesis colon equals s 0 period˙s(t) =
√
β(0)(s),
t ≥t0, s(t0) := s0.
(10.40b) 
By means of the kinematic equation (10.5), the corresponding reference trajectory 
x Superscript left parenthesis 0 right parenthesis Baseline equals x Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t 0x(0) = x(0)(t), t ≥t0, in workspace may be deﬁned by 
x Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis colon equals upper E left parenthesis upper T left parenthesis p Subscript upper K Baseline left parenthesis omega right parenthesis comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis equals upper T left parenthesis ModifyingAbove p With quotation dash Subscript upper K Superscript left parenthesis 0 right parenthesis Baseline comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 commax(0)(t) := E
(
T
(
pK(ω), q(0)(t)
)
|At0
)
= T
(
p(0)
K , q(0)(t)
)
,
t ≥t0,
(10.40c) 
where 
ModifyingAbove p With quotation dash Subscript upper K Superscript left parenthesis 0 right parenthesis Baseline colon equals upper E left parenthesis p Subscript upper K Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis periodp(0)
K := E
(
pK(ω)|At0
)
.
(10.40d) 
Based on the inverse dynamics approach, see  Remark  10.1, the optimal reference 
trajectoryq Superscript left parenthesis 0 right parenthesis Baseline equals q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t 0q(0) = q(0)(t), t ≥t0, is inserted now into the left-hand side of the dynamic 
equation (10.4a). This yields next to the random optimal control function 
StartLayout 1st Row 1st Column v Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t comma p Subscript upper D Baseline left parenthesis omega right parenthesis right parenthesis 2nd Column colon equals upper M left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis q With two dots Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus h left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 period EndLayoutv(0)(
t, pD(ω)
)
:= M
(
pD(ω), q(0)(t)
)
¨q(0)(t)
+ h
(
pD(ω), q(0)(t), ˙q(0)(t)
)
,
t ≥t0.
(10.41) 
Starting at the initial state left parenthesis ModifyingAbove q With quotation dash Subscript 0 Baseline comma ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript 0 Baseline right parenthesis colon equals left parenthesis q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t 0 right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t 0 right parenthesis right parenthesis(q0, ˙q0) :=
(
q(0)(t0), ˙q(0)(t0)
)
, this control obviously 
keeps the robot exactly on the optimal trajectoryq Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t 0q(0)(t), t ≥t0, provided thatp Subscript upper D Baseline left parenthesis omega right parenthesispD(ω)
is the true vector of dynamic parameters.

242
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
An optimal feedforward control law u Superscript left parenthesis 0 right parenthesis Baseline equals u Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t 0u(0) = u(0)(t), t ≥t0, related to the optimal 
reference trajectoryq Superscript left parenthesis 0 right parenthesis Baseline equals q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t 0q(0) = q(0)(t), t ≥t0, can be obtained then by applying a certain 
averaging or estimating operator normal upper Psi equals normal upper Psi left parenthesis dot vertical bar script upper A Subscript t 0 Baseline right parenthesisψ = ψ
(
·|At0
)
to (10.41), hence, 
u Superscript left parenthesis 0 right parenthesis Baseline colon equals normal upper Psi left parenthesis v Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t comma p Subscript upper D Baseline left parenthesis dot right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma t greater than or equals t 0 periodu(0) := ψ
(
v(0)(
t, pD(·)
)
|At0
)
, t ≥t0.
(10.42) 
If normal upper Psi left parenthesis dot vertical bar script upper A Subscript t 0 Baseline right parenthesisψ(·|At0) is the conditional expectation, then we ﬁnd the optimal feedforward 
control law 
StartLayout 1st Row 1st Column u Superscript left parenthesis 0 right parenthesis 2nd Column colon equals upper E left parenthesis upper M left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis q With two dots Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis plus h left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis vertical bar script upper A Subscript t 0 Baseline right parenthesis comma 2nd Row 1st Column Blank 2nd Column equals upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis 0 right parenthesis Baseline comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis q With two dots Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis plus h left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis 0 right parenthesis Baseline comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 comma EndLayoutu(0) := E
(
M
(
pD(ω), q(0)(t)
)
¨q(0)(t) + h
(
pD(ω), q(0)(t), ˙q(0)(t)
)
|At0
)
,
= M
(
p(0)
D , q(0)(t)
)
¨q(0)(t) + h
(
p(0)
D , q(0)(t), ˙q(0)(t)
)
,
t ≥t0,
(10.43a) 
where ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis 0 right parenthesisp(0)
D denotes the conditional mean of p Subscript upper D Baseline left parenthesis omega right parenthesispD(ω) deﬁned by (10.32c), and the 
second equation in formula (10.43a) holds since the dynamic equation of a robot 
depends linearly on the parameter vector p Subscript upper DpD, see  Remark  10.2. 
Inserting into the dynamic equation (10.4a), instead of the conditional mean ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis 0 right parenthesisp(0)
D
of p Subscript upper D Baseline left parenthesis omega right parenthesispD(ω) given script upper A Subscript t 0At0, another estimator p Subscript upper D Superscript left parenthesis 0 right parenthesisp(0)
D of the true parameter vector p Subscript upper DpD or a 
certain realization p Subscript upper D Superscript left parenthesis 0 right parenthesisp(0)
D of p Subscript upper D Baseline left parenthesis omega right parenthesispD(ω) at the time instant t 0t0, then we obtain the optimal 
feedforward control law 
u Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis colon equals upper M left parenthesis p Subscript upper D Superscript left parenthesis 0 right parenthesis Baseline comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis q With two dots Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis plus h left parenthesis p Subscript upper D Superscript left parenthesis 0 right parenthesis Baseline comma q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0 periodu(0)(t) := M
(
p(0)
D , q(0)(t)
)
¨q(0)(t) + h
(
p(0)
D , q(0)(t), ˙q(0)(t)
)
,
t ≥t0. (10.43b) 
10.5 AOSTP—Adaptive Optimal Stochastic Trajectory 
Planning 
As already mentioned in the introduction, by means of direct or indirect measure-
ments, observations of the robot and its environment, as, e.g., by observations of the 
state left parenthesis x comma ModifyingAbove x With dot right parenthesis comma left parenthesis q comma ModifyingAbove q With dot right parenthesis(x, ˙x), (q, ˙q), resp., of the mechanical system in work or conﬁguration space, 
further information about the unknown parameter vector p equals p left parenthesis omega right parenthesisp = p(ω) is available at 
each moment t greater than t 0t > t0. Let denote, cf. [ 5], 
script upper A Subscript t Baseline left parenthesis subset of script upper A right parenthesis comma t greater than or equals t 0 commaAt(⊂A),
t ≥t0,
(10.44a) 
the sigmaσ-algebra of all information about the random parameter vector p equals p left parenthesis omega right parenthesisp = p(ω) up 
to time tt. Hence, left parenthesis script upper A Subscript t Baseline right parenthesis(At) is an increasing family of sigmaσ-algebras. Note that the ﬂow of 
information in this control process can be described also by means of the stochastic 
process 
p Subscript t Baseline left parenthesis omega right parenthesis colon equals upper E left parenthesis p left parenthesis omega right parenthesis vertical bar script upper A Subscript t Baseline right parenthesis comma t greater than or equals t 0 commapt(ω) := E
(
p(ω)|At
)
,
t ≥t0,
(10.44b) 
see [ 5].

10.5 AOSTP—Adaptive Optimal Stochastic Trajectory Planning
243
By parameter identiﬁcation [ 18, 43] or robot calibration techniques [ 6, 44] we  
may then determine the conditional distribution 
upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis t right parenthesis Baseline equals upper P Subscript p left parenthesis dot right parenthesis vertical bar script upper A Sub Subscript t SubscriptP(t)
p(·) = Pp(·)|At
(10.44c) 
ofp left parenthesis omega right parenthesisp(ω)givenscript upper A Subscript tAt. Alternatively, we may determine the vector of conditional moments 
nu Superscript left parenthesis t right parenthesis Baseline colon equals left parenthesis upper E left parenthesis product Underscript k equals 1 Overscript r Endscripts p Subscript l Sub Subscript k Subscript Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t Baseline right parenthesis right parenthesis Subscript left parenthesis l 1 comma ellipsis comma l Sub Subscript r Subscript right parenthesis element of normal upper Lamdaν(t) :=
(
E
( r∏
k=1
plk(ω)|At
))
(l1,...,lr)∈⌃
(10.44d) 
arising in the approximate computation of conditional expectations in (OSTP) with 
respect to script upper A Subscript tAt, cf.  (10.32c), (10.32d). 
The increase of information about the unknown parameter vectorp left parenthesis omega right parenthesisp(ω) from one 
momenttt to the nextt plus d tt + dt may be rather low, and the determination ofupper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis t right parenthesisP(t)
p(·) ornu Superscript left parenthesis t right parenthesisν(t)
at each time point tt may be very expensive, though identiﬁcation methods in real-
time exist [ 43]. Hence, as already mentioned brieﬂy in Sect. 10.1, the conditional 
distributionupper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis t right parenthesisP(t)
p(·) or the vector of conditional moments nu Superscript left parenthesis t right parenthesisν(t) is determined/updated at 
discrete moments left parenthesis t Subscript j Baseline right parenthesis(t j): 
t 0 less than t 1 less than t 2 less than midline horizontal ellipsis less than t Subscript j Baseline less than t Subscript j plus 1 Baseline less than ellipsis periodt0 < t1 < t2 < · · · < t j < t j+1 < . . . .
(10.45a) 
The optimal functions q Subscript e Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis comma beta Superscript left parenthesis 0 right parenthesis Baseline left parenthesis s right parenthesis comma s 0 less than or equals s less than or equals s Subscript f Baselineq(0)
e (s), β(0)(s), s0 ≤s ≤s f , based on the a priori infor-
mation script upper A Subscript t 0At0, loose in course of time more or less their qualiﬁcation to provide a 
satisfactory pair of guiding functions left parenthesis q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma u Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0
(
q(0)(t), u(0)(t)
)
, t ≥t0. 
However, having at the main correction time pointst Subscript j Baseline comma j equals 1 comma 2 comma ellipsist j, j = 1, 2, . . . , the updated 
information sigmaσ-algebras script upper A Subscript t Sub Subscript jAt j and then the a posteriori probability distributions upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis t Super Subscript j Superscript right parenthesisP
(t j)
p(·)
or the updated conditional moments nu Superscript left parenthesis t Super Subscript j Superscript right parenthesisν(t j) of p left parenthesis omega right parenthesis comma j equals 1 comma 2 comma ellipsis commap(ω), j = 1, 2, . . . , the pair of guid-
ing functions left parenthesis q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma u Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t 0
(
q(0)(t), u(0)(t)
)
, t ≥t0, is replaced by a sequence of renewed pairs 
left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma j equals 1 comma 2 comma ellipsis comma
(
q( j)(t), u( j)(t)
)
, t ≥t j, j = 1, 2, . . . , of guiding functions determined by replan-
ning, i.e., by repeated (OSTP) for the remaining time intervalsleft bracket t Subscript j Baseline comma t Subscript f Superscript left parenthesis j right parenthesis Baseline right bracket[t j, t( j)
f ] and by using 
the new information given by script upper A Subscript t Sub Subscript jAt j. Since replanning at a later main correction time 
point t Subscript j Baseline comma j greater than or equals 1t j, j ≥1, hence on-line, may be very time consuming, in order to maintain 
the real-time capability of the method, we may start the replanning procedure for 
an update of the guiding functions at time t Subscript jt j already at some earlier time t overTilde Subscript j˜t j with 
t Subscript j minus 1 Baseline less than t overTilde Subscript j Baseline less than t Subscript j Baseline comma j greater than or equals 1t j−1 < ˜t j < t j, j ≥1. Of course, in this case 
script upper A Subscript t Sub Subscript j Baseline colon equals script upper A Subscript t overTilde Sub Subscript jAt j := A˜t j
(10.45b) 
is deﬁned to contain only the information about the control process up to time t overTilde Subscript j˜t j in 
which replanning, cf. Fig. 10.1, for time t Subscript jt j starts.

244
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
Fig. 10.1 Start of replanning 
The resulting substitute problem at a stagej greater than or equals 1 j ≥1 follows from the corresponding 
substitute problem for the previous stagej minus 1 j −1 just by updatingzeta Subscript j minus 1 Baseline right arrow zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j minus 1 right parenthesis Baseline right arrow zeta Subscript f Superscript left parenthesis j right parenthesisζ j−1 →ζ j, ζ ( j−1)
f
→
ζ ( j)
f , the initial and terminal parameters, see (10.32a), (10.32b). The renewed 
i n i t i a l p a r a m e t e r s zeta Subscript j Baseline colon t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline comma upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis j right parenthesis Baseline o r nu Subscript j Baselineinitial parameters ζ j : t j, s j, q j, ˙q j, P( j)
p(·) or ν j
(10.46a) 
for the j j-th stage, j greater than or equals 1 j ≥1, are determined recursively as follows: 
StartLayout 1st Row 1st Column s Subscript j 2nd Column colon equals s Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis left parenthesis 1 minus 1 minus t r a n s f o r m a t i o n s equals s left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With quotation dash Subscript j 2nd Column colon equals ModifyingAbove q With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals q Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove q With quotation dash Subscript j Baseline colon equals upper E left parenthesis q left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals ModifyingAbove q With dot Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline colon equals upper E left parenthesis ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column left parenthesis o b s e r v a t i o n o r e s t i m a t e o f q left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis right parenthesis 8th Row 1st Column upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis j right parenthesis 2nd Column colon equals upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline equals upper P Subscript p left parenthesis dot right parenthesis vertical bar script upper A Sub Subscript t Sub Sub Subscript j Sub Subscript Subscript Baseline 9th Row 1st Column Blank 10th Row 1st Column nu Subscript j 2nd Column colon equals nu Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline period EndLayouts j := s( j−1)(t j) (1 −1 −transformation s = s(t))
(10.46b) 
StartLayout 1st Row 1st Column s Subscript j 2nd Column colon equals s Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis left parenthesis 1 minus 1 minus t r a n s f o r m a t i o n s equals s left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With quotation dash Subscript j 2nd Column colon equals ModifyingAbove q With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals q Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove q With quotation dash Subscript j Baseline colon equals upper E left parenthesis q left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals ModifyingAbove q With dot Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline colon equals upper E left parenthesis ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column left parenthesis o b s e r v a t i o n o r e s t i m a t e o f q left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis right parenthesis 8th Row 1st Column upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis j right parenthesis 2nd Column colon equals upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline equals upper P Subscript p left parenthesis dot right parenthesis vertical bar script upper A Sub Subscript t Sub Sub Subscript j Sub Subscript Subscript Baseline 9th Row 1st Column Blank 10th Row 1st Column nu Subscript j 2nd Column colon equals nu Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline period EndLayoutq j := ˆq(t j), q j := q( j−1)(t j) or q j := E
(
q(t j)|At j
)
(10.46c) 
StartLayout 1st Row 1st Column s Subscript j 2nd Column colon equals s Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis left parenthesis 1 minus 1 minus t r a n s f o r m a t i o n s equals s left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With quotation dash Subscript j 2nd Column colon equals ModifyingAbove q With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals q Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove q With quotation dash Subscript j Baseline colon equals upper E left parenthesis q left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals ModifyingAbove q With dot Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline colon equals upper E left parenthesis ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column left parenthesis o b s e r v a t i o n o r e s t i m a t e o f q left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis right parenthesis 8th Row 1st Column upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis j right parenthesis 2nd Column colon equals upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline equals upper P Subscript p left parenthesis dot right parenthesis vertical bar script upper A Sub Subscript t Sub Sub Subscript j Sub Subscript Subscript Baseline 9th Row 1st Column Blank 10th Row 1st Column nu Subscript j 2nd Column colon equals nu Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline period EndLayout˙q j := ˆ˙q(t j), q j := ˙q( j−1)(t j) or ˙q j := E
(
˙q(t j)|At j
)
(10.46d) 
StartLayout 1st Row 1st Column s Subscript j 2nd Column colon equals s Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis left parenthesis 1 minus 1 minus t r a n s f o r m a t i o n s equals s left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With quotation dash Subscript j 2nd Column colon equals ModifyingAbove q With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals q Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove q With quotation dash Subscript j Baseline colon equals upper E left parenthesis q left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals ModifyingAbove q With dot Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline colon equals upper E left parenthesis ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column left parenthesis o b s e r v a t i o n o r e s t i m a t e o f q left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis right parenthesis 8th Row 1st Column upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis j right parenthesis 2nd Column colon equals upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline equals upper P Subscript p left parenthesis dot right parenthesis vertical bar script upper A Sub Subscript t Sub Sub Subscript j Sub Subscript Subscript Baseline 9th Row 1st Column Blank 10th Row 1st Column nu Subscript j 2nd Column colon equals nu Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline period EndLayout(observation or estimate of q(t j), ˙q(t j))
P( j)
p(·) := P
(t j)
p(·) = Pp(·)|At j
(10.46e) 
StartLayout 1st Row 1st Column s Subscript j 2nd Column colon equals s Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis left parenthesis 1 minus 1 minus t r a n s f o r m a t i o n s equals s left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With quotation dash Subscript j 2nd Column colon equals ModifyingAbove q With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals q Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove q With quotation dash Subscript j Baseline colon equals upper E left parenthesis q left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With caret left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With quotation dash Subscript j Baseline colon equals ModifyingAbove q With dot Superscript left parenthesis j minus 1 right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis o r ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline colon equals upper E left parenthesis ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column left parenthesis o b s e r v a t i o n o r e s t i m a t e o f q left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis right parenthesis 8th Row 1st Column upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis j right parenthesis 2nd Column colon equals upper P Subscript p left parenthesis dot right parenthesis Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline equals upper P Subscript p left parenthesis dot right parenthesis vertical bar script upper A Sub Subscript t Sub Sub Subscript j Sub Subscript Subscript Baseline 9th Row 1st Column Blank 10th Row 1st Column nu Subscript j 2nd Column colon equals nu Superscript left parenthesis t Super Subscript j Superscript right parenthesis Baseline period EndLayoutν j := ν(t j).
(10.46f) 
The renewed 
t e r m i n a l p a r a m e t e r s zeta Subscript f Superscript left parenthesis j right parenthesis Baseline colon t Subscript f Superscript left parenthesis j right parenthesis Baseline comma s Subscript f Baseline comma ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline comma beta Subscript f Baselineterminal parameters ζ ( j)
f
: t( j)
f , s f , q( j)
f , β f
(10.47a) 
for the j j-th stage, j greater than or equals 1 j ≥1, are deﬁned by 
StartLayout 1st Row 1st Column Blank 2nd Column s Subscript f Baseline left parenthesis g i v e n right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline colon equals ModifyingAbove q With caret left parenthesis t Subscript f Baseline right parenthesis o r ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis colon equals upper E left parenthesis q Subscript f Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column beta Subscript f Baseline equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column s Superscript left parenthesis j right parenthesis Baseline left parenthesis t Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis equals s Subscript f Baseline period EndLayouts f (given)
(10.47b) 
StartLayout 1st Row 1st Column Blank 2nd Column s Subscript f Baseline left parenthesis g i v e n right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline colon equals ModifyingAbove q With caret left parenthesis t Subscript f Baseline right parenthesis o r ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis colon equals upper E left parenthesis q Subscript f Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column beta Subscript f Baseline equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column s Superscript left parenthesis j right parenthesis Baseline left parenthesis t Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis equals s Subscript f Baseline period EndLayoutq( j)
f
:= ˆq(t f ) or q( j)
f
:= E
(
q f (ω)|At j
)
(10.47c) 
StartLayout 1st Row 1st Column Blank 2nd Column s Subscript f Baseline left parenthesis g i v e n right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline colon equals ModifyingAbove q With caret left parenthesis t Subscript f Baseline right parenthesis o r ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis colon equals upper E left parenthesis q Subscript f Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column beta Subscript f Baseline equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column s Superscript left parenthesis j right parenthesis Baseline left parenthesis t Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis equals s Subscript f Baseline period EndLayoutβ f = 0
(10.47d) 
StartLayout 1st Row 1st Column Blank 2nd Column s Subscript f Baseline left parenthesis g i v e n right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline colon equals ModifyingAbove q With caret left parenthesis t Subscript f Baseline right parenthesis o r ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis colon equals upper E left parenthesis q Subscript f Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column beta Subscript f Baseline equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column s Superscript left parenthesis j right parenthesis Baseline left parenthesis t Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis equals s Subscript f Baseline period EndLayouts( j) (
t( j)
f
)
= s f .
(10.47e)

10.5 AOSTP—Adaptive Optimal Stochastic Trajectory Planning
245
As already mentioned above, the (OSTP) for thej j-th stage,j greater than or equals 1 j ≥1, is obtained from 
the substitute problems (10.30a)–(10.30f), (10.30f’), (10.33a)–(10.33f), (10.34a)– 
(10.34d), resp., formulated for the 00-th stage, j equals 0 j = 0, just by substituting 
zeta 0 right arrow zeta Subscript j Baseline a n d zeta Subscript f Baseline right arrow zeta Subscript f Superscript left parenthesis j right parenthesis Baseline periodζ0 →ζ j and ζ f →ζ ( j)
f .
(10.48) 
Let then denote 
left parenthesis q Subscript e Superscript left parenthesis j right parenthesis Baseline comma beta Superscript left parenthesis j right parenthesis Baseline right parenthesis equals left parenthesis q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma
(
q( j)
e , β( j))
=
(
q( j)
e (s), β( j)(s)
)
,
s j ≤s ≤s f ,
(10.49) 
the corresponding pair of optimal solutions of the resulting substitute problem for 
the j j-th stage, j greater than or equals 1 j ≥1. 
The pair of guiding functionsleft parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline
(
q( j)(t), u( j)(t)
)
, t ≥t j, for  thej j-th stage,j greater than or equals 1 j ≥1, is  
then deﬁned as described in Sect. 10.4.2 for the00-th stage. Hence, for thej j-th stage, 
the reference trajectory in conﬁguration space q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineq( j)(t), t ≥t j, reads cf. (10.40a), 
q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline commaq( j)(t) := q( j)
e
(
s( j)(t)
)
,
t ≥t j,
(10.50a) 
where the transformation s Superscript left parenthesis j right parenthesis Baseline colon left bracket t Subscript j Baseline comma t Subscript f Superscript left parenthesis j right parenthesis Baseline right bracket right arrow left bracket s Subscript j Baseline comma s Subscript f Baseline right brackets( j) :
[
t j, t( j)
f
]
→[s j, s f ] is deﬁned by the initial value 
problem 
ModifyingAbove s With dot left parenthesis t right parenthesis equals StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot comma t greater than or equals t Subscript j Baseline comma s left parenthesis t Subscript j Baseline right parenthesis equals s Subscript j Baseline period˙s(t) =
√
β( j)(s),
t ≥t j,
s(t j) = s j.
(10.50b) 
The terminal time t Subscript f Superscript left parenthesis j right parenthesist( j)
f
for the j j-th stage is deﬁned by the equation 
s Superscript left parenthesis j right parenthesis Baseline left parenthesis t Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis equals s Subscript f Baseline periods( j) (
t( j)
f
)
= s f .
(10.50c) 
Moreover, again by the inverse dynamics approach, the feedforward controlu Superscript left parenthesis j right parenthesis Baseline equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineu( j) =
u( j)(t), t ≥t j, for  the j j-th stage is deﬁned, see (10.41), (10.42), (10.43a), (10.43b), 
by 
u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals normal upper Psi left parenthesis v Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma p Subscript upper D Baseline left parenthesis omega right parenthesis right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis commau( j)(t) := ψ
(
v( j)(
t, pD(ω)
)
|At j
)
,
(10.51a) 
where 
v Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma p Subscript upper D Baseline right parenthesis colon equals upper M left parenthesis p Subscript upper D Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus h left parenthesis p Subscript upper D Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline periodv( j)(t, pD) := M
(
pD, q( j)(t)
)
¨q( j)(t) + h
(
pD, q( j)(t), ˙q( j)(t)
)
,
t ≥t j.
(10.51b) 
Using the conditional expectationnormal upper Psi left parenthesis dot vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis colon equals upper E left parenthesis dot vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesisψ(·|At j) := E(·|At j), we ﬁnd the feedforward 
control 
u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus h left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline commau( j)(t) := M
(
p( j)
D , q( j)(t)
)
¨q( j)(t) + h
(
p( j)
D , q( j), ˙q( j)(t)
)
, t ≥t j,
(10.51c) 
where, cf. (10.32c), 
ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline colon equals upper E left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis periodp( j)
D := E
(
pD(ω)|At j
)
.
(10.51d)

246
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
Corresponding to (10.40c), (10.40d), the reference trajectory in work spacex Superscript left parenthesis j right parenthesis Baseline equals x Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselinex( j) =
x( j)(t), t ≥t j, for the remaining time interval t Subscript j Baseline less than or equals t less than or equals t Subscript f Superscript left parenthesis j right parenthesist j ≤t ≤t( j)
f , is deﬁned by 
StartLayout 1st Row 1st Column x Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper E left parenthesis upper T left parenthesis p Subscript upper K Baseline left parenthesis omega right parenthesis comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals upper T left parenthesis ModifyingAbove p With quotation dash Subscript upper K Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma 2nd Column Blank 3rd Column Blank 2nd Row 1st Column t Subscript j Baseline less than or equals t less than or equals t Subscript f Superscript left parenthesis j right parenthesis Baseline comma 2nd Column Blank 3rd Column Blank EndLayoutx( j)(t) := E
(
T
(
pK(ω), q( j)(t)
)
|At j
)
= T
(
p( j)
K , q( j)(t)
)
,
t j ≤t ≤t( j)
f ,
(10.52a) 
where 
ModifyingAbove p With quotation dash Subscript upper K Superscript left parenthesis j right parenthesis Baseline colon equals upper E left parenthesis p Subscript upper K Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis period
p( j)
K := E
(
pK(ω)|At j
)
.
(10.52b) 
10.5.1 
(OSTP)-Transformation 
The variational problems (OSTP) at the different stages j equals 0 comma 1 comma 2 ellipsis j = 0, 1, 2 . . . are deter-
mined uniquely by the set of initial and terminal parameters left parenthesis zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis(ζ j, ζ ( j)
f ), cf. (10.46a)– 
(10.46f), (10.47a)–(10.47e). Thus, these problems can be transformed to a reference 
problem depending on left parenthesis zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis
(
ζ j, ζ ( j)
f
)
and having a certain ﬁxed reference ss-interval. 
Theorem 10.1 Let left bracket s overTilde Subscript 0 Baseline comma s overTilde Subscript f Baseline right bracket comma s overTilde Subscript 0 Baseline less than s overTilde Subscript f Baseline colon equals s Subscript f Baseline[˜s0, ˜s f ], ˜s0 < ˜s f := s f , be a given, ﬁxed reference ss-interval, 
and consider for a certain stage j comma j equals 0 comma 1 comma ellipsis j, j = 0, 1, . . . , the transformation 
ModifyingAbove s With tilde equals ModifyingAbove s With tilde left parenthesis s right parenthesis colon equals ModifyingAbove s With tilde Subscript 0 Baseline plus StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction left parenthesis s minus s Subscript j Baseline right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma˜s = ˜s(s) := ˜s0 + ˜s f −˜s0
s f −s j
(s −s j),
s j ≤s ≤s f ,
(10.53a) 
from left bracket s Subscript j Baseline comma s Subscript f Baseline right bracket[s j, s f ] onto left bracket s overTilde Subscript 0 Baseline comma s Subscript f Baseline right bracket[˜s0, s f ] having the inverse 
s equals s left parenthesis ModifyingAbove s With tilde right parenthesis equals s Subscript j Baseline plus StartFraction s Subscript f Baseline minus s Subscript j Baseline Over ModifyingAbove s Subscript f Baseline With tilde minus ModifyingAbove s With tilde Subscript 0 Baseline EndFraction left parenthesis ModifyingAbove s With tilde minus ModifyingAbove s With tilde Subscript 0 Baseline right parenthesis comma ModifyingAbove s With tilde Subscript 0 Baseline less than or equals ModifyingAbove s With tilde less than or equals ModifyingAbove s With tilde Subscript f Baseline periods = s(˜s) = s j + s f −s j
˜s f −˜s0
(˜s −˜s0),
˜s0 ≤˜s ≤˜s f .
(10.53b) 
Represent then the geometric path in work spaceq Subscript e Baseline equals q Subscript e Baseline left parenthesis s right parenthesisqe = qe(s) and the velocity proﬁle 
beta equals beta left parenthesis s right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baselineβ = β(s), s j ≤s ≤s f , for  the j j-th stage by 
StartLayout 1st Row 1st Column q Subscript e Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove q With tilde Subscript e Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column beta left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove beta With tilde left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma EndLayoutqe(s) := ˜qe
(
˜s(s)
)
,
s j ≤s ≤s f
(10.54a) 
StartLayout 1st Row 1st Column q Subscript e Baseline left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove q With tilde Subscript e Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column beta left parenthesis s right parenthesis 2nd Column colon equals ModifyingAbove beta With tilde left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma EndLayoutβ(s) := ˜β
(
˜s(s)
)
,
s j ≤s ≤s f ,
(10.54b) 
where ModifyingAbove q With tilde Subscript e Baseline equals ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis comma ModifyingAbove beta With tilde equals ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline˜qe = ˜qe(˜s), ˜β = ˜β(˜s), ˜s0 ≤˜s ≤˜s f , denote the corresponding functions on 
left bracket s overTilde Subscript 0 Baseline comma s overTilde Subscript f Baseline right bracket[˜s0, ˜s f ]. Then the (OSTP) for thej j-th stage is transformed into a reference variational 
problem (stated in the following) for left parenthesis q overTilde Subscript e Baseline comma beta overTilde right parenthesis(˜qe, ˜β) depending on the parameters 
left parenthesis zeta comma zeta Subscript f Baseline right parenthesis equals left parenthesis zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis element of upper Z times upper Z Subscript f(ζ, ζ f ) = (ζ j, ζ ( j)
f ) ∈Z × Z f
(10.55)

10.5 AOSTP—Adaptive Optimal Stochastic Trajectory Planning
247
and having the ﬁxed reference ss-interval left bracket s overTilde Subscript 0 Baseline comma s overTilde Subscript f Baseline right bracket[˜s0, ˜s f ]. Moreover, the optimal solution 
left parenthesis q Subscript e Superscript left parenthesis j right parenthesis Baseline comma beta Superscript left parenthesis j right parenthesis Baseline right parenthesis equals left parenthesis q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline
(
q( j)
e , β( j))
=
(
q( j)
e (s), β( j)(s)
)
, s j ≤s ≤s f , may be represented by the optimal 
adaptive law 
StartLayout 1st Row 1st Column q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis semicolon zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis semicolon zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma EndLayoutq( j)
e (s) = ˜q∗
e
(
˜s(s); ζ j, ζ ( j)
f
)
,
s j ≤s ≤s f ,
(10.56a) 
StartLayout 1st Row 1st Column q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis semicolon zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis semicolon zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma EndLayoutβ( j)(s) = ˜β∗(
˜s(s); ζ j, ζ ( j)
f
)
,
s j ≤s ≤s f ,
(10.56b) 
where 
StartLayout 1st Row 1st Column ModifyingAbove q With tilde Subscript e Superscript asterisk 2nd Column equals 3rd Column ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta comma zeta Subscript f Baseline right parenthesis comma ModifyingAbove beta With tilde Superscript asterisk Baseline equals ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta comma zeta Subscript f Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline EndLayout˜q∗
e = ˜q∗
e (˜s; ζ, ζ f ),
˜β∗= ˜β∗(˜s; ζ, ζ f ),
˜s0 ≤˜s ≤˜s f
(10.56c) 
denotes the optimal solution of the above-mentioned reference variational problem. 
Proof According to (10.54a), (10.54b) and (10.53a), (10.53b), the derivatives of the 
functions q Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baselineqe(s), β(s), s j ≤s ≤s f , are  given by  
StartLayout 1st Row 1st Column q prime Subscript e Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column q double prime Subscript e Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove q With tilde double prime Subscript e Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis left parenthesis StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis squared comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma 4th Row 1st Column Blank 5th Row 1st Column beta prime left parenthesis s right parenthesis 2nd Column equals ModifyingAbove beta With tilde prime left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline period EndLayoutq'
e(s) = ˜q'
e
(
˜s(s)
) ˜s f −˜s0
s f −s j
,
s j ≤s ≤s f ,
(10.57a) 
StartLayout 1st Row 1st Column q prime Subscript e Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column q double prime Subscript e Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove q With tilde double prime Subscript e Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis left parenthesis StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis squared comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma 4th Row 1st Column Blank 5th Row 1st Column beta prime left parenthesis s right parenthesis 2nd Column equals ModifyingAbove beta With tilde prime left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline period EndLayoutq''
e (s) = ˜q''
e
(
˜s(s)
) ( ˜s f −˜s0
s f −s j
)2
,
s j ≤s ≤s f ,
(10.57b) 
StartLayout 1st Row 1st Column q prime Subscript e Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column q double prime Subscript e Baseline left parenthesis s right parenthesis 2nd Column equals ModifyingAbove q With tilde double prime Subscript e Baseline left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis left parenthesis StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis squared comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma 4th Row 1st Column Blank 5th Row 1st Column beta prime left parenthesis s right parenthesis 2nd Column equals ModifyingAbove beta With tilde prime left parenthesis ModifyingAbove s With tilde left parenthesis s right parenthesis right parenthesis StartFraction ModifyingAbove s With tilde Subscript f Baseline minus ModifyingAbove s With tilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline period EndLayoutβ'(s) = ˜β'(
˜s(s)
) ˜s f −˜s0
s f −s j
,
s j ≤s ≤s f .
(10.57c) 
Now putting the transformation (10.53a), (10.53b) and the representation (10.54a), 
(10.54b), (10.57a)–(10.57c) of  q Subscript e Baseline left parenthesis x right parenthesis comma beta left parenthesis s right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baselineqe(x), β(s), s j ≤s ≤s f , and their derivatives into 
one of the substitute problems (10.30a)–(10.30f), (10.30f’), (10.33a)–(10.33f) or  
their time-variant versions, the chosen substitute problem is transformed into a 
corresponding reference variational problem (stated in the following Sect. 10.5.2) 
having the ﬁxed reference interval left bracket s overTilde Subscript 0 Baseline comma s overTilde Subscript f Baseline right bracket[˜s0, ˜s f ] and depending on the parameter vectors 
zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesisζ j, ζ ( j)
f . Moreover, according to (10.54a), (10.54b), the optimal solutionleft parenthesis q Subscript e Superscript left parenthesis j right parenthesis Baseline comma beta Superscript left parenthesis j right parenthesis Baseline right parenthesis
(
q( j)
e , β( j))
of the substitute problem for the 
j j-th stage may be represented then by 
(10.56a)–(10.56c).
⬜
Remark 10.11 Based on the above theorem, the stage-independent functionsq overTilde Subscript e Superscript asterisk Baseline comma beta overTilde Superscript asterisk˜q∗
e , ˜β∗
can be determined now ofﬂine by using an appropriate numerical procedure. 
10.5.2 
The Reference Variational Problem 
After the (OSTP)-transformation described in Sect. 10.5.1, in the  time- invariant 
case for the problems of type (10.30a)–(10.30f), (10.30f’) we ﬁnd

248
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
StartLayout 1st Row min integral Subscript s overTilde Subscript 0 Baseline Superscript s overTilde Subscript f Baseline upper E left parenthesis upper L Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma ModifyingAbove q With tilde double prime Subscript e Baseline left parenthesis s overTilde right parenthesis left parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis squared comma ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis comma 2nd Row ModifyingAbove beta With tilde prime left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis StartFraction s Subscript f Baseline minus s Subscript j Baseline Over s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline EndFraction d s overTilde plus upper E left parenthesis phi Superscript upper J Baseline left parenthesis p Subscript upper J Baseline comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s Subscript f Baseline overTilde right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndLayout min
˜s f
{
˜s0
E
(
L J (
pJ , ˜qe(˜s), ˜q'
e(˜s) ˜s f −˜s0
s f −s j
, ˜q''
e (˜s)
( ˜s f −˜s0
s f −s j
)2
, ˜β(˜s),
˜β'(˜s) ˜s f −˜s0
s f −s j
)
|At j
) s f −s j
˜s f −˜s0
d ˜s + E
(
φ J (
pJ , ˜qe( ˜s f
)
|At j
)
(10.58a) 
s.t. 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Baseline left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma ModifyingAbove q With tilde double prime Subscript e Baseline left parenthesis s overTilde right parenthesis left parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis squared comma ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis comma ModifyingAbove beta With tilde prime left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals normal upper Gamma Subscript f Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction StartRoot ModifyingAbove beta With tilde left parenthesis s overTilde Subscript 0 Baseline right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline left parenthesis i f phi Superscript upper J Baseline equals 0 right parenthesis comma ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 9th Row 1st Column Blank 2nd Column ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 comma upper E left parenthesis psi left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals normal upper Gamma Subscript psi Baseline comma left parenthesis 10.58 e right single quotation mark right parenthesis EndLayoutE
(
fγ
(
p, ˜qe(˜s), ˜q'
e(˜s) ˜s f −˜s0
s f −s j
, ˜q''
e (˜s)
( ˜s f −˜s0
s f −s j
)2
, ˜β(˜s), ˜β'(˜s) ˜s f −˜s0
s f −s j
)
|At j
)
≤[ f ,
(10.58b) 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Baseline left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma ModifyingAbove q With tilde double prime Subscript e Baseline left parenthesis s overTilde right parenthesis left parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis squared comma ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis comma ModifyingAbove beta With tilde prime left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals normal upper Gamma Subscript f Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction StartRoot ModifyingAbove beta With tilde left parenthesis s overTilde Subscript 0 Baseline right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline left parenthesis i f phi Superscript upper J Baseline equals 0 right parenthesis comma ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 9th Row 1st Column Blank 2nd Column ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 comma upper E left parenthesis psi left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals normal upper Gamma Subscript psi Baseline comma left parenthesis 10.58 e right single quotation mark right parenthesis EndLayout ˜β(˜s) ≥0,
˜s0 ≤˜s ≤˜s f
(10.58c) 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Baseline left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma ModifyingAbove q With tilde double prime Subscript e Baseline left parenthesis s overTilde right parenthesis left parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis squared comma ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis comma ModifyingAbove beta With tilde prime left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals normal upper Gamma Subscript f Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction StartRoot ModifyingAbove beta With tilde left parenthesis s overTilde Subscript 0 Baseline right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline left parenthesis i f phi Superscript upper J Baseline equals 0 right parenthesis comma ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 9th Row 1st Column Blank 2nd Column ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 comma upper E left parenthesis psi left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals normal upper Gamma Subscript psi Baseline comma left parenthesis 10.58 e right single quotation mark right parenthesis EndLayout˜qe(˜s0) = q j,
˜q'
e(˜s0) ˜s f −˜s0
s f −s j
/
˜β(˜s0) = ˙q j
(10.58d) 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis f Subscript gamma Baseline left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma ModifyingAbove q With tilde double prime Subscript e Baseline left parenthesis s overTilde right parenthesis left parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis squared comma ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis comma ModifyingAbove beta With tilde prime left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals normal upper Gamma Subscript f Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction StartRoot ModifyingAbove beta With tilde left parenthesis s overTilde Subscript 0 Baseline right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline left parenthesis i f phi Superscript upper J Baseline equals 0 right parenthesis comma ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 9th Row 1st Column Blank 2nd Column ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 comma upper E left parenthesis psi left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals normal upper Gamma Subscript psi Baseline comma left parenthesis 10.58 e right single quotation mark right parenthesis EndLayout˜qe(˜s f ) = q( j)
f
(if φ J = 0),
˜β(˜s f ) = 0
(10.58e) 
˜β(˜s f ) = 0,
E
(
ψ
(
p, ˜qe(˜s f )
)
|At j
)
≤[ψ ,
(10.58e’) 
where f Subscript gamma Baseline comma normal upper Gamma Subscript f Baseline fγ , [ f are deﬁned by 
f Subscript gamma Baseline colon equals StartBinomialOrMatrix f Subscript gamma Superscript u Baseline Choose f Subscript gamma Superscript upper S Baseline EndBinomialOrMatrix comma normal upper Gamma Subscript f Baseline colon equals StartBinomialOrMatrix normal upper Gamma Subscript f Superscript u Baseline Choose normal upper Gamma Subscript f Superscript upper S Baseline EndBinomialOrMatrix period fγ :=
( f u
γ
f S
γ
)
, [ f :=
([u
f
[S
f
)
.
(10.58f) 
Moreover, for the problem type (10.33a)–(10.33f) we get 
StartLayout 1st Row 1st Column min 2nd Column integral Subscript s overTilde Subscript 0 Baseline Superscript s overTilde Subscript f Baseline upper E left parenthesis upper L Subscript gamma Superscript upper J Baseline left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction comma ModifyingAbove q With tilde double prime Subscript e Baseline left parenthesis s overTilde right parenthesis left parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis squared comma ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis comma 2nd Row 1st Column Blank 2nd Column ModifyingAbove beta With tilde prime left parenthesis s overTilde right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis StartFraction s Subscript f Baseline minus s Subscript j Baseline Over s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline EndFraction d s overTilde plus upper E left parenthesis phi Subscript gamma Superscript upper J Baseline left parenthesis p comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndLayout min
˜s f
{
˜s0
E
(
L J
γ
(
p, ˜qe(˜s), ˜q'
e(˜s) ˜s f −˜s0
s f −s j
, ˜q''
e (˜s)
( ˜s f −˜s0
s f −s j
)2
, ˜β(˜s),
˜β'(˜s) ˜s f −˜s0
s f −s j
)
|At j
) s f −s j
˜s f −˜s0
d ˜s + E
(
φ J
γ
(
p, ˜qe(˜s f )
)
|At j
)
(10.59a) 
s.t. 
StartLayout 1st Row 1st Column ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis 2nd Column greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction StartRoot ModifyingAbove beta With tilde left parenthesis s overTilde Subscript 0 Baseline right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline left parenthesis i f phi Subscript gamma Superscript upper J Baseline equals 0 right parenthesis comma ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 period EndLayout ˜β(˜s) ≥0,
˜s0 ≤˜s ≤˜s f
(10.59b) 
StartLayout 1st Row 1st Column ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis 2nd Column greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction StartRoot ModifyingAbove beta With tilde left parenthesis s overTilde Subscript 0 Baseline right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline left parenthesis i f phi Subscript gamma Superscript upper J Baseline equals 0 right parenthesis comma ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 period EndLayout˜qe(˜s0) = q j,
˜q'
e(˜s0) ˜s f −˜s0
s f −s j
/
˜β(˜s0) = ˙q j
(10.59c) 
StartLayout 1st Row 1st Column ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis 2nd Column greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove q With tilde prime Subscript e Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis StartFraction s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline Over s Subscript f Baseline minus s Subscript j Baseline EndFraction StartRoot ModifyingAbove beta With tilde left parenthesis s overTilde Subscript 0 Baseline right parenthesis EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline left parenthesis i f phi Subscript gamma Superscript upper J Baseline equals 0 right parenthesis comma ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 period EndLayout˜qe(˜s f ) = q( j)
f
( if φ J
γ = 0),
˜β(˜s f ) = 0.
(10.59d) 
For the consideration of the time-variant case we note ﬁrst that by using the 
transformation (10.53a), (10.53b) and (10.54b) the time t greater than or equals t Subscript jt ≥t j can be represented, 
cf. (10.15a), (10.15b) and (10.16a), also by

10.5 AOSTP—Adaptive Optimal Stochastic Trajectory Planning
249
t equals t left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis right parenthesis colon equals t Subscript j Baseline plus StartFraction s Subscript f Baseline minus s Subscript j Baseline Over s overTilde Subscript f Baseline minus s overTilde Subscript 0 Baseline EndFraction integral Subscript s overTilde Subscript 0 Baseline Superscript s overTilde Baseline StartFraction d sigma overTilde Over StartRoot ModifyingAbove beta With tilde left parenthesis sigma overTilde right parenthesis EndRoot EndFraction periodt = t
(
˜s, t j, s j, ˜β(·)
)
:= t j + s f −s j
˜s f −˜s0
˜s
{
˜s0
d ˜σ
/
˜β(˜σ)
.
(10.60a) 
Hence, if the variational problems (10.58a)–(10.58f) and (10.59)–(10.59d) for  the  
j j-th stage depend explicitly on time t greater than or equals t Subscript jt ≥t j, then, corresponding to Sect. 10.4, item 
(B), for the constituting functions upper L Superscript upper J Baseline comma phi Superscript upper J Baseline comma upper L Subscript gamma Superscript upper J Baseline comma phi Subscript gamma Superscript upper JL J, φ J, L J
γ , φ J
γ of the variational problems we 
have that 
StartLayout 1st Row 1st Column upper L Superscript upper J 2nd Column equals upper L Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column phi Superscript upper J 2nd Column equals phi Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column f Subscript gamma 2nd Column equals f Subscript gamma Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column upper L Subscript gamma Superscript upper J 2nd Column equals upper L Subscript gamma Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column phi Subscript gamma Superscript upper J 2nd Column equals phi Subscript gamma Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline right parenthesis period EndLayoutL J = L J(
˜s, t j, s j, ˜β(·), pJ, qe, q'
e, q''
e , β, β')
,
˜s0 ≤˜s ≤˜s f
(10.60b) 
StartLayout 1st Row 1st Column upper L Superscript upper J 2nd Column equals upper L Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column phi Superscript upper J 2nd Column equals phi Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column f Subscript gamma 2nd Column equals f Subscript gamma Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column upper L Subscript gamma Superscript upper J 2nd Column equals upper L Subscript gamma Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column phi Subscript gamma Superscript upper J 2nd Column equals phi Subscript gamma Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline right parenthesis period EndLayoutφ J = φ J(
˜s f , t j, s j, ˜β(·), pJ, qe
)
(10.60c) 
StartLayout 1st Row 1st Column upper L Superscript upper J 2nd Column equals upper L Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column phi Superscript upper J 2nd Column equals phi Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column f Subscript gamma 2nd Column equals f Subscript gamma Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column upper L Subscript gamma Superscript upper J 2nd Column equals upper L Subscript gamma Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column phi Subscript gamma Superscript upper J 2nd Column equals phi Subscript gamma Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline right parenthesis period EndLayout fγ = fγ
(
˜s, t j, s j, ˜β(·), p, qe, q'
e, q''
e , β, β')
,
˜s0 ≤˜s ≤˜s f
(10.60d) 
StartLayout 1st Row 1st Column upper L Superscript upper J 2nd Column equals upper L Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column phi Superscript upper J 2nd Column equals phi Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column f Subscript gamma 2nd Column equals f Subscript gamma Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column upper L Subscript gamma Superscript upper J 2nd Column equals upper L Subscript gamma Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column phi Subscript gamma Superscript upper J 2nd Column equals phi Subscript gamma Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline right parenthesis period EndLayoutL J
γ = L J
γ
(
˜s, t j, s j, ˜β(·), p, qe, q''
e , β, β')
,
˜s0 ≤˜s ≤˜s f
(10.60e) 
StartLayout 1st Row 1st Column upper L Superscript upper J 2nd Column equals upper L Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column phi Superscript upper J 2nd Column equals phi Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p Subscript upper J Baseline comma q Subscript e Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column f Subscript gamma 2nd Column equals f Subscript gamma Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q prime Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 6th Row 1st Column Blank 7th Row 1st Column upper L Subscript gamma Superscript upper J 2nd Column equals upper L Subscript gamma Superscript upper J Baseline left parenthesis s overTilde comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline comma q double prime Subscript e Baseline comma beta comma beta Superscript prime Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 8th Row 1st Column Blank 9th Row 1st Column phi Subscript gamma Superscript upper J 2nd Column equals phi Subscript gamma Superscript upper J Baseline left parenthesis s overTilde Subscript f Baseline comma t Subscript j Baseline comma s Subscript j Baseline comma ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma p comma q Subscript e Baseline right parenthesis period EndLayoutφ J
γ = φ J
γ
(
˜s f , t j, s j, ˜β(·), p, qe
)
.
(10.60f) 
10.5.2.1 
Transformation of the Initial State Values 
Suppose here that phi Superscript upper J Baseline not equals 0 comma phi Subscript gamma Superscript upper J Baseline not equals 0φ J /= 0, φ J
γ /= 0, resp., and the terminal state condition (10.58e), 
(10.58e’), (10.59d), resp., is reduced to 
ModifyingAbove beta With tilde left parenthesis s overTilde Subscript f Baseline right parenthesis equals 0 period ˜β(˜s f ) = 0.
(10.61a) 
Representing then the unknown functions ModifyingAbove beta With tilde left parenthesis dot right parenthesis comma ModifyingAbove q With tilde Subscript e Baseline left parenthesis dot right parenthesis ˜β(·), ˜qe(·) on left bracket s overTilde Subscript 0 Baseline comma s overTilde Subscript f Baseline right bracket[˜s0, ˜s f ] by 
StartLayout 1st Row 1st Column ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis 2nd Column colon equals beta Subscript j Baseline ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript j d Baseline ModifyingAbove q With tilde Subscript e a Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline comma EndLayout ˜β(˜s) := β j ˜βa(˜s),
˜s0 ≤˜s ≤˜s f
(10.61b) 
StartLayout 1st Row 1st Column ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis 2nd Column colon equals beta Subscript j Baseline ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript j d Baseline ModifyingAbove q With tilde Subscript e a Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline comma EndLayout˜qe(˜s) := q jd ˜qea(˜s), ˜s0 ≤˜s ≤˜s f ,
(10.61c) 
where ModifyingAbove q With quotation dash Subscript j dq jd denotes the diagonal matrix with the components of ModifyingAbove q With quotation dash Subscript jq j on its main diag-
onal, then in terms of the new unknowns left parenthesis ModifyingAbove beta With tilde Subscript a Baseline left parenthesis dot right parenthesis comma ModifyingAbove q With tilde Subscript e a Baseline left parenthesis dot right parenthesis right parenthesis
(
˜βa(·), ˜qea(·)
)
on left bracket s overTilde Subscript 0 Baseline comma s overTilde Subscript f Baseline right bracket[˜s0, ˜s f ] we have the 
nonnegativity and ﬁxed initial/terminal conditions 
StartLayout 1st Row 1st Column ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde right parenthesis 2nd Column greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis 2nd Column equals 1 comma ModifyingAbove q With tilde Subscript e a Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis equals bold 1 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis 2nd Column equals 0 comma EndLayout ˜βa(˜s) ≥0,
˜s0 ≤˜s ≤˜s f
(10.62a) 
StartLayout 1st Row 1st Column ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde right parenthesis 2nd Column greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis 2nd Column equals 1 comma ModifyingAbove q With tilde Subscript e a Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis equals bold 1 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis 2nd Column equals 0 comma EndLayout ˜βa(˜s0) = 1,
˜qea(˜s0) = 1
(10.62b) 
StartLayout 1st Row 1st Column ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde right parenthesis 2nd Column greater than or equals 0 comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis 2nd Column equals 1 comma ModifyingAbove q With tilde Subscript e a Baseline left parenthesis s overTilde Subscript 0 Baseline right parenthesis equals bold 1 4th Row 1st Column Blank 5th Row 1st Column ModifyingAbove beta With tilde Subscript a Baseline left parenthesis s overTilde Subscript f Baseline right parenthesis 2nd Column equals 0 comma EndLayout ˜βa(˜s f ) = 0,
(10.62c) 
where 1 colon equals left parenthesis 1 comma ellipsis comma 1 right parenthesis prime:= (1, . . . , 1)'.

250
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
10.5.3 
Numerical Solutions of (OSTP) in Real-Time 
With the exception of ﬁeld robots (e.g., Mars rover) and service robots [ 16], becoming 
increasingly important, the standard industrial robots move very fast. Hence, for 
industrial robots the optimal solutionleft parenthesis q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma
(
q( j)
e (s), β( j)(s)
)
, β( j)(s), resp.,s Subscript j Baseline less than or equals s less than or equals s Subscript fs j ≤s ≤s f , 
generating the renewed pair of guiding functions left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline
(
q( j)(t), u( j)(t)
)
, t ≥t j, on each 
stage j equals 1 comma 2 comma ellipsis j = 1, 2, . . . should be provided in real-time. This means that the optimal 
solutions left parenthesis q Subscript e Superscript left parenthesis j right parenthesis Baseline comma beta Superscript left parenthesis j right parenthesis Baseline right parenthesis comma beta Superscript left parenthesis j right parenthesis
(
q( j)
e , β( j))
, β( j), resp., must be prepared ofﬂine as far as possible such 
that only relatively simple numerical operations are left online. 
Numerical methods capable to generate approximate optimal solutions in real-
time are based mostly on discretization techniques, neural network (NN) approxi-
mation [ 3, 30, 31, 38], linearization techniques (sensitivity analysis) [ 48]. 
10.5.3.1 
Discretization Techniques 
Partitioning the space upper Z times upper Z Subscript fZ × Z f of initial/terminal parameters left parenthesis zeta comma zeta Subscript f Baseline right parenthesis(ζ, ζ f ) into a certain 
(small) number l 0l0 of subdomains 
upper Z times upper Z Subscript f Baseline equals union Underscript l equals 1 Overscript l 0 Endscripts upper Z Superscript l Baseline times upper Z Subscript f Superscript l Baseline commaZ × Z f =
l0
U
l=1
Zl × Zl
f ,
(10.63a) 
and selecting then a reference parameter vector 
left parenthesis zeta Superscript l Baseline comma zeta Subscript f Superscript l Baseline right parenthesis element of upper Z Superscript l Baseline times upper Z Subscript f Superscript l Baseline comma l equals 1 comma ellipsis comma l 0 comma(ζ l, ζ l
f ) ∈Zl × Zl
f ,l = 1, . . . ,l0,
(10.63b) 
in each subdomainupper Z Superscript l Baseline times upper Z Subscript f Superscript lZl × Zl
f , the optimal adaptive law (10.56c) can be approximated, 
cf. [ 47], by 
StartLayout 1st Row 1st Column ModifyingAbove Above ModifyingAbove q With tilde With caret Subscript e Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta comma zeta Subscript f Baseline right parenthesis 2nd Column colon equals ModifyingAbove q With tilde Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta Superscript l Baseline comma zeta Subscript f Superscript l Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s Subscript f Baseline overTilde 2nd Row 1st Column ModifyingAbove Above ModifyingAbove beta With tilde With caret Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta comma zeta Subscript f Baseline right parenthesis 2nd Column colon equals ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta Superscript l Baseline comma zeta Subscript f Superscript l Baseline right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline EndLayout right brace f o r left parenthesis zeta comma zeta Subscript f Baseline right parenthesis element of upper Z Superscript l Baseline times upper Z Subscript f Superscript l Baseline period
ˆ˜q∗
e (˜s; ζ, ζ f ) := ˜q∗(˜s; ζ l, ζ l
f ), ˜s0 ≤˜s ≤˜s f
ˆ˜β∗(˜s; ζ, ζ f ) := ˜β∗(˜s; ζ l, ζ l
f ), ˜s0 ≤˜s ≤˜s f
}
for (ζ, ζ f ) ∈Zl × Zl
f .
(10.63c) 
10.5.3.2 
NN-Approximation 
For the determination of the optimal adaptive law (10.56a)–(10.56c) in real-time, 
according to (10.35a), (10.35b), the reference variational problem (10.58a)–(10.58f) 
or (10.59)–(10.59d) is reduced ﬁrst to a ﬁnite-dimensional parameter optimization 
problem by 
(i) representing the unknown functions ModifyingAbove q With tilde Subscript e Baseline equals ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis comma ModifyingAbove beta With tilde equals ModifyingAbove beta With tilde left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline comma˜qe = ˜qe(˜s), ˜β = ˜β(˜s), ˜s0 ≤˜s ≤˜s f , as lin-
ear combinations

10.5 AOSTP—Adaptive Optimal Stochastic Trajectory Planning
251
StartLayout 1st Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis 2nd Column colon equals sigma summation Underscript l equals 1 Overscript l Subscript q Baseline Endscripts ModifyingAbove q With caret Subscript e Baseline upper B Subscript l Superscript q Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column beta overTilde left parenthesis s overTilde 2nd Column colon equals sigma summation Underscript l equals 1 Overscript l Subscript beta Baseline Endscripts ModifyingAbove beta With caret Subscript l Baseline upper B Subscript l Superscript beta Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline comma EndLayout˜qe(˜s) :=
lq
∑
l=1
ˆqeBq
l (˜s), ˜s0 ≤˜s ≤˜s f ,
(10.64a) 
StartLayout 1st Row 1st Column ModifyingAbove q With tilde Subscript e Baseline left parenthesis s overTilde right parenthesis 2nd Column colon equals sigma summation Underscript l equals 1 Overscript l Subscript q Baseline Endscripts ModifyingAbove q With caret Subscript e Baseline upper B Subscript l Superscript q Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column beta overTilde left parenthesis s overTilde 2nd Column colon equals sigma summation Underscript l equals 1 Overscript l Subscript beta Baseline Endscripts ModifyingAbove beta With caret Subscript l Baseline upper B Subscript l Superscript beta Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline comma EndLayout ˜β(˜s :=
lβ
∑
l=1
ˆβl Bβ
l (˜s), ˜s0 ≤˜s ≤˜s f ,
(10.64b) 
of certain basis functions, e.g., cubic B-splines,upper B Subscript l Superscript q Baseline equals upper B Subscript l Superscript q Baseline left parenthesis s overTilde right parenthesis comma upper B Subscript l Superscript beta Baseline equals upper B Subscript l Superscript beta Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline comma l equals 1 comma ellipsis comma l Subscript q Baseline left parenthesis l Subscript beta Baseline right parenthesisBq
l = Bq
l (˜s), Bβ
l = Bβ
l (˜s), ˜s0 ≤
˜s ≤˜s f ,l = 1, . . . ,lq(lβ), with unknown vectorial (scalar) coefﬁcientsModifyingAbove q With caret Subscript l Baseline comma ModifyingAbove beta With caret Subscript l Baseline comma l equals 1 comma ellipsis comma l Subscript q Baseline left parenthesis l Subscript beta Baseline right parenthesis ˆql, ˆβl,l =
1, . . . ,lq(lβ), and 
(ii) demanding the inequalities in (10.58b), (10.58c), (10.59b), resp., only for a ﬁnite 
set of s overTilde˜s-parameter values s overTilde Subscript 0 Baseline less than s overTilde Subscript 1 Baseline less than midline horizontal ellipsis less than s overTilde Subscript k Baseline less than s overTilde Subscript k plus 1 Baseline less than midline horizontal ellipsis less than s overTilde Subscript kappa Baseline equals s overTilde Subscript f˜s0 < ˜s1 < · · · < ˜sk < ˜sk+1 < · · · < ˜sκ = ˜s f . 
By means of the above-described procedure (i), (ii), the optimal coefﬁcients 
StartLayout 1st Row 1st Column ModifyingAbove q With caret Subscript l Superscript asterisk 2nd Column equals ModifyingAbove q With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript q Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With caret Subscript l Superscript asterisk 2nd Column equals ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript beta Baseline EndLayoutˆq∗
l = ˆq∗
l (ζ, ζ f ),
l = 1, . . . ,lq
(10.64c) 
StartLayout 1st Row 1st Column ModifyingAbove q With caret Subscript l Superscript asterisk 2nd Column equals ModifyingAbove q With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript q Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With caret Subscript l Superscript asterisk 2nd Column equals ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript beta Baseline EndLayout ˆβ∗
l = ˆβ∗
l (ζ, ζ f ),
l = 1, . . . ,lβ
(10.64d) 
become functions of the initial/terminal parameters zeta comma zeta Subscript f Baselineζ, ζ f , cf.  (10.56c). Now, for the 
numerical realization of the optimal parameter functions (10.64c), (10.64d), a Neural 
Network (NN) is employed generating an approximative representation 
StartLayout 1st Row 1st Column ModifyingAbove q With caret Subscript e Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis 2nd Column almost equals ModifyingAbove q With caret Subscript e Superscript upper N upper N Baseline left parenthesis zeta comma zeta Subscript f Baseline semicolon w Subscript q Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript q Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis 2nd Column almost equals ModifyingAbove beta With caret Subscript l Superscript upper N upper N Baseline left parenthesis zeta comma zeta Subscript f Baseline semicolon w Subscript beta Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript beta Baseline comma EndLayoutˆq∗
e (ζ, ζ f ) ≈ˆq N N
e
(ζ, ζ f ; wq),
l = 1, . . . ,lq
(10.65a) 
StartLayout 1st Row 1st Column ModifyingAbove q With caret Subscript e Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis 2nd Column almost equals ModifyingAbove q With caret Subscript e Superscript upper N upper N Baseline left parenthesis zeta comma zeta Subscript f Baseline semicolon w Subscript q Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript q Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis 2nd Column almost equals ModifyingAbove beta With caret Subscript l Superscript upper N upper N Baseline left parenthesis zeta comma zeta Subscript f Baseline semicolon w Subscript beta Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript beta Baseline comma EndLayout ˆβ∗
l (ζ, ζ f ) ≈ˆβ N N
l
(ζ, ζ f ; wβ),
l = 1, . . . ,lβ,
(10.65b) 
where the vectors w Subscript q Baseline comma w Subscript beta Baselinewq, wβ of NN-weights are determined optimally 
w Subscript q Baseline equals w Subscript q Superscript asterisk Baseline left parenthesis d a t a right parenthesis comma w Subscript beta Baseline equals w Subscript beta Superscript asterisk Baseline left parenthesis d a t a right parenthesiswq = w∗
q (data), wβ = w∗
β (data)
(10.65c) 
in an ofﬂine training procedure [ 3, 30, 38]. Here, the model (10.65a), (10.65b) is  
ﬁtted in the LSQ-sense to given data 
StartBinomialOrMatrix zeta Superscript tau Baseline comma zeta Subscript f Superscript tau Baseline Choose ModifyingAbove q With caret Subscript l Superscript asterisk tau Baseline comma l equals 1 comma ellipsis comma l Subscript q Baseline EndBinomialOrMatrix comma StartBinomialOrMatrix zeta Superscript tau Baseline comma zeta Subscript f Superscript tau Baseline Choose ModifyingAbove beta With caret Subscript l Superscript asterisk tau Baseline comma l equals 1 comma ellipsis comma l Subscript beta Baseline EndBinomialOrMatrix comma tau equals 1 comma ellipsis comma tau 0 comma
(
ζ τ, ζ τ
f
ˆq∗τ
l ,l = 1, . . . ,lq
)
,
(
ζ τ, ζ τ
f
ˆβ∗τ
l ,l = 1, . . . ,lβ
)
,
τ = 1, . . . , τ0,
(10.65d) 
where 
left parenthesis zeta Superscript tau Baseline comma zeta Subscript f Superscript tau Baseline right parenthesis comma tau equals 1 comma ellipsis comma tau 0(ζ τ, ζ τ
f ),
τ = 1, . . . , τ0
(10.65e) 
is a certain collection of initial/terminal parameter vectors, and 
StartLayout 1st Row 1st Column ModifyingAbove q With caret Subscript l Superscript asterisk tau 2nd Column colon equals ModifyingAbove q With caret Subscript l Superscript asterisk tau Baseline left parenthesis zeta Superscript tau Baseline comma zeta Subscript f Superscript tau Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript q Baseline comma tau equals 1 comma ellipsis comma tau 0 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With caret Subscript l Superscript asterisk tau 2nd Column colon equals ModifyingAbove beta With caret Subscript l Superscript asterisk tau Baseline left parenthesis zeta Superscript tau Baseline comma zeta Subscript f Superscript tau Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript beta Baseline comma tau equals 1 comma ellipsis comma tau 0 EndLayoutˆq∗τ
l
:= ˆq∗τ
l (ζ τ, ζ τ
f ),
l = 1, . . . ,lq,
τ = 1, . . . , τ0
(10.65f) 
StartLayout 1st Row 1st Column ModifyingAbove q With caret Subscript l Superscript asterisk tau 2nd Column colon equals ModifyingAbove q With caret Subscript l Superscript asterisk tau Baseline left parenthesis zeta Superscript tau Baseline comma zeta Subscript f Superscript tau Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript q Baseline comma tau equals 1 comma ellipsis comma tau 0 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With caret Subscript l Superscript asterisk tau 2nd Column colon equals ModifyingAbove beta With caret Subscript l Superscript asterisk tau Baseline left parenthesis zeta Superscript tau Baseline comma zeta Subscript f Superscript tau Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript beta Baseline comma tau equals 1 comma ellipsis comma tau 0 EndLayout ˆβ∗τ
l
:= ˆβ∗τ
l (ζ τ, ζ τ
f ),
l = 1, . . . ,lβ,
τ = 1, . . . , τ0
(10.65g)

252
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
are the related optimal coefﬁcients in (10.64a), (10.64b) which are determined ofﬂine 
by an appropriate parameter optimization procedure. 
Having the vectors w Subscript q Superscript asterisk Baseline comma w Subscript beta Superscript asteriskw∗
q, w∗
β of optimal NN-weights, by means of (10.65a)– 
(10.65c), for given actual initial/terminal parameters left parenthesis zeta comma zeta Subscript f Baseline right parenthesis equals left parenthesis zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis(ζ, ζ f ) = (ζ j, ζ ( j)
f ) at stage 
j greater than or equals 0 j ≥0, the NN yields then the optimal parameters 
ModifyingAbove q With caret Subscript l Superscript asterisk Baseline left parenthesis zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis comma ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline left parenthesis zeta Subscript j Baseline comma zeta Subscript f Superscript left parenthesis j right parenthesis Baseline right parenthesis comma l equals 1 comma ellipsis comma l Subscript q Baseline left parenthesis l Subscript beta Baseline right parenthesisˆq∗
l (ζ j, ζ ( j)
f ), ˆβ∗
l (ζ j, ζ ( j)
f ),
l = 1, . . . ,lq(lβ)
in real-time; consequently, by means of (10.64a), (10.64b), also the optimal functions 
ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline left parenthesis s overTilde right parenthesis comma ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis s overTilde right parenthesis comma s overTilde Subscript 0 Baseline less than or equals s overTilde less than or equals s overTilde Subscript f Baseline˜q∗
e (˜s), ˜β∗(˜s), ˜s0 ≤˜s ≤˜s f , are then available very fast. For more details, see [ 3, 30]. 
10.5.3.3 
Linearization Methods 
(I) Linearization of the optimal feedforward control law 
Expanding the optimal control laws (10.56c) with respect to the initial/terminal 
parameter vectorModifyingAbove zeta With caret equals left parenthesis zeta comma zeta Subscript f Baseline right parenthesisˆζ = (ζ, ζ f ) at its valueModifyingAbove zeta With caret Subscript 0 Baseline equals left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesisˆζ0 = (ζ0, ζ (0)
f ) for stagej equals 0 j = 0, approx-
imatively we have that 
StartLayout 1st Row 1st Column ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline left parenthesis s overTilde comma zeta comma zeta Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus StartFraction partial differential ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis left parenthesis zeta minus zeta 0 comma zeta Subscript f Baseline minus zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus ellipsis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta comma zeta Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus StartFraction partial differential ModifyingAbove beta With tilde Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis left parenthesis zeta minus zeta 0 comma zeta Subscript f Baseline minus zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus ellipsis comma EndLayout˜q∗
e (˜s, ζ, ζ f ) = ˜q∗
e (˜s; ζ0, ζ (0)
f ) + ∂˜q∗
e
∂ˆζ
(˜s; ζ0, ζ (0)
f )(ζ −ζ0, ζ f −ζ (0)
f ) + . . .
(10.66a) 
StartLayout 1st Row 1st Column ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline left parenthesis s overTilde comma zeta comma zeta Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus StartFraction partial differential ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis left parenthesis zeta minus zeta 0 comma zeta Subscript f Baseline minus zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus ellipsis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta comma zeta Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus StartFraction partial differential ModifyingAbove beta With tilde Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis left parenthesis zeta minus zeta 0 comma zeta Subscript f Baseline minus zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus ellipsis comma EndLayout ˜β∗(˜s; ζ, ζ f ) = ˜β∗(˜s; ζ0, ζ (0)
f ) + ∂˜β∗
∂ˆζ
(˜s; ζ0, ζ (0)
f )(ζ −ζ0, ζ f −ζ (0)
f ) + . . . ,
(10.66b) 
where the optimal starting functions ModifyingAbove q With tilde Subscript e Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis comma ModifyingAbove beta With tilde Superscript asterisk Baseline left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis˜q∗
e (˜s; ζ0, ζ (0)
f ), ˜β∗(˜s; ζ0, ζ (0)
f ) and the 
derivativesStartFraction partial differential q overTilde Subscript e Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis comma StartFraction partial differential beta overTilde Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis s overTilde semicolon zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis comma ellipsis∂˜q∗
e
∂ˆζ
(˜s; ζ0, ζ (0)
f ), ∂˜β∗
∂ˆζ
(˜s; ζ0, ζ (0)
f ), . . . can be determined—on a cer-
tain grid ofleft bracket s overTilde Subscript 0 Baseline comma s overTilde Subscript f Baseline right bracket[˜s0, ˜s f ]—ofﬂine by using sensitivity analysis [ 48]. The actual values 
of q overTilde Subscript e Superscript asterisk Baseline comma beta overTilde Superscript asterisk˜q∗
e , ˜β∗at later stages can then be obtained very rapidly by means of simple 
matrix operations. If necessary, the derivatives can be updated later on by a 
numerical procedure running in parallel to the control process. 
(II) Sequential linearization of the (AOSTP) process 
Given the optimal guiding functionsq Subscript e Superscript left parenthesis j right parenthesis Baseline equals q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline equals beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baselineq( j)
e
= q( j)
e (s), β( j) = β( j)(s), s j ≤s ≤s f
for the j j-th stage, corresponding to the representation (10.36a), (10.36b), the 
optimal guiding functionsq Subscript e Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s right parenthesis comma beta Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baselineq( j+1)
e
(s), β( j+1)(s), s j+1 ≤s ≤s f , are represented, 
cf. Fig. 10.2, by  
StartLayout 1st Row 1st Column q Subscript e Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis plus Delta q Subscript e Baseline left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column beta Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis plus Delta beta left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline comma EndLayoutq( j+1)
e
(s) := q( j)
e (s) + Δqe(s),
s j+1 ≤s ≤s f ,
(10.67a) 
StartLayout 1st Row 1st Column q Subscript e Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis plus Delta q Subscript e Baseline left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column beta Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s right parenthesis 2nd Column colon equals beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis plus Delta beta left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline comma EndLayoutβ( j+1)(s) := β( j)(s) + Δβ(s),
s j+1 ≤s ≤s f ,
(10.67b)

10.5 AOSTP—Adaptive Optimal Stochastic Trajectory Planning
253
Fig. 10.2 Sequential linearization of (AOSTP) 
wheres Subscript j Baseline less than s Subscript j plus 1 Baseline less than s Subscript fs j < s j+1 < s f , andleft parenthesis Delta q Subscript e Baseline left parenthesis s right parenthesis comma Delta beta left parenthesis s right parenthesis right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline
(
Δqe(s), Δβ(s)
)
, s j+1 ≤s ≤s f , are certain (small) 
changes of the j j-th stage optimal guiding functions left parenthesis q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis
(
q( j)
e (·), β( j)(·)
)
. 
Obviously, the linearization technique described in Sect. 10.5.3.3 can be 
applied now also to the approximate computation of the optimal changes 
Delta q Subscript e Baseline left parenthesis s right parenthesis comma Delta beta left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f BaselineΔqe(s), Δβ(s), s j+1 ≤s ≤s f , if the following replacements are made in the 
formulas 
(10.36a), 
(10.36b), 
(10.37a)–(10.37c), 
(10.38a)–(10.38h) 
and 
(10.39a)–(10.39f): 
StartLayout 1st Row 1st Column s 0 less than or equals s less than or equals s Subscript f Baseline 2nd Column right arrow s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column ModifyingAbove q With quotation dash Subscript e Baseline comma ModifyingAbove beta With quotation dash 2nd Column right arrow q Subscript e Superscript left parenthesis j right parenthesis Baseline comma beta Superscript left parenthesis j right parenthesis Baseline 3rd Row 1st Column script upper A Subscript t 0 Baseline 2nd Column right arrow script upper A Subscript t Sub Subscript j plus 1 Subscript Baseline 4th Row 1st Column ModifyingAbove g With quotation dash Superscript left parenthesis 0 right parenthesis Baseline comma ModifyingAbove phi With quotation dash Superscript left parenthesis 0 right parenthesis Baseline comma ModifyingAbove upper F With quotation dash Superscript left parenthesis 0 right parenthesis Baseline 2nd Column right arrow ModifyingAbove g With quotation dash Superscript left parenthesis j plus 1 right parenthesis Baseline comma ModifyingAbove phi With quotation dash Superscript left parenthesis j plus 1 right parenthesis Baseline comma ModifyingAbove upper F With quotation dash Superscript left parenthesis j plus 1 right parenthesis Baseline 5th Row 1st Column ModifyingAbove upper A With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline comma ellipsis comma ModifyingAbove upper H With quotation dash Subscript g comma ModifyingAbove q With quotation dash Sub Subscript e Subscript comma ModifyingAbove beta With quotation dash Superscript left parenthesis 0 right parenthesis Baseline 2nd Column right arrow ModifyingAbove upper A With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline comma ellipsis comma ModifyingAbove upper H With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline 6th Row 1st Column Delta beta left parenthesis s 0 right parenthesis equals 0 2nd Column right arrow Delta beta left parenthesis s Subscript j plus 1 Baseline right parenthesis equals beta Subscript j plus 1 Baseline minus beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis 7th Row 1st Column Delta q Subscript e Baseline left parenthesis s 0 right parenthesis equals q 0 minus ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s 0 right parenthesis 2nd Column right arrow Delta q Subscript e Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript j plus 1 Baseline minus q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis 8th Row 1st Column Delta beta left parenthesis s Subscript f Baseline right parenthesis equals 0 2nd Column right arrow Delta beta left parenthesis s Subscript f Baseline right parenthesis equals 0 9th Row 1st Column Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals q Subscript f Superscript left parenthesis 0 right parenthesis Baseline minus ModifyingAbove q With quotation dash Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column right arrow Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j plus 1 right parenthesis Baseline minus ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline comma i f phi Superscript upper J Baseline equals 0 comma EndLayout right brace
s0 ≤s ≤s f
→s j+1 ≤s ≤s f
qe, β
→q( j)
e , β( j)
At0
→At j+1
g(0), φ
(0), F
(0)
→g( j+1), φ
( j+1), F
( j+1)
A
(0)
g,qe,β, . . . , H
(0)
g,qe,β
→A
( j+1)
g,q( j)
e ,β( j), . . . , H
( j+1)
g,q( j)
e ,β( j)
Δβ(s0) = 0
→Δβ(s j+1) = β j+1 −β( j)(s j+1)
Δqe(s0) = q0 −qe(s0)
→Δqe(s j+1) = q j+1 −q( j)
e (s j+1)
Δβ(s f ) = 0
→Δβ(s f ) = 0
Δqe(s f ) = q(0)
f
−qe(s f ) →Δqe(s f ) = q( j+1)
f
−q( j)
f , if φ J = 0,
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(10.67c) 
where ModifyingAbove upper X With quotation dash Superscript left parenthesis j plus 1 right parenthesisX
( j+1) denotes the conditional expectation of a random variable upper XX with 
respect to script upper A Subscript t Sub Subscript j plus 1At j+1, cf.  (10.51d), (10.52b). Furthermore, (10.38f) yields 
left parenthesis q Subscript e Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis plus Delta q prime Subscript e Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis right parenthesis dot StartRoot beta Subscript j plus 1 Baseline EndRoot equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j plus 1
(
q( j)'
e
(s j+1) + Δq'
e(s j+1)
)
·
√
β j+1 = ˙q j+1
(10.67d) 
which can be approximated, cf. (10.39f’), by 
StartLayout 1st Row 1st Column StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis EndRoot Delta q prime Subscript e Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis plus one half StartFraction Delta beta left parenthesis s Subscript j plus 1 Baseline right parenthesis Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis EndRoot EndFraction q Subscript e Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis 2nd Column Blank 2nd Row 1st Column almost equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j plus 1 Baseline minus StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis EndRoot q Subscript e Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis period 2nd Column left parenthesis 10.67 d right single quotation mark right parenthesis EndLayout
√
β( j)(s j+1)Δq'
e(s j+1) + 1
2
Δβ(s j+1)
√
β( j)(s j+1)q( j)'
e
(s j+1)
≈˙q j+1 −
√
β( j)(s j+1)q( j)'
e
(s j+1).
(10.67d’)
Depending on the chosen substitute problem, by this linearization method we 
obtain then a variational problem, an optimization problem, resp., for the changes 
left parenthesis Delta q Subscript e Baseline left parenthesis s right parenthesis comma Delta beta left parenthesis s right parenthesis right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline
(
Δqe(s), Δβ(s)
)
, s j+1 ≤s ≤s f , having a linear objective function and/or linear 
constraints. 
To give a typical example, we consider now (AOSTP) on the left parenthesis j plus 1 right parenthesis( j + 1)th stage 
with substitute problem (10.33a)–(10.33f). Hence, the functions g comma phig, φ in (10.40a)– 
(10.40c), (10.38a)–(10.38h), and (10.39a)–(10.39f) are  given by

254
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
g colon equals upper L Subscript gamma Superscript upper J Baseline comma phi colon equals phi Subscript gamma Superscript upper J Baseline periodg := L J
γ , φ := φ J
γ .
Applying the linearization techniques developed in Sect. 10.4.1c now  to  (10.33a)– 
(10.33f), according to (10.39a)–(10.39c), (10.38b) and (10.67d’), for the correction 
termsDelta q Subscript e Baseline left parenthesis s right parenthesis comma Delta beta left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f BaselineΔqe(s), Δβ(s), s j+1 ≤s ≤s f , we ﬁnd the following linear optimization prob-
lem: 
StartLayout 1st Row 1st Column min integral Subscript s Subscript j plus 1 Baseline Superscript s Subscript f Baseline Baseline ModifyingAbove upper G With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s right parenthesis Superscript upper T Baseline Delta q Subscript e Baseline left parenthesis s right parenthesis d s 2nd Column plus integral Subscript s Subscript j plus 1 Baseline Superscript s Subscript f Baseline Baseline ModifyingAbove upper H With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s right parenthesis Delta left parenthesis s right parenthesis d s 2nd Row 1st Column plus upper R Subscript j Superscript upper T Baseline Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column plus upper S Subscript j Superscript upper T Baseline Delta q prime Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis plus upper T Subscript j Baseline Delta beta left parenthesis s Subscript j plus 1 Baseline right parenthesis EndLayout min
s f
{
s j+1
G
( j+1)
g,q( j)
e ,β( j)(s)T Δqe(s)ds +
s f
{
s j+1
H
( j+1)
g,q( j)
e ,β( j)(s)Δ(s)ds
(10.68a) 
+RT 
j Δqe(s f ) + ST 
j Δq'
e(s f ) + TjΔβ(s j+1) 
s.t. 
StartLayout 1st Row 1st Column Delta q Subscript e Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript j plus 1 Baseline minus q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j plus 1 right parenthesis Baseline minus ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline comma i f phi Superscript upper J Baseline equals 0 4th Row 1st Column Delta beta left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals 0 5th Row 1st Column Blank 6th Row 1st Column Delta beta left parenthesis s right parenthesis 2nd Column greater than or equals minus beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline comma EndLayoutΔqe(s j+1) = q j+1 −q( j)
e (s j+1)
(10.68b) 
StartLayout 1st Row 1st Column Delta q Subscript e Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript j plus 1 Baseline minus q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j plus 1 right parenthesis Baseline minus ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline comma i f phi Superscript upper J Baseline equals 0 4th Row 1st Column Delta beta left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals 0 5th Row 1st Column Blank 6th Row 1st Column Delta beta left parenthesis s right parenthesis 2nd Column greater than or equals minus beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline comma EndLayoutΔqe(s f ) = q( j+1)
f
−q( j)
f , if φ J = 0
(10.68c)
Δβ(s f ) = 0 
StartLayout 1st Row 1st Column Delta q Subscript e Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript j plus 1 Baseline minus q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Delta q Subscript e Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j plus 1 right parenthesis Baseline minus ModifyingAbove q With quotation dash Subscript f Superscript left parenthesis j right parenthesis Baseline comma i f phi Superscript upper J Baseline equals 0 4th Row 1st Column Delta beta left parenthesis s Subscript f Baseline right parenthesis 2nd Column equals 0 5th Row 1st Column Blank 6th Row 1st Column Delta beta left parenthesis s right parenthesis 2nd Column greater than or equals minus beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline comma EndLayoutΔβ(s) ≥−β( j)(s),
s j+1 ≤s ≤s f ,
(10.68d) 
where 
StartLayout 1st Row 1st Column upper R Subscript j 2nd Column colon equals ModifyingAbove upper B With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis minus ModifyingAbove upper C With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis plus ModifyingAbove a With quotation dash Subscript phi comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper S Subscript j 2nd Column colon equals ModifyingAbove upper C With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper T Subscript j 2nd Column colon equals one half ModifyingAbove upper C With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis Superscript upper T Baseline StartFraction q Subscript e Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis Over beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis EndFraction minus ModifyingAbove upper E With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis period EndLayoutR j := B
( j+1)
g,q( j)
e ,β( j)(s f ) −C
( j+1)
g,q( j)
e ,β( j)(s f ) + a( j+1)
φ,q( j)
e (s f )
(10.68e) 
StartLayout 1st Row 1st Column upper R Subscript j 2nd Column colon equals ModifyingAbove upper B With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis minus ModifyingAbove upper C With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis plus ModifyingAbove a With quotation dash Subscript phi comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper S Subscript j 2nd Column colon equals ModifyingAbove upper C With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper T Subscript j 2nd Column colon equals one half ModifyingAbove upper C With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis Superscript upper T Baseline StartFraction q Subscript e Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis Over beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis EndFraction minus ModifyingAbove upper E With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis period EndLayoutSj := C
( j+1)
g,q( j)
e ,β( j)(s f )
(10.68f) 
StartLayout 1st Row 1st Column upper R Subscript j 2nd Column colon equals ModifyingAbove upper B With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis minus ModifyingAbove upper C With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis plus ModifyingAbove a With quotation dash Subscript phi comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper S Subscript j 2nd Column colon equals ModifyingAbove upper C With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript f Baseline right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper T Subscript j 2nd Column colon equals one half ModifyingAbove upper C With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis Superscript upper T Baseline StartFraction q Subscript e Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis Over beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis EndFraction minus ModifyingAbove upper E With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s Subscript j plus 1 Baseline right parenthesis period EndLayoutTj := 1
2C
( j+1)
g,q( j)
e ,β( j)(s j+1)T q( j)'
e
(s j+1)
β( j)(s j+1) −E
( j+1)
g,q( j)
e ,β( j)(s j+1).
(10.68g) 
The linear optimization problem (10.68a)–(10.68g) can be solved now by the 
methods developed, e.g., in [ 13], where for the correction terms Delta q Subscript e Baseline left parenthesis s right parenthesis comma Delta beta left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f BaselineΔqe(s), Δβ(s),
s j+1 ≤s ≤s f , some box constraints or norm bounds have to be added to (10.68a)– 
(10.68g). In case of Delta beta left parenthesis dot right parenthesisΔβ(·) we may replace, e.g., (10.68d) by the condition 
minus beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis less than or equals Delta beta left parenthesis s right parenthesis less than or equals Delta beta Superscript max Baseline comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline comma left parenthesis 10.68 d right single quotation mark right parenthesis
−β( j)(s) ≤Δβ(s) ≤Δβmax, s j+1 ≤s ≤s f ,
(10.68d’)
with some upper bound Delta beta Superscript maxΔβmax. 
It is easy to see that (10.68a)–(10.68g) can be split up into two separated lin-
ear optimization problems for Delta q Subscript e Baseline left parenthesis dot right parenthesis comma Delta beta left parenthesis dot right parenthesisΔqe(·), Δβ(·), respectively. Hence, according to the 
simple structure of the objective function (10.68a), we observe that 
s i g n left parenthesis ModifyingAbove upper H With quotation dash Subscript g comma q Sub Subscript e Sub Superscript left parenthesis j right parenthesis Subscript comma beta Sub Superscript left parenthesis j right parenthesis Subscript Superscript left parenthesis j plus 1 right parenthesis Baseline left parenthesis s right parenthesis right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baseline comma a n d s i g n left parenthesis upper T Subscript j Baseline right parenthesissign
(
H
( j+1)
g,q( j)
e ,β( j)(s)
)
, s j+1 ≤s ≤s f , and sign (Tj)

10.5 AOSTP—Adaptive Optimal Stochastic Trajectory Planning
255
indicates the pointsss in the intervalleft bracket s Subscript j plus 1 Baseline comma s Subscript f Baseline right bracket[s j+1, s f ] withDelta beta left parenthesis s right parenthesis less than 0Δβ(s) < 0 orDelta beta left parenthesis s right parenthesis greater than 0Δβ(s) > 0, hence, 
the pointss comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baselines, s j+1 ≤s ≤s f , where the velocity proﬁle should be decreased/increased. 
Moreover, using (10.68d’), the optimal correctionDelta beta left parenthesis s right parenthesisΔβ(s) is equal to the lower/upper 
bound in (10.68d’) depending on the above-mentioned signs. 
Obviously, the correction vectorsDelta q Subscript e Baseline left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f BaselineΔqe(s), s j+1 ≤s ≤s f , for the geometric path 
in conﬁguration space can be determined in the same way. Similar results are obtained 
also if we use upper L 2L2-norm bounds for the correction terms. 
If the pointwise constraints (10.29b), (10.29c) in (10.30a)–(10.30f), (10.30f’) are  
averaged with respect to s comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f Baselines, s j+1 ≤s ≤s f , then functions of the type (10.37c) arise, 
cf. (10.30b’), (10.30c’), which can be linearized again by the same techniques as dis-
cussed above. In this case, linear constraints are obtained forDelta beta left parenthesis s right parenthesis comma Delta q Subscript e Baseline left parenthesis s right parenthesis comma s Subscript j plus 1 Baseline less than or equals s less than or equals s Subscript f BaselineΔβ(s), Δqe(s), s j+1 ≤
s ≤s f , with constraint functions of the type (10.39a)–(10.39c), cf. also (10.68a). 
10.5.3.4 
Combination of Discretization and Linearization 
Obviously, the methods described brieﬂy in Sects. 10.5.3.1 and 10.5.3.2 can be 
combined in the following way, cf. Fig. 10.4. 
First, by means of discretization (Finite Element Methods), an approximate opti-
mal control law left parenthesis q overTilde Subscript e Superscript asterisk Baseline comma beta Superscript asterisk Baseline right parenthesis(˜q∗
e , β∗) is searched in a class of ﬁnitely generated functions of 
the type (10.64a), (10.64b). Corresponding to (10.66a), (10.66b), by means of Tay-
lor expansion here the optimal coefﬁcients ModifyingAbove q With caret Subscript l Superscript asterisk Baseline comma ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline comma l equals 1 comma ellipsis comma l Subscript q Baseline left parenthesis l Subscript beta Baseline right parenthesisˆq∗
l , ˆβ∗
l ,l = 1, . . . ,lq(lβ), in the corre-
sponding linear combination of type (10.64a), (10.64b) are represented, cf. (10.64c), 
(10.64d), by 
StartLayout 1st Row 1st Column ModifyingAbove q With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With caret Subscript l Superscript asterisk Baseline left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus StartFraction partial differential ModifyingAbove q With caret Subscript l Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis left parenthesis zeta minus zeta 0 comma zeta Subscript f Baseline minus zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus ellipsis comma 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus StartFraction partial differential ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis left parenthesis zeta minus zeta 0 comma zeta Subscript f Baseline minus zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus ellipsis comma EndLayoutˆq∗
l (ζ, ζ f ) = ˆq∗
l
(
ζ0, ζ (0)
f
)
+ ∂ˆq∗
l
∂ˆζ
(ζ0, ζ (0)
f )
(
ζ −ζ0, ζ f −ζ (0)
f
)
+ . . . ,
(10.69a) 
StartLayout 1st Row 1st Column ModifyingAbove q With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove q With caret Subscript l Superscript asterisk Baseline left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus StartFraction partial differential ModifyingAbove q With caret Subscript l Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis left parenthesis zeta minus zeta 0 comma zeta Subscript f Baseline minus zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus ellipsis comma 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline left parenthesis zeta comma zeta Subscript f Baseline right parenthesis 2nd Column equals ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus StartFraction partial differential ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis left parenthesis zeta minus zeta 0 comma zeta Subscript f Baseline minus zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis plus ellipsis comma EndLayout ˆβ∗
l (ζ, ζ f ) = ˆβ∗
l
(
ζ0, ζ (0)
f
)
+ ∂ˆβ∗
l
∂ˆζ
(
ζ0, ζ (0)
f
) (
ζ −ζ0, ζ f −ζ (0)
f
)
+ . . . ,
(10.69b) 
l equals 1 comma ellipsis comma l Subscript q Baseline left parenthesis l Subscript beta Baseline right parenthesisl = 1, . . . ,lq(lβ). Here, the derivatives 
StartFraction partial differential ModifyingAbove q With caret Subscript l Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis comma StartFraction partial differential ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline Over partial differential ModifyingAbove zeta With caret EndFraction left parenthesis zeta 0 comma zeta Subscript f Superscript left parenthesis 0 right parenthesis Baseline right parenthesis comma ellipsis comma l equals 1 comma ellipsis comma l Subscript q Baseline left parenthesis l Subscript beta Baseline right parenthesis∂ˆq∗
l
∂ˆζ
(
ζ0, ζ (0)
f
)
, ∂ˆβ∗
l
∂ˆζ
(
ζ0, ζ (0)
f
)
, . . . ,l = 1, . . . ,lq(lβ)
(10.69c) 
can be determined again by sensitivity analysis [48] of a ﬁnite dimensional parameter-
dependent optimization problem which may be much simpler than the sensitiv-
ity analysis of the parameter-dependent variational problem (10.58a)–(10.58f) or  
(10.59)–(10.59d). 
Stating the necessary (and under additional conditions also sufﬁcient) Kuhn-
Tucker conditions for the optimal coefﬁcients ModifyingAbove q With caret Subscript l Superscript asterisk Baseline comma ModifyingAbove beta With caret Subscript l Superscript asterisk Baseline comma l equals 1 comma ellipsis comma l Subscript q Baseline left parenthesis l Subscript beta Baseline right parenthesisˆq∗
l , ˆβ∗
l ,l = 1, . . . ,lq(lβ), formulas  
for the derivatives (10.69c) may be obtained by partial differentiation with respect 
to the complete vector z equals left parenthesis zeta comma zeta Subscript f Baseline right parenthesisz = (ζ, ζ f ) of initial/terminal parameters.

256
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
10.6 Online Control Corrections: PD-Controller 
We now consider the control of the robot at thej j-th stage, i.e., for timet greater than or equals t Subscript jt ≥t j, see  [  1, 
2, 4, 7, 14, 15]. In practice we have random variations of the vector pp of the model 
parameters of the robot and its environment, moreover, there are possible deviations 
of the true initial state left parenthesis q Subscript j Baseline comma ModifyingAbove q With dot Subscript j Baseline right parenthesis colon equals left parenthesis q left parenthesis t Subscript j Baseline right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline right parenthesis right parenthesis(q j, ˙q j) :=
(
q(t j), ˙q(t j)
)
in conﬁguration space from the 
corresponding initial values left parenthesis ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline right parenthesis equals left parenthesis ModifyingAbove q With quotation dash Subscript j Baseline comma q Subscript e Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Subscript j Baseline right parenthesis StartRoot beta Subscript j Baseline EndRoot right parenthesis(q j, ˙q j) =
(
q j, q( j)'
e
(s j)√β j
)
of the (OSTP) at stage 
j j. Thus, the actual trajectory 
q left parenthesis t right parenthesis equals q left parenthesis t comma p Subscript upper D Baseline comma q Subscript j Baseline comma ModifyingAbove q With dot Subscript j Baseline comma u left parenthesis dot right parenthesis right parenthesis comma t greater than or equals t Subscript j Baselineq(t) = q
(
t, pD, q j, ˙q j, u(·)
)
, t ≥t j
(10.70a) 
in conﬁguration space of the robot will deviate more or less from the optimal reference 
trajectory 
q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis equals q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis equals q left parenthesis t comma ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline comma u Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis commaq( j)(t) = q( j)
e
(
s( j)(t)
)
= q
(
t, p( j)
D , q j, ˙q j, u( j)(·)
)
,
(10.70b) 
see (10.45a), (10.45b), (10.46a)–(10.46f), (10.50a), (10.50b) and (10.51c). In the fol-
lowing we assume that the stateleft parenthesis q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesis
(
q(t), ˙q(t)
)
in conﬁguration space may be observed 
fort greater than t Subscript jt > t j. Now, in order to deﬁne an appropriate control correction (feedback control 
law), see (10.2) and Fig. 10.3, 
Delta u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis equals u left parenthesis t right parenthesis minus u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline commaΔu( j)(t) = u(t) −u( j)(t) := ϕ( j) (
t, Δz( j)(t)
)
,
t ≥t j,
(10.71a) 
for the compensation of the tracking error 
Delta z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals z left parenthesis t right parenthesis minus z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma z left parenthesis t right parenthesis colon equals StartBinomialOrMatrix q left parenthesis t right parenthesis Choose ModifyingAbove q With dot left parenthesis t right parenthesis EndBinomialOrMatrix comma z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals StartBinomialOrMatrix q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Choose ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis EndBinomialOrMatrix commaΔz( j)(t) := z(t) −z( j)(t),
z(t) :=
(q(t)
˙q(t)
)
,
z( j)(t) :=
(q( j)(t)
˙q( j)(t)
)
,
(10.71b) 
where phi Superscript left parenthesis j right parenthesis Baseline equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta q comma ModifyingAbove Delta With dot q right parenthesisϕ( j) = ϕ( j)(t, Δq, ˙Δq) is such a function that 
phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 right parenthesis equals 0 f o r a l l t greater than or equals t Subscript j Baseline commaϕ( j)(t, 0, 0) = 0 for all t ≥t j,
(10.71c) 
the trajectoriesq left parenthesis t right parenthesisq(t) andq Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineq( j)(t), t ≥t j, are embedded into a one-parameter family of 
trajectoriesq equals q left parenthesis t comma epsilon right parenthesis comma t greater than or equals t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1q = q(t, ∈), t ≥t j, 0 ≤∈≤1, in conﬁguration space which are deﬁned 
as follows: 
Consider ﬁrst the following initial data for stage j j: 
StartLayout 1st Row 1st Column q Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript j Baseline plus epsilon Delta q Subscript j Baseline comma Delta q Subscript j Baseline colon equals q Subscript j Baseline minus ModifyingAbove q With quotation dash Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline plus epsilon ModifyingAbove Delta With dot q Subscript j Baseline comma ModifyingAbove Delta With dot q Subscript j Baseline colon equals ModifyingAbove q With dot Subscript j Baseline minus ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column p Subscript upper D Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline plus epsilon Delta p Subscript upper D Baseline comma Delta p Subscript upper D Baseline colon equals p Subscript upper D Baseline minus ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma 0 less than or equals epsilon less than or equals 1 period EndLayoutq j(∈) := q j + ∈Δq j,
Δq j := q j −q j
(10.72a) 
StartLayout 1st Row 1st Column q Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript j Baseline plus epsilon Delta q Subscript j Baseline comma Delta q Subscript j Baseline colon equals q Subscript j Baseline minus ModifyingAbove q With quotation dash Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline plus epsilon ModifyingAbove Delta With dot q Subscript j Baseline comma ModifyingAbove Delta With dot q Subscript j Baseline colon equals ModifyingAbove q With dot Subscript j Baseline minus ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column p Subscript upper D Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline plus epsilon Delta p Subscript upper D Baseline comma Delta p Subscript upper D Baseline colon equals p Subscript upper D Baseline minus ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma 0 less than or equals epsilon less than or equals 1 period EndLayout˙q j(∈) := ˙q j + ∈˙Δq j,
˙Δq j := ˙q j −˙q j
(10.72b) 
StartLayout 1st Row 1st Column q Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript j Baseline plus epsilon Delta q Subscript j Baseline comma Delta q Subscript j Baseline colon equals q Subscript j Baseline minus ModifyingAbove q With quotation dash Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline plus epsilon ModifyingAbove Delta With dot q Subscript j Baseline comma ModifyingAbove Delta With dot q Subscript j Baseline colon equals ModifyingAbove q With dot Subscript j Baseline minus ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column p Subscript upper D Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline plus epsilon Delta p Subscript upper D Baseline comma Delta p Subscript upper D Baseline colon equals p Subscript upper D Baseline minus ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma 0 less than or equals epsilon less than or equals 1 period EndLayoutpD(∈) := p( j)
D + ∈ΔpD,
ΔpD := pD −p( j)
D ,
0 ≤∈≤1.
(10.72c)

10.6 Online Control Corrections: PD-Controller
257
Fig. 10.3 Control 
of 
dynamic 
systems 
(robots). 
Here, 
z left parenthesis t right parenthesis colon equals left parenthesis q left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis right parenthesisz(t) :=
(
q(t), ˙q(t)
)
, 
z Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis colon equals left parenthesis q Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis 0 right parenthesis Baseline left parenthesis t right parenthesis right parenthesisz(0)(t) :=
(
q(0)(t), ˙q(0)(t)
)
Fig. 10.4 Adaptive optimal stochastic trajectore planning and control (AOSTPC)

258
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
Moreover, deﬁne the control input u left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineu(t), t ≥t j, by (10.71a), hence, 
StartLayout 1st Row 1st Column u left parenthesis t right parenthesis 2nd Column equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus Delta u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline period EndLayoutu(t) = u( j)(t) + Δu( j)(t)
= u( j)(t) + ϕ( j) (
t, q(t) −q( j)(t), ˙q(t) −˙q( j)(t)
)
, t ≥t j.
(10.72d) 
Let then denote 
q left parenthesis t comma epsilon right parenthesis equals q left parenthesis t comma p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q Subscript j Baseline left parenthesis epsilon right parenthesis comma ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis comma u left parenthesis dot right parenthesis right parenthesis comma 0 less than or equals epsilon less than or equals 1 comma t greater than or equals t Subscript j Baseline commaq(t, ∈) = q
(
t, pD(∈), q j(∈), ˙q j(∈), u(·)
)
,
0 ≤∈≤1, t ≥t j,
(10.73) 
the solution of the following initial value problem consisting of the dynamic equation 
(10.4a) with the initial values, the vector of dynamic parameters and the total control 
input u left parenthesis t right parenthesisu(t) given by (10.72a)–(10.72d) (Fig. 10.4): 
upper F left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q left parenthesis t comma epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis comma q With two dots left parenthesis t comma epsilon right parenthesis right parenthesis equals u left parenthesis t comma epsilon right parenthesis comma 0 less than or equals epsilon less than or equals 1 comma t greater than or equals t Subscript j Baseline commaF (pD(∈), q(t, ∈), ˙q(t, ∈), ¨q(t, ∈)) = u(t, ∈),
0 ≤∈≤1, t ≥t j,
(10.74a) 
where 
StartLayout 1st Row 1st Column Blank 2nd Column q left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals q Subscript j Baseline left parenthesis epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column u left parenthesis t comma epsilon right parenthesis colon equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma EndLayoutq(t j, ∈) = q j(∈),
˙q(t j, ∈) = ˙q j(∈),
(10.74b) 
StartLayout 1st Row 1st Column Blank 2nd Column q left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals q Subscript j Baseline left parenthesis epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column u left parenthesis t comma epsilon right parenthesis colon equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma EndLayoutu(t, ∈) := u( j)(t) + ϕ( j)(
t, q(t, ∈) −q( j)(t), ˙q(t, ∈) −˙q( j)(t)
)
,
(10.74c) 
and upper F equals upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesisF = F(pD, q, ˙q, ¨q) is deﬁned, cf. (10.4a), by 
upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis colon equals upper M left parenthesis p Subscript upper D Baseline comma q right parenthesis q With two dots plus h left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis periodF(pD, q, ˙q, ¨q) := M(pD, q)¨q + h(pD, q, ˙q).
(10.74d) 
In the following we suppose [ 22] that the initial value problem (10.74a)–(10.74d) 
has a unique solution q equals q left parenthesis t comma epsilon right parenthesis comma t greater than or equals t Subscript j Baselineq = q(t, ∈), t ≥t j, for each parameter value epsilon comma 0 less than or equals epsilon less than or equals 1∈, 0 ≤∈≤1. 
10.6.1 
Basic Properties of the Embedding q left parenthesis t comma epsilon right parenthesisq(t, ∈)
10.6.1.1 
epsilon equals epsilon 0 colon equals 0∈= ∈0 := 0
Because of condition (10.71c) of the feedback control law phi Superscript left parenthesis j right parenthesisϕ( j) to be determined, 
and due to the unique solvability assumption of the initial value problem (10.74a)– 
(10.74d) at the j j-th stage, for epsilon equals 0∈= 0 we have that 
q left parenthesis t comma 0 right parenthesis equals q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline periodq(t, 0) = q( j)(t),
t ≥t j.
(10.75a) 
epsilon equals epsilon 1 colon equals 1∈= ∈1 := 1
According to (10.70a), (10.71a)–(10.71c) and (10.72a)–(10.72d), 
q left parenthesis t comma 1 right parenthesis equals q left parenthesis t right parenthesis equals q left parenthesis t comma p Subscript upper D Baseline comma q Subscript j Baseline comma ModifyingAbove q With dot Subscript j Baseline comma u left parenthesis dot right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline commaq(t, 1) = q(t) = q
(
t, pD, q j, ˙q j, u(·)
)
,
t ≥t j,
(10.75b)

10.6 Online Control Corrections: PD-Controller
259
is the actual trajectory in conﬁguration space under the total control input u left parenthesis t right parenthesis equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus Delta u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineu(t) =
u( j)(t) + Δu( j)(t), t ≥t j, given by (10.72d). 
Taylor expansion with respect to epsilon∈. 
Let Delta epsilon equals epsilon 1 minus epsilon 0 equals 1Δ∈= ∈1 −∈0 = 1, and suppose that the following property known from 
parameter-dependent differential equations, cf. [ 22], holds. 
Assumption 10.1 The solution q equals q left parenthesis t comma epsilon right parenthesis comma t greater than or equals t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1q = q(t, ∈), t ≥t j, 0 ≤∈≤1, of the initial value 
problem (10.72a)–(10.72d) has continuous derivatives with respect to epsilon∈up to order 
nu greater than 1ν > 1 for all t Subscript j Baseline less than or equals t less than or equals t Subscript j Baseline plus Delta t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1t j ≤t ≤t j + Δt j, 0 ≤∈≤1, with a certain Delta t Subscript j Baseline greater than 0Δt j > 0. 
Note that left parenthesis t comma epsilon right parenthesis right arrow q left parenthesis t comma epsilon right parenthesis comma t greater than or equals t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1(t, ∈) →q(t, ∈), t ≥t j, 0 ≤∈≤1, can be interpreted as a homotopy 
from the reference trajectory q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesisq( j)(t) to the actual trajectory q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineq(t), t ≥t j, cf.  [  39]. 
Based on the above assumption and (10.75a), (10.75b), by Taylor expansion with 
respect to epsilon∈at epsilon equals epsilon 0 equals 0∈= ∈0 = 0, the actual trajectory of the robot can be represented by 
StartLayout 1st Row 1st Column q left parenthesis t right parenthesis 2nd Column equals q left parenthesis t comma p Subscript upper D Baseline comma q Subscript j Baseline comma ModifyingAbove q With dot Subscript j Baseline comma u left parenthesis dot right parenthesis right parenthesis equals q left parenthesis t comma 1 right parenthesis equals q left parenthesis t comma epsilon 0 plus Delta epsilon right parenthesis 2nd Row 1st Column Blank 2nd Column equals q left parenthesis t comma 0 right parenthesis plus Delta q left parenthesis t right parenthesis equals q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus Delta q left parenthesis t right parenthesis comma EndLayoutq(t) = q
(
t, pD, q j, ˙q j, u(·)
)
= q(t, 1) = q(t, ∈0 + Δ∈)
= q(t, 0) + Δq(t) = q( j)(t) + Δq(t),
(10.76a) 
where the expansion of the tracking error Delta q left parenthesis t right parenthesis comma t greater than or equals t Subscript j BaselineΔq(t), t ≥t j, is given by 
StartLayout 1st Row 1st Column Delta q left parenthesis t right parenthesis 2nd Column equals sigma summation Underscript l equals 1 Overscript nu minus 1 Endscripts StartFraction 1 Over l factorial EndFraction d Superscript l Baseline q left parenthesis t right parenthesis left parenthesis Delta epsilon right parenthesis Superscript l Baseline plus StartFraction 1 Over nu factorial EndFraction StartFraction partial differential Superscript nu Baseline q Over partial differential epsilon Superscript nu Baseline EndFraction left parenthesis t comma theta right parenthesis left parenthesis Delta epsilon right parenthesis Superscript nu Baseline 2nd Row 1st Column Blank 2nd Column equals sigma summation Underscript l equals 1 Overscript nu minus 1 Endscripts StartFraction 1 Over l factorial EndFraction d Superscript l Baseline q left parenthesis t right parenthesis plus StartFraction 1 Over nu factorial EndFraction StartFraction partial differential Superscript nu Baseline q Over partial differential epsilon Superscript nu Baseline EndFraction left parenthesis t comma theta right parenthesis comma t greater than or equals t Subscript j Baseline period EndLayoutΔq(t) =
ν−1
∑
l=1
1
l!dlq(t)(Δ∈)l + 1
ν!
∂νq
∂∈ν (t, ϑ)(Δ∈)ν
=
ν−1
∑
l=1
1
l!dlq(t) + 1
ν!
∂νq
∂∈ν (t, ϑ),
t ≥t j.
(10.76b) 
Here, theta equals theta left parenthesis t comma nu right parenthesis comma 0 less than theta less than 1ϑ = ϑ(t, ν), 0 < ϑ < 1, and 
d Superscript l Baseline q left parenthesis t right parenthesis colon equals StartFraction partial differential Superscript l Baseline q Over partial differential epsilon Superscript l Baseline EndFraction left parenthesis t comma 0 right parenthesis comma t greater than or equals t Subscript j Baseline comma l equals 1 comma 2 comma ellipsisdlq(t) := ∂lq
∂∈l (t, 0),
t ≥t j,l = 1, 2, . . .
(10.76c) 
denote the ll-th order differentials of q equals q left parenthesis t comma epsilon right parenthesisq = q(t, ∈) with respect to epsilon∈at epsilon equals epsilon 0 equals 0∈= ∈0 = 0. 
Obviously, differential equations for the differentials d Superscript l Baseline q left parenthesis t right parenthesis comma l equals 1 comma 2 comma ellipsis commadlq(t),l = 1, 2, . . . , may be 
obtained, cf. [ 22], by successive differentiation of the initial value problem (10.74a)– 
(10.74d) with respect to epsilon∈at epsilon 0 equals 0∈0 = 0. 
Furthermore, based on the Taylor expansion of the tracking error Delta q left parenthesis t right parenthesis comma t greater than or equals t Subscript j BaselineΔq(t), t ≥
t j, using some stability requirements, the tensorial coefﬁcients bold upper D Subscript z Superscript l Baseline phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis comma l equals 1 comma 2 comma ellipsis commaDl
zϕ( j)(t, 0),l =
1, 2, . . . , of the Taylor expansion 
phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta z right parenthesis equals sigma summation Underscript l equals 1 Overscript normal infinity Endscripts bold upper D Subscript z Superscript l Baseline phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis dot left parenthesis Delta z right parenthesis Superscript lϕ( j)(t, Δz) =
∞
∑
l=1
Dl
zϕ( j)(t, 0) · (Δz)l
(10.76d) 
of the feedback control law phi Superscript left parenthesis j right parenthesis Baseline equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta z right parenthesisϕ( j) = ϕ( j)(t, Δz) can be determined at the same time.

260
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
10.6.2 
The First-Order Differential d qdq
Next we have to introduce some deﬁnitions. Corresponding to (10.71b) and (10.73) 
we put 
z left parenthesis t comma epsilon right parenthesis colon equals StartBinomialOrMatrix q left parenthesis t comma epsilon right parenthesis Choose ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis EndBinomialOrMatrix comma t greater than or equals t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1 semicolonz(t, ∈) :=
(q(t, ∈)
˙q(t, ∈)
)
,
t ≥t j, 0 ≤∈≤1;
(10.77a) 
then, we deﬁne the following Jacobians of the function upper FF given by (10.74d): 
StartLayout 1st Row 1st Column upper K left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript q Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals bold upper D Subscript q Baseline upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper D left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper F Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals h Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis period EndLayoutK(pD, q, ˙q, ¨q) := Fq(pD, q, ˙q, ¨q) = Dq F(pD, q, ˙q, ¨q)
(10.77b) 
StartLayout 1st Row 1st Column upper K left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript q Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals bold upper D Subscript q Baseline upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper D left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper F Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals h Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis period EndLayoutD(pD, q, ˙q) := F˙q(pD, q, ˙q, ¨q) = h ˙q(pD, q, ˙q).
(10.77c) 
Moreover, it is 
upper M left parenthesis p Subscript upper D Baseline comma q right parenthesis equals upper F Subscript q With two dots Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis commaM(pD, q) = F¨q(pD, q, ˙q, ¨q),
(10.77d) 
and due to the linear parameterization property of robots, see Remark 10.2, upper FF may 
be represented by 
upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals upper Y left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis p Subscript upper DF(pD, q, ˙q, ¨q) = Y(q, ˙q, ¨q)pD
(10.77e) 
with a certain matrix function upper Y equals upper Y left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesisY = Y(q, ˙q, ¨q). 
By differentiation of (10.74a)–(10.77d) with respect toepsilon∈, for the partial derivative 
StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis∂q
∂∈(t, ∈) of q equals q left parenthesis t comma epsilon right parenthesisq = q(t, ∈) with respect to epsilon∈we ﬁnd, cf. (10.71b), the following linear 
initial value problem (error differential equation) 
StartLayout 1st Row 1st Column Blank 2nd Column upper Y left parenthesis q left parenthesis t comma epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis comma q With two dots left parenthesis t comma epsilon right parenthesis right parenthesis Delta p Subscript upper D Baseline plus upper K left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q left parenthesis t comma epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis comma q With two dots left parenthesis t comma epsilon right parenthesis right parenthesis StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Row 1st Column plus 2nd Column upper D left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q left parenthesis t comma epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis right parenthesis StartFraction d Over d t EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis plus upper M left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q left parenthesis t comma epsilon right parenthesis right parenthesis StartFraction d squared Over d t squared EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 3rd Row 1st Column Blank 2nd Column equals StartFraction partial differential u Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis equals StartFraction partial differential phi Superscript left parenthesis j right parenthesis Baseline Over partial differential z EndFraction left parenthesis t comma Delta z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis StartFraction partial differential z Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis EndLayoutY
(
q(t, ∈), ˙q(t, ∈), ¨q(t, ∈)
)
ΔpD + K
(
pD(∈), q(t, ∈), ˙q(t, ∈), ¨q(t, ∈)
)∂q
∂∈(t, ∈)
+D
(
pD(∈), q(t, ∈), ˙q(t, ∈)
) d
dt
∂q
∂∈(t, ∈) + M
(
pD(∈), q(t, ∈)
) d2
dt2
∂q
∂∈(t, ∈)
= ∂u
∂∈(t, ∈) = ∂ϕ( j)
∂z
(
t, Δz( j)(t)
)∂z
∂∈(t, ∈)
(10.78a) 
with the initial values, see (10.72a), (10.72b), 
StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals Delta q Subscript j Baseline comma StartFraction d Over d t EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals ModifyingAbove Delta With dot q Subscript j Baseline period∂q
∂∈(t j, ∈) = Δq j, d
dt
∂q
∂∈(t j, ∈) = ˙Δq j.
(10.78b) 
Putting now epsilon equals epsilon 0 equals 0∈= ∈0 = 0, because of (10.71a), (10.71b) and (10.75a), system 
(10.78a), (10.78b) yields then this system of second-order differential equations 
for the ﬁrst-order differential d q left parenthesis t right parenthesis equals StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma 0 right parenthesis colondq(t) = ∂q
∂∈(t, 0) :
StartLayout 1st Row 1st Column Blank 2nd Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline plus upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis d q left parenthesis t right parenthesis plus upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis ModifyingAbove d With dot q left parenthesis t right parenthesis plus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis d With two dots q left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column equals d u left parenthesis t right parenthesis equals phi Subscript z Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis d z left parenthesis t right parenthesis equals phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis d q left parenthesis t right parenthesis plus phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis ModifyingAbove d With dot q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline comma EndLayoutY ( j)(t)ΔpD + K ( j)(t)dq(t) + D( j)(t) ˙dq(t) + M( j)(t) ¨dq(t)
= du(t) = ϕ( j)
z
(t, 0)dz(t) = ϕ( j)
q (t, 0)dq(t) + ϕ( j)
˙q (t, 0) ˙dq(t), t ≥t j,
(10.79a)

10.6 Online Control Corrections: PD-Controller
261
with the initial values 
d q left parenthesis t Subscript j Baseline right parenthesis equals Delta q Subscript j Baseline comma ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis equals ModifyingAbove Delta With dot q Subscript j Baseline perioddq(t j) = Δq j,
˙dq(t j) = ˙Δq j.
(10.79b) 
Here, 
StartLayout 1st Row 1st Column d u left parenthesis t right parenthesis 2nd Column colon equals StartFraction partial differential u Over partial differential epsilon EndFraction left parenthesis t comma 0 right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column d z left parenthesis t right parenthesis 2nd Column colon equals StartBinomialOrMatrix d q left parenthesis t right parenthesis Choose ModifyingAbove d With dot q left parenthesis t right parenthesis comma EndBinomialOrMatrix comma ModifyingAbove d With dot q colon equals StartFraction d Over d t EndFraction d q comma d With two dots q colon equals StartFraction d squared Over d t squared EndFraction d q comma EndLayoutdu(t) := ∂u
∂∈(t, 0),
(10.79c) 
StartLayout 1st Row 1st Column d u left parenthesis t right parenthesis 2nd Column colon equals StartFraction partial differential u Over partial differential epsilon EndFraction left parenthesis t comma 0 right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column d z left parenthesis t right parenthesis 2nd Column colon equals StartBinomialOrMatrix d q left parenthesis t right parenthesis Choose ModifyingAbove d With dot q left parenthesis t right parenthesis comma EndBinomialOrMatrix comma ModifyingAbove d With dot q colon equals StartFraction d Over d t EndFraction d q comma d With two dots q colon equals StartFraction d squared Over d t squared EndFraction d q comma EndLayoutdz(t) :=
(dq(t)
˙dq(t),
)
,
˙dq := d
dt dq,
¨dq := d2
dt2 dq,
(10.79d) 
and the matrices upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesisY ( j)(t), K ( j)(t), D( j)(t) and upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesisM( j)(t) are deﬁned, cf. (10.77b)– 
(10.77e), by 
StartLayout 1st Row 1st Column Blank 2nd Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper Y left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper K left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper D left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis period EndLayoutY ( j)(t) := Y
(
q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
(10.79e) 
StartLayout 1st Row 1st Column Blank 2nd Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper Y left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper K left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper D left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis period EndLayoutK ( j)(t) := K
(
p( j)
D , q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
(10.79f) 
StartLayout 1st Row 1st Column Blank 2nd Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper Y left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper K left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper D left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis period EndLayoutD( j)(t) := D
(
p( j)
D , q( j)(t), ˙q( j)(t)
)
,
M( j)(t) := M
(
p( j)
D , q( j)(t)
)
.
(10.79g) 
Local (PD-) control correctionsd u equals d u left parenthesis t right parenthesisdu = du(t) stabilizing system (10.79a), (10.79b) 
can now be obtained by the following deﬁnition of the Jacobian of phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma z right parenthesisϕ( j)(t, z) with 
respect to zz at z equals 0z = 0: 
StartLayout 1st Row 1st Column phi Subscript z Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis 2nd Column colon equals upper F Subscript z Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis left parenthesis upper K Subscript p Baseline comma upper K Subscript d Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left parenthesis upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript p Baseline comma upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript d Baseline right parenthesis comma EndLayoutϕ( j)
z (t, 0) := Fz
(
p( j)
D , q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
−M( j)(t)(K p, Kd)
=
(
K ( j)(t) −M( j)(t)K p, D( j)(t) −M( j)(t)Kd
)
,
(10.80) 
where upper K Subscript p Baseline equals left parenthesis gamma Subscript p k Baseline delta Subscript k nu Baseline right parenthesis comma upper K Subscript d Baseline equals left parenthesis gamma Subscript d k Baseline delta Subscript k nu Baseline right parenthesisK p = (γpkδkν), Kd = (γdkδkν) are positive deﬁnite diagonal matrices with 
positive diagonal elements gamma Subscript p k Baseline comma gamma Subscript d k Baseline greater than 0 comma k equals 1 comma ellipsis comma nγpk, γdk > 0, k = 1, . . . , n. 
Inserting (10.80) into (10.79a), and assuming that upper M Superscript left parenthesis j right parenthesis Baseline equals upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesisM( j) = M( j)(t) is regular [ 4] 
fort greater than or equals t Subscript jt ≥t j, we ﬁnd the following linear system of second-order differential equations 
for d q equals d q left parenthesis t right parenthesisdq = dq(t): 
StartLayout 1st Row 1st Column Blank 2nd Column d With two dots q left parenthesis t right parenthesis plus upper K Subscript d Baseline ModifyingAbove d With dot q left parenthesis t right parenthesis plus upper K Subscript p Baseline d q left parenthesis t right parenthesis equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline comma t greater than or equals t Subscript j Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column d q left parenthesis t Subscript j Baseline right parenthesis equals Delta q Subscript j Baseline comma ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis equals ModifyingAbove Delta With dot q Subscript j Baseline period EndLayout ¨dq(t) + Kd ˙dq(t) + K pdq(t) = −M( j)(t)−1Y ( j)(t)ΔpD,
t ≥t j,
(10.81a) 
StartLayout 1st Row 1st Column Blank 2nd Column d With two dots q left parenthesis t right parenthesis plus upper K Subscript d Baseline ModifyingAbove d With dot q left parenthesis t right parenthesis plus upper K Subscript p Baseline d q left parenthesis t right parenthesis equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline comma t greater than or equals t Subscript j Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column d q left parenthesis t Subscript j Baseline right parenthesis equals Delta q Subscript j Baseline comma ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis equals ModifyingAbove Delta With dot q Subscript j Baseline period EndLayoutdq(t j) = Δq j,
˙dq(t j) = ˙Δq j.
(10.81b) 
Considering the right-hand side of (10.81a), according to (10.79e), (10.77e) and 
(10.74d) we have that 
StartLayout 1st Row 1st Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline 2nd Column equals upper Y left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Delta p Subscript upper D Baseline equals upper F left parenthesis Delta p Subscript upper D Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper M left parenthesis Delta p Subscript upper D Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus h left parenthesis Delta p Subscript upper D Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis period EndLayoutY ( j)(t)ΔpD = Y
(
q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
ΔpD = F
(
ΔpD, q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
= M
(
ΔpD, q( j)(t)
)
¨q( j)(t) + h
(
ΔpD, q( j)(t), ˙q( j)(t)
)
.
(10.82a) 
Using the deﬁnition (10.50a), (10.50b) ofq Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesisq( j)(t) and the representation (10.19a), 
(10.19b) of ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis˙q( j)(t), ¨q( j)(t), we get

262
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
StartLayout 1st Row 1st Column Blank 2nd Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline 2nd Row 1st Column Blank 2nd Column equals upper M left parenthesis Delta p Subscript upper D Baseline comma q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis right parenthesis left parenthesis q Subscript e Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis one half beta Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column plus q Subscript e Superscript left parenthesis j right parenthesis Super Superscript double prime Superscript Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column plus h left parenthesis Delta p Subscript upper D Baseline comma q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma q Subscript e Superscript left parenthesis j right parenthesis Super Superscript prime Superscript Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis EndRoot right parenthesis period EndLayoutY ( j)(t)ΔpD
= M
(
ΔpD, q( j)
e
(
s( j)(t)
)) (
q( j)'
e
(
s( j)(t)
)1
2β( j)'(
s( j)(t)
)
+q( j)''
e
(
s( j)(t)
)
β( j)(
s( j)(t)
))
+ h
(
ΔpD, q( j)
e
(
s( j)(t)
)
, q( j)'
e
(
s( j)(t)
)/
β( j)
(
s( j)(t)
))
.
(10.82b) 
From (10.20b) we now obtain the following important representations, where we 
suppose that the feedforward control u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineu( j)(t), t ≥t j, is given by (10.51c), (10.51d). 
Lemma 10.1 The following representations hold: 
(a) 
upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline equals u Subscript e Baseline left parenthesis Delta p Subscript upper D Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline semicolonY ( j)(t)ΔpD = ue
(
ΔpD, s( j)(t); q( j)
e (·), β( j)(·)
)
,
t ≥t j;
(10.83a) 
(b) 
u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis equals u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline semicolonu( j)(t) = ue
(
p( j)
D , s( j)(t); q( j)
e (·), β( j)(·)
)
,
t ≥t j;
(10.83b) 
(c) 
u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline periodu( j)(t) + Y ( j)(t)ΔpD = ue
(
pD, s( j)(t); q( j)
e (·), β( j)(·)
)
,
t ≥t j.
(10.83c) 
Proof The ﬁrst equation follows from (10.82b) and (10.20b). Equations (10.51c), 
(10.19a), (10.19b) and (10.20b) yield (10.83b). Finally, (10.83c) follows from 
(10.83a), (10.83b) and the linear parameterization of robots, cf. Remark 10.2.
⬜
Remark 10.12 Note that according to the transformation (10.20a) of the dynamic 
equation onto the ss-domain, for the control input u left parenthesis t right parenthesisu(t) we have the representation 
StartLayout 1st Row 1st Column u left parenthesis t right parenthesis 2nd Column equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis plus u Subscript e Baseline left parenthesis Delta p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis EndLayoutu(t) = ue (pD, s; qe(·), β(·))
= ue
(
p( j)
D , s; qe(·), β(·)
)
+ ue (ΔpD, s; qe(·), β(·))
(10.83d) 
with s equals s left parenthesis t right parenthesiss = s(t). 
Using (10.79d), it is easy to see that (10.81a), (10.81b) can be described also by the 
ﬁrst-order initial value problem 
StartLayout 1st Row 1st Column ModifyingAbove d With dot z left parenthesis t right parenthesis 2nd Column equals upper A d z left parenthesis t right parenthesis plus StartBinomialOrMatrix 0 Choose psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis EndBinomialOrMatrix comma t greater than or equals t Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column d z left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta z Subscript j Baseline equals StartBinomialOrMatrix q Subscript j Baseline minus ModifyingAbove q With quotation dash Subscript j Baseline Choose ModifyingAbove q With dot Subscript j Baseline minus ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline EndBinomialOrMatrix comma EndLayout ˙dz(t) = Adz(t) +
(0
ψ( j,1)(t)
)
,
t ≥t j
(10.84a) 
StartLayout 1st Row 1st Column ModifyingAbove d With dot z left parenthesis t right parenthesis 2nd Column equals upper A d z left parenthesis t right parenthesis plus StartBinomialOrMatrix 0 Choose psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis EndBinomialOrMatrix comma t greater than or equals t Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column d z left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta z Subscript j Baseline equals StartBinomialOrMatrix q Subscript j Baseline minus ModifyingAbove q With quotation dash Subscript j Baseline Choose ModifyingAbove q With dot Subscript j Baseline minus ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline EndBinomialOrMatrix comma EndLayoutdz(t j) = Δz j =
(q j −q j
˙q j −˙q j
)
,
(10.84b)

10.6 Online Control Corrections: PD-Controller
263
where upper AA is the stability or Hurwitz matrix 
upper A colon equals Start 2 By 2 Matrix 1st Row 1st Column 0 2nd Column upper I 2nd Row 1st Column minus upper K Subscript p Baseline 2nd Column minus upper K Subscript d Baseline EndMatrix commaA :=
(
0
I
−K p −Kd
)
,
(10.84c) 
and psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesisψ( j,1)(t) is deﬁned, cf. (10.83a), by 
StartLayout 1st Row 1st Column psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline 2nd Row 1st Column Blank 2nd Column equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline u Subscript e Baseline left parenthesis Delta p Subscript upper D Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis period EndLayoutψ( j,1)(t) := −M( j)(t)−1Y ( j)(t)ΔpD
= −M( j)(t)−1ue
(
ΔpD, s( j)(t); q( j)
e (·), β( j)(·)
)
.
(10.84d) 
Consequently, for the ﬁrst-order expansion term d z left parenthesis t right parenthesisdz(t) of the deviation Delta z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesisΔz( j)(t)
between the actual state 
z left parenthesis t right parenthesis equals StartBinomialOrMatrix q left parenthesis t right parenthesis Choose ModifyingAbove q With dot left parenthesis t right parenthesis EndBinomialOrMatrixz(t) =
(q(t)
˙q(t)
)
and the prescribed state 
z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis equals StartBinomialOrMatrix q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Choose ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis EndBinomialOrMatrix comma t greater than or equals t Subscript j Baselinez( j)(t) =
(q( j)(t)
˙q( j)(t)
)
, t ≥t j, we have the representation [ 11, 22] 
d z left parenthesis t right parenthesis equals d z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis equals e Superscript upper A left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline Delta z Subscript j Baseline plus integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus tau right parenthesis Baseline StartBinomialOrMatrix 0 Choose psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis EndBinomialOrMatrix d tau perioddz(t) = dz( j)(t) = eA(t−t j)Δz j +
t{
t j
eA(t−τ)
(0
ψ( j,1)(τ)
)
dτ.
(10.85a) 
Because of upper E left parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals 0E
(
ΔpD(ω)|At j
)
= 0, we have that 
StartLayout 1st Row 1st Column upper E left parenthesis psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Column equals 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column upper E left parenthesis d z left parenthesis t right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline upper E left parenthesis Delta z Subscript j Baseline vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis comma t greater than or equals t Subscript j Baseline comma EndLayoutE
(
ψ( j,1)(t)|At j
)
= 0,
(10.85b) 
StartLayout 1st Row 1st Column upper E left parenthesis psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Column equals 0 comma 2nd Row 1st Column Blank 3rd Row 1st Column upper E left parenthesis d z left parenthesis t right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Column equals e Superscript upper A left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline upper E left parenthesis Delta z Subscript j Baseline vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis comma t greater than or equals t Subscript j Baseline comma EndLayoutE
(
dz(t)|At j
)
= eA(t−t j)E
(
Δz j|At j
)
,
t ≥t j,
(10.85c) 
where, see (10.84a), (10.84b), 
upper E left parenthesis Delta z Subscript j Baseline vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals upper E left parenthesis z left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis minus ModifyingAbove z With quotation dash Subscript j Baseline periodE
(
Δz j|At j
)
= E
(
z(t j)|At j
)
−z j.
(10.85d) 
It is easy to see that the diagonal elementsgamma Subscript d k Baseline comma gamma Subscript p k Baseline greater than 0 comma k equals 1 comma ellipsis comma nγdk, γpk > 0, k = 1, . . . , n, of the pos-
itive deﬁnite diagonal matrices upper K Subscript d Baseline comma upper K Subscript p BaselineKd, K p, rep., can be chosen so that the fundamental 
matrix normal upper Phi left parenthesis t comma tau right parenthesis equals e Superscript upper A left parenthesis t minus tau right parenthesis Baseline comma t greater than or equals tauϕ(t, τ) = eA(t−τ), t ≥τ, is exponentially stable, i.e., 
parallel to normal upper Phi left parenthesis t comma tau right parenthesis parallel to less than or equals a 0 e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline comma t greater than or equals tau comma||ϕ(t, τ)|| ≤a0e−λ0(t−τ),
t ≥τ,
(10.86a) 
with positive constants a 0 comma lamda 0a0, λ0. A sufﬁcient condition for (10.86a) reads 
gamma Subscript d k Baseline comma gamma Subscript p k Baseline greater than 0 comma k equals 1 comma ellipsis comma n comma a n d gamma Subscript d k Baseline greater than 2 i n c a s e o f d o u b l e e i g e n v a l u e s o f upper A periodγdk, γpk > 0, k = 1, . . . , n, and γdk > 2 in case of double eigenvalues of A.
(10.86b)

264
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
Deﬁne the generalized variance varleft parenthesis upper Z vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis(Z|At j) of a random vectorupper Z equals upper Z left parenthesis omega right parenthesisZ = Z(ω) givenscript upper A Subscript t Sub Subscript jAt j
by varleft parenthesis upper Z vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis colon equals upper E left parenthesis parallel to upper Z minus upper E left parenthesis upper Z vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis parallel to squared vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis(Z|At j ) := E
(
||Z −E(Z|At j )||2|At j
)
, and let sigma Subscript upper Z Superscript left parenthesis j right parenthesis Baseline colon equals StartRoot v a r left parenthesis upper Z vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRootσ ( j)
Z
:= √var (Z|At j). Then, 
for the behavior of the ﬁrst-order error term d z left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselinedz(t), t ≥t j, we have the following 
result: 
Theorem 10.2 Suppose that the diagonal matrices upper K Subscript d Baseline comma upper K Subscript p BaselineKd, K p are selected such that 
(10.86a) holds. Moreover, apply the local (i.e., ﬁrst order) control correction (PD-
controller) 
d u left parenthesis t right parenthesis colon equals phi Subscript z Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis d z left parenthesis t right parenthesis commadu(t) := ϕ( j)
z (t, 0)dz(t),
(10.87a) 
where phi Subscript z Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesisϕ( j)
z (t, 0) is deﬁned by (10.80). Then, the following relations hold: 
(a) Asymptotic local stability in the mean: 
upper E left parenthesis d z left parenthesis t right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis right arrow 0 comma t right arrow normal infinity semicolonE
(
dz(t)|At j
)
→0,
t →∞;
(10.87b) 
(b) Mean absolute ﬁrst-order tracking error: 
StartLayout 1st Row upper E left parenthesis parallel to d z parallel to vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals a 0 e Superscript minus lamda 0 left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline StartRoot sigma Subscript z left parenthesis t Sub Subscript j Subscript right parenthesis Superscript left parenthesis j right parenthesis squared Baseline plus parallel to upper E left parenthesis z left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis minus ModifyingAbove z With quotation dash Subscript j Baseline parallel to squared EndRoot 2nd Row plus a 0 integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline StartRoot upper E left parenthesis parallel to psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis parallel to squared vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot d tau comma t greater than or equals t Subscript j Baseline comma EndLayoutE
(
||dz|||At j
)
≤a0e−λ0(t−t j)
/
σ ( j)2
z(t j) + ||E
(
z(t j)|At j
)
−z j||2
+ a0
t{
t j
e−λ0(t−τ)/
E
(
||ψ( j,1)(τ)||2|At j
)
dτ,
t ≥t j, (10.87c) 
where 
StartLayout 1st Row 1st Column upper E left parenthesis parallel to psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis parallel to squared vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Column less than or equals parallel to upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline parallel to squared sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis 2 Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis squared Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Column less than or equals parallel to upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis parallel to squared v a r left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndLayoutE
(
||ψ( j,1)(t)||2|At j
)
≤||M( j)(t)−1||2σ ( j)2
ue
(
s( j)(t)
)
,
(10.87d) 
StartLayout 1st Row 1st Column upper E left parenthesis parallel to psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis parallel to squared vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Column less than or equals parallel to upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline parallel to squared sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis 2 Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma 2nd Row 1st Column Blank 3rd Row 1st Column sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis squared Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Column less than or equals parallel to upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis parallel to squared v a r left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndLayoutσ ( j)2
ue
(
s( j)(t)
)
≤||Y ( j)(t)||2 var
(
pD(·)|At j
)
(10.87e) 
with 
sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis colon equals StartRoot v a r left parenthesis u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline periodσ ( j)
ue (s) :=
/
var
(
ue
(
pD(·), s; q( j)
e (·), β( j)(·)
)
|At j
)
,
s j ≤s ≤s f . (10.87f) 
Proof Follows from (10.85a), (10.83a)–(10.83d) and the fact that by Jensen’s 
inequality upper E StartRoot upper X left parenthesis omega right parenthesis EndRoot less than or equals StartRoot upper E upper X left parenthesis omega right parenthesis EndRootE√X(ω) ≤√E X(ω) for a nonnegative random variable upper X equals upper X left parenthesis omega right parenthesisX = X(ω). ⬜
Note that sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis 2 Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesisσ ( j)2
ue
(
s( j)(t)
)
can be interpreted as the risk of the feedforward con-
trol u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineu( j)(t), t ≥t j. Using  (10.70b), (10.79g), (10.87d), (10.87e) and then changing 
variables tau right arrow sτ →s in the integral in (10.87c), we obtain the following result:

10.6 Online Control Corrections: PD-Controller
265
Theorem 10.3 Let denotet Superscript left parenthesis j right parenthesis Baseline equals t Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma s greater than or equals s Subscript j Baselinet( j) = t( j)(s), s ≥s j, the inverse of the parameter trans-
formations Superscript left parenthesis j right parenthesis Baseline equals s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselines( j) = s( j)(t), t ≥t j. Under the assumptions of Theorem 10.2, the follow-
ing inequality holds for t Subscript j Baseline less than or equals t less than or equals t Subscript f Superscript left parenthesis j right parenthesist j ≤t ≤t( j)
f : 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis parallel to d z left parenthesis t right parenthesis parallel to vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals a 0 e Superscript minus lamda 0 left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline StartRoot sigma Subscript z left parenthesis t Sub Subscript j Subscript right parenthesis Superscript left parenthesis j right parenthesis squared Baseline plus parallel to upper E left parenthesis z left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis minus ModifyingAbove z With quotation dash Subscript j Baseline parallel to squared EndRoot 2nd Row 1st Column Blank 2nd Column plus integral Subscript s Subscript j Baseline Superscript s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Baseline StartFraction a 0 e Superscript minus lamda 0 left parenthesis t minus t Super Superscript left parenthesis j right parenthesis Superscript left parenthesis s right parenthesis right parenthesis Baseline parallel to upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis Superscript negative 1 Baseline parallel to Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis d s period EndLayoutE
(
||dz(t)|||At j
)
≤a0e−λ0(t−t j)
/
σ ( j)2
z(t j) + ||E
(
z(t j)|At j
)
−z j||2
+
s( j)(t)
{
s j
a0e
−λ0
(
t−t( j)(s)
)
||M
(
p( j)
D , q( j)
e (s)
)−1
||
√
β( j)(s)
σ ( j)
ue (s) ds.
(10.88a) 
The minimality or boundedness of the right-hand side of (10.88a), hence, the robust-
ness [ 12] of the present control scheme, is shown next: 
Corollary 10.1 The meaning of the above inequality (10.88a) follows from the 
following important minimality/boundedness properties depending on the chosen 
substitute problem in (OSTP) for the trajectory planning problem under stochastic 
uncertainty: 
(i) The error contribution of the initial value ModifyingAbove z With quotation dash Subscript jz j takes a minimum for ModifyingAbove z With quotation dash Subscript j Baseline colon equals upper E left parenthesis z left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesisz j :=
E
(
z(t j)|At j
)
, cf. (10.45a), (10.45b). 
(ii) The factor lamda 0λ0 can be increased by an appropriate selection of the matrices 
upper K Subscript p Baseline comma upper K Subscript d BaselineK p, Kd; 
(iii) 
ModifyingBelow c With quotation dash Subscript upper M Baseline less than or equals parallel to upper M left parenthesis p Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis Superscript negative 1 Baseline parallel to less than or equals ModifyingAbove c With quotation dash Subscript upper M Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline commacM ≤||M
(
p( j)
D , q( j)
e (s)
)−1
|| ≤cM,
s j ≤s ≤s f ,
(10.88b) 
with positive constants ModifyingBelow c With quotation dash Subscript upper M Baseline comma ModifyingAbove c With quotation dash Subscript upper M Baseline greater than 0cM, cM > 0. This follows from the fact that the mass 
matrix is always positive deﬁnite [ 4]. 
(iv) 
integral Subscript s Subscript j Baseline Superscript s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Baseline StartFraction d s Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction less than or equals integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline Baseline StartFraction d s Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction equals t Subscript f Superscript left parenthesis j right parenthesis Baseline minus t Subscript j Baseline comma
s( j)(t)
{
s j
ds
√
β( j)(s)
≤
s f
{
s j
ds
√
β( j)(s)
= t( j)
f
−t j,
(10.88c) 
where according to (OSTP), for minimum-time and related substitute problems, 
the right-hand side is a minimum. 
(v) Depending on the chosen substitute problem in (OSTP), the generalized vari-
ancesigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma s Subscript f Baseline less than or equals s less than or equals s Subscript f Baselineσ ( j)
ue (s), s f ≤s ≤s f , is bounded pointwise by an appropriate upper risk 
level, or sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesisσ ( j)
ue (·) minimized in a certain weighted mean sense. 
For the minimality or boundedness of the generalized variancesigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis squared Baseline left parenthesis s right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baselineσ ( j)2
ue (s), s j ≤s ≤
s f , mentioned above, we give the following examples:

266
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
Working with the probabilistic control constraints (10.31a) and assuming that the 
vectorsu Superscript cuc andrho Subscript uρu are ﬁxed, see (10.31d), according to (10.31f) we ﬁnd that (10.31a) 
can be guaranteed by 
sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis squared Baseline left parenthesis s right parenthesis plus parallel to ModifyingAbove u With quotation dash Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis minus u Superscript c Baseline parallel to squared less than or equals left parenthesis 1 minus alpha Subscript u Baseline right parenthesis min Underscript 1 less than or equals k less than or equals n Endscripts rho Subscript u k Superscript 2 Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline commaσ ( j)2
ue (s) + ||u( j)
e (s) −uc||2 ≤(1 −αu) min
1≤k≤n ρ2
uk,
s j ≤s ≤s f ,
(10.88d) 
whereModifyingAbove u With quotation dash Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis colon equals u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesisu( j)
e (s) := ue
(
p( j)
D , s; q( j)
e (·), β( j)(·)
)
. Hence, with (10.88d) we have then the 
condition 
sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis squared Baseline left parenthesis s right parenthesis less than or equals left parenthesis 1 minus alpha Subscript u Baseline right parenthesis min Underscript 1 less than or equals k less than or equals n Endscripts rho Subscript u Sub Subscript e Subscript Superscript 2 Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline comma left parenthesis 10.88 d right single quotation mark right parenthesis
σ ( j)2
ue (s) ≤(1 −αu) min
1≤k≤n ρ2
ue, s j ≤s ≤s f ,
(10.88d’)
cf. (10.88a). Under special distribution assumptions for p Subscript upper D Baseline left parenthesis omega right parenthesispD(ω) more exact explicit 
deterministic conditions for (10.31a) may be derived, see Remark 10.2. 
If minimum force and moment should be achieved along the trajectory, hence, if 
phi equals 0φ = 0 andupper L equals parallel to u left parenthesis t right parenthesis parallel to squaredL = ||u(t)||2, see  (10.6), then, according to substitute problem (10.30a)– 
(10.30f), (10.30f’) we have the following minimality property: 
integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline left parenthesis sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis squared Baseline left parenthesis s right parenthesis plus double vertical bar ModifyingAbove u With quotation dash Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis double vertical bar squared right parenthesis StartFraction d s Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction equals min Underscript q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis Endscripts upper E left parenthesis integral Subscript t Subscript j Baseline Superscript t Subscript f Baseline Baseline parallel to u left parenthesis t right parenthesis parallel to squared d t vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis period
s f
{
s j
(
σ ( j)2
ue (s) +
||||u( j)
e (s)
||||2)
ds
√
β( j)(s)
=
min
qe(·),β(·) E
(
t f
{
t j
||u(t)||2 dt|At j
)
. (10.88e) 
Mean/variance condition foru Subscript eue: Condition (10.30b) in substitute problem (10.30a)– 
(10.30f), (10.30f’) may read in case of ﬁxed bounds u Superscript min Baseline comma u Superscript maxumin, umax for the control u left parenthesis t right parenthesisu(t)
as follows: 
StartLayout 1st Row 1st Column u Superscript min 2nd Column less than or equals u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis 2nd Column less than or equals sigma Subscript u Sub Subscript e Subscript Superscript max Baseline comma s Subscript f Baseline less than or equals s less than or equals s Subscript f Baseline EndLayoutumin ≤ue
(
p( j)
D , s; qe(·), β(·)
)
≤umax,
s j ≤s ≤s f
(10.88f) 
StartLayout 1st Row 1st Column u Superscript min 2nd Column less than or equals u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline 2nd Row 1st Column Blank 3rd Row 1st Column sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis 2nd Column less than or equals sigma Subscript u Sub Subscript e Subscript Superscript max Baseline comma s Subscript f Baseline less than or equals s less than or equals s Subscript f Baseline EndLayoutσ ( j)
ue (s) ≤σ max
ue ,
s f ≤s ≤s f
(10.88g) 
with a given upper bound sigma Subscript u Sub Subscript e Superscript maxσ max
ue , cf. (10.88d’). 
According to Theorem 10.3, further stability results, especially the convergence 
upper E left parenthesis parallel to d z left parenthesis t right parenthesis parallel to vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis right arrow 0 f o r j right arrow normal infinity comma t right arrow normal infinityE
(
||dz(t)|||At j
)
→0 for j →∞, t →∞
(10.89a) 
of the mean absolute ﬁrst-order tracking error can be obtained if, by using a suitable 
update law [ 1, 2, 4, 11] for the parameter estimates, hence, for the a posteriori 
distribution upper P left parenthesis dot vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesisP(·|At j), we have that, see (10.87f), 
v a r left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals v a r left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis right arrow 0 f o r j right arrow normal infinity periodvar
(
pD(·)|At j
)
= var
(
pD(·)|At j
)
→0 for j →∞.
(10.89b)

10.6 Online Control Corrections: PD-Controller
267
10.6.3 
The Second-Order Differential d squared qd2q
In order to derive a representation of the second-order differentiald squared qd2q, Eq. (10.78a) 
for StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis∂q
∂∈(t, ∈) is represented as follows: 
upper F Subscript p Sub Subscript upper D Subscript Baseline Delta p Subscript upper D Baseline plus upper F Subscript z Baseline StartFraction partial differential z Over partial differential epsilon EndFraction plus upper F Subscript q With two dots Baseline StartFraction partial differential q With two dots Over partial differential epsilon EndFraction equals StartFraction partial differential u Over partial differential epsilon EndFraction equals phi Subscript z Superscript left parenthesis j right parenthesis Baseline StartFraction partial differential z Over partial differential epsilon EndFraction commaFpDΔpD + Fz
∂z
∂∈+ F¨q
∂¨q
∂∈= ∂u
∂∈= ϕ( j)
z
∂z
∂∈,
(10.90a) 
where upper F equals upper F left parenthesis p Subscript upper D Baseline comma z comma q With two dots right parenthesis comma z equals StartBinomialOrMatrix q Choose ModifyingAbove q With dot EndBinomialOrMatrixF = F(pD, z, ¨q), z =
(q
˙q
)
, is given by (10.74d),  see also (10.77e), and there-
fore 
StartLayout 1st Row 1st Column Blank 2nd Column upper F Subscript p Sub Subscript upper D Subscript Baseline equals upper F Subscript p Sub Subscript upper D Subscript Baseline left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals upper Y left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis comma upper F Subscript q With two dots Baseline equals upper F Subscript q With two dots Baseline left parenthesis p Subscript upper D Baseline comma q right parenthesis equals upper M left parenthesis p Subscript upper D Baseline comma q right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper F Subscript z Baseline equals upper F Subscript z Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals left parenthesis upper F Subscript q Baseline comma upper F Subscript ModifyingAbove q With dot Baseline right parenthesis equals left parenthesis upper K left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis comma upper D left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis right parenthesis period EndLayoutFpD = FpD(q, ˙q, ¨q) = Y(q, ˙q, ¨q),
F¨q = F¨q(pD, q) = M(pD, q)
(10.90b) 
StartLayout 1st Row 1st Column Blank 2nd Column upper F Subscript p Sub Subscript upper D Subscript Baseline equals upper F Subscript p Sub Subscript upper D Subscript Baseline left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals upper Y left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis comma upper F Subscript q With two dots Baseline equals upper F Subscript q With two dots Baseline left parenthesis p Subscript upper D Baseline comma q right parenthesis equals upper M left parenthesis p Subscript upper D Baseline comma q right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper F Subscript z Baseline equals upper F Subscript z Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals left parenthesis upper F Subscript q Baseline comma upper F Subscript ModifyingAbove q With dot Baseline right parenthesis equals left parenthesis upper K left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis comma upper D left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis right parenthesis period EndLayoutFz = Fz(pD, q, ˙q, ¨q) =
(
Fq, F˙q
)
=
(
K(pD, q, ˙q, ¨q), D(pD, q, ˙q)
)
.
(10.90c) 
Moreover, we have that 
phi Superscript left parenthesis j right parenthesis Baseline equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma z minus z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma z equals StartBinomialOrMatrix q left parenthesis t comma epsilon right parenthesis Choose ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis EndBinomialOrMatrix comma p Subscript upper D Baseline equals p Subscript upper D Baseline left parenthesis epsilon right parenthesis periodϕ( j) = ϕ( j)(
t, z −z( j)(t)
)
,
z =
(q(t, ∈)
˙q(t, ∈)
)
,
pD = pD(∈).
(10.90d) 
By differentiation of (10.90a) with respect to epsilon∈, we obtain 
StartLayout 1st Row 1st Column 2 upper F Subscript p Sub Subscript upper D Subscript z dot left parenthesis Delta p Subscript upper D Baseline comma StartFraction partial differential z Over partial differential epsilon EndFraction right parenthesis 2nd Column plus 2 upper F Subscript p Sub Subscript upper D Subscript q With two dots dot left parenthesis Delta p Subscript upper D Baseline comma StartFraction partial differential q With two dots Over partial differential epsilon EndFraction right parenthesis plus upper F Subscript z z Baseline dot left parenthesis StartFraction partial differential z Over partial differential epsilon EndFraction comma StartFraction partial differential z Over partial differential epsilon EndFraction right parenthesis 2nd Row 1st Column plus 2 upper F Subscript z q With two dots dot left parenthesis StartFraction partial differential z Over partial differential epsilon EndFraction comma StartFraction partial differential q With two dots Over partial differential epsilon EndFraction right parenthesis 2nd Column plus upper F Subscript z Baseline StartFraction partial differential squared z Over partial differential epsilon squared EndFraction plus upper F Subscript q With two dots Baseline StartFraction partial differential squared q With two dots Over partial differential epsilon squared EndFraction 3rd Row 1st Column Blank 2nd Column equals phi Subscript z z Superscript left parenthesis j right parenthesis Baseline dot left parenthesis StartFraction partial differential z Over partial differential epsilon EndFraction comma StartFraction partial differential z Over partial differential epsilon EndFraction right parenthesis plus phi Subscript z Superscript left parenthesis j right parenthesis Baseline StartFraction partial differential squared z Over partial differential epsilon squared EndFraction comma EndLayout2FpDz ·
(
ΔpD, ∂z
∂∈
)
+ 2FpD ¨q ·
(
ΔpD, ∂¨q
∂∈
)
+ Fzz ·
(∂z
∂∈, ∂z
∂∈
)
+2Fz ¨q ·
(∂z
∂∈, ∂¨q
∂∈
)
+ Fz
∂2z
∂∈2 + F¨q
∂2 ¨q
∂∈2
= ϕ( j)
zz ·
(∂z
∂∈, ∂z
∂∈
)
+ ϕ( j)
z
∂2z
∂∈2 ,
(10.91a) 
with the second-order partial derivatives 
StartLayout 1st Row 1st Column upper F Subscript p Sub Subscript upper D Subscript z 2nd Column equals upper F Subscript p Sub Subscript upper D Subscript z Baseline left parenthesis z comma q With two dots right parenthesis comma 3rd Column upper F Subscript p Sub Subscript upper D Subscript q With two dots 4th Column equals upper F Subscript p Sub Subscript upper D Subscript q With two dots Baseline left parenthesis q right parenthesis equals upper M Subscript p Sub Subscript upper D Baseline left parenthesis q right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper F Subscript z z 2nd Column equals upper F Subscript z z Baseline left parenthesis p Subscript upper D Baseline comma z comma q With two dots right parenthesis comma 3rd Column upper F Subscript z q With two dots 4th Column equals upper F Subscript z q With two dots Baseline left parenthesis p Subscript upper D Baseline comma z right parenthesis equals left parenthesis upper M Subscript q Baseline left parenthesis p Subscript upper D Baseline comma q right parenthesis comma 0 right parenthesis period EndLayoutFpDz = FpDz(z, ¨q),
FpD ¨q = FpD ¨q(q) = MpD(q)
(10.91b) 
StartLayout 1st Row 1st Column upper F Subscript p Sub Subscript upper D Subscript z 2nd Column equals upper F Subscript p Sub Subscript upper D Subscript z Baseline left parenthesis z comma q With two dots right parenthesis comma 3rd Column upper F Subscript p Sub Subscript upper D Subscript q With two dots 4th Column equals upper F Subscript p Sub Subscript upper D Subscript q With two dots Baseline left parenthesis q right parenthesis equals upper M Subscript p Sub Subscript upper D Baseline left parenthesis q right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper F Subscript z z 2nd Column equals upper F Subscript z z Baseline left parenthesis p Subscript upper D Baseline comma z comma q With two dots right parenthesis comma 3rd Column upper F Subscript z q With two dots 4th Column equals upper F Subscript z q With two dots Baseline left parenthesis p Subscript upper D Baseline comma z right parenthesis equals left parenthesis upper M Subscript q Baseline left parenthesis p Subscript upper D Baseline comma q right parenthesis comma 0 right parenthesis period EndLayoutFzz = Fzz(pD, z, ¨q),
Fz ¨q = Fz ¨q(pD, z) =
(
Mq(pD, q), 0
)
.
(10.91c) 
Moreover, differentiation of (10.78b) with respect to epsilon∈yields the initial values 
StartFraction partial differential squared q Over partial differential epsilon squared EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals 0 comma StartFraction d Over d t EndFraction StartFraction partial differential squared q Over partial differential epsilon squared EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals StartFraction partial differential squared ModifyingAbove q With dot Over partial differential epsilon squared EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals 0∂2q
∂∈2 (t j, ∈) = 0,
d
dt
∂2q
∂∈2 (t j, ∈) = ∂2 ˙q
∂∈2 (t j, ∈) = 0
(10.91d) 
for StartFraction partial differential squared z Over partial differential epsilon squared EndFraction equals StartFraction partial differential squared z Over partial differential epsilon squared EndFraction left parenthesis t comma epsilon right parenthesis equals left parenthesis StartFraction partial differential squared q Over partial differential epsilon squared EndFraction left parenthesis t comma epsilon right parenthesis comma StartFraction partial differential squared ModifyingAbove q With dot Over partial differential epsilon squared EndFraction left parenthesis t comma epsilon right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1 period∂2z
∂∈2 = ∂2z
∂∈2 (t, ∈) =
(∂2q
∂∈2 (t, ∈), ∂2 ˙q
∂∈2 (t, ∈)
)
, t ≥t j, 0 ≤∈≤1.

268
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
Putting now epsilon equals 0∈= 0, from (10.91a) we obtain the following differential equation 
for the second-order differential d squared q left parenthesis t right parenthesis equals StartFraction partial differential squared q Over partial differential epsilon squared EndFraction left parenthesis t comma 0 right parenthesisd2q(t) = ∂2q
∂∈2 (t, 0) of q equals q left parenthesis t comma epsilon right parenthesisq = q(t, ∈): 
StartLayout 1st Row 1st Column Blank 2nd Column upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis d squared q left parenthesis t right parenthesis plus upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis StartFraction d Over d t EndFraction d squared q left parenthesis t right parenthesis plus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis StartFraction d squared Over d t squared EndFraction d squared q left parenthesis t right parenthesis 2nd Row 1st Column plus 2nd Column left parenthesis upper F Subscript z z Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis minus phi Subscript z z Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis right parenthesis dot left parenthesis d z left parenthesis t right parenthesis comma d z left parenthesis t right parenthesis right parenthesis 3rd Row 1st Column minus 2nd Column phi Subscript z Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis d squared z left parenthesis t right parenthesis equals minus 2 upper F Subscript p Sub Subscript upper D Subscript z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis dot left parenthesis Delta p Subscript upper D Baseline comma d z left parenthesis t right parenthesis right parenthesis 4th Row 1st Column plus 2nd Column 2 upper F Subscript p Sub Subscript upper D Subscript q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis dot left parenthesis Delta p Subscript upper D Baseline comma d With two dots q left parenthesis t right parenthesis right parenthesis plus 2 upper F Subscript z q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis dot left parenthesis d z left parenthesis t right parenthesis comma d With two dots q left parenthesis t right parenthesis right parenthesis period EndLayoutK ( j)(t)d2q(t) + D( j)(t) d
dt d2q(t) + M( j)(t) d2
dt2 d2q(t)
+
(
Fzz
(
p( j)
D , q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
−ϕ( j)
zz (t, 0)
)
·
(
dz(t), dz(t)
)
−ϕ( j)
z (t, 0)d2z(t) = −2F( j)
pDz(t) ·
(
ΔpD, dz(t)
)
+2F( j)
pD ¨q(t) ·
(
ΔpD, ¨dq(t)
)
+ 2F( j)
z ¨q (t) ·
(
dz(t), ¨dq(t)
)
.
(10.92a) 
Here, we set 
d squared z left parenthesis t right parenthesis colon equals StartBinomialOrMatrix d squared q left parenthesis t right parenthesis Choose StartFraction d Over d t EndFraction d squared q left parenthesis t right parenthesis EndBinomialOrMatrix commad2z(t) :=
( d2q(t)
d
dt d2q(t)
)
,
(10.92b) 
and the vectorial Hessiansupper F Subscript p Sub Subscript upper D Subscript z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma upper F Subscript p Sub Subscript upper D Subscript q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma upper F Subscript z q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesisF( j)
pDz(t), F( j)
pD ¨q(t), F( j)
z ¨q (t) follow from (10.91b) by insert-
ing there the argumentleft parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis colon equals left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis(pD, q, ˙q, ¨q) :=
(
p( j)
D , q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
. Furthermore, 
(10.91d) yields the following initial condition for d squared q left parenthesis t right parenthesisd2q(t)
d squared q left parenthesis t Subscript j Baseline right parenthesis equals 0 comma StartFraction d Over d t EndFraction d squared q left parenthesis t Subscript j Baseline right parenthesis equals 0 periodd2q(t j) = 0,
d
dt d2q(t j) = 0.
(10.92c) 
According to (10.92a) we deﬁne now, cf. (10.80), the second-order derivative of 
phi Superscript left parenthesis j right parenthesisϕ( j) with respect to zz at Delta z equals 0Δz = 0 by 
phi Subscript z z Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis colon equals upper F Subscript z z Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline periodϕ( j)
zz (t, 0) := Fzz
(
p( j)
D , q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
,
t ≥t j.
(10.93) 
Using the deﬁnition (10.80) of the Jacobian of phi Superscript left parenthesis j right parenthesisϕ( j) with respect to zz at Delta z equals 0Δz = 0, 
for d squared q equals d squared q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselined2q = d2q(t), t ≥t j, we ﬁnd the following the initial value problem 
StartLayout 1st Row 1st Column Blank 2nd Column StartFraction d squared Over d t squared EndFraction d squared q left parenthesis t right parenthesis plus upper K Subscript d Baseline StartFraction d Over d t EndFraction d squared q left parenthesis t right parenthesis plus upper K Subscript p Baseline d squared q left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline ModifyingAbove bold upper D squared upper F With tilde Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis dot left parenthesis Delta p Subscript upper D Baseline comma d z left parenthesis t right parenthesis comma d With two dots q left parenthesis t right parenthesis right parenthesis squared comma t greater than or equals t Subscript j Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column d squared q left parenthesis t Subscript j Baseline right parenthesis equals 0 comma StartFraction d Over d t EndFraction d squared q left parenthesis t Subscript j Baseline right parenthesis equals 0 comma EndLayout d2
dt2 d2q(t) + Kd
d
dt d2q(t) + K pd2q(t)
= −M( j)(t)−1~
D2F
( j)
(t) ·
(
ΔpD, dz(t), ¨dq(t)
)2
,
t ≥t j,
(10.94a) 
StartLayout 1st Row 1st Column Blank 2nd Column StartFraction d squared Over d t squared EndFraction d squared q left parenthesis t right parenthesis plus upper K Subscript d Baseline StartFraction d Over d t EndFraction d squared q left parenthesis t right parenthesis plus upper K Subscript p Baseline d squared q left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline ModifyingAbove bold upper D squared upper F With tilde Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis dot left parenthesis Delta p Subscript upper D Baseline comma d z left parenthesis t right parenthesis comma d With two dots q left parenthesis t right parenthesis right parenthesis squared comma t greater than or equals t Subscript j Baseline comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column d squared q left parenthesis t Subscript j Baseline right parenthesis equals 0 comma StartFraction d Over d t EndFraction d squared q left parenthesis t Subscript j Baseline right parenthesis equals 0 comma EndLayoutd2q(t j) = 0, d
dt d2q(t j) = 0,
(10.94b) 
where the sub-Hessian 
ModifyingAbove bold upper D squared upper F With tilde Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals ModifyingAbove bold upper D squared upper F With tilde left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma~
D2F
( j)
(t) := ~
D2F
(
p( j)
D , q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
,
(10.94c) 
of upper FF results from the Hessian of upper FF by replacing the diagonal block upper F Subscript z zFzz by zero. Of 
course, we have that, cf. (10.92a),

10.6 Online Control Corrections: PD-Controller
269
StartLayout 1st Row ModifyingAbove nabla squared upper F With tilde Superscript left parenthesis j right parenthesis Baseline dot left parenthesis Delta Subscript p Sub Subscript upper D Subscript Baseline comma d z left parenthesis t right parenthesis comma d With two dots q left parenthesis t right parenthesis right parenthesis squared equals 2 left parenthesis upper F Subscript p Sub Subscript upper D Subscript z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis dot left parenthesis Delta p Subscript upper D Baseline comma d z left parenthesis t right parenthesis right parenthesis 2nd Row plus upper F Subscript p Sub Subscript upper D Subscript q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis dot left parenthesis Delta p Subscript upper D Baseline comma d With two dots q left parenthesis t right parenthesis right parenthesis plus upper F Subscript z q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis dot left parenthesis d With two dots q left parenthesis t right parenthesis comma d z left parenthesis t right parenthesis right parenthesis right parenthesis period EndLayout~
∇2F
( j)
·
(
ΔpD, dz(t), ¨dq(t)
)2
= 2
(
F( j)
pDz(t) ·
(
ΔpD, dz(t)
)
+F( j)
pD ¨q(t) ·
(
ΔpD, ¨dq(t)
)
+ F( j)
z ¨q (t) ·
(
¨dq(t), dz(t)
))
.
(10.94d) 
Comparing now the initial value problems (10.81a), (10.81b) and (10.94a), 
(10.94b) for the ﬁrst and second-order differential of q equals q left parenthesis t comma epsilon right parenthesisq = q(t, ∈), we recognize that 
the linear second-order differential equations have—up to the right-hand side— 
exactly the same form. 
According to (10.84a)–(10.84d) and (10.85a) we know that the ﬁrst-order expan-
sion terms 
left parenthesis d z left parenthesis t right parenthesis comma d With two dots q left parenthesis t right parenthesis right parenthesis equals left parenthesis d q left parenthesis t right parenthesis comma ModifyingAbove d With dot q left parenthesis t right parenthesis comma d With two dots q left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma
(
dz(t), ¨dq(t)
)
=
(
dq(t), ˙dq(t), ¨dq(t)
)
,
t ≥t j,
in the tracking error depend linearly on the error term 
Delta theta Superscript left parenthesis j right parenthesis Baseline equals Delta theta Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals StartBinomialOrMatrix e Superscript upper A left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline Delta z Subscript j Baseline Choose Delta p Subscript upper D Baseline EndBinomialOrMatrix left parenthesis right arrow StartBinomialOrMatrix 0 Choose Delta p Subscript upper D Baseline EndBinomialOrMatrix comma t right arrow normal infinity right parenthesisΔθ( j) = Δθ( j)(t) :=
(eA(t−t j)Δz j
ΔpD
) (
→
(
0
ΔpD
)
, t →∞
)
(10.95) 
corresponding to the variations/disturbances of the initial valuesleft parenthesis q Subscript j Baseline comma ModifyingAbove q With dot Subscript j Baseline right parenthesis(q j, ˙q j)and dynamic 
parameters p Subscript upper DpD. Consequently, we have this observation: 
Lemma 10.2 The right-hand side 
psi Superscript left parenthesis j comma 2 right parenthesis Baseline left parenthesis t right parenthesis colon equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline ModifyingAbove bold upper D squared upper F With tilde Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis dot left parenthesis Delta p Subscript upper D Baseline comma d z left parenthesis t right parenthesis comma d With two dots q left parenthesis t right parenthesis right parenthesis squared comma t greater than or equals t Subscript j Baseline commaψ( j,2)(t) := −M( j)(t)−1~
D2F
( j)
(t) ·
(
ΔpD, dz(t), ¨dq(t)
)2
, t ≥t j,
(10.96) 
of the error differential equation (10.94a) for  d squared q left parenthesis t right parenthesisd2q(t) is quadratic in the error term 
Delta theta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesisΔθ( j)(·). 
According to (10.94a)–(10.94c), the second-order expansion term 
d squared z left parenthesis t right parenthesis equals left parenthesis d squared q left parenthesis t right parenthesis comma StartFraction d Over d t EndFraction d squared q left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline commad2z(t) =
(
d2q(t), d
dt d2q(t)
)
,
t ≥t j,
of the Taylor expansion of the tracking error can be represented again by the solu-
tion of the system of linear differential equations (10.84a)–(10.84c), where now 
psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesisψ( j,1)(t) is replaced by psi Superscript left parenthesis j comma 2 right parenthesis Baseline left parenthesis t right parenthesisψ( j,2)(t) deﬁned by (10.96), and the initial values are given 
by d squared z left parenthesis t Subscript j Baseline right parenthesis equals 0d2z(t j) = 0. Thus, applying again solution formula (10.85a), we ﬁnd 
d squared z left parenthesis t right parenthesis equals integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus tau right parenthesis Baseline StartBinomialOrMatrix 0 Choose psi Superscript left parenthesis j comma 2 right parenthesis Baseline left parenthesis tau right parenthesis EndBinomialOrMatrix d tau periodd2z(t) =
t{
t j
eA(t−τ)
(
0
ψ( j,2)(τ)
)
dτ.
(10.97) 
From (10.95)–(10.97) and Lemma 10.2 we get now the following result. 
Theorem 10.4 The
second-order
tracking
error
expansion
terms 
left parenthesis d squared z left parenthesis t right parenthesis comma StartFraction d squared Over d t squared EndFraction d squared q left parenthesis t right parenthesis right parenthesis equals left parenthesis d squared q left parenthesis t right parenthesis comma StartFraction d Over d t EndFraction d squared q left parenthesis t right parenthesis comma StartFraction d squared Over d t squared EndFraction d squared q left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline
(
d2z(t), d2
dt2 d2q(t)
)
=
(
d2q(t), d
dt d2q(t), d2
dt2 d2q(t)
)
, t ≥t j, depend

270
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
(i) quadratically on the ﬁrst-order error terms left parenthesis Delta p Subscript upper D Baseline comma d z left parenthesis t right parenthesis comma d With two dots q left parenthesis t right parenthesis right parenthesis
(
ΔpD, dz(t), ¨dq(t)
)
and 
(ii) quadratically on the error term Delta theta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesisΔθ( j)(·) corresponding to the variations/ 
disturbances of the initial values and dynamics parameters. 
Because of (10.97), the stability properties of the second-order tracking error expan-
sion term d squared q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselined2q(t), t ≥t j, are determined again by the matrix exponential function 
normal upper Phi left parenthesis t comma tau right parenthesis equals e Superscript upper A left parenthesis t minus tau right parenthesisϕ(t, τ) = eA(t−τ) and the remainder psi Superscript left parenthesis j comma 2 right parenthesis Baseline left parenthesis t right parenthesisψ( j,2)(t) given by (10.96). 
According to Theorem 10.3 and Corollary 10.1 we know that the disturbance 
termpsi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesisψ( j,1)(t) of (10.81a), (10.84a) is reduced directly by control constraints (foru Subscript eue) 
present in (OSTP). Concerning the next disturbance term psi Superscript left parenthesis j comma 2 right parenthesis Baseline left parenthesis t right parenthesisψ( j,2)(t) of (10.94a), by 
(10.96) we note ﬁrst that a reduction of the 1st order error termsleft parenthesis Delta p Subscript upper D Baseline comma d z left parenthesis dot right parenthesis comma d With two dots q left parenthesis dot right parenthesis right parenthesis
(
ΔpD, dz(·), ¨dq(·)
)
yields a reduction ofpsi Superscript left parenthesis j comma 2 right parenthesisψ( j,2) and by (10.97) also a reduction ofd squared z left parenthesis t right parenthesis comma StartFraction d squared Over d t squared EndFraction d squared q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselined2z(t), d2
dt2 d2q(t), t ≥
t j. Comparing then deﬁnitions (10.84d) and (10.96) of the disturbancespsi Superscript left parenthesis j comma 1 right parenthesis Baseline comma psi Superscript left parenthesis j comma 2 right parenthesisψ( j,1), ψ( j,2), 
we observe that, corresponding to psi Superscript left parenthesis j comma 1 right parenthesisψ( j,1), certain terms in psi Superscript left parenthesis j comma 2 right parenthesisψ( j,2) depend only on the 
reference trajectory q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineq( j)(t), t ≥t j, of stage j j. Hence, this observation yields the 
following result. 
Theorem 10.5 The disturbancepsi Superscript left parenthesis j comma 2 right parenthesisψ( j,2) of (10.94a), and consequently also the second-
order tracking error expansion terms d squared q left parenthesis t right parenthesis comma StartFraction d Over d t EndFraction d squared q left parenthesis t right parenthesis comma StartFraction d squared Over d t squared EndFraction d squared q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselined2q(t), d
dt d2q(t), d2
dt2 d2q(t), t ≥t j, can be 
diminished by 
(i) reducing the ﬁrst-order error terms left parenthesis Delta p Subscript upper D Baseline comma d z left parenthesis dot right parenthesis comma q With two dots left parenthesis dot right parenthesis right parenthesis
(
ΔpD, dz(·), ¨q(·)
)
, and by 
(ii) taking into (OSTP) additional conditions for the unknown functionsq Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baselineqe(s), β(s),
s j ≤s ≤s f , guaranteeing that (the norm of) the sub-HessianModifyingAbove bold upper D squared upper F With tilde Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline~
D2F
( j)
(t), t ≥t j, 
fulﬁlls a certain minimality or boundedness condition. 
Proof Follows from deﬁnition (10.96) of  psi Superscript left parenthesis j comma 2 right parenthesisψ( j,2) and representation (10.97) of the  
second-order tracking error expansion term d squared zd2z.
⬜
10.6.4 
Third and Higher Order Differentials 
By further differentiation of equations (10.91a), (10.91d) with respect to epsilon∈and by 
puttingepsilon equals 0∈= 0, also the third and higher order differentialsd Superscript l Baseline q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline comma l greater than or equals 3dlq(t), t ≥t j,l ≥3, can 
be obtained. We observe that the basic structure of the differential equations for the 
differentials d Superscript l Baseline q comma l greater than or equals 1 commadlq,l ≥1, remains the same. Hence, by induction for the differentials 
d Superscript l Baseline z comma l greater than or equals 1dlz,l ≥1, we have the following representation: 
Theorem 10.6 Deﬁning the tensorial coefﬁcients of the Taylor expansion (10.76d) 
for the feedback control law phi Superscript left parenthesis j right parenthesis Baseline equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta z right parenthesisϕ( j) = ϕ( j)(t, Δz) by 
StartLayout 1st Row 1st Column bold upper D Subscript z Superscript l Baseline phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 right parenthesis colon equals bold upper D Subscript z Superscript l Baseline upper F left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma 2nd Column Blank 2nd Row 1st Column t greater than or equals t Subscript j Baseline comma l equals 1 comma 2 comma ellipsis 2nd Column comma EndLayoutDl
zϕ( j)(t, 0) := Dl
z F
(
p( j)
D , q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
,
(10.98) 
t ≥ t j , l = 1, 2, . . .,

10.6 Online Control Corrections: PD-Controller
271
the differentials d Superscript l Baseline z left parenthesis t right parenthesis equals left parenthesis d Superscript l Baseline q left parenthesis t right parenthesis comma StartFraction d Over d t EndFraction d Superscript l Baseline q left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baselinedlz(t) =
(
dlq(t), d
dt dlq(t)
)
, t ≥t j, may be represented by the 
systems of linear differential equations 
StartFraction d Over d t EndFraction d Superscript l Baseline z left parenthesis t right parenthesis equals upper A d Superscript l Baseline z left parenthesis t right parenthesis plus StartBinomialOrMatrix 0 Choose psi Superscript left parenthesis j comma l right parenthesis Baseline left parenthesis t right parenthesis EndBinomialOrMatrix comma t greater than or equals t Subscript j Baseline comma l equals 1 comma 2 comma ellipsis comma d
dt dlz(t) = Adlz(t) +
(
0
ψ( j,l)(t)
)
,
t ≥t j,l = 1, 2, . . . ,
(10.99a) 
with the same system matrixupper AA and the disturbance termspsi Superscript left parenthesis j comma l right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineψ( j,l)(t), t ≥t j, given by 
StartLayout 1st Row psi Superscript left parenthesis j comma l right parenthesis Baseline left parenthesis t right parenthesis equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline pi left parenthesis ModifyingAbove bold upper D Superscript lamda Baseline upper F With tilde Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma 2 less than or equals lamda less than or equals l semicolon Delta p Subscript upper D Baseline comma d Superscript j Baseline z left parenthesis t right parenthesis comma 2nd Row StartFraction d squared Over d t squared EndFraction d Superscript k Baseline q left parenthesis t right parenthesis comma 1 less than or equals j comma k less than or equals l minus 1 right parenthesis comma l greater than or equals 2 comma EndLayoutψ( j,l)(t) = −M( j)(t)−1π
(
~
DλF
( j)
(t), 2 ≤λ ≤l; ΔpD, d jz(t),
d2
dt2 dkq(t), 1 ≤j, k ≤l −1
)
, l ≥2,
(10.99b) 
where piπ is a polynomial in the variables Delta p Subscript upper D BaselineΔpD and d Superscript j Baseline z left parenthesis t right parenthesis comma StartFraction d squared Over d t squared EndFraction d Superscript k Baseline q left parenthesis t right parenthesis comma 1 less than or equals j comma k less than or equals l minus 1d jz(t), d2
dt2 dkq(t), 1 ≤j, k ≤
l −1, having coefﬁcients from the sub-operatorsModifyingAbove bold upper D Superscript lamda Baseline upper F With tilde Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis~
DλF
( j)
(t) ofbold upper D Superscript lamda Baseline upper F Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesisDλF( j)(t) containing 
mixed partial derivatives ofupper FF with respect toDelta p Subscript upper D Baseline comma z comma q With two dotsΔpD, z, ¨q of orderlamda equals 2 comma 3 comma ellipsis comma l minus 1λ = 2, 3, . . . ,l −1
atleft parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals left parenthesis ModifyingAbove p Subscript upper D Baseline With quotation dash Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis(pD, q, ˙q, ¨q) =
(
pD
( j), q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
such that the disturbancepsi Superscript left parenthesis j comma l right parenthesisψ( j,l) is 
a polynomial of order ll with respect to the error term Delta theta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesisΔθ( j)(·). 
According to (10.74d), (10.4a)–(10.4d) and Remark 10.2 we know that the vector 
functionupper F equals upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesisF = F(pD, q, ˙q, ¨q) is linear inp Subscript upper DpD, linear inq With two dots¨q and quadratic inModifyingAbove q With dot˙q (supposing 
case 10.4c)) and analytical with respect to qq. Hence, working with a polynomial 
approximation with respect to qq, we may assume that 
bold upper D Superscript l Baseline upper F Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis equals bold upper D Superscript l Baseline upper F left parenthesis ModifyingAbove p Subscript upper D Baseline With quotation dash Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis almost equals 0 comma t greater than or equals t Subscript j Baseline comma l greater than or equals l 0Dl F( j)(t) = Dl F
(
pD
( j), q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
≈0,
t ≥t j,l ≥l0
(10.100) 
for some index l 0l0. 
According to the expansion (10.76d) of the feedback control law phi Superscript left parenthesis j right parenthesis Baseline equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta z right parenthesisϕ( j) =
ϕ( j)(t, Δz), deﬁnition (10.98) of the corresponding coefﬁcients and Theorem 10.5 
we have now this robustness [ 12] result. 
Theorem 10.7 The Taylor expansion (10.76d) of the feedback control law phi Superscript left parenthesis j right parenthesis Baseline equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta z right parenthesisϕ( j) =
ϕ( j)(t, Δz) stops after a ﬁnite number left parenthesis less than or equals l 0 right parenthesis(≤l0) of terms. Besides the conditions foru Subscript eue
contained automatically in (OSTP) via the control constraints, the mean absolute 
tracking error upper E left parenthesis double vertical bar Delta z left parenthesis t right parenthesis double vertical bar vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesisE
(
||Δz(t)|| |At j
)
can be diminished further by including additional 
conditions for the functionsleft parenthesis q Subscript e Baseline left parenthesis s right parenthesis comma beta left parenthesis s right parenthesis right parenthesis comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline
(
qe(s), β(s)
)
, s j ≤s ≤s f , in (OSTP) which guarantee 
a minimality or boundedness condition for (the norm of) the sub-operators of mixed 
partial derivatives ModifyingAbove bold upper D squared upper F With tilde Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline comma lamda equals 2 comma 3 comma ellipsis comma l 0~
D2F
( j)
(t), t ≥t j, λ = 2, 3, . . . ,l0.

272
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
10.7 Online Control Corrections: PID Controllers 
Corresponding to Sect. 10.5, Eqs. (10.71a)–(10.71c), at stage j j we consider here 
control corrections, hence, feedback control laws, of the type 
Delta u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals u left parenthesis t right parenthesis minus u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline commaΔu( j)(t) := u(t) −u( j)(t) = ϕ( j)(
t, Δz( j)(t)
)
,
t ≥t j,
(10.101a) 
where 
Delta z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals z left parenthesis t right parenthesis minus z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline commaΔz( j)(t) := z(t) −z( j)(t),
t ≥t j,
is the tracking error related now to the state vector 
StartLayout 1st Row 1st Column z left parenthesis t right parenthesis 2nd Column colon equals Start 3 By 1 Matrix 1st Row z 1 left parenthesis t right parenthesis 2nd Row z 2 left parenthesis t right parenthesis 3rd Row z 3 left parenthesis t right parenthesis EndMatrix equals Start 3 By 1 Matrix 1st Row q left parenthesis t right parenthesis 2nd Row integral Subscript t Subscript j Baseline Superscript t Baseline q left parenthesis s right parenthesis d s 3rd Row ModifyingAbove q With dot left parenthesis t right parenthesis EndMatrix comma t greater than or equals t Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals Start 3 By 1 Matrix 1st Row z 1 Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Row z 2 Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 3rd Row z 3 Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis EndMatrix equals Start 3 By 1 Matrix 1st Row q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Row integral Subscript t Subscript j Baseline Superscript t Baseline q Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis d s 3rd Row ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis EndMatrix comma t greater than or equals t Subscript j Baseline period EndLayoutz(t) :=
⎛
⎝
z1(t)
z2(t)
z3(t)
⎞
⎠=
⎛
⎜⎜⎝
q(t)
t{
t j
q(s)ds
˙q(t)
⎞
⎟⎟⎠,
t ≥t j
(10.101b) 
StartLayout 1st Row 1st Column z left parenthesis t right parenthesis 2nd Column colon equals Start 3 By 1 Matrix 1st Row z 1 left parenthesis t right parenthesis 2nd Row z 2 left parenthesis t right parenthesis 3rd Row z 3 left parenthesis t right parenthesis EndMatrix equals Start 3 By 1 Matrix 1st Row q left parenthesis t right parenthesis 2nd Row integral Subscript t Subscript j Baseline Superscript t Baseline q left parenthesis s right parenthesis d s 3rd Row ModifyingAbove q With dot left parenthesis t right parenthesis EndMatrix comma t greater than or equals t Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals Start 3 By 1 Matrix 1st Row z 1 Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Row z 2 Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 3rd Row z 3 Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis EndMatrix equals Start 3 By 1 Matrix 1st Row q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Row integral Subscript t Subscript j Baseline Superscript t Baseline q Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis d s 3rd Row ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis EndMatrix comma t greater than or equals t Subscript j Baseline period EndLayoutz( j)(t) :=
⎛
⎜⎝
z( j)
1 (t)
z( j)
2 (t)
z( j)
3 (t)
⎞
⎟⎠=
⎛
⎜⎜⎝
q( j)(t)
t{
t j
q( j)(s)ds
˙q( j)(t)
⎞
⎟⎟⎠,
t ≥t j.
(10.101c) 
Furthermore, 
StartLayout 1st Row 1st Column phi Superscript left parenthesis j right parenthesis 2nd Column equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta z left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta z 1 left parenthesis t right parenthesis comma Delta z 2 left parenthesis t right parenthesis comma Delta z 3 left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma EndLayoutϕ( j) = ϕ( j)(
t, Δz(t)
)
= ϕ( j)(
t, Δz1(t), Δz2(t), Δz3(t)
)
,
t ≥t j,
(10.101d) 
is a feedback control law such that 
phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis equals 0 comma t greater than or equals t Subscript j Baseline periodϕ( j)(t, 0, 0, 0) = 0,
t ≥t j.
(10.101e) 
Of course, we have 
Delta z left parenthesis t right parenthesis equals Delta z Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis equals Start 3 By 1 Matrix 1st Row q left parenthesis t right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Row integral Subscript t Subscript j Baseline Superscript t Baseline left parenthesis q left parenthesis s right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis d s 3rd Row ModifyingAbove q With dot left parenthesis t right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis EndMatrix comma t greater than or equals t Subscript j Baseline periodΔz(t) = Δz( j)(t) =
⎛
⎜⎜⎝
q(t) −q( j)(t)
t{
t j
(
q(s) −q( j)(s)
)
ds
˙q(t) −˙q( j)(t)
⎞
⎟⎟⎠,
t ≥t j.
(10.102) 
Corresponding to Sect. 10.5, the trajectoriesq equals q left parenthesis t right parenthesisq = q(t) andq Superscript left parenthesis j right parenthesis Baseline equals q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineq( j) = q( j)(t), t ≥t j, are  
embedded into a one-parameter family of trajectoriesq equals q left parenthesis t comma epsilon right parenthesis comma t greater than or equals t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1q = q(t, ε), t ≥t j, 0 ≤ε ≤1, 
in conﬁguration space which is deﬁned as follows.

10.7 Online Control Corrections: PID Controllers
273
At stage j j, here we have the following initial data: 
StartLayout 1st Row 1st Column q Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript j Baseline plus epsilon Delta q Subscript j Baseline comma 3rd Column Delta q Subscript j Baseline 4th Column colon equals q Subscript j minus ModifyingAbove q With quotation dash Subscript j 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline plus epsilon ModifyingAbove Delta With dot q Subscript j Baseline comma 3rd Column ModifyingAbove Delta With dot q Subscript j 4th Column colon equals ModifyingAbove q With dot Subscript j minus ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j 4th Row 1st Column Blank 5th Row 1st Column p Subscript upper D Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline plus epsilon Delta p Subscript upper D Baseline comma 3rd Column Delta p Subscript upper D Baseline 4th Column colon equals p Subscript upper D Baseline minus ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma EndLayoutq j(ε) := q j + εΔq j,
Δq j := q j −q j
(10.103a) 
StartLayout 1st Row 1st Column q Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript j Baseline plus epsilon Delta q Subscript j Baseline comma 3rd Column Delta q Subscript j Baseline 4th Column colon equals q Subscript j minus ModifyingAbove q With quotation dash Subscript j 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline plus epsilon ModifyingAbove Delta With dot q Subscript j Baseline comma 3rd Column ModifyingAbove Delta With dot q Subscript j 4th Column colon equals ModifyingAbove q With dot Subscript j minus ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j 4th Row 1st Column Blank 5th Row 1st Column p Subscript upper D Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline plus epsilon Delta p Subscript upper D Baseline comma 3rd Column Delta p Subscript upper D Baseline 4th Column colon equals p Subscript upper D Baseline minus ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma EndLayout˙q j(ε) := ˙q j + ε ˙Δq j,
˙Δq j := ˙q j −˙q j
(10.103b) 
StartLayout 1st Row 1st Column q Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove q With quotation dash Subscript j Baseline plus epsilon Delta q Subscript j Baseline comma 3rd Column Delta q Subscript j Baseline 4th Column colon equals q Subscript j minus ModifyingAbove q With quotation dash Subscript j 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline plus epsilon ModifyingAbove Delta With dot q Subscript j Baseline comma 3rd Column ModifyingAbove Delta With dot q Subscript j 4th Column colon equals ModifyingAbove q With dot Subscript j minus ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j 4th Row 1st Column Blank 5th Row 1st Column p Subscript upper D Baseline left parenthesis epsilon right parenthesis 2nd Column colon equals ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline plus epsilon Delta p Subscript upper D Baseline comma 3rd Column Delta p Subscript upper D Baseline 4th Column colon equals p Subscript upper D Baseline minus ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma EndLayoutpD(ε) := p( j)
D + εΔpD,
ΔpD := pD −p( j)
D ,
(10.103c) 
0 less than or equals epsilon less than or equals 10 ≤ε ≤1. Moreover, the control input u equals u left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineu = u(t), t ≥t j, is deﬁned by 
StartLayout 1st Row 1st Column u left parenthesis t right parenthesis 2nd Column equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus Delta u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma integral Subscript t Subscript j Baseline Superscript t Baseline left parenthesis q left parenthesis s right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis d s comma 3rd Row 1st Column Blank 2nd Column ModifyingAbove q With dot left parenthesis t right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline period EndLayoutu(t) = u( j)(t) + Δu( j)(t)
= u( j)(t) + ϕ( j)(
t, q(t) −q( j)(t),
t{
t j
(
q(s) −q( j)(s)
)
ds,
˙q(t) −˙q( j)(t)
)
,
t ≥t j.
(10.103d) 
Let denote now 
q left parenthesis t comma epsilon right parenthesis equals q left parenthesis t comma p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q Subscript j Baseline left parenthesis epsilon right parenthesis comma ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis comma u left parenthesis dot right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1 commaq(t, ε) = q
(
t, pD(ε), q j(ε), ˙q j(ε), u(·)
)
,
t ≥t j, 0 ≤ε ≤1,
(10.104) 
the solution of the following initial value problem based on the dynamic equation 
(10.4a) having the initial values and total control input u left parenthesis t right parenthesisu(t) given by (10.103a)– 
(10.103d): 
upper F left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q left parenthesis t comma epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis comma q With two dots left parenthesis t comma epsilon right parenthesis right parenthesis equals u left parenthesis t comma epsilon right parenthesis comma t greater than or equals t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1 commaF
(
pD(ε), q(t, ε), ˙q(t, ε), ¨q(t, ε)
)
= u(t, ε),
t ≥t j, 0 ≤ε ≤1,
(10.105a) 
where 
StartLayout 1st Row 1st Column q left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column colon equals q Subscript j Baseline left parenthesis epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Row 1st Column u left parenthesis t comma epsilon right parenthesis 2nd Column colon equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma integral Subscript t Subscript j Baseline Superscript t Baseline left parenthesis q left parenthesis s comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis d s comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma EndLayoutq(t j, ε) := q j(ε), ˙q(t j, ε) = ˙q j(ε)
(10.105b) 
u(t, ε)  := u( j ) (t) + ϕ( j)(
t, q(t, ε)  − q( j) (t), 
t{
t j
(
q(s, ε)  − q( j) (s)
)
ds, 
StartLayout 1st Row 1st Column q left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column colon equals q Subscript j Baseline left parenthesis epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline comma epsilon right parenthesis equals ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Row 1st Column u left parenthesis t comma epsilon right parenthesis 2nd Column colon equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma integral Subscript t Subscript j Baseline Superscript t Baseline left parenthesis q left parenthesis s comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis d s comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma EndLayout˙q(t, ε) −˙q( j)(t)
)
,
(10.105c) 
and the vector function upper F equals upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesisF = F(pD, q, ˙q, ¨q) is again deﬁned by 
upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals upper M left parenthesis p Subscript upper D Baseline comma q right parenthesis q With two dots plus h left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis commaF(pD, q, ˙q, ¨q) = M(pD, q)¨q + h(pD, q, ˙q),
(10.105d) 
cf. (10.105a). 
In the following we assume that problem (10.105a)–(10.105d) has a unique solu-
tion q equals q left parenthesis t comma epsilon right parenthesis comma t greater than or equals t Subscript j Baselineq = q(t, ε), t ≥t j, for each parameter epsilon comma 0 less than or equals epsilon less than or equals 1ε, 0 ≤ε ≤1.

274
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
10.7.1 
Basic Properties of the Embedding q left parenthesis t comma epsilon right parenthesisq(t, ε)
According to (10.103a)–(10.103c), for epsilon equals 0ε = 0 system (10.105a)–(10.105d) reads 
StartLayout 1st Row 1st Column Blank 2nd Column upper F left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q left parenthesis t comma 0 right parenthesis comma ModifyingAbove q With dot left parenthesis t comma 0 right parenthesis comma q With two dots left parenthesis t comma 0 right parenthesis right parenthesis 2nd Row 1st Column equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus 2nd Column phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma 0 right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma integral Subscript t Subscript j Baseline Superscript t Baseline left parenthesis q left parenthesis s comma 0 right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis d s comma 3rd Row 1st Column Blank 2nd Column ModifyingAbove q With dot left parenthesis t comma 0 right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma EndLayout
F
(
p( j)
D , q(t, 0), ˙q(t, 0), ¨q(t, 0)
)
= u( j)(t)+ϕ( j)(
t, q(t, 0) −q( j)(t),
t{
t j
(
q(s, 0) −q( j)(s)
)
ds,
˙q(t, 0) −˙q( j)(t)
)
,
t ≥t j,
(10.106a) 
where 
q left parenthesis t Subscript j Baseline comma 0 right parenthesis equals ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline comma 0 right parenthesis equals ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline periodq(t j, 0) = q j,
˙q(t j, 0) = ˙q j.
(10.106b) 
Since, due to (OSTP), 
q Superscript left parenthesis j right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis equals ModifyingAbove q With quotation dash Subscript j Baseline comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t Subscript j Baseline right parenthesis equals ModifyingAbove ModifyingAbove q With dot Subscript j Baseline With quotation dashq( j)(t j) = q j,
˙q( j)(t j) = ˙q j
and 
upper F left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline commaF
(
p( j)
D , q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
= u( j)(t),
t ≥t j,
according to the unique solvability assumption for (10.105a)–(10.105d) and condi-
tion (10.101e) we have  
q left parenthesis t comma 0 right parenthesis equals q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline periodq(t, 0) = q( j)(t),
t ≥t j.
(10.107) 
Forepsilon equals 1ε = 1, from (10.103a)–(10.103c) and (10.105a)–(10.105d) we obtain the system 
StartLayout 1st Row 1st Column Blank 2nd Column upper F left parenthesis p Subscript upper D Baseline comma q left parenthesis t comma 1 right parenthesis comma ModifyingAbove q With dot left parenthesis t comma 1 right parenthesis comma q With two dots left parenthesis t comma 1 right parenthesis right parenthesis equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma 1 right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma integral Subscript t Subscript j Baseline Superscript t Baseline left parenthesis q left parenthesis s comma 1 right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis d s comma ModifyingAbove q With dot left parenthesis t comma 1 right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma 3rd Row 1st Column Blank 2nd Column t greater than or equals t 1 EndLayoutF
(
pD, q(t, 1), ˙q(t, 1), ¨q(t, 1)
)
= u( j)(t)
+ ϕ( j)(
t, q(t, 1) −q( j)(t),
t{
t j
(
q(s, 1) −q( j)(s)
)
ds, ˙q(t, 1) −˙q( j)(t)
)
,
t ≥t1
(10.108a) 
with 
q left parenthesis t Subscript j Baseline comma 1 right parenthesis equals q Subscript j Baseline comma ModifyingAbove q With dot left parenthesis t Subscript j Baseline comma 1 right parenthesis equals ModifyingAbove q With dot Subscript j Baseline periodq(t j, 1) = q j,
˙q(t j, 1) = ˙q j.
(10.108b) 
However, since the control input is deﬁned by (10.103d), again due to the unique 
solvability property of (10.105a)–(10.105d), (10.108a), (10.108b) yields 
q left parenthesis t comma 1 right parenthesis equals q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline commaq(t, 1) = q(t),
t ≥t j,
(10.109) 
where q equals q left parenthesis t right parenthesisq = q(t) denotes the actual trajectory.

10.7 Online Control Corrections: PID Controllers
275
Remark 10.13 The integro-differential equation (10.105a)–(10.105d) can be easily 
converted into an ordinary initial value problem. Indeed, using the state variables 
StartLayout 1st Row z left parenthesis t comma epsilon right parenthesis equals Start 3 By 1 Matrix 1st Row q left parenthesis t semicolon epsilon right parenthesis 2nd Row q Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis 3rd Row ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis EndMatrix comma t greater than or equals t Subscript j Baseline comma EndLayoutz(t, ε) =
⎛
⎝
q(t; ε)
qI(t, ε)
˙q(t, ε)
⎞
⎠,
t ≥t j,
where q Subscript upper I Baseline equals q Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis comma t greater than or equals t Subscript j BaselineqI = qI(t, ε), t ≥t j, is deﬁned, see (10.101b), by 
q Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis colon equals integral Subscript t Subscript j Baseline Superscript t Baseline q left parenthesis s comma epsilon right parenthesis d s commaqI(t, ε) :=
t{
t j
q(s, ε)ds,
(10.110) 
problem (10.105a)–(10.105d) can be represented by the equivalent second-order 
initial value problem: 
StartLayout 1st Row 1st Column Blank 2nd Column upper F left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q left parenthesis t comma epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis comma q With two dots left parenthesis t comma epsilon right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis minus q Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma 3rd Row 1st Column Blank 2nd Column ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column ModifyingAbove q With dot Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis colon equals q left parenthesis t comma epsilon right parenthesis EndLayoutF
(
pD(ε), q(t, ε), ˙q(t, ε), ¨q(t, ε)
)
= u( j)(t) + ϕ( j)(
t, q(t, ε) −q( j)(t), qI(t, ε) −q( j)
I (t),
˙q(t, ε) −˙q( j)(t)
)
(10.111a) 
StartLayout 1st Row 1st Column Blank 2nd Column upper F left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q left parenthesis t comma epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis comma q With two dots left parenthesis t comma epsilon right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis minus q Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma 3rd Row 1st Column Blank 2nd Column ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column ModifyingAbove q With dot Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis colon equals q left parenthesis t comma epsilon right parenthesis EndLayout˙qI(t, ε) := q(t, ε)
(10.111b) 
with 
StartLayout 1st Row 1st Column q left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals q Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 4th Row 1st Column Blank 5th Row 1st Column q Subscript upper I Baseline left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals 0 period EndLayoutq(t j, ε) = q j(ε)
(10.111c) 
StartLayout 1st Row 1st Column q left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals q Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 4th Row 1st Column Blank 5th Row 1st Column q Subscript upper I Baseline left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals 0 period EndLayout˙q(t j, ε) = ˙q j(ε)
(10.111d) 
StartLayout 1st Row 1st Column q left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals q Subscript j Baseline left parenthesis epsilon right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove q With dot left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals ModifyingAbove q With dot Subscript j Baseline left parenthesis epsilon right parenthesis 4th Row 1st Column Blank 5th Row 1st Column q Subscript upper I Baseline left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals 0 period EndLayoutqI(t j, ε) = 0.
(10.111e) 
and 
q Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis colon equals integral Subscript t Subscript j Baseline Superscript t Baseline q Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis d s periodq( j)
I (t) :=
t{
t j
q( j)(s)ds.
(10.112) 
10.7.2 
Taylor Expansion with Respect to epsilonε
Based on representation (10.111a)–(10.111e) of problem (10.105a)–(10.105d), we 
may again assume, cf. Assumption 10.1, that the solution q equals q left parenthesis t comma epsilon right parenthesis comma t greater than or equals t Subscript j Baseline comma 0 less than or equals epsilon less than or equals 1q = q(t, ε), t ≥t j, 0 ≤
ε ≤1, has continuous derivatives with respect toepsilonε up to a certain ordernu greater than or equals 1ν ≥1 for all 
t element of left bracket t Subscript j Baseline comma t Subscript j Baseline plus Delta t Subscript j Baseline right bracket comma 0 less than or equals epsilon less than or equals 1t ∈[t j, t j + Δt j], 0 ≤ε ≤1, with a certain Delta t Subscript j Baseline greater than 0Δt j > 0. 
Corresponding to (10.76a)–(10.76c), the actual trajectory of the robot can be 
represented then, see (10.109), (10.107), (10.104), by

276
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
StartLayout 1st Row 1st Column q left parenthesis t right parenthesis 2nd Column equals q left parenthesis t comma p Subscript upper D Baseline comma q Subscript j Baseline comma ModifyingAbove q With dot Subscript j Baseline comma u left parenthesis dot right parenthesis right parenthesis equals q left parenthesis t comma 1 right parenthesis equals q left parenthesis t comma epsilon 0 plus Delta epsilon right parenthesis 2nd Row 1st Column Blank 2nd Column equals q left parenthesis t comma epsilon 0 right parenthesis plus Delta q left parenthesis t right parenthesis equals q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis plus Delta q left parenthesis t right parenthesis comma EndLayoutq(t) = q
(
t, pD, q j, ˙q j, u(·)
)
= q(t, 1) = q(t, ε0 + Δε)
= q(t, ε0) + Δq(t) = q( j)(t) + Δq(t),
(10.113a) 
with epsilon 0 equals 0 comma Delta epsilon equals 1ε0 = 0, Δε = 1. Moreover, the expansion on the tracking error Delta q equals Delta q left parenthesis t right parenthesis comma t greater than or equals t Subscript j BaselineΔq = Δq(t),
t ≥t j, is given by 
StartLayout 1st Row 1st Column Delta q left parenthesis t right parenthesis 2nd Column equals sigma summation Underscript l equals 1 Overscript nu minus 1 Endscripts StartFraction 1 Over l factorial EndFraction d Superscript l Baseline q left parenthesis t right parenthesis left parenthesis Delta epsilon right parenthesis Superscript l Baseline plus StartFraction 1 Over nu factorial EndFraction StartFraction partial differential Superscript nu Baseline Over partial differential epsilon Superscript nu Baseline EndFraction q left parenthesis t comma theta right parenthesis left parenthesis Delta epsilon right parenthesis Superscript nu Baseline 2nd Row 1st Column Blank 2nd Column equals sigma summation Underscript l equals 1 Overscript nu minus 1 Endscripts StartFraction 1 Over l factorial EndFraction d Superscript l Baseline q left parenthesis t right parenthesis plus StartFraction 1 Over nu factorial EndFraction StartFraction partial differential Superscript nu Baseline q Over partial differential epsilon Superscript nu Baseline EndFraction left parenthesis t comma theta right parenthesis comma t greater than or equals t Subscript j Baseline period EndLayoutΔq(t) =
ν−1
∑
l=1
1
l!dlq(t)(Δε)l + 1
ν!
∂ν
∂εν q(t, ϑ)(Δε)ν
=
ν−1
∑
l=1
1
l!dlq(t) + 1
ν!
∂νq
∂εν (t, ϑ),
t ≥t j.
(10.113b) 
Here, theta equals theta left parenthesis t comma nu right parenthesis comma 0 less than theta less than 1ϑ = ϑ(t, ν), 0 < ϑ < 1, and 
d Superscript l Baseline q left parenthesis t right parenthesis colon equals StartFraction partial differential Superscript l Baseline q Over partial differential epsilon Superscript l Baseline EndFraction left parenthesis t comma 0 right parenthesis comma t greater than or equals t Subscript j Baseline comma l equals 1 comma 2 comma ellipsisdlq(t) := ∂lq
∂εl (t, 0),
t ≥t j,l = 1, 2, . . .
(10.113c) 
denote thell-th order differentials ofq equals q left parenthesis t comma epsilon right parenthesisq = q(t, ε) with respect toepsilonε atepsilon equals epsilon 0 equals 0ε = ε0 = 0. Dif-
ferential equations for the differentialsd Superscript l Baseline q left parenthesis t right parenthesis comma l equals 1 comma 2 comma ellipsisdlq(t),l = 1, 2, . . ., may be obtained by suc-
cessive differentiation of the initial value problem (10.105a)–(10.105d) with respect 
to epsilonε at epsilon equals 0ε = 0. 
10.7.3 
The First-Order Differential d qdq
Corresponding to Sect. 10.6.2, we consider now the partial derivative in the Eqs. 
(10.111a)–(10.111e) with respect to epsilonε. Let  
StartLayout 1st Row 1st Column upper K left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript q Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper D left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper F Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals h Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper Y left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript p Sub Subscript upper D Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper M left parenthesis p Subscript upper D Baseline comma q right parenthesis 2nd Column colon equals upper F Subscript q With two dots Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis EndLayoutK(pD, q, ˙q, ¨q) := Fq(pD, q, ˙q, ¨q)
(10.114a) 
StartLayout 1st Row 1st Column upper K left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript q Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper D left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper F Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals h Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper Y left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript p Sub Subscript upper D Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper M left parenthesis p Subscript upper D Baseline comma q right parenthesis 2nd Column colon equals upper F Subscript q With two dots Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis EndLayoutD(pD, q, ˙q) := F˙q(pD, q, ˙q, ¨q) = h ˙q(pD, q, ˙q)
(10.114b) 
StartLayout 1st Row 1st Column upper K left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript q Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper D left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper F Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals h Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper Y left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript p Sub Subscript upper D Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper M left parenthesis p Subscript upper D Baseline comma q right parenthesis 2nd Column colon equals upper F Subscript q With two dots Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis EndLayoutY(q, ˙q, ¨q) := FpD(pD, q, ˙q, ¨q)
(10.114c) 
StartLayout 1st Row 1st Column upper K left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript q Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper D left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 2nd Column colon equals upper F Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals h Subscript ModifyingAbove q With dot Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper Y left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis 2nd Column colon equals upper F Subscript p Sub Subscript upper D Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper M left parenthesis p Subscript upper D Baseline comma q right parenthesis 2nd Column colon equals upper F Subscript q With two dots Baseline left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis EndLayoutM(pD, q) := F¨q(pD, q, ˙q, ¨q)
(10.114d) 
denote again the Jacobians of the vector functionupper F equals upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesisF = F(pD, q, ˙q, ¨q) with respect to 
q comma ModifyingAbove q With dot comma q With two dotsq, ˙q, ¨q and p Subscript upper DpD. According to the linear parametrization property of robots we have, 
see (10.77e) 
upper F left parenthesis p Subscript upper D Baseline comma q comma ModifyingAbove q With dot comma q With two dots right parenthesis equals upper Y left parenthesis q comma ModifyingAbove q With dot comma q With two dots right parenthesis p Subscript upper D Baseline periodF(pD, q, ˙q, ¨q) = Y(q, ˙q, ¨q)pD.
(10.114e) 
Taking the partial derivative with respect toepsilonε, from (10.111a)–(10.111e) we obtain 
the following equations, cf. (10.78a), (10.78b),

10.7 Online Control Corrections: PID Controllers
277
StartLayout 1st Row 1st Column Blank 2nd Column upper Y left parenthesis q left parenthesis t comma epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis comma q With two dots left parenthesis t comma epsilon right parenthesis right parenthesis Delta p Subscript upper D Baseline plus upper K left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis comma q With two dots left parenthesis t comma epsilon right parenthesis right parenthesis StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper D left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q left parenthesis t comma epsilon right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis comma q With two dots left parenthesis t comma epsilon right parenthesis right parenthesis StartFraction d Over d t EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis plus upper M left parenthesis p Subscript upper D Baseline left parenthesis epsilon right parenthesis comma q left parenthesis t comma epsilon right parenthesis right parenthesis StartFraction d squared Over d t squared EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 3rd Row 1st Column Blank 2nd Column equals phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis minus q Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 4th Row 1st Column Blank 2nd Column plus phi Subscript q Sub Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis minus q Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 5th Row 1st Column Blank 2nd Column plus phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma q left parenthesis t comma epsilon right parenthesis minus q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q Subscript upper I Baseline left parenthesis t comma epsilon right parenthesis minus q Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot left parenthesis t comma epsilon right parenthesis minus ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis StartFraction d Over d t EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis period EndLayoutY
(
q(t, ε), ˙q(t, ε), ¨q(t, ε)
)
ΔpD + K
(
pD(ε), ˙q(t, ε), ¨q(t, ε)
)∂q
∂ε (t, ε)
+ D
(
pD(ε), q(t, ε), ˙q(t, ε), ¨q(t, ε)
) d
dt
∂q
∂ε (t, ε) + M
(
pD(ε), q(t, ε)
) d2
dt2
∂q
∂ε (t, ε)
= ϕ( j)
q
(
t, q(t, ε) −q( j)(t), qI(t, ε) −q( j)
I (t), ˙q(t, ε) −˙q( j)(t)
)∂q
∂ε (t, ε)
+ ϕ( j)
qI
(
t, q(t, ε) −q( j)(t), qI(t, ε) −q( j)
I (t), ˙q(t, ε) −˙q( j)(t)
)∂qI
∂ε (t, ε)
+ ϕ( j)
˙q
(
t, q(t, ε) −q( j)(t), qI(t, ε) −q( j)
I (t), ˙q(t, ε) −˙q( j)(t)
) d
dt
∂q
∂ε (t, ε).
(10.115a) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Column equals StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals Delta q Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals ModifyingAbove Delta With dot q Subscript j Baseline 6th Row 1st Column Blank 7th Row 1st Column StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Column equals 0 period EndLayout d
dt
∂qI
∂ε (t, ε) = ∂q
∂ε (t, ε)
(10.115b) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Column equals StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals Delta q Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals ModifyingAbove Delta With dot q Subscript j Baseline 6th Row 1st Column Blank 7th Row 1st Column StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Column equals 0 period EndLayout∂q
∂ε (t j, ε) = Δq j
(10.115c) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Column equals StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals Delta q Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals ModifyingAbove Delta With dot q Subscript j Baseline 6th Row 1st Column Blank 7th Row 1st Column StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Column equals 0 period EndLayout d
dt
∂q
∂ε (t j, ε) = ˙Δq j
(10.115d) 
StartLayout 1st Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Column equals StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals Delta q Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column StartFraction d Over d t EndFraction StartFraction partial differential q Over partial differential epsilon EndFraction left parenthesis t Subscript j Baseline comma epsilon right parenthesis 2nd Column equals ModifyingAbove Delta With dot q Subscript j Baseline 6th Row 1st Column Blank 7th Row 1st Column StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma epsilon right parenthesis 2nd Column equals 0 period EndLayout∂qI
∂ε (t, ε) = 0.
(10.115e) 
Putting now epsilon equals epsilon 0 equals 0ε = ε0 = 0, due to (10.107), (10.110), 10.113c) we obtain 
StartLayout 1st Row 1st Column Blank 2nd Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline plus upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis d q left parenthesis t right parenthesis plus upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis ModifyingAbove d With dot q left parenthesis t right parenthesis plus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis d With two dots q left parenthesis t right parenthesis 2nd Row 1st Column equals 2nd Column phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis d q left parenthesis t right parenthesis plus phi Subscript q Sub Subscript upper I Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis integral Subscript t Subscript j Baseline Superscript t Baseline d q left parenthesis s right parenthesis d s plus phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis ModifyingAbove d With dot q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column d q left parenthesis t Subscript j Baseline right parenthesis equals Delta q Subscript j Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis equals ModifyingAbove Delta With dot q Subscript j Baseline comma EndLayoutY ( j)(t)ΔpD + K ( j)(t)dq(t) + D( j)(t) ˙dq(t) + M( j)(t) ¨dq(t)
=ϕ( j)
q (t, 0, 0, 0)dq(t) + ϕ( j)
qI (t, 0, 0, 0)
t{
t j
dq(s)ds + ϕ( j)
˙q (t, 0, 0, 0) ˙dq(t), t ≥t j
(10.116a) 
StartLayout 1st Row 1st Column Blank 2nd Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline plus upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis d q left parenthesis t right parenthesis plus upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis ModifyingAbove d With dot q left parenthesis t right parenthesis plus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis d With two dots q left parenthesis t right parenthesis 2nd Row 1st Column equals 2nd Column phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis d q left parenthesis t right parenthesis plus phi Subscript q Sub Subscript upper I Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis integral Subscript t Subscript j Baseline Superscript t Baseline d q left parenthesis s right parenthesis d s plus phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis ModifyingAbove d With dot q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column d q left parenthesis t Subscript j Baseline right parenthesis equals Delta q Subscript j Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis equals ModifyingAbove Delta With dot q Subscript j Baseline comma EndLayoutdq(t j) = Δq j
(10.116b) 
StartLayout 1st Row 1st Column Blank 2nd Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline plus upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis d q left parenthesis t right parenthesis plus upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis ModifyingAbove d With dot q left parenthesis t right parenthesis plus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis d With two dots q left parenthesis t right parenthesis 2nd Row 1st Column equals 2nd Column phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis d q left parenthesis t right parenthesis plus phi Subscript q Sub Subscript upper I Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis integral Subscript t Subscript j Baseline Superscript t Baseline d q left parenthesis s right parenthesis d s plus phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis ModifyingAbove d With dot q left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column d q left parenthesis t Subscript j Baseline right parenthesis equals Delta q Subscript j Baseline 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis equals ModifyingAbove Delta With dot q Subscript j Baseline comma EndLayout ˙dq(t j) = ˙Δq j,
(10.116c) 
where 
ModifyingAbove d With dot q colon equals StartFraction d Over d t EndFraction d q comma d With two dots q colon equals StartFraction d squared Over d t squared EndFraction d q period ˙dq := d
dt dq,
¨dq := d2
dt2 dq.
(10.117a) 
From (10.115b), (10.115e) we obtain 
StartFraction partial differential q Subscript upper I Baseline Over partial differential epsilon EndFraction left parenthesis t comma 0 right parenthesis equals integral Subscript t Subscript j Baseline Superscript t Baseline d q left parenthesis s right parenthesis d s comma∂qI
∂ε (t, 0) =
t{
t j
dq(s)ds,
(10.117b) 
which is already used in (10.116a). Moreover, the matricesupper Y Superscript left parenthesis j right parenthesis Baseline comma upper K Superscript left parenthesis j right parenthesis Baseline comma upper D Superscript left parenthesis j right parenthesisY ( j), K ( j), D( j) andupper M Superscript left parenthesis j right parenthesisM( j)
are deﬁned as in Eqs. (10.79e)–(10.79g) of Sect. 10.6.2, hence,

278
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
StartLayout 1st Row 1st Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper Y left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper K left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper D left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma EndLayoutY ( j)(t) := Y
(
q( j)(t), ˙q( j)(t)¨q( j)(t)
)
(10.118a) 
StartLayout 1st Row 1st Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper Y left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper K left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper D left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma EndLayoutK ( j)(t) := K
(
p( j)
D , q( j)(t), ˙q( j)(t), ¨q( j)(t)
)
(10.118b) 
StartLayout 1st Row 1st Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper Y left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper K left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper D left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma EndLayoutD( j)(t) := D
(
p( j)
D , q( j)(t), ˙q( j)(t)
)
(10.118c) 
StartLayout 1st Row 1st Column upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper Y left parenthesis q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper K left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma q With two dots Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 4th Row 1st Column Blank 5th Row 1st Column upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper D left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis 6th Row 1st Column Blank 7th Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 2nd Column colon equals upper M left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma q Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline comma EndLayoutM( j)(t) := M
(
p( j)
D , q( j)(t)
)
, t ≥t j,
(10.118d) 
see also (10.114a)–(10.114d). 
Multiplying now (10.116a) with the inverseupper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1M( j)(t)−1 ofupper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesisM( j)(t) and rearranging 
terms, we get 
StartLayout 1st Row 1st Column d With two dots q left parenthesis t right parenthesis 2nd Column plus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis ModifyingAbove d With dot q left parenthesis t right parenthesis 2nd Row 1st Column Blank 2nd Column plus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis d q left parenthesis t right parenthesis 3rd Row 1st Column Blank 2nd Column minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline phi Subscript q Sub Subscript upper I Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis integral Subscript t Subscript j Baseline Superscript t Baseline d q left parenthesis s right parenthesis d s equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline Delta p Subscript upper D Baseline comma t greater than or equals t Subscript j Baseline EndLayout ¨dq(t) + M( j)(t)−1(
D( j)(t) −ϕ( j)
˙q (t, 0, 0, 0)
) ˙dq(t)
+ M( j)(t)−1(
K ( j)(t) −ϕ( j)
q (t, 0, 0, 0)
)
dq(t)
−M( j)(t)−1ϕ( j)
qI (t, 0, 0, 0)
t{
t j
dq(s)ds = −M( j)(t)−1Y ( j)ΔpD, t ≥t j
(10.119) 
with the initial conditions (10.116b), (10.116b). 
For given matrices upper K Subscript d Baseline comma upper K Subscript p Baseline comma upper K Subscript i BaselineKd, K p, Ki to be selected later on, the unknown Jacobians 
phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline comma phi Subscript q Superscript left parenthesis j right parenthesisϕ( j)
˙q , ϕ( j)
q
and phi Subscript q Sub Subscript upper I Superscript left parenthesis j right parenthesisϕ( j)
qI are deﬁned now by the equations 
StartLayout 1st Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis 2nd Column equals upper K Subscript d Baseline 2nd Row 1st Column Blank 3rd Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis 2nd Column equals upper K Subscript p Baseline 4th Row 1st Column Blank 5th Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis minus phi Subscript q Sub Subscript upper I Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis 2nd Column equals upper K Subscript i Baseline period EndLayoutM( j)(t)−1(
D( j)(t) −ϕ( j)
˙q (t, 0, 0, 0)
)
= Kd
(10.120a) 
StartLayout 1st Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis 2nd Column equals upper K Subscript d Baseline 2nd Row 1st Column Blank 3rd Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis 2nd Column equals upper K Subscript p Baseline 4th Row 1st Column Blank 5th Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis minus phi Subscript q Sub Subscript upper I Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis 2nd Column equals upper K Subscript i Baseline period EndLayoutM( j)(t)−1(
K ( j)(t) −ϕ( j)
q (t, 0, 0, 0)
)
= K p
(10.120b) 
StartLayout 1st Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis 2nd Column equals upper K Subscript d Baseline 2nd Row 1st Column Blank 3rd Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis 2nd Column equals upper K Subscript p Baseline 4th Row 1st Column Blank 5th Row 1st Column upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis minus phi Subscript q Sub Subscript upper I Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis right parenthesis 2nd Column equals upper K Subscript i Baseline period EndLayoutM( j)(t)−1(
−ϕ( j)
qI (t, 0, 0, 0)
)
= Ki.
(10.120c) 
Thus, we have 
StartLayout 1st Row 1st Column phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis 2nd Column equals upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript p Baseline 2nd Row 1st Column Blank 3rd Row 1st Column phi Subscript q Sub Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis 2nd Column equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript i Baseline 4th Row 1st Column Blank 5th Row 1st Column phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis 2nd Column equals upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript d Baseline period EndLayoutϕ( j)
q (t, 0, 0, 0) = K ( j)(t) −M( j)(t)K p
(10.121a) 
StartLayout 1st Row 1st Column phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis 2nd Column equals upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript p Baseline 2nd Row 1st Column Blank 3rd Row 1st Column phi Subscript q Sub Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis 2nd Column equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript i Baseline 4th Row 1st Column Blank 5th Row 1st Column phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis 2nd Column equals upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript d Baseline period EndLayoutϕ( j)
qI (t, 0, 0, 0) =
−M( j)(t)Ki
(10.121b) 
StartLayout 1st Row 1st Column phi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis 2nd Column equals upper K Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript p Baseline 2nd Row 1st Column Blank 3rd Row 1st Column phi Subscript q Sub Subscript upper I Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis 2nd Column equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript i Baseline 4th Row 1st Column Blank 5th Row 1st Column phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis 2nd Column equals upper D Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis upper K Subscript d Baseline period EndLayoutϕ( j)
˙q (t, 0, 0, 0) = D( j)(t) −M( j)(t)Kd.
(10.121c) 
Putting (10.120a)–(10.120c) into system (10.119), we ﬁnd 
d With two dots q left parenthesis t right parenthesis plus upper K Subscript d Baseline ModifyingAbove d With dot q left parenthesis t right parenthesis plus upper K Subscript p Baseline d q left parenthesis t right parenthesis plus upper K Subscript i Baseline integral Subscript t Subscript j Baseline Superscript t Baseline d q left parenthesis s right parenthesis d s equals psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline comma ¨dq(t) + Kd ˙dq(t) + K pdq(t) + Ki
t{
t j
dq(s)ds = ψ( j,1)(t),
t ≥t j,
(10.122a) 
with 
StartLayout 1st Row 1st Column d q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta q Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals ModifyingAbove Delta With dot q Subscript j Baseline comma EndLayoutdq(t j) = Δq j
(10.122b) 
StartLayout 1st Row 1st Column d q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta q Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals ModifyingAbove Delta With dot q Subscript j Baseline comma EndLayout ˙dq(t j) = ˙Δq j,
(10.122c)

10.7 Online Control Corrections: PID Controllers
279
where psi Superscript left parenthesis j comma i Baseline 1 Baseline left parenthesis t right parenthesisψ( j,i1(t) is given, cf. (10.84d), by 
psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis colon equals minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline periodψ( j,1)(t) := −M( j)(t)−1Y ( j)(t)ΔpD.
(10.122d) 
Ifupper K Subscript p Baseline comma upper K Subscript d BaselineK p, Kd andupper K Subscript iKi are ﬁxed matrices, then by differentiation of the integro-differential 
equation (10.122a) with respect to timett we obtain the following third-order system 
of linear differential equations 
d With three dots q left parenthesis t right parenthesis plus upper K Subscript d Baseline d With two dots q left parenthesis t right parenthesis plus upper K Subscript p Baseline ModifyingAbove d With dot q left parenthesis t right parenthesis plus upper K Subscript i Baseline d q left parenthesis t right parenthesis equals ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline comma...
d q(t) + Kd ¨dq(t) + K p ˙dq(t) + Kidq(t) = ˙ψ( j,1)(t),
t ≥t j,
(10.123a) 
for the ﬁrst-order tracking error term d q equals d q left parenthesis t right parenthesis comma t equals t Subscript j Baselinedq = dq(t), t = t j. Moreover, the initial con-
ditions read, see (10.122b), (10.122c), 
StartLayout 1st Row 1st Column d q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta q Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals ModifyingAbove Delta With dot q Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column d With two dots q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta With two dots q Subscript j Baseline colon equals q With two dots Subscript j Baseline minus q With two dots Superscript left parenthesis j right parenthesis Baseline comma EndLayoutdq(t j) = Δq j
(10.123b) 
StartLayout 1st Row 1st Column d q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta q Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals ModifyingAbove Delta With dot q Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column d With two dots q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta With two dots q Subscript j Baseline colon equals q With two dots Subscript j Baseline minus q With two dots Superscript left parenthesis j right parenthesis Baseline comma EndLayout ˙dq(t j) = ˙Δq j
(10.123c) 
StartLayout 1st Row 1st Column d q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta q Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove d With dot q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals ModifyingAbove Delta With dot q Subscript j Baseline 4th Row 1st Column Blank 5th Row 1st Column d With two dots q left parenthesis t Subscript j Baseline right parenthesis 2nd Column equals Delta With two dots q Subscript j Baseline colon equals q With two dots Subscript j Baseline minus q With two dots Superscript left parenthesis j right parenthesis Baseline comma EndLayout ¨dq(t j) = ¨Δq j := ¨q j −¨q( j),
(10.123d) 
where q With two dots Subscript j Baseline colon equals q With two dots left parenthesis t Subscript j Baseline right parenthesis¨q j := ¨q(t j), see  (10.103a)–(10.103c). 
Corresponding to (10.84a)–(10.84c), the system (10.122a) of third-order linear 
differential equations can be converted easily into the following system of ﬁrst-order 
differential equations 
ModifyingAbove d With dot z left parenthesis t right parenthesis equals upper A d z left parenthesis t right parenthesis plus Start 3 By 1 Matrix 1st Row 0 2nd Row 0 3rd Row ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis EndMatrix comma t greater than or equals t Subscript j Baseline comma ˙dz(t) = Adz(t) +
⎛
⎝
0
0
˙ψ( j,1)(t)
⎞
⎠,
t ≥t j,
(10.124a) 
where 
StartLayout 1st Row 1st Column upper A 2nd Column colon equals Start 3 By 3 Matrix 1st Row 1st Column 0 2nd Column upper I 3rd Column 0 2nd Row 1st Column 0 2nd Column 0 3rd Column upper I 3rd Row 1st Column minus upper K Subscript i Baseline 2nd Column minus upper K Subscript p Baseline 3rd Column minus upper K Subscript d Baseline EndMatrix comma 2nd Row 1st Column Blank 3rd Row 1st Column d z left parenthesis t Subscript j Baseline right parenthesis 2nd Column colon equals Start 3 By 1 Matrix 1st Row Delta q Subscript j Baseline 2nd Row ModifyingAbove Delta With dot q Subscript j Baseline 3rd Row Delta With two dots q Subscript j Baseline EndMatrix equals Delta z Subscript j Baseline EndLayoutA :=
⎛
⎝
0
I
0
0
0
I
−Ki −K p −Kd
⎞
⎠,
(10.124b) 
StartLayout 1st Row 1st Column upper A 2nd Column colon equals Start 3 By 3 Matrix 1st Row 1st Column 0 2nd Column upper I 3rd Column 0 2nd Row 1st Column 0 2nd Column 0 3rd Column upper I 3rd Row 1st Column minus upper K Subscript i Baseline 2nd Column minus upper K Subscript p Baseline 3rd Column minus upper K Subscript d Baseline EndMatrix comma 2nd Row 1st Column Blank 3rd Row 1st Column d z left parenthesis t Subscript j Baseline right parenthesis 2nd Column colon equals Start 3 By 1 Matrix 1st Row Delta q Subscript j Baseline 2nd Row ModifyingAbove Delta With dot q Subscript j Baseline 3rd Row Delta With two dots q Subscript j Baseline EndMatrix equals Delta z Subscript j Baseline EndLayoutdz(t j) :=
⎛
⎝
Δq j
˙Δq j
¨Δq j
⎞
⎠= Δz j
(10.124c) 
and 
d z left parenthesis t right parenthesis colon equals Start 3 By 1 Matrix 1st Row d q left parenthesis t right parenthesis 2nd Row ModifyingAbove d With dot q left parenthesis t right parenthesis 3rd Row d With two dots q left parenthesis t right parenthesis EndMatrix perioddz(t) :=
⎛
⎝
dq(t)
˙dq(t)
¨dq(t)
⎞
⎠.
(10.124d) 
With the fundamental matrix normal upper Phi left parenthesis t comma tau right parenthesis colon equals e Superscript upper A left parenthesis t minus tau right parenthesis Baseline comma t greater than or equals tauϕ(t, τ) := eA(t−τ), t ≥τ, the solution of (10.124a)– 
(10.124d) reads

280
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
d z left parenthesis t right parenthesis equals e Superscript upper A left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline Delta z Subscript j Baseline plus integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus tau right parenthesis Baseline Start 3 By 1 Matrix 1st Row 0 2nd Row 0 3rd Row ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis EndMatrix d tau comma t greater than or equals t Subscript j Baseline commadz(t) = eA(t−t j)Δz j +
t{
t j
eA(t−τ)
⎛
⎝
0
0
˙ψ( j,1)(τ)
⎞
⎠dτ, t ≥t j,
(10.125a) 
where, see (10.122d), 
ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis equals minus StartFraction d Over d t EndFraction left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Delta p Subscript upper D Baseline period ˙ψ( j,1)(t) = −d
dt
(
M( j)(t)−1Y ( j)(t)
)
ΔpD.
(10.125b) 
Because of 
Delta p Subscript upper D Baseline equals p Subscript upper D Baseline left parenthesis omega right parenthesis minus ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline equals p Subscript upper D Baseline left parenthesis omega right parenthesis minus upper E left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis commaΔpD = pD(ω) −p( j)
D = pD(ω) −E
(
pD(ω)|At j
)
,
see (10.103c), for the conditional mean ﬁrst-order error term upper E left parenthesis d z left parenthesis t right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesisE
(
dz(t)|At j
)
from 
(10.125a), (10.125b) we get 
upper E left parenthesis d z left parenthesis t right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals e Superscript upper A left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline upper E left parenthesis Delta z Subscript j Baseline vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis comma t greater than or equals t Subscript j Baseline periodE
(
dz(t)|At j
)
= eA(t−t j)E(Δz j|At j),
t ≥t j.
(10.125c) 
Obviously, the properties of the ﬁrst-order error terms d z left parenthesis t right parenthesis comma upper E left parenthesis d z left parenthesis t right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesisdz(t), E(dz(t)|At j), resp., 
t greater than or equals t Subscript jt ≥t j, or the stability properties of the 1st order system (10.124a)–(10.124d) depend 
on the eigenvalues of the matrix upper AA. 
10.7.3.1 
Diagonalmatrices upper K Subscript p Baseline comma upper K Subscript d Baseline comma upper K Subscript i BaselineK p, Kd, Ki
Supposing here, cf. Sect. 10.5, that upper K Subscript p Baseline comma upper K Subscript d Baseline comma upper K Subscript i BaselineK p, Kd, Ki are diagonal matrices 
upper K Subscript p Baseline equals left parenthesis gamma Subscript p k Baseline delta Subscript k kappa Baseline right parenthesis comma upper K Subscript d Baseline equals left parenthesis gamma Subscript d k Baseline delta Subscript k kappa Baseline right parenthesis comma upper K Subscript i Baseline equals left parenthesis gamma Subscript i k Baseline delta Subscript k kappa Baseline right parenthesisK p = (γpkδkκ), Kd = (γdkδkκ), Ki = (γikδkκ)
(10.126) 
with diagonal elementsgamma Subscript p k Baseline comma gamma Subscript d k Baseline comma gamma Subscript i k Baselineγpk, γdk, γik, resp.,k equals 1 comma ellipsis comma nk = 1, . . . , n, system (10.123a) is divided 
into the separated ordinary differential equations 
d With three dots q Subscript k Baseline left parenthesis t right parenthesis plus gamma Subscript d k Baseline d With two dots q Subscript k Baseline left parenthesis t right parenthesis plus gamma Subscript p k Baseline ModifyingAbove d With dot q Subscript k Baseline left parenthesis t right parenthesis plus gamma Subscript i k Baseline d q Subscript k Baseline left parenthesis t right parenthesis equals ModifyingAbove psi With dot Subscript k Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline comma...
d qk(t) + γdk ¨dqk(t) + γpk ˙dqk(t) + γikdqk(t) = ˙ψ( j,1)
k
(t),
t ≥t j,
(10.127a) 
k equals 1 comma 2 comma ellipsis comma nk = 1, 2, . . . , n. The related homogeneous differential equations read 
d With three dots q Subscript k Baseline plus gamma Subscript d k Baseline d With two dots q Subscript k Baseline plus gamma Subscript p k Baseline ModifyingAbove d With dot q Subscript k Baseline plus gamma Subscript i k Baseline d q Subscript k Baseline equals 0 comma...
d qk + γdk ¨dqk + γpk ˙dqk + γikdqk = 0,
(10.127b) 
k equals 1 comma ellipsis comma nk = 1, . . . , n, which have the characteristic equations 
lamda cubed plus gamma Subscript d k Baseline lamda squared plus gamma Subscript p k Baseline lamda plus gamma Subscript i k Baseline equals colon p Subscript k Baseline left parenthesis lamda right parenthesis equals 0 comma k equals 1 comma ellipsis comma n commaλ3 + γdkλ2 + γpkλ + γik =: pk(λ) = 0,
k = 1, . . . , n,
(10.127c) 
with the polynomials p Subscript k Baseline equals p Subscript k Baseline left parenthesis lamda right parenthesis comma k equals 1 comma ellipsis comma npk = pk(λ), k = 1, . . . , n, of degree equals 3= 3.

10.7 Online Control Corrections: PID Controllers
281
A system described by the homogeneous differential equation (10.127b) is called 
uniformly (asymptotic) stable if 
limit Underscript t right arrow normal infinity Endscripts d q Subscript k Baseline left parenthesis t right parenthesis equals 0 lim
t→∞dqk(t) = 0
(10.128a) 
for arbitrary initial values (10.123b)–(10.123d). It is well known that property 
(10.128a) holds if 
upper R e left parenthesis lamda Subscript k l Baseline right parenthesis less than 0 comma l equals 1 comma 2 comma 3 commaRe(λkl) < 0,
l = 1, 2, 3,
(10.128b) 
where upper R e left parenthesis lamda Subscript k l Baseline right parenthesisRe(λkl) denotes the real part of the zeros lamda Subscript k Baseline 1 Baseline comma lamda Subscript k Baseline 2 Baseline comma lamda Subscript k Baseline 3 Baselineλk1, λk2, λk3 of the characteristic 
equation (10.127c). According to the Hurwitz criterion, a necessary and sufﬁcient 
condition for (10.128b) is the set of inequalities 
StartLayout 1st Row 1st Column Blank 2nd Column det left parenthesis gamma Subscript d k Baseline right parenthesis greater than 0 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column det Start 2 By 2 Matrix 1st Row 1st Column gamma Subscript d k Baseline 2nd Column 1 2nd Row 1st Column gamma Subscript i k Baseline 2nd Column gamma Subscript p k Baseline EndMatrix equals gamma Subscript d k Baseline gamma Subscript p k Baseline minus gamma Subscript i k Baseline greater than 0 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column det Start 3 By 3 Matrix 1st Row 1st Column gamma Subscript d k Baseline 2nd Column 1 3rd Column 0 2nd Row 1st Column gamma Subscript i k Baseline 2nd Column gamma Subscript p k Baseline 3rd Column gamma Subscript d k Baseline 3rd Row 1st Column 0 2nd Column 0 3rd Column gamma Subscript i k Baseline EndMatrix equals gamma Subscript i k Baseline left parenthesis gamma Subscript d k Baseline gamma Subscript p k Baseline minus gamma Subscript i k Baseline right parenthesis greater than 0 period EndLayout det(γdk) > 0
(10.129a) 
StartLayout 1st Row 1st Column Blank 2nd Column det left parenthesis gamma Subscript d k Baseline right parenthesis greater than 0 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column det Start 2 By 2 Matrix 1st Row 1st Column gamma Subscript d k Baseline 2nd Column 1 2nd Row 1st Column gamma Subscript i k Baseline 2nd Column gamma Subscript p k Baseline EndMatrix equals gamma Subscript d k Baseline gamma Subscript p k Baseline minus gamma Subscript i k Baseline greater than 0 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column det Start 3 By 3 Matrix 1st Row 1st Column gamma Subscript d k Baseline 2nd Column 1 3rd Column 0 2nd Row 1st Column gamma Subscript i k Baseline 2nd Column gamma Subscript p k Baseline 3rd Column gamma Subscript d k Baseline 3rd Row 1st Column 0 2nd Column 0 3rd Column gamma Subscript i k Baseline EndMatrix equals gamma Subscript i k Baseline left parenthesis gamma Subscript d k Baseline gamma Subscript p k Baseline minus gamma Subscript i k Baseline right parenthesis greater than 0 period EndLayout det
(γdk
1
γik γpk
)
= γdkγpk −γik > 0
(10.129b) 
StartLayout 1st Row 1st Column Blank 2nd Column det left parenthesis gamma Subscript d k Baseline right parenthesis greater than 0 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column det Start 2 By 2 Matrix 1st Row 1st Column gamma Subscript d k Baseline 2nd Column 1 2nd Row 1st Column gamma Subscript i k Baseline 2nd Column gamma Subscript p k Baseline EndMatrix equals gamma Subscript d k Baseline gamma Subscript p k Baseline minus gamma Subscript i k Baseline greater than 0 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column det Start 3 By 3 Matrix 1st Row 1st Column gamma Subscript d k Baseline 2nd Column 1 3rd Column 0 2nd Row 1st Column gamma Subscript i k Baseline 2nd Column gamma Subscript p k Baseline 3rd Column gamma Subscript d k Baseline 3rd Row 1st Column 0 2nd Column 0 3rd Column gamma Subscript i k Baseline EndMatrix equals gamma Subscript i k Baseline left parenthesis gamma Subscript d k Baseline gamma Subscript p k Baseline minus gamma Subscript i k Baseline right parenthesis greater than 0 period EndLayout det
⎛
⎝
γdk
1
0
γik γpk γdk
0
0
γik
⎞
⎠= γik(γdkγpk −γik) > 0.
(10.129c) 
Note that 
upper H Subscript 3 k Baseline colon equals Start 3 By 3 Matrix 1st Row 1st Column gamma Subscript d k 2nd Column 1 3rd Column 0 2nd Row 1st Column gamma Subscript i k 2nd Column gamma Subscript p k 3rd Column gamma Subscript d k 3rd Row 1st Column 0 2nd Column 0 3rd Column gamma Subscript i k EndMatrixH3k :=
⎛
⎝
γdk
1
0
γik γpk γdk
0
0
γik
⎞
⎠
(10.129d) 
is the so-called Hurwitz matrix of (10.127b). 
Obviously, from (10.129a)–(10.129c) we now obtain this result: 
Theorem 10.8 The system represented by the homogeneous third-order linear dif-
ferential equation (10.127b) is uniformly (asymptotic) stable if the (feedback) coef-
ﬁcients gamma Subscript p k Baseline comma gamma Subscript d k Baseline comma gamma Subscript i k Baselineγpk, γdk, γik are selected such that 
StartLayout 1st Row 1st Column Blank 2nd Column gamma Subscript p k Baseline greater than 0 comma gamma Subscript d k Baseline greater than 0 comma gamma Subscript i k Baseline greater than 0 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column gamma Subscript d k Baseline gamma Subscript p k Baseline greater than gamma Subscript i k Baseline period EndLayoutγpk > 0, γdk > 0, γik > 0
(10.130a) 
StartLayout 1st Row 1st Column Blank 2nd Column gamma Subscript p k Baseline greater than 0 comma gamma Subscript d k Baseline greater than 0 comma gamma Subscript i k Baseline greater than 0 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column gamma Subscript d k Baseline gamma Subscript p k Baseline greater than gamma Subscript i k Baseline period EndLayoutγdkγpk > γik.
(10.130b) 
10.7.3.2 
Mean Absolute First-Order Tracking Error 
Because of upper E left parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals 0E
(
ΔpD(ω)|At j
)
= 0 and the representation (10.125b) of  ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline equals ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis ˙ψ( j,1) =
˙ψ( j,1)(t), corresponding to (10.85b) we have  
upper E left parenthesis ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals 0 comma t greater than or equals t Subscript j Baseline periodE
(
˙ψ( j,1)(t)|At j
)
= 0,
t ≥t j.
(10.131a)

282
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
Hence, (10.125a) yields 
upper E left parenthesis d z left parenthesis t right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals e Superscript upper A left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline upper E left parenthesis Delta z Subscript j Baseline vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis commaE
(
dz(t)|At j
)
= eA(t−t j)E
(
Δz j|At j
)
,
(10.131b) 
where 
upper E left parenthesis Delta z Subscript j Baseline vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals upper E left parenthesis z left parenthesis t Subscript j Baseline right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis minus ModifyingAbove z With bar Subscript jE
(
Δz j|At j
)
= E
(
z(t j)|At j
)
−¯z j
(10.131c) 
with, cf. (10.106a), (10.123d), 
ModifyingAbove z With bar Subscript j Baseline equals Start 3 By 1 Matrix 1st Row ModifyingAbove q With quotation dash Subscript j Baseline 2nd Row ModifyingAbove Above ModifyingAbove q With dot With quotation dash Subscript j Baseline 3rd Row q With two dots Superscript left parenthesis j right parenthesis Baseline EndMatrix comma z left parenthesis t Subscript j Baseline right parenthesis equals Start 3 By 1 Matrix 1st Row q Subscript j Baseline 2nd Row ModifyingAbove q With dot Subscript j Baseline 3rd Row q With two dots Subscript j Baseline EndMatrix period¯z j =
⎛
⎝
q j
˙q j
¨q( j)
⎞
⎠, z(t j) =
⎛
⎝
q j
˙q j
¨q j
⎞
⎠.
(10.131d) 
The matrices upper K Subscript p Baseline comma upper K Subscript i Baseline comma upper K Subscript d BaselineK p, Ki, Kd in the deﬁnition (10.120a)–(10.120c) or (10.121a)– 
(10.121c) of the Jacobiansphi Subscript q Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis comma phi Subscript q Sub Subscript upper I Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesis comma phi Subscript ModifyingAbove q With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma 0 comma 0 comma 0 right parenthesisϕ( j)
q (t, 0, 0, 0), ϕ( j)
qI (t, 0, 0, 0), ϕ( j)
˙q (t, 0, 0, 0) of the feed-
back control lawDelta u Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis equals phi Superscript left parenthesis j right parenthesis Baseline left parenthesis t comma Delta q comma Delta q Subscript upper I Baseline comma ModifyingAbove Delta With dot q right parenthesisΔu( j)(t) = ϕ( j)(t, Δq, ΔqI, ˙Δq) can be chosen now, see Theorem 
10.8, such that the fundamental matrix normal upper Phi left parenthesis t comma tau right parenthesis equals e Superscript upper A left parenthesis t minus tau right parenthesis Baseline comma t greater than or equals tauϕ(t, τ) = eA(t−τ), t ≥τ, is exponentially 
stable, hence, 
parallel to normal upper Phi left parenthesis t comma tau right parenthesis parallel to less than or equals a 0 e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline comma t greater than or equals tau comma||ϕ(t, τ)|| ≤a0e−λ0(t−τ),
t ≥τ,
(10.132) 
with constants a 0 greater than 0 comma lamda 0 greater than 0a0 > 0, λ0 > 0, see also (10.86a). 
Considering the Euclidean normparallel to d z left parenthesis t right parenthesis parallel to||dz(t)|| of the ﬁrst-order error termd z left parenthesis t right parenthesisdz(t), from  
(10.125a), (10.125b) and with (10.132) we obtain 
StartLayout 1st Row 1st Column parallel to d z left parenthesis t right parenthesis parallel to 2nd Column less than or equals parallel to e Superscript upper A left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline Delta z Subscript j Baseline parallel to plus double vertical bar integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript upper A left parenthesis t minus tau right parenthesis Baseline Start 3 By 1 Matrix 1st Row 0 2nd Row 0 3rd Row ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis EndMatrix d tau double vertical bar 2nd Row 1st Column Blank 2nd Column less than or equals a 0 e Superscript minus lamda 0 left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline parallel to Delta z Subscript j Baseline parallel to plus integral Subscript t Subscript j Baseline Superscript t Baseline double vertical bar e Superscript upper A left parenthesis t minus tau right parenthesis Baseline Start 3 By 1 Matrix 1st Row 0 2nd Row 0 3rd Row ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis EndMatrix double vertical bar d tau 3rd Row 1st Column Blank 2nd Column less than or equals a 0 e Superscript minus lamda 0 left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline parallel to Delta z Subscript j Baseline parallel to plus integral Subscript t Subscript j Baseline Superscript t Baseline a 0 e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline parallel to ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis parallel to d tau period EndLayout||dz(t)|| ≤||eA(t−t j)Δz j|| +
||||||||||||||
t{
t j
eA(t−τ)
⎛
⎝
0
0
˙ψ( j,1)(τ)
⎞
⎠dτ
||||||||||||||
≤a0e−λ0(t−t j)||Δz j|| +
t{
t j
||||||||||||
eA(t−τ)
⎛
⎝
0
0
˙ψ( j,1)(τ)
⎞
⎠
||||||||||||
dτ
≤a0e−λ0(t−t j)||Δz j|| +
t{
t j
a0e−λ0(t−τ)|| ˙ψ( j,1)(τ)||dτ.
(10.133) 
Taking the conditional expectation in (10.133), we ﬁnd 
StartLayout 1st Row 1st Column upper E left parenthesis parallel to d z left parenthesis t right parenthesis parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals 2nd Column a 0 e Superscript minus lamda 0 left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline upper E left parenthesis parallel to Delta z Subscript j Baseline parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus a 0 integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline upper E left parenthesis parallel to ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis d tau period EndLayoutE
(
||dz(t)||
|||At j
)
≤a0e−λ0(t−t j)E
(
||Δz j||
|||At j
)
+ a0
t{
t j
e−λ0(t−τ)E
(
|| ˙ψ( j,1)(τ)||
|||At j
)
dτ.
(10.134)

10.7 Online Control Corrections: PID Controllers
283
Applying Jensen’s inequality 
StartRoot upper E upper X left parenthesis omega right parenthesis EndRoot greater than or equals upper E StartRoot upper X left parenthesis omega right parenthesis EndRoot comma
√
E X(ω) ≥E
√
X(ω),
where upper X equals upper X left parenthesis omega right parenthesisX = X(ω) is a nonnegative random variable, with (10.125b) we get, cf. 
(10.87d), (10.87e), 
StartLayout 1st Row 1st Column upper E left parenthesis parallel to ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Column equals upper E left parenthesis StartRoot parallel to ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis parallel to squared EndRoot vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals StartRoot upper E left parenthesis parallel to ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis tau right parenthesis parallel to squared vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot 3rd Row 1st Column Blank 2nd Column less than or equals double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Over d t EndFraction left parenthesis tau right parenthesis double vertical bar StartRoot v a r left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot comma EndLayoutE
(
|| ˙ψ( j,1)(τ)||
|||At j
)
= E
(/
|| ˙ψ( j,1)(τ)||2
|||At j
)
≤
/
E
(
|| ˙ψ( j,1)(τ)||2
|||At j
)
(10.135a) 
≤
||||||||||||
d
(
M( j) (t)−1Y ( j ) (t)
)
dt 
(τ )
||||||||||||
/
var
(
pD(·)
|||At j
)
, 
where 
v a r left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis colon equals upper E left parenthesis parallel to Delta p Subscript upper D Baseline left parenthesis omega right parenthesis parallel to squared vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis periodvar
(
pD(·)
||At j
)
:= E
(
||ΔpD(ω)||2||At j
)
.
(10.135b) 
In the following we study the inhomogeneous term ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis ˙ψ( j,1)(t) of the third-order 
linear differential equation (10.123a) in more detail. According to (10.122d) we  
have 
StartLayout 1st Row 1st Column ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis equals 2nd Column minus StartFraction d Over d t EndFraction left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Delta p Subscript upper D Baseline 2nd Row 1st Column equals 2nd Column minus left parenthesis StartFraction d Over d t EndFraction upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline right parenthesis upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline 3rd Row 1st Column Blank 2nd Column minus upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline left parenthesis StartFraction d Over d t EndFraction upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Delta p Subscript upper D Baseline period EndLayout ˙ψ( j,1)(t) = −d
dt
(
M( j)(t)−1Y ( j)(t)
)
ΔpD
= −
( d
dt M( j)(t)−1
)
Y ( j)(t)ΔpD
−M( j)(t)−1
( d
dt Y ( j)(t)
)
ΔpD.
(10.136a) 
and therefore 
StartLayout 1st Row 1st Column parallel to ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis parallel to less than or equals 2nd Column double vertical bar StartFraction d Over d t EndFraction upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline double vertical bar dot parallel to upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline parallel to 2nd Row 1st Column Blank 2nd Column plus parallel to upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline parallel to dot double vertical bar left parenthesis ModifyingAbove upper Y With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Delta p Subscript upper D Baseline double vertical bar period EndLayout|| ˙ψ( j,1)(t)|| ≤
||||||||
d
dt M( j)(t)−1
|||||||| · ||Y ( j)(t)ΔpD||
+ ||M( j)(t)−1|| ·
||||( ˙Y ( j)(t)
)
ΔpD
|||| .
(10.136b) 
Now, according to (10.20a), (10.20b), (10.83a)–(10.83c) it holds 
u Superscript left parenthesis j right parenthesis Baseline left parenthesis t semicolon Delta p Subscript upper D Baseline right parenthesis colon equals upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline equals u Subscript e Baseline left parenthesis Delta p Subscript upper D Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis comma t greater than or equals t Subscript j Baseline periodu( j)(t; ΔpD) := Y ( j)(t)ΔpD = ue
(
ΔpD, s( j)(t); q( j)
e (·), β( j)(·)
)
, t ≥t j.
(10.137a) 
Thus, we ﬁnd

284
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
StartLayout 1st Row 1st Column ModifyingAbove u With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t semicolon Delta p Subscript upper D Baseline right parenthesis 2nd Column equals left parenthesis ModifyingAbove upper Y With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Delta p Subscript upper D Baseline 2nd Row 1st Column Blank 2nd Column equals StartFraction d Over d t EndFraction u Subscript e Baseline left parenthesis Delta p Subscript upper D Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column equals StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis Delta p Subscript upper D Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis dot StartFraction d Over d t EndFraction s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis 4th Row 1st Column Blank 2nd Column equals StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis Delta p Subscript upper D Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis dot StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis EndRoot comma EndLayout˙u( j)(t; ΔpD) =
( ˙Y ( j)(t)
)
ΔpD
= d
dt ue
(
ΔpD, s( j)(t); q( j)
e (·), β( j)(·)
)
= ∂ue
∂s
(
ΔpD, s( j)(t); q( j)
e (·), β( j)(·)
)
· d
dt s( j)(t)
= ∂ue
∂s
(
ΔpD, s( j)(t); q( j)
e (·), β( j)(·)
)
·
/
β( j)
(
s( j)(t)
)
,
(10.137b) 
see (10.18c), (10.50b). Note that 
u Superscript left parenthesis j right parenthesis Baseline left parenthesis t semicolon Delta p Subscript upper D Baseline right parenthesis comma ModifyingAbove u With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t semicolon Delta p Subscript upper D Baseline right parenthesisu( j)(t; ΔpD), ˙u( j)(t; ΔpD)
are linear with respect to Delta p Subscript upper D Baseline equals p Subscript upper D Baseline minus upper E left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis vertical bar script upper A Subscript t Sub Subscript j Subscript Baseline right parenthesisΔpD = pD −E
(
pD(ω)|At j
)
. 
From (10.136a), (10.136b) and (10.137a), (10.137b) we get 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis parallel to ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals double vertical bar StartFraction d Over d t EndFraction upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline double vertical bar upper E left parenthesis parallel to upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Delta p Subscript upper D Baseline parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus parallel to upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline parallel to upper E left parenthesis double vertical bar left parenthesis ModifyingAbove upper Y With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Delta p Subscript upper D Baseline double vertical bar vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column equals double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline right parenthesis Over d t EndFraction double vertical bar dot upper E left parenthesis parallel to u left parenthesis j right parenthesis left parenthesis t semicolon Delta p Subscript upper D Baseline right parenthesis parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 2nd Column plus parallel to upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline parallel to dot upper E left parenthesis parallel to ModifyingAbove u With dot Superscript left parenthesis j right parenthesis Baseline left parenthesis t semicolon Delta p Subscript upper D Baseline parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 5th Row 1st Column Blank 2nd Column equals double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline right parenthesis Over d t EndFraction double vertical bar dot upper E left parenthesis double vertical bar u Subscript e Baseline left parenthesis Delta p Subscript upper D Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis double vertical bar vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 6th Row 1st Column Blank 2nd Column plus parallel to upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline parallel to dot upper E left parenthesis double vertical bar StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis Delta p Subscript upper D Baseline comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis EndRoot double vertical bar vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis period EndLayout
E
(
|| ˙ψ( j,1)(t)||
|||At j
)
≤
||||||||
d
dt M( j)(t)−1
|||||||| E
(
||Y ( j)(t)ΔpD||
|||At j
)
+ ||M( j)(t)−1||E
(||||( ˙Y ( j)(t)
)
ΔpD
||||
|||At j
)
=
||||||||||||
d
(
M( j)(t)−1)
dt
||||||||||||
· E
(
||u( j)(t; ΔpD)||
|||At j
)
+ ||M( j)(t)−1|| · E
(
||˙u( j)(t; ΔpD||
|||At j
)
=
||||||||||||
d
(
M( j)(t)−1)
dt
||||||||||||
· E
(||||ue
(
ΔpD, s( j)(t); q( j)
e (·), β( j)(·)
)||||
|||At j
)
+ ||M( j)(t)−1|| · E
(||||||||
∂ue
∂s
(
ΔpD, s( j)(t); q( j)
e (·), β( j)(·)
)/
β( j)(
s( j)(t)
)||||||||
||||At j
)
.
(10.138a) 
Using again Jensen’s inequality, from (10.138a) we obtain 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis parallel to ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column less than or equals double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline right parenthesis Over d t EndFraction double vertical bar StartRoot v a r left parenthesis u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot 3rd Row 1st Column Blank 2nd Column plus parallel to upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline parallel to StartRoot v a r left parenthesis StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis EndRoot comma EndLayout
E
(
|| ˙ψ( j,1)(t)||
||At j
)
≤
||||||||||||
d
(
M( j)(t)−1)
dt
||||||||||||
/
var
(
ue
(
pD(·), s( j)(t); q( j)
e (·), β( j)(·)
)|||At j
)
+ ||M( j)(t)−1||
/
var
(∂ue
∂s
(
pD(·), s( j)(t); q( j)
e (·), β( j)(·)
)|||At j
)
β( j)
(
s( j)(t)
)
,
(10.138b)

10.7 Online Control Corrections: PID Controllers
285
where 
StartLayout 1st Row 1st Column Blank 2nd Column v a r left parenthesis u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q 0 Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column colon equals upper E left parenthesis double vertical bar u Subscript e Baseline left parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis double vertical bar squared vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column v a r left parenthesis StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis EndRoot vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 5th Row 1st Column Blank 2nd Column equals upper E left parenthesis double vertical bar StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis double vertical bar squared vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis period EndLayout
var
(
ue
(
pD(·), s( j)(t); q( j)
0 (·), β( j)(·)
)|||At j
)
:= E
(||||||ue
(
ΔpD(ω), s( j)(t); q( j)
e (·), β( j)(·)
)||||||
2|||At j
)
,
(10.138c) 
StartLayout 1st Row 1st Column Blank 2nd Column v a r left parenthesis u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q 0 Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column colon equals upper E left parenthesis double vertical bar u Subscript e Baseline left parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis double vertical bar squared vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column v a r left parenthesis StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis EndRoot vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 5th Row 1st Column Blank 2nd Column equals upper E left parenthesis double vertical bar StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis comma s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis double vertical bar squared vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis period EndLayout var
(
∂ue
∂s
(
pD(·), s( j)(t); q( j)
e (·), β( j)(·)
)/
β( j)
(
s( j)(t)
)||||At j
)
= E
(||||||||
∂ue
∂s
(
ΔpD(ω), s( j)(t); q( j)
e (·), β( j)(·)
)||||||||
2 |||At j
)
β( j)(
s( j)(t)
)
. (10.138d) 
According to the representation (10.125a), (10.125b) of the ﬁrst-order tracking 
error form d z equals d z left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselinedz = dz(t), t ≥t j, the behavior of d z left parenthesis t right parenthesisdz(t) is determined mainly by the 
system matrix upper AA and the “inhomogeneous term” ModifyingAbove psi With dot Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline ˙ψ( j,1)(t), t ≥t j. Obviously, this 
term plays the same role as the expression psi Superscript left parenthesis j comma 1 right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselineψ( j,1)(t), t ≥t j, in the representation 
(10.85a) for the ﬁrst-order error term in case of PD-controllers. 
However, in the present case of PID-control the error estimates (10.138a)– 
(10.138d) show that for a satisfactory behavior of the ﬁrst-order error term d z equals d z left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline commadz =
dz(t), t ≥t j, besides the control constraints (10.9a)–(10.9c), (10.22a)–(10.22c), 
(10.31a)–(10.31f) for  
u left parenthesis t right parenthesis equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis period right parenthesis comma beta left parenthesis period right parenthesis right parenthesis with s equals s left parenthesis t right parenthesis commau(t) = ue
(
pD, s; qe(.), β(.)
)
with s = s(t),
(10.139a) 
here, also corresponding constraints for the input rate, i.e., the time derivative of the 
control 
ModifyingAbove u With dot left parenthesis t right parenthesis equals StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis period right parenthesis comma beta left parenthesis period right parenthesis right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot with s equals s left parenthesis t right parenthesis˙u(t) = ∂ue
∂s
(
pD, s; qe(.), β(.)
)√
β(s) with s = s(t)
(10.139b) 
are needed! 
The above results can be summarized by the following theorem: 
Theorem 10.9 Suppose that the matrices upper K Subscript p Baseline comma upper K Subscript i Baseline comma upper K Subscript d BaselineK p, Ki, Kd are selected such that the 
fundamental matrix normal upper Phi left parenthesis t comma tau right parenthesis equals e Superscript upper A left parenthesis t minus tau right parenthesis Baseline comma t greater than or equals tauϕ(t, τ) = eA(t−τ), t ≥τ, is exponentially stable (cf. Theorem 
10.8). Then, based on the deﬁnition (10.121a)–(10.121c) of the linear approximation 
of the PID-controller, the following properties hold: 
(a) Asymptotic local stability in the mean 
upper E left parenthesis d z left parenthesis t right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis right arrow 0 comma t right arrow normal infinityE
(
dz(t)
||At j
)
→0,
t →∞
(10.140a)

286
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
(b) Mean absolute ﬁrst-order tracking error 
StartLayout 1st Row 1st Column upper E left parenthesis 2nd Column parallel to d z left parenthesis t right parenthesis parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals a 0 e Superscript minus lamda 0 left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline upper E left parenthesis parallel to Delta z Subscript j Baseline parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus a 0 integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline right parenthesis Over d t EndFraction left parenthesis tau right parenthesis double vertical bar sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis d tau 3rd Row 1st Column Blank 2nd Column plus a 0 integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline double vertical bar upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis Superscript negative 1 Baseline double vertical bar sigma Subscript StartFraction partial differential u Sub Subscript e Subscript Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis EndRoot d tau comma t greater than or equals t Subscript j Baseline EndLayoutE
(
||dz(t)||
||At j
)
≤a0e−λ0(t−t j)E
(
||Δz j||
||At j
)
+ a0
t{
t j
e−λ0(t−τ)
||||||||||||
d
(
M( j)(t)−1)
dt
(τ)
||||||||||||
σ ( j)
ue
(
s( j)(τ)
)
dτ
+ a0
t{
t j
e−λ0(t−τ)||||||M( j)(τ)−1||||||σ ( j)
∂ue
∂s
(
s( j)(τ)
)/
β( j)(
s( j)(τ)
)
dτ, t ≥t j
(10.140b) 
with 
StartLayout 1st Row 1st Column Blank 2nd Column sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis colon equals StartRoot v a r left parenthesis u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis period right parenthesis comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column sigma Subscript StartFraction partial differential u Sub Subscript e Subscript Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis colon equals StartRoot v a r left parenthesis StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot comma EndLayoutσ ( j)
ue (s) :=
/
var
(
ue
(
pD(.), s; q( j)
e (·), β( j)(·)
)|||At j
)
,
(10.140c) 
StartLayout 1st Row 1st Column Blank 2nd Column sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis colon equals StartRoot v a r left parenthesis u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis period right parenthesis comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column sigma Subscript StartFraction partial differential u Sub Subscript e Subscript Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis colon equals StartRoot v a r left parenthesis StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis dot right parenthesis comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot comma EndLayoutσ ( j)
∂ue
∂s (s) :=
/
var
(∂ue
∂s
(
pD(·), s; q( j)
e (·), β( j)(·)
)|||At j
)
,
(10.140d) 
s greater than or equals s Subscript js ≥s j. Moreover, 
StartLayout 1st Row 1st Column upper E left parenthesis 2nd Column parallel to d z left parenthesis t right parenthesis parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals a 0 e Superscript minus lamda 0 left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline upper E left parenthesis parallel to Delta z Subscript j Baseline parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus a 0 left parenthesis integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Over d t EndFraction left parenthesis tau right parenthesis double vertical bar d tau right parenthesis sigma Subscript p Sub Subscript upper D Subscript Superscript left parenthesis j right parenthesis Baseline comma t greater than or equals t Subscript j Baseline comma EndLayoutE
(
||dz(t)||
||At j
)
≤a0e−λ0(t−t j)E
(
||Δz j||
||At j
)
+ a0
(
t{
t j
e−λ0(t−τ)
||||||||||||
d
(
M( j)(t)−1Y ( j)(t)
)
dt
(τ)
||||||||||||
dτ
)
σ ( j)
pD , t ≥t j,
(10.140e) 
where 
StartLayout 1st Row 1st Column Blank 2nd Column sigma Subscript p Sub Subscript upper D Subscript Superscript left parenthesis j right parenthesis Baseline colon equals StartRoot v a r left parenthesis p Subscript upper D Baseline left parenthesis period right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot period EndLayoutσ ( j)
pD :=
/
var
(
pD(.)
||At j
)
.
(10.140f) 
Using the t-s-transformation s equals s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis comma tau greater than or equals t Subscript j Baselines = s( j)(τ), τ ≥t j, the time-integrals in (10.140b) 
can be represented also in the following form: 
StartLayout 1st Row 1st Column Blank 2nd Column integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline right parenthesis Over d t EndFraction left parenthesis tau right parenthesis double vertical bar sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis d tau 2nd Row 1st Column Blank 2nd Column equals integral Subscript s Subscript j Baseline Superscript s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Baseline e Superscript minus lamda 0 left parenthesis t minus t Super Superscript left parenthesis j right parenthesis Superscript left parenthesis s right parenthesis right parenthesis Baseline double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline right parenthesis Over d t EndFraction left parenthesis t Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis double vertical bar StartFraction sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction d s comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline double vertical bar upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis Superscript negative 1 Baseline double vertical bar sigma Subscript StartFraction partial differential u Sub Subscript e Subscript Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis EndRoot d tau 5th Row 1st Column Blank 2nd Column equals integral Subscript s Subscript j Baseline Superscript s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Baseline e Superscript minus lamda 0 left parenthesis t minus t Super Superscript left parenthesis j right parenthesis Superscript left parenthesis s right parenthesis right parenthesis Baseline double vertical bar upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis Superscript negative 1 Baseline double vertical bar sigma Subscript StartFraction partial differential u Sub Subscript e Subscript Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis d s comma EndLayout
t{
t j
e−λ0(t−τ)
||||||||||||
d
(
M( j)(t)−1)
dt
(τ)
||||||||||||
σ ( j)
ue
(
s( j)(τ)
)
dτ
=
s( j)(t)
{
s j
e−λ0
(
t−t( j)(s)
) ||||||||||||
d
(
M( j)(t)−1)
dt
(
t( j)(s)
)
||||||||||||
σ ( j)
ue (s)
√
β( j)(s)
ds,
(10.141a)

10.7 Online Control Corrections: PID Controllers
287
StartLayout 1st Row 1st Column Blank 2nd Column integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline right parenthesis Over d t EndFraction left parenthesis tau right parenthesis double vertical bar sigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis d tau 2nd Row 1st Column Blank 2nd Column equals integral Subscript s Subscript j Baseline Superscript s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Baseline e Superscript minus lamda 0 left parenthesis t minus t Super Superscript left parenthesis j right parenthesis Superscript left parenthesis s right parenthesis right parenthesis Baseline double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline right parenthesis Over d t EndFraction left parenthesis t Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis double vertical bar StartFraction sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction d s comma 3rd Row 1st Column Blank 4th Row 1st Column Blank 2nd Column integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline double vertical bar upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis Superscript negative 1 Baseline double vertical bar sigma Subscript StartFraction partial differential u Sub Subscript e Subscript Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis right parenthesis EndRoot d tau 5th Row 1st Column Blank 2nd Column equals integral Subscript s Subscript j Baseline Superscript s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Baseline e Superscript minus lamda 0 left parenthesis t minus t Super Superscript left parenthesis j right parenthesis Superscript left parenthesis s right parenthesis right parenthesis Baseline double vertical bar upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis right parenthesis Superscript negative 1 Baseline double vertical bar sigma Subscript StartFraction partial differential u Sub Subscript e Subscript Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis d s comma EndLayout
t{
t j
e−λ0(t−τ)||||||M( j)(τ)−1||||||σ ( j)
∂ue
∂s
(
s( j)(τ)
)/
β( j)(
s( j)(τ)
)
dτ
=
s( j)(t)
{
s j
e−λ0
(
t−t( j)(s)
)||||||M( j)(
t( j)(s)
)−1||||||σ ( j)
∂ue
∂s (s)ds,
(10.141b) 
where tau equals t Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis comma s greater than or equals s Subscript j Baselineτ = t( j)(s), s ≥s j, denotes the inverse of s equals s Superscript left parenthesis j right parenthesis Baseline left parenthesis tau right parenthesis comma tau greater than or equals t Subscript j Baselines = s( j)(τ), τ ≥t j. 
10.7.3.3 
Minimality or Boundedness Properties 
Several terms in the above estimates of the ﬁrst-order tracking errord z equals d z left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baselinedz = dz(t), t ≥
t j, are inﬂuenced by means of (OSTP) as shown in the following: 
(i) Optimal velocity proﬁle beta Superscript left parenthesis j right parenthesisβ( j)
For minimum-time and related substitute problems the total runtime 
integral Subscript s Subscript j Baseline Superscript s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Baseline StartFraction 1 Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction d s less than or equals integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline Baseline StartFraction 1 Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction d s equals t Subscript f Superscript left parenthesis j right parenthesis Baseline minus t Subscript j
s( j)(t)
{
s j
1
√
β( j)(s)
ds ≤
s f
{
s j
1
√
β( j)(s)
ds = t( j)
f
−t j
(10.142) 
is minimized by (OSTP). 
(ii) Properties of the coefﬁcient lamda 0λ0
According to Theorems 10.8 and 10.9 the matricesupper K Subscript p Baseline comma upper K Subscript i Baseline comma upper K Subscript d BaselineK p, Ki, Kd can be selected 
such that real parts upper R e left parenthesis lamda Subscript k l Baseline right parenthesis comma k equals 1 comma ellipsis comma n comma l equals 1 comma 2 comma 3 commaRe
(
λkl
)
, k = 1, . . . , n,l = 1, 2, 3, of the eigenvalues 
lamda Subscript k l Baseline comma k equals 1 comma ellipsis comma n comma l equals 1 comma 2 comma 3λkl, k = 1, . . . , n,l = 1, 2, 3, of the matrix upper AA, cf. (10.124b), are negative, 
see (10.128b), (10.129a)–(10.129d). Then, the decisive coefﬁcient lamda 0 greater than 0λ0 > 0 in 
the norm estimate (10.132) of the fundamental matrix normal upper Phi left parenthesis t comma tau right parenthesis comma t greater than or equals tau commaϕ(t, τ), t ≥τ, can be 
selected such that 
0 less than lamda 0 less than minus max Underscript StartLayout 1st Row 1 less than or equals k less than or equals n 2nd Row l equals 1 comma 2 comma 3 EndLayout Endscripts upper R e left parenthesis lamda Subscript k l Baseline right parenthesis period0 < λ0 < −max
1≤k≤n
l=1,2,3
Re(λkl).
(10.143) 
(iii) Chance constraints for the input 
With certain lower and upper vector bounds u Superscript min Baseline less than or equals u Superscript maxumin ≤umax one usually has the 
input or control constraints, cf. (10.9a), 
u Superscript min Baseline less than or equals u left parenthesis t right parenthesis less than or equals u Superscript max Baseline comma t greater than or equals t Subscript j Baseline periodumin ≤u(t) ≤umax,
t ≥t j.
In the following we suppose that the bounds u Superscript min Baseline comma u Superscript maxumin, umax are given deterministic 
vectors. After the transformation 
s equals s Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis comma t greater than or equals t Subscript j Baseline commas = s( j)(t),
t ≥t j,

288
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
from the time domain left bracket t Subscript j Baseline comma t Subscript f Superscript left parenthesis j right parenthesis Baseline right bracket[t j, t( j)
f ] to the s-domain left bracket s Subscript j Baseline comma s Subscript f Baseline right bracket[s j, s f ], see  (10.50b), due to 
(10.22a) we have the stochastic constraint for left parenthesis q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis
(
qe(·), β(·)
)
: 
u Superscript min Baseline less than or equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline periodumin ≤ue
(
pD(ω), s; qe(·), β(·)
)
≤umax,
s j ≤s ≤s f .
Demanding that the above constraint holds at least with the probability alpha Subscript uαu, we  
get, cf. (10.31a), the probabilistic constraint 
upper P left parenthesis u Superscript min Baseline less than or equals u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals u Superscript max Baseline vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis greater than or equals alpha Subscript u Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline periodP
(
umin ≤ue
(
pD(ω), s; qe(·), β(·)
)
≤umax|||At j
)
≥αu, s j ≤s ≤s f .
(10.144a) 
Deﬁning again, see (10.31d), 
u Superscript c Baseline colon equals StartFraction u Superscript min Baseline plus u Superscript max Baseline Over 2 EndFraction comma rho Subscript u Baseline colon equals StartFraction u Superscript max Baseline minus u Superscript min Baseline Over 2 EndFraction commauc := umin + umax
2
,
ρu := umax −umin
2
,
by means of Tschebyscheff-type inequalities, the chance constraint (10.144a) 
can be guaranteed, see (10.31e), (10.31f), (10.88d), by the condition 
upper E left parenthesis double vertical bar u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis period right parenthesis comma beta left parenthesis period right parenthesis right parenthesis minus u Superscript c Baseline double vertical bar squared vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals left parenthesis 1 minus alpha Subscript u Baseline right parenthesis min Underscript 1 less than or equals k less than or equals n Endscripts rho Subscript u Sub Subscript k Subscript Superscript 2 Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline periodE
(||||ue
(
pD(ω), s; qe(.), β(.)
)
−uc||||2|||At j
)
≤(1 −αu) min
1≤k≤n ρ2
uk, s j ≤s ≤s f .
(10.144b) 
According to the deﬁnition (10.140c) ofsigma Subscript u Sub Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesisσ ( j)
ue (s), inequality (10.144b) is equiv-
alent to 
sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis squared plus double vertical bar ModifyingAbove u With quotation dash Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis minus u Superscript c Baseline double vertical bar squared less than or equals left parenthesis 1 minus alpha Subscript u Baseline right parenthesis min Underscript 1 less than or equals k less than or equals n Endscripts rho Subscript u Sub Subscript k Subscript Superscript 2 Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline commaσ ( j)
ue (s)2 +
||||u( j)
e (s) −uc||||2 ≤(1 −αu) min
1≤k≤n ρ2
uk, s j ≤s ≤s f ,
(10.145a) 
where 
StartLayout 1st Row 1st Column ModifyingAbove u With quotation dash Subscript e Superscript left parenthesis j right parenthesis 2nd Column colon equals upper E left parenthesis u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis period EndLayoutu( j)
e
:= E
(
ue
(
pD(ω), s; q( j)
e (·), β( j)(·)
)|||At j
)
= ue
(
p( j)
D , s; q( j)
e (·), β( j)(·)
)
.
(10.145b) 
Hence, the sufﬁcient condition (10.145a) for the reliability constraint (10.144a) 
yields the variance constraint 
sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis squared less than or equals left parenthesis 1 minus alpha Subscript u Baseline right parenthesis min Underscript 1 less than or equals k less than or equals n Endscripts rho Subscript u Sub Subscript k Subscript Superscript 2 Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline periodσ ( j)
ue (s)2 ≤(1 −αu) min
1≤k≤n ρ2
uk,
s j ≤s ≤s f .
(10.145c) 
(iv) Minimum force and moment 
According to the different performance functions upper J left parenthesis u left parenthesis period right parenthesis right parenthesisJ
(
u(.)
)
mentioned after the 
deﬁnition (10.6), in case of minimum expected force and moment we have, 
using transformation formula (10.20a),

10.7 Online Control Corrections: PID Controllers
289
StartLayout 1st Row 1st Column upper E left parenthesis upper J left parenthesis u left parenthesis dot right parenthesis right parenthesis vertical bar 2nd Column German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals upper E left parenthesis integral Subscript t Subscript j Baseline Superscript t Subscript f Superscript left parenthesis j right parenthesis Baseline Baseline double vertical bar u left parenthesis t right parenthesis double vertical bar squared d t vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline Baseline upper E left parenthesis double vertical bar u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis double vertical bar Superscript 2 Baseline vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis StartFraction d s Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction 3rd Row 1st Column Blank 2nd Column equals integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline Baseline left parenthesis upper E left parenthesis double vertical bar u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis minus u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis double vertical bar Superscript 2 Baseline vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 2nd Column plus double vertical bar u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis double vertical bar squared right parenthesis StartFraction d s Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction 5th Row 1st Column Blank 2nd Column equals integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline Baseline left parenthesis sigma Subscript u Sub Subscript e Subscript Superscript 2 Baseline left parenthesis s right parenthesis plus double vertical bar u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis double vertical bar Superscript 2 Baseline right parenthesis StartFraction d s Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction comma EndLayoutE
(
J
(
u(·)
)|||At j
)
= E
( t( j)
f{
t j
||||u(t)
||||2dt
|||At j
)
=
s f
{
s j
E
(||||ue
(
pD(ω), s; qe(·), β(·)
||||2|||At j
)
ds
√β(s)
=
s f
{
s j
(
E
(||||ue
(
pD(ω), s; qe(·), β(·) −ue
(
p( j)
D , s; qe(·), β(·)
||||2|||At j
)
+
||||ue
(
p( j)
D , s; qe(·), β(·)
)||||2
)
ds
√β(s)
=
s f
{
s j
(
σ 2
ue(s) +
||||ue
(
p( j)
D , s; qe(·), β(·)
||||2
)
ds
√β(s),
(10.146a) 
where 
StartLayout 1st Row 1st Column sigma Subscript u Sub Subscript e Subscript Superscript 2 Baseline left parenthesis s right parenthesis colon 2nd Column equals upper E left parenthesis double vertical bar u Subscript e Baseline left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis minus u Subscript e Baseline left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis double vertical bar Superscript 2 Baseline vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper E left parenthesis double vertical bar u Subscript e Baseline left parenthesis Delta p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis double vertical bar Superscript 2 Baseline vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis period EndLayoutσ 2
ue(s) : = E
(||||||ue
(
pD(ω), s; qe(·), β(·) −ue
(
p( j)
D , s; qe(·), β(·)
)||||||
2||||At j
)
= E
(||||||ue
(
ΔpD(ω), s; qe(·), β(·)
||||||
2||||At j
)
.
(10.146b) 
Hence, (OSTP) yields the following minimum property: 
StartLayout 1st Row integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline Baseline left parenthesis sigma Subscript u Sub Subscript e Subscript Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis squared plus double vertical bar ModifyingAbove u With quotation dash Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis double vertical bar squared right parenthesis StartFraction d s Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction equals min Underscript StartLayout 1st Row q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis 2nd Row s period t period left parenthesis 10 a minus c right parenthesis comma 3rd Row left parenthesis 10 a minus d right parenthesis EndLayout Endscripts upper E left parenthesis integral Subscript t Subscript j Baseline Superscript t Subscript f Superscript left parenthesis j right parenthesis Baseline Baseline parallel to u left parenthesis t right parenthesis parallel to squared d t vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis comma EndLayout
s f
{
s j
(
σ ( j)
ue (s)2 +
||||u( j)
e (s)
||||2)
ds
√
β( j)(s)
=
min
qe(·),β(·)
s.t.(10a−c),
(10a−d)
E
( t( j)
f{
t j
||u(t)||2dt
||At j
)
,
(10.147) 
where ModifyingAbove u With quotation dash Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesisu( j)
e (s) is deﬁned by (10.145b). 
(v) Decreasing stochastic uncertainty 
According to (10.133), (10.134) and (10.135a), (10.135b) we have  
StartLayout 1st Row 1st Column upper E left parenthesis parallel to 2nd Column d z left parenthesis t right parenthesis parallel to German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis less than or equals alpha 0 e Superscript minus lamda 0 left parenthesis t minus t Super Subscript j Superscript right parenthesis Baseline upper E left parenthesis parallel to Delta z Subscript j Baseline parallel to vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus left parenthesis a Subscript o Baseline integral Subscript t Subscript j Baseline Superscript t Baseline e Superscript minus lamda 0 left parenthesis t minus tau right parenthesis Baseline double vertical bar StartFraction d left parenthesis upper M Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis Superscript negative 1 Baseline upper Y Superscript left parenthesis j right parenthesis Baseline left parenthesis t right parenthesis right parenthesis Over d t EndFraction left parenthesis tau right parenthesis double vertical bar d tau right parenthesis StartRoot v a r left parenthesis p Subscript upper D Baseline left parenthesis period right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis EndRoot period EndLayoutE
(
||dz(t)||At j
)
≤α0e−λ0(t−t j)E
(
||Δz j||
|||At j
)
+
(
ao
t{
t j
e−λ0(t−τ)
||||||||||||
d
(
M( j)(t)−1Y ( j)(t)
)
dt
(τ)
||||||||||||
dτ
)/
var
(
pD(.)
||At j
)
.
(10.148) 
Thus, the mean absolute ﬁrst-order tracking error can be decreased further by 
removing step by step the uncertainty about the vectorp Subscript upper D Baseline equals p Subscript upper D Baseline left parenthesis omega right parenthesispD = pD(ω) of dynamic

290
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
parameter. This is done in practice by a parameter identiﬁcation procedure 
running parallel to control process of the robot. 
(vi) Chance constraints for the input rate 
According to the representation (10.139b) of the input or control rate we have 
ModifyingAbove u With dot left parenthesis t right parenthesis equals StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot comma s equals s left parenthesis t right parenthesis period˙u(t) = ∂ue
∂s
(
pD, s; qe(·), β(·)
)√
β(s),
s = s(t).
From the input rate condition 
ModifyingAbove u With dot Superscript min Baseline less than or equals ModifyingAbove u With dot left parenthesis t right parenthesis less than or equals ModifyingAbove u With dot Superscript max Baseline comma t greater than or equals t Subscript j Baseline comma˙umin ≤˙u(t) ≤˙umax, t ≥t j,
(10.149a) 
with given, ﬁxed vector boundsModifyingAbove u With dot Superscript min Baseline less than or equals ModifyingAbove u With dot Superscript max˙umin ≤˙umax, for the input rateStartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction ∂ue
∂s with respect 
to the path parameter s greater than or equals s Subscript js ≥s j we obtain the constraint 
StartFraction ModifyingAbove u With dot Superscript min Baseline Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction less than or equals StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals StartFraction ModifyingAbove u With dot Superscript max Baseline Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline period ˙umin
√β(s) ≤∂ue
∂s
(
pD(ω), s; qe(·), β(·)
)
≤
˙umax
√β(s),
s j ≤s ≤s f .
(10.149b) 
If we require that the input rate condition (10.149a) holds at least with proba-
bility alpha Subscript ModifyingAbove u With dotα˙u, then corresponding to (10.144a) we get the chance constraint 
upper P left parenthesis StartFraction ModifyingAbove u With dot Superscript min Baseline Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction less than or equals StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis less than or equals StartFraction ModifyingAbove u With dot Superscript max Baseline Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis greater than or equals alpha Subscript ModifyingAbove u With dot Baseline periodP
( ˙umin
√β(s) ≤∂ue
∂s
(
pD(ω), s; qe(·), β(·)
)
≤
˙umax
√β(s)
||||At j
)
≥α˙u.
(10.150) 
In the same way as in (iii), condition (10.150) can be guaranteed, cf. (10.140d), 
by 
sigma Subscript StartFraction partial differential u Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis squared plus double vertical bar StartFraction ModifyingAbove partial differential u Subscript e Baseline With quotation dash Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis minus StartFraction ModifyingAbove u With dot Superscript c Baseline Over StartRoot beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndRoot EndFraction double vertical bar squared less than or equals left parenthesis 1 minus alpha Subscript ModifyingAbove u With dot Baseline right parenthesis StartFraction 1 Over beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndFraction min Underscript 1 less than or equals k less than or equals n Endscripts rho Subscript ModifyingAbove u With dot Sub Subscript k Subscript Superscript 2 Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline commaσ ( j)
∂u
∂s (s)2 +
||||||||
∂ue
∂s
( j)
(s) −
˙uc
√
β( j)(s)
||||||||
2
≤
(
1 −α˙u
)
1
β( j)(s) min
1≤k≤n ρ2
˙uk, s j ≤s ≤s f ,
(10.151a) 
where 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove u With dot Superscript c Baseline colon equals StartFraction ModifyingAbove u With dot Superscript min Baseline plus ModifyingAbove u With dot Superscript max Baseline Over 2 EndFraction comma rho Subscript ModifyingAbove u With dot Baseline colon equals StartFraction ModifyingAbove u With dot Superscript max Baseline minus ModifyingAbove u With dot Superscript min Baseline Over 2 EndFraction comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column StartFraction ModifyingAbove partial differential u Subscript e Baseline With quotation dash Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline colon equals StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis comma s greater than or equals s Subscript j Baseline period EndLayout˙uc := ˙umin + ˙umax
2
,
ρ˙u := ˙umax −˙umin
2
,
(10.151b) 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove u With dot Superscript c Baseline colon equals StartFraction ModifyingAbove u With dot Superscript min Baseline plus ModifyingAbove u With dot Superscript max Baseline Over 2 EndFraction comma rho Subscript ModifyingAbove u With dot Baseline colon equals StartFraction ModifyingAbove u With dot Superscript max Baseline minus ModifyingAbove u With dot Superscript min Baseline Over 2 EndFraction comma 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column StartFraction ModifyingAbove partial differential u Subscript e Baseline With quotation dash Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline colon equals StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis comma beta Superscript left parenthesis j right parenthesis Baseline left parenthesis dot right parenthesis right parenthesis comma s greater than or equals s Subscript j Baseline period EndLayout∂ue
∂s
( j)
:= ∂ue
∂s
(
p( j)
D , s; q( j)
e (·), β( j)(·)
)
,
s ≥s j.
(10.151c) 
Hence, corresponding to (10.145c), here we get the following variance con-
straint: 
sigma Subscript StartFraction partial differential u Over partial differential s EndFraction Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis squared less than or equals left parenthesis 1 minus alpha Subscript ModifyingAbove u With dot Baseline right parenthesis StartFraction 1 Over beta Superscript left parenthesis j right parenthesis Baseline left parenthesis s right parenthesis EndFraction min Underscript 1 less than or equals k less than or equals n Endscripts rho Subscript ModifyingAbove u With dot Sub Subscript k Subscript Superscript 2 Baseline comma s Subscript j Baseline less than or equals s less than or equals s Subscript f Baseline periodσ ( j)
∂u
∂s (s)2 ≤
(
1 −α˙u
)
1
β( j)(s) min
1≤k≤n ρ2
˙uk,
s j ≤s ≤s f .
(10.151d)

References
291
(vii) Minimum force and moment rate 
Corresponding to (10.146a) we may consider the integral 
upper E left parenthesis upper J left parenthesis ModifyingAbove u With dot left parenthesis dot right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis colon equals upper E left parenthesis integral Subscript t Subscript j Baseline Superscript t Subscript f Baseline Baseline double vertical bar ModifyingAbove u With dot left parenthesis t right parenthesis double vertical bar squared d t vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis periodE
(
J
(
˙u(·)
||At j
)
:= E
(
t f
{
t j
||||˙u(t)
||||2dt
|||At j
)
.
(10.152a) 
Again with (10.139b) we ﬁnd 
StartLayout 1st Row 1st Column Blank 2nd Column upper E left parenthesis upper J left parenthesis ModifyingAbove u With dot left parenthesis dot right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals upper E left parenthesis integral Subscript t Subscript j Baseline Superscript t Subscript f Baseline Baseline double vertical bar StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot double vertical bar squared StartFraction d s Over StartRoot beta left parenthesis s right parenthesis EndRoot EndFraction vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline Baseline upper E left parenthesis double vertical bar StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis double vertical bar squared vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot d s 3rd Row 1st Column Blank 2nd Column equals integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline Baseline left parenthesis v a r left parenthesis StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis 4th Row 1st Column Blank 2nd Column plus double vertical bar StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis ModifyingAbove p With quotation dash Subscript upper D Superscript left parenthesis j right parenthesis Baseline comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis double vertical bar squared right parenthesis StartRoot beta left parenthesis s right parenthesis EndRoot d s period EndLayoutE
(
J
(
˙u(·)
||At j
)
= E
(
t f
{
t j
||||||||
∂ue
∂s
(
pD(ω), s; qe(·), β(·)
)√
β(s)
||||||||
2
ds
√β(s)
||||At j
)
=
s f
{
s j
E
(||||||∂ue
∂s
(
pD(ω), s; qe(·), β(·)
)||||||
2||||At j
)√
β(s)ds
=
s f
{
s j
(
var
(∂ue
∂s
(
pD(ω), s; qe(·), β(·)
)|||At j
)
+
||||||∂ue
∂s
(
p( j)
D , s; qe(·), β(·)
)||||||
2)√
β(s)ds.
(10.152b) 
If we consider 
upper E left parenthesis ModifyingAbove upper J With tilde left parenthesis ModifyingAbove u With dot left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis colon equals upper E left parenthesis integral Subscript t Subscript j Baseline Superscript t Subscript f Baseline Baseline double vertical bar ModifyingAbove u With dot left parenthesis t right parenthesis double vertical bar d t vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis commaE
(
˜J
(
˙u(·)
)|||At j
)
:= E
(
t f
{
t j
||||˙u(t)
||||dt
|||At j
)
,
(10.153a) 
then we get 
upper E left parenthesis ModifyingAbove upper J With tilde left parenthesis ModifyingAbove u With dot left parenthesis dot right parenthesis right parenthesis vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis equals integral Subscript s Subscript j Baseline Superscript s Subscript f Baseline Baseline upper E left parenthesis double vertical bar StartFraction partial differential u Subscript e Baseline Over partial differential s EndFraction left parenthesis p Subscript upper D Baseline left parenthesis omega right parenthesis comma s semicolon q Subscript e Baseline left parenthesis dot right parenthesis comma beta left parenthesis dot right parenthesis right parenthesis double vertical bar vertical bar German upper A Subscript t Sub Subscript j Subscript Baseline right parenthesis d s periodE
(
˜J
(
˙u(·)
)|||At j
)
=
s f
{
s j
E
(||||||∂ue
∂s
(
pD(ω), s; qe(·), β(·)
)||||||
||||At j
)
ds.
(10.153b) 
References 
1. Arimoto, S.: Control Theory of Non-Linear Mechanical Systems. Clarendon Press, Oxford 
(1996) 
2. Åström, K., Wittenmark, B.: Adaptive Control. Addison-Wesley (1995) 
3. Aurnhammer, A., Marti, K.: Ostp/fortran-program for optimal stochastic trajectory planning 
of robots. Technical report, UniBw München (2000)

292
10
Adaptive Optimal Stochastic Trajectory Planning and Control (AOSTPC)
4. Bastian, G., et al.: Theory of Robot Control. Springer, Berlin (1996) 
5. Bauer, H.: Wahrscheinlichkeitstheorie und Grundzüge der Masstheorie. Walter de Gruyter & 
Co., Berlin (1968) 
6. Bernhardt, R., Albright, S.: Robot Calibration. Chapman and Hall, London (1993) 
7. Bobrow, J.: Optimal robot plant planning using the minimum-time criterion. IEEE J. Robot. 
Autom. 4(4), 443–450 (1988). https://doi.org/10.1109/56.811 
8. Bobrow, J., Dubowsky, S., Gibson, J.: Time-optimal control of robotic manipulators along 
speciﬁed paths. Int. J. Robot. Res. 4, 3–17 (1985) 
9. Bohlin, R.: Motion Planning for Industrial Robots. Chalmers University, Goeteborg (1999) 
10. Chen, Y.: Solving robot trajectory planning problems with uniform cubic b-splines. Optim. 
Control Appl. Methods 12(4), 247–262 (1991). https://doi.org/10.1002/oca.4660120404 
11. Craig, J.: Adaptive Control of Mechanical Manipulators. Addison-Wesley (1988) 
12. Dullerud, G., Paganini, F.: A Course in Robust Control Theory. Springer, New York (2000) 
13. Gessner, P., Spreman, K.: Optimierung in Funktionenräumen. Lecture Notes in Economics and 
Mathematical Systems, vol. 64. Springer, Berlin (1972) 
14. Haubach-Lippmann, C.: Stochastische Strukturoptimierung ﬂexibler Roboter, Fortschrit-
tberichte VDI, Reihe 8, vol. 706. VDI Verlag, Düsseldorf (1998) 
15. Holtgrewe, D.: Adaptive Regelung ﬂexibler Roboter. Igel Verlag, Paderborn (1996)) 
16. Hoppen, P.: Autonome mobile Roboter. B.I. Wissenschaftsverlag, Mannheim (1992) 
17. Hwang, Y.K., Ahuja, N.: Gross motion planning-a survey. ACM Comput. Surv. 24(3), 219–291 
(1992). https://doi.org/10.1145/136035.136037 
18. Isermann, R.: Identiﬁkation dynamischer Systeme. Springer, Berlin (1988) 
19. Johanni, R.: Optimale Bahnplanung bei Industrierobotern, Fortschrittberichte VDI, Reihe 18, 
vol. 51. VDI-Verlag, Düsseldorf (1988) 
20. Kall, P.: Stochastic Linear Programming. Springer, Berlin (1976) 
21. Kall, P., Wallace, S.: Stochastic Programming. Stochastic Programming. Wiley, Chichester 
(1994) 
22. Khalil, H.: Nonlinear Systems. Maxmillan Publishing Company, New York (1992) 
23. Lin, K.: Zur adaptiven und langzeitprädikativen Regelung mit einem statistischen Opti-
mierungskriterium. Ph.D. thesis, TU Hamburg-Harburg (1997) 
24. Marti, K.: Approximationen stochastischer Optimierungsprobleme. Hain Konigstein/Ts (1979) 
25. Marti, K.: Path planning for robots under stochastic uncertainty. Optimization 45(1–4), 163– 
195 (1999). https://doi.org/10.1080/02331939908844432 
26. Marti, K., Kall, P. (eds.): Stochastic Programming Methods and Technical Applications. Lecture 
Notes in Economics and Mathematical Systems, vol. 458. Springer, Berlin (1998) 
27. Marti, K., Kall, P. (eds.): Stochastic Programming: Numerical Techniques and Engineering 
Applications. Lecture Notes in Economics and Mathematical Systems, vol. 423. Springer, 
Berlin (1998) 
28. Marti, K., Qu, S.: Optimal trajectory planning for robots under the consideration of stochastic 
parameters and disturbances. J. Intell. Rob. Syst. 15, 19–23 (1996) 
29. Marti, K., Qu, S.: Path planning for robots by stochastic optimization methods. J. Intell. Rob. 
Syst. 22, 117–127 (1998) 
30. Marti, K., Qu, S.: Adaptive stochastic path planning for robots–real–time optimization by 
means of neural networks. In: M. Polis, et al. (eds.) Systems Modeling and Optimization, 
Proceed. 18th TC7 Conference, Research Notes in Mathematics, pp. 486–494. Chapman and 
Hall/CRC, Boca Raton (1999) 
31. Miesbach, S.: Bahnführung von Robotern mit Neuronalen Netzen. Ph.D. thesis, TU München, 
Fakultät für Mathematik (1995) 
32. Pai, D., Leu, M.: Uncertainty and compliance of robot manipulators with application to task 
feasibility. Int. J. Robot. Res. 10(3), 200–212 (1991) 
33. Pfeiffer, F., Johanni, R.: A concept for manipulator trajectory planning. IEEE J. Robot. Autom. 
3(2), 115–123 (1987) 
34. Pfeiffer, F., Reithmeier, E.: Roboterdynamik. Teubner Stuttgart (1987)

References
293
35. Pfeiffer, R., Richter, K.: Optimal path planning including forces at the gripper. J. Intell. Rob. 
Syst. 3, 251–258 (1990) 
36. Qu, S.: Optimal Bahnplanung unter Berücksichtigung stochastischer Parameterschwankungen, 
Fortschrittberichte VDI, Reihe 8, vol. 472. VDI-Verlag, Düsseldorf (1995)) 
37. Qu, Z., Dawson, D.: Robust Tracking Control of Robot Manipulators. IEEE Press, New York 
(1996) 
38. Redfern, D., Goh, C.: Feedback control of state constrained optimal control problems. In: 
Dolezal, J., Fidler, J. (eds.) System Modelling and Optimization, pp. 442–449. Chapman and 
Hall, London (1996) 
39. Reif, K.: Steuerung von nichtlinearen Systemen mit Homotopie-Verfahren, Fortschrittberichte 
VDI, Reihe 8: Mess-, Steuerungs- und Regelungstechnik, vol. 631. VDI Verlag, Düsseldorf 
(1997) 
40. Schilling, K., et al.: The European development of small planetary mobile vehicle. Space 
Technol. 3(17), 151–162 (1997) 
41. Schilling, K., Flury, W.: Autonomy and on-board mission management aspects for the 
cassini titan probe. Acta Astronaut. 21(1), 55–68 (1990). https://doi.org/10.1016/0094-
5765(90)90106-U 
42. Schilling, R.: Fundamentals of Robotics. Analysis and Control. Prentice Hall, London (1990) 
43. Schlöder, J.: Numerische Methoden zur Behandlung hochdimensionaler Aufgaben der Param-
eteridentiﬁzierung. Ph.D. thesis, Universität Bonn, Math.-Naturwissenschaftliche Fakultät 
(1998) 
44. Schröer, K.: Identiﬁkation von Kalibrierungsparametern kinematischer Ketten. Carl Hanser, 
München Wien (1993) 
45. Sciavicco, L., Siciliano, B.: Modeling and Control of Robot Manipulators. Springer, London 
(2000) 
46. Shin, K., McKay, N.: Minimum-time control of robotic manipulators with geometric path 
constraints. IEEE Trans. Autom. Control 30(6), 531–541 (1985). https://doi.org/10.1109/TAC. 
1985.1104009 
47. Slotine, J.J., Li, W.: Applied Nonlinear Control. Prentice-Hall Int. Inc., Englewood Chiffs 
(1991) 
48. Stengel, R.: Stochastic Optimal Control: Theory and Application. Wiley, New York (1986) 
49. Stone, H.: Kinematic Modeling, Identiﬁcation, and Control of Robotic Manipulators. Kluwer 
Academic Publishing, Boston (1987) 
50. Weinmann, A.: Uncertain Models and Robust Control. Springer, New York (1991) 
51. Weinzierl, K.: Konzepte zur Steuerung und Regelung nichtlinearer Systeme auf der Basis der 
Jacobi-Linearisierung. Verlag Shaker, Aachen (1995)

Chapter 11 
Machine Learning Under Stochastic 
Uncertainty 
Abstract New methods for machine learning under stochastic uncertainty, espe-
cially for regression problems under uncertainty are described in this chapter. Given 
a set of input-output data, a certain, often parametric set of functions is adapted by 
evaluating and then minimizing the approximation error by quadratic cost functions. 
Here, instead of quadratic cost functions, sublinear cost functions, involving, e.g., the 
maximum absolute error, are taken into account. In this case the regression problem 
under stochastic uncertainty yields a stochastic linear program with a dual decom-
position data structure which enables the use of very efﬁcient linear programming 
algorithms. Two and multi-group classiﬁcation problems are considered in the sec-
ond part of this chapter. Here, the separation of the data points in a certain space 
double struck upper R Superscript nRn and the representation of the groups or classes of data points is described by 
means of hyperplanes in double struck upper R Superscript nRn. Instead of the often used discrete data points, for the 
classiﬁcation process convex or stochastic convex hulls of the given data points are 
taken into account. 
11.1 
Foundations 
In machine meaning [ 2] one has the problem to determine an unknown or partly 
known functional relation, cf. Fig. 11.1, 
StartLayout 1st Row y equals h left parenthesis x right parenthesis EndLayouty = h(x)
(11.1a) 
between a stochastic input nn-vector xx, called regressor in regression analysis and a 
stochastic output mm-vector yy, also called regressand. 
For the estimation of the function h colon double struck upper R Superscript n Baseline right arrow double struck upper R Superscript mh : Rn →Rm, called response function in 
response surface methods (RSM) [ 12], besides eventually some a priori information 
on hh, one has some data, as observations, measurements or scenarios of a discrete 
distribution, etc., 
StartLayout 1st Row left parenthesis x Subscript i Baseline comma y Subscript i Baseline right parenthesis comma y Subscript i Baseline equals h left parenthesis x Subscript i Baseline right parenthesis plus epsilon Subscript i Baseline left parenthesis e r r o r right parenthesis comma i equals 1 comma 2 comma ellipsis r comma EndLayout(xi, yi), yi = h(xi) + ∈i (error),
i = 1, 2, . . .r,
(11.1b) 
of the input-output pair left parenthesis x comma y right parenthesis comma y equals h left parenthesis x right parenthesis(x, y), y = h(x). 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_11 
295

296
11
Machine Learning Under Stochastic Uncertainty
Fig. 11.1 Response functionhh, dataleft parenthesis x Subscript i Baseline comma y Subscript i Baseline right parenthesis(xi, yi)
For the estimation of the response functiony equals h left parenthesis x right parenthesisy = h(x), usually parametric models 
StartLayout 1st Row h equals h left parenthesis x semicolon beta right parenthesis EndLayouth = h(x; β)
(11.2a) 
are used, which are linear in the parameter vector or matrixbeta comma upper Bβ, B and linear, quadratic 
or, more general, nonlinear in xx: 
StartLayout 1st Row h left parenthesis x semicolon beta right parenthesis equals StartLayout Enlarged left brace 1st Row beta 0 plus beta Subscript upper I Superscript upper T Baseline x comma 2nd Row Blank 3rd Row beta 0 plus beta Subscript upper I Superscript upper T Baseline x plus one half x Superscript upper T Baseline upper B x comma 4th Row Blank 5th Row beta 0 plus sigma summation Underscript k equals 1 Overscript p Endscripts beta Subscript k Baseline phi Subscript k Baseline left parenthesis x right parenthesis EndLayout EndLayouth(x; β) =
⎧
⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩
β0 + βT
I x,
β0 + βT
I x + 1
2 xT Bx,
β0 +
p∑
k=1
βkϕk(x)
(11.2b) 
with parameters beta 0 comma beta Subscript k Baseline comma k equals 1 comma 2 comma ellipsis comma pβ0, βk, k = 1, 2, . . . , p and/or vectorial, matrix parameters beta Subscript upper I Baseline equals left parenthesis beta 1 comma beta 2 comma ellipsis comma beta Subscript n Baseline right parenthesis Superscript upper T Baseline comma upper B equals left parenthesis b Subscript k comma l Baseline right parenthesis Subscript 1 less than or equals k comma l less than or equals n BaselineβI =
(β1, β2, . . . , βn)T , B = (bk,l)1≤k,l≤n and certain, linear/nonlinear functions phi Subscript k Baseline equals phi Subscript k Baseline left parenthesis x right parenthesis comma k equals 1 comma ellipsis comma pϕk =
ϕk(x), k = 1, . . . , p in xx. 
For a vectorial response function 
StartLayout 1st Row y equals y left parenthesis x semicolon beta right parenthesis equals left parenthesis y 1 left parenthesis x comma beta right parenthesis comma y 2 left parenthesis x comma beta right parenthesis comma ellipsis comma y Subscript m Baseline left parenthesis x comma beta right parenthesis right parenthesis Superscript upper T EndLayouty = y(x; β) = (y1(x, β), y2(x, β), . . . , ym(x, β))T
(11.3)

11.1 Foundations
297
with components as deﬁned in (11.2b), having a joint parameter vector/matrix betaβ, in  
the general case we may write 
StartLayout 1st Row y equals y left parenthesis x semicolon beta 0 comma beta Subscript upper I Baseline right parenthesis equals beta 0 plus phi left parenthesis x right parenthesis beta Subscript upper I Baseline equals left parenthesis upper I comma phi left parenthesis x right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix comma EndLayouty = y(x; β0, βI) = β0 + ϕ(x)βI = (I, ϕ(x))
( β0
βI
)
,
(11.4a) 
where beta 0 equals left parenthesis beta 01 comma beta 02 comma ellipsis comma beta Subscript 0 comma m Baseline right parenthesis Superscript upper Tβ0 = (β01, β02, . . . , β0,m)T is the initial parameter vector, beta Subscript upper I Baseline equals left parenthesis beta 1 comma beta 2 comma ellipsis comma beta Subscript p Baseline right parenthesis Superscript upper TβI = (β1, β2, . . . ,
βp)T , upper II is the unit matrix and phi equals phi left parenthesis x right parenthesisϕ = ϕ(x) is the left parenthesis m comma p right parenthesis(m, p)-matrix 
StartLayout 1st Row phi left parenthesis x right parenthesis equals Start 4 By 1 Matrix 1st Row phi 1 left parenthesis x right parenthesis 2nd Row phi 2 left parenthesis x right parenthesis 3rd Row vertical ellipsis 4th Row phi Subscript m Baseline left parenthesis x right parenthesis EndMatrix equals Start 4 By 3 Matrix 1st Row 1st Column phi 11 left parenthesis x right parenthesis 2nd Column ellipsis 3rd Column phi Subscript 1 p Baseline left parenthesis x right parenthesis 2nd Row 1st Column phi 21 left parenthesis x right parenthesis 2nd Column ellipsis 3rd Column phi Subscript 2 p Baseline left parenthesis x right parenthesis 3rd Row 1st Column vertical ellipsis 2nd Column Blank 3rd Column vertical ellipsis 4th Row 1st Column phi Subscript m Baseline 1 Baseline left parenthesis x right parenthesis 2nd Column ellipsis 3rd Column phi Subscript m p Baseline left parenthesis x right parenthesis EndMatrix EndLayoutϕ(x) =
⎛
⎜⎜⎜⎝
ϕ1(x)
ϕ2(x)
...
ϕm(x)
⎞
⎟⎟⎟⎠=
⎛
⎜⎜⎜⎝
ϕ11(x) . . . ϕ1p(x)
ϕ21(x) . . . ϕ2p(x)
...
...
ϕm1(x) . . . ϕmp(x)
⎞
⎟⎟⎟⎠
(11.4b) 
with given functions phi Subscript l k Baseline equals phi Subscript l k Baseline left parenthesis x right parenthesis comma l equals 1 comma ellipsis comma m comma k equals 1 comma ellipsis comma pϕlk = ϕlk(x), l = 1, . . . , m, k = 1, . . . , p. According to the 
stochastic data (11.1b), including measurements, observational and modeling errors, 
for the unknown or partly known parameter vectors beta 0 comma beta Subscript upper I Baselineβ0, βI with (11.4a) and (11.4b) 
we have the following relations: 
StartLayout 1st Row y Subscript i Baseline almost equals beta 0 plus phi left parenthesis x Subscript i Baseline right parenthesis beta Subscript upper I Baseline comma i equals 1 comma 2 comma ellipsis r period EndLayoutyi ≈β0 + ϕ(xi)βI, i = 1, 2, . . .r.
(11.5a) 
with the r nrn-, r mrm-vectors and the left parenthesis r m comma m plus p right parenthesis(rm, m + p)-matrix 
StartLayout 1st Row 1st Column upper X colon equals Start 3 By 1 Matrix 1st Row x 1 2nd Row vertical ellipsis 3rd Row x Subscript r Baseline EndMatrix comma 2nd Column Blank 3rd Column upper Y colon equals Start 3 By 1 Matrix 1st Row y 1 2nd Row vertical ellipsis 3rd Row y Subscript r Baseline EndMatrix comma 4th Column Blank 5th Column upper H left parenthesis upper X right parenthesis colon equals Start 3 By 1 Matrix 1st Row upper I phi left parenthesis x 1 right parenthesis 2nd Row vertical ellipsis 3rd Row upper I phi left parenthesis x Subscript r Baseline right parenthesis EndMatrix comma EndLayoutX :=
⎛
⎜⎝
x1
...
xr
⎞
⎟⎠,
Y :=
⎛
⎜⎝
y1
...
yr
⎞
⎟⎠,
H(X) :=
⎛
⎜⎝
Iϕ(x1)
...
Iϕ(xr)
⎞
⎟⎠,
(11.5b) 
the above relations (11.5a) can be represented by 
StartLayout 1st Row upper Y almost equals upper H left parenthesis upper X right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix period EndLayoutY ≈H(X)
( β0
βI
)
.
(11.5c) 
Considering standard regression techniques, the deviation between the vectorupper YY of 
all observed outputs y Subscript i Baseline comma i equals 1 comma ellipsis comma ryi, i = 1, . . . ,r, and the vector upper H left parenthesis upper X right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I EndBinomialOrMatrixH(X)
( β0
βI
)
of the predicted 
outputs by the model (11.5a)–(11.5c) with respect to the vector upper XX of all inputs 
x Subscript i Baseline comma i equals 1 comma ellipsis comma rxi, i = 1, . . . ,r is evaluated by means of a loss function q equals q left parenthesis z right parenthesisq = q(z), as, e.g., the 
squared Euclidean norm q left parenthesis z right parenthesis equals parallel to z parallel to Subscript upper E Baseline equals sigma summation Underscript i equals 1 Overscript r Endscripts parallel to z Subscript i Baseline parallel to Subscript upper E Superscript 2q(z) = ||z||E =
r∑
i=1
||zi||2
E. 
This leads to the optimization problem 
StartLayout 1st Row min Underscript left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis element of upper D Endscripts q left parenthesis upper Y minus upper H left parenthesis upper X right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix right parenthesis period EndLayout
min
(β0,βI )∈D q(Y −H(X)
( β0
βI
)
).
(11.5d)

298
11
Machine Learning Under Stochastic Uncertainty
11.2 
Stochastic Optimization Methods in Machine 
Learning 
The dataleft parenthesis x Subscript i Baseline comma y Subscript i Baseline right parenthesis comma i equals 1 comma ellipsis comma r(xi, yi), i = 1, . . . ,r, as stated in (11.1b), can be interpreted as realizations 
of a pair 
StartLayout 1st Row left parenthesis upper X comma upper Y right parenthesis equals left parenthesis upper X left parenthesis omega right parenthesis comma upper Y left parenthesis omega right parenthesis right parenthesis comma omega element of left parenthesis normal upper Omega comma German upper A comma script upper P right parenthesis comma EndLayout(X, Y) = (X(ω), Y(ω)), ω ∈(Ω, A, P),
(11.6a) 
of stochastic scalar or vectorial input-output variables on a probability space 
left parenthesis normal upper Omega comma German upper A comma script upper P right parenthesis(Ω, A, P). 
Taking possible constraintsbeta element of upper Dβ ∈D and/or costsc left parenthesis beta right parenthesis equals c left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesisc(β) = c(β0, βI) into account for 
the parameter vector 
StartLayout 1st Row beta equals StartBinomialOrMatrix beta 0 Choose beta Subscript upper I EndBinomialOrMatrix EndLayoutβ =
( β0
βI
)
(11.6b) 
with a loss function q equals q left parenthesis z right parenthesisq = q(z), the machine learning or regression problem can be 
formulated by the stochastic optimization problem 
StartLayout 1st Row min Underscript beta element of upper D Endscripts c left parenthesis beta right parenthesis plus upper E q left parenthesis upper Y left parenthesis omega right parenthesis minus upper H left parenthesis upper X left parenthesis omega right parenthesis beta right parenthesis comma EndLayout min
β∈D c(β) + Eq (Y(ω) −H(X(ω)β) ,
(11.6c) 
where 
StartLayout 1st Row upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis beta equals beta 0 plus phi left parenthesis upper X left parenthesis omega right parenthesis right parenthesis beta Subscript upper I Baseline comma EndLayoutH(X(ω))β = β0 + ϕ(X(ω))βI,
(11.6d) 
upper EE denotes the expectation operator and upper X equals upper X left parenthesis omega right parenthesis element of double struck upper R Superscript nX = X(ω) ∈Rn, upper Y equals upper Y left parenthesis omega right parenthesis element of double struck upper R Superscript mY = Y(ω) ∈Rm denotes 
the underlying input-output pair. 
11.2.1 
Least Squares Estimation of the Parameter Vector 
One of the most frequently used loss functions is the squared Euclidean normq left parenthesis z right parenthesis equals parallel to z parallel to Subscript upper E Superscript 2 Baseline equals z Superscript upper T Baseline zq(z) =
||z||2
E = zT z. Assuming zero parameter costs c left parenthesis beta right parenthesis equals 0c(β) = 0 and no constraints for beta equals left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis Superscript upper Tβ =
(β0, βI)T , the estimation problem (11.6c), (11.6d) reads 
StartLayout 1st Row min Underscript beta 0 comma beta Subscript upper I Baseline Endscripts upper E double vertical bar upper Y left parenthesis omega right parenthesis minus upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix double vertical bar Subscript upper E Superscript 2 Baseline period EndLayout min
β0,βI E
||||||||Y(ω) −H(X(ω))
( β0
βI
)||||||||
2
E
.
(11.7a) 
Due to the strict convexity of the loss function q left parenthesis z right parenthesis equals parallel to z parallel to Subscript upper E Superscript 2q(z) = ||z||2
E, the necessary and 
sufﬁcient optimality condition reads

11.3 Estimation with Sublinear Loss Function q = q(z)
299
StartLayout 1st Row upper E upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix equals upper E upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline upper Y left parenthesis omega right parenthesis period EndLayoutE H(X(ω))T H(X(ω))
( β0
βI
)
= E H(X(ω))T Y(ω).
This yields the following result: 
Lemma 11.1 If the loss function qq is deﬁned by the squared Euclidean norm and 
the matrix upper E upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis Superscript upper T upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesisE H(X(ω))T H(X(ω)) is regular, then the optimal parameter vector is 
given by 
StartLayout 1st Row StartBinomialOrMatrix beta 0 Superscript asterisk Baseline Choose beta Subscript upper I Superscript asterisk Baseline EndBinomialOrMatrix equals left parenthesis upper E upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis right parenthesis Superscript negative 1 Baseline upper E upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis Superscript upper T Baseline upper Y left parenthesis omega right parenthesis period EndLayout
(β∗
0
β∗
I
)
=
(
E H(X(ω))T H(X(ω))
)−1 E H(X(ω))T Y(ω).
(11.7b) 
11.3 
Estimation with Sublinear Loss Function q equals q left parenthesis z right parenthesisq = q(z)
In addition to the stochastic optimization problem (11.6c)–(11.6d), we now con-
sider the parameter optimization problem in the following form, whereupper Z equals upper Z left parenthesis omega right parenthesis element of double struck upper R Superscript m Baseline comma omega element of left parenthesis normal upper Omega comma German upper A comma script upper P right parenthesisZ = Z(ω) ∈
Rm, ω ∈(Ω, A, P), denotes the approximated and realized output 
StartLayout 1st Row 1st Column min 2nd Column c left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis plus upper E q left parenthesis upper Z left parenthesis omega right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column normal s period normal t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper Z left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis Superscript upper T Baseline element of upper D period EndLayout min c(β0, βI) + Eq(Z(ω))
(11.8a) 
StartLayout 1st Row 1st Column min 2nd Column c left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis plus upper E q left parenthesis upper Z left parenthesis omega right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column normal s period normal t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper Z left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis Superscript upper T Baseline element of upper D period EndLayouts.t. H(X(ω))
( β0
βI
)
+ Z(ω) = Y(ω)
(11.8b) 
StartLayout 1st Row 1st Column min 2nd Column c left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis plus upper E q left parenthesis upper Z left parenthesis omega right parenthesis right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column normal s period normal t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper Z left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis Superscript upper T Baseline element of upper D period EndLayout (β0, βI)T ∈D.
(11.8c) 
Here, q equals q left parenthesis z right parenthesisq = q(z) is a sublinear function [ 7, 9] having the following properties: 
StartLayout 1st Row 1st Column q left parenthesis lamda z right parenthesis equals 2nd Column lamda q left parenthesis z right parenthesis comma 3rd Column lamda greater than or equals 0 comma z element of double struck upper R Superscript m Baseline 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 8th Column Blank 2nd Row 1st Column q left parenthesis z plus w right parenthesis less than or equals 2nd Column q left parenthesis z right parenthesis plus q left parenthesis w right parenthesis comma 3rd Column z comma w element of double struck upper R Superscript m Baseline period EndLayoutq(λz) = λq(z),
λ ≥0, z ∈Rm
q(z + w) ≤q(z) + q(w),
z, w ∈Rm.
Sublinear functionals can be represented in the following way [ 8]: 
(a) Maximum (supremum) of linear functions 
Let c Subscript j Baseline comma j element of upper Jc j, j ∈J be a ﬁnite or inﬁnite number of vectors c Subscript j Baseline element of double struck upper R Superscript mc j ∈Rm. Then 
StartLayout 1st Row q left parenthesis z right parenthesis colon equals max Underscript j element of upper J Endscripts left parenthesis sup right parenthesis c Subscript j Superscript upper T Baseline z comma z element of double struck upper R Superscript m EndLayoutq(z) := max
j∈J (sup)cT
j z, z ∈Rm
(11.9a) 
is a sublinear function on double struck upper R Superscript mRm, assuming that for an inﬁnite index set the supre-
mum is ﬁnite. 
(b) Distance or Minkowski functional 
For a given closed, convex setupper K element of double struck upper R Superscript mK ∈Rm containing the origin as an interior point, 
the distance or Minkowski functional q left parenthesis z right parenthesis equals q Subscript upper K Baseline left parenthesis z right parenthesisq(z) = qK(z) is deﬁned by 
StartLayout 1st Row q left parenthesis z right parenthesis colon equals inf left brace lamda greater than 0 colon StartFraction z Over lamda EndFraction element of upper K right brace comma z element of double struck upper R Superscript m Baseline period EndLayoutq(z) := inf{λ > 0 : z
λ ∈K}, z ∈Rm.
(11.9b)

300
11
Machine Learning Under Stochastic Uncertainty
(c) Sublinear functions generated by linear programs 
Let upper MM an left parenthesis m comma s right parenthesis(m, s)-matrix such that 
StartLayout 1st Row left brace w element of double struck upper R Superscript m Baseline colon upper M w equals z comma w greater than or equals 0 right brace not equals normal empty set for all z element of double struck upper R Superscript m EndLayout
{
w ∈Rm : Mw = z, w ≥0
}
/= ∅for all z ∈Rm
(11.9c) 
and gamma greater than or equals 0 comma gamma element of double struck upper R Superscript sγ ≥0, γ ∈Rs. Then 
StartLayout 1st Row q left parenthesis z right parenthesis colon equals min left brace gamma Superscript upper T Baseline w colon upper M w equals z comma w greater than or equals 0 right brace comma z element of double struck upper R Superscript m EndLayoutq(z) := min
{
γ T w : Mw = z, w ≥0
}
, z ∈Rm
(11.9d) 
i.e., the solution of the linear program 
StartLayout 1st Row StartLayout 1st Row 1st Column min 2nd Column Blank 3rd Column gamma Superscript upper T Baseline w 2nd Row 1st Column s period t period 2nd Column Blank 3rd Column upper M w equals z 3rd Row 1st Column Blank 2nd Column Blank 3rd Column w greater than or equals 0 EndLayout EndLayout
min γ T w
s.t.
Mw = z
w ≥0
(11.9e) 
is a sublinear function on double struck upper R Superscript mRm. 
Remark 11.1 For the interrelation of the three representations of sublinear func-
tions, see [ 7, 8]. 
Some sublinear functionsq equals q left parenthesis z right parenthesisq = q(z), as the maximum norm, also called Chebyshev 
norm, i.e.,q left parenthesis z right parenthesis equals parallel to z parallel to Subscript normal infinity Baseline equals sup StartAbsoluteValue z Subscript j Baseline EndAbsoluteValueq(z) = ||z||∞= sup |z j|, evaluate the componentsz Subscript j Baseline comma j element of upper Jz j, j ∈J of a deviation 
vector z equals left parenthesis z Subscript j Baseline right parenthesis Subscript j element of upper Jz = (z j) j∈J in a uniform way. 
Remark 11.2 The matrix upper MM is called recourse matrix in cases where (11.9c)– 
(11.9d) models a correction step, see later. 
Using the LP version (11.9d) for the representation of the sublinear function, 
the estimation problem (11.8a)–(11.8c) can be represented, using a possibly random 
matrix upper M equals upper M left parenthesis omega right parenthesisM = M(ω) and a random cost vector gamma equals gamma left parenthesis omega right parenthesisγ = γ (ω), by  
StartLayout 1st Row 1st Column min 2nd Column c left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis plus upper E gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 3rd Column a period s period 4th Column Blank 5th Column Blank 6th Column Blank 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix element of upper D comma w left parenthesis omega right parenthesis greater than or equals 0 comma 3rd Column a period s period EndLayout min c(β0, βI) + Eγ (ω)T w(ω)
(11.10a) 
StartLayout 1st Row 1st Column min 2nd Column c left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis plus upper E gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 3rd Column a period s period 4th Column Blank 5th Column Blank 6th Column Blank 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix element of upper D comma w left parenthesis omega right parenthesis greater than or equals 0 comma 3rd Column a period s period EndLayouts.t.
H(X(ω))
( β0
βI
)
+ M(ω)w(ω) = Y(ω)
a.s.
(11.10b) 
StartLayout 1st Row 1st Column min 2nd Column c left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis plus upper E gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 3rd Column a period s period 4th Column Blank 5th Column Blank 6th Column Blank 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix element of upper D comma w left parenthesis omega right parenthesis greater than or equals 0 comma 3rd Column a period s period EndLayout
( β0
βI
)
∈D, w(ω) ≥0,
a.s.
(11.10c) 
11.3.1 
Representation by a Stochastic Linear Optimization 
Problem (SLOP) 
Under weak assumptions (11.10a)–(11.10c) can be represented by an (LP): 
• Suppose that the cost function c equals c left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesisc = c(β0, βI) is deﬁned by the sublinear function, 
c.f. (11.9a),

11.3 Estimation with Sublinear Loss Function q = q(z)
301
StartLayout 1st Row c left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis colon equals max Underscript 1 less than or equals l less than or equals upper L Endscripts c Subscript l Superscript upper T Baseline StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix comma EndLayoutc(β0, βI) := max
1≤l≤L cT
l
( β0
βI
)
,
(11.11a) 
where c Subscript l Baseline comma l equals 1 comma ellipsis comma upper Lcl, l = 1, . . . , L, are  given left parenthesis m plus p right parenthesis(m + p)-vectors. 
• Moreover, assume left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis Superscript upper T Baseline element of upper D(β0, βI)T ∈D is given by 
StartLayout 1st Row upper G StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix less than or equals g period EndLayoutG
( β0
βI
)
≤g.
(11.11b) 
• Deﬁning the left parenthesis upper L comma m plus p right parenthesis(L, m + p)-matrix upper CC and the upper LL-vector e Subscript upper LeL by 
StartLayout 1st Row 1st Column upper C colon equals Start 3 By 1 Matrix 1st Row c 1 Superscript upper T Baseline 2nd Row vertical ellipsis 3rd Row c Subscript upper L Superscript upper T Baseline EndMatrix comma 2nd Column Blank 3rd Column e Subscript upper L Baseline colon equals Start 3 By 1 Matrix 1st Row 1 2nd Row vertical ellipsis 3rd Row 1 EndMatrix comma EndLayoutC :=
⎛
⎜⎝
cT
1...
cT
L
⎞
⎟⎠,
eL :=
⎛
⎜⎝
1
...
1
⎞
⎟⎠,
(11.11c) 
and selecting auxiliary vectorial variables epsilon comma eta∈, η, 
for problem (11.8a)–(11.8c) we have the following representation [ 9] 
Lemma 11.2 Using (11.11a)–(11.11c), problem (11.8a)–(11.8c) can be represented 
in the form of a stochastic linear optimization problem (SLOP) 
StartLayout 1st Row 1st Column min 2nd Column c plus upper E gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 3rd Column a period s period 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper C StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column delta comma eta greater than or equals 0 comma w left parenthesis omega right parenthesis greater than or equals 0 3rd Column a period s period EndLayout min c + Eγ (ω)T w(ω)
(11.12a) 
StartLayout 1st Row 1st Column min 2nd Column c plus upper E gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 3rd Column a period s period 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper C StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column delta comma eta greater than or equals 0 comma w left parenthesis omega right parenthesis greater than or equals 0 3rd Column a period s period EndLayouts.t. H(X(ω))
( β0
βI
)
+ M(ω)w(ω) = Y(ω)
a.s.
(11.12b) 
StartLayout 1st Row 1st Column min 2nd Column c plus upper E gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 3rd Column a period s period 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper C StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column delta comma eta greater than or equals 0 comma w left parenthesis omega right parenthesis greater than or equals 0 3rd Column a period s period EndLayout C
( β0
βI
)
−ceL + δ = 0
(11.12c) 
StartLayout 1st Row 1st Column min 2nd Column c plus upper E gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 3rd Column a period s period 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper C StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column delta comma eta greater than or equals 0 comma w left parenthesis omega right parenthesis greater than or equals 0 3rd Column a period s period EndLayout G
( β0
βI
)
+ η = g
(11.12d) 
StartLayout 1st Row 1st Column min 2nd Column c plus upper E gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis 3rd Column a period s period 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column upper C StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column delta comma eta greater than or equals 0 comma w left parenthesis omega right parenthesis greater than or equals 0 3rd Column a period s period EndLayout δ, η ≥0,
w(ω) ≥0
a.s.
(11.12e) 
Remark 11.3 (SLOP) Condition (11.12a) and (11.12c) mean that the objective func-
tion of the SLOP (11.12a)–(11.12e), 
StartLayout 1st Row f StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix colon equals max Underscript 1 less than or equals l less than or equals upper L Endscripts c Subscript l Superscript upper T Baseline StartBinomialOrMatrix beta 0 Choose beta Subscript upper I Baseline EndBinomialOrMatrix plus upper E gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis comma EndLayout f
( β0
βI
)
:= max
1≤l≤L cT
l
( β0
βI
)
+ Eγ (ω)T w(ω),
(11.13) 
i.e., the sum of the costs (11.11a) for the parametersbeta equals left parenthesis beta 0 comma beta Subscript upper I Baseline right parenthesis Superscript upper Tβ = (β0, βI)T and the expected 
costs (11.9d) for the deviation between the actual realization upper Y left parenthesis omega right parenthesisY(ω) of the output upper YY
and the approximated output upper H left parenthesis upper Y left parenthesis omega right parenthesis right parenthesis StartBinomialOrMatrix beta 0 Choose beta Subscript upper I EndBinomialOrMatrixH(Y(ω))
( β0
βI
)
have to be minimized.

302
11
Machine Learning Under Stochastic Uncertainty
11.3.2 
Numerical Solution of the (SLOP) 
A main procedure for the numerical solution of problems of the type (11.12a)– 
(11.12e) is based on the discretization of the probability measure script upper PP, see, e.g., 
[ 10, Chap. 2]. 
Here, script upper PP is approximated by discrete distributions 
StartLayout 1st Row 1st Column script upper P Subscript d Baseline colon equals sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript j Baseline epsilon Subscript omega Sub Subscript j Subscript Baseline comma 2nd Column Blank 3rd Column sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript j Baseline equals 1 comma 4th Column Blank 5th Column alpha Subscript j Baseline greater than or equals 0 comma 6th Column Blank 7th Column 1 less than or equals j less than or equals r comma EndLayoutPd :=
r
∑
j=1
α j∈ω j,
r
∑
j=1
α j = 1,
α j ≥0,
1 ≤j ≤r,
(11.14a) 
whereepsilon Subscript omega Sub Subscript j∈ω j denotes the one-point measure at pointomega Subscript jω j, andalpha Subscript j Baseline equals script upper P left parenthesis normal upper Omega Subscript j Baseline right parenthesisα j = P(Ω j) are the prob-
abilities of a certain partition union Underscript j equals 1 Overscript r Endscripts normal upper Omega Subscript j Baseline equals normal upper Omega
rU
j=1
Ω j = Ω of normal upper OmegaΩ with w Subscript j Baseline element of normal upper Omega Subscript j Baseline comma j equals 1 comma ellipsis comma rw j ∈Ω j, j = 1, . . . ,r. 
Deﬁning then x Subscript j Baseline comma y Subscript j Baseline comma w Subscript j Baseline comma upper M Subscript j Baseline comma j equals 1 comma ellipsis comma rx j, y j, w j, M j, j = 1, . . . ,r by 
StartLayout 1st Row 1st Column x Subscript j colon equals 2nd Column upper X left parenthesis omega Subscript j Baseline right parenthesis comma 3rd Column y Subscript j colon equals 4th Column upper Y left parenthesis omega Subscript j Baseline right parenthesis comma 5th Column w Subscript j colon equals 6th Column w left parenthesis omega Subscript j Baseline right parenthesis comma 2nd Row 1st Column upper M Subscript j colon equals 2nd Column upper M Subscript j Baseline left parenthesis omega Subscript j Baseline right parenthesis comma 3rd Column gamma Subscript j colon equals 4th Column gamma left parenthesis omega Subscript j Baseline right parenthesis comma EndLayoutx j := X(ω j),
y j := Y(ω j),
w j := w(ω j),
M j := M j(ω j),
γ j := γ (ω j),
(11.14b) 
problem (11.12a)–(11.12e) can be approximated by 
StartLayout 1st Row 1st Column min 2nd Column c plus sigma summation Underscript j equals 1 Overscript r Endscripts x Subscript j Baseline gamma Subscript j Superscript upper T Baseline w Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis x Subscript j Baseline right parenthesis beta plus upper M Subscript j Baseline w Subscript j Baseline equals y Subscript j Baseline comma j equals 1 comma ellipsis comma r 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column c beta minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G beta plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column w Subscript j Baseline greater than or equals 0 comma j equals 1 comma ellipsis r comma delta greater than or equals 0 comma eta greater than or equals 0 comma EndLayout min c +
r
∑
j=1
x jγ T
j w j
(11.15a) 
StartLayout 1st Row 1st Column min 2nd Column c plus sigma summation Underscript j equals 1 Overscript r Endscripts x Subscript j Baseline gamma Subscript j Superscript upper T Baseline w Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis x Subscript j Baseline right parenthesis beta plus upper M Subscript j Baseline w Subscript j Baseline equals y Subscript j Baseline comma j equals 1 comma ellipsis comma r 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column c beta minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G beta plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column w Subscript j Baseline greater than or equals 0 comma j equals 1 comma ellipsis r comma delta greater than or equals 0 comma eta greater than or equals 0 comma EndLayouts.t.
H(x j)β + M jw j = y j,
j = 1, . . . ,r
(11.15b) 
StartLayout 1st Row 1st Column min 2nd Column c plus sigma summation Underscript j equals 1 Overscript r Endscripts x Subscript j Baseline gamma Subscript j Superscript upper T Baseline w Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis x Subscript j Baseline right parenthesis beta plus upper M Subscript j Baseline w Subscript j Baseline equals y Subscript j Baseline comma j equals 1 comma ellipsis comma r 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column c beta minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G beta plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column w Subscript j Baseline greater than or equals 0 comma j equals 1 comma ellipsis r comma delta greater than or equals 0 comma eta greater than or equals 0 comma EndLayout cβ −ceL + δ = 0
(11.15c) 
StartLayout 1st Row 1st Column min 2nd Column c plus sigma summation Underscript j equals 1 Overscript r Endscripts x Subscript j Baseline gamma Subscript j Superscript upper T Baseline w Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis x Subscript j Baseline right parenthesis beta plus upper M Subscript j Baseline w Subscript j Baseline equals y Subscript j Baseline comma j equals 1 comma ellipsis comma r 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column c beta minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G beta plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column w Subscript j Baseline greater than or equals 0 comma j equals 1 comma ellipsis r comma delta greater than or equals 0 comma eta greater than or equals 0 comma EndLayout Gβ + η = g
(11.15d) 
StartLayout 1st Row 1st Column min 2nd Column c plus sigma summation Underscript j equals 1 Overscript r Endscripts x Subscript j Baseline gamma Subscript j Superscript upper T Baseline w Subscript j Baseline 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column upper H left parenthesis x Subscript j Baseline right parenthesis beta plus upper M Subscript j Baseline w Subscript j Baseline equals y Subscript j Baseline comma j equals 1 comma ellipsis comma r 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column c beta minus c e Subscript upper L Baseline plus delta equals 0 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G beta plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column w Subscript j Baseline greater than or equals 0 comma j equals 1 comma ellipsis r comma delta greater than or equals 0 comma eta greater than or equals 0 comma EndLayout w j ≥0, j = 1, . . .r,
δ ≥0, η ≥0,
(11.15e) 
with beta colon equals StartBinomialOrMatrix beta 0 Choose beta Subscript upper I EndBinomialOrMatrixβ :=
( β0
βI
)
. 
Next, basic properties of problem (11.15a)–(11.15e) are given: 
Theorem 11.1 (Stochastic Linear Program (SLP)) 
(a) 
The discretized problem (11.15a)–(11.15e) is a linear program (LP). 
(b) 
Increasing the reﬁnement of the discretization of the probability spaceleft parenthesis normal upper Omega comma German upper A comma script upper P right parenthesis(Ω, A, P), 
the optimal solutionbeta Subscript d Superscript asteriskβ∗
d and the related optimal value of (11.15a)–(11.15e) con-
verge to the optimal solution, the optimal value, resp., of (11.12a)–(11.12e). 
Proof The ﬁrst assertion can be seen directly in (11.15a)–(11.15e). The second one 
can be found in the literature on stochastic linear programming (SLP), see, e.g., 
[ 4, 5].
⬜

11.3 Estimation with Sublinear Loss Function q = q(z)
303
Table 11.1 Data structure of the (SLP) (11.15a)–(11.15e) 
betaβ
c
deltaδ
etaη
w 1w1
w 2w2
w 3w3
ellipsis. . .
w Subscript rwr
1 
0
1
0
0
alpha 1 gamma 1α1γ1
alpha 2 gamma 2α2γ2
alpha 3 gamma 3α3γ3
ellipsis. . .
alpha Subscript r Baseline gamma Subscript rαrγr
0 
upper H left parenthesis x 1 right parenthesisH(x1)
0
0
0
upper M 1M1
y 1y1
upper H left parenthesis x 2 right parenthesisH(x2)
0
0
0
upper M 2M2
y 2y2
upper H left parenthesis x 3 right parenthesisH(x3)
0
0
0
upper M 3M3
y 3y3
vertical ellipsis
...
vertical ellipsis
...
vertical ellipsis
...
vertical ellipsis
...
down right diagonal ellipsis
...
vertical ellipsis
...
upper H left parenthesis x Subscript r Baseline right parenthesisH(xr)
0
0
0
upper M Subscript rMr
y Subscript ryr
C
minus e Subscript upper L−eL
I
0
0 
G
0
0
I
g 
Another important property for the solution (11.15a)–(11.15e) follows from its 
special data structure, see Table 11.1 The following variables and data occur: 
(i) In the ﬁrst line all variables beta comma c comma delta comma eta comma w 1 comma ellipsis comma w Subscript r Baselineβ, c, δ, η, w1, . . . , wr are shown. 
(ii) In the second line the coefﬁcients of the objective function appear. 
(iii) In the following large block the discretized input-output equation involving the 
unknown parameters to be determined occurs. 
(iv) In the next to last line the coefﬁcients for the representation of the objective 
function upper CC as a maximum of linear functions of betaβ are shown. 
(v) The last line shows the coefﬁcients of possible inequality constraints of the 
parameter vector betaβ. 
According to Table 11.1, (SLP) (11.15a)–(11.15e) has the following data structure 
which guarantees considerable advantages in the numerical solution of this LP, see 
[ 5, 11]. 
Theorem 11.2 The LP (11.15a)–(11.15e) has a dual decomposition or dual block 
angular data structure. 
Proof See the consideration of (SLOP), e.g., in [ 4, 5, 11].
⬜
11.3.3 
Two-Stage Stochastic Linear Programs (SLP) 
In problem (11.12a)–(11.12e), (11.15a)–(11.15e), the system of linear equations 
(11.12b), (11.15b), resp. , together with the second cost term in (11.12a), (11.15a), 
can be interpreted as a cost-based evaluation of the accuracy of the approximation of 
the output upper Y left parenthesis omega right parenthesisY(ω) by upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis beta comma omega element of normal upper OmegaH(X(ω))β, ω ∈Ω, y Subscript iyi by upper H left parenthesis x Subscript i Baseline right parenthesis beta comma i equals 1 comma ellipsis comma rH(xi)β, i = 1, . . . ,r, respectively. 
Assume now, that after taking the coefﬁcient vector betaβ at an initial time t 0t0, the  
random data input-output vector left parenthesis upper X left parenthesis omega right parenthesis comma upper Y left parenthesis omega right parenthesis right parenthesis(X(ω), Y(ω)) is realized at a later time t 1t1. This  
enables then an improvement of the initial function approximation

304
11
Machine Learning Under Stochastic Uncertainty
StartLayout 1st Row h left parenthesis x right parenthesis almost equals h left parenthesis x semicolon beta right parenthesis equals upper H left parenthesis x right parenthesis beta equals beta 0 plus phi left parenthesis x right parenthesis beta Subscript upper I Baseline comma EndLayouth(x) ≈h(x; β) = H(x)β = β0 + ϕ(x)βI,
(11.16a) 
see (11.1a)–(11.1b) and (11.2a)–(11.2b), (11.3), (11.4a)–(11.4b), by adding the 
extended correction term 
StartLayout 1st Row upper M overTilde w overTilde colon equals psi left parenthesis x right parenthesis b plus upper M w equals sigma summation Underscript l equals 1 Overscript upper L Endscripts psi left parenthesis x right parenthesis beta Subscript l Baseline plus upper M w comma EndLayout ˜M ˜w := ψ(x)b + Mw =
L
∑
l=1
ψ(x)βl + Mw,
(11.16b) 
where the ﬁrst term is used to improve the analytical approximation of the input-
output function y equals h left parenthesis x right parenthesisy = h(x), hence 
StartLayout 1st Row ModifyingAbove h With caret left parenthesis x right parenthesis equals phi left parenthesis x right parenthesis beta right arrow ModifyingAbove h With caret equals phi left parenthesis x right parenthesis beta plus psi left parenthesis x right parenthesis b comma EndLayoutˆh(x) = ϕ(x)β →ˆh = ϕ(x)β + ψ(x)b,
(11.16c) 
adding, e.g., quadratic terms to an initially linear approximation of hh. Moreover, 
the second term in (11.16b) is devoted to measure, minimize, resp. , the remaining 
analytical and measurement/observational errors. 
Using the extended correction term (11.16b) and taking, for simpliﬁcation, linear 
cost functions for the evaluation of the coefﬁcient vectorsbetaβ andbb, corresponding to 
(11.12a)–(11.12e) the (SLOP) reads 
StartLayout 1st Row 1st Column min Underscript beta Subscript plus Baseline comma beta Subscript minus Baseline comma b Subscript plus Baseline comma b Subscript minus Baseline comma w Endscripts 2nd Column c Subscript plus Superscript upper T Baseline beta Subscript plus Baseline plus c Subscript minus Superscript upper T Baseline beta Subscript minus Baseline plus upper E left parenthesis d Subscript plus Superscript upper T Baseline left parenthesis omega right parenthesis b Subscript plus Baseline left parenthesis omega right parenthesis plus d Subscript minus Superscript upper T Baseline left parenthesis omega right parenthesis b Subscript minus Baseline left parenthesis omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus psi left parenthesis upper X left parenthesis omega right parenthesis right parenthesis left parenthesis b Subscript plus Baseline left parenthesis omega right parenthesis minus b Subscript minus Baseline left parenthesis omega right parenthesis right parenthesis 5th Row 1st Column Blank 2nd Column plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis a period s period 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta greater than or equals 0 comma b Subscript plus Baseline left parenthesis omega right parenthesis comma b Subscript minus Baseline left parenthesis omega right parenthesis comma w left parenthesis omega right parenthesis greater than or equals 0 a period s period EndLayout
min
β+,β−,b+,b−,w cT
+β+ + cT
−β−+ E
(
dT
+(ω)b+(ω) + dT
−(ω)b−(ω)
+ γ (ω)T w(ω)
)
(11.17a) 
StartLayout 1st Row 1st Column min Underscript beta Subscript plus Baseline comma beta Subscript minus Baseline comma b Subscript plus Baseline comma b Subscript minus Baseline comma w Endscripts 2nd Column c Subscript plus Superscript upper T Baseline beta Subscript plus Baseline plus c Subscript minus Superscript upper T Baseline beta Subscript minus Baseline plus upper E left parenthesis d Subscript plus Superscript upper T Baseline left parenthesis omega right parenthesis b Subscript plus Baseline left parenthesis omega right parenthesis plus d Subscript minus Superscript upper T Baseline left parenthesis omega right parenthesis b Subscript minus Baseline left parenthesis omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus psi left parenthesis upper X left parenthesis omega right parenthesis right parenthesis left parenthesis b Subscript plus Baseline left parenthesis omega right parenthesis minus b Subscript minus Baseline left parenthesis omega right parenthesis right parenthesis 5th Row 1st Column Blank 2nd Column plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis a period s period 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta greater than or equals 0 comma b Subscript plus Baseline left parenthesis omega right parenthesis comma b Subscript minus Baseline left parenthesis omega right parenthesis comma w left parenthesis omega right parenthesis greater than or equals 0 a period s period EndLayouts.t.
H(X(ω))(β+ −β−) + ψ(X(ω))(b+(ω) −b−(ω))
+ M(ω)w(ω) = Y(ω) a.s.
(11.17b) 
StartLayout 1st Row 1st Column min Underscript beta Subscript plus Baseline comma beta Subscript minus Baseline comma b Subscript plus Baseline comma b Subscript minus Baseline comma w Endscripts 2nd Column c Subscript plus Superscript upper T Baseline beta Subscript plus Baseline plus c Subscript minus Superscript upper T Baseline beta Subscript minus Baseline plus upper E left parenthesis d Subscript plus Superscript upper T Baseline left parenthesis omega right parenthesis b Subscript plus Baseline left parenthesis omega right parenthesis plus d Subscript minus Superscript upper T Baseline left parenthesis omega right parenthesis b Subscript minus Baseline left parenthesis omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus psi left parenthesis upper X left parenthesis omega right parenthesis right parenthesis left parenthesis b Subscript plus Baseline left parenthesis omega right parenthesis minus b Subscript minus Baseline left parenthesis omega right parenthesis right parenthesis 5th Row 1st Column Blank 2nd Column plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis a period s period 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta greater than or equals 0 comma b Subscript plus Baseline left parenthesis omega right parenthesis comma b Subscript minus Baseline left parenthesis omega right parenthesis comma w left parenthesis omega right parenthesis greater than or equals 0 a period s period EndLayout G(β+ −β−) + η = g
(11.17c) 
StartLayout 1st Row 1st Column min Underscript beta Subscript plus Baseline comma beta Subscript minus Baseline comma b Subscript plus Baseline comma b Subscript minus Baseline comma w Endscripts 2nd Column c Subscript plus Superscript upper T Baseline beta Subscript plus Baseline plus c Subscript minus Superscript upper T Baseline beta Subscript minus Baseline plus upper E left parenthesis d Subscript plus Superscript upper T Baseline left parenthesis omega right parenthesis b Subscript plus Baseline left parenthesis omega right parenthesis plus d Subscript minus Superscript upper T Baseline left parenthesis omega right parenthesis b Subscript minus Baseline left parenthesis omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus gamma left parenthesis omega right parenthesis Superscript upper T Baseline w left parenthesis omega right parenthesis right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column upper H left parenthesis upper X left parenthesis omega right parenthesis right parenthesis left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus psi left parenthesis upper X left parenthesis omega right parenthesis right parenthesis left parenthesis b Subscript plus Baseline left parenthesis omega right parenthesis minus b Subscript minus Baseline left parenthesis omega right parenthesis right parenthesis 5th Row 1st Column Blank 2nd Column plus upper M left parenthesis omega right parenthesis w left parenthesis omega right parenthesis equals upper Y left parenthesis omega right parenthesis a period s period 6th Row 1st Column Blank 7th Row 1st Column Blank 2nd Column upper G left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus eta equals g 8th Row 1st Column Blank 9th Row 1st Column Blank 2nd Column beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta greater than or equals 0 comma b Subscript plus Baseline left parenthesis omega right parenthesis comma b Subscript minus Baseline left parenthesis omega right parenthesis comma w left parenthesis omega right parenthesis greater than or equals 0 a period s period EndLayout β+, β−, η ≥0,
b+(ω), b−(ω), w(ω) ≥0 a.s.
(11.17d) 
Remark 11.4 The vectorsbeta comma b left parenthesis omega right parenthesisβ, b(ω) of coefﬁcients in the approximation of the input-
output function y equals h left parenthesis x right parenthesisy = h(x), sf.  (11.1a)–(11.1b) are represented by 
StartLayout 1st Row beta equals beta Subscript plus Baseline minus beta Subscript minus Baseline comma b left parenthesis omega right parenthesis equals b Subscript plus Baseline left parenthesis omega right parenthesis minus b Subscript minus Baseline left parenthesis omega right parenthesis EndLayoutβ = β+ −β−,
b(ω) = b+(ω) −b−(ω)
(11.18a) 
with nonnegative vectorsbeta Subscript plus Baseline comma beta Subscript minus Baseline comma b Subscript plus Baseline left parenthesis omega right parenthesis comma b Subscript minus Baseline left parenthesis omega right parenthesis greater than or equals 0β+, β−, b+(ω), b−(ω) ≥0. Note, that in the present 2-stage 
setting of the (SLOP) the vectorsb left parenthesis omega right parenthesis comma b Subscript plus Baseline left parenthesis omega right parenthesisb(ω), b+(ω) andb Subscript minus Baseline left parenthesis omega right parenthesisb−(ω) may be random. Moreover, 
c Subscript plus Baseline comma c Subscript minus Baselinec+, c−, d Subscript plus Baseline equals d Subscript plus Baseline left parenthesis omega right parenthesis comma d Subscript minus Baseline equals d Subscript minus Baseline left parenthesis omega right parenthesisd+ = d+(ω), d−= d−(ω), resp., are deterministic, stochastic, resp., cost 
vectors. 
Approximating, corresponding to (11.12a)–(11.12e), the 2-stage (SLOP) 
(11.17a)–(11.17d) by means of discretization of the probability distribution script upper PP, see  
(11.14a)–(11.14b), we set 
StartLayout 1st Row 1st Column b Subscript plus j colon equals 2nd Column b Subscript plus Baseline left parenthesis omega Subscript j Baseline right parenthesis comma 3rd Column b Subscript negative j colon equals 4th Column b Subscript minus Baseline left parenthesis omega Subscript j Baseline right parenthesis comma 5th Column upper M Subscript j colon equals 6th Column upper M left parenthesis omega Subscript j Baseline right parenthesis comma 7th Column w Subscript j colon equals 8th Column w left parenthesis omega Subscript j Baseline right parenthesis comma 2nd Row 1st Column d Subscript plus j colon equals 2nd Column d Subscript plus Baseline left parenthesis omega Subscript j Baseline right parenthesis comma 3rd Column d Subscript negative j colon equals 4th Column d Subscript minus Baseline left parenthesis omega Subscript j Baseline right parenthesis comma 5th Column gamma Subscript j colon equals 6th Column gamma left parenthesis omega Subscript j Baseline right parenthesis comma 7th Column j equals 8th Column 1 comma ellipsis comma r period EndLayoutb+ j := b+(ω j),
b−j := b−(ω j),
M j := M(ω j),
w j := w(ω j),
d+ j := d+(ω j),
d−j := d−(ω j),
γ j := γ (ω j),
j = 1, . . . ,r.
(11.18b)

11.4 Two and Multiple Group Classiﬁcation Under Stochastic Uncertainty
305
Corresponding to (SLP) (11.15a)–(11.15e) the 2-stage (SLOP) (11.17a)–(11.17d) 
is approximated, cf. (11.14a)–(11.14b), by discretization of the probability distribu-
tion script upper PP, by the 2-stage stochastic linear program 
StartLayout 1st Row 1st Column min Underscript b Subscript plus j Baseline comma b Subscript negative j Baseline comma w Subscript j Baseline Overscript beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta Endscripts Endscripts 2nd Column c Subscript plus Superscript upper T Baseline beta Subscript plus Baseline plus c Subscript minus Superscript upper T Baseline beta Subscript minus Baseline plus sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript j Baseline left parenthesis d Subscript plus j Superscript upper T Baseline b Subscript plus j Baseline plus d Subscript negative j Superscript upper T Baseline b Subscript negative j Baseline 2nd Row 1st Column Blank 2nd Column plus gamma Subscript j Superscript upper T Baseline w Subscript j Baseline right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column upper H left parenthesis alpha Subscript j Baseline right parenthesis left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus psi left parenthesis x Subscript j Baseline right parenthesis left parenthesis b Subscript plus j Baseline minus b Subscript negative j Baseline right parenthesis plus upper M Subscript j Baseline w Subscript j Baseline equals y Subscript j Baseline j equals 1 comma ellipsis r 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column upper G left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus eta equals g 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta greater than or equals 0 comma b Subscript plus j Baseline comma b Subscript negative j Baseline comma w Subscript j Baseline greater than or equals 0 comma j equals 1 comma ellipsis r EndLayout
min
β+,β−,η
b+ j,b−j,w j
cT
+β+ + cT
−β−+
r
∑
j=1
α j
(
dT
+ jb+ j + dT
−jb−j
+γ T
j w j
)
(11.19a) 
StartLayout 1st Row 1st Column min Underscript b Subscript plus j Baseline comma b Subscript negative j Baseline comma w Subscript j Baseline Overscript beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta Endscripts Endscripts 2nd Column c Subscript plus Superscript upper T Baseline beta Subscript plus Baseline plus c Subscript minus Superscript upper T Baseline beta Subscript minus Baseline plus sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript j Baseline left parenthesis d Subscript plus j Superscript upper T Baseline b Subscript plus j Baseline plus d Subscript negative j Superscript upper T Baseline b Subscript negative j Baseline 2nd Row 1st Column Blank 2nd Column plus gamma Subscript j Superscript upper T Baseline w Subscript j Baseline right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column upper H left parenthesis alpha Subscript j Baseline right parenthesis left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus psi left parenthesis x Subscript j Baseline right parenthesis left parenthesis b Subscript plus j Baseline minus b Subscript negative j Baseline right parenthesis plus upper M Subscript j Baseline w Subscript j Baseline equals y Subscript j Baseline j equals 1 comma ellipsis r 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column upper G left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus eta equals g 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta greater than or equals 0 comma b Subscript plus j Baseline comma b Subscript negative j Baseline comma w Subscript j Baseline greater than or equals 0 comma j equals 1 comma ellipsis r EndLayouts.t.
H(α j)(β+ −β−) + ψ(x j)(b+ j −b−j) + M jw j = y j j = 1, . . .r
(11.19b) 
StartLayout 1st Row 1st Column min Underscript b Subscript plus j Baseline comma b Subscript negative j Baseline comma w Subscript j Baseline Overscript beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta Endscripts Endscripts 2nd Column c Subscript plus Superscript upper T Baseline beta Subscript plus Baseline plus c Subscript minus Superscript upper T Baseline beta Subscript minus Baseline plus sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript j Baseline left parenthesis d Subscript plus j Superscript upper T Baseline b Subscript plus j Baseline plus d Subscript negative j Superscript upper T Baseline b Subscript negative j Baseline 2nd Row 1st Column Blank 2nd Column plus gamma Subscript j Superscript upper T Baseline w Subscript j Baseline right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column upper H left parenthesis alpha Subscript j Baseline right parenthesis left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus psi left parenthesis x Subscript j Baseline right parenthesis left parenthesis b Subscript plus j Baseline minus b Subscript negative j Baseline right parenthesis plus upper M Subscript j Baseline w Subscript j Baseline equals y Subscript j Baseline j equals 1 comma ellipsis r 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column upper G left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus eta equals g 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta greater than or equals 0 comma b Subscript plus j Baseline comma b Subscript negative j Baseline comma w Subscript j Baseline greater than or equals 0 comma j equals 1 comma ellipsis r EndLayout G(β+ −β−) + η = g
(11.19c) 
StartLayout 1st Row 1st Column min Underscript b Subscript plus j Baseline comma b Subscript negative j Baseline comma w Subscript j Baseline Overscript beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta Endscripts Endscripts 2nd Column c Subscript plus Superscript upper T Baseline beta Subscript plus Baseline plus c Subscript minus Superscript upper T Baseline beta Subscript minus Baseline plus sigma summation Underscript j equals 1 Overscript r Endscripts alpha Subscript j Baseline left parenthesis d Subscript plus j Superscript upper T Baseline b Subscript plus j Baseline plus d Subscript negative j Superscript upper T Baseline b Subscript negative j Baseline 2nd Row 1st Column Blank 2nd Column plus gamma Subscript j Superscript upper T Baseline w Subscript j Baseline right parenthesis 3rd Row 1st Column Blank 4th Row 1st Column s period t period 2nd Column upper H left parenthesis alpha Subscript j Baseline right parenthesis left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus psi left parenthesis x Subscript j Baseline right parenthesis left parenthesis b Subscript plus j Baseline minus b Subscript negative j Baseline right parenthesis plus upper M Subscript j Baseline w Subscript j Baseline equals y Subscript j Baseline j equals 1 comma ellipsis r 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column upper G left parenthesis beta Subscript plus Baseline minus beta Subscript minus Baseline right parenthesis plus eta equals g 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column beta Subscript plus Baseline comma beta Subscript minus Baseline comma eta greater than or equals 0 comma b Subscript plus j Baseline comma b Subscript negative j Baseline comma w Subscript j Baseline greater than or equals 0 comma j equals 1 comma ellipsis r EndLayout β+, β−, η ≥0,
b+ j, b−j, w j ≥0,
j = 1, . . .r
(11.19d) 
Since the (SLP) (11.19a)–(11.19d) and (11.15a)–(11.15e) have the same LP structure, 
all properties which are valid for (11.15a)–(11.15e), see Theorem 11.2, hold for 
(11.19a)–(11.19d), too. 
Especially, we mention the following property which is important for the numer-
ical solution of (11.19a)–(11.19d). 
Theorem 11.3 The LP (11.19a)–(11.19d) has a dual decomposition or dual block 
angular data structure. 
Proof See, e.g., the consideration of the stochastic linear programs in [ 4, 5, 11]. ⬜
11.4 
Two and Multiple Group Classiﬁcation Under 
Stochastic Uncertainty 
Consider a set of data points x Subscript ixi, 
upper M equals left brace x Subscript i Baseline colon i equals 1 comma ellipsis comma upper I right brace subset of double struck upper R Superscript n Baseline commaM = {xi : i = 1, . . . , I} ⊂Rn,
(11.20a) 
which are realizations of a random nn-vector zeta equals zeta left parenthesis omega right parenthesisζ = ζ(ω) on a probability space 
left parenthesis normal upper Omega comma German upper A comma upper P right parenthesis(Ω, A, P). Assume that a certain grouping, cf. Fig. 11.2, 
upper M equals union Underscript j equals 1 Overscript upper J Endscripts upper M Subscript j Baseline comma upper M Subscript upper J Baseline colon equals StartSet x Subscript i Baseline colon i element of upper I Subscript j Baseline EndSet comma j equals 1 comma midline horizontal ellipsis upper JM =
JU
j=1
M j,
MJ :=
{
xi : i ∈I j
}
, j = 1, · · · J
(11.20b) 
into disjoint sets of pointsupper M Subscript j Baseline comma j equals 1 comma ellipsis comma upper J commaM j, j = 1, . . . , J, can be observed, where also the further 
realizations belong to one of the observed classes. 
The problem now is to give a suitable mathematical description of the observed 
classiﬁcation such that the class of a new data point can be predicted.

306
11
Machine Learning Under Stochastic Uncertainty
Fig. 11.2 Observed grouping of the data setupper MM
As indicated in Fig. 11.2, the observed classes of data points can be represented 
in many cases [ 1– 3, 6] by means of a certain number of straight lines (in double struck upper R squaredR2) or  
hyperplanes in double struck upper R Superscript nRn : 
StartLayout 1st Row 1st Column upper H Subscript v colon equals 2nd Column StartSet x element of double struck upper R Superscript n Baseline colon w Superscript upper T Baseline x equals b EndSet comma v equals StartBinomialOrMatrix w Choose b EndBinomialOrMatrix element of double struck upper R Superscript n plus 1 Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column v equals 2nd Column v Subscript l Baseline equals StartBinomialOrMatrix w Choose b Subscript l Baseline EndBinomialOrMatrix comma l equals 1 comma ellipsis comma upper L period EndLayoutHv :=
{
x ∈Rn : wT x = b
}
,
v =
(w
b
)
∈Rn+1,
(11.21a) 
StartLayout 1st Row 1st Column upper H Subscript v colon equals 2nd Column StartSet x element of double struck upper R Superscript n Baseline colon w Superscript upper T Baseline x equals b EndSet comma v equals StartBinomialOrMatrix w Choose b EndBinomialOrMatrix element of double struck upper R Superscript n plus 1 Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column v equals 2nd Column v Subscript l Baseline equals StartBinomialOrMatrix w Choose b Subscript l Baseline EndBinomialOrMatrix comma l equals 1 comma ellipsis comma upper L period EndLayoutv = vl =
( w
bl
)
,
l = 1, . . . , L.
(11.21b) 
The parameter vectorsv Subscript l Baseline comma l equals 1 comma ellipsis upper Lvl, l = 1, . . . L are chosen in a way that point sets, represent-
ing the upper JJ classes, can be subdivided by the hyperplanes and their sides in a certain 
optimal sense, described as follows: 
11.4.1 
Two Classes left parenthesis upper J equals 2 comma upper L equals 1 right parenthesis(J = 2, L = 1)
Separating in case of two classes, cf. Fig. 11.3, the corresponding data sets upper M 1 comma upper M 2M1, M2
with a hyperplane upper H Subscript v Baseline comma v equals StartBinomialOrMatrix w Choose b EndBinomialOrMatrixHv, v =
(w
b
)
, for the parameter left parenthesis n plus 1 right parenthesis(n + 1)-vector vv, we have the  
basic condition 
StartLayout 1st Row 1st Column w Superscript upper T Baseline x 2nd Column negative b greater than or equals 0 comma x element of upper M 1 comma 2nd Row 1st Column Blank 3rd Row 1st Column w Superscript upper T Baseline x 2nd Column negative b less than or equals 0 comma x element of upper M 2 period EndLayoutwT x −b ≥0,
x ∈M1,
(11.22a) 
StartLayout 1st Row 1st Column w Superscript upper T Baseline x 2nd Column negative b greater than or equals 0 comma x element of upper M 1 comma 2nd Row 1st Column Blank 3rd Row 1st Column w Superscript upper T Baseline x 2nd Column negative b less than or equals 0 comma x element of upper M 2 period EndLayoutwT x −b ≤0,
x ∈M2.
(11.22b)

11.4 Two and Multiple Group Classiﬁcation Under Stochastic Uncertainty
307
Fig. 11.3 Separation of data setsupper M 1 comma upper M 2M1, M2, related to two classes, by the hyperplaneupper H Subscript vHv
Obviously, there are many possible separating hyperplanes upper H Subscript vHv in general. Hence, 
in order to get a unique, sharp separation of the data sets upper M 1 comma upper M 2M1, M2, we consider the 
minimum distance d 1 Superscript asterisk Baseline comma d 2 Superscript asteriskd∗
1, d∗
2, resp., between a separating hyperplane upper H Subscript vHv and a point xx
of upper M 1 comma upper M 2M1, M2, respectively. 
The distances d 1 equals d 1 left parenthesis x right parenthesis comma d 2 equals d 2 left parenthesis x overTilde right parenthesisd1 = d1(x), d2 = d2(˜x) between a point x element of upper M 1 comma x overTilde element of upper M 2x ∈M1, ˜x ∈M2, resp., 
and the hyperplane upper H Subscript vHv are given by, cf. Fig. 11.4 
StartLayout 1st Row 1st Column d 1 left parenthesis x right parenthesis equals 2nd Column parallel to x minus u parallel to equals StartFraction w Superscript upper T Baseline x minus b Over parallel to x parallel to EndFraction comma x element of upper M 1 comma 2nd Row 1st Column Blank 3rd Row 1st Column d 2 left parenthesis upper X right parenthesis equals 2nd Column parallel to x overTilde minus u overTilde parallel to equals StartFraction b minus w Superscript upper T Baseline x overTilde Over parallel to w parallel to EndFraction comma x overTilde element of upper M 2 comma EndLayoutd1(x) = ||x −u|| = wT x −b
||x||
,
x ∈M1,
(11.23a) 
StartLayout 1st Row 1st Column d 1 left parenthesis x right parenthesis equals 2nd Column parallel to x minus u parallel to equals StartFraction w Superscript upper T Baseline x minus b Over parallel to x parallel to EndFraction comma x element of upper M 1 comma 2nd Row 1st Column Blank 3rd Row 1st Column d 2 left parenthesis upper X right parenthesis equals 2nd Column parallel to x overTilde minus u overTilde parallel to equals StartFraction b minus w Superscript upper T Baseline x overTilde Over parallel to w parallel to EndFraction comma x overTilde element of upper M 2 comma EndLayoutd2(X) = ||˜x −˜u|| = b −wT ˜x
||w||
,
˜x ∈M2,
(11.23b) 
where u comma u overTildeu, ˜u, resp., denotes the projection of a point x element of upper M 1 comma x overTilde element of upper M 2x ∈M1, ˜x ∈M2, resp., onto 
upper H Subscript vHv. The minimum distances d 1 Superscript asterisk Baseline comma d 2 Superscript asteriskd∗
1, d∗
2, resp., between upper M 1 comma upper M 2M1, M2, resp., and a separating 
hyperplane upper H Subscript vHv then read 
StartLayout 1st Row 1st Column d 1 Superscript asterisk Baseline equals 2nd Column d 1 Superscript asterisk Baseline left parenthesis upper M 1 right parenthesis equals min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to x parallel to EndFraction comma 2nd Row 1st Column Blank 3rd Row 1st Column d 2 Superscript asterisk Baseline equals 2nd Column d 2 Superscript asterisk Baseline left parenthesis upper M 2 right parenthesis equals min Underscript x overTilde element of upper M 2 Endscripts StartFraction b minus w Superscript upper T Baseline x overTilde Over parallel to x overTilde parallel to EndFraction period EndLayoutd∗
1 = d∗
1(M1) = min
x∈M1
wT x −b
||x||
,
(11.24a) 
StartLayout 1st Row 1st Column d 1 Superscript asterisk Baseline equals 2nd Column d 1 Superscript asterisk Baseline left parenthesis upper M 1 right parenthesis equals min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to x parallel to EndFraction comma 2nd Row 1st Column Blank 3rd Row 1st Column d 2 Superscript asterisk Baseline equals 2nd Column d 2 Superscript asterisk Baseline left parenthesis upper M 2 right parenthesis equals min Underscript x overTilde element of upper M 2 Endscripts StartFraction b minus w Superscript upper T Baseline x overTilde Over parallel to x overTilde parallel to EndFraction period EndLayoutd∗
2 = d∗
2(M2) = min
˜x∈M2
b −wT ˜x
||˜x||
.
(11.24b) 
Consequently, the optimal separating hyperplane upper H Superscript asterisk Baseline equals upper H Subscript v Sub Superscript asteriskH ∗= Hv∗is achieved for equal 
and maximum distances d 1 Superscript asterisk Baseline comma d 2 Superscript asteriskd∗
1, d∗
2. Hence, we have the following conditions:

308
11
Machine Learning Under Stochastic Uncertainty
Fig. 11.4 Distances between a separating hyperplaneupper H Subscript vHv and a pointxx inupper M 1M1 orupper M 2M2
Theorem 11.4 (Optimal separating hyperplane upper H Superscript asterisk Baseline equals upper H Subscript v Sub Superscript asteriskH ∗= Hv∗) The parameter vector 
v equals StartBinomialOrMatrix w Superscript asterisk Baseline Choose b Superscript asterisk EndBinomialOrMatrixv =
(w∗
b∗
)
of the optimal separating hyperplane upper H Superscript asterisk Baseline equals upper H Subscript v Sub Superscript asteriskH ∗= Hv∗is an optimal solution 
of the optimization problem 
StartLayout 1st Row 1st Column m a x i m i z e 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction 2nd Row 1st Column Blank 3rd Row 1st Column normal s period normal t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b greater than or equals 0 comma x element of upper M 1 comma 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b less than or equals 0 comma x element of upper M 2 comma 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction equals min Underscript x element of upper M 2 Endscripts StartFraction b minus w Superscript upper T Baseline x Over parallel to w parallel to EndFraction comma 9th Row 1st Column Blank 10th Row 1st Column Blank 2nd Column StartBinomialOrMatrix w Choose b EndBinomialOrMatrix element of double struck upper R Superscript n plus 1 Baseline period EndLayoutmaximize
min
x∈M1
wT x −b
||w||
(11.25a) 
StartLayout 1st Row 1st Column m a x i m i z e 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction 2nd Row 1st Column Blank 3rd Row 1st Column normal s period normal t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b greater than or equals 0 comma x element of upper M 1 comma 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b less than or equals 0 comma x element of upper M 2 comma 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction equals min Underscript x element of upper M 2 Endscripts StartFraction b minus w Superscript upper T Baseline x Over parallel to w parallel to EndFraction comma 9th Row 1st Column Blank 10th Row 1st Column Blank 2nd Column StartBinomialOrMatrix w Choose b EndBinomialOrMatrix element of double struck upper R Superscript n plus 1 Baseline period EndLayouts.t.
wT x −b ≥0,
x ∈M1,
(11.25b) 
StartLayout 1st Row 1st Column m a x i m i z e 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction 2nd Row 1st Column Blank 3rd Row 1st Column normal s period normal t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b greater than or equals 0 comma x element of upper M 1 comma 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b less than or equals 0 comma x element of upper M 2 comma 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction equals min Underscript x element of upper M 2 Endscripts StartFraction b minus w Superscript upper T Baseline x Over parallel to w parallel to EndFraction comma 9th Row 1st Column Blank 10th Row 1st Column Blank 2nd Column StartBinomialOrMatrix w Choose b EndBinomialOrMatrix element of double struck upper R Superscript n plus 1 Baseline period EndLayoutwT x −b ≤0,
x ∈M2,
(11.25c) 
StartLayout 1st Row 1st Column m a x i m i z e 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction 2nd Row 1st Column Blank 3rd Row 1st Column normal s period normal t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b greater than or equals 0 comma x element of upper M 1 comma 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b less than or equals 0 comma x element of upper M 2 comma 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction equals min Underscript x element of upper M 2 Endscripts StartFraction b minus w Superscript upper T Baseline x Over parallel to w parallel to EndFraction comma 9th Row 1st Column Blank 10th Row 1st Column Blank 2nd Column StartBinomialOrMatrix w Choose b EndBinomialOrMatrix element of double struck upper R Superscript n plus 1 Baseline period EndLayout min
x∈M1
wT x −b
||w||
= min
x∈M2
b −wT x
||w||
,
(11.25d) 
StartLayout 1st Row 1st Column m a x i m i z e 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction 2nd Row 1st Column Blank 3rd Row 1st Column normal s period normal t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b greater than or equals 0 comma x element of upper M 1 comma 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column w Superscript upper T Baseline x minus b less than or equals 0 comma x element of upper M 2 comma 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column min Underscript x element of upper M 1 Endscripts StartFraction w Superscript upper T Baseline x minus b Over parallel to w parallel to EndFraction equals min Underscript x element of upper M 2 Endscripts StartFraction b minus w Superscript upper T Baseline x Over parallel to w parallel to EndFraction comma 9th Row 1st Column Blank 10th Row 1st Column Blank 2nd Column StartBinomialOrMatrix w Choose b EndBinomialOrMatrix element of double struck upper R Superscript n plus 1 Baseline period EndLayout
(w
b
)
∈Rn+1.
(11.25e)

11.4 Two and Multiple Group Classiﬁcation Under Stochastic Uncertainty
309
Remark 11.5 Because of Eqs. (11.24a), (11.24b), the equality conditiond 1 Superscript asterisk Baseline left parenthesis upper M 1 right parenthesis equals d 2 Superscript asterisk Baseline left parenthesis upper M 2 right parenthesisd∗
1(M1) =
d∗
2(M2) is stated in the form (11.25d). Of course, it can also be given by 
StartLayout 1st Row min Underscript x element of upper M 1 Endscripts w Superscript upper T Baseline x minus b equals min Underscript x element of upper M 2 Endscripts b minus w Superscript upper T Baseline x period EndLayout min
x∈M1 wT x −b = min
x∈M2 b −wT x.
(11.25f) 
Corollary 11.1 Simpliﬁed versions of the optimization problem (11.25a)–(11.25f) 
can be obtained if the variable bb is replaced 
StartLayout 1st Row b colon equals b 0 EndLayoutb := b0
(11.25g) 
by a preselected ﬁxed parameter value b 0 element of double struck upper Rb0 ∈R. 
In the following we denote, cf. Fig. 11.5, by  
StartLayout 1st Row 1st Column x 1 Superscript asterisk Baseline equals 2nd Column x 1 Superscript asterisk Baseline left parenthesis w comma b right parenthesis element of upper M 1 comma 2nd Row 1st Column Blank 3rd Row 1st Column x 2 Superscript asterisk Baseline equals 2nd Column x 2 Superscript asterisk Baseline left parenthesis w comma b right parenthesis element of upper M 2 comma EndLayoutx∗
1 = x∗
1(w, b) ∈M1,
(11.26a) 
StartLayout 1st Row 1st Column x 1 Superscript asterisk Baseline equals 2nd Column x 1 Superscript asterisk Baseline left parenthesis w comma b right parenthesis element of upper M 1 comma 2nd Row 1st Column Blank 3rd Row 1st Column x 2 Superscript asterisk Baseline equals 2nd Column x 2 Superscript asterisk Baseline left parenthesis w comma b right parenthesis element of upper M 2 comma EndLayoutx∗
2 = x∗
2(w, b) ∈M2,
(11.26b) 
an optimal solution (observed data point inupper M 1 comma upper M 2M1, M2, resp.) of the internal optimization 
problems in condition (11.25d) or  (11.25f). 
Due to the uncertainties of stochastic variations of the observed data sets upper M 1 equals StartSet x Subscript i Baseline colon i element of upper I 1 EndSet comma upper M 2 equals StartSet x Subscript i Baseline colon i element of upper I 2 EndSetM1 =
{xi : i ∈I1}, M2 = {xi : i ∈I2}, see  (11.20a), (11.20b), we may replace (approxi-
mate) upper M 1 comma upper M 2M1, M2, resp., by their convex hull 
StartLayout 1st Row 1st Column upper M 1 Superscript conv Baseline equals conv left parenthesis upper M 1 right parenthesis comma 2nd Column Blank 3rd Column upper M 2 Superscript conv Baseline equals conv left parenthesis upper M 2 right parenthesis EndLayoutMconv
1
= conv(M1),
Mconv
2
= conv(M2)
(11.26c) 
In this case the equations, see Fig. 11.5, 
StartLayout 1st Row 1st Column w Superscript upper T Baseline x equals 2nd Column b 1 Superscript asterisk Baseline colon equals w Superscript upper T Baseline x 1 Superscript asterisk Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column w Superscript upper T Baseline x equals 2nd Column b 2 Superscript asterisk Baseline colon equals w Superscript upper T Baseline x 2 Superscript asterisk EndLayoutwT x = b∗
1 := wT x∗
1,
(11.27a) 
StartLayout 1st Row 1st Column w Superscript upper T Baseline x equals 2nd Column b 1 Superscript asterisk Baseline colon equals w Superscript upper T Baseline x 1 Superscript asterisk Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column w Superscript upper T Baseline x equals 2nd Column b 2 Superscript asterisk Baseline colon equals w Superscript upper T Baseline x 2 Superscript asterisk EndLayoutwT x = b∗
2 := wT x∗
2
(11.27b) 
denote the tangent hyperplanes toupper M 1 Superscript conv Baseline comma upper M 2 Superscript convMconv
1
, Mconv
2
, resp., atx 1 Superscript asterisk Baseline comma x 2 Superscript asteriskx∗
1, x∗
2, resp., parallel to the 
hyperplaneupper H Subscript v Baseline comma v equals StartBinomialOrMatrix w Choose b EndBinomialOrMatrixHv, v =
(w
b
)
lying in th middle of the area between the two hyperplanes 
(11.27a), (11.27b), cf. Fig. 11.5. 
According to the construction, with the hyperplanes (11.27a), (11.27b) we now  
obtain the following classiﬁcation method for two class problems. 
Theorem 11.5 (Classiﬁcation rule for two class problems) Let v Superscript asterisk Baseline equals StartBinomialOrMatrix w Superscript asterisk Baseline Choose b Superscript asterisk EndBinomialOrMatrixv∗=
(w∗
b∗
)
be an 
optimal solution of the optimization problem (11.25a)–(11.25f) and x 1 Superscript asterisk Baseline equals x 1 Superscript asterisk Baseline left parenthesis v Superscript asterisk Baseline right parenthesisx∗
1 = x∗
1(v∗), 
x 2 Superscript asterisk Baseline equals x 2 Superscript asterisk Baseline left parenthesis v Superscript asterisk Baseline right parenthesisx∗
2 = x∗
2(v∗) the optimal solutions resulting from (11.25d) or (11.25f). 
To classify a new data point xx, we may proceed as follows: 
StartLayout 1st Row 1st Column left parenthesis upper I right parenthesis 2nd Column If 3rd Column w Superscript asterisk Baseline Superscript upper T Baseline x greater than b 1 Superscript asterisk Baseline colon equals w Superscript asterisk Baseline Superscript upper T Baseline x 1 Superscript asterisk Baseline left parenthesis v Superscript asterisk Baseline right parenthesis 4th Column comma then 5th Column x belongs to Class 1 period 2nd Row 1st Column Blank 3rd Row 1st Column left parenthesis upper I upper I right parenthesis 2nd Column If 3rd Column w Superscript asterisk Baseline Superscript upper T Baseline x less than b 2 Superscript asterisk Baseline colon equals w Superscript asterisk Baseline Superscript upper T Baseline x 2 Superscript asterisk Baseline left parenthesis v Superscript asterisk Baseline right parenthesis 4th Column comma then 5th Column x belongs to Class 2 period EndLayout(I) If
w∗T x > b∗
1 := w∗T x∗
1(v∗),
then
x belongs to Class 1.
(11.28a) 
StartLayout 1st Row 1st Column left parenthesis upper I right parenthesis 2nd Column If 3rd Column w Superscript asterisk Baseline Superscript upper T Baseline x greater than b 1 Superscript asterisk Baseline colon equals w Superscript asterisk Baseline Superscript upper T Baseline x 1 Superscript asterisk Baseline left parenthesis v Superscript asterisk Baseline right parenthesis 4th Column comma then 5th Column x belongs to Class 1 period 2nd Row 1st Column Blank 3rd Row 1st Column left parenthesis upper I upper I right parenthesis 2nd Column If 3rd Column w Superscript asterisk Baseline Superscript upper T Baseline x less than b 2 Superscript asterisk Baseline colon equals w Superscript asterisk Baseline Superscript upper T Baseline x 2 Superscript asterisk Baseline left parenthesis v Superscript asterisk Baseline right parenthesis 4th Column comma then 5th Column x belongs to Class 2 period EndLayout(I I) If
w∗T x < b∗
2 := w∗T x∗
2(v∗),
then
x belongs to Class 2.
(11.28b)

310
11
Machine Learning Under Stochastic Uncertainty
Fig. 11.5 Equal minimum distancesd 1 Superscript asterisk Baseline left parenthesis upper M 1 right parenthesis equals d 2 Superscript asterisk Baseline left parenthesis upper M 2 right parenthesisd∗
1 (M1) = d∗
2(M2) between
andupper M 1 comma upper M 2M1, M2
11.5 
Multi-classiﬁcation 
In case of data sets upper M equals union Underscript j equals 1 Overscript upper J Endscripts upper M Subscript jM =
JU
j=1
M j, cf. (11.20a), (11.20b), containing elements of a 
larger number, upper J greater than 2J > 2, of different properties, the structure of data set upper MM, especially 
the conﬁguration of the appearing data classes, plays an important role for the design 
of appropriate classiﬁers. 
An important basic data structure depends on the property that the data setupper M Subscript j Baseline subset of double struck upper R Superscript nM j ⊂
Rn of each class j comma j equals 1 comma ellipsis comma upper J j, j = 1, . . . , J, can be separated by a hyperplane upper H Subscript jHj from the 
data points of the other classes l not equals jl /= j.

11.5 Multi-classiﬁcation
311
11.5.1 
Reduction of a Multi-classiﬁer to Several Two-Class 
Classiﬁers 
As indicated by Fig. 11.6 , in certain cases for each class j equals 1 comma ellipsis comma upper J comma j = 1, . . . , J, the data set 
upper MM can be separated into the two subsets 
StartLayout 1st Row 1st Column upper M Subscript j 2nd Column Blank 3rd Column and 4th Column Blank 5th Column Blank 6th Column union Underscript l not equals j Endscripts upper M Subscript j Baseline comma j equals 1 comma ellipsis comma upper J EndLayoutStartLayout 1st Row 1st Column upper M Subscript j 2nd Column Blank 3rd Column and 4th Column Blank 5th Column Blank 6th Column union Underscript l not equals j Endscripts upper M Subscript j Baseline comma j equals 1 comma ellipsis comma upper J EndLayoutM j
and
U
l/= j
M j,
j = 1, . . . , J
(11.29a) 
by a hyperplane. This allows the application of the described two-class classiﬁer to 
the reduced two-class problem: 
StartLayout 1st Row 1st Column class j 2nd Column Blank 3rd Column and 4th Column Blank 5th Column Blank 6th Column not class j period EndLayoutclass j
and
not class j.
(11.29b) 
Thus, we have the following result. 
Theorem 11.6 (Classiﬁcation rule for the reduction method of multi-classiﬁcation 
problems to two-class classiﬁers) Suppose that the data setupper MM of a multi-classiﬁcation 
problem has the structure described in Sect. 11.5.1. Then, for a given new data point 
xx, by the upper JJ-th two-class classiﬁcation, the class of xx is known. 
Fig. 11.6 Reduction of a four-class problem to four two-class problems

312
11
Machine Learning Under Stochastic Uncertainty
References 
1. Bartkut˙e-Nork¯unien˙e, V.: Stochastic optimization algorithms for support vector machines clas-
siﬁcation. Informatica 20(2), 173–186 (2009). https://doi.org/10.15388/Informatica.2009.244 
2. Bousquet, O., et al. (eds.): Advanced Lectures on Machine Learning. Springer Berlin (2004). 
https://doi.org/10.1007/b100712 
3. Van den Burg, G., Groenen, P.: Gensvm: a generalized multiclass support vector machine. J. 
Mach. Learn. Res. 17(224), 1–42 (2016). http://jmlr.org/papers/v17/14-526.html 
4. Kall, P.: Stochastic Linear Programming. Springer, Berlin (1976) 
5. Kall, P., Wallace, S.: Stochastic Programming. Stochastic Programming. Wiley, Chichester 
(1994) 
6. Ma, Y., Guo, G. (eds.): Support Vector Machines Applications. Springer, Cham (2014) 
7. Marti, K.: Entscheidungsprobleme mit linearem Aktionen- und Ergebnisraum. Zeitschrift für 
Wahrscheinlichkeitstheorie und Verwandte Gebiete 23, 133–147 (1972) 
8. Marti, K.: Approximationen der Entscheidungsprobleme mit linearer Ergebnisfunktion und 
positiv homogener, subadditiver Verlustfunktion. Zeitschrift für Wahrscheinlichkeitstheorie 
und Verwandte Gebiete 31, 203–233 (1975) 
9. Marti, K.: Approximationen stochastischer Optimierungsprobleme. Hain Konigstein/Ts (1979) 
10. Marti, K.: Computation of efﬁcient solutions of discretely distributed stochastic optimization 
problems. ZOR Methods Model. Oper. Res. 36(3), 259–294 (1992). https://doi.org/10.1007/ 
BF01415892 
11. Mayer, J.: Stochastic Linear Programming Algorithms: A Comparison Based on a Model 
Management System. Gordon and Breach Science Publishers, Amsterdam (1998) 
12. Myers, R.: Response Surface Methodology. Allyn and Bacon, Boston (1971)

Chapter 12 
Stochastic Structural Optimization 
with Quadratic Loss Functions 
Abstract Structural Analysis and Optimal Structural Design under Stochastic 
Uncertainty using Quadratic Cost Functions are treated in this chapter: Problems 
from plastic analysis and optimal plastic design are based on the convex, linear or 
linearized yield/strength condition and the linear equilibrium equation for the stress 
(state) vector. In practice one has to take into account stochastic variations of the 
vector a equals a left parenthesis omega right parenthesisa = a(ω) of model parameters (e.g., yield stresses, plastic capacities, exter-
nal load factors, cost factors, etc.). Hence, in order to get robust optimal load factors 
xx, robust optimal designsxx, resp., the basic plastic analysis or optimal plastic design 
problem with random parameters has to be replaced by an appropriate deterministic 
substitute problem. As a basic tool in the analysis and optimal design of mechanical 
structures under uncertainty, a state function s Superscript asterisk Baseline equals s Superscript asterisk Baseline left parenthesis a comma x right parenthesiss∗= s∗(a, x) of the underlying struc-
ture is introduced. The survival of the structure can be described then by the condition 
s Superscript asterisk Baseline less than or equals 0s∗≤0. Interpreting the state function s Superscript asterisks∗as a cost function, several relations s Superscript asterisks∗to 
other cost functions, especially quadratic cost functions, are derived. Bounds for the 
probability of survivalp Subscript sps are obtained then by means of the Tschebyscheff inequality. 
In order to obtain robust optimal decisions x Superscript asteriskx∗, i.e., maximum load factors, optimal 
designs insensitive with respect to variations of the model parameters a equals a left parenthesis omega right parenthesisa = a(ω), a  
direct approach is presented then based on the primary costs (weight, volume, costs 
of construction, costs for missing carrying capacity, etc.) and the recourse costs (e.g., 
costs for repair, compensation for weakness within the structure, damage, failure, 
etc.), where the above-mentioned quadratic cost criterion is used. The minimum 
recourse costs can be determined then by solving an optimization problem having 
a quadratic objective function and linear constraints. For each vector a equals a left parenthesis omega right parenthesisa = a(ω) of 
model parameters and each design vectorxx one obtains then an explicit representation 
of the best internal load distribution upper F Superscript asteriskF∗. Moreover, also the expected recourse costs 
can be determined explicitly. The expected recourse function may be represented 
by means of a “generalized stiffness matrix”. Hence, corresponding to an elastic 
approach, the expected recourse function can be interpreted here as a generalized 
expected compliance function, which depends on a generalized “stiffness matrix”. 
Based on the minimization of the generalized compliance or the minimization of the 
expected total primary and recourse costs, explicit ﬁnite-dimensional parameter opti-
mization problems are achieved for ﬁnding robust optimal design x Superscript asteriskx∗or a maximal 
load factor x Superscript asteriskx∗. The analytical properties of the resulting programming problem are 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_12 
313

314
12
Stochastic Structural Optimization with Quadratic Loss Functions
discussed, and applications, such as limit load/shakedown analysis, are considered. 
Furthermore, based on the expected “compliance function”, explicit upper and lower 
bounds for the probability p Subscript sps of survival. 
12.1 
Introduction 
Problems from plastic analysis and optimal plastic design are based on the convex, 
linear, or linearized yield/strength condition and the linear equilibrium equation for 
the stress (state) vector. In practice one has to take into account stochastic variations 
of several model parameters. Hence, in order to get robust optimal decisions, the 
structural optimization problem with random parameters must be replaced by an 
appropriate deterministic substitute problem. A direct approach is proposed based 
on the primary costs (weight, volume, costs of construction, costs for missing car-
rying capacity, etc.) and the recourse costs (e.g., costs for repair, compensation for 
weakness within the structure, damage, failure, etc.). Based on the mechanical sur-
vival conditions of plasticity theory, a quadratic error/loss criterion is developed. The 
minimum recourse costs can be determined then by solving an optimization problem 
having a quadratic objective function and linear constraints. For each vector a left parenthesis dot right parenthesisa(·)
of model parameters and each design vector xx, one obtains then an explicit repre-
sentation of the “best” internal load distribution upper F Superscript asteriskF∗. Moreover, also the expected 
recourse costs can be determined explicitly. It turns out that this function plays the 
role of a generalized expected compliance function involving a generalized stiff-
ness matrix. For the solution of the resulting deterministic substitute problems, i.e., 
the minimization of the expected primary cost (e.g., volume, weight) subject to 
expected recourse cost constraints or the minimization of the expected total primary 
and recourse costs, explicit ﬁnite-dimensional parameter optimization problems are 
obtained. Furthermore, based on the quadratic cost approach, lower and upper bounds 
for the probability of survival can be derived. 
In optimal plastic design of mechanical structure [ 2] one has to minimize a weight, 
volume or more general cost function cc, while in limit load analysis [ 5] of plastic 
mechanical structures the problem is to maximize the load factormuμ—in both cases— 
subject to the survival or safety conditions, consisting of the equilibrium equation 
and the so-called yield (feasibility) condition of the structure. 
Thus, the objective function upper G 0G0 to be minimized is deﬁned by 
upper G 0 left parenthesis x right parenthesis equals sigma summation Underscript i equals 1 Overscript upper B Endscripts gamma Subscript i Baseline 0 Baseline left parenthesis omega right parenthesis upper L Subscript i Baseline upper A Subscript i Baseline left parenthesis x right parenthesisG0(x) =
B
∑
i=1
γi0(ω)Li Ai(x)
(12.1a) 
in the case of optimal plastic design, and by 
upper G 0 equals upper G 0 left parenthesis a comma x right parenthesis colon equals negative muG0 = G0(a, x) := −μ
(12.1b) 
in the second case of limit load analysis.

12.1 Introduction
315
Here, x equals left parenthesis x 1 comma x 2 comma ellipsis comma x Subscript r Baseline right parenthesis Superscript upper T Baseline comma x colon equals left parenthesis x 1 right parenthesis equals left parenthesis mu right parenthesisx = (x1, x2, . . . , xr)T , x := (x1) = (μ) is the decision vector, hence, the 
rr-vector xx of design variables x 1 comma ellipsis comma x Subscript r Baselinex1, . . . , xr, such as sizing variables, in the ﬁrst case 
and the load factorx 1 equals mux1 = μ in the second case. For the decision vectorxx one has mostly 
simple feasibility conditions represented byx element of upper Dx ∈D, whereupper D subset of double struck upper R Superscript rD ⊂Rr is a given closed 
convex set such as upper D equals double struck upper R Subscript plusD = R+ in the second case. Moreover, a equals a left parenthesis omega right parenthesisa = a(ω) is the nuν-vector 
of all random model parameters arising in the underlying mechanical model, such as 
weight or cost factorsgamma Subscript i Baseline 0 Baseline equals gamma Subscript i Baseline 0 Baseline left parenthesis omega right parenthesisγi0 = γi0(ω), yield stresses in compression and tensionsigma Subscript y i Superscript upper L Baseline equals sigma Subscript y i Superscript upper L Baseline left parenthesis omega right parenthesis comma sigma Subscript y i Superscript upper U Baseline equals sigma Subscript y i Superscript upper U Baseline left parenthesis omega right parenthesis comma i equals 1 comma ellipsis comma upper Bσ L
yi =
σ L
yi(ω), σ U
yi = σ U
yi (ω), i = 1, . . . , B, load factors contained in the external loading 
upper P equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisP = P
(
a(ω), x
)
, etc. Furthermore, in the general cost function deﬁned by (12.1a), 
upper A Subscript i Baseline equals upper A Subscript i Baseline left parenthesis x right parenthesis comma i equals 1 comma ellipsis comma upper BAi = Ai(x), i = 1, . . . , B, denote the cross-sectional areas of the bars having length 
upper L Subscript i Baseline comma i equals 1 comma ellipsis comma upper BLi, i = 1, . . . , B. 
As already mentioned above, the optimization of the function upper G 0 equals upper G 0 left parenthesis a comma x right parenthesisG0 = G0(a, x)
is done under the safety or survival conditions of plasticity theory which can be 
described [ 6, 10] for plane frames as follows: 
(I) Equilibrium condition 
After taking into account the boundary conditions, the equilibrium between the 
mm-vector of external loadsupper P equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisP = P
(
a(ω), x
)
and the3 upper B3B-vector of internal loads 
upper F equals left parenthesis upper F 1 Superscript upper T Baseline comma upper F 2 Superscript upper T Baseline comma ellipsis comma upper F Subscript upper B Superscript upper T Baseline right parenthesis Superscript upper TF = (F T
1 , F T
2 , . . . , F T
B )T can be described by 
upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis commaC F = P
(
a(ω), x
)
,
(12.2) 
where upper CC is the m times 3 upper Bm × 3B equilibrium matrix having rank upper C equals mC = m. 
(II) Yield condition (feasibility condition) 
If no interactions between normal (axial) forcest Subscript iti and bending momentsm Subscript i Superscript l Baseline comma m Subscript i Superscript rml
i, mr
i , 
resp., at the left, right end of the oriented ii-th bar of the structure are taken into 
account, then the feasibility condition for the generalized forces of the bar 
upper F Subscript i Baseline equals Start 3 By 1 Matrix 1st Row t Subscript i Baseline 2nd Row m Subscript i Superscript l Baseline 3rd Row m Subscript i Superscript r Baseline EndMatrix comma i equals 1 comma ellipsis comma upper BFi =
⎛
⎝
ti
ml
i
mr
i
⎞
⎠,
i = 1, . . . , B
(12.3) 
reads 
ModifyingAbove upper F With tilde Subscript i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper F Subscript i Baseline less than or equals ModifyingAbove upper F With tilde Subscript i Superscript upper U Baseline left parenthesis a left parenthesis omega comma x right parenthesis comma i equals 1 comma ellipsis comma upper B comma F L
i
(
a(ω), x
)
≤Fi ≤ FU
i
(
a(ω, x
)
,
i = 1, . . . , B,
(12.4a) 
where the boundsupper F overTilde Subscript i Superscript upper L Baseline comma upper F overTilde Subscript i Superscript upper U F L
i ,  FU
i
containing the plastic capacities with respect to axial 
forces and moments are given by

316
12
Stochastic Structural Optimization with Quadratic Loss Functions
StartLayout 1st Row 1st Column ModifyingAbove upper F With tilde Subscript i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column colon equals Start 3 By 1 Matrix 1st Row minus upper N Subscript i p l Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row minus upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 3rd Row minus upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis EndMatrix equals Start 3 By 1 Matrix 1st Row sigma Subscript y i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper A Subscript i Baseline left parenthesis x right parenthesis 2nd Row minus sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper W Subscript i p l Baseline left parenthesis x right parenthesis 3rd Row minus sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper W Subscript i p l Baseline left parenthesis x right parenthesis EndMatrix 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper F With tilde Subscript i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals Start 3 By 1 Matrix 1st Row upper N Subscript i p l Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 3rd Row upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis EndMatrix equals Start 3 By 1 Matrix 1st Row sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper A Subscript i Baseline left parenthesis x right parenthesis 2nd Row sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper W Subscript i p l Baseline left parenthesis x right parenthesis 3rd Row sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper W Subscript i p l Baseline left parenthesis x right parenthesis EndMatrix period EndLayout F L
i
(
a(ω), x
)
:=
⎛
⎜⎜⎜⎝
−N L
ipl
(
a(ω), x
)
−Mipl
(
a(ω), x
)
−Mipl
(
a(ω), x
)
⎞
⎟⎟⎟⎠=
⎛
⎜⎜⎜⎝
σ L
yi
(
a(ω)
)
Ai(x)
−σ U
yi
(
a(ω)
)
Wipl(x)
−σ U
yi
(
a(ω)
)
Wipl(x)
⎞
⎟⎟⎟⎠
(12.4b) 
StartLayout 1st Row 1st Column ModifyingAbove upper F With tilde Subscript i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column colon equals Start 3 By 1 Matrix 1st Row minus upper N Subscript i p l Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row minus upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 3rd Row minus upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis EndMatrix equals Start 3 By 1 Matrix 1st Row sigma Subscript y i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper A Subscript i Baseline left parenthesis x right parenthesis 2nd Row minus sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper W Subscript i p l Baseline left parenthesis x right parenthesis 3rd Row minus sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper W Subscript i p l Baseline left parenthesis x right parenthesis EndMatrix 2nd Row 1st Column Blank 3rd Row 1st Column ModifyingAbove upper F With tilde Subscript i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals Start 3 By 1 Matrix 1st Row upper N Subscript i p l Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 3rd Row upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis EndMatrix equals Start 3 By 1 Matrix 1st Row sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper A Subscript i Baseline left parenthesis x right parenthesis 2nd Row sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper W Subscript i p l Baseline left parenthesis x right parenthesis 3rd Row sigma Subscript y i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis right parenthesis upper W Subscript i p l Baseline left parenthesis x right parenthesis EndMatrix period EndLayout FU
i
(
a(ω), x
)
=
⎛
⎜⎜⎜⎝
N U
ipl
(
a(ω), x
)
Mipl
(
a(ω), x
)
Mipl
(
a(ω), x
)
⎞
⎟⎟⎟⎠=
⎛
⎜⎜⎜⎝
σ U
yi
(
a(ω)
)
Ai(x)
σ U
yi
(
a(ω)
)
Wipl(x)
σ U
yi
(
a(ω)
)
Wipl(x)
⎞
⎟⎟⎟⎠.
(12.4c) 
Here, 
upper W Subscript i p l Baseline equals upper A Subscript i Baseline y overbar Subscript i cWipl = Ai ¯yic
(12.4d) 
denotes the plastic section modulus with the arithmetic mean 
ModifyingAbove y With quotation dash Subscript i c Baseline equals one half left parenthesis y Subscript i Baseline 1 Baseline plus y Subscript i Baseline 2 Baseline right parenthesisyic = 1
2(yi1 + yi2)
(12.4e) 
of the centroids y Subscript i Baseline 1 Baseline comma y Subscript i Baseline 2 Baselineyi1, yi2 of the two half areas of the cross-sectional areas upper A Subscript iAi of 
the bars i equals 1 comma ellipsis comma upper Bi = 1, . . . , B. 
Taking into account also interactions between normal forces t Subscript iti and moments 
m Subscript i Superscript l Baseline comma m Subscript i Superscript rml
i, mr
i , besides (12.4a) we have additional feasibility conditions of the type 
minus h Subscript l Baseline eta Subscript i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper H Subscript l Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline less than or equals h Subscript l Baseline eta Subscript i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma −hlηL
i
(
a(ω), x
)
≤H (i)
l
Fi ≤hlηU
i
(
a(ω), x
)
,
(12.4f) 
whereleft parenthesis upper H Subscript l Superscript left parenthesis i right parenthesis Baseline left parenthesis upper N Subscript i Baseline 0 Baseline comma upper M Subscript i Baseline 0 Baseline right parenthesis comma h Subscript l Baseline right parenthesis comma l equals 4 comma ellipsis comma l 0 plus 3
(
H (i)
l (Ni0, Mi0), hl
)
,l = 4, . . . ,l0 + 3, are given row vectors depending 
on the yield domains of the bars, and eta Subscript i Superscript upper L Baseline comma eta Subscript i Superscript upper UηL
i , ηU
i are deﬁned by 
StartLayout 1st Row 1st Column eta Subscript i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals min left brace StartFraction upper N Subscript i p l Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Over upper N Subscript i Baseline 0 Baseline EndFraction comma StartFraction upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Over upper M Subscript i Baseline 0 Baseline EndFraction right brace 2nd Row 1st Column Blank 3rd Row 1st Column eta Subscript i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals min left brace StartFraction upper N Subscript i p l Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Over upper N Subscript i o Baseline EndFraction comma StartFraction upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Over upper M Subscript i Baseline 0 Baseline EndFraction right brace EndLayoutηL
i
(
a(ω), x
)
= min
⎧
⎨
⎩
N L
ipl
(
a(ω), x
)
Ni0
,
Mipl
(
a(ω), x
)
Mi0
⎫
⎬
⎭
(12.4g) 
StartLayout 1st Row 1st Column eta Subscript i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals min left brace StartFraction upper N Subscript i p l Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Over upper N Subscript i Baseline 0 Baseline EndFraction comma StartFraction upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Over upper M Subscript i Baseline 0 Baseline EndFraction right brace 2nd Row 1st Column Blank 3rd Row 1st Column eta Subscript i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals min left brace StartFraction upper N Subscript i p l Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Over upper N Subscript i o Baseline EndFraction comma StartFraction upper M Subscript i p l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Over upper M Subscript i Baseline 0 Baseline EndFraction right brace EndLayoutηU
i
(
a(ω), x
)
= min
⎧
⎨
⎩
N U
ipl
(
a(ω), x
)
Nio
,
Mipl
(
a(ω), x
)
Mi0
⎫
⎬
⎭
(12.4h) 
with certain chosen reference values upper N Subscript i Baseline 0 Baseline comma upper M Subscript i Baseline 0 Baseline comma i equals 1 comma ellipsis comma upper BNi0, Mi0, i = 1, . . . , B, for the plastic 
capacities. 
According to (12.4a), (12.4f), the feasibility condition for the vectorupper FF of interior 
loads (member forces and moments) can be represented uniformly by the conditions

12.2 State and Cost Functions
317
StartLayout 1st Row 1st Column upper F Subscript i l Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper H Subscript l Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline less than or equals upper F Subscript i l Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma 2nd Column Blank 3rd Column i equals 1 comma ellipsis comma upper B comma l equals 1 comma 2 comma ellipsis comma l 0 plus 3 comma EndLayoutF L
il
(
a(ω), x
)
≤H (i)
l
Fi ≤FU
il
(
a(ω), x
)
,
i = 1, . . . , B, l = 1, 2, . . . ,l0 + 3,
(12.5a) 
where the row 3-vectorsupper H Subscript l Superscript left parenthesis i right parenthesisH (i)
l
and the boundsupper F Subscript i l Superscript upper L Baseline comma upper F Subscript i l Superscript upper U Baseline comma i equals 1 comma ellipsis comma upper B comma l equals 1 comma ellipsis comma l 0 plus 3F L
il , FU
il , i = 1, . . . , B,l = 1, . . . ,l0 +
3, are deﬁned by (12.4a)–(12.4c) and (12.4f)–(12.4h). Lete 1 equals colon upper H 1 Superscript upper T Baseline comma e 2 equals colon upper H 2 Superscript upper T Baseline comma e 3 equals colon upper H 3 Superscript upper Te1 =: H T
1 , e2 =: H T
2 , e3 =:
H T
3 denote the unit vectors of double struck upper R cubedR3. 
Deﬁning the left parenthesis l 0 plus 3 right parenthesis times 3(l0 + 3) × 3 matrix upper H Superscript left parenthesis i right parenthesisH (i) by 
upper H Superscript left parenthesis i right parenthesis Baseline colon equals Start 6 By 1 Matrix 1st Row e 1 Superscript upper T 2nd Row e 2 Superscript upper T 3rd Row e 3 Superscript upper T 4th Row upper H 4 left parenthesis upper N Subscript i Baseline 0 Baseline comma upper M Subscript i Baseline 0 Baseline right parenthesis 5th Row vertical ellipsis 6th Row upper H Subscript l 0 plus 3 Baseline left parenthesis upper N Subscript i Baseline 0 Baseline comma upper M Subscript i Baseline 0 Baseline right parenthesis EndMatrixH (i) :=
⎛
⎜⎜⎜⎜⎜⎜⎜⎝
eT
1
eT
2
eT
3
H4(Ni0, Mi0)
...
Hl0+3(Ni0, Mi0)
⎞
⎟⎟⎟⎟⎟⎟⎟⎠
(12.5b) 
and the left parenthesis l 0 plus 3 right parenthesis(l0 + 3)-vectors upper F Subscript i Superscript upper L Baseline equals upper F Subscript i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma upper F Subscript i Superscript upper U Baseline equals upper F Subscript i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisF L
i = F L
i
(
a(ω), x
)
, FU
i
= FU
i
(
a(ω), x
)
by 
upper F Subscript i Superscript upper L Baseline colon equals Start 4 By 1 Matrix 1st Row upper F overTilde Subscript i Superscript upper L Baseline 2nd Row minus h 1 eta Subscript i Superscript upper L Baseline 3rd Row vertical ellipsis 4th Row minus h Subscript l 0 Baseline eta Subscript i Superscript upper L Baseline EndMatrix comma upper F Subscript i Superscript upper U Baseline colon equals Start 4 By 1 Matrix 1st Row upper F overTilde Subscript i Superscript upper U Baseline 2nd Row h 1 eta Subscript i Superscript upper U Baseline 3rd Row vertical ellipsis 4th Row h Subscript l 0 Baseline eta Subscript i Superscript upper U Baseline EndMatrix commaF L
i :=
⎛
⎜⎜⎜⎝
 F L
i
−h1ηL
i
...
−hl0ηL
i
⎞
⎟⎟⎟⎠,
FU
i
:=
⎛
⎜⎜⎜⎝
 FU
i
h1ηU
i...
hl0ηU
i
⎞
⎟⎟⎟⎠,
(12.5c) 
the feasibility condition can also be represented by 
upper F Subscript i Superscript upper L Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper H Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline less than or equals upper F Subscript i Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma i equals 1 comma ellipsis comma upper B periodF L
i
(
a(ω), x
)
≤H (i)Fi ≤FU
i
(
a(ω), x
)
,
i = 1, . . . , B.
(12.6) 
12.2 
State and Cost Functions 
Deﬁning the quantities 
StartLayout 1st Row 1st Column upper F Subscript i l Superscript c 2nd Column equals upper F Subscript i l Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis colon equals StartFraction upper F Subscript i l Superscript upper L Baseline plus upper F Subscript i l Superscript upper U Baseline Over 2 EndFraction 2nd Row 1st Column Blank 3rd Row 1st Column rho Subscript i l 2nd Column equals rho Subscript i l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis colon equals StartFraction upper F Subscript i l Superscript upper U Baseline minus upper F Subscript i l Superscript upper L Baseline Over 2 EndFraction comma EndLayoutFc
il = Fc
il
(
a(ω), x
)
:= F L
il + FU
il
2
(12.7a) 
StartLayout 1st Row 1st Column upper F Subscript i l Superscript c 2nd Column equals upper F Subscript i l Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis colon equals StartFraction upper F Subscript i l Superscript upper L Baseline plus upper F Subscript i l Superscript upper U Baseline Over 2 EndFraction 2nd Row 1st Column Blank 3rd Row 1st Column rho Subscript i l 2nd Column equals rho Subscript i l Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis colon equals StartFraction upper F Subscript i l Superscript upper U Baseline minus upper F Subscript i l Superscript upper L Baseline Over 2 EndFraction comma EndLayout il =  il
(
a(ω), x
)
:= FU
il −F L
il
2
,
(12.7b) 
i equals 1 comma ellipsis comma upper B comma l equals 1 comma ellipsis comma l 0 plus 3i = 1, . . . , B,l = 1, . . . ,l0 + 3, the feasibility condition (12.5a) or (12.6) can be 
described by 
StartAbsoluteValue z Subscript i l Baseline EndAbsoluteValue less than or equals 1 comma i equals 1 comma ellipsis comma upper B comma l equals 1 comma ellipsis comma l 0 plus 3 comma|zil| ≤1,
i = 1, . . . , B, l = 1, . . . ,l0 + 3,
(12.8a)

318
12
Stochastic Structural Optimization with Quadratic Loss Functions
with the quotients 
z Subscript i l Baseline equals z Subscript i l Baseline left parenthesis upper F Subscript i Baseline semicolon a left parenthesis omega right parenthesis comma x right parenthesis equals StartFraction upper H Subscript l Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline minus upper F Subscript i l Superscript c Baseline Over rho Subscript i l Baseline EndFraction comma i equals 1 comma ellipsis comma upper B comma l equals 1 comma ellipsis comma l 0 plus 3 periodzil = zil
(
Fi; a(ω), x
)
= H (i)
l
Fi −Fc
il
 il
,
i = 1, . . . , B, l = 1, . . . ,l0 + 3.
(12.8b) 
The quotient z Subscript i l Baseline comma i equals 1 comma ellipsis comma upper B comma l equals 1 comma ellipsis comma l 0 plus 3zil, i = 1, . . . , B,l = 1, . . . ,l0 + 3, denotes the relative deviation 
of the load component upper H Subscript l Superscript left parenthesis i right parenthesis Baseline upper F Subscript iH (i)
l
Fi from its “ideal” value upper F Subscript i l Superscript cFc
il with respect to the radius 
rho Subscript i l il of the feasible interval left bracket upper F Subscript i l Superscript upper L Baseline comma upper F Subscript i l Superscript upper U Baseline right bracket[F L
il , FU
il ]. According to (12.8a), (12.8b), the absolute 
values StartAbsoluteValue z Subscript i l Baseline EndAbsoluteValue|zil| of the quotients z Subscript i lzil should not exceed the value 1. The absolute value 
StartAbsoluteValue z Subscript i l Baseline EndAbsoluteValue|zil| of the quotientz Subscript i lzil denotes the percentage of use of the available plastic capacity 
by the corresponding load component. Obviously, StartAbsoluteValue z Subscript i l Baseline EndAbsoluteValue equals 1 comma StartAbsoluteValue z Subscript i l Baseline EndAbsoluteValue greater than 1|zil| = 1, |zil| > 1, resp., means 
maximal use, overcharge of the available resources. 
Consider now the left parenthesis l 0 plus 3 right parenthesis(l0 + 3)-vectors 
StartLayout 1st Row 1st Column z Subscript i Baseline colon equals left parenthesis z Subscript i Baseline 1 Baseline comma z Subscript i Baseline 2 Baseline comma ellipsis comma z Subscript i l 0 plus 3 Baseline right parenthesis Superscript upper T 2nd Column equals left parenthesis StartFraction upper H 1 Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline minus upper F Subscript i Baseline 1 Superscript c Baseline Over rho Subscript i Baseline 1 Baseline EndFraction comma StartFraction upper H 2 Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline minus upper F Subscript i Baseline 2 Superscript c Baseline Over rho Subscript i Baseline 2 Baseline EndFraction comma midline horizontal ellipsis comma 2nd Row 1st Column Blank 2nd Column StartFraction upper H Subscript l 0 plus 3 Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline minus upper F Subscript i l 0 plus 3 Superscript c Baseline Over rho Subscript i l 0 plus 3 Baseline EndFraction right parenthesis Superscript upper T Baseline period EndLayoutzi := (zi1, zi2, . . . , zil0+3)T =
(
H (i)
1 Fi −Fc
i1
 i1
, H (i)
2 Fi −Fc
i2
 i2
, · · · ,
H (i)
l0+3Fi −Fc
il0+3
 il0+3
)T
.
(12.8c) 
With 
StartLayout 1st Row 1st Column rho Subscript i Baseline colon equals Start 4 By 1 Matrix 1st Row rho Subscript i Baseline 1 Baseline 2nd Row rho Subscript i Baseline 2 Baseline 3rd Row vertical ellipsis 4th Row rho Subscript i l 0 plus 3 Baseline EndMatrix comma 2nd Column Blank 3rd Column rho Subscript i d Baseline colon equals Start 4 By 4 Matrix 1st Row 1st Column rho Subscript i Baseline 1 Baseline 2nd Column 0 3rd Column ellipsis 4th Column 0 2nd Row 1st Column 0 2nd Column rho Subscript i Baseline 2 Baseline 3rd Column ellipsis 4th Column 0 3rd Row 1st Column vertical ellipsis 2nd Column Blank 3rd Column down right diagonal ellipsis 4th Column vertical ellipsis 4th Row 1st Column 0 2nd Column 0 3rd Column ellipsis 4th Column rho Subscript i l 0 plus 3 Baseline EndMatrix comma 4th Column Blank 5th Column upper F Subscript i Superscript c Baseline colon equals Start 4 By 1 Matrix 1st Row upper F Subscript i Baseline 1 Superscript c 2nd Row upper F Subscript i Baseline 2 Superscript c 3rd Row vertical ellipsis 4th Row upper F Subscript i l 0 plus 3 Superscript c EndMatrix EndLayout i :=
⎛
⎜⎜⎜⎝
 i1
 i2
...
 il0+3
⎞
⎟⎟⎟⎠,
 id :=
⎛
⎜⎜⎜⎝
 i1 0
. . . 0
0
 i2 . . . 0
...
... ...
0
0
. . .  il0+3
⎞
⎟⎟⎟⎠,
Fc
i :=
⎛
⎜⎜⎜⎝
Fc
i1
Fc
i2
...
Fc
il0+3
⎞
⎟⎟⎟⎠
(12.8d) 
we get 
z Subscript i Baseline equals rho Subscript i d Superscript negative 1 Baseline left parenthesis upper H Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline minus upper F Subscript i Superscript c Baseline right parenthesis periodzi =  −1
id (H (i)Fi −Fc
i ).
(12.8e) 
Using (12.4b)–(12.4d), we ﬁnd 
StartLayout 1st Row 1st Column upper F Subscript i Superscript c 2nd Column equals left parenthesis upper A Subscript i Baseline StartFraction sigma Subscript y i Superscript upper L Baseline plus sigma Subscript y i Superscript upper U Baseline Over 2 EndFraction comma 0 comma 0 comma h 4 StartFraction eta Subscript i Superscript upper U Baseline minus eta Subscript i Superscript upper L Baseline Over 2 EndFraction comma ellipsis comma h Subscript l 0 plus 3 Baseline StartFraction eta Subscript i Superscript upper U Baseline minus eta Subscript i Superscript upper L Baseline Over 2 EndFraction right parenthesis Superscript upper T Baseline 2nd Row 1st Column Blank 3rd Row 1st Column rho Subscript i 2nd Column equals left parenthesis upper A Subscript i Baseline StartFraction sigma Subscript y i Superscript upper U Baseline minus sigma Subscript y i Superscript upper L Baseline Over 2 EndFraction comma upper A Subscript i Baseline sigma Subscript y i Superscript upper U Baseline y overbar Subscript i c Baseline comma upper A Subscript i Baseline sigma Subscript y i Superscript upper U Baseline y overbar Subscript i c Baseline comma h 4 StartFraction eta Subscript i Superscript upper U Baseline plus eta Subscript i Superscript upper L Baseline Over 2 EndFraction comma ellipsis comma h Subscript l 0 plus 3 Baseline StartFraction eta Subscript i Superscript upper U Baseline plus eta Subscript i Superscript upper L Baseline Over 2 EndFraction right parenthesis Superscript upper T Baseline period EndLayoutFc
i =
(
Ai
σ L
yi + σ U
yi
2
, 0, 0, h4
ηU
i −ηL
i
2
, . . . , hl0+3
ηU
i −ηL
i
2
)T
(12.8f) 
StartLayout 1st Row 1st Column upper F Subscript i Superscript c 2nd Column equals left parenthesis upper A Subscript i Baseline StartFraction sigma Subscript y i Superscript upper L Baseline plus sigma Subscript y i Superscript upper U Baseline Over 2 EndFraction comma 0 comma 0 comma h 4 StartFraction eta Subscript i Superscript upper U Baseline minus eta Subscript i Superscript upper L Baseline Over 2 EndFraction comma ellipsis comma h Subscript l 0 plus 3 Baseline StartFraction eta Subscript i Superscript upper U Baseline minus eta Subscript i Superscript upper L Baseline Over 2 EndFraction right parenthesis Superscript upper T Baseline 2nd Row 1st Column Blank 3rd Row 1st Column rho Subscript i 2nd Column equals left parenthesis upper A Subscript i Baseline StartFraction sigma Subscript y i Superscript upper U Baseline minus sigma Subscript y i Superscript upper L Baseline Over 2 EndFraction comma upper A Subscript i Baseline sigma Subscript y i Superscript upper U Baseline y overbar Subscript i c Baseline comma upper A Subscript i Baseline sigma Subscript y i Superscript upper U Baseline y overbar Subscript i c Baseline comma h 4 StartFraction eta Subscript i Superscript upper U Baseline plus eta Subscript i Superscript upper L Baseline Over 2 EndFraction comma ellipsis comma h Subscript l 0 plus 3 Baseline StartFraction eta Subscript i Superscript upper U Baseline plus eta Subscript i Superscript upper L Baseline Over 2 EndFraction right parenthesis Superscript upper T Baseline period EndLayout i =
(
Ai
σ U
yi −σ L
yi
2
, Aiσ U
yi ¯yic, Aiσ U
yi ¯yic, h4
ηU
i + ηL
i
2
, . . . , hl0+3
ηU
i + ηL
i
2
)T
.
(12.8g) 
The vector z Subscript izi can be represented then, cf. (12.3), by

12.2 State and Cost Functions
319
StartLayout 1st Row 1st Column z Subscript i 2nd Column equals left parenthesis StartStartFraction t Subscript i Baseline minus upper A Subscript i Baseline StartFraction sigma Subscript y i Superscript upper L Baseline plus sigma Subscript y i Superscript upper U Baseline Over 2 EndFraction OverOver upper A Subscript i Baseline StartFraction sigma Subscript y i Superscript upper U Baseline minus sigma Subscript y i Superscript upper L Baseline Over 2 EndFraction EndEndFraction comma StartFraction m Subscript i Superscript l Baseline Over upper A Subscript i Baseline sigma Subscript y i Superscript upper U Baseline y overbar Subscript i c Baseline EndFraction comma StartFraction m Subscript i Superscript r Baseline Over upper A Subscript i Baseline sigma Subscript y i Superscript upper U Baseline y overbar Subscript i c Baseline EndFraction comma StartStartFraction upper H 4 Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline minus h 4 StartFraction eta Subscript i Superscript upper U Baseline minus eta Subscript i Superscript upper L Baseline Over 2 EndFraction OverOver h 4 StartFraction eta Subscript i Superscript upper U Baseline plus eta Subscript i Superscript upper L Baseline Over 2 EndFraction EndEndFraction comma ellipsis comma 2nd Row 1st Column Blank 2nd Column StartStartFraction upper H Subscript l 0 plus 3 Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline minus h Subscript l 0 plus 3 Baseline StartFraction eta Subscript i Superscript upper U Baseline minus eta Subscript i Superscript upper L Baseline Over 2 EndFraction OverOver h Subscript l 0 plus 3 Baseline StartFraction eta Subscript i Superscript upper U Baseline plus eta Subscript i Superscript upper L Baseline Over 2 EndFraction EndEndFraction right parenthesis Superscript upper T Baseline period EndLayoutzi =
⎛
⎜⎜⎝
ti −Ai
σ L
yi + σ U
yi
2
Ai
σ U
yi −σ L
yi
2
,
ml
i
Aiσ U
yi ¯yic
,
mr
i
Aiσ U
yi ¯yic
, H (i)
4 Fi −h4
ηU
i −ηL
i
2
h4
ηU
i +ηL
i
2
, . . . ,
H (i)
l0+3Fi −hl0+3
ηU
i −ηL
i
2
hl0+3
ηU
i +ηL
i
2
⎞
⎠
T
.
(12.9a) 
In case of symmetry sigma Subscript y i Superscript upper L Baseline equals minus sigma Subscript y i Superscript upper Uσ L
yi = −σ U
yi we get 
z Subscript i Baseline equals left parenthesis StartFraction t Subscript i Baseline Over upper A Subscript i Baseline sigma Subscript y Sub Subscript i Subscript Superscript upper U Baseline EndFraction comma StartFraction m Subscript i Superscript l Baseline Over upper A Subscript i Baseline sigma Subscript y Sub Subscript i Subscript Superscript upper U Baseline y overbar Subscript i c Baseline EndFraction comma StartFraction m Subscript i Superscript r Baseline Over upper A Subscript i Baseline sigma Subscript y Sub Subscript i Subscript Superscript upper U Baseline y overbar Subscript i c Baseline EndFraction comma StartFraction upper H 4 Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline comma Over h 4 eta Subscript i Superscript upper U Baseline EndFraction comma ellipsis comma StartFraction upper H Subscript l 0 plus 3 Superscript left parenthesis i right parenthesis Baseline upper F Subscript i Baseline Over h Subscript l 0 plus 3 Baseline eta Subscript i Superscript upper U Baseline EndFraction right parenthesis Superscript upper T Baseline periodzi =
(
ti
Aiσ U
yi
,
ml
i
Aiσ U
yi ¯yic
,
mr
i
Aiσ U
yi ¯yic
, H (i)
4 Fi,
h4ηU
i
, . . . ,
H (i)
l0+3Fi
hl0+3ηU
i
)T
.
(12.9b) 
According to the methods introduced in [ 6– 8], the fulﬁllment of the survival 
condition for elastoplastic frame structures, hence, the equilibrium condition (12.2) 
and the feasibility condition (12.6) or (12.8a), (12.8b), can be described by means 
of the state function s Superscript asterisk Baseline equals s Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesiss∗= s∗(
a(ω), x
)
deﬁned, in the present case, by 
StartLayout 1st Row 1st Column s Superscript asterisk Baseline equals s Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis colon equals min left brace s colon StartAbsoluteValue z Subscript i l Baseline left parenthesis upper F Subscript i Baseline semicolon a left parenthesis omega right parenthesis comma x right parenthesis EndAbsoluteValue minus 1 less than or equals s comma i equals 1 comma ellipsis comma upper B comma 2nd Column Blank 2nd Row 1st Column l equals 1 comma 2 comma ellipsis comma l 0 plus 3 comma upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right brace period 2nd Column Blank EndLayouts∗= s∗(
a(ω), x
)
:= min
{
s :
|||zil
(
Fi; a(ω), x
)||| −1 ≤s, i = 1, . . . , B,
l = 1, 2, . . . ,l0 + 3, C F = P
(
a(ω), x
)}
. (12.10) 
Hence, the state function s Superscript asterisks∗is the minimum value function of the linear program 
(LP) 
min s min s
(12.11a) 
s.t. 
StartLayout 1st Row 1st Column Blank 2nd Column StartAbsoluteValue z Subscript i l Baseline left parenthesis upper F Subscript i Baseline semicolon a left parenthesis omega right parenthesis comma x right parenthesis EndAbsoluteValue minus 1 less than or equals s comma i equals 1 comma ellipsis comma upper B comma l equals 1 comma ellipsis comma l 0 plus 3 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis period EndLayout
||||zil
(
Fi; a(ω), x
)|||| −1 ≤s,
i = 1, . . . , B,
l = 1, . . . ,l0 + 3
(12.11b) 
StartLayout 1st Row 1st Column Blank 2nd Column StartAbsoluteValue z Subscript i l Baseline left parenthesis upper F Subscript i Baseline semicolon a left parenthesis omega right parenthesis comma x right parenthesis EndAbsoluteValue minus 1 less than or equals s comma i equals 1 comma ellipsis comma upper B comma l equals 1 comma ellipsis comma l 0 plus 3 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis period EndLayoutC F = P
(
a(ω), x
)
.
(12.11c) 
Since the objective function ss is bounded from below and a feasible solution 
left parenthesis s comma upper F right parenthesis(s, F) always exists, LP (12.11a)–(12.11c) has an optimal solution left parenthesis s Superscript asterisk Baseline comma upper F Superscript asterisk Baseline right parenthesis equals left parenthesis s Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma(s∗, F∗) =
(
s∗(
a(ω), x
)
, upper F Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesisF∗(
a(ω), x
))
for each conﬁguration left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis
(
a(ω), x
)
of the structure. 
Consequently, for the survival of the structure we have the following criterion, 
cf. [ 7]. 
Theorem 12.1 The elastoplastic frame structure having conﬁgurationleft parenthesis a comma x right parenthesis(a, x) carries 
the exterior load upper P equals upper P left parenthesis a comma x right parenthesisP = P(a, x) safely if and only if

320
12
Stochastic Structural Optimization with Quadratic Loss Functions
s Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals 0 periods∗(a, x) ≤0.
(12.12) 
Obviously, the constraint (12.11b) in the  LP  (12.11a)–(12.11c) can also be repre-
sented by 
double vertical bar z left parenthesis upper F semicolon a left parenthesis omega right parenthesis comma x right parenthesis double vertical bar Subscript normal infinity Baseline minus 1 less than or equals s comma
||||||||z
(
F; a(ω), x
)||||||||
∞
−1 ≤s,
(12.13a) 
where z equals z left parenthesis upper F semicolon a left parenthesis omega right parenthesis comma x right parenthesisz = z
(
F; a(ω), x
)
denotes the upper B left parenthesis l 0 plus 3 right parenthesisB(l0 + 3)-vector 
z left parenthesis upper F semicolon a left parenthesis omega right parenthesis comma x right parenthesis colon equals left parenthesis z 1 left parenthesis upper F semicolon a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline comma ellipsis comma z Subscript upper B Baseline left parenthesis upper F semicolon a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline right parenthesis Superscript upper T Baseline commaz
(
F; a(ω), x
)
:=
(
z1
(
F; a(ω), x
)T
, . . . , zB
(
F; a(ω), x
)T )T
,
(12.13b) 
and parallel to z parallel to Subscript normal infinity||z||∞is the maximum norm 
parallel to z parallel to Subscript normal infinity Baseline colon equals max Underscript StartLayout 1st Row 1 less than or equals i less than or equals upper B 2nd Row 1 less than or equals l less than or equals l 0 plus 3 EndLayout Endscripts StartAbsoluteValue z Subscript i l Baseline EndAbsoluteValue period||z||∞:= max
1≤i≤B
1≤l≤l0+3
|zil|.
(12.13c) 
If we put 
ModifyingAbove s With caret equals 1 plus s o r s equals ModifyingAbove s With caret minus 1 commaˆs = 1 + s
or
s = ˆs −1,
(12.14) 
from (12.10) we obtain 
s Superscript asterisk Baseline left parenthesis a comma x right parenthesis equals ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesis minus 1 commas∗(a, x) = ˆs∗(a, x) −1,
(12.15a) 
where the transformed state function ModifyingAbove s With caret Superscript asterisk Baseline equals ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesisˆs∗= ˆs∗(a, x) reads 
ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesis colon equals min left brace double vertical bar z left parenthesis upper F semicolon a comma x right parenthesis double vertical bar Subscript normal infinity Baseline colon upper C upper F equals upper P left parenthesis a comma x right parenthesis right brace periodˆs∗(a, x) := min
{||||||z(F; a, x)
||||||
∞: C F = P(a, x)
}
.
(12.15b) 
Remark 12.1 According to (12.15a), (12.15b) and (12.12), the safety or survival 
condition of the plane frame with plastic material can be represented also by 
ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals 1 periodˆs∗(a, x) ≤1.
The state function ModifyingAbove s With caret Superscript asterisk Baseline equals ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesisˆs∗= ˆs∗(a, x) describes the maximum percentage of use of the 
available plastic capacity within the plane frame for the best internal load distribution 
with respect to the conﬁguration left parenthesis a comma x right parenthesis(a, x). 
Obviously, ModifyingAbove s With caret Superscript asterisk Baseline equals ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesisˆs∗= ˆs∗(a, x) is the minimum value function of the LP 
min Underscript upper C upper F equals upper P left parenthesis a comma x right parenthesis Endscripts double vertical bar z left parenthesis upper F semicolon a comma x right parenthesis double vertical bar Subscript normal infinity Baseline period
min
C F=P(a,x)
||||||z(F; a, x)
||||||
∞.
(12.16) 
The following inequalities for norms or power/Hölder meansparallel to z parallel to||z|| indouble struck upper R Superscript upper B left parenthesis l 0 plus 3 right parenthesisRB(l0+3) are well 
known [ 1, 4]:

12.2 State and Cost Functions
321
StartLayout 1st Row 1st Column StartFraction 1 Over upper B left parenthesis l 0 plus 3 right parenthesis EndFraction parallel to z parallel to Subscript normal infinity 2nd Column less than or equals StartFraction 1 Over upper B left parenthesis l 0 plus 3 right parenthesis EndFraction parallel to z parallel to Subscript 1 Baseline 2nd Row 1st Column Blank 2nd Column less than or equals StartFraction 1 Over StartRoot upper B left parenthesis l 0 plus 3 right parenthesis EndRoot EndFraction parallel to z parallel to Subscript 2 Baseline less than or equals parallel to z parallel to Subscript normal infinity Baseline less than or equals parallel to z parallel to Subscript 2 Baseline comma EndLayout
1
B(l0 + 3)||z||∞≤
1
B(l0 + 3)||z||1
≤
1
√B(l0 + 3)||z||2 ≤||z||∞≤||z||2,
(12.17a) 
where 
parallel to z parallel to Subscript 1 Baseline colon equals sigma summation Underscript i equals 1 Overscript upper B Endscripts sigma summation Underscript l equals 1 Overscript l 0 plus 3 Endscripts StartAbsoluteValue z Subscript i l Baseline EndAbsoluteValue comma parallel to z parallel to Subscript 2 Baseline colon equals StartRoot sigma summation Underscript i equals 1 Overscript upper B Endscripts sigma summation Underscript l equals 1 Overscript l 0 plus 3 Endscripts z Subscript i l Superscript 2 Baseline EndRoot period||z||1 :=
B
∑
i=1
l0+3
∑
l=1
|zil|, ||z||2 :=
 
|
|
|
B
∑
i=1
l0+3
∑
l=1
z2
il.
(12.17b) 
Using (12.17a), we ﬁnd 
StartFraction 1 Over upper B left parenthesis l 0 plus 3 right parenthesis EndFraction ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals StartFraction 1 Over StartRoot upper B left parenthesis l 0 plus 3 right parenthesis EndRoot EndFraction ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis comma
1
B(l0 + 3) ˆs∗(a, x) ≤
1
√B(l0 + 3) ˆs∗
2(a, x) ≤ˆs∗(a, x) ≤ˆs∗
2(a, x),
(12.18a) 
where ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline equals ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesisˆs∗
2 = ˆs∗
2(a, x) is the modiﬁed state function deﬁned by 
ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis colon equals min left brace double vertical bar z left parenthesis upper F semicolon a comma x right parenthesis double vertical bar Subscript 2 Baseline colon upper C upper F equals upper P left parenthesis a comma x right parenthesis right brace periodˆs∗
2(a, x) := min
{||||z(F; a, x)
||||
2 : C F = P(a, x)
}
.
(12.18b) 
Obviously, we have 
ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis equals StartRoot upper G 1 Superscript asterisk Baseline left parenthesis a comma x right parenthesis EndRoot commaˆs∗
2(a, x) =
√
G∗
1(a, x),
(12.18c) 
where upper G 1 Superscript asterisk Baseline left parenthesis a comma x right parenthesisG∗
1(a, x) is the minimum value function of the quadratic program 
min Underscript upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Endscripts sigma summation Underscript i equals 1 Overscript upper B Endscripts sigma summation Underscript l equals 1 Overscript l 0 plus 3 Endscripts z Subscript i l Baseline left parenthesis upper F Subscript i Baseline semicolon a comma x right parenthesis squared period
min
C F=P
(
a(ω),x
)
B
∑
i=1
l0+3
∑
l=1
zil(Fi; a, x)2.
(12.19) 
12.2.1 
Cost Functions 
The inequalities in (12.18a) show that for structural analysis and optimal design 
purposes we may work also with the state function ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline equals ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesisˆs∗
2 = ˆs∗
2(a, x) which can be 
deﬁned easily by means of the quadratic program (12.19). 
According to the deﬁnition (12.8b) and the corresponding technical interpretation 
of the quotients z Subscript i lzil, the transformed state function ModifyingAbove s With caret Superscript asterisk Baseline equals ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesisˆs∗= ˆs∗(a, x) represents—for 
the best internal load distribution—the maximum percentage of use of the plastic 
capacities relative to the available plastic capacities in the members (bars) of the 
plane frame with conﬁguration left parenthesis a comma x right parenthesis(a, x). While the deﬁnition (12.15b) of  ModifyingAbove s With caret Superscript asteriskˆs∗is based 
on the absolute value function 
c 1 left parenthesis z Subscript i l Baseline right parenthesis equals StartAbsoluteValue z Subscript i l Baseline EndAbsoluteValue commac1(zil) = |zil|,
(12.20a)

322
12
Stochastic Structural Optimization with Quadratic Loss Functions
Fig. 12.1 Cost functionsc Subscript pcp
in deﬁnition (12.18b) of ModifyingAbove s With caret Subscript 2 Superscript asteriskˆs∗
2 occur quadratic functions 
c 2 left parenthesis z Subscript i l Baseline right parenthesis equals z Subscript i l Superscript 2 Baseline comma i equals 1 comma ellipsis comma upper B comma l equals 1 comma ellipsis comma l 0 plus 3 periodc2(zil) = z2
il,
i = 1, . . . , B,
l = 1, . . . ,l0 + 3.
(12.20b) 
Obviously, 
c Subscript p Baseline left parenthesis z Subscript i l Baseline right parenthesis equals StartAbsoluteValue z Subscript i l Baseline EndAbsoluteValue Superscript p Baseline normal w normal i normal t normal h p equals 1 comma 2 left parenthesis or also p greater than or equals 1 right parenthesiscp(zil) = |zil|p with p = 1, 2 (or also p ≥1)
are possible convex functions, cf. Fig. 12.1, measuring the costs resulting from the 
positionz Subscript i lzil of a load component upper H overTilde Subscript l Superscript left parenthesis i right parenthesis Baseline upper F Subscript i  
H (i)
l
Fi relative to the corresponding safety interval 
(plastic capacity) left bracket upper F overTilde Subscript i l Superscript upper L Baseline comma upper F overTilde Subscript i l Superscript upper U Baseline right bracket[ F L
il ,  FU
il ]. 
If different weights are used in the objective function (12.19), then for the bars 
we obtain, cf. (12.8c), the cost functions 
q Subscript i Baseline left parenthesis z Subscript i Baseline right parenthesis equals parallel to upper W Subscript i Baseline 0 Baseline z Subscript i Baseline parallel to squared commaqi(zi) = ||Wi0zi||2,
(12.20c) 
with left parenthesis l 0 plus 3 right parenthesis times left parenthesis l 0 plus 3 right parenthesis(l0 + 3) × (l0 + 3) weight matrices upper W Subscript i Baseline 0Wi0, i equals 1 comma ellipsis comma upper Bi = 1, . . . , B. 
The total weighted quadratic costs resulting from a load distribution upper FF acting on 
the plastic plane frame having conﬁguration left parenthesis a comma x right parenthesis(a, x) are given, cf. (12.18c), (12.19), 
(12.20c), by 
upper G 1 colon equals sigma summation Underscript i equals 1 Overscript upper B Endscripts parallel to upper W Subscript i Baseline 0 Baseline z Subscript i Baseline parallel to squared equals sigma summation Underscript i equals 1 Overscript upper B Endscripts z Subscript i Superscript upper T Baseline upper W Subscript i Baseline 0 Superscript upper T Baseline upper W Subscript i Baseline 0 Baseline z Subscript i Baseline periodG1 :=
B
∑
i=1
||Wi0zi||2 =
B
∑
i=1
zT
i W T
i0Wi0zi.
(12.21a) 
Deﬁning 
upper W 0 colon equals Start 4 By 4 Matrix 1st Row 1st Column upper W 10 2nd Column 0 3rd Column ellipsis 4th Column 0 2nd Row 1st Column 0 2nd Column upper W 20 3rd Column ellipsis 4th Column 0 3rd Row 1st Column vertical ellipsis 2nd Column vertical ellipsis 3rd Column down right diagonal ellipsis 4th Column vertical ellipsis 4th Row 1st Column 0 2nd Column 0 3rd Column ellipsis 4th Column upper W Subscript upper B Baseline 0 Baseline EndMatrix comma z colon equals Start 4 By 1 Matrix 1st Row z 1 2nd Row z 2 3rd Row vertical ellipsis 4th Row z Subscript upper B Baseline EndMatrix commaW0 :=
⎛
⎜⎜⎜⎝
W10
0
. . . 0
0
W20 . . . 0
...
...
... ...
0
0
. . . WB0
⎞
⎟⎟⎟⎠,
z :=
⎛
⎜⎜⎜⎝
z1
z2
...
zB
⎞
⎟⎟⎟⎠,
(12.21b) 
we also have

12.3 Minimum Expected Quadratic Costs
323
StartLayout 1st Row 1st Column upper G 1 equals upper G 1 left parenthesis a comma x semicolon upper F right parenthesis 2nd Column equals z Superscript upper T Baseline upper W 0 Superscript upper T Baseline upper W 0 z 2nd Row 1st Column Blank 2nd Column equals parallel to upper W 0 z parallel to Subscript 2 Superscript 2 Baseline equals parallel to z parallel to Subscript 2 comma upper W 0 Superscript 2 Baseline comma EndLayoutG1 = G1(a, x; F) = zT W T
0 W0z
= ||W0z||2
2 = ||z||2
2,W0,
(12.21c) 
where parallel to dot parallel to Subscript 2 comma upper W 0|| · ||2,W0 denotes the weighted Euclidean norm 
parallel to z parallel to Subscript 2 comma upper W 0 Baseline colon equals parallel to upper W 0 z parallel to Subscript 2 Baseline period||z||2,W0 := ||W0z||2.
(12.21d) 
Using the weighted quadratic cost function (12.20c), the state functionModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline equals ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesisˆs∗
2 = ˆs∗
2(a, x)
is replaced by 
StartLayout 1st Row 1st Column ModifyingAbove s With caret Subscript 2 comma upper W 0 Superscript asterisk Baseline left parenthesis a comma x right parenthesis 2nd Column colon equals min left brace double vertical bar z left parenthesis upper F semicolon a comma x right parenthesis double vertical bar Subscript 2 comma upper W 0 Baseline colon upper C upper F equals upper P left parenthesis a comma x right parenthesis right brace 2nd Row 1st Column Blank 2nd Column equals min left brace StartRoot upper G 1 left parenthesis a comma x semicolon upper F right parenthesis EndRoot colon upper C upper F equals upper P left parenthesis a comma x right parenthesis right brace period EndLayout
ˆs∗
2,W0(a, x) := min
{||||z(F; a, x)
||||
2,W0 : C F = P(a, x)
}
= min
{√
G1(a, x; F) : C F = P(a, x)
}
.
(12.21e) 
Since 
parallel to z parallel to Subscript 2 comma upper W 0 Baseline equals parallel to upper W 0 z parallel to Subscript 2 Baseline less than or equals parallel to upper W 0 parallel to dot parallel to z parallel to||z||2,W0 = ||W0z||2 ≤||W0|| · ||z||
with the norm parallel to upper W 0 parallel to||W0|| of the matrix upper W 0W0, we ﬁnd 
ModifyingAbove s With caret Subscript 2 comma upper W 0 Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals parallel to upper W 0 parallel to ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis periodˆs∗
2,W0(a, x) ≤||W0||ˆs∗
2(a, x).
(12.21f) 
On the other hand, in case 
parallel to upper W 0 z parallel to Subscript 2 Baseline greater than or equals ModifyingBelow upper W With quotation dash Subscript 0 Baseline parallel to z parallel to Subscript 2||W0z||2 ≥W 0||z||2
with a positive constant ModifyingBelow upper W With quotation dash Subscript 0 Baseline greater than 0W 0 > 0, we have  
ModifyingAbove s With caret Subscript 2 comma upper W 0 Superscript asterisk Baseline left parenthesis a comma x right parenthesis greater than or equals ModifyingBelow upper W With quotation dash Subscript 0 Baseline ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis o r ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals StartFraction 1 Over ModifyingBelow upper W With quotation dash Subscript 0 Baseline EndFraction ModifyingAbove s With caret Subscript 2 comma upper W 0 Superscript asterisk Baseline left parenthesis a comma x right parenthesis periodˆs∗
2,W0(a, x) ≥W 0ˆs∗
2(a, x) or ˆs∗
2(a, x) ≤
1
W 0
ˆs∗
2,W0(a, x).
(12.21g) 
12.3 
Minimum Expected Quadratic Costs 
Putting 
upper H colon equals Start 4 By 4 Matrix 1st Row 1st Column upper H Superscript left parenthesis 1 right parenthesis Baseline 2nd Column Blank 3rd Column Blank 4th Column Blank 2nd Row 1st Column Blank 2nd Column upper H Superscript left parenthesis 2 right parenthesis Baseline 3rd Column Blank 4th Column Blank 3rd Row 1st Column Blank 2nd Column Blank 3rd Column down right diagonal ellipsis 4th Column Blank 4th Row 1st Column Blank 2nd Column Blank 3rd Column Blank 4th Column upper H Superscript left parenthesis upper B right parenthesis Baseline EndMatrix comma upper F Superscript c Baseline colon equals Start 4 By 1 Matrix 1st Row upper F 1 Superscript c Baseline 2nd Row upper F 2 Superscript c Baseline 3rd Row vertical ellipsis 4th Row upper F Subscript upper B Superscript c Baseline EndMatrix comma rho colon equals Start 4 By 1 Matrix 1st Row rho 1 2nd Row rho 2 3rd Row vertical ellipsis 4th Row rho Subscript upper B Baseline EndMatrix commaH :=
⎛
⎜⎜⎜⎝
H (1)
H (2)
...
H (B)
⎞
⎟⎟⎟⎠,
Fc :=
⎛
⎜⎜⎜⎝
Fc
1
Fc
2
...
Fc
B
⎞
⎟⎟⎟⎠,
 :=
⎛
⎜⎜⎜⎝
 1
 2
...
 B
⎞
⎟⎟⎟⎠,
(12.21h) 
with (12.8e) we ﬁnd 
upper G 1 equals upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis equals left parenthesis upper H upper F minus upper F Superscript c Baseline right parenthesis Superscript upper T Baseline rho Subscript d Superscript negative 1 Baseline upper W 0 Superscript upper T Baseline upper W 0 rho Subscript d Superscript negative 1 Baseline left parenthesis upper H upper F minus upper F Superscript c Baseline right parenthesis periodG1 = G1
(
a(ω), x; F
)
= (H F −Fc)T  −1
d W T
0 W0 −1
d (H F −Fc).
(12.22a)

324
12
Stochastic Structural Optimization with Quadratic Loss Functions
If 
upper F Superscript c Baseline equals upper H upper F Superscript c Baseline w i t h upper F Superscript c Baseline colon equals left parenthesis StartFraction upper F Subscript i Superscript upper L Baseline plus upper F Subscript i Superscript upper U Baseline Over 2 EndFraction right parenthesis Subscript i equals 1 comma ellipsis comma upper BFc = H Fc with Fc :=
( F L
i + FU
i
2
)
i=1,...,B
(12.22b) 
as in the case of no interaction between normal forces and moments, see (12.4a)– 
(12.4c), and in the case of symmetric yield stresses 
sigma Subscript y i Superscript upper L Baseline equals minus sigma Subscript y i Superscript upper U Baseline comma i equals 1 comma ellipsis comma upper B commaσ L
yi = −σ U
yi ,
i = 1, . . . , B,
(12.22c) 
we also have 
upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis equals left parenthesis upper F minus upper F Superscript c Baseline right parenthesis Superscript upper T Baseline upper H Superscript upper T Baseline rho Subscript d Superscript negative 1 Baseline upper W 0 Superscript upper T Baseline upper W 0 rho Subscript d Superscript negative 1 Baseline upper H left parenthesis upper F minus upper F Superscript c Baseline right parenthesis periodG1
(
a(ω), x; F
)
= (F −Fc)T H T  −1
d W T
0 W0 −1
d H(F −Fc).
(12.22d) 
Moreover, if (12.22c) holds, then upper F Superscript c Baseline equals 0Fc = 0 and therefore 
upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis equals upper F Superscript upper T Baseline upper H Superscript upper T Baseline rho Subscript d Superscript negative 1 Baseline upper W 0 Superscript upper T Baseline upper W 0 rho Subscript d Superscript negative 1 Baseline upper H upper F periodG1
(
a(ω), x; F
)
= F T H T  −1
d W T
0 W0 −1
d H F.
(12.22e) 
For simpliﬁcation, we assume ﬁrst in this section that the total cost representation 
(12.22d) or (12.22e) holds. 
According to the equilibrium condition (12.2), the total vector upper FF of generalized 
forces of the members fulﬁlls 
upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis periodC F = P(a(ω), x).
Let x element of upper Dx ∈D denote a given vector of decision variables, and let be a equals a left parenthesis omega right parenthesisa = a(ω) a real-
ization of vector a left parenthesis dot right parenthesisa(·) of model parameters. Based on (12.22d) or (12.22e), a cost 
minimum or “best” internal distribution of the generalized forces 
upper F Superscript asterisk Baseline equals upper F Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisF∗= F∗(a(ω), x)
of the structure can be obtained by solving the following optimization problem with 
quadratic objective function and linear constraints 
min Underscript upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Endscripts upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis period
min
C F=P(a(ω),x) G1(a(ω), x; F).
(12.23) 
Solving the related stochastic optimization problem [ 8] 
min Underscript upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis a period s period Endscripts upper E upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis comma
min
C F=P(a(ω),x)a.s. EG1(a(ω), x; F),
(12.24) 
for the random conﬁguration left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis
(
a(ω), x
)
we get the minimum expected (total) 
quadratic costs 
ModifyingAbove upper G With quotation dash Subscript 1 Superscript asterisk Baseline equals ModifyingAbove upper G With quotation dash Subscript 1 Superscript asterisk Baseline left parenthesis x right parenthesis comma x element of upper D commaG
∗
1 = G
∗
1(x), x ∈D,
(12.25a)

12.3 Minimum Expected Quadratic Costs
325
where ModifyingAbove upper G With quotation dash Subscript 1 Superscript asterisk Baseline left parenthesis x right parenthesisG
∗
1(x) may be obtained by interchanging expectation and minimization 
ModifyingAbove upper G With quotation dash Subscript 1 Superscript asterisk Baseline left parenthesis x right parenthesis equals ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis colon equals upper E min left brace upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis colon upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right brace periodG
∗
1(x) = G∗
1(x) := E min{G1(a(ω), x; F) : C F = P(a(ω), x)}.
(12.25b) 
The internal minimization problem (12.23) 
min upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis s period t period upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis comma min G1(a(ω), x; F)
s.t. C F = P(a(ω), x),
hence, 
min Underscript upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Endscripts left parenthesis upper F minus upper F Superscript c Baseline right parenthesis Superscript upper T Baseline upper H Superscript upper T Baseline rho Subscript d Superscript negative 1 Baseline upper W 0 Superscript upper T Baseline upper W 0 rho Subscript d Superscript negative 1 Baseline upper H left parenthesis upper F minus upper F Superscript c Baseline right parenthesis comma
min
C F=P(a(ω),x)(F −Fc)T H T  −1
d W T
0 W0 −1
d H(F −Fc),
(12.26) 
with quadratic objective function and linear constraints with respect to upper FF can be 
solved by means of Lagrange techniques. We put 
upper W equals upper W left parenthesis a comma x right parenthesis colon equals upper H Superscript upper T Baseline rho Subscript d Superscript negative 1 Baseline upper W 0 Superscript upper T Baseline upper W 0 rho Subscript d Superscript negative 1 Baseline upper HW = W(a, x) := H T  −1
d W T
0 W0 −1
d H
(12.27) 
and deﬁne the Lagrangian of (12.26): 
upper L equals upper L left parenthesis upper F comma lamda right parenthesis colon equals left parenthesis upper F minus upper F Superscript c Baseline right parenthesis Superscript upper T Baseline upper W left parenthesis upper F minus upper F Superscript c Baseline right parenthesis plus lamda Superscript upper T Baseline left parenthesis upper C upper F minus upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis periodL = L(F, λ) := (F −Fc)T W(F −Fc) + λT (C F −P(a(ω), x)).
(12.28a) 
Based on the corresponding piecewise linearized yield domain, upper WW describes the 
plastic capacity of the plane frame with respect to axial forces and bending moments. 
The necessary and sufﬁcient optimality conditions for a minimum pointleft parenthesis upper F Superscript asterisk Baseline comma lamda Superscript asterisk Baseline right parenthesis(F∗, λ∗)
read 
StartLayout 1st Row 1st Column 0 equals nabla Subscript upper F Baseline upper L 2nd Column equals 2 upper W left parenthesis upper F minus upper F Superscript c Baseline right parenthesis plus upper C Superscript upper T Baseline lamda comma 2nd Row 1st Column Blank 3rd Row 1st Column 0 equals nabla Subscript lamda Baseline upper L 2nd Column equals upper C upper F minus upper P period EndLayout0 = ∇F L = 2W(F −Fc) + CT λ,
(12.28b) 
StartLayout 1st Row 1st Column 0 equals nabla Subscript upper F Baseline upper L 2nd Column equals 2 upper W left parenthesis upper F minus upper F Superscript c Baseline right parenthesis plus upper C Superscript upper T Baseline lamda comma 2nd Row 1st Column Blank 3rd Row 1st Column 0 equals nabla Subscript lamda Baseline upper L 2nd Column equals upper C upper F minus upper P period EndLayout0 = ∇λL = C F −P.
(12.28c) 
Supposing that upper WW is regular, we get 
upper F equals upper F Superscript c Baseline minus one half upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline lamdaF = Fc −1
2 W −1CT λ
(12.28d) 
and 
upper P equals upper C upper F equals upper C upper F Superscript c Baseline minus one half upper C upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline lamda commaP = C F = C Fc −1
2CW −1CT λ,
(12.28e) 
hence, 
upper F Superscript asterisk Baseline equals upper F Superscript c Baseline minus one half upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline lamda Superscript asterisk Baseline equals upper F Superscript c Baseline minus upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline left parenthesis upper C upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline left parenthesis upper C upper F Superscript c Baseline minus upper P right parenthesis periodF∗= Fc −1
2 W −1CT λ∗= Fc −W −1CT (CW −1CT )−1(C Fc −P).
(12.28f) 
Inserting (12.28f) into the objective function upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesisG1(a(ω), x; F), according to 
(12.22a) and (12.27) we ﬁnd

326
12
Stochastic Structural Optimization with Quadratic Loss Functions
StartLayout 1st Row 1st Column upper G 1 Superscript asterisk 2nd Column equals upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 2nd Column equals left parenthesis upper F Superscript asterisk Baseline minus upper F Superscript c Baseline right parenthesis Superscript upper T Baseline upper W left parenthesis upper F Superscript asterisk Baseline minus upper F Superscript c Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column equals left parenthesis left parenthesis upper C upper F Superscript c Baseline minus upper P right parenthesis Superscript upper T Baseline left parenthesis upper C upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline upper C upper W Superscript negative 1 Baseline right parenthesis upper W left parenthesis upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline left parenthesis upper C upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline left parenthesis upper C upper F Superscript c Baseline minus upper P right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column equals left parenthesis upper C upper F Superscript c Baseline minus upper P right parenthesis Superscript upper T Baseline left parenthesis upper C upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline left parenthesis upper C upper F Superscript c Baseline minus upper P right parenthesis 5th Row 1st Column Blank 2nd Column equals t r left parenthesis upper C upper W Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline left parenthesis upper C upper F Superscript c Baseline minus upper P right parenthesis left parenthesis upper C upper F Superscript c Baseline minus upper P right parenthesis Superscript upper T Baseline comma EndLayout
G∗
1 = G∗
1(a(ω), x)
= (F∗−Fc)T W(F∗−Fc)
=
(
(C Fc −P)T (CW −1CT )−1CW −1)
W
(
W −1CT (CW −1CT )−1(C Fc −P)
)
= (C Fc −P)T (CW −1CT )−1(C Fc −P)
= tr(CW −1CT )−1(C Fc −P)(C Fc −P)T ,
(12.28g) 
where “tr” denotes the trace of a matrix. The minimal expected value ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dashG∗
1 is then 
given by 
StartLayout 1st Row 1st Column ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis 2nd Column equals upper E upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper E left parenthesis upper C upper F Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper C upper W left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline 3rd Row 1st Column Blank 2nd Column times left parenthesis upper C upper F Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column equals upper E t r left parenthesis upper C upper W left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline left parenthesis upper C upper F Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis 5th Row 1st Column Blank 2nd Column times left parenthesis upper C upper F Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis Superscript upper T Baseline period EndLayoutG∗
1(x) = EG∗
1
(
a(ω), x
)
= E
(
C Fc(a(ω), x
)
−P
(
a(ω), x)
)T (
CW
(
a(ω), x
)−1CT )−1
×
(
C Fc(
a(ω), x
)
−P
(
a(ω), x
))
= E tr
(
CW
(
a(ω), x
)−1CT )−1(
C Fc(
a(ω), x
)
−P
(
a(ω), x
))
×
(
C Fc(
a(ω), x
)
−P
(
a(ω), x
))T
.
(12.29a) 
If sigma Subscript y i Superscript upper L Baseline equals minus sigma Subscript y i Superscript upper U Baseline comma i equals 1 comma ellipsis comma upper B commaσ L
yi = −σ U
yi , i = 1, . . . , B, then upper F Superscript c Baseline equals 0Fc = 0 and 
StartLayout 1st Row 1st Column ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis 2nd Column equals upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis Superscript upper T Baseline left parenthesis upper C upper W left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 2nd Column equals t r upper E left parenthesis upper C upper W left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline period EndLayoutG∗
1(x) = E P(a(ω), x))T (CW(a(ω), x)−1CT )−1P(a(ω), x)
= tr E
(
CW
(
a(ω), x
)−1CT )−1
P
(
a(ω), x
)
P
(
a(ω), x
)T .
(12.29b) 
Since the vectorupper P equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisP = P(a(ω), x) of external generalized forces and the vector of 
yield stresses sigma Superscript upper U Baseline equals sigma Superscript upper U Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisσ U = σ U(a(ω), x) are stochastically independent, then in case sigma Subscript y i Superscript upper L Baseline equals minus sigma Subscript y i Superscript upper U Baseline comma i equals 1 comma ellipsis comma upper Bσ L
yi =
−σ U
yi , i = 1, . . . , B, we have  
StartLayout 1st Row 1st Column ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis 2nd Column equals upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis Superscript upper T Baseline ModifyingAbove upper U With quotation dash left parenthesis x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 2nd Column equals t r ModifyingAbove upper U With quotation dash left parenthesis x right parenthesis upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline comma EndLayoutG∗
1(x) = E P(a(ω), x))TU(x)P(a(ω), x)
= trU(x)E P(a(ω), x)P(a(ω), x)T ,
(12.29c) 
where 
ModifyingAbove upper U With quotation dash left parenthesis x right parenthesis colon equals upper E upper K left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript negative 1U(x) := E K(a(ω), x)−1
(12.29d) 
with the matrices 
upper K left parenthesis a comma x right parenthesis colon equals upper C upper K 0 left parenthesis a comma x right parenthesis upper C Superscript upper TK(a, x) := CK0(a, x)CT
(12.30a) 
and 
upper K 0 left parenthesis a comma x right parenthesis colon equals upper W left parenthesis a comma x right parenthesis Superscript negative 1 Baseline equals left parenthesis upper H Superscript upper T Baseline rho Subscript d Superscript negative 1 Baseline upper W 0 Superscript upper T Baseline upper W 0 rho Subscript d Superscript negative 1 Baseline upper H right parenthesis Superscript negative 1 Baseline periodK0(a, x) := W(a, x)−1 = (H T  −1
d W T
0 W0 −1
d H)−1.
(12.30b)

12.3 Minimum Expected Quadratic Costs
327
We compare now, especially in case upper F Superscript c Baseline equals 0Fc = 0, formula  (12.28g) for the costs upper G 1 Superscript asterisk Baseline equals upper G 1 Superscript asterisk Baseline left parenthesis a comma x right parenthesisG∗
1 =
G∗
1(a, x) with formula 
normal upper Gamma colon equals u Superscript upper T Baseline upper P := uT P
for the compliance of an elastic structure, where 
u colon equals upper K Subscript e l Superscript negative 1 Baseline upper Pu := K −1
el P
is the vector of displacements, and upper K Subscript e lKel denotes the stiffness matrix in case of an 
elastic structure. Obviously, the cost function upper G 1 Superscript asterisk Baseline equals upper G 1 Superscript asterisk Baseline left parenthesis a comma x right parenthesisG∗
1 = G∗
1(a, x) may be interpreted 
as a generalized compliance function, and the m times mm × m matrix upper K equals upper K left parenthesis a comma x right parenthesisK = K(a, x) can be 
interpreted as the “generalized stiffness matrix” of the underlying plastic mechanical 
structure. If we suppose that 
upper W Subscript i Baseline 0 Baseline colon equals left parenthesis w Subscript i l Superscript 0 Baseline delta Subscript l lamda Baseline right parenthesis Subscript l comma lamda equals 1 comma ellipsis comma l 0 plus 3 Baseline comma i equals 1 comma ellipsis comma upper BWi0 :=
(
w0
ilδlλ
)
l,λ=1,...,l0+3 ,
i = 1, . . . , B
(12.30c) 
are diagonal weight matrices, then, cf. (12.8g), 
rho Subscript d Superscript negative 1 Baseline upper W 0 Superscript upper T Baseline upper W 0 rho Subscript d Superscript negative 1 Baseline equals d i a g left parenthesis left parenthesis StartFraction w Subscript i l Superscript 0 Baseline Over rho Subscript i l Baseline EndFraction right parenthesis squared right parenthesis period −1
d W T
0 W0 −1
d
= diag
((w0
il
 il
)2)
.
(12.30d) 
If condition (12.22b) and therefore representation (12.22d) or (12.22e) does not 
hold, then the minimum total costs upper G 1 Superscript asterisk Baseline equals upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisG∗
1 = G∗
1
(
a(ω), x
)
are determined by the more 
general quadratic program, cf. (12.22a), (12.23), (12.26), 
min Underscript upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Endscripts left parenthesis upper H upper F minus upper F Superscript c Baseline right parenthesis Superscript upper T Baseline upper W Subscript rho Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis left parenthesis upper H upper F minus upper F Superscript c Baseline right parenthesis comma
min
C F=P
(
a(ω),x
)(H F −Fc)T W 
(
a(ω), x
)
(H F −Fc),
(12.31a) 
where 
upper W Subscript rho Baseline left parenthesis a comma x right parenthesis colon equals rho Subscript d Superscript negative 1 Baseline left parenthesis a comma x right parenthesis upper W 0 Superscript upper T Baseline upper W 0 rho Subscript d Superscript negative 1 Baseline left parenthesis a comma x right parenthesis periodW (a, x) :=  −1
d (a, x)W T
0 W0 −1
d (a, x).
(12.31b) 
Though also in this case problem (12.31a) can be solved explicitly, the resulting 
total cost function has a difﬁcult form. In order to apply the previous technique, 
the vector upper F Superscript cFc is approximated—in the least squares sense—by vectors upper H upper FH F with 
upper F element of double struck upper R Superscript 3 upper BF ∈R3B. Hence, we write 
upper F Superscript c Baseline almost equals upper H upper F Superscript c asterisk Baseline commaFc ≈H Fc∗,
(12.32a) 
where the left parenthesis 3 upper B right parenthesis(3B)-vector upper F Superscript c asteriskFc∗is the optimal solution of the optimization problem 
min Underscript upper F Endscripts parallel to upper H upper F minus upper F Superscript c Baseline parallel to squared period min
F ||H F −Fc||2.
(12.32b) 
We obtain 
upper F Superscript c asterisk Baseline equals upper F Superscript c asterisk Baseline left parenthesis upper F Superscript c Baseline right parenthesis colon equals left parenthesis upper H Superscript upper T Baseline upper H right parenthesis Superscript negative 1 Baseline upper H Superscript upper T Baseline upper F Superscript c Baseline periodFc∗= Fc∗(Fc) := (H T H)−1H T Fc.
(12.32c)

328
12
Stochastic Structural Optimization with Quadratic Loss Functions
The error e left parenthesis upper F Superscript c asterisk Baseline right parenthesise(Fc∗) of this approximation reads 
StartLayout 1st Row 1st Column e left parenthesis upper F Superscript c Baseline right parenthesis 2nd Column colon equals parallel to upper H upper F Superscript c asterisk Baseline minus upper F Superscript c Baseline parallel to 2nd Row 1st Column Blank 2nd Column equals double vertical bar left parenthesis upper H left parenthesis upper H Superscript upper T Baseline upper H right parenthesis Superscript negative 1 Baseline upper H Superscript upper T Baseline minus upper I right parenthesis upper F Superscript c Baseline double vertical bar period EndLayoute(Fc) := ||H Fc∗−Fc||
=
||||||
(
H(H T H)−1H T −I
)
Fc||||||.
(12.32d) 
With the vector upper F Superscript c asterisk Baseline equals upper F Superscript c asterisk Baseline left parenthesis upper F Superscript c Baseline right parenthesisFc∗= Fc∗(Fc) the total costs upper G 1 Superscript a Baseline equals upper G 1 Superscript a Baseline left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesisGa
1 = Ga
1
(
a(ω), x; F
)
can be 
approximated now, see (12.22a), by 
StartLayout 1st Row 1st Column upper G 1 Superscript a Baseline left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis 2nd Column colon equals left parenthesis upper H upper F minus upper H upper F Superscript c asterisk Baseline right parenthesis Superscript upper T Baseline upper W Subscript rho Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis left parenthesis upper H upper F minus upper H upper F Superscript c asterisk Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left parenthesis upper F minus upper F Superscript c asterisk Baseline right parenthesis Superscript upper T Baseline upper H Superscript upper T Baseline upper W Subscript rho Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper H left parenthesis upper F minus upper F Superscript c asterisk Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column equals left parenthesis upper F minus upper F Superscript c asterisk Baseline right parenthesis Superscript upper T Baseline upper W left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis left parenthesis upper F minus upper F Superscript c asterisk Baseline right parenthesis comma EndLayoutGa
1
(
a(ω), x; F
)
:= (H F −H Fc∗)T W 
(
a(ω), x
)
(H F −H Fc∗)
= (F −Fc∗)T H T W 
(
a(ω), x
)
H(F −Fc∗)
= (F −Fc∗)T W
(
a(ω), x
)
(F −Fc∗),
(12.33a) 
where, cf. (12.27), 
StartLayout 1st Row upper W equals upper W left parenthesis a comma x right parenthesis colon equals upper H Superscript upper T Baseline upper W Subscript rho Baseline left parenthesis a comma x right parenthesis upper H period EndLayoutW = W(a, x) := H T W (a, x)H.
(12.33b) 
Obviously, the approximate cost function upper G 1 Superscript a Baseline equals upper G 1 Superscript a Baseline left parenthesis a comma x semicolon upper F right parenthesisGa
1 = Ga
1(a, x; F) has the same form 
as the cost functionupper G 1 equals upper G 1 left parenthesis a comma x semicolon upper F right parenthesisG1 = G1(a, x; F) under the assumption (12.22b), see (12.22d). 
Hence, the minimum cost function upper G 1 Superscript a asterisk Baseline equals upper G 1 Superscript a asterisk Baseline left parenthesis a comma x right parenthesisGa∗
1 = Ga∗
1 (a, x) can be determined by solving, 
cf. (12.23), 
min Underscript upper C upper F equals upper P left parenthesis a comma x right parenthesis Endscripts upper G 1 Superscript a Baseline left parenthesis a comma x semicolon upper F right parenthesis period
min
C F=P(a,x) Ga
1(a, x; F).
(12.34a) 
We get, see (12.28g), 
upper G 1 Superscript a asterisk Baseline left parenthesis a comma x right parenthesis colon equals t r left parenthesis upper C upper W left parenthesis a comma x right parenthesis Superscript negative 1 Baseline upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline left parenthesis upper C upper F Superscript c asterisk Baseline minus upper P right parenthesis left parenthesis upper C upper F Superscript c asterisk Baseline minus upper P right parenthesis Superscript upper T Baseline commaGa∗
1 (a, x) := tr
(
CW(a, x)−1CT )−1
(C Fc∗−P)(C Fc∗−P)T ,
(12.34b) 
where upper F Superscript c asterisk Baseline equals upper F Superscript c asterisk Baseline left parenthesis a comma x right parenthesisFc∗= Fc∗(a, x) is given here by (12.32c). Taking expectations in (12.34b), 
we obtain the approximate minimum expected total cost function 
ModifyingAbove upper G 1 Superscript a asterisk Baseline With quotation dash equals ModifyingAbove upper G 1 Superscript a asterisk Baseline With quotation dash left parenthesis x right parenthesis equals upper E upper G 1 Superscript a asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis periodGa∗
1 = Ga∗
1 (x) = EGa∗
1
(
a(ω), x
)
.
(12.34c) 
12.4 
Deterministic Substitute Problems 
In order to determine robust optimal designsx Superscript asteriskx∗, appropriate deterministic substitute 
problems, cf. [ 8], must be formulated.

12.4 Deterministic Substitute Problems
329
12.4.1 
Weight (Volume)-Minimization Subject to Expected 
Cost Constraints 
With the expected primary cost function, see (12.1a), (12.1b), 
ModifyingAbove upper G 0 With quotation dash left parenthesis x right parenthesis equals upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisG0(x) = EG0(a(ω), x)
and the expected cost functionModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash equals ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesisG∗
1 = G∗
1(x) representing the expected total weighted 
quadratic costs resulting from a violation of the feasibility condition (12.4a), (12.4f), 
we get [ 3, 9] the optimization problem 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G 0 With quotation dash left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis less than or equals normal upper Gamma 1 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column x element of upper D comma EndLayout min G0(x)
(12.35a) 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G 0 With quotation dash left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis less than or equals normal upper Gamma 1 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column x element of upper D comma EndLayouts.t. G∗
1(x) ≤ 1
(12.35b) 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G 0 With quotation dash left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis less than or equals normal upper Gamma 1 4th Row 1st Column Blank 5th Row 1st Column Blank 2nd Column x element of upper D comma EndLayoutx ∈D,
(12.35c) 
where normal upper Gamma 1 1 is a certain upper cost bound. In case (12.1a) we have  
ModifyingAbove upper G 0 With quotation dash left parenthesis x right parenthesis colon equals sigma summation Underscript i equals 1 Overscript upper B Endscripts ModifyingAbove gamma Subscript i Baseline 0 Baseline With quotation dash upper L Subscript i Baseline upper A Subscript i Baseline left parenthesis x right parenthesisG0(x) :=
B
∑
i=1
γi0Li Ai(x)
(12.35d) 
with ModifyingAbove gamma Subscript i Baseline 0 Baseline With quotation dash colon equals upper E gamma Subscript i Baseline 0 Baseline left parenthesis omega right parenthesisγi0 := Eγi0(ω), and ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash equals ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesisG∗
1 = G∗
1(x) is deﬁned by (12.29a) or (12.29b). 
Due to (12.20c) and (12.21a)–(12.21c), the upper cost bound normal upper Gamma 1 1 can be deﬁned 
by 
normal upper Gamma 1 colon equals g 1 upper G 1 Superscript max Baseline comma 1 := g1Gmax
1
,
(12.35e) 
whereg 1 greater than 0g1 > 0 is a certain reliability factor, andupper G 1 Superscript maxGmax
1
denotes the maximum of the total 
cost function upper G 1 equals upper G 1 left parenthesis z right parenthesisG1 = G1(z) on the total admissible zz-domain left bracket negative 1 comma 1 right bracket Superscript left parenthesis l 0 plus 3 right parenthesis upper B[−1, 1](l0+3)B. Hence, 
StartLayout 1st Row 1st Column upper G 1 Superscript max 2nd Column colon equals max Underscript z element of left bracket negative 1 comma 1 right bracket Superscript left parenthesis l 0 plus 3 right parenthesis upper B Endscripts sigma summation Underscript i equals 1 Overscript upper B Endscripts parallel to upper W Subscript i Baseline 0 Baseline z Subscript i Baseline parallel to squared 2nd Row 1st Column Blank 2nd Column equals sigma summation Underscript i equals 1 Overscript upper B Endscripts max Underscript z Subscript i Baseline element of left bracket negative 1 comma 1 right bracket Superscript left parenthesis l 0 plus 3 right parenthesis Baseline Endscripts parallel to upper W Subscript i Baseline 0 Baseline z Subscript i Baseline parallel to squared 3rd Row 1st Column Blank 2nd Column equals sigma summation Underscript i equals 1 Overscript upper B Endscripts max Underscript 1 less than or equals j less than or equals 2 Superscript l 0 plus 3 Baseline Endscripts parallel to upper W Subscript i Baseline 0 Baseline e Superscript left parenthesis j right parenthesis Baseline parallel to squared comma EndLayoutGmax
1
:=
max
z∈[−1,1](l0+3)B
B
∑
i=1
||Wi0zi||2
=
B
∑
i=1
max
zi∈[−1,1](l0+3) ||Wi0zi||2
=
B
∑
i=1
max
1≤j≤2l0+3 ||Wi0e( j)||2,
(12.35f) 
wheree Superscript left parenthesis j right parenthesis Baseline comma j equals 1 comma ellipsis comma 2 Superscript l 0 plus 3e( j), j = 1, . . . , 2l0+3, denote the extreme points of the hypercubeleft bracket negative 1 comma 1 right bracket Superscript l 0 plus 3[−1, 1]l0+3. 
As shown in the following, for upper W 0 equals upper IW0 = I (identity matrix) the expected cost con-
straint (12.35b) can also be interpreted as a reliability constraint. 
According to Theorem 12.1, (12.12) and (12.15a), (12.15b), for the probability of 
survivalp Subscript s Baseline equals p Subscript s Baseline left parenthesis x right parenthesisps = ps(x) of the elastoplastic structure represented by the design vectorxx
we have

330
12
Stochastic Structural Optimization with Quadratic Loss Functions
StartLayout 1st Row 1st Column p Subscript s Baseline left parenthesis x right parenthesis 2nd Column colon equals upper P left parenthesis s Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals 0 right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper P left parenthesis ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus 1 less than or equals 0 right parenthesis equals upper P left parenthesis ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals 1 right parenthesis period EndLayoutps(x) := P
(
s∗(
a(ω), x
)
≤0
)
= P
(
ˆs∗(
a(ω), x
)
−1 ≤0
)
= P
(
ˆs∗(
a(ω), x
)
≤1
)
.
(12.36) 
Knowing from (12.18a), (12.18b) that, in case upper W 0 equals upper IW0 = I, 
StartFraction 1 Over StartRoot upper B left parenthesis l 0 plus 3 right parenthesis EndRoot EndFraction ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals ModifyingAbove s With caret Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis comma
1
√B(l0 + 3) ˆs∗
2(a, x) ≤ˆs∗(a, x) ≤ˆs∗
2(a, x),
we obtain the probability inequalities 
upper P left parenthesis ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals 1 right parenthesis less than or equals p Subscript s Baseline left parenthesis x right parenthesis less than or equals upper P left parenthesis ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline left parenthesis a comma x right parenthesis less than or equals StartRoot upper B left parenthesis l 0 plus 3 right parenthesis EndRoot right parenthesis periodP
(
ˆs∗
2
(
a(ω), x
)
≤1
)
≤ps(x) ≤P
(
ˆs∗
2(a, x) ≤
√
B(l0 + 3)
)
.
(12.37a) 
Due to the ﬁrst deﬁnition of upper G 1 Superscript asterisk Baseline equals upper G 1 Superscript asterisk Baseline left parenthesis a comma x right parenthesisG∗
1 = G∗
1(a, x) by (12.18c) and (12.19), related to the 
case upper W 0 equals upper IW0 = I, we also have  
upper P left parenthesis upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals 1 right parenthesis less than or equals p Subscript s Baseline left parenthesis x right parenthesis less than or equals upper P left parenthesis upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals upper B left parenthesis l 0 plus 3 right parenthesis right parenthesis periodP
(
G∗
1
(
a(ω), x
)
≤1
)
≤ps(x) ≤P
(
G∗
1
(
a(ω), x
)
≤B(l0 + 3)
)
.
(12.37b) 
Using now a nonnegative, nondecreasing, measurable function hh on double struck upper R Subscript plusR+, for any 
g 1 greater than 0g1 > 0 we ﬁnd [ 8] 
upper P left parenthesis upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals g 1 right parenthesis greater than or equals 1 minus StartFraction upper E h left parenthesis upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis Over h left parenthesis g 1 right parenthesis EndFraction periodP
(
G∗
1
(
a(ω), x
)
≤g1
)
≥1 −
Eh
(
G∗
1
(
a(ω), x
))
h(g1)
.
(12.38a) 
In the case h left parenthesis t right parenthesis equals th(t) = t we get the inequality 
upper P left parenthesis upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals g 1 right parenthesis greater than or equals 1 minus StartFraction ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis Over g 1 EndFraction commaP
(
G∗
1
(
a(ω), x
)
≤g1
)
≥1 −G∗
1(x)
g1
,
(12.38b) 
where the expectationModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis equals upper E upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisG∗
1(x) = EG∗
1
(
a(ω), x
)
is given by (12.29a) or (12.29b). The 
probabilistic constraint 
upper P left parenthesis upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis less than or equals g 1 right parenthesis greater than or equals alpha Subscript minP
(
G∗
1
(
a(ω), x
)
≤g1
)
≥αmin
(12.39a) 
for the quadratic mean rate ModifyingAbove s With caret Subscript 2 Superscript asterisk Baseline equals StartRoot upper G 1 Superscript asterisk Baseline left parenthesis a comma x right parenthesis EndRootˆs∗
2 =
√
G∗
1(a, x) of minimum possible use of plastic 
capacity within the plane frame with conﬁguration left parenthesis a comma x right parenthesis(a, x) implies p Subscript s Baseline left parenthesis x right parenthesis greater than or equals alpha Subscript minps(x) ≥αmin
for g 1 equals 1g1 = 1, cf.  (12.37b). Hence, due to (12.38b), constraint (12.39a) and therefore 
p Subscript s Baseline left parenthesis x right parenthesis greater than or equals alpha Subscript minps(x) ≥αmin can be guaranteed then by the condition 
ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis less than or equals g 1 left parenthesis 1 minus alpha right parenthesis commaG∗
1(x) ≤g1(1 −α),
(12.39b) 
see (12.35b).

12.4 Deterministic Substitute Problems
331
12.4.2 
Minimum Expected Total Costs 
For a vector x element of upper Dx ∈D of decision variables and a vector upper FF of internal generalized 
forces fulﬁlling the equilibrium condition (12.2), from (12.1a), (12.1b) and (12.22a), 
(12.22b) we have the total costs 
upper G left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis colon equals upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis plus upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis periodG(a(ω), x; F) := G0(a(ω), x) + G1(a(ω), x; F).
(12.40a) 
Here, the weight or scale matrices upper W Subscript i Baseline 0Wi0 and the weight or cost factors gamma Subscript i Baseline 0 Baseline comma i equals 1 comma ellipsis comma upper Bγi0, i =
1, . . . , B, must be selected such that the dimensions of upper G 0G0 and upper G 1G1 coincide. For 
example, if upper W Subscript i Baseline 0 Baseline equals upper I comma i equals 1 comma ellipsis comma upper BWi0 = I, i = 1, . . . , B, and StartRoot upper G 1 left parenthesis a comma x right parenthesis EndRoot√G1(a, x) is then the quadratic mean rate 
of use of plastic capacity for a given distribution of generalized forces upper FF, then we 
may replace gamma Subscript i Baseline 0γi0 by the relative weight/cost coefﬁcients 
gamma Subscript i Baseline 0 Superscript r e l Baseline colon equals StartFraction gamma Subscript i Baseline 0 Baseline Over upper G 0 Superscript r e f Baseline EndFraction comma i equals 1 comma ellipsis comma upper B commaγ rel
i0 := γi0
Gref
0
,
i = 1, . . . , B,
with a certain weight or cost reference value upper G 0 Superscript r e fGref
0 . 
Minimizing now the expected total costs 
StartLayout 1st Row 1st Column ModifyingAbove upper G With quotation dash equals ModifyingAbove upper G With quotation dash left parenthesis x right parenthesis 2nd Column equals upper E upper G left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F left parenthesis omega right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper E left parenthesis upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis plus upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F left parenthesis omega right parenthesis right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column equals upper E upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis plus upper E upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F left parenthesis omega right parenthesis right parenthesis 4th Row 1st Column Blank 2nd Column equals ModifyingAbove upper G With quotation dash Subscript 0 Baseline left parenthesis x right parenthesis plus upper E upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F left parenthesis omega right parenthesis right parenthesis EndLayoutG = G(x) = EG(a(ω), x; F(ω))
= E(G0(a(ω), x) + G1(a(ω), x; F(ω)))
= EG0(a(ω), x) + EG1(a(ω), x; F(ω))
= G0(x) + EG1(a(ω), x; F(ω))
(12.40b) 
subject to the equilibrium conditions (12.2) and the remaining condition for the 
decision variables 
x element of upper D commax ∈D,
(12.40c) 
we obtain the stochastic optimization problem 
StartLayout 1st Row min Underscript StartLayout 1st Row upper C upper F left parenthesis omega right parenthesis equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis a period s period 2nd Row x element of upper D EndLayout Endscripts upper E left parenthesis upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis plus upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F left parenthesis omega right parenthesis right parenthesis period EndLayout
min
C F(ω)=P
(
a(ω),x
)
a.s.
x∈D
E(G0(a(ω), x) + G1(a(ω), x; F(ω)).
(12.41) 
Obviously, (12.41) has the following two-stage structure: 
Step 1:
Select x element of upper Dx ∈D without knowledge of the actual realization a equals a left parenthesis omega right parenthesisa = a(ω) of 
the model parameters, but knowing the probability distribution or certain 
moments of a left parenthesis dot right parenthesisa(·); 
Step 2:
Determine the best internal distribution of generalized forces upper F equals upper F Superscript asterisk Baseline left parenthesis omega right parenthesisF = F∗(ω)
after realization of a equals a left parenthesis omega right parenthesisa = a(ω).

332
12
Stochastic Structural Optimization with Quadratic Loss Functions
Therefore, problem (12.41) is equivalent to 
min Underscript x element of upper D Endscripts upper E left parenthesis upper G 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis plus min Underscript upper C upper F equals upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Endscripts upper G 1 left parenthesis a left parenthesis omega right parenthesis comma x semicolon upper F right parenthesis right parenthesis period min
x∈D E
(
G0(a(ω), x) +
min
C F=P(a(ω),x) G1(a(ω), x; F)
)
.
(12.42) 
According to the deﬁnitions (12.35d) ofModifyingAbove upper G 0 With quotation dashG0 and (12.25b) ofModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dashG∗
1, problem (12.42) 
can be represented also by 
min Underscript x element of upper D Endscripts left parenthesis ModifyingAbove upper G 0 With quotation dash left parenthesis x right parenthesis plus ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis right parenthesis period min
x∈D
(
G0(x) + G∗
1(x)
)
.
(12.43) 
12.5 
Stochastic Nonlinear Programming 
We ﬁrst suppose that the structure consists of a uniform material with a symmetric 
random yield stress in compression and tension. Hence, we assume next to 
sigma Subscript y i Superscript upper U Baseline equals minus sigma Subscript y i Superscript upper L Baseline equals sigma Subscript y Superscript upper U Baseline equals sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis comma i equals 1 comma ellipsis comma upper B commaσ U
yi = −σ L
yi = σ U
y = σ U
y (ω),
i = 1, . . . , B,
(12.44) 
with a random yield stress sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesisσ U
y (ω). Due  to  (12.8e) we have  
StartLayout 1st Row 1st Column rho Subscript i Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals upper A Subscript i Baseline left parenthesis sigma Subscript y i Superscript upper U Baseline comma sigma Subscript y i Superscript upper U Baseline ModifyingAbove y With quotation dash Subscript i c Baseline comma sigma Subscript y i Superscript upper U Baseline ModifyingAbove y With quotation dash Subscript i c Baseline comma sigma Subscript y i Superscript upper U Baseline h 4 eta Subscript i Baseline comma ellipsis comma sigma Subscript y i Superscript upper U Baseline h Subscript l 0 plus 3 Baseline eta Subscript i Baseline right parenthesis Superscript upper T Baseline 2nd Row 1st Column Blank 2nd Column equals sigma Subscript y Superscript upper U Baseline upper A Subscript i Baseline left parenthesis 1 comma ModifyingAbove y With quotation dash Subscript i c Baseline comma ModifyingAbove y With quotation dash Subscript i c Baseline comma h 4 eta Subscript i Baseline comma ellipsis comma h Subscript l 0 plus 3 Baseline eta Subscript i Baseline right parenthesis Superscript upper T Baseline colon equals sigma Subscript y Superscript upper U Baseline ModifyingAbove rho With ring above Subscript i Baseline left parenthesis x right parenthesis EndLayout i
(
a(ω), x
)
= Ai(σ U
yi , σ U
yi yic, σ U
yi yic, σ U
yi h4ηi, . . . , σ U
yi hl0+3ηi)T
= σ U
y Ai(1, yic, yic, h4ηi, . . . , hl0+3ηi)T := σ U
y ˚ i(x)
(12.45a) 
and therefore, see (12.8d), 
rho left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis ModifyingAbove rho With ring above left parenthesis x right parenthesis 
(
a(ω), x
)
= σ U
y (ω)˚ (x)
(12.45b) 
with ModifyingAbove rho With ring above Subscript i Baseline left parenthesis x right parenthesis colon equals upper A Subscript i Baseline left parenthesis 1 comma ModifyingAbove y With quotation dash Subscript i c Baseline comma ModifyingAbove y With quotation dash Subscript i c Baseline comma h 4 eta Subscript i Baseline comma ellipsis comma h Subscript l 0 plus 3 Baseline eta Subscript i Baseline right parenthesis Superscript upper T Baseline comma eta Subscript i Baseline colon equals min left brace StartFraction 1 Over upper N Subscript i Baseline 0 Baseline EndFraction comma StartFraction ModifyingAbove y With quotation dash Subscript i c Baseline Over upper M Subscript i Baseline 0 Baseline EndFraction right brace˚ i(x) := Ai(1, yic, yic, h4ηi, . . . , hl0+3ηi)T , ηi := min
 1
Ni0
, yic
Mi0
 
and 
ModifyingAbove rho With ring above left parenthesis x right parenthesis equals Start 3 By 1 Matrix 1st Row ModifyingAbove rho With ring above Subscript 1 Baseline left parenthesis x right parenthesis 2nd Row vertical ellipsis 3rd Row ModifyingAbove rho With ring above Subscript upper B Baseline left parenthesis x right parenthesis EndMatrix period˚ (x) =
⎛
⎜⎝
˚ 1(x)
...
˚ B(x)
⎞
⎟⎠.
(12.45c) 
According to (12.30a), (12.30b), for ﬁxed weight matricesupper W Subscript i Baseline 0 Baseline comma i equals 1 comma ellipsis comma upper BWi0, i = 1, . . . , B, we  
obtain 
upper K left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals upper C upper K 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper C Superscript upper TK
(
a(ω), x
)
= CK0
(
a(ω), x
)
CT
(12.46a) 
with

12.5 Stochastic Nonlinear Programming
333
StartLayout 1st Row 1st Column upper K 0 left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals left parenthesis upper H Superscript upper T Baseline rho Subscript d Superscript negative 1 Baseline upper W 0 Superscript upper T Baseline upper W 0 rho Subscript d Superscript negative 1 Baseline upper H right parenthesis Superscript negative 1 Baseline 2nd Row 1st Column Blank 2nd Column equals sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared ModifyingAbove upper K With ring above Subscript 0 Baseline left parenthesis x right parenthesis comma EndLayoutK0
(
a(ω), x
)
= (H T  −1
d W T
0 W0 −1
d H)−1
= σ U
y (ω)2 ˚K0(x),
(12.46b) 
where 
ModifyingAbove upper K With ring above Subscript 0 Baseline left parenthesis x right parenthesis colon equals left parenthesis upper H Superscript upper T Baseline ModifyingAbove rho With ring above left parenthesis x right parenthesis Subscript d Superscript negative 1 Baseline upper W 0 Superscript upper T Baseline upper W 0 ModifyingAbove rho With ring above left parenthesis x right parenthesis Subscript d Superscript negative 1 Baseline upper H right parenthesis Superscript negative 1 Baseline period ˚K0(x) :=
(
H T ˚ (x)−1
d W T
0 W0 ˚ (x)−1
d H
)−1.
(12.46c) 
Now, (12.30a), (12.30b), and (12.46a)–(12.46c) yield 
upper K left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared upper C ModifyingAbove upper K With ring above Subscript 0 Baseline left parenthesis x right parenthesis upper C Superscript upper T Baseline equals sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared ModifyingAbove upper K With ring above left parenthesis x right parenthesisK
(
a(ω), x
)
= σ U
y (ω)2 C ˚K0(x)CT = σ U
y (ω)2 ˚K(x)
(12.47a) 
with the deterministic matrix 
ModifyingAbove upper K With ring above left parenthesis x right parenthesis colon equals upper C ModifyingAbove upper K With ring above Subscript 0 Baseline left parenthesis x right parenthesis upper C Superscript upper T Baseline period ˚K(x) := C ˚K0(x)CT .
(12.47b) 
Moreover, we get 
StartLayout 1st Row 1st Column upper U left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column colon equals upper K left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript negative 1 Baseline equals left parenthesis sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared ModifyingAbove upper K With ring above left parenthesis x right parenthesis right parenthesis Superscript negative 1 Baseline 2nd Row 1st Column Blank 2nd Column equals StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline period EndLayoutU
(
a(ω), x
)
:= K
(
a(ω), x
)−1 =
(
σ U
y (ω)2 ˚K(x)
)−1
=
1
σ U
y (ω)2 ˚K(x)−1.
(12.47c) 
Hence, see (12.29d), 
ModifyingAbove upper U With quotation dash left parenthesis x right parenthesis equals upper E upper U left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals left parenthesis upper E StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline periodU(x) = EU
(
a(ω), x
)
=
(
E
1
σ U
y (ω)2
)
˚K(x)−1.
(12.47d) 
In case of a random weight matrix upper W 0 equals upper W 0 left parenthesis a left parenthesis omega right parenthesis right parenthesisW0 = W0
(
a(ω)
)
, for  ModifyingAbove upper U With quotation dash left parenthesis x right parenthesisU(x) we also obtain a 
representation of the type (12.47d), provided that i) the random variablesupper W 0 left parenthesis a left parenthesis omega right parenthesis right parenthesisW0
(
a(ω)
)
and sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesisσ U
y (ω) are stochastically independent and ii) ModifyingAbove upper K With ring above left parenthesis x right parenthesis ˚K(x) is deﬁned by 
ModifyingAbove upper K With ring above left parenthesis x right parenthesis colon equals left parenthesis upper E left parenthesis upper C ModifyingAbove upper K With ring above Subscript 0 Baseline left parenthesis upper W left parenthesis a left parenthesis omega right parenthesis right parenthesis comma x right parenthesis upper C Superscript upper T Baseline right parenthesis Superscript negative 1 Baseline right parenthesis Superscript negative 1 Baseline period ˚K(x) :=
(
E
(
C ˚K0
(
W
(
a(ω)
)
, x
)
CT
)−1)−1
.
From (12.29c) we obtain 
StartLayout 1st Row 1st Column ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis 2nd Column equals upper E upper G 1 Superscript asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 2nd Column equals t r ModifyingAbove upper U With quotation dash left parenthesis x right parenthesis upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline 3rd Row 1st Column Blank 2nd Column equals left parenthesis upper E StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis t r ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline period EndLayout
G∗
1(x) = EG∗
1
(
a(ω), x
)
= trU(x)E P
(
a(ω), x
)
P
(
a(ω), x
)T
=
(
E
1
σ U
y (ω)2
)
tr ˚K(x)−1E P
(
a(ω), x
)
P
(
a(ω), x
)T .
(12.48) 
Representing the m times mm × m matrix

334
12
Stochastic Structural Optimization with Quadratic Loss Functions
StartLayout 1st Row 1st Column upper B left parenthesis x right parenthesis 2nd Column colon equals upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis x right parenthesis Superscript upper T 2nd Row 1st Column Blank 2nd Column equals ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis Superscript upper T Baseline plus c o v left parenthesis upper P left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column equals left parenthesis b 1 left parenthesis x right parenthesis comma b 2 left parenthesis x right parenthesis comma ellipsis comma b Subscript m Baseline left parenthesis x right parenthesis right parenthesis EndLayoutB(x) := E P
(
a(ω), x
)
P
(
a(ω)x
)T
= P(x)P(x)T + cov
(
P
(
a(·), x
))
=
(
b1(x), b2(x), . . . , bm(x)
)
(12.49a) 
by its columns b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma mb j(x), j = 1, . . . , m, where we still set 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis colon equals upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column c o v left parenthesis upper P left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis right parenthesis colon equals upper E left parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis right parenthesis left parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis right parenthesis Superscript upper T Baseline comma EndLayoutP(x) := E P
(
a(ω), x
)
(12.49b) 
StartLayout 1st Row 1st Column Blank 2nd Column ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis colon equals upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column c o v left parenthesis upper P left parenthesis a left parenthesis dot right parenthesis comma x right parenthesis right parenthesis colon equals upper E left parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis right parenthesis left parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis minus ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis right parenthesis Superscript upper T Baseline comma EndLayoutcov
(
P
(
a(·), x
))
:= E
(
P
(
a(ω), x
)
−P(x)
)(
P
(
a(ω), x
)
−P(x)
)T
,
(12.49c) 
we ﬁnd 
StartLayout 1st Row 1st Column upper Z left parenthesis x right parenthesis 2nd Column equals left parenthesis z 1 comma z 2 comma ellipsis comma z Subscript m Baseline right parenthesis colon equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline upper B left parenthesis x right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis left parenthesis ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline b 1 left parenthesis x right parenthesis comma ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline b 2 left parenthesis x right parenthesis comma ellipsis comma ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline b Subscript m Baseline left parenthesis x right parenthesis right parenthesis period EndLayoutZ(x) = (z1, z2, . . . , zm) := E
(
1
σ U
y (ω)2
)
˚K(x)−1B(x)
= E
(
1
σ U
y (ω)2
)
( ˚K(x)−1b1(x), ˚K(x)−1b2(x), . . . , ˚K(x)−1bm(x)
)
. (12.49d) 
However, (12.49d) is equivalent to the following equations for the columns z Subscript j Baseline comma j equals 1 comma ellipsis comma upper Bz j, j =
1, . . . , B, 
ModifyingAbove upper K With ring above left parenthesis x right parenthesis z Subscript j Baseline equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma m period ˚K(x)z j = E
(
1
σ U
y (ω)2
)
b j(x),
j = 1, . . . , m.
(12.50) 
With equations (12.50) for  z Subscript j Baseline comma j equals 1 comma ellipsis comma mz j, j = 1, . . . , m, the expected cost function ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesisG∗
1(x) can 
be represented now by 
ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesis equals t r left parenthesis z 1 comma z 2 comma ellipsis comma z Subscript m Baseline right parenthesis periodG∗
1(x) = tr(z1, z2, . . . , zm).
(12.51) 
Having (12.50), (12.51), the deterministic substitute problems (12.35a)–(12.35d) 
and (12.43) can be represented as follows: 
Theorem 12.2 (Expected cost-based optimization (ECBO)) Suppose that upper W Subscript i Baseline 0 Baseline comma i equals 1 comma ellipsis comma upper BWi0, i =
1, . . . , B, are given ﬁxed weight matrices. Then the expected cost-based optimization 
problem (12.35a)–(12.35c) can be represented by 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G With quotation dash Subscript 0 Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column t r left parenthesis z 1 comma z 2 comma ellipsis comma z Subscript m Baseline right parenthesis less than or equals normal upper Gamma 1 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove upper K With ring above left parenthesis x right parenthesis z Subscript j Baseline equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma m 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D comma EndLayout min G0(x)
(12.52a) 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G With quotation dash Subscript 0 Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column t r left parenthesis z 1 comma z 2 comma ellipsis comma z Subscript m Baseline right parenthesis less than or equals normal upper Gamma 1 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove upper K With ring above left parenthesis x right parenthesis z Subscript j Baseline equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma m 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D comma EndLayouts.t.
tr(z1, z2, . . . , zm) ≤ 1
(12.52b) 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G With quotation dash Subscript 0 Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column t r left parenthesis z 1 comma z 2 comma ellipsis comma z Subscript m Baseline right parenthesis less than or equals normal upper Gamma 1 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove upper K With ring above left parenthesis x right parenthesis z Subscript j Baseline equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma m 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D comma EndLayout ˚K(x)z j = E
(
1
σ U
y (ω)2
)
b j(x),
j = 1, . . . , m
(12.52c) 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G With quotation dash Subscript 0 Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column t r left parenthesis z 1 comma z 2 comma ellipsis comma z Subscript m Baseline right parenthesis less than or equals normal upper Gamma 1 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column ModifyingAbove upper K With ring above left parenthesis x right parenthesis z Subscript j Baseline equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma m 7th Row 1st Column Blank 8th Row 1st Column Blank 2nd Column x element of upper D comma EndLayoutx ∈D,
(12.52d) 
where the vectors b Subscript j Baseline equals b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma mb j = b j(x), j = 1, . . . , m, are given by (12.49a).

12.5 Stochastic Nonlinear Programming
335
Obviously, (12.52a)–(12.52d) is an ordinary deterministic parameter optimization 
problem having the additional auxiliary variables z Subscript j Baseline element of double struck upper R Superscript m Baseline comma j equals 1 comma ellipsis comma mz j ∈Rm, j = 1, . . . , m. In many  
important cases the external generalized forces upper P equals upper P left parenthesis a left parenthesis omega right parenthesis right parenthesisP = P
(
a(ω)
)
does not depend on 
the design vector xx. In this case b 1 comma b 2 comma ellipsis comma b Subscript m Baselineb1, b2, . . . , bm are the ﬁxed columns of the matrix 
upper B equals upper E upper P left parenthesis a left parenthesis omega right parenthesis right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis right parenthesis Superscript upper TB = E P
(
a(ω)
)
P
(
a(ω)
)T of second-order moments of the random vector of external 
generalized forces upper P equals upper P left parenthesis a left parenthesis omega right parenthesis right parenthesisP = P
(
a(ω)
)
, see  (12.49a)–(12.49c). 
For the second substitute problem we get this result: 
Theorem 12.3 (Minimum expected costs (MEC)) Suppose thatupper W Subscript 0 i Baseline comma i equals 1 comma ellipsis comma upper BW0i, i = 1, . . . , B, 
are given ﬁxed weight matrices. Then the minimum expected cost problem (12.43) 
can be represented by 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G With quotation dash Subscript 0 Baseline left parenthesis x right parenthesis plus t r left parenthesis z 1 comma z 2 comma ellipsis comma z Subscript m Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove upper K With ring above left parenthesis x right parenthesis z Subscript j Baseline equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma m 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayout min G0(x) + tr(z1, z2, . . . , zm)
(12.53a) 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G With quotation dash Subscript 0 Baseline left parenthesis x right parenthesis plus t r left parenthesis z 1 comma z 2 comma ellipsis comma z Subscript m Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove upper K With ring above left parenthesis x right parenthesis z Subscript j Baseline equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma m 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayouts.t.
˚K(x)z j = E
(
1
σ U
y (ω)2
)
b j(x),
j = 1, . . . , m
(12.53b) 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove upper G With quotation dash Subscript 0 Baseline left parenthesis x right parenthesis plus t r left parenthesis z 1 comma z 2 comma ellipsis comma z Subscript m Baseline right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column Blank 4th Row 1st Column Blank 2nd Column ModifyingAbove upper K With ring above left parenthesis x right parenthesis z Subscript j Baseline equals upper E left parenthesis StartFraction 1 Over sigma Subscript y Superscript upper U Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma m 5th Row 1st Column Blank 6th Row 1st Column Blank 2nd Column x element of upper D period EndLayoutx ∈D.
(12.53c) 
Remark 12.2 According to (12.47b) and (12.46c), the matrixModifyingAbove upper K With tilde equals ModifyingAbove upper K With tilde left parenthesis x right parenthesis ˜K = ˜K(x) is a simple 
function of the design vector xx. 
12.5.1 
Symmetric, Non-uniform Yield Stresses 
If a representation of 
upper U left parenthesis x right parenthesis equals upper E upper U left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals upper E upper K left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript negative 1 Baseline equals beta left parenthesis omega right parenthesis ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline commaU(x) = EU
(
a(ω), x
)
= E K
(
a(ω), x
)−1 = β(ω) ˚K(x)−1,
see (12.29d), (12.30a), (12.30b), of the type (12.47d) does not hold, then we may 
apply the approximative procedure described in the following. 
First, the probability distribution upper P Subscript a left parenthesis dot right parenthesisPa(·) of the random vector a equals a left parenthesis omega right parenthesisa = a(ω) of model 
parameters is approximated, as far it concerns the subvectora Subscript upper I Baseline equals a Subscript upper I Baseline left parenthesis omega right parenthesisaI = aI(ω) ofa equals a left parenthesis omega right parenthesisa = a(ω)
of model parameters arising in the matrix 
upper K equals upper K left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals upper K left parenthesis a Subscript upper I Baseline left parenthesis omega right parenthesis comma x right parenthesis commaK = K
(
a(ω), x
)
= K
(
aI(ω), x
)
,
by a discrete distribution 
ModifyingAbove upper P With caret Subscript a Sub Subscript upper I Subscript left parenthesis dot right parenthesis Baseline colon equals sigma summation Underscript s equals 1 Overscript upper N Endscripts alpha Subscript s Baseline epsilon Subscript a Sub Subscript upper I Sub Superscript left parenthesis s right parenthesis ˆPaI (·) :=
N
∑
s=1
αsεa(s)
I
(12.54) 
having realizations a Subscript upper I Superscript left parenthesis s right parenthesisa(s)
I
taken with probabilities alpha Subscript s Baseline comma s equals 1 comma ellipsis comma upper Nαs, s = 1, . . . , N.

336
12
Stochastic Structural Optimization with Quadratic Loss Functions
Then, the matrix function upper U equals upper U left parenthesis x right parenthesisU = U(x) can be approximated by 
ModifyingAbove upper U With caret left parenthesis x right parenthesis colon equals sigma summation Underscript s equals 1 Overscript upper N Endscripts alpha Subscript s Baseline upper K Superscript left parenthesis s right parenthesis Baseline left parenthesis x right parenthesis Superscript negative 1 Baseline comma ˆU(x) :=
N
∑
s=1
αs K (s)(x)−1,
(12.55a) 
where 
upper K Superscript left parenthesis s right parenthesis Baseline left parenthesis x right parenthesis colon equals upper K left parenthesis a Subscript upper I Superscript left parenthesis s right parenthesis Baseline comma x right parenthesis equals upper C upper K 0 left parenthesis a Subscript upper I Superscript left parenthesis s right parenthesis Baseline comma x right parenthesis upper C Superscript upper T Baseline commaK (s)(x) := K(a(s)
I , x) = CK0(a(s)
I , x)CT ,
(12.55b) 
see (12.30b). Consequently, the expected cost functionModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash equals ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesisG∗
1 = G∗
1(x) is approximated 
by 
StartLayout 1st Row 1st Column ModifyingAbove Above ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash With caret left parenthesis x right parenthesis 2nd Column colon equals t r ModifyingAbove upper U With caret left parenthesis x right parenthesis upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T 2nd Row 1st Column Blank 2nd Column equals sigma summation Underscript s equals 1 Overscript upper N Endscripts alpha Subscript s Baseline t r upper K Superscript left parenthesis s right parenthesis Baseline left parenthesis x right parenthesis Superscript negative 1 Baseline upper E upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline period EndLayout ˆG∗
1(x) := tr ˆU(x)E P
(
a(ω), x
)
P
(
a(ω), x
)T
=
N
∑
s=1
αstr K (s)(x)−1E P
(
a(ω), x
)
P
(
a(ω), x
)T .
(12.56) 
Corresponding to (12.49d), we now deﬁne the auxiliary matrix variables 
StartLayout 1st Row 1st Column z Superscript left parenthesis s right parenthesis 2nd Column equals left parenthesis z 1 Superscript left parenthesis s right parenthesis Baseline comma z 2 Superscript left parenthesis s right parenthesis Baseline comma ellipsis comma z Subscript m Superscript left parenthesis s right parenthesis Baseline right parenthesis colon equals upper K Superscript left parenthesis s right parenthesis Baseline left parenthesis x right parenthesis Superscript negative 1 Baseline upper B left parenthesis x right parenthesis 2nd Row 1st Column Blank 2nd Column equals left parenthesis upper K Superscript left parenthesis s right parenthesis Baseline left parenthesis x right parenthesis Superscript negative 1 Baseline b 1 left parenthesis x right parenthesis comma upper K Superscript left parenthesis s right parenthesis Baseline left parenthesis x right parenthesis Superscript negative 1 Baseline b 2 left parenthesis x right parenthesis ellipsis comma upper K Superscript left parenthesis s right parenthesis Baseline left parenthesis x right parenthesis Superscript negative 1 Baseline b Subscript m Baseline left parenthesis x right parenthesis right parenthesis comma EndLayoutz(s) = (z(s)
1 , z(s)
2 , . . . , z(s)
m ) := K (s)(x)−1B(x)
=
(
K (s)(x)−1b1(x), K (s)(x)−1b2(x) . . . , K (s)(x)−1bm(x)
)
,
(12.57) 
where upper B equals upper B left parenthesis x right parenthesisB = B(x) is deﬁned again by (12.49a). Thus, for the columns z Subscript j Superscript left parenthesis s right parenthesis Baseline comma j equals 1 comma ellipsis comma mz(s)
j , j =
1, . . . , m, we obtain the conditions 
upper K Superscript left parenthesis s right parenthesis Baseline left parenthesis x right parenthesis z Subscript j Superscript left parenthesis s right parenthesis Baseline equals b Subscript j Baseline left parenthesis x right parenthesis comma j equals 1 comma ellipsis comma m commaK (s)(x)z(s)
j
= b j(x),
j = 1, . . . , m,
(12.58) 
for eachs equals 1 comma ellipsis comma upper Ns = 1, . . . , N. According to (12.56) and (12.60), the approximate expected 
cost function ModifyingAbove Above ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash With caret equals ModifyingAbove Above ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash With caret ˆG∗
1 = ˆG∗
1 reads 
ModifyingAbove Above ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash With caret left parenthesis x right parenthesis equals sigma summation Underscript s equals 1 Overscript upper N Endscripts alpha Subscript s Baseline t r left parenthesis z 1 Superscript left parenthesis s right parenthesis Baseline comma z 2 Superscript left parenthesis s right parenthesis Baseline comma ellipsis comma z Subscript m Superscript left parenthesis s right parenthesis Baseline right parenthesis comma ˆG∗
1(x) =
N
∑
s=1
αstr(z(s)
1 , z(s)
2 , . . . , z(s)
m ),
(12.59) 
where z Subscript j Superscript left parenthesis s right parenthesis Baseline comma j equals 1 comma ellipsis comma m comma s equals 1 comma ellipsis comma upper Nz(s)
j , j = 1, . . . , m, s = 1, . . . , N, are  given by (12.58). 
Because of the close relationship between the representations (12.59) and (12.51) 
for ModifyingAbove Above ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash With caret comma ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash ˆG∗
1, G∗
1, approximate mathematical optimization problems result from (12.59) 
which are similar to (12.52a)–(12.52d), (12.53a)–(12.53c), respectively.

12.5 Stochastic Nonlinear Programming
337
12.5.2 
Non Symmetric Yield Stresses 
In generalization of (12.44), here we suppose 
sigma Subscript y i Superscript upper U Baseline left parenthesis omega right parenthesis equals gamma Subscript i Superscript upper U Baseline sigma Subscript y Baseline left parenthesis omega right parenthesis comma sigma Subscript y i Superscript upper L Baseline left parenthesis omega right parenthesis equals gamma Subscript i Superscript upper L Baseline sigma Subscript y Baseline left parenthesis omega right parenthesis commaσ U
yi (ω) = γ U
i σy(ω), σ L
yi(ω) = γ L
i σy(ω),
(12.60) 
wheresigma Subscript y Baseline equals sigma Subscript y Baseline left parenthesis omega right parenthesis greater than 0σy = σy(ω) > 0 is a nonnegative random variable with a given probability dis-
tribution, and gamma Subscript i Superscript upper U Baseline greater than 0 comma gamma Subscript i Superscript upper L Baseline less than 0 comma i equals 1 comma ellipsis upper Bγ U
i
> 0, γ L
i < 0, i = 1, . . . B, denote given, ﬁxed yield coefﬁcients. 
However, if (12.60) holds, then 
StartFraction sigma Subscript y i Superscript upper U Baseline plus or minus sigma Subscript y i Superscript upper L Baseline Over 2 EndFraction equals sigma Subscript y Baseline StartFraction gamma Subscript i Superscript upper U Baseline plus or minus gamma Subscript i Superscript upper L Baseline Over 2 EndFraction
σ U
yi ± σ L
yi
2
= σy
γ U
i
± γ L
i
2
(12.61a) 
and 
StartFraction eta Subscript i Superscript upper U Baseline plus or minus eta Subscript i Superscript upper L Baseline Over 2 EndFraction equals sigma Subscript y Baseline StartFraction ModifyingAbove eta With tilde Subscript i Superscript upper U Baseline left parenthesis x right parenthesis plus or minus ModifyingAbove eta With tilde Subscript i Superscript upper L Baseline left parenthesis x right parenthesis Over 2 EndFraction commaηU
i ± ηL
i
2
= σy
 ηU
i (x) ±  ηL
i (x)
2
,
(12.61b) 
where, cf (12.4b, (12.4c), (12.4g), (12.4h), 
ModifyingAbove eta With tilde Subscript i Superscript normal upper Lamda Baseline left parenthesis x right parenthesis colon equals min left brace StartFraction StartAbsoluteValue gamma Subscript i Superscript normal upper Lamda Baseline EndAbsoluteValue upper A Subscript i Baseline left parenthesis x right parenthesis Over upper N Subscript i Baseline 0 Baseline EndFraction comma StartFraction gamma Subscript i Superscript upper U Baseline upper W Subscript i p l Baseline left parenthesis x right parenthesis Over upper M Subscript i Baseline 0 Baseline EndFraction right brace comma normal upper Lamda equals upper L comma upper U period η∆
i (x) := min
 |γ ∆
i |Ai(x)
Ni0
, γ U
i Wipl(x)
Mi0
 
, ∆= L,U.
(12.61c) 
Corresponding to (12.45a), (12.45b), from (12.8f), (12.8g) we obtain 
StartLayout 1st Row 1st Column upper F Subscript i Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals sigma Subscript y Baseline left parenthesis omega right parenthesis ModifyingAbove upper F With ring above Subscript i Superscript c Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column rho Subscript i Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals sigma Subscript y Baseline left parenthesis omega right parenthesis ModifyingAbove rho With ring above Subscript i Baseline left parenthesis x right parenthesis comma EndLayoutFc
i
(
a(ω), x
)
= σy(ω) ˚Fc
i (x)
(12.62a) 
StartLayout 1st Row 1st Column upper F Subscript i Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals sigma Subscript y Baseline left parenthesis omega right parenthesis ModifyingAbove upper F With ring above Subscript i Superscript c Baseline left parenthesis x right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column rho Subscript i Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals sigma Subscript y Baseline left parenthesis omega right parenthesis ModifyingAbove rho With ring above Subscript i Baseline left parenthesis x right parenthesis comma EndLayout c
i
(
a(ω), x
)
= σy(ω)˚ i(x),
(12.62b) 
where the deterministic functions 
ModifyingAbove upper F With ring above Subscript i Baseline equals ModifyingAbove upper F With ring above Subscript i Superscript c Baseline left parenthesis x right parenthesis comma ModifyingAbove rho With ring above Subscript i Baseline equals ModifyingAbove rho With ring above Subscript i Baseline left parenthesis x right parenthesis ˚Fi = ˚Fc
i (x),
˚ i = ˚ i(x)
(12.62c) 
follow from (12.8f), (12.8g), resp., by inserting formula (12.60) and extracting then 
the random variable sigma left parenthesis omega right parenthesisσ(ω). Because of (12.62a)–(12.62c), the generalized stiffness 
matrix upper K equals upper K left parenthesis a comma x right parenthesisK = K(a, x) can be represented again in the form (12.47a), hence, 
upper K left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals sigma Subscript y Superscript 2 Baseline left parenthesis omega right parenthesis ModifyingAbove upper K With ring above left parenthesis x right parenthesis commaK
(
a(ω), x
)
= σ 2
y (ω) ˚K(x),
(12.63a) 
where the deterministic matrix function ModifyingAbove upper K With ring above equals ModifyingAbove upper K With ring above left parenthesis x right parenthesis ˚K = ˚K(x) is deﬁned corresponding to 
(12.47b). Furthermore, according to (12.21h) and (12.62a), for upper F Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisFc(
a(ω), x
)
we 
have 
upper F Superscript c Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals sigma left parenthesis omega right parenthesis ModifyingAbove upper F With ring above Superscript c Baseline left parenthesis x right parenthesis commaFc(
a(ω), x
)
= σ(ω) ˚Fc(x),
(12.63b)

338
12
Stochastic Structural Optimization with Quadratic Loss Functions
where 
ModifyingAbove upper F With ring above Superscript c Baseline left parenthesis x right parenthesis colon equals left parenthesis ModifyingAbove upper F With ring above Subscript 1 Superscript c Baseline left parenthesis x right parenthesis Superscript upper T Baseline comma ellipsis comma ModifyingAbove upper F With ring above Subscript upper B Superscript c Baseline left parenthesis x right parenthesis Superscript upper T Baseline right parenthesis Superscript upper T Baseline period ˚Fc(x) :=
(
˚Fc
1 (x)T , . . . , ˚Fc
B(x)T )T
.
(12.63c) 
Thus, due to (12.32b), (12.32c), for the vector upper F Superscript c asterisk Baseline equals upper F Superscript c asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisFc∗= Fc∗(
a(ω), x
)
deﬁned by 
(12.32a)–(12.32c) we ﬁnd 
upper F Superscript c asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis equals sigma left parenthesis omega right parenthesis upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesisFc∗(
a(ω), x
)
= σ(ω)Fc∗∗(x)
(12.63d) 
with 
upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis colon equals left parenthesis upper H Superscript upper T Baseline upper H right parenthesis Superscript negative 1 Baseline upper H Superscript upper T Baseline ModifyingAbove upper F With ring above Superscript c Baseline left parenthesis x right parenthesis periodFc∗∗(x) := (H T H)−1H T ˚Fc(x).
(12.63e) 
Inserting now (12.63a), (12.63d) into formula (12.34b), for the (approximate) mini-
mum total costs we ﬁnally have, cf. (12.47c), (12.48), 
StartLayout 1st Row 1st Column upper G 1 Superscript a asterisk Baseline left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis 2nd Column equals StartFraction 1 Over sigma left parenthesis omega right parenthesis squared EndFraction t r ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline left parenthesis sigma left parenthesis omega right parenthesis upper C upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis minus upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis 2nd Row 1st Column Blank 2nd Column times left parenthesis sigma left parenthesis omega right parenthesis upper C upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis minus upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis right parenthesis Superscript upper T 3rd Row 1st Column Blank 2nd Column equals StartFraction 1 Over sigma left parenthesis omega right parenthesis squared EndFraction t r ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline 4th Row 1st Column Blank 2nd Column minus StartFraction 1 Over sigma left parenthesis omega right parenthesis EndFraction t r ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline left parenthesis upper C upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis Superscript upper T Baseline 5th Row 1st Column Blank 2nd Column plus upper P left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis Superscript upper T Baseline upper C Superscript upper T Baseline right parenthesis plus t r ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline upper C upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis Superscript upper T Baseline upper C Superscript upper T Baseline period EndLayoutGa∗
1
(
a(ω), x
)
=
1
σ(ω)2 tr ˚K(x)−1 (
σ(ω)C Fc∗∗(x) −P
(
a(ω), x
))
×
(
σ(ω)C Fc∗∗(x) −P
(
a(ω), x
))T
=
1
σ(ω)2 tr ˚K(x)−1P
(
a(ω), x
)
P
(
a(ω), x
)T
−
1
σ(ω)tr ˚K(x)−1
(
C Fc∗∗(x)P
(
a(ω), x
)T
+P
(
a(ω), x
)
Fc∗∗(x)T CT )
+ tr ˚K(x)−1C Fc∗∗(x)Fc∗∗(x)T CT .
(12.64) 
The minimum expected cost function ModifyingAbove upper G 1 Superscript a asterisk Baseline With quotation dash left parenthesis x right parenthesisGa∗
1 (x) is then given, cf. (12.48), by 
StartLayout 1st Row 1st Column ModifyingAbove upper G 1 Superscript a asterisk Baseline With quotation dash left parenthesis x right parenthesis 2nd Column equals upper E left parenthesis StartFraction 1 Over sigma left parenthesis omega right parenthesis squared EndFraction right parenthesis t r ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline upper B left parenthesis x right parenthesis 2nd Row 1st Column Blank 2nd Column minus upper E left parenthesis StartFraction 1 Over sigma left parenthesis omega right parenthesis EndFraction right parenthesis t r ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline left parenthesis upper C upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis Superscript upper T Baseline plus ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis Superscript upper T Baseline upper C Superscript upper T Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column plus t r ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline upper C upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis Superscript upper T Baseline upper C Superscript upper T Baseline comma EndLayoutGa∗
1 (x) = E
(
1
σ(ω)2
)
tr ˚K(x)−1B(x)
−E
(
1
σ(ω)
)
tr ˚K(x)−1(
C Fc∗∗(x)P(x)T + P(x)Fc∗∗(x)T CT )
+ tr ˚K(x)−1C Fc∗∗(x)Fc∗∗(x)T CT ,
(12.65) 
where ModifyingAbove upper P With quotation dash equals ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis comma upper B equals upper B left parenthesis x right parenthesisP = P(x), B = B(x) are again given by (12.49a), (12.49b). Obviously, also 
in the present more general case ModifyingAbove upper G 1 Superscript a asterisk Baseline With quotation dashGa∗
1 can be represented by 
ModifyingAbove upper G 1 Superscript a asterisk Baseline With quotation dash left parenthesis x right parenthesis equals t r upper Z left parenthesis x right parenthesis commaGa∗
1 (x) = tr Z(x),
(12.66a) 
where the matrix upper Z equals upper Z left parenthesis x right parenthesisZ = Z(x) is given by

12.6 Reliability Analysis
339
StartLayout 1st Row 1st Column upper Z left parenthesis x right parenthesis 2nd Column colon equals ModifyingAbove upper K With ring above left parenthesis x right parenthesis Superscript negative 1 Baseline left parenthesis upper E left parenthesis StartFraction 1 Over sigma Subscript y Baseline left parenthesis omega right parenthesis squared EndFraction right parenthesis upper B left parenthesis x right parenthesis minus upper E left parenthesis StartFraction 1 Over sigma Subscript y Baseline left parenthesis omega right parenthesis EndFraction right parenthesis 2nd Row 1st Column Blank 2nd Column times left parenthesis upper C upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis Superscript upper T Baseline plus ModifyingAbove upper P With quotation dash left parenthesis x right parenthesis upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis Superscript upper T Baseline upper C Superscript upper T Baseline right parenthesis plus upper C upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis upper F Superscript c asterisk asterisk Baseline left parenthesis x right parenthesis Superscript upper T Baseline upper C Superscript upper T Baseline right parenthesis comma EndLayout
Z(x) := ˚K(x)−1
(
E
(
1
σy(ω)2
)
B(x) −E
(
1
σy(ω)
)
×
(
C Fc∗∗(x)P(x)T + P(x)Fc∗∗(x)T CT )
+ C Fc∗∗(x)Fc∗∗(x)T CT
)
,
(12.66b) 
see (12.51). Hence, due to the close relationship between (12.49d), (12.51) and 
(12.66a), (12.66b), the deterministic substitute problems stated in Sect. 12.4 can be 
treated as described in Sect. 12.5.1. 
12.6 
Reliability Analysis 
For the approximate computation of the probability of survival p Subscript s Baseline equals p Subscript s Baseline left parenthesis x right parenthesisps = ps(x) in 
Sect. 12.4.1 a ﬁrst method was presented based on certain probability inequalities. 
In the following subsection we suppose that x equals x 0x = x0 is a ﬁxed design vector, and the 
vector of yield stresses 
sigma Subscript y Baseline equals StartBinomialOrMatrix left parenthesis sigma Subscript y i Superscript upper L Baseline right parenthesis Subscript i equals 1 comma ellipsis comma upper B Baseline Choose left parenthesis sigma Subscript y i Superscript upper U Baseline right parenthesis Subscript i equals 1 comma ellipsis comma upper B Baseline EndBinomialOrMatrix equals sigma Subscript y Baseline 0σy =
((σ L
yi)i=1,...,B
(σ U
yi )i=1,...,B
)
= σy0
is a given deterministic vector of material strength parameters. Moreover, we assume 
that the weight matrix upper W 0W0, cf.  (12.20c), (12.21a)–(12.21c), is ﬁxed. According to 
(12.8f), (12.8g), (12.21h) and (12.30a), (12.30b), the vectors upper F overTilde Superscript c Baseline comma rho overTilde Fc,  and the general-
ized stiffness matrix upper K equals upper K left parenthesis sigma Subscript y Baseline 0 Baseline comma x 0 right parenthesisK = K(σy0, x0) are given, ﬁxed quantities. Hence, in this case 
the cost function 
upper G 1 Superscript asterisk Baseline left parenthesis a comma x right parenthesis equals g 1 Superscript asterisk Baseline left parenthesis upper P right parenthesis colon equals left parenthesis upper C upper F overTilde Superscript c Baseline minus upper P right parenthesis Superscript upper T Baseline upper K Superscript negative 1 Baseline left parenthesis upper C upper F overTilde Superscript c Baseline minus upper P right parenthesis commaG∗
1(a, x) = g∗
1(P) := (C  Fc −P)T K −1(C  Fc −P),
(12.67) 
see (12.28g), is a quadratic, strictly convex function of the mm-vector upper PP of external 
generalized forces. Hence, the condition upper G 1 Superscript asterisk Baseline left parenthesis a comma x 0 right parenthesis less than or equals g 1G∗
1(a, x0) ≤g1, see  (12.37a), (12.37b), or 
g 1 Superscript asterisk Baseline left parenthesis upper P right parenthesis less than or equals g 1g∗
1(P) ≤g1
(12.68a) 
describes an ellipsoid in the space double struck upper R Superscript mRm of generalized forces. 
In case of normal distributed external generalized forces upper P equals upper P left parenthesis omega right parenthesisP = P(ω), the  
probability 
StartLayout 1st Row 1st Column p Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis 2nd Column colon equals upper P left parenthesis upper G 1 Superscript asterisk Baseline left parenthesis sigma Subscript y Baseline 0 Baseline comma upper P left parenthesis omega right parenthesis comma x 0 right parenthesis less than or equals g 1 right parenthesis 2nd Row 1st Column Blank 2nd Column equals upper P left parenthesis g 1 Superscript asterisk Baseline left parenthesis upper P left parenthesis omega right parenthesis right parenthesis less than or equals g 1 right parenthesis EndLayoutps(x0; g1) := P
(
G∗
1
(
σy0, P(ω), x0
)
≤g1
)
= P
(
g∗
1
(
P(ω)
)
≤g1
)
(12.68b)

340
12
Stochastic Structural Optimization with Quadratic Loss Functions
can be determined approximatively by means of linearization 
g 1 Superscript asterisk Baseline left parenthesis upper P right parenthesis equals g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis plus nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline left parenthesis upper P minus upper P Superscript asterisk Baseline right parenthesis plus midline horizontal ellipsisg∗
1(P) = g∗
1(P∗) + ∇Pg∗
1(P∗)T (P −P∗) + · · ·
(12.69) 
at a so-called design point upper P Superscript asteriskP∗, see  [  2, 3, 9]. Since g 1 Superscript asterisk Baseline equals g 1 Superscript asterisk Baseline left parenthesis upper P right parenthesisg∗
1 = g∗
1(P) is convex, we have 
g 1 Superscript asterisk Baseline left parenthesis upper P right parenthesis greater than or equals g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis plus nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline left parenthesis upper P minus upper P Superscript asterisk Baseline right parenthesis comma upper P element of double struck upper R Superscript m Baseline commag∗
1(P) ≥g∗
1(P∗) + ∇Pg∗
1(P∗)T (P −P∗), P ∈Rm,
(12.70a) 
and p Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesisps(x0; g1) can be approximated from above by 
StartLayout 1st Row 1st Column ModifyingAbove p With tilde Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis 2nd Column colon equals upper P left parenthesis g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis plus nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline left parenthesis upper P left parenthesis omega right parenthesis minus upper P Superscript asterisk Baseline right parenthesis less than or equals g 1 right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column equals upper P left parenthesis nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline upper P left parenthesis omega right parenthesis less than or equals g 1 minus g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis plus nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline upper P Superscript asterisk Baseline right parenthesis 4th Row 1st Column Blank 2nd Column equals normal upper Phi left parenthesis StartFraction g 1 minus g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis plus nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline left parenthesis upper P Superscript asterisk Baseline minus ModifyingAbove upper P With quotation dash right parenthesis Over StartRoot nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline c o v left parenthesis upper P left parenthesis dot right parenthesis right parenthesis nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis EndRoot EndFraction right parenthesis comma EndLayout ˜ps(x0; g1) := P
(
g∗
1(P∗) + ∇Pg∗
1(P∗)T (
P(ω) −P∗)
≤g1
)
(12.70b) 
StartLayout 1st Row 1st Column ModifyingAbove p With tilde Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis 2nd Column colon equals upper P left parenthesis g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis plus nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline left parenthesis upper P left parenthesis omega right parenthesis minus upper P Superscript asterisk Baseline right parenthesis less than or equals g 1 right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column Blank 2nd Column equals upper P left parenthesis nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline upper P left parenthesis omega right parenthesis less than or equals g 1 minus g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis plus nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline upper P Superscript asterisk Baseline right parenthesis 4th Row 1st Column Blank 2nd Column equals normal upper Phi left parenthesis StartFraction g 1 minus g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis plus nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline left parenthesis upper P Superscript asterisk Baseline minus ModifyingAbove upper P With quotation dash right parenthesis Over StartRoot nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline c o v left parenthesis upper P left parenthesis dot right parenthesis right parenthesis nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis EndRoot EndFraction right parenthesis comma EndLayout = P
(
∇Pg∗
1(P∗)T P(ω) ≤g1 −g∗
1(P∗) + ∇Pg∗
1(P∗)T P∗)
= Φ
⎛
⎜⎜⎝
g1 −g∗
1(P∗) + ∇Pg∗
1(P∗)T (P∗−P)
/
∇Pg∗
1(P∗)T cov
(
P(·)
)
∇Pg∗
1(P∗)
⎞
⎟⎟⎠,
(12.70c) 
where normal upper PhiΦ denotes the distribution function of the upper N left parenthesis 0 comma 1 right parenthesisN(0, 1)-normal distribution, 
covleft parenthesis upper P left parenthesis dot right parenthesis right parenthesis
(
P(·)
)
denotes the covariance matrix ofupper P equals upper P left parenthesis omega right parenthesisP = P(ω), and the gradientnabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis∇Pg∗
1(P∗)
reads 
nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis equals minus 2 upper K Superscript negative 1 Baseline left parenthesis upper C upper F overTilde Superscript c Baseline minus upper P Superscript asterisk Baseline right parenthesis period∇Pg∗
1(P∗) = −2K −1(C  Fc −P∗).
(12.70d) 
Moreover, 
ModifyingAbove upper P With quotation dash colon equals upper E upper P left parenthesis omega right parenthesisP := E P(ω)
(12.70e) 
denotes the mean of the external vector of generalized forcesupper P equals upper P left parenthesis omega right parenthesisP = P(ω). In practice, 
the following two cases are taken into account [ 2, 3, 9]: 
Case 1: Linearization at upper P Superscript asterisk Baseline colon equals ModifyingAbove upper P With quotation dashP∗:= P
Under the above assumptions in this case we have 
ModifyingAbove p With tilde Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis equals normal upper Phi left parenthesis StartFraction g 1 minus g 1 Superscript asterisk Baseline left parenthesis ModifyingAbove upper P With quotation dash right parenthesis Over StartRoot nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis ModifyingAbove upper P With quotation dash right parenthesis Superscript upper T Baseline c o v left parenthesis upper P left parenthesis dot right parenthesis right parenthesis nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis ModifyingAbove upper P With quotation dash right parenthesis EndRoot EndFraction right parenthesis greater than or equals p Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis period ˜ps(x0; g1) = Φ
⎛
⎜⎜⎝
g1 −g∗
1(P)
/
∇Pg∗
1(P)T cov
(
P(·)
)
∇Pg∗
1(P)
⎞
⎟⎟⎠≥ps(x0; g1).
(12.71) 
Case 2: Linearization at a boundary point upper P Superscript asteriskP∗of left bracket g 1 Superscript asterisk Baseline left parenthesis upper P right parenthesis less than or equals g 1 right bracket[g∗
1(P) ≤g1]
Here it is g 1 left parenthesis upper P Superscript asterisk Baseline right parenthesis equals g 1g1(P∗) = g1 and therefore

12.6 Reliability Analysis
341
ModifyingAbove p With tilde Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis equals normal upper Phi left parenthesis StartFraction nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline left parenthesis upper P Superscript asterisk Baseline minus ModifyingAbove upper P With quotation dash right parenthesis Over StartRoot nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis Superscript upper T Baseline c o v left parenthesis upper P left parenthesis dot right parenthesis right parenthesis nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis EndRoot EndFraction right parenthesis period ˜ps(x0; g1) = Φ
⎛
⎜⎜⎝
∇Pg∗
1(P∗)T (P∗−P)
/
∇Pg∗
1(P∗)T cov
(
P(·)
)
∇Pg∗
1(P∗)
⎞
⎟⎟⎠.
(12.72) 
Because of (12.70a), for each boundary point upper P Superscript asteriskP∗we have again 
p Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis less than or equals ModifyingAbove p With tilde Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis periodps(x0; g1) ≤˜ps(x0; g1).
(12.73) 
Boundary pointsupper P Superscript asteriskP∗of the ellipsoidleft bracket g 1 Superscript asterisk Baseline left parenthesis upper P right parenthesis less than or equals g 1 right bracket
[
g∗
1(P) ≤g1
]
can be determined by minimizing 
a linear formc Superscript upper T Baseline upper PcT P onleft bracket g 1 Superscript asterisk Baseline left parenthesis upper P right parenthesis less than or equals g 1 right bracket
[
g∗
1(P) ≤g1
]
. Thus, we consider [ 7] the convex minimization 
problem 
min Underscript left parenthesis upper C upper F overTilde Superscript c Baseline minus upper P right parenthesis Superscript upper T Baseline upper K Superscript negative 1 Baseline left parenthesis upper C upper F overTilde Superscript c Baseline minus upper P right parenthesis less than or equals g 1 Endscripts c Superscript upper T Baseline upper P comma
min
(C  Fc−P)T K −1(C  Fc−P)≤g1
cT P,
(12.74) 
where cc is a given, ﬁxed mm-vector. 
By means of Lagrange techniques we obtain this result. 
Theorem 12.4 For each vector c not equals 0c /= 0 the unique minimum point of (12.74) reads 
upper P Superscript asterisk Baseline equals upper C upper F overTilde Superscript c Baseline minus StartRoot StartFraction g 1 Over c Superscript upper T Baseline upper K c EndFraction EndRoot upper K c periodP∗= C  Fc −
/
g1
cT Kc Kc.
(12.75a) 
The gradient of g 1 Superscript asterisk Baseline equals g 1 Superscript asterisk Baseline left parenthesis upper P right parenthesisg∗
1 = g∗
1(P) at upper P Superscript asteriskP∗is then given by 
nabla Subscript upper P Baseline g 1 Superscript asterisk Baseline left parenthesis upper P Superscript asterisk Baseline right parenthesis equals minus 2 StartRoot StartFraction g 1 Over c Superscript upper T Baseline upper K c EndFraction EndRoot c period∇Pg∗
1(P∗) = −2
/
g1
cT Kcc.
(12.75b) 
Consequently, for the quotient qq arising in formula (12.72) we get 
q equals q left parenthesis c right parenthesis colon equals StartFraction StartRoot g 1 EndRoot StartRoot c Superscript upper T Baseline upper K c EndRoot minus c Superscript upper T Baseline left parenthesis upper C upper F overTilde Superscript c Baseline minus ModifyingAbove upper P With quotation dash right parenthesis Over StartRoot c Superscript upper T Baseline c o v left parenthesis upper P left parenthesis dot right parenthesis right parenthesis c EndRoot EndFraction periodq = q(c) :=
√g1
√
cT Kc −cT (C  Fc −P)
/
cT cov
(
P(·)
)
c
.
(12.76a) 
Obviously, this function fulﬁlls the equation 
q left parenthesis lamda c right parenthesis equals q left parenthesis c right parenthesis comma lamda greater than 0 commaq(λc) = q(c), λ > 0,
(12.76b) 
for each mm-vector cc such that c Superscript upper T Baseline c o v left parenthesis upper P left parenthesis dot right parenthesis right parenthesis c not equals 0cT cov
(
P(·)
)
c /= 0. 
Since 
ModifyingAbove p With tilde Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis equals normal upper Phi left parenthesis q left parenthesis c right parenthesis right parenthesis greater than or equals p Subscript s Baseline left parenthesis x 0 semicolon g 1 right parenthesis comma c not equals 0 comma ˜ps(x0; g1) = Φ(q(c)) ≥ps(x0; g1), c /= 0,
(12.77a)

342
12
Stochastic Structural Optimization with Quadratic Loss Functions
see (12.72), (12.73), the best upper boundModifyingAbove p With tilde Subscript s Baseline left parenthesis x 0 comma g 1 right parenthesis ˜ps(x0, g1) can be obtained by solving the 
minimization problem 
min Underscript c not equals 0 Endscripts q left parenthesis c right parenthesis period min
c/=0 q(c).
(12.77b) 
Because of (12.76b), problem (12.77b) is equivalent to the convex optimization 
problem 
min Underscript c Superscript upper T Baseline c o v left parenthesis upper P left parenthesis dot right parenthesis right parenthesis c equals 1 Endscripts StartRoot g 1 EndRoot StartRoot c Superscript upper T Baseline upper K c EndRoot minus c Superscript upper T Baseline left parenthesis upper C upper F overTilde Superscript upper C Baseline minus ModifyingAbove upper P With quotation dash right parenthesis comma
min
cT cov
(
P(·)
)
c=1
√g1
√
cT Kc −cT (C  FC −P),
(12.78) 
provided that covleft parenthesis upper P left parenthesis dot right parenthesis right parenthesis(P(·)) is regular. Representing the covariance matrix ofupper P equals upper P left parenthesis omega right parenthesisP = P(ω)
by 
c o v left parenthesis upper P left parenthesis dot right parenthesis right parenthesis equals upper Q Superscript upper T Baseline upper Qcov
(
P(·)
)
= QT Q
with a regular matrix upper QQ, problem (12.78) can be represented also by 
min Underscript parallel to w parallel to equals 1 Endscripts StartRoot g 1 EndRoot StartRoot w Superscript upper T Baseline upper Q Superscript minus 1 upper T Baseline upper K upper Q Superscript negative 1 Baseline w EndRoot minus w Superscript upper T Baseline upper Q Superscript minus 1 upper T Baseline left parenthesis upper C upper F overTilde Superscript c Baseline minus ModifyingAbove upper P With quotation dash right parenthesis period min
||w||=1
√g1
√
wT Q−1T K Q−1w −wT Q−1T (C  Fc −P).
(12.79) 
12.7 
Numerical Example: 12-Bar Truss 
The new approach for the optimal design of elastoplastic mechanical structures under 
stochastic uncertainty is illustrated now by means of the 12-bar truss according to 
Fig. 12.2. 
Suppose that upper L equals 1000 normal m normal m comma upper E equals 7200 StartFraction upper N Over m m squared EndFractionL = 1000 mm, E = 7200 N
mm2 is the elasticity modulus, and the 
yield stresses with respect to tension and compression are given by sigma Subscript y Superscript upper U Baseline equals minus sigma Subscript y Superscript upper L Baseline equals sigma Subscript y Baseline equals 216 StartFraction upper N Over m m squared EndFractionσ U
y = −σ L
y =
σy = 216 N
mm2 . Furthermore, assume that the structure is loaded by the deterministic 
force components 
upper P Subscript 1 x Baseline equals upper P Subscript 3 y Baseline equals 10 Superscript 5 Baseline upper NP1x = P3y = 105 N
Fig. 12.2 12-bar truss

12.7 Numerical Example: 12-Bar Truss
343
and the random force component 
upper P Subscript 1 y Baseline approximately equals upper N left parenthesis mu comma sigma squared right parenthesisP1y ∼= N(μ, σ 2)
having a normal distribution with mean muμ and variance sigma squaredσ 2. The standard deviation 
sigmaσ is always 10% of the mean muμ. 
The numerical results presented in this section have been obtained by 
Dipl.Math.oec. Simone Zier, Institute for Mathematics and Computer Applications, 
Federal Armed Forces University, Munich. 
The equilibrium matrix upper CC of the 12-bar truss is given by 
StartLayout 1st Row upper C equals Start 8 By 12 Matrix 1st Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 1.0 5th Column 0 6th Column 0 7th Column 0 8th Column 0 9th Column 0.894427 10th Column 0 11th Column 0 12th Column 0.707107 2nd Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 0 5th Column 1.0 6th Column 0 7th Column 0 8th Column 0 9th Column 0.447214 10th Column 0 11th Column 0 12th Column 0.707107 3rd Row 1st Column 0 2nd Column 1.0 3rd Column 0 4th Column 0 5th Column 0 6th Column 0 7th Column 0 8th Column 0 9th Column 0 10th Column 0.894427 11th Column 0.707107 12th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 0 5th Column negative 1.0 6th Column 0 7th Column 0 8th Column 0 9th Column 0 10th Column negative 0.447214 11th Column negative 0.707107 12th Column 0 5th Row 1st Column 0 2nd Column 0 3rd Column 1.0 4th Column negative 1.0 5th Column 0 6th Column 0 7th Column 0.707107 8th Column 0 9th Column 0 10th Column 0 11th Column negative 0.707107 12th Column 0 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 0 5th Column 0 6th Column 1.0 7th Column 0.707107 8th Column 0 9th Column 0 10th Column 0 11th Column 0.707107 12th Column 0 7th Row 1st Column 1.0 2nd Column negative 1.0 3rd Column 0 4th Column 0 5th Column 0 6th Column 0 7th Column 0 8th Column 0.707107 9th Column 0 10th Column 0 11th Column 0 12th Column negative 0.707107 8th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 0 5th Column 0 6th Column negative 1.0 7th Column 0 8th Column negative 0.707107 9th Column 0 10th Column 0 11th Column 0 12th Column negative 0.707107 EndMatrix period EndLayoutC =
⎛
⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎝
0
0
0
1.0
0
0
0
0
0.894427
0
0
0.707107
0
0
0
0
1.0
0
0
0
0.447214
0
0
0.707107
0
1.0
0
0
0
0
0
0
0
0.894427
0.707107
0
0
0
0
0
−1.0
0
0
0
0
−0.447214 −0.707107
0
0
0
1.0 −1.0
0
0
0.707107
0
0
0
−0.707107
0
0
0
0
0
0
1.0
0.707107
0
0
0
0.707107
0
1.0 −1.0
0
0
0
0
0
0.707107
0
0
0
−0.707107
0
0
0
0
0
−1.0
0
−0.707107
0
0
0
−0.707107
⎞
⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎠
.
(12.80) 
Note that under the above assumptions, condition (12.22b) holds. 
Since in the present case of a truss we have upper H equals upper IH = I (upper B times upper BB × B identity matrix), 
cf. (12.5b) and (12.21h), the matrix upper K 0 equals upper K 0 left parenthesis a comma x right parenthesis equals upper K 0 left parenthesis sigma Subscript y Baseline comma x right parenthesisK0 = K0(a, x) = K0(σy, x), see  (12.30b) and 
(12.46b), is a diagonal matrix represented by 
upper K 0 left parenthesis sigma Subscript comma Baseline x right parenthesis equals d i a g left parenthesis left parenthesis StartFraction rho Subscript i Baseline left parenthesis x right parenthesis Over w Subscript i Superscript 0 Baseline EndFraction right parenthesis squared right parenthesis commaK0(σ,x) = diag
(( i(x)
w0
i
)2)
,
(12.81a) 
cf. (12.30d). Here,w Subscript i Superscript 0w0
i is the element of the1 times 11 × 1 weight matrixupper W Subscript i Baseline 0Wi0, andrho Subscript i Baseline equals rho Subscript i Baseline left parenthesis x right parenthesis i =  i(x)
is deﬁned, cf. (12.7b), by 
rho Subscript i Baseline left parenthesis x right parenthesis equals StartFraction upper F Subscript i Superscript upper U Baseline minus upper F Subscript i Superscript upper L Baseline Over 2 EndFraction equals sigma Subscript y Baseline upper A Subscript i Baseline left parenthesis x right parenthesis comma i equals 1 comma ellipsis comma upper B period i(x) = FU
i −F L
i
2
= σy Ai(x),
i = 1, . . . , B.
(12.81b) 
Deﬁning 
ModifyingAbove w With tilde Subscript i Baseline equals ModifyingAbove w With tilde Subscript i Baseline left parenthesis x right parenthesis colon equals left parenthesis StartFraction rho Subscript i Baseline left parenthesis x right parenthesis Over w Subscript i Superscript 0 Baseline EndFraction right parenthesis squared comma i equals 1 comma ellipsis comma upper B comma ˜wi = ˜wi(x) :=
( i(x)
w0
i
)2
,
i = 1, . . . , B,
(12.81c) 
the generalized stiffness matrix upper K equals upper K left parenthesis sigma Subscript y Baseline comma x right parenthesisK = K(σy, x), see  (12.30a), reads

344
12
Stochastic Structural Optimization with Quadratic Loss Functions
StartLayout 1st Row 1st Column Blank 2nd Column upper K left parenthesis sigma Subscript y Baseline comma x right parenthesis equals upper C upper K 0 left parenthesis sigma Subscript y Baseline comma x right parenthesis upper C Superscript upper T Baseline 2nd Row 1st Column Blank 2nd Column equals StartLayout Enlarged left parenthesis 1st Row 1st Column w overTilde Subscript 4 Baseline plus 0.8 w overTilde Subscript 9 Baseline plus 0.5 w overTilde Subscript 12 Baseline 2nd Column 0.4 w overTilde Subscript 9 Baseline plus 0.5 w overTilde Subscript 12 Baseline 3rd Column 0 4th Column 0 2nd Row 1st Column 0.4 w overTilde Subscript 9 Baseline plus 0.5 w overTilde Subscript 12 Baseline 2nd Column w overTilde Subscript 5 Baseline plus 0.2 w overTilde Subscript 9 Baseline plus 0.5 w overTilde Subscript 12 Baseline 3rd Column 0 4th Column minus w overTilde Subscript 5 Baseline 3rd Row 1st Column 0 2nd Column 0 3rd Column w overTilde Subscript 2 Baseline plus 0.8 w overTilde Subscript 10 Baseline plus 0.5 w overTilde Subscript 11 Baseline 4th Column 0.4 w overTilde Subscript 10 Baseline minus 0.5 w overTilde Subscript 11 Baseline 4th Row 1st Column 0 2nd Column minus w overTilde Subscript 5 Baseline 3rd Column minus 0.4 w overTilde Subscript 10 Baseline minus 0.5 w overTilde Subscript 11 Baseline 4th Column w overTilde Subscript 5 Baseline plus 0.2 w overTilde Subscript 10 Baseline plus 0.5 w overTilde Subscript 11 Baseline 5th Row 1st Column minus w overTilde Subscript 4 Baseline 2nd Column 0 3rd Column minus 0.5 w overTilde Subscript 11 Baseline 4th Column 0.5 w overTilde Subscript 11 Baseline 6th Row 1st Column 0 2nd Column 0 3rd Column 0.5 w overTilde Subscript 11 Baseline 4th Column minus 0.5 w overTilde Subscript 11 Baseline 7th Row 1st Column minus 0.5 w overTilde Subscript 12 Baseline 2nd Column minus 0.5 w overTilde Subscript 12 Baseline 3rd Column minus w overTilde Subscript 2 Baseline 4th Column 0 8th Row 1st Column minus 0.5 w overTilde Subscript 12 Baseline 2nd Column minus 0.5 w overTilde Subscript 12 Baseline 3rd Column 0 4th Column 0 5th Column Blank EndLayout 3rd Row 1st Column Blank 2nd Column StartLayout 1st Row 1st Column minus w overTilde Subscript 4 Baseline 2nd Column 0 3rd Column minus 0.5 w overTilde Subscript 12 Baseline 4th Column minus 0.5 w overTilde Subscript 12 Baseline 2nd Row 1st Column 0 2nd Column 0 3rd Column minus 0.5 w overTilde Subscript 12 Baseline 4th Column minus 0.5 w overTilde Subscript 5 Baseline 3rd Row 1st Column minus 0.5 w overTilde Subscript 11 Baseline 2nd Column 0.5 w overTilde Subscript 11 Baseline 3rd Column minus w overTilde Subscript 2 Baseline 4th Column 0 4th Row 1st Column 0.5 w overTilde Subscript 11 Baseline 2nd Column minus 0.5 w overTilde Subscript 11 Baseline 3rd Column 0 4th Column 0 5th Row 1st Column w overTilde Subscript 3 Baseline plus w overTilde Subscript 4 Baseline plus 0.5 w overTilde Subscript 7 Baseline plus 0.5 w overTilde Subscript 11 Baseline 2nd Column 0.5 w overTilde Subscript 7 Baseline minus 0.5 w overTilde Subscript 11 Baseline 3rd Column 0 4th Column 0 6th Row 1st Column 0.5 w overTilde Subscript 7 Baseline minus 0.5 w overTilde Subscript 11 Baseline 2nd Column w overTilde Subscript 6 Baseline plus 0.5 w overTilde Subscript 7 Baseline plus 0.5 w overTilde Subscript 11 Baseline 3rd Column 0 4th Column minus w overTilde Subscript 6 Baseline 7th Row 1st Column 0 2nd Column 0 3rd Column w overTilde Subscript 1 Baseline plus w overTilde Subscript 2 Baseline plus 0.5 w overTilde Subscript 8 Baseline plus 0.5 w overTilde Subscript 12 Baseline 4th Column minus 0.5 w overTilde Subscript 8 Baseline plus 0.5 w overTilde Subscript 12 Baseline 8th Row 1st Column 0 2nd Column minus w overTilde Subscript 6 Baseline 3rd Column minus 0.5 w overTilde Subscript 8 Baseline plus 0.5 w overTilde Subscript 12 Baseline 4th Column w overTilde Subscript 6 Baseline plus 0.5 w overTilde Subscript 8 Baseline plus 0.5 w overTilde Subscript 12 Baseline EndLayout right parenthesis period EndLayout
K(σy, x) = CK0(σy, x)CT
=
⎛
⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎝
˜w4 + 0.8 ˜w9 + 0.5 ˜w12
0.4 ˜w9 + 0.5 ˜w12
0
0
0.4 ˜w9 + 0.5 ˜w12
˜w5 + 0.2 ˜w9 + 0.5 ˜w12
0
−˜w5
0
0
˜w2 + 0.8 ˜w10 + 0.5 ˜w11
0.4 ˜w10 −0.5 ˜w11
0
−˜w5
−0.4 ˜w10 −0.5 ˜w11
˜w5 + 0.2 ˜w10 + 0.5 ˜w11
−˜w4
0
−0.5 ˜w11
0.5 ˜w11
0
0
0.5 ˜w11
−0.5 ˜w11
−0.5 ˜w12
−0.5 ˜w12
−˜w2
0
−0.5 ˜w12
−0.5 ˜w12
0
0
−˜w4
0
−0.5 ˜w12
−0.5 ˜w12
0
0
−0.5 ˜w12
−0.5 ˜w5
−0.5 ˜w11
0.5 ˜w11
−˜w2
0
0.5 ˜w11
−0.5 ˜w11
0
0
˜w3 + ˜w4 + 0.5 ˜w7 + 0.5 ˜w11
0.5 ˜w7 −0.5 ˜w11
0
0
0.5 ˜w7 −0.5 ˜w11
˜w6 + 0.5 ˜w7 + 0.5 ˜w11
0
−˜w6
0
0
˜w1 + ˜w2 + 0.5 ˜w8 + 0.5 ˜w12
−0.5 ˜w8 + 0.5 ˜w12
0
−˜w6
−0.5 ˜w8 + 0.5 ˜w12
˜w6 + 0.5 ˜w8 + 0.5 ˜w12
⎞
⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎠
.
(12.82) 
12.7.1 
Numerical Results: MEC 
In the present case the cost factors gamma Subscript i Baseline 0γi0 in the primary cost function upper G 0 left parenthesis x right parenthesis equals ModifyingAbove upper G 0 With quotation dash left parenthesis x right parenthesisG0(x) = G0(x), 
cf. (12.1a), are deﬁned by 
gamma Subscript i Baseline 0 Baseline colon equals StartFraction 1 Over upper V 0 EndFraction equals 6 comma 4 dot 10 Superscript negative 4 Baseline left bracket StartFraction 1 Over m m cubed EndFraction right bracketγi0 := 1
V0
= 6, 4 · 10−4
[
1
mm3
]
corresponding to the chosen reference volume upper V 0 equals 1562 comma 5 normal m normal m cubedV0 = 1562, 5 mm3. Thus, the cost 
function 
ModifyingAbove upper G 0 With quotation dash left parenthesis x right parenthesisG0(x) and the recourse cost function 
ModifyingAbove upper G 1 Superscript asterisk Baseline With quotation dash left parenthesis x right parenthesisG∗
1(x) are dimensionless, 
cf. Sect. 4.2. Furthermore, the weight factors in the recourse costsupper G 1 left parenthesis x right parenthesisG1(x) are deﬁned 
by 
w Subscript i Superscript 0 Baseline equals 100 periodw0
i = 100.
In Fig. 12.3a, b the optimal cross-sectional areas upper A Subscript i Superscript asterisk Baseline comma i equals 1 comma ellipsis comma 12A∗
i , i = 1, . . . , 12, and the total 
volume are shown as functions fo the expectation ModifyingAbove upper P With quotation dash Subscript 1 y Baseline equals upper E upper P Subscript 1 y Baseline left parenthesis omega right parenthesisP1y = E P1y(ω) of the random 
force component upper P Subscript 1 y Baseline equals upper P Subscript 1 y Baseline left parenthesis omega right parenthesisP1y = P1y(ω). With increasing expected force ModifyingAbove upper P With quotation dash Subscript 1 yP1y, the cross-
sectional areas of bar 1,3,4,8,12 are increasing too, while the other remain constant 
or are near zero. The resulting optimal design of the truss can be seen in Fig. 12.4. 
Here, bars with cross-sectional areas below upper A Subscript min Baseline equals 100 normal m normal m squaredAmin = 100 mm2 have been deleted. 
In Figs. 12.3a and 12.5a by the symbol “asterisk∗” the almost equal optimal cross-sectional 
areas of bar 8 and 12 are marked.

12.7 Numerical Example: 12-Bar Truss
345
Fig. 12.3 Optimal design using (MEC) 
Fig. 12.4 Optimal 6-bar truss using MEC 
The probability of failure of an (MEC)-optimal truss is always zero showing also 
the robustness of the optimal 6-bar truss according to Fig. 12.4. 
12.7.2 
Numerical Results: ECBO 
The related numerical results obtained for the expected cost-based optimization prob-
lem (ECBO) are presented in Fig. 12.5a–c. Here, the optimal cross-sectional areas, 
the expected minimum volume, and the related probability of failure are represented 
again as functions of the expected formModifyingAbove upper P With quotation dash Subscript 1 yP1y. The resulting optimal design is the same

346
12
Stochastic Structural Optimization with Quadratic Loss Functions
Fig. 12.5 Optimal design using (ECBO) 
as in (MEC), where in this case the probability of failure is also zero, which conﬁrms 
again the robustness of this optimal design. 
References 
1. Bullen, P.: Handbook of Means and Their Inequalities. Kluwer Academic Publishing, Dordrecht 
(2003) 
2. Ditlevsen, O., Madsen, H.: Structural Reliability Methods. Wiley, New York (1996) 
3. Frangopol, D.: Reliability-based optimum structural design. In: Sundararajan, C. (ed.) Proba-
bilistic Structural Mechanics Handbook, pp. 352–387. Chapman & Hall, New York (1995) 
4. Hardy, G., Littlewood, J., Pólya, G.: Inequalities. Cambridge University Press, London (1973) 
5. Kemenjarzh, J.: Limit Analysis of Solids and Structures. CRC Press, Boca Raton (1996) 
6. Marti, K.: Stochastic optimization methods in optimal engineering design under stochastic 
uncertainty. ZAMM 83(11), 1–18 (2003) 
7. Marti, K.: Reliability analysis of technical systems structures by means of polyhedral approx-
imation of the safe unsafe domain. GAMM Mitteilungen 30(2), 211–254 (2007) 
8. Marti, K.: Stochastic Optimization Methods, 2nd edn. Springer, Berlin (2008). https://doi.org/ 
10.1007/978-3-540-79458-5 
9. Schuëller, G., Gasser, M.: Some basic principles of reliability-based optimization (rbo) of 
structure and mechanical components. In: Marti, K., Kall, P. (eds.) Stochastic Programming 
Methods and Technical Applications. Lecture Notes in Economics and Mathematical Systems 
(LNEMS), vol. 458, pp. 80–103. Springer, Berlin (1998) 
10. Spillers, W.: Automated Structural Analysis: An Introduction. Pergamon, New York (1972)

Chapter 13 
Maximum Entropy Techniques 
Abstract Finally, in this chapter the inference and decision strategies applied in 
stochastic optimization methods are considered in more detail: A large number 
of optimization problems arising in engineering, control, and economics can be 
described by the minimization of a certain (cost) functionv equals v left parenthesis a comma x right parenthesisv = v(a, x) depending on 
a random parameter vector a equals a left parenthesis omega right parenthesisa = a(ω) and a decision vector x element of upper Dx ∈D lying in a given 
set upper DD of feasible decision, design or control variables. Hence, in order to get robust 
optimal decisions, i.e., optimal decisions being most insensitive with respect to varia-
tions of the random parameter vectora equals a left parenthesis omega right parenthesisa = a(ω), the original optimization problem is 
replaced by the deterministic substitute problem which consists in the minimization 
of the expected objective function bold upper E v equals bold upper E v left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisEv = Ev(a(ω), x) subject to x element of upper Dx ∈D. Since the 
true probability distributionlamdaλ ofa equals a left parenthesis omega right parenthesisa = a(ω) is not exactly known in practice, one has 
to replace lamdaλ by a certain estimate or guess betaβ. Consequently, one has the following 
inference and decision problem: 
• inference/estimation step 
Determine an estimation betaβ of the true probability distribution lamdaλ of a equals a left parenthesis omega right parenthesisa = a(ω), 
• decision step 
Determine an optimal solution x Superscript asteriskx∗of m i n integral v left parenthesis a left parenthesis omega right parenthesis comma x right parenthesis beta left parenthesis d omega right parenthesis s period t period x element of upper Dmin
{
v(a(ω), x)β(dω) s.t. x ∈D. 
Computing approximation, estimation betaβ of lamdaλ, the criterion for judging an approxi-
mationbetaβ oflamdaλ should be based on its utility for the decision-making process, i.e., one 
should weight the approximation error according to its inﬂuence on decision errors, 
and the decision errors should be weighted in turn according to the loss caused by 
an incorrect decision. 
Based on inferential ideas developed among others by Kerridge, Kullback, in this 
chapter generalized decision-oriented inaccuracy and divergence functions for prob-
ability distributionslamdaλ,betaβ are developed, taking into account that the outcomebetaβ of the 
inferential stage is used in a subsequent (ultimate) decision-making problem mod-
eled by the above-mentioned stochastic optimization problem. In addition, stability 
properties of the inference and decision process 
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9_13 
347

348
13
Maximum Entropy Techniques
lamda long right arrow beta long right arrow x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesisλ −→β −→x ∈D∈(β)
are studied, where upper D Subscript epsilon Baseline left parenthesis beta right parenthesisD∈(β) denotes the set of epsilon minus∈−optimal decisions with respect to 
probability distribution upper P Subscript a left parenthesis dot right parenthesis Baseline equals betaPa(·) = β of the random parameter vector a equals a left parenthesis omega right parenthesisa = a(ω). 
13.1 
Uncertainty Functions Based on Decision Problems 
13.1.1 
Optimal Decisions Based on the Two-Stage Hypothesis 
Finding (Estimation) and Decision-Making Procedure 
According to the considerations in the former chapters, in the following we suppose 
thatv equals v left parenthesis omega comma x right parenthesisv = v(ω, x) denotes the costs or the loss arising in a decision or design problem 
if the action or design x element of upper Dx ∈D is taken, and the elementary event omega overTilde equals omega ˜ω = ω has been 
realized. Note that v equals v left parenthesis omega comma x right parenthesisv = v(ω, x) is an abbreviation for v equals v left parenthesis a left parenthesis omega right parenthesis comma x right parenthesisv = v(a(ω), x), where a left parenthesis omega right parenthesisa(ω)
denotes the vector of all random parameters under consideration. As a deterministic 
substitute for the optimal decision/design problem under stochastic uncertainty 
StartLayout 1st Row m i n i m i z e v left parenthesis omega comma x right parenthesis s period t period x element of upper D EndLayoutminimize v(ω, x)
s.t. x ∈D
(13.1) 
we consider, cf. Chap. 1, the expectation or mean value minimization problem 
StartLayout 1st Row m i n i m i z e v left parenthesis lamda comma x right parenthesis s period t period x element of upper D comma EndLayoutminimize v(λ, x)
s.t. x ∈D,
(13.2a) 
where 
v left parenthesis lamda comma x right parenthesis equals v left parenthesis upper P Subscript omega overTilde Baseline comma x right parenthesis colon equals upper E v left parenthesis omega overTilde comma x right parenthesis equals integral v left parenthesis omega comma x right parenthesis lamda left parenthesis d omega right parenthesis periodv(λ, x) = v(P˜ω, x) := Ev( ˜ω, x) =
{
v(ω, x)λ(dω).
(13.2b) 
Here, “upper EE” denotes the expectation operator, and the probability distribution lamdaλ on 
the measurable spaceleft parenthesis normal upper Omega comma German upper A right parenthesis(Ω, A) denotes the true probability distributionupper P Subscript omega overTilde Baseline colon equals lamdaP˜ω := λ of the 
random elementomegaω. We may assume thatlamdaλ lies in a certain given setnormal upper LamdaɅ of probability 
measures on German upper AA (a priori information about lamdaλ). In the following we suppose that all 
integrals, expectations, probabilities, resp., under consideration exist and are ﬁnite. 
Because in practice also the true probability distribution quotation mark upper P Subscript omega overTilde Baseline equals lamda quotation mark“upper P Subscript omega overTilde Baseline equals lamdaP˜ω = λquotation mark upper P Subscript omega overTilde Baseline equals lamda quotation mark of omegaω is not 
known in general, one works mostly with the following two-step Inference and Deci-
sion Procedure (IDP), according to Fig. 13.1: 
Step I:
Accept the hypothesis quotation mark upper P Subscript omega overTilde Baseline equals beta quotation mark“upper P Subscript omega overTilde Baseline equals betaP˜ω = βquotation mark upper P Subscript omega overTilde Baseline equals beta quotation mark. Hence, work with the hypothesis that 
omega overTilde ˜ω has the distribution betaβ, where betaβ results from a certain estimation or 
hypothesis-ﬁnding procedure (suitable to left parenthesis normal upper Lamda comma upper D comma v right parenthesis(Ʌ, D, v)); 
Step II:
Instead of left parenthesis 1 right parenthesis(1), solve the approximate optimization problem: 
StartLayout 1st Row m i n i m i z e v left parenthesis beta comma x right parenthesis s period t period x element of upper D EndLayoutminimize v(β, x)
s.t. x ∈D
(13.3)

13.1 Uncertainty Functions Based on Decision Problems
349
Fig. 13.1 Inference and Decision Procedure (IDP) 
and take an epsilon minusε−optimal decision x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesisx ∈Dε(β) with an appropriate bound 
epsilon greater than 0ε > 0. Here, the set upper D Subscript epsilon Baseline left parenthesis beta right parenthesisDε(β) of epsilon minusε−optimal decisions is deﬁned by 
upper D Subscript epsilon Baseline left parenthesis beta right parenthesis colon equals StartSet x element of upper D colon v left parenthesis beta comma x right parenthesis less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon EndSet periodDε(β) := {x ∈D : v(β, x) ≤v∗(β) + ε}.
(13.4a) 
Of course, 
upper D 0 left parenthesis beta right parenthesis colon equals StartSet x element of upper D colon v left parenthesis beta comma x right parenthesis equals v Superscript asterisk Baseline left parenthesis beta right parenthesis EndSetD0(β) := {x ∈D : v(β, x) = v∗(β)}
(13.4b) 
denotes the set of optimal solutions of (13.3). Note that in (13.4a), (13.4b) 
we use the minimum value of (13.3): 
v Superscript asterisk Baseline left parenthesis beta right parenthesis colon equals inf left brace v left parenthesis beta comma x right parenthesis colon x element of upper D right brace periodv∗(β) := inf{v(β, x) : x ∈D}.
(13.5) 
Remark 13.1 Hypothesis-ﬁnding in case that there is some a priori information, but 
no sample information omega Superscript upper N Baseline equals left parenthesis omega 1 comma period period period comma omega Subscript upper N Baseline right parenthesisωN = (ω1, ..., ωN) of omega overTilde ˜ω.

350
13
Maximum Entropy Techniques
In the above case a so-callede minuse−estimatebetaβ ofupper P Subscript omega overTildeP˜ω can be applied which is deﬁned 
as follows: 
Deﬁnition 13.1 Lete colon normal upper Lamda times normal upper Lamda right arrow double struck upper Re : Ʌ × Ʌ →R denote a function on the productnormal upper Lamda times normal upper LamdaɅ × Ʌ of the 
given set normal upper LamdaɅ of probability measures—containing the true distribution lamdaλ of omega overTilde ˜ω—such 
that e left parenthesis lamda comma pi right parenthesise(λ, π) can be considered as a measure for the error selecting the distribution 
piπ, while upper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ is the true distribution. An e minuse−estimate of upper P Subscript omega overTildeP˜ω is then a distribution 
beta element of normal upper Lamdaβ ∈Ʌ such that 
StartLayout 1st Row sup Underscript lamda element of normal upper Lamda Endscripts e left parenthesis lamda comma beta right parenthesis equals inf Underscript pi element of normal upper Lamda Endscripts left parenthesis sup Underscript lamda element of normal upper Lamda Endscripts e left parenthesis lamda comma pi right parenthesis right parenthesis period EndLayout sup
λ∈Ʌ
e(λ, β) = inf
π∈Ʌ ( sup
λ∈Ʌ
e(λ, π) ).
(13.6) 
Ife left parenthesis dot comma dot right parenthesise(·, ·) is  a metric onnormal upper LamdaɅ, then thee minuse−estimatebetaβ ofupper P Subscript omega overTildeP˜ω is also called a “Tchebychev-
center” of normal upper LamdaɅ. 
Though in many cases the approximation, estimation betaβ of lamdaλ is computed by 
standard statistical estimation procedures, the criterion for judging an approximation 
betaβ oflamdaλ should be based on its utility for the decision-making process, i.e., one should 
weight the approximation error according to its inﬂuence on decision errors, and 
the decision errors should be weighted in turn according to the loss caused by an 
incorrect decision, cf. [ 12, 15]. A detailed consideration of this concept is given in 
the following. 
In order to study ﬁrst the properties of the above deﬁned 2-step procedure 
(I, II), resulting from using an estimation/approximation of the unknown or only 
partly known parameter distribution, we suppose that the setupper D 0 left parenthesis beta right parenthesisD0(β) of optimal deci-
sions with respect tobetaβ, see  (13.4b), is non empty. Becauseupper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ is the true distri-
bution, according to the 2-step procedureleft parenthesis upper I comma upper I upper I right parenthesis(I, I I) we (I), replacinglamdaλ by its estimatebetaβ, 
and (II) applying then a certainbetaβ-optimal decisionx Subscript beta Baseline element of upper D 0 left parenthesis beta right parenthesisxβ ∈D0(β), we have the expected 
loss v left parenthesis lamda comma x Subscript beta Baseline right parenthesisv(λ, xβ). Consequently, 
upper H 0 left parenthesis lamda comma beta right parenthesis equals sup left brace v left parenthesis lamda comma x right parenthesis colon x element of upper D 0 left parenthesis beta right parenthesis right braceH0(λ, β) = sup{v(λ, x) : x ∈D0(β)}
(13.7) 
denotes therefore the maximum expected loss if upper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ is the true distribution of 
omega overTilde ˜ω, and the decision maker uses a certain betaβ-optimal decision. Because of v left parenthesis lamda comma x right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis comma x element of upper Dv(λ, x) ≥
v∗(λ), x ∈D, cf.  (13.5), we have 
upper H 0 left parenthesis lamda comma beta right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesisH0(λ, β) ≥v∗(λ)
(13.8a) 
and 
v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals upper H 0 left parenthesis lamda comma lamda right parenthesisv∗(λ) = H0(λ, λ)
(13.8b) 
provided that also upper D 0 left parenthesis lamda right parenthesis not equals normal empty setD0(λ) /= ∅. If upper D 0 left parenthesis beta right parenthesis equals StartSet x Subscript beta Superscript asterisk Baseline EndSetD0(β) = {x∗
β}, then 
upper H 0 left parenthesis lamda comma beta right parenthesis equals v left parenthesis lamda comma x Subscript beta Superscript asterisk Baseline right parenthesis periodH0(λ, β) = v(λ, x∗
β).
(13.9)

13.1 Uncertainty Functions Based on Decision Problems
351
In case upper D 0 left parenthesis lamda right parenthesis not equals normal empty setD0(λ) /= ∅, the difference 
upper I 0 left parenthesis lamda comma beta right parenthesis colon equals upper H 0 left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesis minus upper H 0 left parenthesis lamda comma lamda right parenthesisI0(λ, β) := H0(λ, β) −v∗(λ) = H0(λ, β) −H0(λ, λ)
(13.10) 
is the maximum error relative to the decision-making problem left parenthesis normal upper Omega comma upper D comma v right parenthesis(Ω, D, v), if any  
betaβ-optimal decision is applied, whileupper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ is the true distribution ofomega overTilde ˜ω. Obviously, 
upper I 0 left parenthesis lamda comma beta right parenthesis greater than or equals 0 a n d upper I 0 left parenthesis lamda comma beta right parenthesis equals 0 i f beta equals lamda periodI0(λ, β) ≥0 and I0(λ, β) = 0 if β = λ.
(13.11) 
Though, according to the above assumption, problem (13.3) is solvable in principle, 
due to the complexity of mean value minimization problems, we have to conﬁne in 
general with a certain epsilon minusε−optimal solution, hence, with an element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis comma epsilon greater than 0Dε(β), ε >
0. However, applying any decision x Subscript beta Superscript epsilonxε
β of upper D Subscript epsilon Baseline left parenthesis beta right parenthesisDε(β), cf.  (13.4a), we have to face the 
maximum expected loss 
StartLayout 1st Row upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals sup left brace v left parenthesis lamda comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace period EndLayoutHε(λ, β) = sup{v(λ, x) : x ∈Dε(β)}.
(13.12) 
In order to study the function 
epsilon right arrow upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis comma epsilon greater than left parenthesis equals right parenthesis 0 commaε →Hε(λ, β), ε > (=)0,
we introduce still the following notation: 
Deﬁnition 13.2 Let upper VV denote the loss set deﬁned by 
upper V colon equals StartSet v left parenthesis dot comma x right parenthesis colon x element of upper D EndSet periodV := {v(·, x) : x ∈D}.
(13.13a) 
Moreover, corresponding to upper D Subscript epsilon Baseline left parenthesis beta right parenthesisDε(β), the subset upper V Subscript epsilon Baseline left parenthesis beta right parenthesisVε(β) of upper VV is deﬁned by 
upper V Subscript epsilon Baseline left parenthesis beta right parenthesis colon equals StartSet v left parenthesis dot comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis EndSet periodVε(β) := {v(·, x) : x ∈Dε(β)}.
(13.13b) 
Based on the loss setupper VV , the functionsupper H equals upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisH = Hε(λ, β) andv Superscript asterisk Baseline left parenthesis lamda right parenthesisv∗(λ) can be represented 
also as follows: 
StartLayout 1st Row 1st Column upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis 2nd Column equals sup left brace integral v left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis colon v element of upper V Subscript epsilon Baseline left parenthesis beta right parenthesis right brace comma 2nd Row 1st Column Blank 3rd Row 1st Column v Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column colon equals inf left brace integral v left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis colon v element of upper V right brace period EndLayoutHε(λ, β) = sup
{{
v(ω)λ(dω) : v ∈Vε(β)
}
,
(13.13c) 
StartLayout 1st Row 1st Column upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis 2nd Column equals sup left brace integral v left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis colon v element of upper V Subscript epsilon Baseline left parenthesis beta right parenthesis right brace comma 2nd Row 1st Column Blank 3rd Row 1st Column v Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column colon equals inf left brace integral v left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis colon v element of upper V right brace period EndLayoutv∗(λ) := inf
{{
v(ω)λ(dω) : v ∈V
}
.
(13.13d) 
Remark 13.2 According to the above assumptions, the loss set upper VV lies in the space 
upper L 1 left parenthesis normal upper Omega comma German upper A comma pi right parenthesisL1(Ω, A, π) of allpi minusπ−integrable functionsf equals f left parenthesis omega f = f (ω for each probability distribution 
pi equals lamda comma pi equals betaπ = λ, π = β under consideration. 
Remark 13.3 Identifying the decision vector x element of upper Dx ∈D with the related loss function 
v equals v left parenthesis omega comma x right parenthesisv = v(ω, x), the  set  upper DD of decisions can be identiﬁed with the related loss set upper VV . 
Hence, we can consider the loss set upper VV as the generalized admissible set of decision

352
13
Maximum Entropy Techniques
or design vectors. On the other hand, the optimal decision problem under stochastic 
uncertainty can also be described by the setnormal upper OmegaΩ of elementary events and a certain set 
upper VV of measurable real functions f equals f left parenthesis omega right parenthesis f = f (ω) on normal upper OmegaΩ playing the role of loss functions 
related to the decision vector x identical to f left parenthesis dot right parenthesisx ≡f (·). 
We have then the following properties: 
Lemma 13.1 Suppose that upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty setDε(β) /= ∅for all epsilon greater than 0 periodε > 0.
(I) epsilon right arrow upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisε →Hε(λ, β) is monotonous increasing on left parenthesis 0 comma plus normal infinity right parenthesis semicolon(0, +∞);
(II) upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis comma epsilon greater than 0 semicolonHε(λ, β) ≥v∗(λ), ε > 0;
(III) If the loss set upper VV is convex, then epsilon right arrow upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisε →Hε(λ, β) is concave; 
(IV) If v left parenthesis beta comma x right parenthesis less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon overbarv(β, x) ≤v∗(β) + ¯ε for all x element of upper Dx ∈D and a ﬁxed epsilon overbar greater than 0¯ε > 0, then upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals s u p left brace v left parenthesis lamda comma x right parenthesis colon x element of upper D right brace comma epsilon greater than or equals epsilon overbarHε(λ, β) =
sup{v(λ, x) : x ∈D}, ε ≥¯ε
(V) The assertions (1)–(4) hold also for epsilon greater than or equals 0ε ≥0, provided that upper D 0 left parenthesis beta right parenthesis not equals normal empty setD0(β) /= ∅. 
Proof Because of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty set comma epsilon greater than 0Dε(β) /= ∅, ε > 0, the maximum expected loss upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisHε(λ, β) is 
deﬁned for allepsilon greater than 0ε > 0 . (I) The monotonicity ofepsilon right arrow upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisε →Hε(λ, β) follows fromupper D Subscript epsilon Baseline left parenthesis beta right parenthesis subset of upper D Subscript delta Baseline left parenthesis beta right parenthesisDε(β) ⊂
Dδ(β), if  epsilon less than delta periodε < δ. (II) The inequality v left parenthesis lamda comma x right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis comma x element of upper D commav(λ, x) ≥v∗(λ), x ∈D, yields upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals sup left brace left parenthesis lamda comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesisHε(λ, β) =
sup{(λ, x) : x ∈Dε(β)} ≥v∗(λ). (III) Let be epsilon 1 greater than 0 comma epsilon 2 greater than 0 comma 0 less than or equals alpha less than or equals 1∈1 > 0, ∈2 > 0, 0 ≤α ≤1 and x 1 element of upper D Subscript epsilon 1 Baseline left parenthesis beta right parenthesis comma x 2 element of upper D Subscript epsilon 2 Baseline left parenthesis beta right parenthesis periodx1 ∈
Dε1(β), x2 ∈Dε2(β). Because of the convexity of the loss set upper VV , there exists 
x 3 element of upper D commax3 ∈D, such thatv left parenthesis dot comma x 3 right parenthesis equals alpha v left parenthesis dot comma x 1 right parenthesis plus left parenthesis 1 minus alpha right parenthesis v left parenthesis dot comma x 2 right parenthesisv(·, x3) = αv(·, x1) + (1 −α)v(·, x2). This yields thenv left parenthesis beta comma x 3 right parenthesis equals alpha v left parenthesis beta comma x 1 right parenthesis plus left parenthesis 1 minus alpha right parenthesis v left parenthesis beta comma x 2 right parenthesis less than or equals alpha left parenthesis v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon 1 right parenthesis plus left parenthesis 1 minus alpha right parenthesis left parenthesis v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon 2 right parenthesis equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon overbarv(β, x3) =
αv(β, x1) + (1 −α)v(β, x2) ≤α(v∗(β) + ε1) + (1 −α)(v∗(β) + ε2) = v∗(β) + ¯ε
withepsilon overbar equals alpha epsilon 1 plus left parenthesis 1 minus alpha right parenthesis epsilon 2¯ε = αε1 + (1 −α)ε2. Hence,x 3 element of upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesisx3 ∈D¯ε(β) and thereforeupper H Subscript epsilon overbar Baseline left parenthesis lamda comma beta right parenthesis greater than or equals v left parenthesis lamda comma x 3 right parenthesis equals alpha v left parenthesis lamda comma x 1 right parenthesis plus left parenthesis 1 minus alpha right parenthesis v left parenthesis lamda comma x 2 right parenthesisH¯ε(λ, β) ≥v(λ, x3) =
αv(λ, x1) + (1 −α)v(λ, x2). Since x 1 comma x 2x1, x2 were chosen arbitrarily, we get now 
upper H Subscript epsilon overbar Baseline left parenthesis lamda comma beta right parenthesis greater than or equals alpha upper H Subscript epsilon 1 Baseline left parenthesis lamda comma beta right parenthesis plus left parenthesis 1 minus alpha right parenthesis upper H Subscript epsilon 2 Baseline left parenthesis lamda comma beta right parenthesisH¯ε(λ, β) ≥αHε1(λ, β) + (1 −α)Hε2(λ, β). The rest of the assertion is clear.
⬜
Remark 13.4 According to Lemma 13.1(V) we haveupper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis greater than or equals upper H 0 left parenthesis lamda comma beta right parenthesis comma epsilon greater than or equals 0Hε(λ, β) ≥H0(λ, β), ε ≥0, 
provided that upper D 0 left parenthesis beta right parenthesis not equals normal empty set periodD0(β) /= ∅.
By the above result the limit quotation mark limit Underscript epsilon down arrow 0 Endscripts quotation mark“limit Underscript epsilon down arrow 0 Endscriptslim
ε↓0quotation mark limit Underscript epsilon down arrow 0 Endscripts quotation mark exists, and we have 
StartLayout 1st Row 1st Column upper H left parenthesis lamda comma beta right parenthesis 2nd Column colon equals limit Underscript epsilon down arrow 0 Endscripts upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals inf Underscript epsilon greater than 0 Endscripts upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis period 2nd Row 1st Column Blank 3rd Row 1st Column upper H left parenthesis lamda comma beta right parenthesis 2nd Column greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis EndLayoutH(λ, β) := lim
ε↓0 Hε(λ, β) = inf
ε>0 Hε(λ, β).
(13.14a) 
StartLayout 1st Row 1st Column upper H left parenthesis lamda comma beta right parenthesis 2nd Column colon equals limit Underscript epsilon down arrow 0 Endscripts upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals inf Underscript epsilon greater than 0 Endscripts upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis period 2nd Row 1st Column Blank 3rd Row 1st Column upper H left parenthesis lamda comma beta right parenthesis 2nd Column greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis EndLayoutH(λ, β) ≥v∗(λ)
(13.14b) 
and 
StartLayout 1st Row 1st Column upper H left parenthesis lamda comma beta right parenthesis 2nd Column greater than or equals upper H 0 left parenthesis lamda comma beta right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis i f upper D 0 left parenthesis beta right parenthesis not equals normal empty set period EndLayoutH(λ, β) ≥H0(λ, β) ≥v∗(λ)
if D0(β) /= ∅.
(13.14c) 
A detailed study ofupper H left parenthesis lamda comma beta right parenthesisH(λ, β) andupper I left parenthesis lamda comma beta right parenthesis colon equals upper H left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesisI (λ, β) := H(λ, β) −v∗(λ) follows in Sects. 13.1 
and 13.2, where we ﬁnd a close relationship of upper HH, upper II, resp., with the inaccuracy 
function of Kerridge [ 8], the divergence of Kullback [ 9]. Thus, we use the following 
notation: 
Deﬁnition 13.3 The function upper H equals upper H left parenthesis lamda comma beta right parenthesisH = H(λ, β) is called the generalized inaccuracy 
function, and upper I equals upper I left parenthesis lamda comma beta right parenthesis colon equals upper H left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesisI = I (λ, β) := H(λ, β) −v∗(λ) is called the generalized divergence 
function.

13.1 Uncertainty Functions Based on Decision Problems
353
13.1.2 
Stability/Instability Properties 
As shown by the following examples, there are families left parenthesis x Subscript beta Superscript epsilon Baseline right parenthesis Subscript epsilon greater than 0(xε
β)ε>0 of epsilonε-optimal deci-
sions x Subscript beta Superscript epsilonxε
β with respect to beta commaβ, hence, x Subscript beta Superscript epsilon Baseline element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis comma epsilon greater than 0 commaxε
β ∈Dε(β), ε > 0, such that 
StartLayout 1st Row v left parenthesis lamda comma x Subscript beta Superscript epsilon Baseline right parenthesis greater than or equals upper H 0 left parenthesis lamda comma beta right parenthesis plus delta f o r a l l Baseline 0 less than epsilon less than epsilon 0 comma EndLayoutv(λ, xε
β) ≥H0(λ, β) + δ
for all 0 < ε < ε0,
(13.15) 
with a ﬁxed constant delta greater than 0δ > 0 and for a positive epsilon 0ε0. 
Thus, with a certain distance delta greater than 0δ > 0, the expected loss remains—also for arbi-
trarily small accuracy value epsilon greater than 0 minusε > 0 −outside the error interval left bracket v Superscript asterisk Baseline left parenthesis lamda right parenthesis comma upper H 0 left parenthesis lamda comma beta right parenthesis right bracket[v∗(λ), H0(λ, β)], 
which must be taken into account in any case due to the estimation of (13.2a) by  
the approximate optimization problem (13.3). However, this indicates a possible 
instability of the 2-step procedure bold left parenthesis upper I comma II right parenthesis(I, II). 
Example 13.1 Let normal upper Omega colon equals StartSet omega 1 comma omega 2 EndSetΩ := {ω1, ω2} with discrete probability distributions lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript 2 Baseline colon equals StartSet lamda element of double struck upper R Subscript plus Superscript 2 Baseline colon lamda 1 plus lamda 2 equals 1 EndSetλ, β ∈
R2
+,1 := {λ ∈R2
+ : λ1 + λ2 = 1}. Moreover, deﬁne the set of decisions, the loss set, 
resp., by upper D identical to upper VD ≡V , where 
upper V equals c o n v left brace left parenthesis 1 comma 0 right parenthesis Superscript upper T Baseline comma left parenthesis 2 comma 0 right parenthesis Superscript upper T Baseline comma left parenthesis 0 comma 2 right parenthesis Superscript upper T Baseline comma left parenthesis 0 comma 1 right parenthesis Superscript upper T Baseline right brace minus c o n v left brace left parenthesis one half comma one half right parenthesis Superscript upper T Baseline comma left parenthesis 0 comma 1 right parenthesis Superscript upper T Baseline right brace commaV = conv{(1, 0)T , (2, 0)T , (0, 2)T , (0, 1)T }\conv{(1
2, 1
2)T , (0, 1)T },
where “conv” denotes the convex hull of a set. Selectinglamda equals left parenthesis 0 comma 1 right parenthesis Superscript upper Tλ = (0, 1)T andbeta equals left parenthesis one half comma one half right parenthesis Superscript upper Tβ = ( 1
2, 1
2)T , 
we get 
v Superscript asterisk Baseline left parenthesis beta right parenthesis equals one half comma upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals v left parenthesis lamda comma x Subscript beta Superscript epsilon Baseline right parenthesis equals 2 left parenthesis v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon right parenthesis equals 1 plus 2 epsilonv∗(β) = 1
2, Hε(λ, β) = v(λ, xε
β) = 2(v∗(β) + ε) = 1 + 2ε
withx Subscript beta Superscript epsilon Baseline equals left parenthesis 0 comma 2 left parenthesis v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon right parenthesis right parenthesis Superscript upper T Baseline equals left parenthesis 0 comma 1 plus 2 epsilon right parenthesis Superscript upper T Baseline element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesisxε
β = (0, 2(v∗(β) + ε))T = (0, 1 + 2ε)T ∈Dε(β) for0 less than epsilon less than one half0 < ε < 1
2. On the other 
hand, 
upper D 0 left parenthesis beta right parenthesis equals c o n v left brace left parenthesis one half comma one half right parenthesis Superscript upper T Baseline comma left parenthesis 1 comma 0 right parenthesis Superscript upper T Baseline right brace minus left brace left parenthesis one half comma one half right parenthesis Superscript upper T Baseline right braceD0(β) = conv{( 1
2, 1
2)T , (1, 0)T }\{( 1
2, 1
2)T }, and therefore 
upper H 0 left parenthesis lamda comma beta right parenthesis equals one half periodH0(λ, β) = 1
2.
Hence, (13.15) holds, i.e., upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals left parenthesis lamda comma x Subscript beta Superscript epsilon Baseline right parenthesis equals 1 plus 2 epsilon greater than 1 equals upper H 0 left parenthesis lamda comma beta right parenthesis plus delta comma epsilon greater than 0Hε(λ, β) = (λ, xε
β) = 1 + 2ε > 1 = H0(λ, β) + δ, ε >
0, with delta equals one halfδ = 1
2. 
Remark 13.5 As it turns out later, the instability (13.15) follows from the fact that 
upper VV is not closed. 
Example 13.2 Letnormal upper Omega equals StartSet omega 1 comma omega 2 EndSetΩ = {ω1, ω2}, and suppose thatupper D identical to upper VD ≡V is given byupper V equals left brace left parenthesis 0 comma 0 right parenthesis Superscript upper T Baseline right brace union StartSet z element of double struck upper R Subscript plus Superscript 2 Baseline colon z 1 z 2 greater than or equals 1 EndSetV = {(0, 0)T }
∪{z ∈R2
+ : z1z2 ≥1}. Moreover, beta equals left parenthesis 1 comma 0 right parenthesis Superscript upper Tβ = (1, 0)T and lamda element of double struck upper R Subscript plus comma 1 Superscript 2λ ∈R2
+,1 with lamda 2 greater than 0λ2 > 0. Then, 
v Superscript asterisk Baseline left parenthesis beta right parenthesis equals 0v∗(β) = 0 and 
upper D 0 left parenthesis beta right parenthesis equals left brace left parenthesis 0 comma 0 right parenthesis Superscript upper T Baseline right braceD0(β) = {(0, 0)T }. Furthermore, 
upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals plus normal infinity commaHε(λ, β) = +∞, and 
x Subscript beta Superscript epsilon Baseline equals left parenthesis epsilon comma StartFraction 1 Over epsilon EndFraction right parenthesis Superscript upper T Baseline element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesisxε
β =
(ε, 1
ε)T ∈Dε(β), wherev left parenthesis lamda comma x Subscript beta Superscript epsilon Baseline right parenthesis equals lamda 1 epsilon plus lamda 2 StartFraction 1 Over epsilon EndFraction comma epsilon greater than 0v(λ, xε
β) = λ1ε + λ2 1
ε, ε > 0. Thus,upper H 0 left parenthesis lamda comma beta right parenthesis equals 0H0(λ, β) = 0, and also 
(13.15) holds 
v left parenthesis lamda comma x Subscript beta Superscript epsilon Baseline right parenthesis equals lamda 1 epsilon plus lamda 2 StartFraction 1 Over epsilon EndFraction greater than upper H 0 left parenthesis lamda comma beta right parenthesis plus delta equals deltav(λ, xε
β) = λ1ε + λ2
1
ε > H0(λ, β) + δ = δ
for all 0 less than epsilon less than StartFraction lamda 2 Over delta EndFraction0 < ε < λ2
δ and each (ﬁxed) delta greater than 0 periodδ > 0.
Remark 13.6 Here, upper VV is closed, but it is not convex, which is the reason for the 
instability (13.15) in the present case.

354
13
Maximum Entropy Techniques
A necessary and sufﬁcient condition excluding the instability (13.15) of the two-
step procedure left parenthesis upper I comma upper I upper I right parenthesis(I, I I) procedure: 
left parenthesis 13.1 right parenthesis identical to left parenthesis 13.2 a right parenthesis right squiggle arrow left parenthesis 13.1 right parenthesis right squiggle arrow s e l e c t a n x Subscript beta Superscript epsilon Baseline element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis(13.1) ≡(13.2a) →(13.1) →select anxε
β ∈Dε(β)
is given in the following result. 
Lemma 13.2 The instability (13.15) of the two-step procedure left parenthesis upper I comma upper I upper I right parenthesis(I, I I) is excluded 
if and only if upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis down arrow upper H 0 left parenthesis lamda comma beta right parenthesisHε(λ, β) ↓H0(λ, β), epsilon down arrow 0ε ↓0, hence, upper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesisH(λ, β) = H0(λ, β). 
Proof 
(I) Suppose that 
upper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesisH(λ, β) = H0(λ, β). Assuming that (13.15) holds, then 
upper H 0 left parenthesis lamda comma beta right parenthesis less than plus normal infinityH0(λ, β) < +∞and thereforeupper H left parenthesis lamda comma beta right parenthesis element of double struck upper RH(λ, β) ∈R as well asupper H 0 left parenthesis lamda comma beta right parenthesis less than upper H 0 left parenthesis lamda comma beta right parenthesis plus delta less than or equals v left parenthesis lamda comma x Subscript beta Superscript epsilon Baseline right parenthesis less than or equals upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis comma epsilon greater than 0H0(λ, β) < H0(λ, β) +
δ ≤v(λ, xε
β) ≤Hε(λ, β), ε > 0. However, this is a contradiction toupper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis down arrow upper H 0 left parenthesis lamda comma beta right parenthesisHε(λ, β) ↓
H0(λ, β) for epsilon down arrow 0ε ↓0. Consequently, (13.15) is excluded in this case. 
(II) Suppose now that the instability (13.15) is excluded. Assuming thatupper H left parenthesis lamda comma beta right parenthesis greater than upper H 0 left parenthesis lamda comma beta right parenthesis commaH(λ, β) >
H0(λ, β), then upper H 0 left parenthesis lamda comma beta right parenthesis element of double struck upper RH0(λ, β) ∈R, and there is c element of double struck upper R commac ∈R, such that upper H left parenthesis lamda comma beta right parenthesis greater than c greater than upper H 0 left parenthesis lamda comma beta right parenthesisH(λ, β) > c >
H0(λ, β). Because of upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis greater than or equals upper H left parenthesis lamda comma beta right parenthesis greater than c comma epsilon greater than 0Hε(λ, β) ≥H(λ, β) > c, ε > 0, to each epsilon greater than 0ε > 0 there 
exists an x Subscript beta Superscript epsilon Baseline element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesisxε
β ∈Dε(β) such that v left parenthesis lamda comma x Subscript beta Superscript epsilon Baseline right parenthesis greater than cv(λ, xε
β) > c. Hence, (13.15) holds with delta colon equals c minus upper H 0 left parenthesis lamda comma beta right parenthesisδ :=
c −H0(λ, β), which is in contradiction to the assumption. Consequently, we 
have upper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesisH(λ, β) = H0(λ, β) .
⬜
In the following we give now sufﬁcient conditions for the stability condition 
upper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesisH(λ, β) = H0(λ, β) or upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis down arrow upper H 0 left parenthesis lamda comma beta right parenthesisHε(λ, β) ↓H0(λ, β) for epsilon down arrow 0ε ↓0. 
Theorem 13.1 
(I) Letupper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty set comma epsilon greater than 0Dε(β) /= ∅, ε > 0, and suppose that there isepsilon overbar greater than 0¯ε > 0 such thatupper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesisD¯ε(β) is com-
pact und x right arrow v left parenthesis lamda comma x right parenthesis comma x right arrow v left parenthesis beta comma x right parenthesis comma x element of upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesisx →v(λ, x), x →v(β, x), x ∈D¯ε(β) are real valued, continuous 
functions on upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesisD¯ε(β). Then, v Superscript asterisk Baseline left parenthesis beta right parenthesis element of double struck upper R comma upper D 0 left parenthesis beta right parenthesis not equals normal empty setv∗(β) ∈R, D0(β) /= ∅, and upper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesis periodH(λ, β) = H0(λ, β).
(II) Replacing x right arrow v left parenthesis lamda comma x right parenthesis comma x element of upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesisx →v(λ, x), x ∈D¯ε(β), by an arbitrary continuous function upper F colon upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesis right arrow double struck upper R F :
D¯ε(β) →R and assuming that the remaining assumptions of the ﬁrst part are 
unchanged, then sup left brace upper F left parenthesis x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace down arrow sup left brace upper F left parenthesis x right parenthesis colon x element of upper D 0 left parenthesis beta right parenthesis right bracesup{F(x) : x ∈Dε(β)} ↓sup{F(x) : x ∈D0(β)} for epsilon down arrow 0 periodε ↓0.
Proof Obviously, with upper F left parenthesis x right parenthesis colon equals v left parenthesis lamda comma x right parenthesisF(x) := v(λ, x) the ﬁrst assertion follows from the second 
one. Thus, we have to prove only the second part of Theorem 13.1. We therefore 
set upper F Subscript epsilon Baseline colon equals s u p left brace upper F left parenthesis x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right braceFε := sup{F(x) : x ∈Dε(β)} for epsilon greater than or equals 0ε ≥0. Corresponding to Lemma 13.1, one 
can prove that upper F Subscript epsilon 1 Baseline less than or equals upper F Subscript epsilon 2 Baseline commaFε1 ≤Fε2, provided that epsilon 1 less than epsilon 2 periodε1 < ε2. In the ﬁrst part of the proof we 
show that upper D 0 left parenthesis beta right parenthesis not equals normal empty setD0(β) /= ∅, hence, the expression upper H 0 left parenthesis lamda comma beta right parenthesisH0(λ, β) is deﬁned therefore. Since 
upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesis not equals normal empty setD¯ε(β) /= ∅and v left parenthesis beta comma x right parenthesis element of double struck upper Rv(β, x) ∈R for all x element of upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesis commax ∈D¯ε(β), we get v Superscript asterisk Baseline left parenthesis beta right parenthesis greater than or equals minus epsilon overbar plus v left parenthesis beta comma x right parenthesis greater than negative normal infinityv∗(β) ≥−¯ε + v(β, x) >
−∞with somex element of upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesis periodx ∈D¯ε(β). Thus,v Superscript asterisk Baseline left parenthesis beta right parenthesis element of double struck upper R periodv∗(β) ∈R. Assuming thatupper D 0 left parenthesis beta right parenthesis equals normal empty set commaD0(β) = ∅, we would 
have intersection Subscript 0 less than epsilon less than or equals epsilon overbar Baseline upper D Subscript epsilon Baseline left parenthesis beta right parenthesis equals upper D 0 left parenthesis beta right parenthesis equals normal empty set period∩0<ε≤¯εDε(β) = D0(β) = ∅. However, according to our assumptions, the set 
upper D Subscript epsilon Baseline left parenthesis beta right parenthesis equals StartSet x element of upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesis colon v left parenthesis beta comma x right parenthesis less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon EndSet comma 0 less than epsilon less than or equals epsilon overbarDε(β) = {x ∈D¯ε(β) : v(β, x) ≤v∗(β) ≤v∗(β) + ε}, 0 < ε ≤¯ε is closed for each 
0 less than epsilon less than or equals epsilon overbar0 < ε ≤¯ε. Due to the compactness ofupper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesis commaD¯ε(β), this yields thenintersection Subscript i equals 1 Superscript n Baseline upper D Subscript epsilon Sub Subscript i Baseline left parenthesis beta right parenthesis equals normal empty set∩n
i=1Dεi(β) = ∅for a 
ﬁnite number of0 less than epsilon Subscript i Baseline less than or equals epsilon overbar comma i equals 1 comma 2 comma period period period comma n period0 < εi ≤¯ε, i = 1, 2, ..., n. Deﬁningepsilon 0 equals min Underscript 1 less than or equals i less than or equals n Endscripts epsilon Subscript i Baseline commaε0 = min
1≤i≤n εi, thenepsilon 0 greater than 0ε0 > 0 and 
upper D Subscript epsilon 0 Baseline left parenthesis beta right parenthesis equals intersection Subscript i equals 1 Superscript n Baseline upper D Subscript epsilon Sub Subscript i Subscript Baseline left parenthesis beta right parenthesis equals normal empty set commaDε0(β) = ∩n
i=1Dεi(β) = ∅, which contradicts toupper D Subscript epsilon Baseline not equals normal empty set comma epsilon greater than 0Dε /= ∅, ε > 0. Thus, we must have

13.1 Uncertainty Functions Based on Decision Problems
355
upper D 0 left parenthesis beta right parenthesis not equals normal empty setD0(β) /= ∅. Since the setsupper D Subscript epsilon Baseline left parenthesis beta right parenthesis comma 0 less than or equals epsilon less than or equals epsilon overbarDε(β), 0 ≤ε ≤¯ε are closed and therefore also compact, 
we have 
StartLayout 1st Row upper F Subscript epsilon Baseline equals sup left brace upper F left parenthesis x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace equals max left brace upper F left parenthesis x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace comma 0 less than or equals epsilon less than or equals epsilon overbar comma EndLayoutFε = sup{F(x) : x ∈Dε(β)} = max{F(x) : x ∈Dε(β)},
0 ≤ε ≤¯ε,
(13.16) 
where, because of the continuity of F, the maximum is taken. In the second part we 
show thatupper F Subscript epsilon Baseline down arrow upper F 0Fε ↓F0 forepsilon down arrow 0 periodε ↓0. Due to the monotonicity ofepsilon right arrow upper F Subscript epsilonε →Fε andupper F Subscript epsilon Baseline greater than or equals upper F 0 comma epsilon greater than 0Fε ≥F0, ε > 0, 
we havelimit Underscript epsilon down arrow 0 Endscripts upper F Subscript epsilon Baseline greater than or equals upper F 0 periodlim
ε↓0 Fε ≥F0. Moreover, with (13.16), for0 less than or equals epsilon less than or equals epsilon overbar0 ≤ε ≤¯ε and eachc element of upper Rc ∈R it holds 
white up pointing triangle Subscript c Baseline colon equals left brace epsilon colon 0 less than or equals epsilon less than or equals epsilon overbar comma upper F Subscript epsilon Baseline greater than or equals c right brace equals left brace epsilon colon 0 less than or equals epsilon less than or equals epsilon overbar comma max left brace upper F left parenthesis x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace greater than or equals c right braceΔc := {ε : 0 ≤ε ≤¯ε, Fε ≥c} = {ε : 0 ≤ε ≤¯ε, max{F(x) : x ∈Dε(β)} ≥c}
(13.17a) 
and therefore 
white up pointing triangle Subscript c Baseline equals left brace epsilon colon 0 less than or equals epsilon less than or equals epsilon overbar comma t h e r e i s x element of upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesis w i t h v left parenthesis beta comma x right parenthesis less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon a n d upper F left parenthesis x right parenthesis greater than or equals c right brace periodΔc = {ε : 0 ≤ε ≤¯ε, there is x ∈D¯ε(β) with v(β, x) ≤v∗(β) + ε and F(x) ≥c}.
(13.17b) 
Ifepsilon Superscript k Baseline right arrow epsilon Superscript 0 Baseline comma k right arrow normal infinityεk →ε0, k →∞is a convergent sequence inwhite up pointing triangle Subscript c BaselineΔc for a ﬁxedc element of double struck upper Rc ∈R, then, according 
to (13.17a), (13.17b), there are elements x Superscript k Baseline element of upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesis commaxk ∈D¯ε(β), such that 
StartLayout 1st Row v left parenthesis beta comma x Superscript k Baseline right parenthesis less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon Subscript k Baseline a n d upper F left parenthesis x Superscript k Baseline right parenthesis greater than or equals c comma k equals 1 comma 2 comma ellipsis period EndLayoutv(β, xk) ≤v∗(β) + εk and F(xk) ≥c,
k = 1, 2, . . . .
(13.18) 
Since upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesisD¯ε(β) is compact, sequence left parenthesis x Superscript k Baseline right parenthesis(xk) has an accumulation point x Superscript 0 Baseline element of upper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesisx0 ∈D¯ε(β), and 
the continuity ofx right arrow upper F left parenthesis x right parenthesisx →F(x) andx right arrow v left parenthesis beta comma x right parenthesisx →v(β, x) onupper D Subscript epsilon overbar Baseline left parenthesis beta right parenthesisD¯ε(β) yield the existence of a sub-
sequenceleft parenthesis x Superscript k Super Subscript j Superscript Baseline right parenthesis(xk j) ofleft parenthesis x Superscript k Baseline right parenthesis comma(xk), such thatupper F left parenthesis upper X Superscript k Super Subscript j Superscript Baseline right parenthesis right arrow upper F left parenthesis x Superscript 0 Baseline right parenthesisF(Xk j) →F(x0) andv left parenthesis beta comma x Superscript k Super Subscript j Superscript Baseline right parenthesis right arrow v left parenthesis beta comma x Superscript 0 Baseline right parenthesis comma j right arrow normal infinity periodv(β, xk j ) →v(β, x0), j →
∞. From (13.18) we get thenv left parenthesis beta comma x Superscript 0 Baseline right parenthesis less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon Superscript 0v(β, x0) ≤v∗(β) + ε0 andupper F left parenthesis x Superscript 0 Baseline right parenthesis greater than or equals c periodF(x0) ≥c. Hence,upper F Subscript epsilon Sub Superscript 0 Baseline greater than or equals cFε0 ≥c
and therefore epsilon Superscript 0 element of white up pointing triangle Subscript c Baselineε0 ∈Δc, because we have 0 less than or equals epsilon less than or equals epsilon overbar0 ≤ε ≤¯ε, since 0 less than or equals epsilon Superscript k Super Subscript j Superscript Baseline less than or equals epsilon overbar period0 ≤εk j ≤¯ε. The above 
considerations yield that white up pointing triangle Subscript c BaselineΔc is closed for all c element of upper Rc ∈R. Assuming that there is c overTilde element of upper R comma˜c ∈R,
such thatlimit Underscript epsilon down arrow 0 Endscripts upper F Subscript epsilon Baseline greater than or equals c overTilde greater than upper F 0 commalim
ε↓0 Fε ≥˜c > F0,, we haveupper F Subscript epsilon Baseline greater than or equals c overTilde greater than upper F 0Fε ≥˜c > F0 for allepsilon greater than 0ε > 0. However, this yields 
thenwhite up pointing triangle Subscript c overTilde Baseline equals left brace 0 less than or equals epsilon less than or equals epsilon overbar colon upper F Subscript epsilon Baseline greater than or equals c overTilde colon right brace equals left parenthesis 0 comma epsilon overbar right bracketΔ˜c = {0 ≤ε ≤¯ε : Fε ≥˜c :} = (0, ¯ε], which contradicts to the closedness ofwhite up pointing triangle Subscript c BaselineΔc
for each c element of upper Rc ∈R shown above. 
Thus, limit Underscript epsilon down arrow 0 Endscripts upper F Subscript epsilon Baseline equals upper F 0lim
ε↓0 Fε = F0.
⬜
Remark 13.7 According to (13.1)–(13.3), the second part of Theorem 13.1 is used 
mainly for upper F left parenthesis x right parenthesis equals minus v left parenthesis lamda comma x right parenthesisF(x) = −v(λ, x). In this case we have 
StartLayout 1st Row inf left brace v left parenthesis lamda comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace up arrow inf left brace v left parenthesis lamda comma x right parenthesis colon x element of upper D 0 left parenthesis beta right parenthesis right brace f o r epsilon down arrow 0 period EndLayout inf{v(λ, x) : x ∈Dε(β)} ↑inf{v(λ, x) : x ∈D0(β)} for ε ↓0.
(13.19) 
Obviously, the above result can be formulated also with the loss set upper VV in the 
following way: 
Corollary 13.1 
(I) Letupper V Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty set comma epsilon greater than 0Vε(β) /= ∅, ε > 0 and suppose that there isepsilon overbar greater than 0¯ε > 0 such thatupper V Subscript epsilon overbar Baseline left parenthesis beta right parenthesisV¯ε(β) is compact 
and f right arrow lamda f comma f right arrow beta f comma f element of upper V Subscript epsilon overbar Baseline left parenthesis beta right parenthesis f →λf, f →β f, f ∈V¯ε(β) are real valued and continuous functions on 
upper V Subscript epsilon overbar Baseline left parenthesis beta right parenthesisV¯ε(β). Then v Superscript asterisk Baseline left parenthesis beta right parenthesis element of upper R comma upper V 0 left parenthesis beta right parenthesis not equals normal empty set commav∗(β) ∈R, V0(β) /= ∅, and upper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesis semicolonH(λ, β) = H0(λ, β);

356
13
Maximum Entropy Techniques
(II) Replacing 
f right arrow lamda f comma f element of upper V Subscript epsilon overbar Baseline left parenthesis beta right parenthesis f →λf, f ∈V¯ε(β)
by 
an 
arbitrary 
continuous 
function 
upper F colon upper V Subscript epsilon overbar Baseline left parenthesis beta right parenthesis right arrow upper RF : V¯ε(β) →R, and keeping the remaining assumptions in (I), thens u p left brace upper F left parenthesis f right parenthesis colon f element of upper V Subscript epsilon Baseline left parenthesis beta right parenthesis right brace down arrow s u p left brace upper F left parenthesis f right parenthesis colon f element of upper V 0 left parenthesis beta right parenthesis right bracesup{F( f ) :
f ∈Vε(β)} ↓sup{F( f ) : f ∈V0(β)} for epsilon down arrow 0 periodε ↓0.
Proof The assertion follows immediately from upper V Subscript epsilon Baseline left parenthesis beta right parenthesis equals StartSet v left parenthesis period comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis EndSet periodVε(β) = {v(., x) : x ∈Dε(β)}.
⬜
13.2 
The Generalized Inaccuracy Function upper H left parenthesis lamda comma beta right parenthesisH(λ, β)
Let denoteupper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ the true distribution ofomega overTilde ˜ω, and suppose that the hypothesis “upper P Subscript omega overTilde Baseline equals betaP˜ω =
β” has been accepted. Moreover, assume that upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty setDε(β) /= ∅for all epsilon greater than 0ε > 0; This holds 
if and only if v Superscript asterisk Baseline left parenthesis beta right parenthesis greater than negative normal infinityv∗(β) > −∞or v Superscript asterisk Baseline left parenthesis beta right parenthesis equals negative normal infinityv∗(β) = −∞and then v left parenthesis beta comma x right parenthesis equals negative normal infinityv(β, x) = −∞for an x element of upper Dx ∈D. 
Using a decision x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesisx ∈Dε(β), then we have a loss from StartSet v left parenthesis lamda comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis EndSet{v(λ, x) : x ∈Dε(β)}, and 
StartLayout 1st Row 1st Column upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis 2nd Column equals 3rd Column sup left brace v left parenthesis lamda comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace comma 2nd Row 1st Column h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis 2nd Column equals 3rd Column inf left brace v left parenthesis lamda comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace EndLayoutHε(λ, β) = sup{v(λ, x) : x ∈Dε(β)},
hε(λ, β) = inf{v(λ, x) : x ∈Dε(β)}
denotes the maximum, minimum, resp., expected loss, if the computation of an epsilonε-
optimal decision is based on the hypothesis left single quotation mark left single quotation mark upper P Subscript omega overTilde Baseline equals beta left single quotation mark left single quotation markleft single quotation mark left single quotation mark upper P Subscript omega overTilde Baseline equals beta“P˜ω = βleft single quotation mark left single quotation mark upper P Subscript omega overTilde Baseline equals beta left single quotation mark left single quotation mark, while upper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ is the true 
probability distribution of omega overTilde ˜ω. Corresponding to Lemma 13.1 on upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisHε(λ, β), we can 
show this result: 
Lemma 13.3 Suppose that upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty set comma epsilon greater than 0Dε(β) /= ∅, ε > 0. Then, 
(I) epsilon right arrow h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisε →hε(λ, β), with 
h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals inf left brace v left parenthesis lamda comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right bracehε(λ, β) = inf{v(λ, x) : x ∈Dε(β)}, is monotonous 
decreasing on left parenthesis 0 comma plus normal infinity right parenthesis(0, +∞); 
(II) h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesishε(λ, β) ≥v∗(λ) for all epsilon greater than 0ε > 0; 
(III) epsilon right arrow h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis comma epsilon greater than 0ε →hε(λ, β), ε > 0 is convex, provided that the loss set upper VV is convex; 
(IV) Ifv left parenthesis beta comma x right parenthesis less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon overbarv(β, x) ≤v∗(β) + ¯ε for allx element of upper Dx ∈D and a ﬁxedepsilon overbar greater than 0¯ε > 0, thenh Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis comma epsilon greater than epsilon overbarhε(λ, β) = v∗(λ),
ε > ¯ε; 
(V) The assertions (a)–(c) hold also for epsilon greater than or equals 0ε ≥0, in case that upper D Subscript o Baseline left parenthesis beta right parenthesis not equals normal empty set periodDo(β) /= ∅.
Lemmas 13.1 and 13.3 yield then this corollary: 
Corollary 13.2 For two numbers epsilon 1 comma epsilon 2 greater than 0ε1, ε2 > 0 (greater than or equals 0≥0, if upper D Subscript o Baseline left parenthesis beta right parenthesis not equals normal empty set comma r e s p periodDo(β) /= ∅,resp.) we have 
StartLayout 1st Row h Subscript epsilon 1 Baseline left parenthesis lamda comma beta right parenthesis less than or equals upper H Subscript epsilon 2 Baseline left parenthesis lamda comma beta right parenthesis period EndLayouthε1(λ, β) ≤Hε2(λ, β).
(13.20) 
Proof If epsilon 1 less than or equals epsilon 2ε1 ≤ε2, then upper H Subscript epsilon 2 Baseline left parenthesis lamda comma beta right parenthesis greater than or equals upper H Subscript epsilon 1 Baseline left parenthesis lamda comma beta right parenthesis greater than or equals h Subscript epsilon 1 Baseline left parenthesis lamda comma beta right parenthesisHε2(λ, β) ≥Hε1(λ, β) ≥hε1(λ, β), and in case epsilon 1 greater than epsilon 2ε1 > ε2 it is 
h Subscript epsilon 1 Baseline left parenthesis lamda comma beta right parenthesis less than or equals h Subscript epsilon 2 Baseline left parenthesis lamda comma beta right parenthesis less than or equals upper H Subscript epsilon 2 Baseline left parenthesis lamda comma beta right parenthesishε1(λ, β) ≤hε2(λ, β) ≤Hε2(λ, β) according to (a) of Lemmas 13.1, 13.3.
⬜
Hence, the limit limit Underscript epsilon down arrow 0 Endscripts h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals sup Underscript epsilon greater than 0 Endscripts h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesislim
ε↓0 hε(λ, β) = sup
ε>0
hε(λ, β), exists, and corresponding to 
(13.14a) we deﬁne 
StartLayout 1st Row h left parenthesis lamda comma beta right parenthesis equals limit Underscript epsilon down arrow 0 Endscripts h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals sup Underscript epsilon greater than 0 Endscripts h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis period EndLayouth(λ, β) = lim
ε↓0 hε(λ, β) = sup
ε>0
hε(λ, β).
(13.21)

13.2 The Generalized Inaccuracy Function H(λ, β)
357
For the functionsh left parenthesis lamda comma beta right parenthesis comma upper H left parenthesis lamda comma beta right parenthesish(λ, β), H(λ, β) deﬁned by (13.14a) and (13.21) the following 
result holds: 
Theorem 13.2 
(I) Let upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty setDε(β) /= ∅for epsilon greater than 0ε > 0. Then 
v Superscript asterisk Baseline left parenthesis lamda right parenthesis less than or equals h left parenthesis lamda comma beta right parenthesis less than or equals upper H left parenthesis lamda comma beta right parenthesis semicolonv∗(λ) ≤h(λ, β) ≤H(λ, β);
(II) Let upper D Subscript epsilon Baseline left parenthesis lamda right parenthesis not equals normal empty setDε(λ) /= ∅for epsilon greater than 0ε > 0. Then 
v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals h left parenthesis lamda comma lamda right parenthesis equals upper H left parenthesis lamda comma lamda right parenthesis periodv∗(λ) = h(λ, λ) = H(λ, λ).
Proof 
(I) Lemma 13.3 yields h left parenthesis lamda comma beta right parenthesis equals sup Underscript epsilon greater than 0 Endscripts h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesish(λ, β) = sup
ε>0
hε(λ, β) ≥v∗(λ). Because of (13.20) we  
have h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis less than or equals upper H Subscript epsilon overbar Baseline left parenthesis lamda comma beta right parenthesis comma epsilon greater than 0hε(λ, β) ≤H¯ε(λ, β), ε > 0 for each ﬁxed epsilon overbar greater than 0¯ε > 0. From this we obtain 
h left parenthesis lamda comma beta right parenthesis equals sup Underscript epsilon greater than 0 Endscripts h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis less than or equals upper H Subscript epsilon overbar Baseline left parenthesis lamda comma beta right parenthesis comma epsilon overbar greater than 0h(λ, β) = sup
ε>0
hε(λ, β) ≤H¯ε(λ, β), ¯ε > 0, hence, 
h left parenthesis lamda comma beta right parenthesis less than or equals inf Underscript epsilon greater than 0 Endscripts upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals upper H left parenthesis lamda comma beta right parenthesis periodh(λ, β) ≤inf
ε>0 Hε(λ, β) =
H(λ, β).
(II) According to Theorem 13.2 (I) and the Deﬁnition of upper H left parenthesis lamda comma lamda right parenthesisH(λ, λ), we get 
v Superscript asterisk Baseline left parenthesis lamda right parenthesis less than or equals upper H left parenthesis lamda comma lamda right parenthesis less than or equals upper H Subscript epsilon Baseline left parenthesis lamda comma lamda right parenthesis equals sup left brace v left parenthesis lamda comma x right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis lamda right parenthesis right brace equals sup left brace v left parenthesis lamda comma x right parenthesis colon v left parenthesis lamda comma x right parenthesis less than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis plus epsilon right brace less than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis plus epsilonv∗(λ) ≤H(λ, λ) ≤Hε(λ, λ) = sup{v(λ, x) : x ∈Dε(λ)} = sup{v(λ, x) :
v(λ, x) ≤v∗(λ) + ε} ≤v∗(λ) + ε for each epsilon greater than 0ε > 0. Thus, upper H left parenthesis lamda comma lamda right parenthesis equals v Superscript asterisk Baseline left parenthesis lamda right parenthesisH(λ, λ) = v∗(λ), and 
due to the ﬁrst part we also have v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals h left parenthesis lamda comma lamda right parenthesisv∗(λ) = h(λ, λ).
⬜
For the geometrical interpretation of the values h left parenthesis lamda comma beta right parenthesis comma upper H left parenthesis lamda comma beta right parenthesish(λ, β), H(λ, β) consider now 
the transformed loss set 
StartLayout 1st Row upper V Subscript lamda comma beta Baseline equals StartSet left parenthesis lamda f comma beta f right parenthesis Superscript upper T Baseline colon f element of upper V EndSet left parenthesis subset of double struck upper R squared right parenthesis period EndLayoutVλ,β = {(λf, β f )T : f ∈V }(⊂R2) .
(13.22) 
If the loss set upper VV is convex, then the linear transformation upper V Subscript lamda comma beta Baseline equals upper T Subscript lamda comma beta Baseline left parenthesis upper V right parenthesisVλ,β = Tλ,β(V ) of upper VV with 
respect to upper T Subscript lamda comma beta Baseline colon f right arrow left parenthesis lamda f comma beta f right parenthesis Superscript upper TTλ,β : f →(λf, β f )T is again a convex set. Hence, v Superscript 0 Baseline left parenthesis beta right parenthesis equals inf left brace z 2 colon z element of upper V Subscript lamda comma beta Baseline right brace commav0(β) = inf{z2 : z ∈
Vλ,β}, which means thatv Superscript asterisk Baseline left parenthesis beta right parenthesisv∗(β) can be interpreted as the second coordinate of one of 
the deepest points of upper V Subscript lamda comma betaVλ,β. In the  same  way,  v Superscript asterisk Baseline left parenthesis lamda right parenthesisv∗(λ) is the ﬁrst coordinate one of the 
points lying on the left boundary of upper V Subscript lamda comma betaVλ,β. 
According to Fig. 13.2, the values h left parenthesis lamda comma beta right parenthesish(λ, β), upper H left parenthesis lamda comma beta right parenthesisH(λ, β) and also the divergences 
upper I left parenthesis lamda comma beta right parenthesis colon equals upper H left parenthesis lamda comma beta right parenthesis minus upper H left parenthesis lamda comma lamda right parenthesisI (λ, β) := H(λ, β) −H(λ, λ), upper J left parenthesis lamda comma beta right parenthesis colon equals h left parenthesis lamda comma beta right parenthesis minus h left parenthesis lamda comma lamda right parenthesisJ(λ, β) := h(λ, β) −h(λ, λ) can be interpreted 
corresponding to upper V Subscript lamda comma betaVλ,β in this way: 
StartLayout 1st Row 1st Column h left parenthesis lamda comma beta right parenthesis 2nd Column colon equals f i r s t c o o r d i n a t e o f t h e d e e p e s t p o i n t o f upper V Subscript lamda comma beta Baseline b e i n g m o s t l e f t 2nd Row 1st Column upper H left parenthesis lamda comma beta right parenthesis 2nd Column colon equals f i r s t c o o r d i n a t e o f t h e d e e p e s t p o i n t o f upper V Subscript lamda comma beta Baseline b e i n g m o s t r i g h t period EndLayouth(λ, β) := ﬁrst coordinate of the deepest point of Vλ,β being most left
H(λ, β) := ﬁrst coordinate of the deepest point of Vλ,β being most right.
The remaining upper H comma hH, h- and upper I comma upper JI, J-functions can be interpreted in upper V Subscript lamda comma betaVλ,β in the same way.

358
13
Maximum Entropy Techniques
Fig. 13.2 Theupper H comma hH, h- andupper I comma upper JI, J-functions 
13.2.1 
Special Loss Sets upper VV
In the following we give a justiﬁcation for the notation “generalized inaccu-
racy function” for  upper H left parenthesis lamda comma beta right parenthesisH(λ, β) and h left parenthesis lamda comma beta right parenthesish(λ, β). For this aim, assume next to that normal upper Omega equals StartSet omega 1 comma omega 2 comma period period period comma omega Subscript n Baseline EndSetΩ =
{ω1, ω2, ..., ωn} contains a ﬁnite number of realizations or scenarios. Moreover, 
suppose that f colon double struck upper R Subscript plus Baseline right arrow double struck upper R union StartSet plus normal infinity EndSet f : R+ →R ∪{+∞} is a convex, monotonous decreasing function 
such that f left parenthesis t right parenthesis element of double struck upper R f (t) ∈R for t greater than 0t > 0 and f left parenthesis 0 right parenthesis equals limit Underscript t right arrow 0 Endscripts f left parenthesis t right parenthesis equals sup Underscript t greater than 0 Endscripts f left parenthesis t right parenthesis f (0) = lim
t→0 f (t) = sup
t>0
f (t). Putting f left parenthesis alpha right parenthesis identical to left parenthesis f left parenthesis alpha 1 right parenthesis comma f left parenthesis alpha 2 right parenthesis comma period period period comma f left parenthesis alpha Subscript n Baseline right parenthesis right parenthesis Superscript upper T f (α) ≡
( f (α1), f (α2), ..., f (αn))T and r i double struck upper R Subscript plus comma 1 Superscript n Baseline equals left brace alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline colon alpha Subscript k Baseline greater than 0 comma k equals 1 comma 2 comma period period period comma n right braceriRn
+,1 = {α ∈Rn
+,1 : αk > 0, k = 1, 2, ..., n}, let  
then the loss set 
upper V colon equals upper C Subscript f Baseline commaV := C f ,
be deﬁned by 
StartLayout 1st Row upper C Subscript f Baseline equals c l c o n v left brace f left parenthesis alpha right parenthesis colon alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline right brace semicolon period EndLayoutC f = clconv{ f (α) : α ∈riRn
+,1}; .
(13.23) 
Here, quotation mark c l c o n v quotation mark“c l c o n vclconvquotation mark c l c o n v quotation mark denotes the closed, convex hull of a set. We still put 
v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesis equals inf left brace beta Superscript upper T Baseline z colon z element of upper C Subscript f Baseline right brace comma beta element of double struck upper R Subscript plus comma 1 Superscript n Baseline periodv∗
f (β) = inf{βT z : z ∈C f }, β ∈Rn
+,1.
Some properties of upper C Subscript fC f are stated in the following: 
Lemma 13.4 
(I) upper C Subscript fC f is closed and convex; 
(II) From z element of upper C Subscript fz ∈C f we also have left parenthesis z Subscript tau left parenthesis 1 right parenthesis Baseline comma period period period comma z Subscript tau left parenthesis n right parenthesis Baseline right parenthesis Superscript upper T Baseline element of upper C Subscript f(zτ(1), ..., zτ(n))T ∈C f for each permutation tauτ of 
the index set StartSet 1 comma 2 comma period period period comma n EndSet semicolon{1, 2, ..., n};

13.2 The Generalized Inaccuracy Function H(λ, β)
359
(III) If f left parenthesis t right parenthesis greater than or equals 0 comma 0 less than or equals t less than or equals 1 f (t) ≥0, 0 ≤t ≤1, then upper C Subscript f Baseline subset of double struck upper R Subscript plus Superscript n Baseline comma 0 less than or equals v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesis less than plus normal infinityC f ⊂Rn
+, 0 ≤v∗
f (β) < +∞, and for beta Subscript k Baseline greater than 0βk > 0 we 
get 0 less than or equals z Subscript k Baseline less than or equals left parenthesis StartFraction 1 divided by beta Over k EndFraction right parenthesis left parenthesis v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon right parenthesis comma z element of upper V Subscript epsilon Baseline left parenthesis beta right parenthesis semicolon0 ≤zk ≤( 1/β
k )(v∗
f (β) + ε), z ∈Vε(β);
(IV) If f left parenthesis 0 right parenthesis element of double struck upper R f (0) ∈R, then upper C Subscript fC f is a compact, convex subset of double struck upper R Superscript nRn, it also holds upper C Subscript f Baseline equals c o n v left brace f left parenthesis alpha right parenthesis colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline right braceC f =
conv{ f (α) : α ∈Rn
+,1}, and to each z element of upper C Subscript fz ∈C f there is an alpha element of double struck upper R Subscript plus comma 1 Superscript nα ∈Rn
+,1 with z greater than or equals f left parenthesis alpha right parenthesis semicolonz ≥
f (α);
(V) If f left parenthesis 0 right parenthesis equals plus normal infinity f (0) = +∞, then for each z element of upper C Subscript fz ∈C f there exists an alpha element of r i double struck upper R Subscript plus comma 1 Superscript nα ∈riRn
+,1 such that 
z greater than or equals f left parenthesis alpha right parenthesisz ≥f (α). 
Proof 
(I) The ﬁrst part follows from the deﬁnition of upper C Subscript fC f . 
(II) Eachz element of upper C Subscript fz ∈C f has the representationz equals limit Underscript nu right arrow normal infinity Endscripts z Superscript nuz = lim
ν→∞zν withz Superscript nu Baseline equals sigma summation Underscript i equals 1 Overscript n Endscripts nu Subscript gamma Superscript nu i Baseline dot f left parenthesis alpha Superscript nu i Baseline right parenthesis comma alpha Superscript nu i Baseline element of r i upper R Subscript plus comma 1 Superscript n Baseline comma gamma Superscript nu i Baseline greater than or equals 0 comma i equals 1 comma 2 comma period period period comma n Subscript nu Baseline comma sigma summation Underscript i equals 1 Overscript n Endscripts nu Subscript gamma Superscript nu i Baseline equals 1 periodzν =
n∑
i=1
ννi
γ · f (ανi), ανi ∈
ri Rn
+,1, γ νi ≥0, i = 1, 2, ..., nν,
n∑
i=1
ννi
γ = 1. Consequently, with a permuta-
tion tauτ of 1 comma 2 comma period period period comma n1, 2, ..., n, also  left parenthesis x Subscript tau left parenthesis 1 right parenthesis Baseline comma period period period comma x Subscript tau left parenthesis n right parenthesis Baseline right parenthesis Superscript upper T(xτ(1), ..., xτ(n))T has a representation of this type. 
Thus, left parenthesis x Subscript tau left parenthesis 1 right parenthesis Baseline comma period period period comma x Subscript tau left parenthesis n right parenthesis Baseline right parenthesis Superscript upper T Baseline element of upper C Subscript f Baseline period(xτ(1), ..., xτ(n))T ∈C f .
(III) Fromf left parenthesis t right parenthesis greater than or equals comma 0 less than or equals t less than or equals 1 f (t) ≥, 0 ≤t ≤1 and0 less than alpha Subscript k Baseline less than 10 < αk < 1 foralpha element of r i double struck upper R Subscript plus comma 1 Superscript nα ∈riRn
+,1, we getf left parenthesis alpha right parenthesis element of double struck upper R Subscript plus Superscript n f (α) ∈Rn
+ for 
alpha element of r i double struck upper R Subscript plus comma 1 Superscript nα ∈riRn
+,1 and therefore upper C Subscript f Baseline subset of double struck upper R Subscript plus Superscript nC f ⊂Rn
+. Hence, v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesis equals inf left brace beta Superscript upper T Baseline z colon z element of upper C Subscript f Baseline right brace greater than or equals 0v∗
f (β) = inf{βT z : z ∈C f } ≥0
and z greater than or equals 0z ≥0. Because of left parenthesis f left parenthesis 1 divided by n right parenthesis comma period period period comma f left parenthesis 1 divided by n right parenthesis right parenthesis Superscript upper T Baseline element of upper C Subscript f( f (1/n), ..., f (1/n))T ∈C f and f left parenthesis 1 divided by n right parenthesis element of double struck upper R f (1/n) ∈R, we ﬁnd 
v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesis less than or equals sigma summation Underscript k equals 1 Overscript n Endscripts beta Subscript k Baseline f left parenthesis 1 divided by n right parenthesis less than plus normal infinityv∗
f (β) ≤
n∑
k=1
βk f (1/n) < +∞. In addition, because of z Subscript k Baseline greater than or equals 0 comma k equals 1 comma 2 comma period period period comma nzk ≥0, k = 1, 2, ..., n
forz element of upper C Subscript fz ∈C f and withbeta greater than or equals 0β ≥0 we getz Subscript k Baseline beta Subscript k Baseline less than or equals beta Superscript upper T Baseline z less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilonzkβk ≤βT z ≤v∗(β) + ε for eachz element of upper V Subscript epsilon Baseline left parenthesis beta right parenthesis commaz ∈Vε(β),
hence, 0 less than or equals z Subscript k Baseline less than or equals left parenthesis 1 divided by beta Subscript k Baseline right parenthesis left parenthesis v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon right parenthesis comma0 ≤zk ≤(1/βk)(v∗
f (β) + ε), provided that beta Subscript k Baseline greater than 0 periodβk > 0.
(IV) SinceStartSet f left parenthesis alpha right parenthesis colon alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline EndSet subset of StartSet f left parenthesis alpha right parenthesis colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline EndSet{ f (α) : α ∈riRn
+,1} ⊂{ f (α) : α ∈Rn
+,1} andalpha right arrow f left parenthesis alpha right parenthesis equals left parenthesis f left parenthesis alpha 1 right parenthesis comma period period period comma f left parenthesis alpha Subscript n Baseline right parenthesis right parenthesis Superscript upper T Baseline comma alpha greater than or equals 0α →f (α) = ( f (α1), ...,
f (αn))T , α ≥0 is a continuous mapping for real f left parenthesis 0 right parenthesis f (0) , we ﬁnd that StartSet f left parenthesis alpha right parenthesis colon alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline EndSet{ f (α) :
α ∈riRn
+,1} is bounded as a subset of the compact set StartSet f left parenthesis alpha right parenthesis colon alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline EndSet{ f (α) : α ∈riRn
+,1}. 
Due to [ 14], Theorem 17.2 we obtain thenupper C Subscript f Baseline equals c l c o n v left brace f left parenthesis alpha right parenthesis colon alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline right brace equals c o n v left parenthesis c l left brace f left parenthesis alpha right parenthesis colon alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline right brace right parenthesis equals c o n v left brace f left parenthesis alpha right parenthesis semicolon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline right brace semicolonC f = clconv{ f (α) : α ∈riRn
+,1} =
conv(cl{ f (α) : α ∈riRn
+,1}) = conv{ f (α); α ∈Rn
+,1}; indeed, if f left parenthesis alpha Superscript nu Baseline right parenthesis right arrow z comma nu right arrow normal infinity f (αν) →
z, ν →∞with alpha Superscript nu Baseline element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline commaαν ∈riRn
+,1, then, due to the compactness of double struck upper R Subscript plus comma 1 Superscript nRn
+,1 we have 
a subsequence left parenthesis alpha Superscript nu Super Subscript j Superscript Baseline right parenthesis(αν j) of left parenthesis alpha Superscript nu Baseline right parenthesis(αν), such that alpha Superscript nu Super Subscript j Superscript Baseline right arrow alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma j right arrow normal infinity periodαν j →α ∈Rn
+,1, j →∞. Because of 
f left parenthesis alpha Superscript nu Super Subscript j Superscript Baseline right parenthesis right arrow z comma j right arrow normal infinity f (αν j) →z, j →∞and the continuity off f , we get thenf left parenthesis alpha right parenthesis equals z comma f (α) = z, hence,z element of StartSet f left parenthesis alpha right parenthesis colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline EndSetz ∈
{ f (α) : α ∈Rn
+,1} and therefore, as asserted,c l left brace f left parenthesis alpha right parenthesis colon alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline right brace equals StartSet f left parenthesis alpha right parenthesis colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline EndSet periodcl{ f (α) : α ∈riRn
+,1} = { f (α) :
α ∈Rn
+,1}. Being the convex hull of a compact set,upper C Subscript fC f is also a compact set. For 
z element of upper C Subscript fz ∈C f we havez equals sigma summation Underscript i equals 1 Overscript nu Endscripts gamma Superscript i Baseline f left parenthesis alpha Superscript i Baseline right parenthesis comma gamma Superscript i Baseline greater than or equals 0 comma alpha Superscript i Baseline element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma i equals 1 comma 2 comma period period period commaz =
ν∑
i=1
γ i f (αi), γ i ≥0, αi ∈Rn
+,1, i = 1, 2, ..., andsigma summation Underscript i equals 1 Overscript nu Endscripts gamma Superscript i Baseline equals 1 period
ν∑
i=1
γ i =
1. Thus, z Subscript k Baseline equals sigma summation Underscript i equals 1 Overscript nu Endscripts gamma Superscript i Baseline f left parenthesis alpha Subscript k Superscript i Baseline right parenthesis greater than or equals f left parenthesis sigma summation Underscript i equals 1 Overscript nu Endscripts gamma Superscript i Baseline alpha Subscript k Superscript i Baseline right parenthesis equals f left parenthesis alpha Subscript k Baseline right parenthesiszk =
ν∑
i=1
γ i f (αi
k) ≥f (
ν∑
i=1
γ iαi
k) = f (αk) with alpha equals sigma summation Underscript i equals 1 Overscript nu Endscripts gamma Superscript i Baseline alpha Superscript i Baseline element of double struck upper R Subscript plus comma 1 Superscript n Baseline periodα =
ν∑
i=1
γ iαi ∈Rn
+,1.
Hence, we have therefore found an alpha element of double struck upper R Subscript plus comma 1 Superscript nα ∈Rn
+,1 such that z greater than or equals f left parenthesis alpha right parenthesis periodz ≥f (α).
(V) Due to the representation of an elementz element of upper C Subscript fz ∈C f stated in part (II), we havez Subscript k Baseline equals limit Underscript nu right arrow normal infinity Endscripts z Subscript k Superscript nu Baseline commazk =
lim
ν→∞zν
k, where z Subscript k Superscript nu Baseline equals sigma summation Underscript i equals 1 Overscript n Subscript nu Baseline Endscripts gamma Superscript nu i Baseline f left parenthesis alpha Subscript k Superscript nu i Baseline right parenthesiszν
k =
nν∑
i=1
γ νi f (ανi
k ) with alpha Superscript nu i Baseline element of r i double struck upper R Subscript plus comma 1 Superscript nανi ∈riRn
+,1 and gamma Superscript nu i Baseline greater than or equals 0 comma sigma summation Underscript i equals 1 Overscript n Subscript nu Baseline Endscripts gamma Superscript nu i Baseline equals 1 periodγ νi ≥0,
nν∑
i=1
γ νi =
1. As above, for each nu equals 1 comma 2 comma period period periodν = 1, 2, ... we have the relation z Superscript nu Baseline greater than or equals f left parenthesis alpha Superscript nu Baseline right parenthesis commazν ≥f (αν), with 
alpha Superscript nu Baseline equals sigma summation Underscript i equals 1 Overscript n Endscripts gamma Superscript nu i Baseline alpha Superscript nu i Baseline periodαν =
n∑
i=1
γ νiανi. However, the sequence left parenthesis alpha Superscript nu Baseline right parenthesis(αν) has an accumulation point alphaα in

360
13
Maximum Entropy Techniques
double struck upper R Subscript plus comma 1 Superscript n Baseline semicolonRn
+,1; We show now that alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline periodα ∈riRn
+,1. Assuming that alpha Subscript k Baseline equals 0αk = 0 for an index 1 less than or equals k less than or equals n1 ≤
k ≤n, with a sequence alpha Superscript nu Super Subscript j Superscript Baseline right arrow alpha comma j right arrow normal infinityαν j →α, j →∞we get the relation alpha Subscript k Superscript nu Super Subscript j Baseline right arrow alpha Subscript k Baseline equals 0α
ν j
k →αk = 0
and therefore f left parenthesis alpha Subscript k Superscript nu Super Subscript j Superscript Baseline right parenthesis right arrow f (α
ν j
k ) →f(0)equals plus normal infinity comma j right arrow normal infinity period= +∞, j →∞. However, this is not possible, 
since z Subscript k Superscript nu Super Subscript j Baseline greater than or equals f left parenthesis alpha Subscript k Superscript nu Super Subscript j Superscript Baseline right parenthesisz
ν j
k ≥f (α
ν j
k ) and left parenthesis z Superscript nu Baseline right parenthesis(zν) is a convergent sequence. Thus, alpha Subscript k Baseline greater than 0αk > 0. Fur-
thermore, from z Subscript k Superscript nu Super Subscript j Superscript Baseline greater than or equals f left parenthesis alpha Subscript k Superscript nu Super Subscript j Superscript Baseline right parenthesis comma j equals 1 comma 2 comma period period period comma z Subscript k Superscript nu Super Subscript j Superscript Baseline right arrow z Subscript k Baseline comma alpha Subscript k Superscript nu Super Subscript j Superscript Baseline right arrow alpha Subscript k Baseline comma j right arrow normal infinityz
ν j
k ≥f (α
ν j
k ), j = 1, 2, ..., z
ν j
k →zk, α
ν j
k →αk, j →∞we 
ﬁnally obtain z Subscript k Baseline greater than or equals f left parenthesis alpha Subscript k Baseline right parenthesiszk ≥f (αk), hence, z greater than or equals f left parenthesis alpha right parenthesisz ≥f (α) with an alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline periodα ∈riRn
+,1.
⬜
The above lemma yields now several consequences on upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis comma h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis periodHε(λ, β), hε(λ, β).
Corollary 13.3 For each lamda element of double struck upper R Subscript plus comma 1 Superscript nλ ∈Rn
+,1 the value v Subscript f Superscript asterisk Baseline left parenthesis lamda right parenthesisv∗
f (λ) has the representation 
StartLayout 1st Row v Subscript f Superscript asterisk Baseline left parenthesis lamda right parenthesis equals inf left brace lamda Superscript upper T Baseline f left parenthesis alpha right parenthesis colon alpha element of r i upper R Subscript plus comma 1 Superscript n Baseline right brace EndLayoutv∗
f (λ) = inf{λT f (α) : α ∈ri Rn
+,1}
(13.24) 
and for f left parenthesis 0 right parenthesis element of double struck upper R f (0) ∈R we may replace r i double struck upper R Subscript plus comma 1 Superscript nriRn
+,1 also by double struck upper R Subscript plus comma 1 Superscript nRn
+,1. 
For 
upper H left parenthesis lamda comma beta right parenthesis equals upper H Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesisH(λ, β) = H ( f )(λ, β) and 
h left parenthesis lamda comma beta right parenthesis equals h Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesish(λ, β) = h( f )(λ, β), with 
upper V equals upper C Subscript fV = C f , from  
Lemma 13.4 we get this result: 
Corollary 13.4 
(I) If f left parenthesis 0 right parenthesis element of double struck upper R f (0) ∈R, then upper H Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals upper H 0 Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesisH ( f )(λ, β) = H ( f )
0
(λ, β) and h Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals h 0 Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals inf left brace lamda Superscript upper T Baseline f left parenthesis alpha right parenthesis colon beta Superscript upper T Baseline f left parenthesis alpha right parenthesis equals v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesis right braceh( f )(λ, β) = h( f )
0 (λ, β) =
inf{λT f (α) : βT f (α) = v∗
f (β)}
for
all
lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript n Baseline periodλ, β ∈Rn
+,1.
Furthermore, 
upper H 0 Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals sup left brace lamda Superscript upper T Baseline f left parenthesis alpha right parenthesis colon beta Superscript upper T Baseline f left parenthesis alpha right parenthesis equals v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesis right braceH ( f )
0
(λ, β) = sup{λT f (α) : βT f (α) = v∗
f (β)}
for
all
lamda element of double struck upper R Subscript plus comma 1 Superscript nλ ∈Rn
+,1
and 
beta element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline periodβ ∈riRn
+,1.
(II) Iff left parenthesis 0 right parenthesis equals plus normal infinity f (0) = +∞andf left parenthesis t right parenthesis greater than or equals 0 comma 0 less than or equals t less than or equals 1 comma f (t) ≥0, 0 ≤t ≤1, thenupper H Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals upper H 0 Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesisH ( f )(λ, β) = H ( f )
0
(λ, β),h Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals h 0 Superscript left parenthesis f right parenthesis Baseline left parenthesis lamda comma beta right parenthesis commah( f )
(λ, β) = h( f )
0 (λ, β), provided that lamda element of double struck upper R Subscript plus comma 1 Superscript nλ ∈Rn
+,1 and beta element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline periodβ ∈riRn
+,1. If lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript nλ, β ∈Rn
+,1
are selected such thatlamda Subscript k Baseline greater than 0 comma beta Subscript k Baseline equals 0λk > 0, βk = 0 for an1 less than or equals k less than or equals n comma1 ≤k ≤n, thenupper H left parenthesis lamda comma beta right parenthesis equals plus normal infinity periodH(λ, β) = +∞.
For the case beta element of double struck upper R Subscript plus comma 1 Superscript n minus r i double struck upper R Subscript plus comma 1 Superscript nβ ∈Rn
+,1\riRn
+,1 we obtain this result: 
Corollary 13.5 If beta Subscript kappa Baseline equals 0βκ = 0 for an index l less than or equals kappa less than or equals nl ≤κ ≤n, then 
StartLayout 1st Row v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesis equals inf left brace sigma summation Underscript k equals kappa Overscript n Endscripts beta Subscript k Baseline f left parenthesis alpha Subscript k Baseline right parenthesis colon alpha Subscript k Baseline greater than 0 comma k not equals kappa comma sigma summation Underscript k not equals kappa Overscript n Endscripts alpha Subscript k Baseline equals 1 right brace comma EndLayoutv∗
f (β) = inf{
n
∑
k=κ
βk f (αk) : αk > 0, k /= κ,
n
∑
k/=κ
αk = 1},
(13.25) 
and in the casef left parenthesis 0 right parenthesis element of double struck upper R f (0) ∈R the inequalityleft single quotation mark left single quotation mark alpha Subscript k Baseline greater than 0 double primeleft single quotation mark left single quotation mark alpha Subscript k Baseline greater than 0“αk > 0left single quotation mark left single quotation mark alpha Subscript k Baseline greater than 0 double prime may be replaced also byleft single quotation mark left single quotation mark alpha Subscript k Baseline greater than or equals 0 double primeleft single quotation mark left single quotation mark alpha Subscript k Baseline greater than or equals 0“αk ≥0left single quotation mark left single quotation mark alpha Subscript k Baseline greater than or equals 0 double prime. 
If f left parenthesis 0 right parenthesis equals plus normal infinity f (0) = +∞and in addition f f is strictly monotonous decreasing on left bracket 0 comma 1 right bracket[0, 1], then 
upper V 0 left parenthesis beta right parenthesis equals normal empty setV0(β) = ∅. 
Indicating the dependence of the set upper C Subscript fC f , cf.  (13.23), as well as the values v Subscript f Superscript asterisk Baseline left parenthesis beta right parenthesisv∗
f (β)
on the index nn (= number of elements of normal upper OmegaΩ) by means of upper C Subscript f Superscript left parenthesis n right parenthesisC(n)
f , v Subscript f Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis beta right parenthesisv(n)∗
f
(β), resp., then 
v Subscript f Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis beta right parenthesis equals inf left brace beta Superscript upper T Baseline z colon z element of upper C Subscript f Superscript left parenthesis n right parenthesis Baseline right bracev(n)∗
f
(β) = inf{βT z : z ∈C(n)
f }. Moreover, for a beta element of double struck upper R Subscript plus comma 1 Superscript nβ ∈Rn
+,1 with beta Subscript k Baseline equals 0βk = 0, 1 less than or equals k less than or equals n1 ≤k ≤n, 
and using the notation ModifyingAbove beta With caret equals left parenthesis beta 1 comma period period period comma beta Subscript k minus 1 Baseline comma beta Subscript k plus 1 Baseline comma period period period comma beta Subscript n Baseline right parenthesis Superscript upper T ˆβ = (β1, ..., βk−1, βk+1, ..., βn)T , the equations (13.24) and 
(13.25) yield 
StartLayout 1st Row v Subscript f Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis beta right parenthesis equals v Subscript f Superscript left parenthesis n minus 1 right parenthesis asterisk Baseline left parenthesis ModifyingAbove beta With caret right parenthesis period EndLayoutv(n)∗
f
(β) = v(n−1)∗
f
( ˆβ).
(13.26)

13.2 The Generalized Inaccuracy Function H(λ, β)
361
Extending (13.26), we ﬁnd the following corollary: 
Corollary 13.6 Suppose thatlamda comma beta element of double struck upper R Subscript plus comma 1 Superscript nλ, β ∈Rn
+,1 withlamda Subscript k Baseline equals beta Subscript k Baseline equals 0λk = βk = 0 for an index1 less than or equals k less than or equals n1 ≤k ≤n. 
Moreover, the notation h Subscript epsilon Superscript left parenthesis n right parenthesis Baseline left parenthesis lamda comma beta right parenthesis comma h Superscript left parenthesis n right parenthesis Baseline left parenthesis lamda comma beta right parenthesish(n)
ε (λ, β), h(n)(λ, β) indicates the dependence of the func-
tions h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis comma h left parenthesis lamda comma beta right parenthesishε(λ, β), h(λ, β) on the dimension nn. Then, h Subscript epsilon Superscript left parenthesis n right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals h Subscript epsilon Superscript left parenthesis n minus 1 right parenthesis Baseline left parenthesis ModifyingAbove lamda With caret comma ModifyingAbove beta With caret right parenthesish(n)
ε (λ, β) = h(n−1)
ε
(ˆλ, ˆβ) for epsilon greater than 0ε >
0, as well as  h Superscript left parenthesis n right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals h Superscript left parenthesis n minus 1 right parenthesis Baseline left parenthesis ModifyingAbove lamda With caret comma ModifyingAbove beta With caret right parenthesis commah(n)(λ, β) = h(n−1)(ˆλ, ˆβ), provided that ModifyingAbove lamda With caret equals left parenthesis lamda 1 comma period period period comma lamda Subscript k minus 1 Baseline comma lamda Subscript k plus 1 Baseline comma period period period comma lamda Subscript n Baseline right parenthesis primeˆλ = (λ1, ..., λk−1, λk+1, ...,
λn)', and ModifyingAbove beta With caret ˆβ is deﬁned in the same way. 
A corresponding result for upper H left parenthesis lamda comma beta right parenthesisH(λ, β) is stated below: 
Corollary 13.7 Consider lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript nλ, β ∈Rn
+,1 with lamda Subscript k Baseline equals beta Subscript k Baseline equals 0λk = βk = 0 for a certain l less than or equals k less than or equals nl ≤k ≤n, 
and let indicate upper H Superscript left parenthesis n right parenthesis Baseline left parenthesis lamda comma beta right parenthesisH (n)(λ, β) the dependence of upper H left parenthesis lamda comma beta right parenthesisH(λ, β) on nn. Then, upper H Superscript left parenthesis n right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals upper H Superscript left parenthesis n minus 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis commaH (n)(λ, β) =
H (n−1)(λ, β), provided that lamda comma betaλ, β are deﬁned as above, and the implication beta Subscript j Baseline equals 0 right double arrow lamda Subscript j Baseline equals 0β j =
0 ⇒λ j = 0 holds for j not equals k j /= k. 
A relationship between v Subscript f Superscript asterisk Baseline left parenthesis lamda right parenthesisv∗
f (λ) and v Subscript f Superscript asterisk Baseline left parenthesis e right parenthesis comma e equals left parenthesis 1 divided by n comma period period period comma 1 divided by n right parenthesis Superscript upper Tv∗
f (e), e = (1/n, ..., 1/n)T is shown in the 
following. 
Corollary 13.8 For all lamda element of upper R Subscript plus comma 1 Superscript nλ ∈Rn
+,1 we have v Subscript f Superscript asterisk Baseline left parenthesis lamda right parenthesis less than or equals f left parenthesis 1 divided by n right parenthesis less than or equals v Subscript f Superscript asterisk Baseline left parenthesis 1 divided by n comma period period period comma 1 divided by n right parenthesis periodv∗
f (λ) ≤f (1/n) ≤v∗
f (1/n, ..., 1/n).
Proof Equation (13.24) in Corollary 13.3 yieldsv Subscript f Superscript asterisk Baseline left parenthesis lamda right parenthesis less than or equals lamda Superscript upper T Baseline f left parenthesis e right parenthesis equals f left parenthesis 1 divided by n right parenthesis periodv∗
f (λ) ≤λT f (e) = f (1/n). Select 
then an arbitraryepsilon greater than 0ε > 0. According to (13.24) there exists analpha Superscript epsilon Baseline element of r i double struck upper R Subscript plus comma 1 Superscript nαε ∈riRn
+,1, such that 
v Superscript asterisk Baseline left parenthesis e right parenthesis plus epsilon greater than or equals e Superscript upper T Baseline f left parenthesis alpha Superscript epsilon Baseline right parenthesis periodv∗(e) + ε ≥eT f (αε). Hence, v Superscript asterisk Baseline left parenthesis e right parenthesis greater than or equals negative epsilon plus sigma summation Underscript k equals 1 Overscript n Endscripts f left parenthesis alpha Subscript k Superscript epsilon Baseline right parenthesis greater than or equals negative epsilon plus f left parenthesis sigma summation Underscript k equals 1 Overscript n Endscripts left parenthesis 1 divided by n right parenthesis alpha Subscript k Superscript epsilon Baseline right parenthesis equals negative epsilon plus f left parenthesis 1 divided by n right parenthesis periodv∗(e) ≥−ε +
n∑
k=1
f (αε
k) ≥−ε + f (
n∑
k=1
(1/n)αε
k) =
−ε + f (1/n). Since epsilon greater than 0ε > 0 was chosen arbitrarily, we have v Subscript f Superscript asterisk Baseline left parenthesis e right parenthesis greater than or equals f left parenthesis 1 divided by n right parenthesisv∗
f (e) ≥f (1/n) and 
therefore v Subscript f Superscript asterisk Baseline left parenthesis e right parenthesis greater than or equals f left parenthesis 1 divided by n right parenthesis greater than or equals v Subscript f Superscript asterisk Baseline left parenthesis lamda right parenthesis periodv∗
f (e) ≥f (1/n) ≥v∗
f (λ).
⬜
Note that the assertion in this corollary can also be found in [ 1]. Having some 
properties of upper H Superscript left parenthesis n right parenthesisH (n) and h Superscript left parenthesis n right parenthesish(n), we determine now these functions for some important 
Fig. 13.3 Functionsf Subscript b fb

362
13
Maximum Entropy Techniques
Fig. 13.4 Convex setsupper C Subscript f Sub Subscript bC fb
special cases off f . Next to we consider, see Fig. 13.3, the familyleft parenthesis f Subscript b Baseline right parenthesis Subscript b greater than or equals 0( fb)b≥0, deﬁned by 
(cf. [ 1]) 
StartLayout 1st Row f Subscript b Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column StartFraction 1 Over 1 minus b EndFraction left parenthesis 1 minus t Superscript 1 minus b Baseline right parenthesis 2nd Column comma t greater than or equals 0 3rd Column f o r 4th Column b greater than 0 comma b not equals 1 2nd Row 1st Column minus log t 2nd Column comma t greater than or equals 0 3rd Column f o r 4th Column b equals 1 period EndLayout EndLayout fb(t) =
{
1
1−b(1 −t1−b) , t ≥0
for b > 0, b /= 1
−log t
, t ≥0
for b = 1.
The corresponding sets upper C Subscript f Sub Subscript bC fb are shown in the next Fig. 13.4. 
It is easy to see that each f Subscript b fb is a strictly monotonous decreasing, convex and for 
b greater than 0b > 0 strictly convex function on left bracket 0 comma plus normal infinity right bracket[0, +∞], such that negative normal infinity less than f Subscript b Baseline left parenthesis t right parenthesis less than plus normal infinity comma t greater than 0−∞< fb(t) < +∞, t > 0
and 
StartLayout 1st Row limit Underscript t right arrow 0 Endscripts f Subscript b Baseline left parenthesis t right parenthesis equals sup Underscript t greater than 0 Endscripts f Subscript b Baseline left parenthesis t right parenthesis equals f Subscript b Baseline left parenthesis 0 right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column StartFraction 1 Over 1 minus b EndFraction 2nd Column f o r 3rd Column 0 less than or equals b less than or equals 1 2nd Row 1st Column plus normal infinity 2nd Column f o r 3rd Column b greater than or equals 1 period EndLayout EndLayout lim
t→0 fb(t) = sup
t>0
fb(t) = fb(0) =
{
1
1−b
for 0 ≤b ≤1
+∞for b ≥1.
Moreover, f Subscript b Baseline left parenthesis t right parenthesis greater than or equals 0 equals f left parenthesis 1 right parenthesis fb(t) ≥0 = f (1) for 0 less than or equals t less than or equals 10 ≤t ≤1. Hence, f equals f Subscript b f = fb fulﬁlls all needed con-
ditions. Next to we want to determine v Subscript f Superscript asterisk Baseline left parenthesis lamda right parenthesisv∗
f (λ) and upper V Subscript o Baseline left parenthesis lamda right parenthesisVo(λ), where the dependence on 
b greater than or equalsb ≥is denoted by the notations v Subscript left parenthesis b right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis comma upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesisv∗
(b)(λ), V(b)o(λ) and upper C Subscript left parenthesis b right parenthesisC(b) .

13.2 The Generalized Inaccuracy Function H(λ, β)
363
Theorem 13.3 
(I) For each lamda element of double struck upper R Subscript plus comma 1 Superscript nλ ∈Rn
+,1 we have 
StartLayout 1st Row 1st Column v Subscript left parenthesis o right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals 1 minus max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline 2nd Row 1st Column Blank 3rd Row 1st Column v Subscript left parenthesis b right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals StartFraction 1 Over 1 minus b EndFraction sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline left parenthesis 1 minus left parenthesis StartFraction lamda Subscript k Baseline 1 divided by b Over sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline Superscript 1 divided by b Baseline EndFraction right parenthesis Superscript 1 minus b Baseline right parenthesis f o r b greater than 0 comma b not equals 1 4th Row 1st Column Blank 5th Row 1st Column Blank 6th Row 1st Column v Subscript left parenthesis 1 right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline log left parenthesis 1 divided by lamda Subscript k Baseline right parenthesis EndLayoutv∗
(o)(λ) = 1 −max
1≤k≤n λk
(13.27a) 
StartLayout 1st Row 1st Column v Subscript left parenthesis o right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals 1 minus max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline 2nd Row 1st Column Blank 3rd Row 1st Column v Subscript left parenthesis b right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals StartFraction 1 Over 1 minus b EndFraction sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline left parenthesis 1 minus left parenthesis StartFraction lamda Subscript k Baseline 1 divided by b Over sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline Superscript 1 divided by b Baseline EndFraction right parenthesis Superscript 1 minus b Baseline right parenthesis f o r b greater than 0 comma b not equals 1 4th Row 1st Column Blank 5th Row 1st Column Blank 6th Row 1st Column v Subscript left parenthesis 1 right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline log left parenthesis 1 divided by lamda Subscript k Baseline right parenthesis EndLayoutv∗
(b)(λ) =
1
1 −b
n
∑
k=1
λk(1 −( λk1/b
n∑
k=1
λk1/b
)
1−b
) for b > 0, b /= 1
(13.27b) 
StartLayout 1st Row 1st Column v Subscript left parenthesis o right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals 1 minus max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline 2nd Row 1st Column Blank 3rd Row 1st Column v Subscript left parenthesis b right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals StartFraction 1 Over 1 minus b EndFraction sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline left parenthesis 1 minus left parenthesis StartFraction lamda Subscript k Baseline 1 divided by b Over sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline Superscript 1 divided by b Baseline EndFraction right parenthesis Superscript 1 minus b Baseline right parenthesis f o r b greater than 0 comma b not equals 1 4th Row 1st Column Blank 5th Row 1st Column Blank 6th Row 1st Column v Subscript left parenthesis 1 right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline log left parenthesis 1 divided by lamda Subscript k Baseline right parenthesis EndLayoutv∗
(1)(λ) =
n
∑
k=1
λk log(1/λk)
(13.27c) 
(II) If lamda 1 greater than 0 comma period period period comma lamda Subscript m Baseline greater than 0 comma lamda Subscript m plus 1 Baseline equals period period period equals lamda Subscript n Baseline equals 0λ1 > 0, ..., λm > 0, λm+1 = ... = λn = 0, then for b greater than 0b > 0 we also have 
StartLayout 1st Row 1st Column v Subscript left parenthesis b right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline right parenthesis EndLayoutv∗
(b)(λ) = ˆλT fb(ˆα(b))
(13.27d) 
with lamda equals left parenthesis lamda 1 comma period period period comma lamda Subscript m Baseline right parenthesis Superscript upper Tλ = (λ1, ..., λm)T , ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline equals left parenthesis alpha 1 Superscript left parenthesis b right parenthesis Baseline comma period period period period comma alpha Subscript m Superscript left parenthesis b right parenthesis Baseline right parenthesis Superscript upper Tˆα(b) = (α(b)
1 , ...., α(b)
m )T and 
StartLayout 1st Row 1st Column alpha Subscript k Superscript left parenthesis b right parenthesis Baseline equals 2nd Column StartLayout Enlarged left brace 1st Row 1st Column lamda Subscript k Superscript 1 divided by b Baseline divided by sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Superscript 1 divided by b 2nd Column f o r b greater than 0 comma b not equals 1 3rd Column Blank 2nd Row 1st Column lamda Subscript k 2nd Column f o r b equals 1 3rd Column Blank EndLayout 3rd Column a n d k equals 1 comma period period period comma m comma EndLayoutα(b)
k
=
⎧
⎨
⎩
λ1/b
k /
n∑
k=1
λ1/b
k
for b > 0, b /= 1
λk
for b = 1
and k = 1, ..., m,
where ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesisˆα(b) is determined uniquely. 
(III) We have 
StartLayout 1st Row 1st Column upper V Subscript left parenthesis o right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals left brace f Subscript o Baseline left parenthesis alpha right parenthesis colon alpha element of upper R Subscript plus comma 1 Superscript n Baseline comma sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline alpha Subscript k Baseline equals max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline right brace comma lamda element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals StartSet f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet w i t h alpha Superscript left parenthesis b right parenthesis Baseline equals left parenthesis alpha 1 Superscript left parenthesis b right parenthesis Baseline right parenthesis Superscript upper T Baseline comma lamda element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline comma b greater than 0 4th Row 1st Column Blank 5th Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals left brace z colon z Subscript k Baseline equals f Subscript b Baseline left parenthesis alpha Subscript k Superscript left parenthesis b right parenthesis Baseline right parenthesis comma lamda Subscript k Baseline greater than 0 a n d z Subscript k Baseline equals StartFraction 1 Over 1 minus b EndFraction comma lamda Subscript k Baseline equals 0 right brace 6th Row 1st Column Blank 2nd Column equals StartSet f Subscript b Baseline left parenthesis alpha overTilde Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet comma lamda element of double struck upper R Subscript plus comma 1 Superscript n Baseline minus r i double struck upper R Subscript plus comma 1 Superscript n Baseline comma 0 less than b less than 1 comma a n d c e r t a i n alpha overTilde Superscript left parenthesis b right parenthesis Baseline 7th Row 1st Column Blank 8th Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals normal empty set comma lamda element of upper R Subscript plus comma 1 Superscript n Baseline minus r i upper R Subscript plus comma 1 Superscript n Baseline a n d b greater than or equals 1 period EndLayoutV(o)o(λ) = { fo(α) : α ∈Rn
+,1,
n
∑
k=1
λkαk = max
1≤k≤n λk},
λ ∈Rn
+,1,
(13.27e) 
StartLayout 1st Row 1st Column upper V Subscript left parenthesis o right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals left brace f Subscript o Baseline left parenthesis alpha right parenthesis colon alpha element of upper R Subscript plus comma 1 Superscript n Baseline comma sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline alpha Subscript k Baseline equals max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline right brace comma lamda element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals StartSet f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet w i t h alpha Superscript left parenthesis b right parenthesis Baseline equals left parenthesis alpha 1 Superscript left parenthesis b right parenthesis Baseline right parenthesis Superscript upper T Baseline comma lamda element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline comma b greater than 0 4th Row 1st Column Blank 5th Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals left brace z colon z Subscript k Baseline equals f Subscript b Baseline left parenthesis alpha Subscript k Superscript left parenthesis b right parenthesis Baseline right parenthesis comma lamda Subscript k Baseline greater than 0 a n d z Subscript k Baseline equals StartFraction 1 Over 1 minus b EndFraction comma lamda Subscript k Baseline equals 0 right brace 6th Row 1st Column Blank 2nd Column equals StartSet f Subscript b Baseline left parenthesis alpha overTilde Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet comma lamda element of double struck upper R Subscript plus comma 1 Superscript n Baseline minus r i double struck upper R Subscript plus comma 1 Superscript n Baseline comma 0 less than b less than 1 comma a n d c e r t a i n alpha overTilde Superscript left parenthesis b right parenthesis Baseline 7th Row 1st Column Blank 8th Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals normal empty set comma lamda element of upper R Subscript plus comma 1 Superscript n Baseline minus r i upper R Subscript plus comma 1 Superscript n Baseline a n d b greater than or equals 1 period EndLayoutV(b)o(λ) = { fb(α(b))} with α(b) = (α(b)
1 )T , λ ∈riRn
+,1, b > 0
(13.27f) 
StartLayout 1st Row 1st Column upper V Subscript left parenthesis o right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals left brace f Subscript o Baseline left parenthesis alpha right parenthesis colon alpha element of upper R Subscript plus comma 1 Superscript n Baseline comma sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline alpha Subscript k Baseline equals max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline right brace comma lamda element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals StartSet f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet w i t h alpha Superscript left parenthesis b right parenthesis Baseline equals left parenthesis alpha 1 Superscript left parenthesis b right parenthesis Baseline right parenthesis Superscript upper T Baseline comma lamda element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline comma b greater than 0 4th Row 1st Column Blank 5th Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals left brace z colon z Subscript k Baseline equals f Subscript b Baseline left parenthesis alpha Subscript k Superscript left parenthesis b right parenthesis Baseline right parenthesis comma lamda Subscript k Baseline greater than 0 a n d z Subscript k Baseline equals StartFraction 1 Over 1 minus b EndFraction comma lamda Subscript k Baseline equals 0 right brace 6th Row 1st Column Blank 2nd Column equals StartSet f Subscript b Baseline left parenthesis alpha overTilde Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet comma lamda element of double struck upper R Subscript plus comma 1 Superscript n Baseline minus r i double struck upper R Subscript plus comma 1 Superscript n Baseline comma 0 less than b less than 1 comma a n d c e r t a i n alpha overTilde Superscript left parenthesis b right parenthesis Baseline 7th Row 1st Column Blank 8th Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals normal empty set comma lamda element of upper R Subscript plus comma 1 Superscript n Baseline minus r i upper R Subscript plus comma 1 Superscript n Baseline a n d b greater than or equals 1 period EndLayoutV(b)o(λ) = {z : zk = fb(α(b)
k ), λk > 0 and zk =
1
1 −b, λk = 0}
= { fb(˜α(b))}, λ ∈Rn
+,1\riRn
+,1, 0 < b < 1, and certain ˜α(b)
(13.27g) 
StartLayout 1st Row 1st Column upper V Subscript left parenthesis o right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals left brace f Subscript o Baseline left parenthesis alpha right parenthesis colon alpha element of upper R Subscript plus comma 1 Superscript n Baseline comma sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline alpha Subscript k Baseline equals max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline right brace comma lamda element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma 2nd Row 1st Column Blank 3rd Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals StartSet f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet w i t h alpha Superscript left parenthesis b right parenthesis Baseline equals left parenthesis alpha 1 Superscript left parenthesis b right parenthesis Baseline right parenthesis Superscript upper T Baseline comma lamda element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline comma b greater than 0 4th Row 1st Column Blank 5th Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals left brace z colon z Subscript k Baseline equals f Subscript b Baseline left parenthesis alpha Subscript k Superscript left parenthesis b right parenthesis Baseline right parenthesis comma lamda Subscript k Baseline greater than 0 a n d z Subscript k Baseline equals StartFraction 1 Over 1 minus b EndFraction comma lamda Subscript k Baseline equals 0 right brace 6th Row 1st Column Blank 2nd Column equals StartSet f Subscript b Baseline left parenthesis alpha overTilde Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet comma lamda element of double struck upper R Subscript plus comma 1 Superscript n Baseline minus r i double struck upper R Subscript plus comma 1 Superscript n Baseline comma 0 less than b less than 1 comma a n d c e r t a i n alpha overTilde Superscript left parenthesis b right parenthesis Baseline 7th Row 1st Column Blank 8th Row 1st Column upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis 2nd Column equals normal empty set comma lamda element of upper R Subscript plus comma 1 Superscript n Baseline minus r i upper R Subscript plus comma 1 Superscript n Baseline a n d b greater than or equals 1 period EndLayoutV(b)o(λ) = ∅,
λ ∈Rn
+,1\ri Rn
+,1 and b ≥1.
(13.27h) 
Proof Consider ﬁrst the case b equals 0b = 0. From (13.23) we easily ﬁnd that upper C Subscript left parenthesis o right parenthesis Baseline equals c l c o n v left brace f 0 left parenthesis alpha right parenthesis colon alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline right brace equals left brace left parenthesis 1 minus alpha Subscript k Baseline right parenthesis Subscript k equals 1 comma period period period comma n Baseline colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline right brace periodC(o) =
clconv{ f0(α) : α ∈riRn
+,1} = {(1 −αk)k=1,...,n : α ∈Rn
+,1}. Because of (13.24) we  
further have v Subscript left parenthesis o right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis equals inf left brace 1 minus lamda Superscript upper T Baseline alpha colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline right brace equals 1 minus sup left brace lamda Superscript upper T Baseline alpha colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline right brace equals 1 minus max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline periodv∗
(o)(λ) = inf{1 −λT α : α ∈Rn
+,1} = 1 −sup{λT α : α ∈Rn
+,1} = 1 −
max
1≤k≤n λk.Hence,upper V Subscript left parenthesis o right parenthesis o Baseline left parenthesis lamda right parenthesis equals left brace z element of upper C Subscript left parenthesis o right parenthesis Baseline colon lamda Superscript upper T Baseline alpha equals max Underscript l less than or equals k less than or equals n Endscripts lamda Subscript k Baseline comma alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline right brace commaV(o)o(λ) = {z ∈C(o) : λT α = max
l≤k≤n λk, α ∈Rn
+,1},which shows the

364
13
Maximum Entropy Techniques
assertion for b equals 0b = 0. Thus, let now b greater than 0b > 0 and lamda Subscript k Baseline greater than 0 comma k equals 1 comma period period period comma m comma lamda Subscript m plus 1 Baseline equals period period period equals lamda Subscript n Baseline equals 0 periodλk > 0, k = 1, ..., m, λm+1 = ... =
λn = 0. From (13.24) and (13.26) we get then v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis equals v Subscript left parenthesis b right parenthesis Superscript left parenthesis m right parenthesis asterisk Baseline left parenthesis ModifyingAbove lamda With caret right parenthesis equals inf left brace ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesis colon ModifyingAbove alpha With caret element of r i double struck upper R Subscript plus comma 1 Superscript m Baseline right bracev(n)∗
(b) (λ) = v(m)∗
(b) (ˆλ) = inf{ˆλT fb(ˆα) :
ˆα ∈riRm
+,1} with ModifyingAbove lamda With caret equals left parenthesis lamda 1 comma period period period comma lamda Subscript m Baseline right parenthesis Superscript upper Tˆλ = (λ1, ..., λm)T and ModifyingAbove alpha With caret equals left parenthesis alpha 1 comma period period period comma alpha Subscript m Baseline right parenthesis Superscript upper T Baseline periodˆα = (α1, ..., αm)T . The Lagrangian of the 
convex optimization problem 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column ModifyingAbove alpha With caret element of r i double struck upper R Subscript plus comma 1 Superscript m EndLayout min
ˆλT fb(ˆα)
(13.28a) 
StartLayout 1st Row 1st Column min 2nd Column ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column ModifyingAbove alpha With caret element of r i double struck upper R Subscript plus comma 1 Superscript m EndLayouts.t.
ˆα ∈riRm
+,1
(13.28b) 
is then given by upper L left parenthesis ModifyingAbove alpha With caret comma u right parenthesis equals ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesis plus u left parenthesis sigma summation Underscript k equals 1 Overscript m Endscripts alpha Subscript k Baseline minus 1 right parenthesisL(ˆα, u) = ˆλT fb(ˆα) + u(
m∑
k=1
αk −1). Moreover, the optimality 
conditions—without considering the constraints alpha Subscript k Baseline greater than 0 comma k equals 1 comma period period period comma mαk > 0, k = 1, ..., m—read 
StartLayout 1st Row 1st Column 0 2nd Column equals StartFraction partial differential upper L Over partial differential u EndFraction equals sigma summation Underscript k equals 1 Overscript m Endscripts alpha Subscript k Baseline minus 1 2nd Row 1st Column Blank 3rd Row 1st Column 0 2nd Column equals StartFraction partial differential upper L Over partial differential alpha Subscript k Baseline EndFraction equals lamda Subscript k Baseline upper D f Subscript b Baseline left parenthesis alpha Subscript k Baseline right parenthesis plus u EndLayout0 = ∂L
∂u =
m
∑
k=1
αk −1
(13.29a) 
StartLayout 1st Row 1st Column 0 2nd Column equals StartFraction partial differential upper L Over partial differential u EndFraction equals sigma summation Underscript k equals 1 Overscript m Endscripts alpha Subscript k Baseline minus 1 2nd Row 1st Column Blank 3rd Row 1st Column 0 2nd Column equals StartFraction partial differential upper L Over partial differential alpha Subscript k Baseline EndFraction equals lamda Subscript k Baseline upper D f Subscript b Baseline left parenthesis alpha Subscript k Baseline right parenthesis plus u EndLayout0 = ∂L
∂αk
= λk Dfb(αk) + u
(13.29b) 
Insertingupper D f Subscript b Baseline left parenthesis t right parenthesis equals minus t Superscript negative b Baseline comma t greater than 0Dfb(t) = −t−b, t > 0 forb greater than 0 comma b not equals 1b > 0, b /= 1 andupper D f 1 left parenthesis t right parenthesis equals negative 1 divided by t comma t greater than 0Df1(t) = −1/t, t > 0 forb equals 1b =
1 into (13.29a), yields 
StartLayout 1st Row 1st Column alpha Subscript k Baseline equals alpha Subscript k Superscript left parenthesis b right parenthesis Baseline equals StartLayout Enlarged left brace 1st Row 1st Column lamda Subscript k Superscript 1 divided by b Baseline divided by sigma summation Underscript k equals 1 Overscript m Endscripts lamda Subscript k Superscript 1 divided by b Baseline 2nd Column f o r b greater than 0 comma b not equals 1 3rd Column Blank 2nd Row 1st Column lamda Subscript k Baseline 2nd Column f o r b equals 1 3rd Column Blank EndLayout 2nd Column Blank 3rd Column a n d k equals 1 comma ellipsis comma m period EndLayoutαk = α(b)
k
=
⎧
⎨
⎩
λ1/b
k /
m∑
k=1
λ1/b
k
for b > 0, b /= 1
λk
for b = 1
and k = 1, . . . , m.
Since alpha Subscript k Superscript left parenthesis b right parenthesis Baseline greater than 0 comma k equals 1 comma period period period comma mα(b)
k
> 0, k = 1, ..., m, also the conditions alpha Subscript k Baseline greater than 0 comma k equals 1 comma period period period comma mαk > 0, k = 1, ..., m, hold. More-
over, ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline equals left parenthesis alpha 1 Superscript left parenthesis b right parenthesis Baseline comma period period period comma alpha Subscript m Superscript left parenthesis b right parenthesis Baseline right parenthesis Superscript upper Tˆα(b) = (α(b)
1 , ..., α(b)
m )T is the unique solution of (13.28a), (13.28b), since 
alpha right arrow lamda Superscript upper T Baseline f left parenthesis alpha right parenthesisα →λT f (α) is strictly convex onr i double struck upper R Subscript plus comma 1 Superscript mriRm
+,1. Hence,v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis equals v Subscript left parenthesis b right parenthesis Superscript left parenthesis m right parenthesis asterisk Baseline left parenthesis lamda right parenthesis equals ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline right parenthesis periodv(n)∗
(b) (λ) = v(m)∗
(b) (λ) = ˆλT fb(ˆα(b)).
Using the convention 0 dot left parenthesis plus normal infinity right parenthesis equals 00 · (+∞) = 0, yields the rest of (13.27b). In addition, this 
proves also part (II). For showing (III) and therefore also (I), let lamda element of r i double struck upper R Subscript plus comma 1 Superscript nλ ∈riRn
+,1 and 
z element of upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis comma b greater than 0 periodz ∈V(b)o(λ), b > 0. We remember that f Subscript b Baseline left parenthesis 0 right parenthesis equals plus normal infinity fb(0) = +∞for b greater than or equals 1b ≥1 and f Subscript b Baseline left parenthesis 0 right parenthesis element of upper R fb(0) ∈R for 
0 less than or equals b less than 1 period0 ≤b < 1. Part (II) yields then alpha Superscript left parenthesis b right parenthesis Baseline equals left parenthesis alpha 1 Superscript left parenthesis b right parenthesis Baseline comma period period period comma alpha Subscript n Superscript left parenthesis b right parenthesis Baseline right parenthesis Superscript upper T Baseline element of r i upper R Subscript plus comma 1 Superscript nα(b) = (α(b)
1 , ..., α(b)
n )T ∈ri Rn
+,1 and v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis equals lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesisv(n)∗
(b) (λ) =
λT fb(α(b)), hence, f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis element of upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis left parenthesis not equals normal empty set right parenthesis period fb(α(b)) ∈V(b)o(λ)(/= ∅).
According to Lemma 13.4, for  0 less than b less than 10 < b < 1, b greater than or equals 1b ≥1, resp., there is alpha element of double struck upper R Subscript plus comma 1 Superscript nα ∈Rn
+,1, 
alpha element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline commaα ∈riRn
+,1,, resp., such that z greater than or equals f Subscript b Baseline left parenthesis alpha right parenthesisz ≥fb(α) (to each z element of upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis right parenthesis periodz ∈V(b)o(λ)). This immediately 
yieldsv Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis equals lamda Superscript upper T Baseline z equals lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis alpha right parenthesis commav(n)∗
(b) (λ) = λT z = λT fb(α), sincef Subscript b Baseline left parenthesis alpha right parenthesis element of upper C Subscript left parenthesis b right parenthesis Baseline period fb(α) ∈C(b). Thus,z equals f Subscript b Baseline left parenthesis alpha right parenthesis commaz = fb(α), because of 
lamda Subscript k Baseline greater than 0 comma k equals 1 comma period period period comma n periodλk > 0, k = 1, ..., n.Assumingalpha not equals alpha Superscript left parenthesis b right parenthesis Baseline commaα /= α(b),foralpha overTilde equals one half alpha plus one half alpha Superscript left parenthesis b right parenthesis˜α = 1
2α + 1
2α(b) we get on the one hand 
alpha overTilde element of r i double struck upper R Subscript plus comma 1 Superscript n˜α ∈riRn
+,1, hence, f Subscript b Baseline left parenthesis alpha overTilde right parenthesis element of upper C Subscript left parenthesis b right parenthesis Baseline comma b greater than 0 fb(˜α) ∈C(b), b > 0, and on the other hand we have v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis less than or equals lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis alpha overTilde right parenthesis less than one half lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis alpha right parenthesis plus one half lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis equals v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis commav(n)∗
(b) (λ) ≤
λT fb(˜α) < 1
2λT fb(α) + 1
2λT fb(α(b)) = v(n)∗
(b) (λ), sincef Subscript b fb is strictly convex forb greater than 0b >
0. Consequently, alpha equals alpha Superscript left parenthesis b right parenthesisα = α(b) and therefore upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis equals StartSet f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet comma b greater than 0 comma lamda element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline periodV(b)o(λ) = { fb(α(b))}, b > 0, λ ∈riRn
+,1.
Now consider lamda 1 greater than 0 comma period period period comma lamda Subscript m Baseline greater than 0 comma lamda Subscript m plus 1 Baseline equals period period period equals lamda Subscript n Baseline equals 0 periodλ1 > 0, ..., λm > 0, λm+1 = ... = λn = 0. Again from part (II) we 
get v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis equals v Subscript left parenthesis b right parenthesis Superscript left parenthesis m right parenthesis asterisk Baseline left parenthesis ModifyingAbove lamda With caret right parenthesis equals lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline right parenthesis periodv(n)∗
(b) (λ) = v(m)∗
(b) (ˆλ) = λT fb(ˆα(b)). We put alpha overTilde Superscript left parenthesis b right parenthesis Baseline equals left parenthesis alpha 1 Superscript left parenthesis b right parenthesis Baseline comma period period period comma alpha Subscript m Superscript left parenthesis b right parenthesis Baseline comma 0 comma period period period comma 0 right parenthesis Superscript upper T Baseline period˜α(b) = (α(b)
1 , ..., α(b)
m , 0, ..., 0)T . Let 
0 less than b less than 10 < b < 1. Because of f left parenthesis 0 right parenthesis equals 1 divided by left parenthesis 1 minus b right parenthesis element of double struck upper R f (0) = 1/(1 −b) ∈R, due to Lemma 13.4 we obtain

13.2 The Generalized Inaccuracy Function H(λ, β)
365
upper C Subscript left parenthesis b right parenthesis Baseline equals c o n v left brace f Subscript b Baseline left parenthesis alpha right parenthesis colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline right braceC(b) = conv{ fb(α) : α ∈Rn
+,1}, hence, f Subscript b Baseline left parenthesis alpha overTilde Superscript left parenthesis b right parenthesis Baseline right parenthesis element of upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis comma fb(˜α(b)) ∈V(b)o(λ), since alpha overTilde Superscript left parenthesis b right parenthesis Baseline element of double struck upper R Subscript plus comma 1 Superscript n˜α(b) ∈Rn
+,1 and 
lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis alpha overTilde Superscript left parenthesis b right parenthesis Baseline right parenthesis equals ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline right parenthesis equals v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis periodλT fb(˜α(b)) = ˆλT fb(ˆα(b)) = v(n)∗
(b) (λ).
Consider now z element of upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis periodz ∈V(b)o(λ). According to Lemma 13.4, part upper VV , there is alpha element of double struck upper R Subscript plus comma 1 Superscript nα ∈Rn
+,1
with z greater than or equals f Subscript b Baseline left parenthesis alpha right parenthesis periodz ≥fb(α). Because of ModifyingAbove lamda With caret Superscript upper T Baseline ModifyingAbove z With caret equals lamda Superscript upper T Baseline z equals v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis equals lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis alpha right parenthesis equals ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesisˆλT ˆz = λT z = v(n)∗
(b) (λ) = λT fb(α) = ˆλT fb(ˆα) we have 
f Subscript b Baseline left parenthesis alpha right parenthesis element of upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis fb(α) ∈V(b)o(λ) and ModifyingAbove z With caret equals f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesis commaˆz = fb(ˆα), since lamda Subscript k Baseline greater than 0 comma k equals 1 comma 2 comma period period period comma m periodλk > 0, k = 1, 2, ..., m. Assuming ModifyingAbove alpha With caret not equals ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesisˆα /= ˆα(b)
and considering then under this assumption gamma equals one half alpha plus one half alpha overTilde Superscript left parenthesis b right parenthesis Baseline commaγ = 1
2α + 1
2 ˜α(b), we get f Subscript b Baseline left parenthesis gamma right parenthesis element of upper C Subscript left parenthesis b right parenthesis Baseline comma fb(γ ) ∈C(b),
since gamma element of double struck upper R Subscript plus comma 1 Superscript nγ ∈Rn
+,1 and v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis less than or equals lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis gamma right parenthesis equals ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove gamma With caret right parenthesis less than one half ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesis plus one half ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline right parenthesis equals v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis periodv(n)∗
(b) (λ) ≤λT fb(γ ) = ˆλT fb( ˆγ ) < 1
2 ˆλT fb(ˆα) + 1
2 ˆλT fb(ˆα(b)) =
v(n)∗
(b) (λ). However, this yields a contradiction, hence, it holds ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline equals ModifyingAbove alpha With caretˆα(b) = ˆα. Obviously, 
each alpha element of double struck upper R Subscript plus comma 1 Superscript nα ∈Rn
+,1 fulﬁlling this equation is contained in upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesisV(b)o(λ). 
Thus,
upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis equals left brace f Subscript b Baseline left parenthesis alpha right parenthesis colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma ModifyingAbove alpha With caret equals ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline right brace equals StartSet f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis EndSet equals left brace left parenthesis f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis Superscript upper T Baseline comma 1 divided by left parenthesis 1 minus b right parenthesis comma period period period comma 1 divided by left parenthesis 1 minus b right parenthesis right parenthesis Superscript upper T Baseline right brace commaV(b)o(λ) = { fb(α) : α ∈Rn
+,1, ˆα = ˆα(b)} = { fb(α(b))} = {( fb(α(b))T ,
1/(1 −b), ..., 1/(1 −b))T }, since sigma summation Underscript k equals 1 Overscript m Endscripts alpha Subscript k Superscript left parenthesis b right parenthesis Baseline equals 1
m∑
k=1
α(b)
k
= 1 and therefore alpha Subscript k Baseline equals 0 comma k equals m plus 1 comma period period period comma n periodαk = 0, k = m +
1, ..., n. Finally, let b greater than or equals 1 periodb ≥1. Due to f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline right parenthesis equals left parenthesis f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline right parenthesis Superscript upper T Baseline comma plus normal infinity comma period period period comma plus normal infinity right parenthesis Superscript upper T fb(ˆα(b)) = ( fb(ˆα(b))T , +∞, ..., +∞)T and 
upper C Subscript left parenthesis b right parenthesis Baseline subset of double struck upper R Superscript nC(b) ⊂Rn, we ﬁnd f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline right parenthesis not an element of upper C Subscript left parenthesis b right parenthesis Baseline period fb(ˆα(b)) /∈C(b). Suppose that zz lies in upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis periodV(b)o(λ). According to 
Lemma 13.4 left parenthesis f left parenthesis 0 right parenthesis equals plus normal infinity right parenthesis( f (0) = +∞) there is then an alpha element of r i double struck upper R Subscript plus comma 1 Superscript nα ∈riRn
+,1 with z greater than or equals f left parenthesis alpha right parenthesisz ≥f (α) and there-
fore v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis equals lamda Superscript upper T Baseline z equals ModifyingAbove lamda With caret Superscript upper T Baseline ModifyingAbove z With caret equals lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis alpha right parenthesis equals ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesis periodv(n)∗
(b) (λ) = λT z = ˆλT ˆz = λT fb(α) = ˆλT fb(ˆα). Because of alpha element of r i double struck upper R Subscript plus comma 1 Superscript nα ∈riRn
+,1, it is  
sigma summation Underscript k equals 1 Overscript m Endscripts alpha Subscript k Baseline less than 1
m∑
k=1
αk < 1 and therefore ModifyingAbove alpha With caret not equals ModifyingAbove alpha With caret Superscript left parenthesis b right parenthesis Baseline periodˆα /= ˆα(b). On the other hand we have gamma equals one half alpha plus one half alpha overTilde Superscript left parenthesis b right parenthesis Baseline element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline periodγ = 1
2α + 1
2 ˜α(b) ∈
riRn
+,1. This yields v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis less than or equals lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis gamma right parenthesis equals ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove gamma With caret right parenthesis less than one half ModifyingAbove lamda With caret prime f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesis plus one half ModifyingAbove lamda With caret Superscript upper T Baseline f Subscript b Baseline left parenthesis ModifyingAbove alpha With caret right parenthesis Superscript left parenthesis b right parenthesis Baseline right parenthesis equals v Subscript left parenthesis b right parenthesis Superscript left parenthesis n right parenthesis asterisk Baseline left parenthesis lamda right parenthesis commav(n)∗
(b) (λ) ≤λT fb(γ ) = ˆλT fb( ˆγ ) < 1
2 ˆλ' fb(ˆα) + 1
2 ˆλT fb(ˆα)(b)) =
v(n)∗
(b) (λ),
which
is 
again a contradiction. Consequently, upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis equals normal empty setV(b)o(λ) = ∅for b greater than or equals 1b ≥1 and lamda not an element of r i double struck upper R Subscript plus comma 1 Superscript n Baseline periodλ /∈riRn
+,1.
⬜
Remark 13.8 
(I) Obviously, v Subscript left parenthesis 1 right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis equals sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline log StartFraction 1 Over lamda Subscript k Baseline EndFractionv∗
(1)(λ) =
n∑
k=1
λk log 1
λk is the (Shannon-) entropy of the discrete 
distribution lamdaλ. 
(II) Assume thatlamda 1 greater than 0 comma period period period comma lamda Subscript m Baseline greater than 0 comma lamda Subscript m plus 1 Baseline equals period period period equals lamda Subscript n Baseline equals 0 periodλ1 > 0, ..., λm > 0, λm+1 = ... = λn = 0. Forb greater than 0 comma b not equals 1b > 0, b /= 1, from  
(13.27b) we get 
StartLayout 1st Row 1st Column v Subscript left parenthesis b right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis 2nd Column equals StartFraction 1 Over 1 minus b EndFraction sigma summation Underscript k equals 1 Overscript m Endscripts lamda Subscript k Baseline left parenthesis 1 minus left parenthesis lamda Subscript k Baseline Superscript 1 divided by b Baseline divided by sigma summation Underscript k equals 1 Overscript m Endscripts lamda Subscript k Baseline Superscript 1 divided by b Baseline right parenthesis Superscript 1 minus b Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals StartFraction 1 Over 1 minus b EndFraction left parenthesis 1 minus sigma summation Underscript k equals 1 Overscript m Endscripts lamda Subscript k Baseline Superscript 1 divided by b Baseline divided by left parenthesis sigma summation Underscript k equals 1 Overscript m Endscripts lamda Subscript k Baseline Superscript 1 divided by b Baseline right parenthesis Superscript 1 minus b Baseline right parenthesis 3rd Column Blank 4th Column Blank 3rd Row 1st Column Blank 2nd Column equals StartFraction 1 Over 1 minus b EndFraction left parenthesis 1 minus sigma summation Underscript k equals 1 Overscript m Endscripts lamda Subscript k Baseline Superscript 1 divided by b Baseline right parenthesis Superscript b Baseline right parenthesis equals StartFraction 1 Over 1 minus b EndFraction left parenthesis 1 minus left parenthesis sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline Superscript 1 divided by b Baseline right parenthesis Superscript b Baseline right parenthesis period EndLayoutv∗
(b)(λ) =
1
1 −b
m
∑
k=1
λk(1 −(λk
1/b/
m
∑
k=1
λk
1/b)1−b)
=
1
1 −b(1 −
m
∑
k=1
λk
1/b/(
m
∑
k=1
λk
1/b)1−b)
=
1
1 −b(1 −
m
∑
k=1
λk
1/b)b) =
1
1 −b(1 −(
n
∑
k=1
λk
1/b)b).
(13.30) 
Hence, 
v Subscript left parenthesis b right parenthesis Superscript asterisk Baseline left parenthesis lamda right parenthesis equals StartFraction 1 Over 1 minus b EndFraction left parenthesis 1 minus upper M Subscript left parenthesis 1 divided by b right parenthesis Baseline left parenthesis lamda right parenthesis right parenthesis commav∗
(b)(λ) =
1
1 −b(1 −M(1/b)(λ)),

366
13
Maximum Entropy Techniques
provided that—see [ 6]—the meanupper M Subscript r Baseline left parenthesis z right parenthesis comma z element of double struck upper R Subscript plus Superscript nMr(z), z ∈Rn
+ is deﬁned byupper M Subscript r Baseline left parenthesis z right parenthesis equals left parenthesis sigma summation Underscript k equals 1 Overscript n Endscripts z Subscript k Baseline Superscript r Baseline right parenthesis Superscript 1 divided by rMr(z) = (
n∑
k=1
zkr)1/r. 
According to [ 6], where one ﬁnds also other properties ofupper M Subscript rMr,upper M Subscript rMr is convex forr greater than 1r > 1
and concave for r less than 1r < 1, which follows from the concavity of v Superscript asterisk Baseline left parenthesis dot right parenthesisv∗(·). 
Having upper V Subscript left parenthesis b right parenthesis o Baseline left parenthesis lamda right parenthesis comma b greater than or equals 0V(b)o(λ), b ≥0, also the functions upper H Superscript left parenthesis b right parenthesis Baseline equals upper H Superscript f Super Subscript bH (b) = H fb and h Superscript left parenthesis b right parenthesis Baseline equals h Superscript left parenthesis f Super Subscript b Superscript right parenthesish(b) = h( fb) can be 
determined. 
Corollary 13.9 
(I) For b equals 0b = 0 we have 
upper H Superscript left parenthesis o right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals sup left brace 1 minus lamda Superscript upper T Baseline alpha colon alpha element of upper R Subscript plus comma 1 Superscript n Baseline comma beta Superscript upper T Baseline alpha equals max Underscript 1 less than or equals k less than or equals n Endscripts beta Subscript k Baseline right brace f o r a l l lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript n Baseline commaH (o)(λ, β) = sup{1 −λT α : α ∈Rn
+,1, βT α = max
1≤k≤n βk} for all λ, β ∈Rn
+,1,
h Superscript left parenthesis o right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals inf left brace 1 minus lamda Superscript upper T Baseline alpha colon alpha element of upper R Subscript plus comma 1 Superscript n Baseline comma beta Superscript upper T Baseline alpha equals max Underscript 1 less than or equals k less than or equals n Endscripts beta Subscript k Baseline right brace f o r a l l lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript n Baseline commah(o)(λ, β) = inf{1 −λT α : α ∈Rn
+,1, βT α = max
1≤k≤n βk} for all λ, β ∈Rn
+,1,
(II) If 0 less than b less than 10 < b < 1, then with alpha Superscript left parenthesis b right parenthesis Baseline equals left parenthesis alpha Subscript k Baseline Superscript 1 divided by b Baseline divided by sigma summation Underscript k equals 1 Overscript n Endscripts alpha Subscript k Baseline Superscript 1 divided by b Baseline right parenthesis Subscript k equals 1 comma period period period comma nα(b) = (αk1/b/
n∑
k=1
αk1/b)k=1,...,n, we get  
StartLayout 1st Row 1st Column Blank 2nd Column upper H Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals h Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline f Subscript b Baseline left parenthesis alpha Subscript k Baseline Superscript left parenthesis b right parenthesis Baseline right parenthesis 2nd Row 1st Column equals 2nd Column StartFraction 1 Over 1 minus b EndFraction left parenthesis 1 minus sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline left parenthesis beta Subscript k Baseline Superscript 1 divided by b Baseline divided by sigma summation Underscript k equals 1 Overscript n Endscripts beta Subscript k Baseline Superscript 1 divided by b Baseline right parenthesis Superscript 1 minus b Baseline right parenthesis f o r a l l lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript n Baseline period EndLayout
H (b)(λ, β) = h(b)(λ, β) =
n∑
k=1
λk fb(αk(b))
=
1
1−b(1 −
n∑
k=1
λk(βk1/b/
n∑
k=1
βk1/b)1−b) for all λ, β ∈Rn
+,1.
(III) If b equals 1b = 1, then 
upper H Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals h Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline log left parenthesis 1 divided by beta Subscript k Baseline right parenthesis comma lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript n Baseline left parenthesis w i t h log StartFraction 1 Over 0 EndFraction equals plus normal infinity right parenthesis periodH (1)(λ, β) = h(1)(λ, β) =
n
∑
k=1
λk log(1/βk), λ, β ∈Rn
+,1(with log 1
0 = +∞).
(IV) If b greater than 1b > 1, then 
StartLayout 1st Row 1st Column Blank 2nd Column upper H Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals h Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals lamda Superscript upper T Baseline f Subscript b Baseline left parenthesis alpha Superscript left parenthesis b right parenthesis Baseline right parenthesis 2nd Row 1st Column equals 2nd Column sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline StartFraction 1 Over 1 minus b EndFraction left parenthesis 1 minus left parenthesis beta Subscript k Baseline Superscript 1 divided by b Baseline divided by sigma summation Underscript k equals 1 Overscript n Endscripts beta Subscript k Baseline Superscript 1 divided by b Baseline right parenthesis Superscript 1 minus b Baseline right parenthesis comma f o r a l l lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript n Baseline period EndLayout
H (b)(λ, β) = h(b)(λ, β) = λT fb(α(b))
=
n∑
k=1
λk
1
1−b(1 −(βk1/b/
n∑
k=1
βk1/b)1−b), for all λ, β ∈Rn
+,1.
Remark 13.9 Corresponding to Theorem 13.3, we observe that 
upper H Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals h Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline log left parenthesis 1 divided by beta Subscript k Baseline right parenthesis comma lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript nH (1)(λ, β) = h(1)(λ, β) =
n
∑
k=1
λk log(1/βk), λ, β ∈Rn
+,1
is the Kerridge-Inaccuracy for the hypothesis left single quotation mark left single quotation mark upper P Subscript omega Baseline equals beta double primeleft single quotation mark left single quotation mark upper P Subscript omega Baseline equals beta“Pω = βleft single quotation mark left single quotation mark upper P Subscript omega Baseline equals beta double prime, while upper P Subscript omega Baseline equals lamdaPω = λ is the true 
distribution. However, this justiﬁes the notation generalized inaccuracy function for 
upper H left parenthesis lamda comma beta right parenthesisH(λ, β) and h left parenthesis lamda comma beta right parenthesish(λ, β).

13.2 The Generalized Inaccuracy Function H(λ, β)
367
13.2.2 
Representation of upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisHε(λ, β) and upper H left parenthesis lamda comma beta right parenthesisH(λ, β) by Means 
of Lagrange Duality 
In the following we derive a representation of upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesisHε(λ, β) and upper H left parenthesis lamda comma beta right parenthesisH(λ, β) which can be 
used also to ﬁnd sufﬁcient conditions for upper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesisH(λ, β) = H0(λ, β). For this we make 
the following assumptions on the loss set upper VV , cf.  (13.13a), (13.13b), of the decision 
problem left parenthesis normal upper Omega comma upper D comma v right parenthesis(Ω, D, v) and the probability measure lamda comma betaλ, β on German upper AA: upper VV is a convex subset 
ofupper L 1 left parenthesis normal upper Omega comma German upper A comma lamda right parenthesis intersection upper L 1 left parenthesis normal upper Omega comma German upper A comma beta right parenthesisL1(Ω, A, λ) ∩L1(Ω, A, β), wherenegative normal infinity less than v Superscript asterisk Baseline left parenthesis beta right parenthesis less than plus normal infinity period−∞< v∗(β) < +∞. Deﬁning the mappings 
upper FF: upper V right arrow double struck upper RV →R and g Subscript epsilon Baseline colon upper L 1 left parenthesis normal upper Omega comma German upper A comma beta right parenthesis right arrow double struck upper R comma epsilon greater than or equals 0gε : L1(Ω, A, β) →R, ε ≥0 by 
upper F left parenthesis f right parenthesis equals integral f left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis comma f element of upper VF( f ) =
{
f (ω)λ(dω), f ∈V
and 
g Subscript epsilon Baseline left parenthesis f right parenthesis equals integral f left parenthesis omega right parenthesis beta left parenthesis d omega right parenthesis minus left parenthesis v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon right parenthesis comma f element of upper L 1 left parenthesis normal upper Omega comma German upper A comma beta right parenthesis comma epsilon greater than or equals 0 commagε( f ) =
{
f (ω)β(dω) −(v∗(β) + ε),
f ∈L1(Ω, A, β), ε ≥0,
upper FF is an afﬁne, real-valued functional on upper VV and g Subscript epsilongε an afﬁne, real valued functional 
on the linear space upper X equals upper L 1 left parenthesis normal upper Omega comma German upper A comma beta right parenthesis periodX = L1(Ω, A, β). Moreover, it holds 
upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals s u p left brace upper F left parenthesis f right parenthesis colon g Subscript epsilon Baseline left parenthesis f right parenthesis less than or equals 0 comma f element of upper V right brace comma epsilon greater than or equals 0 periodHε(λ, β) = sup{F( f ) : gε( f ) ≤0, f ∈V }, ε ≥0.
Thus, we have to consider the following convex program in space upper XX: 
StartLayout 1st Row min minus upper F left parenthesis f right parenthesis s period t g Subscript epsilon Baseline left parenthesis f right parenthesis less than or equals 0 comma f element of upper V period EndLayout min −F( f ) s.t gε( f ) ≤0, f ∈V.
(13.31) 
According to Luenberger [ 10], Sect.8.68.6, Theorem11, concerning programs of the 
type (13.31), we get immediately this result: 
Theorem 13.4 If upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis element of double struck upper RHε(λ, β) ∈R for epsilon greater than 0 commaε > 0, then 
StartLayout 1st Row 1st Column upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis 2nd Column equals 3rd Column min Underscript a greater than or equals 0 Endscripts left parenthesis sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a v left parenthesis beta comma x right parenthesis right parenthesis plus a left parenthesis v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon right parenthesis 2nd Row 1st Column Blank 2nd Column equals 3rd Column min Underscript a greater than or equals 0 Endscripts left parenthesis sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis plus a epsilon right parenthesis comma EndLayoutHε(λ, β) = min
a≥0 (sup
x∈D
(v(λ, x) −av(β, x)) + a(v∗(β) + ε)
(13.32) 
= min 
a≥0 (sup 
x∈D 
(v(λ, x) − a(v(β, x) − v∗(β))) + aε), 
where the minimum in (13.32) is taken in a point a Subscript epsilon Baseline greater than or equals 0aε ≥0 . 
Proof The dual functional related to (13.31) is deﬁned here by 
StartLayout 1st Row 1st Column phi Subscript epsilon Baseline left parenthesis a right parenthesis 2nd Column equals 3rd Column inf Underscript f element of upper V Endscripts left parenthesis minus upper F left parenthesis f right parenthesis plus a g Subscript epsilon Baseline left parenthesis f right parenthesis right parenthesis equals inf f element of upper V left parenthesis minus integral f left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis 2nd Row 1st Column Blank 2nd Column plus 3rd Column a left parenthesis integral f left parenthesis omega right parenthesis beta left parenthesis d omega right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis minus epsilon right parenthesis right parenthesis 3rd Row 1st Column Blank 2nd Column equals 3rd Column minus left parenthesis sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a v left parenthesis beta comma x right parenthesis plus a left parenthesis v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon right parenthesis right parenthesis period EndLayoutφε(a) = inf
f ∈V(−F( f ) + agε( f )) = inf f ∈V (−
{
f (ω)λ(dω)
+ a(
{
f (ω)β(dω) −v∗(β) −ε))
= −(sup
x∈D
(v(λ, x) −av(β, x) + a(v∗(β) + ε)).

368
13
Maximum Entropy Techniques
Due to v Superscript asterisk Baseline left parenthesis beta right parenthesis greater than negative normal infinity commav∗(β) > −∞, we also have upper D Subscript epsilon divided by 2 Baseline left parenthesis beta right parenthesis not equals normal empty set periodDε/2(β) /= ∅. Hence, there is f 1 element of upper V f1 ∈V such that 
beta f 1 less than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis plus StartFraction epsilon Over 2 EndFraction less than v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilonβ f1 ≤v∗(β) + ε
2 < v∗(β) + ε and therefore g Subscript epsilon Baseline left parenthesis f 1 right parenthesis less than 0gε( f1) < 0 for all epsilon greater than 0 periodε > 0. According 
to our assumptions, (13.31) has a ﬁnite inﬁmum, hence, all assumptions in the 
above-mentioned theorem of Luenberger are fulﬁlled. Consequently, inf left parenthesis 13.31 right parenthesis equals max Underscript a greater than 0 Endscripts phi Subscript epsilon Baseline left parenthesis a right parenthesis commainf (13.31) =
max
a>0 φε(a),, where the maximum is taken in a point a Subscript epsilon Baseline greater than or equals 0 periodaε ≥0. Thus, 
StartLayout 1st Row upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis equals minus inf left parenthesis 13.32 right parenthesis equals minus max Underscript a greater than or equals 0 Endscripts phi Subscript epsilon Baseline left parenthesis a right parenthesis equals min Underscript a greater than or equals 0 Endscripts left parenthesis minus phi Subscript epsilon Baseline left parenthesis a right parenthesis right parenthesis 2nd Row equals min Underscript a greater than or equals 0 Endscripts left parenthesis sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a v left parenthesis beta comma x right parenthesis plus a left parenthesis v Superscript asterisk Baseline left parenthesis beta right parenthesis plus epsilon right parenthesis right parenthesis EndLayoutHε(λ, β) = −inf (13.32) = −max
a≥0 φε(a) = min
a≥0 (−φε(a))
= min
a≥0 (sup
x∈D
(v(λ, x) −av(β, x) + a(v∗(β) + ε))
and the maximum is taken in point a Subscript epsilon Baseline greater than or equals 0aε ≥0.
⬜
Remark 13.10 Note that for the derivation of (13.32) only the convexity of upper V equals StartSet v left parenthesis dot comma x right parenthesis colon x element of upper D EndSet subset of upper L 1 left parenthesis normal upper Omega comma German upper A comma lamda right parenthesis intersection upper L 1 left parenthesis normal upper Omega comma German upper A comma beta right parenthesis comma upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty setV =
{v(·, x) : x ∈D} ⊂L1(Ω, A, λ) ∩L1(Ω, A, β), Dε(β) /= ∅
and 
the 
condition 
upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis element of double struck upper RHε(λ, β) ∈R was needed. 
For a comparison between upper H left parenthesis lamda comma beta right parenthesisH(λ, β) and upper H 0 left parenthesis lamda comma beta right parenthesisH0(λ, β) we show the following result: 
Theorem 13.5 Suppose that upper H Subscript epsilon overbar Baseline left parenthesis lamda comma beta right parenthesis less than plus normal infinityH¯ε(λ, β) < +∞for an epsilon overbar greater than 0 period¯ε > 0. Then upper H left parenthesis lamda comma beta right parenthesisH(λ, β) has the 
representation 
StartLayout 1st Row upper H left parenthesis lamda comma beta right parenthesis equals inf Underscript a element of upper R Endscripts left parenthesis sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a v left parenthesis beta comma x right parenthesis right parenthesis plus a v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis period EndLayoutH(λ, β) = inf
a∈R(sup
x∈D
(v(λ, x) −av(β, x)) + av∗(β)).
(13.33) 
Proof Let hh denote the right-hand side of (13.33). Then, h less than or equals upper H left parenthesis lamda comma beta right parenthesis periodh ≤H(λ, β). Put now 
delta left parenthesis a right parenthesis equals sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis comma a element of double struck upper R periodδ(a) = sup
x∈D
(v(λ, x) −a(v(β, x) −v∗(β))),
a ∈R.
Ifa 1 less than a 2 commaa1 < a2, thena 1 left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis less than or equals a 2 left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis comma x element of upper D commaa1(v(β, x) −v∗(β) ≤a2(v(β, x) −v∗(β)), x ∈D, sincev left parenthesis beta comma x right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis beta right parenthesis comma x element of upper D periodv(β, x) ≥
v∗(β), x ∈D. Hence, 
minus a 1 left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis greater than or equals minus a 2 left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis comma v left parenthesis lamda comma x right parenthesis minus a 1 left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis greater than or equals v left parenthesis lamda comma x right parenthesis minus a 2 left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis−a1(v(β, x) −v∗(β)) ≥−a2(v(β, x) −v∗(β)), v(λ, x) −
a1(v(β, x) −v∗(β)) ≥v(λ, x) −a2(v(β, x) −v∗(β)) and thereforedelta left parenthesis a 1 right parenthesis greater than or equals delta left parenthesis a 2 right parenthesis periodδ(a1) ≥δ(a2).
Thus, 
deltaδ is monotonous decreasing. However, this yields 
h equals inf Underscript a element of double struck upper R Endscripts delta left parenthesis a right parenthesis equals inf Underscript a greater than or equals 0 Endscripts delta left parenthesis a right parenthesis equals upper H left parenthesis lamda comma beta right parenthesis periodh = infa∈R δ(a) =
inf
a≥0 δ(a) = H(λ, β).
⬜
Suppose now thatupper D 0 left parenthesis beta right parenthesis not equals normal empty setD0(β) /= ∅andupper H Subscript epsilon overbar Baseline left parenthesis lamda comma beta right parenthesis less than plus normal infinityH¯ε(λ, β) < +∞for anepsilon overbar greater than 0¯ε > 0, hence,upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis element of double struck upper R Hε(λ, β)
∈R for 0 less than epsilon less than epsilon overbar period0 < ε < ¯ε. Because of upper H 0 left parenthesis lamda comma beta right parenthesis equals sup left brace upper F left parenthesis f right parenthesis colon g 0 left parenthesis f right parenthesis equals 0 comma f element of upper V right braceH0(λ, β) = sup{F( f ) : g0( f ) = 0, f ∈V }, for  the  
consideration ofupper H 0 left parenthesis lamda comma beta right parenthesisH0(λ, β), in stead of (13.31), we have to consider the optimization 
problem 
StartLayout 1st Row 1st Column min 2nd Column minus upper F left parenthesis f right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column g 0 left parenthesis f right parenthesis equals 0 comma f element of upper V period EndLayout min
−F( f )
(13.34a) 
StartLayout 1st Row 1st Column min 2nd Column minus upper F left parenthesis f right parenthesis 2nd Row 1st Column Blank 3rd Row 1st Column s period t period 2nd Column g 0 left parenthesis f right parenthesis equals 0 comma f element of upper V period EndLayouts.t.
g0( f ) = 0, f ∈V.
(13.34b) 
The dual functional related to this program reads 
StartLayout 1st Row phi 0 left parenthesis a right parenthesis equals inf Underscript f element of upper V Endscripts left parenthesis minus upper F left parenthesis f right parenthesis plus a g 0 left parenthesis f right parenthesis right parenthesis equals minus sup Underscript element of upper D Endscripts left parenthesis left parenthesis v left parenthesis lamda comma x right parenthesis minus a v left parenthesis beta comma x right parenthesis right parenthesis plus a v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis equals minus delta left parenthesis a right parenthesis period EndLayoutφ0(a) = inf
f ∈V(−F( f ) + ag0( f )) = −sup
∈D
((v(λ, x) −av(β, x)) + av∗(β)) = −δ(a).
(13.35)

13.2 The Generalized Inaccuracy Function H(λ, β)
369
A Kuhn-Tucker-coefﬁcient related to (13.34a) is, cf. e.g., [ 14], Sect. 28, a value a 0 commaa0,
such that 
StartLayout 1st Row inf left parenthesis 13.34 normal a right parenthesis equals phi 0 left parenthesis a 0 right parenthesis o r upper H 0 left parenthesis lamda comma beta right parenthesis equals minus phi 0 left parenthesis a 0 right parenthesis period EndLayout inf(13.34a) = φ0(a0)
or
H0(λ, β) = −φ0(a0).
(13.36) 
In case that such an a 0a0 exists, then 
upper H 0 left parenthesis lamda comma beta right parenthesis equals inf left parenthesis 13.34 normal a right parenthesis equals minus phi 0 left parenthesis a 0 right parenthesis equals sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a 0 left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis commaH0(λ, β) = inf(13.34a) = −φ0(a0) = sup
x∈D
(v(λ, x) −a0(v(β, x) −v∗(β))),
due to upper H 0 left parenthesis lamda comma beta right parenthesis less than or equals upper H left parenthesis lamda comma beta right parenthesisH0(λ, β) ≤H(λ, β) and (13.33), we have 
upper H 0 left parenthesis lamda comma beta right parenthesis less than or equals upper H left parenthesis lamda comma beta right parenthesis equals inf Underscript a element of double struck upper R Endscripts left parenthesis sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis right parenthesisH0(λ, β) ≤H(λ, β) = inf
a∈R(sup
x∈D
(v(λ, x) −a(v(β, x) −v∗(β))))
less than or equals sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a 0 left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesis comma ≤sup
x∈D
(v(λ, x) −a0(v(β, x) −v∗(β))) = H0(λ, β),
hence, 
upper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesis equals min Underscript a element of double struck upper R Endscripts left parenthesis sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis right parenthesis periodH(λ, β) = H0(λ, β) = min
a∈R(sup
x∈D
(v(λ, x) −a(v(β, x) −v∗(β)))).
Thus, we have this result. 
Theorem 13.6 Let upper D 0 left parenthesis beta right parenthesis not equals normal empty setD0(β) /= ∅, and assume upper H Subscript epsilon overbar Baseline left parenthesis lamda comma beta right parenthesis less than plus normal infinityH¯ε(λ, β) < +∞for a certain epsilon overbar greater than 0 period¯ε > 0.
If the program 
StartLayout 1st Row 1st Column max 2nd Column Blank 3rd Column lamda f 2nd Row 1st Column s period t period 2nd Column Blank 3rd Column beta f equals v Superscript asterisk Baseline left parenthesis beta right parenthesis comma f element of upper V EndLayout max λf
s.t.
β f = v∗(β), f ∈V
admits a Kuhn-Tucker coefﬁcient, i.e., an a 0 element of double struck upper R commaa0 ∈R, such that 
sup left brace lamda f colon beta f equals v Superscript asterisk Baseline left parenthesis beta right parenthesis comma f element of upper V right brace equals sup left brace f element of upper V right brace left parenthesis lamda f minus a 0 left parenthesis beta f minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis comma sup{λf : β f = v∗(β), f ∈V } = sup{ f ∈V }(λf −a0(β f −v∗(β))),
then 
StartLayout 1st Row upper H left parenthesis lamda semicolon beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesis equals min Underscript a element of double struck upper R Endscripts left parenthesis sup Underscript x element of upper D Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus a left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis right parenthesis comma EndLayoutH(λ; β) = H0(λ, β) = min
a∈R(sup
x∈D
(v(λ, x) −a(v(β, x) −v∗(β)))),
(13.37) 
and the minimum in (13.37) is taken at a point a 0 element of double struck upper Ra0 ∈R.

370
13
Maximum Entropy Techniques
13.3 
Generalized Divergence and Generalized Minimum 
Discrimination Information 
13.3.1 
Generalized Divergence 
As in the preceding section, assume that upper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ is the true probability distribution 
of omega overTilde ˜ω and let denote upper P Subscript omega overTilde Baseline equals betaP˜ω = β a certain hypothesis on the true distribution lamda semicolonλ; For all 
epsilon greater than 0ε > 0 suppose that upper D Subscript epsilon Baseline not equals normal empty set periodDε /= ∅. Selecting a decision x element of upper D Subscript epsilonx ∈Dε, then with respect to the 
true distribution lamdaλ, with respect to the hypothesis betaβ, resp., we have the error 
e 1 equals e 1 left parenthesis lamda comma x right parenthesis equals v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis commae 1 equals e 1 left parenthesis lamda comma x right parenthesis equals v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis commae1 = e1(λ, x) = v(λ, x) −v∗(λ),
e 2 equals e 2 left parenthesis lamda comma x right parenthesis equals v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis commae2 = e2(λ, x) = v(λ, x) −v∗(β),
resp., where e 1 left parenthesis lamda comma x right parenthesise1(λ, x), e 2 left parenthesis lamda comma x right parenthesise2(λ, x), are deﬁned only if v Superscript asterisk Baseline left parenthesis lamda right parenthesis element of double struck upper Rv∗(λ) ∈R, v Superscript asterisk Baseline left parenthesis beta right parenthesis element of double struck upper R commav∗(β) ∈R, respec-
tively. 
Evaluating this error still by means of a function gammaγ , then 
upper I Subscript gamma comma epsilon Superscript e Baseline left parenthesis lamda comma beta right parenthesis equals sup left brace gamma left parenthesis e left parenthesis lamda comma x right parenthesis right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace comma e equals e 1 comma e 2 commaI e
γ,ε(λ, β) = sup{γ (e(λ, x)) : x ∈Dε(β)},
e = e1, e2,
upper J Subscript gamma comma epsilon Superscript e Baseline left parenthesis lamda comma beta right parenthesis equals inf left brace gamma left parenthesis e left parenthesis lamda comma x right parenthesis right parenthesis colon x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis right brace comma e equals e 1 comma e 2J e
γ,ε(λ, β) = inf{γ (e(λ, x)) : x ∈Dε(β)},
e = e1, e2
denotes the maximum, minimum error relative to gamma commaγ, for the computation of an epsilonε— 
optimal decision based on the hypothesis betaβ, while upper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ is the true distribution. 
Hence, as far as the limits under consideration exist, we deﬁne the class of generalized 
divergences by 
upper I Subscript gamma Superscript e Baseline left parenthesis lamda comma beta right parenthesis equals limit Underscript epsilon down arrow 0 Endscripts upper I Subscript gamma comma epsilon Superscript e Baseline left parenthesis lamda comma beta right parenthesis equals limit Underscript epsilon down arrow 0 Endscripts left parenthesis sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts gamma left parenthesis e left parenthesis lamda comma x right parenthesis right parenthesis right parenthesis comma e equals e 1 comma e 2I e
γ (λ, β) = lim
ε↓0 I e
γ,ε(λ, β) = lim
ε↓0( sup
x∈Dε(β)
γ (e(λ, x))), e = e1, e2
and 
upper J Subscript gamma Superscript e Baseline left parenthesis lamda comma beta right parenthesis equals limit Underscript epsilon down arrow 0 Endscripts upper J Subscript gamma comma epsilon Superscript e Baseline left parenthesis lamda comma beta right parenthesis equals limit Underscript epsilon down arrow 0 Endscripts left parenthesis inf Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts gamma left parenthesis e left parenthesis lamda comma x right parenthesis right parenthesis right parenthesis comma e equals e 1 comma e 2 periodJ e
γ (λ, β) = lim
ε↓0 J e
γ,ε(λ, β) = lim
ε↓0( inf
x∈Dε(β) γ (e(λ, x))), e = e1, e2.
We consider nowupper I Superscript e Baseline comma upper J Superscript e Baseline comma e 2I e, J e, e2 for some special cases of the cost functiongamma periodγ. For this 
purpose we set 
upper I left parenthesis lamda comma beta right parenthesis equals upper H left parenthesis lamda comma beta right parenthesis minus upper H left parenthesis lamda comma lamda right parenthesis equals upper H left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis commaI (λ, β) = H(λ, β) −H(λ, λ) = H(λ, β) −v∗(λ),
(13.38a) 
upper J left parenthesis lamda comma beta right parenthesis equals h left parenthesis lamda comma beta right parenthesis minus h left parenthesis lamda comma lamda right parenthesis equals h left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis periodJ(λ, β) = h(λ, β) −h(λ, λ) = h(λ, β) −v∗(λ).
(13.38b) 
(I) If gamma left parenthesis t right parenthesis equals t comma t element of double struck upper R commaγ (t) = t, t ∈R, then 
upper I Subscript gamma comma epsilon Superscript e 1 Baseline left parenthesis lamda comma beta right parenthesis equals sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts e 1 left parenthesis lamda comma x right parenthesis equals sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis right parenthesis equals upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesisI e1
γ,ε(λ, β) =
sup
x∈Dε(β)
e1(λ, x) =
sup
x∈Dε(β)
(v(λ, x) −v∗(λ)) = Hε(λ, β) −v∗(λ)

13.3 Generalized Divergence and Generalized Minimum Discrimination Information
371
upper I Subscript gamma comma epsilon Superscript e 2 Baseline left parenthesis lamda comma beta right parenthesis equals sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts e 2 left parenthesis lamda comma x right parenthesis equals sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis equals upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesisI e2
γ,ε(λ, β) =
sup
x∈Dε(β)
e2(λ, x) =
sup
x∈Dε(β)
(v(λ, x) −v∗(β)) = Hε(λ, β) −v∗(λ)
upper J Subscript gamma comma epsilon Superscript e 1 Baseline left parenthesis lamda comma beta right parenthesis equals inf Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts e 1 left parenthesis lamda comma x right parenthesis equals inf Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis right parenthesis equals h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesisJ e1
γ,ε(λ, β) =
inf
x∈Dε(β) e1(λ, x) =
inf
x∈Dε(β)(v(λ, x) −v∗(λ)) = hε(λ, β) −v∗(λ)
upper J Subscript gamma comma epsilon Superscript e 2 Baseline left parenthesis lamda comma beta right parenthesis equals inf Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts e 2 left parenthesis lamda comma x right parenthesis equals inf Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis equals h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis periodJ e2
γ,ε(λ, β) =
inf
x∈Dε(β) e2(λ, x) =
inf
x∈Dε(β)(v(λ, x) −v∗(β)) = hε(λ, β) −v∗(λ).
Taking the limit epsilon down arrow 0ε ↓0, we obtain then 
upper I Subscript gamma Superscript e 1 Baseline left parenthesis lamda comma beta right parenthesis equals upper H left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals upper I left parenthesis lamda comma beta right parenthesis commaI e1
γ (λ, β) = H(λ, β) −v∗(λ) = I (λ, β),
upper I Subscript gamma Superscript e 2 Baseline left parenthesis lamda comma beta right parenthesis equals upper H left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis equals upper I left parenthesis lamda comma beta right parenthesis plus left parenthesis upper H left parenthesis lamda comma lamda right parenthesis minus upper H left parenthesis beta comma beta right parenthesis right parenthesis commaI e2
γ (λ, β) = H(λ, β) −v∗(β) = I (λ, β) + (H(λ, λ) −H(β, β)),
upper J Subscript gamma Superscript e 1 Baseline left parenthesis lamda comma beta right parenthesis equals h left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals upper J left parenthesis lamda comma beta right parenthesis commaJ e1
γ (λ, β) = h(λ, β) −v∗(λ) = J(λ, β),
upper J Subscript gamma Superscript e 2 Baseline left parenthesis lamda comma beta right parenthesis equals h left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis equals upper J left parenthesis lamda comma beta right parenthesis plus left parenthesis h left parenthesis lamda comma lamda right parenthesis minus h left parenthesis beta comma beta right parenthesis right parenthesis periodJ e2
γ (λ, β) = h(λ, β) −v∗(β) = J(λ, β) + (h(λ, λ) −h(β, β)).
Remark 13.11 Estimations 
of 
the 
variation 
upper H left parenthesis lamda comma lamda right parenthesis minus upper H left parenthesis beta comma beta right parenthesis equals h left parenthesis lamda comma lamda right parenthesis minus h left parenthesis beta comma beta right parenthesis equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesisH(λ, λ) −H(β, β) = h(λ, λ) −
h(β, β) = v∗(λ) −v∗(β) of the inaccuracy functionlamda right arrow v Superscript asterisk Baseline left parenthesis lamda right parenthesisλ →v∗(λ) in the transfer from 
lamdaλ to betaβ can be found, e.g., in [ 13]. 
(II) Let now gamma left parenthesis t right parenthesis equals vertical bar t vertical bar periodgamma left parenthesis t right parenthesis equals StartAbsoluteValue t EndAbsoluteValueγ (t) = | t|gamma left parenthesis t right parenthesis equals vertical bar t vertical bar period Because of v left parenthesis lamda comma x right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesisv(λ, x) ≥v∗(λ) for all x element of upper Dx ∈D we have 
upper I Subscript gamma comma epsilon Superscript e 1 Baseline left parenthesis lamda comma beta right parenthesis equals sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts vertical bar e 1 left parenthesis lamda comma x right parenthesis vertical bar equals sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis right parenthesis equals upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis commaI e1
γ,ε(λ, β) =
sup
x∈Dε(β)
| e1(λ, x) |=
sup
x∈Dε(β)
(v(λ, x) −v∗(λ)) = Hε(λ, β) −v∗(λ),
upper J Subscript gamma comma epsilon Superscript e 1 Baseline left parenthesis lamda comma beta right parenthesis equals inf Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts vertical bar e 1 left parenthesis lamda comma x right parenthesis vertical bar equals sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis right parenthesis equals h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis periodJe1
γ,ε(λ, β) =
inf
x∈Dε(β) | e1(λ, x) |=
sup
x∈Dε(β)
(v(λ, x) −v∗(λ)) = hε(λ, β) −v∗(λ).
Thus, also here we get 
upper I Subscript gamma Superscript e 1 Baseline left parenthesis lamda comma beta right parenthesis equals upper H left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals upper I left parenthesis lamda comma beta right parenthesis commaI e1
γ (λ, β) = H(λ, β) −v∗(λ) = I (λ, β),
upper J Subscript gamma Superscript e 1 Baseline left parenthesis lamda comma beta right parenthesis equals h left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals upper J left parenthesis lamda comma beta right parenthesis periodJ e1
γ (λ, β) = h(λ, β) −v∗(λ) = J(λ, β).
Furthermore, we have 
StartLayout 1st Row 1st Column Blank 2nd Column Blank 3rd Column upper I Subscript gamma comma epsilon Superscript e 2 Baseline left parenthesis lamda comma beta right parenthesis equals sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts vertical bar e 2 left parenthesis lamda comma x right parenthesis vertical bar equals max left brace StartAbsoluteValue inf Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts e 2 left parenthesis lamda comma x right parenthesis EndAbsoluteValue comma StartAbsoluteValue sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts e 2 left parenthesis lamda comma x right parenthesis EndAbsoluteValue right brace 2nd Row 1st Column Blank 2nd Column equals 3rd Column max left brace vertical bar inf Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis StartAbsoluteValue comma EndAbsoluteValue sup Underscript x element of upper D Subscript epsilon Baseline left parenthesis beta right parenthesis Endscripts left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis vertical bar right brace 3rd Row 1st Column Blank 2nd Column equals 3rd Column max left brace StartAbsoluteValue h Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis EndAbsoluteValue comma StartAbsoluteValue upper H Subscript epsilon Baseline left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis EndAbsoluteValue right brace period EndLayout
I e2
γ,ε(λ, β) =
sup
x∈Dε(β)
| e2(λ, x) |= max{|
inf
x∈Dε(β) e2(λ, x) |, |
sup
x∈Dε(β)
e2(λ, x) |}
= max{|
inf
x∈Dε(β)(v(λ, x) −v∗(β) |, |
sup
x∈Dε(β)
(v(λ, x) −v∗(β)) |}
= max{| hε(λ, β) −v∗(β) |, | Hε(λ, β) −v∗(β) |}.

372
13
Maximum Entropy Techniques
Because of the continuity of left parenthesis x comma y right parenthesis right arrow m a x left brace x comma y right brace comma x comma y element of upper R(x, y) →max{x, y}, x, y ∈R, by means of the 
limit epsilon down arrow 0ε ↓0 we ﬁnd 
StartLayout 1st Row 1st Column upper I Subscript gamma Superscript e 2 Baseline left parenthesis lamda comma beta right parenthesis 2nd Column equals 3rd Column max left brace StartAbsoluteValue h left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis EndAbsoluteValue comma StartAbsoluteValue upper H left parenthesis lamda comma beta right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis EndAbsoluteValue right brace equals 2nd Row 1st Column Blank 2nd Column equals 3rd Column max left brace StartAbsoluteValue h left parenthesis lamda comma beta right parenthesis minus h left parenthesis beta comma beta right parenthesis EndAbsoluteValue comma StartAbsoluteValue upper H left parenthesis lamda comma beta right parenthesis minus upper H left parenthesis beta comma beta right parenthesis EndAbsoluteValue right brace period EndLayoutI e2
γ (λ, β) = max{| h(λ, β) −v∗(β) |, | H(λ, β) −v∗(β) |} =
= max{| h(λ, β) −h(β, β) |, | H(λ, β) −H(β, β) |}.
In the special case upper H left parenthesis lamda comma beta right parenthesis equals h left parenthesis lamda comma beta right parenthesis commaH(λ, β) = h(λ, β), we get 
upper I Subscript gamma Superscript e 2 Baseline left parenthesis lamda comma beta right parenthesis equals vertical bar upper H left parenthesis lamda comma beta right parenthesis minus upper H left parenthesis beta comma beta right parenthesis vertical bar periodI e2
γ (λ, β) =| H(λ, β) −H(β, β) | .
Especially important are the generalized divergences deﬁned by (13.38a) and 
(13.38b), hence, upper I left parenthesis lamda comma beta right parenthesis equals upper H left parenthesis lamda comma beta right parenthesis minus upper H left parenthesis lamda comma lamda right parenthesisI (λ, β) = H(λ, β) −H(λ, λ) and upper J left parenthesis lamda comma beta right parenthesis equals h left parenthesis lamda comma beta right parenthesis minus h left parenthesis lamda comma lamda right parenthesis periodJ(λ, β) = h(λ, β) −h(λ, λ).
We study nowupper I comma upper JI, J, where—as above—upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty set comma epsilon greater than 0Dε(β) /= ∅, ε > 0 andupper H left parenthesis lamda comma lamda right parenthesis equals h left parenthesis lamda comma lamda right parenthesis equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis element of double struck upper R periodH(λ, λ) = h(λ, λ) =
v∗(λ) ∈R.
Corollary 13.10 We have upper I left parenthesis lamda comma beta right parenthesis greater than or equals 0 comma upper J left parenthesis lamda comma beta right parenthesis greater than or equals 0I (λ, β) ≥0, J(λ, β) ≥0 and upper I left parenthesis lamda comma beta right parenthesis equals upper J left parenthesis lamda comma beta right parenthesis equals 0I (λ, β) = J(λ, β) = 0
for beta equals lamda periodβ = λ. Moreover, upper I left parenthesis lamda comma beta right parenthesis greater than or equals upper J left parenthesis lamda comma beta right parenthesisI (λ, β) ≥J(λ, β) und upper I left parenthesis lamda comma beta right parenthesis equals upper J left parenthesis lamda comma beta right parenthesisI (λ, β) = J(λ, β) if and only if 
upper H left parenthesis lamda comma beta right parenthesis equals h left parenthesis lamda comma beta right parenthesis periodH(λ, β) = h(λ, β).
Proof According to Theorem 13.2 we have 
upper H left parenthesis lamda comma beta right parenthesis greater than or equals h left parenthesis lamda comma beta right parenthesis greater than or equals v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals h left parenthesis lamda comma lamda right parenthesis equals upper H left parenthesis lamda comma lamda right parenthesis commaH(λ, β) ≥h(λ, β) ≥v∗(λ) =
h(λ, λ) = H(λ, λ), which yields all assertions in the above corollary.
⬜
In order to justify the notation generalized divergence for the class of functions 
upper I Subscript gamma Superscript e Baseline left parenthesis lamda comma beta right parenthesis comma upper J Subscript gamma Superscript e Baseline left parenthesis lamda comma beta right parenthesis comma e equals e 1 comma e 2I e
γ (λ, β), J e
γ (λ, β), e = e1, e2 , we consider now the casenormal upper Omega equals StartSet omega 1 comma omega 2 comma period period period comma omega Subscript n Baseline EndSetΩ = {ω1, ω2, ..., ωn} with 
the loss set, cf. (13.23), 
upper V equals upper C Subscript f Baseline comma f equals f Subscript b Baseline comma b greater than or equals 0V = C f , f = fb, b ≥0
treated in detail in the former section. 
Denoting the dependence of the divergencesupper I comma upper JI, J onbb byupper I Superscript left parenthesis b right parenthesis Baseline comma upper J Superscript left parenthesis b right parenthesis Baseline commaI (b), J (b), then Corollary 
13.9 yields immediately this result: 
Corollary 13.11 For all lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript nλ, β ∈Rn
+,1 we have 
(I) 
upper I Superscript left parenthesis 0 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline minus i n f left brace lamda Superscript upper T Baseline alpha colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma beta Superscript upper T Baseline alpha equals max Underscript 1 less than or equals k less than or equals n Endscripts beta Subscript k Baseline right brace commaI (0)(λ, β) = max
1≤k≤n λk −inf {λT α : α ∈Rn
+,1, βT α = max
1≤k≤n βk},
upper J Superscript left parenthesis 0 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals max Underscript 1 less than or equals k less than or equals n Endscripts lamda Subscript k Baseline minus s u p left brace lamda Superscript upper T Baseline alpha colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma beta Superscript upper T Baseline alpha equals max Underscript 1 less than or equals k less than or equals n Endscripts beta Subscript k Baseline right brace semicolonJ (0)(λ, β) = max
1≤k≤n λk −sup{λT α : α ∈Rn
+,1, βT α = max
1≤k≤n βk};
(II) 
upper I Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals upper J Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals StartFraction 1 Over 1 minus b EndFraction sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline left parenthesis left parenthesis lamda Subscript k Superscript 1 divided by b Baseline right parenthesis Superscript negative b Baseline minus left parenthesis beta Subscript k Superscript 1 divided by b Baseline divided by sigma summation Underscript k equals 1 Overscript n Endscripts beta Subscript k Baseline right parenthesis Superscript 1 minus b Baseline right parenthesisI (b)(λ, β) = J (b)(λ, β) =
1
1 −b
n
∑
k=1
λk((λ1/b
k )−b −(β1/b
k
/
n
∑
k=1
βk)1−b)
for b greater than 0 comma b not equals 1 semicolonb > 0, b /= 1;

13.3 Generalized Divergence and Generalized Minimum Discrimination Information
373
(III) 
upper I Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals upper J Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals sigma summation Underscript k equals 1 Overscript n Endscripts lamda Subscript k Baseline l o g left parenthesis lamda Subscript k Baseline divided by beta Subscript k Baseline right parenthesis periodI (1)(λ, β) = J (1)(λ, β) =
n
∑
k=1
λklog(λk/βk).
Remark 13.12 Obviously, we see now thatupper I Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals upper J Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesisI (1)(λ, β) = J (1)(λ, β) is the Kullback-
divergence betweenlamdaλ andbetaβ, which justiﬁes now the notation generalized divergence 
for upper I Subscript gamma Superscript e Baseline comma upper J Subscript gamma Superscript eI e
γ , J e
γ . 
According to Corollary 13.10 we have upper I left parenthesis lamda comma beta right parenthesis equals 0 long right double arrow upper J left parenthesis lamda comma beta right parenthesis equals 0 commaI (λ, β) = 0 =⇒J(λ, β) = 0, and 
upper I left parenthesis lamda comma beta right parenthesis equals upper J left parenthesis lamda comma beta right parenthesis equals 0I (λ, β) = J(λ, β) = 0 for beta equals lamda periodβ = λ. However, upper I left parenthesis lamda comma beta right parenthesis equals 0I (λ, β) = 0 or upper J left parenthesis lamda comma beta right parenthesis equals 0J(λ, β) = 0 does not 
imply beta equals lamdaβ = λ in general. 
Example 13.3 Putting lamda equals left parenthesis 1 divided by n comma period period period comma 1 divided by n right parenthesis Superscript upper Tλ = (1/n, ..., 1/n)T in the above Corollary 13.11, then for 
all beta element of double struck upper R Subscript plus comma 1 Superscript nβ ∈Rn
+,1 we get 
StartLayout 1st Row upper I Superscript left parenthesis 0 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals StartFraction 1 Over n EndFraction minus inf left brace sigma summation Underscript k equals 1 Overscript n Endscripts StartFraction 1 Over n EndFraction alpha Subscript k Baseline colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma beta Superscript upper T Baseline alpha equals max Underscript 1 less than or equals k less than or equals n Endscripts beta Subscript k Baseline right brace equals StartFraction 1 Over n EndFraction minus StartFraction 1 Over n EndFraction equals 0 comma EndLayoutI (0)(λ, β) = 1
n −inf{
n
∑
k=1
1
n αk : α ∈Rn
+,1, βT α = max
1≤k≤n βk} = 1
n −1
n = 0,
StartLayout 1st Row upper J Superscript left parenthesis 0 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals StartFraction 1 Over n EndFraction minus sup left brace sigma summation Underscript k equals 1 Overscript n Endscripts StartFraction 1 Over n EndFraction alpha Subscript k Baseline colon alpha element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma beta Superscript upper T Baseline alpha equals max Underscript 1 less than or equals k less than or equals n Endscripts beta Subscript k Baseline right brace equals StartFraction 1 Over n EndFraction minus StartFraction 1 Over n EndFraction equals 0 period EndLayoutJ (0)(λ, β) = 1
n −sup{
n
∑
k=1
1
n αk : α ∈Rn
+,1, βT α = max
1≤k≤n βk} = 1
n −1
n = 0.
In this case we have therefore StartSet beta colon upper I Superscript left parenthesis 0 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals 0 EndSet equals StartSet beta colon upper J Superscript left parenthesis 0 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals 0 EndSet equals double struck upper R Subscript plus comma 1 Superscript n Baseline period{β : I (0)(λ, β) = 0} = {β : J (0)(λ, β) = 0} = Rn
+,1.
Theorem 13.7 
(I) Suppose
again
upper D 0 left parenthesis beta right parenthesis not equals normal empty set periodD0(β) /= ∅.
If
upper I left parenthesis lamda comma beta right parenthesis equals 0 commaI (λ, β) = 0,
then
upper D 0 left parenthesis lamda right parenthesis not equals normal empty set comma upper D 0 left parenthesis beta right parenthesis subset of upper D 0 left parenthesis lamda right parenthesis commaD0(λ) /= ∅,
D0(β) ⊂D0(λ), andupper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesis equals h 0 left parenthesis lamda comma beta right parenthesis periodH(λ, β) = H0(λ, β) = h0(λ, β). If in additionupper D 0 left parenthesis lamda right parenthesis equals StartSet x Subscript lamda Baseline EndSet commaD0(λ) =
{xλ}, then upper D 0 left parenthesis beta right parenthesis equals StartSet x Subscript beta Baseline EndSetD0(β) = {xβ} with x Subscript beta Baseline equals x Subscript lamda Baseline periodxβ = xλ.
(II) In the case upper D 0 left parenthesis beta right parenthesis equals StartSet x Subscript beta Baseline EndSet comma upper H left parenthesis lamda comma beta right parenthesis equals v left parenthesis lamda comma x Subscript beta Baseline right parenthesisD0(β) = {xβ}, H(λ, β) = v(λ, xβ) for all lamda comma beta element of normal upper Lamdaλ, β ∈Ʌ with a subset 
normal upper LamdaɅ ofc a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesis commaca+,1(Ω, A), thenupper I left parenthesis lamda comma beta right parenthesis equals lamda left parenthesis v left parenthesis period comma x Subscript beta Baseline right parenthesis minus v left parenthesis period comma x Subscript lamda Baseline right parenthesis right parenthesisI (λ, β) = λ(v(., xβ) −v(., xλ)) andupper I left parenthesis lamda comma beta right parenthesis equals 0 long left right double arrow x Subscript lamda Baseline equals x Subscript beta Baseline commaI (λ, β) = 0 ⇐⇒
xλ = xβ, provided that lamda comma beta element of normal upper Lamda periodλ, β ∈Ʌ.
(III) Let upper D 0 left parenthesis beta right parenthesis equals StartSet x Subscript beta Baseline EndSetD0(β) = {xβ} and upper H left parenthesis lamda comma beta right parenthesis equals v left parenthesis lamda comma x Subscript beta Baseline right parenthesisH(λ, β) = v(λ, xβ) for all lamda comma beta element of normal upper Lamda periodλ, β ∈Ʌ. If ModifyingAbove x With caret element of upper Dˆx ∈D denotes 
then a least element of D with respect to the order “precedes above single line equals sign Subscript normal upper Lamda Baseline≪Ʌ”, then x Subscript beta Baseline equals ModifyingAbove x With caret comma beta element of normal upper Lamda comma upper H left parenthesis lamda comma beta right parenthesis equals v left parenthesis lamda comma ModifyingAbove x With caret right parenthesisxβ = ˆx, β ∈
Ʌ, H(λ, β) = v(λ, ˆx) and upper I left parenthesis lamda comma beta right parenthesis equals 0 comma lamda comma beta element of normal upper Lamda periodI (λ, β) = 0, λ, β ∈Ʌ.
The representations ofupper H left parenthesis lamda comma beta right parenthesisH(λ, β) andh left parenthesis lamda comma beta right parenthesish(λ, β) given in the Theorems 13.4 and 13.5 
yield the following representation of I, J: 
Corollary 13.12 
(I) If upper H Subscript epsilon overbar Baseline left parenthesis lamda comma beta right parenthesis less than plus normal infinityH¯ε(λ, β) < +∞for an epsilon overbar greater than 0¯ε > 0 and v Superscript asterisk Baseline left parenthesis lamda right parenthesis element of double struck upper R commav∗(λ) ∈R, then 
upper I left parenthesis lamda comma beta right parenthesis equals inf Underscript a greater than or equals 0 Endscripts left parenthesis sup Underscript x element of upper D Endscripts left parenthesis left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis right parenthesis minus a left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis right parenthesis semicolonI (λ, β) = inf
a≥0(sup
x∈D
((v(λ, x) −v∗(λ)) −a(v(β, x) −v∗(β))));

374
13
Maximum Entropy Techniques
(II) If v Superscript asterisk Baseline left parenthesis lamda right parenthesis element of double struck upper Rv∗(λ) ∈R and v Superscript asterisk Baseline left parenthesis beta right parenthesis element of double struck upper R commav∗(β) ∈R, then 
upper J left parenthesis lamda comma beta right parenthesis equals sup Underscript a greater than or equals 0 Endscripts left parenthesis sup Underscript x element of upper D Endscripts left parenthesis left parenthesis v left parenthesis lamda comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis lamda right parenthesis right parenthesis minus a left parenthesis v left parenthesis beta comma x right parenthesis minus v Superscript asterisk Baseline left parenthesis beta right parenthesis right parenthesis right parenthesis right parenthesis periodJ(λ, β) = sup
a≥0
(sup
x∈D
((v(λ, x) −v∗(λ)) −a(v(β, x) −v∗(β)))).
Remark 13.13 Equation upper I left parenthesis lamda comma beta right parenthesis equals 0I (λ, β) = 0, upper J left parenthesis lamda comma beta right parenthesis equals 0 periodJ(λ, β) = 0. Having upper I left parenthesis lamda comma beta right parenthesis equals v left parenthesis lamda comma x Subscript beta Baseline right parenthesis minus v left parenthesis lamda comma x Subscript lamda Baseline right parenthesisI (λ, β) = v(λ, xβ) −
v(λ, xλ) ,upper J left parenthesis lamda comma beta right parenthesis equals v left parenthesis lamda comma x Subscript beta Baseline right parenthesis minus v left parenthesis lamda comma x Subscript lamda Baseline right parenthesisJ(λ, β) = v(λ, xβ) −v(λ, xλ), resp., with two elementsx Subscript lamda Baseline comma x Subscript beta Baseline element of upper D commaxλ, xβ ∈D, such 
that upper D 0 left parenthesis lamda right parenthesis equals StartSet x Subscript lamda Baseline EndSet comma upper D 0 left parenthesis beta right parenthesis equals StartSet x Subscript beta Baseline EndSet commaD0(λ) = {xλ}, D0(β) = {xβ}, then upper I left parenthesis lamda comma beta right parenthesis equals 0I (λ, β) = 0, upper J left parenthesis lamda comma beta right parenthesis equals 0 commaJ(λ, β) = 0, resp., provided 
thatx Subscript lamda Baseline equals x Subscript beta Baseline identical to x Superscript 0 Baseline commaxλ = xβ ≡x0, hence, if the true distributionlamdaλ as well as the hypothesisbetaβ yield 
the same (unique) optimal decision x Superscript 0 Baseline element of upper Dx0 ∈D. See also the following interpretation of 
upper I comma upper JI, J. 
As can be seen from Corollaries 13.10, 13.11 and Theorem 13.7 the general-
ized divergences upper I left parenthesis lamda comma beta right parenthesis comma upper J left parenthesis lamda comma beta right parenthesisI (λ, β), J(λ, β) can be considered as measures for the deviation 
between the probability measureslamdaλ andbetaβ relative to the decision problemleft parenthesis normal upper Omega comma upper D comma v right parenthesis(Ω, D, v)
or to the loss set upper VV . 
Based on the meaning of upper II and upper JJ, we introduce the following deﬁnition: 
Deﬁnition 13.4 
(I) The right-I-rhoρ-, right-J-rhoρ-neighborhood of a distribution lamda element of c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesisλ ∈ca+,1(Ω, A) with 
v Superscript asterisk Baseline left parenthesis lamda right parenthesis element of double struck upper Rv∗(λ) ∈R is the set deﬁned by 
StartLayout 1st Row 1st Column upper U Subscript rho Superscript upper I comma r Baseline left parenthesis lamda right parenthesis left parenthesis upper U Subscript rho Superscript upper J comma r Baseline left parenthesis lamda right parenthesis comma r e s p period right parenthesis 2nd Column equals 3rd Column left brace beta element of c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesis colon upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty set comma epsilon greater than 0 comma upper I left parenthesis lamda comma beta right parenthesis less than rho 2nd Row 1st Column Blank 2nd Column Blank 3rd Column r e s p period upper J left parenthesis lamda comma beta right parenthesis less than rho right brace EndLayoutU I,r
ρ (λ)(U J,r
ρ
(λ),resp.) = {β ∈ca+,1(Ω, A) : Dε(β) /= ∅, ε > 0, I (λ, β) < ρ
resp.J(λ, β) < ρ}
(II) The left-upper II-rhoρ-, left-upper JJ-rhoρ-neighborhood of a distribution beta element of c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesisβ ∈ca+,1(Ω, A) with 
upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty set comma epsilon greater than 0Dε(β) /= ∅, ε > 0 is the set deﬁned by 
StartLayout 1st Row 1st Column upper U Subscript rho Superscript upper I comma l Baseline left parenthesis beta right parenthesis left parenthesis upper U Subscript rho Superscript upper J comma l Baseline left parenthesis beta right parenthesis comma r e s p period right parenthesis 2nd Column equals 3rd Column left brace lamda element of c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesis colon v Superscript asterisk Baseline left parenthesis lamda right parenthesis element of double struck upper R comma upper I left parenthesis lamda comma beta right parenthesis less than rho 2nd Row 1st Column Blank 2nd Column Blank 3rd Column r e s p period upper J left parenthesis lamda comma beta right parenthesis less than rho right brace period EndLayoutU I,l
ρ (β)(U J,l
ρ (β),resp.) = {λ ∈ca+,1(Ω, A) : v∗(λ) ∈R, I (λ, β) < ρ
resp.J(λ, β) < ρ}.
Of course, the divergences I, J, yield also the notion of a “convergence”: 
Deﬁnition 13.5 
(I) A sequence left parenthesis beta Superscript j Baseline right parenthesis(β j) in c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesisca+,1(Ω, A) is called right-I-, right-J-convergent, resp., 
toward an element lamda element of c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesis comma beta Superscript j Baseline right arrow Superscript upper I comma r Baseline lamdaλ ∈ca+,1(Ω, A), β j →I,r λ, beta Superscript j Baseline right arrow Superscript upper J comma r Baseline lamda comma j right arrow normal infinity commaβ j →J,r λ, j →∞, resp., 
provided that upper D Subscript epsilon Baseline left parenthesis beta Superscript j Baseline right parenthesis not equals normal empty set comma epsilon greater than 0 comma j equals 1 comma 2 comma period period period comma v Superscript asterisk Baseline left parenthesis lamda right parenthesis element of double struck upper RDε(β j) /= ∅, ε > 0, j = 1, 2, ..., v∗(λ) ∈R and upper I left parenthesis lamda comma beta Superscript j Baseline right parenthesis right arrow 0I (λ, β j) →0
, upper J left parenthesis lamda comma beta Superscript j Baseline right parenthesis right arrow 0 comma j right arrow normal infinity commaJ(λ, β j) →0, j →∞, respectively. 
(II) A sequence left parenthesis lamda Superscript k Baseline right parenthesis(λk) in c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesisca+,1(Ω, A) is called left-I- , left-J-convergent, resp., 
toward an element beta element of c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesis comma lamda Superscript k Baseline right arrow Superscript upper I comma l Baseline betaβ ∈ca+,1(Ω, A), λk →I,l β , lamda Superscript k Baseline right arrow Superscript upper J comma l Baseline beta comma j right arrow normal infinity commaλk →J,l β, j →∞, resp, 
provided that upper D Subscript epsilon Baseline left parenthesis beta right parenthesis not equals normal empty set comma epsilon greater than 0 comma v Superscript asterisk Baseline left parenthesis lamda Superscript k Baseline right parenthesis element of double struck upper R comma k equals 1 comma 2 comma period period periodDε(β) /= ∅, ε > 0, v∗(λk) ∈R, k = 1, 2, ..., and upper I left parenthesis lamda Superscript k Baseline comma beta right parenthesis right arrow 0I (λk, β) →0, 
upper J left parenthesis lamda Superscript k Baseline comma beta right parenthesis right arrow 0 comma k right arrow normal infinity commaJ(λk, β) →0, k →∞, respectively.

13.3 Generalized Divergence and Generalized Minimum Discrimination Information
375
Remark 13.14 The distinction between the left- and right-convergence, see the 
above deﬁnitions, is necessary, sinceupper I left parenthesis lamda comma beta right parenthesis not equals upper I left parenthesis lamda comma beta right parenthesis comma upper J left parenthesis lamda comma beta right parenthesis not equals upper J left parenthesis lamda comma beta right parenthesisI (λ, β) /= I (λ, β), J(λ, β) /= J(λ, β) in gen-
eral, see the following example. 
Example 13.4 Consider normal upper Omega equals omega 1 comma period period period comma omega Subscript n Baseline right parenthesisΩ = ω1, ..., ωn) and upper V equals upper C Subscript left parenthesis 1 divided by 2 right parenthesis Baseline periodV = C(1/2). According to Corollary 
13.11b we have  upper I Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals upper J Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals 2 left parenthesis parallel to lamda parallel to minus StartFraction lamda Superscript upper T Baseline beta Over parallel to beta parallel to EndFraction right parenthesis comma lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript n Baseline commaI (1/2)(λ, β) = J (1/2)(λ, β) = 2(|| λ || −λT β
||β|| ), λ, β ∈Rn
+,1, where 
parallel to dot parallel to|| · || denotes the Euclidean norm. Then, upper I Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis beta comma lamda right parenthesis equals 2 left parenthesis parallel to beta parallel to minus StartFraction beta Superscript upper T Baseline lamda Over parallel to lamda parallel to EndFraction right parenthesisI (1/2)(β, λ) = 2(|| β || −βT λ
||λ|| ), and for lamda equals left parenthesis 1 comma 0 comma period period period comma 0 right parenthesis Superscript upper T Baseline comma beta equals left parenthesis 1 divided by n comma period period period comma 1 divided by n right parenthesis Superscript upper Tλ =
(1, 0, ..., 0)T , β = (1/n, ..., 1/n)T
we
get 
upper I Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals 2 left parenthesis 1 minus 1 divided by n Superscript 1 divided by 2 Baseline right parenthesisI (1/2)(λ, β) = 2(1 −1/n1/2)
and 
upper I Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis beta comma lamda right parenthesis equals 2 left parenthesis 1 divided by n Superscript 1 divided by 2 Baseline minus 1 divided by n right parenthesis equals left parenthesis 1 divided by n Superscript 1 divided by 2 Baseline right parenthesis upper I left parenthesis lamda comma beta right parenthesisI (1/2)(β, λ) = 2(1/n1/2 −1/n) = (1/n1/2)I (λ, β) . Hence, we have upper I Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis beta comma lamda right parenthesis not equals upper I Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis lamda comma beta right parenthesisI (1/2)(β, λ) /=
I (1/2)(λ, β) for n greater than 1 periodn > 1. We still mention that upper H Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals 2 left parenthesis 1 minus StartFraction lamda Superscript upper T Baseline beta Over parallel to beta parallel to EndFraction right parenthesis commaH (1/2)(λ, β) = 2(1 −λT β
||β|| ), hence, 
upper H Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis beta comma lamda right parenthesis equals 2 left parenthesis 1 minus StartFraction beta prime lamda Over parallel to lamda parallel to EndFraction right parenthesisH (1/2)(β, λ) = 2(1 −β'λ
||λ||). Consequently, upper H Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals upper H Superscript left parenthesis 1 divided by 2 right parenthesis Baseline left parenthesis beta comma lamda right parenthesisH (1/2)(λ, β) = H (1/2)(β, λ) holds if and 
only if parallel to beta parallel to equals parallel to lamda parallel to period|| β ||=|| λ || . However, this holds not for all lamda comma beta element of double struck upper R Superscript nλ, β ∈Rn . 
For the class of inaccuracy functions 
upper H Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis comma h Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis comma b greater than or equals 0H (b)(λ, β), h(b)(λ, β), b ≥0 with 
upper H Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals h Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesisH (b)(λ, β) = h(b)(λ, β) for b greater than 0b > 0, given in Corollary 13.9, we have this result: 
Corollary 13.13 Letupper I left parenthesis lamda comma beta right parenthesis equals upper H Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma beta right parenthesis minus upper H Superscript left parenthesis b right parenthesis Baseline left parenthesis lamda comma lamda right parenthesis comma lamda comma beta element of double struck upper R Subscript plus comma 1 Superscript n Baseline comma b greater than 0 periodI (λ, β) = H (b)(λ, β) −H (b)(λ, λ), λ, β ∈Rn
+,1, b > 0.Then 
upper U Subscript rho Superscript upper I comma l Baseline left parenthesis beta right parenthesisU I,l
ρ (β) is convex for all rho greater than 0 comma beta element of double struck upper R Subscript plus comma 1 Superscript nρ > 0, β ∈Rn
+,1 and each b greater than 0 semicolonb > 0; upper U Subscript rho Superscript upper I comma r Baseline left parenthesis lamda right parenthesisU I,r
ρ (λ) is convex for all 
rho greater than 0 comma lamda element of double struck upper R Subscript plus comma 1 Superscript nρ > 0, λ ∈Rn
+,1 and each 1 divided by 2 less than or equals b less than or equals 1 period1/2 ≤b ≤1.
Remark 13.15 Generalizations of the Kullback-Divergence. 
Pure mathematical generalizations of the Kullback-divergence 
upper I Superscript left parenthesis l right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals integral p Subscript lamda Baseline left parenthesis omega right parenthesis log left parenthesis p Subscript lamda Baseline left parenthesis omega right parenthesis divided by p Subscript beta Baseline left parenthesis omega right parenthesis right parenthesis m left parenthesis d omega right parenthesisI (l)(λ, β) =
{
pλ(ω) log(pλ(ω)/pβ(ω))m(dω)
as well as of the related Kerridge-inaccuracy 
upper H Superscript left parenthesis l right parenthesis Baseline left parenthesis lamda comma beta right parenthesis equals integral p Subscript lamda Baseline left parenthesis omega right parenthesis log left parenthesis 1 divided by p Subscript beta Baseline left parenthesis omega right parenthesis right parenthesis m left parenthesis d omega right parenthesis commaH (l)(λ, β) =
{
pλ(ω) log(1/pβ(ω))m(dω),
where p Subscript lamda Baseline equals StartFraction d lamda Over d m EndFraction comma p Subscript beta Baseline equals StartFraction d beta Over d m EndFractionpλ = dλ
dm , pβ = dβ
dm and mm denotes a measure on left parenthesis normal upper Omega comma German upper A right parenthesis(Ω, A), are suggested by 
several authors, see, e.g., [ 2, 3, 5]. We mention here, cf. [ 2], the f-divergence 
upper J Subscript f Baseline left parenthesis lamda comma beta right parenthesis equals integral p Subscript beta Baseline left parenthesis omega right parenthesis f left parenthesis p Subscript lamda Baseline left parenthesis omega right parenthesis divided by p Subscript beta Baseline left parenthesis omega right parenthesis right parenthesis m left parenthesis d omega right parenthesis commaJ f (λ, β) =
{
pβ(ω) f (pλ(ω)/pβ(ω))m(dω),
where f: double struck upper R Subscript plus Baseline right arrow double struck upper RR+ →R is a convex function. 
In these papers information can be found about the type of geometry induced by 
an f-divergence, i.e., by the related system ofupper J Subscript fJ f -neighborhoods, see Deﬁnition 13.4 
on (subsets of)c a Subscript plus comma 1ca+,1. For example, in [ 4] is shown that certain topological properties 
of upper J Subscript f Baseline left parenthesis lamda comma beta right parenthesisJ f (λ, β) with f left parenthesis t right parenthesis equals t log left parenthesis t right parenthesis f (t) = t log(t), hence, upper J Subscript f Baseline left parenthesis lamda comma beta right parenthesis equals upper I Superscript left parenthesis l right parenthesis Baseline left parenthesis lamda comma beta right parenthesis right parenthesisJ f (λ, β) = I (l)(λ, β)), are related to the 
squared distance d squared left parenthesis lamda comma beta right parenthesisd2(λ, β) of the Euclidean distance d left parenthesis lamda comma beta right parenthesis equals parallel to lamda minus beta parallel to comma lamda comma beta element of upper Hd(λ, β) =|| λ −β ||, λ, β ∈H
in a Hilbert space.

376
13
Maximum Entropy Techniques
In the following we show now that also the generalized divergences upper I comma upper JI, J deﬁned 
by (13.38a), (13.38b) have similar properties as the squared Euclidean distance in a 
Hilbert space. 
13.3.2 
upper II-, upper JJ-Projections 
As was shown in the literature, see, e.g., [ 5, 7, 9], in the information-theoretical 
foundation of statistics, the following minimization problem plays a major role: 
StartLayout 1st Row 1st Column min 2nd Column Blank 3rd Column upper I Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis 2nd Row 1st Column s period t period 2nd Column Blank 3rd Column lamda element of upper C period EndLayout min I (1)(λ, β)
(13.39) 
s.t. λ ∈ C. 
Here, upper I Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesisI (1)(λ, β) denotes the die Kullback-divergence between a given probability 
measure beta much less than m left parenthesisβ ≪m(measure on German upper A right parenthesisA) and lamda element of upper C commaλ ∈C, where upper CC is a certain subset of StartSet lamda element of c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesis colon lamda much less than m EndSet period{λ ∈
ca+,1(Ω, A) : λ ≪m}.
In order to ﬁnd a further relation between the divergences upper I comma upper JI, J and the squared 
Euclidean distance in a Hilbert space upper HH, we replace the divergence upper I Superscript left parenthesis l right parenthesis Baseline left parenthesis lamda comma beta right parenthesisI (l)(λ, β) in 
(13.39) by parallel to lamda minus beta parallel to squared|| λ −β ||2, where lamda comma betaλ, β, upper CC, resp., are considered as elements, a subset of 
a Hilbert space upper HH, then we obtain the optimization problem 
StartLayout 1st Row 1st Column min 2nd Column Blank 3rd Column parallel to lamda minus beta parallel to squared 2nd Row 1st Column s period t period 2nd Column Blank 3rd Column lamda element of upper C period EndLayout min || λ −β ||2
(13.40) 
s.t. λ ∈ C. 
However, this problem represents the projection ofbeta element of upper Hβ ∈H onto the subsetupper C subset of upper H periodC ⊂H. As 
is well known, in case of a convex setupper CC, a solutionbeta 0β0 of (13.40) is then characterized 
by the condition 
less than beta 0 minus beta comma lamda minus beta 0 greater than greater than or equals 0 f o r a l l lamda element of upper C comma < β0 −β, λ −β0 >
≥0 for all λ ∈C,
(13.41) 
where less than lamda comma beta greater than< λ, β > denotes the scalar product in the Hilbert space upper HH. Putting 
d squared left parenthesis lamda comma beta right parenthesis equals parallel to lamda minus beta parallel to Superscript 2 Baseline commad2(λ, β) =|| λ −β ||2, then (13.41) is equivalent with 
d squared left parenthesis lamda comma beta right parenthesis greater than or equals d squared left parenthesis lamda comma beta 0 right parenthesis plus d squared left parenthesis beta 0 comma beta right parenthesis f o r a l l lamda element of upper C commad2(λ, β) ≥d2(λ, β0) + d2(β0, β)
for all λ ∈C,
(13.42) 
wherein(13.41) and in (13.42) the equality sign (and therefore, of course, the theorem 
of Pythagoras) holds, if beta 0β0 lies in the relative algebraic interior of upper CC. As was  shown  
in [ 4], the optimization problem (13.39) can also be interpreted as a (generalized) 
projection problem, sind a solutionbeta 0β0 (13.39) can be characterized by the condition 
upper I Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta right parenthesis greater than or equals upper I Superscript left parenthesis 1 right parenthesis Baseline left parenthesis lamda comma beta 0 right parenthesis plus upper I Superscript left parenthesis 1 right parenthesis Baseline left parenthesis beta 0 comma beta right parenthesis f o r a l l lamda element of upper CI (1)(λ, β) ≥I (1)(λ, β0) + I (1)(β0, β)
for all λ ∈C
(13.43) 
analogous to (13.42).

13.3 Generalized Divergence and Generalized Minimum Discrimination Information
377
We now show that a corresponding result can also be obtained for the minimization 
problems 
StartLayout 1st Row 1st Column min 2nd Column Blank 3rd Column upper I left parenthesis lamda comma beta right parenthesis 2nd Row 1st Column s period t period 2nd Column Blank 3rd Column lamda element of upper C EndLayout min I (λ, β)
(13.44) 
s.t. λ ∈ C 
and 
StartLayout 1st Row 1st Column min 2nd Column Blank 3rd Column upper J left parenthesis lamda comma beta right parenthesis 2nd Row 1st Column s period t period 2nd Column Blank 3rd Column lamda element of upper C comma EndLayout min J(λ, β)
(13.45) 
s.t. λ ∈ C, 
where upper I left parenthesis lamda comma beta right parenthesis comma upper J left parenthesis lamda comma beta right parenthesisI (λ, β), J(λ, β) denote the divergences according to (13.38a), (13.38b). 
Let denotenormal upper LamdaɅ a convex subset ofc a Subscript plus comma 1 Baseline commaca+,1, such thatupper H left parenthesis lamda comma beta right parenthesis comma h left parenthesis lamda comma beta right parenthesisH(λ, β), h(λ, β) are deﬁned and 
upper H left parenthesis lamda comma beta right parenthesis element of double struck upper R comma h left parenthesis lamda comma beta right parenthesis element of double struck upper R comma v Superscript asterisk Baseline left parenthesis lamda right parenthesis element of double struck upper RH(λ, β) ∈R, h(λ, β) ∈R, v∗(λ) ∈R for all lamda comma beta element of normal upper Lamda periodλ, β ∈Ʌ. Moreover, let be betaβ a ﬁxed  
element of normal upper LamdaɅ and upper CC a subset of normal upper Lamda periodɅ. Now, a “projection” of betaβ onto upper CC is deﬁned as 
follows: 
Deﬁnition 13.6 A solution beta 0β0 of (13.44), (13.45), resp., is called an upper II-, an upper JJ-
projection, resp., of betaβ onto upper CC. 
Some properties of upper II-, upper JJ-projections are given in the following: 
Theorem 13.8 Suppose that upper CC is convex, and lamda right arrow upper H left parenthesis lamda comma lamda 0 right parenthesisλ →H(λ, λ0), lamda right arrow h left parenthesis lamda comma lamda 0 right parenthesisλ →h(λ, λ0), resp., 
is afﬁne linear on normal upper LamdaɅ for lamda 0 equals betaλ0 = β and all lamda 0 element of upper C periodλ0 ∈C. Moreover, assume that for all 
lamda comma lamda 0 element of upper Cλ, λ0 ∈C the continuity condition upper H left parenthesis lamda comma lamda 0 plus t left parenthesis lamda minus lamda 0 right parenthesis right parenthesis right arrow upper H left parenthesis lamda comma lamda 0 right parenthesisH(λ, λ0 + t(λ −λ0)) →H(λ, λ0), h left parenthesis lamda comma lamda 0 plus t left parenthesis lamda minus lamda 0 right parenthesis right parenthesis right arrow h left parenthesis lamda comma lamda 0 right parenthesish(λ, λ0 +
t(λ −λ0)) →h(λ, λ0) holds for t down arrow 0 periodt ↓0.
(I) A necessary condition for an upper II-, upper JJ-projection beta 0β0, resp., of betaβ onto upper CC is then the 
condition (analogous to (13.42), (13.43)) 
upper I left parenthesis lamda comma beta right parenthesis greater than or equals upper I left parenthesis lamda comma beta 0 right parenthesis plus upper I left parenthesis beta 0 comma beta right parenthesis f o r a l l lamda element of upper C commaI (λ, β) ≥I (λ, β0) + I (β0, β) for allλ ∈C,
(13.46) 
upper J left parenthesis lamda comma beta right parenthesis greater than or equals upper J left parenthesis lamda comma beta 0 right parenthesis plus upper I left parenthesis beta 0 comma beta right parenthesis f o r a l l lamda element of upper C commaJ(λ, β) ≥J(λ, β0) + I (β0, β) for all λ ∈C,
(13.47) 
resp., where the sign “equals=” holds, provided that beta 0β0 lies in the relative algebraic 
interior of upper CC. 
(II) If 
limit Underscript t down arrow 0 Endscripts StartFraction 1 Over t EndFraction upper I left parenthesis beta 0 comma beta 0 plus t left parenthesis lamda minus beta 0 right parenthesis right parenthesis equals limit Underscript t down arrow 0 Endscripts StartFraction 1 Over t EndFraction left parenthesis upper H left parenthesis beta 0 comma beta 0 plus t left parenthesis lamda minus beta 0 right parenthesis right parenthesis minus upper H left parenthesis beta 0 comma beta 0 right parenthesis right parenthesis equals 0limt↓0 1
t I (β0, β0 + t(λ −β0)) = limt↓0 1
t (H(β0, β0 + t(λ −β0)) −H(β0,
β0)) = 0, limit Underscript t down arrow 0 Endscripts StartFraction 1 Over t EndFraction upper J left parenthesis beta 0 comma beta 0 plus t left parenthesis lamda minus beta 0 right parenthesis right parenthesis equals limit Underscript t down arrow 0 Endscripts StartFraction 1 Over t EndFraction left parenthesis h left parenthesis beta 0 comma beta 0 plus t left parenthesis lamda minus beta 0 right parenthesis right parenthesis minus h left parenthesis beta 0 comma beta 0 right parenthesis right parenthesis equals 0limt↓0 1
t J(β0, β0 + t(λ −β0)) = limt↓0 1
t (h(β0, β0 + t(λ −β0)) −
h(β0, β0)) = 0, resp., for allx element of upper Cx ∈C and abeta Subscript o Baseline element of upper C commaβo ∈C, then (13.46), (13.47) is also  
sufﬁcient for an upper II-, upper JJ-projection beta 0β0 of betaβ onto upper CC.

378
13
Maximum Entropy Techniques
13.3.3 
Minimum Discrimination Information 
An important reason for the consideration of the upper II-, upper JJ-projections according to 
Deﬁnition 13.6 is the following generalization of the minimum discrimination infor-
mation, a concept that was introduced in [ 9] for the foundation of methods of statistics. 
We suppose here the unknown (partly known) probability distribution upper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ of omega overTilde ˜ω
lies in a subset normal upper LamdaɅ of c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesisca+,1(Ω, A) and satisﬁes an equation of the type 
integral upper T left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis equals theta left parenthesis identical to upper E upper T left parenthesis omega right parenthesis right parenthesis comma
{
T (ω)λ(dω) = θ(≡ET (ω)),
(13.48) 
whereupper T colon normal upper Omega right arrow thetaT : Ω →θ is a measurable mapping fromleft parenthesis normal upper Omega comma German upper A right parenthesis(Ω, A) into a further measurable set 
left parenthesis normal upper Theta comma script upper B right parenthesis(Θ, B), andthetaθ is an element ofnormal upper ThetaΘ. The elementthetaθ is interpreted as a certain parameter 
of the distributionupper P Subscript omegaPω; moreover, it is assumed that estimatesModifyingAbove theta With tilde equals ModifyingAbove theta With tilde Subscript upper N Baseline left parenthesis omega 1 comma period period period comma omega Subscript n Baseline right parenthesis ˜θ = ˜θN(ω1, ..., ωn) are 
available for thetaθ, where omega Subscript kωk is a realization of omega overTilde ˜ω. 
For a known parameter thetaθ the set 
upper C equals upper C left parenthesis theta right parenthesis equals left brace lamda element of c a Subscript plus comma 1 Baseline left parenthesis normal upper Omega comma German upper A right parenthesis colon lamda element of normal upper Lamda comma integral upper T left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis equals theta right braceC = C(θ) = {λ ∈ca+,1(Ω, A) : λ ∈Ʌ,
{
T (ω)λ(dω) = θ}
describes the information available on upper P Subscript omega overTilde Baseline equals lamdaP˜ω = λ. For a given hypothesis upper P Subscript omega overTilde Baseline equals betaP˜ω = β the 
I-projection of betaβ onto upper C left parenthesis theta right parenthesisC(θ) describes then the nearest element of upper C equals upper C left parenthesis theta right parenthesisC = C(θ) to betaβ, 
and 
StartLayout 1st Row 1st Column upper I left parenthesis star comma beta right parenthesis equals upper I left parenthesis star comma beta semicolon theta right parenthesis 2nd Column equals inf left brace upper I left parenthesis lamda comma beta right parenthesis colon lamda element of upper C left parenthesis theta right parenthesis right brace 2nd Row 1st Column Blank 2nd Column equals inf left brace upper I left parenthesis lamda comma beta right parenthesis colon lamda element of normal upper Lamda comma integral upper T left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis equals theta right brace EndLayoutI (★, β) = I (★, β; θ) = inf
{
I (λ, β) : λ ∈C(θ)
}
= inf
{
I (λ, β) : λ ∈Ʌ,
{
T (ω)λ(dω) = θ
}
(13.49) 
denotes the distance betweenbetaβ andupper C left parenthesis theta right parenthesisC(θ) (often identiﬁed withthetaθ). Hence, an increas-
ing distanceupper I left parenthesis star comma beta right parenthesisI (★, β) betweenbetaβ andupper C left parenthesis theta right parenthesisC(θ) means a decreasing quality of the hypothesis 
upper P Subscript omega overTilde Baseline equals beta periodP˜ω = β.
Corresponding to [ 9] we introduce therefore the following notion. 
Deﬁnition 13.7 The value upper I left parenthesis star comma beta right parenthesis equals upper I left parenthesis star comma beta semicolon theta right parenthesisI (★, β) = I (★, β; θ) is called the minimum useful dis-
crimination information—relative to the decision problem left parenthesis normal upper Omega comma upper D comma v right parenthesis(Ω, D, v)—against the 
(zero-) hypothesis upper P Subscript omega overTilde Baseline equals betaP˜ω = β. 
Remark 13.16 Useful Discrimination Information. 
The notion useful discrimination information emphasizes the fact that the gener-
alized divergence upper I left parenthesis lamda comma beta right parenthesisI (λ, β) measures the difference between the distributions lamdaλ and 
betaβ relative to a (subsequent) decision problem left parenthesis normal upper Omega comma upper D comma v right parenthesis(Ω, D, v); see also the deﬁnition of 
economic information measures used in [ 5, 11]. 
We show now some properties of the function theta right arrow upper I left parenthesis star comma beta semicolon theta right parenthesis periodθ →I (★, β; θ).

13.3 Generalized Divergence and Generalized Minimum Discrimination Information
379
Lemma 13.5 Letnormal upper LamdaɅ be convex,normal upper ThetaΘ a linear parameter space andlamda right arrow upper I left parenthesis lamda comma beta right parenthesisλ →I (λ, β) convex 
onnormal upper Lamda periodɅ. Furthermore, letnormal upper Theta 0 equals left brace theta element of normal upper Theta colonΘ0 = {θ ∈Θ : there islamda element of normal upper Lamda commaλ ∈Ʌ, such thatintegral upper T left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis equals theta right brace period
{
T (ω)λ(dω) = θ}.
Then normal upper Theta 0Θ0 is convex, and theta right arrow upper I left parenthesis star comma beta semicolon theta right parenthesisθ →I (★, β; θ) is convex on normal upper Theta 0 periodΘ0.
Proof Lettheta 1 comma theta 2 element of normal upper Theta 0θ1, θ2 ∈Θ0 and0 less than alpha less than 1 period0 < α < 1. Then there are elementslamda 1 comma lamda 2 element of normal upper Lamda commaλ1, λ2 ∈Ʌ, such that 
theta Subscript i Baseline equals integral upper T left parenthesis omega right parenthesis lamda Subscript i Baseline left parenthesis d omega right parenthesis comma i equals 1 comma 2 periodθi =
{
T (ω)λi(dω), i = 1, 2.
This
yields
integral upper T left parenthesis omega right parenthesis left parenthesis alpha lamda 1 plus left parenthesis 1 minus alpha right parenthesis lamda 2 right parenthesis left parenthesis d omega right parenthesis equals alpha integral upper T left parenthesis omega right parenthesis lamda 1 left parenthesis d omega right parenthesis plus left parenthesis 1 minus alpha right parenthesis integral upper T left parenthesis omega right parenthesis lamda 2 left parenthesis d omega right parenthesis
{
T (ω)(αλ1 + (1 −α)λ2)(dω) =
α
{
T (ω)λ1(dω) + (1 −α)
{
T (ω)λ2(dω) andalpha lamda 1 plus left parenthesis 1 minus alpha right parenthesis lamda 2 element of normal upper Lamdaαλ1 + (1 −α)λ2 ∈Ʌ, hence,alpha theta 1 plus left parenthesis 1 minus alpha right parenthesis theta 2 element of normal upper Theta 0 periodαθ1 +
(1 −α)θ2 ∈Θ0. Furthermore, 
upper I left parenthesis star comma beta semicolon alpha theta 1 plus left parenthesis 1 minus alpha right parenthesis theta 2 less than or equals upper I left parenthesis alpha lamda 1 plus left parenthesis 1 minus alpha right parenthesis lamda 2 comma beta right parenthesis less than or equals alpha upper I left parenthesis lamda 1 comma beta right parenthesis plus left parenthesis 1 minus alpha right parenthesis upper I left parenthesis lamda 2 comma beta right parenthesis commaI (★, β; αθ1 + (1 −α)θ2 ≤I (αλ1 + (1 −α)λ2, β) ≤αI (λ1, β) + (1 −α)I (λ2, β),
which yields the rest of the assertion, since, up to the above conditions, lamda 1 comma lamda 2λ1, λ2 were 
arbitrary.
⬜
Remark 13.17 Convexity of upper I left parenthesis period comma beta right parenthesis periodI (., β). Because of the concavity of lamda right arrow v Superscript asterisk Baseline left parenthesis lamda right parenthesis equals upper H left parenthesis lamda comma lamda right parenthesisλ →v∗(λ) =
H(λ, λ), the functionlamda right arrow upper I left parenthesis lamda comma beta right parenthesisλ →I (λ, β) is convex, provided thatupper H left parenthesis lamda comma beta right parenthesis equals upper H 0 left parenthesis lamda comma beta right parenthesis equals s u p left brace lamda f colon f element of upper V 0 left parenthesis beta right parenthesis right brace periodH(λ, β) = H0(λ, β) =
sup{λf : f ∈V0(β)}.
If normal upper ThetaΘ is a ﬁnite-dimensional space, then the convexity of theta right arrow upper I left parenthesis star comma beta semicolon theta right parenthesisθ →I (★, β; θ) on normal upper Theta 0Θ0
yields the continuity of this function—at least—on the relative interiorr i normal upper Theta 0riΘ0 ofnormal upper Theta 0 periodΘ0. If 
the functionlamda right arrow upper I left parenthesis star comma beta semicolon lamda right parenthesisλ →I (★, β; λ) is continuous on a sufﬁciently large range of deﬁnition, 
then 
upper I left parenthesis star comma beta semicolon ModifyingAbove theta With caret Subscript upper N Baseline right parenthesis right arrow upper I left parenthesis star comma beta semicolon theta right parenthesis equals upper I left parenthesis star comma beta right parenthesis a period s period commaI (★, β; ˆθN) →I (★, β; θ) = I (★, β)
a.s.,
provided thatModifyingAbove theta With caret Subscript upper N Baseline right arrow theta ˆθN →θ a.s., whereModifyingAbove theta With caret Subscript 1 Baseline comma ModifyingAbove theta With caret Subscript 2 Baseline comma period period period ˆθ1, ˆθ2, ... is a sequence of estimation functions for 
thetaθ. In this case we interpret then 
ModifyingAbove upper I With caret left parenthesis star comma beta right parenthesis equals upper I left parenthesis star comma beta semicolon ModifyingAbove theta With caret Subscript upper N Baseline left parenthesis omega 1 comma period period period comma omega Subscript upper N Baseline right parenthesis right parenthesis left parenthesis upper N equals 1 comma 2 comma period period period right parenthesis ˆI(★, β) = I (★, β; ˆθN(ω1, ..., ωN)) (N = 1, 2, ...)
as an estimate of upper I left parenthesis star comma beta right parenthesis periodI (★, β). For the testing of hypotheses we have then, cf. [ 9] the  
following procedure: 
Deﬁnition 13.8 Reject the (null-) hypothesis upper P Subscript omega overTilde Baseline equals beta commaP˜ω = β, if ModifyingAbove upper I With caret left parenthesis star comma beta right parenthesis ˆI(★, β) is signiﬁcantly 
large. 
For illustration of this test procedure we give still the following example: 
Example 13.5 Let normal upper Omega equals normal upper Theta equals upper D equals double struck upper RΩ = Θ = D = R and v left parenthesis omega comma x right parenthesis equals left parenthesis a left parenthesis omega right parenthesis x minus b left parenthesis omega right parenthesis right parenthesis squared commav(ω, x) = (a(ω)x −b(ω))2, where x element of double struck upper R x ∈
R and a left parenthesis dot right parenthesis comma b left parenthesis dot right parenthesisa(·), b(·) are square integrable random variables. Then, 
upper I left parenthesis lamda comma beta right parenthesis equals ModifyingAbove a squared With quotation dash Superscript lamda Baseline left parenthesis ModifyingAbove a b With quotation dash Superscript lamda Baseline divided by ModifyingAbove a squared With quotation dash Superscript lamda Baseline minus ModifyingAbove a b With quotation dash Superscript beta Baseline divided by ModifyingAbove a squared With quotation dash Superscript beta Baseline right parenthesis squared commaI (λ, β) = a2λ(
ab
λ/a2λ −ab
β/a2β)2
,
where 
ModifyingAbove a squared With quotation dash Superscript lamda Baseline equals integral a left parenthesis omega right parenthesis squared lamda left parenthesis d omega right parenthesisa2λ =
{
a(ω)2λ(dω), etc. If now  upper T left parenthesis omega right parenthesis equals a left parenthesis omega right parenthesis b left parenthesis omega right parenthesis commaT (ω) = a(ω)b(ω), then 
upper I left parenthesis star comma beta right parenthesis equals i n f left brace ModifyingAbove a squared With quotation dash Superscript lamda Baseline left parenthesis ModifyingAbove a b With quotation dash Superscript lamda Baseline slash ModifyingAbove a squared With quotation dash Superscript lamda Baseline minus ModifyingAbove a b With quotation dash Superscript beta Baseline slash ModifyingAbove a squared With quotation dash Superscript beta Baseline right parenthesis squared colon integral a left parenthesis omega right parenthesis b left parenthesis omega right parenthesis lamda left parenthesis d omega right parenthesis equals theta right brace equals inf Underscript u greater than 0 Endscripts u left parenthesis theta divided by u minus ModifyingAbove a b With quotation dash Superscript beta Baseline slash ModifyingAbove a squared With quotation dash Superscript beta Baseline right parenthesis squared commaI (★, β) =
inf
{
a2λ(
ab
λ/a2λ −ab
β/a2β)2 :
{
a(ω)b(ω)λ(dω) = θ
}
= inf
u>0 u(θ/u −ab
β/
a2β)2, hence, upper I left parenthesis star comma beta right parenthesis equals 0 commaI (★, β) = 0, provided that s i g n theta equals s i g n left parenthesis ModifyingAbove a b With quotation dash Superscript beta Baseline right parenthesissignθ = sign(ab
β) and upper I left parenthesis star comma beta right parenthesis equals 4 StartAbsoluteValue theta ModifyingAbove a b With quotation dash Superscript beta Baseline EndAbsoluteValue commaI (★, β) = 4 |
θab
β |, if s i g n theta equals minus s i g n left parenthesis ModifyingAbove a b With quotation dash Superscript beta Baseline right parenthesis periodsignθ = −sign(ab
β).

380
13
Maximum Entropy Techniques
References 
1. Arimoto, S.: Information-theoretical considerations on estimation problems. Inf. Control 19(3), 
181–194 (1971). https://doi.org/10.1016/S0019-9958(71)90065-9 
2. Csiszar, I.: Information-typ measures of difference of probability distributions and indirect 
observations. Studia Scientiarum Hungarica 2, 299–318 (1967) 
3. Csiszar, I.: On topological properties of f-divergences. Studia Scientiarum Hungarica 2, 329– 
339 (1967) 
4. Csiszar, I.: upper II-divergence geometry of probability distributions and minimization problems. 
Ann. Probab. 3(1), 146–158 (1975). https://doi.org/10.1214/aop/1176996454 
5. Good, I.: What is the use of a distribution? In: P. Krishnaiah (ed.) Multivariate Analysis, Pro-
ceedings of the 2nd International Symposium on Multivariate Analysis, pp. 183–203. Academic 
Press, New York (1969) 
6. Hardy, G., Littlewood, J., Pólya, G.: Inequalities. Cambridge University Press, London (1973) 
7. Jaynes, E.: Prior probabilities. IEEE Trans. Syst. Sci. Cybern. 4(3), 227–241 (1968). https:// 
doi.org/10.1109/TSSC.1968.300117 
8. Kerridge, D.: Inaccuracy and inference. J. R. Stat. Soc. Ser. B (Methodol.) 23(1), 184–194 
(1961). http://www.jstor.org/stable/2983856 
9. Kullback, S.: Information Theory and Statistics. Wiley, New York (1959) 
10. Luenberger, D.: Optimization by Vector Space Methods. Wiley, New York (1969) 
11. Marschak, J.: Economics of information systems. J. Am. Stat. Assoc. 66(333), 192–219 (1971). 
http://www.jstor.org/stable/2284873 
12. Martino, J.: Technological Forecasting for Decision Making, 3rd edn. McGraw-Hill, New York 
(1993) 
13. Perez, A.: Information-theoretic risk estimates in statistical decision. Kybernetika 3, 1–21 
(1967) 
14. Rockafellar, R.: Convex Analysis. University Press, Princeton (1970) 
15. Theil, H.: Optimal Decision Rules for Government and Industry. North-Holland, Amsterdam 
(1968)

Index 
A 
Actual parameter, 3 
Adaptive control of dynamic system, 3 
Adaptive trajectory planning for robots, 3 
Admissibility of the state, 8 
Approximate expected failure or recourse 
cost constraints, 20 
Approximate expected failure or recourse 
cost minimization, 20 
Approximate optimization problem, 3 
Approximation, 3 
Approximation of expected loss functions, 
24 
Approximation of state function, 20 
a priori,  4 
B 
Bayesian approach, 4 
Behavioral constraints, 30 
Bilinear functions, 24 
Bonferroni bounds, 28 
Bounded eigenvalues of the Hessian, 19 
Bounded gradient, 18 
Box constraints, 3 
C 
Calibration methods, 4 
Compensation, 3 
Compromise solution, 5 
Concave function, 19 
Constraint functions, 2 
Continuity, 16 
Continuously differentiable, 18 
Continuous probability distributions, 11 
Control function, 3 
Convexity, 16 
Convex loss function, 18 
Correction expenses, 4 
Cost(s) 
approximate expected failure or recourse 
... constraints, 20 
expected, 5 
expected weighted total, 6 
factors, 2 
failure, 13 
function, 5, 14 
loss function, 10 
maximum, 7 
maximum weighted expected, 7 
of construction, 8 
primary ... constraints, 10 
recourse, 10, 13 
total expected, 12 
Covariance matrix, 12, 19 
Cross-sectional areas, 9 
D 
Decision 
optimal, 8 
Decision theoretical task, 4 
Demand factors, 2 
Demandmm-vector, 9 
Design 
optimal, 8, 12 
optimal engineering, 9 
optimal ... of economic systems, 3 
optimal ... of mechanical structures, 3 
optimal structural, 9 
© The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer 
Nature Switzerland AG 2024 
K. Marti, Stochastic Optimization Methods, 
https://doi.org/10.1007/978-3-031-40059-9 
381

382
Index
problem, 2 
robust optimal, 20 
structural, 8 
variables, 2 
vector, 9 
Deterministic 
constraint, 6, 9 
substitute problem, 4–8, 12, 15, 17, 19 
Differentiability, 17 
Discrete probability distributions, 11 
Distribution 
probability, 4 
Distribution parameters, 11 
Disturbances, 2 
E 
Economic uncertainty, 11 
Essential supremum, 7 
Expectation, 5, 12 
Expected 
approximate ... failure or recourse cost 
constraints, 20 
approximate ... failure or recourse cost 
minimization, 20 
approximation of ... loss functions, 24 
cost, 5 
cost minimization problem, 5 
failure or recourse cost constraints, 15 
failure or recourse cost functions, 15 
failure or recourse cost minimization, 15 
maximum weighted... costs, 7 
primary cost constraints, 15, 20 
primary cost minimization, 15, 20 
recourse cost functions, 17 
total ... costs, 12 
total cost minimization, 15 
total weighted ... costs, 6 
weighted total costs, 6 
External load parameters, 2 
Extreme points, 10 
F 
Factor 
cost, 2 
demand, 2 
noise, 2 
of production, 2, 9 
weight, 7 
Failure, 8 
approximate expected ... or recourse cost 
constraints, 20 
costs, 10, 13 
domain, 10 
expected costs of, 12 
mode, 10 
of the structure, 21 
probability of, 13, 14 
Failure/survival domains, 28 
Function(s) 
approximation of expected loss, 24 
approximation of performance, 20 
approximation of state, 20 
bilinear, 24 
concave, 19 
constraint, 2 
cost, 14 
cost/loss, 10 
limit state, 8, 10 
loss, 14, 18 
mean value, 25, 27 
objective, 2 
output, 30 
performance, 8, 14, 30 
primary cost, 8 
recourse cost, 14 
response, 8, 30 
state, 8, 9, 14, 15, 23 
Functional-efﬁcient, 5 
G 
Gradient 
bounded, 18 
H 
Hölder mean, 22 
I 
Inequality 
Jensen’s, 18 
Markov-type, 33 
Tschebyscheff-type, 31 
Input vector, 2, 9, 16 
Inverse dynamics, 222 
J 
Jensen’s inequality, 18

Index
383
L 
Lagrangian, 13 
Least squares estimation, 24 
Limited sensitivity, 20 
Limit state function, 8, 10 
Linear programming, 9 
Lipschitz-continuous, 27 
Loss function, 18 
M 
Manufacturing, 3 
Manufacturing errors, 2 
Markov-type inequality, 33 
Material parameters, 2 
Maximum costs, 7 
Mean value function, 25, 27 
Mean value theorem, 18, 27 
Measurement and correction actions, 4 
Mechanical structure, 8, 9 
Minimum reliability, 31 
Modeling errors, 2 
Model parameters, 2, 9 
Model uncertainty, 11 
Multiple integral, 11 
N 
Noise factors, 2 
Nominal vector, 3 
Normal distributed random variable, 34 
O 
Objective function, 2 
Operating conditions, 3, 8, 10 
Optimal 
control, 2 
decision, 2 
design of economic systems, 3 
design of mechanical structures, 3 
Optimal decision, 8 
Optimal design, 8, 12 
Optimal structural design, 9 
Outcome map, 4 
Outcomes, 5 
P 
Parameter identiﬁcation, 4 
Parameters 
distribution, 11 
external load, 2 
material, 2 
model, 2, 3, 9 
technological, 2 
Pareto 
optimal, 5 
optimal solution, 7 
weak ... optimal solution, 6, 7 
weak Pareto optimal, 6 
Partial derivatives, 25 
Performance function, 5, 14 
Physical uncertainty, 11 
Power mean, 22 
Primary cost constraints, 10 
Primary cost function, 8 
Primary goal, 6 
Probability 
continuous ... distributions, 11 
density function, 11 
discrete ... distributions, 11 
distribution, 4 
of failure, 13, 14 
of safety, 13 
space, 4 
subjective or personal, 4 
Probability density function, 11 
Production planning, 3 
Production planning problems, 9 
R 
Random parameter vector, 5, 7 
Random variability, 10 
Random vector, 12 
Realizations, 11 
Recourse cost functions, 14 
Recourse costs, 10, 13 
Reference points, 24 
Regression techniques, 4, 23 
Reliability analysis, 28 
Reliability based optimization, 13 
Response, output or performance functions, 
30 
Response Surface Methods, 23 
Response Surface Model, 24 
Robust optimal design, 20 
S 
Safe structure, 3 
Safety, 8 
Safety conditions, 10 
Safety margins, 8 
Sample information, 4 
Scalarization, 6, 8 
Scenarios, 11

384
Index
Secondary goals, 6 
Second order expansions, 19 
Sensitivities, 25 
Sequential decision processes, 3 
Sizing variables, 9 
State function, 8, 9, 14, 15, 23 
Statistical uncertainty, 11 
Stochastic uncertainty, 4 
Structural dimensions, 9 
Structural optimization, 2 
Structural systems, 3, 9 
Structural systems weakness, 14 
Structure 
mechanical, 8 
safe, 3 
Subjective or personal probability, 4 
T 
Taylor expansion, 25, 33 
inner, partial, 26 
Technological coefﬁcients, 9 
Technological parameters, 2 
Thickness, 9 
Total weight, 8 
Tschebyscheff-type inequality, 31 
Two-step procedure, 3 
U 
Uncertainty, 3 
economic, 11 
model, 11 
physical, 11 
probabilistic, 4 
statistical, 11 
stochastic, 4 
Useful discrimination information, 378 
V 
Variable 
design, 2 
Vector 
nominal, 3 
optimization problem, 5 
Vector 
input, 2 
Volume, 8 
W 
Weak functional-efﬁcient, 6 
Weight factors, 7 
Worst case, 7

