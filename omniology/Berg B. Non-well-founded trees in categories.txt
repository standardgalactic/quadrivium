Non-well-founded trees in categories
Benno van den Berg
Technische Universit¬®at Darmstadt, Fachbereich Mathematik
Schlo√ügartenstr. 7, 64289 Darmstadt, Germany
Federico De Marchi 1
Corso Montegrappa 18/4
16137 Genova, Italy
Abstract
Non-well-founded trees are used in mathematics and computer science, for mod-
elling non-well-founded sets, as well as non-terminating processes or inÔ¨Ånite data
structures. Categorically, they arise as Ô¨Ånal coalgebras for polynomial endofunctors,
which we call M-types. We derive existence results for M-types in locally cartesian
closed pretoposes with a natural numbers object, using their internal logic. These are
then used to prove stability of such categories with M-types under various topos-
theoretic constructions; namely, slicing, formation of coalgebras (for a cartesian
comonad), and sheaves for an internal site.
1
Introduction
The Ô¨Årst appearance of the Anti-Foundation Axiom in set theory was in the
work of Forti and Honsell [14], after which its relevance to mathematics and
computer science was made clear by the work of Peter Aczel [3]. The Anti-
Foundation Axiom has the eÔ¨Äect of enlarging the set-theoretic universe by
non-well-founded sets, thereby allowing a greater class of trees to represent
sets. Traditionally, the Axiom of Foundation allows sets to be represented only
by well-founded trees, but the Anti-Foundation Axiom extends this possibility
to all non-well-founded trees.
Email addresses: berg@mathematik.tu-darmstadt.de (Benno van den Berg),
feddem@libero.it (Federico De Marchi).
1 Research supported by the Netherlands Organization for ScientiÔ¨Åc Research
(NWO), grant no. 613.000.222.
Preprint submitted to Elsevier
19 December 2006

In computer science, non-well-foundedness of trees enables one to describe
circular (and, more generally, non-terminating) phenomena. For this reason,
they have been used in the theory of concurrency and speciÔ¨Åcation, as well as
in the study of semantics for programming languages with coinductive types
[10,11,18,29,4].
Categorically, non-well-founded trees over a signature form what we call its M-
type, that is the Ô¨Ånal coalgebra for the polynomial functor determined by the
signature itself, much like well-founded trees form its initial algebra, usually
called the W-type of the signature.
The relation between these diÔ¨Äerent views on trees is well established in the
well-founded case. Aczel used Martin-L¬®of type theory with well-founded types
to give a model of his constructive set theory CZF, including œµ-induction [2].
Such a type theory, on the other hand, is known to have a sound interpre-
tation in locally cartesian closed categories with W-types (modulo coherence
problems for substitution: see [17] for a precise account). Finally, Moerdijk
and Palmgren have shown how to build a model of CZF in a Œ†W-pretopos
with a hierarchy of small maps (see [24]).
Although this threefold correspondence is not tight, it is apparent that well-
foundedness plays an equivalent role in each theory, and is preserved along
each side of the (ideal) triangle




CZF with
œµ-induction
L
L
L
L
L
L
L
L
L
L
L




Martin-L¬®of
type theory
rrrrrrrrrr




lcc pretopos
with W-types
In fact, removing it altogether wouldn‚Äôt aÔ¨Äect the correspondence itself. In
other words, the œµ-induction scheme in set theory, well-founded types in Martin-
L¬®of type theory and W-types in categories are additional elements which are
appended in turn to match each other‚Äôs presence. Therefore, it is reasonable
to expect that an analogous correspondence should arise when each theory
is equipped with non-well-founded structures. These amount to the Anti-
Foundation Axiom for constructive set theory, non-well-founded types in type
theory, and M-types in categories.
This paper is taking the Ô¨Årst step towards establishing such a correspondence,
by studying in detail categories with M-types. In fact, this paper aims to do
for M-types what [23] and [16] have done for W-types. Further work along
these lines is contained in the paper [9].
In particular, we look at closure properties of categories with M-types, proving
that they are closed under slicing, formation of coalgebras (for a cartesian
comonad), and sheaves (for an internal site). These constructions have proved
2

useful in topos theory, leading to the formulation of various independence
results [15,28]. One would hope to apply the same techniques in order to derive
independence and consistency results for a non-well-founded constructive set
theory, such as CZF‚àí+AFA. Other work on this system has been undertaken
by Rathjen [25,26].
Analogously, one could use the stability properties in order to derive results
in type theory. For instance, stability under slicing enabled the second author
to show in [13] how M-types provide a categorical semantics for Martin-L¬®of
type theories with non-well-founded types.
The paper is organised as follows. In Section 2 we give a precise categorical
deÔ¨Ånition of an M-type, and establish a few properties of M-types along the
lines of [23] and [16]. Next, in Section 3 we recall the deÔ¨Ånition of a dependent
polynomial functor from [16], and prove that a category with M-types has Ô¨Å-
nal coalgebras for all dependent polynomial functors, which is shown to imply
that categories with M-types are stable under slicing. We then show how these
results can be strengthened in presence of a natural numbers object. These are
essential preliminaries for the results in Section 4, where we derive existence
results for M-types. First, we show that the existence of Ô¨Åxpoints for a polyno-
mial functor implies the existence of an M-type, thereby improving on a result
by Abbott et al. [1]. Secondly, we sharpen a result by Santocanale [27], using
our techniques. These existence results are then helpful in showing stability
of categories with M-types: in Section 5 we prove closure under formation of
coalgebras, presheaves and sheaves, respectively.
We are grateful to Jaap van Oosten, Ieke Moerdijk and the anynomous referees
for their useful comments on earlier versions of this paper. One of these earlier
versions appeared as part of the Ô¨Årst author‚Äôs PhD thesis [7].
2
M-types
Throughout the paper, E will denote a locally cartesian closed category (lccc)
with Ô¨Ånite disjoint coproducts.
Internal logic 2.1
Instead of chasing diagrams, we will frequently use the
internal logic of our basic category E. Since E is a lccc with Ô¨Ånite disjoint sums,
one can interpret: conjunction, universal quantiÔ¨Åcation, implication, truth and
falsity (hence negation). So all of Ô¨Årst-order (intuitionistic) logic, except for
disjunction and existential quantiÔ¨Åcation.
Since E is a lccc, the pullback functor
f ‚àó: E/A
/ E/B
associated to a morphism f: B
/ A has both adjoints: a left adjoint Œ£f given
by composition with f, and a right adjoint Œ†f. Writing X for the unique
3

morphism X
/ 1, and identifying E/1 with E, this means that any such
f: B
/ A determines an endofunctor
Pf = E B‚àó
/ E/B
Œ†f / E/A Œ£A
/ E,
which is called the polynomial functor associated to f. The name derives from
the shape this functor assumes in the category Sets. Writing Ba = f ‚àí1(a) for
the Ô¨Åbre of f over an element a ‚ààA, the value of Pf on an object X in Sets
is
Pf(X) = Œ£a‚ààAXBa.
So elements are pairs (a, t), where a ‚ààA, and t: Ba
/ X.
Given an endofunctor T: C
/ C on an arbitrary category C, there are two
categories one can deÔ¨Åne. First, there is the category of T-algebras, denoted by
T ‚àíalg, which is deÔ¨Åned as follows. Objects are pairs consisting of an object X
together with a morphism x: TX
/ X in C (its structure map). A morphism
from (X, x: TX
/ X) to (Y, y: TY
/ Y ) is a morphism p: X
/ Y in C such
that
TX
Tp /
x

TY
y

X
p
/ Y
commutes. Of special importance is the initial object in this category, when-
ever it exists. This initial object (I, i) is then called the initial or free T-algebra.
As the name free T-algebra suggests, the idea is that the structure of I has
been freely generated so as to make it a T-structure. In fact, the language of
initial algebras is the right categorical language for studying inductively gen-
erated structures. However, to study coinduction and bisimulation, one should
turn to the dual of these notions.
So more important for us, is the second category one can deÔ¨Åne, that of T-
coalgebras, denoted by T ‚àícoalg. Objects are pairs consisting of an object X
together with a structure map x: X
/ TX in C, and a morphism p: X
/ Y in
C is a morphism of T-coalgebras from (X, x: X
/ TX) to (Y, y: Y
/ TY ),
when (Tp)x = yp. The terminal object in this category, when it exists, is
called the Ô¨Ånal or cofree T-coalgebra. The intuition is that this object has
been ‚Äúcoinductively‚Äù or ‚Äúcofreely‚Äù generated.
A very important observation, usually called Lambek‚Äôs lemma [21], is that
the structure maps of initial algebras (and Ô¨Ånal coalgebras, by duality) are
isomorphisms. Therefore initial algebras and Ô¨Ånal coalgebras are Ô¨Åxpoints. A
Ô¨Åxpoint is an object X together with an isomorphism TX ‚àº= X. Fixpoints can
be regarded as both algebras and coalgebras. We will also employ the following
terminology: a preÔ¨Åxpoint is an object X together with a monomorphism
TX
/ X.
4

So to any morphism f: B
/ A in a lccc E, there might be associated its
initial Pf-algebra, and its Ô¨Ånal Pf-coalgebra. The initial Pf-algebra is called
the W-type for f and denoted by Wf; such W-types were extensively studied
in [23]. Here we will be interested in Ô¨Ånal Pf-coalgebras, or M-types for f,
denoted by Mf. We say that E has W-types (or M-types), when all W-types
(resp. M-types) exist.
W- and M-types are Ô¨Åxpoints for the polynomial functor. In particular, the
structure map Mf
/ PfMf, which will usually be called œÑf, or simply œÑ, has
an inverse, which will usually be called supf, or simply sup.
The category Sets has both W- and M-types. The M-type associated to a
function f is deÔ¨Åned to be the set of trees in which nodes are labelled by
elements a ‚ààA and edges are labelled by elements b ‚ààB, in such a way
that the edges into a certain node labelled by a are enumerated by f ‚àí1(a), as
illustrated in the following picture:
. . .
. . .
. . .
. . .
‚Ä¢
u
,,,,,,,,,,
a
v

‚Ä¢
x
‚Ä¢
y

‚Ä¢
z

f ‚àí1(a) = ‚àÖ
f ‚àí1(b) = {u, v}
f ‚àí1(c) = {x, y, z}
. . .
a
x
::::::::::::
b
y
c
z

c
This set has the structure of a Pf-coalgebra: œÑ: Mf
/ PfMf decomposes a
tree into its immediate subtrees, while its inverse sup puts them together.
The W-type associated to f consists of the trees of this form that are in
addition well-founded. To stress that M-types consist of all trees, not just the
well-founded ones, one calls the general trees non-well-founded.
To prove that the set of all such trees has the right universal property, one
should canonically associate such a tree to any element x ‚ààX in a coalgebra
Œ≥: X
/ PfX. To this end, one proceeds to unfold the element x: one computes
Œ≥(x) = (a, t), and starts drawing a tree by drawing a root and labelling it by a,
and putting edges into this element, one for every element b ‚ààBa, and labelling
them accordingly. To the edge labelled by b, one attaches the unfolding of
the tree tb, so one computes Œ≥(tb), etcetera. By proceeding indeÔ¨Ånitely, one
produces a tree from the element x. Its root has a as its label, and this element,
will be called, by abuse of terminology, the root œÅ(x) of the element x. So, in
fact, œÅ is the composite:
œÅ: X
Œ≥
/ PfX
/ A.
5

There is another intuition behind W-types and M-types, which relates them
more closely to computer science. One can regard a morphism f: B
/ A as
specifying a signature: one term constructor for every a ‚ààA, having arity
Ba. The W-type is then the free term algebra inductively generated by this
signature. The M-type consists of what is, in computer science, called the
inÔ¨Ånite (or lazy) terms over this signature, coinductively generated by the
same data.
Examples of M-types 2.2
As an example of an M-type, consider the
functor T: E
/ E given by X 7‚ÜíX + 1. This functor is polynomial, as it
is Pf where f is the left inclusion inl: 1
/ 1 + 1. So the corresponding signa-
ture has one constant 0 (called zero), and one unary function symbol s (called
successor). Its associated W-type, whenever it exists, is the natural numbers
object. Intuitively, this is clear, as its elements are well-founded trees (i.e., in
this case, trees of Ô¨Ånite depth) of the form
0
0
0
,
,
s
,
. . .
s
s
The corresponding M-type contains all of these, together with the only tree
of inÔ¨Ånite depth
. . .
s
s
s,
which is called œâ or ‚àû. Its elements are called the lazy natural numbers (lnn‚Äôs),
and the idea is that each lnn is either 0 or a successor of a lnn, which is either
0 or the successor of a lnn, and this is allowed to proceed indeÔ¨Ånitely.
Another example from computer science is that of streams. The object of
streams on an object A arises as the Ô¨Ånal coalgebra of the functor TX =
A √ó X + 1, which is polynomial. Its elements are sequences of elements of
A, possibly of inÔ¨Ånite length. Those of Ô¨Ånite length form the corresponding
W-type. More examples of importance in computer science can be found in
[18] and [29].
Examples of categories with M-types 2.3
Many well-known lcccs have
all M-types. For example, there is the following result from [20]:
Theorem 2.4 Any elementary topos with a natural numbers object has M-
types.
But there are examples that are not toposes. For example, the category of
PERs has all M-types (see [5]). And so do the category of assemblies (or œâ-
sets), and the category of H-valued sets for a Heyting algebra H (see [7]). Later
6

we will call categories that are locally cartesian closed, have Ô¨Ånite disjoint
sums, a nno and M-types, Œ†M-categories. All the examples we have just given
are actually Œ†M-categories. They also possess W-types, and, actually, it is an
open problem to give a (non-syntactic) example of a category possessing M-
types, but not all W-types (syntactic categories as in [13] presumably do not
have W-types for proof-theoretic reasons).
Comonadic aspects of M-types 2.5
The category of Pf-coalgebras Pf‚àí
coalg has a forgetful functor U to the underlying category E. If this category
E has M-types, this functor U has a right adjoint R. For any object X in E,
the functor P X
f deÔ¨Åned by
P X
f (Y ) = Pf(Y ) √ó X
is polynomial, as it is determined by fX = f+!X: B + X
/ A + 1. Therefore
it has a Ô¨Ånal coalgebra RX = MfX, which is a Pf-coalgebra, since there is
a natural transformation P X
f
/ Pf. The assignment X 7‚ÜíRX is functorial
from E to Pf ‚àícoalg, for any t: X
/ Y determines a natural transformation
Pf √ó t: P X
f
/ P Y
f , and therefore a morphism Rt: RX
/ RY .
Actually, it is not hard to see that the situation is comonadic, by (the
dual of) Beck‚Äôs Theorem (see [22]). Since the polynomial functor Pf preserves
equalisers, the functor U creates them. Therefore the conditions of Beck‚Äôs
Theorem are certainly met, and we have proved:
Theorem 2.6 If E possesses all M-types, the category Pf‚àícoalg is comonadic
over E.
The situation is therefore the perfect dual to that for W-types, as explained
in [16]. In fact, this dualisation was already mentioned in [12].
Covariant character of M-types 2.7
Given a pullback diagram in E
B‚Ä≤
f‚Ä≤

Œ≤
/ B
f

A‚Ä≤
Œ±
/ A,
we can think of Œ± as a morphism of signatures, since the Ô¨Åbre over each a‚Ä≤ ‚ààA‚Ä≤
is isomorphic to the Ô¨Åbre over Œ±(a‚Ä≤) ‚ààA. It is therefore reasonable to expect,
in such a situation, an induced morphism between Mf‚Ä≤ and Mf, when these
exist.
In fact, as already pointed out in [23], such a pullback square induces a
natural transformation eŒ±: Pf‚Ä≤
/ Pf such that
œÅeŒ± = Œ±œÅ.
(1)
7

Post-composition with eŒ± turns any Pf‚Ä≤-coalgebra into one for Pf. In particular,
this happens for Mf‚Ä≤, thus inducing a unique coalgebra homomorphism as in
Mf‚Ä≤
Œ±!
/
œÑf‚Ä≤

Mf
œÑf

Pf‚Ä≤(Mf‚Ä≤)
eŒ±

Pf(Mf‚Ä≤)
Pf(Œ±!)
/ Pf(Mf).
(2)
Contravariant aspects of M-types 2.8
As also pointed in [23], any com-
muting triangle
C
œÄ
/
g
@
@
@
@
@
@
@
B
f
~~~~~~~
A
determines a natural transformation œÄ: Pf
/ Pg, and therefore a morphism
œÄ‚àó: Mf
/ Mg, satisfying the equation:
œÄ‚àó(supat) = supa(œÄ‚àó‚ó¶t ‚ó¶œÄa).
This assignment œÄ 7‚ÜíœÄ‚àóis functorial in the obvious sense.
If œÄ Ô¨Åts into an exact diagram
D
œÄ1 /
œÄ2 /
h
 @
@
@
@
@
@
@
C
g

œÄ
/ B
f
~~~~~~~~
A
in E/A, the M-type Mf can be constructed from the M-types for g and h.
For this purpose, write sup for the isomorphism PgMg
/ Mg and call S ‚äÜ
Mg √ó Mg a bisimulation, whenever supa(t) S supa‚Ä≤(t‚Ä≤) implies that
a = a‚Ä≤ and for all d ‚ààDa: tœÄ1d S tœÄ2d.
We claim that B ‚äÜMg √ó Mg, as constructed from the pullback
B

/ Mh
‚àÜ

Mg √ó Mg
œÄ‚àó
1√óœÄ‚àó
2
/ Mh √ó Mh,
is the maximal bisimulation. B is obviously a bisimulation, and, actually, the
implication we need to check for B holds in both ways. To see that B is
maximal, let S be any bisimulation. As a bisimulation, S carries the structure
of a Ph-coalgebra, in such a way that both projections to Mg are morphisms
8

of Ph-coalgebras (indeed, this is what it means to be a bisimulation):
S
p2

p1

/ PhS

Mg
sup / PgMg
œÄMg
/ PhMg.
This means that œÄ‚àó
1p1 = œÄ‚àó
2p2, and hence there is a map S
/ Mh such that
S

/ Mh
‚àÜ

Mg √ó Mg
œÄ‚àó
1√óœÄ‚àó
2
/ Mh √ó Mh,
commutes. Therefore S ‚äÜB.
As B is the maximal bisimulation, it is both symmetric and transitive. For it
is easy to see that its opposite B‚ó¶and the composite BB (as relations), are also
bisimulations. Therefore B deÔ¨Ånes an equivalence relation on {x ‚ààMg | xBx}.
When the quotient exists (e.g., if E is a pretopos), it is the M-type Mf. A
detailed veriÔ¨Åcation of this fact is left to the reader.
This result corresponds to Proposition 4.4 in [23], but one can see it is more
complicated: Mf cannot be constructed as the equaliser
Mf
œÄ‚àó/ Mg
œÄ‚àó
1
/
œÄ‚àó
2
/ Mh.
The reader might also have noticed that in the context of the covariant aspects
of M-types, we have not given a result corresponding to Proposition 4.2 in the
same source (a kind of descent theorem for W-types). Actually, we have not
been able to prove a similar result for M-types without demanding various
choice principles in the internal logic. This is clearly less than satisfactory,
and the problem of Ô¨Ånding good analogues to Proposition 4.2 for M-types
remains open.
3
Theory
In this section we develop the theory on which the applications in later sections
will rely. First, we show that there is an interesting class of functors on a
locally cartesian closed category E with Ô¨Ånite disjoint coproducts, that has
Ô¨Ånal coalgebras, when all M-types exists in E. Then we present two related
applications of this fact. In the second part of this section, we derive sharper
statements under the assumption that E possesses a natural numbers object.
This part relies on the possibility of formalising the notion of path in the
internal language of E.
9

Consider a not necessarily commuting triangle
B
Œ≤
?
?
?
?
?
?
?
?
f
/ A
Œ±
       I
in E. Since E is a lccc, one can deÔ¨Åne the dependent polynomial functor
Df: E/I
/ E/I
associated to the diagram, as follows:
Df = Œ£Œ±Œ†fŒ≤‚àó.
In terms of the internal language of E:
Df(Xi | i ‚ààI) = (Œ£a‚ààAiŒ†b‚ààBaXŒ≤b | i ‚ààI).
In [16], the authors shows that the existence of all W-types implies the ex-
istence of initial algebras for all dependent polynomial functors. The corre-
sponding result for M-types is also correct, as we will show:
Theorem 3.1 If E has all M-types, all dependent polynomial functors have
Ô¨Ånal coalgebras.
Proof. The Ô¨Ånal coalgebra E for Df is obtained as an equaliser
E
e
/ Mf
m
/
n
/ Mf√óI.
One morphism, m, derives from the covariant properties of M-types: as f and
f √ó I Ô¨Åt into a pullback square
B
‚ü®id,Œ±f‚ü©
/
f

B √ó I
f√óI

A
‚ü®id,Œ±‚ü©
/ A √ó I,
there is a morphism ‚ü®A, Œ±‚ü©!: Mf
/ Mf√óI, which is m. DeÔ¨Åning n is more
complicated. First observe that Mf √ó I has the structure of a Pf√óI-coalgebra,
by the following rule:
(supa(t), i) 7‚Üí((a, i), ‚ü®t, Œ≤‚ü©).
Therefore there is a morphism of Pf√óI-coalgebras n‚Ä≤: Mf √ó I
/ Mf√óI, which,
when precomposed with ‚ü®id, Œ±œÅ‚ü©: Mf
/ Mf √ó I, yields n.
E is to be regarded as an object in E/I by composing e with Œ±œÅ (call the com-
posite œµ). To show that it is a Df-coalgebra, we have to prove that supa(t) ‚ààE
10

and b ‚ààBa imply tb ‚ààE and œµ(tb) = Œ≤(b). To prove this, we need to show
Ô¨Årst that the hypothesis implies that Œ±œÅtb = Œ≤b. This can be seen to be
correct, for supa(t) ‚ààE means that m(supa(t)) = n(supa(t)) and therefore
m(tb) = n‚Ä≤(tb, Œ≤b). Following both these values along
Mf√óI
/ Pf√óI(Mf√óI)
œÅ
/ A √ó I
p2
/ I,
we obtain the desired equality Œ±œÅtb = Œ≤b. Now it is easy to see that m(tb) =
n(tb), for
n(tb) = n‚Ä≤(tb, Œ±œÅtb) = n‚Ä≤(tb, Œ≤b) = m(tb),
and that œµ(tb) = Œ±œÅtb = Œ≤b.
Therefore E carries the structure of a Df-coalgebra. We leave the veriÔ¨Åcation
that is the Ô¨Ånal such to the reader.
2
We now present two applications of this result. The Ô¨Årst is the stability of
categories with M-types under slicing.
Proposition 3.2 If E has M-types, so does every slice E/I. Moreover, M-
types are stable under reindexing, in the sense that for any x: J
/ I, the
pullback functor x‚àó: E/I
/ E/J preserves M-types (so, x‚àóMf ‚àº= Mx‚àóf for any
f in E/I).
Proof. If I is an object in E and f: B
/ A a morphism over I, the dependent
polynomial functor associated to
B
Œ≤
?
?
?
?
?
?
?
?
f
/ A
Œ±
       I
is precisely the polynomial functor associated to f in E/I, and therefore has
a Ô¨Ånal coalgebra.
To prove stability of M-types under reindexing, we use that polynomial func-
tors are indexed, in the sense that x‚àóPf ‚àº= Px‚àófx‚àó. Therefore there is a functor
x‚àó: Pf ‚àícoalg
/ Px‚àóf ‚àícoalg, Ô¨Ålling the square:
Px‚àóf ‚àícoalg

Pf ‚àícoalg
x‚àó
o

E/J
E/I.
x‚àó
o
But x‚àó: E/I
/ E/J has a left adjoint Œ£x, which can be seen to extend to
the level of coalgebras, where any Px‚àóf-coalgebra Y
/ Px‚àófY is sent to the
transpose of:
Y
/ Px‚àófY
/ Px‚àófx‚àóŒ£xY ‚àº= x‚àóPfŒ£xY.
11

Therefore x‚àó: Pf ‚àícoalg
/ Px‚àóf ‚àícoalg is a right adjoint, and preserves the
terminal object, which means that x‚àóMf ‚àº= Mx‚àóf.
2
To present the second application of Theorem 3.1, which will be of considerable
importance later on, we Ô¨Årst introduce the notion of a partial Pf-coalgebra: a
Pf-coalgebra whose structure map is only partially deÔ¨Åned. More precisely, it
is a structure as follows
Y
D
Œ≥
/
o
i
o
PfY,
where i is monic in E. A morphism between such structures (Œ≥, i) and (Œ¥, j)
consists of a pair (œÜ, œà) such that the following diagram commutes:
Y
œà

D
œÜ

o
i
o
Œ≥
/ PfY
Pfœà

X
E
Œ¥
/
o
j
o
PfX.
So partial Pf-coalgebras form a category Pf ‚àípcoalg. Of course, there is an
obvious inclusion functor I: Pf ‚àícoalg
/ Pf ‚àípcoalg which sends a ‚Äútotal‚Äù
Pf-coalgebra Œ≥: Y
/ PfY to the partial Pf-coalgebra (Œ≥, id).
Proposition 3.3 If E has M-types, the inclusion functor
I: Pf ‚àícoalg
/ Pf ‚àípcoalg
has a right adjoint Coh.
Proof. Given a partial Pf-coalgebra
Y
E
Œ≥
/
o
i
o
PfY,
the idea is to build the maximal X ‚äÜY such that
(1) X ‚äÜE, and
(2) whenever Œ≥(x) = (a, t) for some x ‚ààX, tb ‚ààX for all b ‚ààBa.
Call a subobject X ‚äÜY with these properties coinductive. The right adjoint
Coh(Œ≥, i) will be the maximal coinductive subobject of Y , which can be con-
structed as a Ô¨Ånal coalgebra for a dependent polynomial functor.
Consider the diagram
F
p1 /
p2

PfY √óA B

ev
/ Y
Y
E
Œ≥
/
i
o
PfY
where the square is a pullback. This yields a dependent polynomial functor
D: E/Y
/ E/Y deÔ¨Åned as:
D = Œ£iŒ†p2(evp1)‚àó,
12

or in terms of the internal language of E as:
D(Xy | y ‚ààY ) = (
X
e‚ààEy
Y
Œ≥(e)=(a,t),
b‚ààBa
Xtb | y ‚ààY ).
Call its Ô¨Ånal coalgebra œÄ: P
/ Y . A typical element p of P is p = supmœÜ,
with m ‚ààE and œÜ: Ba
/ P, such that Œ≥(m) = (a, t). Therefore P is certainly
a Pf-coalgebra. For such a p, œÄp = m and œÄœÜ = t.
It would now not be diÔ¨Écult to show that this Pf-coalgebra P is the value on
(Œ≥, i) for the right adjoint to the inclusion functor I. Instead, let us show that
our initial idea was correct: that P indeed deÔ¨Ånes the maximal coinductive
subobject of Y . Our Ô¨Årst concern is therefore to show that P is a subobject of
Y , i.e. that œÄ is monic. For this purpose, we deÔ¨Åne a D-coalgebra structure on
P √óY P. This can be done, by mapping a pair (p = supm(œÜ), p‚Ä≤ = supm‚Ä≤(œÜ‚Ä≤))
such that œÄp = œÄp‚Ä≤, i.e. m = m‚Ä≤, to (m, ‚ü®œÜ, œÜ‚Ä≤‚ü©) ‚ààDP √óY P. As both pro-
jection P √óY P
/ P are D-coalgebra morphisms, œÄ must be monic. That is
coinductive is trivial, and the fact that it is the biggest such, follows from
Ô¨Ånality of P.
2
The results that we have obtained so far are Ô¨Åne as they are, but can be
formulated more sharply in presence of a natural numbers object. We will
now explore the precise details. So, from now on, our category E will be locally
cartesian closed, have Ô¨Ånite disjoint coproducts, and possess a natural numbers
object.
The key technical ingredient of these reÔ¨Ånements is the notion of path. The
reader who is familiar with the mathematics of trees will probably not Ô¨Ånd this
surprising [11]. Our reason for introducing the notion of path is that it allows
us to identify properties of trees in a constructive way. Making an essential
use of the internal logic of a locally cartesian closed category with Ô¨Ånite sums
and a natural numbers object N, this notion can deÔ¨Åned, not just for the W-
and M-types, but for any partial Pf-coalgebra.
Assume we are given a partial Pf-coalgebra
X
D
Œ≥
/
o
i
o
PfX.
A Ô¨Ånite sequence of odd length ‚ü®x0, b0, x1, b1, . . . , xn‚ü©is called a path in (Œ≥, i),
if every xk is in X, every bk is in B, and for every k < n we have
(1) xk ‚ààD, and
(2) whenever Œ≥(xk) = (ak, tk), then bk ‚ààBak and tbk = xk+1.
For an ordinary Pf-coalgebra, the Ô¨Årst condition is of course vacuous. In the
particular case when X is the Ô¨Ånal coalgebra Mf, a path ‚ü®m0, b0, . . . , mn‚ü©in
this sense coincides precisely with a path in the usual sense in the non-well-
founded tree m0. We will therefore say that such a path lies in m0, and by
13

extension, a path ‚ü®x0, b0, . . . , xn‚ü©lies in x0 ‚ààX for any partial coalgebra (Œ≥, i).
All paths in a coalgebra (Œ≥, i) are collected in the subobject
Paths(Œ≥, i) /
/ (X + B + 1)N.
More details on the formalisation of the notion of path, can be found in [6].
Any morphism of partial coalgebras (œÜ, œà): (Œ≥, i)
/ (Œ¥, j)
X
œà

D
œÜ

o
i
o
Œ≥
/ PfX
Pfœà

Y
E
Œ¥
/
o
j
o
PfY.
induces a morphism
(œÜ, œà)‚àó: Paths(Œ≥, i)
/ Paths(Œ¥, j)
(3)
between the objects of paths in the respective partial coalgebras. A path
‚ü®x0, b0, . . . , xn‚ü©is sent by (œÜ, œà)‚àóto ‚ü®Œ±(x0), b0, . . . , Œ±(xn)‚ü©. Furthermore, given
a path œÑ = ‚ü®y0, b0, . . . , yn‚ü©in Y and an x0 such that œà(x0) = y0, there is a
unique path œÉ starting with x0 such that (œÜ, œà)‚àó(œÉ) = œÑ. (Proof: deÔ¨Åne xk+1
inductively for every k < n using the second condition in the deÔ¨Ånition of a
path, and put œÉ = ‚ü®x0, b0, . . . , xn‚ü©.)
The language of paths allows us Ô¨Årst of all to reÔ¨Åne Theorem 3.1:
Theorem 3.4 If the M-type associated to f exists, then Df has a Ô¨Ånal coal-
gebra.
Proof. In the language of the (proof of) Theorem 3.1: we need to show that
E can be identiÔ¨Åed not only as an equaliser, but also using the language of
paths. We will only show how this can be done, and leave the veriÔ¨Åcations to
the reader. The idea is that E ‚äÜMf consists of those m ‚ààMf such that any
path lying in m, say ‚ü®m0, b0, . . . , mn‚ü©, satisÔ¨Åes the equation Œ±œÅ(mn) = Œ≤(bn).
2
Moreover, its two applications, Proposition 3.2 and Proposition 3.3, respec-
tively, can be formulated more sharply:
Proposition 3.5 Suppose f is a morphism in E/I. If the M-type for Œ£If
exists in E, then the M-type for f exists in E/I.
Proposition 3.6 The inclusion functor
I: Pf ‚àícoalg
/ Pf ‚àípcoalg
has a right adjoint Coh.
14

Proof. Here we need to show how to deÔ¨Åne the maximal coinductive subobject
Coh(Œ≥, i) ‚äÜX of a partial coalgebra
X
D
Œ≥
/
o
i
o
PfX
(in the language of Proposition 3.3). For this purpose, call an element x ‚ààX
coherent, when every path x = ‚ü®x0, b0, x1, b1, . . . , xn‚ü©lying in x, has the prop-
erty that xn ‚ààD. These coherent elements together form the object Coh(Œ≥, i),
which is the right adjoint deÔ¨Åned on (Œ≥, i).
2
A particular example of this last result (Proposition 3.6) is worth treating
in more detail. A particular subcategory of partial coalgebras arises when we
have another endofunctor F on E and an injective natural transformation
m: Pf /
/F . In this case, any F-coalgebra œá: Y
/ FY can easily be turned
into the partial Pf-coalgebra by pullback:
E
Œ≥
/

i

PfY

mY

Y
œá
/ FY.
This determines a functor c
m: F ‚àícoalg
/ Pf ‚àípcoalg, which is clearly faith-
ful.
Proposition 3.7 The adjunction I ‚ä£Coh of Proposition 3.3 restricts to an
adjunction m‚àó‚ä£Coh c
m, where m‚àó: Pf ‚àícoalg
/ F ‚àícoalg takes œá: X
/ PfX
to (X, mXœá).
Proof. Consider a Pf-coalgebra (Z, Œ≥) and an F-coalgebra (X, œá). Then, a
simple diagram chase, using the naturality of m, shows that F-coalgebra mor-
phisms from m‚àó(Z, Œ≥) to (X, œá) correspond bijectively to morphisms of partial
coalgebras from I(Z, Œ≥) to c
m(X, œá), hence to Pf-coalgebra homomorphisms
from (Z, Œ≥) to Coh(c
m(X, œá)), by Proposition 3.3.
2
Another application of Proposition 3.6, whose relevance will become apparent
soon, is the following:
Proposition 3.8 Any preÔ¨Åxpoint Œ±: PfX
/ X has a subalgebra that is a
Ô¨Åxpoint.
Proof. Any preÔ¨Åxpoint Œ±: PfX
/ X can be seen as a partial Pf-coalgebra,
as follows:
X
D = PfX
id
/
o
Œ±
o
PfX.
Its coreÔ¨Çection Coh(id, Œ±), as deÔ¨Åned in Proposition 3.6, is a Pf-coalgebra
15

Œ≥: Y
/ PfY (in fact, the largest) Ô¨Åtting in the following commutative square:
Y /
i
/
Œ≥

X
PfY /
Pfi / PfX.
O
Œ±
O
We need to show that Œ≥ has an inverse. For this, consider the image under
I: Pf ‚àícoalg
/ Pf ‚àípcoalg of the coalgebra Pf(Œ≥): PfY
/ P 2
f Y . The mor-
phism of partial coalgebras
PfY
Œ±Pfi

PfY
id
o
PfŒ≥ /
Pfi

P 2
f Y
PfŒ±P 2
f i

X
PfX
id
/
o
Œ±
o
PfX
transposes through the adjunction I ‚ä£Coh to a morphism
œÜ: (PfY, PfŒ≥)
/ (Y, Œ≥),
which is a right inverse of Œ≥: (Y, Œ≥)
/ (PfY, PfŒ≥) by the universal property of
(Y, Œ≥). Hence, we have Œ≥œÜ = Pf(œÜŒ≥) = id, proving that Œ≥ and œÜ are mutually
inverse.
2
4
Applications
In this section, we show the power of our techniques by sharpening results
from [1] and [27], respectively.
By Lambek‚Äôs lemma, M-types are a particular kind of Ô¨Åxpoints for polynomial
functors. Clearly, not every Ô¨Åxpoint is an M-type, but what turns out to be
correct is that the existence of a Ô¨Åxpoint for a polynomial functor implies the
existence of its corresponding M-type. This fact will make it far easier to show
preservation of M-types in the next section (closure under coalgebras for a
cartesian comonad and under sheaves). The Ô¨Årst part of this section will be
devoted to its proof.
The idea behind the proof is in fact well-known. Assume the signature for
which we try to show the existence of an M-type has a speciÔ¨Åed constant. In
our context, this means that the map f: B
/ A is pointed, i.e. there exists a
global element ‚ä•: 1
/ A such that the following is a pullback:
0
/

B
f

1
‚ä•/ A.
16

For such a signature, one can recover the non-well-founded trees from the well-
founded ones: for the constant allows for the deÔ¨Ånition of truncation functions,
which cut a tree at a certain depth and replace all the term constructors at
that level by that speciÔ¨Åed constant. The way to recover non-well-founded
trees is then to consider sequences of trees (tn)n>0 such that each tn is the
truncation at depth n of tm for all m > n. Each such sequence is viewed as
the sequence of approximations of a given tree. This is a familiar construction,
but what seems to be less familiar is the observation is that this construction
works starting from any Pf-Ô¨Åxpoint.
Lemma 4.1 If for some pointed f in E, Pf has a Ô¨Åxpoint, then it also has a
Ô¨Ånal coalgebra.
Proof. Assume X is an algebra whose structure map sup: PfX
/ X is an
isomorphism. Observe, Ô¨Årst of all, that X has a global element
‚ä•: 1
/ X,
(4)
namely sup‚ä•(t), where ‚ä•is the point of f and t is the unique map B‚ä•=
0
/ X.
DeÔ¨Åne, by induction, the following truncation functions trn: X
/ X:
tr0 = ‚ä•‚ó¶X: X
/ 1
/ X
trn+1 = sup ‚ó¶Pf(trn) ‚ó¶sup‚àí1: X
/ PfX
/ PfX
/ X
Using these maps, we can deÔ¨Åne an object M, consisting of sequences (Œ±n ‚àà
X)n>0 with the property:
Œ±n = trn(Œ±m) for all n < m.
Now, we deÔ¨Åne a morphism œÑ: M
/ PfM as follows. Given a sequence Œ± =
(Œ±n) ‚ààM, observe that œÅ(Œ±n) is independent of n and is some element a ‚ààA.
Hence, each Œ±n is of the form supa(tn) for some tn: Ba
/ X, and we deÔ¨Åne
t: Ba
/ M by putting t(b)n = tn+1(b) for every b ‚ààBa; then œÑ(Œ±) = (a, t).
Thus, M has the structure of a Pf-coalgebra, and we claim it is the terminal
one.
To show this, given another coalgebra œá: Y
/ PfY , we wish to deÔ¨Åne a map of
coalgebras bp: Y
/ M. This means deÔ¨Åning maps bpn: Y
/ X for every n > 0,
with the property that bpn = trn bpm for all n < m. Intuitively, bpn maps a state
of Y to its ‚Äúunfolding up to level n‚Äù, which we can mimic in X. Formally, they
are deÔ¨Åned inductively by
bp0 = ‚ä•
bpn+1 = sup ‚ó¶Pf(bpn) ‚ó¶œá.
17

It is now easy to show, by induction on n, that bpn = trn bpm for all m > n. For
n = 0, both sides of the equation become the constant map ‚ä•. Supposing the
equation holds for a Ô¨Åxed n and any m > n, then for n + 1 and any m > n we
have bpn+1 = sup Pf(bpn)œá = sup Pf(trn bpm)œá = sup Pf(trn) sup‚àí1 sup Pf(bpm)œá =
trn+1 bpm+1.
We leave to the reader the veriÔ¨Åcation that bp is the unique Pf-coalgebra mor-
phism from X to M.
2
Theorem 4.2 If (pre)Ô¨Åxpoints exist in E for all Pf (with f pointed), then E
has M-types.
Proof. Let f: B
/ A be a map. We freely add a point to the signature
represented by f, by considering the composite
f‚ä•: B
f
/ A /
i
/ A + 1
(5)
(with the point j = ‚ä•: 1
/ A + 1). Notice that the obvious pullback
B
id
/
f

B
f‚ä•

A /
i
/ A + 1
determines, by the covariant character of M-types explained in Section 2, a
(monic) natural transformation i!: Pf
/ Pf‚ä•; hence, by Proposition 3.7, the
functor (i!)‚àó: Pf ‚àícoalg
/ Pf‚ä•‚àícoalg has a right adjoint. Now observe that
Pf‚ä•has a preÔ¨Åxpoint, by assumption, so a Ô¨Åxpoint by Proposition 3.8, hence
a Ô¨Ånal coalgebra by Lemma 4.1. This will be preserved by the right adjoint of
(i!)‚àó, hence Pf has a Ô¨Ånal coalgebra.
2
This proof gives a categorical counterpart of the standard set-theoretic con-
struction: add a dummy constant to the signature, build inÔ¨Ånite trees by
sequences of approximations, then select the actual M-type by taking those
inÔ¨Ånite trees which involve only term constructors from the original signature.
This last passage is performed by the coreÔ¨Çection functor of Proposition 3.7,
since coherent ones are trees with no occurrence of ‚ä•at any point.
From this last theorem, we readily deduce the following result, Ô¨Årst pointed
out to us by Abbott, Altenkirch and Ghani [1].
Corollary 4.3 If E has W-types, then it has M-types.
Proof. When E has W-types, it has a natural numbers object, namely the
W-type associated to the left inclusion inl: 1
/ 1 + 1. Since the W-type asso-
ciated to a (pointed) map f is a Ô¨Åxpoint for Pf, E also has all M-types by the
previous theorem.
2
18

The following existence result is also to be compared with the literature.
In [27], Santocanale proves the existence of M-types for maps of the form
f: B
/ A where A is a Ô¨Ånite sum of copies of 1. Notice that such an object
A has decidable equality, i.e. the diagonal ‚àÜ: A
/ A √ó A has a complement
in the subobject lattice of A √ó A. We extend the statement above to all maps
whose codomain has decidable equality.
Proposition 4.4 Let E be a lccc with Ô¨Ånite disjoint coproducts and a nno,
and let f: B
/ A be a morphism in E. If A has decidable equality, then the
M-type for f exists.
Proof. Without loss of generality, we may assume that f is pointed; in fact, if
we replace A by A‚ä•= A+1 and f by f‚ä•as in (5), then A‚ä•also has decidable
equality, and the existence of an M-type for the composite f‚ä•implies that of
an M-type for f (see the proof of Theorem 4.2). Then, by Proposition 3.8 and
Lemma 4.1, it is enough to show that Pf has a preÔ¨Åxpoint.
Let S be the object of all Ô¨Ånite sequences of the form
‚ü®a0, b0, a1, b1, . . . , an‚ü©
where f(bi) = ai for all i < n. (Like paths in a coalgebra, this object S can
be constructed using the internal logic of E.) Now, let V be the object of all
decidable subobjects of S (these can be considered as functions S
/ 1 + 1).
DeÔ¨Åne the map m: PfV
/ V taking a pair (a, t: Ba
/ V ) to the subobject
P of S deÔ¨Åned by the following clauses:
(1) ‚ü®a0‚ü©‚ààP iÔ¨Äa0 = a.
(2) ‚ü®a0, b0‚ü©‚àóœÉ ‚ààP iÔ¨Äa0 = a and œÉ ‚ààt(b0).
(Here, ‚àóis the symbol for concatenation.) P is obviously decidable, so m is
well-deÔ¨Åned. To see that it is monic, suppose P = m(a, t) and P ‚Ä≤ = m(a‚Ä≤, t‚Ä≤)
are equal. Then,
‚ü®a‚ü©‚ààP =‚áí‚ü®a‚ü©‚ààP ‚Ä≤ =‚áía = a‚Ä≤,
and, for every b ‚ààBa and œÉ ‚ààS,
œÉ ‚ààt(b) ‚áê‚áí‚ü®a, b‚ü©‚àóœÉ ‚ààP
‚áê‚áí‚ü®a, b‚ü©‚àóœÉ ‚ààP ‚Ä≤
‚áê‚áíœÉ ‚ààt‚Ä≤(b),
so t = t‚Ä≤ and m is monic. Hence, (V, m) is a preÔ¨Åxpoint for Pf and we are
Ô¨Ånished.
2
Remark 4.5 In the previous proof, to obtain the M-type for f from V , one
should Ô¨Årst deduce a Ô¨Åxpoint V ‚Ä≤ from it, as in Proposition 3.8. This means
selecting the coherent elements of V , and these turn out to be those decidable
subobjects P of S satisfying the following properties:
19

(1) ‚ü®a‚ü©‚ààP for a unique a ‚ààA;
(2) if ‚ü®a0, b0, . . . , an‚ü©‚ààP, then there exists for any bn ‚ààBan a unique an+1
such that ‚ü®a0, b0, . . . , an, bn, an+1‚ü©‚ààP.
Now, we should turn this Ô¨Åxpoint into the M-type for f (as in Lemma 4.1),
but this step is redundant, since our choice of V is such that V ‚Ä≤ already is the
desired M-type.
It is an interesting question whether this result can be generalised even further.
However, it is our feeling that not all M-types can be proved to exist in general.
Unfortunately, many of the well-known lcccs have W-types as well, so these
do not provide counterexamples.
5
Closure properties
In this Ô¨Ånal section, we will study the stability of categories with M-types
under various categorical operations familiar from topos theory, like coalgebras
for a cartesian comonad and internal sheaves. For convenience, call a category
E which is locally cartesian closed, has Ô¨Ånite disjoint coproducts, a natural
numbers object and all M-types, a Œ†M-category. Recall that we have shown
that Œ†M-categories are closed under slicing (in Proposition 3.2).
5.1
M-types and coalgebras
Here, we turn our attention to the construction of categories of coalgebras for
a cartesian comonad (G, œµ, Œ¥). See, for example, [22, Chapter VI], for the deÔ¨Å-
nition of a comonad and a coalgebra for a comonad. By a cartesian comonad,
we mean here that the functor G preserves Ô¨Ånite limits (following [19]).
Theorem 5.1 If E is a locally cartesian closed category with Ô¨Ånite disjoint
sums and a natural numbers object, then so is EG for a cartesian comonad
G = (G, œµ, Œ¥) on E.
Proof. Theorem 4.2.1 on page 173 of [19] gives us that EG is cartesian, in fact
locally cartesian closed, and that it has a natural numbers object. It also has
Ô¨Ånite disjoint sums, since the forgetful functor U: EG
/ E creates colimits. 2
The aim of this subsection is to prove that EG inherits M-types from E, in case
they exist in that category. Given a morphism f of coalgebras, this induces
a polynomial functor Pf: EG
/ EG, while its underlying map Uf determines
the endofunctor PUf on E. The two are related as follows:
Proposition 5.2 Let f: (B, Œ≤)
/ (A, Œ±) be a map of G-coalgebras. Then,
20

there is an injective natural transformation
E
i‚Ü£
G

PUf
/ E
G

EG
Pf
/ EG.
Proof. Recall from [19] that there is the following natural isomorphism
EG/(A, Œ±) ‚àº= (E/A)G‚Ä≤,
(6)
where G‚Ä≤ is a cartesian comonad on E/A, which is computed on an object
t: X
/ A in E/A by taking the following pullback:
G‚Ä≤X
G‚Ä≤t

/
/ GX
Gt

A /
Œ±
/ GA.
(7)
Notice that both horizontal arrows in this pullback are monic, because œµA is
a retraction of the G-coalgebra Œ±.
Through the isomorphism (6), the object A√óGX
/ A corresponds to G‚Ä≤(p1: A√ó
X ‚ÜíA), whereas f corresponds to some map f ‚Ä≤ in (E/A)G‚Ä≤. Therefore the ob-
ject Pf(GX) (i.e. the source of the exponential (A√óGX
/ A)f in the category
EG/(A, Œ±)) corresponds to the exponential (G‚Ä≤p1)f‚Ä≤. Since U ‚Ä≤: (E/A)G‚Ä≤
/ E/A
preserves products because G‚Ä≤ does, there is the following chain of natural
bijections:
Y
/ G‚Ä≤(pU‚Ä≤f‚Ä≤
1
)
U ‚Ä≤Y
/ pU‚Ä≤f‚Ä≤
1
U ‚Ä≤Y √ó U ‚Ä≤f ‚Ä≤
/ p1
U ‚Ä≤(Y √ó f ‚Ä≤)
/ p1
Y √ó f ‚Ä≤
/ (G‚Ä≤p1)
Y
/ (G‚Ä≤p1)f‚Ä≤.
So one deduces (G‚Ä≤p1)f‚Ä≤ ‚àº= G‚Ä≤(pU‚Ä≤f‚Ä≤
1
) = G‚Ä≤(pUf
1 ). The latter Ô¨Åts in the following
pullback square, which is an instance of (7):
G‚Ä≤((A √ó X ‚ÜíA)Uf)

/ iX
/ G((A √ó X ‚ÜíA)Uf)

A /
Œ±
/ GA.
Now notice that the top right entry of the diagram is exactly GPUf(X), hence
the map i therein deÔ¨Ånes the X-th component of a natural transformation of
the desired form.
2
21

Theorem 5.3 Let f: (B, Œ≤)
/ (A, Œ±) be a map of G-coalgebras. If the un-
derlying map Uf has an M-type in E, then f has an M-type in EG.
Proof. The natural transformation i of Proposition 5.2 allows one to turn
any PUf-coalgebra into a partial Pf-coalgebra. In particular, for the M-type
œÑ: M = MUf
/ PUfM in E, we obtain by pullback the partial Pf-coalgebra
E
Œ±

/
t
/ GM
GœÑ

PfGM /
iM
/ GPUfM,
whose coreÔ¨Çection C = Coh(Œ±, t), we claim, is Ô¨Ånal in Pf ‚àícoalg. To see this,
consider another coalgebra (X, Œ≥). To give a morphism of Pf-coalgebras from
(X, Œ≥) to C is the same, through I ‚ä£Coh, as giving a map IX
/ (Œ≥, t) in EG
which is a morphism of partial Pf-coalgebras, which amounts to a morphism
œà: X
/ GM that makes the following commute:
X
Œ≥
/
œà

PfX
Pfœà

GM
GœÑ / GPUfM
PfGM.
o
iM
o
This transposes, through U ‚ä£G, to the following diagram in E
UX
UŒ≥ /
b
œà

UPfX
jX / PUfUX
PUf b
œà

M
œÑ
/ PUfM.
(Here
j: UPf
/ PUfU: EG
/ E
is the mate of i, as deÔ¨Åned in Proposition 5.2, under the adjunction U ‚ä£G.)
But Ô¨Ånality of M implies that there is precisely one such bœà for any coalgebra
(X, Œ≥), hence Ô¨Ånality is proved.
2
Corollary 5.4 If E is a Œ†M-category and G = (G, œµ, Œ¥) is a cartesian comonad
on E, then the category EG of (Eilenberg-Moore) coalgebras for G is again a
Œ†M-category.
Remark 5.5 Notice that Corollary 5.4 could also be deduced by Theorem
4.2, in conjunction with Proposition 5.2. However, as the proof of Theorem
5.3 shows, one does not need to perform the whole construction, since the
coreÔ¨Çection step gives directly the Ô¨Ånal coalgebra.
Remark 5.6 In particular, this result shows stability of Œ†M-categories under
the glueing construction, since this is a special case of taking coalgebras for a
cartesian comonad (see [19]).
22

5.2
M-types and presheaves
Now, we concern ourselves with the formation of presheaves for an internal
category in a Œ†M-category. Our aim is to show that the result is again a
Œ†M-category.
So consider an internal category C in a Œ†M-category E, with object of objects
C0. By using the fact that the category of presheaves Psh(C) is the category of
coalgebras for a cartesian comonad on the slice category E/C0 (see for instance
[19], Example A.4.2.4 (b)), one gets at once
Proposition 5.7 The presheaf category Psh(C) is a Œ†M-category.
Unwinding the proof, it is possible to give a concrete description of the M-type
in presheaf categories, along the lines of the description of W-types in [24].
We will just give the description and leave the veriÔ¨Åcations to the reader.
First of all, we need to introduce the functor | ¬∑ |: Psh(C)
/ E which takes a
presheaf A to its ‚Äúunderlying set‚Äù |A| = {(a, C) | a ‚ààA(C)}. This is just the
composite of the forgetful functor U: Psh(C)
/ E/C0 with Œ£C0: E/C0
/ E.
Let f: B
/ A be a morphism of presheaves. Then, the ‚ÄúÔ¨Åbre‚Äù Ba of f over
a ‚ààA(C) for an object C in C is a presheaf, whose value on D is described in
the internal language of E as
Ba(D) = {(Œ≤, b) | Œ≤: D
/ C, a ¬∑ Œ≤ = f(b)}
and restriction along a morphism Œ¥: D‚Ä≤
/ D is deÔ¨Åned as
(Œ≤, b) ¬∑ Œ¥ = (Œ≤Œ¥, b ¬∑ Œ¥).
Now the presheaf morphism f also induces a map
f ‚Ä≤: Œ£(a,C)‚àà|A||Ba|
/ |A|
whose Ô¨Åbre over (a, C) is precisely |Ba|. Consider the M-type Mf‚Ä≤ in E: the
M-type M for f in presheaves will be built by selecting the right elements
from this M-type.
Elements T ‚ààMf‚Ä≤ are of the form
T = sup(a,C)t,
where (a, C) ‚àà|A| and t: Ba
/ Mf‚Ä≤. Mf‚Ä≤ can be considered as an object in
E/C0, when one maps such a T to C, so write N(C) for the Ô¨Åbre over C ‚ààC0.
N actually possesses the structure of a presheaf, because for any T ‚ààN(C)
and Œ±: C‚Ä≤
/ C,
T ¬∑ Œ± = supa‚Ä≤,C‚Ä≤teŒ±,
where a‚Ä≤ = a ¬∑ Œ± and eŒ± is the obvious morphism |Ba‚Ä≤|
/ |Ba|, deÔ¨Åned by
sending (Œ≤, b) to (Œ±Œ≤, b).
23

Out of this presheaf N, one has to select the coherent elements (the trees called
natural in [23]). Call a tree S composable, when all subtrees T = sup(a,C)t of
S satisfy
t(Œ≤, b) ‚ààN(dom(Œ≤)).
Call S coherent or natural, when all subtrees T = sup(a,C)t of S in addition
satisfy that
t(Œ≤, b) ¬∑ Œ≥ = t(Œ≤Œ≥, b ¬∑ Œ≥).
These notions can be deÔ¨Åned using the language of paths: for a tree T is a
subtree of a tree S, when there is a path in the tree S ending with the tree
T. Let M be the subobject of N consisting of the coherent elements. It is a
presheaf, and, as the reader can verify, the M-type for f in presheaves. So, in
eÔ¨Äect, we have proved:
Theorem 5.8 Consider a map f: B
/ A in Psh(C). If the induced map f ‚Ä≤
has an M-type in E, then f has an M-type in Psh(C).
5.3
M-types and sheaves
In this subsection, we wish to show that Œ†M-categories are closed under taking
internal sheaves. We approach this question in the following manner: we show
that Œ†M-categories are closed under reÔ¨Çective subcategories with cartesian
reÔ¨Çector. It is well-known that in topos theory categories of sheaves are such
subcategories of the category of presheaves. Within a predicative metatheory,
the construction of a sheaÔ¨ÅÔ¨Åcation functor, a cartesian left adjoint for the
inclusion of sheaves in presheaves, runs into some problems. Solutions have
been proposed in [24] and [8]. Such issues are beyond the scope of this pa-
per and we will simply assume that this problem can be solved. Then closure
of Œ†M-categories under sheaves follows from closure under reÔ¨Çective subcate-
gories, because we have just shown that Œ†M-categories are closed under taking
presheaves for an internal site.
On cartesian reÔ¨Çectors and the universal closure operators they induce, the
reader could consult [19], Sections A4.3 and A4.4. Very brieÔ¨Çy, the story is
like this. A category D is a reÔ¨Çective subcategory of a cartesian category E,
when the inclusion functor i: D
/ E has a left adjoint L such that Li ‚àº= 1.
Now the inclusion is automatically full and faithful.
When the reÔ¨Çector L is cartesian, as we will always assume, it induces an oper-
ator on the subobject lattice of any object X. The operator takes a subobject
m: X‚Ä≤ /
/ X
24

to the left side of the pullback square
c(X‚Ä≤)


/ iLX‚Ä≤

iLm

X
Œ∑X / iLX.
This operation is order-preserving, idempotent (c(c(X‚Ä≤)) = c(X‚Ä≤)), inÔ¨Çation-
ary (X‚Ä≤ ‚â§c(X‚Ä≤)) and commutes with pullback along arbitrary morphisms.
Such operators are called universal closure operators. In topos theory, every
universal closure operator derives from a cartesian reÔ¨Çector, but in the context
of Œ†M-categories that is probably not the case.
The objects in E that come from D can be characterised in terms of the closure
operator c as follows. Call a mono
m: X‚Ä≤ /
/ X
dense, when its closure c(X‚Ä≤) is the maximal object X ‚äÜX. An object Y in
E is from D in case any triangle
X‚Ä≤
f‚Ä≤
/

m

Y
X
f
>
with m a dense mono, can be Ô¨Ålled uniquely by a map f. These objects are,
not accidentally, called the sheaves for the closure operator c.
In the aforementioned sections from [19], one can Ô¨Ånd a proof of the fact
that D is a locally cartesian closed category, and that the inclusion i: D
/ E
preserves this structure. That D has Ô¨Ånite disjoint sums and a natural numbers
object, is clear, because these can be computed in E followed by applying the
reÔ¨Çector L. For our purposes, it is therefore suÔ¨Écient to show:
Theorem 5.9 Let f: B
/ A be a morphism in E. When f is a morphism of
sheaves, Mf is a sheaf.
Proof. Let M = Mf be the M-type in E associated to f, and obtain the
sheaf LM by applying the reÔ¨Çector to M. The object Pf(LM) is also a sheaf,
because the inclusion preserves the lccc structure. Because of the universal
property of L the diagram
M
Œ∑M
/
œÑ

iLM

Pf(M)
Pf(Œ∑M)
/ Pf(iLM) ‚àº= iPf(LM)
can be Ô¨Ålled. Therefore iLM has the structure of Pf-coalgebra in such a way
that Œ∑M is a Pf-coalgebra morphism. By Ô¨Ånality of M, there is a Pf-coalgebra
25

morphism r: iLM
/ M such that rŒ∑M = 1. So Œ∑MrŒ∑M = Œ∑M = 1Œ∑M and the
universal property of Œ∑M immediately gives that also Œ∑Mr = 1. So M ‚àº= iLM
and M is a sheaf.
2
Remark 5.10 It would have been enough to require that the codomain of f
is a sheaf. This essentially because the sheaves form an exponential ideal in E.
Theorem 5.11 If D is a reÔ¨Çective subcategory of a Œ†M-category E with carte-
sian reÔ¨Çector, D is also a Œ†M-category.
Corollary 5.12 If C is an internal site in a Œ†M-category E such that the in-
clusion of internal sheaves in presheaves has a cartesian left adjoint (a ‚ÄúsheaÔ¨Å-
Ô¨Åcation functor‚Äù), then the category Sh(C) of internal sheaves for the site C
in E is a Œ†M-category.
Separated objects 5.13
Objects Y in E for which triangles
X‚Ä≤
f‚Ä≤
/

m

Y
X,
f
>
where m is a dense mono, have at most one Ô¨Ålling are called separated with
respect to c. As it turns out, the full subcategory of such separated subobjects
Sepc(E) has M-types when E does, even when the universal closure operator
is not known to derive from a cartesian reÔ¨Çector.
Theorem 5.14 Let c be a universal closure operator on a Œ†M-category E.
(1) Sepc(E) is a locally cartesian closed category.
(2) If f: B
/ A has separated codomain, then Mf is separated.
(3) If c is dense (so cX(‚ä•) = ‚ä•for all X ‚ààE), then Sepc(E) is a Œ†M-category
and the inclusion
Sepc(E) /
/ E
preserves this structure.
Proof. Before proceeding to give the proof, we introduce a piece of nota-
tion. For an object X in E, write x =c x‚Ä≤ for x, x‚Ä≤ ‚ààX, when (x, x‚Ä≤) ‚àà
c(‚àÜ: X
/ X √ó X). An object X is then separated, when
x =c x‚Ä≤ ‚áíx = x‚Ä≤
(see [19], Lemma 4.3.6).
1: Since c commutes with intersection, it is clear that separated objects are
closed under Ô¨Ånite limits. It is also not too hard to see that separated objects
are closed under the Œ†-functor. To give an idea, let us show in some detail
why AB is separated, whenever A is. Consider two functions f, g ‚ààAB such
that f =c g. To prove f = g, pick an arbitrary b ‚ààB. Since b =c b, and
f =c g ‚àßb =c b‚Ä≤ ‚Üífb =c gb‚Ä≤,
26

fb =c gb. But A is separated, so fb = gb. As b was arbitrary, f = g.
2: In the same way, consider the M-type M in E associated to f: B
/ A,
where A is separated. To show that M is separated, deÔ¨Åne
S = {(supa(t), supa‚Ä≤(t‚Ä≤)) ‚ààM √ó M | supa(t) =c supa‚Ä≤(t‚Ä≤)}.
S has the structure of a Pf-coalgebra in such a way that composing S ‚äÜM√óM
with either of the two projections yields a Pf-coalgebra morphism. In other
words, S has the structure of a bisimulation on M. This is true, simply because
whenever supa(t) =c supa‚Ä≤(t‚Ä≤), then a =c a‚Ä≤, and hence a = a‚Ä≤, because A is
separated. And because one therefore also has that tb =c t‚Ä≤b for every b ‚ààBa.
But because of Ô¨Ånality of M, all bisimulations on M are contained in the
diagonal of M. Hence
supa(t) =c supa‚Ä≤(t‚Ä≤) ‚áísupa(t) = supa‚Ä≤(t‚Ä≤)
and M is separated.
3: In case c is dense, separated objects are closed under sums, and also the
nno is separated. The former one shows by a separation of cases, and for the
latter one shows by a double induction that for any n, m ‚ààN
n =c m ‚áín = m.
2
References
[1] M. Abbott, T. Altenkirch, and N. Ghani.
Containers: constructing strictly
positive types. Theoret. Comput. Sci., 342(1):3‚Äì27, 2005.
[2] P. Aczel.
The type theoretic interpretation of constructive set theory.
In
Logic Colloquium ‚Äô77 (Proc. Conf., Wroc law, 1977), volume 96 of Stud. Logic
Foundations Math., pages 55‚Äì66. North-Holland Publishing Co., Amsterdam,
1978.
[3] P. Aczel.
Non-well-founded sets, volume 14 of CSLI Lecture Notes.
CSLI
Publications, Stanford, CA, 1988.
[4] K.J. Barwise and L. Moss.
Vicious circles ‚Äì On the mathematics of non-
wellfounded phenomena, volume 60 of CSLI Lecture Notes. CSLI Publications,
Stanford, CA, 1996.
[5] A. Bauer. The realizability approach to computable analysis and topology. PhD
thesis, Carnegie Mellon University, 2000.
[6] B. van den Berg. Inductive types and exact completion. Ann. Pure Appl. Logic,
134:95‚Äì121, 2005.
27

[7] B. van den Berg. Predicative topos theory and models for constructive set theory.
PhD thesis, University of Utrecht, 2006.
[8] B. van den Berg.
Sheaves for predicative toposes.
Available from arXiv:
math.LO/0507480, July 2005.
[9] B. van den Berg and F. De Marchi. Models of non-well-founded sets via an
indexed Ô¨Ånal coalgebra theorem.
Accepted for publication in J. Symb. Log.
Available from arXiv: math.LO/0508531, Jan 2006.
[10] C. CÀÜƒ±rstea. A coequational approach to specifying behaviours. Electr. Notes
Theor. Comput. Sci., 19:142‚Äì163, 1999.
[11] B. Courcelle. Fundamental properties of inÔ¨Ånite trees. Theoret. Comput. Sci.,
25(2):95‚Äì169, 1983.
[12] F. De Marchi. Monads in Coalgebra. PhD thesis, University of Leicester, 2004.
[13] F. De Marchi. On the semantics of coinductive types in Martin-L¬®of type theory.
In J.L. Fiadeiro et al., editor, Algebra and Coalgebra in Computer Science
(CALCO 2005), volume 3629 of Lecture Notes in Comput. Sci., pages 114‚Äì126.
Springer-Verlag, Berlin, 2005.
[14] M. Forti and F. Honsell. Set theory with free construction principles. Ann.
Scuola Norm. Sup. Pisa Cl. Sci. (4), 10(3):493‚Äì522, 1983.
[15] P.J. Freyd. The axiom of choice. J. Pure Appl. Algebra, 19:103‚Äì125, 1980.
[16] N. Gambino and J.M.E. Hyland. Wellfounded trees and dependent polynomial
functors. In Types for proofs and programs, volume 3085 of Lecture Notes in
Comput. Sci., pages 210‚Äì225. Springer-Verlag, Berlin, 2004.
[17] M. Hofmann. On the interpretation of type theory in locally cartesian closed
categories. In Computer science logic (Kazimierz, 1994), volume 933 of Lecture
Notes in Comput. Sci., pages 427‚Äì441. Springer-Verlag, Berlin, 1995.
[18] B.P.F. Jacobs and J. Rutten. A tutorial on (co)algebras and (co)induction.
Bulletin of the EATCS, 62:222‚Äì259, 1996.
[19] P.T. Johnstone. Sketches of an elephant: a topos theory compendium. Volume
1, volume 43 of Oxf. Logic Guides. Oxford University Press, New York, 2002.
[20] P.T. Johnstone, A.J. Power, T. Tsujishita, H. Watanabe, and J. Worrell. On the
structure of categories of coalgebras. Theoret. Comput. Sci., 260(1-2):87‚Äì117,
2001.
[21] J. Lambek. Subequalizers. Canadian Math. Bull., 13:337‚Äì349, 1970.
[22] S. Mac Lane. Categories for the working mathematician, volume 5 of Graduate
Texts in Mathematics. Springer-Verlag, New York, second edition, 1998.
[23] I. Moerdijk and E. Palmgren. Wellfounded trees in categories. Ann. Pure Appl.
Logic, 104:189‚Äì218, 2000.
28

[24] I. Moerdijk and E. Palmgren.
Type theories, toposes and constructive set
theory: predicative aspects of AST. Ann. Pure Appl. Logic, 114:155‚Äì201, 2002.
[25] M. Rathjen. The anti-foundation axiom in constructive set theories. In Games,
logic, and constructive sets (Stanford, CA, 2000), volume 161 of CSLI Lecture
Notes, pages 87‚Äì108. CSLI Publications, Stanford, CA, 2003.
[26] M. Rathjen. Predicativity, circularity, and anti-foundation. In One hundred
years of Russell‚Äôs paradox, volume 6 of de Gruyter Ser. Log. Appl., pages 191‚Äì
219. De Gruyter, Berlin, 2004.
[27] L. Santocanale. Logical construction of Ô¨Ånal coalgebras. Electr. Notes Theor.
Comput. Sci., 82(1):1‚Äì20, 2003.
[28] M. Tierney. Sheaf theory and the continuum hypothesis. In Toposes, algebraic
geometry and logic (Conf., Dalhousie Univ., Halifax, N.S., 1971), pages 13‚Äì42.
Lecture Notes in Math., Vol. 274. Springer, Berlin, 1972.
[29] D. Turi and J. Rutten. On the foundations of Ô¨Ånal coalgebra semantics: non-
well-founded sets, partial orders, metric spaces. Math. Structures Comput. Sci.,
8(5):481‚Äì540, 1998.
29

