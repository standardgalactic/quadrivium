
Financial Engineering Explained
Series Editor
Wim Schoutens
Department of Mathematics
Katholieke Universiteit Leuven
Heverlee, Belgium

Financial Engineering Explained is a series of concise, practical guides
to modern ﬁnance, focusing on key, technical areas of risk management
and asset pricing. Written for practitioners, researchers and students,
the series discusses a range of topics in a non-mathematical but highly
intuitive way. Each self-contained volume is dedicated to a speciﬁc topic
and offers a thorough introduction with all the necessary depth, but
without too much technical ballast. Where applicable, theory is illus-
trated with real world examples, with special attention to the numerical
implementation.
More information about this series at
http://www.springer.com/series/14984

Karel in ’t Hout
Numerical Partial
Differential Equations
in Finance Explained
An Introduction to Computational Finance

Karel in ’t Hout
Department of Mathematics and
Computer Science
University of Antwerp
Antwerp
Belgium
Financial Engineering Explained
ISBN 978-1-137-43568-2
ISBN 978-1-137-43569-9 (eBook)
DOI 10.1057/978-1-137-43569-9
Library of Congress Control Number: 2017934655
© The Editor(s) (if applicable) and The Author(s) 2017
The author(s) has/have asserted their right(s) to be identiﬁed as the author(s) of this work in
accordance with the Copyright, Designs and Patents Act 1988.
This work is subject to copyright. All rights are solely and exclusively licensed by the Publisher,
whether the whole or part of the material is concerned, speciﬁcally the rights of translation,
reprinting, reuse of illustrations, recitation, broadcasting, reproduction on microﬁlms or in any other
physical way, and transmission or information storage and retrieval, electronic adaptation, computer
software, or by similar or dissimilar methodology now known or hereafter developed.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this pub-
lication does not imply, even in the absence of a speciﬁc statement, that such names are exempt from
the relevant protective laws and regulations and therefore free for general use.
The publisher, the authors and the editors are safe to assume that the advice and information in this
book are believed to be true and accurate at the date of publication. Neither the publisher nor the
authors or the editors give a warranty, express or implied, with respect to the material contained
herein or for any errors or omissions that may have been made. The publisher remains neutral with
regard to jurisdictional claims in published maps and institutional afﬁliations.
Printed on acid-free paper
This Palgrave Macmillan imprint is published by Springer Nature
The registered company is Macmillan Publishers Ltd.
The registered company address is: The Campus, 4 Crinan Street, London, N1 9XW, United Kingdom

Preface
A few years after Black and Scholes [5] derived their famous par-
tial differential equation (PDE) for the fair values of European call
and put options, Schwartz [78] considered a ﬁnite difference discret-
ization for its approximate solution. Today, the numerical solution
of time-dependent PDEs forms one of the pillars of computational
ﬁnance. Efﬁcient, accurate and stable numerical methods are imper-
ative for ﬁnancial institutions and companies worldwide. Extensive
research is performed, both in academia and industry, into their devel-
opment, analysis and application. This book is intended as a concise,
gentle introduction into this interesting and dynamic ﬁeld. Its aim is
to provide students and practitioners with an easily accessible, prac-
tical text explaining main concepts, models, methods and results. The
text is organized through a sequence of short chapters. The style is
more descriptive than (mathematically) rigorous. Numerous examples
and numerical experiments are given to illustrate results. Only some
elementary knowledge of mathematics, notably calculus and linear
algebra, is assumed.
The numerical solution processes in this book are obtained fol-
lowing the popular method of lines (MOL) approach. Here a given
time-dependent PDE is semidiscretized on a grid by ﬁnite difference
formulas, which yields a large system of ordinary differential equa-
tions (ODEs). Subsequently, a suitable temporal discretization method
is applied, which deﬁnes the full discretization.
Chapters 1 and 2 introduce ﬁnancial option valuation and partial dif-
ferential equations. Next, the MOL approach is elaborated in Chapters
3–8. Much attention is paid to studying stability and convergence of
v

vi
Preface
the various discretizations. Important special topics, such as bound-
ary conditions, nonuniform grids, the treatment of nonsmooth initial
data and approximation of the so-called Greeks, are included in the
discussion. In this part the Black–Scholes PDE serves as the prototype
equation for the numerical experiments. Examining numerical meth-
ods in their application to this equation provides key insight into their
properties and performance when applied to many advanced PDEs in
contemporary ﬁnancial mathematics.
After having considered European call and put options as an ex-
ample, we move on to explore the numerical valuation of more
challenging modern types of options: cash-or-nothing options in
Chapter 9, barrier options in Chapter 10 and American options in
Chapter 11. The latter type of options leads to partial differential in-
equalities and an additional step in the numerical solution process is
required, where so-called linear complementarity problems are solved.
Chapter 12 is devoted to option valuation in the presence of jumps
in the underlying asset price evolution. This gives rise to partial
integro-differential equations. These equations can be viewed as PDEs
with an extra integral term. For their effective numerical solution,
operator splitting methods of the implicit-explicit (IMEX) kind are
introduced.
Chapter 13 extends the MOL approach to two-dimensional PDEs in
ﬁnance. Semidiscretization then results in very large systems of ODEs.
For the efﬁcient temporal discretization, operator splitting methods
of the Alternating Direction Implicit (ADI) kind are discussed. As an
example, the numerical valuation of a two-asset option under the
Black–Scholes framework is considered.
Most of the chapters conclude with a short section where notes and
references to the literature are given. These are intended as pointers to
readers who wish to broaden their knowledge or deepen their under-
standing of the topics under consideration. Supplementary material to
this book will be provided on my website.
I am grateful to Peter Forsyth, Sven Foulon, Willem Hundsdorfer,
Wim Schoutens, Jari Toivanen and Maarten Wyns for their genuine
interest and their valuable suggestions and comments on prelimin-
ary versions of this book. Last but not least, I wish to thank Palgrave
Macmillan for the pleasant cooperation.
Antwerp, July 2016
Karel in ’t Hout

Contents
1
Financial Option Valuation........................................................
1
1.1
Financial Options ................................................................
1
1.2
The Black–Scholes PDE .........................................................
3
2
Partial Differential Equations ....................................................
9
2.1
Convection-Diffusion-Reaction Equations......................................
9
2.2
The Model Equation .............................................................
10
2.3
Boundary Conditions............................................................
12
2.4
Notes and References ...........................................................
14
3
Spatial Discretization I .............................................................
15
3.1
Method of Lines..................................................................
15
3.2
Finite Difference Formulas ......................................................
17
3.3
Stability...........................................................................
21
3.4
Notes and References ...........................................................
23
4
Spatial Discretization II ............................................................
25
4.1
Boundary Conditions............................................................
25
4.2
Nonuniform Grids ...............................................................
29
4.3
Nonsmooth Initial Data..........................................................
32
4.4
Mixed Central/Upwind Discretization..........................................
33
4.5
Notes and References ...........................................................
35
5
Numerical Study: Space ............................................................
37
5.1
Cell Averaging....................................................................
38
5.2
Nonuniform Grids ...............................................................
41
5.3
Boundary Conditions............................................................
42
vii

viii
Contents
6
The Greeks .............................................................................
45
6.1
The Greeks.......................................................................
45
6.2
Numerical Study .................................................................
47
6.3
Notes and References ...........................................................
50
7
Temporal Discretization ...........................................................
51
7.1
The θ-Methods...................................................................
51
7.2
Stability and Convergence.......................................................
52
7.3
Maximum Norm and Positivity..................................................
58
7.4
Notes and References ...........................................................
60
8
Numerical Study: Time .............................................................
61
8.1
Explicit Method..................................................................
61
8.2
Implicit Methods.................................................................
63
8.3
Notes and References ...........................................................
68
9
Cash-or-Nothing Options..........................................................
69
10
Barrier Options.......................................................................
75
11
American-Style Options............................................................
81
11.1
American-Style Options .........................................................
81
11.2
LCP Solution Methods...........................................................
84
11.3
Numerical Study .................................................................
86
11.4
Notes and References ...........................................................
90
12
Merton Model .........................................................................
91
12.1
Merton Model....................................................................
91
12.2
Spatial Discretization ............................................................
93
12.3
IMEX Schemes ...................................................................
95
12.4
Numerical Study .................................................................
96
12.5
Notes and References ...........................................................
97
13
Two-Asset Options ...................................................................
99
13.1
Two-Asset Options...............................................................
99
13.2
Spatial Discretization ............................................................
101
13.3
ADI Schemes.....................................................................
106
13.4
Numerical Study .................................................................
108
13.5
Notes and References ...........................................................
111
Appendix A: Wiener Process........................................................... 113
Appendix B: Feynman–Kac Theorem ............................................... 115
Appendix C: Down-and-Out Put Option Value.................................... 117

Contents
ix
Appendix D: Max-of-Two-Assets Call Option Value ............................. 119
Bibliography ................................................................................ 121
Index .......................................................................................... 127

List of Figures
Figure 1.1
Payoff functions for call and put options on [0, 3K] ...............
4
Figure 1.2
Exact call and put option value functions on [0, 3K]
for t = T and parameter set (1.8) .......................................
7
Figure 3.1
Sample grid in the (s, t)-domain, indicated by circles..............
16
Figure 3.2
Geometric interpretation of the ﬁnite difference
formulas (3.3), (3.7), (3.10) for the ﬁrst derivative f ′(s) ..........
17
Figure 4.1
Mapping ϕ deﬁned in Example 4.2.1..................................
30
Figure 5.1
Spatial error εi(m) versus si for m = 50 (top) and
m = 51 (bottom). Semidiscretization on uniform
grid by second-order central formulas. No cell averaging ........
39
Figure 5.2
Spatial error e(m) versus 1/m for all 10 ≤m ≤100.
Semidiscretization on uniform grid by second-order
central formulas. No cell averaging ....................................
40
Figure 5.3
Spatial error e(m) versus 1/m for all 10 ≤m ≤100.
Semidiscretization on uniform grid by second-order
central formulas. With cell averaging..................................
40
Figure 5.4
Spatial grid points corresponding to Example 4.2.1
if m = 50 ......................................................................
41
Figure 5.5
Spatial error e(m) versus 1/m for all 10 ≤m ≤100.
Semidiscretization on nonuniform grid by
second-order central formulas. Formula A for
convection: bullets. Formula B for convection:
squares. With cell averaging .............................................
42
Figure 5.6
Spatial errors e(m) (dark squares) and eROI(m)
(light squares) versus 1/m for 100 ≤m ≤1000.
Semidiscretization on nonuniform grid by
second-order central formulas. Formula B for
convection. Linear boundary condition at s = Smax.
With cell averaging ........................................................
43
xi

xii
List of Figures
Figure 6.1
Greeks for a call option for t = T and parameter set (1.8)........
46
Figure 6.2
Delta spatial error ed(m) versus 1/m for all
10 ≤m ≤100. Semidiscretization by second-order
central formulas. Formula B for convection. With
cell averaging. Uniform grid: bullets. Nonuniform
grid: squares .................................................................
48
Figure 6.3
Gamma spatial error eg(m) versus 1/m for all
10 ≤m ≤100. Semidiscretization by second-order
central formulas. Formula B for convection. With
cell averaging. Uniform grid: bullets. Nonuniform
grid: squares .................................................................
49
Figure 6.4
Vega spatial error ev(m) versus 1/m for all
10 ≤m ≤100. Semidiscretization by second-order
central formulas. Formula B for convection. With
cell averaging. Uniform grid: bullets. Nonuniform
grid: squares .................................................................
49
Figure 6.5
Rho spatial error er(m) versus 1/m for all
10 ≤m ≤100. Semidiscretization by second-order
central formulas. Formula B for convection. With
cell averaging. Uniform grid: bullets. Nonuniform
grid: squares .................................................................
50
Figure 7.1
Stability region θ-method with θ = 0 (shaded) ......................
54
Figure 7.2
Stability region θ-method with θ = 1
2 (shaded)......................
55
Figure 7.3
Stability region θ-method with θ = 1 (shaded) ......................
55
Figure 8.1
Fully discrete approximation of call option value
function for t = T obtained with the forward Euler
method if N = 75 (top) and N = 80 (bottom)........................
62
Figure 8.2
Temporal error e(t;50) versus t for all
1 ≤N ≤100. Backward Euler (dark bullets),
Crank–Nicolson (light squares), Crank–Nicolson
with damping (dark squares)............................................
64
Figure 8.3
Temporal error e(t;200) versus t for all
1 ≤N ≤100. Backward Euler (dark bullets),
Crank–Nicolson (light squares), Crank–Nicolson
with damping (dark squares)............................................
65
Figure 8.4
Total error E(t;m) versus 1/m with N = ⌈m/5⌉
for 10 ≤m ≤1000. Backward Euler (dark bullets),
Crank–Nicolson (light squares), Crank–Nicolson
with damping (dark squares)............................................
67
Figure 9.1
Exact cash-or-nothing call option value function on
[0, 3K] × [0, T] with parameter set (9.2)..............................
70
Figure 9.2
Cash-or-nothing call option with parameter set
(9.2). Total error EROI(t;m) versus 1/m with
N = ⌈m/5⌉for 10 ≤m ≤1000. Crank–Nicolson
method. Cell averaging without damping (dark

List of Figures
xiii
bullets). Cell averaging with damping using two
substeps (dark squares). No cell averaging but with
damping using two substeps (light squares).........................
71
Figure 9.3
Cash-or-nothing call option delta with parameter
set (9.2). Total error Ed,ROI(t;m) versus 1/m with
N = ⌈m/5⌉for 10 ≤m ≤1000. Crank–Nicolson
method. Cell averaging and: no damping (dark
bullets), damping using two substeps (dark
squares) and damping using four substeps (dark
triangles). No cell averaging but with damping
using four substeps (light triangles) ...................................
72
Figure 9.4
Cash-or-nothing call option gamma with parameter
set (9.2). Total error Eg,ROI(t;m) versus 1/m with
N = ⌈m/5⌉for 10 ≤m ≤1000. Crank–Nicolson
method. Cell averaging and: no damping (dark
bullets), damping using two substeps (dark
squares) and damping using four substeps (dark
triangles). No cell averaging but with damping
using four substeps (light triangles) ...................................
73
Figure 10.1 Exact down-and-out put option value function on
[H, 3K] × [0, T] with parameter set (10.1) ...........................
76
Figure 10.2 Down-and-out put option with parameter set
(10.1). Total error EROI(t;m) versus 1/m with
N = ⌈m/5⌉for 10 ≤m ≤1000. Crank–Nicolson
method. Cell averaging without damping (dark
bullets). Cell averaging with damping using two
substeps (dark squares). No cell averaging but with
damping using two substeps (light squares).........................
77
Figure 10.3 Numerically approximated discrete down-and-out
put option value function on [0, 3K] × [0, T]
with parameter set (10.1) and monitoring times
τj = j T/5 (1 ≤j ≤5).......................................................
78
Figure 11.1 Dark: numerically approximated American put
option value function on [ 1
2K, 3
2K] for t = T and
parameter set (11.10). Light: payoff function .......................
86
Figure 11.2 Numerically approximated early exercise boundary
for the American put option and parameter set (11.10)..........
87
Figure 11.3 American put option with parameter set (11.10).
Temporal error e ROI(t;m) versus 1/m with
N = ⌈m/2⌉for 10 ≤m ≤1000. Constant step
sizes. Backward Euler: light. Crank–Nicolson: dark.
Method (11.5): bullets. Method (11.6): squares.
Method (11.7): triangles..................................................
88
Figure 11.4 American put option with parameter set (11.10).
Temporal error e ROI(t;m) versus 1/m with

xiv
List of Figures
N = ⌈m/2⌉for 10 ≤m ≤1000. Variable step
sizes. Backward Euler: light. Crank–Nicolson: dark.
Method (11.5): bullets. Method (11.6): squares.
Method (11.7): triangles..................................................
89
Figure 12.1 Exact put option value functions on [ 1
2K, 3K] for
t = T and parameter set (12.4). Black–Scholes
value: light. Merton value: dark.........................................
93
Figure 12.2 Put option under Merton model with parameter
set (12.4). Total error E ROI(t;m) versus 1/m
with N = ⌈m/3⌉for 10 ≤m ≤1000. Schemes:
Crank–Nicolson (light bullets), IMEX (dark bullets) ...............
97
Figure 13.1 Payoff function for call on the maximum of two
assets option on [0, 3K] × [0, 3K] if K = 100......................... 100
Figure 13.2 Exact option value function for call on the
maximum of two assets on [0, 3K] × [0, 3K] for
t = T and parameter set (13.3) .......................................... 101
Figure 13.3 Sparsity pattern of A, A0, A1, A2 given by (13.7) if
m1 = m2 = 9. Finite difference approximation (13.5)
of mixed derivative based on formula B .............................. 105
Figure 13.4 Call option on the maximum of two assets with
parameter set (13.3). Temporal errore ROI(t;m)
versus 1/m with N = m for 10 ≤m ≤100. Schemes:
Crank–Nicolson (light bullets), Douglas with θ = 1
2
(light squares), CS (dark bullets), MCS with θ = 1
3
(dark squares), HV with θ = 1 – 1
2
√
2 (dark triangles) ............ 110
Figure 13.5 Call option on the maximum of two assets with
parameter set (13.3). Total error E ROI(t;m) versus
1/m with N = m for 10 ≤m ≤100. Schemes:
Crank–Nicolson (light bullets), Douglas with θ = 1
2
(light squares), CS (dark bullets), MCS with θ = 1
3
(dark squares), HV with θ = 1 – 1
2
√
2 (dark triangles) ............. 111

1
Financial Option Valuation
1.1
Financial Options
A ﬁnancial option is a so-called derivative product. It is derived from
(depends on) a given underlying asset. This underlying asset can be
many different things, for example a stock of a company, a commodity
or a foreign currency. In precise terms:
a ﬁnancial option is a contract between two parties, the holder
and the writer, which gives the holder the right, but not the
obligation, to buy from or sell to the writer a given underlying
asset at a prescribed price on or before a prescribed time.
Notice that the holder has the right to exercise, but not the obligation.
Hence, the appropriate term “option”. The prescribed price in the op-
tion contract is called the strike price or exercise price and shall be
denoted by K. The prescribed time in the contract is called the matur-
ity time or expiration time and shall be denoted by T. By convention,
the time of inception of the option is set equal to zero and shall be
called today.
The above deﬁnition encompasses two basic option types: a call
option, which gives the holder the right to buy the asset, and a put
option, which gives the holder the right to sell the asset.
© The Author(s) 2017
1
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_1

2
Numerical Partial Differential Equations in Finance Explained
If exercising by the holder is only allowed at the maturity time, then
this is referred to as an European-style option. If exercising by the
holder is allowed at any given time up to and including the maturity
time, then it is called an American-style option. This terminology does
not have a geographical meaning. In the ﬁnancial option world, a
wide variety of colourful names arises, and more of these will be en-
countered later on. Unless explicitly stated otherwise, we will always
assume that the options under consideration are European-style.
The following example illustrates the natural use of ﬁnancial options
in practice.
Example 1.1.1
Consider company A, working in euros (EUR) and producing
certain high-tech machines. Company B, working in US dol-
lars (USD), places an order today with company A for such
a machine to be delivered in exactly one year from now for
the price of one million USD. Since the actual USD–EUR ex-
change rate (the value of 1 USD in terms of EUR) in one
year’s time is unknown, company A faces ﬁnancial risk in this
deal. It can decide to accept this. Alternatively, it can hedge
this risk by acquiring, for example from a bank, a put option
which gives the right to sell one million USD with maturity
time T = 1 year and a certain preferred USD–EUR exchange
rate K. Thus company A has locked in a minimal amount of
EUR, namely K million, that will be received in one year’s
time. The value of K is usually chosen close to or equal to
today’s exchange rate.
The above example shows that options can be employed as an insur-
ance. In general, the use of options can be viewed as redistributing
ﬁnancial risk between parties. The trading of options has grown rap-
idly over the past decades and is performed both at exchanges and
over-the-counter (OTC), that is, directly between two market parties.
It should be clear that options have ﬁnancial value. The writer of an
option is compensated upfront for taking on ﬁnancial risk. One of the
key questions of mathematical ﬁnance is:
what, if any, is the fair value of a ﬁnancial option at inception ?
This question constitutes a fundamental problem, which has been
open in the literature for many years. Pioneers of modern option

1
Financial Option Valuation
3
valuation are Bachelier [3], Black and Scholes [5] and Merton [62]. In
their celebrated work, Black and Scholes [5] succeeded in answering
the above question, under a number of assumptions, for call and put
options.
1.2
The Black–Scholes PDE
Let Sτ denote the price of the underlying asset at time τ ∈[0, T]. At ma-
turity time the fair value of a call or put option can easily be expressed
in terms of the asset price at that time. It is equal to φ(ST), where φ is
the payoff function deﬁned by
φ(s) =

max (s – K, 0)
for s ≥0 (call),
max (K – s, 0)
for s ≥0 (put).
(1.1)
For example, for a put option, if the asset price at maturity ST is
lower than the strike price K, then the holder will exercise this option
and sell the asset for K, making a proﬁt of K – ST. On the other hand,
if ST is higher than K, then the holder will not exercise this option,
as he/she can obviously sell the asset in the market for a better price
than K. In this case the put option is worthless.
Figure 1.1 displays the graphs of the payoff functions for call and put
options on the s-domain [0, 3K]. Clearly, the two payoffs are piecewise
linear functions, both with a kink at the strike K.
The primary objective in mathematical ﬁnance is to determine the
fair option value today, that is, τ = 0. This value is not obvious, since
future asset prices are unknown; compare Example 1.1.1. In order to
arrive at a fair option value, Black and Scholes assumed that the asset
price evolution is given by a stochastic process, so that Sτ is a random
variable for each τ ∈(0, T]. More precisely, they considered
Sτ = S0 e(μ–1
2σ 2)τ+σWτ
(0 ≤τ ≤T),
(1.2)
where Wτ (τ ≥0) denotes the standard Brownian motion or Wiener
process, see Appendix A. The σ
> 0 and μ are real constants,
called the volatility and the drift rate, respectively. The stochastic
process (1.2) is referred to as the geometric Brownian motion. If S0
is nonzero, then
ln
Sτ
S0

= (μ – 1
2σ 2)τ + σWτ.

4
Numerical Partial Differential Equations in Finance Explained
0
K
s
s
2K
3K
0
2K
Call option
0
2K
Put option
0
K
2K
3K
Figure 1.1
Payoff functions for call and put options on [0, 3K]
Hence, ln (Sτ/S0) is normally distributed with mean (μ – 1
2σ 2)τ and
variance σ 2τ. In view of this, the random variable Sτ is said to have a
lognormal distribution. It can be shown that the expected value of
Sτ is given by
E[Sτ] = S0eμτ.
Thus the drift μ is the rate of return on the expected future asset
prices. Next, the volatility σ forms a measure for the uncertainty in
the future asset prices. An increase in the value of σ yields a higher
probability for large ﬂuctuations.
In addition to the geometric Brownian motion (1.2), several other
assumptions were made by Black and Scholes about the market in
which the option and the underlying asset are traded. For our purposes
here we mention the risk-free interest rate r. This is the theoretical in-
terest rate that holds without any risk of ﬁnancial loss. It is assumed to

1
Financial Option Valuation
5
be known and constant and so that a cash investment D0 today grows
deterministically in time according to
D(τ) = D0erτ.
A subsequent main assumption in the Black–Scholes framework is no-
arbitrage. This condition states that there is no possibility of a risk-free
return in the market that is greater than that provided by the risk-free
rate r. In other words, if one wishes to achieve a greater return than
that provided by r, then some risk of ﬁnancial loss is involved.
Under the Black–Scholes assumptions it can be proved that there
exists a unique deterministic real function u of two real variables s and
t such that u(s, t) is the fair value at time τ = T –t of a call or put option
if at that time the asset price equals s, and this function satisﬁes
∂u
∂t (s, t) = 1
2σ 2s2∂2u
∂s2 (s, t) + rs∂u
∂s (s, t) – ru(s, t)
(1.3)
for s>0 and 0<t ≤T. Here ∂u/∂t denotes the ﬁrst-order partial deriv-
ative, in the mathematical sense, of u with respect to the independent
variable t and ∂u/∂s, ∂2u/∂s2 denote the ﬁrst- and second-order partial
derivatives, respectively, of u with respect to the independent variable
s. The simple change of variable from time τ to time-till-maturity t has
been done to obtain a formulation that is slightly more convenient.
Equation (1.3) is called the Black–Scholes partial differential equa-
tion (PDE). This seminal result was established in [5, 62] in 1973.
Modern texts including derivations of (1.3) are for example [47, 66, 80,
90]. In the following we discuss several observations and subsequent
results related to the Black–Scholes PDE.
First notice that the function u yields the fair option value for any
possible asset price at any given time that the option is in existence. It
can be shown that if the market price is not the fair value, then there
is an arbitrage opportunity.
As a next observation, the drift rate μ from the asset price process
(1.2) does not appear in the Black–Scholes PDE. This is an equally
surprising and fundamental result, which has led to the important so-
called risk-neutral option valuation theory. It is beyond the scope of
this book to discuss this topic, but see for example the books cited
above.

6
Numerical Partial Differential Equations in Finance Explained
In addition to the Black–Scholes PDE, two further conditions hold
for the call or put option value function u. The ﬁrst one is a direct
consequence of the fact that the fair option value is known at maturity,
that is, if t = 0. It is given by the payoff function (1.1) and yields the
initial condition
u(s, 0) = φ(s)
for s > 0.
(1.4)
The second one follows from the fact that if the asset price is ever
zero, then by the geometric Brownian motion (1.2) it remains zero
until maturity. Hence, the fair value at maturity of a call option is equal
to zero and of a put option equal to K. By the no-arbitrage assumption,
these values are discounted with the risk-free interest rate r to any
given time τ = T – t, yielding the boundary condition
u(0, t) =

0
for 0 ≤t ≤T
(call),
e–rtK
for 0 ≤t ≤T
(put).
(1.5)
The equations (1.3), (1.4) and (1.5) together form an initial-boundary
value problem for the Black–Scholes PDE and uniquely determine the
option value function u.
Exact solutions to initial-boundary value problems for PDEs are of-
ten not at hand in (semi-)closed analytical form. The present case is a
useful exception, however. For call and put options, Black and Scholes
derived the famous formula
u(s, t) = s N (d1) – e–rtKN (d2)
(call),
(1.6a)
u(s, t) = –s N ( – d1) + e–rtKN ( – d2)
(put),
(1.6b)
for s > 0, 0 < t ≤T with
d1 = ln (s/K) + (r + 1
2σ 2)t
σ√t
, d2 = d1 – σ
√
t,
(1.6c)
where N denotes the standard normal cumulative distribution func-
tion,

1
Financial Option Valuation
7
N (y) =
1
√
2π
 y
–∞
e–1
2x2dx
(y ∈R).
There is a neat relation, the put-call parity, which links the fair put
and call option values on the same underlying for the same strike K
and maturity T:
put(s, t) + s = call(s, t) + e–rtK
(s ≥0, 0 ≤t ≤T).
(1.7)
This relation can be proved by an elementary argument using the no-
arbitrage assumption and holds in a general setting for European-style
options.
0
2K
0
K
2K
3K
0
2K
Put option
Call option
0
K
s
s
u
u
2K
3K
Figure 1.2
Exact call and put option value functions on [0, 3K] for t = T and
parameter set (1.8)

8
Numerical Partial Differential Equations in Finance Explained
As an illustration, Figure 1.2 displays the graphs of the call and put
option value functions given by the Black–Scholes formula (1.6) on
[0, 3K] for t = T and parameters
K = 100, T = 1, r = 0.05, σ = 0.25.
(1.8)
In ﬁnancial practice there is a big demand for more advanced options
that are tailored to the speciﬁc needs of investors. These are referred
to as exotic options. It turns out that, under the Black–Scholes assump-
tions, the PDE (1.3) is not just fulﬁlled for the fair values of standard
call and put options, but also for a wide range of exotic options. For
these only the domain and the initial and boundary conditions for (1.3)
change. A number of examples will be seen in the course of this book.
If one moves outside of the Black–Scholes framework, for instance
when considering asset price processes different from the geometric
Brownian motion (1.2), then the option valuation PDE (1.3) itself will
change.

2
Partial Differential Equations
2.1
Convection-Diffusion-Reaction Equations
As opposed to ordinary differential equations (ODEs), partial differ-
ential equations (PDEs) concern functions of multiple independent
variables. In this chapter we consider PDEs of the time-dependent
convection-diffusion-reaction kind,
∂u
∂t (s, t) = d(s)∂2u
∂s2 (s, t) + c(s)∂u
∂s (s, t) – r(s)u(s, t)
(2.1)
for Smin < s < Smax and 0 < t ≤T. Here Smin, Smax are given real
values or ±∞and c, d, r denote given real-valued functions where d
is always assumed to be nonnegative. The real-valued function u is the
unknown.
Most of the PDEs that arise in contemporary ﬁnancial option valu-
ation theory are of the convection-diffusion-reaction kind. Clearly the
choice
c(s) = rs, d(s) = 1
2σ 2s2, r(s) ≡r
yields the Black–Scholes PDE (1.3). Further, one has Smin = 0 and
Smax = ∞for standard call and put options.
In the literature, often an alternative notation by means of subscripts
is used for the partial derivatives of a function. This gives a slightly
© The Author(s) 2017
9
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_2

10
Numerical Partial Differential Equations in Finance Explained
shorter formulation for (2.1), which we will often employ,
ut(s, t) = d(s)uss(s, t) + c(s)us(s, t) – r(s)u(s, t).
Time-dependent convection-diffusion-reaction equations are ubi-
quitous in science and engineering. In applications in physics and
chemistry the uss-part represents a diffusion process, the us-part a con-
vection process (for instance, transport due to ﬂuid ﬂow) and the
u-part a reaction process. In this context, s is often called the space
variable and t the time variable. Since s lies on the real line, the PDE
(2.1) is said to be one-dimensional.
In ﬁnancial mathematics, the convection and diffusion parts corres-
pond to, respectively, the drift and the volatility in the underlying asset
price process (under the so-called risk-neutral probability measure).
The reaction term represents discounting. The independent variables
s and t stand for the underlying asset price and the time-till-maturity.
For these two variables it is common practice to use also the physical
terminology above.
We always assume that the PDE (2.1) is supplemented with an
initial condition,
u(s, 0) = u0(s)
for Smin < s < Smax,
(2.2)
where u0 denotes a given function. Thus u(s, t) is prescribed for t = 0.
In physics and chemistry, the function u0 gives the initial state of the
quantity under consideration. If (2.1) represents a ﬁnancial option
valuation PDE, then u0 is equal to the payoff function φ, that is, the
fair option value at maturity.
2.2
The Model Equation
To gain ﬁrst insight into possible solutions of convection-diffusion-
reaction equations, we let the spatial domain (Smin, Smax) = R and
discuss the model equation,
ut(s, t) = duss(s, t) + cus(s, t) – ru(s, t),
(2.3)

2
Partial Differential Equations
11
with real constants c, d, r. We consider the convection, diffusion and
reaction parts separately, starting with the simplest case.
Reaction equation The pure reaction equation ut(s, t) = –ru(s, t) is
directly solved and yields the exact solution
u(s, t) = e–rtu0(s)
for s ∈R, 0 ≤t ≤T.
In a ﬁnancial context, this represents discounting (with the risk-free
rate).
Convection equation The pure convection equation ut(s, t) = cus(s, t)
also has a simple exact solution, namely
u(s, t) = u0(s + ct)
for s ∈R, 0 ≤t ≤T.
For any given ﬁxed t, the graph of u(·, t) is a shift of the graph of the
initial function u0 with –ct units. If c > 0 then the shift is to the left,
whereas if c < 0 then it is to the right. When s is interpreted as spatial
position and t as time, then –c represents velocity.
Diffusion equation The pure diffusion equation ut(s, t) = duss(s, t)
with d > 0 is often called the heat equation and does in general not
admit closed analytical formulas for its exact solutions. A particular
solution is given by
p(s, t) =
1
√
4πdt
exp

– s2
4dt

for s ∈R, 0 < t ≤T.
The above is called the fundamental solution or Green’s function.
For clarity, dt denotes here the product of d and t. If t tends to
zero, then p(·, t) becomes the Dirac delta function. The solution p
can be viewed as the probability density function of a normal distri-
bution with mean 0 and variance 2dt. The general solution to the heat
equation can be expressed in semi-closed analytical form,
u(s, t) =
 ∞
–∞
p(s – x, t)u0(x)dx.
(2.4)

12
Numerical Partial Differential Equations in Finance Explained
Hence, u(s, t) can be regarded as a weighted average of u0 or as the
expected value of a certain random variable. We mention that by using
the Green’s function it is possible to derive the Black–Scholes formula
(1.6), see for example [90].
2.3
Boundary Conditions
In computational practice, to render the numerical solution feasible,
the spatial domain (Smin, Smax) is taken as bounded and conditions on
u are prescribed at the boundary points of this domain.
For various ﬁnancial options boundedness of the spatial domain in-
trinsically holds. For instance, it is often fulﬁlled for barrier options,
which shall be discussed in Chapter 10. If the spatial domain is intrins-
ically unbounded, such as for standard call and put options, then it is
common to truncate this domain.
Boundary conditions for PDEs appear in several types. The two
best known are the Dirichlet boundary condition and the Neumann
boundary condition. These conditions prescribe, respectively, the val-
ues of u(s, t) and the values of the ﬁrst-order derivative us(s, t) at the
pertinent spatial boundary.
As an illustration, consider call and put options and a truncated do-
main (0, Smax). At the lower boundary s = 0 the Dirichlet condition
(1.5) applies. At the upper boundary s = Smax a common Dirichlet
condition is speciﬁed by
u(Smax, t) =

Smax – e–rtK
for 0 ≤t ≤T
(call),
0
for 0 ≤t ≤T
(put),
(2.5)
and a Neumann condition by
us(Smax, t) =

1
for 0 ≤t ≤T
(call),
0
for 0 ≤t ≤T
(put).
(2.6)
The two conditions (2.5), (2.6) are visually in accordance with the
graphs of u in Figure 1.2 whenever Smax is sufﬁciently large. These con-
ditions only provide approximations, however, to the actual option

2
Partial Differential Equations
13
value function and its ﬁrst derivative to s. But by taking Smax sufﬁ-
ciently large, the approximation error can be made arbitrarily small.
The conditions (2.5), (2.6) have a natural ﬁnancial interpretation.
Consider for example a put. If the asset price is ever large relative to
the strike, then it is very likely to remain large until maturity and a
put option will be worthless. This explains the homogeneous (that is,
zero) condition in (2.5). Further, a small change in the asset price will
have essentially no inﬂuence on the put option value, yielding the ho-
mogeneous condition in (2.6). These arguments remain valid for many
other asset price processes than the geometric Brownian motion. Thus
(2.5) and (2.6) are generic in this sense.
For exotic options, deducing accurate Dirichlet or Neumann con-
ditions at the truncated boundaries can be a difﬁcult task. A popular
alternative is to impose the linear boundary condition,
uss(Smax, t) = 0
for 0 ≤t ≤T.
(2.7)
This is also called the zero gamma condition (compare Chapter 6).
Clearly, (2.7) states that the second derivative of the option value to s
vanishes at s = Smax. This represents a linear dependence of the option
value on the underlying asset price and holds for a broad variety of ﬁn-
ancial options whenever Smax is sufﬁciently large. Figure 1.2 illustrates
this for call and put options.
The actual choice of the truncated domain is often done heuristic-
ally in practice. It should be large enough such that the approximation
errors at the truncated boundaries have a negligible effect on the op-
tion values in the region of interest (ROI). The latter is a subdomain
of underlying asset prices S0 = s that is of actual, practical interest.
For example, for call and put options, a possible region of interest
is 1
2K < s <
3
2K. A common choice for Smax in the Black–Scholes
framework is then
Smax = se(r–1
2σ 2)T+ασ
√
T
(2.8)
with s = 3
2K and α ≈3. This choice is prompted by the fact that, in
the risk-neutral setting, the probability that ST > Smax (with S0 = s) is
low; it corresponds to a so-called three-sigma event.

14
Numerical Partial Differential Equations in Finance Explained
Finally, observe that if s tends to zero in the Black–Scholes PDE (1.3),
then the convection and diffusion parts both vanish. Accordingly, the
PDE is said to degenerate at the boundary s = 0. It turns out that degen-
eracy is a typical feature with ﬁnancial option valuation PDEs. If s = 0,
then the Black–Scholes PDE reduces to a pure reaction equation, and
its exact solution in the case of call and put options is given by (1.5).
2.4
Notes and References
The PDE (2.1) is linear, that is, if u and v are any given two solutions,
then also any linear combination of u and v forms a solution.
Throughout this book we shall assume that the initial-boundary
value problems for PDEs under consideration always possess a unique
classical solution. Existence and uniqueness results are provided in, for
example, the book [22].
In ﬁnancial mathematics, the fair values of options are often ex-
pressed as expected discounted payoff values under the so-called
risk-neutral probability measure, see for example the book [80]. It is
the Feynman–Kac theorem that provides the mathematical connection
between these expectations and solutions to convection-diffusion-
reaction equations. This key theorem is stated in for example [59, 68,
80] and has been outlined in Appendix B.
The topic of domain truncation is addressed for example in [54, 92].

3
Spatial Discretization I
3.1
Method of Lines
For the numerical solution of initial-boundary value problems for
convection-diffusion-reaction equations (2.1) the method of lines
(MOL) forms a ﬂexible and versatile approach. It is widely employed
in practice and is popular in particular in computational ﬁnance. The
MOL consists of two general, consecutive steps:
(S) discretization in the space variable s,
(T) discretization in the time variable t.
Step (S) is referred to as spatial discretization or semidiscretiza-
tion. In this step the initial-boundary value problem for the PDE is
discretized on a ﬁnite grid in the s-domain. This leads to an initial
value problem for a (large) system of ODEs, the so-called semidiscrete
system. Step (T) is referred to as temporal discretization. Here the
semidiscrete system is discretized on a ﬁnite grid in the t-domain
and deﬁnes the actual, fully discrete approximations on the obtained
Cartesian grid in the (s, t)-domain. A sample (s, t)-grid is shown in
Figure 3.1.
The present and the subsequent two chapters deal with step (S).
We shall discuss several basic semidiscretizations of initial-boundary
value problems for PDEs (2.1). In this chapter we commence with the
© The Author(s) 2017
15
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_3

16
Numerical Partial Differential Equations in Finance Explained
T
0
Smax
Smin
Figure 3.1
Sample grid in the (s, t)-domain, indicated by circles
model equation (2.3). Along with the initial condition (2.2), a so-called
periodic (boundary) condition is taken here for simplicity,
u(s + 1, t) = u(s, t)
for all s ∈R, 0 ≤t ≤T.
(3.1)
Thus the solution is assumed to be periodic in the spatial variable with
period 1. The model equation with periodic condition forms a nat-
ural starting point in the numerical literature as it enables a rigorous
theoretical stability analysis that provides important practical insight.
Notice that (3.1) is not a boundary condition in the strict sense, but it
is still commonly named as such. Actual boundary conditions will be
discussed in the next chapter.
In view of the periodicity, it sufﬁces to consider semidiscretization
on the spatial interval (0, 1]. Let m ≥3 be any given integer, let the
spatial mesh width h = 1/m and let spatial grid points si = ih for
i = 0, 1, 2, . . . , m. The spatial discretizations under consideration in this
book are based upon ﬁnite difference formulas. They yield approxim-
ations Ui(t) to u(si, t) for 1 ≤i ≤m, 0 < t ≤T. By the initial condition
(2.2), the values at t = 0 are directly known,
Ui(0) = u0(si)
for 1 ≤i ≤m.
(3.2)

3
Spatial Discretization I
17
3.2
Finite Difference Formulas
In the following we formulate several basic semidiscretizations for the
model convection and diffusion equations separately. These are sub-
sequently combined so as to arrive at semidiscretizations for the full
model equation (2.3).
By classical real analysis, the ﬁrst derivative f ′ of any given smooth
function f : R →R at any point s ∈R is approximated by
f ′(s) ≈f (s) – f (s – h)
h
(3.3)
whenever h > 0 is small. The right-hand side of (3.3) is a ﬁnite dif-
ference quotient, involving two values of f . It is called the ﬁrst-order
backward formula. This formula can be interpreted as the slope of
the line segment between the points (s – h, f (s – h)) and (s, f (s)) on the
graph of f , see Figure 3.2.
Consider now the pure model convection equation ut(s, t) = cus(s, t)
with periodic condition. Applying (3.3) to the spatial derivative term
in this equation at grid point s = si, yields the approximate relation
ut(si, t) ≈c u(si, t) – u(si–1, t)
h
(1 ≤i ≤m, 0 < t ≤T).
s−h
s
s+h
f(s−h)
f(s)
f(s+h)
(3.3)
(3.7)
(3.10)
Figure 3.2
Geometric interpretation of the ﬁnite difference formulas (3.3), (3.7),
(3.10) for the ﬁrst derivative f′(s)

18
Numerical Partial Differential Equations in Finance Explained
It is then a natural idea to deﬁne approximations Ui(t) to u(si, t)
through the exact relation
U′
i(t) = c Ui(t) – Ui–1(t)
h
(1 ≤i ≤m, 0 < t ≤T),
(3.4)
with U0(t) = Um(t) by periodicity. This constitutes a ﬁrst semidiscret-
ization of the model convection equation with periodic condition.
Observe that (3.4) involves only one continuous independent variable,
namely t. Together with (3.2), one has obtained an initial value prob-
lem for a system of ODEs. It is convenient to consider (3.4) in vector
form. Let
U(t) = (U1(t), U2(t), . . . , Um(t))T
and
U′(t) = (U′
1(t), U′
2(t), . . . , U′
m(t))T,
where the symbol T denotes taking the transpose. Then the semi-
discrete system (3.4) can be formulated as
U′(t) = AU(t)
(0 < t ≤T),
(3.5)
with m × m matrix A given by
A = c
h
⎛
⎜⎜⎜⎜⎝
1
–1
–1
1
... ...
–1 1
–1 1
⎞
⎟⎟⎟⎟⎠
.
(3.6)
Instead of (3.3), the ﬁrst derivative of f can also be approximated by
f ′(s) ≈f (s + h) – f (s)
h
.
(3.7)
The right-hand side of (3.7) is called the ﬁrst-order forward formula
and can be interpreted as the slope of the line segment between the

3
Spatial Discretization I
19
points (s, f (s)) and (s + h, f (s + h)), see Figure 3.2. It gives rise to the
semidiscrete system
U′
i(t) = c Ui+1(t) – Ui(t)
h
(1 ≤i ≤m, 0 < t ≤T),
(3.8)
with Um+1(t) = U1(t) by periodicity. This can be written in the form
(3.5) with
A = c
h
⎛
⎜⎜⎜⎜⎝
–1 1
–1
1
... ...
–1 1
1
–1
⎞
⎟⎟⎟⎟⎠
.
(3.9)
For reasons of stability, which shall be explained in the next section,
the ﬁrst-order backward formula should only be used if c < 0 and the
ﬁrst-order forward formula only if c > 0. The combination is named
the ﬁrst-order upwind formula.
Considering values of f for arguments on both sides of s, yields the
approximation
f ′(s) ≈f (s + h) – f (s – h)
2h
.
(3.10)
The right-hand side of (3.10) is called the second-order central for-
mula (for convection) and is also visualized in Figure 3.2. It leads to
the semidiscrete system
U′
i(t) = c Ui+1(t) – Ui–1(t)
2h
(1 ≤i ≤m, 0 < t ≤T),
(3.11)
with U0(t) = Um(t) and Um+1(t) = U1(t), and is of the form (3.5) with
A = c
2h
⎛
⎜⎜⎜⎜⎝
0
1
–1
–1
0
1
... ... ...
–1
0 1
1
–1 0
⎞
⎟⎟⎟⎟⎠
.
(3.12)

20
Numerical Partial Differential Equations in Finance Explained
The truncation error of any given ﬁnite difference formula is
deﬁned as the exact derivative value minus the pertinent ﬁnite dif-
ference quotient. As their names suggest, the truncation errors for
the ﬁrst-order formulas are O(h), whereas for the second-order central
formula it is O(h2). This is readily veriﬁed by using Taylor’s theorem.
Accordingly, faster convergence to the PDE solution u as h ↓0 can be
expected when applying the latter formula.
For the second derivative of any given smooth function f : R →R
one has the approximation
f ′′(s) ≈f (s – h) – 2f (s) + f (s + h)
h2
.
(3.13)
The right-hand side of (3.13) is called the second-order central for-
mula (for diffusion). Considering this formula in the case of the pure
model diffusion equation ut(s, t) = duss(s, t) with periodic condition
leads to the semidiscrete system
U′
i(t) = d Ui–1(t) – 2Ui(t) + Ui+1(t)
h2
(1 ≤i ≤m, 0 < t ≤T),
(3.14)
where U0(t) = Um(t) and Um+1(t) = U1(t). This is again of the form
(3.5), with
A = d
h2
⎛
⎜⎜⎜⎜⎝
–2
1
1
1 –2
1
... ... ...
1 –2 1
1
1 –2
⎞
⎟⎟⎟⎟⎠
.
(3.15)
For ﬁnite difference discretization of diffusion, the second-order cent-
ral formula is mostly employed in practice. The truncation error for
this formula is O(h2).
To obtain semidiscretizations of the full model equation (2.3), one
can just combine semidiscretizations of its individual terms. If A1 and
A2 are any given matrices corresponding to the semidiscretized con-
vection and diffusion terms, respectively, then a semidiscretization of
(2.3) is given by A = A2+A1–rI with I the m×m identity matrix, where
the –rI part stems from the reaction term.

3
Spatial Discretization I
21
3.3
Stability
In this section we study the stability of the semidiscrete systems
constructed in Section 3.2. All these systems are of the form (3.5).
By virtue of the periodicity condition, all pertinent matrices A are
normal, that is, AAT = ATA. Consequently, for each matrix A, it holds
that A = VV–1 with certain unitary matrix V and diagonal matrix
 = diag(λ1, λ2, . . . , λm). The columns of V are the eigenvectors of A
and the diagonal entries of  are the eigenvalues of A.
Let i denote the imaginary unit. For the four matrices A from Sec-
tion 3.2 explicit expressions for their eigenvalues λk (1 ≤k ≤m) are
known:
(3.6) : λk = c
h (1 – cos (2πkh) + i sin (2πkh)) ,
(3.9) : λk = c
h (cos (2πkh) – 1 + i sin (2πkh)) ,
(3.12) : λk = ic
h sin (2πkh),
(3.15) : λk = –4d
h2 sin2 (πkh).
Hence, for the ﬁrst-order backward and forward formulas all eigenval-
ues lie on a circle in the complex plane with radius |c|
h and midpoints
( c
h, 0) and ( – c
h, 0), respectively. For the second-order central formula
for convection all eigenvalues lie on the imaginary axis, and for the
second-order central formula for diffusion all eigenvalues lie on the
negative real axis.
The stability analysis of semidiscrete systems deals with the propaga-
tion forward in time of perturbations in the initial vector. A given
semidiscretization is said to be stable if the error incurred at any given
time t > 0 can be bounded by a moderate constant multiplied by the
error at the initial time t = 0, where the constant is independent of the
spatial mesh width h and the initial error.
To measure the sizes of vectors, consider the naturally scaled
Euclidean norm
∥x∥2 =

h
m

i=1
|xi|2 1
2
whenever x = (x1, x2, . . . , xm)T ∈Cm.
(3.16)

22
Numerical Partial Differential Equations in Finance Explained
Let U0, U0 be any given two initial vectors and let the functions U, U
denote the corresponding solutions to (3.5) with A = VV–1 as above.
By linearity, the difference U – U is itself solution to the semidiscrete
system, with initial vector U0 – U0. Consider the transformation
Y(t) = V–1(U(t) – U(t)).
Then ∥Y(t)∥2 = ∥U(t) – U(t)∥2 since V is unitary, and there holds
Y′(t) = Y(t)
(0 < t ≤T).
The latter ODE system is decoupled,
Y′
k(t) = λkYk(t)
(0 < t ≤T, 1 ≤k ≤m),
with solution
Yk(t) = eλkt Yk(0)
(0 < t ≤T, 1 ≤k ≤m).
It readily follows that
∥U(t) – U(t)∥2 ≤max
1≤k≤m eℜλkt ∥U0 – U0∥2
(0 ≤t ≤T),
(3.17)
where ℜλ denotes the real part of any complex number λ. The factor
in the upper bound (3.17) is sharp when arbitrary initial perturbations
U0 – U0 are considered. Combining this bound with the eigenvalues
of the matrices (3.6), (3.9), (3.12), (3.15) speciﬁed above, it is directly
seen that the semidiscretization by:
• The ﬁrst-order backward formula is stable if c < 0,
• The ﬁrst-order forward formula is stable if c > 0,
• The second-order central formula for convection is stable for all c,
• The second-order central formula for diffusion is stable for all d > 0.
In all four cases the eigenvalues lie in the left-half of the complex plane,
so that
∥U(t) – U(t)∥2 ≤∥U0 – U0∥2
(0 ≤t ≤T).
(3.18)

3
Spatial Discretization I
23
This stability result, where initial errors do not grow, is often called
contractivity.
The semidiscretization given by the ﬁrst-order backward (forward)
formula is not stable if c > 0 (c < 0). This is a consequence of the
sharpness of the bound (3.17) and the fact that max1≤k≤m ℜλk →∞
as h ↓0.
It can be shown that each of the four stable semidiscretizations con-
verges, as h ↓0, to the exact solution u of the corresponding model
equation with periodic condition if the initial function u0 is sufﬁciently
smooth. The convergence behaviour is O(hp) in ∥· ∥2 where p is the
order of the ﬁnite difference formula.
3.4
Notes and References
The literature on ﬁnite difference formulas for partial differential equa-
tions is vast. A selection of general texts is [49, 65, 74, 81, 83, 86] and
books dealing with ﬁnancial option valuation applications include [11,
21, 34, 79, 85, 90, 94].
In this book we apply mostly the second-order central formulas for
convection and diffusion. There exist however (central and upwind)
ﬁnite difference formulas of arbitrarily high order that yield stable
semidiscretizations; compare the above references.
The stability analysis in this chapter relies upon the matrices A being
normal and is related to the famous von Neumann (Fourier) analysis
for full discretizations, see for instance [49, 67, 83]. In actual applic-
ations, the matrices A are usually nonnormal and then a rigorous,
useful stability analysis is often much more involved, see for example
[82, 87].

4
Spatial Discretization II
In this chapter we extend the basic semidiscretizations introduced in
Chapter 3 to the general convection-diffusion-reaction equation com-
bined with the various boundary conditions from Chapter 2. We then
discuss nonuniform spatial grids and consider the numerical treatment
of nonsmooth initial functions, which are omnipresent in ﬁnancial ap-
plications. The chapter concludes with a useful mixed central/upwind
discretization.
4.1
Boundary Conditions
Let the spatial domain (Smin, Smax) be bounded. For ease of presenta-
tion it will always be assumed that the general convection-diffusion-
reaction equation (2.1) is provided with a Dirichlet condition at the
lower boundary s = Smin,
u(Smin, t) = a0(t)
(0 ≤t ≤T),
where a0 is a given function.
Let m ≥3 be any given integer and let a spatial mesh width and
spatial grid points be given by
h = Smax – Smin
m
and
si = Smin + ih
(i = 0, 1, 2, . . . , m).
© The Author(s) 2017
25
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_4

26
Numerical Partial Differential Equations in Finance Explained
Similarly to Chapter 3, approximations Ui(t) to u(si, t) can be deﬁned
through ﬁnite difference discretization of the convection and diffu-
sion terms in (2.1). The semidiscretizations (3.4), (3.8), (3.11) and
(3.14) for the model convection and diffusion equations are directly
generalized to variable coefﬁcients upon replacing the convection and
diffusion constants c and d in there by c(si) and d(si), respectively.
Next, by the Dirichlet condition at the lower boundary, one immedi-
ately has U0(t) = a0(t). To complete the semidiscretization it remains
to deﬁne Um(t) at the upper boundary s = Smax. In the following
we successively discuss the three types of boundary conditions from
Chapter 2 (i) Dirichlet, (ii) Neumann and (iii) linear. The obtained
semidiscrete systems are of the form
U′(t) = AU(t) + g(t)
(0 < t ≤T),
(4.1)
where A is a given ν × ν matrix, g(t) for each t is a given ν-vector, and
integer
ν ∈{m – 1, m}.
For convenience, write ci = c(si), di = d(si), ri = r(si) for all i.
(i) A Dirichlet condition reads
u(Smax, t) = a1(t)
(0 ≤t ≤T),
with given function a1. In this case one directly has Um(t) = a1(t). Con-
sidering for example the second-order central formulas for convection
and diffusion at the grid points si for i = 1, 2, . . . , ν with ν = m – 1,
a semidiscrete system (4.1) is obtained with tridiagonal matrix A and
vector g(t) given by
A =
⎛
⎜⎜⎜⎜⎝
α1 γ1
β2 α2 γ2
... ...
...
βν–1 αν–1 γν–1
βν
αν
⎞
⎟⎟⎟⎟⎠
,
g(t) =
⎛
⎜⎜⎜⎜⎝
δ1(t)
0
...
0
δν(t)
⎞
⎟⎟⎟⎟⎠
,
(4.2)

4
Spatial Discretization II
27
where
αi = –2di
h2 – ri, βi = di
h2 – ci
2h, γi = di
h2 + ci
2h
(1 ≤i ≤m – 1),
(4.3)
and
δ1(t) = β1a0(t), δm–1(t) = γm–1a1(t).
(ii) A Neumann condition reads
us(Smax, t) = b1(t)
(0 ≤t ≤T),
with given function b1. In this case the value of the exact solution u
at s = Smax is unknown. Accordingly, an approximation Um(t) needs
to be deﬁned at this grid point. In view of the Neumann condition
the convection term us(s, t) does not require approximation, since it
is directly given there. It therefore sufﬁces to consider the diffusion
term. The second-order central formula at s = sm yields
uss(sm, t) ≈u(sm–1, t) – 2u(sm, t) + u(sm+1, t)
h2
,
with sm+1 = sm + h. The latter point lies outside the spatial domain,
however, and the question arises how to deal with it. Using the Neu-
mann condition, a useful idea is to replace the value of u at this virtual
point by the approximation
u(sm+1, t) ≈u(sm–1, t) + 2hb1(t).
This can be regarded as a linear extrapolation formula. Inserting into
the above, yields
uss(sm, t) ≈2u(sm–1, t) – 2u(sm, t) + 2hb1(t)
h2
,
where the right-hand side now involves values of u only inside the
spatial domain. The following natural deﬁnition for the approximation
Um(t) is then obtained,
U′
m(t) = 2dm
Um–1(t) – Um(t) + hb1(t)
h2
+ cmb1(t) – rmUm(t)
(0 < t ≤T).

28
Numerical Partial Differential Equations in Finance Explained
With the second-order central formulas for convection and diffusion at
the grid points s1, s2, . . . , sm–1 one arrives at a semidiscrete system (4.1)
with A and g(t) of the type (4.2) and ν = m. The entries αi, βi, γi for
1 ≤i ≤m – 1 are deﬁned by (4.3) and the last row of A is speciﬁed by
αm = –2dm
h2 – rm, βm = 2dm
h2 .
Next, the vector g(t) is given by
δ1(t) = β1a0(t), δm(t) =
2dm
h
+ cm

b1(t).
(iii) The linear boundary condition reads
uss(Smax, t) = 0
(0 ≤t ≤T).
In this case the value of the exact solution u at the upper boundary
is again unknown and an approximation Um(t) needs to be deﬁned at
this grid point. Clearly, the diffusion term vanishes and it remains to
consider the convection term. For this term it is common to select
the ﬁrst-order backward formula at s = sm. Thus only points inside
the spatial domain are used, as opposed to the second-order central
formula. This leads to the following deﬁnition for Um(t),
U′
m(t) = cm
Um(t) – Um–1(t)
h
– rmUm(t)
(0 < t ≤T).
A semidiscrete system (4.1) is obtained where A and g(t) are of the
type (4.2) with ν = m. The last row of the matrix A is now speciﬁed by
αm = cm
h – rm, βm = –cm
h ,
and the vector g(t) is given by
δ1(t) = β1a0(t), δm(t) = 0.

4
Spatial Discretization II
29
4.2
Nonuniform Grids
In ﬁnancial applications it is often natural and beneﬁcial to employ
nonuniform spatial grids instead of uniform grids. In this section we
consider how to deﬁne suitable nonuniform grids and generalize the
ﬁnite difference formulas introduced in Chapter 3. Ample numerical
illustrations shall be presented in the subsequent chapters.
Nonuniform spatial grids are often used to concentrate grid points
near one or more given points of interest in the spatial domain,
for instance the strike. Such grids can be conveniently constructed
through a given continuous function ϕ : [ξmin, ξmax] →[Smin, Smax]
with ϕ(ξmin) = Smin and ϕ(ξmax) = Smax that is strictly increasing and has
a relatively gentle slope near the preimages of the points of interest.
One then chooses a uniform grid in the artiﬁcial ξ-domain and maps
this by ϕ to a nonuniform grid in the actual s-domain,
si = ϕ(ξi) with ξi = ξmin + iξ, ξ = ξmax – ξmin
m
(i = 0, 1, 2, . . . , m).
Let hi = si – si–1 for 1 ≤i ≤m denote the variable spatial mesh
widths. We always assume that the spatial grid is smooth in the sense
that there exist real numbers C0, C1, C2 > 0 independent of i and m
such that the mesh widths satisfy
C0 ξ ≤hi ≤C1 ξ and |hi+1 – hi| ≤C2 (ξ)2 .
This means that the mesh widths hi tend to zero at the rate of ξ
and vary gradually. A simple analysis shows that the nonuniform grid
is smooth under weak conditions on the mapping ϕ.
For the numerical experiments in this book we shall consider a
particular choice for ϕ.
Example 4.2.1
Let K be any given point of interest in the spatial do-
main. Let the mapping ϕ be deﬁned, via the hyperbolic sine
function, by
ϕ(ξ) = K + L sinh (ξ)
(ξmin ≤ξ ≤ξmax),
with parameter L > 0 and
ξmin = sinh–1 ((Smin – K)/L) and ξmax = sinh–1 ((Smax – K)/L).

30
Numerical Partial Differential Equations in Finance Explained
It is readily veriﬁed that ϕ is continuous and strictly increas-
ing and that the spatial grid generated by this mapping is
smooth. The parameter L controls the fraction of grid points
si that lie in a neighbourhood of K, where a smaller value
L yields a denser grid around K. Here we heuristically select
L = K/3. As an illustration, Figure 4.1 displays the graph of
ϕ if K = 100, Smin = 0, Smax = 3K. Clearly, the mapping ϕ has
a relatively gentle slope near ξ = 0, the preimage of s = K.
A uniform grid in ξ thus yields a nonuniform grid in s with
relatively many points si near K.
−2
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
0
50
s
100
150
200
250
300
Figure 4.1
Mapping ϕ deﬁned in Example 4.2.1
Consider next any given smooth function f : [Smin, Smax] →R. Then
for the ﬁrst derivative one has the following ﬁnite difference approx-
imations pertinent to a nonuniform s-grid.
First-order backward formula:
f ′(si) ≈f (si) – f (si–1)
hi
(0 < i ≤m).
(4.4)

4
Spatial Discretization II
31
First-order forward formula:
f ′(si) ≈f (si+1) – f (si)
hi+1
(0 ≤i < m).
(4.5)
Second-order central formula A:
f ′(si) ≈f (si+1) – f (si–1)
hi + hi+1
(0 < i < m).
(4.6)
Second-order central formula B:
f ′(si) ≈ωi,–1 f (si–1) + ωi,0 f (si) + ωi,1 f (si+1)
(0 < i < m),
(4.7)
with
ωi,–1 =
–hi+1
hi(hi + hi+1) , ωi,0 = hi+1 – hi
hihi+1
, ωi,1 =
hi
hi+1(hi + hi+1) .
For the second derivative one has
Second-order central formula:
f ′′(si) ≈ωi,–1 f (si–1) + ωi,0 f (si) + ωi,1 f (si+1)
(0 < i < m),
(4.8)
with
ωi,–1 =
2
hi(hi + hi+1) , ωi,0 =
–2
hihi+1
, ωi,1 =
2
hi+1(hi + hi+1) .
These ﬁnite difference formulas generalize those from Chapter 3 to
arbitrary, nonuniform grids. Notice that there are two generaliza-
tions, (4.6) and (4.7), of the second-order central formula (3.10) for
convection. They are both often employed in computational ﬁnance.
The formulas (4.6), (4.7), (4.8) all possess a second-order trunca-
tion error for smooth spatial grids. If the grid is not smooth, then the

32
Numerical Partial Differential Equations in Finance Explained
central formulas (4.6) and (4.8) for convection and diffusion, respect-
ively, reduce to only ﬁrst-order in general. As mentioned previously,
however, the latter situation will not be considered in this book.
The actual application of the ﬁnite difference formulas (4.4)–(4.8)
for the spatial discretization on nonuniform grids of the general
convection-diffusion-reaction equation (2.1) is straightforward. Also
the numerical treatment of the three types of boundary conditions
discussed in Section 4.1 is directly extended to nonuniform grids. In
all cases, this leads to a semidiscrete system (4.1) with given matrix A
and vector g(t) of the type (4.2).
4.3
Nonsmooth Initial Data
A main feature of ﬁnancial options is that their payoff functions are usu-
ally not smooth. For call and put options, they are continuous on their
domain, but not differentiable at the strike. For other types of options
the payoffs may not even be continuous at one or more given points.
An example is provided by a cash-or-nothing call option, which has
the payoff
φ(s) =

0 for s < K,
D for s > K.
(4.9)
This option pays out a prescribed ﬁxed cash amount D > 0 whenever
the underlying asset price ends up above the strike price at maturity,
ST > K, and it pays out nothing whenever it ﬁnishes below the strike
price, ST < K.
The nonsmoothness of payoff functions requires careful attention in
the numerical solution of initial-boundary value problems for option
valuation PDEs (recall that the payoff deﬁnes the initial condition).
Finite difference approximations rely upon sufﬁcient smoothness of
the pertinent functions and nonsmooth payoffs can therefore give
rise to an undesirable convergence behaviour of the numerically ob-
tained option prices; this will be illustrated by numerical experiments
in Chapter 5. The points where the payoffs are nonsmooth often lie
in regions of interest in applications, where one wishes to obtain reli-
able option prices. Accordingly, it is important to consider an effective
numerical treatment.

4
Spatial Discretization II
33
It can be argued that the pointwise representation of a payoff func-
tion φ on the spatial grid, which deﬁnes the initial vector U(0) for the
semidiscrete system, does not capture sufﬁcient information in gen-
eral about φ near the points of nonsmoothness. A useful idea is to
replace, for each grid point si nearest to any given point of nonsmooth-
ness, the value φ(si) occurring in U(0) by the average value of φ over
a neighbourhood of si. This can be expressed as an integral,
1
hi+1/2
 si+1/2
si–1/2
φ(s) ds,
(4.10)
where
si–1/2 = 1
2(si–1 + si), si+1/2 = 1
2(si + si+1), hi+1/2 = si+1/2 – si–1/2.
The value (4.10) is called the cell average of φ over [si–1/2, si+1/2] and
the approach is referred to as a smoothing technique. In subsequent
chapters the effectiveness of this simple technique is demonstrated by
ample numerical experiments. For many payoffs, the integral (4.10)
is readily calculated. Otherwise a numerical integration method, for
instance the trapezoidal rule, can be applied to accurately approxim-
ate it.
4.4
Mixed Central/Upwind Discretization
A useful variant of the standard second-order central discretization of
the Black–Scholes PDE, with Dirichlet or Neumann boundary condi-
tions and r > 0, is given by switching (upfront) from the second-order
central formula for convection to the ﬁrst-order forward formula at
each grid point si with 1 ≤i ≤ν such that βi (see Section 4.1) is
strictly negative. For a general nonuniform grid, this means that one
switches if
si
hi
< r
σ 2 (for central formula A) and
si
hi+1
< r
σ 2 (for central formula B).
Both inequalities can be rewritten in terms of the so-called cell Péclet
number
c(s)h
d(s)
with c(s) = rs, d(s) = 1
2σ 2s2.

34
Numerical Partial Differential Equations in Finance Explained
If an inequality holds, one says that the Péclet condition is violated.
For typical values of r, σ this happens for at most a small fraction of
the set of grid points. Moreover, these points usually lie far away from
the region of interest. Therefore, little adverse impact on the spatial
accuracy in this region is to be expected. The mixed central/upwind
discretization deﬁned above possesses the important feature that –A is
an M-matrix. The slightly stronger condition is also fulﬁlled that
⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
βi ≥0
(2 ≤i ≤ν),
γi ≥0
(1 ≤i ≤ν – 1),
α1 + γ1 ≤–r,
αi + βi + γi = –r
(2 ≤i ≤ν – 1),
αν + βν ≤–r.
(4.11)
This condition implies many favourable properties for the semidis-
cretization. In particular, contractivity in the maximum norm ∥· ∥∞
holds: if U0, U0 are any given two initial vectors and U, U are the
corresponding solutions to (4.1), then
∥U(t) – U(t)∥∞≤∥U0 – U0∥∞
(0 ≤t ≤T).
(4.12)
Furthermore, the semidiscretization is positivity preserving:1
U0 ≥0 and g(t) ≥0 (0 ≤t ≤T)
⇒
U(t) ≥0 (0 ≤t ≤T),
(4.13)
where inequalities for vectors are to be interpreted componentwise.
The semidiscretization is also free from spurious oscillations. We shall
return to these properties for the full discretization in Chapter 7. Even
though it has been considered here for the Black–Scholes PDE, the
mixed central/upwind spatial discretization is readily extended and
beneﬁcial in many, more advanced applications.
1 More precisely phrased: nonnegativity preserving.

4
Spatial Discretization II
35
4.5
Notes and References
For a subtle analysis concerning the discretization of the linear bound-
ary condition at the upper boundary for the Black–Scholes PDE, we
refer to [40, 92].
The type of nonuniform grid constructed in Example 4.2.1 is
frequently used in ﬁnancial applications, see for instance [85].
The terminology of formula A and formula B for (4.6) and (4.7),
respectively, has been adopted from [88].
The treatment of nonsmooth initial data in the semidiscretization of
ﬁnancial PDEs has been discussed for instance in [71, 85]. A general,
classical reference is for example [55].
The mixed central/upwind discretization has been considered in for
example [33, 40, 70, 92]. Proofs of the properties (4.12), (4.13) under
(4.11) can be found in for instance [49]. A general reference to M-
matrices is [4].

5
Numerical Study: Space
In this chapter we study by numerical experiments the performance
of spatial discretizations introduced in Chapters 3 and 4. Here a call
option under the Black–Scholes framework, discussed in Chapter 1, is
considered. This forms a prototype for many, more advanced ﬁnancial
applications and the obtained insights are of general importance.
Consider the Black–Scholes PDE (1.3) on the truncated spatial
domain
(Smin, Smax) = (0, 3K)
and choose Dirichlet conditions (1.5) and (2.5) at the two boundary
points,
u(0, t) = 0 and u(Smax, t) = Smax – e–rtK
(0 ≤t ≤T).
The initial condition is given as usual by the payoff,
u(s, 0) = φ(s) = max (s – K, 0)
(0 < s < Smax).
For the ﬁnancial parameters, the values (1.8) are taken.
We numerically examine in this chapter the spatial discretization
error at t = T deﬁned by
ε(m) = (εi(m))m
i=0
with
εi(m) = u(si, T) – Ui(T)
(0 ≤i ≤m),
© The Author(s) 2017
37
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_5

38
Numerical Partial Differential Equations in Finance Explained
where u denotes the exact call option value function given by the
Black–Scholes formula (1.6) and Ui denotes the exact1 semidiscrete
solution function corresponding to grid point si. The dependence of
the spatial discretization error on the number of spatial grid points is
of main interest and this is therefore indicated in the notation. Let
e(m) = max{|εi(m)|: 0 ≤i ≤m},
that is, the maximum norm of ε(m). For ﬁnancial applications the
maximum norm is often the most relevant norm, as one wishes to
uniformly control the accuracy of numerically approximated option
prices.
5.1
Cell Averaging
Consider a uniform spatial grid with m = 50 and semidiscretization by
the second-order central formulas (3.10) and (3.13) for convection and
diffusion. The top of Figure 5.1 displays the spatial error components
εi(50) versus si. The spatial error is reasonably small throughout the
spatial domain, with the largest errors occurring in a region around the
strike. Consider next an increase of m by just 1 to m = 51. Then a sim-
ilar accuracy might be expected. The bottom of Figure 5.1 shows the
result, that is, εi(51) versus si. Contrary to expectation, the spatial error
is now substantially larger. In particular, the error increases by approx-
imately a factor 7 around the strike. As it happens, this unfavourable
outcome is not a coincidence.
Figure 5.2 displays, in double logarithmic scale, the norm of the
spatial error e(m) versus 1/m for all 10 ≤m ≤100. Clearly, one ob-
serves that e(m) is strongly oscillating as a function of m. When m
increases by 1, there is a possible increase in the spatial error with
a factor of about 3.5. The reason for this undesirable behaviour lies
in the nonsmoothness of the initial function at the strike. A close in-
spection reveals that the location of K relative to the spatial grid is
correlated to the relative size of e(m). In the present example, either
K belongs to the spatial grid (if m is an integer multiple of three) or it
has a distance of h/3 to the nearest spatial grid point. Figure 5.2 shows
1 When computing discretization errors, the semidiscrete solution is approximated to high
accuracy by applying a suitable temporal discretization method using a very small step size.

5
Numerical Study: Space
39
0
50
100
150
200
250
300
0
s
s
50
100
150
200
250
300
−0.04
0
0.04
0.08
−0.04
0
0.04
0.08
Figure 5.1
Spatial error εi(m) versus si for m = 50 (top) and m = 51 (bot-
tom). Semidiscretization on uniform grid by second-order central formulas. No
cell averaging
that e(m) is always relatively large in the former case, and always re-
latively small in the latter case. It turns out to be optimal for spatial
accuracy if the strike is located exactly midway between two success-
ive grid points. This does not occur in the present example, but could
be accomplished for instance by changing Smax.
Here we consider application of the cell averaging technique from
Chapter 4. Thus the pointwise value φ(si) at the grid point si closest to
K is replaced in the initial vector U(0) by the average value of φ over
the cell [si–1/2, si+1/2], see (4.10). The result is shown in Figure 5.3. One
observes that the strong oscillations in e(m) as a function of m have
disappeared. Moreover, compared to Figure 5.2, the obtained errors
are favourable. With cell averaging, e(m) is seen to be approximately
equal to Cm–2 with certain constant C > 0. Indeed, taking logarithms,

40
Numerical Partial Differential Equations in Finance Explained
10−2
10−1
10−3
10−2
10−1
100
1/m
e
Figure 5.2
Spatial error e(m) versus 1/m for all 10 ≤m ≤100. Semidiscretization
on uniform grid by second-order central formulas. No cell averaging
10−2
10−1
10−3
10−2
10−1
100
1/m
e
Figure 5.3
Spatial error e(m) versus 1/m for all 10 ≤m ≤100. Semidiscretization
on uniform grid by second-order central formulas. With cell averaging

5
Numerical Study: Space
41
0
s
50
100
150
200
250
300
Figure 5.4
Spatial grid points corresponding to Example 4.2.1 if m = 50
this statement is equivalent to
log e(m) ≈2 log (1/m) + log C,
and Figure 5.3 reveals such an approximately linear relationship
between log e(m) and log (1/m). Hence, a second-order convergence
behaviour of the spatial discretization is attained, which is as desired.
5.2
Nonuniform Grids
As alluded to in Chapter 4, it is often natural and beneﬁcial to use
nonuniform spatial grids in ﬁnancial applications. For the numerical
experiments we consider the smooth, nonuniform grid constructed in
Example 4.2.1. As an illustration Figure 5.4 shows the corresponding
spatial grid points for m = 50. It is clear that the grid is densest around
the strike. This forms the region of interest in practice, as asset prices
do not lie far away in general from the chosen strike.
For the semidiscretization the second-order central formulas from
Chapter 4 for nonuniform grids are employed and cell averaging is
applied as in the previous section. Recall that for nonuniform grids
there are two ﬁnite difference formulas, A and B, for the convection
part, see (4.6) and (4.7). Figure 5.5 displays the spatial errors e(m)
versus 1/m, where bullets correspond to formula A and squares to
formula B. As a ﬁrst main observation, with both formulas second-
order convergence of the spatial discretization is attained. Next, the

42
Numerical Partial Differential Equations in Finance Explained
10−2
10−1
10−3
10−2
10−1
100
1/m
e
Figure 5.5
Spatial error e(m) versus 1/m for all 10 ≤m ≤100. Semidiscretization
on nonuniform grid by second-order central formulas. Formula A for convection:
bullets. Formula B for convection: squares. With cell averaging
approximations obtained by using formula B are slightly more accur-
ate than those obtained by using formula A. Comparing to Figure 5.3,
the approximations on the nonuniform grid are with both formulas
substantially more accurate than those on the uniform grid. In particu-
lar, with formula B the gain in accuracy in the present example is more
than a factor of 4.
5.3
Boundary Conditions
In this section we take a closer look at the inﬂuence of the boundary
condition at s = Smax. Boundary conditions that are imposed in prac-
tice at the truncated boundaries usually introduce an error, as they are
not satisﬁed by the exact option value function. Thus the spatial error
component εm(m) is nonzero in general.
In the situation of Sections 5.1 and 5.2, where a Dirichlet condi-
tion has been applied, a direct computation using the Black–Scholes
formula (1.6) yields that εm(m) is equal to 1.8 × 10–5 for all m. This
error is always dominated in the experiments in these sections by the

5
Numerical Study: Space
43
errors around the strike and, consequently, it does not show up in
Figures 5.2, 5.3, 5.5. The same is found when the Dirichlet condition
(2.5) at s = Smax is replaced by the Neumann condition (2.6) or the
linear condition (2.7) and the pertinent Figures 5.2, 5.3, 5.5 remain
visually unchanged.
In the experiments so far, 10 ≤m ≤100. If the number of grid
points is further increased, then εm(m) eventually starts to dominate
the spatial error over the domain [0, Smax] and the norm of the spatial
error, e(m), levels off at |εm(m)|. In practice, however, only a region
of interest, such as 1
2K < s <
3
2K, is of importance; compare Sec-
tion 2.3. A natural alternative measure for spatial accuracy is therefore
the (norm of the) spatial discretization error on a region of interest,
eROI(m) = max{|εi(m)|: 0 ≤i ≤m, 1
2K < si < 3
2K}.
Figure 5.6 displays e(m) and eROI(m) versus 1/m for 50 different values
m between 100 and 1000. Here the Black–Scholes PDE is semidiscret-
ized on the nonuniform grid from Example 4.2.1, where formula B is
10−3
10−2
10−5
10−4
10−3
10−2
1/m
e
Figure 5.6
Spatial errors e(m) (dark squares) and eROI(m) (light squares) versus
1/m for 100 ≤m ≤1000. Semidiscretization on nonuniform grid by second-order
central formulas. Formula B for convection. Linear boundary condition at s = Smax.
With cell averaging

44
Numerical Partial Differential Equations in Finance Explained
employed for the convection part, and cell averaging is applied. The
linear boundary condition at s = Smax has been chosen (the results for
the Dirichlet and Neumann conditions are similar). One observes that
e(m) (dark squares) stalls at a level of about 2×10–5, which is the error
at s = Smax. On the other hand, eROI(m) (light squares) continues to
decrease with m according to a second-order convergence behaviour,
which is as desired. The latter, favourable result is attributed to the fact
that, due to the diffusion term in the Black–Scholes PDE, an error at
the truncated boundary Smax has a negligible impact in the region of
interest whenever this upper boundary is taken sufﬁciently large.

6
The Greeks
6.1
The Greeks
Along with the fair option values, the so-called Greeks are of key
importance in ﬁnancial practice. These quantities represent the sens-
itivities of an option value to changes in the underlying ﬁnancial
variables and parameters. A main use of Greeks is to hedge an option
during its lifetime, that is, to reduce or eliminate risk. In mathematical
terms, they are the partial derivatives of the option value with respect
to its underlying variables and parameters.
In the Black–Scholes framework four well-known Greeks are
delta : ∂u
∂s , gamma : ∂2u
∂s2 , vega : ∂u
∂σ , rho : ∂u
∂r .
These quantify sensitivities to changes in, respectively, the un-
derlying asset price (to ﬁrst and second order), the volatility and the
risk-free interest rate. Notice that vega is not an actual Greek letter.
For a call option one can derive from (1.6a) the following formulas
(whenever s > 0, 0 < t ≤T):
delta:
N (d1),
(6.1a)
gamma:
N ′(d1)/(sσ
√
t ),
(6.1b)
vega:
s
√
t N ′(d1),
(6.1c)
rho:
te–rtKN (d2).
(6.1d)
© The Author(s) 2017
45
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_6

46
Numerical Partial Differential Equations in Finance Explained
0
1
delta
0
0.02
gamma
0
K
2K
3K
0
40
vega
0
100
rho
0
K
2K
3K
0
K
2K
3K
0
K
2K
3K
s
s
s
s
Figure 6.1
Greeks for a call option for t = T and parameter set (1.8)
For a put option similar formulas are valid; these can be obtained dir-
ectly from (1.6b) or by using the put-call parity (1.7). As an illustration
Figure 6.1 displays the graphs of the four Greeks (6.1) in the case of
parameter set (1.8) and t = T.
Delta and gamma appear as terms in Black–Scholes PDE, whereas
vega and rho do not. Indeed, the former two Greeks concern the in-
dependent variable s, whereas the latter two concern parameters. For
each Greek one can derive a convenient separate PDE. Consider for ex-
ample vega and regard the option value u = u(s, t;σ) now as a function
of three variables: s, t and σ. Then vega is given by
v(s, t) = ∂u
∂σ (s, t;σ).
Assuming sufﬁcient smoothness of the function u, differentiation of all
terms in the Black–Scholes PDE with respect to σ readily yields
vt(s, t) = 1
2σ 2s2vss(s, t) + σs2uss(s, t) + rsvs(s, t) – rv(s, t)
(6.2)

6
The Greeks
47
for s > 0 and 0 < t ≤T. Here the dependence of u on σ has been
suppressed again in the notation. The PDE (6.2) for vega is similar to
the Black–Scholes PDE (1.3) for the option value. The additional term
σs2uss(s, t) in (6.2) stems from application of the product rule.
For most types of options the initial and boundary conditions asso-
ciated with (1.3) are independent of the volatility. Upon differentiation
to σ, homogeneous initial and boundary conditions for (6.2) are then
obtained.
6.2
Numerical Study
The basic approach for numerically approximating the Greeks is by
straightforward use of ﬁnite differences. Here, given an option value
for a set of variables and parameters, one computes one or more
additional option values for perturbed (or “bumped”) values of the
variable or parameter of interest while keeping all others ﬁxed, and
then computes an appropriate ﬁnite difference.
If a Greek appears itself as a term in the option valuation PDE, such
as delta or gamma in the Black–Scholes PDE, then a ﬁnite difference
approximation is directly available at essentially no cost, since it is
intrinsic to the spatial discretization of the PDE. Hence, for each option
value on the spatial grid, the value of this Greek is immediately at hand.
If a Greek does not appear itself in the option valuation PDE, then
in the basic approach one numerically solves this PDE for (one, two
or more) additional, perturbed values of the parameter of interest
and then takes an appropriate ﬁnite difference. A more natural and
efﬁcient approach in this case is to numerically solve the PDE corres-
ponding to this Greek, simultaneously with the PDE for the option
value. This requires only little extra implementation work.
For a numerical illustration consider the call option under the
Black–Scholes framework with parameter values (1.8). As in Chapter 5,
we truncate the spatial domain to (0, 3K), select Dirichlet boundary
conditions, semidiscretize on the nonuniform grid from Example 4.2.1
with second-order central formulas, using formula B for convection,
and employ cell averaging. The Greeks delta and gamma are then
approximated by applying the second-order central formulas (4.7)
and (4.8), respectively, to the obtained option values on the spatial
grid. The Greek vega is approximated by numerically solving the PDE

48
Numerical Partial Differential Equations in Finance Explained
(6.2) along with the Black–Scholes PDE, on the same grid and in the
same fashion. The Greek rho is approximated similarly to vega, by nu-
merically solving the associated PDE. To assess the accuracy of the
approximated Greeks we deﬁne, analogously to Chapter 5 for the op-
tion value and with reference to (6.1), the spatial discretization errors
εd(m), εg(m), εv(m), εr(m) for delta, gamma, vega and rho, respectively,
with maximum norms ed(m), eg(m), ev(m), er(m). Figures 6.2, 6.3, 6.4,
6.5 respectively display, as squares, the latter four quantities versus
1/m for all 10 ≤m ≤100. One readily observes a nice second-order
convergence behaviour in all four cases. For comparison, the results
have been added to the ﬁgures where a uniform grid is employed.
These are indicated by bullets. Whereas they also show a second-order
convergence behaviour for all four Greeks, the accuracy is signiﬁcantly
lower than with the nonuniform grid, analogously to what was found
in Chapter 5 for the case of the option value. Finally, we note that
Figures 6.2, 6.3, 6.4, 6.5 remain visually unchanged if the other two
boundary conditions, Neumann and linear, are applied for the option
value function at the upper boundary.
10−2
10−1
10−4
10−3
10−2
10−1
1/m
ed
Figure 6.2
Delta spatial error ed(m) versus 1/m for all 10 ≤m ≤100. Semidis-
cretization by second-order central formulas. Formula B for convection. With cell
averaging. Uniform grid: bullets. Nonuniform grid: squares

6
The Greeks
49
10−2
10−1
10−5
10−4
10−3
10−2
1/m
eg
Figure 6.3
Gamma spatial error eg(m) versus 1/m for all 10 ≤m ≤100. Semidis-
cretization by second-order central formulas. Formula B for convection. With cell
averaging. Uniform grid: bullets. Nonuniform grid: squares
10−2
10−1
10−2
10−1
100
101
1/m
ev
Figure 6.4
Vega spatial error ev(m) versus 1/m for all 10 ≤m ≤100. Semidis-
cretization by second-order central formulas. Formula B for convection. With cell
averaging. Uniform grid: bullets. Nonuniform grid: squares

50
Numerical Partial Differential Equations in Finance Explained
10−2
10−1
10−2
10−1
100
101
1/m
er
Figure 6.5
Rho spatial error er(m) versus 1/m for all 10 ≤m ≤100. Semidis-
cretization by second-order central formulas. Formula B for convection. With cell
averaging. Uniform grid: bullets. Nonuniform grid: squares
6.3
Notes and References
For an in-depth discussion of the Greeks in ﬁnance, see for example
[47, 57, 90].
In the situation where many different Greeks need to be computed,
the so-called adjoint method is very effective. Applications of the ad-
joint method in the context of ﬁnancial PDEs are given in for example
[10, 26].

7
Temporal Discretization
7.1
The θ-Methods
In this chapter we turn to the second step in the MOL approach,
that is the discretization in time of the obtained semidiscrete systems;
compare Chapter 3. We discuss a well-known family of temporal dis-
cretization methods in ﬁnance, the so-called θ-methods, where θ ∈
[0, 1] is a parameter.
Consider ﬁrst an initial value problem for a general system of ODEs,
U′(t) = F(t, U(t))
(0 < t ≤T),
U(0) = U0,
(7.1)
with given function F : [0, T] × Rν →Rν and given vector U0 ∈Rν.
Let N ≥1 be any given integer and deﬁne step size t = T/N and tem-
poral grid points tn = nt. Then the θ-method successively generates,
in a one-step fashion, approximations Un to U(tn) for n = 1, 2, . . . , N by
Un = Un–1 + (1 – θ)t F(tn–1, Un–1) + θt F(tn, Un).
(7.2)
Three notable instances of the θ-method are:
• θ = 0 : forward Euler method,
• θ = 1
2 : Crank–Nicolson method or trapezoidal rule,
• θ = 1 : backward Euler method.
© The Author(s) 2017
51
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_7

52
Numerical Partial Differential Equations in Finance Explained
If θ = 0, then the method is explicit, and computing the approximation
Un in each time step is straightforward and cheap. If θ =/ 0, then the
method is implicit and in each time step a system of algebraic equa-
tions needs to be solved in order to determine Un, which is obviously
more expensive. As will be seen, however, implicit methods are to be
preferred in general for the applications under consideration.
In this book the system of ODEs in (7.1) always stands for a
semidiscrete system of the form (4.1). Then (7.2) becomes
Un = Un–1 + (1 – θ)t [AUn–1 + g(tn–1)] + θt [AUn + g(tn)].
(7.3)
The vector Un represents the fully discrete approximation to the ex-
act solution u of the pertinent PDE on the spatial grid at time level tn.
Slightly rewritten, the recurrence relation (7.3) reads
(I – θtA)Un = (I + (1 – θ)tA)Un–1 + (1 – θ)t g(tn–1) + θt g(tn),
where I denotes the ν×ν identity matrix. Thus, if θ is nonzero, a linear
system of equations for Un needs to be solved, involving the matrix
I – θtA.
This matrix is independent of the step number n. It is therefore con-
venient to determine a LU factorization1 of it once, beforehand, and
employ this in all time steps to compute the vectors Un. In many
applications, the matrix A is tridiagonal and then this approach is
highly efﬁcient. Given the LU factorization of I – θtA, the number
of ﬂoating-point arithmetic operations per time step to solve the linear
system is directly proportional to the size ν of A, which is very favour-
able. This remains valid whenever A is a banded matrix with a ﬁxed
bandwidth, that is, independent of ν.
7.2
Stability and Convergence
Let ∥· ∥be any given norm on Rν and let the induced matrix norm on
Rν×ν be denoted the same. Standard convergence theory for temporal
1 This decomposes any given matrix into the product of a lower triangular matrix L and an
upper triangular matrix U.

7
Temporal Discretization
53
discretization methods applied to a given system (7.1) yields that if F
is sufﬁciently smooth, then there exists a constant C such that
∥U(tn) – Un∥≤C(t)q
whenever 1 ≤n ≤N, t ↓0,
(7.4)
where q = 1 (if θ =/ 1
2) and q = 2 (if θ = 1
2). Hence, the forward and
backward Euler methods are ﬁrst-order convergent in time and the
Crank–Nicolson method is second-order convergent in time. There is
a catch, however, when this temporal convergence result is used in
the case of semidiscrete systems. The point is that an error constant C
is guaranteed to exist for a ﬁxed ODE system, but not necessarily for
a whole class of ODE systems. It is the latter situation that is relevant
here, since one is naturally interested in letting the spatial mesh width
h tend to zero, and then one arrives at an inﬁnite class of ODE systems
of unbounded size. It is not evident that a constant C exists with the
crucial property that it is uniformly valid for such a class of systems,
under a mild condition on the step size t. A complete analysis of
this topic is beyond the scope of this book. We shall obtain valuable
insight here however by studying stability, which is of fundamental
importance in its own right as well as to proving convergence.
Consider the simple scalar test problem
U′(t) = λU(t)
(t > 0),
U(0) = U0,
(7.5)
where λ denotes any given complex constant. Application of the θ-
method in the case of test problem (7.5) yields
Un = R(tλ)Un–1
(n = 1, 2, 3, . . . )
(7.6)
with rational function R : C →C given by
R(z) = 1 + (1 – θ)z
1 – θz
(z ∈C).
This is called the stability function of the θ-method. The recurrence
relation (7.6) is stable with respect to perturbations in the initial value

54
Numerical Partial Differential Equations in Finance Explained
U0 if and only if the modulus |R(tλ)| ≤1. Accordingly, the stability
region of the θ-method is deﬁned by
S = {z : z ∈C, |R(z)| ≤1}.
By elementary complex analysis it is readily shown that
S =
⎧
⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩

z : |z + ρ| ≤ρ

if 0 ≤θ < 1
2,

z : ℜz ≤0

if θ = 1
2,

z : |z + ρ| ≥–ρ

if
1
2 < θ ≤1,
where ρ = (1–2θ)–1. Figures 7.1, 7.2, 7.3 display the respective stability
regions for the values θ = 0, 1
2, 1.
One easily veriﬁes that test problem (7.5) is itself stable with respect
to perturbations in U0 if and only if ℜλ ≤0. In view of this, a natural
stability requirement on a numerical time-stepping method is that it
is stable in the application to (7.5) whenever ℜλ ≤0 and t > 0
(thus without any restriction on the step size). This property is called
A-stability. It means that the left-half of the complex plane is contained
−2
−1
0
1
2
−3
−2
−1
0
1
Figure 7.1
Stability region θ-method with θ = 0 (shaded)

7
Temporal Discretization
55
−3
−2
−1
0
1
−2
−1
0
1
2
Figure 7.2
Stability region θ-method with θ = 1
2 (shaded)
−3
−2
−1
0
1
−2
−1
0
1
2
Figure 7.3
Stability region θ-method with θ = 1 (shaded)
in the stability region. For the θ-method there holds
{z : ℜz ≤0} ⊂S
⇐⇒
1
2 ≤θ ≤1.
Hence, the Crank–Nicolson and backward Euler methods are both
A-stable, whereas the forward Euler method is not. If in addition to
A-stability it also holds that R(z) →0 for z ∈C with z →∞, then the

56
Numerical Partial Differential Equations in Finance Explained
method is said to be L-stable. The θ-method is L-stable if and only if
θ = 1, that is, only in the case of the backward Euler method.
A-stability and L-stability form key concepts, which are important to
the stability analysis of temporal discretization methods in applications
that are far more general than the linear, scalar test problem (7.5).
We analyze in the following the stability of the θ-method applied
to the semidiscretizations of the model convection and diffusion
equations with periodic condition considered in Chapter 3. These
semidiscretizations are all of the form (3.5) with certain m×m matrix A.
Application of the θ-method yields
Un = R(tA)Un–1
(n = 1, 2, 3, . . . ),
where R(tA) is the matrix deﬁned by
R(tA) = (I – θtA)–1(I + (1 – θ)tA),
provided I –θtA is invertible. The temporal discretization is said to be
unconditionally stable in the norm ∥· ∥if there exists a real constant
M such that
∥R(tA)n∥≤M
whenever n ≥1, nt ≤T, t > 0, h > 0.
(7.7)
If this bound on the powers of R(tA) is fulﬁlled under a restriction
t ≤ψ(h) with certain positive function ψ, then the temporal discret-
ization is said to be conditionally stable. It is crucial that the constant
M is independent in particular of the spatial mesh width h, in line with
the discussion on convergence above. Further, for practical relevance,
M has to be of moderate size.
Assume ∥· ∥= ∥· ∥2. For each semidiscretization from Chapter 3
the pertinent matrix A is normal and A = VV–1 with unitary matrix
V and diagonal matrix  = diag(λ1, λ2, . . . , λm). Using this, one has
R(tA)n = VR(t)n V–1 and
∥R(tA)n∥2 = ∥R(t)n∥2 = max
1≤k≤m |R(tλk)|n.
The following neat equivalence is then directly obtained:
∥R(tA)n∥2 ≤1 (n ≥1)
(7.8)
⇕
tλk ∈S (1 ≤k ≤m).
(7.9)

7
Temporal Discretization
57
The condition (7.9) is called the eigenvalue condition. It only involves
the step size t, the eigenvalues of A and the stability region S. We
study this condition in the case of the different semidiscretizations
from Chapter 3.
Consider ﬁrst the pure model convection equation with c < 0 (and
periodic condition) that is semidiscretized by the ﬁrst-order backward
formula. In Section 3.3 it was seen that all eigenvalues of the pertinent
matrix A lie on a circle with midpoint ( c
h, 0) and radius |c|
h . All eigen-
values are therefore contained in the left-half of the complex plane.
Hence, if 1
2 ≤θ ≤1, then (7.9) is always fulﬁlled whenever t, h > 0
and the positive result follows that the temporal discretization is un-
conditionally stable (in the 2-norm, with M = 1). If 0 ≤θ < 1
2, then
it is readily shown that there is conditional stability, with the step size
restriction
t |c|
h ≤ρ
or
t ≤ρ
|c| h.
This is often called a CFL condition after Courant, Friedrichs and
Lewy [15] and ct
h is called the Courant number.
For the semidiscretization by the ﬁrst-order forward formula, the
same conclusions concerning stability as above hold, provided that
c > 0 in this case.
Consider next the second-order central formula for convection.
Then all eigenvalues of the matrix A lie on the imaginary axis. Using
the equivalence of (7.8) and (7.9), one obtains again unconditional
stability whenever 1
2 ≤θ ≤1.
Consider ﬁnally the semidiscretization of the pure model diffusion
equation (with periodic condition) by the second-order central for-
mula for diffusion. In this case all eigenvalues of the matrix A lie on
the negative real axis and are given by
λk = –4d
h2 sin2 (πkh)
(1 ≤k ≤m).
Again, the favourable result holds that the temporal discretization by
the θ-method is unconditionally stable whenever 1
2 ≤θ ≤1. If 0 ≤
θ < 1
2, then there is conditional stability, with the step size restriction
t 4d
h2 ≤2ρ
or
t ≤ρ
2dh2.

58
Numerical Partial Differential Equations in Finance Explained
This upper bound on the step size is O(h2), which is much more
restrictive than O(h) as for the CFL condition. In practical applica-
tions, where the spatial mesh width can become arbitrarily small, it
is too severe for an efﬁcient discretization.
Concerning the full model equation (2.3) with periodic condition it
holds that the θ-method is unconditionally stable whenever 1
2 ≤θ ≤1
and the convection and diffusion parts are semidiscretized by their
second-order central ﬁnite difference formulas. In this case the tem-
poral convergence bound (7.4) holds in the scaled Euclidean norm
(3.16) with order q as before and error constant C independent of the
spatial mesh width h, as desired, if u0 is sufﬁciently smooth; compare
[49]. These results remain valid if the convection part is semidis-
cretized by the ﬁrst-order backward (forward) formula and c < 0
(c > 0).
7.3
Maximum Norm and Positivity
Obtaining for full discretizations favourable stability results in the
maximum norm ∥· ∥∞is often more difﬁcult than in the (scaled)
Euclidean norm. For the backward Euler method, a useful bound on
∥R(tA)∥∞= ∥(I – tA)–1∥∞can be derived if the condition (4.11) on
the matrix A of the form (4.2) holds with r ≥0, which is valid for the
mixed central/upwind discretization from Section 4.4. We ﬁrst note
that the inverse of I – tA exists. Consider then any given vector x of
size ν and
y = (I – tA)–1x.
Let index i ∈{1, 2, . . . , ν} be such that ∥y∥∞= |yi|. Since
xi = (1 – tαi)yi – tβiyi–1 – tγiyi+1,
with β1 = γν = 0 and y0 = yν+1 = 0, it follows using (4.11) that
|xi| ≥|1 – tαi||yi| – t|βi||yi–1| – t|γi||yi+1|
≥(1 – tαi)|yi| – tβi|yi| – tγi|yi|
= (1 – tαi – tβi – tγi)|yi|
≥(1 + rt)|yi|.

7
Temporal Discretization
59
Hence,
∥y∥∞= |yi| ≤
1
1 + rt |xi| ≤
1
1 + rt ∥x∥∞.
As the vector x is arbitrary, one obtains the stability bound
∥(I – tA)–1∥∞≤
1
1 + rt
for all t > 0.
(7.10)
Since this upper bound is at most 1, the backward Euler method is
unconditionally contractive in the maximum norm, which is a very
strong property.
We subsequently show that it is also positivity preserving. To this
purpose, consider any given vector x > 0 (componentwise) and regard
y as a function of t > 0, thus, y = y(t). First, the vector function y
is continuous. Next, it is strictly positive for all sufﬁciently small t.
Suppose there exist a step size t∗> 0 and an index i ∈{1, 2, . . . , ν}
such that y∗= y(t∗) satisﬁes
y∗
i = 0
and
y∗
j ≥0 (whenever j =/ i).
Then, using (4.11),
0 < xi = (1 – tαi)y∗
i – tβiy∗
i–1 – tγiy∗
i+1 ≤0,
which is a contradiction. This implies that y(t) > 0 for all t > 0.
Since x > 0 is arbitrary, it follows that
(I – tA)–1 ≥0
for all t > 0.
(7.11)
Consequently, the backward Euler method is unconditionally positivity
preserving: for any N ≥1, the approximations Un deﬁned by (7.3)
with θ = 1 satisfy
U0 ≥0 and g(t) ≥0 (0 ≤t ≤T)
⇒
Un ≥0 (1 ≤n ≤N).
Under the condition (4.11) the favourable result can also be proved
that the backward Euler method is free from spurious oscillations
whenever t > 0.
The above strong properties of the backward Euler method and the
ideas of proof extend far beyond the present application.
For the θ-methods with θ < 1 the same properties as above can be
shown, provided a strict condition on the step size holds.

60
Numerical Partial Differential Equations in Finance Explained
7.4
Notes and References
The family of θ-methods belongs to two general classes of temporal
discretization methods, the Runge–Kutta methods and the linear mul-
tistep methods. For these two classes of methods an ample theory is
available that is relevant to their application to semidiscrete systems,
see for example the books [9, 31, 32]. Here initial value problems for
ODE systems obtained from semidiscretization of diffusion-dominated
PDEs (2.1) are so-called stiff problems. For the effective numerical
solution of stiff problems well-selected implicit methods are prefer-
able over explicit methods. Here A-stability forms a pivotal property.
Besides the θ-methods with 1
2 ≤θ ≤1 many other A-stable methods
are known; compare the references above.
In the book [49] a comprehensive convergence analysis is given of
Runge–Kutta methods and linear multistep methods when applied to
ODE systems stemming from semidiscretization by ﬁnite difference
formulas of time-dependent convection-diffusion-reaction equations.
The analysis follows the symbolic law
stability and consistency
⇒
convergence.
Assuming consistency and some additional conditions, the reverse im-
plication is also true. This is the content of the famous Lax–Richtmyer
theorem, see for example [83] for details.
The stability analysis in Section 7.2 relies upon the matrix A be-
ing normal. In practical applications, however, it is usually nonnormal.
The equivalence of (7.8) and the eigenvalue condition (7.9) is then not
valid anymore. The latter condition is necessary, but not sufﬁcient in
general, for the former. Still it is often applied also in this situation to
claim stability, but due care needs to be taken. Many rigorous stability
results pertinent to nonnormal matrices A are given in for example the
texts [82, 87].
Stability bounds for general norms, in particular the important max-
imum norm, are included in the references above, notably [82]. Ample
results on monotonicity properties for temporal discretization meth-
ods, such as those considered in Section 7.3, are given in for example
[49]. The prevention of spurious oscillations in the numerical solution
of ﬁnancial option valuation PDEs was ﬁrst addressed in [96].

8
Numerical Study: Time
In the following we examine through numerical experiments the sta-
bility and convergence of the temporal discretization by the θ-methods
in the valuation of a call option under the Black–Scholes framework.
Continuing the numerical example from Chapters 5 and 6, the ﬁnan-
cial parameter set (1.8) is taken, the spatial domain is truncated to
(0, 3K) and Dirichlet conditions (1.5) and (2.5) at the boundaries are
chosen. Next, spatial discretization is performed on the nonuniform
grid speciﬁed in Example 4.2.1 with second-order central formulas for
convection and diffusion, applying formula B for convection. Cell aver-
aging is always employed in this chapter, so that the pointwise payoff
value in the initial vector U(0) at the grid point si closest to the strike
K is replaced by its cell averaged value. This all together leads to an
initial value problem for a semidiscrete system of the form (4.1) with
size ν = m – 1.
8.1
Explicit Method
First consider application of the forward Euler method. Set m = 50 for
the spatial grid and choose N = 75 and N = 80 time steps. Figure 8.1
displays the two obtained fully discrete approximations at t = T. The
top graph shows the result for N = 75. Clearly, this numerical solution
is very poor, with excessively large positive and large negative values.
The bottom graph shows the result for N = 80. This forms a visually
© The Author(s) 2017
61
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_8

62
Numerical Partial Differential Equations in Finance Explained
0
s
s
K
2K
3K
0
2K
UN
UN
0
2K
0
K
2K
3K
Figure 8.1
Fully discrete approximation of call option value function for t = T
obtained with the forward Euler method if N = 75 (top) and N = 80 (bottom)
ﬁne numerical solution; compare Figure 1.2 for the graph of the exact
solution. Selecting smaller numbers of time steps than N = 75 leads
to similar incorrect results as in the top of Figure 8.1, whereas taking
larger numbers than N = 80 yields decent results. Hence, there ap-
pears to be a critical, minimal number of steps that is required, equal
to about N = 80. Considering next m = 100, 200, 400 numerical exper-
iments reveal critical numbers of time steps approximately equal to
N = 330, 1330, 5350, respectively. These numbers grow fast and appear
to be directly proportional to m2.
To gain insight into the above observation we take a look at the ei-
genvalue condition (7.9), with m replaced by ν. Computation in Matlab
of the eigenvalues λ1, λ2, . . . , λν of the pertinent ν × ν matrix A indic-
ates that, for each value m considered, they all lie on the negative real
axis and, with the corresponding value N found above and t = T/N,

8
Numerical Study: Time
63
it holds that
min
1≤k≤ν tλk ∈[ – 2.02, –1.99].
The intersection of the stability region S of the forward Euler method
with the negative real axis is the interval [–2, 0]. Hence, for each m, the
corresponding value N above is very close to the minimal value N for
which the eigenvalue condition (7.9) is fulﬁlled. If the number of time
steps is smaller than this critical value, then an unstable behaviour of
the forward Euler method is to be expected, which is indeed what the
numerical experiments indicate. In particular, if m = 50 and N = 75,
then mink tλk = –2.15. This point clearly lies outside of S, explaining
the poor fully discrete approximation in this case.
Subsequent numerical experiments suggest that there is a stable be-
haviour of the forward Euler method whenever the number of time
steps is larger than the critical value. Even though the present matrix
A is nonnormal, fulﬁlment of (7.9) thus appears to guarantee condi-
tional stability. As alluded to before, the relevant step size restriction
is of the form t = O(m–2). This is of the same kind as obtained in
Chapter 7 in the case of the pure model diffusion equation with peri-
odic condition. For practical applications, where efﬁciency is crucial,
this step size restriction is too severe.
8.2
Implicit Methods
In view of the unfavourable experience with the forward Euler
method, we consider in this section numerical experiments with two
implicit methods, backward Euler and Crank–Nicolson. It turns out
that with these two methods always a visually ﬁne numerical solution
is obtained, for any given number of time steps. This forms a strik-
ing, positive difference with the case of the forward Euler method.
Relatedly, since the backward Euler and Crank–Nicolson methods are
both A-stable, condition (7.9) is now always fulﬁlled whenever the
eigenvalues of the matrix A lie in the left-half of the complex plane.
To study the convergence behaviour of the two implicit methods,
we consider the temporal discretization error at t = T = Nt deﬁned
by
ε(t;m) = (εi(t;m))m
i=0
with
εi(t;m) = Ui(T) – UN,i
(0 ≤i ≤m),

64
Numerical Partial Differential Equations in Finance Explained
10−2
10−1
t
100
10−5
10−4
10−3
10−2
10−1
100
101
e
Figure 8.2
Temporal errore(t;50) versus t for all 1 ≤N ≤100. Backward Euler
(dark bullets), Crank–Nicolson (light squares), Crank–Nicolson with damping (dark
squares)
and maximum norm
e(t;m) = max{|εi(t;m)|: 0 ≤i ≤m}.
Figures 8.2 and 8.3 display for m = 50 and m = 200, respectively, the val-
uese(t;m) versus t in double logarithmic scale for all 1 ≤N ≤100.
The results for backward Euler are shown by dark bullets and those
for Crank–Nicolson by light squares. The dark squares are discussed
below.
For the backward Euler method one observes that the (norm of the)
temporal discretization errors are all bounded from above by a mod-
erate constant and decrease monotonically as N increases. The slope
of the line through the results for backward Euler is 1.0, which in-
dicates that e(t;m) is approximately equal to Ct with constant C
independent of N. This corresponds to a ﬁrst-order convergence beha-
viour, as expected. Comparing next the lines for m = 50 and m = 200 in
Figures 8.2 and 8.3 for backward Euler, no vertical shift is observable,
indicating that C is independent of m, as desired; see Section 7.2. Ad-
ditional numerical experiments with larger values m support this main
conclusion.

8
Numerical Study: Time
65
10−2
10−1
100
10−5
10−4
10−3
10−2
10−1
100
101
e
t
Figure 8.3
Temporal error e(t;200) versus t for all 1 ≤N ≤100. Backward
Euler (dark bullets), Crank–Nicolson (light squares), Crank–Nicolson with damping
(dark squares)
For the Crank–Nicolson method the temporal discretization errors
are also all bounded from above by a moderate constant and decrease
monotonically as N increases. Furthermore, they are smaller in general
than those obtained for the backward Euler method. The observed
convergence behaviour for Crank–Nicolson is odd, however. Three
separate regions in the step size domain can be distinguished. For
large t there seems to be approximately ﬁrst-order convergence,
then there is a transition region where the temporal errors drop
fast, and ﬁnally for small t second-order convergence is achieved.
Next, comparing Figures 8.2 and 8.3, the region of step sizes where
approximately ﬁrst-order convergence holds for Crank–Nicolson ex-
pands signiﬁcantly when the number of spatial grid points is increased,
which is conﬁrmed by additional experiments with larger values m. In
practical applications, these are undesirable features.
The peculiar convergence behaviour of the Crank–Nicolson method
can be explained from the facts that the initial function is nonsmooth
and that, even though the method is A-stable, its stability function R
has a modulus equal to 1 at inﬁnity. A brief sketch of this is as follows.
First, due to the nonsmoothness of the initial function, and in spite

66
Numerical Partial Differential Equations in Finance Explained
of cell averaging being applied, relatively large temporal discretization
errors occur in the initial time steps, where the components εi(t;m)
spike near the strike, that is, when si ≈K. Next, because |R(∞)| = 1,
the (sizeable) contributions to these errors of the eigenvectors corres-
ponding to the dominant eigenvalues λk of A (here the eigenvalues
that are large negative) are not adequately damped in the subsequent
time steps, unless the step size is taken sufﬁciently small. We mention
that these contributions are referred to as high-frequency modes in a
Fourier terminology.
There exists a simple and effective remedy for the undesirable con-
vergence behaviour of the Crank–Nicolson method. It consists of
replacing the very ﬁrst time step by two substeps with step size t/2
using the backward Euler method. The latter method is L-stable and
therefore provides immediate damping of the high-frequency error
modes. This approach is called backward Euler damping or Ran-
nacher time stepping. In Figures 8.2 and 8.3 the results obtained by
Crank–Nicolson with damping are indicated by dark squares. The im-
provement is clear and as desired. First, the temporal discretization
errors are always either approximately equal to or substantially smal-
ler than those obtained by Crank–Nicolson without damping. Next,
their norms e(t;m) are now approximately equal to C(t)2 with C
independent of N and m. Hence, second-order convergence in time is
recovered, uniformly in m.
In applications where the initial function is highly nonsmooth, such
as Dirac delta initial data, it is recommended to replace the ﬁrst two
time steps by four half-steps of the backward Euler method.
We subsequently study the total discretization error, which is of
primary importance in practice. It is equal to the sum of the spatial and
temporal discretization errors, that is ε(m)+ε(t;m), and has maximum
norm
E(t;m) = max{|u(si, T) – UN,i|: 0 ≤i ≤m}.
In Chapter 5 second-order convergence of the current spatial dis-
cretization was obtained. It is thus natural to select for the temporal
discretization the Crank–Nicolson method with damping, for which
second-order convergence in time, uniformly in m, has been found.
Then the number of time steps N can be chosen directly proportional
to m so that the spatial and temporal discretization errors decrease at

8
Numerical Study: Time
67
the same rate. As an illustration, Figure 8.4 displays E(t;m) versus
1/m with N = ⌈m/5⌉and 10 ≤m ≤1000 for the backward Euler
method (dark bullets), the Crank–Nicolson method without damping
(light squares) and the Crank–Nicolson method with damping (dark
squares). One readily observes that the total errors in the case of
Crank–Nicolson with damping are O(m–2). Without damping, they be-
have erratically, and a substantial loss of accuracy occurs for larger m.
The total errors in the case of backward Euler are O(m–1). These ob-
servations are all consistent with the foregoing results. We conclude
that of the methods under consideration the Crank–Nicolson method
with damping is preferable in terms of accuracy and efﬁciency.
Numerical experiments for each of the Greeks delta, gamma, vega,
rho also reveal an O(m–2) behaviour of the total errors in the case of
Crank–Nicolson with damping, provided that for gamma four damp-
ing substeps are used and the total error is considered on the region
of interest, see Section 5.3. Further, Figures 8.2–8.4 remain virtually
unchanged if formula A is chosen for convection or if the Neumann or
linear boundary condition is taken at the upper boundary.
10−3
10−2
10−1
10−5
10−4
10−3
10−2
10−1
100
101
E
1/m
Figure 8.4
Total error E(t;m) versus 1/m with N = ⌈m/5⌉for 10 ≤m ≤1000.
Backward Euler (dark bullets), Crank–Nicolson (light squares), Crank–Nicolson with
damping (dark squares)

68
Numerical Partial Differential Equations in Finance Explained
8.3
Notes and References
Rigorous, theoretical stability bounds for the spatial and temporal dis-
cretizations of the Black–Scholes PDE under consideration have been
derived in [39].
Rannacher time stepping is due to [72]. It was ﬁrst analyzed for
applications in computational ﬁnance by [25, 71] and, along with sub-
sequent work by these authors, other initial references to this damping
procedure are [27, 89].

9
Cash-or-Nothing Options
As a ﬁrst step towards the numerical PDE valuation of more advanced
types of ﬁnancial options, we consider the cash-or-nothing call option,
see Chapter 4. This option is relatively simple, but its payoff function
has the property that it is discontinuous at the strike, see (4.9).
Options having discontinuous payoffs are referred to as digital
options or binary options. Their numerical valuation, and notably
the approximation of their Greeks delta and gamma, requires careful
attention.
The fair value u(s, t) of a cash-or-nothing call option under the Black–
Scholes framework is given by
u(s, t) = e–rtD N (d2)
(for s > 0, 0 < t ≤T),
(9.1)
with d2 given in the Black–Scholes formula (1.6). As a numerical
example we take
K = 100, D = 100, T = 0.5, r = 0.03, σ = 0.40.
(9.2)
Figure 9.1 displays the corresponding graph of u in the (s, t)-domain
[0, 3K] × [0, T]. The discontinuity in the payoff function is clearly
observable at t = 0.
For the numerical PDE valuation we consider the same spatial dis-
cretization as in Chapter 8 for a call option, except now with the
© The Author(s) 2017
69
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_9

70
Numerical Partial Differential Equations in Finance Explained
0
100
200
300
0
20
40
60
80
100
0
0.1
0.2
0.3
0.4
0.5
t
s
u
Figure 9.1
Exact cash-or-nothing call option value function on [0, 3K]×[0, T] with
parameter set (9.2)
payoff function (4.9) for the initial condition and a different Dirichlet
condition at the upper boundary,
u(Smax, t) = e–rtD
(0 ≤t ≤T).
For the temporal discretization of the obtained semidiscrete system
(4.1), the Crank–Nicolson method is applied.
Analogously to Chapter 8 we study the norm of the total discret-
ization error EROI(t;m) versus 1/m with t = T/N, N = ⌈m/5⌉and
10 ≤m ≤1000, where the error is now restricted to the region of in-
terest given by 1
2K < s < 3
2K. We are interested in the effects that the
techniques of cell averaging (Section 4.3) and backward Euler damp-
ing (Section 8.2) have in the numerical valuation. Figure 9.2 displays
the total errors in three cases: with cell averaging but no damping
(dark bullets), with cell averaging and damping (dark squares), and
no cell averaging but with damping (light squares). Here damping is
performed by two substeps of backward Euler. From Figure 9.2 it is
clear that the two techniques are both necessary to arrive at accurate
approximations and a regular convergence behaviour. If the two tech-
niques are simultaneously employed, then second-order convergence

9
Cash-or-Nothing Options
71
10−3
E
10−2
10−1
10−5
10−4
10−3
10−2
10−1
100
101
1/m
Figure 9.2
Cash-or-nothing call option with parameter set (9.2). Total error
EROI(t;m) versus 1/m with N = ⌈m/5⌉for 10 ≤m ≤1000. Crank–Nicolson method.
Cell averaging without damping (dark bullets). Cell averaging with damping us-
ing two substeps (dark squares). No cell averaging but with damping using two
substeps (light squares)
is achieved, that is, the total errors are O(m–2). If one of the two tech-
niques is omitted, then the errors are large in general and, moreover,
behave erratically as a function of m.
For the Greeks delta and gamma the accurate numerical approxima-
tion is more challenging than that for the option value itself, due to an
increased lack of smoothness near t = 0. The following exact formulas
easily follow from (9.1):
delta:
e–rtD N ′(d2)/(sσ
√
t ),
gamma:
–e–rtD d1 N ′(d2)/(s2σ 2t),
for s > 0 and 0 < t ≤T. These formulas readily reveal that delta
and gamma are both unbounded at the strike if t ↓0, as one could
expect. Analogously as above we examine the norm of the pertinent
total discretization errors Ed,ROI(t;m) and Eg,ROI(t;m) versus 1/m
where N = ⌈m/5⌉. Four cases are considered: cell averaging but no
damping (dark bullets), cell averaging and damping using two sub-
steps (dark squares), cell averaging and damping using four substeps

72
Numerical Partial Differential Equations in Finance Explained
Ed
10−3
10−2
10−1
10−5
10−4
10−3
10−2
10−1
100
101
1/m
Figure 9.3
Cash-or-nothing call option delta with parameter set (9.2). Total er-
ror Ed,ROI(t;m) versus 1/m with N = ⌈m/5⌉for 10 ≤m ≤1000. Crank–Nicolson
method. Cell averaging and: no damping (dark bullets), damping using two sub-
steps (dark squares) and damping using four substeps (dark triangles). No cell
averaging but with damping using four substeps (light triangles)
(dark triangles), and no cell averaging but with damping using four
substeps (light triangles). Figures 9.3 and 9.4 display the total errors
for, respectively, delta and gamma. It is clear that only when cell aver-
aging and damping with four substeps are both applied, second-order
convergence for delta and gamma is attained. If just two substeps of
backward Euler are used for damping, then only ﬁrst-order conver-
gence is found for delta, whereas for gamma convergence is absent
in this case. Without damping, the errors for delta and gamma both
diverge as m increases. Finally, without cell averaging, the errors are
mostly much larger than with cell averaging and the error behaviour
is erratic.
A cash-or-nothing put option has the payoff
φ(s) =

D for s < K,
0 for s > K.
In a general setting, which includes the Black–Scholes framework, the
sum of the fair values of corresponding cash-or-nothing call and put

9
Cash-or-Nothing Options
73
Eg
10−3
10−2
10−1
10−6
10−5
10−4
10−3
10−2
10−1
100
1/m
Figure 9.4
Cash-or-nothing call option gamma with parameter set (9.2). Total
error Eg,ROI(t;m) versus 1/m with N = ⌈m/5⌉for 10 ≤m ≤1000. Crank–Nicolson
method. Cell averaging and: no damping (dark bullets), damping using two sub-
steps (dark squares) and damping using four substeps (dark triangles). No cell
averaging but with damping using four substeps (light triangles)
options is equal to e–rtD, a parity relation. Relatedly, the same conclu-
sions concerning the total errors in the case of a cash-or-nothing put
option are obtained as above.

10
Barrier Options
Barrier options are among the most common exotic options used in
practice. They are path-dependent, that is, their payoffs depend not
only on the underlying asset prices at maturity, but also on those prior
to maturity. We consider here the example of a down-and-out put op-
tion. This option gives the holder the right to sell the underlying asset
for strike price K at maturity time T provided that the asset price does
not fall below a prescribed barrier H during the lifetime [0, T] of the
option; otherwise the option is worthless. If the barrier is breached,
then one speaks of a knock-out event.
A main reason for the popularity of barrier options is that they are
often much cheaper than their direct counterparts without barriers.
A semi-closed analytical formula for the fair value u(s, t) of a down-
and-out put option under the Black–Scholes framework is known; it is
provided in Appendix C. If t = 0, then the fair value equals max (K–s, 0)
for s > H and it is zero for s ≤H.
Figure 10.1 displays the graph of u on [H, 3K]×[0, T] for the sample
parameter set
K = 100, H = 75, T = 1, r = 0.06, σ = 0.30.
(10.1)
In the following we study the numerical PDE valuation of the down-
and-out put option. The spatial discretization is performed analogously
to that in Chapters 8 and 9. The only modiﬁcations in the semidiscret-
ization with respect to that for a standard put option are that the spatial
© The Author(s) 2017
75
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_10

76
Numerical Partial Differential Equations in Finance Explained
0
100
200
300
0
5
10
15
20
25
s
t
u
0
0.2
0.4
0.6
0.8
1.0
Figure 10.1
Exact down-and-out put option value function on [H, 3K] × [0, T]
with parameter set (10.1)
domain is now given by
(Smin, Smax) = (H, 3K)
and that a homogeneous Dirichlet condition at the lower boundary
s = H holds since the fair value of a down-and-out put is always zero
there. The fair value at t = 0 (above) determines as usual the initial
condition. For the temporal discretization of the resulting semidiscrete
system (4.1), the Crank–Nicolson method is applied.
We consider the norm of the total discretization error EROI(t;m)
versus 1/m with t = T/N, N = ⌈m/5⌉and 10 ≤m ≤1000. The region
of interest is now taken as H < s < 3
2K. In Figure 10.2 the total er-
rors are displayed for three cases: with cell averaging but no damping
(dark bullets), with cell averaging and damping (dark squares), and
no cell averaging but with damping (light squares), where damping
is always done by two substeps of backward Euler. As in Chapter 9,
one observes that if cell averaging and damping are simultaneously
applied, then a regular, second-order convergence behaviour is at-
tained. Without damping, convergence is absent again. Without cell
averaging, perhaps surprisingly, the errors are always close to those
obtained with cell averaging, only their behaviour as a function of m is
less regular.

10
Barrier Options
77
10−3
10−2
10−1
10−5
10−4
10−3
10−2
10−1
100
101
E
1/m
Figure 10.2
Down-and-out put option with parameter set (10.1). Total error
EROI(t;m) versus 1/m with N = ⌈m/5⌉for 10 ≤m ≤1000. Crank–Nicolson method.
Cell averaging without damping (dark bullets). Cell averaging with damping us-
ing two substeps (dark squares). No cell averaging but with damping using two
substeps (light squares)
The down-and-out put is one of many types of barrier options traded
in practice. A down-and-out call is the same except that it gives the
holder the right to buy. An up-and-out put (call) gives the holder
the right to sell (buy) the underlying asset for strike K at maturity T
provided that the asset price does not rise above a prescribed bar-
rier H during the lifetime [0, T] of the option; otherwise the option is
worthless. The numerical PDE valuation of these three barrier options
proceeds similarly to that of the down-and-out put by modifying the
spatial domain, the Dirichlet boundary conditions, and the initial func-
tion. Here, for accuracy, it is advantageous to have a large fraction of
spatial grid points near the barrier.
A down-and-in put gives the holder the right to sell the underlying
asset for strike K at maturity T provided that the asset price does fall
below a prescribed barrier H during the lifetime [0, T] of the option;
otherwise the option is worthless. If the barrier is reached, one speaks
in this case of a knock-in event. The sum of the fair values of corres-
ponding down-and-out and down-and-in put options is identical to that

78
Numerical Partial Differential Equations in Finance Explained
of the corresponding standard put option. By using this parity relation,
the down-and-in put can be numerically valued. The same goes for the
“in” counterpart of any other “out” barrier option.
For all eight barrier options considered above (up/down, in/out,
call/put) semi-analytical valuation formulas are known in the Black–
Scholes framework, see for example [47, 90]. This is not true anymore
for their so-called discrete variants, where the barrier constraint is en-
forced only a ﬁnite number of times. In this context, the options that
were discussed so far are referred to as continuous barrier options.
We consider here a discrete down-and-out put. This option gives
the holder the right to sell the underlying asset for strike K at ma-
turity T provided the asset price does not fall below a barrier H at a
prescribed ﬁnite, ordered set of monitoring times {τ1, τ2, . . . , τk} ⊂
[0, T]; otherwise the option is worthless. For its numerical valuation
there are several changes compared to that of the continuous counter-
part. The spatial domain reverts to (0, 3K) and, at the lower boundary,
u(0, t) = e–rtK if 0 ≤t < T – τk and u(0, t) = 0 if T – τk ≤t ≤T. The
nonuniform spatial grid is now concentrated at the barrier instead of
the strike. In Example 4.2.1 the value K is thus replaced by H. We
note that for spatial accuracy it is beneﬁcial if the barrier is located
0
0.2
0.4
0.6
0.8
1.0
0
100
200
300
0
5
10
15
20
25
s
t
u
Figure 10.3
Numerically approximated discrete down-and-out put option value
function on [0, 3K]×[0, T] with parameter set (10.1) and monitoring times τj = j T/5
(1 ≤j ≤5)

10
Barrier Options
79
midway between two successive grid points. Cell averaging is applied
to smooth the initial data at the strike, and also at the barrier if τk = T.
The time stepping proceeds as usual except that the times-till-maturity
αj = T – τj (1 ≤j ≤k) must all be temporal grid points and, for
each j, once the approximation to the vector U(αj) has been com-
puted, all components corresponding to the spatial grid points si ≤H
are set equal to zero. This introduces a discontinuity at the barrier
and, relatedly, damping with backward Euler is applied directly after
each such event. As an illustration, Figure 10.3 displays the numer-
ically obtained graph of the discrete down-and-out put option value
function for parameter set (10.1) with ﬁve monitoring times τj = j T/5
(1 ≤j ≤5). The discontinuities at the barrier corresponding to the
monitoring times are clearly observable.
Besides the barrier options considered here, there exist many other
types, for instance with double barriers, time-dependent barriers or
barriers that apply during a speciﬁc time window. In principle all these
options can be valued in an efﬁcient manner through the numerical
solution of an appropriate initial-boundary value problem for a PDE.

11
American-Style Options
11.1
American-Style Options
American-style options can be exercised by the holder at any given
time up to and including maturity time T. This is in contrast to
European-style options that were considered up to now and can only
be exercised at T. Clearly, the holder of an American-style option is
faced with the decision as to when it is optimal to exercise.
American options are extensively traded in practice. The fair value
of any given American option is always greater than or equal to that
of its European counterpart. Under the Black–Scholes framework, it
can be shown that for an American call it is actually optimal to ex-
ercise at maturity and, consequently, its fair value equals that of a
European call. As it turns out, however, this is an exceptional case.
In general, the fair values of American options cannot be expressed
in (semi-)closed analytical form. Accordingly, they are valued through
numerical approximation.
We consider here the example of an American put. This option
gives the holder the right to sell the underlying asset for strike price K
at any given time up to and including maturity time T. A (semi-)closed
analytical formula for the fair value of the American put is unknown.
Let u(s, t) denote this fair value at time τ = T – t if at that time the asset
price equals s.
It is conceivable that, for any given t, there exists a value s∗(t)
such that if s < s∗(t) it is optimal to exercise an American put and if
© The Author(s) 2017
81
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_11

82
Numerical Partial Differential Equations in Finance Explained
s>s∗(t) it is optimal to keep the option. Indeed, it can be proved that
a function s∗: [0, T] →[0, K] with this property exists. Its graph is
called the early exercise boundary or optimal exercise boundary or
free boundary. For this boundary a (semi-)closed analytical formula is
also unknown. At the early exercise boundary, the option value func-
tion u suffers from a lack of smoothness: it is once, but not twice,
continuously differentiable there.
Let φ(s) = max (K – s, 0) be the familiar payoff for a put option and
write
Au(s, t) = 1
2σ 2s2∂2u
∂s2 (s, t) + rs∂u
∂s (s, t) – ru(s, t).
It has been proved that under the Black–Scholes framework the fol-
lowing three conditions must be met at each point (s, t) with s > 0,
0 < t ≤T:
u(s, t) ≥φ(s),
(11.1a)
∂u
∂t (s, t) ≥Au(s, t),
(11.1b)
(u(s, t) – φ(s))
∂u
∂t (s, t) – Au(s, t)

= 0.
(11.1c)
Condition (11.1a) states that the fair value of an American put is al-
ways at least equal to its instantaneous payoff. Condition (11.1b) is
a so-called partial differential inequality. Condition (11.1c) simply
means that for each given (s, t) either (11.1a) or (11.1b) must be an
equality. The three conditions (11.1) together form what is called a
partial differential complementarity problem (PDCP). An initial con-
dition is provided as usual by the payoff function φ, and at s = 0 one
has the Dirichlet boundary condition
u(0, t) = K
for 0 ≤t ≤T.
(11.2)
Notice that a discount factor, which arises in the European case, is
absent here.
The conditions (11.1) naturally induce a decomposition of the (s, t)-
space: the early exercise region is the set of all points (s, t) where the

11
American-Style Options
83
equality u = φ holds (and the option is exercised); the continuation
region is the set of all points (s, t) where the equality ∂u/∂t = Au holds
(and the option is kept). The joint boundary of these two regions is
the early exercise boundary.
Assume matrix A and vector g are such that U′(t) = AU(t) + g stands
for any given semidiscretization of the Black–Scholes PDE on a trun-
cated domain (0, Smax) with at s = 0 the Dirichlet condition (11.2) and
at s = Smax either a homogeneous Dirichlet or Neumann condition
or the linear boundary condition; compare Chapter 4. Then a semidis-
cretization of the PDCP (11.1) on this domain and with these boundary
conditions reads
U(t) ≥U0,
(11.3a)
U′(t) ≥AU(t) + g,
(11.3b)
(U(t) – U0)T 
U′(t) – AU(t) – g

= 0
(11.3c)
for 0 < t ≤T with U(0) = U0 determined by the payoff function. Here
inequalities for vectors are to be understood componentwise. Next, a
full discretization based on the θ-method is deﬁned by
Un ≥U0,
(11.4a)
(I – θtA)Un ≥(I + (1 – θ)tA)Un–1 + t g,
(11.4b)
(Un – U0)T ((I – θtA)Un – (I + (1 – θ)tA)Un–1 – t g) = 0
(11.4c)
for n = 1, 2, . . . , N. The three conditions (11.4) constitute a so-called
linear complementarity problem (LCP). This requires a new step in
the numerical solution process. Despite their name, LCPs are actually
nonlinear and they are nontrivial to solve. It is known that if all prin-
cipal minors of the matrix I – θtA are strictly positive, then (11.4)
always possesses a unique solution. Matrices with this property are
called P-matrices.

84
Numerical Partial Differential Equations in Finance Explained
11.2
LCP Solution Methods
Solution methods for LCPs have been widely studied in the literat-
ure. We discuss here three approximation approaches that are often
used for the application under consideration. Each of these success-
ively generates for n = 1, 2, . . . , N approximations Un to the vectors Un
deﬁned by (11.4).
The explicit payoff method for (11.4) is the most basic approach
and yields
(I – θtA) ¯Un = (I + (1 – θ)tA)Un–1 + t g,
(11.5a)
Un = max{ ¯Un , U0}.
(11.5b)
Here U0 = U0 and the maximum of two vectors is to be understood
componentwise. Method (11.5) can be viewed as ﬁrst performing a
time step by ignoring the American constraint, and next applying this
constraint explicitly. The computational cost per time step is essen-
tially the same as that in the case of the European counterpart of
the option, which is very favourable. The obtained accuracy with the
explicit payoff method is often relatively low, however.
The Ikonen–Toivanen (IT) splitting method for (11.4) is a more
advanced approach and yields
(I – θtA) ¯Un = (I + (1 – θ)tA)Un–1 + t g + tλn–1, (11.6a)
⎧
⎨
⎩
Un – ¯Un – t (λn –λn–1) = 0,
Un ≥U0,
λn ≥0,
(Un – U0)Tλn = 0,
(11.6b)
with λ0 = 0. The vector Un together with the auxiliary vector λn are
computed in two stages. In the ﬁrst stage an intermediate approxim-
ation ¯Un is deﬁned by the system of linear equations (11.6a). In the
second stage, ¯Un and λn–1 are updated to Un and λn by (11.6b). It is
readily veriﬁed that these updates are given by the simple, explicit
formulas
Un = max
 ¯Un – tλn–1 , U0

,
λn = max

0 , λn–1 + (U0 – ¯Un)/t

.

11
American-Style Options
85
As for the explicit payoff method, the computational cost per time
step with the IT splitting method is essentially the same as that in the
case of the European counterpart of the option.
Let G > 0 be any given ﬁxed large number. The penalty method
for (11.4) reads

I – θtA + P(k)
n

¯U(k+1)
n
= (I + (1 – θ)tA)Un–1 + t g + P(k)
n U0
for k = 0, 1, . . . , l – 1 and Un = ¯U(l)
n .
(11.7)
Hence, this yields an iteration in each time step. The initial iterate
¯U(0)
n
= Un–1. Next, P(k)
n
for 0 ≤k < l is deﬁned as the diagonal mat-
rix where the i-th diagonal entry is equal to G whenever ¯U(k)
n,i < U0,i
and zero otherwise. The P(k)
n
can be viewed as penalty matrices for-
cing Un to approximately satisfy the LCP (11.4). If the penalty factor G
is taken sufﬁciently large, this approximation is expected to be highly
accurate. In each time step of the penalty method, l ≥1 linear systems
need to be solved, involving different matrices. Accordingly, the pen-
alty method is computationally more expensive per time step than the
two methods (11.5), (11.6). The number of iterations l can either be
chosen a priori or be deﬁned a posteriori by a convergence criterion.
A natural criterion is
max
i
| ¯U(k+1)
n,i
– ¯U(k)
n,i |
max{1, | ¯U(k+1)
n,i
|}
< tol
or
P(k+1)
n
= P(k)
n ,
(11.8)
with a given sufﬁciently small tolerance tol > 0. Let ε denote the ma-
chine precision of the computer. A rule of thumb for the choice of
penalty factor is then
G ≈αtol
ε
with α = 10–2.
(11.9)

86
Numerical Partial Differential Equations in Finance Explained
11.3
Numerical Study
We consider an American put option with
K = 100, T = 0.5, r = 0.02, σ = 0.25.
(11.10)
Figure 11.1 shows the numerically approximated graph of the option
value function (dark curve) together with the graph of the payoff func-
tion (light curve) on [1
2K, 3
2K] for t = T. Clearly, the option value is
always greater than or equal to the corresponding payoff value. At the
point s = s∗(T) on the left of K where the two graphs meet, their
derivatives with respect to s are equal. This is known as smooth past-
ing. Figure 11.2 displays the numerically approximated early exercise
boundary. It is directly obtained by verifying whether or not Un,i = U0,i
holds. Notice that the function s∗which deﬁnes the early exercise
boundary varies strongly near t = 0, that is, when actual time is close
to maturity. We mention that s∗(T) ≈73.4.
For the experiments, as in foregoing chapters, the spatial domain
is truncated to (0, 3K) and semidiscretization is performed on the
nonuniform grid from Example 4.2.1 with second-order central for-
mulas for convection and diffusion, using formula B for convection.
Cell averaging is applied to smooth the initial data at the strike. The
only change with respect to the semidiscretization for the European
put option case is a different Dirichlet boundary condition at s = 0,
see (11.2). The matrix A thus remains the same, whereas the vector
g(t) changes slightly and becomes independent of t.
50
100
150
0
50
s
u
Figure 11.1
Dark: numerically approximated American put option value function
on [ 1
2K, 3
2K] for t = T and parameter set (11.10). Light: payoff function

11
American-Style Options
87
0
0.1
0.2
0.3
0.4
0.5
70
80
90
100
t
s*
Figure 11.2
Numerically approximated early exercise boundary for the American
put option and parameter set (11.10)
To gain insight into the different convergence behaviours of the
methods (11.5), (11.6), (11.7) we examine the norm of the temporal
discretization error on a region of interest deﬁned by
e ROI(t;m) = max{|Ui(T) – UN,i|: 0 ≤i ≤m, 4
5K < si < 5
4K},
where U(T) denotes the exact solution1 to the semidiscrete PDCP
(11.3) for t = T. For each of the three methods the ﬁrst time step
is always replaced by two substeps of the same method using half the
step size and θ = 1, akin to backward Euler damping. For the penalty
method the convergence criterion (11.8) is used and parameter values
tol = 10–8, G = 106 are chosen. Notice that the early exercise point
s∗(T) lies outside the region of interest, so the focus is on a region
where the exact solution u is smooth. We further emphasize that the
spatial discretization error is not incorporated here.
Consider N = ⌈m/2⌉and 10 ≤m ≤1000. Figure 11.3 displays the
temporal discretization errors for the explicit payoff method (bullets),
the IT splitting method (squares) and the penalty method (triangles)
both for θ = 1
2 (dark) and θ = 1 (light). For θ = 1 the errors obtained
with the three methods are very close to each other. They show a
ﬁrst-order convergence behaviour, as might be expected. For θ = 1
2
the errors are substantially smaller than for θ = 1. In this case the
1 Recall that when computing discretization errors the semidiscrete solution is approximated
to a high accuracy by applying a suitable temporal discretization method using a very small step
size.

88
Numerical Partial Differential Equations in Finance Explained
10−3
10−2
10−1
10−6
10−5
10−4
10−3
10−2
10−1
100
1/m
e
Figure 11.3
American put option with parameter set (11.10). Temporal error
e ROI(t;m) versus 1/m with N = ⌈m/2⌉for 10 ≤m ≤1000. Constant step sizes.
Backward Euler: light. Crank–Nicolson: dark. Method (11.5): bullets. Method (11.6):
squares. Method (11.7): triangles
explicit payoff method is the least accurate. The errors for the IT split-
ting method and penalty method are relatively close to each other,
where the former is slightly more accurate. However, if also θ = 1
2 an
approximate ﬁrst-order temporal convergence behaviour is observed.
It can be argued that variable step sizes are more natural than con-
stant step sizes, in view of the strongly varying early exercise boundary
near t = 0. All temporal discretization methods under consideration in
this book are adapted straightforwardly to variable step sizes, in par-
ticular the methods (11.5), (11.6) and (11.7). Consider temporal grid
points deﬁned by
tn =
 n
N
2
T
for n = 0, 1, 2, . . . , N.
(11.11)
The corresponding step sizes are smallest near t = 0 and grow lin-
early with n. Figure 11.4 displays the temporal discretization errors for
the same situation as that of Figure 11.3, except that now the tem-
poral grid points (11.11) are used. For θ = 1 the obtained errors are

11
American-Style Options
89
1/m
10−3
10−2
10−1
10−6
10−5
10−4
10−3
10−2
10−1
100
e
Figure 11.4
American put option with parameter set (11.10). Temporal error
e ROI(t;m) versus 1/m with N = ⌈m/2⌉for 10 ≤m ≤1000. Variable step sizes.
Backward Euler: light. Crank–Nicolson: dark. Method (11.5): bullets. Method (11.6):
squares. Method (11.7): triangles
generally about the same as in the constant step size case. For the pen-
alty method with θ = 1
2 there is a substantial improvement, however.
This method now reveals a second-order temporal convergence beha-
viour, which is as desired. Furthermore, the number of iterations l per
time step turns out to be 1.3 on average, which is very favourable. For
the explicit payoff method and the IT splitting method with θ = 1
2 the
errors are in general larger than in the case of constant step sizes, and
the observed temporal convergence order remains close to one.
Of the methods under consideration, the IT splitting method with
θ =
1
2 for constant step sizes and the penalty method with θ =
1
2
for variable step sizes are preferable in this experiment. The former
method only shows a ﬁrst-order temporal convergence behaviour, but
the linear system in each time step can be solved very efﬁciently by
using an upfront LU factorization as before. The latter method reveals
a second-order temporal convergence behaviour, but solving the linear
system(s) in each time step is computationally more expensive. The
actual choice of method depends among others on the accuracy that
is required.

90
Numerical Partial Differential Equations in Finance Explained
11.4
Notes and References
American-style options and their numerical valuation are discussed in
for example the texts [21, 47, 58, 79, 85, 90, 94].
First references considering the PDCP formulation for the fair values
of American options are [53, 91]. Prior to this, it was indirectly used
in [6].
Many properties of LCPs can be found in for example the books
[4, 14]. There exists a wide range of methods for solving LCPs in
general and for applications in ﬁnance in particular. The classical
Brennan–Schwartz algorithm [6, 53] is optimal in the present ex-
ample, as it solves the LCP in each time step exactly, but it is not
clear how to extend it to more advanced American option valuation
problems. In this chapter, three modern approximation methods have
been considered with the virtues that they are natural in the present
time-dependent context, simple to implement and broadly applicable.
The penalty method was proposed for American option valuation in
[25, 95] and the IT splitting method in [50, 51]. The choice (11.9) for
the penalty factor is recommended by [24] and incorporates ﬂoating
point round-off considerations [46].
For the penalty method various convergence results relevant to ﬁn-
ancial applications are available in the literature; compare [25, 45]. For
the IT splitting method the theory is under development, see [30] for
a recent convergence result. Their application with variable step sizes,
in particular corresponding to (11.11), is discussed in for example
[25, 51, 73].

12
Merton Model
12.1
Merton Model
It is a well-known phenomenon in ﬁnancial markets that sudden, large
movements in asset prices occur every now and then. This can happen
for example after major news events. Already in 1976, Merton [63]
proposed to add a jump term to the geometric Brownian motion in
order to obtain a better model for the asset price evolution. The jumps
are assumed to follow a compound Poisson process, so that they arrive
randomly according to a Poisson process and their size is random as
well compare for example [80]. When a jump occurs, the price of
the asset is modelled by multiplying its price at the time instant just
before the jump with a given positive random variable Y. Thus a fall
in the asset price corresponds to Y ∈(0, 1) and a rise to Y > 1. In this
chapter we consider Y to be lognormally distributed. It then has the
probability density function
f (y) =
1
yδ
√
2π
exp

–( ln y – γ )2
2δ2

(y > 0),
(12.1)
where γ and δ denote given real constants with δ > 0 that are equal to
the mean and standard deviation, respectively, of the normal random
variable ln (Y). The pertinent stochastic process for the asset price is
called the Merton model and forms a particular instance of a general
jump-diffusion model.
© The Author(s) 2017
91
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_12

92
Numerical Partial Differential Equations in Finance Explained
Denote by λ the intensity of the Poisson process and let κ be the
expected relative jump size,
κ = E[Y – 1] =
 ∞
0
(y – 1)f (y)dy = exp

γ + 1
2δ2
– 1.
Under certain assumptions on the market and the hedging approach,
it can be argued that if the geometric Brownian motion (1.2) for the
underlying asset price is replaced by the Merton model, then the fair
value u(s, t) of a European-style option satisﬁes the equation
∂u
∂t (s, t) = 1
2σ 2s2∂2u
∂s2 (s, t) + r0s∂u
∂s (s, t) – r1u(s, t) + λ
 ∞
0
u(sy, t)f (y)dy
(12.2)
for s > 0 and 0 < t ≤T with r0 = r – λκ and r1 = r + λ. Compar-
ing this to the Black–Scholes PDE (1.3) one observes that a new term
has appeared, which is an integral involving the option value function
u. Accordingly, (12.2) is called a partial integro-differential equation
(PIDE). The integral term is nonlocal - as opposed to the derivative
terms, which are local. It involves, for any given s and t, the values of
the option for all possible underlying asset prices. An adequate numer-
ical treatment of this integral term is crucial in order to arrive at an
efﬁcient numerical solution method for (12.2).
In the following we shall consider as an example the numerical valu-
ation of a European put option under the Merton model. The PIDE
(12.2) is complemented with the same initial condition and Dirich-
let boundary condition at s = 0 as in the case of the Black–Scholes
PDE. The option value function u is known in semi-closed analytical
form [63]:
u(s, t) =
∞

k=0
(μt)k
k! e–μtuk(s, t)
(12.3)
whenever s > 0, 0 < t ≤T. Here μ = λ(1+κ) and uk(s, t), for any given
integer k ≥0, denotes the Black–Scholes value (1.6b) for a put option
upon replacing r and σ 2 by, respectively,
r – λκ + k ln (1 + κ)
t
and
σ 2 + kδ2
t
.

12
Merton Model
93
50
100
200
300
0
50
s
u
Figure 12.1
Exact put option value functions on [ 1
2K, 3K] for t = T and parameter
set (12.4). Black–Scholes value: light. Merton value: dark
For the numerical experiments we take the ﬁnancial parameter set
K = 100, T = 1, r = 0.05, σ = 0.15, λ = 0.1, γ = –0.9, δ = 0.45.
(12.4)
Figure 12.1 displays the corresponding graphs of the put option
value function under the geometric Brownian motion (Black–Scholes)
model and the Merton model. The ﬁgure illustrates in particular that
the option value under the Merton model is nonnegligible on a much
larger region of asset prices s than that under the Black–Scholes model,
as one would expect.
12.2
Spatial Discretization
As the starting point for the semidiscretization of (12.2) the spatial
domain is truncated to (0, 5K), the familiar nonuniform grid from
Example 4.2.1 is considered, second-order central formulas for con-
vection and diffusion are applied with formula B for convection, and
cell averaging is performed. At Smax = 5K a homogeneous Dirichlet
condition is taken.
As previously, denote the semidiscrete approximation to u(si, t) by
Ui(t) for 1 ≤i ≤m – 1. Set U0(t) = e–rtK and Um(t) = 0 in view of the
Dirichlet boundary conditions.
To complete the semidiscretization of (12.2) a discretization of the
integral term is required. Let s = si with arbitrary 1 ≤i ≤m–1 be given
and deﬁne fi(x) = f (x/si)/si for x > 0 with f (0) = 0. Slightly rewriting
the integral, yields
 ∞
0
u(siy, t)f (y)dy =
 ∞
0
u(x, t)fi(x)dx ≈
 Smax
0
u(x, t)fi(x)dx.

94
Numerical Partial Differential Equations in Finance Explained
It is now convenient to have an approximation to u(x, t) available for
all x ∈(0, Smax), that is, not just at the discrete spatial grid, but on
the whole truncated spatial domain. To this purpose an interpolation
procedure can be employed. Since second-order spatial convergence is
aimed for, piecewise linear interpolation is a natural candidate. Hence,
for any given 1 ≤j ≤m, consider the approximation
u(x, t) ≈sj – x
hj
Uj–1(t) + x – sj–1
hj
Uj(t)
(sj–1 ≤x ≤sj).
Combining the above leads to
 ∞
0
u(siy, t)f (y)dy ≈
m

j=1
 sj
sj–1
sj – x
hj
Uj–1(t) + x – sj–1
hj
Uj(t)

fi(x)dx.
Deﬁne two integrals involving the probability density function f ,
J0,i,j =
 sj
sj–1
fi(x)dx
and
J1,i,j =
 sj
sj–1
xfi(x)dx.
(12.5)
Then the following semidiscrete approximation to the integral term in
(12.2) at s = si is obtained,
λ
 ∞
0
u(siy, t)f (y)dy ≈
m–1

j=1
A0,i,jUj(t) + g0,i(t),
(12.6)
where
A0,i,j = λ
J1,i,j – sj–1J0,i,j
hj
+ sj+1J0,i,j+1 – J1,i,j+1
hj+1

,
(12.7a)
g0,i(t) = λ
s1J0,i,1 – J1,i,1
h1
U0(t) + J1,i,m – sm–1J0,i,m
hm
Um(t)

. (12.7b)
For f given by (12.1) the two integrals (12.5) can be expressed in terms
of the standard normal cumulative distribution function N . Deﬁne
ψ0,i(s) = N
ln (s/si) – γ
δ

,
(12.8a)
ψ1,i(s) = si exp

γ + 1
2δ2
N
ln (s/si) – γ
δ
– δ

,
(12.8b)

12
Merton Model
95
for s > 0 and ψ0,i(0) = ψ1,i(0) = 0. Then it is readily shown that
J0,i,j = ψ0,i(sj) – ψ0,i(sj–1)
and
J1,i,j = ψ1,i(sj) – ψ1,i(sj–1).
(12.9)
Consider the matrix and vector
A0 = (A0,i,j)m–1
i,j=1
and
g0(t) = (g0,i(t))m–1
i=1
and denote by A1 and g1(t) the matrix and vector deﬁning the
semidiscretization of (12.2) without the integral term. Then the
semidiscretization of the complete PIDE (12.2) is of the form (4.1)
with
A = A0 + A1
and
g(t) = g0(t) + g1(t).
12.3
IMEX Schemes
For the temporal discretization of the obtained semidiscrete PIDE
(12.2) the Crank–Nicolson method (with damping) could be used.
This yields the recurrence relation (7.3) for the fully discrete approx-
imations Un at the temporal grid points. There is an important change,
however, in moving from a PDE to a PIDE problem. Due to the pres-
ence of the integral term, the matrix A has lost the sparsity property
and is now a full matrix: all its entries are nonzero in general. As a con-
sequence, solving the linear system (7.3) in each time step has turned
into a computationally expensive task.
To overcome this disadvantage, an implicit-explicit (IMEX) scheme
can be applied for the temporal discretization. An IMEX scheme effect-
ively employs the splitting A = A0 + A1 of the semidiscrete operator A
such that in each time step only the sparse matrix A1 (the PDE part)
is treated in an implicit way and the full matrix A0 (the integral part)
is treated in an explicit way. This yields a major reduction in compu-
tational cost per time step compared to standard (nonsplit) temporal
discretization schemes such as the Crank–Nicolson method.
We consider here a speciﬁc IMEX scheme that can be viewed as
a blend between the trapezoidal rule (the Crank–Nicolson method)
and its explicit variant, also known as the modiﬁed Euler method

96
Numerical Partial Differential Equations in Finance Explained
or the Heun method. It generates, in a one-step manner, successive
approximations Un for n = 1, 2, . . . , N by
⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
Y0 = Un–1 + tAUn–1 + tg(tn–1),
Y0 = Y0 + 1
2tA0

Y0 – Un–1

+ 1
2t(g0(tn) – g0(tn–1)),
Y1 = Y0 + 1
2tA1

Y1 – Un–1

+ 1
2t(g1(tn) – g1(tn–1)),
Un = Y1.
(12.10)
The vectors Y0, Y0 and Y1 are internal stages that can be discarded after
each time step. The ﬁrst two stages are explicit, whereas the third
stage is implicit. It is readily veriﬁed that by formally setting A0 = 0,
g0 = 0 the IMEX scheme (12.10) reduces to the familiar trapezoidal
rule, and that by formally setting A1 = 0, g1 = 0 it reduces to its explicit
variant. The internal stages can be eliminated, leading to

I – 1
2tA1

Un =

I + tA0 + 1
2tA1 + 1
2(t)2A0A

Un–1 +
1
2t(g(tn–1) + tA0g(tn–1) + g(tn)).
(12.11)
Since the matrix I – 1
2tA1 is tridiagonal, this linear system can be
solved very efﬁciently in every time step by using an upfront LU fac-
torization, as before. Further, it is often not necessary to compute the
full matrix-vector product A0g(t) on the right-hand side in every time
step. In the present example it is equal to e–rtA0g(0), so that it suf-
ﬁces to compute A0g(0) once, upfront, and then perform only a scalar
multiplication of this vector in every time step.
One easily shows that A0 and g0 are both uniformly bounded,
independently of the spatial mesh. In view of this, treating the semi-
discretized integral term explicitly in a temporal discretization scheme
may be expected to work well.
12.4
Numerical Study
We discuss numerical experiments with the discretization of the valu-
ation problem for the put option under the Merton model described
in the foregoing two sections. Here the Crank–Nicolson method and
IMEX scheme are both applied with damping, using two substeps of

12
Merton Model
97
10−3
10−2
10−1
10−5
10−4
10−3
10−2
10−1
100
101
1/m
E
Figure 12.2
Put option under Merton model with parameter set (12.4). Total
error E ROI(t;m) versus 1/m with N = ⌈m/3⌉for 10 ≤m ≤1000. Schemes: Crank–
Nicolson (light bullets), IMEX (dark bullets)
backward Euler. The two schemes are found to yield visually the same
temporal discretization errors for any given m and N under consider-
ation. A second-order temporal convergence behaviour is observed,
uniformly in m, which agrees with their theoretical orders. Due to
its lower computational cost, the IMEX scheme is preferable to the
Crank–Nicolson method in terms of efﬁciency.
Figure 12.2 displays the norm of the total discretization error
EROI(t;m) versus 1/m with t = T/N, N = ⌈m/3⌉, 10 ≤m ≤1000
and region of interest given by 1
2K < s <
3
2K. The results for the
Crank–Nicolson method are indicated by light bullets and those for
the IMEX scheme by dark bullets. Only the latter are visible, however,
since the two graphs lie on top of each other. The total errors are seen
to be O(m–2), thus a favourable second-order convergence of the full
discretization is obtained.
12.5
Notes and References
Jump-diffusion models and numerical option valuation under such
models via PIDEs are discussed for example in the books [21, 79,

98
Numerical Partial Differential Equations in Finance Explained
85, 90]. For ﬁnancial modelling with general Lévy processes see for
instance [12, 77].
An overview and analysis of IMEX schemes when applied to PDEs,
without integral term, is given in the book [49], where in particular
(12.10) is considered. The application of IMEX schemes to PIDEs in
ﬁnance has been studied in for example [2, 8, 13, 23, 56, 75, 76].
Various authors have considered a different set-up, whereby the
Fast Fourier Transform (FFT) can be employed for the efﬁcient com-
putation of matrix-vector products with the pertinent full matrix A0.
This is a natural idea because the integral term itself can be regarded,
after a simple change of variables, as a convolution. For details on this
approach, see for example [1, 33].

13
Two-Asset Options
13.1
Two-Asset Options
Multi-asset options depend on more than one underlying asset. In this
chapter we shall focus on two-asset options. Assuming the Black–
Scholes framework, the price evolution of two assets is given by two
geometric Brownian motions that may be correlated to each other. The
fair value of a European-style option is then a function of three inde-
pendent real variables: u = u(s1, s2, t) where si represents the price of
asset i at time T – t for i = 1, 2. Financial option valuation theory yields
that the function u satisﬁes the PDE
∂u
∂t = 1
2σ 2
1 s2
1
∂2u
∂s2
1
+ ρσ1σ2s1s2
∂2u
∂s1∂s2
+ 1
2σ 2
2 s2
2
∂2u
∂s2
2
+ rs1
∂u
∂s1
+ rs2
∂u
∂s2
– ru
(13.1)
for s1 > 0, s2 > 0 and 0 < t ≤T. Here the positive constant σi denotes
the volatility of the price of asset i for i = 1, 2 and the constant ρ ∈
[–1, 1] stands for the correlation factor pertinent to the two underlying
asset price processes. The constant r denotes the risk-free interest rate
as before.
The PDE (13.1) is of the time-dependent convection-diffusion-
reaction kind, like the Black–Scholes PDE (1.3). However, besides the
time variable t, there are now two independent variables, namely s1
and s2. In view of this, the PDE (13.1) is said to be two-dimensional.
Next, a mixed derivative term us1s2 is present whenever ρ is nonzero.
© The Author(s) 2017
99
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9_13

100
Numerical Partial Differential Equations in Finance Explained
Mixed derivative terms are ubiquitous in multi-dimensional ﬁnancial
option valuation PDEs due to the fact that the underlying stochastic
processes are almost always correlated. This is distinctive from many
other application areas, where such terms do not arise often.
As a concrete example for numerical experiments we consider in
this chapter a European call option on the maximum of two assets.
It has the payoff
φ(s1, s2) = max ( max (s1, s2) – K, 0)
for s1 ≥0, s2 ≥0.
(13.2)
The fair value function for this option is known in semi-closed ana-
lytical form and is provided in Appendix D. Figure 13.1 displays the
payoff function φ and Figure 13.2 the option value function u on the
(s1, s2)-domain [0, 3K] × [0, 3K] for t = T and the sample parameter set
K = 100, T = 0.75, r = 0.02, σ1 = 0.30, σ2 = 0.50, ρ = 0.40.
(13.3)
As usual, the payoff function (13.2) deﬁnes the initial condition for
(13.1), that is, u(s1, s2, 0) = φ(s1, s2).
0
100
200
300
0
100
200
300
0
100
200
300
s1
s2
Figure 13.1
Payoff function for call on the maximum of two assets option on
[0, 3K] × [0, 3K] if K = 100

13
Two-Asset Options
101
s1
s2
0
100
200
300
0
100
200
300
0
100
200
300
u
Figure 13.2
Exact option value function for call on the maximum of two assets
on [0, 3K] × [0, 3K] for t = T and parameter set (13.3)
13.2
Spatial Discretization
13.2.1
Finite Difference Discretization
For the spatial discretization of the PDE (13.1) the spatial domain is
truncated to the square (0, Smax) × (0, Smax) with Smax = 5K. Boundary
conditions need to be prescribed at its four sides. At the two sides
satisfying s1 = 0 and s2 = 0, respectively, it can be shown that (13.1) is
itself fulﬁlled. Thus one obtains the original, one-dimensional Black–
Scholes PDE there, with volatilities σ = σ2 and σ = σ1, respectively.
This forms a new type of boundary condition. Using the Black–Scholes
formula from Chapter 1, one could also impose Dirichlet conditions at
s1 = 0 and s2 = 0, but it is easier and more generic to refrain from
doing this. At the two “far” sides, satisfying s1 = Smax and s2 = Smax,
linear boundary conditions are selected, that is,
us1s1(Smax, s2, t) = 0
(0 < s2 < Smax, 0 ≤t ≤T),
us2s2(s1, Smax, t) = 0
(0 < s1 < Smax, 0 ≤t ≤T).
For the spatial grid the Cartesian product of two nonuniform grids
given by Example 4.2.1 (with Smin=0 and L=K/3) is taken. Accordingly,

102
Numerical Partial Differential Equations in Finance Explained
the set of spatial grid points at which u is approximated becomes
(s1,i , s2,j)
for 0 ≤i ≤m1, 0 ≤j ≤m2,
(13.4)
where sk,0, sk,1, . . . , sk,mk denotes the grid in the k-th spatial direction
(k = 1, 2). Notice that the grid points at the boundary of the square are
all included since the values of the exact solution are not prescribed
there. By construction, the two-dimensional spatial grid possesses
relatively many grid points near the important location (s1, s2) = (K, K).
For the spatial discretization second-order central formulas for con-
vection and diffusion are taken to semidiscretize the spatial derivatives
us1, us2, us1s1, us2s2. At the boundary of the truncated spatial domain
we have the following. Firstly, (for k = 1, 2) if sk = 0, then the parts
in (13.1) involving usk and usksk both vanish. As a consequence, they
are trivially dealt with in the semidiscretization. Next, (for k = 1, 2)
if sk = Smax, then the derivative usksk vanishes by the linear bound-
ary condition and the derivative usk is semidiscretized by means of the
ﬁrst-order backward formula as in Section 4.1.
It remains for us to consider semidiscretization of the mixed deriv-
ative us1s2. A useful approach to deriving ﬁnite difference formulas for
this term is to regard it as successive differentiation in the s1- and s2-
directions and then numerically mimicking this. If ωk,i,–1 , ωk,i,0 , ωk,i,1
denote the coefﬁcients of any given ﬁnite difference formula for con-
vection in the sk-direction at the point sk,i, then the following ﬁnite
difference approximation for the mixed derivative is obtained,
us1s2(s1,i , s2,j , t) ≈
1

p=–1
1

q=–1
ω1,i,p ω2,j,q u(s1,i+p , s2,j+q , t).
(13.5)
With central formula A for convection in both directions, this ap-
proximation uses four function values of u, centred about the point
(s1,i , s2,j). With central formula B in both directions, it uses nine
function values in general. If the spatial grid were uniform in both
directions, with constant mesh widths h1 and h2, respectively, then
the above approximation reduces with either formula to
u(s1,i+1 , s2,j+1 , t) + u(s1,i–1 , s2,j–1 , t) – u(s1,i–1 , s2,j+1 , t) – u(s1,i+1 , s2,j–1 , t)
4h1h2
.

13
Two-Asset Options
103
On smooth nonuniform Cartesian grids, as considered here, it can be
shown by Taylor’s theorem that the truncation error with the approx-
imation (13.5) using either formula A or B is O((ξ)2 + ξη + (η)2)
whenever u is smooth, where ξ and η denote the constant mesh
widths of the underlying artiﬁcial grids for the s1- and s2-directions,
respectively; compare Section 4.2.
Concerning the boundary of the spatial domain, the part in the
PDE (13.1) involving the mixed derivative term vanishes if s1 = 0 or
s2 = 0. If s1 = Smax or s2 = Smax, then the ﬁnite difference treatment
of the mixed derivative term is naturally induced by that of the two
convection terms at these boundary sides through (13.5).
13.2.2
Cell Averaging
As in the one-dimensional case, it is beneﬁcial also in the multi-
dimensional case to slightly modify the initial data at the spatial grid
by applying cell averaging near the points of nonsmoothness of the
payoff function. For the payoff (13.2), these points make up three line
segments, compare Figure 13.1:
s1 = K and 0 ≤s2 < K;
s2 = K and 0 ≤s1 < K;
s2 = s1 and K ≤s1 ≤Smax.
Deﬁne for k = 1, 2
sk,l+1/2 = 1
2(sk,l + sk,l+1)
for 0 ≤l < mk,
hk,l+1/2 = sk,l+1/2 – sk,l–1/2
for 0 ≤l ≤mk,
with sk,–1/2 = 0 and sk,mk+1/2 = Smax at the boundary of the spatial
domain. Consider any given cell
[s1,i–1/2 , s1,i+1/2) × [s2,j–1/2 , s2,j+1/2).
If this has a nonempty intersection with the set of points where the
payoff φ is nonsmooth, then the pointwise value φ(s1,i , s2,j) in the
initial data is replaced by the cell averaged value
1
h1,i+1/2 h2,j+1/2
 s1,i+1/2
s1,i–1/2
 s2,j+1/2
s2,j–1/2
φ(s1, s2) ds2 ds1.
(13.6)

104
Numerical Partial Differential Equations in Finance Explained
For many payoff functions, including (13.2), this integral is readily cal-
culated. Otherwise a numerical integration rule can be applied for its
approximation.
13.2.3
Semidiscrete System
The semidiscretization outlined above of the initial-boundary value
problem for the PDE (13.1) leads to an initial value problem for a sys-
tem of ODEs. This system can be written in the form (4.1) with size
ν = (m1+1)(m2+1). Here the vector U(t) represents the semidiscrete ap-
proximation to the exact solution u(·, ·, t) on the Cartesian grid (13.4),
where we choose the lexicographical order. The vector g(t) is identic-
ally equal to zero since there are no contributions from the boundary
conditions; this somewhat simpliﬁes the implementation. Thus
U′(t) = AU(t)
(0 < t ≤T).
The matrix A can be conveniently expressed by means of the Kro-
necker product, denoted by ⊗. If P and Q = (qij) are any given two
matrices, then by deﬁnition
Q ⊗P =

qijP

.
Hence, each entry in Q is replaced by that entry multiplied with the
matrix P. This obviously yields a (much) larger matrix. Note that the
Kronecker product is a noncommutative operation. For the matrix A,
it can be shown that
A = A0 + A1 + A2 ,
(13.7a)
A0 = ρ σ1σ2

X2D(1)
2

⊗

X1D(1)
1

,
(13.7b)
A1 = I2 ⊗

1
2σ 2
1 X 2
1 D(2)
1 + rX1D(1)
1 – 1
2rI1

,
(13.7c)
A2 =

1
2σ 2
2 X 2
2 D(2)
2 + rX2D(1)
2 – 1
2rI2

⊗I1 .
(13.7d)
Here A0 represents the mixed derivative part in (13.1) and (for k = 1, 2)
Ak represents all derivative terms in the k-th spatial direction plus half

13
Two-Asset Options
105
of the –ru term. The D(l)
k , Xk, Ik are given (mk +1)×(mk +1) matrices for
k, l ∈{1, 2} where Ik is the identity matrix, Xk is the diagonal matrix
Xk = diag(sk,0, sk,1, . . . , sk,mk)
and D(l)
k denotes the matrix representing numerical differentiation of
order l in the k-th spatial direction by the relevant ﬁnite difference for-
mula. More precisely, if 1 ≤i ≤mk – 1, then the i-th row of D(l)
k has
as entries in columns i – 1, i, i + 1 the pertinent ﬁnite difference coef-
ﬁcients ωk,i,–1 , ωk,i,0 , ωk,i,1, respectively, and is zero elsewhere. The
entries in the top row, indicated by number 0, are not important as
they are multiplied by zero in (13.7). One can therefore set this row
equal to zero. In view of the treatment of the linear boundary con-
dition at sk = Smax, the last row of D(1)
k , indicated by number mk,
corresponds to the ﬁrst-order backward formula for convection and
the last row of D(2)
k
is equal to zero.
The numerical differentiation matrices D(l)
k
are all tridiagonal. It
follows that the matrix A1 is tridiagonal too and A2 is essentially tridi-
agonal, that is, up to a simple permutation. The matrix A, on the other
A1
0
100
0
100
0
100
0
100
A2
A0
0
100
0
100
A
0
100
0
100
Figure 13.3
Sparsity pattern of A, A0, A1, A2 given by (13.7) if m1 = m2 = 9. Finite
difference approximation (13.5) of mixed derivative based on formula B

106
Numerical Partial Differential Equations in Finance Explained
hand, is not tridiagonal. Besides a main tridiagonal band, it possesses
a tridiagonal band on either side that lies “far away”, at a distance dir-
ectly proportional to m1. This particular structure is a consequence of
the two-dimensionality of the PDE (13.1). As an illustration Figure 13.3
displays the sparsity pattern (all nonzero entries) of each of the four
matrices A, A0, A1, A2 for a small-sized sample case.
13.3
ADI Schemes
For the temporal discretization of the semidiscretized two-dimensional
PDE (13.1) the Crank–Nicolson method with damping can be applied
where the obtained linear system in each time step is solved by means
of straightforward LU factorization. Due to the size and structure of
the present matrix A, discussed above, the matrices L and U exhibit
substantial ﬁll-in, however. Both possess many more nonzero entries
than the linear system matrix I – 1
2tA itself. This results in a much
larger amount of ﬂoating-point operations per time step than if A were
tridiagonal. For higher-dimensional option valuation PDEs, such as for
arbitrary multi-asset options, this increase in computational cost is
even more pronounced. One way around this is to use a sparse direct
solver or a suitable iterative solver for the linear systems. An alternative
approach, which we discuss here, is to apply an Alternating Direction
Implicit (ADI) scheme for the temporal discretization. ADI schemes
effectively employ the splitting A = A0 + A1 + A2 given by (13.7). These
schemes are of the operator splitting type, like the IMEX scheme from
Chapter 12.
Let θ ∈(0, 1] be a given parameter, let N ≥1 be any given in-
teger and let step size t = T/N and temporal grid points tn = nt.
The Douglas scheme constitutes the basic ADI scheme. It success-
ively deﬁnes, in a one-step fashion, approximations Un to U(tn) for
n = 1, 2, . . . , N by
⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
Y0 = Un–1 + tAUn–1,
Y1 = Y0 + θtA1

Y1 – Un–1

,
Y2 = Y1 + θtA2

Y2 – Un–1

,
Un = Y2.
(13.8)

13
Two-Asset Options
107
The Yk’s denote internal stages that are discarded after each time step.
The scheme (13.8) is implicit and bears resemblance to the θ-method.
The computational cost per time step of the Douglas scheme is often
much lower, however, than that of the θ-method. The Douglas scheme
starts with an explicit stage, deﬁning Y0, which is followed by two
implicit unidirectional stages, deﬁning Y1 and Y2. The latter vectors
are the solutions to two linear systems with matrices I – θtA1 and
I –θtA2, respectively. Since these matrices are both (essentially) tridi-
agonal, the corresponding linear systems can be solved very efﬁciently
by means of LU factorization. The number of ﬂoating-point operations
per time step of the Douglas scheme is then directly proportional to
the size ν of A, that is, the number of spatial grid points, which is
optimal.
An important useful feature of the Douglas scheme is that it treats
the mixed derivative part in an explicit way: the matrix A0 occurs only
in the ﬁrst stage. Hence, it is not required to solve linear systems in-
volving this matrix. There is a disadvantage to (13.8), however, since
the ﬁrst stage is just a forward Euler step. Consequently, its temporal
convergence order does not exceed one whenever A0 is nonzero,
which is the common situation in practice. The following two ex-
tensions achieve temporal convergence order equal to 2 also if A0 is
nonzero.
The ﬁrst extension is the Modiﬁed Craig–Sneyd (MCS) scheme:
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
Y0 = Un–1 + tAUn–1,
Y1 = Y0 + θtA1

Y1 – Un–1

,
Y2 = Y1 + θtA2

Y2 – Un–1

,
Y0 = Y0 + θtA0

Y2 – Un–1

,
Y0 = Y0 +

1
2 – θ

tA

Y2 – Un–1

,
Y1 = Y0 + θtA1
Y1 – Un–1

,
Y2 = Y1 + θtA2
Y2 – Un–1

,
Un = Y2.
(13.9)

108
Numerical Partial Differential Equations in Finance Explained
The second extension is the Hundsdorfer–Verwer (HV) scheme:
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
Y0 = Un–1 + tAUn–1,
Y1 = Y0 + θtA1

Y1 – Un–1

,
Y2 = Y1 + θtA2

Y2 – Un–1

,
Y0 = Y0 + 1
2tA

Y2 – Un–1

,
Y1 = Y0 + θtA1
Y1 – Y2

,
Y2 = Y1 + θtA2
Y2 – Y2

,
Un = Y2.
(13.10)
The initial three stages of the MCS and HV schemes are the same
as those of the Douglas scheme. These schemes then perform a
subsequent explicit stage, which is followed again by two implicit
unidirectional stages. The special case θ = 1
2 of (13.9) is called the
Craig–Sneyd (CS) scheme. Like the Douglas scheme, the MCS and HV
schemes also treat the mixed derivative part in an explicit manner.
The amount of computational work per time step for the two schemes
(13.9) and (13.10) is about twice that of the basic scheme (13.8).
For the MCS and HV schemes it has been proved that, under stabil-
ity and smoothness conditions, the temporal convergence bound (7.4)
holds in the scaled Euclidean norm with order q = 2 and constant C in-
dependent of the spatial mesh widths. The pertinent conditions admit
arbitrary (nonzero) correlation factors ρ. For this generic situation, a
recommended lower bound on the parameter θ for the MCS scheme
is θ ≥1
3 and for the HV scheme it is given by θ ≥1 – 1
2
√
2 ≈0.293 (if
the PDE is diffusion-dominated) and θ ≥1
2 + 1
6
√
3 ≈0.789 (if the PDE
is convection-dominated). For the HV scheme the ﬁrst of these two
bounds is satisfactory in the case of the PDE (13.1) unless one of the
volatilities σ1, σ2 is very low. Practical experience with the above ADI
schemes shows that a smaller value θ often yields a better (smaller)
error constant C.
13.4
Numerical Study
We consider experiments with the discretization of the valuation prob-
lem for the European call option on the maximum of two assets

13
Two-Asset Options
109
described in the foregoing two sections. The parameter set (13.3) is
chosen. For the spatial discretization, the same number of grid points
in the two directions is taken, m1 = m2 = m, and formula B is used
for the ﬁnite difference discretization of the convection term as well
as for the mixed derivative term through (13.5). For the temporal dis-
cretization we select the Crank–Nicolson scheme together with four
ADI schemes:
• Douglas with θ = 1
2,
• MCS with θ = 1
3,
• MCS with θ = 1
2 (CS),
• HV with θ = 1 – 1
2
√
2.
Damping is always applied, using two substeps of backward Euler at
the start.
To study the convergence behaviour of the different temporal
discretization schemes we consider the norm of the temporal discret-
ization error on a natural region of interest,
e ROI(t;m) = max{|Uκ(T) – UN,κ|: 0 ≤i, j ≤m, 1
2K < s1,i , s2,j < 3
2K},
where κ = κ(i, j) denotes the index such that Uκ(T) and UN,κ cor-
respond to the spatial grid point (s1,i , s2,j). Figure 13.4 shows the
errors e ROI(t;m) versus 1/m with N = m for 10 ≤m ≤100. For
the Douglas scheme (light squares) a ﬁrst-order temporal convergence
behaviour is found. This convergence order is due to the presence
of a mixed derivative part (ρ is nonzero), as discussed in the pre-
vious section. For the other four schemes a favourable second-order
temporal convergence behaviour is observed. The Crank–Nicolson
scheme (light bullets) yields the most accurate results, but is compu-
tationally more expensive. The MCS scheme with θ = 1
3 (dark squares)
and the HV scheme with θ = 1 – 1
2
√
2 (dark triangles) both achieve al-
most the same accuracy as the Crank–Nicolson scheme, but at a much
lower computational cost in general. The temporal errors for the CS
scheme (dark bullets) are approximately twice as large as those for the
MCS and HV schemes, for about the same amount of computational
work.

110
Numerical Partial Differential Equations in Finance Explained
10−2
10−1
10−4
10−3
10−2
10−1
1/m
e
Figure 13.4
Call option on the maximum of two assets with parameter set (13.3).
Temporal error e ROI(t;m) versus 1/m with N = m for 10 ≤m ≤100. Schemes:
Crank–Nicolson (light bullets), Douglas with θ = 1
2 (light squares), CS (dark bullets),
MCS with θ = 1
3 (dark squares), HV with θ = 1 – 1
2
√
2 (dark triangles)
We next examine the norm of the total discretization error,
E ROI(t;m) = max{|ui,j – UN,κ|: 0 ≤i, j ≤m, 1
2K < s1,i , s2,j < 3
2K},
where ui,j = u(s1,i , s2,j, T). Figure 13.5 displays the total errors versus
1/m with N = m and 10 ≤m ≤100. For the Douglas scheme, if
m ≳25, then the total errors are only O(m–1). This is a consequence
of the ﬁrst-order temporal convergence. For the other four schemes
the total errors are essentially the same and O(m–2). Hence, second-
order convergence is attained with these schemes. Taking into account
the amount of computational work, the CS, MCS and HV schemes are
clearly preferable over the Crank–Nicolson scheme.
It is ﬁnally mentioned that if the ﬁnite difference formula A is
applied instead of formula B, then the obtained total errors with
Crank–Nicolson and the latter ADI schemes are always somewhat lar-
ger (at most a factor 2), but a second-order convergence behaviour is
retained.

13
Two-Asset Options
111
10−2
10−1
10−3
10−2
10−1
100
1/m
E
Figure 13.5
Call option on the maximum of two assets with parameter set (13.3).
Total error E ROI(t;m) versus 1/m with N = m for 10 ≤m ≤100. Schemes: Crank–
Nicolson (light bullets), Douglas with θ = 1
2 (light squares), CS (dark bullets), MCS
with θ = 1
3 (dark squares), HV with θ = 1 – 1
2
√
2 (dark triangles)
13.5
Notes and References
Multi-asset options and their numerical valuation are discussed in for
example the books [11, 21, 58, 79, 85, 90, 94].
ADI schemes were introduced in 1955 by Peaceman and Rachford
[69] and Douglas [18] and subsequently developed by Douglas and
Rachford [20], Brian [7] and Douglas [19] for solving the two- and
three-dimensional heat equations. These original ADI discretizations
can all be written in the form (13.8) with A0 = 0 and with an additional
internal stage Y3 in the case of three dimensions.
In [60, 61] the ADI idea was applied to two-dimensional convection-
diffusion equations containing a mixed derivative term, where this
term was dealt with in an explicit way. The pertinent scheme can be
formulated as (13.8) with θ = 1
2.
In [16] a novel ADI scheme was proposed for arbitrary multi-
dimensional pure diffusion equations with mixed derivative terms,
where these terms are also handled explicitly. In the case of two
dimensions it becomes the scheme (13.9) with θ = 1
2.

112
Numerical Partial Differential Equations in Finance Explained
The general scheme (13.9) was introduced in [42] and the scheme
(13.10) in [48, 49], both also for arbitrary spatial dimensions. The ap-
plication of the latter scheme to PDEs involving mixed derivative terms
was ﬁrst analyzed in [41].
ADI schemes have been employed in computational ﬁnance since
the mid-1990s, compare [58, 85, 90]. For actual applications of ADI
schemes to advanced contemporary ﬁnancial PDEs, see for example
[17, 28, 29, 35, 52].
An ample stability and convergence analysis for ADI schemes ap-
plied to PDEs without mixed derivative terms is presented in [49].
At present the most comprehensive stability results for ADI schemes
that are relevant to PDEs with mixed derivative terms are provided
in [36, 37, 41, 42, 64]. These references contain in particular the
recommended lower bounds on θ from Section 13.3. The temporal
convergence result stated in the same section has been established in
[43, 44]. A detailed convergence analysis for the scheme (13.9) in the
case of nonsmooth initial data has been presented in [93].
For more information on operator splitting methods in ﬁnance, see
also [38].

Appendix A: Wiener Process
A standard Brownian motion or Wiener process in R is a family of
random variables Wτ (τ ≥0) on a same probability space (, F, P)
such that the following four conditions hold:
(i) W0(ω) = 0 for almost all ω ∈,
(ii) for every τ, υ ≥0 the random variable Wτ+υ – Wτ is normally
distributed with mean 0 and variance υ,
(iii) for every 0 = τ0 < τ1 < · · · < τN the random variables Wτn –Wτn–1
(n = 1, 2, . . . , N) are independent,
(iv) for almost every ω ∈ the sample path Wτ(ω) (τ ≥0) is
continuous.
As an illustration, ﬁve sample paths on [0, 1] are displayed in the next
ﬁgure.
© The Author(s) 2017
113
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9

114
Appendix A: Wiener Process
0
0.5
1
−1.5
−1
−0.5
0
0.5
1
1.5
W

Appendix B: Feynman–Kac Theorem
Let T > 0 and r ≥0 be given constants and let α, β, φ be given
functions from R into R. For any given t ∈(0, T] consider the Itô
stochastic differential equation
dSτ = α(Sτ) dτ + β(Sτ) dWτ
( T – t < τ ≤T)
and for any given s ∈R deﬁne
u(s, t) = E[ e–rt φ(ST) | ST–t = s ].
Then under appropriate assumptions on α, β, φ the function u is well-
deﬁned and is the unique solution to the PDE
∂u
∂t (s, t) = 1
2β(s)2∂2u
∂s2 (s, t) + α(s)∂u
∂s (s, t) – ru(s, t)
(B.1)
for s ∈R, 0 < t ≤T with initial condition u(s, 0) = φ(s) for s ∈R.
Full details and a proof of the Feynman–Kac theorem are given
in for example [59, 68, 80]. Various useful variants and extensions are
also discussed there.
(B.1) is often referred to as a Feynman–Kac equation. It is further
closely related to a so-called backward Kolmogorov equation.
© The Author(s) 2017
115
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9

Appendix C: Down-and-Out Put Option Value
Let the barrier H < K. Then for s ≥H, 0 < t ≤T the fair value u(s, t)
of a down-and-out put option under the Black–Scholes framework is
given by:
u(s, t) = s [ N (d1) – N (d3)] – e–rtK [ N (d2) – N (d4)] +
s(H/s)2λ [ N (d5) – N (d7)] – e–rtK(H/s)2λ–2 [ N (d6) – N (d8)] ,
where
λ = r
σ 2 + 1
2 ,
μ = σ√t ,
d1 = ln (s/K)
μ
+ λμ ,
d2 = d1 – μ ,
d3 = ln (s/H)
μ
+ λμ ,
d4 = d3 – μ ,
d5 = ln (H/s)
μ
+ λμ ,
d6 = d5 – μ ,
d7 = ln (H2/(sK))
μ
+ λμ , d8 = d7 – μ ,
see for example [47].
© The Author(s) 2017
117
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9

Appendix D: Max-of-Two-Assets Call
Option Value
For s1 > 0, s2 > 0 and 0 < t ≤T the fair value u(s1, s2, t) of a call option
on the maximum of two assets under the Black–Scholes framework is
given by [84]:
u(s1, s2, t) = s1 N (d1, d, ρ1) + s2 N (d2, –d + σ
√
t, ρ2) –
e–rtK [1 – N ( – d1 + σ1
√
t, –d2 + σ2
√
t, ρ)] ,
where
σ =

σ 2
1 + σ 2
2 – 2ρσ1σ2 ,
ρ1 = σ1 – ρσ2
σ
,
ρ2 = σ2 – ρσ1
σ
,
d = ln (s1/s2) + 1
2σ 2t
σ√t
,
di = ln (si/K) + (r + 1
2σ 2
i )t
σi
√t
(i = 1, 2) ,
and N (·, ·, ρ) denotes the bivariate normal cumulative distribution
function with zero mean and covariance matrix

1 ρ
ρ 1

.
© The Author(s) 2017
119
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9

Bibliography
[1] A. Almendral & C. W. Oosterlee, Numerical valuation of options with jumps in the
underlying, Appl. Numer. Math. 53 (2005) 1–18.
[2] L. Andersen & J. Andreasen, Jump-diffusion processes: volatility smile ﬁtting and
numerical methods for option pricing, Rev. Deriv. Res. 4 (2000) 231–262.
[3] L. Bachelier, Théorie de la spéculation, Annales Scientiﬁques de l’École Normale
Supérieure 3 (1900) 21–86.
[4] A. Berman & R. J. Plemmons, Nonnegative Matrices in the Mathematical Sciences,
SIAM, 1994.
[5] F. Black & M. Scholes, The pricing of options and corporate liabilities, J. Polit. Econ.
81 (1973) 637–654.
[6] M. J. Brennan & E. S. Schwartz, The valuation of American put options, J. Finan. 32
(1977) 449–462.
[7] P. L. T. Brian, A ﬁnite-difference method of high-order accuracy for the solution of
three-dimensional transient heat conduction problems, AIChE J. 7 (1961) 367–370.
[8] M. Briani, R. Natalini & G. Russo, Implicit-explicit numerical schemes for jump-
diffusion processes, Calcolo 44 (2007) 33–57.
[9] J. C. Butcher, Numerical Methods for Ordinary Differential Equations, 2nd ed., Wiley,
2008.
[10] L. Capriotti, Y. Jiang & A. Macrina, Real-time risk management: an AAD-PDE
approach, Int. J. Finan. Eng. 2 (2015) 1550039.
[11] I. J. Clark, Foreign Exchange Option Pricing, Wiley, 2011.
[12] R. Cont & P. Tankov, Financial Modelling with Jump Processes, Chapman & Hall,
2003.
[13] R. Cont & E. Voltchkova, A ﬁnite difference scheme for option pricing in jump
diffusion and exponential Lévy models, SIAM J. Numer. Anal. 43 (2005) 1596–1626.
[14] R. W. Cottle, J. S. Pang & R. E. Stone, The Linear Complementarity Problem,
Academic Press, 1992.
© The Author(s) 2017
121
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9

122
Bibliography
[15] R. Courant, K. O. Friedrichs & H. Lewy, Über die partiellen Differenzengleichungen
der mathematischen Physik, Math. Anal. 100 (1928) 32–74.
[16] I. J. D. Craig & A. D. Sneyd, An alternating-direction implicit scheme for parabolic
equations with mixed derivatives, Comp. Math. Appl. 16 (1988) 341–350.
[17] D. M. Dang, C. C. Christara, K. R. Jackson & A. Lakhany, An efﬁcient numerical
partial differential equation approach for pricing foreign exchange interest rate
hybrid derivatives, J. Comp. Finan. 18 (2015) 39–93.
[18] J. Douglas, On the numerical integration of uxx + uyy = ut by implicit methods, J.
Soc. Ind. Appl. Math. 3 (1955) 42–65.
[19] J. Douglas, Alternating direction methods for three space variables, Numer. Math.
4 (1962) 41–63.
[20] J. Douglas & H. H. Rachford, On the numerical solution of heat conduction
problems in two and three space variables, Trans. Amer. Math. Soc. 82 (1956)
421–439.
[21] D. J. Duffy, Finite Difference Methods in Financial Engineering, Wiley, 2006.
[22] L. C. Evans, Partial Differential Equations, 2nd ed., AMS, 2010.
[23] L. Feng & V. Linetsky, Pricing options in jump-diffusion models: an extrapolation
approach, Oper. Res. 56 (2008) 304–325.
[24] P. A. Forsyth, private communication, 2016.
[25] P. A. Forsyth & K. R. Vetzal, Quadratic convergence for valuing American options
using a penalty method, SIAM J. Sci. Comp. 23 (2002) 2095–2122.
[26] M. B. Giles, Adjoint methods for option pricing, Greeks and calibration using PDEs
and SDEs, Lecture notes, Oxford Univ., 2012.
[27] M. B. Giles & R. Carter, Convergence analysis of Crank–Nicolson and Rannacher
time-marching, J. Comp. Finan. 9 (2006) 89–112.
[28] T. Haentjens, Efﬁcient and stable numerical solution of the Heston–Cox–Ingersoll–
Ross partial differential equation by alternating direction implicit ﬁnite difference
schemes, Int. J. Comp. Math. 90 (2013) 2409–2430.
[29] T. Haentjens & K. J. in ’t Hout, Alternating direction implicit ﬁnite difference
schemes for the Heston–Hull–White partial differential equation, J. Comp. Finan.
16 (2012) 83–110.
[30] T. Haentjens & K. J. in ’t Hout, ADI schemes for pricing American options under
the Heston model, Appl. Math. Finan. 22 (2015) 207–237.
[31] E. Hairer, S. P. Nørsett & G. Wanner, Solving Ordinary Differential Equations I, 2nd
ed., Springer, 1993.
[32] E. Hairer & G. Wanner, Solving Ordinary Differential Equations II, 2nd ed., Springer,
1996.
[33] Y. d’Halluin, P. A. Forsyth & K. R. Vetzal, Robust numerical methods for contingent
claims under jump diffusion processes, IMA J. Numer. Anal. 25 (2005) 87–112.
[34] D. J. Higham, An Introduction to Financial Option Valuation, Cambridge Univ. Press,
2004.
[35] K. J. in ’t Hout & S. Foulon, ADI ﬁnite difference schemes for option pricing in the
Heston model with correlation, Int. J. Numer. Anal. Mod. 7 (2010) 303–320.
[36] K. J. in ’t Hout & C. Mishra, Stability of the modiﬁed Craig–Sneyd scheme for two-
dimensional convection-diffusion equations with mixed derivative term, Math.
Comp. Simul. 81 (2011) 2540–2548.

Bibliography
123
[37] K. J. in ’t Hout & C. Mishra, Stability of ADI schemes for multidimensional diffusion
equations with mixed derivative terms, Appl. Numer. Math. 74 (2013) 83–94.
[38] K. J. in ’t Hout & J. Toivanen, Application of operator splitting methods in ﬁnance,
in: “Splitting Methods in Communication, Imaging, Science, and Engineering”, eds.
R. Glowinski, S. J. Osher and W. Yin, Springer, 541–575 (2016).
[39] K. J. in ’t Hout & K. Volders, Stability of central ﬁnite difference schemes on non-
uniform grids for the Black–Scholes equation, Appl. Numer. Math. 59 (2009) 2593–
2609.
[40] K. J. in ’t Hout & K. Volders, Stability and convergence analysis of discretizations
of the Black–Scholes PDE with the linear boundary condition, IMA J. Numer. Anal.
34 (2014) 296–325.
[41] K. J. in ’t Hout & B. D. Welfert, Stability of ADI schemes applied to convection-
diffusion equations with mixed derivative terms, Appl. Numer. Math. 57 (2007)
19–35.
[42] K. J. in ’t Hout & B. D. Welfert, Unconditional stability of second-order ADI schemes
applied to multi-dimensional diffusion equations with mixed derivative terms,
Appl. Numer. Math. 59 (2009) 677–692.
[43] K. J. in ’t Hout & M. Wyns, Convergence of the Hundsdorfer–Verwer scheme for
two-dimensional convection-diffusion equations with mixed derivative term, AIP
Conf. Proc. 1648 (2015) 850054.
[44] K. J. in ’t Hout & M. Wyns, Convergence of the Modiﬁed Craig–Sneyd scheme for
two-dimensional convection-diffusion equations with mixed derivative term, J.
Comp. Appl. Math. 296 (2016) 170–180.
[45] S. D. Howison, C. Reisinger & J. H. Witte, The effect of nonsmooth payoffs on the
penalty approximation of American options, SIAM J. Finan. Math. 4 (2013) 539–
574.
[46] Y. Huang, P. A. Forsyth & G. Labahn, Inexact arithmetic considerations for dir-
ect control and penalty methods: American options under jump diffusion, Appl.
Numer. Math. 72 (2013) 33–51.
[47] J. C. Hull, Options, Futures, and Other Derivatives, 9th ed., Pearson, 2014.
[48] W. Hundsdorfer, Accuracy and stability of splitting with Stabilizing Corrections,
Appl. Numer. Math. 42 (2002) 213–233.
[49] W. Hundsdorfer & J. G. Verwer, Numerical Solution of Time-Dependent Advection-
Diffusion-Reaction Equations, Springer, 2003.
[50] S. Ikonen & J. Toivanen, Operator splitting methods for American option pricing,
Appl. Math. Lett. 17 (2004) 809–814.
[51] S. Ikonen & J. Toivanen, Operator splitting methods for pricing American options
under stochastic volatility, Numer. Math. 113 (2009) 299–324.
[52] A. Itkin & P. Carr, Jumps without tears: a new splitting technology for barrier
options, Int. J. Numer. Anal. Mod. 8 (2011) 667–704.
[53] P. Jaillet, D. Lamberton & B. Lapeyre, Variational inequalities and the pricing of
American options, Acta Appl. Math. 21 (1990) 263–289.
[54] R. Kangro & R. Nicolaides, Far ﬁeld boundary conditions for Black–Scholes
equations, SIAM J. Numer. Anal. 38 (2000) 1357–1368.

124
Bibliography
[55] H. O. Kreiss, V. Thomée & O. Widlund, Smoothing of initial data and rates of
convergence for parabolic difference equations, Comm. Pure Appl. Math. 23 (1970)
241–259.
[56] Y. Kwon & Y. Lee, A second-order ﬁnite difference method for option pricing under
jump-diffusion models, SIAM J. Numer. Anal. 49 (2011) 2598–2617.
[57] P. Leoni, The Greeks and Hedging Explained, Palgrave Macmillan, 2014.
[58] A. Lipton, Mathematical Methods for Foreign Exchange, World Scientiﬁc, 2001.
[59] X. Mao, Stochastic Differential Equations and Applications, 2nd ed., Horwood, 2008.
[60] S. McKee & A. R. Mitchell, Alternating direction methods for parabolic equations
in two space dimensions with a mixed derivative, Computer J. 13 (1970) 81–86.
[61] S. McKee, D. P. Wall & S. K. Wilson, An alternating direction implicit scheme for
parabolic equations with mixed derivative and convective terms, J. Comp. Phys.
126 (1996) 64–76.
[62] R. C. Merton, Theory of rational option pricing, Bell J. Econ. Manag. Sc. 4 (1973)
141–183.
[63] R. C. Merton, Option pricing when underlying stock returns are discontinuous, J.
Finan. Econ. 3 (1976) 125–144.
[64] C. Mishra, A new stability result for the modiﬁed Craig–Sneyd scheme applied
to two-dimensional convection-diffusion equations with mixed derivatives, Appl.
Math. Comp. 285 (2016) 41–50.
[65] A. R. Mitchell & D. F. Grifﬁths, The Finite Difference Method in Partial Differential
Equations, Wiley, 1980.
[66] S. N. Neftci, An Introduction to the Mathematics of Financial Derivatives, 2nd ed.,
Academic Press, 2000.
[67] G. G. O’Brien, M. A. Hyman & S. Kaplan, A study of the numerical solution of
partial differential equations, J. Math. and Phys. 29 (1951) 223–251.
[68] B. Øksendal, Stochastic Differential Equations, 5th ed., Springer, 2010.
[69] D. W. Peaceman & H. H. Rachford, The numerical solution of parabolic and elliptic
differential equations, J. Soc. Ind. Appl. Math. 3 (1955) 28–41.
[70] D. M. Pooley, P. A. Forsyth & K. R. Vetzal, Numerical convergence properties of
option pricing PDEs with uncertain volatility, IMA J. Numer. Anal. 23 (2003) 241–
267.
[71] D. M. Pooley, K. R. Vetzal & P. A. Forsyth, Convergence remedies for non-smooth
payoffs in option pricing, J. Comp. Finan. 6 (2003) 25–40.
[72] R. Rannacher, Finite element solution of diffusion problems with irregular data,
Numer. Math. 43 (1984) 309–327.
[73] C. Reisinger & A. Whitley, The impact of a natural time change on the convergence
of the Crank–Nicolson scheme, IMA J. Numer. Anal. 34 (2014) 1156–1192.
[74] R. D. Richtmyer & K. W. Morton, Difference Methods for Initial-Value Problems, 2nd
ed., Wiley, 1967.
[75] S. Salmi & J. Toivanen, IMEX schemes for pricing options under jump-diffusion
models, Appl. Numer. Math. 84 (2014) 33–45.
[76] S. Salmi, J. Toivanen & L. von Sydow, An IMEX-scheme for pricing options under
stochastic volatility models with jumps, SIAM J. Sci. Comp. 36 (2014) B817–B834.
[77] W. Schoutens, Lévy Processes in Finance, Wiley, 2003.

Bibliography
125
[78] E. S. Schwartz, The valuation of warrants: implementing a new approach, J. Finan.
Econ. 4 (1977) 79–93.
[79] R. U. Seydel, Tools for Computational Finance, 5th ed., Springer, 2012.
[80] S. E. Shreve, Stochastic Calculus for Finance II, 8th pr., Springer, 2008.
[81] G. D. Smith, Numerical Solution of Partial Differential Equations: Finite Difference
Methods, 3rd ed., Clarendon Press, 1985.
[82] M. N. Spijker, Numerical Stability, Lecture notes, Univ. Leiden, 1998.
[83] J. C. Strikwerda, Finite Difference Schemes and Partial Differential Equations,
Wadsworth, 1989.
[84] R. M. Stulz, Options on the minimum or the maximum of two risky assets, J. Finan.
Econ. 10 (1982) 161–185.
[85] D. Tavella & C. Randall, Pricing Financial Instruments, Wiley, 2000.
[86] J. W. Thomas, Numerical Partial Differential Equations: Finite Difference Methods,
Springer, 1995.
[87] L. N. Trefethen & M. Embree, Spectra and Pseudospectra, Princeton Univ. Press,
2005.
[88] A. E. P. Veldman & K. Rinzema, Playing with nonuniform grids, J. Eng. Math. 26
(1992) 119–130.
[89] B. A. Wade, A. Q. M. Khaliq, M. Yousuf, J. Vigo-Aguiar & R. Deininger, On smooth-
ing of the Crank–Nicolson scheme and higher order schemes for pricing barrier
options, J. Comp. Appl. Math. 204 (2007) 144–158.
[90] P. Wilmott, Derivatives, Wiley, 1999.
[91] P. Wilmott, J. Dewynne & S. Howison, Option Pricing, Oxford Financial Press, 1993.
[92] H. Windcliff, P. A. Forsyth & K. R. Vetzal, Analysis of the stability of the linear
boundary condition for the Black–Scholes equation, J. Comp. Finan. 8 (2004) 65–
92.
[93] M. Wyns, Convergence analysis of the Modiﬁed Craig–Sneyd scheme for two-
dimensional convection-diffusion equations with nonsmooth initial data, pub-
lished online in IMA J. Numer. Anal. (2016), doi: 10.1093/imanum/drw028
[94] Y. I. Zhu, X. Wu, I. L. Chern & Z. z. Sun, Derivative Securities and Difference Methods,
2nd ed., Springer, 2013.
[95] R. Zvan, P. A. Forsyth & K. R. Vetzal, Penalty methods for American options with
stochastic volatility, J. Comp. Appl. Math. 91 (1998) 199–218.
[96] R. Zvan, P. A. Forsyth & K. R. Vetzal, Robust numerical methods for PDE models of
Asian options, J. Comp. Finan. 1 (1998) 39–78.

Index
B
Black–Scholes formula, 8
Black–Scholes PDE, 5
Boundary condition
Dirichlet, 12, 26
Homogeneous, 13
Linear, 13, 28
Neumann, 12, 27
Periodic, 16
Brownian motion, 113
C
Cell average, 33, 38, 103
Contractivity, 23, 34, 59
D
Degeneracy, 14
Discounting, 6, 10
Discretization error
Spatial, 37, 43
Temporal, 63, 87
Total, 66
Drift rate, 3, 10
E
Early exercise boundary, 82, 83
Explicit payoff method, 84
F
Feynman–Kac theorem, 14, 115
Finite difference formula
First-order backward, 17, 28, 30
First-order forward, 18, 31
First-order upwind, 19
Mixed central/upwind, 34
Second-order central, 19, 20, 31
Fundamental solution, 11
G
Geometric Brownian motion, 3
Greeks, 45, 71
Green’s function, 11
H
Heat equation, 11
I
Ikonen–Toivanen (IT) splitting
method, 84
Initial condition, 6, 10
J
Jumps, 91
© The Author(s) 2017
127
K. in ’t Hout, Numerical Partial Differential Equations in Finance Explained,
Financial Engineering Explained, DOI 10.1057/978-1-137-43569-9

128
Index
L
Lax–Richtmyer theorem, 60
Linear complementarity problem
(LCP), 83
Lognormal distribution, 4, 91
M
Merton model, 91
Method of lines (MOL), 15
Mixed derivative, 99, 102
Model PDE, 10
N
No-arbitrage, 6
Nonuniform grid, 29, 41
Normal matrix, 21, 23
O
Option
American-style, 2, 81
Barrier, 75, 117
Call, 1, 81
Cash-or-nothing, 32, 69
European-style, 2
Put, 1, 81, 92
Two-asset, 99, 119
P
Parity relation, 7, 46, 73, 78
Partial differential complementarity
problem (PDCP), 82
Partial differential equation (PDE), 9
Partial integro-differential equation
(PIDE), 92
Payoff function, 3
Penalty method, 85
Positivity, 34, 59
R
Rannacher time stepping, 66, 68
Region of interest (ROI), 13
Risk-free rate, 5
S
Semidiscrete system, 15, 18, 26
Smooth grid, 29
Smoothing technique, 33
Stability, 21, 53
A-stability, 54
L-stability, 56, 66
CFL condition, 57
Eigenvalue condition, 57, 62
Stability function, 53
Stability region, 54
Test problem, 53
Unconditional, 56
T
Temporal discretization
θ-method, 51
Alternating Direction Implicit
(ADI) schemes, 106
Backward Euler method, 51, 58,
63, 66
Crank–Nicolson method, 51, 63
Forward Euler method, 51, 61
Implicit-explicit (IMEX) scheme,
95
Truncation error, 20
V
Variable step sizes, 88
Volatility, 3, 10
W
Wiener process, 113

