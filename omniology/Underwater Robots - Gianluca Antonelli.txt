Springer Tracts in Advanced Robotics
Volume 2
Editors: Bruno Siciliano · Oussama Khatib · Frans Groen

Springer Tracts in Advanced Robotics
Edited by B. Siciliano, O. Khatib, and F. Groen
Vol. 21: Ang Jr., M.H.; Khatib, 0. (Eds.)
Experimental Robotics IX { The 9th International
Symposium on Experimental Robotics
624 p. 2006 [3-540-28816-3]
Vol. 20: Xu, Y.; Ou, Y.
Control of Single Wheel Robots
188 p. 2005 [3-540-28184-3]
Vol. 19: Lefebvre, T.; Bruyninckx, H.; De Schutter, J.
Nonlinear Kalman Filtering for Force-Controlled
Robot Tasks
280 p. 2005 [3-540-28023-5]
Vol. 18: Barbagli, F.; Prattichizzo, D.; Salisbury, K. (Eds.)
Multi-point Interaction with Real and Virtual Objects
281 p. 2005 [3-540-26036-6]
Vol. 17: Erdmann, M.; Hsu, D.; Overmars, M.;
van der Stappen, F.A (Eds.)
Algorithmic Foundations of Robotics VI
472 p. 2005 [3-540-25728-4]
Vol. 16: Cuesta, F.; Ollero, A.
Intelligent Mobile Robot Navigation
224 p. 2005 [3-540-23956-1]
Vol. 15: Dario, P.; Chatila R. (Eds.)
Robotics Research { The Eleventh International
Symposium
595 p. 2005 [3-540-23214-1]
Vol. 14: Prassler, E.; Lawitzky, G.; Stopp, A.;
Grunwald, G.; Hagele, M.; Dillmann, R.;
Iossiˇdis. I. (Eds.)
Advances in Human-Robot Interaction
414 p. 2005 [3-540-23211-7]
Vol. 13: Chung, W.
Nonholonomic Manipulators
115 p. 2004 [3-540-22108-5]
Vol. 12: Iagnemma K.; Dubowsky, S.
Mobile Robots in Rough Terrain {
Estimation, Motion Planning, and Control
with Application to Planetary Rovers
123 p. 2004 [3-540-21968-4]
Vol. 11: Kim, J.-H.; Kim, D.-H.; Kim, Y.-J.; Seow, K.-T.
Soccer Robotics
353 p. 2004 [3-540-21859-9]
Vol. 10: Siciliano, B.; De Luca, A.; Melchiorri, C.;
Casalino, G. (Eds.)
Advances in Control of Articulated and Mobile Robots
259 p. 2004 [3-540-20783-X]
Vol. 9: Yamane, K.
Simulating and Generating Motions of Human Figures
176 p. 2004 [3-540-20317-6]
Vol. 8: Baeten, J.; De Schutter, J.
Integrated Visual Servoing and Force Control
198 p. 2004 [3-540-40475-9]
Vol. 7: Boissonnat, J.-D.; Burdick, J.; Goldberg, K.;
Hutchinson, S. (Eds.)
Algorithmic Foundations of Robotics V
577 p. 2004 [3-540-40476-7]
Vol. 6: Jarvis, R.A.; Zelinsky, A. (Eds.)
Robotics Research { The Tenth International Symposium
580 p. 2003 [3-540-00550-1]
Vol. 5: Siciliano, B.; Dario, P. (Eds.)
Experimental Robotics VIII
685 p. 2003 [3-540-00305-3]
Vol. 4: Bicchi, A.; Christensen, H.I.;
Prattichizzo, D. (Eds.)
Control Problems in Robotics
296 p. 2003 [3-540-00251-0]
Vol. 3: Natale, C.
Interaction Control of Robot Manipulators {
Six-degrees-of-freedom Tasks
120 p. 2003 [3-540-00159-X]
Vol. 2: Antonelli, G.
Underwater Robots { Motion and Force Control of
Vehicle-Manipulator Systems
209 p. 2003 [3-540-00054-2]
Vol. 1: Caccavale, F.; Villani, L. (Eds.)
Fault Diagnosis and Fault Tolerance for Mechatronic
Systems { Recent Advances
191 p. 2002 [3-540-44159-X]

Gianluca Antonelli
Underwater Robots
Motion and Force Control
of Vehicle-Manipulator Systems
Second edition
With 95 Figures

Professor Bruno Siciliano, Dipartimento di Informatica e Sistemistica, Universit`a degli Studi di Napoli Fede-
rico II, Via Claudio 21, 80125 Napoli, Italy, email: siciliano@unina.it
Professor Oussama Khatib, Robotics Laboratory, Department of Computer Science, Stanford University,
Stanford, CA 94305-9010, USA, email: khatib@cs.stanford.edu
Professor Frans Groen, Department of Computer Science, Universiteit vanAmsterdam, Kruislaan 403, 1098 SJ
Amsterdam, The Netherlands, email: groen@science.uva.nl
Author
Dr. Gianluca Antonelli
Universit`a degli Studi di Cassino
Dipartimento di Automazione, Elettromagnetismo,
Ingegneria dell’Informazione e Matematica Industriale
Via di Biasio 43
03043 Cassino
Italy
ISSN print edition: 1610-7438
ISSN electronic edition: 1610-742X
ISBN-10 3-540-31752-X
Springer Berlin Heidelberg New York
ISBN-13 978-3-540-31752-4
Springer Berlin Heidelberg New York
Library of Congress Control Number: 2006920068
This work is subject to copyright. All rights are reserved, whether the whole or part of the material is concerned,
speciﬁcally the rights of translation, reprinting, reuse of illustrations, recitation, broadcasting, reproduction on
microﬁlm or in other ways, and storage in data banks. Duplication of this publication or parts thereof is permitted
only under the provisions of the German Copyright Law of September 9, 1965, in its current version, and
permission for use must always be obtained from Springer-Verlag. Violations are liable to prosecution under
German Copyright Law.
Springer is a part of Springer Science+Business Media
springeronline.com
© Springer-Verlag Berlin Heidelberg 2006
Printed in Germany
The use of general descriptive names, registered names, trademarks, etc. in this publication does not imply,
even in the absence of a speciﬁc statement, that such names are exempt from the relevant protective laws and
regulations and therefore free for general use.
Typesetting: Digital data supplied by author.
Data-conversion and production: PTP-Berlin Protago-TEX-Production GmbH, Germany
Cover-Design: design & production GmbH, Heidelberg
Printed on acid-free paper
89/3141/Yu - 5 4 3 2 1 0

Editorial Advisory Board
EUROPE
Herman Bruyninckx, KU Leuven, Belgium
Raja Chatila, LAAS, France
Henrik Christensen, KTH, Sweden
Paolo Dario, Scuola Superiore Sant’Anna Pisa, Italy
R¨udiger Dillmann, Universit¨at Karlsruhe, Germany
AMERICA
Ken Goldberg, UC Berkeley, USA
John Hollerbach, University of Utah, USA
Lydia Kavraki, Rice University, USA
Tim Salcudean, University of British Columbia, Canada
Sebastian Thrun, Stanford University, USA
ASIA/OCEANIA
Peter Corke, CSIRO, Australia
Makoto Kaneko, Hiroshima University, Japan
Sukhan Lee, Sungkyunkwan University, Korea
Yangsheng Xu, Chinese University of Hong Kong, PRC
Shin’ichi Yuta, Tsukuba University, Japan
STAR (Springer Tracts in Advanced Robotics) has been promoted under the auspices
of EURON (European Robotics Research Network)
ROBOTICS
Research
Network
European
EURON
*
*
*
*
*
*
*
*
*
*
*
*

Ad Andrea e Giustina

E la locomotiva sembrava fosse un mostro strano
che l’uomo dominava con il pensiero e con la mano...
Francesco Guccini, La locomotiva, 1972.

Foreword
At the dawn of the new millennium, robotics is undergoing a major trans-
formation in scope and dimension. From a largely dominant industrial focus,
robotics is rapidly expanding into the challenges of unstructured environ-
ments. Interacting with, assisting, serving, and exploring with humans, the
emerging robots will increasingly touch people and their lives.
The goal of the new series of Springer Tracts in Advanced Robotics
(STAR) is to bring, in a timely fashion, the latest advances and develop-
ments in robotics on the basis of their signiﬁcance and quality. It is our hope
that the wider dissemination of research developments will stimulate more
exchanges and collaborations among the research community and contribute
to further advancement of this rapidly growing ﬁeld.
The volume by Gianluca Antonelli is the second edition of a successful
monograph, which was one of the ﬁrst volumes to be published in the series.
Being focused on an important class of robotic systems, namely underwa-
ter vehicle-manipulator systems, this volume improves the previous material
while expanding the state-of-the-art in the ﬁeld. New features deal with fault-
tolerant control and coordinated control of autonomous underwater vehicles.
A well-balanced blend of theoretical and experimental results, this volume
represents a ﬁne conﬁrmation in our STAR series!
Naples, Italy
Bruno Siciliano,
October 2005
STAR Editor

Acknowledgements
The contributions of a quite large number of people were determinant for the
realization of this monograph.
Prof. Stefano Chiaverini was my co-tutor during my PhD at the Universit`a
degli Studi di Napoli Federico II, he is now Full Professor at the Universit`a
degli Studi di Cassino. Since the beginning of the doctoral experience up to
present all the research that I have done is shared with him. As a matter
of fact, I consider myself as a co-author of this monograph. Furthermore,
Stefano was, somehow, also responsible of my decision to join the academic
career.
Prof. Lorenzo Sciavicco developed a productive, and friendly, research
environment in Napoli that was important for my professional growing.
Prof. Bruno Siciliano, my tutor both in the Master and PhD thesis, to whom
goes my warmest acknowledgements.
Prof. Fabrizio Caccavale, currently at the Universit`a della Basilicata,
Prof. Giuseppe Fusco currently at the Universit`a degli Studi di Cassino,
Dr. Tarun Podder, currently at the University of Rochester, Prof. Nilanjan
Sarkar, currently at the Vanderbilt University, Prof. Luigi Villani currently at
the Universit`a degli Studi di Napoli Federico II, Dr. Michael West, currently
at the University of Hawaii; all of them are co-authors of my wet papers and
deserve a lot of credit for this work.
During the PhD I have been visiting researcher at the Autonomous Sy-
stems Laboratory of the University of Hawaii where I carried out some expe-
riments on dynamic control of autonomous underwater vehicles and worked
on the interaction control chapter. I would like to acknowledge Prof. Nilanjan
Sarkar and Prof. Junku Yuh, my guests during the staying.
For this second edition several colleagues provide me with their illust-
rative material, I would like to thank Eng. Massimo Caccia, Prof. Giuseppe
Casalino, Prof. Tom McLain, Prof. Daniel Stilwell, Eng. Gianmarco Veruggio
and Prof. Junku Yuh.
My mother, my father, my brothers Marco and Fabrizio, my wife Giustina
and, recently, my son Andrea, they all tolerated, and will have to tolerate for
longtime, my engineeringness.

About the Author
Gianluca Antonelli was born in Roma, Italy, on December 19, 1970. He
received the “Laurea” degree in Electronic Engineering and the “Research
Doctorate” degree in Electronic Engineering and Computer Science from the
Universit`a degli Studi di Napoli Federico II in 1995 and 2000, respectively.
From January 2000 he is with the Universit`a degli Studi di Cassino where he
currently is an Associate Professor. He has published more than 60 journals
and conference papers; he was awarded with the “EURON Georges Giralt
PhD Award”, First Edition for the thesis published in the years 1999-2000.
From September, 2005 he is an Associate Editor of the IEEE Transactions on
Robotics. His research interests include simulation and control of underwater
robotic systems, force/motion control of robot manipulators, path planning
and obstacle avoidance for autonomous vehicles, identiﬁcation, multi-robot
systems.
Prof. Gianluca Antonelli
Dipartimento di Automazione, Elettromagnetismo,
Ingegneria dell’Informazione e Matematica Industriale
Universit`a degli Studi di Cassino
via G. Di Biasio 43,
03043, Cassino (FR), Italy
antonelli@unicas.it
http://webuser.unicas.it/antonelli

Preface to the Second Edition
The purpose of this Second Edition is to add material not covered in the
First Edition as well as streamline and improve the previous material.
The organization of the book has been substantially modiﬁed, an intro-
ductory Chapter containing the state of the art has been considered; the
modeling Chapter is substantially unmodiﬁed. In Chapter 3 the problem of
controlling a 6-Degrees-Of-Freedoms (DOFs) Autonomous Underwater Ve-
hicle (AUV) is investigated. Chapter 4 is a new Chapter devoted at a survey
of fault detection/tolerant strategies for ROVs/AUVs, it is mainly based
on the Chapter published in [10]. The following Chapter (Chapter 5) re-
ports experimental results obtained with the vehicle ODIN. The following 3
Chapters, from Chapter 6 to Chapter 8 are devoted at presenting kinematic,
dynamic and interaction control strategies for Underwater Vehicle Manipu-
lator Systems (UVMSs); new material has been added thanks also to several
colleagues who provided me with valuable material, I warmly thank all of
them. The content of Chapter 9 is new in this Second Edition and reports
preliminary results on the emerging topic of coordinated control of platoon
of AUVs. Finally, the bibliography has been updated.
The reader might be interested in knowing what she/he will not ﬁnd in
this book. Since the core of the book is the coordinated control of mani-
pulators mounted on underwater vehicles, control of non-holonomic vehicles
is not dealt with; this is an important topic also in view of the large num-
ber of existing torpedo-like vehicles. Another important aspect concerns the
sensorial apparatus, both from the technological point of view and from the
algorithmic aspect; most of the AUVs are equipped with redundant senso-
rial systems required both for localization/navigation purposes and for fault
detection/tolerant capabilities. Actuation is mainly obtained by means of
thrusters; those are still object of research for the modeling characteristics
and might be the object of improvement in terms of dynamic response.
Cassino, Italy
Gianluca Antonelli
January 2006

Preface to the First Edition
Underwater Robotics have known in the last years an increasing interest
from research and industry. Currently, it is common the use of manned un-
derwater robotics systems to accomplish missions as sea bottom and pipeline
survey, cable maintenance, oﬀ-shore structures’ monitoring and maintenance,
collect/release of biological surveys. The strong limit of the use of manned
vehicles is the enormous cost and risk in working in such an hostile environ-
ment. The aim of the research is to progressively make it possible to perform
such missions in a completely autonomous way.
This objective is challenging from the technological as well as from the
theoretical aspects since it implies a wide range of technical and research
topics. Sending an autonomous vehicle in an unknown and unstructured en-
vironment, with limited on-line communication, requires some on board in-
telligence and the ability of the vehicle to react in a reliable way to unexpec-
ted situations. Techniques as artiﬁcial intelligence, neural network, discrete
events, fuzzy logic can be useful in this high level mission control. The sensory
system of the vehicle must deal with a noisy and unstructured environment;
moreover, technologies as GPS are not applicable due to the impossibility to
underwater electromagnetic transmission; vision based systems are not fully
reliable due to the generally poor visibility. The actuating system is usually
composed of thrusters and control surfaces; all of them have a non-linear
dynamics and are strongly aﬀected by the hydrodynamic eﬀects.
In this framework the use of a manipulator mounted on a autonomous
vehicle plays an important role. From the control point of view, underwater
robotics is much more challenging with respect to ground robotics since the
former deal with unstructured environments, mobile base, signiﬁcant external
disturbance, low bandwidth of sensory and actuating systems, diﬃculty in
the estimation of the dynamic parameters, highly non-linear dynamics.
Referring to Autonomous Underwater Vehicles (AUVs), i.e., unthetered,
unmanned vehicles to be used mainly in survey missions, [294, 321] pre-
sent the state of the art of several existing AUVs and their control ar-
chitecture. Currently, there are more than 46 AUV models [321], among
others: ABE of the Woods Hole Oceanographic Institution (MA, USA), MA-
RIUS developed under the Marine Science and Technology Programme of
the IV framework of European Commission (Lisbon, Portugal), ODIN de-

XVIII
Preface to the First Edition
signed at the Autonomous Systems Laboratory of the University of Hawaii
(Honolulu, HI, USA), OTTER from the Monterey Bay Acquarium and St-
anford University (CA, USA), Phoenix and ARIES belonging to the Na-
val Postgraduate School (Monterey, CA, USA), Twin Burgers developed at
the University of Tokyo (Tokyo, Japan), Theseus belonging to ISE Rese-
arch Ltd (Canada). Reference [92] shows the control architecture of VOR-
TEX , a vehicle developed by Inria and Ifremer (France), and OTTER.
Focusing on the low level motion control of AUVs, most of the proposed
control schemes take into account the uncertainty in the model by resor-
ting to an adaptive strategy [83, 91, 126, 130, 138, 314] or a robust ap-
proach [90, 93, 145, 201, 259, 310, 311]. In [145] an estimation of the dynamic
parameters of the vehicle NPS AUV Phoenix is also provided. An overview
of control techniques for AUVs is reported in [127].
As a curiosity, in the Figure below there is a draw of one of the ﬁrst
manned underwater vehicles. It was found in the Codice Atlantico (Codex
Atlanticus), written by Leonardo Da Vinci between 1480 and 1518, together
with the development of some diver’s devices. Legends say that Leonardo
worked on the idea of an underwater military machine that he further dest-
royed by himself the results judged too dangerous. Maybe the ﬁrst idea of
an underwater machine is from Aristotle; following the legend he built a ma-
chine: skaphe andros (boat-man) that allowed Alexander the Great to stay
in deep for at least half a day during the war of Tiro in 325 b. C. This is
unrealistic, of course, also considering that the Archimedes’s law was still to
become a reality (around 250 b. C.).
Draw of the manned underwater vehicle developed by Leonardo Da Vinci
The current technology in control of underwater manipulation is limited
to the use of a master/slave approach in which a skilled operator has to
move a master manipulator that works as joystick for the slave manipulator
that is performing the task [56, 287]. The limitations of such a technique
are evident: the operator must be well trained, underwater communication
is hard and a signiﬁcant delay in the control is experienced. Moreover, if
the task has to be performed in deep waters, a manned underwater vehicle
close to the unmanned vehicle with the manipulator need to be considered

Preface to the First Edition
XIX
to overcome the communication problems thus leading to enormous cost in-
creasing. Few research centers are equipped with an autonomous Underwater
Vehicle-Manipulator System. Among the others:
• ODIN and OTTER can be provided with a one/two link manipulator to
study the interaction of the manipulator and the vehicle in order to execute
automatic retrieval tasks [297];
• on VORTEX a 7-link manipulator (PA10) can be mounted with a large
inertia with respect to the vehicle that implies a strong interaction between
them;
• SAUVIM , a semi-autonomous vehicle with an Ansaldo 7-link manipulator
is under development at the Autonomous Systems Laboratory of the Uni-
versity of Hawaii; this vehicle, in the ﬁnal version, will be able to operate
at the depth of 4000 m.
• AMADEUS, an acronym for Advanced MAnipulation for DEep Under-
water Sampling, funded by the European Commission, that involved the
Heriot-Watt University (UK), the Universit`a di Genova (Italy), CNR Isti-
tuto Automazione Navale, (Italy), the Universitat de Barcelona (Spain),
the Institute of Marine Biology of Crete (Greece). The project focused on
the co-ordinated control of two tele-operated underwater Ansaldo 7-link
manipulators and the development of an underwater hand equipped with
a slip sensor.
Focusing on the motion control of UVMSs, [56, 159] present a telemani-
pulated arm; in [192] an intelligent underwater manipulator prototype is
experimentally validated; [67, 68, 69] present some simulation results on
a Composite Dynamics approach for VORTEX/PA10; [106] evaluates the
dynamic coupling for a speciﬁc UVMS; adaptive approaches are presented
in [124, 197, 198]. Reference [206] reports some interesting experiments of
coordinated control. Very few papers investigated the redundancy resolution
of UVMSs by applying inverse kinematics algorithm with diﬀerent secondary
tasks [20, 24, 25, 249, 250].
This book deals with the main control aspects in underwater manipula-
tion tasks and dynamic control of AUVs. First, the mathematical model is
discussed; the aspects with signiﬁcant impact on the control strategy will
be remarked. In Chap. 6, kinematic control for underwater manipulation is
presented. Kinematic control plays a signiﬁcant role in unstructured robo-
tics where oﬀ-line trajectory planning is not a reliable approach; moreover,
the vehicle-manipulator system is often kinematically redundant with respect
to the most common tasks and redundancy resolution algorithms can then
be applied to exploit such characteristic. Dynamic control is then discussed
in Chap. 7; several motion control schemes are analyzed and presented in
this book. Some experimental results with the autonomous vehicle ODIN
(without manipulator) are presented, moreover some theoretical results on
adaptive control of AUVs are discussed. In Chap. 8, the interaction with
the environment is detailed. Such kind of operation is critical in underwater

XX
Preface to the First Edition
manipulation for several reasons that do not allow direct implementation of
the force control strategies developed for ground robotics. Finally, after ha-
ving developed some conclusions, a simulation tool for multi-body systems is
presented. This software package, developed for testing the control strategies
studied along the book, has been designed according to modular requirements
that make it possible to generate generic robotic systems in any desired en-
vironment.
Napoli, August 2002
Gianluca Antonelli

Notation
In this Chapter, the main acronyms and the notation that will be used in the
work are listed.
AUV
Autonomous Underwater Vehicle
CLIK
Closed Loop Inverse Kinematics
DOF
Degree Of Freedom
EKF
Extended Kalman Filter
FD
Fault Detection
FIS
Fuzzy Inference System
FTC
Fault Tolerant Controller
KF
Kalman Filter
ROV
Remotely Operated Vehicle
TCM
Thruster Control Matrix
UUV
Unmanned Underwater Vehicle
UVMS
Underwater Vehicle-Manipulator System
Σi, O −xyz
inertial frame (see Figure 2.1)
Σb, Ob −xbybzb
body(vehicle)-ﬁxed frame (see Figure 2.1)
IR, IN
Real, Natural numbers
η1 = [ x
y
z ]T ∈IR3
body(vehicle) position coordinates in the iner-
tial frame (see Figure 2.1)
η2 = [ φ
θ
ψ ]T ∈IR3
body(vehicle) Euler-angle coordinates in the
inertial frame (see Figure 2.1)
Q = {ε ∈IR3, η ∈IR}
quaternion expressing the body(vehicle) ori-
entation with respect to the inertial frame
η = [ ηT
1
ηT
2 ]T ∈IR6
body(vehicle) position/orientation

XXII
Notation
ηq = [ ηT
1
εT
η ]T ∈IR7
body(vehicle) position/orientation with the
orientation expressed by quaternions
ν1 = [ u
v
w ]T ∈IR3
vector representing the linear velocity of the
origin of the body(vehicle)-ﬁxed frame with
respect to the origin of the inertial frame ex-
pressed in the body(vehicle)-ﬁxed frame (see
Figure 2.1)
ν2 = [ p
q
r ]T ∈IR3
vector representing the angular velocity of the
body(vehicle)-ﬁxed frame with respect to the
inertial frame expressed in the body(vehicle)-
ﬁxed frame (see Figure 2.1)
ν = [ νT
1
νT
2 ]T ∈IR6
vector representing the linear/angular velo-
city in the body(vehicle)-ﬁxed frame
Rβ
α ∈IR3×3
rotation matrix expressing the transforma-
tion from frame α to frame β
Jk,o(η2) ∈IR3×3
Jacobian matrix deﬁned in (2.2)
Jk,oq(Q) ∈IR4×3
Jacobian matrix deﬁned in (2.10)
Je(η2) ∈IR6×6
Jacobian matrix deﬁned in (2.19)
Je,q(Q) ∈IR7×6
Jacobian matrix deﬁned in (2.23)
τ 1 = [ X
Y
Z ]T ∈IR3
vector representing the resultant forces acting
on the rigid body(vehicle) expressed in the
body(vehicle)-ﬁxed frame
τ 2 = [ K
M
N ]T ∈IR3
vector representing the resultant moment ac-
ting on the rigid body(vehicle) expressed in
the body(vehicle)-ﬁxed frame to the pole Ob
τ v = [ τ T
1
τ T
2 ]T ∈IR6
generalized forces: forces and moments acting
on the vehicle
τ .
v ∈IR6
generalized forces in the earth-ﬁxed-frame-
based model deﬁned in (2.53)
n
degrees of freedom of the manipulator
q ∈IRn
joint positions
τ q ∈IRn
joint torques
τ = [ τ T
v
τ T
q ]T ∈IR6+n
generalized forces: vehicle forces and moments
and joint torques
u ∈IRp
control inputs, τ = Bu (see (2.72))

Notation
XXIII
ζ = [ νT
1
νT
2
˙qT ]T ∈IR6+n system velocity
Φ ∈R(6+n)×nθ
UVMS regressor deﬁned in (2.73)
θ ∈Rnθ
vector of the dynamic parameters of the
UVMS regressor deﬁned in (2.73)
Φv ∈R6×nθ,v
vehicle regressor deﬁned in (2.54)
θv ∈Rnθ,v
vector of the dynamic parameters of the ve-
hicle regressor deﬁned in (2.54)
ηee1 = [ xE
yE
zE ]T ∈IR3 position of the end eﬀector in the inertial
frame (denoted with x = [ xE
yE
zE ]T in
the interaction control sections)
ηee2 = [ φE
θE
ψE ]T ∈IR3 orientation of the end eﬀector in the inertial
frame expressed by Euler angles
νee ∈IR6
end-eﬀector linear and angular velocities with
respect to the inertial frame expressed in the
end-eﬀector frame
Jk(RI
B) ∈IR(6+n)×(6+n)
Jacobian matrix deﬁned in (2.58)
Jw(RI
B, q) ∈IR6×(6+n)
Jacobian matrix deﬁned in (2.67)
J(RI
B, q) ∈IR6×(6+n)
Jacobian matrix used in (2.68)
hi
i =

f i
i
T
µi
i
T T ∈IR6
forces and moments exerted by body i −1 on
body i (see Figure 2.4)
he = [ f T
e
µT
e ]T ∈IR6
forces and moments at the end eﬀector (see
Figure 2.5)
t ∈IR
time
λmin(max)(X)
smallest(largest) eigenvalue of matrix X
diag{x1, . . . , xn}
Diagonal matrix ﬁlled with xi in the i row, i
column and zero in any other place
blockdiag{X1, . . . , Xn}
Block diagonal matrix ﬁlled with matrices
X1, . . . , Xn in the main diagonal and zero
in any other place
R(X)
range of matrix X
˙x
time derivative of the variable x

x
2-norm of the vector x
ˆx
#
ˆX
'
estimate of the vector x (matrix X)
xd
desired value of the variable x

XXIV
Notation
˜x
error variable deﬁned as ˜x = xd −x
xT #
XT'
transpose of the vector x (matrix X)
xi
i th element of the vector x
Xi,j
element at row i, column j of the matrix X
X†
Moore-Penrose inversion (pseudoinversion) of
matrix X
If X is low rectangular it is
X† = XT #
XXT'−1
If X is high rectangular it is
X† =
#
XTX
'−1
XT
Ir
(r × r) identity matrix
Or1×r2
(r1 × r2) null matrix
S(·) ∈IR3×3
matrix performing the cross product between
two (3 × 1) vectors deﬁned in (2.6)
ρ3
water density
µ
ﬂuid dynamic viscosity
Rn
Reynolds number
gI
gravity acceleration expressed in the inertial
frame

Contents
1.
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.1
Underwater Vehicles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3
1.2
Sensorial Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5
1.3
Actuation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5
1.4
Localization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
1.5
AUVs’ Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
9
1.5.1
Fault Detection/Tolerance for UUVs . . . . . . . . . . . . . . . .
11
1.6
UVMS’ Coordinated Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
11
1.7
Future Perspectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
11
2.
Modelling of Underwater Robots . . . . . . . . . . . . . . . . . . . . . . . . .
15
2.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
15
2.2
Rigid Body’s Kinematics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
15
2.2.1
Attitude Representation by Euler Angles . . . . . . . . . . . .
16
2.2.2
Attitude Representation by Quaternion . . . . . . . . . . . . .
17
2.2.3
Attitude Error Representation . . . . . . . . . . . . . . . . . . . . .
19
2.2.4
6-DOFs Kinematics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
21
2.3
Rigid Body’s Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
22
2.3.1
Rigid Body’s Dynamics in Matrix Form . . . . . . . . . . . . .
24
2.4
Hydrodynamic Eﬀects. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
25
2.4.1
Added Mass and Inertia . . . . . . . . . . . . . . . . . . . . . . . . . . .
26
2.4.2
Damping Eﬀects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
28
2.4.3
Current Eﬀects. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
29
2.5
Gravity and Buoyancy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
31
2.6
Thrusters’ Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
32
2.7
Underwater Vehicles’ Dynamics in Matrix Form . . . . . . . . . . . .
34
2.7.1
Linearity in the Parameters . . . . . . . . . . . . . . . . . . . . . . . .
35
2.8
Kinematics of Manipulators with Mobile Base . . . . . . . . . . . . . .
36
2.9
Dynamics of Underwater Vehicle-Manipulator Systems . . . . . .
39
2.9.1
Linearity in the Parameters . . . . . . . . . . . . . . . . . . . . . . . .
42
2.10 Contact with the Environment . . . . . . . . . . . . . . . . . . . . . . . . . . .
42
2.11 Identiﬁcation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
43

XXVI
Contents
3.
Dynamic Control of 6-DOF AUVs . . . . . . . . . . . . . . . . . . . . . . . .
45
3.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
45
3.2
Earth-Fixed-Frame-Based, Model-Based Controller . . . . . . . . .
47
3.3
Earth-Fixed-Frame-Based, Non-model-Based Controller . . . . .
49
3.4
Vehicle-Fixed-Frame-Based, Model-Based Controller . . . . . . . .
51
3.5
Model-Based Controller Plus Current Compensation . . . . . . . .
53
3.6
Mixed Earth/Vehicle-Fixed-Frame-Based, Model-Based Con-
troller . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
55
3.6.1
Stability Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
56
3.7
Jacobian-Transpose-Based Controller . . . . . . . . . . . . . . . . . . . . .
57
3.8
Comparison Among Controllers . . . . . . . . . . . . . . . . . . . . . . . . . .
59
3.8.1
Compensation of the Restoring Generalized Forces. . . .
59
3.8.2
Compensation of the Ocean Current . . . . . . . . . . . . . . . .
60
3.9
Numerical Comparison Among the Reduced Controllers . . . . .
60
3.9.1
Results. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
63
3.9.2
Conclusions and Extension to UVMSs . . . . . . . . . . . . . .
77
4.
Fault Detection/Tolerance Strategies for AUVs and ROVs
79
4.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
79
4.2
Experienced Failures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
80
4.3
Fault Detection Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
82
4.4
Fault Tolerant Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
86
4.5
Experiments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
88
4.6
Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
91
5.
Experiments of Dynamic Control of a 6-DOF AUV . . . . . . .
93
5.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
93
5.2
Experimental Set-Up. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
93
5.3
Experiments of Dynamic Control . . . . . . . . . . . . . . . . . . . . . . . . .
94
5.4
Experiments of Fault Tolerance to Thrusters’ Fault . . . . . . . . . 101
6.
Kinematic Control of UVMSs . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
6.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
6.2
Kinematic Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106
6.3
The Drag Minimization Algorithm . . . . . . . . . . . . . . . . . . . . . . . . 112
6.4
The Joint Limits Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112
6.5
Singularity-Robust Task Priority . . . . . . . . . . . . . . . . . . . . . . . . . 113
6.6
Fuzzy Inverse Kinematics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121
6.7
Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
7.
Dynamic Control of UVMSs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
7.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
7.2
Feedforward Decoupling Control . . . . . . . . . . . . . . . . . . . . . . . . . . 143
7.3
Feedback Linearization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 146
7.4
Nonlinear Control for UVMSs with Composite Dynamics . . . . 146

Contents XXVII
7.5
Non-regressor-Based Adaptive Control . . . . . . . . . . . . . . . . . . . . 149
7.6
Sliding Mode Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151
7.6.1
Stability Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 152
7.6.2
Simulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 154
7.7
Adaptive Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157
7.7.1
Stability Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 158
7.7.2
Simulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160
7.8
Output Feedback Control. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 162
7.8.1
Stability Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168
7.8.2
Simulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 172
7.9
Virtual Decomposition Based Control . . . . . . . . . . . . . . . . . . . . . 181
7.9.1
Stability Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 186
7.9.2
Simulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 188
7.9.3
Virtual Decomposition with the Proper Adapting Action194
7.10 Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 198
8.
Interaction Control of UVMSs . . . . . . . . . . . . . . . . . . . . . . . . . . . . 201
8.1
Introduction to Interaction Control of Robots . . . . . . . . . . . . . . 201
8.2
Dexterous Cooperating Underwater 7-DOF Manipulators . . . . 203
8.3
Impedance Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 203
8.4
External Force Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 205
8.4.1
Inverse Kinematics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 206
8.4.2
Stability Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 207
8.4.3
Robustness . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 208
8.4.4
Loss of Contact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 209
8.4.5
Implementation Issues . . . . . . . . . . . . . . . . . . . . . . . . . . . . 209
8.4.6
Simulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 210
8.5
Explicit Force Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 213
8.5.1
Robustness . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 217
8.5.2
Simulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 218
8.6
Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 223
9.
Coordinated Control of Platoons of AUVs . . . . . . . . . . . . . . . . 225
9.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 225
9.2
Kinematic Control of AUVs. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 227
9.2.1
Simulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 232
9.3
Experimental Set-Up at the Virginia Tech . . . . . . . . . . . . . . . . . 235
9.4
Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 236
10. Concluding Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 237

XXVIIIContents
A.
Mathematical models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 239
A.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 239
A.2 Phoenix . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 239
A.3 Phoenix+6DOF SMART 3S . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 241
A.4 ODIN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 242
A.5 9-DOF UVMS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 243
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 247

1. Introduction
One of the ﬁrst eﬀorts to design an underwater vehicle is due to Leonardo
Da Vinci. It has been found in the Codice Atlantico (Codex Atlanticus),
written between 1480 and 1518, together with the development of some diver’s
devices (see Figure 1.1 and 1.2 where the corresponding page of the Codex is
reported). Legends say that Leonardo worked on the idea of an underwater
military machine and that he further destroyed by himself the results judged
too dangerous.
Fig. 1.1. Page of the Codice Atlantico (around 1500) containing the draw of the
manned underwater vehicle developed by Leonardo Da Vinci
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 1–13, 2006.
© Springer-Verlag Berlin Heidelberg 2006

2
1. Introduction
Maybe the ﬁrst idea of an underwater machine is from Aristotle; following
the legend he built a machine: skaphe andros (boat-man) that allowed Alex-
ander the Great (Alexander III of Macedon, 356 −323 b. C.) to stay in deep
for at least half a day during the war of Tiro in 325 b. C. This is unrealistic,
of course, also considering that the Archimedes’s law was still to become a
reality (around 250 b. C.).
Fig. 1.2. Particular of the page of the Codice Atlantico containing the draw of the
manned underwater vehicle developed by Leonardo Da Vinci
In August, the 4 th, 2005, in the Paciﬁc sea, in front of the Kamchatka, at
a depth of 200 meters, a Russian manned submarine, the AS-28, got stacked
into the cables of a underwater radar; at that moment, seven men were in the
vehicle. One day later a British Remotely Operated Vehicle (ROV), Scorpio,
was there and, after another day of operations, it was possible to cut the
cables thus allowing the submarine to surface safely. In addition than excep-
tional operations like the one mentioned, underwater robots can be used to
accomplish missions such as sea bottom and pipeline survey, cable mainte-
nance, oﬀ-shore structures’ monitoring and maintenance, collect/release of
biological surveys. Currently, most of the operations mentioned above are
achieved via manned underwater vehicles or remotely operated vehicles; in
case of manipulation tasks, moreover, those are performed resorting to remo-
tely operated master-slave systems. The strong limit of the use of manned
vehicles is the enormous cost and risk in working in such an hostile envi-
ronment; the daily operating cost is larger than 8000 € (≈10000 $) [323].
The aim of the research is to progressively make it possible to perform such
missions in a completely autonomous way.

1.1 Underwater Vehicles
3
This objective is challenging from the technological as well as from the
theoretical aspects since it implies a wide range of technical and research
topics. Sending an autonomous vehicle in an unknown and unstructured en-
vironment, with limited on-line communication, requires some on board intel-
ligence and the ability of the vehicle to react in a reliable way to unexpected
situations. The sensory system of the vehicle must deal with a noisy and un-
structured environment; moreover, technologies as GPS (Global Positioning
System) are not applicable due to the impossibility to underwater electro-
magnetic transmission at GPS speciﬁc frequencies; vision based systems are
not fully reliable due to the generally poor visibility. The actuating system
is usually composed of thrusters and control surfaces, both of them have a
non-linear dynamics and are strongly aﬀected by the hydrodynamic eﬀects.
The book of T. Fossen [127] is one of the ﬁrst books dedicated to control
problems of marine systems, the case of surface vehicles, in fact, is also taken
into account. The same author presents, in [128], an updated and extended
version of the topics developed in the ﬁrst book. Some very interesting talks
about state of the art and direction of the underwater robotics were discussed
by, e.g., J. Yuh in [315, 317], J. Yuh and M. West in [321], T. Ura in [292]. At
the best of our knowledge this is the sole book dedicated to control problems
of underwater robotic systems with particular regard with respect to the
manipulation [8]; this is an emerging topic in which solid experimental results
still need to be achieved.
In this chapter an overview of control problem in underwater robotics is
presented; some of these aspects will be further analyzed along this book.
1.1 Underwater Vehicles
The therm Remotely Operated Vehicle (ROV) denotes an underwater vehicle
physically linked, via the tether, to an operator that can be on a submarine
or on a surface ship. The tether is in charge of giving power to the vehicle as
well as closing the manned control loop. Autonomous Underwater Vehicles
(AUVs), on the other side, are supposed to be completely autonomous, thus
relying to onboard power system and intelligence. These two types of under-
water vehicles share some control problems, in this case one has to refer to
them as Unmanned Underwater Vehicles (UUVs). In case of missions that re-
quire interaction with the environment, the vehicle can be equipped with one
or more manipulators; in this case the system is usually called Underwater
Vehicle-Manipulator System (UVMS).
Referring to AUVs, [294, 321] present the state of the art of several exi-
sting AUVs and their control architectures. Currently, there are about 100
prototypes in the laboratories all over the world, see e.g., [321]. Among
the others: r2D4 developed at URA laboratory of the University of To-
kyo (Tokyo, Japan, http://underwater.iis.u-tokyo.ac.jp), ABE of the
Deep Submerge Laboratory of the Woods Hole Oceanographic Institution

4
1. Introduction
(Massachusetts, USA, http://www.dsl.whoi.edu), Odissey IId belonging
to the AUV Laboratory of the Massachusetts Institute of Technology (Mas-
sachusetts, USA, http://auvlab.mit.edu), ODIN III designed at the Au-
tonomous Systems Laboratory of the University of Hawaii (Hawaii, USA,
http://www.eng.hawaii.edu/∼asl), Phoenix and ARIES, torpedo-like ve-
hicles developed at the Naval Postgraduate School
(California, USA, http://www.cs.nps.navy.mil/research/auv/).
Currently, very few companies sell AUVs; among the others: Blueﬁn
Corporations (http://www.bluefinrobotics.com) developed, in collabora-
tion with MIT, diﬀerent AUVs, such as Blueﬁn 21, for deep operations up
to 4500 m; C&C technologies (www.cctechnol.com) designed Hugin 3000,
able to run autonomously for up to 50 h; the Canadian ISE Research Ltd
(http://www.ise.bc.ca) developed several AUVs such as, e.g, Explorer or
Theseus; Hafmynd, in Iceland, designed a very small AUV named Gavia
(http://www.gavia.is); the Danish Maridan (http://www.maridan.dk)
developed the Maridan 600 vehicle.
Fig. 1.3. Sketch of the underwater vehicle-manipulator system SAUVIM, currently
under development at the Autonomous Systems Laboratory of the University of
Hawaii (courtesy of J. Yuh)

1.3 Actuation
5
The UVMSs are still under development; several laboratories built some
manipulation devices on underwater structures but very few of them can
be considered as capable of autonomous manipulation. SAUVIM (see Fi-
gure 1.3), a semi-autonomous vehicle with an Ansaldo 7-link manipulator is
under development at the Autonomous Systems Laboratory of the Univer-
sity of Hawaii; this vehicle, in the ﬁnal version, will be able to operate at the
depth of 4000 ts m; preliminary experiments were performed. AMADEUS, an
acronym for Advanced MAnipulation for DEep Underwater Sampling, fun-
ded by the European Commission, that involved the Heriot-Watt University
(UK), the Universit`a di Genova (Italy), the National Research Council-ISSIA
(Italy), the Universitat de Barcelona (Spain), the Institute of Marine Biology
of Crete (Greece). The project focused on the coordinated control of two tele-
operated underwater Ansaldo 7-link manipulators and the development of an
underwater hand equipped with a slip sensor; Figure 1.4 shows a wet test in
a pool. The French company Cybern´etix (http://www.cybernetix.fr) sells
hydraulic manipulators mounted on ROVs that can be remotely operated by
means of a joystick or in a master-slave conﬁguration.
1.2 Sensorial Systems
The AUVs need to operate in an unstructured hazardous environment; one of
the major problems with underwater robotics is in the localization task due
to the absence of a single, proprioceptive sensor that measures the vehicle
position and the impossibility to use the GPS under the water. The use of
redundant multi-sensor system, thus, is common in order to perform sensor
fusion tasks and give fault detection and tolerance capability to the vehicle.
To give an idea of the sensors used in underwater robotics, Table 1.1 lists the
sensors and the corresponding measured variable for Unmanned Underwater
Vehicles (UUVs).
As an example, Table 1.2 reports some data of the instrumentations of
the ROV developed at the John Hopkins University [271] and Table 1.3 some
data of the AUV ODIN III [81, 323].
1.3 Actuation
Underwater vehicles are usually controlled by thrusters and/or control sur-
faces. Control surfaces, such as rudders and sterns, are common in cruise
vehicles; those are torpedo-shaped and usually used in cable/pipeline inspec-
tion. The main conﬁguration is not changed in the last century, there is a
main thruster and at least one rudder and one stern, in Figure 1.5 it is repor-
ted the underwater manned vehicle named SLC (Siluro a Lenta Corsa, Slow
Running Torpedo), or maiale (pig), used in the second world war by the Regia

6
1. Introduction
Fig. 1.4. Coordinated control of two seven-link Ansaldo manipulators during a
wet test in a pool (courtesy of G. Casalino, Genoa Robotics And Automation
Laboratory, Universit`a di Genova and G. Veruggio, National Research Council-
ISSIA, Italy)
Table 1.1. UUV possible instrumentation
sensor
measured variable
Inertial System
linear acceleration and angular velocity
Pressure-meter
vehicle depth
Frontal sonar
distance from obstacles
Vertical sonar
distance from the bottom
Ground Speed sonar
relative velocity vehicle/bottom
Current-meter
relative velocity vehicle/current
Global Positioning System
absolute position at the surface
Compass
orientation
Acoustic baseline
absolute position in known area
Vision systems
relative position/velocity
Acoustic Doppler Current Proﬁler
water current at several positions

1.4 Localization
7
Table 1.2. JHUROV instrumentations
measured variable
sensor
precision
update rate
3DOF-vehicle position
SHARP acoustic transponder
0.5 cm
10 Hz
depth
Foxboro/ICT model n. 15
2.5 cm
20 Hz
heading
Litton LN200 IMU Gyro
0.01 deg
20 Hz
roll and pitch
KVH ADGC
0.1 deg
10 Hz
heading
KVH ADGC
1 deg
10 Hz
Table 1.3. ODIN III sensors update
measured variable
sensor
update rate
xy vehicle position
8 sonars
3 Hz
depth
pressure sensor
30 Hz
roll, pitch and yaw
IMU
30 Hz
Marina Italiana (Royal Italian Navy). Since the force/moment provided by
the control surfaces is function of the velocity and it is null in hovering, they
are not useful to manipulation missions in which, due to the manipulator
interaction, full control of the vehicle is required.
The relationship between the force/moment acting on the vehicle and the
control input of the thrusters is highly nonlinear. It is function of some struc-
tural variables such as: the density of the water; the tunnel cross-sectional
area; the tunnel length; the volumetric ﬂowrate between input-output of the
thrusters and the propeller diameter. The state of the dynamic system de-
scribing the thrusters is constituted by the propeller revolution, the speed of
the ﬂuid going into the propeller and the input torque.
A detailed theoretical and experimental analysis of thrusters’ behavior
can be found in [40, 147, 176, 289, 300, 309]. In [128] a chapter is dedicated
to modelling and control of marine thrusters. Roughly speaking, thrusters are
the main cause of limit cycle in vehicle positioning and bandwidth constraint.
In [178] the thruster model is explicitly taken into account in the control law.
Reference [270] presents experimental results on the performance of model-
based control law for AUVs in presence of model mismatching and thrusters’
saturation.
1.4 Localization
The position and attitude of a free ﬂoating vehicle is not measurable by the
use of a single, internal sensor. This poses the problem of estimating the
AUV’s position. As detailed above, several sensors are normally mounted

8
1. Introduction
Fig. 1.5. Pig, manned vehicle used by the Royal Italian Navy during the second
world war in the Mediterranean Sea. The thruster and the group rudder/stern can
be observed in the bottom left angle of the photo
on an AUV in order to implement sensor fusion algorithms and obtain an
estimation more reliable than by using a single sensor.
Among the possible methods is the use of baseline acoustics, those rely
on the use of transmitters/receivers mounted on the vehicle and on known
locations needed for triangulations. In same cases one single module can be
used and mounted on a surface vehicle the position of which is acquired by
means of a GPS. In case of partially structured environments, such as harbors,
transmitters/receivers at known positions can be easily deployed. In absence
of baseline acoustics there is the need to measure a time derivatives of the
vehicle position such as the acceleration with the IMU or the velocity with
a Ground Speed sonar fused with the vehicle orientation measurements. It
is well known in estimation theory, however, that the time integration of a
measurement leads to the Brownian motion, or random walk, i.e., a stochastic
model whose variance grows linearly with the elapsed time. After some time,
thus, the estimation is useless and a reset of the error is necessary by, e.g.,
surfacing the vehicle and measuring its real position with a GPS. Finally,
when the vehicle uses sonar or video-cameras it can measure several time its
relative position with respect to a ﬁxed feature; this information can be used

1.5 AUVs’ Control
9
in a, e.g., Extended Kalman Filter (EKF) to improve the estimation of the
vehicle’s position.
This topic is treated, among the others, in [98, 134, 139, 221, 269, 290,
304].
1.5 AUVs’ Control
Control of AUVs’ is challenging, in fact, even though this problem is kine-
matically similar to the widely studied one of controlling a free-ﬂoating rigid
body in a six-dimensional space, the underwater environment makes the dy-
namics to be faced quite diﬀerent. An overview of the main control techniques
for AUVs can be found, e.g., in [127, 128].
Fig. 1.6. Possible scenario of mine countermeasure using an AUV platoon (courtesy
of SACLANT Undersea Research Center, North Atlantic Treaty Organization)
A main diﬀerence in control of underwater vehicles is related to the type
of actuation; cruise vehicles, in fact, are usually actuated by means of one
thruster and several control surfaces; they are under-actuated and mainly
controlled in the surge, sway and heave directions. On the other hand, if a
vehicle is conceived for manipulation tasks it is required that it is actuated
in all the DOFs even at very low velocities; 6 or more thrusters are then
designed.

10
1. Introduction
An example of cruise vehicle is ARIEL, belonging to the Naval Postgra-
duate School; a detailed description and its command and control subsystems
are provided in [201]. In [145], the control system of the NPS AUV II is gi-
ven together with experimental results. Control laws for cruise vehicles are
usually designed at a nominal velocity since the vehicle is designed for ex-
ploration or cable tracking missions, see, e.g., [41] for a pipeline tracking
with Twin-Burger 2. The homing operation needs speciﬁc algorithms, [116]
presents experimental results performed with the vehicle Odyssey IIb, of an
homing system based on an electromagnetic guidance rather than an acoustic
signal.
Research eﬀorts have been devoted at controlling fully actuated underwa-
ter vehicle, in particular at very low velocity or performing a station keeping
task. This topic will be discussed in Chapter 3, some experimental results is
given in Chapter 5.
Identiﬁcation of the dynamic parameters of underwater robotic structures
is a very challenging task due to the model characteristics, i.e., non-linear and
coupled dynamics, diﬃculty in obtaining eﬀective data; the interested reader
can refer to [2, 62, 111, 271].
An emerging topic is also constituted by control of platoon of AUVs, see,
e.g., the work of [27, 179, 276]. In Figure 1.6, a possible scenario of mine
countermeasure using a platoon of AUVs under study at the SACLANT Un-
dersea Research Center of the North Atlantic Treaty Organization (NATO)
is given.
In Figure 1.7, one of the AUVs developed at the Virginia Tech is shown,
these vehicles will be very small in size and cheap with most of the compo-
nents custom-engineered [132].
A brief discussion on control of multi-AUVs is given in Chapter 9.
Fig. 1.7. One of the vehicles constituting the platoon of AUVs developed at the
Virginia Tech (courtesy of D. Stilwell)

1.7 Future Perspectives
11
1.5.1 Fault Detection/Tolerance for UUVs
ROVS and AUVs are complex systems engaged in missions in un-structured,
unsafe environments for which the degree of autonomy becomes a crucial
issue. In this sense, the capability to detect and tolerate faults is a key to
successfully terminate the mission or recuperate the vehicle. An overview of
fault detection and fault tolerance algorithms, speciﬁcally designed for UUVs
is presented in Chapter 4.
In Figure 1.8, the vehicle Romeo operating over thermal vents in the
Milos Island, Aegean Sea, Greece, is shown; this vehicle has been built
at the RobotLab, National Research Council (CNR-ISSIA), Genova, Italy
(http://www.robotlab.ian.ge.cnr.it/). This vehicle has been object of
several experimental studies on fault detection/tolerance algorithms.
1.6 UVMS’ Coordinated Control
The use of Autonomous Underwater Vehicles (AUVs) equipped with a ma-
nipulator (UVMS) to perform complex underwater tasks give rise to chal-
lenging control problems involving nonlinear, coupled, and high-dimensional
systems. Currently, the state of the art is represented by tele-operated ma-
ster/slave architectures; few research centers are equipped with autonomous
systems [180, 321].
The core of this monograph is dedicated to this topic, in Chapter 6 the
kinematic control will be discussed, Chapter 7 presents dynamic control laws
for UVMSs and Chapter 8 shows some interaction control schemes.
1.7 Future Perspectives
Underwater robotics research is an interesting topic. Current technology al-
lows to safely run long duration missions that involve one single AUV, e.g., as
in the case of the Naval Postgraduate School or the Ura laboratory vehicles,
or to execute manned-in-the-loop manipulation tasks. There are, however,
research topics that need to be further investigated.
The UVMSs need to be studied in the ﬁeld; from the theoretical aspect,
in fact, many of the associated problems have been studied and, possibly,
solved: kinematic and dynamic control laws, as well as interaction control
laws have been designed and successfully simulated. Few experimental set-up
have also been used; these, however, reproduced only oversimpliﬁed environ-
ments. Interesting results might be achieved by means of a fully actuated
autonomous underwater vehicle carrying a 6-DOF manipulator.
The actuating system might be improved in an eﬀort to reduce the limit
cycles caused by the thrusters’ dynamics at very low velocities; new blade

12
1. Introduction
Fig. 1.8. Romeo operating over thermal vents in the Milos Island, Aegean Sea,
Greece, during the ﬁnal demo of the EC-funded project ARAMIS (courtesy of
M. Caccia, National Research Council-ISSIA, Italy)
proﬁles, e.g., might be studied in order to linearize the input-output thruster
relationships.
The sensory system is also still object of research; recent advances con-
cern the possibility to practically achieve Simultaneously Localization And
Mapping (SLAM) with one AUV or perform sensor fusion by the use of pla-
toon of AUVs. In the case of SAUVIM, a passive manipulator is considered
with 6 DOFs in charge of measuring the vehicle position/orientation when
the UVMS is close to a structure.

1.7 Future Perspectives
13
In ground and aerial robotics the topic of controlling platoon of vehicles
is being studied since longtime; this is an emerging topic also for platoon of
AUVs where speciﬁc dynamic considerations, communication limitations and
control constraints need to be taken into account.

2. Modelling of Underwater Robots
“We have Einstein’s space, de Sitter’s spaces, expanding universes, contrac-
ting universes, vibrating universes, mysterious universes. In fact the pure
mathematician may create universes just by writing down an equation, and
indeed, if he is an individualist he can have an universe of his own”.
J.J. Thomson, around 1919.
2.1 Introduction
In this Chapter the mathematical model of UVMSs is derived. Modeling of
rigid bodies moving in a ﬂuid or underwater manipulators has been studied
in literature by, among others, [137, 156, 157, 174, 182, 189, 203, 242, 255,
256, 285, 286], where a deeper discussion of speciﬁc aspects can be found.
In [224], the model of two UVMSs holding the same rigid object is derived.
2.2 Rigid Body’s Kinematics
A rigid body is completely described by its position and orientation with
respect to a reference frame Σi, O −xyz that it is supposed to be earth-ﬁxed
and inertial. Let deﬁne η1 ∈IR3 as
η1 =


x
y
z

,
the vector of the body position coordinates in a earth-ﬁxed reference frame.
The vector ˙η1 is the corresponding time derivative (expressed in the earth-
ﬁxed frame). If one deﬁnes
ν1 =


u
v
w


as the linear velocity of the origin of the body-ﬁxed frame Σb, Ob −xbybzb
with respect to the origin of the earth-ﬁxed frame expressed in the body-
ﬁxed frame (from now on: body-ﬁxed linear velocity) the following relation
between the deﬁned linear velocities holds:
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 15–44, 2006.
© Springer-Verlag Berlin Heidelberg 2006

16
2. Modelling of Underwater Robots
ν1 = RB
I ˙η1 ,
(2.1)
where RB
I
is the rotation matrix expressing the transformation from the
inertial frame to the body-ﬁxed frame.
In the following, two diﬀerent attitude representations will be introduced:
Euler angles and Euler parameters or quaternion. In marine terminology
is common the use of Euler angles while several control strategies use the
quaternion in order to avoid the representation singularities that might arise
by the use of Euler angles.
Table 2.1. Common notation for marine vehicle’s motion
forces and
moments
ν1, ν2
η1, η2
motion in the x-direction
surge
X
u
x
motion in the y-direction
sway
Y
v
y
motion in the z-direction
heave
Z
w
z
rotation about the x-axis
roll
K
p
φ
rotation about the y-axis
pitch
M
q
θ
rotation about the z-axis
yaw
N
r
ψ
2.2.1 Attitude Representation by Euler Angles
Let deﬁne η2 ∈IR3 as
η2 =


φ
θ
ψ


the vector of body Euler-angle coordinates in a earth-ﬁxed reference frame. In
the nautical ﬁeld those are commonly named roll, pitch and yaw angles and
corresponds to the elementary rotation around x, y and z in ﬁxed frame [254].
The vector ˙η2 is the corresponding time derivative (expressed in the inertial
frame). Let deﬁne
ν2 =


p
q
r


as the angular velocity of the body-ﬁxed frame with respect to the earth-ﬁxed
frame expressed in the body-ﬁxed frame (from now on: body-ﬁxed angular
velocity). The vector ˙η2 does not have a physical interpretation and it is
related to the body-ﬁxed angular velocity by a proper Jacobian matrix:
ν2 = Jk,o(η2) ˙η2 .
(2.2)

2.2 Rigid Body’s Kinematics
17
The matrix Jk,o ∈IR3×3 can be expressed in terms of Euler angles as:
Jk,o(η2) =


1
0
−sθ
0
cφ
cθsφ
0
−sφ
cθcφ

,
(2.3)
where cα and sα are short notations for cos(α) and sin(α), respectively. Ma-
trix Jk,o(η2) is not invertible for every value of η2. In detail, it is
J−1
k,o(η2) = 1
cθ


1
sφsθ
cφsθ
0
cφcθ
−cθsφ
0
sφ
cφ

,
(2.4)
that it is singular for θ = (2l + 1) π
2 rad, with l ∈IN, i.e., for a pitch angle
of ± π
2 rad.
The rotation matrix RB
I , needed in (2.1) to transform the linear velocities,
is expressed in terms of Euler angles by the following:
RB
I (η2) =


cψcθ
sψcθ
−sθ
−sψcφ + cψsθsφ
cψcφ + sψsθsφ
sφcθ
sψsφ + cψsθcφ
−cψsφ + sψsθcφ
cφcθ

.
(2.5)
Table 2.1 shows the common notation used for marine vehicles according
to the SNAME notation ([272]), Figure 2.1 shows the deﬁned frames and the
elementary motions.
2.2.2 Attitude Representation by Quaternion
To overcome the possible occurrence of representation singularities it might
be convenient to resort to non-minimal attitude representations. One possible
choice is given by the quaternion. The term quaternion was introduced by
Hamilton in 1840, 70 years after the introduction of a four-parameter rigid-
body attitude representation by Euler. In the following, a short introduction
to quaternion is given.
By deﬁning the mutual orientation between two frames of common origin
in terms of the rotation matrix
Rk(δ) = cosδI3 + (1 −cosδ)kkT −sinδS(k) ,
where δ is the angle and k ∈IR3 is the unit vector of the axis expressing the
rotation needed to align the two frames, I3 is the (3 × 3) identity matrix,
S(x) is the matrix operator performing the cross product between two (3×1)
vectors
S(x) =


0
−x3
x2
x3
0
−x1
−x2
x1
0

,
(2.6)
the unit quaternion is deﬁned as

18
2. Modelling of Underwater Robots
earth-ﬁxed
O
x
z
y
η1
body-ﬁxed
Ob
xb
zb
yb
u, surge
w, heave
v, sway
p, roll
r, yaw
q, pitch
Fig. 2.1. Frames and elementary vehicle’s motion
Q = {ε, η}
with
ε = ksinδ
2 ,
η = cosδ
2 ,
where η ≥0 for δ ∈[−π, π] rad. This restriction is necessary for uniqueness
of the quaternion associated to a given matrix, in that the two quaternion
{ε, η} and {−ε, −η} represent the same orientation, i.e., the same rotation
matrix.
The unit quaternion satisﬁes the condition
η2 + εTε = 1 .
(2.7)
The relationship between ν2 and the time derivative of the quaternion is
given by the quaternion propagation equations
˙ε = 1
2ην2 + 1
2S(ε)ν2 ,
(2.8)
˙η = −1
2εTν2 ,
(2.9)
that can be rearranged in the form:
 ˙ε
˙η

= Jk,oq(Q)ν2 = 1
2


η
−ε3
ε2
ε3
η
−ε1
−ε2
ε1
η
−ε1
−ε2
−ε3

ν2 .
(2.10)
The matrix Jk,oq(Q) satisﬁes:

2.2 Rigid Body’s Kinematics
19
JT
k,oqJk,oq = 1
4I3 ,
that allows to invert the mapping (2.10) yielding:
ν2 = 4JT
k,oq
 ˙ε
˙η

.
For completeness the rotation matrix RB
I , needed to compute (2.1), in
terms of quaternion is given:
RB
I (Q) =


1 −2(ε2
2 + ε2
3)
2(ε1ε2 + ε3η)
2(ε1ε3 −ε2η)
2(ε1ε2 −ε3η)
1 −2(ε2
1 + ε2
3)
2(ε2ε3 + ε1η)
2(ε1ε3 + ε2η)
2(ε2ε3 −ε1η)
1 −2(ε2
1 + ε2
2)

.
(2.11)
2.2.3 Attitude Error Representation
Let now deﬁne RI
B ∈IR3×3 as the rotation matrix from the body-ﬁxed frame
to the earth-ﬁxed frame, which is also described by the quaternion Q, and
RI
d ∈IR3×3 the rotation matrix from the frame expressing the desired vehicle
orientation to the earth-ﬁxed frame, which is also described by the quaternion
Qd = {εd, ηd}. One possible choice for the rotation matrix necessary to align
the two frames is
.R = RIT
B RI
d = RB
I RI
d ,
where RB
I
= RI
B
T. The quaternion .Q = {˜ε, ˜η} associated with .R can
be obtained directly from .R or computed by composition (quaternion pro-
duct): .Q = Q−1 ∗Qd, where Q−1 = {−ε, η}:
˜ε = ηεd −ηdε + S(εd)ε,
(2.12)
˜η = ηηd + εTεd .
(2.13)
Since the quaternion associated with .R = I3 (i.e. representing two aligned
frames) is .Q = {0, 1}, it is suﬃcient to represent the attitude error as ˜ε.
The quaternion propagation equations can be rewritten also in terms of
the error variables:
˙˜ε = 1
2 ˜η˜ν2 + 1
2S(˜ε)˜ν2 ,
(2.14)
˙˜η = −1
2˜εT˜ν2 ,
(2.15)
where ˜ν2 = ν2,d −ν2 is the angular velocity error expressed in body-ﬁxed
frame. Deﬁning
z =
 ˜ε
˜η

,
the relations in (2.14)–(2.15) can be rewritten in the form:

20
2. Modelling of Underwater Robots
˙z = 1
2

˜ηI3 + S(˜ε)
−˜εT

˜ν2 = Jk,oq(z)˜ν2
(2.16)
The equations above are given in terms of the body-ﬁxed angular velocity.
In fact, they will be used in the control laws of Chap. 7. The generic expression
of the propagation equations is the following:
˙.ε
a
ba = 1
2E( .Qba).ωa
ba ,
˙.ηba = −1
2.εaT
ba .ωa
ba ,
with
E( .Qba) = .ηbaI3 −S(.εa
ba).
where .Qba = {.εa
ba, .ηba} is the quaternion associated to Ra
b = RT
a Rb and the
angular velocity .ωa
ba = RT
a (ωb −ωa) of the frame Σb relative to the frame
Σa, expressed in the frame Σa.
Quaternion from Rotation Matrix
It can be useful to recall the procedure needed to extract the quaternion from
the rotation matrix [127, 261].
Given a generic rotation matrix R:
1. compute the trace of R according to:
R4,4 = tr(R) =
3
-
j=1
Rj,j
2. compute the index i according to:
Ri,i = max(R1,1, R2,2, R3,3, R4,4)
3. deﬁne the scalar ci as:
|ci| =
+
1 + 2Ri,i −R4,4
in which the sign can be plus or minus.
4. compute the other three values of c by knowing the following relations-
hips:
c4c1 = R3,2 −R2,3
c4c2 = R1,3 −R3,1
c4c3 = R2,1 −R1,2
c2c3 = R3,2 + R2,3
c3c1 = R1,3 + R3,1
c1c2 = R2,1 + R1,2
simply dividing the equations in which ci is involved by ci itself.

2.2 Rigid Body’s Kinematics
21
5. compute the quaternion Q by the following:
[ ε
η ]T = 1
2 [ c1
c2
c3
c4 ]T .
Quaternion from Euler Angles
The transformation from Euler angles to quaternion is always possible, i.e.,
it is not aﬀected by the occurrence of representation singularities [127]. This
implies that the use of quaternion to control underwater vehicles is compatible
with the common use of Euler angles to express the desired trajectory of the
vehicle.
The algorithm consists in computing the rotation matrix expressed in
Euler angles by (2.5) and using the procedure described in the previous subs-
ection to extract the corresponding quaternion.
2.2.4 6-DOFs Kinematics
It is useful to collect the kinematic equations in 6-dimensional matrix forms.
Let us deﬁne the vector η ∈IR6 as
η =

η1
η2

(2.17)
and the vector ν ∈IR6 as
ν =

ν1
ν2

,
(2.18)
and by deﬁning the matrix Je(RI
B) ∈IR6×6
Je(RI
B) =

RB
I
O3×3
O3×3
Jk,o

,
(2.19)
where the rotation matrix RB
I given in (2.5) and Jk,o is given in (2.3), it is
ν = Je(RI
B) ˙η.
(2.20)
The inverse mapping, given the block-diagonal structure of Je, is given by:
˙η = J−1
e (RI
B)ν =

RI
B
O3×3
O3×3
J−1
k,o

ν ,
(2.21)
where J−1
k,o is given in (2.4).
On the other side, it is possible to represent the orientation by means of
quaternions. Let us deﬁne the vector ηq ∈IR7 as
ηq =


η1
ε
η


(2.22)

22
2. Modelling of Underwater Robots
and the matrix Je,q(RI
B) ∈IR6×7
Je,q(RI
B) =

RB
I
O3×4
O3×3
4JT
k,oq

,
(2.23)
where Jk,oq is given in (2.10); it is
ν = Je,q(RI
B) ˙ηe .
(2.24)
The inverse mapping is given by:
˙ηe =

RI
B
O3×3
O4×3
Jk,oq

ν .
(2.25)
2.3 Rigid Body’s Dynamics
Several approaches can be considered when deriving the equations of motion
of a rigid body. In the following, the Newton-Euler formulation will be brieﬂy
summarized.
The motion of a generic system of material particles subject to external
forces can be described by resorting to the fundamental principles of dynamics
(Newton’s laws of motion). Those relate the resultant force and moment to
the time derivative of the linear and angular momentum.
Let ρ be the density of a particle of volume dV of a rigid body B, ρdV
is the corresponding mass denoted by the position vector p in an inertial
frame O −xyz. Let also VB be the the body volume and
m =
!
VB
ρdV
be the total mass. The center of mass of B is deﬁned as
pC = 1
m
!
VB
pρdV.
The linear momentum of the body B is deﬁned as the vector
l =
!
VB
˙pρdV = m ˙pC.
For a system with constant mass, the Newton’s law of motion for the linear
part
f = ˙l = m d
dt ˙pC
(2.26)
can be rewritten simply by the Newton’s equations of motion:
f = m¨pC
(2.27)
where f is the resultant of the external forces.

2.3 Rigid Body’s Dynamics
23
Let us deﬁne the Inertia tensor of the body B relative to the pole O:
IO =
!
VB
ST(p)S(p)ρdV,
where S is the skew-symmetric operator deﬁned in (2.6). The matrix IO is
symmetric and positive deﬁnite. The positive diagonal elements IOxx, IOyy,
IOzz are the inertia moments with respect to the three coordinate axes of
the reference frame. The oﬀdiagonal elements are the products of inertia.
The relationship between the inertia tensor in two diﬀerent frames IO
and I	
O, related by a rotation matrix R, with the same pole O, is the following:
IO = RI	
ORT.
The change of pole is related by the Steiner’s theorem:
IO = IC + mST(pC)S(pC),
where IC is the inertial tensor relative to the center of mass, when expressed
in a frame parallel to the frame in which IO is deﬁned.
Notice that O can be either a ﬁxed or moving pole. In case of a ﬁxed pole
the elements of the inertia tensor are function of time. A suitable choice of
the pole might be a point ﬁxed to the rigid body in a way to obtain a constant
inertia tensor. Moreover, since the inertia tensor is symmetric positive deﬁnite
is always possible to ﬁnd a frame in which the matrix attains a diagonal form,
this frame is called principal frame, also, if the pole coincides with the center
of mass, it is called central frame. This is true also if the body does not have
a signiﬁcant geometric symmetry.
Let Ωbe any point in space and pΩthe corresponding position vector.
Ωcan be either moving or ﬁxed with respect to the reference frame. The
angular momentum of the body B relative to the pole Ωis deﬁned as the
vector:
kΩ=
!
VB
˙p × (pΩ−p) ρdV.
(2.28)
Taking into account the deﬁnition of center of mass, (2.28) can be rewritten
in the form:
kΩ= ICω + m ˙pC × (pΩ−pC) ,
(2.29)
where ω is the angular velocity.
The resultant moment µΩwith respect to the pole Ωof a rigid body
subject to n external forces f 1, . . . , f n is:
µΩ=
n
-
i=1
f i × (pΩ−pi) .
In case of a system with constant mass and rigid body, the angular part
of the Newton’s law of motion

24
2. Modelling of Underwater Robots
µΩ= ˙kΩ
yields the Euler equations of motion:
µΩ= IΩ˙ω + ω × (IΩω) .
(2.30)
The right-hand side of the Newton and Euler equations of motion, (2.27)
and (2.30), are deﬁned inertial forces and inertial moments, respectively.
2.3.1 Rigid Body’s Dynamics in Matrix Form
To derive the equations of motion in matrix form it is useful to refer the
quantities to a body-ﬁxed frame Ob −xbybzb using the body-ﬁxed linear and
angular velocities that has been introduced in Section 2.2.
The following relationships hold:
pΩ−pC = RI
Brb
C
(2.31)
˙R
I
B· = ω × (RI
B·)
(2.32)
RB
I
#
ω × RI
B·
'
= ν2 × ·
(2.33)
ω = RI
Bν2
(2.34)
˙ω = RI
B ˙ν2
(2.35)
˙pC = RI
B(ν1 + ν2 × rb
C)
(2.36)
IC = RI
BIb
CRB
I
(2.37)
where, according to the (2.31), rb
C is the vector position from the origin of
the body-ﬁxed frame to the center of mass expressed in the body-ﬁxed frame
(˙rb
C = 0 for a rigid body).
Equation (2.26) can be rewritten in terms of the linear body-ﬁxed veloci-
ties as
f = m d
dt

RI
B
%
ν1 + ν2 × rb
C
)
= mRI
B
#
˙ν1 + ˙ν2 × rb
C + ν2 × ˙rb
C
'
+ mω × RI
B(ν1 + ν2 × rb
C),
Premultiplying by RB
I and deﬁning as
τ 1 =


X
Y
Z

,
the resultant forces acting on the rigid body expressed in a body-ﬁxed frame,
and as
τ 2 =


K
M
N

,
the corresponding resultant moment to the pole Ob, one obtains:

2.4 Hydrodynamic Eﬀects
25
τ 1 = m ˙ν1 + m ˙ν2 × rb
C + mν2 × ν1 + mν2 × (ν2 × rb
C).
Equation (2.29) is written in an inertial frame. It is possible to rewrite
the angular momentum in terms of the body-ﬁxed velocities:
kΩ= RI
B
#
Ib
Cν2 + mν1 × rb
C
'
.
(2.38)
Derivating (2.38) one obtains:
τ I
2 = ω × RI
B
#
Ib
Cν2 + mν1 × rb
C
'
+ RI
B
#
Ib
C ˙ν2 + m ˙ν1 × rb
C
'
,
that, using the relations above, can be written in the form:
τ 2 = Ib
C ˙ν2 + ν2 × (Ib
Cν2) + mν2 × (ν1 × rb
C) + m ˙ν1 × rb
C.
It is now possible to rewrite the Newton-Euler equations of motion of a
rigid body moving in the space. It is:
M RB ˙ν + CRB(ν)ν = τ v,
(2.39)
where
τ v =

τ 1
τ 2

.
The matrix M RB is constant, symmetric and positive deﬁnite, i.e.,
˙M RB = O, M RB = M T
RB > O. Its unique parametrization is in the form:
M RB =

mI3
−mS(rb
C)
mS(rb
C)
IOb

,
where I3 is the (3×3) identity matrix, and IOb is the inertia tensor expressed
in the body-ﬁxed frame.
On the other hand, it does not exist a unique parametrization of the
matrix CRB, representing the Coriolis and centripetal terms. It can be de-
monstrated that the matrix CRB can always be parameterized such that it
is skew-symmetrical, i.e.,
CRB(ν) = −CT
RB(ν)
∀ν ∈IR6 ,
explicit expressions for CRB can be found, e.g., in [127].
Notice that (2.39) can be greatly simpliﬁed if the origin of the body-ﬁxed
frame is chosen coincident with the central frame, i.e., rb
C = 0 and IOb is a
diagonal matrix.
2.4 Hydrodynamic Eﬀects
In this Section the major hydrodynamic eﬀects on a rigid body moving in a
ﬂuid will be brieﬂy discussed.
The theory of ﬂuidodynamics is rather complex and it is diﬃcult to deve-
lop a reliable model for most of the hydrodynamic eﬀects. A rigorous analysis

26
2. Modelling of Underwater Robots
for incompressible ﬂuids would need to resort to the Navier-Stokes equations
(distributed ﬂuid-ﬂow). However, in this book modeling of the hydrodynamic
eﬀects in a context of automatic control is considered. In literature, it is well
known that kinematic and dynamic coupling between vehicle and manipula-
tor can not be neglected [182, 203, 204, 206], while most of the hydrodynamic
eﬀects have no signiﬁcant inﬂuence in the range of the operative velocities.
2.4.1 Added Mass and Inertia
When a rigid body is moving in a ﬂuid, the additional inertia of the ﬂuid
surrounding the body, that is accelerated by the movement of the body, has
to be considered. This eﬀect can be neglected in industrial robotics since
the density of the air is much lighter than the density of a moving mecha-
nical system. In underwater applications, however, the density of the water,
ρ ≈1000 kg/m3, is comparable with the density of the vehicles. In particu-
lar, at 0◦, the density of the fresh water is 1002.68 kg/m3; for sea water with
3.5% of salinity it is ρ = 1028.48 kg/m3.
The ﬂuid surrounding the body is accelerated with the body itself, a force
is then necessary to achieve this acceleration; the ﬂuid exerts a reaction force
which is equal in magnitude and opposite in direction. This reaction force is
the added mass contribution. The added mass is not a quantity of ﬂuid to
add to the system such that it has an increased mass. Diﬀerent properties
hold with respect to the (6 × 6) inertia matrix of a rigid body due to the
fact that the added mass is function of the body’s surface geometry. As an
example, the inertia matrix is not necessarily positive deﬁnite.
The hydrodynamic force along xb due to the linear acceleration in the xb-
direction is deﬁned as:
XA = −X ˙u ˙u
where
X ˙u = ∂X
∂˙u ,
where the symbol ∂denotes the partial derivative. In the same way it is pos-
sible to deﬁne all the remaining 35 elements that relate the 6 force/moment
components [ X
Y
Z
K
M
N ]T to the 6 linear/angular accelera-
tion [ ˙u
˙v
˙w
˙p
˙q
˙r ]T. These elements can be grouped in the Added
Mass matrix M A ∈IR6×6. Usually, all the elements of the matrix are diﬀe-
rent from zero.
There is no speciﬁc property of the matrix M A. For certain frequencies
and speciﬁc bodies, such as catamarans, negative diagonal elements have
been documented [127]. However, for completely submerged bodies it can be
considered M A > O. Moreover, if the ﬂuid is ideal, the body’s velocity is low,
there are no currents or waves and frequency independence it holds [214]:
M A = M T
A > O.
(2.40)
The added mass has also an added Coriolis and centripetal contribution. It
can be demonstrated that the matrix expression can always be parameterized
such that:

2.4 Hydrodynamic Eﬀects
27
CA(ν) = −CT
A(ν)
∀ν ∈IR6.
If the body is completely submerged in the water, the velocity is low
and it has three planes of symmetry as common for underwater vehicles, the
following structure of matrices M A and CA can therefore be considered:
M A = −diag {X ˙u, Y ˙v, Z ˙w, K ˙p, M ˙q, N ˙r} ,
CA =


0
0
0
0
−Z ˙ww
Y ˙vv
0
0
0
Z ˙ww
0
−X ˙uu
0
0
0
−Y ˙vv
X ˙uu
0
0
−Z ˙ww
Y ˙vv
0
−N ˙rr
M ˙qq
Z ˙ww
0
−X ˙uu
N ˙rr
0
−K ˙pp
−Y ˙vv
X ˙uu
0
−M ˙qq
K ˙pp
0


.
The added mass coeﬃcients can be theoretically derived exploiting the
geometry of the rigid body and, eventually, its symmetry [127], by applying
the strip theory. For a cylindrical rigid body of mass m, length L, with circular
section of radius r, the following added mass coeﬃcients can be derived [127]:
X ˙u = −0.1m
Y ˙v = −πρr2L
Z ˙w = −πρr2L
K ˙p = 0
M ˙q = −1
12πρr2L
3
N ˙r = −1
12πρr2L
3.
Notice that, despite (2.40), in this case it is M A ≥O. This result is due
to the geometrical approach to the derivation of M A. As a matter of fact,
if a sphere submerged in a ﬂuid is considered, it can be observed that a
pure rotational motion of the sphere does not involve any ﬂuid movement,
i.e., it is not necessary to add an inertia term due to the ﬂuid. This small
discrepancy is just an example of the diﬃculty in representing with a closed
set of equations a distributed phenomenon as ﬂuid movement.
In [220] the added mass coeﬃcients for an ellipsoid are derived.
In [145], and in the Appendix, the coeﬃcients for the experimental ve-
hicle NPS AUV Phoenix are reported. These coeﬃcients have been experi-
mentally derived and, since the vehicle can work at a maximum depth of few
meters, i.e., it is not submerged in an unbounded ﬂuid, the structure of M A
is not diagonal. To give an order of magnitude of the added mass terms, the
vehicle has a mass of about 5000 kg, the term X ˙u ≈−500 kg.
A detailed theoretical and experimental discussion on the added mass
eﬀect of a cylinder moving in a ﬂuid can be found in [203] where it is shown

28
2. Modelling of Underwater Robots
that the added mass matrix is state-dependent and its coeﬃcients are function
of the distance traveled by the cylinder.
2.4.2 Damping Eﬀects
The viscosity of the ﬂuid also causes the presence of dissipative drag and lift
forces on the body.
A common simpliﬁcation is to consider only linear and quadratic damping
terms and group these terms in a matrix DRB such that:
DRB(ν) > O
∀ν ∈IR6.
The coeﬃcients of this matrix are also considered to be constant. For a
completely submerged body, the following further assumption can be made:
DRB(ν) = −diag {Xu, Yv, Zw, Kp, Mq, Nr} +
−diag

Xu|u| |u| , Yv|v| |v| , Zw|w| |w| , Kp|p| |p| , Mq|q| |q| , Nr|r| |r|

.
Assuming a diagonal structure for the damping matrix implies neglecting the
coupling dissipative terms.
The detailed analysis of the dissipative forces is beyond the scope of this
work. In the following, only the nature of these forces will be brieﬂy discussed.
Introductory analysis of this phenomenon can be found in [127, 157, 208, 220,
255], while in depth discussion in [253, 274].
The viscous eﬀects can be considered as the sum of two forces, the drag
and the lift forces. The former are parallel to the relative velocity between
the body and the ﬂuid, while the latter are normal to it. Both drag and lift
forces are supposed to act on the center of mass of the body. In order to solve
the distributed ﬂow problem, an integral over the entire surface is required to
compute the net force/moment acting on the body. Moreover, the model of
drag and lift forces is not known and, also for some widely accepted models,
the coeﬃcients are not known and variables.
For a sphere moving in a ﬂuid, the drag force can be modeled as [157]:
Fdrag = 0.5ρU 2SCd(Rn),
where ρ is the ﬂuid density, U is the velocity of the sphere, S is the frontal area
of the sphere, Cd is the adimensional drag coeﬃcients and Rn is the Reynolds
number. For a generic body, S is the projection of the frontal area along
the ﬂow direction. The drag coeﬃcient is then dependent on the Reynolds
number, i.e., on the laminar/turbulent ﬂuid motion:
Rn = ρ |U| D
µ
where D is the characteristic dimension of the body perpendicular to the
direction of U and µ is the dynamic viscosity of the ﬂuid. In Table 2.2 the
drag coeﬃcients in function of the Reynolds number for a cylinder are repor-
ted [255]. The drag coeﬃcients can be considered as the sum of two physical

2.4 Hydrodynamic Eﬀects
29
eﬀects: a frictional contribution of the surface whose normal is perpendicular
to the ﬂow velocity, and a pressure contribution of the surface whose normal
is parallel to the ﬂow velocity.
Table 2.2. Lift and Drag Coeﬃcient for a cylinder
Reynolds number
regime motion
Cd
Cl
Rn < 2 · 105
subcritical ﬂow
1
3 ÷ 0.6
2 · 105 < Rn < 5 · 105
critical ﬂow
1 ÷ 0.4
0.6
5 · 105 < Rn < 3 · 105
transcritical ﬂow
0.4
0.6
The lift forces are perpendicular to the ﬂow direction. For an hydrofoil
they can be modeled as [157]:
Flift = 0.5ρU 2SCl(Rn, α),
where Cl is the adimensional lift coeﬃcient. It can be recognized that it also
depends on the angle of attack α. In Table 2.2 the lift coeﬃcients in function
of the Reynolds number for a cylinder are reported [255].
Vortex induced forces are an oscillatory eﬀect that aﬀects both drag and
lift directions. They are caused by the vortex generated by the body that
separates the ﬂuid ﬂow. They then cause a periodic disturbance that can
be the cause of oscillations in cables and some underwater structures. For
underwater vehicles it is reasonable to assume that the vortex induced forces
are negligible, this, also in view of the adoption of small design surfaces that
can reduce this eﬀect. For underwater manipulators with cylindrical links this
eﬀects might be experienced.
2.4.3 Current Eﬀects
Control of marine vehicles cannot neglect the eﬀects of speciﬁc disturbances
such as waves, wind and ocean current. In this book wind and waves phe-
nomena will not be discussed since the attention is focused to autonomous
vehicles performing a motion or manipulation task in an underwater environ-
ment. However, if this task has to be achieved in very shallow waters, those
eﬀects can not be neglected.
Ocean currents are mainly caused by: tidal movement; the atmospheric
wind system over the sea earth’s surface; the heat exchange at the sea sur-
face; the salinity changes and the Coriolis force due to the earth rotation.
Currents can be very diﬀerent due to local climatic and/or geographic cha-
racteristics; as an example, in the fjords, the tidal eﬀect can cause currents
of up to 3 m/s [127].

30
2. Modelling of Underwater Robots
The eﬀect of a small current has to be considered also in structured en-
vironments such as a pool. In this case, the refresh of the water is strong
enough to aﬀect the vehicle dynamics [34].
Let us assume that the ocean current, expressed in the inertial frame, νI
c
is constant and irrotational, i.e.,
νI
c =


νc,x
νc,y
νc,z
0
0
0


and ˙νI
c = 0; its eﬀects can be added to the dynamic of a rigid body moving
in a ﬂuid simply considering the relative velocity in body-ﬁxed frame
νr = ν −RB
I νI
c
(2.41)
in the derivation of the Coriolis and centripetal terms and the damping terms.
A simpliﬁed modeling of the current eﬀect can be obtained by assuming
the current irrotational and constant in the earth-ﬁxed frame, its eﬀect on
the vehicle, thus, can be modeled as a constant disturbance in the earth-ﬁxed
frame that is further projected onto the vehicle-ﬁxed frame. To this purpose,
let deﬁne as θv,C ∈IR6 the vector of constant parameters contributing to
the earth-ﬁxed generalized forces due to the current; then, the vehicle-ﬁxed
current disturbance can be modelled as
τ v,C = Φv,C(RI
B)θv,C,
(2.42)
where the (6 × 6) regressor matrix simply expresses the force/moment coor-
dinate transformation between the two frames and it is given by
Φv,C(RI
B) =

RB
I
O3×3
O3×3
RB
I

.
(2.43)
Notice that in [14, 35] compensation of the ocean current eﬀects is obtai-
ned through a quaternion-based velocity/force mapping instead. Moreover,
in some papers [34, 35, 125, 255], the eﬀect of the current is simply mode-
led as a time-varying, vehicle-ﬁxed, disturbance τ v,C that would lead to the
trivial regressor
Φ	
v,C = I6.
(2.44)

2.5 Gravity and Buoyancy
31
2.5 Gravity and Buoyancy
“Ses deux mains s’accrochaient `a mon cou; elles ne se seraient pas accroch´ees
plus furieusement dans un naufrage. Et je ne comprenais pas si elle voulait
que je la sauve, ou bien que je me noie avec elle”.
Raymond Radiguet, “Le diable au corps” 1923.
When a rigid body is submerged in a ﬂuid under the eﬀect of the gra-
vity two more forces have to be considered: the gravitational force and the
buoyancy. The latter is the only hydrostatic eﬀect, i.e., it is not function of
a relative movement between body and ﬂuid.
Let us deﬁne as
gI =


0
0
9.81

m/s2
the acceleration of gravity, ∇the volume of the body and m its mass.
The submerged weight of the body is deﬁned as W = m
00gI00 while its
buoyancy B = ρ∇
00gI00.
The gravity force, acting in the center of mass rB
C is represented in body-
ﬁxed frame by:
f G(RB
I ) = RB
I


0
0
W

,
while the buoyancy force, acting in the center of buoyancy rB
B is represented
in body-ﬁxed frame by:
f B(RB
I ) = −RB
I


0
0
B

.
The (6×1) vector of force/moment due to gravity and buoyancy in body-
ﬁxed frame, included in the left hand-side of the equations of motion, is
represented by:
gRB(RB
I ) = −

f G(RB
I ) + f B(RB
I )
rB
G × f G(RB
I ) + rB
B × f G(RB
I )

.
In the following, the symbol rB
G = [ xG
yG
zG ]T (with rB
G = rB
C) will be
used for the center of gravity.
The expression of gRB in terms of Euler angles is represented by:
gRB(η2) =


(W −B)sθ
−(W −B)cθsφ
−(W −B)cθcφ
−(yGW −yBB)cθcφ + (zGW −zBB)cθsφ
(zGW −zBB)sθ + (xGW −xBB)cθcφ
−(xGW −xBB)cθsφ −(yGW −yBB)sθ


,
(2.45)

32
2. Modelling of Underwater Robots
while in terms of quaternion is represented by:
gRB(Q)=


2(ηε2 −ε1ε3)(W −B)
−2(ηε1 + ε2ε3)(W −B)
(−η2 + ε2
1 + ε2
2 −ε2
3)(W −B)
(−η2 + ε2
1 + ε2
2 −ε2
3)(yGW −yBB) + 2(ηε1 + ε2ε3)(zGW −zBB)
−(−η2 + ε2
1 + ε2
2 −ε2
3)(xGW −xBB) + 2(ηε2 −ε1ε3)(zGW −zBB)
−2(ηε1 + ε2ε3)(xGW −xBB) −2(ηε2 −ε1ε3)(yGW −yBB)

.
By looking at (2.45), it can be recognized that the diﬀerence between
gravity and buoyancy (W −B) only aﬀects the linear force acting on the
vehicle; it is also clear that the restoring linear force is constant in the earth-
ﬁxed frame. On the other hand, the two vectors of the ﬁrst moment of inertia
WrB
G and BrB
B aﬀect the moment acting on the vehicle and are constant in
the vehicle-ﬁxed frame. In summary, the expression of the restoring vector is
linear with respect to the vector of four constant parameters
θv,R = [ W −B
xGW −xBB
yGW −yBB
zGW −zBB ]T
(2.46)
through the (6 × 4) regressor
Φv,R(RI
B) =

RB
I z
O3×3
03×1
S
#
RB
I z
'

,
(2.47)
i.e.,
gRB(RI
B) = Φv,R(RI
B)θv,R.
In (2.47) S(·) is the operator performing the cross product. Notice that, alter-
natively to (2.45), the restoring vector can be written in terms of quaternions;
however, this would lead again to the regressor (2.47) and to the vector of
dynamic parameters (2.46).
2.6 Thrusters’ Dynamics
Underwater vehicles are usually controlled by thrusters (Figure 2.2) and/or
control surfaces.
Control surfaces, such as rudders and sterns, are common in cruise ve-
hicles; those are torpedo-shaped and usually used in cable/pipeline inspec-
tion. Since the force/moment provided by the control surfaces is function
of the velocity and it is null in hovering, they are not useful to manipula-
tion missions in which, due to the manipulator interaction, full control of the
vehicle is required.
The relationship between the force/moment acting on the vehicle τ v ∈
IR6 and the control input of the thrusters uv ∈IRpv is highly nonlinear. It
is function of some structural variables such as: the density of the water;
the tunnel cross-sectional area; the tunnel length; the volumetric ﬂowrate
between input-output of the thrusters and the propeller diameter. The state

2.6 Thrusters’ Dynamics
33
Fig. 2.2. Thruster of SAUVIM (courtesy of J. Yuh, Autonomous Systems Labo-
ratory, University of Hawaii)
of the dynamic system describing the thrusters is constituted by the propeller
revolution, the speed of the ﬂuid going into the propeller and the input torque.
A detailed theoretical and experimental analysis of thrusters’ behavior
can be found in [40, 147, 176, 178, 220, 270, 300, 309]. Roughly speaking,
thrusters are the main cause of limit cycle in vehicle positioning and band-
width constraint.
A common simpliﬁcation is to consider a linear relationship between τ v
and uv:
τ v = Bvuv,
(2.48)
where Bv ∈IR6×pv is a known constant matrix known as the Thruster Con-
trol Matrix (TCM). Along the book, the matrix Bv will be considered square
or low rectangular, i.e., pv ≥6. This means full control of force/moments of
the vehicle.

34
2. Modelling of Underwater Robots
As an example, ODIN has the following TCM:
Bv =


∗
∗
∗
∗
0
0
0
0
∗
∗
∗
∗
0
0
0
0
0
0
0
0
∗
∗
∗
∗
0
0
0
0
∗
∗
∗
∗
0
0
0
0
∗
∗
∗
∗
∗
∗
∗
∗
0
0
0
0


(2.49)
where ∗means a non-zero constant factor depending on the thruster allo-
cation. Diﬀerent TCM can be observed as in, e.g., the vehicle Phantom S3
manufactured by Deep Ocean Engineering that has 4 thrusters:
Bv =


∗
∗
0
0
0
0
∗
∗
0
0
∗
∗
0
0
∗
∗
∗
∗
0
0
∗
∗
0
0


(2.50)
in which it can be recognized that not all the directions are independently
actuated.
On the other hand, if the vehicle is controlled by thrusters, each of which
is locally fed back, the eﬀects of the nonlinearities discussed above is very
limited and a linear input-output relation between desired force/moment and
thruster’s torque is experienced. This is the case, e.g., of ODIN [35, 83, 215,
216] where the experimental results show that the linear approximation is
reliable.
2.7 Underwater Vehicles’ Dynamics in Matrix Form
By taking into account the inertial generalized forces, the hydrodynamic ef-
fects, the gravity and buoyancy contribution and the thrusters’ presence, it is
possible to write the equations of motion of an underwater vehicle in matrix
form:
M v ˙ν + Cv(ν)ν + DRB(ν)ν + gRB(RI
B) = Bvuv,
(2.51)
where M v = M RB +M A and Cv = CRB +CA include also the added mass
terms. Taking into account the current, a possible, approximated, model is
given by:
M v ˙ν + Cv(ν)ν + DRB(ν)ν + gRB(RI
B) = τ v −τ v,C.
(2.52)
The following properties hold:
• the inertia matrix is symmetric and positive deﬁnite, i.e., M v = M T
v > O;
• the damping matrix is positive deﬁnite, i.e., DRB(ν) > O;

2.7 Underwater Vehicles’ Dynamics in Matrix Form
35
• the matrix Cv(ν) is skew-symmetric, i.e., Cv(ν) = −CT
v (ν), ∀ν ∈IR6.
It is possible to rewrite the dynamic model (2.51) in terms of earth-ﬁxed
coordinates; in this case, the state variables are the (6 × 1) vectors η, ˙η
and ¨η. The equations of motion are then obtained, through the kinematic
relations (2.1)–(2.2) as
M .
v(RI
B)¨η + C.
v(RI
B, ˙η) ˙η + D.
RB(RI
B, ˙η) ˙η + g.
RB(RI
B) = τ .
v,
(2.53)
where [127]
M .
v = J−T
e
(RI
B)M vJ−1
e (RI
B)
C.
v = J−T
e
(RI
B)
#
Cv(ν) −M vJ−1
e (RI
B) ˙J(RI
B)
'
J−1
e (RI
B)
D.
RB = J−T
e
(RI
B)DRB(ν)J−1
e (RI
B)
g.
RB = J−T
e
(RI
B)gRB(RI
B)
τ .
v = J−T
e
(RI
B)τ v.
Again, the current can be taken into account by resorting to the relative
velocity or, introducing an approximation, considering the following equati-
ons of motion:
M .
v(RI
B)¨η + C.
v(RI
B, ˙η) ˙η + D.
RB(RI
B, ˙η) ˙η + g.
RB(RI
B) = τ .
v −τ .
v,C,
where τ .
v,C ∈IR6 is the disturbance introduced by the current. It is worth
noticing that the earth-ﬁxed and the body-ﬁxed models with the introduction
of the current as a simple external disturbance implies diﬀerent dynamic
properties. In particular, this is true if, in case of the design of a control
action, the disturbance is considered as constant or slowly varying.
2.7.1 Linearity in the Parameters
Relation (2.51) can be written by exploiting the linearity in the parameters
property. It must be noted that, while this property is proved for rigid bodies
moving in the space [254], for underwater rigid bodies it depends on a suitable
representations of the hydrodynamics terms. With a vector of parameters θv
of proper dimension it is possible to write the following:
Φv(RI
B, ν, ˙ν)θv = τ v.
(2.54)
The inclusion of the ocean current is straightforward by using the relative
velocity as shown in Subsection 2.4.3. However, it might be useful to consider
also the regressor form of the two approximations given by considering the
current as an external disturbance. In particular, it is of interest to isolate
the contribution of the restoring forces and current eﬀects, those are the sole
terms giving a non-null contribution to the dynamic with the vehicle still and
for this reason will be deﬁned as persistent dynamic terms.

36
2. Modelling of Underwater Robots
Starting from the equation (2.52) let ﬁrst consider the current as an ex-
ternal disturbance τ v,C constant in the body-ﬁxed frame, it is possible to
write:
M v ˙ν + Cv(ν)ν + DRB(ν)ν + Φv,R(RI
B)θv,R + Φ	
v,Cθv,C = τ v
that can be rewritten as:
M v ˙ν + Cv(ν)ν + DRB(ν)ν + Φv,P (RI
B)θv,P = τ v
(2.55)
with the use of the (6 × 10) regressor:
Φv,P (RI
B) =

RB
I z
O3×3
I3
O3×3
03×1
S
#
RB
I z
'
O3×3
I3

.
On the other side the current can be modeled as constant in the earth-ﬁxed
frame and, merged again with the restoring forces contribution, gives the
following
M v ˙ν + Cv(ν)ν + DRB(ν)ν + Φv,P (RI
B)θv,P = τ v
(2.56)
with the use of the (6 × 9) regressor:
Φv,P (RI
B) =

O3×3
RB
I
O3×3
S
#
RB
I z
'
O3×3
RB
I

.
It is worth noticing that the two regressors have diﬀerent dimensions.
In order to extrapolate the minimum number of independent parameters,
i.e., the number of columns of the regressor, it is possible to resort to the
numerical method proposed by Gautier [135] based on the Singular Value
Decomposition.
Model (2.56) can by rewritten in a sole regressor of proper dimension
yielding:
Φv,T (RI
B, ν, ˙ν)θv,T = τ v.
(2.57)
2.8 Kinematics of Manipulators with Mobile Base
In Figure 2.3 a sketch of an Underwater Vehicle-Manipulator System with
relevant frames is shown. The frames are assumed to satisfy the Denavit-
Hartenberg convention [254]. The position and orientation of the end eﬀector,
thus, is easily obtained by the use of homogeneous transformation matrices.
Let q ∈IRn be the vector of joint positions where n is the number of
joints. The vector ˙q ∈IRn is the corresponding time derivative. Let deﬁne
ζ ∈IR6+n as

2.8 Kinematics of Manipulators with Mobile Base
37
x
y
z
xb
yb
zb
x1
y1
z1
xn
yn
zn
Fig. 2.3. Sketch of an Underwater Vehicle-Manipulator System with relevant fra-
mes
ζ =


ν1
ν2
˙q

;
It is useful to rewrite the relationship between body-ﬁxed and earth-ﬁxed
velocities given in equations (2.1)-(2.2) in a more compact form:
ζ =


ν1
ν2
˙q

=


RB
I
O3×3
O3×n
O3×3
Jk,o(RB
I )
O3×n
On×3
On×3
In




˙η1
˙η2
˙q

= Jk


˙η1
˙η2
˙q

, (2.58)
where On1×n2 is the null (n1 ×n2) matrix and the matrix Jk,o(RB
I ) in terms
of Euler angles has been introduced in (2.3).

38
2. Modelling of Underwater Robots
Knowing ν1, ν2, ˙ν1, ˙ν2, (vehicle linear and angular velocities and acce-
leration in body ﬁxed frame), ˙q, ¨q, (joint velocities and acceleration) it is
possible to calculate, for every link, the following variables:
ωi
i, angular velocity of the frame i,
˙ωi
i, angular acceleration of the frame i,
vi
i, linear velocity of the origin of the frame i,
vi
ic, linear velocity of the center of mass of link i,
ai
i, linear acceleration of the origin of frame i,
by resorting to the following relationships:
ωi
i = Ri
i−1
%
ωi−1
i−1 + ˙qizi−1
)
(2.59)
˙ωi
i = Ri
i−1
% ˙ωi−1
i−1 + ωi−1
i−1 × ˙qizi−1 + ¨qizi−1
)
(2.60)
vi
i = Ri
i−1vi−1
i−1 + ωi
i × ri
i−1,i
(2.61)
vi
ic = Ri
i−1vi−1
i−1 + ωi
i × ri
i−1,c
(2.62)
ai
i = Ri
i−1ai−1
i−1 + ˙ωi
i × ri
i−1,i + ωi
i × (ωi
i × ri
i−1,i)
(2.63)
where zi is the versor of frame i, ri
i−1,i is the constant vector from the origin
of frame i −1 toward the origin of frame i expressed in frame i.
Since the task of UVMS missions is usually force/position control of the
end eﬀector frame, it is necessary to consider the position of the end eﬀector
in the inertial frame, ηee1 ∈IR3; this is a function of the system conﬁgura-
tion, i.e., ηee1(η1, RB
I , q). The vector ˙ηee1 ∈IR3 is the corresponding time
derivative.
Let us further deﬁne ηee2 ∈IR3 as the orientation of the end eﬀector in
the inertial frame expressed by Euler angles: also ηee2 is a function of the
system conﬁguration, i.e., ηee2(RB
I , q). Again, the vector ˙ηee2 ∈IR3 is the
corresponding time derivative.
The relation between the end-eﬀector posture ηee = [ ηT
ee1
ηT
ee2 ]T and
the system conﬁguration can be expressed by the following nonlinear equa-
tion:
ηee = k(η, q).
(2.64)
The vectors ˙ηee1 and ˙ηee2 are related to the body-ﬁxed velocities νee via
relations analogous to (2.1) and (2.2), i.e.,
νee1 = Rn
I ˙ηee1
(2.65)
νee2 = Jk,o(ηee2) ˙ηee2
(2.66)
where Rn
I is the rotation matrix from the inertial frame to the end-eﬀector
frame (i.e., frame n) and Jk,o is the matrix deﬁned as in (2.3) with the use

2.9 Dynamics of Underwater Vehicle-Manipulator Systems
39
of the Euler angles of the end-eﬀector frame. If the end-eﬀector orientation is
expressed via quaternion the relation between end-eﬀector angular velocity
and time derivative of the quaternion can be easily obtained by the quaternion
propagation equation (2.10).
The end-eﬀector velocities (expressed in the inertial frame) are related to
the body-ﬁxed system velocity by a suitable Jacobian matrix, i.e.,
 ˙ηee1
˙ηee2

=
 Jpos(RI
B, q)
Jor(RI
B, q)

ζ = Jw(RI
B, q)ζ.
(2.67)
In Chapter 6, a diﬀerent version of the (2.67) will be considered. To have
a compact expression to the representation of the attitude error via qua-
ternions, the end-eﬀector velocities (expressed in the earth-ﬁxed frame) are
related to the body-ﬁxed system velocity by the following Jacobian matrix:
˙xE =

˙ηee1
RI
nνee2

= J(RI
B, q)ζ.
(2.68)
Notice that the Jacobian has been derived with respect to the angular velocity
of the end eﬀector expressed in the earth-ﬁxed frame (the matrix RI
n = RnT
I
is the rotation from the frame n the the earth-ﬁxed frame).
2.9 Dynamics of Underwater Vehicle-Manipulator
Systems
By knowing the forces acting on a body moving in a ﬂuid it is possible to
easily obtain the dynamics of a serial chain of rigid bodies moving in a ﬂuid.
The inertial forces and moments acting on the generic body are represen-
ted by:
F i
i = M i[ai
i + ˙ωi
i × ri
i,c + ωi
i × (ωi
i × ri
i,c)]
T i
i = Ii
i ˙ωi
i + ωi
i × (Ii
iωi
i),
where M i is the (3 × 3) mass matrix comprehensive of the added mass, Ii
i
is the (3 × 3) inertia matrix plus added inertia with respect to the center of
mass, ri
i,c is the vector from the origin of frame i toward the center of mass
of link i expressed in frame i.
Let us deﬁne di
i the drag and lift forces acting on the center of mass of
link i, ri
i−1,i the vector from the origin of frame i −1 to the origin of frame i
expressed in frame i, ri
i−1,c the vector from the origin of frame i −1 to the
center of mass of link i expressed in frame i and ri
i−1,b the vector from the
origin of frame i −1 to the center of buoyancy of link i expressed in frame i,
gi = Ri
IgI = Ri
I


0
0
9.81


m/s2 .

40
2. Modelling of Underwater Robots
The total forces and moments acting on the generic body of the serial
chain are given by:
f i
i = Ri
i+1f i+1
i+1 + F i
i −migi + ρ∇igi + pi
µi
i = Ri
i+1µi+1
i+1 + Ri
i+1ri+1
i−1,i × Ri
i+1f i+1
i+1 + ri
i−1,c × F i
i + T i
i +
+ri
i−1,c × (−migi + di) + ri
i−1,b × ρ∇igi
Bi
Ci
Oi−1
Oi
ri−1,i
ri−1,C
ri−1,B
ri,C
f i, µi
f i+1, µi+1
−ρ∇ig
mig
di
Fig. 2.4. Force/moment acting on link i
The torque acting on joint i is ﬁnally given by:
τq,i = µi
i
Tzi
i−1 + fdisign( ˙qi) + fvi ˙qi
(2.69)
with fdi and fvi the motor dry and viscous friction coeﬃcients.
Let us deﬁne τ q = [ τq,1
. . .
τq,n ]T ∈IRn the vector of joint torques
and τ ∈IR6+n
τ =

τ v
τ q

(2.70)
the vector of force/moment acting on the vehicle as well as joint torques. It
is possible to write the equations of motions of an UVMS in a matrix form:
M(q)˙ζ + C(q, ζ)ζ + D(q, ζ)ζ + g(q, RI
B) = τ
(2.71)
where M
∈
IR(6+n)×(6+n) is the inertia matrix including added mass
terms, C(q, ζ)ζ
∈
IR6+n is the vector of Coriolis and centripetal terms,
D(q, ζ)ζ
∈
IR6+n is the vector of dissipative eﬀects, g(q, RB
I )
∈
IR6+n
is the vector of gravity and buoyancy eﬀects. The relationship between the
generalized forces τ and the control input is given by:

2.9 Dynamics of Underwater Vehicle-Manipulator Systems
41
τ =

τ v
τ q

=

Bv
O6×n
On×6
In

u = Bu,
(2.72)
where u ∈IRpv+n is the vector of the control input. Notice that, while for
the vehicle a generic number pv ≥6 of control inputs is assumed, for the
manipulator it is supposed that n joint motors are available.
It can be proven that:
• The inertia matrix M of the system is symmetric and positive deﬁnite:
M = M T > O
moreover, it satisﬁes the inequality
λmin(M) ≤
M
 ≤λmax(M),
where λmin(M) (λmax(M)) is the minimum (maximum) eigenvalue of M.
• For a suitable choice of the parametrization of C and if all the single bodies
of the system are symmetric,
˙M −2C is skew-symmetric [67]
ζT #
˙M −2C
'
ζ = 0
which implies
˙M = C + CT
moreover, the inequality

C(a, b)c
 ≤CM 
b
 
c
and the equality
C(a, α1b + α2c) = α1C(a, b) + α2C(a, c)
hold.
• The matrix D is positive deﬁnite
D > O
and satisﬁes

D(q, a) −D(q, b)
 ≤DM 
a −b
 .
In [255], it can be found the mathematical model written with respect
to the earth-ﬁxed-frame-based vehicle position and the manipulator end-
eﬀector. However, it must be noted that, in that case, a 6-dimensional mani-
pulator is considered in order to have square Jacobian to work with; moreover,
kinematic singularities need to be avoided.
Reference [174] reports some interesting dynamic considerations about the
interaction between the vehicle and the manipulator. The analysis performed
allows to divide the dynamics in separate meaningful terms.

42
2. Modelling of Underwater Robots
2.9.1 Linearity in the Parameters
UVMS have a property that is common to most mechanical systems, e.g., se-
rial chain manipulators: linearity in the dynamic parameters. Using a suitable
mathematical model for the hydrodynamic forces, (2.71) can be rewritten in
a matrix form that exploits this property:
Φ(q, RI
B, ζ, ˙ζ)θ = τ
(2.73)
with Φ ∈R(6+n)×nθ, being nθ the total number of parameters. Notice that nθ
depends on the model used for the hydrodynamic generalized forces and joint
friction terms. For a single rigid body the number of dynamic parameter nθ,v
is a number greater than 100 [127]. For an UVMS it is nθ = (n + 1) · nθ,v,
that gives an idea of the complexity of such systems.
Diﬀerently from ground ﬁxed manipulators, in this case the number of
parameters can not be reduced because, due to the 6 degrees of freedom
(DOFs) of the sole vehicle, all the dynamic parameters provide an individual
contribution to the motion.
2.10 Contact with the Environment
If the end eﬀector of a robotic system is in contact with the environment,
the force/moment at the tip of the manipulator acts on the whole system
according to the equation ([254])
M(q)˙ζ + C(q, ζ)ζ + D(q, ζ)ζ + g(q, RI
B) = τ + JT
w(q, RI
B)he,
(2.74)
where Jw is the Jacobian matrix deﬁned in (2.67) and the vector he ∈IR6 is
deﬁned as
he =

f e
µe

i.e., the vector of force/moments at the end eﬀector expressed in the iner-
tial frame. If it is assumed that only linear forces act on the end eﬀector
equation (2.74) becomes
M(q)˙ζ + C(q, ζ)ζ + D(q, ζ)ζ + g(q, RI
B) = τ + JT
pos(q, RI
B)f e
(2.75)
Contact between the manipulator and the environment is usually diﬃcult
to model. In the following the simple model constituted by a frictionless and
elastically compliant plane will be considered. The force at the end eﬀector is
then related to the deformation of the environment by the following simpliﬁed
model [79] (see Figure 2.5)

2.11 Identiﬁcation
43
f e = K(x −xe),
(2.76)
where x is the position of the end eﬀector expressed in the inertial frame, xe
characterizes the constant position of the unperturbed environment expressed
in the inertial frame and
K = knnT,
(2.77)
with k > 0, is the stiﬀness matrix being n the vector normal to the plane [194].
nnTxe
(I −nnT)xe
xe
x
f e
Fig. 2.5. Planar view of the chosen model for the contact force
In our case it is x = ηee1; however, in the force control chapter, the
notation x will be maintained.
2.11 Identiﬁcation
Identiﬁcation of the dynamic parameters of underwater robotic structures is a
very challenging task. The mathematical model shares its main characteristics
with the model of a ground-ﬁxed industrial manipulator, e.g., it is non-linear
and coupled. In case of underwater structure, however, the hydrodynamic
terms are approximation of the physical eﬀects. The actuation system of the
vehicle is achieved mainly by the thrusters the models of which are still object
of research. Finally, accurate measurement of the whole conﬁguration is not
easy. For these reasons, while from the mathematical aspect the problem
is not new, from the practical point of view it is very diﬃcult to set-up
a systematic and reliable identiﬁcation procedure for UVMSs. At the best
of our knowledge, there is no signiﬁcant results in the identiﬁcation of full

44
2. Modelling of Underwater Robots
UVMSs model. Few experimental results, moreover, concern the sole vehicle;
often driven in few DOFs.
Since most of the fault detection algorithms rely on the accuracy of the
mathematical model, this is also the reason why in this domain too, there
are few experimental results (see Chapter 4).
In [2] the hydrodynamic damping terms of the vehicle Roby 2 developed
at the Naval Automation Institute, National Research Council, Italy, (now
CNR-ISSIA) have been experimentally estimated and further used to develop
fault detection/tolerance strategies. The vehicle is stable in roll and pitch,
hence, considering a constant depth, the sole planar model is identiﬁed.
In [227] some sea trials have been set-up in order to estimate the hydro-
dynamic derivatives of an 1/3-scale PAP-104 mine countermeasures ROV.
The paper assumes that the added mass is already known, moreover, the
identiﬁcation concerns the planar motion for the 6-DOFs model. The posi-
tion of the vehicle is measured by means of a redundant acoustic system; all
the measurements are fused in an EKF in order to obtain the optimum state
estimation. Experimental results are given.
The work [271] reports some experimental results on the single DOF mo-
dels for the ROV developed at the John Hopkins University (JHUROV).
First, the mathematical model is written so as to underline the Input-to-
State-Stability; then a stable, on-line, adaptive identiﬁcation technique is de-
rived. The latter method is compared with a classic, oﬀ-line, Least-Squares
approach. The approximation required by the proposed technique is that the
equations of motion are decoupled, diagonal, there is no tether disturbance
and the added mass is constant. Interesting experimental results are reported.
The interested reader can refer also to [62, 111].

3. Dynamic Control of 6-DOF AUVs
3.1 Introduction
In this Chapter, the problem of controlling an Autonomous Underwater Ve-
hicle in 6-DOFs is approached.
To eﬀectively compensate the hydrodynamic eﬀects several adaptive (in-
tegral) control laws have been proposed in the literature (see, e.g., [91, 93, 97,
152, 319]). In [126], a number of adaptive control actions are proposed, where
the presence of an external disturbance is taken into account and its counter-
action is obtained by means of a switching term; simulation on the simpliﬁed
three-DOF horizontal model of NEROV are given. In [121], a body-ﬁxed-
frame based adaptive control law is developed. In [314], an adaptive control
law based on Euler angle representation of the orientation has been proposed
for the control of an AUV; planar simulations are provided to show the eﬀec-
tiveness of the proposed approach. Reference [184] proposes a self-adaptive
neuro-fuzzy inference system that makes use of a 5-layer-structured neural
network to improve the function approximation. In [175] a fuzzy membership
function based-neural network is proposed; the control’s membership func-
tions derivation is achieved by a back propagation network.
Generally speaking, the performance achievable from the application of
adaptive control laws has been validated only by means of reduced-order si-
mulations; on the other hand, six-DOF experimental results are seldom pre-
sented in the literature [299]. References [34, 35, 122, 126] describe six-DOF
control laws in which the orientation is described by the use of quaternions.
The papers [34, 35, 84, 215, 216, 323] report six-DOF experimental results
on the underwater vehicle ODIN (Omni-Directional Intelligent Navigator).
An experimental work is given in [269, 270] by the use of the Johns Hop-
kins University ROV on a single DOF. Diﬀerent simple control laws are tested
on the vehicle in presence of model mismatching and thruster saturation and
their performance is evaluated.
Among the other hydrodynamic eﬀects acting on a rigid body moving in a
ﬂuid, the restoring generalized forces (gravity plus buoyancy) and the ocean
current are of major concern in designing a motion control law for underwater
vehicles, since they are responsible of steady-state position and orientation
errors. However, while the restoring generalized forces are usually dealt with
in the framework of adaptive dynamic compensations, only few papers take
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 45–77, 2006.
© Springer-Verlag Berlin Heidelberg 2006

46
3. Dynamic Control of 6-DOF AUVs
into account the eﬀect of the ocean current. The works [34, 35, 125] consider
a six-DOF control problem in which the ocean current is compensated in
vehicle-ﬁxed coordinates; since the current eﬀects are modeled as an external
disturbance acting on the vehicle, there is no need for additional sensors.
In [145, 243, 244] a diﬀerent approach is proposed for the three-DOF surge
control of the vehicle Phoenix: the current, or more generally, the sea wave,
is modeled by an Auto-Regressive dynamic model and an extended Kalman
ﬁlter is designed to estimate the relative velocity between vehicle and wa-
ter; the estimated relative velocity is then used by a sliding-mode controller
to drive the vehicle. In this case, additional sensors besides those typically
available on-board are required. The controller developed in [145] has been
also used for the NPS ARIES AUV [201]. Reference [133] reports an algo-
rithm for the underwater navigation of a torpedo-like vehicle in presence of
unknown current where the current itself is estimated by resorting to a range
measurement from a single location.
A common feature of all the adaptive control laws proposed in the litera-
ture is that they are designed starting from dynamic models written either
in the earth-ﬁxed frame or in the vehicle-ﬁxed frame. Nevertheless, some hy-
drodynamic eﬀects are seen as constant in the earth-ﬁxed frame (e.g., the
restoring linear force) while some others are constant in the vehicle-ﬁxed
frame (e.g., the restoring moment).
In this Chapter a comparison among the controllers developed in [13, 121,
122, 125, 280, 320] is shown. The controllers have been designed for 6-DOFs
control of AUVs and they do not need the measurement of the ocean current
(when it is taken into account). The analysis will mainly concern the con-
trollers capacity to compensate for the persistent dynamic eﬀects, e.g., the
restoring forces and the ocean current. For each controller a reduced version is
derived and eventually modiﬁed so as to achieve null steady state error under
modeling uncertainty and presence of ocean current. It is worth noticing that
the reduced controller is not given by the Authors of the corresponding pa-
per; this has to be taken into account while observing the simulation results.
The reduced controller will be developed in order to achieve a PD action
plus the adaptive/integral compensation of the persistent eﬀects, i.e., it can
be considered as the equivalent of an adaptive PD+gravity compensation for
industrial manipulator. In other words, the velocity and acceleration based
dynamic terms of the model will not be compensated for. Numerical simulati-
ons using the model of ODIN (Omni-Directional Intelligent Navigator) [320],
have been run to verify the theoretical results.
For easy of readings, Table 3.1 reports the label associated with each
controller.

3.2 Earth-Fixed-Frame-Based, Model-Based Controller
47
Table 3.1. Labels of the discussed controllers
label
Authors
Sect.
frame
A
Fjellstad & Fossen
3.2
earth
B
Yuh et al.
3.3
earth
C
Fjellstad & Fossen
3.4
vehicle
D
Fossen & Balchen
3.5
earth/vehicle
E
Antonelli et al.
3.6
earth/vehicle
F
Sun & Cheah
3.7
earth/vehicle
3.2 Earth-Fixed-Frame-Based, Model-Based Controller
In 1994, O. Fjellstad and T. Fossen [122] propose an earth-ﬁxed-frame-based,
model-based controller that makes use of the 4-parameter unit quaternion
(Euler parameter) to reach a singularity-free representation of the attitude.
The controller is obtained by extending the results obtained in [267] for robot
manipulators.
By deﬁning
˜p = pd −p
(3.1)
where p = [ ηT
1
QT ]T ∈IR7 is the quaternion-based position/attitude vec-
tor of the vehicle and pd = [ ηT
1,d
QT
d ]T ∈IR7 is its desired value. The
following (7 × 1) vector can be further deﬁned:
s = KD ˙˜p + KP ˜p + KI
! t
0
˜p(τ)dτ = ˙pr −KD ˙p
(3.2)
that implies the vector ˙pr ∈IR7 deﬁned as
˙pr = KD ˙pd + KP ˜p + KI
! t
0
˜p(τ)dτ
(3.3)
where KD, KP and KI are (7 × 7) positive deﬁnite matrices of gains.
The following control law is proposed
τ .
v = M .
v¨pr + C.
v ˙pr + D.
RB ˙pr + g.
RB + Λs ,
(3.4)
where Λ is a (7 × 7) positive deﬁnite matrix of gains. Notice that the above
control law refers to a quaternion-based dynamic model in earth-ﬁxed coordi-
nates which can be obtained from (2.53) by using the matrix Jk,oq ∈IR4×3 in-
stead of the matrix Jk,o ∈IR3×3 in the construction of the Jacobian Je(RI
B).
Also notice that, with respect to the model detailed in Section 2.7 the di-
mension of Je(RI
B) are diﬀerent.

48
3. Dynamic Control of 6-DOF AUVs
Let now consider the positive semi-deﬁnite function:
V = 1
2sTM .
vs > 0,
∀s = α

0
Q

,
α ∈IR
(3.5)
after straightforward calculation, its time derivative is given by:
˙V = −sT [Λ + D.
RB] s < 0,
∀s = 0
(3.6)
Since V is only positive semi-deﬁnite and the system is non-autonomous
the stability can not be derived by applying the Lyapunov’s theorem. By
further assuming that ˙pr is twice diﬀerentiable, then ¨V is bounded and ˙V
is uniformly continuous. Hence, application of the Barb˘alat’s Lemma allows
to prove global convergence of s →0 as t →∞. Due to the deﬁnition of
the vector s, its convergence to zero also implies convergence of ˜p to the null
value.
In case of perfect knowledge of the dynamic model, moreover, the con-
vergence of the error to zero can be demonstrated even for KI = O, i.e.,
without integral action.
Compensation of the persistent eﬀects. If a reduced version of the con-
troller is implemented, e.g., by neglecting the model-based terms in (3.4), the
restoring moment is not compensated eﬃciently. In fact, let consider a vehicle
in the two static postures shown in Figure 3.1 and let suppose that the vehicle,
starting from the left conﬁguration, is driven to the right conﬁguration and,
after a while, back to the left conﬁguration. In the left conﬁguration the inte-
gral action in (3.3) does not give any contribution to the control moment as
expected, because the vectors of gravity and buoyancy are aligned. Further-
more, in the right conﬁguration the integral action will compensate exactly at
the steady state for the moment generated by the misalignment between gra-
vity and buoyancy. When the vehicle is driven back to the left conﬁguration,
a null steady-state compensation error is possible after the integral action is
discharged; this poses a severe limitation to the control bandwidth that can
be achieved. A similar argument holds in the typical practical situation in
which the compensation implemented through the vector g.
RB is not exact.
On the other hand, since the error variables are deﬁned in the earth-ﬁxed
frame, the controller is appropriate to counteract the current eﬀect. This
point will be clariﬁed in next Subsections, when discussing the drawbacks of
the controllers C and D with respect to the current compensation.
Finally, an adaptive version of this controller is not straightforward. In
fact, since the dynamic model (2.53) does not depend on the absolute vehicle
position, a steady null linear velocity of the vehicle with a non-null position
error would not excite a corrective adaptive control action. As a result, null
position error at rest cannot be guaranteed in presence of ocean current. From
the theoretical point of view, this drawback can be avoided by deﬁning the
velocity error using the current measurement. However, from the practical
point of view, this approach cannot achieve ﬁne positioning of the vehicle
since local vortices can make current measurement too noisy.

3.3 Earth-Fixed-Frame-Based, Non-model-Based Controller
49
ob
ob
xb
xb
zb
zb
o x
z
rg
rg
f g
f g
rb
rb
f b
f b
Mr
gI
θ
Fig. 3.1. Planar view parallel to the xz earth-ﬁxed frame of two diﬀerent conﬁ-
gurations and corresponding restoring forces and moments: rG (rB) is the center
of gravity (buoyancy), f G (f B) is the gravity (buoyancy) force, and MR is the y
component of the restoring moment
Reduced Controller. According to the motivation given in the introduc-
tion of this Section, the following reduced version of the control law is consi-
dered
τ .
v = ˆg.
RB(RI
B) + ˙pr ,
(3.7)
where ˆg.
RB(RI
B) is a model-based estimate of the restoring generalized force
acting on the vehicle. It might be useful to substituting the deﬁnition of ˙pr
yielding
τ .
v = ˆg.
RB(RI
B) + KD ˙˜pd + KP ˜p + KI
! t
0
˜p(τ)dτ
(3.8)
that has a clear interpretation.
3.3 Earth-Fixed-Frame-Based, Non-model-Based
Controller
In 1999, J. Yuh proposes an earth-ﬁxed-frame-based, non-model-based con-
troller [320]. The control input is given by:

50
3. Dynamic Control of 6-DOF AUVs
τ .
v = K1¨ηd + K2 ˙η + K3 + K4 ˙˜η + K5˜η =
5
-
i=1
Kiφi ,
(3.9)
where ˜η = ηd −η, the gains Ki ∈IR6×6 are computed as
Ki =
ˆγiseφT
i

se
 
φi
i = 1, . . . , 5 ,
where
se = ˙˜η + σ˜η
with σ > 0 ,
and the factors ˆγi’s are updated by
˙ˆγi = fi 
se
 
φi
with fi > 0
i = 1, . . . , 5 .
Please notice that φ3 = k ∈IR6, i.e., a positive constant vector.
Experimental results in 6-DOFs on the use of (3.9) are reported in [215,
216, 323]; these have proven the eﬀectiveness of this controller starting from
the surface (with null initial gains) where a smooth version of the controller
has been implemented.
The stability analysis can be performed using Lyapunov-like arguments
starting from the function
V = 1
2 ˜ηT˜η + 1
2
5
-
i=1
1
fi
(γi −ˆγi)2
that, diﬀerentiated with respect to the time yields a negative semi-deﬁnite
scalar function; details can be found in [323].
Recently, in [323], Zhao and Yuh propose a model-based version of this
control law. The eventual knowledge of the vehicle dynamics is exploited by
implementing a disturbance observer in charge of partially compensate for the
system dynamics. Interesting experimental results with the vehicle ODIN are
reported where the tuning of the gains has been achieved on the single DOFs
independently. This has been made possible in view of the speciﬁc shape
of the vehicle, close to a sphere, that reduces the coupling eﬀects and the
diﬀerence among the directions. It is worth noticing that the considerations
below are valid also for this version of the controller.
Compensation of the persistent eﬀects. Since the tracking errors are
deﬁned in the earth-ﬁxed frame, similar considerations to those developed
for the law A can be done with respect to compensation of both restoring
generalized forces and ocean current eﬀects.
Reduced Controller. Being the sole non-model-based law, the controller
presented in [320] is characterized by an error behavior much diﬀerent from
that obtained by the other considered controllers and a fair comparison is
made diﬃcult. For this reason, a reduced controller has not been retrieved.

3.4 Vehicle-Fixed-Frame-Based, Model-Based Controller
51
3.4 Vehicle-Fixed-Frame-Based, Model-Based Controller
Several controllers have been proposed in literature which are based on
vehicle-ﬁxed-frame error variables. Among them, the controller proposed in
1994 by O. Fjellstad and T. Fossen [121]; full DOFs experimental results have
been reported by G. Antonelli et al. in [34, 35].
Let consider the vehicle-ﬁxed variables:
˜y =

RB
I ˜η1
˜ε

˜ν = νd −ν ,
where ˜η1 = η1,d −η1, being η1,d the desired position, and ˜ε is the quaternion
based attitude error,
sv = ˜ν + Λ˜y ,
(3.10)
with Λ = blockdiag{λpI3, λoI3}, Λ > O.
νa = νd + Λ˜y .
(3.11)
Reminding the vehicle regressor Φv ∈R6×nθ,v deﬁned in (2.54) and the
corresponding vector of dynamic parameters θv ∈Rnθ,v, the control law is
given by:
τ v = Φv(RI
B, ν, νa, ˙νa)ˆθv + KDsv ,
(3.12)
where KD is a (6 × 6) positive deﬁnite matrix. The parameter estimate ˆθv
is updated by
˙ˆθv = K−1
θ ΦT
v (RI
B, ν, νa, ˙νa)sv ,
(3.13)
where Kθ is a suitable positive deﬁnite matrix of appropriate dimension.
The stability analysis is achieved by considering the following Lyapunov
candidate function:
V = 1
2 sT
v M vsv + 1
2
˜θ
T
v Kθ˜θv > 0,
∀s = 0, ˜θv = 0
(3.14)
the time derivative of which, by applying the proposed control law, is given
by
˙V = −sT
v [KD + DRB] sv
(3.15)
It is now possible to prove the system stability in a Lyapunov-Like sense
using the Barb˘alat’s Lemma. Since
• V is lower bounded

52
3. Dynamic Control of 6-DOF AUVs
• ˙V (sv, ˜θv) ≤0
• ˙V (sv, ˜θv) is uniformly continuous
then
• ˙V (sv, ˜θv) →0 as t →∞.
Thus sv →0 as t →∞. In view of the deﬁnition of sv, this implies that
˜ν →0 as t →∞; in addition, due to the properties of the quaternion, it
results that ˜η →1 as t →∞. However, as usual in adaptive control schemes,
it is not possible to prove asymptotic stability of the whole state since ˜θv is
only guaranteed to be bounded.
Notice that, in [121], further discussion is developed by considering diﬀe-
rent choices for the matrix Λ.
In 1997 [89] G. Conte and A. Serrani develop a Lyapunov-based control
for AUVs. The designed controller, by introducing a representation of the
model uncertainties, is made robust using Lyapunov techniques. It is worth
noticing that this approach does not take into account explicitly for an adap-
tive/integral action to compensate for the current eﬀect. The position error is
represented within a vehicle-ﬁxed representation with a feedback term similar
to the vector sv used in this Section.
Compensation of the persistent eﬀects. Following the same reasoning
as previously done for the law A, it can be deducted that also in this case
the adaptive compensation cannot guarantee null position error at rest in
the presence of ocean current. In fact, the dynamic model (2.51) shows that
a steady null linear velocity of the vehicle with a non-null position error
does not excite a corrective adaptive control action. Again, ocean current
measurement cannot overcome this problem in practice.
To achieve a null position error in presence of ocean current, an integral
action on body-ﬁxed-frame error variables was considered in [34, 35]. Ho-
wever, this integral action has the following drawback: let suppose that the
vehicle is at rest in the left conﬁguration of Figure 3.2 in presence of a water
current aligned to the earth-ﬁxed y axis; the control action builds the current
compensation term which, in this particular conﬁguration, turns out to be
parallel to the yb axis. If the vehicle is now quickly rotated to right conﬁgu-
ration, the built compensation term rotates together with the vehicle keeping
its alignment to the yb axis; however, this vehicle-ﬁxed axis has now become
parallel to the x axis of the earth-ﬁxed frame. Therefore, the built compen-
sation term acts as a disturbance until the integral action has re-built proper
current compensation for the right conﬁguration. It is clear at this point that
this drawback does not arise for the controller E and for the controllers A
and B, since they build ocean current compensation in an earth-ﬁxed frame.
Reduced Controller. Similarly to the other cases, a reduced form of the
controller has been derived. An integral action on body-ﬁxed-frame error

3.5 Model-Based Controller Plus Current Compensation
53
ob
ob
xb
xb
yb
yb
o
x
y
νI
c
ψ
Fig. 3.2. Planar view parallel to the xy earth-ﬁxed frame of two diﬀerent conﬁgu-
rations under the constant current νI
c
variables has also been considered as in [35] to counteract the current eﬀects,
i.e.,
τ v = Φv,P (RI
B)ˆθv + KDsv
(3.16)
˙ˆθv = K−1
θ ΦT
v,P sv .
(3.17)
3.5 Model-Based Controller Plus Current Compensation
T. Fossen and J. Balchen, in 1991 [125], propose a control law that explicitly
takes into account the ocean current without need for the current measure-
ment.
Being:
se = ˙˜η + σ˜η
with σ > 0 ,
(3.18)
the controller is given by:
τ v = Φv(RI
B, ν, νa, ˙νa)ˆθv + ˆv + JT
e (RI
B)KDse
(3.19)
where KD ∈IR6×6, is a positive deﬁnite matrix of gains. Notice that the
PD action is similar to the transpose of the Jacobian approach developed for

54
3. Dynamic Control of 6-DOF AUVs
industrial manipulators [254]. The current compensation ˆv is updated by the
following
˙ˆv = W −1J−1
e (RI
B)se
(3.20)
with W > 0 and the dynamic parameters are updated by
˙ˆθv = K−1
θ ΦT
v (RI
B, ν, νa, ˙νa)J−1
e (RI
B)se ,
(3.21)
where, again, Kθ, is a positive deﬁnite matrices of gains of appropriate di-
mensions.
It is worth noticing that with this control the model considers the current
as an additive disturbance, constant in the body-ﬁxed frame (see Subsec-
tion 2.4.3).
The stability analysis is developed by deﬁning as Lyapunov candidate
function
V = sT
e M .
vse + 1
2
˜θ
T
v Kθ˜θv + 1
2 ˜vTW ˜v
(3.22)
that is positive deﬁnite ∀se = 0, ˜θv = 0, ˜v = 0.
By applying the proposed control law, and following the guidelines
in [125], it is possible to demonstrate that
˙V = −sT
e [KD + D.
RB] se ≤0
(3.23)
It is now possible to prove again the system stability in a Lyapunov-Like
sense using the Barb˘alat’s Lemma. Since
• V is lower bounded
• ˙V (se, ˜θv, ˜v) ≤0
• ˙V (se, ˜θv, ˜v) is uniformly continuous
then
• ˙V (se, ˜θv, ˜v) →0 as t →∞.
Thus se →0 as t →∞. In view of the deﬁnition of se, this implies that
˜η →0 as t →∞. However, the vectors ˜θv and ˜v are only guaranteed to be
bounded.
Compensation of the persistent eﬀects. Since the adaptive compen-
sation term Φv(RI
B, ν, νa, ˙νa)ˆθv operates in vehicle-ﬁxed coordinates, the
control law is suited for eﬀective compensation of the restoring moment.
On the other hand, despite the error vector se is based on earth-ﬁxed
quantities, the current-compensation term ˆv is built through the integral

3.6 Mixed Earth/Vehicle-Fixed-Frame-Based, Model-Based Controller
55
action (3.20) which works in vehicle-ﬁxed coordinates; this implies that, as
for counteraction of the ocean current, this control law suﬀers from the same
drawback as that discussed for the law C.
Reduced Controller. The model-based compensation has been reduced to
the restoring generalized force alone:
τ v = Φv,R(RI
B)ˆθv,R + ˆv + JT
e (RI
B)KDse
(3.24)
˙ˆv = W −1J−1
e (RI
B)se
(3.25)
˙ˆθv,R = K−1
θ ΦT
v,R(RI
B)J−1
e (RI
B)se ,
(3.26)
3.6 Mixed Earth/Vehicle-Fixed-Frame-Based,
Model-Based Controller
In 2001, G. Antonelli, F. Caccavale, S. Chiaverini and G. Fusco [13, 14] pro-
pose and adaptive tracking control law that takes into account the diﬀerent
nature of the hydrodynamic eﬀects acting on the AUV (ROV); this is achieved
by suitably building each dynamic compensation action in a proper (either
inertial or vehicle-ﬁxed) reference frame. In fact, since adaptive or integral
control laws asymptotically achieve compensation of the constant disturbance
terms, it is convenient to build the compensation action in a reference frame
with respect to which the disturbance term itself is seen as much as possible
as constant. The analysis has been extended in [9, 16].
Let consider the vehicle-ﬁxed variables:
˜y =

RB
I ˜η1
˜ε

˜ν = νd −ν ,
where ˜η1 = η1,d −η1, being η1,d the desired position, and ˜ε is the quaternion
based attitude error. Let deﬁne as ˆθv the vector of parameters to be adapted,
sv = ˜ν + Λ˜y ,
(3.27)
with Λ = blockdiag{λpI3, λoI3}, Λ > O. The control law is given by:
τ v = KDsv + K˜y + Φv,T ˆθv
(3.28)
where KD ∈IR6×6 and K = blockdiag{kpI3, koI3} are positive deﬁnite
matrices of the gains to be designed, and
˙ˆθv = K−1
θ ΦT
v,T sv ,
(3.29)
where Kθ is also a positive deﬁnite matrix of proper dimensions.

56
3. Dynamic Control of 6-DOF AUVs
3.6.1 Stability Analysis
Let us consider the following scalar function
V = 1
2sT
v M vsv + 1
2
˜θ
T
v Kθ˜θv + 1
2kp˜ηT
1 ˜η1 + ko˜zT˜z ,
(3.30)
where ˜z = [ 1
0T ]T −z = [ 1 −˜η
−˜εT ]T. Due to the positive deﬁniteness
of M v, Kθ, and K, the scalar function V (˜η1, ˜z, sv, ˜θv) is positive deﬁnite.
Let us deﬁne the following partition for the variable sv that will be useful
later:
sv =

sp
so

,
(3.31)
with sp ∈IR3 and so ∈IR3. In view of (3.31) and the deﬁnition of sv, it is
˜ν1 = sp −λpRB
I ˜η1
(3.32)
˜ν2 = so −λo˜ε .
(3.33)
Diﬀerentiating V with respect to time yields:
˙V = sT
v M v ˙sv + ˜θ
T
v Kθ ˙˜θv + kp˜ηT
1 RI
B ˜ν1 −2ko˜zT Jk,oq˜ν2
= sT
v M v
#
˙νd −˙ν + Λ ˙˜y
'
+ ˜θ
T
v Kθ ˙˜θv +
+kp˜ηT
1 RI
B
#
sp −λpRB
I ˜η1
'
+
−ko [ 1 −˜η
−˜εT ]

−˜εT
˜ηI3 + S(˜ε)

(so −λo˜ε) .
Then, deﬁning
νa = νd + Λ˜y
(3.34)
yields (dependencies are dropped out to increase readability):
˙V = sT
v [M v ˙νa −τ v + Cvν + DRBν + gRB + τ v,C] +
−˜θ
T
v Kθ ˙ˆθv + kp˜ηT
1 RI
Bsp −kpλp˜ηT
1 ˜η1 +
+ko˜εTso −λoko˜εT˜ε,
(3.35)
that can be rewritten as:
˙V = sT
v [Φv,T θv −τ v] −sT
v DRBsv −˜θ
T
v Kθ ˙ˆθv +
+sT
v K˜y −kpλp˜ηT
1 ˜η1 −koλo˜εT˜ε .
By considering the control law (3.28) and the parameters update (3.29),
it is:
˙V = −sT
v (KD + DRB)sv −kpλp˜ηT
1 ˜η1 −koλo˜εT˜ε
that is negative semi-deﬁnite over the state space {˜η1, ˜z, sv, ˜θv}.

3.7 Jacobian-Transpose-Based Controller
57
It is now possible to prove the system stability in a Lyapunov-Like sense
using the Barb˘alat’s Lemma. Since
• V is lower bounded
• ˙V (˜η1, ˜z, sv, ˜θv) ≤0
• ˙V (˜η1, ˜z, sv, ˜θv) is uniformly continuous
then
• ˙V (˜η1, ˜z, sv, ˜θv) →0 as t →∞.
Thus ˜η1, ˜ε, sv →0 as t →∞. In view of the deﬁnition of sv, this implies
that ˜ν →0 as t →∞; in addition, due to the properties of the quaternion, it
results that ˜η →1 as t →∞. However, as usual in adaptive control schemes,
it is not possible to prove asymptotic stability of the whole state since ˜θv is
only guaranteed to be bounded.
Compensation of the persistent eﬀects. The control law has been de-
signed explicitly to take into account the persistent dynamic eﬀects in their
proper frame. For this reason it does not suﬀer from the drawbacks of com-
pensating the restoring forces in the earth-ﬁxed frame, or, dually, the current
parameters in the body-ﬁxed frame.
Reduced Controller. According to the aim to design a PD-like action plus
an adaptive compensation action, the reduced version of the control law is
then given by:
τ v = KDsv + Φv,P ˆθv,P
(3.36)
˙ˆθv,P = K−1
θ ΦT
v,P sv ,
(3.37)
where KD ∈IR6×6 and Kθ ∈IR9×9 are positive deﬁnite matrices of gains to
be designed.
3.7 Jacobian-Transpose-Based Controller
Sun and Cheah, in 2003 [280], present an adaptive set-point control inspired
by the manipulator control approach proposed in [38].
The vector ˜η ∈IR6 represents, as usual, the error in the earth-ﬁxed frame.
Let further deﬁne the function F deﬁned on the single components such as:
• It holds: Fi(xi) > 0
∀xi = 0,
Fi(0) = 0;
• The function Fi(xi) is twice continuously diﬀerentiable;
• The partial derivative fi = ∂Fi/∂xi is strictly increasing in xi for |xi| < γi
for a given γi and saturated for |xi| ≥γi;
• There exists a positive constant ci such that Fi(xi) > c2
i fi

58
3. Dynamic Control of 6-DOF AUVs
The function f ∈IR6 collecting the elements fi is basically a saturated fun-
ction. Guidelines in its selection are given in [38].
The proposed controller is given by:
τ v = KP JT
e (RI
B)f(˜η) −KDν + Φv,R(RI
B)ˆθv,R
(3.38)
where KP and KD are positive deﬁnite matrices, selected as scalar in [280]
and
˙ˆθv,R = K−1
θ ΦT
v,R(RI
B)
#
ν + αJT
e (RI
B)f(˜η)
'
(3.39)
where α > 0 is a scalar gain.
It can be noticed that the proportional action is similar to the action
proposed by Fossen and Balchen in Section 3.5. The derivative action is, on
the contrary, based on the vehicle-ﬁxed variable ν that is diﬀerent from the
derivative action developed by Fossen and Balchen based on the term JT
e ˙˜η.
Finally they both have an adaptive action that is already reduced to the sole
restoring terms in [280].
It is worth noticing that the Authors propose scalar gains KP , KD and
α for the controller. There is a main problem related with the fact that the
position and orientation variables have diﬀerent unit measures; using the
same gains might force the designer to tune the performance to the lower
bandwidth.
Compensation of the persistent eﬀects. The controller proposed by the
Authors compensates for the gravity in the vehicle-ﬁxed frame. However,
the update law is based on the transpose of the Jacobian, and not on its
inverse; the mapping, thus, is not exact and a coupling among the error
directions is experienced. This has as a consequence that this control law
is not suitable for the restoring force compensation. It is worth noticing,
moreover, that, diﬀerently from the industrial manipulator case, inversion of
the Jacobian is not computational demanding since, being Je a simple (6×6)
matrix (see eq. (2.19)), its inverse J−1
e
can be symbolically computed; from
a computational aspect, thus, there is no diﬀerence in using JT
e or J−1
e . By
visual inspection of JT
e and J−1
e
it can be observed that the diﬀerence is in
the rotational part Jk,o, being the transpose of a rotation matrix equal to
its inverse. In particular, using the common deﬁnition that roll pitch an yaw
means the use of elementary rotation around x, y and z in ﬁxed frame [254],
the corresponding matrix Jk,o is not function of the yaw angle, in case of null
pitch angle it is JT
k,o = J−1
k,o, and it is singular for a pitch angle of ±π/2; close
to that singularity the numerical diﬀerence between JT
k,o and J−1
k,o increases.

3.8 Comparison Among Controllers
59
The ocean current is not taken into account. Using the controller (3.38)–
(3.39) under the eﬀect of the current would lead to an error diﬀerent from
zero at steady state.
Reduced Controller. The aim of the Authors is to propose already a con-
troller that matches the deﬁnition of reduced controller that has been given
here. The absence of compensation for the current, however, makes the con-
troller not appealing for practical implementation. The proposed reduced
controller, modiﬁed to take into account a tracking problem, is given by:
τ v = KP JT
e (RI
B)˜η + KD˜ν + Φv,P ˆθv,P
(3.40)
˙ˆθv,P = K−1
θ ΦT
v,P
#
˜ν + ΛJT
e (RI
B)˜η
'
(3.41)
where Λ, KP and KD are positive deﬁnite matrices, selected at least as
block-diagonal matrices to keep diﬀerent dynamics for the position and the
orientation.
It is worth noticing that the reduced controller derived is diﬀerent from
the original controller, that would not reach a null steady state error under the
eﬀect of the current. Also, the regressor Φv,P embeds the gravity regressor as
proposed by Sun and Cheah but the drawback in the restoring compensation
still exist due to the not proper update law of the parameters.
3.8 Comparison Among Controllers
For easy of readings, Table 3.1 reports the label associated with each control-
ler. The controllers developed by the researchers are quite diﬀerent one each
other, in this Section a qualitative comparison with respect to the compen-
sation performed by the controllers with respect to the persistent dynamic
eﬀects is provided.
3.8.1 Compensation of the Restoring Generalized Forces
The controller A is totally conceived in the earth-ﬁxed frame and it is model-
based. In case of perfect knowledge of the restoring-related dynamic parame-
ters, thus, there is not need to compensate for the restoring generalized forces.
This is, however, unpractical in a real situation; in case of partial compen-
sation of the vector g.
RB, in fact, this controller experiences the drawback
discussed in Section 3.2. A similar drawback is shared from the controller B
that, again, is totally based on earth-ﬁxed variables, the integral actions,
thus, does not compensate optimally for the restoring action. The control-
ler F compensates the restoring force in the vehicle-ﬁxed frame; the update
law, however, is not based on the exact mapping between orientation and
moments resulting in a not clean adaptive action. The eﬀect, however, is as
signiﬁcant as the vehicle works with a large pitch angle. The remaining 3 con-
trollers properly adapt the restoring-related parameters in the vehicle-ﬁxed
frame.

60
3. Dynamic Control of 6-DOF AUVs
3.8.2 Compensation of the Ocean Current
The presence of an ocean current is seldom taken into account in the litera-
ture. The eﬀect of the current, however, can be really signiﬁcant ([127, 323]).
In this discussion a main assumption is made: roughly speaking the current
is considered as constant in the earth-ﬁxed frame and its eﬀect on the vehicle
is modeled as a force, proportional to the current magnitude, that pushes
the vehicle. The considerations below, thus, are based on this assumption. It
is worth noticing that in the simulation the dynamic eﬀect of the current is
correctly taken into account by computing the relative velocity in the vehicle
model. The accuracy of this assumption, thus, seems to be veriﬁed.
Controller C and F does not consider at all the current, as a result the
developed controller does not reach a null steady state error. Controller D
compensates the current with a term designed on the purpose; this term
adapts on vehicle-ﬁxed parameters, as discussed in Section 3.5 this action
experiences a drawback. The remaining controllers correctly compensate for
the current adapting/integrating on a set of earth-ﬁxed based parameters.
Table 3.2 summarizes the discussed properties of the 6 controllers with
respect to the persistent dynamic terms. It is worth noticing that only the
controller E correctly compensates for both actions.
Table 3.2. Summary of the behavior of the controllers with respect to compensa-
tion of the hydrodynamic persistent terms
control law
current eﬀect
restoring forces
null error with current
A
ﬁt
unﬁt
yes
B
ﬁt
unﬁt
yes
C
unﬁt
ﬁt
no
D
unﬁt
ﬁt
yes
E
ﬁt
ﬁt
yes
F
unﬁt
unﬁt
no
3.9 Numerical Comparison Among the Reduced
Controllers
A performance comparison among the controllers discussed has been develo-
ped by numerical simulations. The simulations have been run on the 6-DOF
mathematical model of ODIN, an AUV built at the Autonomous Systems
Laboratory of the University of Hawaii (see the Appendix for a description
and the model used in the simulation).

3.9 Numerical Comparison Among the Reduced Controllers
61
An aspect to be considered for proper reading of this study is that the
control problem at hand is highly nonlinear, coupled and the controller to be
compared are intrinsically diﬀerent one from the other. Any eﬀort to chose
the gains so as to ensure similar performance to the controllers has been
made; nevertheless, this is impossible in a strict sense. For this reason, the
presented results have to be interpreted mainly looking at the error behavior
rather then focusing on direct numeric comparison. On the other hand, it was
chosen to not emphasize vehicle-related eﬀects that would not be present in
general applications. In particular, ODIN has a small metacentric height,
yielding low restoring moments; simulations of the controllers to vehicles of
larger metacentric height would make even more evident the drawbacks in
the compensation of the restoring forces.
Test trajectory In order to demonstrate the eﬀects discussed in this paper,
the simplest task to be considered is one involving successive changes of the
vehicle orientation in presence of ocean current. The simulation length can
be divided in diﬀerent period of 60 s duration. The vehicle is ﬁrstly put in
the water at the position
ηd(t = 0) = [ 0
0
1
0
0
0 ]T
[m/deg]
without knowledge of the current but with an estimation of the restoring
parameters. The ﬁrst 60 s are used to adapt the eﬀect of the current. In the
successive period the vehicle is required to move in roll and pitch from 0 deg to
10 deg and −15 deg, respectively and come back to the original conﬁguration.
In the successive two periods the vehicle is required to move of 90 deg in yaw
and come back to the initial position. Finally, 60 s of steady state are given.
Figure 3.3 plots the desired trajectory.
Initial conditions Table 3.3 reports the initial condition for the adap-
tive/integral parameters of the controllers, it can be observed that the same
values have been used in the estimation of the restoring forces. This is also
true for the controller A, where the gravity estimation ˆg.
RB, even if not ad-
aptive, is obtained resorting to
ˆθv,R = [ −9
0
0
50 ]T .
From the model in the Appendix it can be noticed that the true value of the
restoring parameters is
θv,R = [ −8.0438
0
0
61.3125 ]T .
The vehicle initial position is also
η = [ 0
0
1
0
0
0 ]T
[m,deg] ,
meaning that the vehicle is supposed to start its motion under the water, at
1 m depth, moreover, there is no initial estimation of the ocean current.

62
3. Dynamic Control of 6-DOF AUVs
0
100
200
300
400
−20
0
20
40
60
80
100
time [s]
desired orientation [deg]
φ
θ
ψ
Fig. 3.3. Desired trajectory; the desired position is constant
Table 3.3. Initial conditions for all the controllers in their reduced version and
number of parameter to adapt/integrate
law
number of par.
ˆθ(t = 0)
A
7
[ 0
0
0
0
0
0
1 ]T (initial value of the integral)
B
–
not simulated
C
10
[ −9
0
50
0
0
0
0
0
0
0 ]T
D
10
[ −9
0
50
0
0
0
0
0
0
0 ]T
E
9
[ 0
50
0
0
0
9
0
0
0 ]T
F
9
[ 0
50
0
0
0
9
0
0
0 ]T
Ocean current The simulations have been run considering the following
constant current
νI
c = [ 0
0.3
0
0
0
0 ]T
m/s ,
Gains selection All the simulated controllers are non-linear. Moreover, sig-
niﬁcant diﬀerences arise among them, this is, in fact, the object of this di-
scussion. For these reasons it is very diﬃcult to perform a fair numerical
comparison and the selection of the gains is very delicate. The gains have
been tuned so as to give to the controller similar control eﬀort in terms of
force/moment magnitude and eventual presence of chattering. In few cases,
since the controller feeds back the same variable, it has been possible to chose
the same control gain, it is the case, e.g., of the controllers C and E. In other
cases, such as, e.g., the controller F, the use of the transpose of the Jacobian

3.9 Numerical Comparison Among the Reduced Controllers
63
implicitly change the eﬀective gain acting on the error, the equivalence of the
gains, thus, is only apparent.
A separate discussion needs to be done for the controller B. Its speciﬁc
structure makes it really hard to tune the parameters following these sim-
ple considerations. As recognized in [323], moreover, the parameter tuning of
their controller has not been simple and handy for being used in the expe-
riments with the vehicle ODIN III. For this reason, while the controller has
been object of the theoretical discussion, the simulation will not be reported.
The following gains have been used for the controller A:
KP = blockdiag{8.8I3, 20I4} ,
KD = blockdiag{110I3, 40I4} ,
KI = blockdiag{0.2I3, 1I4} .
The following gains have been used for the controller C:
KD = blockdiag{110I3, 40I3} ,
Λ = blockdiag{0.08I3, 0.9I3} ,
K−1
θ
= 2I9 .
The following gains have been used for the controller D:
KD = blockdiag{110I3, 40I3} ,
Λ = blockdiag{0.08I3, 0.9I3} ,
K−1
θ
= 2I4 ,
W −1 = 2I6 .
The following gains have been used for the controller E:
KD = blockdiag{110I3, 40I3} ,
Λ = blockdiag{0.08I3, 0.9I3} ,
K−1
θP = 2I9 .
The following gains have been used for the controller F:
KD = blockdiag{8.8I3, 36I3} ,
KV = blockdiag{110I3, 40I3} ,
Λ = blockdiag{0.08I3, 0.9I3} ,
K−1
θP = 2I9 .
3.9.1 Results
The code to reproduce the simulation and to plot or compare all the outputs
is given in http://webuser.unicas.it/antonelli/auv.zip together with
a readme.txt ﬁle of explanation.
In Figure 3.4 the position and orientation for controller A are given; it can
be noticed that in the ﬁrst 60 seconds the control needs to adapt with respect

64
3. Dynamic Control of 6-DOF AUVs
to the current and a movement along y is observed, also, it can be observed
that, during the horizontal rotation (t ∈[240, 360] s), the controller correctly
compensates for the current and a very small coupling is experienced. The
drawback in the restoring compensation of this controller is not signiﬁcant in
this numerical case study. Figures 3.5 reports the required control force and
moment.
0
50
100
150
200
250
300
350
400
−0.2
0
0.2
0.4
0.6
0.8
1
0
50
100
150
200
250
300
350
400
−20
0
20
40
60
80
100
time [s]
position [m]
x
y
z
orientation [deg]
φ
θ
ψ
Fig. 3.4. Simulated position and orientation for the reduced controller A

3.9 Numerical Comparison Among the Reduced Controllers
65
0
50
100
150
200
250
300
350
400
−40
−30
−20
−10
0
10
20
0
50
100
150
200
250
300
350
400
−20
−10
0
10
20
time [s]
force [N]
moment [Nm]
X
Y
Z
K
M
N
Fig. 3.5. Simulated force and moment for the reduced controller A

66
3. Dynamic Control of 6-DOF AUVs
Figure 3.6 and 3.7 report the position, orientation and control eﬀort for
controller C. It can be observed a strong coupling during the commanded
yaw rotation caused by the controller itself. This can be further appreciated
in Figure 3.8 where the projection of the vehicle position on the xy plane
during the rotation compared with controller A is given.
0
50
100
150
200
250
300
350
400
−0.2
0
0.2
0.4
0.6
0.8
1
0
50
100
150
200
250
300
350
400
−20
0
20
40
60
80
100
time [s]
position [m]
x
y
z
orientation [deg]
φ
θ
ψ
Fig. 3.6. Simulated position and orientation for the reduced controller C

3.9 Numerical Comparison Among the Reduced Controllers
67
0
50
100
150
200
250
300
350
400
−40
−30
−20
−10
0
10
20
0
50
100
150
200
250
300
350
400
−20
−10
0
10
20
time [s]
force [N]
moment [Nm]
X
Y
Z
K
M
N
Fig. 3.7. Simulated force and moment for the reduced controller C
−0.5
0
0.5
−0.5
0
0.5
x [m]
y [m]
A
C
Fig. 3.8. Comparison of the position on the plane xy for the reduced controller A
and C

68
3. Dynamic Control of 6-DOF AUVs
Figure 3.9 and 3.10 report the position, orientation and control eﬀort for
controller D. Even in this case, a strong coupling during the commanded yaw
rotation caused by the controller itself can be observed.
0
50
100
150
200
250
300
350
400
−0.2
0
0.2
0.4
0.6
0.8
1
0
50
100
150
200
250
300
350
400
−20
0
20
40
60
80
100
time [s]
position [m]
x
y
z
orientation [deg]
φ
θ
ψ
Fig. 3.9. Simulated position and orientation for the reduced controller D

3.9 Numerical Comparison Among the Reduced Controllers
69
0
50
100
150
200
250
300
350
400
−40
−30
−20
−10
0
10
20
0
50
100
150
200
250
300
350
400
−20
−10
0
10
20
time [s]
force [N]
moment [Nm]
X
Y
Z
K
M
N
Fig. 3.10. Simulated force and moment for the reduced controller D

70
3. Dynamic Control of 6-DOF AUVs
Figure 3.11 and 3.12 report the position, orientation and control eﬀort for
controller E.
0
50
100
150
200
250
300
350
400
−0.2
0
0.2
0.4
0.6
0.8
1
0
50
100
150
200
250
300
350
400
−20
0
20
40
60
80
100
time [s]
position [m]
x
y
z
orientation [deg]
φ
θ
ψ
Fig. 3.11. Simulated position and orientation for the reduced controller E

3.9 Numerical Comparison Among the Reduced Controllers
71
0
50
100
150
200
250
300
350
400
−40
−30
−20
−10
0
10
20
0
50
100
150
200
250
300
350
400
−20
−10
0
10
20
time [s]
force [N]
moment [Nm]
X
Y
Z
K
M
N
Fig. 3.12. Simulated force and moment for the reduced controller E

72
3. Dynamic Control of 6-DOF AUVs
Figure 3.13 and 3.14 report the position, orientation and control eﬀort for
controller F.
0
50
100
150
200
250
300
350
400
−0.2
0
0.2
0.4
0.6
0.8
1
0
50
100
150
200
250
300
350
400
−20
0
20
40
60
80
100
time [s]
position [m]
x
y
z
orientation [deg]
φ
θ
ψ
Fig. 3.13. Simulated position and orientation for the reduced controller F

3.9 Numerical Comparison Among the Reduced Controllers
73
0
50
100
150
200
250
300
350
400
−40
−30
−20
−10
0
10
20
0
50
100
150
200
250
300
350
400
−20
−10
0
10
20
time [s]
force [N]
moment [Nm]
X
Y
Z
K
M
N
Fig. 3.14. Simulated force and moment for the reduced controller F

74
3. Dynamic Control of 6-DOF AUVs
A further plot can be used (Figure 3.15) to understand the problem arising
when compensating incorrectly the current, the controller C is compared with
controller E in a normalized polar representation of the sole compensation
of the ocean current during the yaw rotation. It can be noticed that, with
the controller E (and similar) the compensation of the current rotates with
the vehicle so that it still compensate with respect to a constant, earth-ﬁxed
disturbance.
νI
c
law E
νI
c
law C
Fig. 3.15. Earth-ﬁxed-frame polar representation of samples of the current com-
pensation: controller E (left) and controller C (right). Notice that the compensation
term built by the law C rotates together with the vehicle-ﬁxed frame
The given simulation does not exhibit a signiﬁcant error in the orientation
that should be caused by the wrong restoring compensation of the control-
lers A and F. The numerical study has been conducted with a model largely
used in the literature and tested in experimental cases; moreover, reasona-
ble parameters’ estimation has been considered; in particular only the third
component of the vector WrG −BrB is diﬀerent from zero; ﬁnally small ro-
tations in pitch and yaw have been commanded. Under these considerations
both the controllers behave very well; the control eﬀort, moreover, was simi-
lar to that of other controllers. It has been considered fair, thus, to report the
good numerical result of these controllers despite their theoretical drawback
and to avoid speciﬁc case studies where those might fail such as, e.g., with
large enough φ and θ for the controller F and a diﬀerent vector WrG −BrB.
It might be noticed that this singularity is a representation singularity and
that might arise even with the vehicle in the hovering position due to an
unsatisfactory choice of the body-ﬁxed frame or the roll-pitch-yaw conven-
tion; however, due to the common marine convention, this possibility is so
uncommon that is not a real drawback.

3.9 Numerical Comparison Among the Reduced Controllers
75
However, to better illustrate this diﬀerent behavior, a second simulation
study was developed in which the vehicle is commanded to change the sole
roll angle according to the time law in Figure 3.16 while keeping constant the
vehicle position and the other vehicle angles at zero; for the sake of clarity,
it is assumed that no ocean current is acting on the vehicle. The behavior
of the reduced version of control law E is compared to that of the reduced
version of the control law A in terms of the measured roll angles (Figure 3.17,
left column). Remarkably, in the simple condition considered, the restoring
moment to be compensated for is mainly acting around the xb axis. In the
simulation, it is possible to compute the restoring moment around this axis
and compare it with the adaptive compensation of the control law E and the
integral compensation plus the model-based compensation of the controller A
respectively; those plots are reported in the right column of Figure 3.17. It can
be observed that during the phase in which the roll angle changes from +10◦
to −10◦the compensation built by the control law A has a lag with respect
to the acting restoring moment; this is due to the integral charge/discharge
time required to build a time-varying compensation term. The control law E,
instead, performs proper compensation of the restoring moment since it ac-
counts for the vehicle orientation in the adaptation mechanism.
0
50
100
150
−20
−10
0
10
20
time [s]
desired orientation [deg]
roll
Fig. 3.16. Comparison of the control law A and the control law E in the second
case study: Time history of the desired orientation

76
3. Dynamic Control of 6-DOF AUVs
0
50
100
150
−20
−10
0
10
20
0
50
100
150
−20
−10
0
10
20
0
50
100
150
−10
−5
0
5
10
0
50
100
150
−10
−5
0
5
10
time [s]
time [s]
time [s]
time [s]
[deg]
[deg]
[Nm]
[Nm]
Fig. 3.17. Comparison of the control law A and the control law E in the second case
study. Left column: Time history of measured roll angles (solid line) and the desired
(dashed line); top, control law A, bottom, control law E. Right column: Time
history of the restoring moment around xb (dashed), the corresponding integral
action of the control law A (top, solid line) and the corresponding adaptive action
of the control law E (bottom, solid line)

3.9 Numerical Comparison Among the Reduced Controllers
77
3.9.2 Conclusions and Extension to UVMSs
In this Chapter six controllers have been compared with respect to their
behavior in presence of modeling uncertainty and presence of ocean current.
It is shown that, with a not proper compensation, the integral/adaptive action
acts as a disturbance during the transients.
Numerical simulations better illustrate the theoretical results. However,
an aspect to be considered for proper analysis of the simulations is that,
despite any eﬀort to chose the gains so as to ensure similar performance to
the controllers has been made, this is impossible in a strict sense. Therefore,
the presented results have to be read mainly by looking at the error behavior
rather then focusing on strict numeric comparison. Notice, however, that the
control eﬀort is very similar for all the controllers, meaning that diﬀerent
behaviors are not given by a diﬀerent magnitude of the inputs.
The extension of these considerations to dynamic control of UVMSs is
straightforward using the virtual decomposition approach as detailed in Subs-
ection 7.9.3.

4. Fault Detection/Tolerance Strategies for
AUVs and ROVs
4.1 Introduction
Autonomous Underwater Vehicles (AUVs) and Remotely Operated Vehicles
(ROVs) received increasing attention in the last years due to their signiﬁcant
impact in several underwater operations. Examples are the monitoring and
maintenance of oﬀ-shore structures or pipelines, or the exploration of the sea
bottom; see, e.g., reference [321] for a complete overview of existing AUVs
with description of their possible applications and the main subsystems. The
beneﬁt in the use of unmanned vehicles is in terms of safety, due to the
possibility to avoid the risk of manned missions, and economic. Generally,
AUVs are required to operate over long periods of time in unstructured en-
vironments in which an undetected failure usually implies loss of the vehicle.
It is clear that, even in case of failure detection, in order to terminate the
mission, or simply to recover the vehicle, a fault tolerant strategy, in a wide
sense, must be implemented. In fact, simple system failure can cause mission
abort [154] while the adoption of a fault tolerant strategy allows to safely
terminate the task as in the case of the arctic mission of Theseus [118]. In
case of the use of ROVs, a skilled human operator is in charge of command
the vehicle; a failure detection strategy is then of help in the human deci-
sion making process. Based on the information detected, the operator can
decide in the vehicle rescue or to terminate the mission by, e.g., turning oﬀ
a thruster.
Fault detection is the process of monitoring a system in order to reco-
gnize the presence of a failure; fault isolation or diagnosis is the capability to
determine which speciﬁc subsystem is subject to failure. Often in literature
there is a certain overlapping in the use of these terms. Fault tolerance is the
capability to complete the mission also in case of failure of one or more sub-
systems, it is referred also as fault control, fault accommodation or control
reconﬁguration. In the following the terms fault detection/tolerance will be
used.
The characteristics of a fault detection scheme are the capability of isolate
the detected failure; the sensitivity, in terms of magnitude of the failure that
can be detected and the robustness in the sense of the capability of working
properly also in non-nominal conditions. The requirements of a fault tolerant
scheme are the reliability, the maintainability and survivability [240]. The
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 79–91, 2006.
© Springer-Verlag Berlin Heidelberg 2006

80
4. Fault Detection/Tolerance Strategies for AUVs and ROVs
common concept is that, to overcome the loss of capability due to a failure, a
kind of redundancy is required in the system. A general scheme is presented
in Figure 4.1.
In this chapter, a survey over existing fault detection and fault tolerant
schemes for underwater vehicles is presented. For these speciﬁc systems, ad-
opting proper strategies, an hardware/software (HW/SW) sensor failure or
an HW/SW thruster failure can be successfully handled in diﬀerent operating
conditions as it will be shown in next Sections. In some conditions, it is requi-
red that the fault detection scheme is also able to diagnostic some external
not-nominal working conditions such as a multi-path phenomena aﬀecting
the echo-sounder system [61]. It is worth noticing that, for autonomous sy-
stems such as AUVs, space systems or aircraft, a fault tolerant strategy is
necessary to safely recover the damaged vehicle and, obviously, there is no
panic button in the sense that the choice of turning oﬀthe power or activate
some kind of brakes is not available.
Most of the fault detection schemes are model-based [1, 3, 4, 5, 52, 61, 140,
143, 238, 306, 307] and concern the dynamic relationship between actuators
and vehicle behavior or the speciﬁc input-output thruster dynamics. A model-
free method is presented in [43, 173]. Higher level fault detection schemes are
presented in [117, 118, 146, 324]. References [42, 177, 212, 222, 279, 308]
deal with hardware/software aspects of a fault detection implementation
for AUVs. Neural Network and Learning techniques have also been presen-
ted [102, 113, 142, 144, 284].
Concerning fault tolerant schemes, most of them consider a thruster re-
dundant vehicle that, after a fault occurred in one of the thrusters, still is
actuated in 6 degrees of freedom (DOFs). Based on this assumption a real-
location of the desired forces on the vehicle over the working thrusters is
performed [3, 4, 5, 52, 61, 232, 233, 234, 236, 251, 306, 307]. Of interest
is also the study of reconﬁguration strategies if the vehicle becomes under-
actuated [228].
Only few papers concern the experimental results of fault detection and
fault tolerant schemes [3, 4, 5, 42, 52, 61, 117, 118, 212, 232, 233, 251, 306,
307]; for all the above references it is worth noticing that the successfully
results has been achieved with the implementation of simple algorithms.
In Section 4.2 a small list of failures occurred during wet operations is
reported; Section 4.3 and 4.4 report the description of fault detection and
tolerant strategies for underwater vehicles. Since the implementation of such
strategies in a real environment is not trivial Section 4.5 describes in more
detail some successfully experiments. Finally, the conclusions are drawn in
Section 4.6.
4.2 Experienced Failures
In this section, a small list of possible ROVs/AUVs’ failures is reported.

4.2 Experienced Failures
81
+
FTC
UUV
−
FD
high level
Fig. 4.1. General fault detection/tolerant control scheme for an Unmanned Un-
derwater Vehicle (UUV). The Fault Detection (FD) block is in charge of detecting
the failure, send a message to the higher level supervisor and, eventually, modifying
the Fault Tolerant Controller (FTC)
sensor failure The underwater vehicles are currently equipped with several
sensors in order to provide information about their localization and velocity.
The problem is not easy, it does not exist a single, reliable sensor that gives
the required position/velocity measurement or information about the envi-
ronment, e.g., about the presence of obstacles. For this reason the use of
sensor fusion by, e.g., a Kalman ﬁltering approach, is a common technique to
provide to the controller the required variables. This structural redundancy
can be used to provide fault detection capabilities to the system. In detail, a
failure can occur in one of the following sensors:
• IMU (Inertial Measurement Unit): it provides information about the ve-
hicle’s linear acceleration and angular velocity;
• Depth Sensor: by measuring the water pressure gives the vehicle’s depth;
• Altitude and frontal sonars: they are used to detect the presence of
obstacles and the distance from the sea bottom;
• Ground Speed Sonar: it measures the linear velocity of the vehicle with
respect to the ground;
• Currentmeter: it measures the relative velocity between vehicle and water;
• GPS (Global Positioning System): it is used to reset the drift error of the
IMU and localize exactly the vehicle; it works only at the surface;
• Compass: it gives the vehicle yaw;
• Baseline Acoustic: with the help of one or more transmitters it allows exact
localization of the vehicle in a speciﬁc range of underwater environment;
• Vision system: it can be used to track structures such as pipelines.
For each of the above sensors the failure can consist in an output zeroing if,
e.g., there is an electrical trouble or in a loss of meaning. It can be considered
as sensor failure also an external disturbance such as a multi-path reading
of the sonar that can be interpreted as a sensor fault and correspondingly
detected.

82
4. Fault Detection/Tolerance Strategies for AUVs and ROVs
thruster blocking It occurs when a solid body is between the propeller
blades. It can be checked by monitoring the current required by the thruster.
It has been observed, e.g., during the Antarctic mission of Romeo [61]: in
that occurrence it was caused by a block of ice.
ﬂooded thruster A thruster ﬂooded with water has been observed during
a Romeo’s mission [61]. The consequence has been an electrical dispersion
causing an increasing blade rotation velocity and thus a thruster force higher
then the desired one.
ﬁn stuck or lost This failure can causes a loss of steering capability as
discussed by means of simple numerical simulations in [143].
rotor failure A possible consequence of diﬀerent failures of the thrusters
is the zeroing of the blade rotation. The thruster in question, thus, simply
stops working. This has been intentionally experienced during experiments
with ODIN [232, 233, 306, 307], RAUVER [140] and Roby 2 [4] and during
another Romeo’s mission [61].
hardware-software failure A crash in the hardware or software implemen-
ted on the vehicle can be experienced. In this case, redundancy techniques
can be implemented to handle such situations [42].
4.3 Fault Detection Schemes
In [3, 4] a model-based fault detection scheme is presented to isolate actuators’
failures in the horizontal motion. Each thruster is modeled as in [127]. The
algorithm is based on a bank of Extended Kalman Filters (EKFs) the outputs
of which are checked in order to detect behaviors not coherent with the
dynamic model. In case of two horizontal thrusters and horizontal motion
3 EKFs are designed to simulate the 3 behaviors: nominal behavior, left
thruster fault, right thruster fault. The cross-checking of the output allows
eﬃcient detection as it has been extensively validated experimentally (details
are given in Section 4.5). A sketch of this scheme is given in Figure 4.3 where u
is the vector of thruster inputs and the vehicle yaw ψ is measured by means
of a compass. In [5], the same approach is investigated with the use of a
sliding-mode observer instead of the EKF. The eﬀectiveness of this approach
is also discussed by means of experiments.
The work in [52, 61] focuses on the thruster failure detection by monitoring
the motor current and the propeller’s revolution rate. The non-linear nominal
characteristic has been experimentally identiﬁed, thus, if the measured couple
current-propeller’s rate is out of a speciﬁc bound, then a fault is experienced.
Based on a mapping of the i-o axis the possible cause is also speciﬁed with
a message to the remote human operator. The two failures corresponding to
a thruster ﬂooding or to a rotor failure, in fact, fall in diﬀerent axis regions
and can be isolated. Interesting experiments are given in Section 4.5.

4.3 Fault Detection Schemes
83
Fig. 4.2. Romeo (courtesy of M. Caccia, National Research Council-ISSIA, Italy)
The fault in a thruster is also monitored in [306, 307] by the use of a hall-
eﬀect sensor mounted on all the thrusters. The input is the desired voltage
as computed by the controller and the TCM, the output is the voltage as
measured by the hall-eﬀect sensor; the mismatching between the measured
and the predicted voltage is considered as a fault. The paper also considers
fault tolerance for sensor and actuator faults and experiments, as shown in
following sections.
The vehicle Theseus [117, 118] is equipped with a Fault Manager sub-
system. This provides some kind of high-level failure detection in the sense
that the mission is divided in a number of phases (each phase is a series
of manoeuvres between way points); in case of failure of a phase there is a
corresponding behavior to be activated. See Section 4.5 for detail about a
practical intervention of the Fault Manager. A hierarchical control system
developed for future implementation on Theseus is described in [324], this is
based on the layered control concepts [58].
References [42, 212] present an architecture for AUVs that integrates fault
detection capabilities of the subsystems. The hardware and software archi-
tecture, named AUVC (Autonomous Underwater Vehicle Controller) imple-

84
4. Fault Detection/Tolerance Strategies for AUVs and ROVs
u
ψ
EKF
nominal
model
residual
evaluation
EKF
left th. fault
model
residual
evaluation
EKF
right th. fault
model
residual
evaluation
FD
Fig. 4.3. Fault detection strategy for one of the horizontal thruster failure proposed
by A. Alessandri, M. Caccia and G. Verrugio
ments a fault detection strategy based on ﬁve rule-based systems that mo-
nitor all the subsystems. The ﬁve systems concern the Navigation, the Po-
wer/Propulsion, the Direction Control and the Communication; they are co-
ordinated by a Global Diagnoser that avoid contradictory actions. A speciﬁc
attention has been given at the hardware reliability: as a matter of fact the
AUVC is distributed on a redundant network of 18 loosely coupled processors.
AUVC has been also used to test the approach proposed in [222], a redun-
dancy management technique based on CLIPS expert system shell to identify
faults aﬀecting depth and heading control. In [308] an architecture developed
for the vehicle ARICS with fault detection/tolerant capabilities is presented.
A software developed for ROVs to help the remote operator that integrates
some elementary fault detection algorithms is presented in [279]. The paper
in [177] describes the ﬁrst results on the development of a long endurance
AUV that is currently ongoing at the MBARI (Monterey Bay Aquarium Re-
search Institute, California, USA). The fault detection approach is mainly
ported from the MIT (Massachusetts Institute of technology, Massachusetts,
USA) vehicle Odyssey (I and II) [46] and it is based on the Layered Control
Architecture. The software architecture is based on C++, QNX-based modu-
les, which oﬀers multi-tasking capabilities suited for fault-tolerant operations.
A single thread suppression and restart can be implemented to recover from
software failure. Short-duration operations in open sea and long-duration
operations in the lab proved the eﬀectiveness of this approach.
In [143] a model-based observer is used to generate residual between the
sensor measured behavior and the predicted one. The model also takes into
account the presence of waves in case of operations near the surface. When
the residual is larger than a given threshold a Fuzzy Inference System is in
charge of isolate the source of this mismatching (see sketch in Figure 4.4). A

4.3 Fault Detection Schemes
85
planar simulation is provided in case of low speed under wave action and a
stuck ﬁn.
+
FTC
UUV
−
FD
FIS
high level
Fig. 4.4. Fuzzy fault detection/tolerant control scheme proposed by A.J. Healey:
the FIS (Fuzzy Inference System) block is in charge of isolating faults observed by
the FD (Fault Detection) block between ﬁn stroke, servo error, residual and wave
activity detectors
A model-free fault detection method is proposed in [43, 173]: this is based
on the Hotelling T 2 statistic and it is a data-driven approach. The validation
is based on a 6-DOFs simulation aﬀected by stern plane jams and rudder
jams.
A model-based, integrated heterogeneous knowledge approach is proposed
in [140]. A multi-dimensional correlation analysis allows to increase the con-
ﬁdence in the detected fault and to detect also indirectly sensed subsystems.
Some preliminary results with the vehicle RAUVER are also given.
In [1] a model-based fault detection scheme for thrusters and sensors is
proposed. It has been designed based on the identiﬁed model of the 6-thruster
ROV Linotip and it is composed of a bank of single-output Luenberger ob-
servers. Its eﬀectiveness is veriﬁed by simulations. Another model-based fault
detection scheme veriﬁed by simulations is provided in [238]. A robust ap-
proach in [199].
A neuro-symbolic hybrid system is used in [102] to perform fault diagnosis
on AUVs with learning capability. The method is simulated on the planar
motion of the VORTEX mathematical model. Another learning technique is
proposed in [113] and veriﬁed by means of 6-DOFs simulations. In [284], a
neural network mathematical model is used to set-up a self-diagnosis scheme
of the AUV. A software for health monitoring of AUVs’ missions with learning
capabilities is also described in [151].
The work in [39] studies a systematic, quantitative approach in order to
maximize the mission and return success probabilities. The failed sensor is

86
4. Fault Detection/Tolerance Strategies for AUVs and ROVs
de-activated and the information obtained by a backup sensor able to recover
the vehicle. No dynamic simulations are provided.
In [100], the wavelet theory is used to detect the fault in the vehicle’s
navigation angle fault.
Finally, [258] developed a software tool to test intelligent controllers for
AUVs. This is done by using learning techniques from the artiﬁcial intelli-
gence theory.
4.4 Fault Tolerant Schemes
Most of the fault tolerant controllers developed for thruster-driven underwa-
ter vehicles are based on a suitable inversion of the TCM in eq. (2.48). It is
self-evident that, if the matrix is low rectangular it is still possible to turn
oﬀthe broken thruster and to control the vehicle in all the 6 DOFs. When
the vehicle becomes underactuated, or when it is driven by control surfaces,
the problem is mathematically more complex. In this case only few solutions
to speciﬁc set-up have been developed.
The work in [52, 61] reports a fault tolerant approach for ROMEO, a thru-
ster redundant ROV with 8 thrusters. The strategy, experimentally veriﬁed,
simply consists in deleting the column corresponding to the broken thruster
from the TCM. The mapping from the vehicle force/moment to the thru-
sters’ forces thus, does not concern the failed component. A similar approach
is used in [306, 307] by exploiting the thruster redundancy of ODIN, an AUV
developed at the Autonomous Systems Laboratory (ASL) of the University
of Hawaii, HI, USA. The proposed approach is sketched in Figure 4.5 where
the subscript d denotes the desired trajectory, V m is the motor input voltage
and Ωthe propeller angular velocity of the thrusters.
ηd
˙ηd
¨ηd
Vehicle
Controller &
Fault Tolerant
Strategy
ud
Thruster
Controller
V m Thruster
Dynamics
u
TCM
τ
Vehicle
Dynamics
η
ν
η, ˙η
Direct
Kinematics
Ω
Fig. 4.5. Fault tolerance strategy proposed by K.S. Yang, J. Yuh and S.K. Choi
In [232, 233, 234, 236, 251], a task-space-based, fault tolerant control
for vehicles with redundant actuation is proposed. The control law is model

4.4 Fault Tolerant Schemes
87
based and it handles the thruster redundancy by a pseudo-inverse approach of
the TCM that guarantees the minimization of the actuator quadratic norm.
The thruster dynamics, with the model described in [147], is also taken into
account.
The work [306, 307] presents a fault detection-tolerant scheme for sensor
faults. In detail, the depth of the vehicle is measured by using a pressure
sensor and a bottom sonar sensor. A third, virtual, sensor is added: this is
basically an ARX (AutoRegressive eXogeneous) model of the vehicle depth
dynamics. By comparing the measured values with the predicted ones, the
residual is calculated and the failed sensor eventually disconnected for the re-
maining portion of the mission. A sketch of the scheme is shown in Figure 4.6,
in nominal working conditions, the 3 residual Ri are close to the null value.
It is worth noticing that this approach requires exact knowledge of the ocean
depth.
bottom
knowledge
vertical
sonar
+
−
R1
pressure
sensor
−
+
R3
u
analytical
model
−
+
R2
FD
Fig. 4.6. Fault tolerance strategy for sensor fault proposed by K.C. Yang, Y. Yuh
and S.K. Choi
In [228], the case of an underactuated AUV controlled by control surfaces
is considered. The vehicle tries to move in the unactuated DOFs by using
elementary motions in the actuated DOFs. The method has been tested on
the vehicle ARCS and showed that, in this form, it is not applicable. This
study provides information on structural changes to be adopted in the vehicle
in order to develop a vehicle suitable for implementing this method.
One of the ﬁrst works of reconﬁguration control for AUVs is given in [283],
where, however, only a superﬁcial description of a possible fault tolerant
strategy is provided. Recently, [288] proposed a reconﬁguration strategy to
accommodate actuator faults: this is based on a mixed H2/H∞problem.
Simulation results are provided.

88
4. Fault Detection/Tolerance Strategies for AUVs and ROVs
4.5 Experiments
Roby 2 is a ROV developed at the National Research Council-ISSIA, Italy.
It has been object of several wet tests aiming at validating fault detection
approaches. The horizontal motion is obtained by the use of two fore thru-
sters that control the surge velocity as well as the vehicle heading; the depth
is regulated by means of two vertical thrusters. In [3, 4, 5] experiments of
diﬀerent fault detection schemes have been carried out by causing, on pur-
pose, an actuator failure: one of the thrusters has been simply turned oﬀ. The
experiments in [3, 4] have been carried out in a pool, in [5] the experiments
also concern a comparison between EKFs and sliding-mode observers. The
latter is a result of a bilateral project with the Naval Postgraduate School,
Monterey, CA.
The Italian National Research Council (CNR-ISSIA) also developed the
ROV ROMEO and tested, in an antarctic mission, both fault detection and
tolerant schemes [52, 61]. In particular the case of ﬂooded and blocked thru-
sters occurred. In both cases the fault has been detected and the information
could be reported to the human operator in order to activate the reconﬁgura-
tion procedure. Figure 4.7 shows the expected and measured motor currents
in case of ﬂooded thruster: it can be observed a persistent mismatching bet-
ween the output of the model and the measured values.
The vehicle Theseus manufactured by ISE Research Ltd with the Cana-
dian Department of National Defence successfully handled a failure during
an Arctic mission of cable laying [117, 118]. In details, the vehicle did not
terminate a homing step, probably due to poor acoustic conditions and the
Fault Manager activated a safe behavior: stop under the ice and wait for fur-
ther instructions. This allowed to re-establish acoustic telemetry and surface
tracking and safely recover the vehicle. Notice that his fault wasn’t intentio-
nally caused [118].
The vehicle ODIN, an AUV developed at the Autonomous Systems Labo-
ratory (ASL) of the University of Hawaii, HI, USA, has been used for several
experiments. In [306, 307] the fault detection and tolerant schemes are expe-
rimentally validated. The thruster fault has been tested by zeroing the output
voltage by means of software, the fault detection scheme identiﬁed the trouble
and correctly reconﬁgured the force allocation by properly modifying of the
TCM. The fault tolerant scheme with respect to depth sensor fault has also
been tested by zeroing the sensor reading and verifying that the algorithm,
after a programmed time of 1 s, correctly switched on the other sensor. While
the theory has been developed for a 6-DOFs vehicle, the experiments results
only present the vehicle depth.
The same vehicle has been used to validate the fault tolerant approach
developed in [232, 233, 251] in 6-DOFs experiments. Diﬀerent experiments
have been carried out by zeroing the voltage on one or two thrusters simul-
taneously that, however, did not cause the vehicle becoming under-actuated.
The implemented control law is based on an identiﬁed reduced ODIN model

4.5 Experiments
89
Fig. 4.7. Expected and measured motor currents for the vehicle Romeo in case of
ﬂooded thruster (courtesy of M. Caccia, National Research Council-ISSIA)
and does not make use of thruster model neither it needs the vehicle accele-
ration as required by the theory; the block diagram, thus, is simply given by
Figure 4.8. Details on the control law are given in the referenced papers, the
basic formulation of the controller is given by:
uv = E† [ (¨ηd −β) + Kv ˙˜η + Kp˜η ]
(4.1)
where Kv and Kv are control gains, the vector ˜η is the position/orientation
error, β represents the compensation of the nonlinear terms of the equation
of motions. The matrix E takes into account the TCM matrix, the inertia
matrix and the Jacobian matrix that converts body-ﬁxed to inertial-ﬁxed
velocities. Generalization about control of a desired task is given in [233].
The experiments validated the proposed approach; in Figure 4.9 the voltages
are shown: it can be recognized that thrusters 2 and 6 (one horizontal and
one vertical) are turned oﬀat t = 260 s and t = 300 s, respectively, this
causes an augmentation of the chattering of the remaining thrusters that,
however, still can perform the desired task (Figure 4.10).

90
4. Fault Detection/Tolerance Strategies for AUVs and ROVs
ηd
˙ηd
¨ηd
Vehicle
Controller &
Fault Tolerant
Strategy
ud
TCM
τ
Vehicle
Dynamics
η
ν
η, ˙η
Direct
Kinematics
Fig. 4.8. Sketch of the fault tolerance strategy implemented by N. Sarkar,
T.K. Podder and G. Antonelli
0
100
200
300
400
−2
0
2
voltage 1
Vertical Thrusters
0
100
200
300
400
−2
0
2
voltage 2
300
0
100
200
300
400
−2
0
2
voltage 3
0
100
200
300
400
−2
0
2
voltage 4
time [sec]
0
100
200
300
400
−2
0
2
voltage 5
Horizontal Thrusters
0
100
200
300
400
−2
0
2
voltage 6
260
0
100
200
300
400
−2
0
2
voltage 7
0
100
200
300
400
−2
0
2
voltage 8
time [sec]
Fig. 4.9. Voltage proﬁle - vertical thrusters (on the left) and horizontal thrusters
(on the right) for the N. Sarkar and T.K. Podder algorithm
The AUVC described in [42, 212] has been tested on a six-processor ver-
sion on the Large Diameter Unmanned Underwater Vehicle of the Naval
Undersea Warfare Center.

4.6 Conclusions
91
0
100
200
300
400
0
2
4
z position [m]
Task−Space Position
260300
0
100
200
300
400
2
4
y position [m]
0
100
200
300
400
2
4
x position [m]
0
100
200
300
400
0
50
100
roll, pitch, yaw [deg]
time [sec]
yaw
roll, pitch
0
100
200
300
400
−2
0
2
z error [m]
Position Error
260300
0
100
200
300
400
−2
0
2
y error [m]
0
100
200
300
400
−2
0
2
x error [m]
0
100
200
300
400
−10
0
10
roll, pitch, yaw error [deg]
time [sec]
Fig. 4.10. Task-space trajectories (left column) and their errors (right column) for
the N. Sarkar and T.K. Podder algorithm
4.6 Conclusions
An overview over existing fault detection and fault tolerant schemes for un-
derwater vehicles has been presented. The case of failures for autonomous
missions in un-structured environment is, obviously, a dramatic occurrence
to handle. In this sense, the underwater community would beneﬁt from rese-
arch studies with a strong practical orientation rather than theoretical-only
approaches. Failures in a redundant sensor seem to be a solved problem; ho-
wever, a particular attention needs to be paid to the tuning of the detection
gains, real-data experiments for oﬀ-line tuning seems to be a reliable way to
select those gains. As far as thrusters are of concern, experiments have shown
that current AUVs can be controlled at low velocity with 6 thrusters, also if
the original symmetric allocation is lost, without a strong performance dete-
rioration. Some possible research areas concern the case of a thruster-driven
AUV that becomes under-actuated and the case of vehicles controlled by me-
ans of control surfaces that failed; in both cases some practical approaches
might be useful for the underwater community.

5. Experiments of Dynamic Control of a
6-DOF AUV
5.1 Introduction
In this Chapter some experimental results on dynamic control of a 6-DOF
AUV are given; practical aspects of the implementation are also discussed.
The experiments have been conducted in the pool of the University of Hawaii
using ODIN, an AUV developed at the Autonomous Systems Laboratory
(ASL) [81].
Implemented control law. The control law is brieﬂy rewritten:
uv = B†
v[KDs	
v + Φv(Q, ν, ˙νa)ˆθv]
(5.1)
˙ˆθv = K−1
θ ΦT
v (Q, ν, ˙νa)sv
(5.2)
where B†
v is the pseudoinverse of matrix Bv (see the Appendix), Kθ > O
and Φv is the vehicle regressor. The vectors s	
v ∈IR6 and sv ∈IR6 are deﬁned
as follows
s	
v =
 ˜ν1
˜ν2

+
%
Λ + K−1
D KP
) 
RB
I ˜η1
˜ε

= ˜ν +
%
Λ + K−1
D KP
) ˜y,
(5.3)
sv = ˜ν + Λ˜y ,
(5.4)
with ˜η1 = [ xd −x
yd −y
zd −z ]T, ˜ν1 = ν1,d −ν1, where the subscript d
denotes desired values for the relevant variables. The matrix Λ ∈IR6×6 is
deﬁned as Λ = blockdiag{λpI3, λoI3}, Λ > O. The matrix KP ∈IR6×6 is
deﬁned as KP = blockdiag{kpI3, koI3}, KP > O. Finally, it is
νa = νd + Λ˜y
and KD > O.
5.2 Experimental Set-Up
ODIN is an autonomous underwater vehicle developed at the Autonomous
Systems Laboratory of the University of Hawaii. A picture of the vehicle is
shown in Figure 5.1. It has a near-spherical shape with horizontal diameter
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 93–104, 2006.
© Springer-Verlag Berlin Heidelberg 2006

94
5. Experiments Dynamic Control of a 6-DOF AUV
of 0.63 m and vertical diameter of 0.61 m, made of anodizied Aluminum (AL
6061-T6). Its dry weight is about 125 kg. It is, thus, slightly positive buoyant.
The processor is a Motorola 68040/33 MHz working with VxWorks 5.2 ope-
rating system. The power supply is furnished by 24 Lead Gel batteries, 20
for the thrusters and 4 for the CPU, which provide about 2 hours of au-
tonomous operations. The actuating system is made of 8 marine propellers
built at ASL; they are actuated by brushless motors. Each motor weighs ab-
out 1 kg and can provide a maximum thrust force of about 27 N. The sensory
system is composed of: a pressure sensor for depth measuring, with an accu-
racy of 3 cm; 8 sonars for position reconstruction and navigation, each with
a range 0.1 ÷ 14.4 m; an Inertial System for attitude and velocity measures.
Fig. 5.1. ODIN, the AUV used to experimentally test adaptive and fault tolerant
control strategies
5.3 Experiments of Dynamic Control
Despite the closed environment in which the experiments have been conduc-
ted, the pool of the University of Hawaii, it is necessary to take into account

5.3 Experiments of Dynamic Control
95
the presence of a current as an irrotational, constant disturbance [127]. The
modeling aspects of including the current in the dynamic model have been
discussed in Section2.4.3. Since the measure of the current is not available
in ODIN, it has been taken into account as a disturbance τ v,C acting at the
force/moment level on the vehicle-ﬁxed frame. Moreover, since the number of
dynamic parameters could be very large (nθ,v > 100, see [127]) it was imple-
mented a reduced version of the regressor matrix in order to adapt only with
respect to the restoring force/moments and to the current. In other words,
the control law implemented was the reduced controller of the one discussed
in Section 3.2.
The experiment was conceived in the following way: the vehicle had to
follow a desired trajectory with trapezoidal proﬁle. Since the sonars need
to be under the surface of the water to work properly the ﬁrst movement
planned was in the z direction (see Figure 5.2 for the relevant frames). The
vehicle planned to move 2 m in the y direction and 2 m in the x direction.
diving pool
O
y
x
23 m
23 m
ODIN
xb
yb
arm
magnetic
north
Fig. 5.2. Sketch of the pool used for experiments with relevant frames
The control law has been designed using quaternions, however the speci-
ﬁcations of the desired trajectory and the output results are given in Euler
angles because of their immediate comprehension. Notice that the transfor-
mation from Euler angles to quaternions is free from representation singula-
rities. The attitude must be kept constant at the value of
ηd,2 = [ 0
0
90 ]T
deg .
Since the vehicle is not perfectly balanced, at rest, i.e., with the thrusters oﬀ,
its position is φ ≈5◦and θ ≈15◦with the yaw depending on the current.
The desired orientation, thus, is a set-point for the control task.

96
5. Experiments Dynamic Control of a 6-DOF AUV
The following control gains have been used:
Λ = diag{0.5, 0.5, 0.15, 0.8, 0.8, 0.8} ,
KD = diag{12, 12, 5, 2, 2, 8} ,
kp = 1 ,
ko = 1 ,
Kθ = blockdiag{0.01, 0.3I3}
In Figure 5.3 the time history of the position of the vehicle in the inertial
frame and the attitude of the vehicle and the orientation error in terms of
the Euler angles is shown. Notice that, due to technical characteristics of the
horizontal sonars [215], the x and y position data for the ﬁrst 100 s are not
available. The vehicle is not controlled in those directions and subjected to the
pool’s current. At t = 100 s, it recovers the desired position and starts tracking
the trajectory. In the ﬁrst seconds the vehicle does not track the desired
depth. This is based on the assumption that all the dynamic parameters
are unknown; at the beginning, thus, the action of the adaptation has to be
waited. From this plots it is also possible to appreciate the diﬀerent noise
characteristics of the two position sensors: the sonar for the horizontal plane
and the pressure sensor for the depth. It can be noticed that the desired
attitude is kept for the overall length of the experiment and that a small
coupling can be seen when, at t = 100 s the vehicle recovers the desired
position in the horizontal plane.

5.3 Experiments of Dynamic Control
97
0
100
200
300
400
0
1
2
3
4
5
0
100
200
300
400
0
1
2
3
4
5
time [s]
time [s]
[m]
[m]
x
y
z
0
100
200
300
400
−20
0
20
40
60
80
100
120
0
10
20
30
40
−40
−20
0
20
40
tim
tim
d
d
φ
θ
ψ
Fig. 5.3. Experiments of adaptive control on ODIN. Left: time history of the vehicle
positions. Top: x and y positions. Bottom: z position. Right: Top: time history of
the vehicle attitude in terms of Euler angles. Bottom: vehicle attitude errors in
terms of Euler angles (particular)

98
5. Experiments Dynamic Control of a 6-DOF AUV
In Figure 5.4 the control actions are shown. The peak in τx is due to the
big error seen by the controller at t = 100 s.
0
100
200
300
400
−10
−8
−6
−4
−2
0
2
0
100
200
300
400
−3
−2
−1
0
1
2
3
time [s]
time [s]
[Nm]
[N]
X
Y
Z
Fig. 5.4. Experiments of adaptive control on ODIN. Top: control forces. Bottom:
control moments

5.3 Experiments of Dynamic Control
99
In Figure 5.5 the path in the horizontal plane is shown. It can be noted
that the second segment is followed with a smaller error than the ﬁrst one,
due to the adaptation action.
1
2
3
4
5
6
1
2
3
4
5
6
x
x
x
x
[m]
[m]
t = 100
t = 120
t = 240
t = 400
Fig. 5.5. Experiments of adaptive control on ODIN. Path on the xy plane

100
5. Experiments Dynamic Control of a 6-DOF AUV
In Figure 5.6 the 2-norm of the position error (x, y and z components) is
shown. It can be noted that the mean error at steady state, in the last 40 s,
is about 7 cm. These data need to be be related to the low accuracy and to
the big noise that aﬀect the sonar’s data.
0
100
200
300
400
0
0.5
1
1.5
time [s]
[m]
Fig. 5.6. Experiments of adaptive control on ODIN. 2-norm of the 3D position
errors in the inertial frame

5.4 Experiments of Fault Tolerance to Thrusters’ Fault
101
5.4 Experiments of Fault Tolerance to Thrusters’ Fault
The desired trajectory is the same shown in the previous Section. The ex-
periments were run several times simulating diﬀerent thruster’s fault. The
fault was simulated via software just imposing zero voltage to the relevant
thrusters. It is worth noticing that, while the desired trajectory is always
the same, some minor diﬀerences arise among the diﬀerent experiments due
to diﬀerent factors: the presence of strong noise on the sonar that aﬀected
the xy movement (see [215] for details), the presence of a pool current. Mean-
while the controller guarantees a good tracking performance tolerant to the
occurrence of thruster’s fault and it is robust with respect to the described
disturbances.
In next plots the movement of the vehicle without fault and with 2 faults
are reported. The two faults arise as follow: at t = 260 s, one horizontal
thruster is oﬀ, at t = 300 s also the corresponding vertical thruster is oﬀ. We
chose to test a fault of the same side thrusters because this appears to be the
worst situation. Notice that the control law is diﬀerent from the control law
tested in the previous Section. For details, see [232, 233, 234, 251].
In Figure 5.7 the behavior of the vehicle along xy without and with fault
is reported. It can be noted that, as for the previous experiments, the vehicle
is controlled only after 100 s in order for the sonar to work properly and wait
for the transient of the position ﬁlter [216]. From the right plot in Figure 5.7
we can see that the ﬁrst fault, at t = 260 s, it does not aﬀect the tracking
error while for the second, at t = 300 s, it causes only a small perturbation
that is fully recovered by the controller after a transient. Some comments are
required for the sonar based error: during the experiment with fault it has
been possible to see a small perturbation in the xy plane but, according to
the data, this movement has been of 60 cm in 0.2 s, this is by far a wrong
data caused by the sonar ﬁlter.
In Figure 5.8 the behavior of the vehicle along z without and with fault
is reported. It can be noted that the vehicle tracks the trajectory with the
same error with and without thrusters’ faults. Since the control law was
designed in 6 DOFs, the diﬀerence in the behavior between the horizontal
plane, where a small perturbation has been observed, and the vertical plane
is caused mainly by the diﬀerent characteristics of the sensors rather than by
the controller itself. In other words, we can expect this nice behavior also in
the horizontal plane if a more eﬀective sensorial system would be available.
Another comment need to be done about the depth data. In Figure 5.3
the plot of the depth for a diﬀerent control law is shown. It could appear that
the tracking performance is better in the last experiment shown in Figure 5.8.
However it has to be underlined that the experiments are expensive in terms
of time and of people involved, the latter are simply successive to the ﬁrst,
the gains, thus, are better tuned.
In Figure 5.9 the attitude without and with fault is reported. It can be no-
ted that, in case of fault, only after when the two faults arise simultaneously

102
5. Experiments Dynamic Control of a 6-DOF AUV
0
100
200
300
400
0
1
2
3
4
5
time [s]
[m]
x
y
0
100
200
300
400
0
1
2
3
4
5
A
B
tim
m
x
y
Fig. 5.7. Experiments of fault tolerant control on ODIN. Left: vehicle movement
along xy without thrusters’ faults. Right: vehicle movement along xy with thru-
sters’ faults. A, ﬁrst fault at t = 260 s at one horizontal thruster. B, second fault
at t = 300 s at one vertical thruster
0
100
200
300
400
0
1
2
3
4
5
time [s]
[m]
z
0
100
200
300
400
0
1
2
3
4
5
A
B
tim
m
z
Fig. 5.8. Experiments of fault tolerant control on ODIN. Left: vehicle movement
along z without thrusters’ faults. Right: vehicle movement along z with thru-
sters’ faults. A, ﬁrst fault at t = 260 s at one horizontal thruster. B, second fault
at t = 300 s at one vertical thruster
there is a signiﬁcant transient in the yaw angle that is quick recovered. Com-
ments similar to that done for the linear error in the horizontal plane could
be done.
In Figure 5.10 the voltages of the vertical and horizontal thrusters are re-
ported. We can see that when the thrusters are oﬀ, the desired force/moment
on the vehicle are redistributed on the working thrusters. From these plots we
can also appreciate the diﬀerent noise on the control caused by the diﬀerent
sensors; due to the null roll and pitch angles, in fact, the vertical thrusters
work mainly to track the vertical direction using the depth sensor while the
horizontal are mainly use to move the vehicle on the plane.

5.4 Experiments of Fault Tolerance to Thrusters’ Fault
103
0
100
200
300
400
−20
0
20
40
60
80
100
120
time [s]
[deg]
ψ
φ, θ
0
100
200
300
400
−20
0
20
40
60
80
100
120
A
B
tim
d
ψ
φ, θ
Fig. 5.9. Experiments of fault tolerant control on ODIN. Left: roll, pitch and yaw
without thrusters’ faults. Right: roll, pitch and yaw with thrusters’ faults. A, ﬁrst
fault at t = 260 s at one horizontal thruster. B, second fault at t = 300 s at one
vertical thruster
0
100
200
300
400
−2
0
2
0
100
200
300
400
−2
0
2
0
100
200
300
400
−2
0
2
0
100
200
300
400
−2
0
2
time [s]
[V]
[V]
[V]
[V]
0
100
200
300
400
−2
0
2
0
100
200
300
400
−2
0
2
0
100
200
300
400
−2
0
2
0
100
200
300
400
−2
0
2
time [s]
[V]
[V]
[V]
[V]
Fig. 5.10. Experiments of fault tolerant control on ODIN. Left: voltages at vertical
thrusters. Right: voltages at horizontal thrusters

104
5. Experiments Dynamic Control of a 6-DOF AUV
In Figure 5.11 the 2-norm of the linear error is reported. It can be noted
that the ﬁrst fault does not aﬀect the error while for the second there is a
small transient that is recovered.
0
100
200
300
400
0
0.5
1
1.5
time [s]
[m]
Fig. 5.11. Experiments of fault tolerant control on ODIN. 2-Norm of the posi-
tion errors. A, ﬁrst fault at t = 260 s at one horizontal thruster. B, second fault
at t = 300 s at one vertical thruster

6. Kinematic Control of UVMSs
“. . . mais de toutes les sciences la plus absurde, `a mon avis et celle qui est la
plus capable d’´etouﬀer toute esp`ece de g´enie, c’est la g´eom´etrie. Cette science
ridicule a pour objet des surfaces, des lignes et des points qui n’existent pas
dans la nature. On fait passer en esprit cent mille lignes courbes entre un cer-
cle et une ligne droite qui le touche, quoique, dans la r´ealit´e, on n’y puisse pas
passer un f´etu. La g´eom´etrie, en v´erit´e, n’est qu’une mauvaise plaisanterie.”
Voltaire, “Jeannot et Colin” 1764.
6.1 Introduction
A robotic system is kinematically redundant when it possesses more degrees
of freedom than those required to execute a given task. A generic manipu-
lation task is usually given in terms of position/orientation trajectories for
the end eﬀector. In this sense, an Underwater Vehicle-Manipulator System
is always kinematically redundant due to the DOFs provided by the vehicle
itself. However, it is not always eﬃcient to use vehicle thrusters to move the
manipulator end eﬀector because of the diﬃculty of controlling the vehicle
in hovering. Moreover, due to the diﬀerent inertia between vehicle and mani-
pulator, movement of the latter is energetically more eﬃcient. On the other
hand, reconﬁguration of the whole system is required when the manipulator
is working at the boundaries of its workspace or close to a kinematic singula-
rity; motion of the sole manipulator, thus, is not always possible or eﬃcient.
Also, oﬀ-line trajectory planning is not always possible in unstructured envi-
ronments as in case of underwater autonomous missions.
When a manipulation task has to be performed with an UVMS, the system
is usually kept in a conﬁned space (e.g., underwater structure maintenance).
The vehicle is then used to ensure station keeping. However, motion of the
vehicle can be required for speciﬁc purposes, e.g., inspection of a pipeline,
reconﬁguration of the system, real-time motion coordination while performing
end-eﬀector trajectory tracking.
According to the above, a redundancy resolution technique might be use-
ful to achieve system coordination in such a way as to guarantee end-eﬀector
tracking accuracy and, at the same time, additional control objectives, e.g.,
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 105–140, 2006.
© Springer-Verlag Berlin Heidelberg 2006

106
6. Kinematic Control of UVMSs
energy savings or increase of system manipulability. To this purpose the task
priority redundancy resolution technique [195, 210] is well suited in that it al-
lows the speciﬁcation of a primary task which is fulﬁlled with higher priority
with respect to a secondary task.
Control of end-eﬀector position/orientation can be obtained also with
dynamic control by suitably expressing the mathematical model [255, 256,
285]. This approach, successfully implemented for industrial robots, seems
not to be suitable for UVMSs for two main reasons: ﬁrst, in underwater
environment the dynamic parameters are usually poorly known; second, the
redundancy of the system is not exploited. Some, approaches, moreover, are
speciﬁcally designed for a 6-DOFs manipulator only.
By limiting our attention to UVMSs, few papers have addressed the pro-
blem of inverse kinematics resolution. Reference [237] proposes a local motion
planner solved in parallel by a distributed search; this provides an itera-
tive algorithm for an approximate solution. In [20], a task priority approach
has been proposed aimed at fulﬁlling secondary tasks such as reduction of
fuel consumption, improvement of system manipulability, and obstacle avoi-
dance. This approach has been further integrated with a fuzzy approach
in [24, 25, 26, 29] and it will be deeply analyzed in this Chapter. In [249, 250],
a second-order inverse kinematics approach is developed to reduce the total
hydrodynamic drag forces of the system. Simulations results are performed
on a 6-link vehicle carrying a 3-link manipulator. The same authors also deve-
loped a dynamic-based algorithm in [235] that generates the joint trajectories
by taking into account the natural frequencies of the two subsystems: vehicle
and manipulator; the task-space trajectory is represented by Fourier series
and suitably projected on the subsystems. Reference [252] reports an adaptive
dynamic controller that uses, as reference trajectory, the output of a ﬁrst-
order inverse kinematics algorithm aimed at satisfying joint limits. In [163],
the Authors develop two cost functions devoted at increase the manipula-
bility and respect the joint limits to be used in a task priority approach.
In [160, 161], a genetic algorithm-based motion planner is proposed; dividing
the workspace in cells, the presence of obstacles and the minimization of the
drag forces are taken into consideration. Finally, in [73] a distributed kine-
matic control was developed for coordination of a multi-manipulator system
mounted under a free-ﬂying base such as, e.g., an underwater vehicle; the
case of a possible under-actuated vehicle is explicitly taken into account.
6.2 Kinematic Control
A manipulation task is usually given in terms of position and orientation
trajectory of the end eﬀector. The objective of kinematic control is to ﬁnd
suitable vehicle/joint trajectories η(t), q(t) that correspond to a desired
end-eﬀector trajectory ηee,d(t). The output of the inverse kinematics algo-
rithm ηr(t), qr(t) provides the reference values to the control law of the

6.2 Kinematic Control
107
UVMS. This control law will be in charge of computing the driving forces
aimed at tracking the reference trajectory for the system while counteracting
dynamic eﬀects, external disturbances, and modeling errors.
Equation (2.64)
ηee = k(η, q)
(2.64)
is invertible only for speciﬁc kinematic structures with ﬁxed base. Moreo-
ver, the complexity of the relation and the number of solutions, i.e., diﬀerent
joint conﬁgurations that correspond to the same end-eﬀector posture, increa-
ses with the degrees of freedom. As an example, a simple two-link planar
manipulator with ﬁxed base admits two diﬀerent solutions for a given end-
eﬀector position, while up to 16 solutions can be found in the case of 6-DOFs
structures. At diﬀerential level, however, the relation between joints and end-
eﬀector velocities is much more tractable and a theory of kinematic control
has been established aimed at solving inverse kinematics of generic kinematic
structures.
Equation (2.68)
˙xE =

˙ηee1
RI
nνee2

= J(RI
B, q)ζ
(2.68)
maps the (6 + n)-dimensional vehicle/joint velocities into the m-dimensional
end-eﬀector task velocities. If the UVMS has more degrees of freedom than
those required to execute a given task, i.e., if (6 + n) > m, the system is
redundant with respect to the speciﬁc task and the equations (2.64)–(2.68)
admit inﬁnite solutions. Kinematic redundancy can be exploited to achieve
additional task, beside the given end-eﬀector task. In the following, the typical
case (6 + n) ≥m will be considered.
The conﬁgurations at which J is rank deﬁcient, i.e., rank(J) < m, are
termed kinematic singularities. Kinematic singularities are of great interest
for several reasons; at a singularity, in fact,
• The mobility of the structure is reduced. If the manipulator is not redun-
dant, this implies that it is not possible to give an arbitrary motion to the
end eﬀector;
• Inﬁnite solutions to the inverse kinematics problem might exist;
• Close to a kinematic singularity at small task velocities can correspond
large joint velocities.
Notice that, in case of UVMS, the Jacobian has always full rank due to the
mobility of the vehicle, i.e., a rigid body with 6-DOFs. However, as it will
be shown in next Sections, movement of the vehicle has to be avoided when
unnecessary.
Pseudoinverse
The simplest way to invert the mapping (2.68) is to use the pseudoinverse of
the Jacobian matrix [301]

108
6. Kinematic Control of UVMSs
ζr = J†(η, q) ˙xE,d ,
(6.1)
where ˙xE,d is the end-eﬀector task deﬁned in (2.68) and
J†(η, q) = JT(η, q)
#
J(η, q)JT(η, q)
'−1
.
This solution corresponds to the minimization of the vehicle/joint veloci-
ties in a least-square sense [254], i.e., of the function:
E = 1
2ζTζ .
Notice that subscript r in ζr stands for reference value, meaning that those
velocities are the desired values for the low-level motion control of the mani-
pulator (see also Figure 6.1, where a closed-loop inverse kinematics, detailed
in next Subsections, is sketched). It is possible to minimize a weighted norm
of the vehicle/joint velocities
E = 1
2ζTW ζ
leading to the weighted pseudoinverse:
J†
W = W −1JT #
JW −1JT'−1
.
(6.2)
With this approach, however, the problem of handling kinematic singularities
is not addressed and their avoidance cannot be guaranteed.
xE,d
eE
KE
+
IK
ζr "
J −1(·)
ηr, qr
+
Motion
Control
UVMS
η, q
˙xE,d
+
k(·)
−



Kinematic Loop



Dynamic Loop
Fig. 6.1. Kinematic and dynamic loops. The block labeled eE is deﬁned by equa-
tion (6.8)
Augmented Jacobian
Another approach to redundancy resolution is the augmented Jacobian [107].
In this case, a constraint task is added to the end-eﬀector task as to obtain
a square Jacobian matrix which can be inverted.
The main drawback of this technique is that new singularities might arise
in conﬁgurations in which the end-eﬀector Jacobian J is still full rank. Those

6.2 Kinematic Control
109
singularities, named algorithmic singularities, occur when the additional task
does cause conﬂict with the end-eﬀector task.
A similar approach, with the same drawback, is the extended Jacobian
approach.
Task Priority Redundancy Resolution
By solving (2.68) in terms of a minimization problem of the quadratic cost
function ζTζ the general solution [191] is given:
ζr = J†(η, q) ˙xE,d +
#
IN −J†(η, q)J(η, q)
'
ζa ,
(6.3)
where N = 6+n and ζa ∈IR6+n is an arbitrary vehicle/joint velocity vector.
It can be recognized that the operator
#
IN −J†(η, q)J(η, q)
'
projects
a generic joint velocity vector in the null space of the Jacobian matrix. This
corresponds to generating an internal motion of the manipulator arm that
does not aﬀect the end-eﬀector motion.
Solution (6.3) can be seen in terms of projection of a secondary task,
described by ζa, in the null space of the higher priority primary task, i.e., the
end-eﬀector task. A ﬁrst possibility is to choose the vector ζa as the gradient
of a scalar objective function H(q) in order to achieve a local minimum [191]:
ζa = −kH∇H(q) ,
(6.4)
where kH is a scalar gain factor. Another possibility is to chose a primary
task xp,d ∈IRm and a correspondent Jacobian matrix Jp(q) ∈IRm×(6+n)
˙xp,d = Jp(q)ζ .
and to design a secondary task xs,d ∈IRr and a correspondent Jacobian
matrix Js(q) ∈IRr×(6+n):
˙xs,d = Js(q)ζ .
for which the vector of joint velocity is then given by [195, 210]:
ζr = J†
p ˙xp,d +
#
Js
#
IN −J†
pJp
''† #
˙xs,d −JsJ†
p ˙xp,d
'
.
(6.5)
However, for this solution too, the problem of the algorithmic singularities
still remains unsolved. In this case, it is possible to experience an algorithmic
singularity when Js and Jp are full rank but the matrix Js
#
IN −J†
pJp
'
looses rank. Extension of the approach to several tasks for highly redundant
systems can be achieved by generalization of (6.5), as described in [263].

110
6. Kinematic Control of UVMSs
Singularity-Robust Task Priority Redundancy Resolution
A robust solution to the occurrence of the algorithmic singularities is based
on the following mapping [78]:
ζr = J†
p(η, q) ˙xp,d +
#
IN −J†
p(η, q)Jp(η, q)
'
J†
s(η, q) ˙xs,d .
(6.6)
This algorithm has a clear geometrical interpretation: the two tasks are
separately inverted by the use of the pseudoinverse of the corresponding Ja-
cobian; the vehicle/joint velocities associated with the secondary task are
further projected in the null space of the primary task Jp. Similarly to [263],
extension to several tasks for highly redundant systems can be easily achieved
by recursive application of (6.6).
Damped Least-Squares Inverse Kinematics Algorithms
The problem of inverting ill-conditioned matrices that might occur with all
the above algorithms can be avoided by resorting to the damped least-square
inverse given by [209]:
J#(η, q) = JT(η, q)
#
J(η, q)JT(η, q) + λ2Im
'−1
,
where λ ∈IR is a damping factor.
In this case, the introduction of a damping factor allows solving the pro-
blem from the numerical point of view but, on the other hand, it introduces
a reconstruction error in all the velocity components. Better solutions can be
found with variable damping factors or damped least-squares with numerical
ﬁltering [196, 209].
Closed-Loop Inverse Kinematic Algorithms
The numerical implementation of the above algorithms would lead to a
numerical drift when obtaining vehicle/joint positions by integrating the
vehicle/joint velocities. A closed loop version of the above equations can
then be adopted. By considering as primary task the end-eﬀector posi-
tion/orientation, (6.6), as an example, would become:
ζr = J†(η, q) ( ˙xE,d + KEeE) +
+
#
IN −J†(η, q)J(η, q)
'
J†
s(η, q) ( ˙xs,d + Kses) ,
(6.7)
where eE and es are the numerical reconstruction errors and KE ∈IRm×m
and Ks ∈IRr×r are design matrix gains to be chosen so as to ensure conver-
gence to zero of the corresponding errors.
If the task considered is position control, its reconstruction error is simply
given by the diﬀerence between the desired and the reconstructed values. In

6.2 Kinematic Control
111
case of the orientation, however, care in the deﬁnition of such error is required
to ensure convergence to the desired value. In this work, the quaternion atti-
tude representation is used [246]; the vector eE for the task deﬁned in (2.68)
is then given by [60, 80]:
eE =

ηee1,d −ηee1,r
ηrεd −ηdεr −S(εd)εr

,
(6.8)
where Qd = {ηd, εd} and Qr = {ηr, εr} are the desired and reference attitu-
des expressed by quaternions, respectively, and S(·) is the matrix operator
performing the cross product.
The obtained ζr can then be used to compute the position and orientation
of the vehicle ηr and the manipulator conﬁguration qr:

ηr(t)
qr(t)

=
! t
0
 ˙ηr(σ)
˙qr(σ)

dσ +

η(0)
q(0)

=
! t
0
J−1
k (σ)ζr(σ)dσ +

η(0)
q(0)

.
(6.9)
As customary in kinematic control approaches, the output of the above
inverse kinematics algorithm provides the reference values to the dynamic
control law of the vehicle-manipulator system (see Figure 6.1). This dyna-
mic control law will be in charge of computing the driving forces, i.e., the
vehicle thrusters and the manipulator torques. The kinematic control algo-
rithm is independent from the dynamic control law as long as the latter is
a vehicle/joint space-based control, i.e., it requires as input the reference
vehicle-joint position and velocity. In the literature number of such control
laws have been proposed that are suitable to be used within the proposed
kinematic control approach; a literature survey is presented in the next Chap-
ter. For the seek of simplicity, in the Figure, only the primary task is shown.
Remarkably, all those inverse kinematics approaches are suitable for real-
time implementation. Of course, depending on the speciﬁc algorithm, a dif-
ferent computational load is required [78].
Transpose of the Jacobian
A simple algorithm, conceptually similar to the closed loop approach, is given
by the use of the transpose of the Jacobian. In this case, the joint velocities
are given by [254]:
ζr = JTKEeE ,
where a direct relationship between the reference joint velocities and the
end-eﬀector reconstruction error is obtained.

112
6. Kinematic Control of UVMSs
6.3 The Drag Minimization Algorithm
In 1999 N. Sarkar and T.K. Podder ([249, 250]) suggest to use the sy-
stem redundancy in order to minimize the total hydrodynamic drag. Roug-
hly speaking the proposed kinematic control generates a coordinate ve-
hicle/manipulator motion so that the resulting trajectory incrementally re-
duce the total drag encountered by the system.
The second-order version of (6.3) is given by
˙ζr = J†(η, q)
#
˙xE,d −˙J(η, q)ζ
'
+
#
IN −J†(η, q)J(η, q)
'
˙ζa , (6.10)
where, again, the vector ˙ζa is arbitrary and can be used to optimize some
performance criteria that can be chosen, similarly to eq. (6.4), as
˙ζa = −kH∇H(q) .
(6.11)
The Authors propose the following scalar objective function
H(q) = DT(q, ζ)W D(q, ζ)
(6.12)
where D(q, ζ) is the damping matrix and W ∈IRN×N is a positive deﬁnite
weight matrix. By properly selecting the weight matrix it is possible to shape
the inﬂuence of the drag of the individual components on the total system’s
drag. A possible choice for W is a diagonal matrix [250].
The method is tested in detailed simulations where the drag coeﬃcients
are supposed to be known. As noticed by the Authors, in practical situations,
the drag coeﬃcient need to be identiﬁed and this can not be an easy task; it
must be noted, however, that theoretical drag coeﬃcient are available in the
literature for the most common shapes. As a ﬁrst approximation it is possible
to model the vehicle as an ellipsoid and the manipulator arms as cylinders.
The proposed method, thus, even being approximated, provides information
of wider interest.
It is worth noticing that drag minimization has been the objective of
several approaches, even not based on kinematics control, such as, e.g., [160,
161]; in [164], the Authors propose to utilize a genetic algorithm to be trained
over a periodic motion in order to estimate the trajectory’s parameters that
minimize the directional drag force in the task space.
6.4 The Joint Limits Constraints
N. Sarkar, J. Yuh and T.K. Podder, in 1999 ([252]) take into account the
problem of handling the manipulators’ joints limits.
The Authors propose to suitably modifying the weight matrix W in
Eq. (6.2). In detail, W is chosen as a diagonal matrix the entries of which
are related to a proper function. The approach might also take into account

6.5 Singularity-Robust Task Priority
113
the vehicle position, but, for seek of simplicity, let us consider only the joints
positions by deﬁning
H(q) =
n
-
i=1
1
ci
qi,max −qi,min
(qi,max −qi)(qi −qi,min)
with ci > 0 and the subscript max and min that obviously denotes the two
joint limits. This function ([252]) inherits the concepts developed in [44].
Its partial derivative with respect to the joint positions is given by
∂H(q)
∂qi
= 1
ci
(qi,max −qi,min)(2qi −qi,max −qi,min)
(qi,max −qi)2(qi −qi,min)2
.
The elements of the weight matrix are then deﬁned as
Wi,i = 1 +
0000
∂H(q)
∂qi
0000 ,
in fact, it can be easily observed that the element goes to 1 when the joint
is in the center of its allowed range and goes to inﬁnity when the joint is
approaching its limit.
As a further improvement it is possible to relate the weight also to the
direction of the joint by deﬁning
Wi,i =









1 +
0000
∂H(q)
∂qi
0000
if ∆
0000
∂H(q)
∂qi
0000 > 0
1
if ∆
0000
∂H(q)
∂qi
0000 ≤0
In Section 6.6, the joint limits are part of a number of tasks handled with
a fuzzy approach. In [163], B.H. Jun, P.M. Lee and J. Lee propose a ﬁrst
order task priority approach with the optimization of speciﬁc cost functions
developed for the ROV named KORDI. The joints constraints are taken into
account also.
6.5 Singularity-Robust Task Priority
To achieve an eﬀective coordinated motion of the vehicle and manipulator
while exploiting the redundant degrees of freedom available, G. Antonelli
and S. Chiaverini, in [20], resort to the singularity-robust task priority re-
dundancy resolution technique. The velocity vector ζr is then computed as
shown in (6.7).
In the case of a UVMS, the primary task vector will usually include the
end-eﬀector task vector, while the secondary task vector might include the
vehicle position coordinates. This choice is aimed at achieving station keeping
of the vehicle as long as the end-eﬀector task can be fulﬁlled with the sole
manipulator arm. It is worth noticing that this approach is conceptually

114
6. Kinematic Control of UVMSs
similar to the macro-micro manipulator approach [107]; the main diﬀerence
is that the latter requires dynamic compensation of the whole system while
the former is based on a kinematic control approach. This is advantageous
for underwater applications in which uncertainty on dynamic parameters is
experienced.
Simulations
Let consider a 9-DOF UVMS constituted by the Naval Postgraduate School
AUV Phoenix [145] with a 3-DOF planar manipulator arm. For the sake
of clarity, in this ﬁrst group of simulations, the attention we was restricted
to planar tasks described in the plane of the manipulator, that is mounted
horizontally. Therefore, let us consider six degrees of freedom in the system
which is characterized by the three vehicle coordinates x, y, ψ, and the three
end-eﬀector coordinates xE, yE, ψE all expressed in a earth-ﬁxed frame; the
three vehicle coordinates z,θ,φ are assumed to be constant. A sketch of the
system as seen from the bottom is reported in Figure 6.2, where the earth-
ﬁxed, body-ﬁxed, and end-eﬀector reference frames are also shown.
x
x
x
y
y
y
−4
−4
−2
−2
0
0
2
2
4
4
6
6
8
8
E
E
b
b
[m]
[m]
Fig. 6.2. Sketch of the simulated UVMS seen from the bottom
A station keeping task is considered as ﬁrst case study. During station
keeping, the thrusters must react to the ocean current the strength of which
exhibits a quadratic dependence on the relative velocity [127]. However, if

6.5 Singularity-Robust Task Priority
115
the model of the NPS AUV [145] is considered it can be easily recognized
that, the drag in the xb direction is really smaller with respect to the drag in
the yb. This suggests to attempt keeping the fore aft direction of the vehicle
aligned with the ocean current in order to reduce energy consumption.
To implement the proposed approach, it is proposed to consider as pri-
mary task both the end-eﬀector position+orientation and the vehicle orien-
tation, i.e.,
xp = [ xE
yE
ψE
ψ ]T ,
and as secondary task the vehicle position, i.e.,
xs = [ x
y ]T .
In a ﬁrst simulation the end-eﬀector has to maintain its position and
orientation while the vehicle will change its orientation to minimize the eﬀect
of the ocean current; it is desired to keep the vehicle position constant, if
possible. Let the initial conﬁguration of the vehicle be
x = 0
m ,
y = 0
m ,
ψ = 0
rad ,
and the manipulator joint angles be
q = [ 1.47
−1
0.3 ]T
rad ,
corresponding to the end-eﬀector location
xE = 5.92
m ,
yE = 4.29
m ,
ψE = 0.77
rad .
The desired values of the end-eﬀector variables and vehicle position are coinci-
dent with their initial value. The desired ﬁnal value of the vehicle orientation
is 0.78 rad as given, e.g., by a current sensor; the time history of the desired
value ψd is computed according to a quintic polynomial interpolating law
with null initial and ﬁnal velocities and accelerations and a duration of 10 s.
The algorithm’s gains are
Kp = diag{10, 10, 10, 1} ,
Ks = diag{2, 2} .
The simulation results are reported in Figure 6.3 and 6.4. It can be reco-
gnized that the task is successfully executed, in that the end-eﬀector location
and vehicle position are held while the vehicle body is re-oriented to align
with the ocean current. Remarkably, the obtained vehicle reference trajectory
is smooth.

116
6. Kinematic Control of UVMSs
−10
−5
0
5
10
−10
−8
−6
−4
−2
0
2
4
6
8
10
[m]
[m]
Fig. 6.3. Re-orientation of the vehicle body with ﬁxed end-eﬀector location
0
5
10
15
−0.5
0
0.5
1
1.5
[m] [rad]
0
5
10
15
−0.1
0
0.1
0.2
0.3
0.4
[m/s] [rad/s]
x
y
ψ
r
u
v
time [s]
time [s]
Fig. 6.4. Time history of vehicle position and velocity variables when the vehicle
reconﬁgure itself while keeping a ﬁxed end-eﬀector position/orientation

6.5 Singularity-Robust Task Priority
117
A second simulation, starting from the same initial system conﬁguration,
considers an end-eﬀector trajectory that cannot be tracked by sole manipu-
lator motion. Therefore, the vehicle must be moved to allow the manipulator
end-eﬀector to track its reference trajectory. Also in this simulation, align-
ment of the vehicle fore aft direction with the ocean current is pursued.
The desired end-eﬀector trajectory is a straight-line motion starting from
the same initial location as in the previous simulation and lasting at the ﬁnal
location
xE = 8.00
m ,
yE = 9.00
m ,
ψE = 0.78
rad .
The path is followed according to a quintic polynomial interpolating law with
null initial and ﬁnal velocities and acceleration and a duration of 10 s. The
other task variables and gains are the same as in the previous simulation;
remarkably, the desired values of the vehicle position variables are coincident
with their initial value also in this case.
The simulation results are reported in Figure 6.5 and 6.6. It can be reco-
gnized that the primary task is successfully executed, in that the end-eﬀector
location and vehicle orientation achieve their target. On the other hand, the
vehicle moves from its initial position despite the secondary task demands
for station keeping. Remarkably, the obtained vehicle reference trajectory is
smooth.
To show generality of the proposed approach a second case study has been
developed. A drawback of the previous case study might be that the manipu-
lator arm is almost completely stretched out when the end-eﬀector trajectory
requires large displacements going far from the vehicle body. Nevertheless,
this is related to our choice to keep the position of the vehicle constant and
to align the fore aft direction with the ocean current. To overcome this draw-
back, a diﬀerent choice of the tasks to be fulﬁlled is necessary. In particular,
the task of vehicle re-orientation might be replaced with the task of keeping
the manipulator arm in dexterous conﬁgurations. To this aim, it would be
possible to use a task variable expressing a manipulability measure of the
manipulator arm [312]. In this simple case, it is clear that arm singularities
occur when q2 = 0; therefore, the use of q2 as manipulability task variable
would reduce the computational burden of the algorithm.
To implement the proposed approach in this second case study, both the
end-eﬀector position+orientation and the second manipulator joint variable
are thus considered as primary task, i.e.
xp = [ xE
yE
ψE
q2 ]T ,
and as secondary task the vehicle position, i.e.
xs = [ x
y ]T .

118
6. Kinematic Control of UVMSs
−10
−5
0
5
10
−10
−8
−6
−4
−2
0
2
4
6
8
10
[m]
[m]
Fig. 6.5. Re-orientation of the vehicle body with given end-eﬀector trajectory
0
5
10
15
0
1
2
3
0
5
10
15
−0.2
0
0.2
0.4
x
y
ψ
r
u
v
time [s]
time [s]
[m] [rad]
[m/s] [rad/s]
Fig. 6.6. Time history of vehicle position and velocity variables with given end-
eﬀector trajectory

6.5 Singularity-Robust Task Priority
119
Starting from the same initial system conﬁguration as before, in the simu-
lation the same end-eﬀector trajectory has been assigned while manipulator
joint 2 is driven far from zero; it is desired to keep the vehicle position con-
stant, if possible.
The desired ﬁnal value of q2 is −0.78 rad; the time history of the desired
value q2,d is computed according to a quintic polynomial interpolating law
with null initial and ﬁnal velocities and acceleration and a duration of 10 s.
The algorithm’s gains are
Kp = diag{10, 10, 10, 1} ,
(6.13)
Ks = diag{2, 2} .
(6.14)
The simulation results are reported in Figure 6.7 and 6.8.
−10
−5
0
5
10
−10
−8
−6
−4
−2
0
2
4
6
8
10
[m]
[m]
Fig. 6.7. Tracking of a given end-eﬀector trajectory with manipulator dexterity
It can be recognized that the primary task is successfully executed, in
that the end-eﬀector location and manipulator joint 2 achieve their target.
On the other hand, the vehicle moves despite the secondary task demands
for station keeping. Remarkably, the obtained vehicle reference trajectory is
smooth.
To underline the energetic diﬀerence in the station keeping task considered
in the ﬁrst case study when executed with and without vehicle re-orientation,

120
6. Kinematic Control of UVMSs
0
5
10
15
0
1
2
3
0
5
10
15
−0.2
0
0.2
0.4
0.6
0.8
x
y
ψ
r
u
v
time [s]
time [s]
[m] [rad]
[m/s] [rad/s]
Fig. 6.8. Time history of vehicle position and velocity variables with given end-
eﬀector trajectory and manipulator dexterity
a third case study has been developed. Two simulations have been performed
considering the full-dimensional dynamic model of the NPS AUV under a
sliding mode control law [21] and the following constant and irrotational
current
νI
c = [ 0.1
√
2
0.1
√
2
0
0
0
0 ]T .
In the ﬁrst simulation the vehicle stays still and the generalized control
forces are required to only compensate the current eﬀect, since the NPS AUV
is neutrally buoyant and θ = φ = 0. In the second simulation the vehicle
moves according to the results of the ﬁrst simulation in the ﬁrst case study;
thus, the generalized control forces are used to both move the vehicle and to
compensate the current eﬀect.
Figure 6.9 reports the time histories of the 2-norm of the control forces
and moments acting on the vehicle as obtained in the two simulations.
0
20
40
60
80
100
0
50
100
150
time [s]
[N]
ﬁxed attitude
re-orientation
0
20
40
60
80
100
0
200
400
600
800
1000
time [s]
[Nm]
ﬁxed attitude
re-orientation
Fig. 6.9. Time history of the 2-norm of the vehicle forces (left) and moments
(right)

6.6 Fuzzy Inverse Kinematics
121
It is easy to recognize that during the reconﬁguration the proposed solu-
tion is more energy-consuming than the ﬁxed-attitude solution; nevertheless,
after the re-orientation has been achieved, the energy consumption required
by the proposed technique is negligible. Therefore, the proposed solution be-
comes the more attractive the longer is the duration of the manipulation
task.
For the sake of argument, Table 6.1 reports the time integral of the 2-
norms of force and moment obtained in the two simulations over a 100 s task
duration.
Table 6.1. Time integral of the force and moment 2-norms: a) without re-
orientation; b) with re-orientation
a
b
"
f
2300
800
"
m
9500
5800
6.6 Fuzzy Inverse Kinematics
Because of the diﬀerent inertia characteristics of the vehicle and of the ma-
nipulator, it would be preferable to perform fast motions of small amplitude
by means of the manipulator while leaving to the vehicle the execution of
slow gross motions. This might be achieved by adopting the weighted pseu-
doinverse of Eq. (6.2) with the (6 + n) × (6 + n) matrix W −1
W −1(β) =

(1 −β)I6
O6×n
On×6
βIn

,
(6.15)
where β is a weight factor belonging to the interval [0, 1] such that β = 0
corresponds to sole vehicle motion and β = 1 to sole manipulator motion.
During the task execution, setting a constant value of β would mean to ﬁx
the motion distribution between the vehicle and the manipulator. Neverthe-
less, the use of a ﬁxed weight factor inside the interval [0, 1] has a drawback:
it causes motion of the manipulator also if the desired end-eﬀector posture
is out of reach; on the other hand, it causes motion of the vehicle also if the
manipulator alone could perform the task.
Another problem is the need to handle a large number of variables;
UVMSs, in fact, are complex systems and several variables must be monito-
red during the motion, e.g., the manipulator manipulability, the joint range
limits to avoid mechanical breaks, the vehicle roll and pitch angles for correct
tuning of the proximity sensors, the yaw angle to exploit the vehicle shape
in presence of ocean current, etc. As it can be easily understood, it is quite

122
6. Kinematic Control of UVMSs
diﬃcult to handle all these terms without a kinematic control approach. Ne-
vertheless, the existing techniques do not allow to ﬁnd a ﬂexible and reliable
solution.
To overcome this drawback a fuzzy theory approach has therefore been
considered at two diﬀerent levels. First, it is required to manage the distribu-
tion of motion between the vehicle and the manipulator; second, it is required
to consider multiple secondary tasks that are activated only when the corre-
sponding variable is outside (inside) a desired range. This can be done using
diﬀerent weight factors adjusted on-line according to the Mamdani fuzzy in-
ference system ([103]) shown in Figure 6.10.
Crisp
input
fuzziﬁer
fuzzy rule
fuzzy
inference
engine
defuzziﬁer
Crisp
output
Fig. 6.10. Mamdani fuzzy inference system
In detail, the crisp outputs are the scalar β of (6.15) that distributes the
desired end-eﬀector motion between the vehicle and the manipulator and a
vector of coeﬃcients αi that are used in the task priority equation as follows
ζ = J†
W ( ˙xE,d + KEeE) +
#
I −J†
W JW
' $-
i
αiJ†
s,iws,i
(
,
(6.16)
where ws,i are suitably deﬁned secondary task variables and Js,i are the
corresponding Jacobians. Both β and αi’s are tuned according to the state of
the system and to given behavioral rules. The inputs of the fuzzy inference
system depend on the variables of interest in the speciﬁc mission. As an exam-
ple, the end-eﬀector error, the ocean current measure, the system’s dexterity,
the force sensor readings, can be easily taken into account by setting up a
suitable set of fuzzy rules.
To avoid the exponential growth of the fuzzy rules to be implemented as
the number of tasks is increased, the secondary tasks are suitably organized
in a hierarchy. Also, the rules have to guarantee that only one αi is high at a
time to avoid conﬂict between the secondary tasks. An example of application
of the approach is described in the Simulation Section.

6.6 Fuzzy Inverse Kinematics
123
Simulations
The proposed fuzzy technique has been veriﬁed in full-DOFs case studies.
An UVMS has been considered constituted by a vehicle with the size of
the NPS Phoenix [145] and a manipulator mounted on the bottom of the
vehicle. The kinematics of the manipulator considered is that of the SMART-
3S manufactured by COMAU. Its Denavit-Hartenberg parameters are given
in Table 6.2. The overall system, thus, has 12 DOFs. Figure 6.11 shows the
conﬁguration in which all the joint positions are zero according to the used
convention.
Table 6.2. D-H parameters [m,rad] of the manipulator mounted on the underwater
vehicle
a
d
θ
α
link 1
0.150
0
q1
−π/2
link 2
0.610
0
q2
0
link 3
0.110
0
q3
−π/2
link 4
0
0.610
q4
π/2
link 5
0
−0.113
q5
−π/2
link 6
0
0.103
q6
0
The simulations are aimed at proving the eﬀectiveness of the fuzzy ki-
nematic control approach; for seek of clarity, thus, only the kinematic loop
performance is shown (see Figure 6.1). The real vehicle/joint position will be
aﬀected by a larger error since the tracking error too has to be taken into
account. It is worth noticing that, as long as the law level dynamic controller
is suitably designed, this tracking error is bounded. Moreover, it does not
aﬀects the kinematic loop performance.
The primary task is to track a position/orientation trajectory of the end
eﬀector. The system starts from the initial conﬁguration:
η = [ 0
0
0
0
0
0 ]T
m,deg
q = [ 0
−30
−110
0
−40
90 ]T deg
that corresponds to the end-eﬀector position/orientation
ηee1 = [ 0.99
−0.11
2.99 ]T m
ηee2 = [ 0
0
−90 ]T
deg .
The end eﬀector has to track a segment of −30 cm along z, stop there, and
track a segment of 1 m along x. Both segments have to be executed with a
quintic polynomial time law in 12 s. During the translation, the end eﬀector
orientation has to be kept constant. The initial conﬁguration and the desired

124
6. Kinematic Control of UVMSs
Fig. 6.11. UVMS in the conﬁguration with null joint positions
path are shown in Figure 6.12. The duration of the simulation is 50 s. The
algorithm is implemented at a sampling frequency of 20 Hz. Notice that the
desired path cannot be tracked by the manipulator alone since it goes outside
of its workspace. It is then necessary, somehow, to move the vehicle as well.
Finally, the task is to be executed in real-time; no oﬀ-line knowledge of the
task is available.
Diﬀerent simulations will be shown:
Case Study n. 1. Simple pseudoinversion of (2.68);
Case Study n. 2. Pseudoinversion of (2.68) by the use of a weighted pseu-
doinverse;
Case Study n. 3. Singularity robust task priority algorithm;
Case Study n. 4. Integration of the former algorithm with the proposed fuzzy
technique in presence of several secondary tasks.
For all the simulations a CLIK algorithm is considered, moreover, the
orientation error is represented by the use of quaternions. The desired orien-
tation, however, is still assigned in terms of Euler angles, since the transforma-
tion from Euler angles to quaternions is free from representation singularities.

6.6 Fuzzy Inverse Kinematics
125
A
B
C
Fig. 6.12. Initial conﬁguration of the UVMS for all the case studies. Desired end-
eﬀector position: at the start time (A); after the ﬁrst movement of 12 s (B); at the
ﬁnal time (C)
Case Study n. 1
The ﬁrst simulation has been run by the use of a simple pseudoinversion
of (2.68) with CLIK gain:
KE = blockdiag{1.6I3, I3} .
This solution is not satisfactory in presence of such a large number of
degrees of freedom. The system, in fact, is not taking into account the diﬀerent
nature of the degrees of freedom (vehicle and manipulator) leading to evident
drawbacks: large movement of the vehicle in position and orientation, ﬁnal
conﬁguration not suitable for sensor tuning, possible occurrence of kinematic
singularities or joint mechanical limits. As an example, Figure 6.13 reports
the sketch of the ﬁnal conﬁguration where the bottom sonar would not work
properly since the pitch is ≈18 deg.

126
6. Kinematic Control of UVMSs
A
B
C
Fig. 6.13. Final conﬁguration of the UVMS for the ﬁrst case study. The redun-
dancy is not exploited and the possible occurrence of undesired conﬁgurations is
not avoided
Case Study n. 2
In the second case study a weighted pseudoinverse is added in order to redis-
tribute the motion between vehicle and manipulator including a cost factor
that can be considered, e.g., proportional to the ratio of their inertias. The
following matrix of gain has been used:
W −1 = blockdiag{0.01I6, I6} .
Despite the much diﬀerent costs of the two movements, the vehicle is still
required to move in order to contribute to the end eﬀector motion. However
it would be preferable to move the vehicle only when absolutely necessary,
leading to sole movement of the manipulator in ordinary working conditions.
As an example, the vehicle attitude, in terms of Euler angles, for the last si-
mulation is shown in Figure 6.14. The vehicle still has a pitch of about 20 deg.
Case Study n. 3
The drawback shown by the algorithm as presented in the Case Study n. 2 can
be easily avoided by resorting to a singularity-robust task priority redundancy

6.6 Fuzzy Inverse Kinematics
127
0
10
20
30
40
50
−20
−10
0
10
20
time [s]
vehicle attitude [deg]
φ
θ
ψ
Fig. 6.14. Case study n. 2. Vehicle attitude in terms of Euler angles. Despite the
weight factor, the vehicle can reach non-dexterous conﬁgurations
resolution [78]. The same task is now simulated with the introduction of the
secondary task:
xs =

φ
θ

with xs,d = [ 0
0 ]T, meaning that the vehicle has to maintain an horizontal
conﬁguration all along the task execution. Its Jacobian is simply given by:
Js =

0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0

.
Notice that, for this simple matrix, it is J†
s = JT
s . Obviously, the vehicle
position and yaw are not limited.
Figure 6.15 reports the sketch of the ﬁnal conﬁguration; it can be observed
that the pitch is now close to zero, as can be seen also from Figure 6.16.
Case Study n. 4
In this simulation, the implementation of the proposed kinematic control
approach is presented. In an UVMS several variables are of interest in order
to achieve a successful mission:
• avoidance of kinematic singularities;
• keeping the joints far from the mechanical limits;
• keeping the vehicle with small roll and pitch;
• avoidance of obstacles;
• alignment of the vehicle fore-aft direction with the ocean current.

128
6. Kinematic Control of UVMSs
A
B
C
Fig. 6.15. Case study n. 3. Final conﬁguration; the roll and pitch angles are now
kept close to zero by exploiting the redundancy with the singularity-robust task
priority algorithm
0
10
20
30
40
50
−20
−10
0
10
20
time [s]
vehicle attitude [deg]
φ
θ
ψ
Fig. 6.16. Case study n. 3. Vehicle attitude in terms of Euler angles

6.6 Fuzzy Inverse Kinematics
129
It is underlined that some of the above items are critical; the alignment with
the current, however, can be signiﬁcant in order to reduce power consump-
tion [20]. As an example, in the previous case study, the use of a weight factor
requires now a larger movement of the manipulator. This can lead to the oc-
currence of kinematic singularities. In fact, if the trajectory is assigned in
real-time, it is possible that the manipulator is asked to move to the border
of its workspace, where the possibility to experience a kinematic singularity
is high. Also, when the manipulator is outstretched, mechanical joint limits
can be encountered. In the simulations, the following joint limits have been
assumed:
qmin = [−100 −210 −210 −150 −80 −170]T deg
qmax =
[100
30
10
150
80
170]T deg .
In Figure 6.17, the minimum distance to such limits for the previous case
study is shown. It can be observed that the manipulator hits a mechanical
limit at t ≈35 s.
0
10
20
30
40
50
0
10
20
30
40
50
O
time [s]
d [deg]
Fig. 6.17. Case study n. 3. Minimum distance of the 6 joints from their mechanical
limits. It can be observed that large movements of the manipulator may cause
hitting of the joint limits
In order to match all the constraints of such problem, a solution as been
proposed based on the use of the singularity-robust task priority merged with
fuzzy techniques.
Let consider the following tasks:
• End-eﬀector position/orientation. The primary task is given, as for
the previous simulations by the end-eﬀector position and orientation. The
corresponding Jacobian Jp is J given in (2.68);

130
6. Kinematic Control of UVMSs
• Manipulability. Since the fuzzy approach tries to move the manipula-
tor alone, its manipulability has to be checked. A computationally limited
measure of the manipulability can be obtained by checking the minimum
singular value of the Jacobian [195, 77]. Since the manipulability function
is strongly non-linear it is possible to adopt the following approach: when
close to a singular conﬁguration, the system tries to reconﬁgure itself in a
dexterous conﬁguration. The task, thus, is a nominal manipulator conﬁgu-
ration whose Jacobian is given by:
Js1 = [ O6×6
I6 ] ;
• Mechanical limits. Due to the mechanical structure, each joint has a
limited allowed range. In case of a real-time trajectory, avoidance of such
limits is crucial. For this reason the minimum distance from a mechanical
limit is considered as another secondary task. Notice that the Jacobian is
the same of to the previous task:
Js2 = [ O6×6
I6 ] ;
• Vehicle attitude. As for the previous cases, the vehicle attitude (roll and
pitch angles) has to be kept null when possible. The Jacobian is then given
by
Js3 =

0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0

.
Due to the simple structure of the matrices, the pseudoinversion of the
secondary tasks is trivial: J†
s1 = JT
s1, J†
s2 = JT
s2, J†
s3 = JT
s3.
As shown in Section 6.6, the above tasks are activated by fuzzy variables.
The fuzzy inference system has 3 inputs, namely: a measure of the robot
manipulability, a measure of the distance from the joints limits and a measure
of the vehicle attitude. Hence, 3 linguistic variables can be deﬁned that can
take the values:
manipulability = {singular, not singular}
joint limits = {close, not close}
vehicle attitude = {small, not small}
The output is given by the linguistic variables β and the 3 αi’s. The latter
can take the following values:
αi = {high, low}.
The linguistic variable β, named motion can take the following values:
motion = {vehicle, manipulator} .
As an example, the membership function of the linguistic variable joint limits
is reported in Figure 6.18.
The FIS outputs are considered at two diﬀerent levels. The variable mo-
tion (β in (6.15)) can be considered at a higher level with respect to the

6.6 Fuzzy Inverse Kinematics
131
0
20
40
60
80
0
0.2
0.4
0.6
0.8
1
[deg]
[-]
close
Fig. 6.18. Membership function of the linguistic variable: joint limits used in the
fuzzy singularity-robust task priority technique
variables αi’s. Roughly speaking, the motion has to be normally assigned to
the manipulator, i.e., if all the αi’s are null. Hence, the value of β is related
to the value of the αi’s and the ﬁrst set of rules to be designed concerns
the 3 linguistic variables α1, α2 and α3. A complete and consistent set of
fuzzy rules for 3 linguistic variables each of them deﬁned in two fuzzy sets
requires 23 rules for every output leading to 32 total rules. The rules have
been arranged in a hierarchical structure that gives higher priority to the
kinematic singularity of the manipulator and lower to the vehicle attitude.
Hence, the following 8 rules have been used:
1. if (manipulator is singular) then (α1 is high);
2. if (manipulator is not singular) then (α1 is low);
3. if (manipulator is singular) then (α2 is low);
4. if (joint limits is not close) then (α2 is low);
5. if (manipulator is not singular) and (joint limits is close)
then (α2 is high);
6. if (manipulator is singular) or (joint limits is close)
then (α3 is low);
7. if (vehicle attitude is small) then (α3 is low);
8. if (manipulator is not singular)
and (joint limits is not close)
and (vehicle attitude is not small) then (α3 is high).
In detail, the rules are developed as follows:
• The ﬁrst two rules concern the primary task. In this case, the manipu-
lator singularity is of concern and the variable α1 is activated when the
manipulator is close to a singularity.

132
6. Kinematic Control of UVMSs
• A second task (α2), with lower priority with respect to the ﬁrst, has to be
added. Rule n. 3, thus, is aimed at avoiding activation of this task when
the primary (α1) is high.
• Rule n. 4 and n. 5 are aimed at activating α2. Notice that the activation of
α2 is in and with the condition that does not activate the higher priority
task (α1).
• Repeat for the third task, in order of priority, the same rules as done for
the second task by taking into account that two tasks are now of higher
priority.
Table 6.3 is aimed at clarifying the rules development with respect to
two tasks, 1 and 2 in which the ﬁrst is of higher priority with respect to the
second. The fuzzy sets are very simple, i.e., an input ui high requires the
activation of this task by imposing αi high. It can be recognized, thus, that
α2 respects its lower priority.
Table 6.3. Examples of the fuzzy set rules for two tasks: u1 is the input of a generic
task of higher priority with respect to u2 corresponding to a secondary task. α1 and
α2 are the corresponding output
u1 = low
u1 = high
u2 = low
α1 = low
α2 = low
α1 = high
α2 = low
u2 = high
α1 = low
α2 = high
α1 = high
α2 = low
It is worth noticing that the rules presented could be grouped, e.g., rules
n. 1 and n. 3. The list presented, however, keeps the logical structure used
to develop the rules and should be clearer to the reader. Obviously, in the
simulation the rules have been compacted. With this logical approach the
rules are complete, consistent and continuous [103].
The and–or operations have been calculated by resorting to the min–max
operations respectively, the implication–aggregation operations too have been
calculated by resorting to the min–max operations respectively, the values
of αi ∈[0, 1] are obtained by defuzziﬁcation using the centroid technique and
a normalization. Finally, the value of β ∈]0, 1] is given by β = 1 −maxi(αi).
Notice that the extremities of the range in which β is deﬁned do not involve
a singular conﬁguration since, if β = 1 the manipulator alone is moving and
it is not close to a kinematic singularity. On the other hand, it is preferable
to have a certain degree of mobility of the manipulator avoiding β = 0; this
to guarantee that the manipulator reconﬁgures itself in a dexterous posture.
A simulation has been run with the proposed kinematic control leading to
satisfactory results. Figures 6.19–6.24 show some plots of interest. In detail,

6.6 Fuzzy Inverse Kinematics
133
Figure 6.19 shows the vehicle position and attitude, Figure 6.20 the joint
positions, Figure 6.21 reports the variables considered as secondary tasks and
the corresponding FIS outputs. It can be observed that, in the execution of
the segment A-B, the vehicle is not requested to move since the manipulator
is working in a safe posture; this can be observed from Figure 6.21 where it
can be noticed that the αi’s are null in the ﬁrst part of the simulation. When
t ≈30 s joint 5 is approaching its mechanical limit and the corresponding α2
is increasing, requesting the vehicle to contribute to the end-eﬀector motion
while the manipulator reconﬁgures itself; thus, by always keeping a null end-
eﬀector position/orientation error, the occurrence of an hit is avoided. The
same can be observed for the pitch of the vehicle; since it is at the lower
hierarchical level in the FIS, its value is recovered to the null value only
when the other αi’s are null.
Figure 6.22 shows a sketch of the initial and ﬁnal conﬁguration of the
system. Figure 6.23 shows the system velocities. It can be remarked that
the proposed algorithm outputs smooth trajectories. As for all the simulati-
ons shown, the end-eﬀector position/orientation error is practically null (Fi-
gure 6.24) due to the use of a CLIK algorithm.
In order to show handling of the fuzzy rules under the proposed approach
while avoiding exponential growth of their number, we ﬁnally add as 4th
task, speciﬁcation of the vehicle yaw. Our aim is to align the vehicle fore-
aft direction with the current in order to get energetic beneﬁt from the low
drag of such conﬁguration. To limit the number of rules to be implemented
we assign to this task the last priority among the secondary tasks. In this
case, considering two fuzzy sets also for this last variable (yaw = {aligned,
not aligned}), only the following 3 rules have to be added to the previous 8,
leading to 11 rules in total instead of 64:
9. if (manipulator is singular) or (joint limits is close) or
(vehicle attitude is not small) then (α4 is low);
10. if (yaw is aligned) then (α4 is low);
11. if (manipulator is not singular)
and (joint limits is not close)
and (vehicle attitude is small)
and (yaw is not aligned) then (α4 is high).
The 3 rules have the following aim: rule n. 9 is aimed at giving the lower
priority to this speciﬁc task; rule n. 10 is aimed at guaranteeing that the
output is always low when the corresponding input is inside the safe range;
ﬁnally, rule n. 11 activates α4 only for the given speciﬁc combination of inputs.
The integration of fuzzy technique with established inverse kinematic
techniques exhibits promising results, the fuzzy theory can give an added
value in handling complex situations as missions in remotely, unknown, ha-
zardous underwater environments. In a certain way, a fuzzy approach could
be considered to implement an higher level supervisor that is in charge of
distributing the motion between vehicle and manipulator while taking into

134
6. Kinematic Control of UVMSs
0
10
20
30
40
50
−0.4
−0.2
0
0.2
0.4
0.6
0
10
20
30
40
50
−20
−10
0
10
20
vehicle position [m]
vehicle atittude [deg]
time [s]
time [s]
x
y
z
φ
θ
ψ
Fig. 6.19. Case study n. 4. Vehicle position (top) and attitude in terms of Euler
angles (bottom). The movement of the vehicle is not required in the execution of
the ﬁrst segment (A-B, ﬁrst 12 s) when the manipulator is working in dexterous
conﬁguration
account the big amount of constraints of UVMSs: joint’s limits, vehicle’s roll
and pitch, robot’s manipulability, obstacle avoidance, etc.

6.6 Fuzzy Inverse Kinematics
135
0
10
20
30
40
50
−200
−150
−100
−50
0
50
0
10
20
30
40
50
−100
−50
0
50
100
time [s]
time [s]
joint positions 1–3 [deg]
joint positions 4–6 [deg]
limit joint 5
q1
q2
q3
q4
q5
q6
Fig. 6.20. Case study n. 4. Joint positions. The mechanical limit of joint 5 is
highlighted; it can be observed that the system reconﬁgures itself in order to avoid
working close to the mechanical limit

136
6. Kinematic Control of UVMSs
0
10
20
30
40
50
0
0.1
0.2
0.3
0.4
0
10
20
30
40
50
0
10
20
30
40
50
0
10
20
30
40
50
0
5
10
15
20
0
10
20
30
40
50
0
0.5
1
0
10
20
30
40
50
0
0.5
1
0
10
20
30
40
50
0
0.5
1
time [s]
time [s]
time [s]
time [s]
time [s]
time [s]
manipulability [-]
d [m]
vehicle roll and pitch [deg]
α1 [-]
α2 [-]
α3 [-]
Fig. 6.21. Case study n. 4. Variables of interest for the secondary task (left)
and output of the fuzzy inference system (right). For this speciﬁc mission, the
manipulability task is not excited, the distance from the mechanical limit and the
vehicle roll and pitch tasks are kept in their safe range

6.6 Fuzzy Inverse Kinematics
137
A
B
C
Fig. 6.22. Case study n. 4. Final conﬁguration. The proposed kinematic control
allows handling several variables of interest

138
6. Kinematic Control of UVMSs
0
10
20
30
40
50
−0.1
−0.05
0
0.05
0.1
0
10
20
30
40
50
−4
−2
0
2
4
0
10
20
30
40
50
−50
0
50
0
10
20
30
40
50
−30
−20
−10
0
10
20
30
ν1 [m/s]
ν2 [deg/s]
{ ˙q1, ˙q2, ˙q3} [deg/s]
{ ˙q4, ˙q5, ˙q6} [deg/s]
time [s]
time [s]
time [s]
time [s]
u
v
ω
q
˙q2
˙q3
˙q5
Fig. 6.23. Case study n. 4. System velocities

6.7 Conclusions
139
0
10
20
30
40
50
−0.02
−0.01
0
0.01
0.02
time [s]
0
10
20
30
40
50
−2
0
2
x 10
−5
time [s]
e.e. position error [m]
e.e. orientation error [-]
x
y
z
2
Fig. 6.24. Case study n. 4. End-eﬀector position/orientation errors
6.7 Conclusions
With a view to implementing autonomous missions of robotic systems, ki-
nematic control plays an important role. The manipulation task is naturally
deﬁned in the operational space. A mapping between the task space and the
vehicle/joint space is then necessary to achieve the desired task.
If this mapping is implicitly performed via a model based dynamic control
the natural redundancy of the system is not exploited, e.g., is not possible to
take into account additional constraints. Moreover dynamic compensation of
underwater robotic systems is diﬃcult to obtain. On the other hand, oﬀ-line
planning of the vehicle/joint positions is not advisable, since the mission has
to be accomplished in an unstructured, generally unknown, environment. For
these reasons real-time kinematic control seems to be the right approach to
motion control of UVMSs.

140
6. Kinematic Control of UVMSs
The use of techniques well known in robotics such as the task priority
approach seems to oﬀer good results. They allow to reliably exploit the re-
dundancy and do not require compensation of the system’s dynamics. As it
will be shown in Chap. 8, kinematic control techniques can be successfully
integrated with interaction control schemes.

7. Dynamic Control of UVMSs
7.1 Introduction
In Chap. 2 the equations of motion of Underwater Vehicle-Manipulator Sy-
stems (UVMSs) have been presented. Their expression in matrix form (2.71),
is formally close to the equations of motion of ground ﬁxed manipulators for
which a wide control literature exists. This has suggested a suitable trans-
lation/implementation of existing control algorithms. However, some diﬀe-
rences, crucial from the control aspect, need to be underlined. UVMSs are
complex systems characterized by several strong constraints:
• Uncertainty in the model knowledge, mainly due to the poor knowledge of
the hydrodynamic eﬀects;
• Complexity of the mathematical model;
• Kinematic redundancy of the system;
• Diﬃculty to control the vehicle in hovering, mainly due to the poor thru-
sters performance;
• Dynamic coupling between vehicle and manipulator;
• Low bandwidth of the sensor’s readings.
In [197, 198] a discrete adaptive control strategy for coordinated control of
UVMSs is presented. Numerical simulations, on a planar task, show that the
use of a centralized controller, better than two separate controllers, one for the
vehicle and one for the manipulator, guarantees performance improvement.
Reference [124] shows an adaptive macro-micro control for UVMSs. In-
verse kinematics is obtained by inversion of the Jacobian matrix; hence, a
manipulator with 6 degrees of freedom is required. A stability analysis in
Lyapunov sense is provided.
An adaptive control law for an underwater manipulator is proposed in [59].
A self-tuning PID controller is developed and tested in simulation on a 2-
link manipulator with ﬁxed base. In [190] too, an underwater manipulator
with ﬁxed base is considered. A description of a telerobotic control system is
provided in [181].
The use of multiple manipulators to be used as stabilizing paddles is in-
vestigated by means of simulations in [168]. Those concern a vehicle carrying
a 6-DOF manipulator plus a pair of 2-link manipulators counteracting the
interaction force between vehicle and manipulator as paddles.
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 141–200, 2006.
© Springer-Verlag Berlin Heidelberg 2006

142
7. Dynamic Control of UVMSs
In [105, 106] some dynamic considerations are given to underline the exi-
stence of a dynamic coupling between vehicle and manipulator. From this
analysis, based on a speciﬁc structure of an UVMS, a Sliding Mode approach
with a feedforward compensation term is presented. Numerical simulation
results show that the knowledge of the dynamics allows improvement of the
tracking performance.
In [86, 87], during the manipulation motion, the vehicle is assumed to be
inactive and modeled as a passive joint. A robust controller, with a distur-
bance observer-based action is used and its eﬀectiveness veriﬁed in a 1-DOF
vehicle carrying a 3-DOF manipulator.
Reference [186] presents a sliding mode controller that beneﬁts from the
compensation of a multilayer neural network. Simulation with a 2-DOF,
ground-ﬁxed, underwater manipulator is provided.
In [131, 245] the possibility to mount a force/torque sensor at the
base of the manipulator is considered in order to compensate for the ve-
hicle/manipulator dynamic interaction. In case of absence of the sensor, [245]
also proposes a disturbance observer. The possibility to use information co-
ming from an other sensor is interesting; however, the practical implementa-
tion of such algorithms is not trivial.
Reference [169] presents an iterative learning control experimentally va-
lidated on a 3-DOF manipulator with ﬁxed base. This is ﬁrst moved in air
and then in water in order to learn the hydrodynamic dynamic contribution
and then use it in a feedforward compensation.
Reference [174], after having reported some interesting dynamic conside-
rations about the interaction between the vehicle and the manipulator, pro-
pose a two-time scale control. The vehicle, characterized by low bandwidth
actuators that can not compensate for the high manipulator bandwidth, is
controlled by a simple P-type action, while the manipulator is controlled by
a feedback linearizing controller.
In [162] the model of a planar motion of the AUV Twin-Burger equipped
with a 2-link manipulator is developed. A Resolved Acceleration Control is
then applied and simulated on the 5-DOFs.
Reference [281] proposes an adaptive action mainly based on the transpose
of the Jacobian. The approach is validated on simulations involving a 2-DOF
model of ODIN carrying a 2-DOF planar manipulator.
A problem slightly diﬀerent is approached in [200], where the 4-DOF
manipulator Sherpa, mounted under the ROV Victor 6000 developed at the
Ifremer, is considered. This manipulator has been originally deigned to be
controlled in open-loop by a remote operator via a master/slave conﬁguration
using a joystick: it is, thus, not-provided with proprioceptive sensors. The
Authors propose closed-loop system based on an eye-to-hand visual servoing
approach to control its displacement.

7.2 Feedforward Decoupling Control
143
7.2 Feedforward Decoupling Control
In 1996 T. McLain, S. Rock and S. Lee, in [205, 206], present a control
law for UVMSs with some interesting experimental results conducted at the
Monterey Bay Aquarium Research Institute (MBARI). A 1-link manipulator
is mounted on the vehicle OTTER (see Figure 7.1) controlled in all the 6-
DOFs by mean of 8 thrusters. A coordinated control is then implemented to
improve the tracking error of the end eﬀector.
Fig. 7.1. OTTER vehicle developed in the Aerospace Robotics Laboratory at
Stanford University (courtesy of T. McLain, Brigham Young University)
In order to explain the control implemented let rewrite the equations of
motion for the sole vehicle in matrix form as
M v ˙ν + Cv(ν)ν + DRB(ν)ν + gRB(RI
B) = τ v −τ m(RI
B, q, ζ, ˙ζ) (7.1)
where τ m(RI
B, q, ζ, ˙ζ) ∈IR6 represents the coupling eﬀect caused by the pre-
sence of the manipulator. The control of the vehicle and of the arm is achie-
ved, independently, by classical control technique. The coordination action

144
7. Dynamic Control of UVMSs
is obtained by adding to the vehicle thrusters a feedforward compensation
term that is an estimate of τ m:
τ v = τ control + ˆτ m(RI
B, q, ζ, ˙ζ)
(7.2)
where τ control ∈IR6 is the control action output by the sole vehicle controller.
In [206] there are experimental results conducted with the vehicle OTTER
that is about 2.5 m long, 0.95 m wide, and 0.45 m tall and weights about
145 kg in air. The arm used has a 7.1 cm diameter and is 1 m long. The con-
trol beneﬁts from a variety of commercial sensors: an acoustic short-baseline
for the horizontal position, a pressure transducer for the depth, a dual-axis
inclinometer for the roll and pitch angles, a ﬂux-gate compass for the yaw,
and solid-state gyros for the angular velocities. The control loop has been
implemented at a frequency of 100 Hz, i.e., the frequency of all the sensors
expect the baseline acoustic that worked at 2.5 Hz.
0
5
10
15
20
0
0.1
0.2
0.3
0.4
0.5
0
5
10
15
20
0
0.1
0.2
0.3
0.4
0.5
0
5
10
15
20
0
0.1
0.2
0.3
0.4
0.5
0
5
10
15
20
0
0.1
0.2
0.3
0.4
0.5
time [s]
time [s]
time [s]
time [s]
No Vehicle Control
Decoupling Control Only
Feedback Control Only
Feedback with Decoupling Control
˜ηee1 [m]
˜ηee1 [m]
˜ηee1 [m]
˜ηee1 [m]
Fig. 7.2. Feedforward Decoupling control. End-eﬀector errors of a periodic motion.
Top-left: without vehicle control; top-right: with the sole decoupling action; bottom-
left: with the sole vehicle feedback control; bottom-right: the proposed approach
(courtesy of T. McLain, Brigham Young University)

7.2 Feedforward Decoupling Control
145
The experiment is conducted under some assumptions: the vehicle does
not inﬂuence the manipulator dynamic due to its small movements; the de-
sired joint acceleration are used instead of the measured/ﬁltered ones; there
is no current and the lift forces are small compared to the in-line forces. For
this speciﬁc experiment, moreover, the control of the vehicle is obtained by
resorting to PID-like actions at the 6 DOFs independently. In view of these
assumptions it is:
τ v = τ P ID + ˆτ m(q, ˙q, ¨qd) .
Figure 7.2 reports some experimental results of the end-eﬀector error com-
manded to a periodic motion. In the top-left plot the vehicle is not controlled
at all; the inﬂuence of the arm on the vehicle can be observed. In the top-right
and the bottom-left plots the sole decoupling force and vehicle feedback are
considered. Finally, in the bottom-right plot the beneﬁt of considering the
proposed control strategy can be fully appreciated.
0
5
10
0
0.5
1
1.5
2
0
5
10
0
0.5
1
1.5
2
0
5
10
0
0.5
1
1.5
2
0
5
10
0
0.5
1
1.5
2
time [s]
time [s]
time [s]
time [s]
No Vehicle Control
Decoupling Control Only
Feedback Control Only
Feedback with Decoupling Control
distance [m]
distance [m]
distance [m]
distance [m]
Fig. 7.3. Feedforward Decoupling control. End-eﬀector step response. Top-left:
without vehicle control; top-right: with the sole decoupling action; bottom-left: with
the sole vehicle feedback control; bottom-right: the proposed approach (courtesy of
T. McLain, Brigham Young University)

146
7. Dynamic Control of UVMSs
In ﬁgure 7.3 the end-eﬀector step response is given and its settling time
can be observed. It can be remarked that, without the proposed decoupling
strategy, the end eﬀector does not even reaches the given set point.
The overall improvement was of a factor 6 with respect to the vehicle
without control and a factor 2.5 with respect to a separate control action.
The applied thrust only showed an increase of about 5%.
7.3 Feedback Linearization
Reference [285] presents a model based control law. In detail, the symbolic
dynamic model is derived using the Kane’s equations [286]; this is further
used in order to apply a full dynamic compensation. Simulations of a 6-DOF
vehicle carrying two 3-link manipulators are provided. A similar approach
has been presented in [255, 256].
From the mathematical point of view, the dynamics of an UVMS can be
completely cancelled by resorting to the following control action:
τ = M(q)˙ζa + C(q, ζ)ζ + D(q, ζ)ζ + g(q, RI
B)
(7.3)
where the 6 + n dimensional vector
˙ζa =
 ˙νa
¨qa

is composed by a 6 × 1 vector deﬁned as
˙νa = Je¨ηe + ˙Je ˙η
¨ηe = ¨ηd + Kpv˜η + Kvv ˙˜η + Kiv
! t
0
˜η
and a n × 1 vector deﬁned as
¨qa = ¨qd + Kpq˜q + Kvq ˙˜q + Kiq
! t
0
˜q .
The stability analysis is straightforward; assuming perfect dynamic com-
pensation, in fact, gives two diﬀerent linear models for the earth-ﬁxed vehicle
variables and the joint positions. With a proper choice of the matrix gains,
moreover, the designer can shape the response of a second-order dynamic
system.
7.4 Nonlinear Control for UVMSs with Composite
Dynamics
In [67, 68, 69, 220] the singular perturbation theory has been considered due
to the composite nature of UVMSs. The diﬀerent bandwidth characteristics of

7.4 Nonlinear Control for UVMSs with Composite Dynamics
147
the vehicle/manipulator dynamics are used as a basis for the control design.
This has been developed having in mind a Vortex vehicle together with a
PA10, 7-DOF, manipulator for which Tables 7.1 and 7.2 reports some time
response of the subsystems.
Table 7.1. Vortex/PA10’s sensor time response
measured variable
time response
surge and sway x, y
400 ms
depth z
1000 ms
yaw ψ
1000 ms
pitch and roll φ, θ
100 ms
joint position q
1 ms
Table 7.2. Vortex/PA10’s actuators time response
type
time response
vehicle thruster
160 ms
manipulator’s electrical CD motor
0.5 ms
Let consider a state vector composed by the earth-ﬁxed-frame-based coor-
dinates of the vehicle and the joint position. In the following the dependencies
will be dropped out to increase readability. It can be demonstrated that its
(6 + n) × (6 + n) inertia matrix has the form [255]:
 M .
v + M qq
M vq
M T
vq
M q

where M .
v
∈
IR6×6 is the earth-ﬁxed inertia matrix of the sole vehicle
(see eq. (2.53)), M q ∈IRn×n is the inertia matrix of the sole manipulator,
M qq ∈IR6×6 is the contribution of the manipulator on the inertia matrix
seen from the vehicle, M vq ∈IR6×n is the coupling term between vehicle
and manipulator; all the matrices include the added mass. Its inverse can be
parameterized in:
M −1 =

M −1
11
−M 12
−M T
12
M −1
22

(7.4)
where the block diagonal matrices M 11 and M 22 are of dimension 6 × 6 and
n × n, respectively, and M 12 ∈IR6×n.

148
7. Dynamic Control of UVMSs
The equations of motion can be written as:
¨η = M −1
11 (τ .
v −n.) −M 12 (τ q −nq)
(7.5)
¨q = M −1
22 (τ q −nq) −M T
12 (τ .
v −n.)
(7.6)
where the nonlinear terms of the equations of motion have been collected in
a (6 + n) dimensional vector:
n =

n.
nq

with n. ∈IR6 and nq ∈IRn.
In [67] the following controller is assumed for the vehicle:
τ .
v =
#
ˆ
M
.
v + ˆ
M qq
' #
¨ηd + kvv ˙˜η + kpv˜η
'
+ ∆τ .
v ,
(7.7)
and for the manipulator
τ q = ˆ
M q
#
¨qd + kvq ˙˜q + kpq˜q
'
(7.8)
where, as usual, the symbol hat: ˆ· denotes an estimate, positive deﬁnite in
this case, of the corresponding matrix and the tilde: ˜· represents the error
deﬁned as the desired minus the current variable. The scalar gains are chosen
so that:
kvv = 2ξω0v ,
kpv = ω2
0v ,
kvq = 2ξω0q ,
kpq = ω2
0q ,
i.e., they are deﬁned by the damping ratio and the natural frequency of the
linearized model. The bandwidth ratio
ε = ω0v
ω0q
 1
is given by the closed-loop bandwidths the the vehicle and the manipulator
and it is small due to the dynamics of the two subsystems. The additional
control action ∆τ .
v can be chosen in diﬀerent ways, in [69] a partial singu-
lar perturbed model-based compensation and a robust non-linear control have
been proposed.
A singular perturbation analysis can be carried out when ε is small. It
can be demonstrated the the manipulator is not aﬀected by the slow vehicle
dynamics and that, after the fast transient, the approximated model has an
error O(ε). On the other side, the vehicle dynamics is strongly aﬀected by

7.5 Non-regressor-Based Adaptive Control
149
the manipulator’s motion. For this reason the additional control action ∆τ .
v
is required. In [67], a robust control is developed for the vehicle in order to
counteract the coupling eﬀects.
Simulations are carried out considering a dry weight of 150 kg and a
length of 1 m for the vehicle and a dry weight of 40 kg and a length of 1 m
for the manipulator. Moreover, the natural frequencies have been chosen as
ω0v = 1.5 rad/s and ω0q = 15 rad/s leading to a value of ε = 0.1.
7.5 Non-regressor-Based Adaptive Control
In 1999 reference [185, 252] extend to UVMSs the non-regressor-based
adaptive control developed by J. Yuh [316] and experimentally validated
in [83, 216, 320, 323] with respect to AUVs. In [322], this controller is in-
tegrated with a disturbance observer to improve its tracking performance
and simulated on a 1-DOF vehicle carrying a 2-DOF manipulator.
The main idea is to consider the vehicle subsystem separate from the ma-
nipulator subsystem and to develop two controllers with diﬀerent bandwidth,
independent one from the other. It is worth noticing that the controller has
been developed together with a kinematic control approach (see Chapter 6).
The vehicle generalized force τ .
v, thus, can be computed by considering
the controller
τ .
v = K1,v¨ηd + K2,v ˙η + K3,v + K4,v ˙˜η + K5,v˜η =
5
-
i=1
Ki,vφi,v ,
already deﬁned and discussed in Section 3.3.
The manipulator is controlled with the following
τ q = K1,q¨qd + K2,q ˙q + K3,q + K4,q ˙˜q + K5,q˜q =
5
-
i=1
Ki,qφi,q ,
where ˜q = qd −q, the gains Ki,q ∈IRn×n are computed as
Ki,q =
ˆγi,qsqφT
i,q

sq
00φi,q
00
i = 1, . . . , 5 ,
where
sq = ˙˜q + σ˜q
with σ > 0 ,
and the factors ˆγi,q’s are updated by
˙ˆγi,q = fi,q 
sq
00φi,q
00
with fi,q > 0
i = 1, . . . , 5 .

150
7. Dynamic Control of UVMSs
The stability analysis can be found in [185, 252]. In [252], this control-
ler is used together with the kinematic control detailed in Section 6.4 in a
simulation study involving a 6-DOF vehicle together with a 3-DOF planar
manipulator subject to joint limits. The controller has been developed to
be used with the UVMS SAUVIM under development and the Autonomous
Systems Laboratory, University of Hawaii (Figure 7.4).
Fig. 7.4. SAUVIM under development and the Autonomous Systems Laboratory,
University of Hawaii (courtesy of J. Yuh). The passive joint used for position mea-
surement can be observed

7.6 Sliding Mode Control
151
7.6 Sliding Mode Control
Robust techniques such as Sliding Mode Control have been successfully ap-
plied in control of a wide class of mechanical systems. In this Section the
application of a Sliding Mode based approach to motion control of UVMSs
is discussed.
The basic idea of this approach is the deﬁnition of a sliding surface
s(x, t) = ˙˜x + Λ˜x = 0
(7.9)
where a second order mechanical system has been assumed, x is the state
vector, t is the time, ˜x = xd −x and Λ is a positive deﬁnite matrix. When
the sliding condition is satisﬁed, the system is forced to slide toward the
value ˜x = 0 with an exponential dynamic (for the scalar case, it is ˙˜x = −λ˜x).
The control input, thus, has the objective to force the state laying in the
sliding surface. With a proper choice of the sliding surface, n-order systems
can be controlled considering a 1st-order problem in s.
The only information required to design a stable sliding mode controller
is a bound on the dynamic parameters. While this is an interesting property
of the controller, one must pay the price of an high control activity. Typically,
sliding mode controllers are based on a switching term that causes chattering
in the control inputs.
While the ﬁrst concepts on the sliding surface appeared in the Soviet
literature in the end of the ﬁfties, the ﬁrst robotic applications of sliding
mode control are given in [293, 313]. An introduction on Sliding Mode Control
theory con be found in [268].
Control law. The vehicle attitude control problem has been addressed
among the others in the paper [121] which extends the work in [108] and [265]
to obtain a singularity-free tracking control of an underwater vehicle based
on the use of the unit quaternion. Inspired by the work in [121], a control law
is presented for the regulation problem of an UVMS. To overcome the oc-
currence of kinematic singularities, the control law is expressed in body-ﬁxed
and joint-space coordinates so as to avoid inversion of the system Jacobian.
Further, to avoid representation singularities of the orientation, attitude con-
trol of the vehicle is achieved through a quaternion based error. The resulting
control law is very simple and requires limited computational eﬀort.
Let us recall the dynamic equations in matrix form (2.71):
M(q)˙ζ + C(q, ζ)ζ + D(q, ζ)ζ + g(q, RI
B) = Bu,
(2.71)
the control law is
u = B†[KDs + ˆg(q, RI
B) + KS sign(s)] ,
(7.10)
where B† is the pseudoinverse of matrix B, KD is a positive deﬁnite matrix
of gains, ˆg(q, RI
B) is the estimate of gravitational and buoyant forces, KS

152
7. Dynamic Control of UVMSs
is a positive deﬁnite matrix, and sign(x) is the vector function whose i-th
component is
sign(x)i =
	
1
if xi ≥0
−1
if xi < 0.
In (7.10), s is the
%
(6 + n) × 1
)
sliding manifold deﬁned as follows
s = Λ


RB
I ˜η1
˜ε
˜q

−


ν1
ν2
˙q

= y −ζ ,
(7.11)
with Λ > O, ˜η1 = [ xd −x
yd −y
zd −z ]T, ˜q = qd −q where the sub-
script d denotes desired values for the relevant variables.
7.6.1 Stability Analysis
In this Section it will be demonstrated that the discussed control law is
asymptotically stable in a Lyapunov sense. Let us consider the function
V = 1
2sTM(q)s ,
(7.12)
that is positive deﬁnite being M(q) > O.
Diﬀerentiating V with respect to time yields
˙V = 1
2sT ˙Ms + sTM ˙s
that, taking into account the model (2.71), (7.11) and the skew-symmetry
of
˙M −2C, can be rewritten as
˙V = −sTDs + sT[M ˙y −Bu + Cy + Dy + g] .
(7.13)
Plugging (7.10) into (7.13) gives
˙V = −sT(D + KD)s + sT[M ˙y + (C + D)y + ˜g −KS sign(s)]
that, in view of positive deﬁniteness of KD and D, can be upper bounded
as follows
˙V ≤−λmin(KD + D) 
s
2 −λmin(KS) 
s
 +
+ 
M ˙y + (C + D)y + ˜g
 
s
 ,
where λmin denotes the smallest eigenvalue of the corresponding matrix.
By choosing KS such that
λmin(KS) ≥
M ˙y + (C + D)y + ˜g
 ,
(7.14)
the time derivative of V is negative deﬁnite and thus s tends to zero asym-
ptotically.
If an estimate of the dynamic parameters in (2.71) is available, it might
be convenient to consider the control law

7.6 Sliding Mode Control
153
u = B†[KDs + ˆg + ˆ
M ˙y + ( ˆC + ˆD)y + KS sign(s)]
(7.15)
in lieu of (7.10). Starting from the function in (7.12) and plugging (7.15)
in (7.13) gives
˙V = −sT(D + KD)s + sT[/
M ˙y + ( .C + .D)y + ˜g −KS sign(s)]
that, in view of positive deﬁniteness of KD and D, leads to negative deﬁni-
teness of ˙V if
λmin(KS) ≥
000/
M ˙y + ( .C + .D)y + ˜g
000 .
(7.16)
It is worth noting that condition (7.16) is weaker than condition (7.14) in
that the matrix KS must overcome the sole model parameters mismatching.
Stability of the sliding manifold. It was demonstrated that the discussed
control law guarantees convergence of s to the sliding manifold s = 0. In the
following it will be demonstrated that, once the sliding manifold has been
reached, the error vectors ˜η1, ˜ε, ˜q converge asymptotically to the origin, i.e.,
that regulation of the system variables to their desired values is achieved.
By taking Λ = blockdiag{Λp, Λo, Λq} where Λp ∈IR3×3, Λo ∈IR3×3,
Λq ∈IRn×n, from (7.11) it is possible to notice that the stability analysis can
be decoupled in 3 parts as follows.
Vehicle position error dynamics. The vehicle position error dynamics on
the sliding manifold is described by the equation
−ν1 + ΛpRB
I ˜η1 = 0 .
Notice that the rotation matrix RB
I is a function of the vehicle orientation.
By considering
V = 1
2 ˜ηT
1 ˜η1
as Lyapunov function candidate and observing that ˙η1 = RI
Bν1, it is easily
obtained
˙V = −˜ηT
1 RI
BΛpRB
I ˜η1 ,
that is negative deﬁnite for Λp > O. Hence, ˜η1 converges asymptotically to
the origin.
Vehicle orientation error dynamics. The vehicle orientation error dyna-
mics on the sliding manifold is described by the equation
−ν2 + Λo˜ε = 0
⇒
ν2 = Λo˜ε .
(7.17)
Further, by taking into account the quaternion propagation and (7.17), it
can be recognized that
˙˜η = 1
2˜εTν2 = 1
2˜εTΛo˜ε .
(7.18)

154
7. Dynamic Control of UVMSs
Let consider the Lyapunov function candidate
V = ˜εT˜ε .
(7.19)
The time derivative of V is:
˙V = 2˜εT ˙˜ε = −˜εT˜ην2 −˜εTS(˜ε)ν2 .
(7.20)
Plugging (7.17) into (7.20) and taking Λo = λoI3 with λo > 0, gives
˙V = −˜ηλo˜εT˜ε −λo˜εTS(˜ε)˜ε = −˜ηλo˜εT˜ε .
which is negative semideﬁnite with ˜η ≥0. It must be noted that, in view
of (7.18), ˜η is a not-decreasing function of time and thus it stays positive
when starting from a positive initial value.
The set R of all points ˜ε where ˙V = 0 is given by
R = {˜ε = 0,
˜ε : ˜η = 0} ;
from (2.7), however, it can be recognized that
˜η = 0
⇒

˜ε
 = 1
and thus ˙˜η > 0 in view of (7.18). Therefore, the largest invariant set in R is
M = {˜ε = 0}
and the invariant set theorem ensures asymptotic convergence to the origin.
Manipulator joint error dynamics. The manipulator joint error dyna-
mics on the sliding manifold is described by the equation
−˙q + Λq˜q = 0
whose convergence to ˜q = 0 is evident taking Λq > O.
7.6.2 Simulations
Dynamic simulations have been performed in order to show the eﬀectiveness
of the discussed control law. The UVMS simulator was developed in the
Matlab c /Simulink c environment.
For this simulations, the vehicle data are taken from [145]; they refer to
the experimental Autonomous Underwater Vehicle NPS Phoenix. A two-link
manipulator with rotational joints has been considered which is mounted
under the vehicle body with the joint axes parallel to the fore-aft direction;
since the vehicle inertia along that axis is minimum, this choice increases
dynamic coupling between the vehicle and the manipulator. The length of
each link is 1 m, the center of gravity is coincident with the center of buoyancy
and it is supposed to be in the geometrical center of the link; each link is not
neutrally buoyant. Dry and viscous joint frictions are also taken into account.
As for the control law, implementation of (7.10) was considered; however,
it is well known that the sign function would lead to chattering in the system.

7.6 Sliding Mode Control
155
Practical implementation of (7.10), therefore, requires replacement of the sign
function, e.g., with the sat function
u = B†[KDs + ˆg(q, RB
I ) + KSsat(s, ε)] ,
(7.21)
where the sat(x, ε) is the vector function whose i-th component is
sat(x, ε)i =



1
if xi > ε
−1
if xi < −ε
xiε
otherwise.
Convergence to the equilibrium of the UVMS under this diﬀerent control
law can be easily demonstrated starting from (7.12) following the guidelines
in [268]. In detail, it is obtained that ˙V < 0 in the region characterized
by 
s
 ≥ε, while the sign of ˙V is undetermined in the boundary layer
characterized by 
s
 < ε. This approach is well established in sliding mode
control and does not represent a practical drawback since ε can be taken
suﬃciently small.
In the simulation B is supposed to be the identity matrix, meaning that
direct control of forces and moments acting on the vehicle and joint torques
is available. The control law parameters are
Λo = Λp = diag{0.5, 0.5, 0.5} ,
Λq = diag{3, 2} ,
and
KD = blockdiag{104I6, 3000, 500} ,
KS = 1000I8 ,
ε = 0.1 .
A station keeping task for the vehicle in the initial location was considered
ηi = [ 0
0
0
0
0
0 ]T
m,rad
with the manipulator in the initial conﬁguration qi =

−π
4
π
2
T
rad. The
vehicle must be then kept still, i.e., ηd = ηi, while moving the manipulator
arm to the desired ﬁnal conﬁguration qf = [ 0
0 ]T rad according to a 5th
order polynomial.
It should be noted that the vehicle orientation set point is assigned in
terms of Euler angles; these must be converted into the corresponding rota-
tion matrix so as to extract the quaternion expressing the orientation error
from the rotation matrix computed as in Subsection 2.2.3. Remarkably, this
procedure is free of singularities.
The obtained simulation results are reported in Figures 7.5–7.7 in terms of
the time histories of the vehicle position, the vehicle control forces, the vehicle
attitude expressed by Euler angles, the vehicle moments, the manipulator
joint errors, and the manipulator joint torques, respectively.

156
7. Dynamic Control of UVMSs
0
5
10
15
−2
−1
0
1
2 x 10
−3
time [s]
[m]
x
y
z
0
5
10
15
−600
−500
−400
−300
−200
−100
0
tim
N
X
Y
Z
Fig. 7.5. Sliding mode control. Left: vehicle positions. Right: vehicle control forces
Figure 7.5 shows that, as expected, the vehicle position is aﬀected by the
manipulator motion; however, the displacements are small and the target
position is recovered after a transient. It can be recognized that at steady
state the force along z is non null; this happens because the manipulator is
not neutrally buoyant.
Figure 7.6 shows that the dynamic coupling is mostly experienced along
the roll direction because of the chosen UVMS structure. This eﬀect was
intentional in order to test the control robustness. It can be recognized that
vehicle control moments are zero at steady state; this happens because the
center of gravity and the center of buoyancy of vehicle body and manipulator
links are all aligned with the z-axis of the earth-ﬁxed frame at the ﬁnal system
conﬁguration.
0
5
10
15
−0.15
−0.1
−0.05
0
0.05
time [s]
[deg]
φ
0
5
10
15
−250
−200
−150
−100
−50
0
50
tim
Nm
K
Fig. 7.6. Sliding mode control. Left: vehicle attitude in terms of Euler angles.
Right: vehicle control moments
Figure 7.7 shows the time histories of manipulator joint errors and torques.
It is worth noting that the initial value of the joint torques is non null because

7.7 Adaptive Control
157
of gravity and buoyancy compensation, while they are null at steady state in
view of the particular ﬁnal system conﬁguration. It can be recognized that
control generalized forces are smooth while the task is successfully executed.
0
5
10
15
−0.5
0
0.5
time [s]
[deg]
q1
q2
0
5
10
15
0
20
40
60
80
100
τq,1
τq,2
Fig. 7.7. Sliding mode control. Left: manipulator joint errors. Right: manipulator
joint torques. The steady state vehicle moment and manipulator torques are null
due to the restoring force characteristic of this speciﬁc UVMS
7.7 Adaptive Control
Adaptive Control is a wide topic in control theory. The basic idea of adaptive
control is to modify on-line some control gains to adapt the controller to
the plant’s parameters that are supposed to be unknown or slowly varying.
However, the term adaptive control can assume slightly diﬀerent meanings.
In this work, a controller is considered adaptive if it includes explicitly on-line
system parameters estimation.
Often, the mathematical model of the system to be controlled is known
but the dynamic parameters are not known or may depend from a load.
In this case, the adaptive control is mainly based on a PD action plus a
dynamic compensation the parameters of which are updated on-line. This
dynamic compensation can be intended to cancel the system dynamics, thus
achieving decoupling and linearization of the system, or preserve the passivity
properties of the closed loop system [223].
While the ﬁrst concepts of adaptive control appeared, without success, in
the aircraft control in the early ﬁfties, the ﬁrst robotic applications appeared
later [223, 267].
Control law. Based on the control law developed in the previous Section,
a control law is presented for the tracking problem of UVMSs. As in the
previous control law, to overcome the occurrence of kinematic singularities,
the control law is expressed in body-ﬁxed and joint-space coordinates so as

158
7. Dynamic Control of UVMSs
to avoid inversion of the system Jacobian. Further, to avoid representation
singularities of the orientation, attitude control of the vehicle is achieved
through a quaternion based error. To achieve good tracking performance,
the control law includes model-based compensation of the system dynamics.
An adaptive estimate of the model parameters is provided, since they are
uncertain and slowly varying.
Given the dynamic equations in matrix form (2.71)–(2.73):
M(q)˙ζ + C(q, ζ)ζ + D(q, ζ)ζ + g(q, RI
B) = Φ(q, RB
I , ζ, ˙ζ)θ = Bu ,
the control law is
u = B†[KDs	 + Φ(q, RB
I , ζ, ζr, ˙ζr)ˆθ] ,
(7.22)
with the update law given by
˙ˆθ = K−1
θ ΦT(q, RB
I , ζ, ζr, ˙ζr)s ,
(7.23)
where B† is the pseudoinverse of matrix B, Kθ > O and Φ is the system
regressor deﬁned in (2.73). The vectors s	 ∈R(6+n)×1 and s ∈R(6+n)×1 are
deﬁned as follows
s	=


˜ν1
˜ν2˙˜q

+
%
Λ + K−1
D KP
)


BRI ˜η1
˜ε
˜q

= ˜ζ +
%
Λ + K−1
D KP
) ˜y, (7.24)
s = ˜ζ + Λ˜y ,
(7.25)
with ˜η1 = [ xd −x
yd −y
zd −z ]T, ˜q = qd−q, ˜ν1 = ν1,d−ν1, ˙˜q = ˙qd−˙q,
where the subscript d denotes desired values for the relevant variables.
Λ is deﬁned as Λ = blockdiag{λpI3, λoI3, Λq} with Λq ∈Rn×n, Λ > O.
KP is deﬁned as KP = blockdiag{kpI3, koI3, Kq}, with Kq ∈Rn×n, KP >
O. Kq and Λq must be deﬁned so as KqΛq > O. Finally, it is ζr = ζd + Λ˜y
and KD > O.
7.7.1 Stability Analysis
In this Section it will be shown that the control law (7.22)–(7.23) is stable in
a Lyapunov-Like sense. Let deﬁne the following partition for the variable s
that will be useful later:
s =


sp
so
sq


(7.26)
with sp ∈R3, so ∈R3, sq ∈Rn respectively.

7.7 Adaptive Control
159
Let us consider the scalar function
V = 1
2sTM(q)s + 1
2
˜θ
TKθ˜θ +
+1
2


˜η1
˜z
˜q


T 

kpI3
O3×4
O3×n
O4×3
2koI4
O4×n
On×3
On×4
Kq




˜η1
˜z
˜q


(7.27)
where ˜z = [ 1
0T ]T −z = [ 1 −˜η
−˜εT ]T. V ≥0 in view of positive
deﬁniteness of M(q), Kθ, kp, ko and Kq.
Diﬀerentiating V with respect to time yields
˙V = 1
2sT ˙Ms + sTM ˙s + ˜θ
TKθ ˙˜θ +
+kp˜ηT
1 RI
B ˜ν1 −2ko˜zTJk,oq(z)˜ν2 + ˜qTKq ˙˜q .
(7.28)
Observing that, in view of (7.25) and (7.26) it is
˜ν1 = sp −λpRB
I ˜η1,
(7.29)
˜ν2 = so −λo˜ε,
(7.30)
˙˜q = sq −Λq˜q,
(7.31)
and taking into account (2.71), (2.16), (7.29)–(7.31), and the skew-symmetry
of
˙M −2C, (7.28) can be rewritten as
˙V = −sTDs −˜θ
TKθ ˙ˆθ + sT[M ˙ζr −Bu + C(ζ)ζr + D(ζ)ζr + g] +
+kp˜ηT
1 RI
Bsp −kpλp˜ηT
1 ˜η1 + ko˜εTso −λoko˜εT˜ε +
˜qTKqsq −˜qTKqΛq˜q
(7.32)
where ˙˜θ = −˙ˆθ was assumed, i.e., the dynamic parameters are constant or
slowly varying.
Exploiting (2.73), (7.32) can be rewritten in compact form:
˙V = −


˜η1
˜ε
˜q


T 

kpλpI3
O3×3
O3×n
O3×3
koλoI3
O3×n
On×3
On×3
KqΛq




˜η1
˜ε
˜q

+
+sT 
Φ(q, RB
I , ζ, ζr, ˙ζr)θ −Bu + KP ˜y

−sTDs −˜θ
TKθ ˙ˆθ . (7.33)
Plugging the control law (7.22)–(7.23) into (7.33), one ﬁnally obtains:
˙V = −˜yTK	˜y −sT (KD + D) s
that is negative semi-deﬁnite over the state space {˜y, s, ˜θ}.
It is now possible to prove the system stability in a Lyapunov-Like sense
using the Barb˘alat’s Lemma. Since V is lower bounded, ˙V (˜y, s, ˜θ) ≤0 and
˙V (˜y, s, ˜θ) is uniformly continuous then ˙V (˜y, s, ˜θ) →0 as t →∞. Thus
˜y, s →0 as t →∞. However it is not possible to prove asymptotic stability
of the state, since ˜θ is only guaranteed to be bounded.

160
7. Dynamic Control of UVMSs
7.7.2 Simulations
By considering the same UVMS as the previous Section, numerical simulati-
ons have been performed to test the discussed control law.
The full simulated model includes a large number of dynamic parame-
ters, thus the symbolic regressor Φ ∈R(6+n)×nθ has a complex expression.
While the simulation is performed via the Newton-Euler based algorithm to
overcome this complexity, the control law requires the expression of the sym-
bolic regressor. Practical implementation of (7.22)–(7.23), then, might beneﬁt
from some simpliﬁcations. Considering that the vehicle is usually kept still
during the manipulator motion it is ﬁrst proposed to decouple the vehicle
and manipulator dynamics in the regressor computation. The only coupling
eﬀect considered is the vehicle orientation in the manipulator restoring ef-
fects. Further, it is possible to simplify the hydrodynamic eﬀects taking a
linear and a quadratic velocity dependent term for each degree of freedom.
In this reduced form the vehicle regressor is the same as if it was with-
out manipulator. On the other hand the manipulator regressor is the ground
ﬁxed regressor, except for the computation of the restoring forces in which
the vehicle orientation cannot be omitted; this means that a reduced set of
dynamic parameters has been obtained. In this simulation the vehicle para-
meter vector is ˆθv ∈Rnθ,v with nθ,v = 23, the manipulator parameter vector
is ˆθm ∈Rnθ,m with nθ,m = 13; it can be recognized that nθ,v + nθ,m  nθ.
The regressor implemented in the control law (7.22)–(7.23) has then the
form:
Φ(q, RB
I , ζ, ζr, ˙ζr) =
 Φv(RB
I , ν, ζr,v, ˙ζr,v)
O6×13
O2×23
Φm(q, RB
I , ˙q, ζr,m, ˙ζr,m)

where Φv ∈R6×23 is the vehicle regressor and Φm ∈R2×13 is the manipu-
lator regressor. The corresponding parameter vector is ˆθ = [ ˆθ
T
v
ˆθ
T
m ]T. The
vectors ζr,v and ζr,m are the vehicle and manipulator components of ζ.
In the simulation the initial value of ˆθ is aﬀected by an error greater then
the 50% of the true value. The control law parameters are
Λ = blockdiag{0.5I3, 0.5I3, 3, 2} ,
KD = 1000I8 ,
KP = 100I8 .
˙˜y is computed by a ﬁltered numerical time derivative:
˙˜yk = α ˙˜yk−1 + (1 −α) ˜yk −˜yk−2
2∆T
,
with ∆T being the simulation sampling time.
A station keeping task for the system in the initial conﬁguration was
considered
ηi = [ 0
0
0
0
0
0 ]T m, rad ,
qi =
 π
4
π
6
T
rad .

7.7 Adaptive Control
161
The vehicle must be then kept still, i.e., ηd = ηi, while moving the manipu-
lator arm to the desired ﬁnal conﬁguration qf = [ 0
0 ]T rad according to a
5th order polynomial. The trajectory is executed two twice without resetting
the parameter update.
It should be noted that, if the vehicle orientation trajectory was assigned
in terms of Euler angles, these should be converted into the corresponding
rotation matrix so as to extract the quaternion expressing the orientation
error from the rotation matrix computed as described in Subsection 2.2.3.
Remarkably, this procedure is free of singularities.
The obtained simulation results are reported in Figures 7.8–7.10 in terms
of the time histories of the vehicle position, the vehicle control forces, the
vehicle attitude expressed by Euler angles, the vehicle moments, the mani-
pulator joint errors, and the manipulator joint torques, respectively.
0
50
100
150
−0.05
0
0.05
time [s]
[m]
x
y
z
0
50
100
150
−600
−400
−200
0
200
tim
N
X
Y
Z
Fig. 7.8. Adaptive control. Left: vehicle positions. Right: vehicle control forces
Figure 7.8 shows that, as expected, the vehicle position is aﬀected by
the manipulator motion. The main displacement is observed along z; this is
due to the intentional large initial error in the restoring force compensation.
However, the displacements are small and the target position is recovered
after a transient. It can be recognized that at steady state the force along z is
non null; this happens because the manipulator is not neutrally buoyant. The
mismatching in the initial restoring force compensation is recovered by the
update of the parameter estimation. The manipulator weight is not included
in the vehicle regressor, nevertheless it is compensated as a gravitational
vehicle parameter and a null steady state error is obtained.
Figure 7.9 shows that the dynamic coupling is mostly experienced along
the roll direction because of the chosen UVMS structure. This eﬀect was
intentional in order to test the control robustness. It can be recognized that
vehicle control moments are zero at steady state; this happens because the
center of gravity and the center of buoyancy of vehicle body and manipulator
links are all aligned with the z-axis of the earth-ﬁxed frame at the ﬁnal system
conﬁguration.

162
7. Dynamic Control of UVMSs
0
50
100
150
200
−4
−2
0
2
4
time [s]
[deg]
φ
0
50
100
150
200
0
200
400
600
tim
Nm
K
Fig. 7.9. Adaptive control. Left: vehicle attitude in terms of Euler angles. Right:
vehicle control moments
0
20
40
60
80
100
−1.5
−1
−0.5
0
0.5
1
1.5
time [s]
[deg]
q1
q2
0
20
40
60
80
100
0
100
200
300
400
τq,1
τq,2
Fig. 7.10. Adaptive control. Left: joint position errors. Right: joint control torques
Figure 7.10 shows the time histories of manipulator joint errors and tor-
ques. It is worth noting that the initial value of the joint torques is non null
because of gravity and buoyancy compensation, while they are null at steady
state in view of the particular ﬁnal system conﬁguration. The large initial
joint error is due to mismatching in the restoring torques compensation; the
integral action provided by the parameters update gives a null steady state
error.
Figure 7.11 ﬁnally shows a performance comparison between (7.22)–(7.23)
with and without adaptation. Remarkably at the very beginning of the tra-
jectory both control laws perform the same error; afterward the adaptive
controller provides a signiﬁcant error reduction.
7.8 Output Feedback Control
Underwater vehicles are typically equipped with acoustic sensors or video
systems for position measurements, while the vehicle attitude can be obtained

7.8 Output Feedback Control
163
0
20
40
60
80
100
0
0.5
1
1.5
2
2.5
3
time [s]
[deg]
with adaptation
without adaptation
Fig. 7.11. Adaptive control. Comparison between adaptive and PD + dynamic
compensation in terms of joint position error absolute values
from gyroscopic sensors and/or compasses. Velocity measurements are usually
obtained from sensors based on the Doppler eﬀect.
In the case of underwater vehicles operating close to oﬀ-shore structu-
res, position and orientation measurements are fairly accurate, while velocity
measurements are poor, especially during slow maneuvers. Hence, it is worth
devising algorithms for position and attitude control that do not require di-
rect velocity feedback.
A nonlinear observer for vehicle velocity and acceleration has been propo-
sed in [125, 129], although a combined controller-observer design procedure is
not developed. On the other hand, a passivity-based control law is proposed
in [193], where the velocities are reconstructed via a lead ﬁlter; however, this
control scheme achieves only regulation of position and orientation variables
for an underwater vehicle-manipulator system.
In this Section, the problem of output feedback tracking control of UVMSs
is addressed. The output of the controlled system is represented by the po-
sition and the attitude of the vehicle, together with the position of the ma-
nipulator’s joints. Remarkably, the unit quaternion is used to express the
orientation of a vehicle-ﬁxed frame so as to avoid representation singularities
when expressing the vehicle attitude.
The new control law here discussed is inspired by the work in [45] in that
a model-based control law is designed together with a nonlinear observer for
velocity estimation; the two structures are tuned to each other in order to
achieve exponential convergence to zero of both motion tracking and estima-
tion errors. It must be remarked that diﬀerently from the work in [45], where
a simple time-derivative relates position and velocity variables at the joints,
in the control problem considered in this Chapter, a nonlinear mapping exists
between orientation variables (unit quaternion) and angular velocity of the

164
7. Dynamic Control of UVMSs
vehicle; this makes the extension of the previous approach to our case not
straightforward.
As a matter of fact, the use of numerical diﬀerentiation of noisy posi-
tion/orientation measurements may lead to chattering of the control inputs,
and thus to high energy consumption and reduced lifetime of the actuators.
Moreover, low-pass ﬁltering of the numerically reconstructed velocities may
signiﬁcantly degrade the system’s dynamic behavior and, eventually, aﬀect
the closed-loop stability. In other words, such a ﬁlter has to be designed to-
gether with the controller so as to preserve closed-loop stability and good
tracking performance.
This is the basic idea which inspired the approach described in the fol-
lowing: namely, a nonlinear ﬁlter (observer) on the position and attitude
measures is designed together with a model-based controller so as to achieve
exponential stability and ensure tracking of the desired position and attitude
trajectories.
A Lyapunov stability analysis is developed to establish suﬃcient conditi-
ons on the control and observer parameters ensuring exponential convergence
of tracking and estimation errors.
In view of the limited computational power available in real-time digital
control hardware, simpliﬁed control laws are suggested aimed at suitably
trading-oﬀtracking performance against reduced computational load. Also,
the problem of evaluating some dynamic compensation terms, to be properly
estimated, is addressed.
A simulation case study is carried out to demonstrate practical applica-
tion of the discussed control scheme to the experimental vehicle NPS AUV
Phoenix [145]. The obtained performance is compared to that achieved with a
control scheme in which velocity is reconstructed via numerical diﬀerentiation
of position measurements.
Controller-observer scheme. The desired position for the vehicle is assig-
ned in terms of the vector η1,d(t), while the commanded attitude trajectory
can be assigned in terms of the rotation matrix RI
B,d(t) expressing the orien-
tation of the desired vehicle frame Σd with respect to Σi. Equivalently, the
desired orientation can be expressed in terms of the unit quaternion Qd(t)
corresponding to RI
B,d(t). Finally, the desired joint motion is assigned in
terms of the vector of joint variables qd(t).
The desired velocity vectors are denoted by ˙η1,d(t), νI
2,d(t), and ˙qd(t),
while the desired accelerations are assigned in terms of the vectors ¨η1,d(t),
˙νI
2,d(t), and ¨qd(t).
Notice that all the desired quantities are naturally assigned with respect
to the earth-ﬁxed frame Σi; the corresponding position and velocity in the
vehicle-ﬁxed frame Σb are computed as
ηB
1,d = RB
I η1,d,
ζd =


RB
I ˙η1,d
RB
I νI
2,d
˙qd

=


ν1,d
ν2,d
˙qd

.

7.8 Output Feedback Control
165
It is worth pointing out that the computation of the desired acceleration
˙ζd requires knowledge of the actual angular velocity ν2; in fact, in view of
˙R
B
I = −S(ν2)RB
I , it is
˙ζd =


RB
I ¨η1,d −S(ν2)ν1,d
RB
I ˙νI
2,d −S(ν2)ν2,d
¨qd

.
Hence, it is convenient to use in the control law the modiﬁed acceleration
vector deﬁned as
ad =


RB
I ¨η1,d −S(ν2,d)ν1,d
RB
I ˙νI
2,d −S(ν2,d)ν2,d
¨qd

,
which can be evaluated without using the actual velocity; the two vectors are
related by the equality
˙ζd = ad + SP O(.ν2,d)ζd ,
where SP O(·) = blockdiag{S(·), S(·), On×n}, and .ν2,d = ν2,d −ν2.
Hereafter it is assumed that 
ζd(t)
 ≤ζdM for all t ≥0.
A tracking control law is naturally based on the tracking error
ed =


.ηB
1,d
.εd
.qd

,
(7.34)
where .ηB
1,d = ηB
1,d −ηB
1 , .qd = qd −q and .εd is the vector part of the unit
quaternion .Qd = Q−1 ∗Qd.
It must be noticed that a derivative control action based on (7.34) would
require velocity measurements in the control loop. In the absence of velocity
measurements, a suitable estimate ζe of the velocity vector has to be consi-
dered. Let also ηB
1,e and Qe denote the estimated position and attitude of the
vehicle, respectively; the estimated joint variables are denoted by qe. Hence,
the following error vector has to be considered
ede =


.ηB
1,de
.εe
de
.qde

,
(7.35)
where .ηB
1,de = ηB
1,d −ηB
1,e, .qde = qd −qe, and .εe
de is the vector part of the
unit quaternion .Qde = Q−1
e
∗Qd.
In order to avoid direct velocity feedback, the corresponding velocity error
can be deﬁned as
.ζde =


RB
I ˙.η1,de −S(ν2,d).ηB
1,de
˙.ε
e
de
˙.qde

,

166
7. Dynamic Control of UVMSs
which is related to the time derivative of ede as follows
˙ede = .ζde + SP (.ν2,d)ede ,
where SP (·) = blockdiag{S(·), O3, On×n}.
In order to design an observer providing velocity estimates, the estimation
error has to be considered
ee =


.ηB
1,e
.εe
.qe

,
where .ηB
1,e = ηB
1,e −ηB
1 , .qe = qe −q, and .εe is the vector part of the unit
quaternion .Qe = Q−1 ∗Qe.
Finally, consider the vectors
ζr = ζd + Λdede
(7.36)
ζo = ζe + Λeee.
(7.37)
where Λd = blockdiag{ΛdP , λdOI3, ΛdQ}, Λe = blockdiag{ΛeP , λeOI3, ΛeQ}
are diagonal and positive deﬁnite matrices. It is worth remarking that ζr and
ζo can be evaluated without using the actual velocity ζ.
Let us recall the dynamic equations in matrix form (2.71):
M(q)˙ζ + C(q, ζ)ζ + D(q, ζ)ζ + g(q, RI
B) = Bu,
(2.71)
the control law is
u = B† 
M(q)ar + C(q, ζo)ζr + Kv(ζr −ζo) +
+Kped + g(q, RI
B) + 1
2D(q, ζr)(ζr + ζo)

,
(7.38)
where Kp = blockdiag{kpP I3, kpOI3, KpQ} is a diagonal positive deﬁnite
matrix and Kv is a symmetric positive deﬁnite matrix. The reference acce-
leration vector ar is deﬁned as
ar = ad + Λd.ζde ,
(7.39)
and thus the control law (7.38) does not require feedback of the vehicle and/or
manipulator velocities.
The estimated velocity vector ζe is obtained via the observer deﬁned by
the equations:







˙z
=
M(q)ar −
%
Lp + LvA( .Qe)Λe
)
ee + Kped+
C(q, ζo)ζr + CT(q, ζr)ζo
ζe
=
M −1(q) (z −Lvee) −Λeee,
(7.40)

7.8 Output Feedback Control
167
where the matrix Lp = blockdiag{lpP I3, lpOI3, LpQ} is diagonal positive
deﬁnite. The matrix Lv = blockdiag{LvP , lvOI3, LvQ} is symmetric and po-
sitive deﬁnite, and
A( .Qe) = blockdiag

I3, E( .Qe)/2, In

.
The estimated quantities η1,e and qe are computed by integrating the cor-
responding estimated velocities ˙η1,e = RI
Bν1,e and ˙qe, respectively, whereas
the estimated orientation Qe is computed from the estimated angular velocity
νI
2,e = RI
Bν2,e via the quaternion propagation rule.
Implementation issues. Implementation of the above controller-observer
scheme (7.38),(7.40), requires computation of the dynamic compensation
terms. While this can be done quite eﬀectively for the terms related to rigid
body dynamics, the terms related to hydrodynamic eﬀects are usually aﬀec-
ted by some degree of approximation and/or uncertainty. Besides the use of
adaptive control schemes aimed at on-line estimation of relevant model pa-
rameters, e.g. [22, 197, 314], it is important to have an estimate of the main
hydrodynamic coeﬃcients.
An estimate of the added mass coeﬃcients can be obtained via strip
theory [127]. A rough approximation of the hydrodynamic damping is ob-
tained by considering only the linear skin friction and the drag generalized
forces.
Another important point concerns the computational complexity associa-
ted with dynamic compensation against the limited computing power typi-
cally available on board. This might suggest the adoption of a control law
computationally lighter than the one derived above. A reasonable compro-
mise between tracking performance and computational burden is achieved
if the compensation of Coriolis, centripetal and damping terms is omitted
resulting in the controller
u = B†%
M(q)ar + Kv(ζr −ζo) + Kped + g(q, RI
B)
)
,
(7.41)
with the simpliﬁed observer

˙z = M(q)ar −
%
Lp + LvA( .Qe)Λe
)
ee + Kped
ζ = M −1(q) (z −Lvee) −Λeee,
(7.42)
The computational load can be further reduced if a suitable constant
diagonal inertia matrix  
M is used in lieu of the matrix M(q), i.e.,
u = B†% 
Mar + Kv(ζr −ζo) + Kped + g(q, RI
B)
)
,
(7.43)
with the observer

˙z =  
Mar −
%
Lp + LvA( .Qe)Λe
)
ee + Kped
ζ =  
M
−1 (z −Lvee) −Λeee ,
(7.44)

168
7. Dynamic Control of UVMSs
Table 7.3 shows the computational load of each control law, in terms of
required ﬂoating point operations, in the case of a 6-DOF vehicle equipped
with a 3-DOF manipulator. Where required, inversion of the inertia matrix
has been obtained via the Cholesky factorization since M(q) is symmetric
and positive deﬁnite; of course, the inverse of the constant matrix  
M is com-
puted once oﬀ-line. As shown by the results in Table 7.3, the computational
load is reduced by about 80% when the control law (7.43),(7.44) is considered.
Table 7.3. Computational burden for diﬀerent output feedback controllers
mult/div
add/sub
Control law (7.38),(7.40)
1831
1220
Control law (7.41),(7.42)
1216
849
Control law (7.43),(7.44)
354
147
7.8.1 Stability Analysis
In order to derive the closed-loop dynamic equations, it is useful to deﬁne
the variables
σd = ζr −ζ = .ζd + Λdede
(7.45)
σe = ζo −ζ = .ζe + Λeee ,
(7.46)
where
.ζd = ζd −ζ
(7.47)
.ζe = ζe −ζ .
(7.48)
Combining (2.71) with the control law (7.38), (7.39), and using the equa-
lity
ar = ˙ζr + SP O(.ν2,d)ζd + ΛdSP (.ν2,d)ede ,
the tracking error dynamics can be derived
M(q) ˙σd + C(q, ζ)σd + Kvσd −Kped = Kvσe −C(q, σe)ζr +
−M(q)SP O(.ν2,d)ζd −M(q)ΛdSP (.ν2,d)ede +
D(q, ζ)ζ −1
2D(q, ζr)(ζr + ζo) .
(7.49)
The observer equation (7.40), together with (7.49), yields the estimation
error dynamics
M(q) ˙σe +
#
LvA( .Qe) −Kv
'
σe −Lpee = −Kvσd −C(q, ζ)σe+

7.8 Output Feedback Control
169
CT(q, σd)ζo + D(q, ζ)ζ −1
2D(q, ζr)(ζr + ζo) .
(7.50)
A state vector for the closed-loop system (7.49),(7.50) is then
x =


σd
ed
σe
ee

.
Notice that perfect tracking of the desired motion together with exact esti-
mate of the system velocities results in x = 0. Therefore, the control objective
is fulﬁlled if the closed loop system (7.49), (7.50) is asymptotically stable at
the origin of its state space. This is ensured by the following theorem:
Theorem. There exists a choice of the controller gains Kp, Kv, Λd and of
the observer parameters Lp, Lv, Λe such that the origin of the state space of
system (7.49),(7.50) is locally exponentially stable.
Consider the positive deﬁnite Lyapunov function candidate
V = 1
2σT
d M(q)σd + 1
2σT
e M(q)σe +
+1
2kpP .ηBT
1,d .ηB
1,d + kpO
#
(1 −.ηd)2 + .εT
d .εd
'
+ 1
2.qT
d KpQ.qd +
+1
2lpP .ηBT
1,e .ηB
1,e + lpO
#
(1 −.ηe)2 + .εT
e .εe
'
+ 1
2.qT
e LpQ.qe .
(7.51)
The time derivative of V along the trajectories of the closed-loop system
(7.49),(7.50) is given by
˙V = −σT
d Kvσd −eT
deΛdKped −eT
e ΛeLpee +
−σT
e
#
LvA( .Qe) −Kv
'
σe −σT
d C(q, σe)ζr +
−σT
e C(q, ζ)σe + σT
e CT(q, σd)ζo +
+(σd + σe)TD(q, ζ)ζ + −1
2(σd + σe)TD(q, ζr)(ζr + ζo) +
−σT
d M(q)SP O(.ν2,d)ζd −σT
d M(q)ΛdSP (.ν2,d)ede .
(7.52)
In the following it is assumed that .ηd > 0, .ηe > 0; in view of the angle/axis
interpretation of the unit quaternion, the above assumption corresponds to
considering orientation errors characterized by angular displacements in the
range ] −π, π[.
From the equality .Qde = .Q−1
e
∗.Qd, the following equality follows
.εeT
de .εd = .ηe.εT
d .εd −.ηd.εT
d .εe ,
where .ηd and .ηe are the scalar parts of the quaternions .Qd and .Qe, respec-
tively. The above equation, in view of .ηB
1,de = .ηB
1,d −.ηB
1,e and .qde = .qd −.qe,
implies that

170
7. Dynamic Control of UVMSs
eT
deΛdKped = kpP .ηBT
1,d ΛdP .ηB
1,d + λdOkpO.ηe 
.εd
2 + .qT
d ΛdQKpQ.qd +
−kpP .ηBT
1,d ΛdP .ηB
1,e −λdOkpO.ηd.εT
d .εe + .qT
d ΛdQKpQ.qe ,
and thus
eT
deΛdKped ≥λmin(ΛdKp).ηe 
ed
2 −λmax(ΛdKp) 
ed
 
ee
 ,
(7.53)
where λmin(ΛdKp) (λmax(ΛdKp)) is the minimum (maximum) eigenvalue
of the matrix ΛdKp. Moreover, in view of the block diagonal structure of
the matrix Lv and of the skew-symmetry of the matrix S(·), the following
inequality holds
σT
e LvA( .Qe)σe ≥1
2λmin(Λv).ηe 
σe
2 ,
(7.54)
where λmin(Λv) is the minimum eigenvalue of the matrix Λv.
Moreover, the following two terms in (7.52) can be rewritten as:
(σd + σe)TD(q, ζ)ζ −1
2(σd + σe)TD(q, ζr)(ζr + ζo) =
−1
2(σd + σe)TD(q, ζ)(σd + σe) +
−1
2(σd + σe)T(D(q, ζr) −D(q, ζ))(ζr + ζo) .
(7.55)
In view of the properties of the model (2.71) and equations (7.45), (7.46),
(7.53), (7.54), by taking into account that ζ = ζd −.ζd with 
ζd
 ≤ζdM and

ede
 ≤
ed
 + 
ee
, the function ˙V can be upper bounded as follows
˙V = −λmin(Kv) 
σd
2 −λmin(ΛdKp).ηe 
ed
2 −λmin(Λv)
2
.ηe 
σe
2 +
+λmax(Kv) 
σd
2 −λmin(Lp) 
ee
2 + λmax(ΛdKp) 
ed
 
ee
 +
+CM 
σd
 
σe
#
2
000.ζd
000 + 2ζdM + 
σd
 + 
σe
'
+
+CM 
σe
2 #000.ζd
000 + ζdM
'
+
+DM
2 (
σd
2 + 
σd
 
σe
)(2
000.ζd
000 + 2ζdM + 
σd
 + 
σe
) +
+λmax(M) 
σd
000.ζd
000 (ζdM + λmax(Λd)(
ed
 + 
ee
))
(7.56)
where λmin(Kv) (λmax(Kv)) denotes the minimum (maximum) eigenvalue
of the matrix Kv, λmin(Lp) denotes the minimum eigenvalue of Lp and
λmax(Λd) denotes the maximum eigenvalue of the matrix Λd.
Consider the state space domain deﬁned as follows
Bρ = {x : 
x
 < ρ, ρ < 1} ,

7.8 Output Feedback Control
171
with .ηd > 0, .ηe > 0. It can be recognized that in the domain Bρ the following
inequalities hold
0 <
+
1 −ρ2 < .ηe < 1,
(7.57)
000.ζd
000 = 
σd −Λdede
 ≤(1 + 2λmax(Λd))ρ.
(7.58)
By completing the squares in (7.56) and using (7.57),(7.58), it can be
shown that there exists a scalar κ > 0 such that
˙V ≤−κ 
x
2
(7.59)
in the domain Bρ, provided that the controller and observer parameters sa-
tisfy the inequalities
λmin(Kv) > α1
&
CM + 3DM
2
*
+ α2λmax(M)(1 + λmax(Λd))
λmin(ΛdKp) > α2λmax(M)λmax(Λd)
+
1 −ρ2
,
λmin(Lp) > max

α2λmax(M)λmax(Λd),
λmax(ΛdKp)2
λmin(ΛdKp)
+
1 −ρ2

,
λmin(Λv) >
2
+
1 −ρ2
&
λmax(Kv) + (2α1 + ρ)CM + α1DM
2
*
where α1 = 2(1 + λmax(Λd))ρ + ζdM and α2 = ζdM + 2λmax(Λd)ρ.
Therefore, given a domain Bρ characterized by any ρ < 1, there always
exists a set of observer and controller gains such that ˙V ≤0 in Bρ. Moreover,
for .ηd ≥0, .ηe ≥0 the following inequality holds
0 ≤(1 −.ηd)2 ≤(1 −.ηd)(1 + .ηd) = 
.εd
2 ,
and a similar inequality can be written in terms of .ηe and .εe. Hence, function
V can be bounded as
cm 
x
2 ≤V (x) ≤cM 
x
2 ,
(7.60)
with
cm = 1
2 min{λmin(M), λmin(Kp), λmin(Lp)}
cM = 1
2 max{λmax(M), 4λmax(Kp), 4λmax(Lp)} ,
where λmin(Kp) (λmax(Kp)) is the minimum (maximum) eigenvalue of the
matrix Kp, λmax(Lp) is the maximum eigenvalue of the matrix Lp.
Since V (t) is a decreasing function along the system trajectories, the
inequality (7.60) guarantees that, for a given 0 < ρ < 1, all the trajectories
x(t) starting in the domain
Ωρ =
	
x : 
x
 < ρ
, cm
cM

,

172
7. Dynamic Control of UVMSs
remain in the domain Bρ for all t > 0 provided that .ηd(t) > 0, .ηe(t) > 0 for
all t > 0. The latter condition is fulﬁlled when .ηd(0) and .ηe(0) are positive;
in fact, 
.εd
 < ρ < 1 and 
.εe
 < ρ < 1 for all t > 0 implies that .ηd(t) and
.ηe(t) cannot change their sign.
Moreover, from (7.59) and (7.60), the convergence in the domain Bρ is
exponential [170], which implies exponential convergence of ed, ee, .ζd and
.ζe.
The condition ρ < 1 is due to the unit norm constraint on the quater-
nion components, and gives a rather conservative estimate of the domain of
attraction. However, it must be pointed out that this limitation arises when
spheres are used to estimate the domain of attraction; better estimates can
be obtained by using domain of diﬀerent shapes, e.g. ellipsoids.
7.8.2 Simulations
As for the previous sections, numerical simulations have been performed re-
sorting to the simulator described in [23]. To test this control law, however,
a diﬀerent manipulator has been considered. A three-link manipulator with
elbow kinematic structure has been simulated that is mounted under the ve-
hicle body. Since the vehicle is neutrally buoyant, but the arm is not neutrally
buoyant, the whole system results to be not neutrally buoyant. The 3 links
are cylindrical, thus hydrodynamic eﬀects can be computed by simpliﬁed re-
lations as in [255]. Matrix B is supposed to be constant and full-rank (for
simplicity it has been set to identity), meaning that direct control of forces
and moments acting on the vehicle and joint torques is available.
A task involving motion of both the vehicle and the manipulator has
been considered. At the initial time, the initial vehicle conﬁguration is
ηi
=
[ 0
0
0.1
15
0
−15 ]T m,deg and the initial manipulator con-
ﬁguration is qi = [ 20
−30
40 ]T deg. The vehicle must move to the ﬁnal
location ηf = [ 0
0
0
0
0
0 ]T m, deg in 20 s according to a 5th order
polynomial time law. The manipulator must move to qf = [ 0
0
0 ]T deg
in 3 s according to a 5th order polynomial time law. Notice that the assigned
trajectories correspond to a fast desired motion for the manipulator while the
vehicle is kept almost in hovering. Figure 7.12 shows the desired trajectories.
It must be noticed that the vehicle orientation set point is assigned in terms
of Euler angles, as usual in navigation planning; these are converted into the
corresponding rotation matrix so as to extract the quaternion expressing the
orientation error. Remarkably, this procedure is free of singularities [261].
First case study. The performance of the control law (7.41),(7.42) has
been compared to that obtained with a control scheme of similar structure in
which the velocity feedback is implemented through numerical diﬀerentiation
of position measurements. The following control law has then been considered
u = B† #
M(q)˙ζr + C(q, ζ)ζr + Kv(ζr −ζ) + Kped + g(q, RI
B)
'
, (7.61)

7.8 Output Feedback Control
173
0
5
10
15
20
−0.1
−0.05
0
0.05
0.1
0
5
10
15
20
−20
−10
0
10
20
0
5
10
15
20
−40
−20
0
20
40
time [s]
time [s]
time [s]
[m]
[deg]
[deg]
z
φ
θ
ψ
q1
q2
q3
Fig. 7.12. Output feedback control. Desired trajectories used in the case studies.
Top: vehicle position; Middle: vehicle orientation (RPY angles); Bottom: joint po-
sitions
where ζr = ζd + Λded. The vectors ˙ζ and ˙ζr are computed via ﬁrst-order
diﬀerence. The above control law is analogous to the operational space control
law proposed in [266] and extended in [108] in the framework of quaternion-
based attitude control. To obtain a control law of computational complexity
similar to that of (7.41), the algorithm (7.61) has been modiﬁed into the
simpler form
u = B† #
M(q)˙ζr + Kv(ζr −ζ) + Kped + g(q, RI
B)
'
.
(7.62)
The parameters in the control laws are set to
Λd = blockdiag{0.005I3, 0.01I3, 0.01I3} ,
Λe = blockdiag{5I3, 10I3, 10, 10, 5} ,

174
7. Dynamic Control of UVMSs
Lv = blockdiag{I3, 20I3, 160, 160, 900} ,
Lp = blockdiag{5000I3, 105I3, 103, 103, 2 · 103} ,
Kp = blockdiag{400I3, 500I3, 1500I3} ,
Kv = blockdiag{4000I3, 4000I3, 400I3} .
A digital implementation of the control laws has been considered. The
sensor update rate is 100 Hz for the joint positions and 20 Hz for the vehicle
position and orientation, while the control inputs to the actuators are updated
at 100 Hz, i.e., the control law is computed every 10 ms. The relatively high
update rate for the vehicle position and orientation measurements has been
chosen so as to achieve a satisfactory tracking accuracy.
Quantization eﬀects have been introduced in the simulation by assuming
a 16-bit A/D converter on the sensors outputs. Also, Gaussian zero-mean
noise has been added to the signals coming from the sensors.
Figure 7.13 shows the time history of the norm of the tracking and esti-
mation errors obtained with the control laws (7.41),(7.42) and (7.62), respec-
tively.
Figures 7.14 to 7.16 show the corresponding control forces, moments and
torques. It can be recognized that good tracking is achieved in both cases,
although the performance in terms of tracking errors is slightly better for the
control law (7.62), where numerical derivatives are used. On the other hand,
the presence of measurement noise and quantization eﬀects results in chatte-
ring of the control commands to the actuators; this is much lower when the
control law (7.41),(7.42) is adopted, as compared to control law (7.62). An in-
dicator of the energy consumption due to the chattering at steady state is the
variance of the control commands reported in Table 7.4 for each component;
this data clearly show the advantage of using the controller-observer scheme.
Of course, the improvement becomes clear when the noise and quantization
eﬀects are larger than a certain threshold. The derivation of such a threshold
would require a stochastic analysis of a nonlinear system, which is beyond
the scope of the present work. Moreover, it can be easily recognized that such
a bound is strongly dependent on the characteristics of the actuators.
Second case study. In this case study the same task as above is executed
by adopting the control law (7.43),(7.44) and its counterpart using numerical
diﬀerentiation of the measured position/orientation, i.e.,
u = B† #
 
M ˙ζr + Kv(ζr −ζ) + Kped + g(q, RI
B)
'
,
(7.63)
where the same parameters as in the previous case study have been used. Also,
the same measurement update rates, quantization resolution and sensory
noise have been considered in the simulation.
The results are shown in Figure 7.17 in terms of tracking and estimation
errors. It can be recognized that the errors are comparable to those obtained
with the control scheme (7.41),(7.42) in spite of the extremely simpliﬁed con-

7.8 Output Feedback Control
175
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
1
2
3
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
1
2
3
time [s]
time [s]
time [s]
time [s]
time [s]
time [s]
[m]
[m]
[-]
[-]
[deg]
[deg]
Fig. 7.13. Output feedback control; ﬁrst case study. Comparison between the con-
trol laws (7.41),(7.42) and (7.62): norm of the tracking (solid) and estimation (das-
hed) errors. Left: control law (7.41),(7.42). Right: control law (7.62). Top: vehicle
position error; Middle: vehicle orientation error (vector part of the quaternion);
Bottom: joint position errors
Table 7.4. Variance of control commands
Control law (7.41),(7.42)
Control law (7.62)
X [N2]
0.0149
14.6326
Y [N2]
0.0077
11.4734
Z [N2]
0.0187
3.0139
K [N2m2]
0.2142
10.6119
M [N2m2]
2.8156
23.2798
N [N2m2]
1.6192
26.0350
τq,1 [N2m2]
0.3432
4.0455
τq,2 [N2m2]
0.0725
3.2652
τq,3 [N2m2]
0.3393
1.8259

176
7. Dynamic Control of UVMSs
0
10
20
30
40
50
60
−30
−20
−10
0
10
20
0
10
20
30
40
50
60
−40
−20
0
20
40
0
10
20
30
40
50
60
−200
−100
0
100
0
10
20
30
40
50
60
−30
−20
−10
0
10
20
0
10
20
30
40
50
60
−40
−20
0
20
40
0
10
20
30
40
50
60
−200
−100
0
100
time [s]
time [s]
time [s]
time [s]
time [s]
time [s]
[N]
[N]
[N]
[N]
[N]
[N]
X
X
Y
Y
Z
Z
Fig.
7.14.
Output feedback control; ﬁrst case study. Comparison between
the control laws (7.41),(7.42) and (7.62): vehicle control forces. Left: control
law (7.41),(7.42). Right: control law (7.62)
trol structure; also, the control inputs remain free of chattering phenomena
and are not reported for brevity.
The tracking performance obtained with the simpliﬁed control law con-
ﬁrms that the controller-observer approach is intrinsically robust with respect
to uncertain knowledge of the system’s dynamics, thanks to the exponential
stability property. Hence, perfect compensation of inertia, Coriolis and cen-
tripetal terms, as well as of hydrodynamic damping terms, is not required.
Third case study. The control laws (7.43),(7.44) and (7.63) have been
tested in more severe operating conditions. Namely, the update rate for the
vehicle position/orientation measurements has been lowered to 5 Hz and the
A/D word length has been set to 12 bit for all the sensor output signals.
Gaussian zero-mean noise is still added to the measures. The parameters in
the control laws are the same as in the previous case studies.
Figure 7.18 shows a small degradation of the tracking performance for
both the control schemes. In fact, the tracking errors remain of the same
order of magnitude as in the previous case studies, because the computing
rate of the control law is unchanged (100 Hz). Namely, the update rate of

7.8 Output Feedback Control
177
0
10
20
30
40
50
60
−500
0
500
0
10
20
30
40
50
60
−150
−100
−50
0
50
0
10
20
30
40
50
60
−100
−50
0
50
100
0
10
20
30
40
50
60
−500
0
500
0
10
20
30
40
50
60
−150
−100
−50
0
50
0
10
20
30
40
50
60
−100
−50
0
50
100
time [s]
time [s]
time [s]
time [s]
time [s]
time [s]
[Nm]
[Nm]
[Nm]
[Nm]
[Nm]
[Nm]
K
K
M
M
N
N
Fig. 7.15. Output feedback control; ﬁrst case study. Comparison between the
control laws (7.41),(7.42) and (7.62): vehicle control moments. Left: control
law (7.41),(7.42); Right: control law (7.62)
the measurements relative to the subsystem with faster dynamics (i.e., the
manipulator) remains the same (100 Hz), while the update rate of the measu-
rements relative to the vehicle (5 Hz) is still adequate to its slower dynamics.
Figures 7.19 to 7.21 show the corresponding control forces, moments and
torques. It can be recognized that unacceptable chattering on the control
inputs is experienced when numerical derivatives are used, which is almost
completely cancelled when the controller-observer scheme is adopted.

178
7. Dynamic Control of UVMSs
0
10
20
30
40
50
60
−50
0
50
0
10
20
30
40
50
60
250
300
350
0
10
20
30
40
50
60
70
80
90
100
110
120
0
10
20
30
40
50
60
−50
0
50
0
10
20
30
40
50
60
250
300
350
0
10
20
30
40
50
60
70
80
90
100
110
120
time [s]
time [s]
time [s]
time [s]
time [s]
time [s]
[Nm]
[Nm]
[Nm]
[Nm]
[Nm]
[Nm]
τq,1
τq,1
τq,2
τq,2
τq,3
τq,3
Fig.
7.16.
Output feedback control; ﬁrst case study. Comparison between
the control laws (7.41),(7.42) and (7.62): joint control torques. Left: control
law (7.41),(7.42); Right: control law (7.62)

7.8 Output Feedback Control
179
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
1
2
3
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
1
2
3
time [s]
time [s]
time [s]
time [s]
time [s]
time [s]
[m]
[m]
[deg]
[deg]
[-]
[-]
Fig. 7.17. Output feedback control; second case study. Comparison between the
control laws (7.43),(7.44) and (7.63): norm of the tracking (solid) and estimation
(dashed) errors. Top: vehicle position error; Middle: vehicle orientation error (vector
part of the quaternion); Bottom: joint position errors

180
7. Dynamic Control of UVMSs
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
1
2
3
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
2
4
6
8
10
x 10
−3
0
10
20
30
40
50
60
0
1
2
3
time [s]
time [s]
time [s]
time [s]
time [s]
time [s]
[m]
[m]
[deg]
[deg]
[-]
[-]
Fig. 7.18. Output feedback control; third case study. Comparison between the
control laws (7.43),(7.44) and (7.63): norm of the tracking (solid) and estimation
(dashed) errors. Left: control law (7.43),(7.44). Right: control law (7.63). Top: ve-
hicle position error; Middle: vehicle orientation error (vector part of the quaternion);
Bottom: joint position errors

7.9 Virtual Decomposition Based Control
181
0
10
20
30
40
50
60
−20
0
20
0
10
20
30
40
50
60
−60
−40
−20
0
20
40
0
10
20
30
40
50
60
−200
−100
0
100
0
10
20
30
40
50
60
−20
0
20
0
10
20
30
40
50
60
−60
−40
−20
0
20
40
0
10
20
30
40
50
60
−200
−100
0
100
time [s]
time [s]
time [s]
time [s]
time [s]
time [s]
[N]
[N]
[N]
[N]
[N]
[N]
X
X
Y
Y
Z
Z
Fig. 7.19. Output feedback control; third case study. Comparison between
the control laws (7.43),(7.44) and (7.63): vehicle control forces. Left: control
law (7.43),(7.44). Right: control law (7.63)
7.9 Virtual Decomposition Based Control
Divide et Impera.
Anonymous from the middle age.
Usually, adaptive control approaches for UVMSs look at the system as a
whole, giving rise to high-dimensional problems: diﬀerently from the case of
earth-ﬁxed manipulators, in the case of UVMSs it is not possible to achieve
a reduction of the number of dynamic parameters to be adapted, since the
base of the manipulator —i.e., the vehicle— has full mobility. As a matter of
fact, the computational load of such control algorithms grows as much as the
fourth-order power of the number of the system’s degrees of freedom. For this
reason, practical application of adaptive control to UVMS has been limited,
even in simulation, to vehicles carrying arms with very few joints (i.e., two
or three) and usually performing planar tasks.
In this Section an adaptive control scheme for the tracking problem of
UVMS is discussed, which is based on the approach in [325]. Diﬀerently
from previously proposed schemes, the serial-chain structure of the UVMS

182
7. Dynamic Control of UVMSs
0
10
20
30
40
50
60
−500
0
500
0
10
20
30
40
50
60
−150
−100
−50
0
50
0
10
20
30
40
50
60
−100
−50
0
50
100
0
10
20
30
40
50
60
−500
0
500
0
10
20
30
40
50
60
−150
−100
−50
0
50
0
10
20
30
40
50
60
−100
−50
0
50
100
time [s]
time [s]
time [s]
time [s]
time [s]
time [s]
[Nm]
[Nm]
[Nm]
[Nm]
[Nm]
[Nm]
K
K
M
M
N
N
Fig. 7.20. Output feedback control; third case study. Comparison between
the control laws (7.43),(7.44) and (7.63): vehicle control moments. Left: control
law (7.43),(7.44). Right: control law (7.63)
is exploited to decompose the overall motion control problem in a set of ele-
mentary control problems regarding the motion of each rigid body in the
system, namely the manipulator’s links and the vehicle. For each body, a
control action is designed to assign the desired motion, to adaptively com-
pensate for the body dynamics, and to counteract force/moment exchanged
with its neighborhoods along the chain.
The resulting control scheme has a modular structure which greatly sim-
pliﬁes its application to systems with a large number of links; furthermore, it
reduces the required computational burden by replacing one high-dimensional
problem with many low-dimensional ones; ﬁnally it allows eﬃcient imple-
mentation on distributed computing architecture; it can be embedded in a
kinematic control scheme, which allows handling of kinematic redundancy,
i.e., to achieve joint limits avoidance and dexterity optimization; ﬁnally, it
reduces the size of the control software code and improves its ﬂexibility, i.e.,
its structure is not modiﬁed by changing the system’s mechanical structure.
Remarkably, the control law is expressed in terms of body-ﬁxed coordi-
nates so as to overcome the occurrence of kinematic singularities. Moreo-
ver, a non-minimal representation of the orientation —i.e., the unit quater-

7.9 Virtual Decomposition Based Control
183
0
10
20
30
40
50
60
−50
0
50
0
10
20
30
40
50
60
250
300
350
0
10
20
30
40
50
60
40
60
80
100
120
140
0
10
20
30
40
50
60
−50
0
50
0
10
20
30
40
50
60
250
300
350
0
10
20
30
40
50
60
40
60
80
100
120
140
[s]
[s]
[s]
[s]
[s]
[s]
[Nm]
[Nm]
[Nm]
[Nm]
[Nm]
[Nm]
τq,1
τq,1
τq,2
τq,2
τq,3
τq,3
Fig. 7.21. Output feedback control; third case study. Comparison between
the control laws (7.43),(7.44) and (7.63): joint control torques. Left: control
law (7.43),(7.44). Right: control law (7.63)
nion [246]— is used in the control law; this allows overcoming the occurrence
of representation singularities.
The discussed control scheme is tested in a numerical case study. A ma-
nipulation task is assigned in terms of a desired position and orientation
trajectory for the end eﬀector of a 6-DOF manipulator mounted on a 6-DOF
vehicle. Then, the system’s behavior under the discussed control law is veri-
ﬁed in simulation.
Control law. The dynamics of an UVMS is rewritten in a way to remark
the interaction between the diﬀerent rigid bodies, i.e., between the links and
between links and the vehicle. Consider an UVMS composed of a vehicle and
of a n-DOF manipulator mounted on it.
The vehicle and the manipulator’s links are assumed to be rigid bodies
numbered from 0 (the vehicle) to n (the last link, i.e., the end eﬀector). Hence,
the whole system can be regarded as an open kinematic chain with ﬂoating
base.
A reference frame Ti is attached to each body according to the Denavit-
Hartenberg formalism, while Σi is the earth-ﬁxed inertial reference frame.

184
7. Dynamic Control of UVMSs
Hereafter, a superscript will denote the frame to which a vector is referred
to, the superscript will be dropped for quantities referred to the inertial frame.
Notice that some diﬀerences may arise in the symbology of the vehicle’s
variables due to the diﬀerent approach followed in this Section. Coherently
with the virtual decomposition approach, the vehicle is considered as link
number 0.
The (6 × 1) vector of the total generalized force (i.e., force and moment)
acting on the ith body is given by
hi
t,i = hi
i −U i
i+1hi+1
i+1,
i = 0, . . . , n −1
hn
t,n = hn
n ,
(7.64)
where hi
i is the generalized force exerted by body i−1 on body i, hi+1
i+1 is the
generalized force exerted by body i + 1 on body i. The matrix U i
i+1 ∈IR6×6
is deﬁned as
U i
i+1 =

Ri
i+1
O3×3
S(ri
i,i+1)Ri
i+1
Ri
i+1

.
where Ri
i+1 ∈IR3×3 is the rotation matrix from frame Ti+1 to frame Ti,
S(·) is the matrix operator performing the cross product between two (3×1)
vectors, and ri
i,i+1 is the vector pointing from the origin of Ti to the origin
of Ti+1.
The equations of motion of each rigid body can be written in body-ﬁxed
reference frame in the form [314, 127]:
M i ˙νi
i + Ci(νi
i)νi
i + Di(νi
i)νi
i + gi(Ri) = hi
t,i ,
(7.65)
where νi
i ∈IR6 is the vector of generalized velocity (i.e., linear and angular
velocities deﬁned in Section 2.8), Ri is the rotation matrix expressing the
orientation of Ti with respect to the inertial reference frame, M i ∈IR6×6,
Ci(νi
i)νi
i ∈IR6, Di(νi
i)νi
i ∈IR6 and gi(Ri) ∈IR6 are the quantities intro-
duced in (2.51) referred to the generic rigid body. In Chap. 2, the details on
the dynamics of a rigid body moving in a ﬂuid are given.
According to the property of linearity in the parameters (7.65) can be
rewritten as:
Y (Ri, νi
i, ˙νi
i)θi = hi
t,i
where θi is the vector of dynamic parameters of the ith rigid body. Notice
that, for the vehicle, i.e., for the body numbered as 0, the latter is exac-
tly (2.54); only for this Section, however, the notation of the vehicle forces
and regressor will be slightly diﬀerent from the rest of the book.
The input torque τq,i at the ith joint of the manipulator can be obtained
by projecting hi on the corresponding joint axis via
τq,i = ziT
i−1hi
i ,
(7.66)
where zi
i−1 = RT
i zi−1 is the z-axis of the frame Ti−1 expressed in the frame
Ti.

7.9 Virtual Decomposition Based Control
185
The input force and moment acting on vehicle are instead given by the
vector h0
t,0. Notice that this vector was introduced in Section 2.6 with the
symbol τ v, in this Section, however, it was preferred to modify the notation
consistently with the serial chain formulation adopted here.
Let pd,o(t), Qd,0(t), qd(t), ν0
d,0(t), ˙qd(t), ˙ν0
d,0(t), ¨qd(t) represent the desi-
red trajectory. Let deﬁne
ν0
r,0 = ν0
d,0 +

λp,0I3
O3
O3
λo,0I3

e0,
(7.67)
˙qr,i = ˙qd,i + λi˜qi
i = 1, . . . , n
(7.68)
νi+1
r,i+1 = U iT
i+1νi
r,i + ˙qr,i+1zi+1
i
i = 0, . . . , n −1 ,
(7.69)
where the (6 × 1) vector
e0 =

RT
0 ˜p0
˜ε0
0

denotes position and orientation errors for the vehicle, λp,0, λo,0, λi are posi-
tive design gains.
It is useful considering the following variables:
si
i = νi
r,i −νi
i
i = 0, . . . , n
sq,i = ˙qr,i −˙qi
i = 1, . . . , n
sq = [sq,1 . . . sq,n]T
The discussed control law is based on the computation of the required
generalized force for each rigid body in the system. Then, the input torques for
the manipulator and the input generalized force for the vehicle are computed
from the required forces according to (7.64) and (7.66).
In the following it is assumed that only a nominal estimate ˆθi of the vector
of dynamic parameters is available for the ith rigid body. Hence, a suitable
update law for the estimates has to be adopted so as to ensure asymptotic
tracking of the desired trajectory.
For the generic rigid body (including the vehicle) the required force has
the following structure
hi
r,i = hi
c,i −U i
i+1hi+1
c,i+1
that, including the designed required force, implies
hi
c,i = Y
%
Ri, νi
i, νi
r,i, ˙νi
r,i
) ˆθi + Kv,isi
i + U i
i+1hi+1
c,i+1
(7.70)
with Kv,i > O. The parameters estimate ˆθi is dynamically updated via
˙ˆθi = K−1
θ,i Y T %
Ri, νi
i, νi
r,i, ˙νi
r,i
)
si
i
(7.71)
with Kθ,i > O.
The control torque at the ith manipulator’s joint is given by
τq,i = zi
i−1
Thi
c,i .
(7.72)

186
7. Dynamic Control of UVMSs
Finally, the generalized force for the vehicle needed to achieve the correspon-
ding required force is computed as
h0
c,0 = h0
r,0 + U 0
1h1
c,1 .
7.9.1 Stability Analysis
In this Section, the stability analysis for the discussed control law is provided.
Let consider the following scalar function
Vi(si
i, ˜θi) = 1
2si
i
TM isi
i + 1
2
˜θ
T
i Kθ,i˜θi .
(7.73)
The scalar Vi(si
i, ˜θi) > 0 in view of positive deﬁniteness of M i and Kθ,i.
By diﬀerentiating Vi with respect to time yields
˙Vi = si
i
TM i( ˙νi
r,i −˙νi
i) −˜θ
T
i Kθ,i ˙ˆθi ,
where the parameters was considered constant or slowly varying, i.e.,
˙˜θi = −˙ˆθi .
Taking into account the equations of motions (7.65), and considering the
vector ni = Ci(νi
i)νi
r,i + Di(νi
i)νi
r,i + gi
i(Ri) it is:
˙Vi = −si
i
TDi(νi
i)si
i + si
i
T %
M i ˙νi
r,i + ni(νi
i, νi
r,i, Ri) −hi
t,i
)
−˜θ
T
i Kθ ˙ˆθi .
By adding and subtracting the term si
i
Thi
c,i, where hi
c,i is the control law as
introduced in (7.70), and by exploiting the linearity in the parameters, the
previous equation can be rewritten as
˙Vi = −si
i
TDisi
i + si
i
T #
Y iθi −hi
t,i −Y iˆθi −Kv,isi
i −U i
i+1hi+1
c,i+1
'
+
−˜θ
T
i Kθ,i ˙ˆθi + si
i
Thi
c,i,
where Y i = Y (Ri, νi
i, νi
r,i, ˙νi
r,i) and Di = Di(νi
i).
By rearranging the terms one obtains:
˙Vi = −si
i
T(Kv,i + Di)si
i + si
i
T #
Y i˜θi −hi
t,i + hi
r,i
'
−˜θ
T
i Kθ,i ˙ˆθi ,
that, taking the update law for the dynamic parameters (7.71), ﬁnally gives
˙Vi = −si
i
T(Kv,i + Di)si
i + si
i
T˜h
i
t,i ,
(7.74)
where ˜h
i
t,i = hi
r,i−hi
t,i. Equation (7.74) does not have any signiﬁcant property
with respect to its sign.
The Lyapunov candidate function for the UVMS is given by
V (s0
0, . . . , sn
n, ˜θ0, . . . , ˜θn) =
n
-
i=0
Vi(si
i, ˜θi) ,

7.9 Virtual Decomposition Based Control
187
that is positive deﬁnite in view of positive deﬁnitiveness of Vi, i = 0, . . . , n.
Its time derivative is simply given by the time derivatives of all the scalar
functions:
˙V =
n
-
i=0

−si
i
T(Kv,i + Di)si
i + si
i
T˜h
i
t,i

,
where the last term is null. In fact, let us consider the two equations:
hi
t,i = hi
i −U i
i+1hi+1
i+1 ,
νi+1
i+1 = U iT
i+1νi
i + ˙qi+1zi+1
i
it is possible to observe that the same relationships hold for ˜h
i
t,i and si
i:
˜h
i
t,i = ˜h
i
i −U i
i+1˜h
i+1
i+1 ,
si+1
i+1 = U iT
i+1si
i + sq,i+1zi+1
i
.
where ˜h
i
i = hi
c,i −hi
i. Recalling that τ = JT
whe, the last term of the time
derivative of the Lyapunov function candidate is then given by:
n
-
i=0
si
i
T˜h
i
t,i = s0
0
T˜h
0
0 +
n
-
i=1
sq,izi
i−1
T˜h
i
i
= s0
0
T˜h
0
0 +
n
-
i=1
sq,i˜τq,i
= s0
0
T˜h
0
0 + sT
q ˜τ q
=

s0
0
sq
T
JT
w ˜he
= 0
(7.75)
since, in absence of contact at the end eﬀector, ˜he = 0. To understand the
ﬁrst equality let rewrite the ﬁrst term for two consecutive links:
si
i
T˜h
i
t,i + si+1
i+1
T˜h
i+1
t,i+1 = (U i−1
i
Tsi−1
i−1 + sq,izi
i−1)T˜h
i
i −si
i
TU i
i+1˜h
i+1
i+1 +
(U i
i+1
Tsi
i + sq,i+1zi+1
i
)T˜h
i+1
i+1 −si+1
i+1
TU i+1
i+2˜h
i+2
i+2
= (U i−1
i
Tsi−1
i−1 + sq,izi
i−1)T˜h
i
i +
(sq,i+1zi+1
i
)T˜h
i+1
i+1 −si+1
i+1
TU i+1
i+2˜h
i+2
i+2,
that, considering that the ﬁrst and the last term are null for the ﬁrst and the
last rigid body respectively, gives the relation required in (7.75).
It is now possible to prove the system stability in a Lyapunov-Like sense
using the Barb˘alat’s Lemma. Since
• V (s0
0, . . . , sn
n, ˜θ0, . . . , ˜θn) is lower bounded;

188
7. Dynamic Control of UVMSs
• ˙V ≤0;
• ˙V is uniformly continuous.
then
• ˙V →0 as t →∞.
Thus s0
0, . . . , sn
n →0 as t →∞. Due to the recursive deﬁnition of the vec-
tors si
i, the position errors converge to the null value as well. In fact, the
vector s0
0 →0 implies ν0
0 →0 and e0 →0 (λp,0 > 0 and λo,0 > 0). Moreo-
ver, since the rotation matrix has full rank, the vehicle position error ˜η1 too
decreases to the null value. Convergence to zero of si
i directly implies conver-
gence to zero of sq,1, . . . , sq,n; consequently, ˙˜q →0 and ˜q →0. As usual in
adaptive control technique, it is not possible to prove asymptotic stability of
the whole state, since ˜θi is only guaranteed to be bounded.
Remarks.
• Achieving null error of n + 1 rigid bodies with 6-DOF with only 6 + n
inputs is physically coherent since the control law is computed by taking
into account the kinematic constraints of the system.
• In [325] the control law performs an implicit kinematic inversion. This
approach requires to work with a 6-DOF robot for the stability analysis of
a position/orientation control of the end eﬀector. In case of a redundant
robot, the Authors suggest the implementation of an augmented Jacobian
approach in order to have a square Jacobian to work with. However, the
possible occurrence of algorithmic singularities is not avoided (see also
Section 6.2). On the other hand, if the kinematic control is kept separate
from the dynamic loop, as in the discussed approach, it is possible to
use inverse kinematic techniques robust to the occurrence of algorithmic
singularities.
7.9.2 Simulations
Dynamic simulations have been performed to show the eﬀectiveness of the di-
scussed control law based on the simulation tool described in [23]. The vehicle
data are taken from [145] and are referred to the experimental Autonomous
Underwater Vehicle NPS Phoenix. For simulation purposes, a six-degree-of-
freedom manipulator with large inertia has been considered which is mounted
under the vehicle’s body. The manipulator structure and the dynamic para-
meters are those of the Smart-3S manufactured by COMAU. Its weight is
about 5% of the vehicle weight, its length is about 2 m stretched while the
vehicle is 5 m long. The overall structure, thus, has 12 degrees of freedom.
The relevant physical parameters of the system are reported in Table 7.5.
Notice one of the features of the controller: by changing the manipulator
does not imply redesigning the control but it simply modiﬁes the Denavit-
Hartenberg table and the initial estimate of the dynamic parameters. As a

7.9 Virtual Decomposition Based Control
189
Table 7.5. Masses, vehicle length and Denavit-Hartenberg parameters [m,rad] of
the manipulator mounted on the underwater vehicle
mass (kg)
length (m)
a
d
θ
α
vehicle
5454
5.3
-
-
-
-
link 1
80
-
0.150
0
q1
−π/2
link 2
80
-
0.610
0
q2
0
link 3
30
-
0.110
0
q3
−π/2
link 4
50
-
0
0.610
q4
π/2
link 5
20
-
0
−0.113
q5
−π/2
link 6
25
-
0
0.103
q6
0
matter of fact, the code would be exactly the same, just reading the para-
meters’ values from diﬀerent data ﬁles, with obvious advantages for software
debugging and maintenance.
Notice, that, for all the simulations the following conditions have been
considered:
• full degrees-of-freedom dynamic simulations;
• detailed mathematical model used in the simulation;
• inaccurate initial parameters estimates used by the controller (about 15%
for each parameter);
• reduced order regressor used in the control law;
• digital implementation of the control law (at a sampling rate of 200 Hz);
• quantization of the sensor outputs and measurement noise.
The only signiﬁcant simpliﬁcation is the neglect of the thruster dynamics that
causes limit cycle in the vehicle behavior [300]. It is worth remarking that the
adaptive control law uses a reduced number of dynamic parameters for each
body: body mass and mass of displaced ﬂuid (1 parameter), ﬁrst moment
of gravity and buoyancy (3 parameters). Those are the parameters that, in
absence of current, can aﬀect a steady state error. Thus, each vector ˆθi is
composed of 4 elements. In Chapter 3, a detailed analysis of adaptive/integral
actions in presence of the ocean current is discussed.
The desired end-eﬀector trajectory is a straight line the projection of
which on the inertial axis is a segment of 0.2 m. The line has to be executed
four times, with duration of the single trial of 4 s with a 5th order polynomial
time law. Then, 14 s of rest are imposed. The attitude of the end eﬀector
must be kept constant during the motion.
The initial conﬁguration is (see Figure 7.22):
η = [ 0
0
0
0
0
0 ]T
m, deg
q = [ 0
180
0
0
90
180 ]T deg

190
7. Dynamic Control of UVMSs
Fig. 7.22. Virtual decomposition control. Sketch of the initial conﬁguration of the
system and trace of the desired path
The redundancy of the system is used to keep still the vehicle. Notice,
that this choice is aimed only at simplifying the analysis of the discussed
controller. More complex secondary tasks can easily be given with the inverse
kinematics algorithm [20, 24, 25].
The control law parameters are:
λp,0
= 0.4
λo,0
= 0.6
λi
= 0.9
i = 1, . . . , n
Kv,0 = blockdiag {15000I3, 16000I3}
Kv,i = blockdiag {900I3, 1100I3}
i = 1, . . . , n
Kθ,0 = 14I4
Kθ,i = 21I4
i = 1, . . . , n

7.9 Virtual Decomposition Based Control
191
Figures 7.23 and 7.24 report the time history of the end-eﬀector position
and orientation errors. It can be noted that, since the trajectory is repeated
4 times in the ﬁrst 16 seconds, after a large initial error, the adaptive action
can signiﬁcantly reduce the tracking error. At steady state the errors tend to
zero.
0
10
20
30
−0.1
−0.05
0
0.05
0.1
˜xe
˜ye
˜ze
time [s]
e.e. position error [m]
Fig. 7.23. Virtual decomposition control. Time history of the end-eﬀector position
error. The periodic desired trajectory makes it clear the advantage of the adaptive
action
0
10
20
30
−1
−0.5
0
0.5
1
˜θe
˜ψe
˜φe
time [s]
e.e. orientation error [deg]
Fig. 7.24. Virtual decomposition control. Time history of the end-eﬀector attitude
error in terms of Euler angles

192
7. Dynamic Control of UVMSs
In Figure 7.25 the time history of the vehicle position is reported. It can
be noted that the main tracking error is observed along z. This is due to
the fact that the vehicle is not neutrally buoyant and at the beginning the
estimation of the restoring forces has to wait for the adaptation of the control
law. This can be observed also from Figure 7.26, where the time history of
the vehicle linear forces is reported. Since, the manipulator is not neutrally
buoyant, a large force is experienced along the z-axis at rest.
0
10
20
30
−0.1
−0.05
0
0.05
0.1
x
y
z
time [s]
vehicle position [m]
Fig. 7.25. Virtual decomposition control. Time history of the vehicle position
0
10
20
30
−1500
−1000
−500
0
z
x
y
time [s]
vehicle forces [N]
Fig. 7.26. Virtual decomposition control. Time history of the vehicle linear forces
In Figure 7.27 the time history of the vehicle attitude in terms of Euler
angles is shown. It can be noted that the main tracking error is observed along

7.9 Virtual Decomposition Based Control
193
the vehicle pitch angle θ. The manipulator, in fact, interacts with the vehicle
mainly in this direction. Also, Figure 7.28 shows the time history of the vehicle
moments; notice the large initial overestimate due to the intentional wrong
model compensation. Also, being the manipulator not neutrally buoyant, a
large moment is experienced along the y-axis at rest.
0
10
20
30
−4
−2
0
2
4
θ
ψ
φ
time [s]
vehicle orientation [deg]
Fig. 7.27. Virtual decomposition control. Time history of the vehicle attitude in
terms of Euler angles
0
10
20
30
−1200
−1000
−800
−600
−400
−200
0
200
y
x
z
vehicle moments [Nm]
time [s]
Fig. 7.28. Virtual decomposition control. Time history of the vehicle moments
Figure 7.29 shows the time history of the joint errors. Those are computed
with respect to the desired joint positions as output from the inverse kine-

194
7. Dynamic Control of UVMSs
matics algorithm. The errors are quite large since the aim of the simulation
was to show the beneﬁt of the adaptive action in a virtual decomposition ap-
proach. The end-eﬀector errors are the composition of all the tracking errors
along the structure; the manipulator, characterized by smaller inertia and
higher precision with respect to the vehicle, will be in charge of compensa-
ting for the eﬀects of the vehicle tracking errors on the end-eﬀector. For this
speciﬁc simulation, thus, the end-eﬀector tracking error is comparable with
the vehicle position/orientation tracking error.
0
10
20
30
−5
0
5
time [s]
joint errors [deg]
Fig. 7.29. Virtual decomposition control. Time history of the joint errors
In Figure 7.30 the time history of the joint torques is reported. Notice, that
only the torque of the second joint is mainly aﬀected by the manipulator re-
storing forces. At the very beginning the restoring compensation (≈200 Nm)
presents a large diﬀerence with respect to the ﬁnal value (≈500 Nm) corre-
sponding to the same conﬁguration due to the error in the parameter esti-
mation.
7.9.3 Virtual Decomposition with the Proper Adapting Action
In the previous section, an adaptive control law in which the serial-chain
structure of the UVMS is exploited is discussed. The overall motion control
problem is decomposed in a set of elementary control problems regarding the
motion of each rigid body in the system, namely the manipulator’s links and
the vehicle. For each body, a control action is designed to assign the desired
motion, to adaptively compensate for the body dynamics, and to counteract
force/moment exchanged with its neighborhoods along the chain.
On the other hand, in Chapter 3 it is shown, that, for a single rigid body, a
suitable regressor-based adaptive control law (the mixed earth/vehicle-ﬁxed-

7.9 Virtual Decomposition Based Control
195
0
10
20
30
−600
−400
−200
0
200
time [s]
τq2
τq3
τq1, τq4, τq5, τq6
joint torques [Nm]
Fig. 7.30. Virtual decomposition control. Time history of the joint torques
frame-based, model-based controller presented in Section 3.6) gets improve-
ment in the tracking error by considering the proper adaptation on the sole
persistent terms, i.e., the current and the restoring forces. It is worth noticing
that the rigid bodies of the manipulator are subject to a fast dynamics and
thus the eﬀects numerically shown in Chapter 3 for a single rigid body (the
vehicle) are magniﬁed for a fast movement of one of the arm.
It is advisable, thus, to merge these two approaches as done by G. Antonelli
et al. in [15] in order to get beneﬁt from both of them. The resulting control
scheme has a modular structure which greatly simpliﬁes its application to
systems with a large number of links; furthermore, it reduces the required
computational burden by replacing one high-dimensional problem with many
low-dimensional ones, ﬁnally allows eﬃcient implementation on distributed
computing architectures.
Numerical simulations have been performed to show the eﬀectiveness of
the discussed control law with the same model used for the virtual decompo-
sition approach; the simulation, thus, uses ≈400 dynamic parameters. The
overall number of parameters of the controller is 9 ∗(n + 1) = 63. Moreo-
ver, the software to implement the controller is modular, the same function
is used to compensate for all the rigid bodies, either the vehicle or links of
the manipulator, with diﬀerent parameters as inputs. This makes easier the
debugging procedure.
The desired end-eﬀector path is a straight line with length of 35 cm, to be
executed 4 times according to a 5th order polynomial time law; the duration
of each cycle is 4 s. The desired end-eﬀector orientation is constant along the
commanded path. The vehicle is commanded to keep its initial position and
orientation during the task execution. Therefore, the inverse kinematics is
needed to compute the sole joint vectors qd(t), ˙qd(t) and ¨qd(t) in real time,

196
7. Dynamic Control of UVMSs
and thus only the inverse of the (6 × 6) manipulator Jacobian Jm is required
in the inverse kinematics algorithm.
A constant ocean current aﬀect the motion with the following components:
νI
c = [ 0.1
0.3
0
0
0
0 ]T
m/s .
As reported in [14, 13], some of the parameters of the controllers are rela-
ted to the knowledge of the mass and the ﬁrst moment of gravity/buoyancy.
Their initial estimate are set so as to give an estimation error larger then
20% of the true values. The other parameters are related to the presence of
the current. Those, will be initialized to the null value.
The control law parameters have been set to:
Λ0 = blockdiag{0.4I3, 0.6I3} ,
Λi=1,6 = blockdiag{0.9I3, 0.9I3} ,
Kv,0 = blockdiag{9100I3, 9800I3} ,
Kv,i=1,6 = blockdiag{600I3, 800I3} ,
Kθ,0 = 100I9 ,
Kθ,i=1,6 = 40I9 ,
where I9 is the (9 × 9) identity matrix.
The results are reported in Figures 7.31–7.32 in terms of end-eﬀector
position/orientation tracking errors; it can be recognized that, in spite of the
demanding task commanded to the system, the errors are kept small in the
transients and reach zero values at steady state.
0
10
20
30
−0.1
−0.05
0
0.05
0.1
time [s]
e.e. position error [m]
x
y
z
Fig. 7.31. Virtual decomposition control + proper adaptive action. End-eﬀector
position error
Moreover, the results in Figures 7.33–7.35 show that the control force
and moments acting on the vehicle, as well as the control torques applied

7.9 Virtual Decomposition Based Control
197
0
10
20
30
−2
−1
0
1
2
time [s]
e.e. orientation error [deg]
φ
θ
ψ
Fig. 7.32. Virtual decomposition control + proper adaptive action. End-eﬀector
orientation error
at the manipulator’s joints, are kept limited along all the trajectory and are
characterized by a smooth proﬁle. It is worth noticing that, at the beginning
of the task, the controller is not aware of the presence of the current; a
compensation can be observed mainly along the x and y vehicle linear forces
and moments.
0
10
20
30
−1000
−800
−600
−400
−200
0
200
time [s]
vehicle forces [N]
X
Y
Z
Fig. 7.33. Virtual decomposition control + proper adaptive action. Vehicle control
forces
In Figures 7.36–7.38, the vehicle position and orientation and the joint
tracking errors are reported. The tracking errors along the yaw direction can

198
7. Dynamic Control of UVMSs
0
10
20
30
−500
0
500
time [s]
vehicle moments [Nm]
K
M
N
Fig. 7.34. Virtual decomposition control + proper adaptive action. Vehicle control
moments
0
10
20
30
−600
−400
−200
0
200
time [s]
τq1
τq2
τq3
joint torques [Nm]
Fig. 7.35. Virtual decomposition control + proper adaptive action. Joint control
torques
be motivated by the eﬀect of the current, its value is decreasing to the null
value according to the control gains.
7.10 Conclusions
In this Chapter an overview of possible control strategies for UVMSs has
been presented. In view of these ﬁrst, preliminary, results, it can be observed
that the simple translation of control strategies developed for industrial ro-
botics is not possible. The reason can be found both in the diﬀerent technical
characteristics of actuating/sensing system and in the diﬀerent nature of the

7.10 Conclusions
199
0
10
20
30
−0.1
−0.05
0
0.05
0.1
time [s]
vehicle position [m]
x
y
z
Fig. 7.36. Virtual decomposition control + proper adaptive action. Vehicle position
0
10
20
30
−4
−2
0
2
4
time [s]
vehicle orientation [deg]
φ
θ
ψ
Fig. 7.37. Virtual decomposition control + proper adaptive action. Vehicle orien-
tation
forces that act on a submerged body. As shown in Chapter 3, neglecting the
physical nature of these forces can cause the controller to feed the system
with a disturbance rather than a proper control action.
At the same time, an UVMS is a complex system, neglecting the com-
putational aspect can lead the designer to develop a controller for which the
tuning and wet-test phase might be unpractical. Starting from the simulation
phase it might be appropriate to test simpliﬁed version of the controllers.
Among the control strategies analyzed the Virtual Decomposition ap-
proach, merged with the proper adaptation action, has several appealing
characteristic: it is adaptive in the dynamic parameters; it is based on a
Newton-Euler formulation that keep limited the computational burden; it is

200
7. Dynamic Control of UVMSs
0
10
20
30
−5
0
5
time [s]
joint errors [deg]
Fig. 7.38. Virtual decomposition control + proper adaptive action. Joint position
errors
compatible with kinematic control strategies; it avoids representation singu-
larities; it is modular, thus simplifying the software debugging and mainten-
ance.
Motion control of UVMSs was addressed in literature in several papers.
However, few experimental set-up exist which can perform autonomous ve-
hicle/manipulator control.
The next step in understanding and evaluating the eﬃciency and relia-
bility of the diﬀerent approaches passes necessarily through the practical
implementation of such algorithms.
In this sense, because of the symbolic analogy, numerical simulation ana-
lysis only can conﬁrm the results already obtained in industrial robotics. It
is obvious, on the other hand, that a rigorous numerical simulation of all the
subsystems of the UVMSs (sensors, thrusters, interaction, ecc.), is crucial to
tune the control law parameters before starting wet tests.

8. Interaction Control of UVMSs
8.1 Introduction to Interaction Control of Robots
In view of the development of an underwater vehicle able to perform a com-
pletely autonomous mission the capability of the vehicle to interact with
the environment by the use of a manipulator is of greatest interest. To this
aim, control of the force exchanged with the environment must be properly
investigated.
Underwater Vehicle-Manipulator Systems are complex systems characte-
rized by several strong constraints that must be taken into account when
designing a force control scheme:
• Uncertainty in the model knowledge, mainly due to the poor description
of the hydrodynamic eﬀects;
• Complexity of the mathematical model;
• Structural redundancy of the system;
• Diﬃculty to control the vehicle in hovering, mainly due to the poor thru-
sters performance;
• Dynamic coupling between vehicle and manipulator;
• Low sensors’ bandwidth.
Limiting our attention to elastically compliant, frictionless environments
several control schemes have been proposed in the literature. An overview of
interaction control schemes can be found, e.g., in [70, 303].
Stiﬀness control is obtained by adopting a suitable position control
scheme when in contact with the environment [248]. In this case, it is not
possible to give a reference force value; instead, a desired stiﬀness attitude
of the tip of the manipulator is assigned. Force and position at steady state
depend on the relative compliance between the environment and the mani-
pulator.
Impedance control allows to achieve the behavior of a given mechanical
impedance at the end eﬀector rather than a simple compliance attitude [149].
In this case, while it is not possible to give a reference force value, the force
measure at the end eﬀector is required to achieve a decoupled behavior.
To allow the implementation of a control scheme that fulﬁlls contact force
regulation one should rather consider direct force control [302]. This can be
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 201–223, 2006.
© Springer-Verlag Berlin Heidelberg 2006

202
8. Interaction Control of UVMSs
eﬀectively obtained by closing an external force feedback loop around a po-
sition/velocity feedback loop [101], since the output of the force controller
becomes the reference input to the standard motion controller of the mani-
pulator.
Nevertheless, many manipulation tasks require simultaneous control of
both the end-eﬀector position and the contact force. This in turn demands
exact knowledge of the environment geometry: the force reference, in fact,
must be consistent with the contact constraints [202].
A ﬁrst strategy is the hybrid force/position control [239]: the force and
position controllers are structurally decoupled according to the analysis of
the geometric constraints to be satisﬁed during the task execution. These
control schemes require a detailed knowledge of the environment geometry,
and therefore are unsuitable for use in poorly structured environments and
for handling the occurrence of unplanned impacts.
To overcome this problem, the parallel force/position control can be ad-
opted [79]. In this case, position and force loops are closed in all task-space
directions, while structural properties of the controller ensure that a properly
assigned force reference value is reached at steady state. Since the two loops
are not decoupled, a drawback of parallel control is the mutual disturbance
of position and force variables during the transient.
Most force control schemes proposed in the literature do not take into
account the possible presence of kinematic redundancy in the robotic sy-
stem, which is always the case of UVMSs. Reference [171] presents a uniﬁed
approach for motion and force control, extending the formulation to kinemati-
cally redundant manipulators. Reference [226] proposes two control schemes,
the extended hybrid control and the extended impedance control, and some
experimental results for a 3-link manipulator are provided. In [172] the Ope-
rational Space Formulation is experimentally applied to a coordinated task
of two mobile manipulators. Reference [213] presents an hybrid force con-
trol, in which redundancy is used together with the dynamically consistent
pseudo-inverse. Reference [219] proposes an extended hybrid impedance con-
trol. Finally, [211] develops a spatial impedance control for redundant mani-
pulators, and reports experiments with a 7-DOF industrial manipulator. All
the above schemes are based on dynamic compensation. However, while dy-
namic model parameters of land-based manipulators are usually well known,
this is not the case of UVMSs for which the application of these schemes is
not straightforward.
In [165] a very speciﬁc problem is approach, a ﬂoating vehicle, with a
manipulator mounted on board, uses its thrusters and the resorting forces in
order to apply the required force at the end eﬀector.

8.3 Impedance Control
203
8.2 Dexterous Cooperating Underwater 7-DOF
Manipulators
AMADEUS (Advanced MAnipulator for DEep Underwater Sampling) was a
project funded by the European Community within the MAST III framework
program on Marine Technology development. One of the project’s objectives
includes the realization of a set-up composed by two 7-DOF Ansaldo manipu-
lators to be used in cooperative mode [71]. The controller has been developed
by G. Casalino et al. and it is based on a hierarchy of interacting functional
subsystems.
At the lowest level there is the joint motion control, grouped in a fun-
ctional scheme deﬁned VLLC (Very Low Level Control), one for each ma-
nipulator, that receive as input the desired joint velocities and outputs the
real joint positions. In case of high bandwidth loop this block behaves as an
integrator.
On the top there is the LLC (Low Level Control) that receives as input
the desired homogeneous transformation for the end-eﬀector and output the
desired joint velocities. Details on the handling of the kinematic singularities
can be found in [71, 72] and reference therein.
At an higher level works the MLC (Medium Level Control) that operates
completely in the operational space and outputs the desired homogeneous
transformation matrix for the LLC. This block has been designed to inter-
act with an operator via an human-computer interface and thus implements
speciﬁc attention to the use of a expressly developed mouse. Moreover, the
case of manipulators cooperation is properly taken into account.
The above approach has been developed using the RealTime Workshop
tool of the Matlab c software package. The controllers are based on C-
modules running on distributed CPUs with VxWorks operative system pro-
perly synchronized at 5 ms.
Figure 8.1 reports a photo taken during an experiment run in a pool, the
two manipulators have a ﬁxed base and cooperate in the transportation of a
rigid object. This experiment has been the unique of this kind ever reported
in the literature.
In [282] the coordinated control of several UVMSs holding a rigid object
is also taken into account by properly extending the UVMS dynamic control
proposed in [281].
8.3 Impedance Control
Y. Cui et al. , in [94], propose an application for a classical impedance con-
troller [149, 254].
It is required that the desired impedance at the end eﬀector is described
by the following

204
8. Interaction Control of UVMSs
Fig. 8.1. Snapshot of the two seven-link Ansaldo manipulators during a wet test
in a pool (courtesy of G. Casalino, Genoa Robotics And Automation Laboratory,
Universit`a di Genova and G. Veruggio, National Research Council-ISSIA, Italy)
f e,d = M d¨˜x + Dd ˙˜x + Kd˜x
(8.1)
where M d ∈IR3×3, Dd ∈IR3×3 and Kd ∈IR3×3 are positive deﬁnite ma-
trices. In other words it is required to assign a desired impedance at the
end eﬀector expressed as a desired behavior of the linear e.e. force in the
earth-ﬁxed frame.
Let recall eq. (2.75)
M(q)˙ζ + C(q, ζ)ζ + D(q, ζ)ζ + g(q, RI
B) = τ + JT
pos(q, RI
B)f e
(2.75)
that, by deﬁning
τ n = C(q, ζ)ζ + D(q, ζ)ζ + g(q, RI
B)
can be written as
M(q)˙ζ + τ n = τ + JT
pos(q, RI
B)f e .
(8.2)

8.4 External Force Control
205
The second-order diﬀerential relationship between the linear end-eﬀector
velocity in the earth-ﬁxed frame and the system velocity is given by
¨x = Jpos(q, RI
B)˙ζ + ˙Jpos(q, RI
B)ζ
that, neglecting dependencies, can be inverted in the simplest way as
˙ζ = J†
pos
#
¨x −˙Jposζ
'
that, plugged into (8.2), and deﬁning
τ = JT
posf
(8.3)
where f ∈IR3 is to be deﬁned, leads to
M ¨x + f n = f −f e
(8.4)
where M = JT
posMJ†
pos, and f n = JT
posτ n −M ˙JposJ†
pos ˙x. The vector
f ∈IR3 can be selected as
f = ˆ
Mxc + f n + f e .
(8.5)
where
xc = ¨xd + M −1
d
#
Dd ˙˜x + Kd˜x −f e
'
(8.6)
Details can be found in [94] as well as [254]; Figure 8.2 represents a block
scheme of the impedance approach. In [95, 96] a uniﬁed version with the
hybrid approach is also proposed.
xp,d, xs,d
η, q
eq. (8.6)
¨xc +
+
+
+
f
J T
pos
τ
−
+
UVMS
+ env.
f e
J T
pos
f n
Fig. 8.2. Impedance Control Scheme
8.4 External Force Control
In this Section a force control scheme is presented to handle the strong li-
mitations that are experienced in case of underwater systems. Based on the

206
8. Interaction Control of UVMSs
scheme proposed in [99], a force control scheme is analyzed that does not
require exact dynamic compensation; however, the knowledge of part of the
dynamic model can always be exploited when available. Extension of the
original scheme to redundant systems is achieved via a task-priority inverse
kinematics redundancy resolution algorithm [78] and suitable secondary tasks
are deﬁned to exploit all the degrees of freedom of the system.
Force control scheme. A sketch of the implemented scheme is provided in
Figure 8.3. In our case the Inverse Kinematics (i.e., the block IK in the sketch)
is solved at the diﬀerential level allowing to eﬃciently handle the system re-
dundancy. The matrix Jk(RB
I ) is the nonlinear, conﬁguration dependent,
matrix introduced in (2.58); its inverse, when resorting to the quaternion
attitude representation, is always deﬁned. The matrix Jpos(RB
I , q) has been
deﬁned in (2.67). Moreover, a stability analysis for the kinematically redun-
dant case is provided. The Motion Control block can be any suitable motion
control law for UVMS; thus, if a partial knowledge of the system is available,
a model based control can be applied.
In Section 2.10, the mathematical model of an UVMS in contact with the
environment is given.
xp,d, xs,d
˙xc
IK
ζd
J −1
k
"
+
−
Motion
Control
−
+
UVMS
+ env.
f e
η, q
J T
pos
−
+
f e,d
PID
Fig. 8.3. External Force Control Scheme
8.4.1 Inverse Kinematics
Let m be the number of degrees of freedom of the mission task. The system
DOFs are 6 + n, where 6 are the DOFs of the vehicle and n is the num-
ber of manipulator’s joints. When 6 + n > m the system is redundant with
respect to the given task and Inverse Kinematics (IK) algorithms can be ap-
plied to exploit such redundancy. The IK algorithm implemented is based on
a task-priority approach [78] (see also Section 6.5), that allows to manage
the natural redundancy of the system while avoiding the occurrence of algo-
rithmic singularities. In this phase we can deﬁne diﬀerent secondary tasks to

8.4 External Force Control
207
be fulﬁlled along with the primary task as long as they do not conﬂict. For
example, we can ask the system not to change the vehicle orientation, or not
to use the vehicle at all as long as the manipulator is working in a dexterous
posture.
Let us deﬁne xp as the primary task vector and xs as the secondary task
vector. The frame in which they are deﬁned depends on the variables we are
interested in: if the primary task is the position of the end-eﬀector it should
be normally deﬁned in the inertial frame.
The task priority inverse kinematics algorithm is based on the following
update law [78]
ζd = J#
p [ ˙xp,d + Λp(xp,d −xp)] +
+(I −J#
p Jp)J#
s [ ˙xs,d + Λs(xs,d −xs)] ,
(8.7)
where Jp and Js are the conﬁguration-dependent primary and secondary
task Jacobians respectively, the symbol # denotes any kind of matrix inver-
sion (e.g. Moore-Penrose), and Λp and Λs are positive deﬁnite matrices. It
must be noted that xp, xs and the corresponding Jacobians Jp, Js are fun-
ctions of ηd and qd. The vector ζd is deﬁned in the body-ﬁxed frame and a
suitable integration must be applied to obtain the desired positions: ηd, qd
(see (2.58)).
Let us assume that the primary task is the end-eﬀector position that
implies that Jp = Jpos. To introduce a force control action (8.7) is modiﬁed
as follow: the vector ˙xc is given as a reference value to the IK algorithm and
the reference system velocities are computed as:
ζd = J#
p [ ˙xp,d + ˙xc + Λp(xp,d −xp)] +
+(I −J#
p Jp)J#
s [ ˙xs,d + Λs(xs,d −xs)] ,
(8.8)
where
˙xc = kf,p˜f e −kf,v ˙f e + kf,i
! t
0
˜f e(σ)dσ
(8.9)
being ˜f e = f e,d −f e the force error. The direction in which force control is
expected are included in the primary task vector, e.g., if the task requires to
exert a force along z, the primary task includes the z component of x.
8.4.2 Stability Analysis
Pre-multiplying (8.8) by Jp ∈IR3×(6+n) we obtain:
Jpζd = ˙xp,d + ˙xc + Λp(xp,d −xp) .
(8.10)
Let us consider a regulation problem, i.e., the reference force f e,d and
the desired primary task xp,d are constant. In addition, let us assume that
f e,d ∈R(K), where K is the stiﬀness matrix deﬁned in (2.77), and that, as

208
8. Interaction Control of UVMSs
common in external force control approach, the motion controller guarantees
perfect tracking, yielding Jpζd = ˙x. We ﬁnally choose Λp = λpIm. Thus,
(8.10) can be rewritten as
˙x = ˙xc + λp(xp,d −x) .
(8.11)
In view of the above assumptions the vector ˙xc belongs to R(K); it is
then simple to recognize that the motion component of the dynamics along
the normal direction to the surface is decoupled from the motion components
lying onto the contact plane. Therefore, it is convenient to multiply (8.11) by
the two orthogonal projectors nnT and I −nnT (see Figure 2.5), that gives
the two decoupled dynamics
nnT ˙x = ˙xc + nnTλp(xp,d −x)
(8.12)
(I −nnT) ˙x = (I −nnT)λp(xp,d −x)
(8.13)
Equation (8.13) clearly shows convergence of the components of x tangent
to the contact plane to the corresponding desired values when λp > 0.
To analyze convergence of (8.12), by diﬀerentiating (8.12) and by taking
into account (2.76) and (8.9) we obtain the scalar equation
(1 + kf,vk) ¨w + (λp + kf,pk) ˙w + kf,ikw = kf,inT(f d + kx∞) ,
(8.14)
where the variable w = nTx is used for notation compactness and k, as
deﬁned in the modeling Chapter, is the environment stiﬀness.
Equation (8.14) shows that, with a proper choice of the control para-
meters, the component of x normal to the contact plane converges to the
value
w∞= nT(1
k f e,d + x∞) .
In summary, the overall system converges to the equilibrium
x∞= nnT(1
k f e,d + x∞) + (I −nnT)xp,d ,
which can be easily recognized to ensure f e,∞= f e,d.
8.4.3 Robustness
In the following, the robustness of the controller to react against unexpected
impacts or errors in planning desired force/position directions is discussed.
The major drawback of hybrid control is that it is not robust to the
occurrence of an impact in a direction where motion control has been planned.
In such a case, in fact, the end eﬀector is not compliant along that direction
and strong interaction between manipulator and environment is experienced.
This problem has been solved by resorting to the parallel approach [79] where
the force control action overcomes the position control action at the contact.
The proposed scheme shows the same feature as the parallel control. In
detail, if a contact occurs along a motion direction, we can see from (8.8)

8.4 External Force Control
209
that the integral action of the force controller guarantees a null force er-
ror at steady state while a non-null position error xd −x is obtained. This
implies that, in the direction where a null desired force is commanded, the
manipulator reacts to unexpected impacts with a safe behavior. Moreover, in
the directions in which a desired force is commanded, the desired position is
overcome by the controller.
If f e,d /∈R(K), i.e., the direction of f e,d is not parallel to n, the con-
troller is trying to interact with the environment in directions in which the
environment cannot generate reaction forces. A drift in that direction is then
experienced.
8.4.4 Loss of Contact
Due to the ﬂoating base and the possible occurrence of external disturbances
(such as, e.g., ocean current), it can happen that the end eﬀector loses contact
with the environment during the task fulﬁllment. In such a case the control
action might become unsuitable. In fact, from (8.8) it can be noted that the
desired force is interpreted as a motion reference velocity scaled by the force
control gain. One way to handle this problem is the following: if the force
sensor does not read any force value in the desired contact direction, the
integrator in the force controller is reset and (8.8) is modiﬁed as follows:
ζd = J#
p {H [ ˙xp,d + ˙xc + Λp(xp,d −xp)] + (I −H) ˙xl} +
(I −JpJ#
p )J#
s [ ˙xs,d + Λs(xs,d −xs)] ,
(8.15)
where H ∈IRm×m is a diagonal selection matrix with ones for the motion
directions and zeros for the force directions, and ˙xl is a desired velocity at
which the end eﬀector can safely impact the environment. Basically, the IK
is handling the motion directions in the same way as when the contact occurs
but, for the force direction, a reference velocity is given in a way to obtain
again the contact. Notice that ˙xc is not dropped out in case of loss of contact
because it guarantees from unexpected contacts in the direction where motion
control is expected (i.e., the directions in which the desired force is zero).
Matrix H can be interpreted as the selection matrix of a hybrid control
scheme. Notice that this matrix is used only when there is no contact at the
end eﬀector and the properties of robustness discussed above still hold.
8.4.5 Implementation Issues
The implementation of the proposed force control scheme might beneﬁt from
some practical considerations:
• The vehicle and the manipulator are characterized by a diﬀerent control
bandwidth, due to the diﬀerent inertia and actuator performance. Moreo-
ver limit cycles in underwater vehicles are usually experienced due to the

210
8. Interaction Control of UVMSs
thruster’s characteristics. This implies that the use of the desired conﬁgu-
ration in the kinematic errors computation in (8.8) would lead to coupling
between the force and motion directions, since the Jacobian matrix is com-
puted with respect to a position diﬀerent from the actual position. In (8.8),
thus, the real positions will be used to compute the errors.
• Force control tasks require accurate positioning of the end eﬀector. On the
other hand, the vehicle, i.e., the base of the manipulator, is characterized by
large position errors. In (8.8), thus, it could be appropriate to decompose
the desired end-eﬀector velocity in a way to involve the manipulator alone
in the fulﬁllment of the primary task. Let us deﬁne Jp,man(RI
B, q) as the
Jacobian of the manipulator, it is possible to rewrite (8.8) as
ζd =

06×1
J#
p,man [ ˙xp,d + ˙xc + Λp(xp,d −xp)]

+
+(I −J#
p Jp)J#
s [ ˙xs,d + Λs(xs,d −xs)] .
(8.16)
Notice that the same properties of (8.8) applies also for (8.16). A physical
interpretation of (8.16) is the following: it is asked the manipulator to fulﬁll
the primary task taking into account the movement of its base. At the same
time the secondary task is fulﬁlled, with less strict requirements, with the
whole system (e.g., the vehicle must move when the manipulator is working
on the boundaries of its workspace).
• UVMSs are usually highly redundant. If a 6-DOF manipulator is used this
means that 12 DOFs are available. It is then possible to deﬁne more tasks
to be iteratively projected on the null space of the higher priority tasks. An
example of 3 tasks could be: 1) motion/force control of the end eﬀector, 2)
increase manipulability measure of the manipulator, 3) limit roll and pitch
orientation of the vehicle. See also Chap. 6.
• To decrease power consumption it is possible to implement IK algorithms
with bounded reference values for the secondary tasks. Using some smooth
functions, or fuzzy techniques, it is possible to activate the secondary tasks
only when the relevant variables are out of a desired range. For the roll and
pitch vehicle’s angles, for example, it might be convenient to implement an
algorithm that keeps them in a range, e.g., ±10◦. See also Chap. 6.
• Force/moment sensor readings are usually corrupted by noise. The use of
a derivative action in the control law, thus, can be diﬃcult to implement.
With the assumption of a frictionless and elastically compliant plane it can
be observed a linear relation between ˙f e and ˙x. The force derivative action
can then be substituted by a term proportional to ˙x. The latter will be
computed by diﬀerential kinematics from ζ that is usually available from
direct sensor readings or from the position readings via a numerical ﬁlter.
8.4.6 Simulations
To prove the eﬀectiveness of the proposed force control scheme several si-
mulations have been run under Matlab c /Simulink c environment. The

8.4 External Force Control
211
UVMS simulated has 9 DOFs, 6 DOFs of the vehicle plus a 3-link manipula-
tor mounted on it [231]. The controller has been implemented with a sampling
frequency of 200 Hz. The vehicle is a box of dimensions (2×1×0.5) m, and the
vehicle ﬁxed frame is located in the geometrical center of the body. The mani-
pulator has a planar structure with 3 rotational joints. A sketch of the system
seen from the vehicle xz plane is shown in Figure 8.4. In the shown conﬁgura-
tion it is η = [ 0
0
0
0
0
0 ]T m, deg, q = [ 45
−90
−45 ]T deg. The
stiﬀness of the environment is k = 104 N/m. In the Appendix some details
on the dynamic model are given.
xb
zb
x0
x1
y1
x2
y2
x3
y3
x
z
wall
force
direction
Fig. 8.4. Sketch of the simulated system for both controllers as seen from the xz
vehicle-ﬁxed plane
The vehicle is supposed to start in a non dexterous conﬁguration, so as
to test the redundancy resolution capabilities of the proposed scheme. The
initial conﬁguration is:
η = [ 0
0
−2
12
0
0 ]T m, deg ,
q = [ −90
15
0 ]T
deg
that corresponds to the end-eﬀector position
x = [ xE
yE
zE ]T = [ 1.51
−0.60
0.86 ]T
m .
Since the vehicle is far from the plane (z = 1.005 m), the manipulator is
outstretched, i.e., close to a kinematic singularity.
The simulated task is to perform a force/position task at the end eﬀector
as primary task; speciﬁcally, the UVMS is required to move −20 cm along x
and apply a desired force of 200 N along z. The secondary tasks are to gua-
rantee manipulator manipulability and to keep roll and pitch vehicle’s angles
in a safe range of ±10◦. In detail, the 3 task variables are:
xp = x ,
xs = [ φ
θ ]T ,
xt = q2 ,

212
8. Interaction Control of UVMSs
where xt expresses the third task to be projected in the null space of the hig-
her priority tasks; in fact since the manipulator has a 3-link planar structure
a measure of its manipulability is simply given by q2, where q2 = 0 corre-
sponds to a kinematic singularity. In the initial position the 3 tasks are activa-
ted simultaneously and are performed by exploiting kinematic redundancy.
Moreover an unexpected impact along x is considered (for xE = 1.32 m).
A weighted pseudoinverse has been used to compute J#
p characterized
by the weight matrix W = blockdiag{10I6, I3}. To simulate an imperfect
hovering of the vehicle a control law with lower gain for the vehicle was
implemented; the performance of the simulated vehicle, thus, has an error
that is of the same magnitude as that of a real vehicle in hovering. The motion
controller implemented is the virtual decomposition adaptive based control
presented in Section 7.9. Equation (8.16) has then been used to compute the
desired velocities. The secondary task regarding the vehicle orientation has
to be fulﬁlled only when the relevant variable is outside of a desired bound.
The control gains, in S.I. units, are:
kfp = 3 · 10−3 ,
kfi = 8 · 10−3 ,
kfv = 10−4 ,
Λp = 0.6I3 ,
Λs = I3 .
The simulations have been run by adopting separate motion control sche-
mes for the vehicle and the manipulator, since this is the case of many
UVMSs. Better results would be obtained by resorting to a centralized motion
control scheme in which dynamic coupling between vehicle and manipulator
is compensated for. The initial value of the parameters has been chosen such
that the gravity compensation at the beginning is diﬀerent from the real one,
adding an error bounded to about 10% for each parameter.
In Figure 8.5 the time history of the end-eﬀector variables for the pro-
posed force control scheme without exploiting the redundancy and without
unexpected impact is shown. During the ﬁrst 3 s the end eﬀector is not in
contact with the plane and the algorithm to handle loss of contact has been
used. It can be noted that the primary task is successfully achieved.
In Figure 8.6 the same task has been achieved by exploiting the redun-
dancy. The diﬀerent behavior of the force can be explained by considering
that the system impacts the plane in a diﬀerent conﬁguration with respect to
the previous case because of the internal motion imposed by the redundancy
resolution. This also causes a diﬀerent end-eﬀect velocity at the impact.
Figure 8.7 shows the time history of the secondary tasks in the two pre-
vious simulations, without exploiting redundancy (solid) and with the pro-
posed control scheme (dashed). It can be recognized that without exploiting
the redundancy the system performs the task in a non dexterous conﬁgura-
tion, i.e., with a big roll angle and with the manipulator close to a kinematic

8.5 Explicit Force Control
213
0
5
10
15
0
50
100
150
200
250
300
350
0
5
10
15
−0.2
−0.1
0
0.1
0.2
[N]
[m]
time [s]
time [s]
˜xE
˜yE
Fig. 8.5. External force control. Force along z (top) and end-eﬀector error com-
ponents along the motion directions (bottom) without exploiting the redundancy
and without unexpected impact
singularity. A suitable use of the system’s redundancy allows to reconﬁgure
the system and to achieve the secondary task.
Finally, in Figure 8.8 the time history of the primary task variables in
case of an unplanned impact is shown. It can be noted that the undesired
force along x, due to the unexpected impact, is recovered yielding a non-zero
position error along that direction.
8.5 Explicit Force Control
In this Section, based on [119] two force control schemes for UVMS that
overcome many of the above-mentioned diﬃculties associated with the un-

214
8. Interaction Control of UVMSs
0
5
10
15
0
50
100
150
200
250
300
350
0
5
10
15
−0.2
−0.1
0
0.1
0.2
[N]
[m]
time [s]
time [s]
˜xE
˜yE
Fig. 8.6. External force control. Force along z (top) and end-eﬀector error compo-
nents along the motion directions (bottom) exploiting the redundancy and without
unexpected impact
derwater manipulation are presented. These force control schemes exploit
the system redundancy by using a task-priority based inverse kinematics al-
gorithm [78]. This approach allows us to satisfy various secondary criteria
while controlling the contact force. Both these force control schemes require
separate motion control schemes which can be chosen to suit the objective
without aﬀecting the performance of the force control. The possible occur-
rence of loss of contact due to vehicle movement is also analyzed. The pro-
posed control schemes have extensively been tested in numerical simulation
runs; the results obtained in a case study are reported to illustrate their
performance.
Two diﬀerent versions of the scheme are implemented based on diﬀerent
projections of the force error from the task space to the vehicle/joint space.

8.5 Explicit Force Control
215
0
5
10
15
−10
−5
0
5
10
0
5
10
15
10
20
30
40
50
[deg]
[deg]
time [s]
time [s]
φ
θ
Fig. 8.7. External force control. Roll and pitch vehicle’s angles (top) and q2 as
manipulability measure (bottom). Solid: without exploiting redundancy; Dashed:
exploiting redundancy with the proposed scheme
The ﬁrst scheme is obtained by using the transpose of the Jacobian to
project the force error from the task space directly to the control input space,
i.e., force/moments for the vehicle and torques for the manipulator, leading
to an evident physical interpretation.
In the second scheme, instead, the force error is projected from the task
space to the body-ﬁxed velocities. This is done to avoid the need to direc-
tly access the control input; in many cases, in fact, a velocity controller is
implemented on the manipulator and control torques are not accessible [119].
For both the control schemes, the kinematic control applied is the same as
the algorithm exploited in the external force control scheme, already shown
in Section 8.4.1.

216
8. Interaction Control of UVMSs
0
5
10
15
0
50
100
150
200
250
300
350
0
5
10
15
−0.2
−0.1
0
0.1
0.2
[N]
[m]
time [s]
time [s]
˜xE
˜yE
fe,z
fe,x
Fig. 8.8. External force control. Force along z and x (top) and end-eﬀector error
components along the motion directions (bottom) exploiting the redundancy and
with unexpected impact along x
Explicit force control, scheme 1. A sketch of the implemented scheme
is provided in Figure 8.9. In our case, the inverse kinematics is solved via
a numerical algorithm based on velocity mapping to allow the handling of
system redundancy eﬃciently (see previous Section and Section 6.5). It is
possible to decompose the input torque as the sum of the torque output
from the motion control and the torque output from the force control: τ =
τ M + τ F . The force control action τ F is computed as:
τ F = JT
posuF
= JT
pos
&
−f e + kf,p˜f e −kf,v ˙f e + kf,i
! t
0
˜f e(σ)dσ
*
,
(8.17)

8.5 Explicit Force Control
217
where kf,p, kf,v, kf,i are scalar positive gains, and ˜f e = f e,d −f e is the force
error. Equation (8.17), thus, is a force control action in the task space that
is further projected, via the transpose of the Jacobian, on the vehicle/joint
space.
xp,d, xs,d
IK
ζd
J −1
k
"
+
−
Motion
Control
+
+
UVMS
+ env.
η, q
f e
J T
posuF
f e,d
Fig. 8.9. Explicit force control scheme 1
Explicit force control, scheme 2. A sketch of the implemented scheme is
provided in Figure 8.10. The force control action is composed of two loops;
the action −JT
posf e is aimed at compensating the end-eﬀector contact force
(included in the block labeled “UVMS + env.”). The input of the motion
control is a suitable integration of the velocity vector:
ζr = ζd + ζF = ζd + JT
pos(k∗
f,p˜f e −k∗
f,v ˙f e + k∗
f,i
! t
0
˜f e(σ)dσ) ,
where k∗
f,p, k∗
f,v, k∗
f,i are positive gains, and ζd is the output of the inverse
kinematics algorithm described in previous Section.
xp,d, xs,d
IK
ζd +
+
J −1
k
"
+
−
Motion
Control
+
−
UVMS
+ env.
f e
η, q
J T
pos
−
+
f e,d
PID
J T
pos
Fig. 8.10. Explicit force control scheme 2
8.5.1 Robustness
In the following, the robustness of the schemes to react against unexpected
impacts or errors in planning desired force/position directions is discussed.

218
8. Interaction Control of UVMSs
The use of the integral action in the force controller gives a higher priority
to the force error with respect to the position error. In the motion control
directions the desired force is null. An unexpected impact in a direction where
the desired force is zero, thus, is handled by the controller yielding a safe
behavior, which results in a non-null position error at steady state and a null
force error, i.e., zero contact force.
If f e,d /∈R(K), i.e. the direction of f e,d is not parallel to n, the con-
troller is commanded to interact with the environment in directions along
which no reaction force exists. In this case, a drift motion in that direction
is experienced.
These two force control schemes too, possess the safe behavior as the
external force control scheme.
The possibility that the end eﬀector loses contact with the environment
is also taken into account. The same algorithm as presented in Section 8.4.4
were implemented.
8.5.2 Simulations
To test the eﬀectiveness of the proposed force control schemes several nume-
rical simulations were run under the Matlab c /Simulink c environment.
The controllers were implemented in discrete time with a sampling frequency
of 200 Hz. The environmental stiﬀness is k = 104 N/m.
The simulated UVMS has 9 DOFs, 6 DOFs of the vehicle plus a 3-link
manipulator mounted on it [231]. The vehicle is a box of dimensions (2 ×
1 × 0.5) m; the vehicle-ﬁxed frame is located in the geometrical center of the
body. The manipulator is a 3-link planar manipulator with rotational joints.
Figure 8.4 shows a sketch of the system, seen from the vehicle’s xz plane, in
the conﬁguration
η = [ 0
0
0
0
0
0 ]T m, deg ,
q = [ 45
−90
−45 ]T
deg
corresponding to the end-eﬀector position x = [ 2.41
0
1 ]T m.
A case study is considered aimed at the following objectives: as pri-
mary task, to perform force/motion control of the end eﬀector (exert a force
of 200 N along z, moving the end eﬀector from 2.41 m to 2.21 m along x,
while keeping y at 0 m); as secondary task, to guarantee vehicle’s roll and
pitch angles being kept in the range ±10◦; as tertiary task, to guarantee the
manipulator’s manipulability being kept in a safe range. In detail, the 3 task
variables are:
xp = x ,
xs = [ φ
θ ]T ,
xt = q2 ,

8.5 Explicit Force Control
219
where xt expresses the third task; in fact, since the manipulator has a 3-
link planar structure, a measure of its manipulability is simply given by q2,
where q2 = 0 corresponds to a kinematic singularity.
Let us suppose that the system starts the mission in the non-dexterous
conﬁguration
η = [ 0
0
−0.001
15
0
−4 ]T m, deg ,
q = [ 46
−89
−44 ]T
deg
corresponding to the end-eﬀector position x = [ 2.45
−0.42
0.91 ]T m.
A weighted pseudoinverse was used to compute J# characterized by the
weight matrix W = blockdiag{10I6, I3}. To simulate an imperfect hovering
of the vehicle the control law was implemented with lower gains for the
vehicle; the performance of the simulated vehicle, thus, has an error that is
of the same magnitude of a real vehicle in hovering.
To accomplish the above task, ﬁrstly the force control scheme 1 is used
together with the sliding mode motion control law described in Section 7.6;
notice that non-perfect gravity and buoyancy compensation was assumed.
Figure 8.11 reports the contact force and the end-eﬀector error components
obtained. Since the desired ﬁnal position is given as a set-point, the initial
end-eﬀector position errors are large. In Figure 8.12, the position and orien-
tation components of the vehicle are shown; it can be recognized that, despite
the large starting value, the roll angle is kept in the desired range.
To take advantage of dynamic compensation actions, the force control
scheme 2 is used to accomplish the same task as above together with the
singularity-free adaptive control presented in Section 7.9; notice that only
the restoring force terms have been considered to be compensated and a
constant unknown error, bounded to ±10%, of these parameters has been
assumed. There are 4 parameters for each rigid body of the UVMS, giving
16 parameters in total. Moreover, during the task execution an unexpected
impact occurs along x.
In Figure 8.13, the contact force and the end-eﬀector error components
are shown. It can be recognized that the unexpected impact, occurring at ab-
out 3 s, is safely handled: a transient force component along x is experienced;
nevertheless, at the steady state the desired force is achieved with null error.
It can be noted that the expected coupling between the force and the
motion directions aﬀects the x direction also before the unplanned impact.
This coupling, due to the structure and conﬁguration of the manipulator, is
not observed along y.
In Figure 8.14, the vehicle’s position and orientation components are
shown. It can be recognized that the vehicle moves by about 10 cm; nevert-
heless, the manipulator still performs the primary task accurately. Moreover,
the large initial roll angle is recovered by exploiting the system redundancy
since this task does not conﬂict with the higher priority task.
In the force control scheme labeled 1 the force error directly modiﬁes the
force/moments/torques acting on the UVMS, leading to an evident physical

220
8. Interaction Control of UVMSs
0
2
4
6
8
−50
0
50
100
150
200
250
300
0
2
4
6
8
−0.5
0
0.5
[N]
[m]
time [s]
time [s]
˜xE
˜yE
fe,z
Fig. 8.11. Explicit force control scheme 1. Top: time history of the contact force.
Bottom: time history of the end-eﬀector errors along the motion directions
interpretation. In the force control scheme 2, instead, the force error builds
a correction term acting on the body-ﬁxed velocity references which fed the
available motion control system of the UVMS.
The two proposed control schemes were tested in numerical simulation
case studies and their performance is analyzed. Overall, the force control
scheme 2 seems to be preferable with respect to the force control scheme 1
for two reasons. Firstly, it allows the adoption of adaptive motion control
laws, thus making it possible dynamic compensation actions. Secondly, it
naturally embeds the standard motion control of the UVMS, since it acts at
the reference motion variables level.

8.5 Explicit Force Control
221
0
2
4
6
8
−0.2
−0.1
0
0.1
0.2
0
2
4
6
8
−15
−10
−5
0
5
10
15
[deg]
[m]
time [s]
time [s]
x
y
z
φ
θ
ψ
Fig. 8.12. Explicit force control scheme 1. Top: time history of the vehicle’s posi-
tion. Bottom: time history of the vehicle’s orientation

222
8. Interaction Control of UVMSs
0
2
4
6
8
−50
0
50
100
150
200
250
300
0
2
4
6
8
−0.5
0
0.5
[N]
[m]
time [s]
time [s]
˜xE
˜yE
fe,x
fe,z
Fig. 8.13. Explicit force control scheme 2. Top: time history of the contact force in
case of unexpected impact along x. Bottom: time history of the end-eﬀector errors
along the motion directions

8.6 Conclusions
223
0
2
4
6
8
−0.2
−0.1
0
0.1
0.2
0
2
4
6
8
−15
−10
−5
0
5
10
15
[deg]
[m]
time [s]
time [s]
x
y
z
φ
θ
ψ
Fig. 8.14. Explicit force control scheme 2. Top: time history of the vehicle’s posi-
tion. Bottom: time history of the vehicle’s orientation
8.6 Conclusions
Interaction control in the underwater environment is a very challenge task.
Currently, only theoretical results exist that extended the industrial-based
approaches to the UVMSs. Obviously, while these approaches worked in si-
mulation their real eﬀectiveness can be proven only with an exhaustive ex-
perimental analysis. Simulations, nevertheless, gave useful information about
the need to equip the system with high bandwidth and low noise sensors in
order to interact with stiﬀenvironment.

9. Coordinated Control of Platoons of AUVs
9.1 Introduction
The use of several AUVs to achieve fulﬁllment of a task might be of beneﬁt
in several situations: explorations of areas, de-mining [74], as in un the ﬁrst
Gulf’s war, or interaction with the environment in which the team of AUVs
may, e.g., push an object that one single AUV would not have the power
to move. In Figure 1.6, a possible scenario of mine countermeasure using a
platoon of AUVs under study at the SACLANT Undersea Research Center
of the North Atlantic Treaty Organization (NATO) is given.
Considering surface marine vehicles, in [155] proposes a leader-follower
formation control algorithm; experiments with one scale vehicle following a
simulated leader are provided. Reference [141] presents a naval minesweeper
platoon in which a supervisor vehicle is in charge of tasking in real-time
the remaining vehicles. Concerning multi-robot systems in general, one of
the ﬁrst works is reported in [241], where a successful group behavior is
achieved by considering only local sensing for each robot. The paper [291] is
an interesting tutorial about control of multi-robot systems in a wide sense;
it can be considered as a starting reading to understand the nomenclature
and the research subjects on the topic. Since an exhaustive literature survey
is huge it will be simply skipped in this context, focusing our attention on
algorithm developed for the underwater environment.
In particular, the platoons of AUVs experience some speciﬁc characteri-
stics;
• The AUVs mathematical models are generally nonholonomic, in fact, in
case of exploration the use of torpedo-like vehicles is of common use;
• In case of AUVs equipped with control surfaces there is a substantial im-
possibility in hovering the vehicle due to the general absence of thrust at
low velocity;
• The communication bandwidth is limited thus inhibiting a large exchange
of data among the vehicles;
• Localization of the AUVs is not easy due to the absence of a single pro-
prioceptive sensor that gives this information.
Reference [120, 47] reports interesting experimental results on the use of
an underwater glider ﬂeet for adaptive ocean sampling. The sampling, thus,
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 225–236, 2006.
© Springer-Verlag Berlin Heidelberg 2006

226
9. Coordinated Control of Platoons of AUVs
is not achieved by resorting to deterministic, pre-programmed, paths but is
made adaptive in order to extract the maximum possible information du-
ring one mission. The formation control is obtained using virtual bodies and
artiﬁcial potential techniques [187, 218]; the Authors separate the problem
into small area coverage (5 km) and synoptic area coverage for larger scale
(5–100 km). For the former, experimental result performed with 3 gliders in
2003 are reported; the experiments were successful thus demonstrating the
reliability of the approach in a real environment under the eﬀect, e.g, of the
ocean current.
In [54] a cooperative mission, whose experimental validation is planned
for summer 2006, is described. The mission objective is to perform a side-scan
survey searching for mines with mixed initiative interactions; the presence of
a human operator in the loop, thus, is considered. In detail, several target
mines will be deployed in a bay and the vehicles have to ﬁnd and classify the
targets in minimum-time.
In [275, 276], an eﬀective decentralized control technique for platoons is
proposed and simulated for underwater vehicles. Remarkably, the approach
requires a limited amount of inter-vehicle communication that is indepen-
dent from the platoon dimension; moreover, control of the platoon formation
is achieved through deﬁnition of a suitable (global) task function without
requiring the assignment of desired motion trajectories to the single vehicles.
In Figure 1.7, one of the AUVs developed at the Virginia Tech is shown,
these vehicles are very small in size and cheap with most of the components
custom-engineered.
Reference [179] presents a behavior-based intelligent control architecture
that computes discrete control actions. The control architecture separates the
sensing aspect, called perceptor in the paper, from the control action, called
response controller and it focuses on the latter implemented by means of a
set of discrete event models. The design of a sampling mission for AUVs is
also discussed in the paper.
In [158], the problem of formation control for AUVs is solved by using a
leader-follower approach. For each vehicle a relative position with respect to
the leader is given as a reference motion; simulation for two 3-dimensional
nonholonomic vehicles are reported.
Reference [55] presents an algorithm to perform a search using multiple
AUVs. Simulation results for the search of the minimum in a scalar ﬁelds are
shown.
In [247] the communication issue for the underwater environment is taken
into account. The vehicles operate in decentralized manner and communicate
to achieve common control objectives. The network, thus, is time-varying,
and the vehicles communicate with diﬀerent subset of other vehicles along
the mission. In particular, the case of disconnected network is addressed and
possibly solved by resorting to a fast enough periodic fast switching. The

9.2 Kinematic Control of AUVs
227
communication constraint is taken into account also in [188] with numerical
simulations of the eﬀects of communication delays on the formation.
Reference [64] reports the development of an adaptive on-line planning
algorithm for the exploration of an unknown oceanic environment by means
of several AUVs. The aim is to have a map of the estimation of a desired
variable such as, e.g., the water temperature, in a region. Each vehicle decides
the next measurements on the basis of the current measurement and the
past measurements of all the platoon such that the conﬁdence level of the
overall estimation is locally increased. The paper reports simulation results,
an experimental set-up is currently under development based on self-designed
low-cost vehicles [6, 7].
In [136] a Lypanuov-based technique is derived so that the underwater
vehicles, supposed fully actuated, are steered along a set of spatial paths while
keeping a given inter-vehicle formation. The path following for each vehicle is
essentially decoupled while its advancing velocity is properly shaped so that
the formation is properly achieved. Simulation results on a planar formation
of 3 vehicles are provided.
In the following Section a speciﬁc control strategy, based on inverse ki-
nematics algorithms for ﬁxed-base manipulators, is discussed together with
some simulation results; ﬁnally, the description of the experimental set-up of
the Virginia Polytechnic Institute & State University is provided.
9.2 Kinematic Control of AUVs
In 2001 [48, 50, 277] B.E. Bishop and D.J. Stilwell for the ﬁrst time recognize
a formal similarity between the problem of robot redundancy resolution and
the achievement of platoon’s tasks at the diﬀerential level. The primary task
is deﬁned by the platoon’s mean and variance and tasks such as obstacle
avoidance and heading control are handled as secondary tasks by using the
approach developed by Y. Nakamura [210]. G. Antonelli and S. Chiaverini,
in [27, 28, 30], inherited this approach by proposing a diﬀerent way to handle
the redundancy with respect to the given task, speciﬁcally, the task priority
redundancy resolution proposed by S. Chiaverini [78].
Task Functions and Inverse Kinematics
While considering a platoon of n vehicles, the aim is to control the value taken
by a generic task function which suitably depends on the platoon state; an
example of such function is the one expressing the mean value of all the
vehicles’ positions as a synthetic data about the platoon location.
To keep the notation compact it is useful to deﬁne the vector p ∈IR3n
p =


η1,1
...
η1,n



228
9. Coordinated Control of Platoons of AUVs
where η1,i is the 3 dimensional position of the i th vehicle, and
v =


˙η1,1
...
˙η1,n

.
By deﬁning as σ ∈IRm the task variable to be controlled, it is:
σ = f(η1,1, . . . , η1,n) = f(p)
(9.1)
with
˙σ =
n
-
i=1
∂f(p)
∂η1,i
˙η1,i = J(p)v ,
(9.2)
where J ∈IRm×3n is the conﬁguration-dependent task Jacobian matrix1.
An eﬀective way to generate motion references for the AUVs starting
from desired values σd(t) of the task function is to act at the diﬀerential
level by inverting the (locally linear) mapping (9.2); in fact, this problem has
been widely studied in robotics (see, e.g., [262] for a tutorial or Chapter 6
for an UVMS’s application). For low-rectangular matrices —which is usually
the case in platoon formation control, being 3n  m— the problem admits
inﬁnite solutions and such redundancy is often exploited to optimize some
criterion. A typical requirement is to pursue minimum-norm velocity, leading
to the least-squares solution:
vd = J† ˙σd = JT #
JTJ
'−1
˙σd .
(9.3)
At this point, the vehicle motion controllers need reference position tra-
jectories besides the velocity references; these can be obtained by time in-
tegration of vd. However, discrete-time integration of the vehicles’ reference
velocities would result in a numerical drift of the reconstructed vehicles’ po-
sitions; the drift can be counteracted by a so-called Closed Loop Inverse
Kinematics (CLIK) version of the algorithm, namely,
vd(tk) = J†#
˙σd + Λ(σd −σ)
'111
t=tk
(9.4)
pd(tk) = pd(tk−1) + vd(tk)∆t ,
(9.5)
where tk is the k-th time sample, ∆t is the sampling period, and Λ is a suitable
constant positive deﬁnite matrix of gains. It must be remarked that the loop
is closed on algorithmic quantities at the input of the motion controllers
and does not involve measurement of quantities at the output of the motion
controllers; in other words, the dynamics of the vehicles’ motion controllers
is out of the loop in (9.4).
1 The symbol J has been used in Equation (2.68) for a speciﬁc Jacobian matrix,
in the remainder of the Chapter, however, it will denote a generic task Jacobian
matrix.

9.2 Kinematic Control of AUVs
229
σp,d(t), σs,d(t)
CLIK
ηr,1,1, ˙ηr,1,1
vehicle 1
η1,1, ˙η1,1
ηr,1,n, ˙ηr,1,n
vehicle n
η1,n, ˙η1,n
Fig. 9.1. Sketch of the centralized kinematic control strategy for platoons
The structure of such a centralized platoon control algorithm is sketched
in Figure 9.1. It must be remarked that each vehicle is equipped with a
dynamic low level controller in charge of following the reference trajectory.
This structure can be implemented on a platoon of AUVs without modifying
their dynamic controllers that can be tuned, thus, at their best performance.
The dynamic low level controller is not aﬀected by the algorithm implemented
in the CLIK. It is suﬃcient that it implements a kind of input interpolation
to match the diﬀerent sampling frequency of the two loops.
In view of the underwater communication limitations, it must be remarked
that only one-way communication channel must be strictly set-up; commu-
nication among robots, thus, is not required. Moreover, the communication
channel is in charge of updating the vehicles’ references; it is not, thus, inside
the control loop with obvious advantages in terms of stability and perfor-
mance.
A high-level supervisor might beneﬁt from sensor measurements. Those
can be vehicle-ﬁxed sensors (e.g., sonar measurements or video camera) or
other distributed sensors (e.g., baseline acoustic measurements). These varia-
bles can be acquired from diﬀerent sources at diﬀerent sampling frequencies
and merged using a Kalman ﬁltering approach. In this case, however, com-
munication from each vehicle to the centralized algorithm may be required.
Task Function for Platoon Average Position
An example of task function for platoon formation control is one expressing
the mean value of all the vehicles’ positions as a synthetic data about the
platoon location. In this case, the 3-dimensional task function σa is simply
given by:

230
9. Coordinated Control of Platoons of AUVs
σa = f a(η1,1, . . . , η1,n) = 1
n
n
-
i=1
η1,i = p ,
(9.6)
whose Jacobian matrix Ja ∈IR3×3n can be easily derived [28].
Task Function for Platoon Variance
Together with the platoon average position, it is of interest considering the
variance of all the vehicles’ positions as a synthetic data on their spreading
around the average position. It is clear that by controlling these two task
variables it is possible to inﬂuence the shape of the platoon. The task function
for platoon variance σv ∈IR3 is deﬁned as
σv = 1
n
n
-
i=1
(η1,i −p)2 .
(9.7)
In [28] the Jacobian Jv is provided; moreover, diﬀerent tasks, such as
keeping the platoon in a bounded geometrical area or in a rigid formation,
are discussed.
Merging Several Tasks
Diﬀerent task functions may be used at the same time by stacking the cor-
responding single-task variables in an overall task vector. As a result, the
corresponding single-task Jacobians are stacked too in an overall task Jaco-
bian, and the inverse solution (9.3) acts by simply adding the partial vehicles’
velocities that would be obtained if (locally at the current conﬁguration) each
task were executed alone. It is simple to recognize that this approach is poorly
eﬀective since conﬂicting tasks would generate counteracting partial vehicles’
velocities.
A possible technique to handle this problem has been proposed in [50],
which consists in assigning a relative priority to the single task functions,
thus resorting to the task-priority inverse kinematics introduced in [196, 210]
for ground-ﬁxed redundant manipulators. Nevertheless, as discussed in [78],
just in case of conﬂicting tasks it is necessary to devise singularity-robust
algorithms that ensure proper behavior of the inverse velocity mapping. For
this reason, according to [78], G. Antonelli and S. Chiaverini propose to
modify the CLIK solution (9.4) into
vd(tk) = J †
p
#
˙σp,d + Λp(σp,d−σp)
'
+ %
I −J †
pJ p
)
J †
s
#
˙σs,d + Λs(σs,d−σs)
'
,(9.8)
where the subscript p denotes primary-task quantities, the subscript s
denotes secondary-task quantities, and Λp, Λs are suitable positive deﬁnite
matrices. The extension to a generic number of tasks can be easily derived.
Equation (9.8) has a nice geometrical interpretation. Each task is projec-
ted onto the vehicles’ velocity space by the use of the corresponding pseudoin-
verse, i.e., as if it were acting alone; then, before adding the two contributions,

9.2 Kinematic Control of AUVs
231
the lower-priority (secondary) task is further projected onto the null space of
the higher-priority (primary) task so as to remove those velocity components
that would conﬂict with it.
A diﬀerent technique to manage conﬂicting tasks in the framework of the
task priority approach has been proposed in [29] (see Section 6.6), where a
fuzzy inference system is used to merge multiple secondary tasks given to
underwater vehicle-manipulator systems.
Obstacle Avoidance Strategy
In [50] obstacle avoidance has been developed in the frame of task priority
inverse kinematics following the approach of Y. Nakamura [210].
In the following, based on the work developed in 1991 at the Universit`a
degli Studi Napoli Federico II for industrial manipulators [76], the obstacle
avoidance is chosen as the primary task by selecting:
σo =



η1−ηo
...

ηn−ηo


(9.9)
where ηo is the coordinate vector of an obstacle, and the other tasks as
secondary tasks. Deﬁning as ri the versor of ηi−ηo it can be recognized that
the pseudoinverse of Jo ∈IRn×3n is simply given by:
J†
o =


r1
03×1
...
03×1
rn


(9.10)
and the null-space projection matrix, considering the planar case for simpli-
city, is given by:
N o =


1 −r2
1,x
−r1,xr1,y
−r1,xr1,y
1 −r2
1,y
O2×2
...
O2×2
1 −r2
n,x
−rn,xrn,y
−rn,xrn,y
1 −r2
n,y


.
In this approach, the obstacle avoidance task is also used for each vehicle
with respect to the other vehicles of the platoon. This prevents from the
possible occurrence of accidents during, e.g., formation changing or obstacle
avoidance. In case of simultaneous proximity of an obstacle and another ve-
hicle, the safer behavior is obtained by projecting the secondary-task veloci-
ties in the null space of both the obstacle avoidance tasks. This will simply
zero the required velocity for the vehicle that is commanded to go closer to
another vehicle and the obstacle at the same time.
The developed theory consider holonomic vehicle, in [49] nonholonomic
vehicles are explicitly considered as composing the platoon. Recently, in [278],

232
9. Coordinated Control of Platoons of AUVs
a partially decentralized version of the kinematic control is proposed to pro-
perly consider the limited bandwidth of the platoon.
9.2.1 Simulations
The kinematic-control-based algorithm has been tested in numerical simula-
tion case studies. The objective of the simulations is to show the performance
of the sole CLIK algorithm, while assuming a bounded tracking error of the
vehicle controllers. The platoon is composed of 10 vehicles; the sampling time
of the CLIK is 0.5 s and the total simulation duration is 100 s. The primary
task is the platoon average position, while the secondary task is the variance.
In detail, the average is commanded to be constant along y and increases
linearly at a velocity of 1 m/s along x:
σa =

t
0

m
while the desired variance is
σv =

30
30

m2 .
The CLIK’s gains have been set to:
Λa = 0.1I2
Λv = 0.05I2 .
In case of presence of obstacles or excessive proximity among the vehicles,
the primary task is the obstacle avoidance, while mean and variance are,
respectively, second and third task. A safe distance of 4 m among the vehicles
is required. In Figure 9.2 it can be observed that, in absence of obstacles, the
vehicles reconﬁgure themselves in order to fulﬁll mean and variance task.
The same initial condition with the same mean and variance tasks have
been used to run a second simulation with the presence of an obstacle. One of
the vehicles needs to slow down its velocity, avoid the vehicles in its proximity,
avoid the obstacle and ﬁnally join the other vehicles to fulﬁll the mean-
variance task (Figure 9.3).
Figure 9.4 shows the same mission (same required mean and variance
starting from the same initial conditions) with the presence of 3 obstacles. It
can be recognized that the mission is safely executed.

9.2 Kinematic Control of AUVs
233
40
60
80
100
−30
−20
−10
0
10
20
30
x [m]
y [m]
Fig. 9.2. Kinematic control of multi-AUVs. In absence of obstacles the platoon
satisﬁes the mean and variance task
40
60
80
100
−30
−20
−10
0
10
20
30
x [m]
y [m]
Fig. 9.3. Kinematic control of multi-AUVs. An obstacle is encountered and the
primary task becomes its avoidance

234
9. Coordinated Control of Platoons of AUVs
40
60
80
100
−30
−20
−10
0
10
20
30
x [m]
y [m]
Fig. 9.4. In the framework of kinematic control of multi-AUVs it is possible to
safely handles several situations

9.3 Experimental Set-Up at the Virginia Tech
235
9.3 Experimental Set-Up at the Virginia Tech
Figure 9.5 reports the small AUVs developed at the Virginia Polytechnic
Institute & State University to perform adaptive sampling with multiple un-
derwater vehicles. The AUVs have been designed in order to be very small
in size and relatively cheap [132].
Fig. 9.5. Platoon of AUVs developed at the Virginia Polytechnic Institute & State
University (courtesy of D. Stilwell)
One of the use of the platoon will be the adaptive sampling of environ-
mental processes, i.e., the mapping and tracking of marine processes. In [66],
C.J. Cannell and D.J. Stilwell compare two estimation methods in diﬀerent
conditions, moreover, the beneﬁt achieved using more than one vehicles is
also discussed. Reporting from [66], Figure 9.6 shows simulation results of
two AUVs estimating the center of mass of a neutral dye tracer.
In [229] some preliminary experimental results have been reported by
J. Petrich, C.A. Woolsey and D.J. Stilwell using one of the vehicles. However,
since absolute positions are required to prove the proposed algorithm, the
vehicle is commanded to move at the surface and its position is measured
with a sampling time of 30 s.

236
9. Coordinated Control of Platoons of AUVs
Fig. 9.6. Simulation of two AUVs estimating the center of mass of a neutral dye
tracer (courtesy of D. Stilwell, Virginia Polytechnic Institute & State University)
9.4 Conclusions
In this Chapter a very quick overview on control strategy for multiple AUVs is
given. The so called kinematic control has been detailed reporting simulation
results. Some preliminary experimental results, performed at the Virginia
Tech University have been shown.
Some interesting issues concern fault tolerant capabilities of the platoon,
scalability of the algorithm, and local sensing aspects.

10. Concluding Remarks
“Cheshire-cat —Alice began— would you tell me, please, which way I ought
to go from here?”. “That depends a good deal on where you want to get to”,
said the cheshire-cat.
Lewis Carroll, “Alice’s adventures in wonderland”.
The underwater environment is hostile, the communication is diﬃcult
and external disturbances can strongly aﬀect the dynamics of the system
involved in the mission. Moreover, the sensing devices are not fully reliable
in the underwater environment. This is particularly true for the positioning
sensors. The vehicle actuating systems, usually composed of thrusters, is
highly nonlinear and subject to limit cycles. Some very simple operations for
a ground robotic system, such as to hold its position can become diﬃcult for
UVMSs. This diﬃculty dramatically increases for complex missions.
Moreover, also if one wants to neglect the technical diﬃculties and focus
on the mathematical model he deals with characteristics diﬃcult to handle.
The equations of motion are coupled and nonlinear; the hydrodynamic eﬀects
are not completely known leading to the practical impossibility to identify
the dynamic parameters. Together with the complexity of the mathematical
model this is a serious obstacle versus the implementation of model-based
control laws.
In this framework, the control of the UVMS must be robust, in a wide
sense, reliable and of simple implementation. With this in mind the techniques
for motion and force control of UVMSs needs to be developed.
The kinematic control approach is important for accomplishing an auto-
nomous robotic mission. Diﬀerently from industrial robotics, where an oﬀ-line
trajectory planning is a possible approach, in case of unknown, unstructured
environment, the trajectory has to be be generated in real-time. The possible
occurrence of kinematic singularities, thus, is not avoided with a task space
control law. Moreover, UVMSs are usually redundant with respect to the gi-
ven task; a kinematic control approach, thus, can exploit such a redundancy.
The motion control of UVMSs must deal with the strong constraints di-
scussed along the book. In this work, diﬀerent approaches were discussed.
Control of an underwater robotic system can not be reduced at the sole
translation of similar approaches designed for ground-ﬁxed manipulator; as
an example, it is interesting to stress the results achieved in Chapter 3: certain
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 237–238, 2006.
© Springer-Verlag Berlin Heidelberg 2006

238
10. Concluding Remarks
control laws devoted at the study of 6-DOFs dynamic control of the vehicle
can deteriorate the transient due to a wrong adaptive or integral action. In
the Author’s opinion, this result is particularly signiﬁcant.
The following step needs to be the experimental validation of the several
control laws developed for UVMSs and tested only in simulation.
Nec plus ultra.

A. Mathematical models
A.1 Introduction
This Appendix reports the parameters of the diﬀerent mathematical models
used along the book. For all the models the gravity vector, expressed in the
inertial frame, and the water density are given by:
gI = [ 0
0
9.81 ]T m/s2
ρ = 1000 kg/m3 .
A.2 Phoenix
The data of the vehicle Phoenix, developed at the Naval Postgraduate School
(Monterey, CA, USA), are given in [145]. These have been used as data of
the vehicle carrying a manipulator with 2, 3 and 6 DOFs in the simulations
of the dynamic control laws.
L
=
5.3
m
vehicle length
m
=
5454.54
kg
vehicle weight
rB
G
=
[ 0
0
0.061 ]T
m
rB
B
=
[ 0
0
0 ]T
m
W
=
53400
N
B
=
53400
N
Ix
=
2038
Nms2
Iy
=
13587
Nms2
Iz
=
13587
Nms2
Ixy
=
−13.58
Nms2
Iyz
=
−13.58
Nms2
Ixz
=
−13.58
Nms2
where:
IOb =


Ix
Ixy
Ixz
Ixy
Iy
Iyz
Ixz
Iyz
Iz

.
The inertia matrix, including the added mass terms, is given by:
G. Antonelli: Underwater Robots, 2nd Edition, STAR 2, pp. 239–245, 2006.
© Springer-Verlag Berlin Heidelberg 2006

240
A. Mathematical models
M v =


6.019 · 103
5.122 · 10−8
−1.180 · 10−2
5.122 · 10−8
9.551 · 103
3.717 · 10−6
−1.180 · 10−2
3.717 · 10−6
2.332 · 104
−3.200 · 10−5
−3.802 · 102
−1.514 · 10−4
3.325 · 102
−3.067 · 10−5
2.683 · 103
−6.731 · 10−5
−4.736 · 102
−4.750 · 10−4
. . .
. . .
−3.200 · 10−5
3.325 · 102
−6.731 · 10−5
−3.802 · 102
−3.067 · 10−5
−4.736 · 102
−1.514 · 10−4
2.683 · 103
−4.750 · 10−4
4.129 · 103
1.358 · 101
8.467 · 101
1.358 · 101
4.913 · 104
1.357 · 101
8.467 · 101
1.357 · 101
2.069 · 104


.
The hydrodynamic derivatives are given by:
Xp|p|
=
2.8 · 103
Xq|q|
=
−5.9 · 103
Xr|r|
=
1.6 · 103
Xpr
=
2.9 · 102
X ˙u
=
−5.6 · 102
Xωq
=
−1.5 · 104
Xvp
=
−2.2 · 102
Xvr
=
1.5 · 103
Xv|v|
=
7.4 · 102
Xω|ω|
=
2.4 · 103
Y ˙p
=
47
Y ˙r
=
4.7 · 102
Ypq
=
1.6 · 103
Yqr
=
−2.6 · 103
Y ˙v
=
−4.1 · 103
Yup
=
2.2 · 102
Yr
=
2.2 · 103
Yvq
=
1.8 · 103
Yωp
=
1.7 · 104
Yωr
=
−1.4 · 103
Yv
=
−1.4 · 103
Yvω
=
9.5 · 102
Z ˙q
=
−2.7 · 103
Zp|p|
=
51
Zpr
=
2.6 · 103
Zr|r|
=
−2.9 · 103
Z ˙ω
=
−1.8 · 104
Zuq
=
−1 · 104
Zvp
=
−3.6 · 103
Zvr
=
3.3 · 103
Zuω
=
−4.2 · 103
Zv|v|
=
−9.5 · 102
K ˙p
=
−2 · 103
K ˙r
=
−71
Kpq
=
−1.4 · 102
Kqr
=
3.5 · 104
K ˙v
=
47
Kup
=
−4.3 · 103
Kur
=
−3.3 · 102
Kvq
=
−2 · 103
Kωp
=
−51
Kωr
=
5.5 · 103
Kuv
=
2.3 · 102
Kvω
=
−1.4 · 104
M ˙q
=
−3.5 · 104
Mp|p|
=
1.1 · 102
Mpr
=
1 · 104
Mr|r|
=
6 · 103
M ˙ω
=
−2.7 · 103
Muq
=
−2.7 · 104
Mvp
=
4.7 · 102
Mvr
=
6.7 · 103
Muω
=
7.4 · 103
Mv|v|
=
−1.9 · 103
N ˙p
=
−71
N ˙r
=
−7.1 · 103
Npq
=
−4.4 · 104
Nqr
=
5.6 · 103
N ˙v
=
4.7 · 102
Nup
=
−3.3 · 102
Nur
=
−6.3 · 103
Nvq
=
−3.9 · 103
Nωp
=
−6.7 · 103
Nωr
=
2.9 · 103
Nuv
=
−5.5 · 102
Nvω
=
−2 · 103
On the sway, heave, pitch and yaw degree of motion the damping due to
the vortex shedding is also considered. By deﬁning as b(x) the vehicle breadth
and h(x) the vehicle height this term is modeled as a discretized version of
the following:

A.3 Phoenix+6DOF SMART 3S
241
Y = −1
2ρ
! nose
tail

Cdyh(x)(v + xr)2 + Cdzb(x)(ω −xq)2 (v + xr)
Ucf(x) dx
Z = 1
2ρ
! nose
tail

Cdyh(x)(v + xr)2 + Cdzb(x)(ω −xq)2 (ω −xq)
Ucf(x) dx
M = −1
2ρ
! nose
tail

Cdyh(x)(v + xr)2 + Cdzb(x)(ω −xq)2 (ω + xq)
Ucf(x) xdx
N = −1
2ρ
! nose
tail

Cdyh(x)(v + xr)2 + Cdzb(x)(ω −xq)2 (v + xr)
Ucf(x) xdx
where the cross-ﬂow velocity is computed as:
Ucf(x) =
+
(v + xr)2 + (ω −xq)2.
In the simulations h(x) and b(x) have been considered constant, in detail
h(x) = 0.5 m and b(x) = 1 m. Finally, Cdy = Cdz = 0.6.
A.3 Phoenix+6DOF SMART 3S
The vehicle, whose model is widely known and used in literature [127, 145],
is supposed to carry a SMART-3S manipulator manufactured by COMAU
whose main parameters are reported in Table A.1.
Table A.1. mass [kg], Denavit-Hartenberg parameters [m,rad], radius [m], length
[m] and viscous friction [Nms] of the manipulator mounted on the underwater ve-
hicle
mass
a
d
θ
α
radius
length
viscous frict.
link 1
80
0.15
0
q1
−π/2
0.2
0.85
30
link 2
80
0.61
0
q2
0
0.1
1
20
link 3
30
0.11
0
q3
−π/2
0.15
0.2
5
link 4
50
0
0.610
q4
π/2
0.1
0.8
10
link 5
20
0
−0.113
q5
−π/2
0.15
0.2
5
link 6
25
0
0.103
q6
0
0.1
0.3
6
The manipulator is supposed to be mounted under the vehicle in the
middle of its length, the vector positions of the origin of the frames i −1
to frame/center-of-mass/center-of-buoyancy of link i are not reported for
brevity. The dry friction has not been considered to avoid chattering behavior
and increase output readability. All the links are modeled as cylinders. Their
volumes, thus, are computed as δi = π ∗Li r2
i , where Li and ri are the link
lengths and radius, respectively. The modeling of the hydrodynamic eﬀects,

242
A. Mathematical models
using the strip theory, beneﬁt from the simpliﬁed geometric assumption on
the link shapes [127, 256].
For each of the cylinder the mass is computed as:
M i =


mi + ρδi
0
0
0
mi + ρδi
0
0
0
mi + 0.1mi
∗
∗
∗
∗
∗
∗
∗
∗
∗
. . .
∗
∗
∗
∗
∗
∗
∗
∗
∗
Ix,i + πρL3
i r2
i /12
0
0
0
Iy,i + πρL3
i r2
i /12
0
0
0
Iz,i


,
where the link inertia are given in Table A.2. In this case, the cylinder length
is considered along the zi axis.
Table A.2. Link inertia [Nms2] of the manipulator mounted on the underwater
vehicle
Ix,i
Iy,i
Iz,i
Ixy,i
Ixz,i
Iyz,i
link 1
100
30
100
0
0
0
link 2
20
80
80
0
0
0
link 3
2
0.5
2
0
0
0
link 4
50
9
50
0
0
0
link 5
5
4
5
0
0
0
link 6
5
5
3
0
0
0
The linear skin and quadratic drag coeﬃcients are given by Ds = 0.4 and
Cd = 0.6, respectively. The lift coeﬃcient Cl is considered null.
A.4 ODIN
The mathematical model of ODIN, an AUV developed at the ASL, University
of Hawaii, has been used to test several, experimentally validated, control laws
([34, 35, 83, 216, 232, 233, 251, 320]):

A.5 9-DOF UVMS
243
r
=
0.3
m
vehicle radius
m
=
125
kg
vehicle weight
rB
G
=
[ 0
0
0.05 ]T
m
rB
B
=
[ 0
0
0 ]T
m
W
=
1226
N
Ix
=
8
Nms2
Iy
=
8
Nms2
Iz
=
8
Nms2
Ixy
=
0
Nms2
Iyz
=
0
Nms2
Ixz
=
0
Nms2
The buoyancy B is computed considering the vehicle as spherical. The
hydrodynamic derivatives are given by:
X ˙u
=
−62.5
Xu|u|
=
−48
Y ˙v
=
−62.5
Yv|v|
=
−48
Z ˙ω
=
−62.5
Zω|ω|
=
−48
Kp
=
−30
Kp|p|
=
−80
Mq
=
−30
Mq|q|
=
−80
Nr
=
−30
Nr|r|
=
−80
It can be observed that a diagonal structures of the matrices M A and D
is obtained.
According to simple geometrical considerations, the following TCM is
observed:
Bv =


s
−s
−s
s
0
0
0
0
s
−s
−s
−s
0
0
0
0
0
0
0
0
−1
−1
−1
−1
0
0
0
0
l1s
l1s
−l1s
−l1s
0
0
0
0
l1s
−l1s
−l1s
l1s
l2
−l2
l2
−l2
0
0
0
0


with s = sin(π/4), l1 = 0.381 m and l2 = 0.508 m.
A.5 9-DOF UVMS
Details of the mathematical model of the vehicle carrying a 3-link manipu-
lator used in the simulations of the interaction control chapter can be found
in [231], its main characteristics are reported in the following. The vehicle
considered is a box of 2 × 1 × 0.5 m characterized by:

244
A. Mathematical models
L
=
2
m
vehicle length
m
=
1050
kg
vehicle weight
rB
G
=
[ 0
0
0 ]T
m
rB
B
=
[ 0
0
0 ]T
m
W
=
10300
N
B
=
7900
N
Ix
=
66
Nms2
Iy
=
223
Nms2
Iz
=
223
Nms2
Ixy
=
0
Nms2
Iyz
=
0
Nms2
Ixz
=
0
Nms2
The hydrodynamic derivatives are given by:
X ˙u
=
−307
Y ˙v
=
−1025
Z ˙ω
=
−1537
K ˙p
=
−12
M ˙q
=
−36
N ˙r
=
−36
The drag coeﬃcient is given by Cd = 1.8. All the hydrodynamic eﬀects
have been computed by assuming a regular shape for the vehicle and the link
(a box and a cylinder, respectively).
In Tables A.3 and A.4 the mass, length, radius and inertia of the 3-link
manipulator carried by the vehicle are reported.
Table A.3. mass [kg], length [m] and radius [m] of the 9-DOF UVMS
mass
length
radius
link 1
33
1
0.1
link 2
19
1
0.08
link 3
12
1
0.07

A.5 9-DOF UVMS
245
Table A.4. Link inertia [Nms2] of the 3-link manipulator mounted on the under-
water vehicle
Ix,i
Iy,i
Iz,i
Ixy,i
Ixz,i
Iyz,i
link 1
11
11
1.65
0
0
0
link 2
6.3
6.3
0.75
0
0
0
link 3
4
4
.4
0
0
0

References
1. Alekseev Y.K., Kostenko V.V. and Shumsky A.Y. (1994) Use of Identiﬁca-
tion and Fault Diagnostic Methods for Underwater Robotics. In: MTS/IEEE
Techno-Ocean ’94, Brest, France, 489–494
2. Alessandri A., Caccia M., Indiveri G. and Veruggio G. (1998) Application of
LS and EKF Techniques to the Identiﬁcation of Underwater Vehicles. In: 1998
IEEE International Conference on Control Applications, Trieste, Italy, 1084–
1088
3. Alessandri A., Caccia M. and Veruggio G. (1998) A Model-Based Approach
to Fault Diagnosis in Unmanned Underwater Vehicles. In: MTS/IEEE Techno-
Ocean ’98, Nice, France, 825–829
4. Alessandri A., Caccia M. and Veruggio G. (1999) Fault Detection of Actuator
Faults in Unmanned Underwater Vehicles. Control Engineering Practice, 7:357–
368
5. Alessandri A., Gibbons A., Healey A.J. and Veruggio G. (1999) Robust Model-
Based Fault Diagnosis for Unmanned Underwater Vehicles Using Sliding Mode-
Observers. In: Proceedings International Symposium Unmanned Untethered
Submersible Technology, Durham, New Hampshire, 352-359
6. Alvarez A., Caﬀaz A., Caiti A., Casalino G., Clerici E., Giorgi F., Gualdesi L.
and Turetta A. (2004) Design and realization of a very low cost prototypal
autonomous vehicle for coastal oceanographic missions. In: IFAC Conference
on Control Applications in Marine Systems - CAMS 2004, Ancona, Italy, 471–
476
7. Alvarez A., Caﬀaz A., Caiti A., Casalino G., Clerici E., Giorgi F., Gualdesi L.,
Turetta A. and Viviani R. (2005) Folaga: a very low cost autonomous under-
water vehicle for coastal oceanography. In: Proceddings 16th IFAC World Con-
gress, Praha, Czech Republic
8. Antonelli G. (2003) Underwater Robots. Motion and Force Control of Vehicle-
Manipulator Systems. Springer Tracts in Advanced Robotics, Springer-Verlag,
Heidelberg, Germany
9. Antonelli G. (2003) A New Adaptive Control Law for the Phantom ROV. In:
7th IFAC Symposium on Robot Control, Wroclaw, Poland, 569–574
10. Antonelli G. (2002) A survey of fault detection/tolerance strategies for AUVs
and ROVs. In: Fault diagnosis and tolerance for mechatronic systems. Recent
advances, Caccavale F., Villani L., (Eds.), Springer Tracts in Advanced Robo-
tics, Springer-Verlag, 109–127
11. Antonelli G.1, Caccavale F. and Chiaverini S. (1999) A Modular Scheme for Ad-
aptive Control of Underwater Vehicle-Manipulator Systems. In: 1999 American
Control Conference, San Diego, California, 3008–3012
1 Note that, as customary in Italy, for the papers concerning the Author of this
monograph, G. Antonelli and when all co-Authors are Italians, the list is in
alphabetical order regardless of the importance of single contributions

248
References
12. Antonelli G., Caccavale F. and Chiaverini S. (2001) A Virtual Decomposition
Based Approach to Adaptive Control of Underwater Vehicle-Manipulator Sy-
stems. In: 9th Mediterranean Conference on Control and Automation, Dubro-
vnik, Croatia
13. Antonelli G., Caccavale F., Chiaverini S. and Fusco G. (2001) A Novel Adap-
tive Control Law for Autonomous Underwater Vehicles. In: IEEE International
Conference on Robotics and Automation, Seoul, Korea, 447–451
14. Antonelli G., Caccavale F., Chiaverini S. and Fusco G. (2001) On the Use of
Integral Control Actions for Autonomous Underwater Vehicles. In: European
Control Conference, Porto, Portugal, 1186–1191
15. Antonelli G., Caccavale F., Chiaverini S. and Fusco G. (2002) A Modular Con-
trol Law for Underwater Vehicle-Manipulator Systems Adapting on a Minimum
Set of Parameters. In: IFAC World Congress, Barcelona, Spain
16. Antonelli G., Caccavale F., Chiaverini S. and Fusco G. (2003) A Novel Adaptive
Control Law for Underwater Vehicles. IEEE Transactions on Control Systems
Technology, 11(2):221–232
17. Antonelli G., Caccavale F., Chiaverini S. and Villani L. (1998) An Output
Feedback Algorithm for Position and Attitude Tracking Control of Underwater
Vehicles. In: 1998 IEEE Conference on Decision and Control, Tampa, Florida,
4567–4572
18. Antonelli G., Caccavale F., Chiaverini S. and Villani L. (2000) Tracking Control
for Underwater Vehicle-Manipulator Systems with Velocity Estimation. IEEE
Journal of Oceanic Engineering, 25:399–413
19. Antonelli G., Caccavale F., Chiaverini S. and Villani L. (2000) Control of Un-
derwater Vehicle-Manipulator Systems Using Only Position and Orientation
Measurements. 6th IFAC Symposium on Robot Control, Wien, Austria, 463–
468
20. Antonelli G. and Chiaverini S. (1998) Task-Priority Redundancy Resolution for
Underwater Vehicle-Manipulator Systems. In: IEEE International Conference
on Robotics and Automation, Leuven, Belgium, 768–773
21. Antonelli G. and Chiaverini S. (1998) Singularity-Free Regulation of Under-
water Vehicle-Manipulator Systems. In: 1998 American Control Conference,
Philadelphia, PA, 399–403
22. Antonelli G. and Chiaverini S. (1998) Adaptive Tracking Control of Underwa-
ter Vehicle-Manipulator Systems. In: 1998 IEEE International Conference on
Control Applications, Trieste, Italy, 1089–1093
23. Antonelli G. and Chiaverini S. (2000) SIMURV. A simulation package for Un-
derwater Vehicle-Manipulator Systems. In: 3rd IMACS Symposium on Mathe-
matical Modelling, Wien, Austria, 533–536
24. Antonelli G. and Chiaverini S. (2000) Fuzzy Inverse Kinematics for Underwater
Vehicle-Manipulator Systems. 7th International Symposium on Advances in Ro-
bot Kinematics, Piran-Portoroˇz, Slovenia. In: Advances in Robot Kinematics,
J. Lenar˘ci˘c and M.M. Stani˘si´c (Eds.), Kluwer Academic Publishers, Dordrecht,
the Netherlands, 249–256
25. Antonelli G. and Chiaverini S. (2000) A Fuzzy Approach to Redundancy Reso-
lution for Underwater Vehicle-Manipulator Systems. In: 5th IFAC Conference
on Manoeuvring and Control of Marine Craft, Aalborg, Denmark
26. Antonelli G. and Chiaverini S. (2002) A Fuzzy Approach to Redundancy Reso-
lution for Underwater Vehicle-Manipulator Systems. Control Engineering Prac-
tice, in press
27. Antonelli G. and Chiaverini S. (2003) Obstacle Avoidance for a Platoon of
Autonomous Underwater Vehicles. In: 6 th IFAC Conference on Manoeuvring
and Control of Marine Craft, Girona, Spain, 143–148

References
249
28. Antonelli G. and Chiaverini S. (2003). Kinematic Control of a Platoon of Au-
tonomous Vehicles. In: Proceedings 2003 IEEE International Conference on Ro-
botics and Automation. Taipei, Taiwan, 1464–1469
29. Antonelli G. and Chiaverini S. (2003) Fuzzy Redundancy Resolution and Mo-
tion Coordination for Underwater Vehicle-Manipulator Systems. IEEE Tran-
sactions on Fuzzy Systems, 11(1)109–120
30. Antonelli G. and Chiaverini S. (2004). Fault Tolerant Kinematic Control of
Platoons of Autonomous Vehicles. In: Proceedings 2003 IEEE International
Conference on Robotics and Automation, New Orleans, Louisiana, 3313–3318
31. Antonelli G., Chiaverini S. and Sarkar N. (1999) Explicit Force Control for
Underwater Vehicle-Manipulator Systems with Adaptive Motion Control Law.
In: IEEE Hong Kong Symposium on Robotics and Control, Hong Kong, 361–366
32. Antonelli G., Chiaverini S. and Sarkar N. (1999) An Explicit Force Control
Scheme for Underwater Vehicle-Manipulator Systems. In: IEEE/RSJ Interna-
tional Conference on Intelligent Robots and Systems, Kyongju, Korea, 136–141
33. Antonelli G., Chiaverini S. and Sarkar N. (2001) External Force Control for
Underwater Vehicle-Manipulator Systems. IEEE Transactions on Robotics and
Automation, 17:931–938
34. Antonelli G., Chiaverini S., Sarkar N. and West M. (1999) Singularity-free
Adaptive Control for Underwater Vehicles in 6 dof. Experimental Results on
ODIN. In: IEEE International Symposium on Computational Intelligence in
Robotics and Automation, Monterey, California, 64–69
35. Antonelli G., Chiaverini S., Sarkar N. and West M. (2001) Adaptive Control
of an Autonomous Underwater Vehicle: Experimental Results on ODIN. IEEE
Transactions on Control System Technology, 9:756–765
36. Antonelli G., Sarkar N. and Chiaverini S. (1999) External Force Control for Un-
derwater Vehicle-Manipulator Systems. In: 1999 IEEE Conference on Decision
and Control, Phoenix, Arizona, 2975–2980
37. Antonelli G., Sarkar N. and Chiaverini S. (2002) Explicit Force Control for
Underwater Vehicle-Manipulator Systems. Robotica, 20:251–260
38. Arimoto S. (1996) Control Theory of Nonlinear Mechanical Systems. A
Passivity-based and Circuit-theoretic Approach. Clarendon Press
39. Babcock IV P.S. and Zinchuk J.J. (1990) Fault Tolerant Design Optimiza-
tion: Application to an Autonomous Underwater Vechile Navigation System.
In: Proceedings Symposium on Autonomous Underwater Vehicle Technology,
Washington DC, 34–43
40. Bachmayer L., Whitcomb L.L. and Grosenbaugh M.A. (2000) An Accurate
Four-Quadrant Nonlinear Dynamical Model for Marine Trhusters: Theory and
Experimental Validation. IEEE Journal of Oceanic Engineering, 25:146–159
41. Balasuriya A. and T. Ura (2000) A Study of the Control of an Underactua-
ted Underwater Robotic Vehicle. In: IEEE/RSJ International Conference on
Intelligent Robots and Systems, Takamatsu, Japan, 849–854
42. Barnett D. and McClaran S. (1996) Architecture of the Texas A& M Autono-
mous Underwater Vehicle Controller. In: Proceedings Symposium on Autono-
mous Underwater Vehicle Technology, Monterey, California, 231–237
43. Beale G.O. and Kim J.H. (2000) A Robust Approach to Reconﬁgurable Control.
In: 5th IFAC Conference on Manoeuvring and Control of Marine Craft, Aalborg,
Denmark, 197–202
44. Ben-Israel and Greville T.N.E (1974) Generalized Inverse: Theory and Appli-
cation. Wiley, New York
45. Berghuis H. and Nijmeijer H. (1993) A Passivity Approach to Controller-
Observer Design for Robots. IEEE Transactions on Robotics and Automation,
9:740–754

250
References
46. Bellingham J.G., Goudey C.A., Consi T.R., Bales J.W., Atwood D.K., Leo-
nard J.J. and Chryssostomidis C. (1994) A second generation survey AUV.
In: Proceedings Symposium on Autonomous Underwater Vehicle Technology,
Cambridge, Massachusetts, 148–155
47. Bhatta P, Fiorelli E., Lekien F. Leonard N.E., Paley D.A., Zhang F., Bach-
mayer R., Davis R.E, Fratantoni D.M. and Sepulchre R. (2005) Coordination
of an Underwater Glider Fleet for Adaptive Ocean Sampling. In: Proceedings
IARP International Workshop on Underwater Robotics, Genova, Italy, 61–69
48. Bishop B.E. (2003) On the Use of Redundant Manipulator Techniques for
Control of Platoons of Cooperating Robotic Vehicles. IEEE Transcations of
Systems, Man and Cybernetics, part. A, 33(5):608–615
49. Bishop B.E. (2005) Control of Platoons of Nonholonomic Vehicles Using Re-
dundant Manipulators Analogs. In: IEEE International Conference on Robotics
and Automation, Barcelona, Spain, 4617–4622
50. Bishop B.E. and Stilwell D.J. (2001) On the Application of Redundant Ma-
nipulator Techniques to the Control of Platoons of Autonomous Vehicles.
In: Proceddings 2001 IEEE International Conference on Control Applications,
M´exico City, Mexico, 823–828
51. Boeke M., Aust E. and Schultheiss G.F. (1991) Underwater Operation of a 6-
Axes Robot Based on Oﬄine Programming and Graphical Simulation. In: IEEE
International Conference on Robotics and Automation, Sacramento, California,
1342–1347
52. Bono R., Bruzzone G., Bruzzone G. and Caccia M. (1999) ROV Actuator Fault
Diagnosis Through Servo-Ampliﬁers’ Monitoring: an Operational Experience.
In: MTS/IEEE Techno-Ocean ’99, Seattle, Washington, 1318–1324
53. Bono R., Caccia M. and Verruggio G. (1994) Software Architecture and Pool
Tests of a Small Virtual AUV. In: IFAC Symposium on Robot Control, Capri,
Italy, 1031–1036
54. Borges de Sousa J. and Healey A.J. (2005) A Case Study in Mixed Initia-
tive Coordination and Control of AUVs. In: Proceedings IARP International
Workshop on Underwater Robotics, Genova, Italy, 103–111
55. Borges de Sousa J., Johansson K.H., Speranzon A. and Da Silva J.E. (2005) A
Control Architecture for Multiple Submarines in Coordinated Search Missions.
In: IFAC World Congress, Praha, Czech Republic
56. Bozzo G.M., Maddalena D. and Terribile A. (1991) Laboratory and Sea Tests
of the Supervisory Controlled Underwater Telemanipulation System. In: IEEE
International Conference on Robotics and Automation, Sacramento, California,
1336–1341
57. Brady M., Hellerbach J.M., Johnson T.L., Lozano-Perez T., Mason M.T. (1982)
Robot Motion: Planning and Control, MIT Press
58. Brooks R.A. (1986) A Robust Layered Control System for a Mobile Robot.
IEEE Journal of Robotics and Automation, 2(1):14–23
59. Broome D. and Wang Q. (1991) Adaptive Control of Underwater Robotic Mani-
pulators. In: International Conference on Advanced Robotics, Pisa, Italy, 1321–
1326
60. Caccavale F., Natale C., Siciliano B. and Villani L. (1998) Resolved-acceleration
control of robot manipulators: A critical review with experiments. Robotica,
16:565–573
61. Caccia M., Bono R., Bruzzone Ga., Bruzzone Gi., Spirandelli E. and Verrug-
gio G. (2001) Experiences on Actuator Fault Detection, Diagnosis and Acco-
modation for ROVs. In: Proceedings International Symposium Unmanned Un-
tethered Submersible Technology, Durham, New Hampshire

References
251
62. Caccia M., Indiveri G. and Veruggio G. (2000) Modeling and Identiﬁcation
of Open-Frame Variable Conﬁguration Underwater Vehicles. IEEE Journal of
Oceanic Engineering, 25:227-240
63. Caccia M. and Verruggio G. (2000) Guidance and Control of a Reconﬁgurable
Unmanned Underwater Vehicle. Control Engineering Practice, 8:21–37
64. Caiti A., Munaf`o A. and Viviani R. (2005) Cooperating autonomous underwa-
ter vehicles to estimate ocean environmental parameters. In: Proceedings IARP
International Workshop on Underwater Robotics, Genova, Italy, 87–94
65. Cancilliere F.M. (1994) Advanced UUV Technology. In: MTS/IEEE Techno-
Ocean ’94, Brest, France, 147–151
66. Cannell C.J. and Stilwell D.J. (2005) A Comparison of Two Approaches for
Adaptive Sampling of Environmental Processes Using Autonomous Underwater
Vehicles. In: MTS/IEEE Techno-Ocean ’05, Washington, DC
67. Canudas de Wit C., Olguin Diaz E., and Perrier M. (1998) Robust Nonlinear
Control of an Underwater Vehicle/Manipulator System with Composite Dyna-
mics. In: IEEE International Conference on Robotics and Automation, Leuven,
Belgium, 452–457
68. Canudas de Wit C., Olguin Diaz E., and Perrier M. (1998) Control of Underwa-
ter Vehicle/Manipulator with Composite Dynamics. In: 1998 American Control
Conference, Philadelphia, PA, 389–393
69. Canudas de Wit C., Olguin Diaz E., and Perrier M. (2000) Nonlinear Control of
an Underwater Vehicle/Manipulator System with Composite Dynamics. IEEE
Transactions on Control System Technology, 8:948–960
70. Canudas de Wit C., Siciliano B., and Bastin G. (Eds.) (1996) Theory of Robot
Control, Springer-Verlag, Berlin, Germany
71. Casalino G., Angeletti D., Bozzo T. and Marani G. (2001) Dexterous Under-
water Object Manipulation via Multirobot Cooperating Systems. In: IEEE In-
ternational Conference on Robotics and Automation, Seoul, Korea, 3220–3225
72. Casalino G. and Turetta A. (2003) Coordination and Control of Multiarm,
Non-Holonomic Mobile Manipulators. In: IEEE/RSJ International Conference
on Intelligent Robots and Systems, Las Vegas, Nevada, 2203–2210
73. Casalino G., Turetta A. and Sorbara A. (2005) Computationally Distributed
Control and Coordination Architectures for Underwater Reconﬁgurable Free-
Flying Multi-Manipulators. In: Proceedings IARP International Workshop on
Underwater Robotics, Genova, Italy, 145–152
74. Cecchi D., Caiti A, Fioravanti S., Baralli F and Bovio E. (2005) Target Detec-
tion Using Multiple Autonomous Underwater Vehicles. In: Proceedings IARP
International Workshop on Underwater Robotics, Genova, Italy, 161–168
75. Chen X., Marco D., Smith S., An E., Ganesan K. and Healey T. (1997) 6
DOF Nonlinear AUV Simulation Toolbox. In: Proceedings MTS/IEEE Ocean
97, Halifax, Canada
76. Chiacchio P., Chiaverini S., Sciavicco L. and Siciliano B. (1991) Closed-Loop In-
verse Kinematics Schemes for Constrained Redundant Manipulators with Task
Space Augmentation and Task Priority Strategy. The International Journal of
Robotics Research, 10(4)410–425
77. Chiaverini S. (1993) Estimate of the Two Smallest Singular Values of the Jaco-
bian Matrix: Application to Damped Least-Squares Inverse Kinematics. Journal
of Robotic Systems, 10:991–1008
78. Chiaverini S. (1997) Singularity-Robust Task-Priority Redundancy Resolution
for Real-Time Kinematic Control of Robot Manipulators. IEEE Transactions
on Robotics and Automation, 13:398–410

252
References
79. Chiaverini S. and Sciavicco L. (1993) The Parallel Approach to Force/Position
Control of Robotic Manipulators. IEEE Transactions on Robotics and Auto-
mation, 9:361–373
80. Chiaverini S. and Siciliano B. (1999) The Unit Quaternion: A Useful Tool for
Inverse Kinematics of Robot Manipulators. Systems Analysis, Modelling and
Simulation, 35:45–60
81. Choi H.T., Hanai A., Choi S.K. and Yuh J. (2003) Development of an Under-
water Robot: ODIN III. In: IEEE/RSJ International Conference on Intelligent
Robots and Systems, Las Vegas, Nevada, 836–841
82. Choi S.K. and Yuh J. (1993) Design of Advanced Underwater Robotic Vehicle
and graphic Workstation. In: IEEE International Conference on Robotics and
Automation, Atlanta, Georgia, 99–105
83. Choi S.K. and Yuh J. (1996) Experimental Study on a Learning Control Sy-
stem with Bound Estimation for Underwater Robots. In: Autonomous Robots,
Yuh J., Ura T., Bekey G.A. (Eds.), Kluwer Academic Publishers, 187–194
84. Choi S.K. and Yuh J. (1996) Experimental Study on a Learning Control System
with Bound Estimation for Underwater Robots. In: 1996 IEEE International
Conference on Robotics and Automation, Minneapolis, Minnesota, 2160–2165
85. Chou J.C.K. (1992) Quaternion Kinematic and Dynamic Diﬀerential Equati-
ons. IEEE Transactions on Robotics and Automation, 1:53–64
86. Chung G.B., Eom K.S., Yi B.-J., Suh I.H., Oh S.RS., and Cho Y.J. (2000)
Disturbance Observer-Based Robust Control for Underwater Robotic Systems
with Passive Joints. In: IEEE International Conference on Robotics and Auto-
mation, San Francisco, California, 1775–1780
87. Chung G.B., Eom K.S., Yi B.-J., Suh I.H., Oh S.RS., Chung W.K., and
Kim J.O. (2001) Disturbance Observer-Based Robust Control for Underwa-
ter Robotic Systems with Passive Joints. In: Journal of Advanced Robotics,
15:575–588
88. Conte G. and Serrani A. (1994) Robust Lyapunov-Based Design for Autono-
mous Underwater Vehicles. In: IFAC Symposium on Robot Control, Capri, Italy,
321–326
89. Conte G. and Serrani A. (1997) Robust Lyapunov-Based Design for Autono-
mous Underwater Vehicles. 5th IFAC Symposium on Robot Control, Nantes,
France, 321–326
90. Conte G. and Serrani A. (1998) Global Robust Tracking with Disturbance
Attenuation for Unmanned Underwater Vehicles. In: 1998 IEEE International
Conference on Control Applications, Trieste, Italy, 1094–1098
91. Corradini M.L. and Orlando G. (1997) A Discrete Adaptive Variable-Structure
Controller for MIMO Systems, and Its Application to an Underwater ROV.
IEEE Transactions on Control Systems Technology, 5:349–359
92. Coste-Mani`ere E., Peuch A., Perrier M., Rigaud V., Wang H.H., Rock S.M.
and Lee M.J. (1996) Joint Evaluation of Mission Programming for Underwa-
ter Robots. In: IEEE International Conference on Robotics and Automation,
Minneapolis, Minnesota, 2492-2497
93. Cristi R., Pappulias F.A. and Healey A. (1990) Adaptive Sliding Mode Control
of Autonomous Underwater Vehicles in the Dive Plane. IEEE Journal of Oceanic
Engineering, 15:152–160
94. Cui Y., Podder T. and Sarkar N. (1999) Impedance Control of Underwater
Vehicle-Manipulator Systems (UVMS). In: IEEE/RSJ International Conference
on Intelligent Robots and Systems, Kyongju, Korea, 148–153
95. Cui Y. and Sarkar N. (2000) A Uniﬁed Force Control Approach to Autonomus
Underwater Manipulation. In: IEEE International Conference on Robotics and
Automation, San Francisco, California, 1263–1268

References
253
96. Cui Y. and Sarkar N. (2001) A uniﬁed force control approach to autonomous
underwater manipulation. Robotica, 19(3):255–266
97. da Cunha J.P.V.S., Costa R.R. and Hsu L. (1995) Design of a High Perfor-
mance Variable Structure Position Control of ROV’s. IEEE Journal of Oceanic
Engineering, 20:42–55
98. De Angelis C.M. and Whitney J.E. (2000) Adaptive Calibration of an Au-
tonomous Underwater Vehicle Navigation System. In: MTS/IEEE Techno-
Ocean ’00, Providence, Rhode Island, 1273–1275
99. D´egoulange E. and Dauchez P. (1994) External Force Control of an Industrial
PUMA 560 Robot. Journal of Robotic Systems, 11:523–540
100. Demin X. and Lei G. (2000) Wavelet Transform and its Application to Auto-
nomous Underwater Vehicle Control System Fault Detection. In: Proceedings
2000 International Symposium Underwater Technology, Tokyo, Japan, 99–104
101. De Schutter J. and Van Brussel H. (1988) Compliant Robot Motion II. A
Control Approach Based on External Control Loops. International Journal of
Robotics Research, 7:18–33
102. Deuker B., Perrier M. and Amy B. (1998) Fault-Diagnosis of Subsea Robots
Using Neuro-Symbolic Hybrid Systems. In: MTS/IEEE Techno-Ocean ’98, Nice,
France, 830–834
103. Driankov D., Hellendoorn H. and Reinfrank M. (1995) An Introduction to
Fuzzy Control. Springer-Verlag, Berlin, Germany
104. Dubowsky S. and Papadopoulos E. (1993) The Kinematics, Dynamics, and
Control of Free-Flying and Free-Floating Space Robotic Systems. IEEE Tran-
sactions on Robotics and Automation, 9:531–543
105. Dunnigan M.W. and Russell G.T. (1994) Reduction of the Dynamic Cou-
pling Between a Manipulator and ROV Using Variable Structure Control. In:
International Conference on Control, 1578–1583
106. Dunnigan M.W. and Russell G.T. (1998) Evaluation and Reduction of the
Dynamic Coupling Between a Manipulator and an Underwater Vehicle. IEEE
Journal of Oceanic Engineering, 23:260–273
107. Egeland O. (1987) Task-Space Tracking with Redundant Manipulators. IEEE
Journal Robotics and Automation, 3:471–475
108. Egeland O. and Godhavn J.-M. (1994) Passivity-Based Adaptive Attitude
Control of a Rigid Spacecraft. In: IEEE Transactions on Automatic Control,
39:842–846
109. Egeland O. and Sagli J.R. (1990) Kinematics and control of a Space manipu-
lator using the Macro-Micro Manipulator Concept. In: 1990 IEEE Conference
on Decision and Control, Honolulu, Hawaii, 3096–3101
110. Egeland O. and Sagli J.R. (1993) Coordination of Motion in a Spa-
cecraft/Manipulator System. The International Journal of Robotics Research,
12:366–379
111. Eiani-Cherif S., Lebret G. and Perrier M. (1997) Identiﬁcation and Control of
a Submarine Vehicle. 5th IFAC Symposium on Robot Control, Nantes, France,
307–312
112. Faltinsen O.M. (1990) Sea Loads on Ships and Oﬀshore Structures, Cambridge
University Press
113. Farrell J., Berger T. and Appleby B.D. (1993) Using Learning Techniques to
Accomodate Unanticipated Faults. Control Systems Magazine, 13(3):40–49
114. Featherstone
R.
(1983)
The
Calculation
of
Robot
Dynamics
Using
Articulated-Body Inertias. The International Journal of Robotics Research,
2:13–30
115. Featherstone R. (1987) Robot Dynamics Algorithms, Kluwer, Boston

254
References
116. Feezor M.D., Sorrel F.Y., Blankinship P.R. and Bellingham J.G. (2001) Au-
tonomous Underwater Vehicle Homing/Docking via Electromagnetic Guidance.
IEEE Journal of Oceanic Engineering, 26(4):515–521
117. Ferguson J.S. (1998) The Theseus Autonomous Underwater Vehicle. Two Suc-
cessful Missions. In: Proceedings 1998 International Symposium Underwater
Technology, Tokyo, Japan, 109–114
118. Ferguson J.S., Pope A., Butler B., Verrall R. (1999) Theseus AUV - Two
Record Breaking Missions. Sea Technology Magazine, 65–70
119. Ferretti G., Magnani G., and Rocco P. (1997) Toward the Implementation
of Hybrid Position/Force Control in Industrial Robots. IEEE Transactions on
Robotics and Automation, 16:838–845
120. Fiorelli E., Leonard N.E., Bhatta P, Paley D.A., Bachmayer R. and Fratan-
toni D.M. (2004) Multi-AUV Control and Adaptive Sampling in Monterey Bay.
In: IEEE Autonomous Underwater Vehicles 2004: Workshop on Multiple AUV
Operations (AUV04)
121. Fjellstad O. and Fossen T.I. (1994) Singularity-Free Tracking of Unmanned
Underwater Vehicles in 6 DOF. In: 1994 IEEE Conference on Decision and
Control, Lake Buena Vista, Florida, 1128–1133
122. Fjellstad O. and Fossen T.I. (1994) Position and Attitude Tracking of AUVs: A
Quaternion Feedback Approach. IEEE Journal of Oceanic Engineering, 19:512–
518
123. Fjellstad O. and Fossen T.I. (1994) Quaternion Feedback Regulation of Un-
derwater Vehicles. In: 1994 IEEE International Conference on Control Applica-
tions, Glasgow, United Kingdom, 857–862
124. Fossen T.I. (1991) Adaptive Macro-Micro Control of Nonlinear Underwater
Robotic Systems. In: International Conference on Advanced Robotics, Pisa,
Italy, 1569–1572
125. Fossen T.I. and Balchen J. (1991) The NEROV Autonomous Underwater Ve-
hicle. In: MTS/IEEE Techno-Ocean ’91 Conference, Honolulu, Hawaii
126. Fossen T.I. and Sagatun S.I. (1991) Adaptive Control of Nonlinear Systems:
A case Study of Underwater Robotic Systems. Journal of Robotic Systems,
8:393–412
127. Fossen T.I. (1994) Guidance and Control of Ocean Vehicles, John Wiley &
Sons, Chichester, United Kingdom
128. Fossen T.I. (2002) Marine Control Systems: Guidance, Navigation and Control
of Ships, Rigs and Underwater Vehicles, Marine Cybernetics AS, Trondheim,
Norway
129. Fossen T.I. and Fjellstad O. (1995) Robust Adaptive Control of Underwater
Vehicles: A Comparative Study. In: IFAC Workshop on Control Applications in
Marine Systems, Trondheim, Norway, 66–74
130. Fossen T.I. and Sagatun S.I. (1991) Adaptive Control of Nonlinear Under-
water Robotic Systems. In: IEEE International Conference on Robotics and
Automation, Sacramento, California, 1687–1694
131. Fraisse P., Lapierre L., Dauchez P. (2000) Position/Force Control of an Under-
water Vehicle Equipped with a Robotic Manipulator. In: 6th IFAC Symposium
on Robot Control, Wien, Austria, 475–479
132. Gadre A., Mach J.E., Stilwell D.J., and Wick C.E. (2003) Design of a Proto-
type Miniature Autonomous Underwater Vehicle. In: IEEE/RSJ International
Conference on Intelligent Robots and Systems, Las Vegas, Nevada, 842–846
133. Gadre A. and Stilwell D.J. (2005) A Complete Solution to Underwater Na-
vigation in the Presence of Unknown Currents Based on Range Measurements
from a Single Location. In: IEEE/RSJ International Conference on Intelligent
Robots and Systems, Edmonton, Canada, 1743–1748

References
255
134. Garcia R., Puig J., Ridao P. and CuﬁX. (2002) Augmented State Kalman
Filtering for AUV Navigation. In: IEEE International Conference on Robotics
and Automation, Washington, DC, 4010–4015
135. Gautier M. (1990) Numerical Calculation of the Base Inertial Parameters of
Robots. In: 1990 IEEE International Confernece on Robotics and Automation,
Cincinnati, Ohio, 1020–1025
136. Ghabcheloo R., Pascoal A., Silvestre C., Carvalho D. (2005) Coordinated
Motion Control of Multiple Autonomous Underwater Vehicle. In: Proceedings
IARP International Workshop on Underwater Robotics, Genova, Italy, 41–50
137. Goheen K.R. (1991) Modeling Methods for Underwater Robotic Vehicle Dy-
namics. Journal of Robotic Systems, 8:295–317
138. Goheen K.R. and Jeﬀreys R. (1993) Multivariable Self-Tuning Autopilots for
Autonomous and Remotely Operated Underwater Vehicles. IEEE Journal of
Oceanic Engineering, 15:144–151
139. Grenon G., An P.E., Smith S.M. and Healey A.J. (2001) Enhancement of the
Inertial Navigation System for the Morpheus Autonomous Underwater Vehicles.
IEEE Journal of Oceanic Engineering, 26:548–560
140. Hamilton K., Lane D., Taylor N. and Brown K. (2001) Fault Diagnosis on
Autonomous Robotic Vehicles with RECOVERY: an Integrated Heterogeneous-
Knowledge Approach. In: IEEE International Conference on Robotics and Au-
tomation, San Francisco, California, 1251–1256
141. Healey A.J. (2001) Application of Formation Control for Multi-Vehicle Ro-
botic Minesweeping. In: Proceddings 40 th IEEE Conference on Decision and
Control, Orlando, Florida, 1497–1502
142. Healey A.J. (1992) A Neural Network Approach to Failure Diagnostics for
Underwater Vehicles. In: Proceedings IEEE Oceanic Engineering Society Sym-
posium on Autonomous Underwater Vehicles, Washington D.C., 131–134
143. Healey A.J. (1998) Analytical Redundancy and Fuzzy Inference in AUV Fault
Detection and Compensation. In: Proceedings Oceanology 1998, Brighton, 45–
50
144. Healey A.J., Bahrke F., Navarrete J. (1992) Failure Diagnostics for Underwa-
ter Vehicles: A Neural Network Approach. In: IFAC Conference on Maneuvering
and Control of Marine Craft, Aalborg, Denmark, 293–306
145. Healey A.J. and Lienard D. (1993) Multivariable Sliding Mode Control for
Autonomous Diving and Steering of Unmanned Underwater Vehicles. IEEE
Journal of Oceanic Engineering, 18:327–339
146. Healey A.J. and Marco D.B. (1992) Experimental Veriﬁcation of Mission Plan-
ning by Autonomous Mission Execution and Data Visualization Using the NPS
AUV II. In: Proceedings 1992 Symposium Autonomous Underwater Vehicle
Technology, Washington, DC, 65–72
147. Healey A.J., Rock S.M., Cody S., Miles D. and Brown J.P. (1995) Toward an
Improved Understanding of Thruster Dynamics for Underwater Vehicles. IEEE
Journal of Oceanic Engineering, 20:354–361
148. Healey A.J. and Kim Y. (1997) Control of Small Robotic Vehicles in Unex-
ploded Ordnance Clearance. In: IEEE International Conference Robotics and
Automation, Albuquerque, New Mexico
149. Hogan N. (1985) Impedance Control: An Approach to Manipulation. (Parts
I-III). Transactions ASME Journal of Dynamic Systems, Measurement, and
Control, 107:1–24
150. Hooker W. and Margulies G. (1965) The Dynamical Attitude Equations for
an n-Body Satellite. Journal Astronaut Science, XII(4), 123

256
References
151. Hornfeld W. and Frenzel E. (1998) Intelligent AUV On-Board Health Mo-
nitoring Software (INDOS). In: MTS/IEEE Techno-Ocean ’98, Nice, France,
815–819
152. Hsu L., Costa R.R., Lizarrade F. and Soares daCunha J.P.V. (2000) Avalia¸c˜ao
Experimental da Modelagem e Simula¸c˜ao da Dinˆamica de um Ve´ıculo Subma-
rino de Opera¸c˜ao Remota (in Portuguese). Revista Controle & Automac˜ao,
11:82–93
153. Hsu L., Costa R.R., Lizarrade F. and Soares daCunha J.P.V. (2000) Dynamic
Positioning of Remotely Operated Underwater Vehicles. IEEE Robotics and
Automation Magazine, 21–31
154. Hutchison B. (1991) Velocity Aided Inertial Navigation. In: Proceedings Sen-
sor Navigation Issues for UUVs, Cambridge, Massachusetts, 8–9
155. Ihle I.-A. F. , Skjetne R. and Fossen T.I. (2004) Nonlinear formation control
of marine craft with experimental results. In: IEEE Conference on Decision and
Control, Paradise Island, Bahamas, 1:680–685
156. Ioi K. and Itoh K. (1990) Modelling and Simulation of an Underwater Mani-
pulator. Advanced Robotics, 4:303–317
157. Indiveri G. (1998) Modelling and Identiﬁcation of Underwater Robotic Sy-
stems, Ph.D. Thesis in Electronic Engineering and Computer Science, Univer-
sity of Genova, Genova, Italy
158. Ikeda T., Mita T. and Yamakita M. (2005) Formation Control of Autonomous
Underwater Vehicles. In: IFAC World Congress, Praha, Czech Republic
159. Ishimi K., Ohtsuki Y., Manabe T. and Nakashima K. (1991) Manipulation
System for Subsea Operation. In: IEEE International Conference on Robotics
and Automation, Sacramento, California, 1348–1353
160. Ishibashi S., Shimizu E. and Masanori I. (2001) Motion Planning for a Ma-
nipulator Equipped on an Underwater Robot. In: 27th Annnual Conference of
the IEEE Industrial Electronics Society, Denver, Colorado, 558–563
161. Ishibashi S., Shimizu E. and Ito M. (2002) The Motion Planning for Under-
water Manipulators Depend on Genetic Algorithm. In: IFAC World Congress,
Barcelona, Spain
162. Ishitsuka M., Sagara S. and Ishii K. (2004) Dynamics Analysis and resolved
Acceleration Control of an Autonomous Underwater Vehicle Equipped with
a manipulator. In: 2004 International Symposium on Underwater Technology,
Taipei, Taiwan, 277–281
163. Jun B.H., Lee P.M. and Lee J. (2004) Manipulability Analysis of Underwater
Robotics Arms on ROV and Application to Task-Oriented Joint Conﬁguration.
In: MTS/IEEE Techno-Ocean ’04, Kobe, Japan, 1548–1553
164. Jun B.H., Lee J. and Lee P.M. (2005) A Repetitive Periodic Motion Plan-
ning of Articulated Underwater Robots Subjet to Drag Optimization. In:
IEEE/RSJ International Conference on Intelligent Robots and Systems, Ed-
monton, Canada, 3868–3873
165. Kajita H. and Kosuge K. (1997) Force Control of Robot Floating on the Water
Utilizing Vehicle Restoring Force. In: IEEE/RSJ International Conference on
Intelligent Robots and Systems, Grenoble, France, 162–167
166. Kapellos D.S. and Espiau B. (1997) Design of Control Procedures for a Free-
ﬂoating Underwater Manipulation System. In: IEEE International Conference
Robotics and Automation, Albuquerque, New Mexico, 2158–2165
167. Kato N., Kojima J., Kato Y., Matumoto S. and Asakawa K. (1998) Opti-
mization of Conﬁguration of Autonomous Underwater Vehicles for Inspection
of Underwater Cables. In: IEEE International Conference on Robotics and Au-
tomation, Leuven, Belgium, 1045-1050

References
257
168. Kato N. and Lane D.M. (1996) Co-ordinated Control of Multiple Manipulators
in Underwater Robots. In: IEEE International Conference on Robotics and
Automation, Minneapolis, Minnesota, 2505–2510
169. Kawamura S. and Sakagami N. (2002) Analysis on Dynamics of Underwa-
ter Robot Manipulators Basing on Iteratived Learning Control and Time-Scale
Transformation. In: IEEE International Conference on Robotics and Automa-
tion, Washington, DC, 1088–1094
170. Khalil H.K. (1996) Nonlinear Systems, 2nd Edition, Prentice-Hall, Upper
Saddle River, New Jersey
171. Khatib O. (1987) A Uniﬁed Approach for Motion and Force Control of Robot
Manipulators: The Operational Space Formulation. IEEE Journal of Robotics
and Automation, 3:43–53
172. Khatib O., Yokoi K., Chang K., Ruspini D., Holmberg R. and Casal A.
(1996) Vehicle/Arm Coordination and Multiple Mobile Manipulator Decentra-
lized Cooperation. IEEE/RSJ International Conference on Intelligent Robots
and Systems, Osaka, Japon, 546–553.
173. Kim J.H. and Beale G.O. (2001) Fault Detection and Classiﬁcation in Un-
derwater Vehicle Using the T 2 Statistic. In: 9 th Mediterranean Conference on
Control and Automation, Dubrovnik, Croatia
174. Kim J., Chung W.K. and Yuh J. (2003) Dynamic Analysis and Two-Time
Scale Control for Underwater Vehicle-Manipulator Systems. In: IEEE/RSJ In-
ternational Conference on Intelligent Robots and Systems, Las Vegas, Nevada,
577–582
175. Kim T. and Yuh J. (2001) A Novel Neuro-Fuzzy Controller for Autonomous
Underwater Vehicle. In: IEEE International Conference on Robotics and Auto-
mation, Seoul, Korea, 2350–2355
176. Kim J., Han J., Chung W.K. and Yuh J. (2005) Accurate Thruster Modeling
with Non-Parallel Ambient Flow for Underwater Vehicles. In: IEEE/RSJ In-
ternational Conference on Intelligent Robots and Systems, Edmonton, Canada,
1737–1742
177. Kirkwood W.J., Shane F., Gashler D., Au D., Thomas H., Sibenac M.,
O’Reilly T.C., Konvalina T., McEwen R., Bahlavouni A., Tervalon N. and Bel-
lingham J.G. (2001) Development of a Long Endurance Autonomous Under-
water Vehicle for Ocean Science Exploration. In: MTS/IEEE Conference and
Exhibition Oceans ’01, Honolulu, Hawaii, 1504–1512
178. Koh T.H., Lau M.W.S., Low E., Seet G., Swei S. Cheng P.L. (2002) A Study of
the Control of an Underactuated Underwater Robotic Vehicle. In: Proceedings
2002 IEEE/RSJ International Conference on Intelligent Robots and Systems,
Lausanne, Switzerland, 2049–2054
179. Kumar R. and Stover J.A. (2000) A Behavior-Based Intelligent Control Ar-
chitecture with Application to Coordination of Multiple Underwater Vehicles.
IEEE Transcations of Systems, Man and Cybernetics, 30(6):767–784
180. Lane D.M., Bartolini G., Cannata G., Casalino G., Davies J.B.C., Veruggio G.,
Canals M. and Smith C. (1998) Advanced Manipulation for Deep Underwater
Sampling: the AMADEUS Research Project. In: 1998 IEEE International Con-
ference on Control Applications, Trieste, Italy, 1068–1073
181. Larkum T. and Broome D. (1994) Advanced Controller for an Underwater
Manipulator. In: 1994 IEEE International Conference on Control Applications,
Glasgow, United Kingdom, 1081–1086
182. Leabourne K.N., Rock S.M. and Lee M.J. (1998) Model Development of an
Underwater Manipulator for Coordinated Arm-Vehicle Control. In: MTS/IEEE
Techno-Ocean ’98, Nice, France, 941–946

258
References
183. Lee W. and Kang G. (1998) A Fuzzy Model-Based Controller of an Under-
water Robotic vehicle Under the Inﬂuence of Thruster Dynamics. In: IEEE
International Conference on Robotics and Automation, Leuven, Belgium, 756-
761
184. Lee C.S.G., Wang J. and Yuh J. (2001) Self-Adaptive Neuro-Fuzzy Sitemaps
with Fast Parameters Learning for Autonomous Underwater Vehicle Control.
In: Journal of Advanced Robotics, 15(5):589–608
185. Lee P.M. and Yuh J. (1999) Application of Non-regressor Based Adaptive Con-
trol to an Underwater Mobile Platform-mounted Manipulator. In: 1999 IEEE
International Conference on Control Applications, Kohala Coast, Hawaii, 1135–
1140
186. Lee M. and Choi H.S. (2000) A Robust Neural Controller for Underwater
Robot Manipulators. IEEE Transactions on Neural Networks, 11:1465–1470
187. Leonard N.E. and Fiorelli E. (2001) Virtual leaders, artiﬁcial potentials and
coordinated control of groups. In: 2001 IEEE Conference on Decision and Con-
trol, Orlando, Forida, 2968–2973
188. Leonessa A and Morel Y. (2005) Indirect Collaborative Control of Autono-
mous Vehicles with Limited Communication Bandwidth. In: Proceedings IARP
International Workshop on Underwater Robotics, Genova, Italy, 233–240
189. L´evesque B. and Richard M.J. (1994) Dynamic Analysis of a Manipulator in a
Fluid Environment. The International Journal of Robotics Research, 13:221–231
190. Liceaga E.C., Qiao H., Liceaga-Castro J. (1991) Modelling and Control of
a Marine Robot Arm. In: 1991 IEEE Conference on Decision and Control,
Brighton, England, 704–705
191. Li´egeois A. (1977) Automatic Supervisory Control of the Conﬁguration and
Behavior of Muldibody Mechanisms. IEEE Transcations of Systems, Man and
Cybernetics, 7:868–871
192. Lin C.C., Chang C.C., Jeng M.D. and Wang J.H.(2001) Development of an In-
telligent Underwater Robotic System. In: MTS/IEEE Techno-Ocean ’01, 1036–
1040
193. Lizarralde F., Wen J.T., and Hsu L. (1995) Quaternion-Based Coordinated
Control of a Subsea Mobile Manipulator with Only Position Measurements.
In: 1995 IEEE Conference on Decision and Control, New Orleans, Louisiana,
3996–4001
194. Loncari´c J. (1987) Normal Forms of Stiﬀness and Compliance Matrices. IEEE
Journal of Robotics and Automation, 3:567–572
195. Maciejewski A.A. and Klein C.A. (1985) Obstacle Avoidance for Kinematically
Redundant Manipulators in Dynamically Varying Environments. International
Journal of Robotics Research, 4:109–117
196. Maciejewski A.A. (1988) Numerical Filtering for the Operation of Robotic Ma-
nipulators through Kinematicaly Singular Conﬁgurations. Journal of Robotic
Systems, 5:527–552
197. Mahesh H. and Yuh J. (1991) Control of Underwater Robots in Working Mode.
In: IEEE International Conference on Robotics and Automation, Sacramento,
California, 2630–2635
198. Mahesh H., Yuh J. and Lakshmi R. (1991) A Coordinated Control of an Under-
water Vehicle and Robotic Manipulator. Journal of Robotic Systems, 8:339–370
199. Mangoubi R.S., Appleby B.D., Verghese G.C. and VanderVelde W.E. (1995)
A Robust Failure Detection and Isolation Algorithm. In: Proceedings 34th Con-
ference Decision & Control, New Orleans, Louisiana, 2377–2382
200. Marchand ´E., Chaumette F., Spindler F. and Perrier M. (2001) Controlling the
Manipulator of an Underwater ROV Using a Coarse Calibrated Pan/Tilt Ca-

References
259
mera. In: IEEE International Conference on Robotics and Automation, Seoul,
Korea, 2773–2778
201. Marco D.B. and Healey A.J. (2001) Command, Control, and Navigation Ex-
perimental Results with the NPS ARIES AUV. IEEE Journal Oceanic Enginee-
ring, 26:466–476
202. Mason M.T. (1981) Compliance and Force Control for Computer Controlled
Manipulators. IEEE Transactions on Systems, Man, and Cybernetics, 11:418–
432
203. McLain T.W. and Rock S.M. (1988) Development and Experimental Valida-
tion of an Underwater Manipulator Hydrodynamic Model. The International
Journal of Robotics Research, 17:748–759
204. McLain T.W., Rock S.M. and Lee M.J. (1995) Experiments in the Coordina-
tion of Underwater Manipulator and Vehicle Control. In: MTS/IEEE Techno-
Ocean ’95, 1208–1215
205. McLain T.W., Rock S.M. and Lee M.J. (1996) Coordinated Control of an Un-
derwater Robotic System. In: Video Proceedings IEEE International Conference
on Robotics and Automation, Minneapolis, Minnesota
206. McLain T.W., Rock S.M. and Lee M.J. (1996) Experiments in the Coordina-
ted Control of an Underwater Arm/Vehicle System. In: Autonomous Robots,
Yuh J., Ura T., Bekey G.A. (Eds.), Kluwer Academic Publishers, 213–232
207. McMillan S. and Orin D.E. (1995) Eﬃcient Computation of Articulated-Body
Inertias Using Successive Axial Screws. IEEE Transactions on Robotics and
Automation, 11:606-611
208. McMillan S., Orin D.E. and McGhee R.B. (1994) Eﬃcient Dynamic Simula-
tion of an Unmanned Underwater Vehicle with a Manipulator. In: IEEE In-
ternational Conference on Robotics and Automation, San Diego, California,
1133-1140
209. Nakamura Y. and Hanafusa H. (1986) Inverse Kinematic Solutions with Singu-
larity Robustness for Robot Manipulator Control. Transactions ASME Journal
of Dynamic Systems, Measurements and Control, 108:163–171
210. Nakamura Y., Hanafusa H. and Yoshikawa T. (1987) Task-Priority Based
Redundancy Control of Robot Manipulators. International Journal Robotics
Research, 6:3–15
211. Natale C., Siciliano B. and Villani L. (1999) Spatial Impedance Control of
Redundant Manipulators. In: IEEE International Conference on Robotics and
Automation, Detroit, Michigan, 1788–1793
212. Nelson E., McClaran S. and Barnett D. (1996) Development and Validation
of the Texas A&M University Autonomous Underwater Vehicle Controller. In:
Proceedings Symposium on Autonomous Underwater Vehicle Technology, Mon-
terey California, 203–208
213. Nemec B. (1997) Force Control of Redundant Robots. In: IFAC Symposium
on Robot Control, Nantes, France, 215–220
214. Newman J.N. (1977) Marine Hydrodynamics, MIT Press, Cambridge, MA
215. Nie J., Yuh J., Kardash E., and Fossen T.I. (1998) On-Board Sensor-Based
Adaptive Control of Small UUVS in Very Shallow Water. In: IFAC Conference
on Control Applications in Marine Systems, Fukuoka, Japan, 201–206
216. Nie J., Yuh J., Kardash E., and Fossen T.I. (2000) On-Board Sensor-Based
Adaptive Control of Small UUV’s in Very Shallow Water. International Journal
of Adaptive Control Signal Process, 13:441–451
217. Oda M. and Ohkami Y. (1997) Coordinated Control of Spacecraft Attitude
and Space Manipulators. Control Engineering Practice, 5:11–21

260
References
218. ¨Ogren P. and Leonard N.E. (2003). Obstacle avoidance in Formation. In: Pro-
ceedings 2003 IEEE International Conference on Robotics and Automation.
Taipei, Taiwan, 2492–2497
219. Oh Y., Chung W.K., Youm Y., Suh I.H. (1998) Motion/Force Decomposition
of Redundant Manipulator and Its Application to Hybrid Impedance Control.
In: IEEE International Conference on Robotics and Automation, Leuven, Bel-
gium, 1441–1446
220. Olguin
Diaz
E.
(1999)
Mod´elisation
et
Commande
d’un
Syst`eme
V´ehicule/Manipulateur Sous-Marin (in French), Th`ese pour le grade de Docteur
de l’Institut National Polytechnique de Grenoble, Grenoble, France
221. Oliveira P. and Pascoal A. (1998) Navigation Systems Design: an Application
of Multi-Rate Filtering Theory. In: MTS/IEEE Techno-Ocean ’98, Nice, France,
1348–1353
222. Orrick A., McDermott M., Barnett D., Nelson E. and Williams G. (1994)
Failure Detection in an Autonomous Underwater Vehicle. In: Proceedings Sym-
posium on Autonomous Underwater Vehicle Technology, Cambridge, Massa-
chusetts, 377–382
223. Ortega R. and Spong M.W. (1989) Adaptive Motion Control of Rigid Robots:
a Tutorial. Automatica, 25:877–888
224. Padir T. and Koivo A.J. (2003) Modeling of Two Underwater Vehicles with
Manipulators On-Board. IEEE Transcations of Systems, Man and Cybernetics,
33:1259–1364
225. Pascoal A., Kaminer I. and Oliveira P. (1998) Navigation System Design Using
Time-Varying Complementary Filters. In: 1998 IEEE International Conference
on Control Applications, Trieste, Italy, 1099–1104
226. Peng Z. and Adachi N. (1993) Compliant Motion Control of Kinematically
Redundant Manipulators. IEEE Transactions on Robotics and Automation,
9:831–837
227. Pereira J. and Duncan A. (2000) System identiﬁcation of Underwater Vehicles.
In: Proceedings 2000 International Symposium Underwater Technology, Tokyo,
Japan, 419–424
228. Perrault D. and Nahon M. (1998) Fault-Tolerant Control of an Autonomous
Underwater Vehicle. In: MTS/IEEE Techno-Ocean ’98, Nice, France, 820–824
229. Petrich J., Woolsey C.A. and Stilwell D.J. (2005) Identiﬁcation of a Low-
Complexity Flow Field Model for AUV Applications. In: MTS/IEEE Techno-
Ocean ’05, Washington, DC
230. Pierrot F., Benoit M. and Dauchez P. (1998) SamoS: A Pythagorean Solution
for Omnidirectional Underwater Vehicles. J.Lenarˇciˇc and M.L. Husty (eds.),
In: Advances in Robot Kinematics: Analysis and Control, Kluwer Academic
Publishers, the Netherlands
231. Podder T.K. (1998) Dynamic and Control of Kinematically Redundant Un-
derwater Vehicle-Manipulator Systems. Autonomous Systems Laboratory Tech-
nical Report, ASL 98-01, University of Hawaii, Honolulu, Hawaii
232. Podder T.K., Antonelli G. and Sarkar N. (2000) Fault Tolerant Control of an
Autonomous Underwater Vehicle Under Thruster Redundancy: Simulations and
Experiments. In: IEEE International Conference on Robotics and Automation,
San Francisco, California, 1251–1256
233. Podder T.K., Antonelli G. and Sarkar N. (2001) An Experimental Investi-
gation into the Fault-Tolerant Control of an Autonomous Underwater Vehicle.
Journal of Advanced Robotics, 15:501–520
234. Podder T.K. and Sarkar N. (1999) Fault Tolerant Decomposition of Thruster
Forces of an Autonomous Underwater Vehicle. In: IEEE International Confe-
rence on Robotics and Automation, Leuven, Belgium, 84–89

References
261
235. Podder T.K. and Sarkar N. (2000) Dynamic Trajectory Planning for Autono-
mous Underwater Vehicle-Manipulator Systems. In: IEEE International Confe-
rence on Robotics and Automation, San Francisco, California, 3461–3466
236. Podder T.K. and Sarkar N. (2001) Fault Tolerant Control of an Autonomous
Underwater Vehicle Under Thruster Redundancy. Robotics and Autonomous
Systems, 34:39–52
237. Quinn A.W. and Lane D. (1994) Computational Issues in Motion Planning
for Autonomous Underwater Vehicle with Manipulators. In: IEEE Symposium
on Autonomus Underwater Vehicle Technology, Boston, 255–262
238. Rae G.J.S. and Dunn S.E. (1994) On-Line Damage Detection for Autonomous
Underwater Vehicle. In: Proceedings Symposium on Autonomous Underwater
Vehicle Technology, Cambridge, Massachusetts, 383–392
239. Raibert M.H. and Craig J.J. (1981) Hybrid Position/Force Control of Mani-
pulators. Transactions ASME Journal of Dynamic Systems, Measurement, and
Control, 102:126–133
240. Rauch H.E. (1994) Intelligent Fault Diagnosis and Control Reconﬁguration.
In: IEEE International Symposium on Intelligent Control, Chicago, Illinois, 6–
12
241. Reynolds C. (1987) Flocks, herd and schools: A distributed behavioral model.
In: Proceedings Computer Graphics, 21(4)25–34
242. Richard M.J. and L´evesque B. (1996) Stochastic Dynamical Modelling of an
Open-Chain Manipulator in a Fluid Environment. Mechanism and Machine
Theory, 31:561–572
243. Riedel J.S. (2000) Shallow Water Stationkeeping of an Autonomous Under-
water Vehicle: The Experimental Results of a Disturbance Compensation Con-
troller. In: MTS/IEEE Techno-Ocean ’00, Providence, Rhode Island, 1017–1024
244. Riedel J.S. and Healey A.J. (1998) Shallow Water Station Keeping of AUV
Using Multi-Sensor Fusion for Wave Disturbance Prediction and Compensation.
In: MTS/IEEE Techno-Ocean ’98, Kobe, Japan, 1064–1068
245. Ryu J.H., Kwon D.S. and Lee P.M. (2001) Control of Underwater Manipula-
tors Mounted on a ROV Using Base Force Information. In: IEEE International
Conference on Robotics and Automation, Seoul, Korea, 3238–3243
246. Roberson R.E. and Schwertassek R. (1988) Dynamics of Multibody Systems,
Springer-Verlag, Berlin
247. Roberson D.G. and Stilwell D.J. (2005) Control fo an Autonomous Underwater
Vehicle Platoon with a Switched Communication Netwrok. In: 2005 American
Control Conference, Portland, Oregon, 4333–4338
248. Salisbury J.K. (1980) Active Stiﬀness Control of a Manipulator in Cartesian
Coordinates. In: 1980 IEEE Conference on Decision and Control, Albuquerque,
New Mexico, 95–100
249. Sarkar N. and Podder T.K. (1999) Motion Coordination of Underwater Vehicle
Manipulator Systems Subject to Drag Optimization. In: IEEE International
Conference on Robotics and Automation, Detroit, Michigan, 387–392
250. Sarkar N. and Podder T.K. (2001) Coordinated Motion Planning and Control
Autonomous Underwater Vehicle-Manipulator Systems Subject to Drag Opti-
mization. IEEE Journal Oceanic Engineering, 26:228–239
251. Sarkar N., Podder T.K., and Antonelli G. (2002) Fault-accommodating thru-
ster force allocation of an AUV considering thruster redundancy and saturation.
IEEE Transactions on Robotics and Automation, 18:223–233
252. Sarkar N., Yuh J., and Podder T.K. (1999) Adaptive Control of Underwater
Vehicle-Manipulator Systems Subject to Joint Limits. In: IEEE/RSJ Interna-
tional Conference on Intelligent Robots and Systems, Kyongju, Korea, 142–147

262
References
253. Sarpkaya T. and Isaacson M. (1981) Mechanics of Wave Forces on Oﬀshore
Structures, Van Nostrand Reinhold Co., New York, New York
254. Sciavicco L. and Siciliano B. (2000) Modeling and Control of Robot Manipu-
lators. Springer-Verlag, London, United Kingdom
255. Schjølberg I. and Fossen T.I. (1994) Modelling and Control of Underwater
Vehicle-Manipulator Systems. In: 3rd Conference on Marine Craft Manoeuvring
and Control, Southampton, United Kingdom, 45–57
256. Schjølberg I. (1996) Modeling and Control of Underwater Robotic Systems,
PhD thesis for the Doktor ingeniør degree, Norwegian University of Science and
Technology, Trondheim, Norway
257. Schubak G.E. and Scott D.S. (1995) A Techno-Economic Comparison of Power
Systems for Autonomous Underwater Vehicles. IEEE Journal Oceanic Enginee-
ring, 20:94–100
258. Schultz A.C. (1992) Adaptive Testing of Controllers for Autonomous Vehicles.
In: Proceedings Symposium on Autonomous Underwater Vehicle Technology,
Washington, DC, 158–164
259. Serrani A. (1997) Modellistica, Simulazione e Controllo Nonlineare di Veicoli
Sottomarini (in Italian), Dottorato di Ricerca in Sistemi Artiﬁciali, Universit`a
degli Studi di Ancona, Ancona, Italy, 1997
260. Serrani A. and Zanoli S.M. (1998) Designing Guidance and Control Schemes
for AUVs Using an Integrated Simulation Environment. In: IEEE International
Conference on Robotics and Automation, Leuven, Belgium, 1079–1083
261. Shepperd S. W. (1978) Quaternion from Rotation Matrix. Journal of Guidance
and Control, 1:223–224
262. Siciliano B. (1990) Kinematic Control of Redundant Robot Manipulators: A
Tutorial. Journal of Intelligent Robotic Systems, 3:201–212
263. Siciliano B. and Slotine J.J. (1991), A General Framework for Managing Mul-
tiple Tasks in Highly Redundant Robotic Systems, In: International Conference
on Advanced Robotics, Pisa, Italy, 1211–1216
264. Slotine J.J. (1984) Sliding Controller Design for Non-Linear Systems. Inter-
national Journal of Control, 40:421–434
265. Slotine J.J. and Benedetto M.D.D. (1990) Hamiltonian Adaptive Control of
Spacecraft. IEEE Transactions on Automatic Control, 35:848–852
266. Slotine J.J. and Li W. (1987) Adaptive Strategies in Constrained Manipula-
tion. In: IEEE International Conference on Robotics and Automation, Raleigh,
NC, 595–601
267. Slotine J.J. and Li W. (1987) On the Adaptive Control of Robot Manipulators.
International Journal of Robotics Research, 6:49–59
268. Slotine J.J. and Li W. (1991) Applied Nonlinear Control, Prentice-Hall Inter-
national Editions, USA
269. Smallwood D.A. and Whitcomb L.L. (2001) Toward Model Based Dynamic
Positioning of Underwater Robotic Vehicles. In: MTS/IEEE Techno-Ocean ’01,
1106–1114
270. Smallwood D.A. and Whitcomb L.L. (2002) The Eﬀect of Model Accuracy
and Thruster Saturation on Tracking Performance of Model Based Controllers
for Underwater Robotic Vehicles: Experimental Results. In: IEEE International
Conference on Robotics and Automation, Washington, DC, 1081–1087
271. Smallwood D.A. and Whitcomb L.L. (2003) Adaptive Identiﬁcation of Dyna-
mically Positioned Underwater Robotic Vehicles. IEEE Transactions on Control
System Technology, 11(4):505–515
272. SNAME, The Society of Naval Architects and Marine Engineers (1950) No-
menclature for Treating the Motion of a Submerged Body Through a Fluid. In:
Technical and Research Bulletin, 1–5

References
263
273. Solvang B., Deng Z., Lien T.K. (2000) A Methodological Framework for Deve-
loping ROV-Manipulator Systems for Underwater Unmanned Intervention. In:
MTS/IEEE Techno-Ocean ’01, 1085–1091
274. Stevens B. and Lewis F. (1992) Aircraft Control and Simulations, John Wiley
& Sons Ltd., Chichester, United Kingdom
275. Stilwell D.J. (2002) Decentralized Control Synthesis for a Platoon of Autono-
mous Vehicles. In: IEEE International Conference on Robotics and Automation,
Washington, DC, 744–749
276. Stilwell D.J. and Bishop B.E. (2000) Platoons of Underwater Vehicles. IEEE
Control Systems Magazine, 45–52
277. Stilwell D.J. and Bishop B.E. (2002) Redundant Manipulator Techniques for
Path Planning and Control of a Platoon of Autonomous Vehicles. In: Conference
on Decision and Control, Las Vegas, Nevada, 2093–2098
278. Stilwell D.J. and Bishop B.E. (2005) Redundant Manipulator Techniques for
Partially Decentralized Path Planning and Control of a Platoon of Autono-
mous Vehicles. IEEE Transcations of Systems, Man and Cybernetics, part. B,
35(4):842–848
279. Stokey R.P. (1994) Software Design Technique for the Man Machine Interface
to a Complex Underwater Vehicle. In: MTS/IEEE Techno-Ocean ’94, Brest,
France, 119–124
280. Sun Y.C. and Cheah C.C. (2003) Adaptive Setpoint Control for Autonomous
Underwater Vehicles. In: 2003 IEEE Conference on Decision and Control, Maui,
Hawaii, 1262–1267
281. Sun Y.C. and Cheah C.C. (2004) Adaptive Setpoint Control of Underwater
Vehicle-Manipulator Systems. In: 2004 IEEE Conference on Robotics, Automa-
tion and Mechatronics, Singapore, 434–439
282. Sun Y.C. and Cheah C.C. (2004) Coordinated Control of Multiple Coope-
rative Underwater Vehicle-Manipulator Systems Holding a Common Load. In:
MTS/IEEE Techno-Ocean ’04, Kobe, Japan, 1542–1547
283. Tacconi G. and Tiano A. (1989) Reconﬁgurable Control of an Autonomous
Underwater Vehicle. In: Proceedings International Symposium Unmanned Un-
tethered Submersible Technology, 486–493
284. Takai M., Fujii T. and Ura T. (1995) A Model Based Diagnosis System for Au-
tonomous Underwater Vehicles using Artiﬁcal Neural Networks. In: Proceedings
International Symposium Unmanned Untethered Submersible Technology, Dur-
ham, New Hampshire, 243–252
285. Tarn T.J. and Yang S.P. (1997) Modeling and Control for Underwater Robotic
Manipulators - An example. In: IEEE International Conference Robotics and
Automation, Albuquerque, New Mexico, 2166–2171
286. Tarn T.J., Shoults G.A. and Yang S.P. (1996) A Dynamic Model for an Under-
water Vehicle with a Robotic Manipulator using Kane’s Method. Autonomous
Robots, 3:269–283
287. Terribile A., Prendin W. and Lanza R. (1994) An innovative Electromechani-
cal Underwater Telemanipulator - Present Status and Future Development. In:
MTS/IEEE Techno-Ocean ’94, II:188–191
288. Tong G. and Jimao Z. (1998) A Rapid Reconﬁguration Strategy for UUV
Control. In: Proceedings 1998 International Symposium Underwater Techno-
logy, Tokyo, Japan, 478–483
289. Tsukamoto C.L., Lee W., Yuh J., Choi S.K. and Lorentz J. (1997) Compa-
rison Study on Advanced Thrusters Control of Underwater Robots. In: IEEE
International Conference Robotics and Automation, Albuquerque, New Mexico,
1845–1850

264
References
290. Uliana M., Andreucci F. and B. Papalia (1997) The Navigation System of
an Autonomous Underwater Vehicle for Antarctic Exploration. In: MTS/IEEE
Techno-Ocean ’97, Halifax, Canada, 403–408
291. Uny Cao Y., Fukunaga A.S. and Kanhg A.B. (1997) Cooperative Mobile Ro-
botics: Antecedents and Directions. Autonomous Robots, 4:7–27
292. Ura T. (2003) Steps to Intelligent AUVs. In: 6 th IFAC Conference on Ma-
noeuvring and Control of Marine Craft, Girona, Spain
293. Utkin V.I. (1977) Variable Structure Systems with Sliding Modes. IEEE Tran-
sactions in Automatic and Control, 22:212–222
294. Valavanis K.P., Gracanin D., Matijasevic M., Kolluru R. and Demetriou G.A.
(1997) Control Architecture for Autonomous Underwater Vehicles. IEEE Con-
trol Systems, 48–64
295. Vasudevan C. and Ganesan K. (1996) Case-Based path Planning for Autono-
mous Underwater Vehicles. In: Underwater Robots, Yuh, Ura and Bekey (Eds.),
Kluwer Academic Publishers, Boston, 1–15
296. Walker N.W. and Orin D.E. (1982) Eﬃcient Dynamic Computer Simulation of
Robotic Mechanisms. Journal of Dynamic Systems, Measurements, and Control,
104:205–211
297. Wang H.H., Rock S.M. and Lee M.J. (1995) Experiments in Automatic Re-
trieval of Underwater Objects with an AUV. In: MTS/IEEE Techno-Ocean ’95,
366–373
298. Wen J.T.Y. and Delgado K.K. (1994) The Attitude Control Problem. IEEE
Transactions on Automatic Control, 36:1148–1162
299. Whitcomb L.L. (2000) Underwater Robotics: Out of the Research Laboratory
and Into the Field. In: 2000 IEEE International Conference on Robotics and
Automation, San Franscisco, California, 709–716
300. Whitcomb L.L. and Yoerger D.R. (1999) Development, Comparison, and Preli-
minary Experimental Validation of Nonlinear Dynamic Thruster Models. IEEE
Journal of Oceanic Engineering, 24:481–494
301. Whitney D.E. (1969) Resolved motion rate control of manipulators and human
prostheses. IEEE Transactions of Man, Machine Systems, 10:47–53
302. Whitney D.E. (1977) Force Feedback Control of Manipulators Fine Motions.
Transactions ASME Journal of Dynamic Systems, Measurement, and Control,
99:91–97
303. Whitney D.E. (1987) Historical Perspective and State of the Art in Robot
Force Control. International Journal of Robotics Research, 6:3–14
304. Xiaoping Y., Bachmann E.R. and Arslan S. (2000) An Inertial Navigation
System for Small Autonomous Underwater Vehicles. In: IEEE International
Conference on Robotics and Automation, San Francisco, California, 1781–1786
305. Xu Y. and Shum H.Y. (1994) Dynamic Control and Coupling of a Free-Flying
Space Robot System. Journal of Robotic Systems, 11:573–589
306. Yang K.C., Yuh J. and Choi S.K. (1998) Experimental Study of Fault-Tolerant
System Design for Underwater Robots. In: IEEE International Conference on
Robotics and Automation, Leuven, Belgium, 1051–1056
307. Yang K.C., Yuh J. and Choi S.K. (1999) Fault-Tolerant System Design of an
Autonomous Underwater Vehicle – ODIN: an experimental study. International
Journal of System Science, 30(9):1011–1019
308. Yavnai A. (1996) Architecture for an Autonomous Reconﬁgureable Intelligent
Control System (ARICS). In: Proceedings Symposium on Autonomous Under-
water Vehicle Technology, Monterey, California, 238–245
309. Yoerger D.R., Cooke J.G., and Slotine J.J. (1990) The Inﬂuence of Thruster
Dynamics on Underwater Vehicle Behavior and their Incorporation into Control
System Design. IEEE Journal of Oceanic Engineering, 15:167–178

References
265
310. Yoerger D.R., Slotine J.J. (1985) Robust Trajectory Control of Underwater
Vehicles. IEEE Journal of Oceanic Engineering, 10:462–470
311. Yoerger D.R., Slotine J.J. (1991) Adaptive Sliding Control of an Experimental
underwater Vehicle. IEEE International Conference on Robotics and Automa-
tion, Sacramento, California, 2746–2751
312. Yoshikawa T. (1985) Manipulability of Robotic Mechanisms. International
Journal Robotics Research, 4:3–95
313. Young K-K.D. (1978) Controller Design for a Manipulator Using Theory of
Variable Structure Systems. IEEE Transactions on Systems, Man and Cyber-
netics, 8:210–218
314. Yuh J. (1990) Modeling and Control of Underwater Robotic Vehicles. IEEE
Transactions on Systems, Man, and Cybernetics, 20:1475–1483
315. Yuh J. (1995) Development in Underwater Robotics. In: IEEE International
Conference on Robotics and Automation, Nagoya, Japan, 1862–1867
316. Yuh J. (1996) An Adaptive and Learning Control System for Underwater
Robots. In: Proceedings 13th IFAC World Congress, San Francisco, California,
A:145–150
317. Yuh J. (2003) Exploring the Mysterious Underwater World with Robots. In:
6 th IFAC Conference on Manoeuvring and Control of Marine Craft, Girona,
Spain
318. Yuh J., Choi S.K., Ikehara C., Kim G.H., McMurty G., Ghasemi-Nejhad M.,
Sarkar N. and Sugihara K. (1998) Design of a semi-autonomous underwater
vehicle for intervention missions (SAUVIM). In: Proceedings 1998 International
Symposium on Underwater Technology, 63–68
319. Yuh J. and Gonugunta K.V (1993) Learning Control of Underwater Robo-
tic Vehicles. In: IEEE International Conference on Robotics and Automation,
Atlanta, Georgia, 106–111
320. Yuh J., Nie J. and Lee C.S.G. (1999) Experimental Study on Adaptive Control
of Underwater Robots. In: IEEE International Conference on Robotics and
Automation, Detroit, Michigan, 393–398
321. Yuh J. and West M. (2001) Underwater Robotics. Journal of Advanced Ro-
botics, 15:609–639
322. Yuh J., Zhao S. and Lee P.M. (2001) Application of Adaptive Disturbance
Observer Control to an Underwater Manipulator. In: IEEE International Con-
ference on Robotics and Automation, Seoul, Korea, 3244–3249
323. Zhao S. and Yuh J. (2005) Experimental Study on Advanced Underwater
Robot Control. IEEE Transactions on Robotics, 21(4):695–703
324. Zheng X. (1992) Layered Control of a Practical AUV. In: Proceedings Sympo-
sium on Autonomous Underwater Vehicle Technology, Washington, DC, 142–
147
325. Zhu W.H., Xi Y.G., Zhong Z.J., Bien Z. and De Schutter J. (1997) Virtual De-
composition Based Control for Generalized High Dimensional Robotic Systems
with Complicated Structure. IEEE Transactions on Robotics and Automation,
13:411-436

