
Import variants
import math
# module1.py
is math in sys.modules?
sys.modules
if not, load it and insert ref
math
<module object>
add symbol math to module1's global namespace referencing the same object
module1.globals()
math
<module object>
(if math symbol already exists in module1's namespace, replace reference)
math symbol in namespace

Import variants
import math as r_math
# module1.py
is math in sys.modules?
sys.modules
if not, load it and insert ref
math
<module object>
add symbol r_math to module1's global namespace referencing the same object
module1.globals()
r_math
<module object>
(if r_math symbol already exists in module1's namespace, replace reference)
math symbol not in namespace
r_math symbol in namespace

Import variants
from math import sqrt
# module1.py
is math in sys.modules?
sys.modules
if not, load it and insert ref
math
<module object>
add symbol sqrt to module1's global namespace referencing math.sqrt
module1.globals()
sqrt
<math.sqrt object>
(if sqrt symbol already exists in module1's namespace, replace reference)
math symbol not in namespace

Import variants
from math import sqrt as r_sqrt
# module1.py
is math in sys.modules?
sys.modules
if not, load it and insert ref
math
<module object>
add symbol r_sqrt to module1's global namespace referencing math.sqrt
module1.globals()
r_sqrt <math.sqrt object>
(if r_sqrt symbol already exists in module1's namespace, replace reference)
math symbol not in namespace

Import variants
from math import *
# module1.py
is math in sys.modules?
sys.modules
if not, load it and insert ref
math
<module object>
add "all" symbols defined in math to module1's global namespace
module1.globals()
pi
<math.pi object>
(if any symbols already exists in module1's namespace, replace their reference)
what "all" means can be 
defined by the module being 
imported
sin
<math.sin object>
and many more…
math symbol not in namespace

In every case the math module was loaded into memory and referenced in sys.modules
Commonality
Running
from math import sqrt
did not "partially" load math
it only affected what symbols were placed in module1's namespace!
Things may be different with packages, but for simple modules this is the behavior

Why from <module> import * can lead to bugs
from cmath import *
# module1.py
module1.globals()
sqrt
<cmath.sqrt>
…
from math import *
module1.globals()
sqrt
<math.sqrt>
…

Efficiency
What's more efficient?
import math
from math import sqrt
or
importing
→same amount of work
calling
math.sqrt(2)
sqrt(2)
This first needs to find the sqrt symbol in math's namespace
dict lookup →super fast!

Code

