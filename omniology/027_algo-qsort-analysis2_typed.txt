QuickSort	  
Analysis	  II:	  	  	  	  	  	  	  
The	  Key	  Insight	  
Design	  and	  Analysis	  
of	  Algorithms	  I	  

Tim	  Roughgarden	  
Average	  Running	  Time	  of	  QuickSort	  
QuickSort	  Theorem	  :	  for	  every	  input	  array	  of	  length	  n,	  the	  average	  
running	  @me	  of	  QuickSort	  (with	  random	  pivots)	  is	  O(nlog(n)).	  
Note	  :	  holds	  for	  every	  input.	  [no	  assump@ons	  on	  the	  data	  ]	  
	  -­‐	  recall	  our	  guiding	  principles	  !	  
	  -­‐	  “average”	  is	  over	  random	  choices	  made	  by	  the	  algorithm	  
	  (i.e.,	  the	  pivot	  choices	  )	  

Tim	  Roughgarden	  
Recall	  :	  
Key	  Claim	  	  :	  for	  all	  i	  <	  j,	  Pr[zi,	  zj	  get	  compared	  ]	  =	  2/(j-­‐i+1)	  
The	  Story	  So	  Far	  
	  
	  
	  =	  	  #	  of	  comparisons	  between	  input	  elements	  
	  
	  =	  	  #	  of	  comparisons	  between	  zi	  and	  zj	  
ith,	  jth	  smallest	  entries	  in	  array	  

Tim	  Roughgarden	  
Proof	  of	  Key	  Claim	  
Fix	  	  zi,	  zj	  	  with	  i	  <	  j	  
Consider	  the	  set	  zi,zi+1,…,zj-­‐1,zj	  
Induc@vely	  :	  as	  long	  as	  none	  of	  these	  are	  chosen	  as	  a	  
pivot,	  all	  are	  passed	  to	  the	  same	  recursive	  call.	  
Consider	  the	  ﬁrst	  among	  zi,zi+1,..,zj-­‐1,zj	  that	  gets	  chosen	  as	  a	  
pivot.	  
1.  If	  zi	  or	  zj	  gets	  chosen	  ﬁrst,	  then	  zi	  and	  zj	  get	  compared	  
2.  If	  one	  of	  zi+1,…,zj-­‐1	  gets	  chosen	  ﬁrst	  then	  zi	  and	  zj	  are	  
never	  compared	  [split	  into	  diﬀerent	  recursive	  calls]	  
Pr[zi,zj	  get	  
compared	  ]	  	  	  	  	  =	  	  	  	  	  
	  2/(j-­‐i+1)	  

Tim	  Roughgarden	  
1.  zi	  or	  zj	  gets	  chosen	  ﬁrst	  =>	  they	  get	  compared	  
2.  one	  of	  zi+1,…,zj-­‐1	  gets	  chosen	  ﬁrst	  =>	  zi	  ,	  zj	  never	  compared	  
Note	  :	  Since	  pivots	  always	  chosen	  uniformly	  at	  random,	  each	  of	  
zi,zi+1,…,zj-­‐1,zj	  	  is	  equally	  likely	  to	  be	  the	  ﬁrst	  
⇒ Pr[zi,zj	  get	  compared	  ]	  	  	  	  	  =	  	  2/(j-­‐i+1)	  
So	  :	  	  
Proof	  of	  Key	  Claim	  (con’d)	  
Choices	  that	  lead	  to	  
case	  (1)	  
Total	  #	  of	  choices	  
[S@ll	  need	  to	  show	  
this	  is	  O(nlog(n))	  

