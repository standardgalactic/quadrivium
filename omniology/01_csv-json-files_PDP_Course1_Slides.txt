Week 1
Introduction

Python Data Products
Course 1: Basics
Meet your instructors and about this course

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Dr. Julian McAuley
Research
•
Assistant professor at UC San Diego since 2014
•
Research on Machine Learning, Recommender Systems, and predictive models of human behavior (or so-called 
"computational social science")
•
Lab website: https://cseweb.ucsd.edu/~jmcauley/
Academic Teaching and Workforce Development
•
I teach undergraduate and graduate courses on Mining Web Data, and Recommender Systems at UCSD, and on 
current trends in recommender systems and behavioral modeling
Interdisciplinary Research
•
I frequently collaborate with industry, and have conducted research and written papers with Microsoft, Etsy, 
Adobe, Pinterest, and Flipkart, among others

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Research interests...
I also work on: Question-Answering Systems
Q: “I want to use this with my iPad 
air while taking a jacuzzi bath. Will 
the volume be loud enough over 
the bath jets?”
“The sound quality is great, 
especially for the size, and if you 
place the speaker on a hard surface 
it acts as a sound board, and the 
bass really kicks up.” 
“If you are looking for a 
water resistant blue tooth 
speaker you will be very 
pleased with this product.”
“However if you are looking 
for something to throw a small 
party this just doesn’t have the 
sound output.” 
Yes
Yes
No
Modeling ambiguity, subjectivity, and diverging viewpoints in opinion question answering systems, Mengting Wan, Julian McAuley, ICDM 2016
Addressing complex and subjective product-related queries with customer reviews, Julian McAuley, Alex Yang, WWW 2016

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Research interests...
I also work on: Combining Economic Models 
with Recommender Systems
Modeling consumer preferences and price sensitivities from large-scale grocery shopping transaction logs, Wan, Wang, Goldman, Taddy, Rao, Liu, Lymberopoulos, McAuley, 
WWW 2017
Representing and recommending shopping baskets with complementarity, compatibility, and loyalty, Wan, Wang, Liu, Bennett, McAuley, CIKM 2018

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Research interests...
I also work on: Systems for Personalized Fashion 
Recommendation and Design
existing 
items
synthetic 
items
Modeling the visual evolution of fashion 
trends with one-class collaborative filtering,
He, McAuley, WWW 2016
Visually-aware fashion recommendation and 
design with generative image models,
Kang, Fang, Wang, McAuley, ICDM 2017

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Research interests...
12 oz. bottle, excited to see a new Victory product around, 
A: Pours a dark brown, much darker than I thought it would 
be, rich creamy head, with light lace. S: Dark cedar/pine nose 
with some dark bread/pumpernickel. T: This ale certainly has 
a lot of malt, bordering on Barleywine. Molasses, sweet 
maple with a clear bitter melon/white grapefruit hop flavour. 
Not a lot of complexity in the hops here for me. Booze is 
noticable. M: Full-bodied, creamy, resinous, nicely done. D: A 
good beer, it isn't exactly what I was expecting. In the end 
above average, though I found it monotonous at times, 
hence the 3. A sipper for sure.
A: Pours a very dark brown with a nice finger of tan 
head that produces a small bubble and leaves 
decent lacing on the glass. S: Smells like a nut 
brown ale. It has a slight sweetness and a bit of a 
woody note and a little cocoa. The nose is rather 
malty with some chocolate and coffee. The taste is 
strong but not overwhelmingly sweet. The 
sweetness is overpowering, but not overwhelming 
and is a pretty strong bitter finish. M: Medium 
bodied with a slightly thin feel. D: A good tasting 
beer. Not bad.
Actual review
Synthetically generated review
I also work on: Systems for natural language generation
Personalized review generation by expanding phrases and attending on aspect-aware representations, Ni, McAuley, ACL 2018
Estimating reactions and recommending products with generative models of reviews, Ni, Lipton, Vikram, McAuley, IJCNLP 2017

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Research interests...
I also work on: Music and Audio
Adversarial audio synthesis, Chris Donahue, Julian McAuley, Miller Puckette, ICLR 2019
Dance Dance Convolution, Chris Donahue, Zachary Lipton, Julian McAuley, ICML 2017

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Dr. Ilkay ALTINTAS
Research, Development and Management
• Chief Data Science Officer, San Diego Supercomputer Center (SDSC) — datascience.sdsc.edu
• Division Director, Cyberinfrastructure Research, Education, and Development  @ SDSC — www.sdsc.edu
• Director, Workflows for Data Science (WorDS) Center of Excellence @ SDSC — words.sdsc.edu
• Fellow — Halicioglu Data Science Institute (HDSI) @ UC San Diego — datascience.ucsd.edu
Academic Teaching and Workforce Development
• Faculty Co-Director and Lecturer, UC San Diego Master of Advanced Study Program in Data Science and Engineering
• Lecturer, Computer Science and Engineering at UC San Diego
• Faculty on Coursera UC San Diego Big Data Specialization 
• Faculty on edX UC San Diego MicroMasters in Data Science
Interdisciplinary Research

Python Data Products Specialization: Course 1:  Basic  Data Processing…
How can I get smart people to 
collaborate and communicate
to analyze data and computing to 
generate insight and 
solve a question?
Data
Insight
Action
Data Science

Building Data Products for 
Wildfire Prediction 
and Emergency Response

Wildfire Command Centers of the Future

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Welcome!
In this specialization we will...
•
Learn how to read and process complex, real-world 
datasets (Course 1)
•
Learn how to design predictive pipelines in order to build 
predictive models from data (Course 2)
•
Learn how to validate and evaluate our predictions and gain 
insights from our models (Course 3)
•
Learn how to deploy working systems that implement these 
models (Course 4)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course overview
Course 1 will cover...
•
Background on data products (Week 1)
•
What is the Data-to-Product pipeline?
•
Data ingestion and processing (Week 2)
•
Reading data from CSV/TSV and JSON files
•
Exploratory data analysis (Week 3)
•
Manipulating semi-structured data such as time and 
date, and string processing in Python
•
Data processing and visualization (Week 4)
•
Data collection & data visualization

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course overview
Course 2 will cover...
•
Regression
•
Supervised vs. unsupervised learning, autoregression
•
Feature engineering
•
Dealing with temporal and categorical data
•
Classification
•
Nearest neighbor and logistic regression
•
Libraries and tools for regression and classification

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course overview
Course 3 will cover...
•
Regression and classification diagnostics
•
Training and validating regressors and classifiers
•
Model evaluation

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course overview
Course 4 will cover...
•
Recommender Systems
•
Our Capstone Project!
•
Deployment of data products in practice, and 
Python libraries for deploying data driven systems

Python Data Products Specialization: Course 1:  Basic  Data Processing…
How will you succeed?
• Participating in course activities
• Lecture videos
• Discussion prompts
• Reading materials
• Working through Jupyter Notebooks

Python Data Products Specialization: Course 1:  Basic  Data Processing…
We value your feedback!

Python Data Products
Course 1: Basics
Lecture: What is a Data Product?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Explain many interpretations of “data product”
• Describe what we focus on as a data product in the 
Data to Product Specialization
• Illustrate a typical process to go from data to a 
predictive insight towards an end goal
• Motivate why Python is a good choice for data product 
development

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Data Products
“… a product that facilitates an end goal 
through the use of data”
-- DJ Patil, Former U.S. Chief Data 
Scientist
in Data Jujitsu
Data
Insight
Action
Data Science

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What are data products?
Data Products are 
systems models 
that help us to
understand data
in order to 
gain insights and 
make predictions

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Going from raw data to a model using data science…
Get Data
Prepare 
Data 
Model
Build Product
API
Raw Data
• Visual Dashboards
• Web Interfaces
• Programming Interfaces
• Robotics platforms
Derived Data
Algorithms

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Introduced the concept of data product and how data 
science is a means to generating data products
• Explained how visual dashboard, web interfaces and APIs 
are used to deploy data products
RECOMMENDED READING:
•
“Data Jujitsu: The Art of Turning Data into Product“, by DJ Patil, 2012.
http://radar.oreilly.com/2012/07/data-jujitsu.html
•
“What is data science? : The future belongs to the companies and people 
that turn data into products”, by Mike Loukides, June 2, 2010
https://www.oreilly.com/ideas/what-is-data-science
•
“The evolution of data products:  The data that drives products is shifting 
from overt to covert”, by Mike Loukides, September 15, 2011
https://www.oreilly.com/ideas/evolution-of-data-products

Python Data Products
Course 1: Basics
Lecture: Data Product examples in the real world 

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Review three specific examples of recommender data 
products in the enterprise world

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What are data products?
Data Products arise whenever we want to 
build systems that depend on predictive 
models. For example:
• Predict users' future actions based on their 
past activities​
• Recommend content to users that they are 
likely to consume​
• Estimate demand for a product​

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Examples of Data Products on the Web
(to name a few)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Examples – Recommender Systems
Modeling task: predict what rating a person will give to an item
e.g. rating(julian, Pitch Black) = ?
Data Product: build a system to recommend products that 
people are interested in
Modeling challenges: how are opinions influenced by factors 
like time, gender, age, and location?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Examples – Social Networks
Modeling task: predict whether two users of a social 
network are likely to be friends
Data Product: “people 
you may know” and 
friend recommendation 
systems
Modeling challenges: what 
are the features around 
which friendships form?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Examples – Advertising
Modeling task: predict whether I will click on an advertisement
Data product: Ad recommendation systems
Modeling challenges: what products tend to be purchased 
together, how do purchases change over time, etc.
query
ads

Python Data Products Specialization: Course 1:  Basic  Data Processing…
A Data Product for predictive wildfire modeling
http://firemap.sdsc.edu

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Overviewed recommender systems as a type of data 
product deployed as a part of most web-based systems
• Summarized a decision-support data product that builds 
on predictive wildfire behavior modeling 

Python Data Products
Course 1: Basics
Lecture: Our Case Study (Recommender Systems)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Introduce the concept of Recommender Systems, which 
we'll use as an ongoing case-study throughout the 
Specialization
• Describe some of the main datasets we will use to study 
recommender systems and their main characteristics
• Motivate the use of these datasets for various problems 
throughout the Specialization

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Recommender Systems
As a running example throughout this 
course, we will build recommender 
systems that model interactions between 
users and items
• In particular, we will focus on two publicly-available 
datasets from Amazon and Yelp:
• https://s3.amazonaws.com/amazon-reviews-
pds/tsv/index.txt
• https://www.yelp.com/dataset/download​

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Recommender Systems
We are particularly interested in tasks 
including:
• How can we read and process these large datasets, 
containing complex, structured fields (Course 1)?​
• How can we make simple predictions from these 
datasets, such as the sentiment of a review or the 
category of a business (Course 2)?​
• How can we validate these predictions, and compare 
different modeling approaches (Course 3)?​
• How can we build and deploy a working system using 
these predictive models (Course 4)?​

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What do recommender systems do?
$
(preference modeling)
(pricing)
(retrieval)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What do recommender systems do?
In essence, Recommender Systems work by trying to model the 
relationships between people and the items they’re evaluating:
my (user’s)
“preferences”
HP’s (item) 
“properties”
preference
Toward
“action”
preference toward
“special effects”
is the movie 
action-
heavy?
are the special effects good?
Compatibility

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Recommender Systems
• In Course 4 we'll look at some of the state-of-the-art (but reasonably common) approaches 
that are used to implement recommender systems on the web, e.g. rating prediction:
• And "people who bought X also bought Y" etc.:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Recommender Systems
Other than building such systems in Course 4, in 
the meantime we're also interested in 
"standard" tasks that can approached using the 
same type of data, e.g.
• Regression and classification tasks
• Time series modeling
• Text analysis
• Visualization
• (Etc.)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Introduced the concept of Recommender Systems, which 
we'll use as an ongoing case-study throughout the 
Specialization

Python Data Products
Course 1: Basics
Lecture: Python and Jupyter basics

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Explain why we chose Python as the programming 
environment for this course
• Talk about some useful Python modules you will be seeing 
throughout this specialization
• Describe the features of Python-based Jupyter notebooks

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What is Python? 
https://www.python.org/about/

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Why Python for Data Science?
• Easy-to-read and learn
• Vibrant community
• Growing and evolving set of libraries
• Data management
• Analytical processing
• Visaualization
• Applicable to each step in the data science process
• Notebooks

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Python libraries we will be learning…
•
Jupyter notebooks 
•
scipy
•
numpy
•
pandas
•
matplotlib
•
sklearn
•
nltk

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Why Jupyter notebooks?
Key features
• Documented Data Science
• Reproducible Science
• Presentation of Results
• Support for Julia, Python, and R

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Introduced Python and the Jupyter notebook environment
RECOMMENDED READING:
•
“Advantages and Disadvantages of Python Programming Language”, by 
Mindfire Solutions, Apr 23, 2017.
https://medium.com/@mindfiresolutions.usa/advantages-and-
disadvantages-of-python-programming-language-fd0b394f2121
•
“Why I’m Learning Python in 2018”, by Alexus Strong, January 12, 2018.
https://news.codecademy.com/why-learn-python/

Week 2
Data Ingestion

Python Data Products
Course 1: Basics
Lecture: Python Recap

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Scripting Languages
Python scripting is similar to a number 
of other languages
• Interpreted, not compiled
• Prompt/Shell, Scripts and Notebooks
• Easier to learn and code in 
https://www.python.org/about/

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Java
public class Hi {
public static void main (String [] args) {
System.out.println("Hello");
}
}
C
#include "stdio.h"
int main() {
printf("Hello\n");
}
Python
print("hello")
Notice: no ;
Hello World!

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Python
for i in range(0,10):
print(i)
Python uses indentation 
rather than brackets.
Python uses Indentations

Python Data Products Specialization: Course 1:  Basic  Data Processing…
C
#include "stdio.h"
int main() {
int x = 3;
int y = 4;
printf("%s"\n,x+y);
}
Python
x = 3
y = 4
print(x+y)
Notice: no types
Dynamic Typing

Python Data Products Specialization: Course 1:  Basic  Data Processing…
C
Python
Notice: no types
Dynamic Typing
#include "stdio.h"
int main() {
int x = 3;
x = 4.5;
}
x = 3
x = 4.5

Python Data Products Specialization: Course 1:  Basic  Data Processing…
<var_name>.<method_name>(params)
>>> x = "Hello"
>>> x.lower()
'hello'
Python
Python is Object-Oriented

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Lists, Dictionaries, and more…
>>> dict = {('Ghostbusters', 2016): 5.4, 
('Ghostbusters', 1984): 7.8, ('Cars', 2006):7.1} 
>>> x = dict[('Cars',2006)]
>>> x
>>> list = [11,22,33]
>>> list
[11, 22, 33]
7.1
More info: 
https://www.python.org/about/gettingstarted/

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Reminders on the basic Python features
• Pointers to beginners resources for Python
RECOMMENDED STARTING POINTS FOR BEGINNERS:
•
“Python Beginners Guide”, 
https://www.python.org/about/gettingstarted/
•
“Python Overview”, 
https://wiki.python.org/moin/BeginnersGuide/Overview
•
“Simple Programs”, 
https://wiki.python.org/moin/SimplePrograms

Python Data Products
Course 1: Basics
Lecture: CSV and JSON files

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Demonstrate the CSV/TSV and JSON formats
• Compare the main advantages and disadvantages of both 
formats

Python Data Products Specialization: Course 1:  Basic  Data Processing…
CSV and JSON
CSV and JSON are two formats that are easy 
to read and manipulate in Python
• We'll work through two examples for much of this 
course:
• https://s3.amazonaws.com/amazon-reviews-
pds/tsv/index.txt (TSV)​
• https://www.yelp.com/dataset/download (JSON)​
​

Python Data Products Specialization: Course 1:  Basic  Data Processing…
CSV and JSON
First let's look at the Amazon dataset:
•
https://s3.amazonaws.com/amazon-reviews-
pds/tsv/index.txt
•
We'll look at data from the "Gift Card" category

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Concept: CSV
• CSV is a simple format that allows us to store tabular data
• It is a human-readable format, meaning it can easily be read or written 
via a text-editor or spreadsheet application
marketplace
customer_id
review_id
product_id
product_parent
product_title
product_category
star_rating
help
US
24371595
R27ZP1F1CD0C3Y
B004LLIL5A
346014806
Amazon eGift Card - Celebrate
Gift Card
5
0
0
N
Y
US
42489718
RJ7RSBCHUDNNE
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
Gift 
US
861463
R1HVYBSKLQJI5S
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
Gift Card
5
0
0
N
US
25283295
R2HAXF0IIYQBIR
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
Gift Card
1
0
0
N
US
397970
RNYLPX611NB7Q
B005ESMGV4
379368939
Amazon.com Gift Cards, Pack of 3 (Various Designs)
Gift Card
5
US
18513645
R3ALA9XXMBEDZR
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
Gift Card
5
US
22484620
R3R8PHAVJFTPDF
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
Five
US
14765851
R18WWEK8OIXE30
BT00CTP2EE
775486538
Amazon.com Gift Card in a Greeting Card (Various Designs)
Gift Ca
US
18751931
R1EGUNQON2J277
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
1
0
0
N
Y
One 
US
15100528
R21Z4M4L98CPU2
B004W8D102
595099956
Amazon Gift Card - Print - Amazon Boxes
Gift Card
5
0
0
US
3559726
R6JH7A117FHFA
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
Five S
US
23413911
R1XZHS8M1GCGI7
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
Gift Card
5
US
2026222
R1DAI0N03SKRJN
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
1
1
N
Y
Five 
US
32956435
R2F6SKZOEYQRU3
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
N
Five
US
20241560
RIBOP6OEAZA47
B00H5BNLUS
637715957
Amazon eGift Card - Hoops and Yoyo Thank You Very Much (Animated) [Ha
US
10670435
R15H8E7WD6XD29
B004KNWX6C
763371347
Amazon Gift Card - Print - Celebrate
Gift Card
5
0
0
US
48872127
RVN4P3RU4F8IE
BT00CTOYC0
506740729
Amazon.com $15 Gift Card in a Greeting Card (Amazon Surprise Box Desi
US
460630
RCS8F9JCAAXC7
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
4
0
0
N
Y
Four St
US
41238378
R6811C4E7UYL2
B00H5BMH44
81025991
Amazon eGift Card - Hoops and Yoyo Cake Face (Animated) [Hallmark]
E.g. CSV (or rather TSV) from 
Amazon

Python Data Products Specialization: Course 1:  Basic  Data Processing…
marketplace
customer_id
review_id
product_id
product_parent
product_title
product_category
star_rating
US
24371595
R27ZP1F1CD0C3Y
B004LLIL5A
346014806
Amazon eGift Card - Celebrate
Gift Card
5
0
0
N
US
42489718
RJ7RSBCHUDNNE
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
G
US
861463
R1HVYBSKLQJI5S
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
Gift Card
5
0
0
US
25283295
R2HAXF0IIYQBIR
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
Gift Card
1
0
0
US
397970
RNYLPX611NB7Q
B005ESMGV4
379368939
Amazon.com Gift Cards, Pack of 3 (Various Designs)
Gift Card
US
18513645
R3ALA9XXMBEDZR
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
Gift Card
US
22484620
R3R8PHAVJFTPDF
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
US
14765851
R18WWEK8OIXE30
BT00CTP2EE
775486538
Amazon.com Gift Card in a Greeting Card (Various Designs)
Gif
US
18751931
R1EGUNQON2J277
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
1
0
0
N
Y
US
15100528
R21Z4M4L98CPU2
B004W8D102
595099956
Amazon Gift Card - Print - Amazon Boxes
Gift Card
5
0
US
3559726
R6JH7A117FHFA
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
Fiv
US
23413911
R1XZHS8M1GCGI7
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
Gift Card
US
2026222
R1DAI0N03SKRJN
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
1
1
N
Y
F
US
32956435
R2F6SKZOEYQRU3
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
N
US
20241560
RIBOP6OEAZA47
B00H5BNLUS
637715957
Amazon eGift Card - Hoops and Yoyo Thank You Very Much (Animated) 
US
10670435
R15H8E7WD6XD29
B004KNWX6C
763371347
Amazon Gift Card - Print - Celebrate
Gift Card
5
0
0
US
48872127
RVN4P3RU4F8IE
BT00CTOYC0
506740729
Amazon.com $15 Gift Card in a Greeting Card (Amazon Surprise Box 
US
460630
RCS8F9JCAAXC7
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
4
0
0
N
Y
Fou
US
41238378
R6811C4E7UYL2
B00H5BMH44
81025991
Amazon eGift Card - Hoops and Yoyo Cake Face (Animated) [Hallmark]
TSV example
From Amazon's public dataset ("Gift Card" category – amazon_reviews_us_Gift_Card_v1_00.tsv.gz):
https://s3.amazonaws.com/amazon-reviews-pds/tsv/index.txt
Data are separated by 
tabs (tsv) or commas 
(csv)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
marketplace
customer_id
review_id
product_id
product_parent
product_title
product_category
star_rating
h
US
24371595
R27ZP1F1CD0C3Y
B004LLIL5A
346014806
Amazon eGift Card - Celebrate
Gift Card
5
0
0
N
US
42489718
RJ7RSBCHUDNNE
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
G
US
861463
R1HVYBSKLQJI5S
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
Gift Card
5
0
0
US
25283295
R2HAXF0IIYQBIR
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
Gift Card
1
0
0
US
397970
RNYLPX611NB7Q
B005ESMGV4
379368939
Amazon.com Gift Cards, Pack of 3 (Various Designs)
Gift Card
US
18513645
R3ALA9XXMBEDZR
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
Gift Card
US
22484620
R3R8PHAVJFTPDF
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
US
14765851
R18WWEK8OIXE30
BT00CTP2EE
775486538
Amazon.com Gift Card in a Greeting Card (Various Designs)
Gif
US
18751931
R1EGUNQON2J277
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
1
0
0
N
Y
US
15100528
R21Z4M4L98CPU2
B004W8D102
595099956
Amazon Gift Card - Print - Amazon Boxes
Gift Card
5
0
US
3559726
R6JH7A117FHFA
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
Fiv
US
23413911
R1XZHS8M1GCGI7
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
Gift Card
US
2026222
R1DAI0N03SKRJN
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
1
1
N
Y
F
US
32956435
R2F6SKZOEYQRU3
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
N
US
20241560
RIBOP6OEAZA47
B00H5BNLUS
637715957
Amazon eGift Card - Hoops and Yoyo Thank You Very Much (Animated) 
US
10670435
R15H8E7WD6XD29
B004KNWX6C
763371347
Amazon Gift Card - Print - Celebrate
Gift Card
5
0
0
US
48872127
RVN4P3RU4F8IE
BT00CTOYC0
506740729
Amazon.com $15 Gift Card in a Greeting Card (Amazon Surprise Box 
US
460630
RCS8F9JCAAXC7
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
4
0
0
N
Y
Fou
US
41238378
R6811C4E7UYL2
B00H5BMH44
81025991
Amazon eGift Card - Hoops and Yoyo Cake Face (Animated) [Hallmark]
TSV example
The first row is the header, which 
indicates what value each field 
represents
From Amazon's public dataset ("Gift Card" category – amazon_reviews_us_Gift_Card_v1_00.tsv.gz):
https://s3.amazonaws.com/amazon-reviews-pds/tsv/index.txt

Python Data Products Specialization: Course 1:  Basic  Data Processing…
marketplace
customer_id
review_id
product_id
product_parent
product_title
product_category
star_rating
h
US
24371595
R27ZP1F1CD0C3Y
B004LLIL5A
346014806
Amazon eGift Card - Celebrate
Gift Card
5
0
0
N
US
42489718
RJ7RSBCHUDNNE
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
G
US
861463
R1HVYBSKLQJI5S
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
Gift Card
5
0
0
US
25283295
R2HAXF0IIYQBIR
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
Gift Card
1
0
0
US
397970
RNYLPX611NB7Q
B005ESMGV4
379368939
Amazon.com Gift Cards, Pack of 3 (Various Designs)
Gift Card
US
18513645
R3ALA9XXMBEDZR
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
Gift Card
US
22484620
R3R8PHAVJFTPDF
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
US
14765851
R18WWEK8OIXE30
BT00CTP2EE
775486538
Amazon.com Gift Card in a Greeting Card (Various Designs)
Gif
US
18751931
R1EGUNQON2J277
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
1
0
0
N
Y
US
15100528
R21Z4M4L98CPU2
B004W8D102
595099956
Amazon Gift Card - Print - Amazon Boxes
Gift Card
5
0
US
3559726
R6JH7A117FHFA
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
Y
Fiv
US
23413911
R1XZHS8M1GCGI7
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
Gift Card
US
2026222
R1DAI0N03SKRJN
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
1
1
N
Y
F
US
32956435
R2F6SKZOEYQRU3
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
5
0
0
N
N
US
20241560
RIBOP6OEAZA47
B00H5BNLUS
637715957
Amazon eGift Card - Hoops and Yoyo Thank You Very Much (Animated) 
US
10670435
R15H8E7WD6XD29
B004KNWX6C
763371347
Amazon Gift Card - Print - Celebrate
Gift Card
5
0
0
US
48872127
RVN4P3RU4F8IE
BT00CTOYC0
506740729
Amazon.com $15 Gift Card in a Greeting Card (Amazon Surprise Box 
US
460630
RCS8F9JCAAXC7
B004LLIKVU
473048287
Amazon.com eGift Cards
Gift Card
4
0
0
N
Y
Fou
US
41238378
R6811C4E7UYL2
B00H5BMH44
81025991
Amazon eGift Card - Hoops and Yoyo Cake Face (Animated) [Hallmark]
From Amazon's public dataset ("Gift Card" category – amazon_reviews_us_Gift_Card_v1_00.tsv.gz):
https://s3.amazonaws.com/amazon-reviews-pds/tsv/index.txt
TSV example
Each other row corresponds to 
a single product review from 
Amazon

Python Data Products Specialization: Course 1:  Basic  Data Processing…
marketplace
customer_id
review_id
product_id
product_parent
product_title
US
24371595
R27ZP1F1CD0C3Y
B004LLIL5A
346014806
Amazon eGift Card - Celebrate
US
42489718
RJ7RSBCHUDNNE
B004LLIKVU
473048287
Amazon.com eGift Cards
US
861463
R1HVYBSKLQJI5S
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
US
25283295
R2HAXF0IIYQBIR
B00IX1I3G6
926539283
Amazon.com Gift Card Balance Reload
US
397970
RNYLPX611NB7Q
B005ESMGV4
379368939
Amazon.com Gift Cards, Pack of 3 (Various Designs)
US
18513645
R3ALA9XXMBEDZR
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
US
22484620
R3R8PHAVJFTPDF
B004LLIKVU
473048287
Amazon.com eGift Cards
US
14765851
R18WWEK8OIXE30
BT00CTP2EE
775486538
Amazon.com Gift Card in a Greeting Card (Various D
US
18751931
R1EGUNQON2J277
B004LLIKVU
473048287
Amazon.com eGift Cards
US
15100528
R21Z4M4L98CPU2
B004W8D102
595099956
Amazon Gift Card - Print - Amazon Boxes
US
3559726
R6JH7A117FHFA
B004LLIKVU
473048287
Amazon.com eGift Cards
US
23413911
R1XZHS8M1GCGI7
B004KNWWU4
326384774
Amazon Gift Card - Print - Happy Birthday (Birds)
US
2026222
R1DAI0N03SKRJN
B004LLIKVU
473048287
Amazon.com eGift Cards
US
32956435
R2F6SKZOEYQRU3
B004LLIKVU
473048287
Amazon.com eGift Cards
US
20241560
RIBOP6OEAZA47
B00H5BNLUS
637715957
Amazon eGift Card - Hoops and Yoyo Thank You Very
US
10670435
R15H8E7WD6XD29
B004KNWX6C
763371347
Amazon Gift Card - Print - Celebrate
US
48872127
RVN4P3RU4F8IE
BT00CTOYC0
506740729
Amazon.com $15 Gift Card in a Greeting Card (Amazo
US
460630
RCS8F9JCAAXC7
B004LLIKVU
473048287
Amazon.com eGift Cards
US
41238378
R6811C4E7UYL2
B00H5BMH44
81025991
Amazon eGift Card - Hoops and Yoyo Cake Face (Anim
TSV example
Can be a little easier to visualize if we align the columns vertically:
Note that the data is essentially tabular and is much like an Excel (or similar) spreadsheet

Python Data Products Specialization: Course 1:  Basic  Data Processing…
product_category
star_rating
helpful_votes
total_votes
vine
verified_purchase
review_headline
review_body
rev
Gift Card
5
0
0
N
Y
Five Stars
Great birthday gif
Gift Card
5
0
0
N
Y
Gift card for the greatest selection of item
Gift Card
5
0
0
N
Y
Five Stars
Good
2015-08-31
Gift Card
1
0
0
N
Y
One Star
Fair
2015-08-31
Gift Card
5
0
0
N
Y
Five Stars
I can't believe ho
Gift Card
5
0
0
N
Y
Perfect for most every occasion!
Perfect
Gift Card
5
0
0
N
Y
Five Stars
excelent
2015-0
Gift Card
5
0
0
N
Y
Five Stars
Great and Safe Gif
Gift Card
1
0
0
N
Y
One Star
What?????????
2
Gift Card
5
0
0
N
Y
Five Stars
This was just too 
Gift Card
5
0
0
N
Y
Five Stars
Bien
2015-08-31
Gift Card
5
1
1
N
Y
Always good
Easy to print from
Gift Card
5
1
1
N
Y
Five Stars
Amazing with 10 do
Gift Card
5
0
0
N
N
Five Stars
Remember Matthew 7
]
Gift Card
5
1
1
N
Y
Five Stars
good
2015-08-31
Gift Card
5
0
0
N
Y
Five Stars
Awesome way to sen
Gift Card
5
0
0
N
Y
Quick Solution for Forgotten Occasion
I l
Gift Card
4
0
0
N
Y
Four Stars
Good gift. Easy to
Gift Card
5
0
0
N
Y
Satisfied customer
Satisfied as usual
TSV example
Let's look at some more columns of the data:
What was the rating, how many helpful votes were received (out of how many), was the purchase verified, etc.

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Concept: JSON
• CSV/TSV format is simple and effective, but limited in the types 
of data that can be stored
• I.e., it is limited to tabular data
• For example, how would you store
• A business's opening hours (e.g. in Yelp's data)?
• A set of categories for a product?
• Playlist entries in the "million playlist 
dataset"? (https://labs.spotify.com/2018/05/30/introducing-the-million-playlist-dataset-and-recsys-
challenge-2018/)
• Fields best represented as lists or sets are inconvenient to 
store as CSV/TSV entries
• JSON attempts to address this by allowing for more general 
structured data to be represented

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Concept: JSON
• See e.g. yelp's dataset: https://www.yelp.com/dataset/download
• Let's look at the first line of the "business.json" file:
{'business_id': 'FYWN1wneV18bWNgQjJ2GNg', 'attributes': 
{'BusinessAcceptsCreditCards': True, 'AcceptsInsurance': True, 
'ByAppointmentOnly': True}, 'longitude': -111.9785992, 
'state': 'AZ', 'address': '4855 E Warner Rd, Ste B9', 
'neighborhood': '', 'city': 'Ahwatukee', 'hours': {'Tuesday': 
'7:30-17:00', 'Wednesday': '7:30-17:00', 'Thursday': '7:30-
17:00', 'Friday': '7:30-17:00', 'Monday': '7:30-17:00'}, 
'postal_code': '85044', 'review_count': 22, 'stars': 4.0, 
'categories': ['Dentists', 'General Dentistry', 'Health & 
Medical', 'Oral Surgeons', 'Cosmetic Dentists', 
'Orthodontists'], 'is_open': 1, 'name': 'Dental by Design', 
'latitude': 33.3306902}

Python Data Products Specialization: Course 1:  Basic  Data Processing…
JSON
Might look a little cleaner if we format it more carefully:
{
'business_id': 'FYWN1wneV18bWNgQjJ2GNg',
'attributes':
{
'BusinessAcceptsCreditCards': True,
'AcceptsInsurance': True,
'ByAppointmentOnly': True
},
'longitude': -111.9785992,
'latitude': 33.3306902,
'state': 'AZ',
'address': '4855 E Warner Rd, Ste B9',
'neighborhood': '',
'city': 'Ahwatukee',
'hours':
{
'Tuesday': '7:30-17:00',
'Wednesday': '7:30-17:00',
'Thursday': '7:30-17:00',
'Friday': '7:30-17:00',
'Monday': '7:30-17:00'
},
'postal_code': '85044',
'review_count': 22,
'stars': 4.0,
'categories':
['Dentists', 'General Dentistry', 'Health & Medical', 'Oral Surgeons', 'Cosmetic Dentists', 'Orthodontists'],
'is_open': 1,
'name': 'Dental by Design'
}

Python Data Products Specialization: Course 1:  Basic  Data Processing…
JSON
Note that (unlike TSV), whitespace, 
newlines, or the ordering of entries
don't change the meaning of the 
JSON string
{
'business_id': 'FYWN1wneV18bWNgQjJ2GNg',
'attributes':
{
'BusinessAcceptsCreditCards': True,
'AcceptsInsurance': True,
'ByAppointmentOnly': True
},
'longitude': -111.9785992,
'latitude': 33.3306902,
'state': 'AZ',
'address': '4855 E Warner Rd, Ste B9',
'neighborhood': '',
'city': 'Ahwatukee',
'hours':
{
'Tuesday': '7:30-17:00',
'Wednesday': '7:30-17:00',
'Thursday': '7:30-17:00',
'Friday': '7:30-17:00',
'Monday': '7:30-17:00'
},
'postal_code': '85044',
'review_count': 22,
'stars': 4.0,
'categories':
['Dentists', 'General Dentistry', 'Health & Medical', 'Oral Surgeons', 'Cosmetic Dentists', 'Orthodontists'],
'is_open': 1,
'name': 'Dental by Design'
}
Might look a little cleaner if we format it more carefully:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
JSON
Each value is either a
•
String
•
Boolean
•
Number
•
A list
•
Another JSON object!
{
'business_id': 'FYWN1wneV18bWNgQjJ2GNg',
'attributes':
{
'BusinessAcceptsCreditCards': True,
'AcceptsInsurance': True,
'ByAppointmentOnly': True
},
'longitude': -111.9785992,
'latitude': 33.3306902,
'state': 'AZ',
'address': '4855 E Warner Rd, Ste B9',
'neighborhood': '',
'city': 'Ahwatukee',
'hours':
{
'Tuesday': '7:30-17:00',
'Wednesday': '7:30-17:00',
'Thursday': '7:30-17:00',
'Friday': '7:30-17:00',
'Monday': '7:30-17:00'
},
'postal_code': '85044',
'review_count': 22,
'stars': 4.0,
'categories':
['Dentists', 'General Dentistry', 'Health & Medical', 'Oral Surgeons', 'Cosmetic Dentists', 'Orthodontists'],
'is_open': 1,
'name': 'Dental by Design'
}
Might look a little cleaner if we format it more carefully:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
CSV/TSV vs. JSON
CSV/TSV:
Advantages:
+ Simple, human-readable format
+ Can be easily manipulated in "tabular" form 
– e.g can be read & modified using Excel or 
similar tools
Disadvantages:
- Cannot represent complex, flexible (I.e., 
non-tabular) data
JSON:
Advantages:
+ Allows for manipulation of complex, 
semi-structured data
Disadvantages:
- More difficult to explore and 
manipulate using "GUI" tools

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• You should understand the format of json and csv files
• Understand the relative merits of both formats
On your own...
• Download the Amazon and Yelp 
datasets
• Try opening the (smaller) files in a 
text editor

Python Data Products
Course 1: Basics
Lecture: Reading CSV and JSON into Python

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Demonstrate the main methods to read CSV/TSV and 
JSON files in Python
• Understand some of the edge cases that make reading 
these formats difficult

Python Data Products Specialization: Course 1:  Basic  Data Processing…
CSV/TSV in Python
In this lecture we'll look through a few 
functions to read CSV/TSV and JSON data in 
Python:
•
string.split()
•
csv.reader (library)
•
eval() and ast.eval()
•
json.loads (library)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: String.split()
•
Converts a string to a list, given a separator
•
By default, any whitespace separator is used (tab, space, 
newline)
•
But different separators can be provided via an optional 
argument
Note: preserves whitespace!

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: String.split()
What happens when the delimiter appears in the column?
Note: splits into three 
columns rather than two!
•
This could be addressed by using a different delimiter (e.g. 
';'), though this doesn't generalize for fields containing 
arbitrary text
•
Normally, the field will be escaped by quotes

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: CSV.reader
Note: specify what delimiter 
to use (tab)
first line is the 
header

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: CSV.reader
next line is the first review 
in the dataset

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: eval()
Reading json files is even easier as they're very similar to Python's built-in dictionaries:
Note: first line of 
Yelp's review data

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: eval()
Reading json files is even easier as they're very similar to Python's built-in dictionaries:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: eval()
Note that the "eval" function just treats an arbitrary string as if it were python code:
• While convenient, this could be dangerous to run on 
untrusted datasets since it could execute arbitrary code​
• We can use some library functions to make sure that only 
valid json data gets executed​
• We'll look at the ast (abstract syntax tree) and json libraries

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: ast and json libraries
•
Note that the outputs are identical, the code is merely 
"safer" to execute

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: ast and json libraries
•
Note that the outputs are identical, the code is merely 
"safer" to execute

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Understand the methods .split() and eval()
• Understand the libraries ast and json
• Be able to read JSON and CSV data in Python
On your own...
• Try reading the Amazon dataset (or the 
first few lines) using csv.reader
• Try reading the Yelp dataset using 
json.loads()

Week 3
Exploratory Data Analysis

Python Data Products
Course 1: Basics
Lecture: Processing Structured Data in Python

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Demonstrate how to read JSON/CSV files into python 
objects
• Introduce the "gzip" library

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Reading data into data structures
•
In a previous lecture we saw the basics of how to use the 
CSV/JSON libraries to read structured data
•
What comes next? I.e., how to we read the data into 
appropriate data structures?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Reading data into data structures
•
In a previous lecture we saw the basics of how to use the 
CSV/JSON libraries to read structured data
•
What comes next? I.e., how to we read the data into 
appropriate data structures?
1. How do we read larger csv/json files without 
having to unzip them?​
2. How do we extract relevant parts of the data 
for performing analysis?
3. What structures make access to the data 
more convenient?​

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: The gzip library
"rt" indicates that the file is 
a text file (default is to read 
as bytes)
Otherwise, the file can be 
treated like a regular file
• Often we'll want to manipulate files that 
are cumbersome to fit on disk if we extract 
them
• The gzip library allows us to read zipped 
files (.gz) without unzipping them
Even this small file is 12mb 
zipped and 39mb unzipped

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Reading and filtering files line by line
File is read one line at a time
Drop the text fields
Discard unverified reviews
Two ideas:
1. Read the file one line at a time (rather 
than reading the whole thing and then 
processing it)
2. Perform filtering as we read the data, so 
that it is never stored in memory

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Reading CSV files into key-value pairs
dict(zip(header,line)) makes the 
line into a dictionary
Convert numeric and boolean
fields to Python types
Two ideas:
1. The "dict" operator makes the line into a 
dictionary, allowing us to index fields by 
keys (rather than numbers)
2. Convert strings to numbers/booleans
where possible

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Introduced the gzip library
• Saw some techniques for preprocessing datasets 
as we read them
On your own...
• Try reading some of the larger Amazon 
datasets (or the Yelp review data) and 
compiling statistics from them
• Experiment with the dict() and zip() 
operators

Python Data Products
Course 1: Basics
Lecture: Extracting simple statistics from datasets

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Introduce data structures that help us to compile statistics 
(like "defaultdict")
• Compute simple statistics like counts, sums, and averages 
from data

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Simple statistics from data
Let's try to compute the following from the Amazon data:
• What is the average star rating?
• What is the distribution of star ratings?
• What fraction of purchases are verified?
• Which products are the most popular (purchases)?
• Which products have the highest average ratings?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Reading the data
First let's read the Amazon data into a list, exactly as we did in the previous lecture:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Average rating and rating distribution
• Average rating can be computed straightforwardly with a list comprehension:
• Rating distribution can be computed by using a dictionary to store counts:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: defaultdict
• Note that we counted ratings by initializing a dictionary with all zero counts:
• The "defaultdict" structure from the "collections" library allows us to automate this 
functionality, which is useful for counting different types of object
• Let's compute the rating distribution using defaultdict:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: verified purchases
• Similarly we can use the defaultdict function to count verified vs. non-verified purchases

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: most popular products
• Following this, we build a list of 
counts followed by product IDs, 
which we can sort to get the 
most popular
• Again we can use defaultdict to determine product popularity (here we just want to 
count which products appear most in the dataset)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: top rated products
• Here we need to compute the average rating for each product, which requires that we 
first construct the list of ratings for each product
• This can also be done using defaultdict, with the "list" subclass:
• We now have two data structures: one which stores the list of ratings for each product, 
and one which stores the average rating for each product

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: top rated products
• Now we can sort by ratings, and also filter to only include reasonably popular products:
Only products with more 
than 50 reviews

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Saw how to compute simple statistics from 
datasets
• Introduced the "defaultdict" structure
On your own...
Try computing other statistics, e.g.
•
Who are the most active users?
•
What are the most commonly used words?
•
What is the different in average rating 
between verified versus non-verified 
purchases?

Python Data Products
Course 1: Basics
Lecture: Data filtering and cleaning

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Introduce basic protocols for filtering datasets
• Provide Python code to extract subsets of our data

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Why preprocessing?
Although the datasets we're working with have already been 
"cleaned" to some extent, in general there may be many reasons we'd 
want to further clean or pre-process datasets, e.g.:
• Certain fields may be missing from some entries
• Certain entries may be garbled / poorly formatted
• Parts of a dataset may be "stale" or otherwise unusable
• Parts of the dataset may contain statistical outliers (which we may or 
may not want to keep)
• We may want to remove data pertaining to rare or inactive users
• May want to restrict our dataset to a certain demographic or region
• Etc.

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Data preprocessing in Python
In this lecture we'll look at a few such examples in Python

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Data preprocessing in Python
Recall that our data looks something like this:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Filtering by date
First let's try to filter reviews by date. We'll see more on processing time/date data later, 
but for the moment we'll just filter based on the review's year. We first need to convert 
this to an integer:
Year portion of date
That threw an error! Why?
• The 'review_date' field must be missing from some reviews

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Filtering by date
So, we'll first have to preprocess our dataset to exatract only those entries containing a 
'review_date' field:
• Looks like it was just one reivew!
• Now we can try again:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Filtering by date
Finally let's filter out old reviews, e.g. those written before 2010:
• Note that we did this preprocessing (and will do most preprocessing) using a fairly 
simple list comprehension

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Filtering by review quality
Similarly, we might filter reviews based on their "helpfulness". Let's write another list 
comprehension to exclude reviews with low helpful rates:
Keep reviews that haven't 
received many votes yet
Otherwise, delete any with 
less than 50% helpfulness

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Filtering by user activity
Next, let's filter our dataset to discard inactive users (in this case, users who have written 
only a single review in this category)
First we'll use the "defaultdict" class, as we did in the "simple statistics" lecture:
Then we can filter to keep only users with 2 or more reviews:
Note: this cuts the dataset 
down a lot

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Filtering by review length
Finally, let's filter very short reviews, which may be uninformative

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Data preprocessing
These are just a few of the possible ways that we could filter our 
dataset, for instance we could extend this by:
• Filtering products that have few reviews
• Filtering users who have only given '5-star' ratings
• Filtering reviews that aren't part of the "vine" program
• Filter users who haven't written a review for more than a year
• Etc.
But note that this type of filtering quickly and drastically decreases the 
amount of data we have to work with!

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Gave examples of protocols we may use to filter data
• Developed Python code to apply simple preprocessing 
schemes
• Saw the effect of preprocessing on real data
On your own...
•
Try applying the same preprocessing 
protocols to the Yelp data (or a small 
subset of it) and see what effect it has 
on the amount of workable data

Python Data Products
Course 1: Basics
Lecture: text and string processing in Python

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Perform simple manipulations of string data in Python
• Discover a few useful library functions for string 
processing

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Strings in Python
In this lecture me'll look through a few 
functions to manipulate string data in 
Python:
•
string.split() and string.join()
•
List operations on strings
•
index() and find()
•
The "string" library

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Strings in Python
First let's read in a review from the Yelp dataset:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: String.split()
• We saw string.split() previously when reading CSV/TSV files
• Here, .split() can be used to convert a string to a list of words (or we 
could split it based on another character)
• This process is known as tokenization

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: String.join()
• String.join() is like .split() in reverse: it takes a list (here the list of 
words in the review), and converts them to a string, by placing the 
same token (here a space character) in between each one

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: String.lower()
• String.lower() converts a string to lower case
• This operation can be useful before we compute statistics on strings 
– it allows for easier comparison between different variants of the 
same word
• Similarly string.upper() converts a string to upper case

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: List operations on strings
• Regular python list operations will work on strings
Note: # characters
Note: # words
Note: word position
Note: # characters into review 
that the word appears

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: removing punctuation characters
• We can remove punctuation by performing a list 
comprehension on the string
• The "string" library contains utility functions that we can 
use (for e.g.) to get the list of punctuation tokens
• Finally, we have to use join to convert the output back to 
a string

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Strings in Python
These are just a few of the most basic 
operations, see also:
•
string.startswith() (etc.)
•
string.isalpha() (etc.)
•
string.strip()
•
Other operations in the string library
•
(later) the NLTK library

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Understand a few of the basic Python string operations
• Apply list operations to strings
• "Tokenize" strings into lists and vice versa
On your own...
•
Try computing simple statistics from 
string data, e.g. how often does a 
particular word appear among Yelp 
reviews, and which words are the most 
common?

Python Data Products
Course 1: Basics
Lecture: Time and date data

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Consider various formats and structures to represent time 
and date data
• Demonstrate the main methods to manipulate time data 
in python
• Convert time and date data between various formats

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Time and date data
Dealing with time and date data can be 
difficult as string-formatted data doesn't 
admit easy comparison or feature 
representation:
​
• Which date occurs first, 4/7/2003 or 3/8/2003?​
• How many days between 4/5/2003 - 7/15/2018?​
• e.g. how many hours between 2/6/2013 23:02:38 -
2/7/2013 08:32:35?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Time and date data
{'business_id': 'FYWN1wneV18bWNgQjJ2GNg', 'attributes': 
{'BusinessAcceptsCreditCards': True, 'AcceptsInsurance': True, 
'ByAppointmentOnly': True}, 'longitude': -111.9785992, 
'state': 'AZ', 'address': '4855 E Warner Rd, Ste B9', 
'neighborhood': '', 'city': 'Ahwatukee', 'hours': {'Tuesday': 
'7:30-17:00', 'Wednesday': '7:30-17:00', 'Thursday': '7:30-
17:00', 'Friday': '7:30-17:00', 'Monday': '7:30-17:00'}, 
'postal_code': '85044', 'review_count': 22, 'stars': 4.0, 
'categories': ['Dentists', 'General Dentistry', 'Health & 
Medical', 'Oral Surgeons', 'Cosmetic Dentists', 
'Orthodontists'], 'is_open': 1, 'name': 'Dental by Design', 
'latitude': 33.3306902}
Most of the data we've seen so far include plain-text time 
data, that we need to carefully manipulate:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Time and date data
• Time.strptime: convert a time string to a structured 
time object​
• Time.strftime: convert a time object to a string​
• Time.mktime / calendar.timegm: convert a 
time object to a number
• Time.gmtime: convert a number to a time object
In this lecture we'll cover a few 
functions:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Time and date data
Time string
Structured time 
object
Number
strptime
strftime
mktime /t
imegm
gmtime
21:36:18, 28/5/2019
time.struct_time(tm_year=2019, 
tm_mon=5, tm_mday=28, 
tm_hour=21, tm_min=36, 
tm_sec=18, tm_wday=1, 
tm_yday=148, tm_isdst=-1)
1464418800.0
In this lecture we'll cover a few 
functions:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Concept: Unix time
Internally, time is often represented as a number, which 
allows for easy manipulation and arithmetic
• The value (Unix time) is the number of seconds since Jan 
1, 1970 in the UTC timezone ​
• so I made this slide at 1532568962 = 2018-07-26 
01:36:02 UTC (or 18:36:02 in my timezone)​
• But real datasets generally have time as a "human 
readable" string​
• Our goal here is to convert between these two formats

Python Data Products Specialization: Course 1:  Basic  Data Processing…
strptime
First, let's look at converting a string to a 
structured object (strptime)
Time string
Structured time 
object
strptime
21:36:18, 28/5/2019
time.struct_time(tm_year=2019, 
tm_mon=5, tm_mday=28, 
tm_hour=21, tm_min=36, 
tm_sec=18, tm_wday=1, 
tm_yday=148, tm_isdst=-1)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: time.strptime()
Note: different time formatting 
options in the help page
String-formatted time data
Note: this day is a Wednesday!

Python Data Products Specialization: Course 1:  Basic  Data Processing…
strptime
Strptime is convenient when we want to 
extract features from data
• E.g. does a date correspond to a weekday or a weekend?
• Converting month names or abbreviations (e.g. "Jan") to 
month numbers
• Dealing with mixed-format data by converting it to a 
common format
• But if we want to perform arithmetic on timestamps, 
converting to a number may be easier

Python Data Products Specialization: Course 1:  Basic  Data Processing…
time.mktime and calendar.timegm
Structured time 
object
Number
mktime /
timegm
time.struct_time(tm_year=2019, 
tm_mon=5, tm_mday=28, 
tm_hour=21, tm_min=36, 
tm_sec=18, tm_wday=1, 
tm_yday=148, tm_isdst=-1)
1464418800.0
For this we'll use mktime to convert our 
structured time object to a number:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: time.mktime() and calendar.timegm()
Structured time data from previous slide
Five days later
• time.mktime() allows us to convert our structured time 
object to a number
• NOTE: mktime assumes the structure is a local time 
whereas timegm assumes the structure is a UTC time
• This allows for easy manipulation, arithmetic, and 
comparison (e.g. sorting) of time data

Python Data Products Specialization: Course 1:  Basic  Data Processing…
time.strftime and time.gmtime
Finally, both of these operations can be 
reversed, should we wish to format time 
data as a string or structure
Time string
Structured time 
object
Number
strftime
gmtime
21:36:18, 28/5/2019
time.struct_time(tm_year=2019, 
tm_mon=5, tm_mday=28, 
tm_hour=21, tm_min=36, 
tm_sec=18, tm_wday=1, 
tm_yday=148, tm_isdst=-1)
1464418800.0

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: time.strftime() and time.gmtime()
• These methods can be used to put adjusted times back 
into string format
Five days later than the previous time

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Understand the idea and motivation behind unix time
• Understand the methods strptime, strftime, mktime, and 
gmtime
• Be able to convert between various time formats
• Be able to read and manipulate string-formatted time 
data from real datasets
On your own...
•
Try converting the dates in Yelp or 
Amazon reviews to unix time, and 
sorting the reviews by their date

Week 4
Tools for data processing 
and visualization

Python Data Products
Course 1: Basics
Lecture: Data Frames and Pandas

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Describe the efficient and easy to use methods that 
pandas provides for importing data into memory
• Identify functions such as ‘read_csv’ for reading a CSV file 
into a DataFrame
• Describe the capabilities of Pandas for performing 
statistical analysis on data
• Leverage frequently used functions such as describe()
• Identify key plotting functions of Pandas

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Support for time-series data
Image Source: 
http://www.kdnug
gets.com/wp-
content/uploads/d
ata-variety.png
•
Data variety support
•
Data integration
•
Data transformation
Visualizations
Descriptive statistics
pandas Benefits

Python Data Products Specialization: Course 1:  Basic  Data Processing…
pandas Series
pandas DataFrame
pandas Data Structures

Python Data Products Specialization: Course 1:  Basic  Data Processing…
• A 1-dimensional labeled array 
• Supports many data types
• Axis labels à index
• get and set values by index label
• Valid argument to most NumPy
methods
pandas Series

Python Data Products Specialization: Course 1:  Basic  Data Processing…
• A 2-dimensional labeled data structure
• A dictionary of Series objects
• Columns can be of potentially different types
• Optionally parameters for fine-tuning:
• index (row labels) 
• columns (column labels)
Pandas provides many constructors to create DataFrames!
pandas DataFrame

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Data Ingestion

Python Data Products Specialization: Course 1:  Basic  Data Processing…
read_csv
• Input   : Path to a Comma 
Separated File
• Output: Pandas DataFrame object 
containing contents of the file

Python Data Products Specialization: Course 1:  Basic  Data Processing…
read_json
• Input   : Path to a JSON file or a 
valid JSON String
• Output: Pandas DataFrame or a 
Series object containing the 
contents

Python Data Products Specialization: Course 1:  Basic  Data Processing…
read_sql_query
Image Source: http://www.sqa.org.uk/e-learning/SQLIntro01CD/images/pic024.jpg
Image Source: http://www.w3processing.com/SQL/images/SQL002.png
read_html
read_sql_table

Python Data Products Specialization: Course 1:  Basic  Data Processing…
describe()
• Syntax : data_frame.describe()
• Output: Shows summary statistics 
of the dataframe

Python Data Products Specialization: Course 1:  Basic  Data Processing…
func = min(), max(), mode(), median(), mean(),  std()
• The general syntax for calling 
these functions is
• data_frame.func()
• Frequently used optional 
parameter: 
• axis = 0 (rows) or 1 (columns)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Real-world data is messy!
• Missing values
• Outliers in the data
• Invalid data (e.g. negative 
values for age)
• NaN value (np.nan)
• None value
• Replace the value
• Fill gaps forward / backward
• Drop fields
• Interpolation

Python Data Products Specialization: Course 1:  Basic  Data Processing…
any() and dropna()

Python Data Products Specialization: Course 1:  Basic  Data Processing…
df.replace()
9999.0000
0.0000

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Fill missing data gaps forward and backward
http://pandas.pydata.org/pandas-docs/stable/missing_data.html

Python Data Products Specialization: Course 1:  Basic  Data Processing…
df.plot.bar() AND df.plot.hist() AND df.plot() 

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Slice Out Columns

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Filter Out Rows

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Group By and Aggregate

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Delete a Column

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Understand the pandas library and the basic data structures in pandas
• List a few common data ingestion methods in pandas
• Describe a pandas DataFrame
• Clean and explore a DataFrame
On your own...
•
Use Yelp review to try and ingest JSON files
•
There are many other methods available in Pandas to ingest data:
http://pandas.pydata.org/pandas-docs/stable/api.html#input-output
•
Some other functions that are worth exploring: http://pandas.pydata.org/pandas-docs/stable/api.html#api-dataframe-stats
•
There are many other ways to transform missing data: 
http://pandas.pydata.org/pandas-docs/version/0.15.2/missing_data.html#numeric-replacement
•
Explore graphs here: http://pandas.pydata.org/pandas-docs/stable/api.html#api-dataframe-plotting
•
Explore transformations here :  http://pandas.pydata.org/pandas-docs/stable/api.html

Python Data Products
Course 1: Basics
Lecture: Matrix processing and numpy

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Briefly introduce the numpy library
• Perform simple matrix operations on datasets

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Loading data

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Extracting basic statistics from the data
• First let's extract a few simple numerical features from the dataset:
• These are just lists, but we can convert them to numpy arrays:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: Statistical operations
• For the most part, numpy arrays can be treated much like regular python arrays, 
though they support a variety of additional operations, such as statistical operations:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: array type
• We can also compose vectors to build ND-arrays, e.g.:
• Once we have an array, we can perform other matrix operations like computing the 
transpose, e.g. to get a feature matrix (X) we might do the following:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: matrix type
• Note that with an array, most operations (in particulary multiplication) are 
overloaded to "elementwise" operations. For many linear algebra routines, it is 
more convenient to use the "matrix" type instead:
• This supports operations like standard matrix multiplication:
• Or matrix inverse, etc.

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: matrix type
• Finally, numpy overloads primitive operations on matrices, allowing matrices to be 
used within complex mathematical expressions, in order to perform transformations 
of our data:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Other features...
• ndarray.shape: Get the shape of an array
• reshape: change the dimensions of an array/matrix
• arange: Create an array containing a range of numbers
• numpy.random: generate (arrays of) random numbers
• sum, min, max, etc.: reduction operations on matrices
• eye: identity matrix
• trace, eig, etc.: linear algebra operations
• See https://docs.scipy.org/doc/numpy/user/quickstart.html for more

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Introduced the numpy library
• Demonstrated basic operations for data manipulation in 
numpy
On your own...
•
Try reading the numerical features from 
the Amazon data into a numpy array, 
and compiling basic statistics about 
them (max, min, avg values, etc.)

Python Data Products
Course 1: Basics
Lecture: Data Visualization

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Motivate the need for exploratory data analysis
• Explain the common terms that refer to data
• Discuss how plots can be useful in exploring data
• Describe common plotting styles

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Exploratory Data Analysis
Goal:  To understand your data
Two categories:
•
Data visualization
•
Summary statistics

Python Data Products Specialization: Course 1:  Basic  Data Processing…
How to refer to data?
Sample
•
Instance
•
Record
•
Row
•
Observation
•
…
Variable
•
Feature
•
Field
•
Column
•
…
Categorical
Qualitative 
Nominal
Numeric
Quantitative

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Graphing data
• Line plot
• Histogram
• Scatter plot
• Bar plot
• Box plot

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Line Plot
Shows change in data over time
0
50
100
150
200
−0.8
−0.6
−0.4
−0.2
0.0
0.2
0.4
Line Plot
Index
Variable

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What a Line Plot Shows
Cyclical pattern
Trend
Compare 
variables

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Histogram
Shows distribution of numeric variable
Histogram
 
Frequency
2.0
2.5
3.0
3.5
4.0
0
5
10
15
20
25
30
35
Bins

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What a Histogram Shows
Outlier
Skewness
Central Tendency 

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Scatter Plot
Shows relationship between two variables
0
1
2
3
4
5
6
7
0.0
0.5
1.0
1.5
2.0
2.5
Scatter Plot
X
Y

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What a Scatter Plot Shows
Negative 
Correlation
Positive
Correlation
Non-
Linear
Correlation
No Correlation

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Bar Plot
Shows distribution of categorical variable

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What a Bar Plot Shows
Grouped Bar Chart
Stacked Bar Chart

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Box Plot
Compares distributions of variables

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Components of a Box Plot
The middle 50% of 
data are in this 
region

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What a Box Plot Shows

Python Data Products Specialization: Course 1:  Basic  Data Processing…
What a Box Plot Shows
Negative Skew
Symmetric
Positive Skew
Image source:  http://www.slideshare.net/mido02/chap-3gbu

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
•
Provides intuitive way to look at data
•
Should be used with summary statistics for data exploration
•
Are also useful for communicating results

Python Data Products
Course 1: Basics
Lecture: Introduction to Matplotlib

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Demonstrate the basics of the matplotlib and pyplot
libraries
• Illustrate the use of matplotlib to generate simple plots in 
python
Examples from matplotlib.org:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Matplotlib
Matplotlib is a powerful library that can be 
used to generate both quick visualizations, 
as well as publication-quality graphics
​
• This lecture will introduce some of its most basic 
functionality (via pyplot), such as bar and line plots
• Examples (with code!) of the types of plots that can be 
generated are available on https://matplotlib.org/

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: generating some simple statistics
First, let's quickly compile some statistics 
from our Yelp data
(see the lecture on Time and Date data)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: generating some simple statistics
Average ratings per day of week

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: drawing a simple plot
[0,1,2,3,4,5,6]

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: bar plots
​
• Looks right, but need to zoom in more to see the detail

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: bar plots
​
• Next let's add some details

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: bar plots
plt.title()
plt.xlabel()
plt.ylabel()
plt.xticks()

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Matplotlib is an easy-to-use library to generate plots in 
Python
• Can be used for both quick visualizations, or to generate 
publication-quality plots
• Has a lot more functionality than what's covered in this 
lecture!
On your own...
•
Try adding other features to our plot, 
such as multiple bars, colors, or a 
legend
•
Try generating other types of plots, such 
as scatterplots
Examples from matplotlib.org:

Python Data Products
Course 1: Basics
Lecture: Collecting and parsing Web data with urllib 
and BeautifulSoup

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Introduce libraries that can be used to collect data from 
the Web
• Demonstrate libraries and simple string processing 
routines that can be used to parse and organize this data

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Collecting our own datasets
Suppose that we wanted to collect data from a 
website, but didn't yet have CSV or JSON 
formatted data
• How could we collect new datasets in machine-
readable format?
• What Python libraries could we use to collect data 
from webpages?
• Once we'd collected (e.g.) raw html data, how could 
we extract structured information from it?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Collecting our own datasets
E.g. suppose we wanted to collect reviews of "The Great Gatsby" 
from goodreads.com:
(https://www.goodreads.com/book/show/4671.The_Great_Gatsby)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Collecting our own datasets
How could we extract fields including
• The ID of the user,
• The date of the review
• The star rating
• The text of the review itself?
• The shelves the book belongs to

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: urllib
Our first step is to extract the html code of the webpage into a 
python string. This can be done using urllib:
Note: url of "The Great 
Gatsby" reviews
Note: acts like a file 
object once opened

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Reading the html data
This isn't very nice to look at, it can be easier to read in a browser 
or a text editor (which preserves formatting):

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Reading the html data
To extract review data, we'll need to look for the part of the html 
code which contains the reviews:
Here it is (over 1000 lines into the page!)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Reading the html data
To extract review data, we'll need to look for the part of the html 
code which contains the reviews:
• Note that each individual review 
starts with a block containing the text 
"<div id="review_…"
• We can collect all reviews by looking 
for instances of this text

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: string.split()
To split the page into individual reviews, we can use the 
string.split() operator. Recall that we saw this earlier when 
reading csv files:
Note: Ignore the first block, which 
contains everything before the 
first review
Note: the page contains 30 
reviews total

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: parsing the review contents
Next we have to write a method to parse individual reviews (i.e., 
given the text of one review, extract formatted fields into a 
dictionary)

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: parsing the review contents
Let's look at it line-by-line:
• We start by building an empty dictionary
• We'll use this to build a structured version of the review

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: parsing the review contents
Let's look at it line-by-line:
• The next line is more complex:
• We made this line by noticing that the stars appear in the html inside a span with 
class " staticStars":
• Our "split" command then extracts everything inside the "title" quotes
Note: Two splits: everything after the first 
quote, and before the second quote

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: parsing the review contents
Let's look at it line-by-line:
• The following two lines operate in the same way:
• Again we did this by noting that the "date" and "user" fields appear inside certain 
html elements:
Note: Everything between the two 
brackets of this "<a" element

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: parsing the review contents
Let's look at it line-by-line:
• Next we extract the "shelves" the book belongs to
• This follows the same idea, but in a "for" loop since there can be many shelves per 
book:
• Here we use a try/except block since this text will be missing for users who didn't add 
the book to any shelves
Note: Everything inside a particular 
<div

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: parsing the review contents
Next let’s extract the review contents:

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: parsing the review contents
Now let’s look at the results:
• Looks okay, but the review
block itself still contains 
embedded html (e.g. images 
etc.)
• How can we extract just the 
text part of the review?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
The BeautifulSoup library
Extracting the text contents from the html review block would be 
extremely difficult, as we'd essentially have to write a html parser 
to capture all of the edge cases
Instead, we can use an existing library to parse the html contents: 
BeautifulSoup

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Code: parsing with BeautifulSoup
BeautifulSoup will build an element tree from the html passed to 
it. For the moment, we'll just use it to extract the text from a 
html block

Python Data Products Specialization: Course 1:  Basic  Data Processing…
The BeautifulSoup library
In principle we could have used BeautifulSoup to extract all of 
the elements from the webpage
However, for simple page structures, navigating the html 
elements is not (necessarily) easier than using primitive string 
operations

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
• Introduced approaches that can be used to collect data 
from the web, and convert it to a structured format
• Introduced the urllib and BeautifulSoup libraries
On your own...
• Try using the same techniques to extract a page of 
reviews from another review website
• But, if you want to collect a large number of 
reviews, make sure to check the website's terms 
of service first!

Python Data Products
Course 1: Basics
Lecture: Developing a Data Product Strategy

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Learning objectives
In this lecture we will...
• Describe main steps to iteratively define a data product 
strategy that is relevant to you or your organization

Python Data Products Specialization: Course 1:  Basic  Data Processing…
“a plan of action 
or policy designed to 
achieve an overall
aim”
What is a strategy?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Parts of a Strategy
• Aim
• Policy
• Plan
• Action

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Understand business objectives
• Start with the business objectives
• Educate yourself
• Identify the opportunity 
• Analyze gaps
• Prioritize actions

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Set Short-term and Long-term Objectives
•
Short-term
•
Start with limited data, a small team, and prioritize
•
Get organizational  buy-in
•
Commitment
•
Sponsorship
•
Communication
•
Long-term
•
Create a roadmap of product features 
•
Build your data science team

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Come up with ideas
Deploy analytics
Did it work ?
Include customers in 
your experiments
Deploy full 
scale
Open a mini Idea Lab

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Create a data-oriented culture
• Remove barriers to data access
• No data silos
• Data sharing mindset
• Foster collaborations

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Define the data policies related to your product
• Privacy and lifetime
• Curation and quality
• Interoperability and regulation

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Adopt and align through iterations

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Summary of concepts
Integrate analytics
Communicate 
goals
Build teams
Adopt for new situations
Share data

Python Data Products
Course 1: Basics
Lecture: Course Summary

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course summary: Week 1
In this course we covered...
• Introductions
• What are data products and where do they appear in our 
everyday lives?

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course summary: Week 2
In this course we covered...
• Basics of Python and Data Ingestion: JSON and CSV
• Described some datasets (Amazon and Yelp) to be used 
throughout this Specialization
{'business_id': 'FYWN1wneV18bWNgQjJ2GNg', 'attributes': 
{'BusinessAcceptsCreditCards': True, 'AcceptsInsurance': True, 
'ByAppointmentOnly': True}, 'longitude': -111.9785992, 'state': 
'AZ', 'address': '4855 E Warner Rd, Ste B9', 'neighborhood': '', 
'city': 'Ahwatukee', 'hours': {'Tuesday': '7:30-17:00', 
'Wednesday': '7:30-17:00', 'Thursday': '7:30-17:00', 'Friday': 
'7:30-17:00', 'Monday': '7:30-17:00'}, 'postal_code': '85044', 
'review_count': 22, 'stars': 4.0, 'categories': ['Dentists', 
'General Dentistry', 'Health & Medical', 'Oral Surgeons', 
'Cosmetic Dentists', 'Orthodontists'], 'is_open': 1, 'name': 
'Dental by Design', 'latitude': 33.3306902}

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course summary: Week 3
In this course we covered...
• Basics of exploratory data analysis
• Data filtering and cleaning
• Extracting statistics from datasets
• Dealing with structured and semi-structured data: text and 
strings, time and date processing

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course summary: Week 4
In this course we covered...
• Data visualization: Plotting in matplotlib
• Data crawling and collection
• Developing data product strategies

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course summary
By now you should be able to...
• Collect and ingest structured datasets (CSV and JSON) in Python
• Extract simple statistics from those datasets, including processing 
text time/date data
• Explore and visualize the data, and create simple plots from it

Python Data Products Specialization: Course 1:  Basic  Data Processing…
Course summary
In the next course we will...
• Show how to apply machine learning to model the data we have 
ingested
• Introduce regression and classification techniques for different 
prediction tasks
• Show how to extract meaningful features from our dataset in 
order to make predictions effectively

