
Reactive Streams 
and Spring Framework 5

Reactive Streams API
• Goal is to create a standard for asynchronous stream 
processing with non-blocking back pressure. 
• Reactive Streams started in 2013 by engineers from 
Netﬂix, Pivotal, Lightbend (formerly Typesafe), Red Hat, 
Twitter, and Oracle. 
• Reactive Streams is a set of 4 interfaces which deﬁne 
the API

Reactive Streams
• On April 30th, 2015, version 1.0.0 of Reactive Streams 
was released. 
• Under JEP-266, Reactive Streams is now part of the 
Java 9 JDK. 
• Adoptions: Akka Streams, MongoDB, Ratpack, Reactive 
Rabbit, Project Reactor (Spring 5), RxJava, Slick 3.0, 
Vert.x 3.0, Cassandra, ElasticSearch, Kafka, Play

Reactive Streams
• On April 30th, 2015, version 1.0.0 of Reactive Streams 
was released. 
• On August 9th, 2017 version 1.0.1 of Reactive Streams 
was released. 
• Under JEP-266, Reactive Streams is now part of the 
Java 9 JDK.

Publisher

Subscriber

Subscription

Processor

Reactive Streams with Backpressure
Subscription
Publisher
Subscriber
Events
Demand (BP)

Spring MVC & Spring WebFlux
@Controller / @RequestMapping
Router Functions
spring-webmvc
Servlet API
Servlet Container
spring-webﬂux
HTTP / Reactive Streams
Tomcat, Jetty, Netty, Undertow

Spring Reactive Types
• Two new reactive types are introduced with Spring 
Framework 5 
• ‘Mono’ is a publisher with zero or one elements in data 
stream. 
• ‘Flux’ is a publisher with zero or MANY elements in the data 
stream. 
• Both types implement the Reactive Streams Publisher 
interface


