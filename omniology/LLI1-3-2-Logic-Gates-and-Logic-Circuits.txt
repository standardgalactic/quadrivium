Logic: Language and Information 1
§3-2 Logic Gates and Logic Circuits
Jen Davoren

Combinational Digital Systems
A combinational digital system is a digital system such
that each output can be expressed as a proposi-
tional logic formula in terms of the inputs (using
only AND, OR and NOT).
.

AND gates
In Boolean algebra notation, (A & B) written (A · B) or AB.
AND is Boolean product operation.

AND gates
In Boolean algebra notation, (A & B) written (A · B) or AB.
AND is Boolean product operation.

AND gates
In Boolean algebra notation, (A & B) written (A · B) or AB.
AND is Boolean product operation.

AND gates
p
q
r
z
1
z   (
)
´ p&q&r
AND
0
0
0
In Boolean algebra notation, (A & B) written (A · B) or AB.
AND is Boolean product operation.

AND gates
p
q
r
z
1
z   (
)
´ p&q&r
AND
0
0
0
p
q
r
s
z
1
z   (
)
´ p&q&r&s
AND
0
0
0
0
In Boolean algebra notation, (A & B) written (A · B) or AB.
AND is Boolean product operation.

OR gates
In Boolean algebra notation, (A ∨B) written (A + B).
OR is Boolean sum operation.

OR gates
In Boolean algebra notation, (A ∨B) written (A + B).
OR is Boolean sum operation.

OR gates
In Boolean algebra notation, (A ∨B) written (A + B).
OR is Boolean sum operation.

NOT gates (inverters)
In Boolean algebra notation, ∼A written A or A′.
NOT is Boolean negation or inversion.

NOT gates (inverters)
In Boolean algebra notation, ∼A written A or A′.
NOT is Boolean negation or inversion.

NAND and NOR gates

NAND and NOR gates

NAND and NOR gates
NAND also known as Sheffer stroke (Sheffer, 1913).
NOR also known as Peirce arrow (Peirce, 1881).
In fact, all the classical propositional connectives (&, ∨, ∼, ⊃
and ≡) can be expressed in terms of NAND (or NOR):
With (A|B) meaning ∼(A & B), we have:
∼A
≡
(A|A)
(A ∨B)
≡
((A|A)|(B|B))
(A & B)
≡
((A|B)|(A|B))
This means we can build any combinational digital system using
just one kind of logic gate (one kind of Lego-like block).

XOR gates
One further combinational gate is EXCLUSIVE OR, written
XOR:

Logic Circuit Diagrams for Combinational Systems

Logic Circuit Diagrams for Combinational Systems
⋆Input and output signal wires labelled with signal names
(we’ll use p, q, r, z, w, v, etc, as for atomic props).

Logic Circuit Diagrams for Combinational Systems
⋆Input and output signal wires labelled with signal names
(we’ll use p, q, r, z, w, v, etc, as for atomic props).
⋆Basic constructors: AND, OR, NOT gates (or NAND
only, or NOR only).

Logic Circuit Diagrams for Combinational Systems
⋆Input and output signal wires labelled with signal names
(we’ll use p, q, r, z, w, v, etc, as for atomic props).
⋆Basic constructors: AND, OR, NOT gates (or NAND
only, or NOR only).
⋆Connect output of one gate with inputs of further gates.

Logic Circuit Diagrams for Combinational Systems
⋆Input and output signal wires labelled with signal names
(we’ll use p, q, r, z, w, v, etc, as for atomic props).
⋆Basic constructors: AND, OR, NOT gates (or NAND
only, or NOR only).
⋆Connect output of one gate with inputs of further gates.
⋆Can “branch” a signal wire in feed-forwards direction, sending
same signal as input to 2 or more other components; branch
shown with bold •. But no feedback loops (yet).
.
.

Logic Circuit Diagrams
⋆From a propositional logic formula characterising output in
terms of inputs, of form z ≡A(p, q, r, . . .), we get a recipe for
constructing circuit diagram. Start at atomic propositions for
inputs, and build up.

Logic Circuit Diagrams
⋆From a propositional logic formula characterising output in
terms of inputs, of form z ≡A(p, q, r, . . .), we get a recipe for
constructing circuit diagram. Start at atomic propositions for
inputs, and build up.
⋆Layout in 2-dimensions of circuit diagram provides template
for physical implementation of device. Hence important to
minimize the number of gates and the input-size of gates as
every component costs space.
More on this in last section,
§3-4 Minimizing Logic Circuits Using K-Maps.

Multi-output circuits

Reading circuit diagrams
Task: Express the system output z as a propositional logic
formula in terms of inputs p, q and r, and label all intermediate
signal wires with appropriate logic formulas.
.

Reading circuit diagrams
.

Reading circuit diagrams
.

Reading circuit diagrams
.

Reading circuit diagrams
.

Reading circuit diagrams
.

Reading circuit diagrams
.

Reading circuit diagrams
.

Reading circuit diagrams
.

Exercise: Reading circuit diagrams
.
Task: Express output z as a propositional logic formula in
terms of inputs p, q, s and t.

Exercise: Reading circuit diagrams
Which propositional logic formula correctly expresses
dependence of output z on inputs p, q, s and t in previous
circuit:
(a)
z ≡((p & ∼s & t) ∨(∼q & ∼s) ∨(q & s & t))
(b)
z ≡((∼p & s & ∼t) ∨(∼q & s) ∨(∼q & s & t))
(c)
z ≡((∼p & s & t) ∨(∼q & s) ∨(q & ∼s & t))
(d)
z ≡((p & s & t) ∨(∼q & s) ∨(q & ∼s & t))
Notice that each of the options have the right shape: requiring
a 3-input OR gate preceded by three AND gates, with
3-inputs, 2-inputs and 3-inputs, respectively.

Exercise Solution: Reading circuit diagrams
Which propositional logic formula correctly expresses
dependence of output z on inputs p, q, s and t in previous
circuit:
(c)
z ≡((∼p & s & t) ∨(∼q & s) ∨(q & ∼s & t))
Top AND gate gives (∼p & s & t); middle 2-input AND gate
gives (∼q & s); and bottom AND gate gives (q & ∼s & t).

Next Up: Truth Tables, Logic Formulas and Logic Circuits

