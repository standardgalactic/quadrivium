Linux Structure 
 
 
Linux is a layered operating system. The innermost layer is the hardware that provides the services for 
the OS. The operating system, referred to in Linux as the kernel, interacts directly with the hardware and 
provides the services to the user programs. These user programs don’t need to know anything about the 
hardware. They just need to know how to interact with the kernel and it’s up to the kernel to provide the 
desired service. One of the big appeals of Linux to programmers has been that most well written user 
programs are independent of the underlying hardware, making them readily portable to new systems. 
 
User programs interact with the kernel through a set of standard system calls. These system calls request 
services to be provided by the kernel. Such services would include accessing a file: open close, read, 
write, link, or execute a file; starting or updating accounting records; changing ownership of a file or 
directory; changing to a new directory; creating, suspending, or killing a process; enabling access to 
hardware devices; and setting limits on system resources. 
 
Linux is a multi-user, multi-tasking operating system. You can have many users logged into a system 
simultaneously, each running many programs. It’s the kernel’s job to keep each process and user separate 
and to regulate access to system hardware, including cpu, memory, disk and other I/O devices. 
 

