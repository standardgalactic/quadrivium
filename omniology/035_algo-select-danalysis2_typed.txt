Linear-­‐Time	  
Selec.on	  
Determinis.c	  
Selec.on	  (Analysis	  II)	  
Design	  and	  Analysis	  
of	  Algorithms	  I	  

Tim	  Roughgarden	  
Rough	  Recurrence	  (Revisited)	  
Let	  T(n)	  =	  maximum	  running	  .me	  of	  Dselect	  on	  an	  input	  array	  of	  
length	  n.	  
There	  is	  a	  constant	  c	  >=	  	  1	  such	  that	  :	  
1.  	  T(1)	  =	  1	  
2.  T(n)	  <=	  c*n	  	  +	  T(n/5)	  	  +	  	  T(?)	  
	  sor.ng	  the	  groups
	  recursive
	  recursive	  call	  in	  
	  par..on
	  
	  call	  in	  line	  3
	  line	  6	  or	  7	  
<=	  7n/10	  	  	  by	  
Key	  Lemma	  

Tim	  Roughgarden	  
Rough	  Recurrence	  (Revisited)	  
T(1)	  =	  1,	  T(n)	  <=	  cn	  +	  T(n/5)	  +	  T(7n/10)	  
Note	  :	  diﬀerent-­‐sized	  subproblems	  =>	  can’t	  use	  Master	  Method!	  
Strategy	  :	  “hope	  and	  check”	  
Hope	  :	  there	  is	  some	  constant	  a	  [independent	  of	  n]	  
Such	  that	  T(n)	  <=	  an	  	  for	  all	  n	  >=1	  
[if	  true,	  then	  T(n)	  =	  O(n)	  	  and	  algorithm	  is	  linear	  .me	  ]	  
Constant	  c>=1	  

Tim	  Roughgarden	  
Analysis	  of	  Rough	  Recurrence	  
Claim	  :	  Let	  a	  =	  10c	  
Then	  	  T(n)	  <=	  an	  for	  all	  n	  >=	  1	  
Proof	  :	  by	  induc.on	  on	  n	  
Base	  case	  :	  T(1)	  =	  1	  <=	  a*1
	  (since	  a	  >=	  1)	  
Induc.ve	  Step	  :	  [n	  >	  1]	  	  
Induc.ve	  Hypothesis	  :	  
We	  have	  
T(1)	  =	  1	  ;	  T(n)	  <=	  cn	  +	  T(n/
5)	  +	  T(7n/10)	  
=>	  Dselect	  runs	  in	  	  	  	  	  	  	  	  	  
O(n)	  .me	  
Constant	  c>=1	  

