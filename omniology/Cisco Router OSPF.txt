Page i
Cisco Router OSPF
Page ii
McGraw-Hill Cisco Technical Expert Titles
ARS Troubleshooting Cisco Internetworks 0-07-047235-1
Lewis Cisco TCP/IP Professional Reference 0-07-041130-1
Fisher Configuring Cisco Routers for ISDN 0-07-02273-5
Gai Internetworking IPv6 with Cisco Routers 0-07-022836-1
Sacket Cisco Router Handbook 0-07-058097-9
Slattery/Burton Advanced IP Routing with Cisco Networks 0-07-058144-4
To order or receive additional information on these or any other McGraw-Hill titles, in the
United States please call 1-800-722-4726, or visit us at www.computing.mcgraw-hill.com. In
other countries, contact your McGraw-Hill representativebreak
Page iii
Cisco Router OSPF

Design and Implementation Guide
William R. Parkhurst, Ph.D., CCIE #2969
Senior Network Architect
Sprint-Paranetbreak
Page iv
Disclaimer:
Information has been obtained by The McGraw-Hill Companies from sources believed to be
reliable.  However, because of the possibility of human or mechanical error by our sources, The
McGraw-Hill Companies or others, The McGraw-Hill Companies does not guarantee the
accuracy, adequacy, or completeness of any information and is not responsible for any errors or
omissions or the results obtained from use of such information.
Library of Congress Cataloging-in-Publication Data
Parkhurst, William (William R.)
Cisco router OSPF : design and implementation guide / William Parkhurst.
p. cm.—(Cisco technical expert)
Includes index.
ISBN 0-07-048626-3
1. Computer network protocols 2. Packet switching (Data
transmission) 3. Internet (Computer network) 4. Ethernet (Local
area network system) I. Title. II. Series.
TK5105.55.P39 1998
004.62—dc21                                                             98-21959
                                                                                          CIP
McGraw-Hill
A Division of The McGraw·Hill Companies 
Copyright © 1998 by The McGraw-Hill Companies, Inc. All rights reserved. Printed in the
United States of America. Except as permitted under the United States Copyright Act of 1976, no
part of this publication may be reproduced or distributed in any form or by any means, or stored
in a data base or retrieval system, without the prior written permission of the publisher.

1 2 3 4 5 6 7 8 9 0 DOC/DOC 9 0 3 2 1 0 9 8
ISBN 0-07-048626-3
The sponsoring editor for this book was Steven Elliot, the editing supervisor was Ruth W.
Mannino, and the production supervisor was Claire Stanley. It was set in Vendome by Don
Feldman of McGraw-Hill's Professional Book Group composition unit.
Printed and bound by R. R. Donnelley & Sons Company.
McGraw-Hill books are available at special quantity discounts to use as premiums and sales
promotions, or for use in corporate training programs. For more information, please write to the
Director of Special Sales, McGraw-Hill, 11 West 19th Street, New York, NY 10011. Or contact
your local bookstore.
Information contained in this work has been obtained by The McGraw-Hill
Companies, Inc. ("McGraw-Hill") from sources believed to be reliable
However, neither McGraw-Hill nor its authors guarantee the accuracy or
completeness of any information published herein and neither McGraw-Hill
nor its authors shall be responsible for any errors, omissions, or damages
arising out of use of this information. This work is published with the
understanding that McGraw-Hill and its authors are supplying information,
but are not attempting to render engineering or other professional services. If
such services are required, the assistance of an appropriate professional
should be sought.
This book is printed on recycled, acid-free paper containing a minimum of 50% recycled,
de-inked fiber.break
Page v
Contents
Foreword by Imran Qureshi
ix
Acknowledgments
x
Preface
xi

Preface
xi
Chapter 1
Network Technologies
1
The OSI and TCP/IP Layered-Network Models
2
Bridges
5
IEEE 802.1 Spanning Tree Protocol
10
Switches
12
Routers
12
Chapter 2
Ethernet
15
Technology Overview
16
Ethernet Addresses
18
Ethernet Frame Formats
19
Ethernet Version II Frame Format
20
Novell Proprietary Frame Format
21
IEEE 802.3/802.2 Frame Format
21
IEEE 802.3 SNAP Frame Format
22
Differentiating Frame Formats
22
Chapter 3
Internet Protocol
25
IP Address Format
26
Classful IP Addressing
27
IP Subnets
30
Variable-Length Subnet Masks
40

Variable Length Subnet Masks
40
Chapter 4
Address Resolution Protocol
47
Address Resolution: One Network
48
Address Resolution: Multiple Networks
50
Chapter 5
Routing Information Protocol
55
Technical Overview
56
Count-to-Infinity Problem
61
Split Horizon
62
Page vi
Split Horizon with Poisoned Reverse
62
Hold Down
62
Triggered Updates
63
RIP and VLSM
63
RIP Version 2
63
Chapter 6
Open Shortest Path First
67
Overview
68
Definitions
73
OSPF Routing Protocol Packets
77
Packet Formats
78

Packet Formats
78
Designated Router Election
80
Link-State Database Packet Formats
83
Link-State Database
84
Router Link-State Advertisements
85
Network Link-State Advertisements
87
Summary Link-State Advertisements
88
AS-External LSAs
89
Database Description Packet
90
Link-State Request Packets
91
Link-State Update Packet
91
OSPF Not-So-Stubby Area
92
Chapter 7
IP Traffic Management
97
IP Data Packet Format
98
Standard IP Access Lists
100
User Datagram Protocol
106
Transmission Control Protocol
107
Extended IP Access Lists
109
Dynamic Access Lists
117
Chapter 8
Configuring RIP
121
RIP Version 1
122

RIP Version 1
122
RIP Version 2
143
RIP Version 1 and Version 2 Interoperability
146
Debugging RIP
148
Chapter 9
Configuring IGRP
151
IGRP
152
Debugging IGRP
174
Page vii
Chapter 10
Configuring EIGRP
179
EIGRP
180
EIGRP Interface Commands
199
Debugging EIGRP
202
Chapter 11
Basic OSPF Configuration
205
OSPF
206
OSPF Interface Commands
239
Monitoring OSPF
243
OSPF Debug Commands
246
Chapter 12
Advanced OSPF Configuration
251
Frame Relay—An Overview
252

Frame Relay
An Overview
252
Frame Relay Topologies
254
Configuring Frame Relay
258
Configuration of a Frame Relay Switch—Point-to-Point Fully
Meshed Topology
261
Configuration of a Frame Relay Switch—Point-to-Point Partially
Meshed Topology
265
OSPF—Frame Relay Partially Meshed Point-to-Point Topology
266
OSPF—Frame Relay Partially Meshed Point-to-Multipoint
Topology
268
OSPF and Demand Circuits
269
Chapter 13
Route Redistribution
271
RIP and IGRP
272
RIP and EIGRP
303
IGRP and EIGRP
307
OSPF and RIP
314
OSPF and IGRP
321
OSPF and EIGRP
324
Appendix
Solutions to Exercises
327
Index
335
Page ix

Foreword
Dr. Parkhurst brings his extraordinary teaching skills to this book, building the foundations of
internetworking protocol expertise using concepts and fundamentals.
Within Interior Gateway Protocols, Routing Information Protocol (RIP) and Interior Gateway
Routing Protocol (IGRP) are simple to implement in small- and medium-scale networks.
However, when it comes to large-scale network design and implementation, OSPF is
recommended.
OSPF provides quick convergence for topological changes using the same topological database
resident in each router. A set of routers is grouped into areas, and area border routers (ABRs)
exchange information between the areas. Other concepts such as Stub areas and route
summarization provide the enhanced scalability. The OSPF structured concept sometimes makes
the protocol difficult to implement and to troubleshoot. This book touches on these difficult
topics and explains them with examples.
In addition to OSPF, it is important to understand the behavior and working characteristics of
RIP, IGRP, and EIGRP. This is particularly useful in redistributing routes from one protocol to
another.
Controlling traffic using IP management techniques in any network environment is an absolute
necessity. It is not limited to providing or denying access to various machines, but controls the
flow of applications using TCP ports. The extended access lists used to deploy this feature are
also used for priority and custom queuing, hence providing bandwidth management.
I would recommend this book to network designers, university students, and candidates pursuing
internetworking certification of various kinds.break
IMRAN QURESHI
CCIE PROGRAM MANAGER
CCIE #1030
Page x
Acknowledgments
Many people were instrumental in my evolution from a university professor to a Cisco Certified
Internetwork Expert.
Cisco Systems

I want to express my sincere gratitude to Khalid Raza for having faith in me and suggesting that
Wichita State University should be the place for the world's first CCIE preparation lab and to
Imran Qureshi and Joe Pinto for listening to Khalid and putting their faith in his
recommendations. Imran also suggested to McGraw-Hill that I write a book related to the CCIE.
I wish to thank Jeff Buddemeier for listening to all my questions and, instead of just answering
them, nudging me in the proper direction so that I could discover the answers for myself. Salman
Asad, another WSU graduate, also listened to my questions and pointed me in the right direction,
and showed me that the student can become the teacher. I wish to also thank James Walker and
Kevin Hanahan for getting me the routers I needed to verify the configurations in the book and
for making sure I didn't leave out anything important.
Sprint-Paranet
I want to thank my colleagues David "DJ" Jackson and Darryl Meidinger for reviewing the text
and for being extremely tactful when pointing out mistakes.break
WILLIAM R. PARKHURST, PH.D.
Page xi
Preface
A Bit of History
On a dreary November day in 1996, I was sitting in my lab at Wichita State University doing
what college professors normally do when they are not in class. I'm not sure what that was, but
I'm sure it was very academic. I received a call from Khalid Raza, who had received his bachelor
and master degrees from the College of Engineering at Wichita State and who was now a
member of the Cisco family. Khalid and I exchanged the usual greetings, and then he mentioned
that Cisco Systems had a proposal that I might be interested in, but it would require my going to
San Jose the following January for a meeting. I thought to myself, San Jose in January, is this a
trick question? After thinking about the request for about a millisecond, I agreed and spent the
next 8 weeks wondering what the undisputed leader in the networking industry wanted with me.
Although I had been to the Silicon Valley before, I was never the guest of a company that is
synonymous with the Internet. My wife Debbie and I spent 4 days sightseeing, whale watching,
visiting former students, and eating the greatest variety of cuisine imaginable. I was able to
squeeze in a meeting one morning at Cisco Systems with Khalid Raza, Imran Qureshi, and Joe
Pinto regarding the Cisco Certified Internetwork Expert (CCIE) program. I discovered that the
CCIE is the most difficult certification to achieve in the network industry and that the pass rate
was extremely low. There are many reasons for a low pass rate, and one reason seemed to be the
shock that people experience when entering the exam environment for the first time. The

equipment setup in the CCIE lab and the level of sophistication of the exam scenarios can have a
very chilling effect. To overcome this problem, Cisco wanted to establish a CCIE preparation lab
somewhere in the United States with the intent of creating an environment similar to the actual
CCIE exam, where people could gain experience with various exam scenarios and determine if
they were ready for the big exam. Since I taught the networking courses in the Department of
Electrical and Computer Engineering, I jumped at the opportunity to establish a relationship with
Cisco Systems. We decided to establish the preparation lab at Wichitacontinue
Page xii
State University over the next 6 months and open for business during the summer of 1997. There
was one catch. Imran Qureshi, the CCIE program manager, wanted me to pass the CCIE exam
within 8 months. Being someone who has had years of experience with exams, I thought, how
hard can this be? Well, I found out very quickly what level of knowledge was required to pass the
CCIE exam. That level was expert, hence the E in CCIE.
The Reason for This Book
Before setting out to study for the exam, I decided to gather the documentation I thought that I
needed in order to become expert with the Cisco Internetwork Operating System (IOS) and
quickly discovered the pros and cons of the IOS. The pro is that the IOS can do anything related
to networking. The con is that the IOS can do anything related to networking, meaning that the
level of knowledge and experience needed to master the Cisco IOS is formidable. The vast
amount of documentation that was available made it difficult to decide what to use and what not
to use. Also, documentation can be like a dictionary: all the words and their meanings are there,
but there are no instructions on how to write a good novel, poem, or limerick. With the
documentation as a guide, I sat down with my routers and began to experiment with every
scenario I could imagine to determine which commands should be used for which scenarios and
what the ramifications were for each configurtion that I tried.
Out of this experience grew the idea for this book. I thought about what type of book I would
have liked to have had at my side while I was studying for the CCIE exam. The answer was a
book that explained every command for a possible feature, such as OSPF, the minimum
commands needed to enable the feature, and the purpose of the additional commands and when
they should be used.
Although there are many areas in which you need expert knowledge and experience in order to
pass the CCIE exam, the area of IP routing is probably the most important, with OSPF being the
most important IP routing protocol and the most difficult to configure properly. Therefore, this
book is about OSPF and all the supporting information necessary to design and configure robust
OSPF networks. This book was written for the practicing network designer and is meant as a
practical guide to configuring IP routing with Cisco routers.break
WILLIAM R. PARKHURST, PH.D.

Page 1
Chapter 1—
Network Technologies
Page 2
This book ultimately is concerned with designing and configuring Open Shortest Path First
(OSPF) networks using Cisco routers. A full understanding of the issues related to an OSPF
network requires knowledge of many different network technologies. At the hardware level, we
need to know how bridges, switches, and routers operate and what their functions are in the
overall network design. We need to understand not only OSPF but also its interaction with other
Internet Protocol (IP) routing protocols such as the Routing Information Protocol (RIP), the
Interior Gateway Routing Protocol (IGRP), and the Enhanced Interior Gateway Routing Protocol
(EIGRP). Local area network (LAN) protocols (Ethernet and Token Ring) and wide area network
(WAN) protocols (Frame Relay, X.25, and ISDN) also need to be examined to better understand
how to use these technologies in our network configurations and designs.
The OSI and TCP/IP Layered-Network Models
The different network protocols that exist today interoperate extremely well because of
adherence to a layered-protocol model. The original Open Systems Interconnection (OSI) model
(Fig. 1-1) was created to sepa-soft
Figure 1-1
TCP/IP and OSI layered-network models.

Page 3
rate the various functions of a network. This model allows the software modules from different
vendors to coexist and operate properly as long as the published standards are followed. The
physical layer deals with the electrical and mechanical specifications of a particular transport
medium and associated interfaces. Physical layer examples are 10- and 100-Mbit Ethernet,
synchronous and asynchronous serial links, and asynchronous transfer mode (ATM) to name a
few. The physical layer is concerned with getting bits, in an electrical or optical form, from point
A to point B. The data-link layer has the responsibility of creating frames that contain source and
destination addresses, adding error-detection, and possibly correction, fields to the frame, and of
course, incorporating a user's data into the frame. Protocols at the data-link layer are not routable.
Ethernet is an example of a data-link-layer protocol.
The network layer handles routing in an internet and is the most important layer as far as OSPF
networks are concerned. For a protocol to be routable, the addressing scheme must include a
network and a host address. Examples of routable protocols are IP, IPX, AppleTalk, and
DEC-Net. The transport layer is used to multiplex and demultiplex data streams between
upper-layer application processes, as seen in Fig. 1-2. Things become murky at the upper three
layers. All seem to be involved with user applications at layer 7, but they have nothing to do with
networking, so we will ignore them. In fact, we will concern ourselves only with the lower four
layers of the OSI model.break
Figure 1-2
Multiplexing and demultiplexing in the OSI model.
Page 4
When an application such as telnet wants to send data, the data are sent to the Transmission

Control Protocol (TCP) module at the transport layer. The TCP module will assign a number to
the local and remote telnet session, allowing TCP to determine to which session to deliver the
data. The IP module will either receive from or deliver to the User Datagram Protocol (UDP) or
TCP module depending on the type of application. Finally, an Ethernet frame contains an
identifier that identifies from which network layer protocol it received the data or to which
network layer protocol it is to deliver the data. To illustrate the interaction between the different
layers in the OSI model, we will follow the flow of data from one host to another (Fig. 1-3).
Assume we are running a telnet session between two hosts. User data are generated at the
application layers and passed down the protocol stack to the TCP module in the transport layer.
The TCP layer will use an identifier for the session, which is contained in the TCP header, and
pass the TCP segment to the IP module at the network layer. IP only needs to tag the packet as a
TCP or UDP packet. When the packet is received at the data-link layer, an Ethernet frame is
constructed with an Ethernet header and trailer. The header, among other things, contains a field
tagging the frame as one that carries IP data. Finally, the frame is passed to the physical layer for
transmission onto the network media. The details of the protocols mentioned in this example will
be examined in greater detail in later chapters. For now, we only need to understand the concepts
behind the layered model and the encapsulation and deencapsulation of data as they pass up and
down the protocol stack.
When the Ethernet frame is received by the remote host, the data-link Ethernet module will strip
off the Ethernet header and trailer after determining that this frame carries IP data and pass the
data to the IP module at the network layer. IP will determine if the packet is a TCP or UDP
packet and pass it to the appropriate module at the transport layer. Finally, TCP will extract the
user data and send them to the proper user process.break
Figure 1-3
Data encapsulation.
Page 5
Bridges
Ethernet is a shared-media technology. This means that every node on an Ethernet segment will
receive every frame that is transmitted by any host. The physical layer will receive the frame and
examine the destination address contained within the frame. If the address matches the address of
the host, or if the frame is an Ethernet broadcast, the physical layer will pass the frame to the
data-link layer for further processing. As the number of hosts on an Ethernet segment increases,

so does the amount of traffic that each host will need to process, even if the traffic is not intended
for that host. Shared media also means that only one host at a time can send traffic. An Ethernet
segment with many hosts will start to introduce significant traffic delays and eventually can reach
the point where the network is unusable. A bridge is a device that operates at layer 2, the
data-link layer, of the OSI model for the purpose of reducing the amount of traffic that Ethernet
hosts have to deal with on a particular segment. Traffic reduction is achieved by segmenting a
large Ethernet segment into smaller segments. Figure 1-4 is an unsegmented Ethernet network
containing 100 hosts, and Fig. 1-5 is a bridged Ethernet network containing 4 segments of 25
hosts each. A bridge will forward Ethernet frames between segments only if the traffic is destined
for a host on that segment. How does the bridge know when to forward frames? Initially, a bridge
does not know which hosts are on which segments, so all frames are forwarded to all segments.
When a bridge receives the first frame transmitted by a host, it learns the address of the host,
which is contained in the frame, and the segment on which the frame was received. The bridge
does not know the location of the intended recipient, so it forwards the frame on all segments
except on the segment on which the frame was received (Fig. 1-6). Assume that the host with
address 75 is sending a frame to the host with address 51. When the bridge receives the frame, it
will learn that address 75 is on segment 3. The bridge knows that the destination is address 51
but doescontinue
Figure 1-4
Single-segment unbridged Ethernet network.
Page 6

Figure 1-5
Four-segment bridged Ethernet network.
not know on which segment to find this address, so the frame is forwarded onto the remaining
three segments. The bridge learns host addresses by using a bridging table similar to the one in
Table 1-1. Now host 26 sends a frame to host 75. The bridge consults the bridging table and sees
that host 25 is on segment 3, so the frame is forwarded to segment 3, but not segments 1 and 4.
The bridge also learns that host 26 is on segment 2 and adds this entry to the bridging table
(Table 1-2). Eventually, the bridge will learn the location of every host and will have a complete
bridging table (Table 1-3).
What if we physically move a host from one segment to another? When the moved host transmits
a frame, the bridge will learn which segment it is on. The bridging table will be checked to see if
there is an entry for this host. The bridge will find an entry and notice that the entry does not
agree with the segment from where the frame was received. The bridge then will remove the old
entry and replace it with the new entry. Before the moved host transmits, any frame sent to that
host will not reach the host because the entry in the bridging table con-soft
Page 7

Figure 1-6
Initial bridge operation.
TABLE 1-1 Bridging Table
Segment
Host Address
3
75
TABLE 1-2 Modified Bridging Table
Segment
Host Address
3
75
2
26
Page 8
TABLE 1-3 Complete Bridging Table
Segment
Host Address
1
   1–25
 2
26–50
 3
51–75
4
75–100

tains old data. Until the moved host sends a frame, it will not be able to receive any frames sent
to it. These examples demonstrate that bridges do reduce traffic on Ethernet segments, but they
cannot reduce broadcast traffic. An Ethernet broadcast is a frame that is addressed to all hosts.
Bridges are required to forward broadcast traffic onto all attached segments. Many times
broadcast traffic can be very high, and bridges will not help us—but routers can, as we will
discover soon.
Bridges are essentially transparent devices. A bridge will not alter the source or destination
address of an Ethernet frame but will only forward traffic onto the appropriate segment. Bridges
are not totally transparent because they do introduce a delay in intersegment traffic flow. A
bridge must buffer every frame, determine if the frame is to be forwarded onto another segment,
wait until the segment is free of traffic, and then transmit the frame. This buffering and
forwarding process introduces a finite amount of delay into the transmission time of
inter-segment packets. Also, if the buffer capabilities of the bridge are not adequate, the
possibility exists that the bridge may begin to discard frames until the overload subsides. Data
encapsulation and deencapsulation for an Ethernet bridge are shown in Fig. 1-7.
What happens if a bridge fails? Hosts on the same segment will be able to communicate, but
intersegment communication will be impossible. The solution is to design redundancy into the
network by using multiple bridges, as shown in Fig. 1-8.
If bridge A fails, then intersegment traffic can still occur through bridge B. Do you see any
problems with this configuration? Assume that a host on segment 1 transmits a frame (we don't
care what the destination is). Both bridges receive the frame and learn that the transmitting host
is on segment 1. The bridges do not know the segment for the destination host, so they both
forward the frame onto segment 2. Bridge A receives the frame transmitted by bridge B and
learns that the transmitting host is on segment 2. The same thing happens when bridge B receives
the frame that was forwarded by bridge A. Neither bridgecontinue
Page 9

Figure 1-7
Encapsulation and deencapsulation of data in a bridged network.
Figure 1-8
Redundant bridge design for fault tolerance.
knows the segment of the destination host, so they forward the frame back onto segment 1, and
round and round she goes. We have an infinite bridging loop that will continue until we turn off
one of the bridges. Great design! Well it is, but we need to add sophistication to prevent these
nasty bridging loops. The loop is broken by putting one of the bridges in standby mode and
leaving it there until the other bridge fails. If one of the bridges fail, the other can take over and
keep trafficcontinue
Page 10
flowing. We could do this manually, but an automatic method would be better, especially if we
have a large number of bridges in our network.

IEEE 802.1 Spanning Tree Protocol
The IEEE 802.1 Spanning Tree Protocol was developed to allow a bridged network to discover a
loop-free topology. This loop-free topology is a treelike structure that spans every segment of the
network, hence the name Spanning Tree. Consider the five-segment bridged Ethernet network of
Fig. 1-9. This network contains multiple bridging loops, which would be disastrous if we ever
turned on the bridges. The bridgescontinue
Figure 1-9
Bridged Ethernet network containing multiple loops.
Page 11
do us no good if they are off, so we need a method to break the routing loops and still maintain
our redundant, fault-tolerant design. If selected interfaces on certain bridges enter into a standby
mode (no frame forwarding occurs), then a loop-free ''spanning tree" would be formed that still
connects all the segments and contains no loops (Fig. 1-10).
The bridge interfaces with an X over them have entered standby mode. These standby interfaces
will only be placed into active mode when one or more active bridge interfaces fail and
connectivity between segments is lost. How is all this accomplished? Bridges must talk to each

other using Bridge Protocol data units (BPDUs) to learn the network topology and to decide
which interfaces will be active and which will enter the standby mode.break
Figure 1-10
Loop-free bridged Ethernet network.
Page 12
Switches
A switch is a layer 2 device and is essentially a fast bridge. While bridges buffer frames and then
use software to determine whether or not to forward a frame to a segment, a switch bridges
frames using hardware, thus making a switch must faster than a bridge. Also, a switch usually
has a multipath backplane or switching fabric that is used to switch frames between multiple
segments simultaneously.
Routers
A router operates at layer 3, the network layer, of the OSI model. The flow of data in a routed
network is shown in Fig. 1-11.
When a router receives an Ethernet frame, the Ethernet header will be examined to see if the
packet is addressed to the router. If the packet is meant for the router, the router will strip off the

Ethernet header from the frame and pass the remaining potion of the packet up to the indicated
protocol in the Ethernet header. In this case, the IP layer will examine the IP destination address
to determine the router interface to which the packet is sent. The router will reencapsulate the IP
packet into an Ethernet frame and send the frame on its way to host 2. The routercontinue
Figure 1-11
Data flow in a routed network.
Page 13
bases the routing decision on the network address of the destination host. When the Ethernet
frame arrives at host 2, the Ethernet card will examine the destination address in the Ethernet
header to determine if the frame is meant for host 2. If the Ethernet address of host 2 matches the
destination address in the frame, the data-link layer (layer 2) will pass the frame to the
appropriate network layer process, in this case the IP process. The IP process will determine if
the packet is meant for UDP or TCP at layer 4. UDP or TCP determines the user process to
which the data are sent. Finally, the user process will receive the data.
Routers can run multiple routing processes simultaneously if multiple routing protocols are being
used. On some links we may want to run only one routing protocol, usually IP. Non-IP traffic
(e.g., IPX, Apple Talk) that needs to cross the IP-only link would need to be tunneled across the
link in an IP tunnel, as shown in Fig. 1-12.
Notice that tunneling involves encapsulating a layer 3 protocol such as IPX in another layer 3
protocol such as IP. The IPX packet becomes the data in the IP packet and is tunneled across the
IP-only link between the routers. When the packet reaches the other side of the link, the IPX
packet is extracted from the IP packet and encapsulated in an Ethernet frame to be sent to the
NetWare client.break

Figure 1-12
Tunneling IPX across an IP-only link.
Page 14
Summary
At the end of each chapter I will summarize the concepts that I believe are essential for a
complete understanding of the material that was presented. If any of the points mentioned in the
summary are not fully understood, then I recommend that you take the time to review the
material until you are satisfied with your level of comprehension.
Main Points
1. TCP/IP and OSI layered-network models
2. Multiplexing and demultiplexing of IP traffic
3. Data encapsulation, deencapsulation, and tunneling
4. Bridging and routing operationbreak
Page 15
Chapter 2—
Ethernet

Page 16
Why a chapter on Ethernet? Designing and configuring OSPF networks can be accomplished
without a detailed understanding of Ethernet, so why bother? First, Ethernet is the most common
local area network (LAN) protocol, and you will, without a doubt, encounter Ethernet networks
in your career. From our discussion of the OSI and Internet layered models in Chap. 1, we can
see that regardless of which network protocol is being used (IP, IPX, AppleTalk, DECnet, etc.),
packets ultimately will be carried in an Ethernet frame. Second, if you really want to be an expert
network designer, a detailed understanding of every technology that is being deployed is
required. Third, you may encounter Ethernet questions on the Cisco Certified Internetwork
Expert (CCIE) exam, so this is my favorite reason.
Technology Overview
Ethernet is a shared-media technology. Shared media means that nodes on an Ethernet network
share a common physical transport medium. The two physical configurations of Ethernet are the
bus and star architectures (Fig. 2-1). The bus architecture uses a 50- thin (10Base2) or thick
(10Base5) coaxial cable, whereas the star architecture employs unshielded twisted-pair (UTP)
wire for connection to a hub or Ethernet switch (10BaseT or 100BaseT).
A shared-media technology requires that nodes take turns using the wire to transmit frames. How
does a node know when it is its turn to transmit? Ethernet uses Carrier Sense Multiple Access
with Collision Detect (CSMA/CD) to determine who gets to talk.
A node will "listen" for a carrier on the wire before transmitting. If no carrier is detected for 9.6
s, then the node can transmit a frame. Two or more nodes may notice that the wire is quiet (no
carrier) and begin to transmit simultaneously (Fig. 2-2a). This will result in a collision on the
wire, which will corrupt the transmitted packets. The nodes can detect the collision (the CD in
CSMA/CD) because the voltage on the wire will jump to a higher level than if only one packet
were being transmitted (Fig. 2-2 b). The transmitting stations that detect the collision will
transmit a jam signal, and each transmitting node will back off for a random amount of time
before listening and transmitting again. The jam signal is usually a 32-bit signal with all the bits
set to 1. The purpose of the jam signal is to fully raise the voltage on the wire so that every
station knows that a collision has occurred. Collisions are a fact of lifecontinue
Page 17

Figure 2-1
Physical Ethernet configurations:
(a) bus architecture;
(b) star architecture.
on an Ethernet network, and as the number of nodes on a network increases, the number of
collisions also will increase, reducing the overall effective bandwidth. One design goal for an
Ethernet network is to reduce the size of these Ethernet collision domains. Bridges and switches
forward all Ethernet traffic onto all Ethernet segments, so they cannot be used to reduce the size
of the collision domain. Actually, a switch can be used to reduce collision domain size if virtual
LANs (VLANs) are used, but that is another story for another book. Without VLANs, routers are
needed to create multiple collision domains.break
Page 18

Figure 2-2
Ethernet frame collision.
(a) Nodes A and D detect that the wire and transmit simultaneously.
(b) When the signals collide, an abnormal voltage is present on the wire.
Ethernet Addresses
Ethernet addresses are 6 bytes (48 bits) in length and are universally unique (or should be). The
Institute of Electrical and Electronic Engineers (IEEE) assigns Ethernet address blocks to
manufacturers of Ethernet network interface cards. The first 3 bytes of an Ethernet address are
the company ID, and the last 3 bytes are assigned by the manufacturer. Figure 2-3 is an example
of an Ethernet address assigned to Cisco Systems.
Ethernet addresses are assigned permanently to a network interface card and are referred to as the
Burned-In-Address (BIA) or Media Access Control (MAC) address. If you change the NIC in a
workstation, then the Ethernet address of the workstation changes. Since Ethernet is a
shared-media technology, it is relatively simple for a node to transmit a frame to every other node
on the Ethernet segment. Ethernet uses an addresscontinue
Manufacturer ID
Assigned by Cisco
00
00
0C
01
23
45
Figure 2-3
Example Ethernet address.
Page 19
of all 1s as the broadcast address. Nodes will accept frames addressed either to their Ethernet

address or to the broadcast address.
Ethernet Frame Formats
There are four different formats for Ethernet frames currently in use today. Four formats? Why so
many? The history of the development of these Ethernet standards explains why there are four
formats.
__ 1980—Xerox, Intel, and DEC release Ethernet Version I.
__ 1982—Xerox, Intel, and DEC release Ethernet Version II, replacing Ethernet Version I.
__ 1982—IEEE begins working on an Ethernet standard 802.3.
__ 1983—Novell can't wait and releases a proprietary Ethernet frame format based on the
preliminary IEEE 802.3 specification.
__ 1985—IEEE releases the Ethernet 802.3 specification with enough changes to make Novell's
format incompatible.
__ The last version, Ethernet 802.3 SNAP is created because of compatibility issues between
Ethernet Version II and 802.3.
If you're counting, that makes five formats. We will not consider Ethernet Version I because it
has been totally replaced (I hope) with one of the other flavors.
All the formats have a number of common elements. Ethernet is an asynchronous protocol. This
means that a receiving station does not know when an Ethernet frame will arrive (there is no
system-wide Ethernet clock for frame synchronization). A method is needed to wake up an
Ethernet receiver and let it know that an Ethernet frame is on the way. This is accomplished by
the use of a 64-bit (8-byte) preamble, as shown in Fig. 2-4.
The alternating ones and zeros are used to sync the receiver of the frame with the transmitter of
the frame. The last 2 bits are 1 to signal that the next bit following the 1 1 pattern is the start of
an Ethernet frame. Following the preamble is a 6-byte destination MAC address andcontinue
10101010
10101010
10101010
10101010
10101010
10101010
10101010
10101011
Figure 2-4
Preamble for all Ethernet frame formats.
Page 20
then a 6-byte source MAC address. The source address is the MAC address of the sending node
and the destination address is the MAC address of the destination or broadcast address. The most
significant bit of the destination address is the group/individual (G/I) bit. If the G/I bit has a value
of 1, then the destination address is a group address.

Ethernet Version II Frame Format
The Ethernet Version II frame format is shown in Fig. 2-5. From the figure we can see that the
minimum frame length (not counting the preamble) is 64 bytes (6 + 6 + 2 + 46 + 4), and the
maximum length frame is 1518 bytes (6 + 6 + 2 + 1500 + 4). The ether type identifies the
upperlayer protocol associated with this frame. The more common ether types are listed in Table
2-1.
All ether types have a value greater than 05DC hex (1500 decimal), and we shall see why after
looking at the other frame formats. Following the ether type is the actual data to be transmitted
and then a Frame Check Sequence (FCS) to detect bit errors in the frame. How does an Ethernet
receiver know the length of an Ethernet Version II frame? The receiver will continue to receive
bits until the carrier on the wire is gone. Thecontinue
Destination
MAC Address
6 bytes
Source
MAC Address
6 bytes
Ether
Type
2 bytes
Data
46-1500 bytes
FCS
4
bytes
Figure 2-5
Ethernet Version II frame format.
TABLE 2-1 Common Ether Types for Ethernet
Version II Frames
Value (hex)
Description
0800
IP
   0BAD
Banyan
6003
DECnet phase IV
6004
DEC LAT
809B
Apple Talk
8138
Novell
Page 21
receiver will assume that the last 4 bytes received are the FCS and that the bytes between the
FCS and the ether type are the actual data.
Novell Proprietary Frame Format
This format is also referred to as ''802.3 raw" because it was based on a preliminary release of the
IEEE 802.3 specification. The Novell frame format is shown in Fig. 2-6. Following the source
address is a 2-byte total length field, which contains the length of the data field, so this value will
be between 46 and 1500. The next 2 bytes are always set to 0xFFFF to identify it as a Novell

frame. Actually, 0xFFFF is the first 2 bytes of a Novell IPX or SPX packet header. These bytes
represent an IPX or SPX checksum, and they are always set to 0xFFFF. Since the Novell frame
format can only be used to carry IPX/SPX traffic, these 2 bytes will always be 0xFFFF. Looking
back at the Ethernet Version II frame format, the 802.3 raw length is always less than the ether
type. This is how you can tell if you have an Ethernet Version II frame or an 802.3 raw frame.
IEEE 802.3/802.2 Frame Format
What did the IEEE add to the 802.3 specification that made it incompatible with Novell's frame
format? The 802.2 Logical Link Control (LLC) header (Fig. 2-7). The LLC header performs
essentially the same purpose as the ether type in an Ethernet Version II frame. The Destination
Service Access Point (DSAP) identifies the upper-layer protocol for which the frame is intended.
The Source Service Access Point (SSAP) identifies the upper-layer protocol from which the
frame was sent. The control field is almost always set to 0x03. So what does this frame format
accomplish? Well, it has more overhead than Ethernet Version II, it can only handle 256 possible
upper-layer protocols (Ethernet Version II can han-soft
Destination
MAC Address
6 bytes
Source
MAC Address
6 bytes
Total
Length
2 bytes
0xFFFF
Data
44 - 1498 bytes
FCS
4 bytes
Figure 2-6
Ethernet "802. 3 raw" frame format.
Page 22
LLC Header
Destination
MAC Address
6 bytes
Source
MAC Address
6 bytes
Total
Length
2 bytes
DSAP
1
byte
SSAP
1
byte
Control
1
byte
Data
43 - 1497 bytes
b
Figure 2-7
Ethernet 802.3/802.2 frame format.
dle 64035), and it has a 1-byte control field that is almost never used. Nothing like progress!
Table 2-2 contains some of the common SAP values used by the 802.3 format.
IEEE 802.3 SNAP Frame Format
Figure 2-8 contains the format of an IEEE 802.3 SubNetwork Access Protocol (SNAP) frame.
The main difference between the SNAP format and the 802.3 format is the addition of the 5-byte
SNAP ID field. The first 3 bytes of the SNAP ID constitute the vendor code, usually the same as
the first 3-bytes of the source MAC address, but it is sometimes set to zero. In other words, these
3 bytes are redundant. Following the vendor code is a 2-byte field that usually contains the ether

type (same as in thecontinue
TABLE 2-2 Common SAP Values
SAP Value
Description
04
IBM SNA path control (individual)
05
IBM SNA path control (group)
06
IP
08
SNA
0C
SNA
42
IEEE 802.1 Bridge Spanning Tree Protocol
BC
Banyan VINES
AA
SubNetwork Access Protocol (SNAP)
E0
Novell Netware
F0
IBM NetBIOS
Page 23
LLC Header
SNAP Header
Destination
MAC Address
6 bytes
Source
MAC Address
6 bytes
Total
Length
2 bytes
DSAP
1 byte
0xAA
SSAP
1 byte
0x03
Control
1 byte
0x03
SNAP ID
5 bytes
Data
38 - 149
bytes
Figure 2-8
IEEE Ethernet SNAP frame format.
Ethernet Version II format). Why all this additional overhead? Some argued that an Ethernet
frame should be aligned on even byte boundaries. The 802.3 format has 1 3-byte LLC header,
whereas the SNAP format has a 3-byte header and a 5-byte SNAP ID. Add them up and you get
8-bytes, or an even number.
Differentiating Frame Formats
Now we can determine how a host can differentiate between the four Ethernet frame formats.
The following algorithm will help:
1. Is the value of the 2-byte field following the source MAC address greater than 1500? If yes,
then the frame is Ethernet Version II.
2. Is the value of the 2-byte field following the 2-byte length field equal to OxAAAA? If yes,
then the frame is Ethernet SNAP.
3. Is the value of the 2-byte field following the 2-byte length field equal to OxFFFF? If yes, then
the frame is Novell proprietary.

4. If the answers to 1, 2, and 3 are no, then the frame is Ethernet 802.3/802.2.
Exercise 2-1
For the following partial Ethernet frames (no preamble), determine source and destination
addresses, the type of the frame, the upper-layer protocol using the frame, and if possible, the
length of the frame.
1. 00000C12345608000B06AA350800ABACAB . . .
2. 080001A1B2C37E4600000001AAAA03A1B2C38138 . . .
3. FFFFFFFFFFFF192834641243FFFF123456 . . .break
Page 24
Summary
You will undoubtedly encounter Ethernet networks during your networking career. I have seen
networks where clients and servers could not communicate simply because they were using
different Ethernet frame types. Do not let this happen to you.
Main Points
1. Bus and star network architectures
2. Ethernet operation (CSMA/CD)
3. Ethernet addressing scheme
4. Ethernet frame types. Ethernet Version II, 802.3 raw, 802.3/802.2, and Ethernet SNAP
5. Differentiating between the various Ethernet frame formatsbreak
Page 25
Chapter 3—
Internet Protocol
Page 26
In order to become an expert OSPF network designer (remember the E in CCIE), you must first
become an expert at working with the Internet Protocol (IP) addressing scheme. OSPF is an
IP-only routing protocol and cannot be used to route any other protocol. Many of the powerful
features of OSPF are difficult, if not impossible, to implement without a mastery of IP

addressing. This chapter contains everything you ever wanted to know about IP addressing but
were afraid to ask about.
IP Address Format
An IP address is a 32-bit number that can be represented in many formats. Routers and
computers are designed to operate efficiently on binary numbers, so a binary representation is a
natural way for them to store and manipulate IP addresses. A typical 32-bit IP address to a router
would look something like
10111100000110100001111000111100
This may be a fine representation for routers, but for humans it is not the most appealing method.
So let's take a look at the binary representation and see if we can find a way to represent these
numbers that may be a bit more palatable. One way is to simply represent the IP address as a
decimal number. The binary number used in the preceding example has a decimal value of
2,618,957,372
This may be easier to read, but the size of the number makes it cumbersome to work with.
Another representation scheme is to break up the binary number into pieces and represent each
piece as a decimal number. A natural size for binary pieces is 8 bits, which is the familiar byte or
not as familiar octet. (Octet is the telecommunication term, but the two words can be used
interchangeably.) So let's take our binary number, write it using groups of 8 bits (4 octets), and
then represent each group as a decimal number.break
10111100
00011010
00011110
00111100
156
26
30
60
Page 27
We don't need all that space between the numbers, so let's use a period, or dot, as a separator.
Now our IP address has the form
156.26.30.60
which is referred to as the dotted decimal notation. How many IP addresses are there? The range
of IP addresses in all our representation schemes is shown in Table 3-1. Theoretically, there are
4,294,967,296 possible IP addresses, although we will discover in this chapter that the actual
usable number of IP addresses is much smaller.
Classful IP Addressing
For a protocol to be routable, its address structure must be hierarchical, meaning that the address

must contain at least two parts. For IP addresses, these parts are the network portion and the host
portion. A host is an end station such as a computer workstation, router interface, or printer,
whereas a network consists of one or more hosts. Figure 3-1 is a simple network consisting of
two networks connected by a two-port router. The address of each host on this network,
including the router interfaces, is given by its network and host numbers.break
TABLE 3-1 Range of IP Addresses
Low
High
Binary
00000000000000000000000000000000
11111111111111111111111111111111
Decimal
0
   4,294,967,295
Dotted
 decimal
0.0.0.0
255.255.255.255
Figure 3-1
Hierarchical addressing.
Page 28
When the IP addressing scheme was designed, the decision was made to create five classes of IP
addresses named simply classes A, B, C, D, and E. The logic behind the first three network
classes was that the IP addressing scheme would be used for a few networks with a large number
of hosts (class A), a moderate number of networks with a moderate number of hosts (class B),
and a large number of networks with a small number of hosts (class C). Class D addresses are
used for multicasting, and class E addresses are reserved for experimental use. Having three
classes of IP addresses to handle different sized networks requires that the network part and the
host part for each address class have unequal sizes. The breakdown of the allocation of bits for
the network and host portions for the first three IP address classes is shown in Fig. 3-2.
Class A addresses use 8 bits to identify the network and 24 bits to identify the host, with the most
significant bit of the first octet set to zero. Class B addresses use 16 bits to identify the network
and 16 bits to identify the host, with the first 2 bits of the first octet set to 10. Class C addresses
use 24 bits to identify the network and 8 bits to identify the host, with the first 3 bits of the first
octet set to 1 1 0. If we examine the first octet of each class, we can see that the range of values
for the three classes is
00000001 (1)-01111110 (126) for class A

10000000 (128)-10111111 (191) for class B
11000000 (192)-11011111 (223) for class Cbreak
Figure 3-2
Classful IP address structure.
(a) Class A.
(b) Class B.
(c) Class C.
Page 29
Looking at the first octet of the IP address allows easy identification of the network class. For
example, the address used previously, 156.26.30.60, is a class B address because the first octet is
between 128 and 191. Another (and more tedious) way to identify the class is to represent the
first octet of the address in binary and see what the first couple of bits are set to. For example,
156 = 10011100 in binary. The first 2 bits are 1 0, so according to Fig. 3-1, this is a class B
address.
How many class A, B, and C networks are there? Class A networks use 7 bits for the network ID,
so there are 126 class A networks possible. Class B addresses use 6 bits from the first octet and
all 8 bits from the second octet, so there are 64*256 (64 from the first octet and 256 from the
second octet) = 16384 networks possible. Class C addresses use 5 bits from the first octet, 8 bits
from the second octet, and 8 bits from the third octet, so there are 32*256*256 = 2,097,152
possible class C networks. How many hosts can each network have? Class A networks have 24
bits to identify a host, which equals 1,677,216 possible hosts per network (Wow!). Class B
networks have 16 bits to identify a host, which equals 65,536 hosts, and class C networks have 8
bits to identify a host, which equals 256 possible hosts. Table 3-2 lists the capabilities for class
A, B, and C addresses.
You may have noticed that the number of hosts listed in Table 3-1 is always two less than the
number calculated. The reason for this discrepancy is that there are two special addresses that

cannot be assigned to a host. A host address of all 1s is the broadcast address for a particular
network, and a host address of all 0s is used by a host to temporarily identify itself ("this host")
until it has been assigned an IP address. There are only 126 class A networks because network 0
cannot be used and network 127 is reserved for the loop-back address used for testing
interprocess communication. When a host sends a packet to 127.0.0.1, the data are not sent on
the network but are returned immediately to the sending host.
Classful IP addresses are extremely inefficient, as the following design problem demonstrates.
Assume that we are designing a network for acontinue
TABLE 3-2 IP Classful Address Capabilities
Class
Networks
Hosts
A
126
16,777,214
B
 16,384
65,534
C
2,097,152
254
Page 30
campus that has approximately 1500 nodes or end stations. Also assume that the predicted future
growth of the network over the next 5 years will be no more than 5000 nodes. At first glance it
would seem that a class B network would suffice for the current network requirements and also
leave plenty of room for future growth. Recalling from Chap. 2 the problems associated with a
large Ethernet network, we can see that these 1500 + nodes (5000 + in the future) would be a
very large collision domain. If we want to limit the number of nodes on an Ethernet segment to
no more than 100, then we need 50 networks to accomplish our design. Regardless of which
class of IP network addresses we decide to use (assuming we could choose any addresses we
want), there is going to be an enormous waste of IP addresses, as shown in Table 3-3.
Now multiply each entry in Table 3-3 by the 50 networks that are required, and you can easily
see that regardless of which address class we choose, an enormous number of IP addresses will
be wasted. Also, if we are to have connectivity to the Internet, then our network will have to
advertise 50 networks to the Internet routers. Multiply this by the number of campuses in the
world, and you have a situation where the size of the Internet routing tables becomes
unmanageable. How do we overcome these problems? In a word, subnetting.
IP Subnets
The solution to our design problem is to divide whatever class of IP address we are assigned into
a number of smaller networks with fewer hosts per network. This is accomplished by
"borrowing" bits from the host portion of our IP address and using them in the network portion.
How do we and, more important, how does a router know how many bits to use for the network
and how many to use for the host? The answer is by using a subnet mask. A subnet mask is a
32-bit binary num-soft

TABLE 3-3 IP Address Design Inefficiencies
Network
Class
Addresses
Required
Addresses
Available
Addresses
Wasted
A
100
16,777,214
16,777,214
B
100
65,534
     65,434
C
100
254
154
Page 31
ber that identifies which bits in the address are used for the host and which are used for the
network. A 1 in the mask identifies the corresponding bit in the IP address as a network bit, and a
0 in the mask identifies the corresponding bit in the IP address as a host bit. This operation is
accomplished by a router by performing a bitwise AND operation with the IP address and the
subnet mask.
0 AND 0 = 0
0 AND 1 = 0
1 AND 0 = 0
1 AND 1 = 1
As an example, consider the IP address/subnet mask pair
156.26.30.60/255.255.240.0
which has the binary representations
10111100
00011010
00011110
00111100
11111111
11111111
11110000
00000000
Performing the AND operation yields
10111100
00011010
00010000
00000000
Converting the result to dotted decimal notation yields the network portion of the IP address:
156.26.16.0
One subnet mask restriction is that the 1 bits in the mask must be contiguous. Since the 1 bits are

contiguous, an alternative representation for the mask is to just indicate how many 1 bits are in
the mask. For example, the IP address/subnet mask pair in the preceding example can be written
as 156.26.30.60/20. The subnet masks for nonsubnetted networks are shown in Fig. 3-2.
Subnet masks will never have fewer ones than are listed in Fig. 3-3. For example, a class C
address cannot have a subnet mask of 255.255.0.0. RFC 950 first defined the subnetting of IP
addresses. RFC 950 did not allow the use of the all zeros and all ones subnet, so we will look
initially at subnetting examples that obey these restrictions. In later examples we will see how we
can remove these restriction with the use of an appropriate routing protocol such as OSPF. The
number of subnet bits cannotcontinue
Page 32
Class A
11111111.00000000.00000000.00000000
255.0.0.0
Class B
11111111.11111111.00000000.00000000
255.255.0.0
Class C
11111111.11111111.11111111.00000000
255.255.255.0
Figure 3-3
Standard IP subnet masks.
be 1 (Tables 3-4 and 3-5) because of the restriction in RFC 950. A 1-bit subnet mask would have
a value of either 0 (all zeros) or 1 (all ones), and this is not allowed. A 15-bit subnet mask for
class B and a 7-bit subnet mask for class C are also illegal because they would leave only 1 bit
for the host, which we have seen cannot be all zeros or all ones. A 16-bit subnet mask for class B
or an 8-bit subnet mask for class C makes no sense because this would leave 0 host bits.
Exercise 3-1
Create a table similar to Tables 3-4 and 3-5 for class A addresses.
Subnet Examples
In the following examples, determine if the address/subnet pair is legal. If it is legal, determine
the network number and the range of host addresses for that network. Also determine for the
mask given the number of available networks and available hosts per network.

1. IP address = 193.144.233.130; subnet mask = 255.255.255.192
For a class C address, we only need to look at the last octet of the address and the mask.break
Page 33
TABLE 3-4 Class B Subnet Masks
Number of
Subnet Bits
Subnet
 Mask
Number of
Subnetworks
Number of
Hots/Subnet
Total Number
of Hosts
  1
—
—
—
—
  2
    255.255.192.0
         2
16,382
32,764
  3
    255.255.224.0
         6
  8,190
49,140
  4
    255.255.240.0
       14
  4,094
57,316
  5
    255.255.248.0
       30
  2,046
61,380
  6
    255.255.252.0
       62
  1,022
63,364
  7
    255.255.254.0
     126
     510
64,260
  8
    255.255.255.0
     254
     254
64,516
  9
255.255.255.128
     510
     126
64,260
10
255.255.255.192
  1,022
       62
63,364
11
255.255.255.224
  2,046
       30
61,380
12
255.255.255.240
  4,094
       14
57,316
13
255.255.255.248
  8,190
         6
49,140
14
255.255.255.252
16,382
         2
32,764
15
—
—
—
—
16
—
—
—
—
TABLE 3-5 Class C Subnet Masks
Number of
Subnet Bits
Subnet
 Mask
Number of
Subnetworks
Number of
Hosts/Subnet
Total Number
of Hosts
1
—
—
—
—
2
255.255.255.192
   2
62
124
3
255.255.255.224
   6
30
180
4
255.255.255.240
14
14
196
5
255.255.255.248
30
   6
170
6
255.255.255.252
62
   2
124
7
—
—
—
—
8
—
—
—
—
Page 34

130 = 1000 0010
192 = 1100 0000
This is a legal pair because neither the subnet nor the host is all zeros or all ones.
Network = 193.144.233.128
because the mask selects the upper 2 bits of the address (130), and the rest of the bits are set to 0
to identify the network.
Range of hosts = 193.144.233.129-193.144.233.191
The host portion (last 6 bits) can have values ranging from 000001 to 111110 (remember they
cannot be all zeros or all ones). Add in the subnet portion, which is the upper 2 bits of the
address, in this case 1 0, and you have 10 000001 to 10 111110 for the host addresses. From
Table 3-5, the number of available networks is 2 and the number of hosts is 62.
2. IP address = 156.26.30.60; subnet mask = 255.255.255.0
This is relatively easy because the entire third octet is used for the subnet and the entire fourth
octet is used for the host. This is a legal pair because neither the subnet nor the host is all zeros or
all ones.
Network = 156.26.30.0
Range of hosts = 156.26.30.1-156.26.30.254
From Table 3-4, the number of networks is 254 and the number of hosts is 254.
3. IP address = 199.200.201.50; subnet mask = 255.255.255.128
This is illegal because the subnet mask only borrows 1 bit from the host and that bit has to be
either 0 or 1.
4. IP address = 191.200.201.50; subnet mask = 255.255.255.128
This is a legal pair because the address is class B and we are borrowing 9 bits from the host
portion.
Network = 191.200.201.0
Range of hosts = 191.200.201.1-191.200.201.126break
Page 35
From Table 3-3, the number of networks is 510 and the number of hosts is 126.

Exercise 3-2
Complete the table below.
IP Address
Subnet
 Mask
Valid
Pair?
Network
Number
Range
of Hosts
144.223.136.231
255.255.255.192
184.16.34.10
255.255.255.224
12.14.1.2
    255.255.0.0
193.15.16.1
255.255.255.252
Subnetting can be viewed as creating a three-part hierarchical address. The network portion of
the address can be found by applying the standard subnet mask (Fig. 3-3) to the IP address. The
subnet is determined from the bits ''borrowed" from the host portion, and the host number is
simply those bits which are left over. As an example, we will examine the class B address/mask
pair
144.223.0.0/255.255.255.0
and determine the network number, the subnetwork numbers, and the range of host numbers. The
network number is found by applying the standard class B 16-bit subnet mask, which yields the
network
144.223.0.0
The subnet is the entire third octet, so the 254 subnets arebreak
Page 36
144.223.1.0
144.223.2.0
·
·
·
144.223.254.0
and the range of hosts for each subnet is 1 to 254.
Now let's try a bit more complicated example. Consider the address/mask pair
144.223.0.0/255.255.255.224
The network number is still 144.223.0.0. The subnet mask borrows 11 bits from the host portion
of the address. The first 8 bits borrowed include the entire third octet, which has a value of 0 to
255. The 3 bits borrowed from the third octet have the values

000 00000 = 0
001 00000 = 32
010 00000 = 64
011 00000 = 96
100 00000 = 128
101 00000 = 160
110 00000 = 192
111 00000 = 224
Why are the values 0 (all zeros) and 255 (all ones) for the third octet and 0 (all zeros) and 224
(all ones) from the fourth octet included? The third octet can be 0 if the 3 bits in the fourth octet
are not zero. The third octet can be all ones if the 3 bits in the fourth octet are not all ones. The 3
bits in the fourth octet can be all zeros if the third octet is not all zeros, and the 3 bits from the
fourth octet can be all ones if the third octet is not all ones. Rewording slightly, the 11 subnet bits
cannot be all zeros or all ones. Therefore, the range of subnet numbers isbreak
Page 37
144.223.0.32
144.223.0.64
·
·
·
144.223.0.224
144.223.1.0
144.223.1.32
·
·
·
144.223.255.0
·
·
·
144.223.255.192

Determining the range of host addresses for each subnet requires more effort. The bit pattern for
the fourth octet of network 144.223.0.32 is
001 hhhhh
where hhhhh represents the host number, which cannot be all zeros or all ones, so the first legal
host number is 00001, which makes the fourth octet
00100001 = 33
so the first host address is
144.223.0.33
and the last legal host bit pattern for the fourth octet isbreak
Page 38
00111110 = 62
which gives a range of host addresses for the first subnet of
144.223.0.33-144.223.0.62
The broadcast address for each subnet is found by setting all the bits in the host portion to 1. The
broadcast address for subnet 144.223.0.32 is determined by setting the last 5 bits of the fourth
octet to 1, yielding
00111111 = 63
Putting it all together gives us the broadcast address:
144.223.0.63
Exercise 3-3
Determine all the subnet numbers for the address/mask pair
193.128.55.0/255.255.255.240
Also determine the range of host addresses and the broadcast address for the fourth subnet.
Example 1 IP Address Design
Assume that your company has been assigned the class C address 198.28.61.0 and you have
determined that you require 4 networks with a maximum of 25 hosts per network. From Table
3-5, you will need 3 subnet bits, resulting in a subnet mask of 255.255.255.224. The subnet
numbers for this design are any four of the following, as shown in Fig. 3-4.break
198 28 61 32

 198.28.61.32
 198.28.61.64
 198.28.61.96
198.28.61.128
198.28.61.160
198.28.61.192
Page 39
Figure 3-4
IP address design (Example 1).
Although subnets solve some of the problems associated with the inefficient use of the IP address
space, there are situations where simple subnetting does not suffice. Consider the network in Fig.
3-5. Two routers are connected by a serial link. This serial link is a point-to-point connection, so
there will only be two hosts on the link, the two router interfaces. Each network must be on a
separate subnet, so no matter which subnet mask we choose, we will be wasting IP addresses. If
we are using a class B address with a 24-bit subnet mask, then the subnet assigned to the serial
link will only use 2 out of a possible 254 host addresses.
If we could use different subnet masks for different subnetworks, then the limitations of Fig. 3-5
could be solved. A subnet mask of 255.255.255.252 (or /30) can accommodate only two hosts,
which is perfectcontinue

Figure 3-5
Limitations of simple subnetting.
Page 40
for a point-to-point serial link. Unfortunately, this mask, if used throughout the network, would
limit all subnets to two hosts. The ideal solution is to be able to vary the length of the subnet
mask and adjust it according to the needs of each individual network.
Variable-Length Subnet Masks
RFC 1009 (1987) specifies the procedures for using multiple subnet masks. This technique is
referred to as variable-length subnet masks (VLSM). The term VLSM can be confusing because
the subnet mask for a specific network does not vary but is fixed. VLSM means that the subnet
masks for different subnets can have unequal lengths. VLSM would allow assigning a subnet
mask of 255.255.255.252 to a serial link and 255.255.255.0 to an Ethernet network, but once the
masks are assigned, they do not change, at least by themselves. The VLSM technique is very
useful for allocating IP addresses more efficiently (less waste) and for reducing the size of
routing tables (we will see how later in this book). However, VLSM also can cause a number of
massive network headaches if not used properly. As an introductory example, let's apply VLSM
to the network in Fig. 3-5. Assume that we have been assigned the class B network 156.26.0.0.
The Ethernet networks are assigned addresses using a /24 subnet mask, and we will use the first 2
networks with this mask, 156.26.1.0 and 156.26.2.0. The third network, 156.26.3.0 will be
sub-subnetted using a /30 subnet mask, which will give us a possible 62 sub-subnets that we can
use for serial connections. Notice that we are subnetting an already subnetted network,
156.26.3.0. Figure 3-6 illustrates this technique. Figure 3-6 visually represents the technique that
should be used when employing VLSM. Start with the standard subnet mask (/8, /16, or /24 for
class A, B, or C). Determine the network with the required maximum number of hosts, in this
case 254. Subnet using a mask that will give you networks that can handle the largest number of
hosts that you need. For smaller networks, sub-subnet the large networks and keep going until
you have satisfied your requirements.

Example 2 VLSM
The best way to master a technique is practice, practice, practice, so here we go. Given the IP
network 202.128.236.0, design a network with the following requirements:break
Page 41
Figure 3-6
VLSM example.
__ 4 networks with a maximum of 26 hosts
__ 3 networks with a maximum of 10 hosts
__ 4 point-to-point serial links
Starting with the greatest number of hosts per network, we can use a /27 subnet mask to satisfy
the first requirement. From Table 3-5, this will give us 6 networks of 30 hosts each, with 2
networks left over to sub-subnet. To satisfy the next requirement, we can sub-subnet the 2
leftover /27 networks using a /28 subnet mask to give us 4 networks with 14 hosts each. Finally,
take one of the four sub-subnetted networks and sub-sub-subnet using a /30 subnet mask (Fig.
3-7).
How did I arrive at the diagram in Fig. 3-7? Let's take a very close look at where these network
numbers came from, and then I'll give you a VLSM design problem to ensure that you have
mastered the technique.

1. Determine the mask for the networks containing the greatest number of hosts. The first
requirement was for 4 networks with a maximum of 26 hosts. Using Table 3-4, we need 3 subnet
bits or a /27 subnet mask. The fourth octet of our IP network would be segmented asbreak
Page 42
Figure 3-7
VLSM (Example 2).
S S S H H H H H
where S S S indicates the subnet bits and H H H H H indicates the host bits. The subnets when
then be
0 0 1 0 0 0 0 0 = 32
0 1 0 0 0 0 0 0 = 64
0 1 1 0 0 0 0 0 = 96
1 0 0 0 0 0 0 0 = 128
1 0 1 0 0 0 0 0 = 160
1 0 1 0 0 0 0 0 = 192
and we are using subnets 96 through 192 for the networks containing 26 hosts because these
subnets can handle a maximum of 30 hosts.
2. Sub-subnet the subnetted networks as needed. The second requirement calls for 3 networks
with a maximum of 10 hosts each. Again, we consult Table 3-4 and see that we need 4 subnet
bits or a /28 subnet mask. We will sub-subnet networks 202.128.236.32 and 202.128.236.64. The
first 3 subnet bits are fixed with the values 001 (subnet 32) and 010 (subnet 64), so now we have
0 0 1 S H H H H
0 1 0 S H H H H

For network 32, S can be 0 or 1, giving us
0 0 1 0 H H H H
and
0 0 1 1 H H H H
Setting the host bits to 0, the sub-subnets arebreak
Page 43
0 0 1 0 0 0 0 0 = 32
and
0 0 1 1 0 0 0 0 = 48
Applying the same procedure to subnet 64, we get
0 1 0 0 0 0 0 0 = 64
and
0 1 0 1 0 0 0 0 = 80
3. To satisfy the last requirement of 4 point-to-point serial links, we will sub-sub-subnet
sub-subnet 32, which now is equal to
0 0 1 0 S S H H
S S can be either 0 0, 0 1, 1 0, or 11, yielding
0 0 1 0 0 0 0 0 = 32
0 0 1 0 0 1 0 0 = 36
0 0 1 0 1 0 0 0 = 40
0 0 1 0 1 1 0 0 = 44
As a final task for this exercise, determine the range of hosts and the broadcast addresses for
networks 202.128.236.192, 202.128.236.80, and 202.128.236.40.
The fourth octet of network 202.128.236.192 is
1 1 H H H H H H

and the host bits can range from 0 0 0 0 0 1 to 1 1 1 1 1 0, which gives us a range of
1 1 0 0 0 0 0 1 (193) to 1 1 1 1 1 1 1 0 (254)
The broadcast address is determined by setting the host bits to 1, which is
1 1 1 1 1 1 1 1 = 255
so the broadcast address is 202.128.236.255.
For network 202.128.136.80, the fourth octet contains
0 1 0 1 H H H H
so the range of host addresses isbreak
Page 44
Figure 3-8
Realization of VLSM (Example 2).
0 1 0 1 0 0 0 1 (81) to 0 1 0 1 1 1 1 0 (94)
and the broadcast address is 0 1 0 1 1 1 1 1 (95).
For network 202.128.136.40, the fourth octet contains
0 0 1 0 1 0 H H
Since H H cannot be 0 0 or 1 1, the host addresses for this network are 202.128.136.41 and

202.128.136.42, with a broadcast address of 202.128.136.243.
The realization of this network design is shown in Fig. 3-8.
Exercise 3-4
Design a network using the class C address 200.100.50.0 that satisfies the following
requirements:break
Page 45
__ Nine serial point-to-point links
__ Four networks with a maximum of 30 hosts
__ Three networks with a maximum of 5 hosts
Determine the address host ranges and the broadcast address for each subnet.
Summary
Before moving on, make sure that you understand the topics that were covered in this chapter
without question. Understanding IP addresses, subnetting, and sub-subnetting (VLSM) cannot be
overemphasized. The robust design of an IP network, regardless of the IP routing protocol
employed, depends on a total understanding of IP addressing.
Main Points
1. Classful IP address: A, B, and C
2. IP subnets and subnet masks
3. VLSM and incorporating VLSM into the network designbreak
Page 47
Chapter 4—
Address Resolution Protocol
Page 48
When a host, whether it is a workstation or a router, sends a packet to another node on an
Ethernet network, the address to which the packet is sent is an Ethernet or MAC address. If our
hosts, i.e., workstations and routers, want to send a packet to an IP address, then the host must
determine the Ethernet address of the host with the specified IP address. This process of mapping

an IP address to an Ethernet address is called address resolution, and the protocol used is
Address Resolution Protocol (ARP).
Address Resolution:
One Network
Let's assume that host 1 in Fig. 4-1 wants to send an IP packet to host 3. Since hosts 1 and 3 are
on the same physical network, they also must be on the same IP network. Host 1 realizes that
host 3 is on the same IP subnet because the subnet mask is /16, so every host with an IP address
starting with 156.26 is on the same subnet. Host 1 will first send and ARP request packet (Fig.
4-2) as an Ethernet broadcast. A broadcast is used because host 1 does not know the Ethernet
address of host 3 but assumes that host 3 is on the same Ethernet segment. Of course, if host 3 is
not on the same Ethernet segment, i.e., either the destination IP address has not been assigned to
a host or the network has been designed incorrectly, then host 1 will not be able to resolve the
Ethernet to IP address mapping.
When host 1 is booted initially, it has no knowledge of any of the other hosts on the network. The
only information available (hopefully) iscontinue
Figure 4-1
Single IP network.
Page 49

Figure 4-2
ARP packet format.
the IP address and subnet mask. Some application such as ftp or telnet requires communication
with host 3 at IP address 156.25.3.3. Host 1 has to determine the Ethernet address that
corresponds to that IP address using ARP. Host 1 will build an ARP packet with the format
shown in Fig. 4-2. The ARP packet format was designed to operate with multiple hardware
address to network address pairs, but for our discussion, we will be concerned only with IP to
Ethernet address mappings. The following steps occur as host 1 attempts to resolve the Ethernet
address of host 3 and are shown graphically in Fig. 4-3.
__ Send a broadcast Ethernet frame containing an ARP request. Set the target IP address to
156.26.3.3 and the target Ethernet address to 00 00 00 00 00 00.
__ Every host on the network receives the broadcast and examines the target IP address, in this
case 156.26.3.3. If the target IP address does not match the host's IP address, then ignore the
packet, but cache the IP/Ethernet address mapping for the source contained in the ARP frame. If
the target IP address matches the host's IP address, then send an ARP reply directly to the sender,
and place the sender IP/Ethernet address pair in the local ARP cache.
__ Host 1 now has the IP/Ethernet address mapping and stores it in the ARP cache.break
Page 50

Figure 4-3
ARP sequence of envents:
(a) Host 1 broadcasts an ARP request;
(b) host 3 sends an ARP reply;
(c) host 1 can now send IP packets to host 3.
Address Resolution:
Multiple Networks
Figure 4-4 illustrates the situation where a host wants to send an IP packet to a host on a different
subnet. Using the same procedure as for a single network, let's see what happens when host
156.26.1.1 tries to send an ARP request to host 156.26.2.1. Host 156.26.1.1 sends an Ethernet
broadcast containing an ARP request for the Ethernet address corresponding to IP address
156.26.2.1 (Fig. 4-5).
The router examines the ARP request and determines that the request is not for its IP address, so
it will ignore the frame. Also, the router will not forward an Ethernet broadcast, so host
156.26.2.1 will never see the ARP request. How do we solve this problem? Host 156.26.1.1
knows from the /24 subnet mask and from the IP address of host 2 that host 2 is on a different
subnet, so the solution is easy: Let the routercontinue
Page 51
Figure 4-4
Multiple network address resolution.
worry about it. Each host on the network should be configured with a default gateway. The
default gateway is where all frames are sent if the destination is on a different network or subnet.
Host 1's default gateway will be 156.26.1.2, which is the address of the router interface
connected to the network where host 1 lives. Host 1 will send the IP packet to the router, but it
must first use ARP to resolve the Ethernet address of the router's interface (Fig. 4-6a). The router
will reply with its Ethernet address (Fig. 4-6b), and host 1 will send the IP packets to the router
(Fig. 4-6c).

Now that the router is receiving IP packets from 156.26.1.1, what does it do with them? Of
course, they need to be sent to 156.26.2.1, but thecontinue
Figure 4-5
Trying to ARP across networks.
Page 52

Figure 4-6
Sending IP packets through a router:
(a) Resolving the Ethernet address of the default gateway;
(b) default gateway ARP reply;
(c) host 156.26.1.1 can now send IP traffic through the router.
router does not know the Ethernet address of 156.26.2.1 (we are assuming that the router was
booted recently and that the ARP cache is empty). The solution is simple! The router will
broadcast an ARP request on network 156.26.2.0/24, and 156.26.2.1 will respond with its
Ethernet address.break
Page 53
Exercise 4-1

In Fig. 4-7, host 1 wants to send IP packets to host 2. Assume that host 1 has an empty ARP
cache. Determine the sequence of events that allows host 1 to send IP packets to host 2. When
host 2 receives an IP packet from host 1, what is the source Ethernet address of the frame
received by host 2. What is the source IP address received by host 2?
Exercise 4-2
In Fig. 4-8, host 1 wants to send IP packets to host 2. Assume that host 1 has an empty ARP
cache. Determine the sequence of events that allows host 1 to send IP packets to host 2. When
host 2 receives an IP packet from host 1, what is the source Ethernet address of the frame
received by host 2. What is the source IP address received by host 2?
Summary
The Address Resolution Protocol (ARP) maps IP addresses to Ethernet addresses. This protocol
is needed because Ethernet addresses are fixed or burned into the network adapter and IP
addresses are assigned by thecontinue
Figure 4-7
Network for Exercise 4-1.
Page 54

Figure 4-8
Network for Exercise 4-2.
network administrator. The concept of address resolution also can be applied to other layer
2-layer 3 mappings such as AppleTalk and Ethernet, so an understanding of the ARP concept
will enable you to easily understand other mapping schemes.
Main Points
1. ARP process on a single network
2. ARP process on a bridged network
3. ARP process on a routed networkbreak
Page 55
Chapter 5—
Routing Information Protocol
Page 56
Although this book is concerned primarily with the Open Shortest Path First (OSPF) routing
protocol, a complete understanding of the Routing Information Protocol (RIP) will benefit you in
many ways. First, from a historical perspective, RIP was one of the first routing protocols and is
still widely used. Second, the limitations of RIP will give you an appreciation for the robustness
of OSPF. Finally, the occasion may arise when you encounter a network that uses both RIP and
OSPF. Very strange things can happen with these types of networks, and you will need to
understand the interactions of the two protocols in order to mold the system into a lean, mean
routing machine.
Technical Overview
RIP Version 1 is specified in RFC 1058 and belongs to the class of routing protocols called
interior gateway protocols (IGPs). An IGP is used for routing within a single autonomous
system. An autonomous system (AS) is one in which the routing policies are under a common
authority and use a common routing scheme. An exterior gateway protocol (EGP) is used to
route between autonomous systems (Fig. 5-1). RIP is a distance-vector routing protocol, which
only uses a hop count when making a routing decision. A hop count is the number of routers that
a packet would have to traverse in order to reach its destination. If there are two unequal speed or
bandwidth routes to the same destination but with the same hop count, then RIP considers both
routes to be the same distance (Fig.continue

Figure 5-1
Interior and Exterior Gateway Routing Protocols.
Page 57
Figure 5-2
All equal-hop paths are considered equal by RIP.
5-2). This is obviously a limitation of the protocol, one that OSPF overcomes.
RIP follows a simple algorithm for constructing a routing table. When a router is booted initially,
the only networks that it is aware of are those which are connected directly. An RIP routing table
contains the destination network, the hop count or metric to the destination network, and the
interface through which a packet should be sent to reach the destination network. Routers A and
B in Fig. 5-3 would have initial routing tables as shown in Tables 5-1 and 5-2.break

Figure 5-3
Sample RIP network.
Table 5-1 Initial Routing Table for Router A
Destination Network
Hop Count
Interface
1
1
1
2
1
2
6
1
3
Page 58
Table 5-2 Initial Routing Table for Router B
Destination Network
Hop Count
Interface
2
1
1
3
1
2
Routers C through F would have similar routing tables. Every 30 s, the RIP will broadcast the
entire routing table on every interface using the format in Fig. 5-4. One RIP message can contain
up to 25 networks. If a routing table contains more than 25 entries, then multiple RIP messages
will have to be transmitted.
The command field in the RIP message can be used to request all or part of a routing table
(command = 1) or signify a response to a requestcontinue

Figure 5-4
RIP message format.
Page 59
(command = 2). Other values are specified in RFC 1058, but they are now considered obsolete.
Usually a router sets the command field to 1 and then broadcasts the entire routing table.
When a router receives an RIP message, a simple algorithm is used to determine if the route(s)
should be added to the routing table:
1. If a route in the update is not in the routing table, then add the route to the table and increase
the metric by 1.
2. If the route in the update is in the routing table, add it to the local table only. If the metric is
less than the metric for the current route and the update was received on a different interface,
then add the route in the routing table. If the update was received on the same interface as the one
in the routing table, then accept the route.
When router B transmits the first RIP message, router A will only install the route to network 3
with a hop count of 2 but will not install the route to network 2 because the route already exists
with a metric that is equal to router B's metric. The routing table for router A will contain 4

routes, as shown in Table 5-3.
Router A now knows that if it has a packet destined for network 3, it can send it to router B
through interface 2. After a period of time, all the routers in the network of Fig. 5-3 will contain
entries in their routing tables for every network. The complete router table for router A is
contained in Table 5-4.
Exercise 5-1
Construct the routing table for router E in Fig. 5-3.break
Table 5-3 Initial Routing Table for Router A
Destination Network
Hop Count
Interface
1
1
1
2
1
2
6
1
3
3
2
2
Page 60
Table 5-4 Final Routing Table for Router A
Destination Network
Hop Count
Interface
1
1
1
2
1
2
3
2
2
4
3
2
5
4
2
6
1
3
7
2
3
8
3
3
Notice in Fig. 5-3 that router A can reach network 5 through interface 3 with a hop count of 4 or
through interface 2 with a hop count of 4. Which route will router A place in the routing table?
The answer depends on whether it receives the RIP message from router E first or from router B.
Both routers B and E will advertise a route to network 5 with a hop count of 3. According to the
RIP algorithm, router A will install the route from the first RIP message received and ignore the
route from the second.
In Fig. 5-4, the metric is shown to have a range of values between 1 and 16. A hop count of 16
signifies that the corresponding network is unreachable. The value 16 is considered to be infinity
by RIP. This is another limitation of the protocol. Networks that are more than 15 hops away

cannot be reached. Many corporate networks have hundreds of routers, and their size makes RIP
unusable as a routing protocol. RIP is also a slowly converging protocol. Convergence is a
measure of how long it takes to propagate a route through the network when there is a change.
Assuming that we boot all the routers in Fig. 5-3 simultaneously, it will take 60 s (if all routers
send their initial RIP message immediately) for the route to network 5 to reach router A. If router
D loses the connection to network 5, it will advertise a hop count of 16 (infinity) to network 5.
Router A will not know that the network is unreachable for 60 s (a very long time) and will
continue to send packets to network 5 until it learns that the network is unreachable. Actually, all
the routers will not send their initial routing tables at the same time. The 30-s timer for RIP
updates is offset by a random amount to prevent the routers from trans-soft
Page 61
mitting simultaneously. There are two additional timers associated with RIP updates, the timeout
timer and the garbage-collection timer. When a new route is installed in the routing table, the
timeout timer is initialized to zero and begins to count. Every time an RIP message containing
the route is received, the timeout timer is reset to zero. If an RIP message containing the route is
not received for 180 s, the metric for the route is set to 16, and a garbage-collection timer for the
route is started. If 120 s pass without receiving the route in an RIP message, the route is removed
from the routing table. If a message is received containing the route before the garbage-collection
timer reaches 120, the timer is cleared and the route is installed in the routing table.
Count-to-Infinity Problem
In Fig. 5-5, router A has lost connectivity to network 1. Router A adjusts the metric in the routing
table for network 1 to 16. Assume that router B transmits its routing table before router A does.
The message from router B contains a route to network 1 with a hop count of 2. This is better
than the route currently in router A's routing table, so the route is installed. Router A will now
advertise that it can reach network 1 with a hop count of 2. Since router B will receive this
information on the same interface as the route currently in the table, it will install the route with a
hop count of 3. Router B will now advertise to router A a hop count of 3 for network 1, and
router A will install it with a hop count of 4, and so on ad infinitum (or at least to 16). While the
routers are counting to 16, we have a routing loop. Packets thatcontinue

Figure 5-5
RIP count-to-infinity problem.
Page 62
router A has to send to network 1 will be sent to router B, and router B will send them to router
A, and so on. The routing loop will be broken when the routers finally count to 16, but with 30-s
updates this could take some time. Meanwhile, the network is being flooded with packets,
essentially making the network unusable.
Split Horizon
Split horizon is a technique used to solve the counting to infinity problem. With split horizon, a
router will not advertise a route over the interface from which it learned the route. This would
prevent router B from advertising the route to network 1 back to router A. Within 30 s, router A
would advertise a hop count of 16 to network 1, alerting the network that the network is
unreachable.
Split Horizon with Poisoned Reverse
This technique allows a router to send updates about routes over the interface from which they
were learned, but the hop count is set to 16. For our example, router B would advertise a route to
network 1 with a hop count of 16, preventing routing A from placing it in the routing table.
Hold Down
Hold down causes a router to ignore routing updates about a route for a period of time after the
route has been declared unreachable. For our example, router A determines that network 1 is
unreachable. With hold down, router A will ignore advertisements about network 1 from routers
B and E during the hold down period, which will allow router A to transmit its routing table
informing the network that network 1 is unreachable.break
Page 63
Triggered Updates
Although split horizon solves the routing loop problem between two routers, a situation could
occur where three or more routers form a routing loop. Split horizon cannot prevent this from
happening. Triggered updates require a router to transmit the routing table immediately when a
change occurs. This speeds up the convergence of the network but has the potential for creating
broadcast storms. Another situation could arise where a router receives a triggered update and
then a regular update from another router reinstalling the route. In short, this is not a technique
that will solve all the convergence problems of RIP, although the ones mentioned do add a
measure of stability to an RIP network.

RIP and VLSM
Simply stated, do not use VLSM with RIP. You can do it, but it will not work, and it can cause a
lot of head scratching if you do not realize what is happening. If you look back at the RIP
message format in Fig. 5-4, you will notice that a very important piece of information is
missing—the subnet mask! When RIP is constructing the routing message for an interface, RIP
will only include those networks which have the same subnet mask as the interface on which the
message is to be transmitted. Figure 5-6 shows a router with four interfaces. Two of the
interfaces are using a /20 subnet mask, and two of the interfaces are using a /24 subnet mask.
Downstream routers on interfaces 1 and 2 would never learn about networks 1.0 and 2.0, and
routers downstream of interfaces 3 and 4 would never learn about networks 16 and 32. If all the
subnet masks are equal, then there is no problem. Without transmitting the subnet mask, RIP
cannot take advantage of the properties of VLSM—yet another limitation.
RIP Version 2
RFC 1723 (1994) contains extensions to RIP Version 1. Most notable is the RIP message format
(Fig. 5-7). The shaded entries are the additions that have been made in Version 2. The route tag
can be used to indicatecontinue
Page 64
Figure 5-6
RIP and VLSM.
routes that have been learned from other RIP routers or from another IGP such as OSPF or from
an EGP such as BGP. The subnet mask is probably the most important addition, allowing
designers to use VLSM with RIP Version 2.

Unfortunately, RIP Version 2 still suffers from the other limitations of RIP Version 1, as
summarized in Table 5-5. RIP can be used safely on small networks, but given a choice, use
something else. There are many RIP networks installed in this world, so be careful out there.
Further Study
Surf the Net and get copies of RFC 1058, RIP Version 1, and RFC 1723, RIP Version 2. They
can be found at http://www.cis.ohio-state.edu/htbin/rfc/rfc11058.html and
http://www.cis.ohio-state.edu/htbin/rfc/rfc1723.html.
Summary
The Routing Information Protocol (RIP) is still in widespread use, even though there are
available IP routing protocols that are more stable andcontinue
Page 65
Figure 5-7
RIP Version 2 message format.
Table 5-5 Limitations of RIP
Slow convergence

Slow convergence
Routing to infinity
Can't handle VLSM (Version 1)
Unable to detect routing loops
Only metric is hop count
Small network diameter (15 hops)
If multiple routes to a destination exist, will only use one (no load balancing)
Page 66
converge faster after a change in the network has occurred. A complete understanding of RIP is
required to understand RIP's interaction with these protocols so that a nondisruptive migration
away from RIP can be planned and implemented.
Main Points
1. The RIP routing algorithm
2. RIP Version 1 and Version 2 packet formats
3. Count-to-infinity problem
4. Split horizon
5. Split horizon with poisoned reverse
6. Hold downs
7. Triggered updates
8. RIP Version 1 and the problems encountered with VLSMbreak
Page 67
Chapter 6—
Open Shortest Path First
Page 68
Open Shortest Path First (OSPF) overcomes all the limitations of the Routing Information
Protocol (RIP) that were identified in Chap. 5. This chapter is an overview of OSPF as specified
in RFC 2178, which specifies Version 2 of the OSPF protocol. RFC 2178 is a rather formidable
document containing over 200 pages, whereas the RIP RFC contains 32 pages. As with many

RFCs, RFC 2178 is sometimes confusing and difficult to understand. The intention of this
chapter is to clearly explain the terminology, concepts, and operations of OSPF in order to
provide a solid foundation and understanding of the protocol for design and implementation on
Cisco routers. This chapter does not attempt to present or explain every detail of the RFC but
only introduces those concepts which are necessary to understand the operation of the OSPF
protocol.
Overview
OSPF is an interior gateway protocol (IGP) and is used for routing decisions in a single
autonomous system (AS). OSPF is a link-state routing protocol as opposed to RIP, which is a
distance-vector routing protocol. A link is just another word for router interface, so OSPF could
be called an interface-state routing protocol. The term state refers to the parameters of the router
interface or link. These parameters are the physical condition of the interface: is it up or down,
the IP address of the interface, the subnet mask assigned to the interface, the network to which
the interface is connected, and the associated cost for using the router's network connection. We
have seen that RIP operates by exchanging its entire routing table with its neighbors by
broadcasting the routing table onto interfaces that are running RIP. OSPF exchanges information
with other OSPF routers, but the information exchanged is not routes but link states. Instead of
informing other routers which networks they can reach and what the distance is, OSPF routers
inform each other of the state of their network interfaces, the networks these interfaces are
attached to, and the cost of using the interfaces. Obviously, every router has a different link state
than every other router. Each router's link state can be referred to as a local link state. These local
link states are propagated (flooded) throughout the OSPF network until every OSPF router has a
complete and identical link-state database.
Once every router has received all the local link states, then each router can build a tree with
itself as the root and the branches representing the shortest, or least-cost, routes to all the
networks in the AS.continue
Page 69
Each OSPF router will use these shortest paths to build the routing table, hence the name
Shortest Path First. The O in OSPF simply means that the standard defining OSPF is open to the
public and not a closed proprietary routing scheme such as Cisco's IGRP and EIGRP. Figure 6-1
illustrates some of the basic OSPF terms. Router A has three active interfaces or links. Each
interface has an IP address and a subnet mask. The IP address and subnet mask uniquely identify
which interface is connected to which network. The cost of each link is a dimensionless quantity
thatcontinue

Figure 6-1
Sample OSPF network.
Page 70
is usually related to the bandwidth of the link. A faster link is a ''better" link and therefore should
have a lower associated cost. One method of calculating the cost is to divide one hundred million
by the bandwidth of the interface. Assuming that Ethernet networks in Fig. 6-1 are 10BaseT with
a bandwidth of 10 Mbits/s, then the cost associated with the Ethernet networks would be 10. The
ISDN links would have a cost of 1786, and the frame relay connections cost would be 333 (all
costs are rounded to an integer). The local state of each router can now be determined, and the
link state for router A is contained in Table 6-1. Router A will exchange its local link state with
every attached router, and each router will flood this information throughout the network until all
five routers have a complete and identical link-state database.
Once every router has a complete link-state database, each router can calculate a shortest path

tree. For example, there are many paths for router A to choose from when trying to get to
network 5 (Fig. 6-2). For the four paths shown, the cost would be
1. ISDN (1786) + Ethernet (10) = 1798
2. Ethernet (10) + Frame Relay (333) + Ethernet (10) = 353
3. Frame Relay (333) + Ethernet (10) = 343
4. Ethernet (10) + Frame Relay (333) + Ethernet (10) = 353
The shortest path is path 3, so this is the path that router A would insert into its routing table for
destination network 5. The network of Figs. 6-1 and 6-2 contains many loops. RIP cannot detect
these loops, but the Shortest Path First algorithm can detect loops and creates a routing scheme
that is loop-free, another improvement over RIP. Which path would RIP choose from router A to
network 5? As we have seen in Chap. 5, the answer would depend on the order of the routing
table updates received by router A from the other routers. Assume that router A's frame relay link
becomes disabled. Paths 3 and 4 in Fig. 6-2 become the shortest paths to network 5. Which one
does OSPF choose to insert incontinue
TABLE 6-1 Link State for Router A in Fig. 6-1
Interface
Interface State
IP Address
Subnet Mask
Cost
Ethernet
UP
156.26.1.1
255.255.255.0
10
Serial, frame
UP
156.26.2.1
255.255.255.0
 333
Serial, ISDN
UP
156.26.3.1
255.255.255.0
1786
Page 71

Figure 6-2
Some possible paths from router A to network 5.
the routing table? Both! OSPF can route traffic over equal-cost paths, whereas RIP can handle
only one path to a destination network.
As the network grows, so does the size of the complete link-state database that each router needs
to maintain. As the size of the link-state database grows, the time required to compute the
shortest path tree also increases. Many corporate networks contain hundreds of routers and
networks. Imagine flooding hundreds of local link states to every router in a large network and
then requiring each router to compute a shortest path tree. It would seem that OSPF does not
scale well, but there is an elegant solution: Break the network into smaller pieces or areas, and
require the routers only to exchange link states with routers in the samecontinue
Page 72

Figure 6-3
Partitioning a network into multiple OSPF areas.
area. This means that less information needs to be flooded, and the computational intensity of
calculating the shortest path tree also will be reduced. This concept of OSPF areas is shown in
Fig. 6-3. Area 0 is a required area if more than one area is being implemented, and it is typically
referred to as the backbone area. All nonzero or nonbackbone areas must touch the backbone
area either physically or logically. A physical connection is the type that the nonbackbone areas
in Fig. 6-3 have with the backbone. This physical connection is through a router having one
interface in the backbone and one in the nonbackbone area. A logical, or virtual, link to the
backbone can be used either when the backbone becomes discontiguous or when it is not
possible for a nonbackbone area to physically connect to the backbone area. A virtual link is
defined by two endpoints and a transit area. One of the endpoints is a routercontinue
Page 73
interface that is part of the backbone, and the other endpoint is a router interface in an area that
does not have a physical connection to the backbone. The transit area is the area between the
backbone and the nonbackbone area that does not have a physical connection to the backbone
(Fig. 6-4). A backbone can become disjointed due to a link failure. The backbone is required to

be contiguous for the proper operation of OSPF. A virtual link can be used to repair a disjointed
backbone in the same way that a virtual link can connect a nonbackbone area to the backbone
when a physical connection is not possible.
Definitions
An understanding of the terms used when describing an OSPF network is essential (Fig. 6-5), so
here we go:
Router ID A 32-bit number used to identify each router. Typically the highest IP address
assigned to the router. If loopback interfaces are used on the router, then the router ID is the
highest IP address of the loopback interfaces regardless of the value of the IP address for the
physical interfaces
Interface Connection between a router and a network with a single IP address and subnet mask.
Also referred to as a link.
Neighboring routers Routers with an interface to a common network.
Broadcast network A network that supports broadcasts. Ethernet is a broadcast network.
Nonbroadcast network Supports more than two attached routers but has no broadcast
capability. Frame relay and X.25 are examples of nonbroadcast networks. There are two
general types of nonbroadcastcontinue
Figure 6-4
OSPF virtual link.
Page 74

Figure 6-5
Illustration of OSPF terminology.
networks, nonbroadcast multiaccess (NBMA) and point to multipoint. The differences
between the two depend more on the configuration of router than on the physical network.
Consider the networks in Fig. 6-6. Part a shows a router with frame relay connections to three
other routers. All the connections are using the same IP subnet; therefore, this is an NBMA
network. The configuration in part b is physically the same except that the hub router has
three logical subinterface frame relay connections configured on different IP subnets, making
this a point-to-multipoint configuration. On an NBMA network, a designated router is elected
while on a point-to-multipoint network there is no designated router. The differences are
subtle but important, as we shall see when we begin to configure routers.
Designated router (DR) On broadcast and NBMA networks, the designated router is used to
flood link-state information to the common network.break
Page 75

Figure 6-6
Nonbroadcast networks:
(a) nonbroadcast multiaccess (NBMA) network using a single IP subnet;
(b) nonbroadcast point-to-multipoint network.
Page 76
Backup designated router (BDR) Router that will take over the role of DR in the event the DR
fails.

Area border router (ABR) A router that has an interface in more than one OSPF area.
Autonomous system border router (ASBR) An OSPF router that connects to another AS or to
an area of the network in the same AS that is running a different IGP than OSPF.
Adjacency An adjacency is formed between the DR and all nondesignated routers on a broadcast
or NBMA network. An adjacency is also formed between the BDR and all nondesignated
routers. OSPF routing updates are only sent and received on adjacencies.
Flooding Used to distribute and synchronize link-state databases between routers.
Link-state advertisement (LSA) Describes the local state of a router.
External routes Routes learned from another AS or from another routing protocol can be
injected into OSPF as external routes. There are two types of external routes. A type 1
external route has a cost that includes the OSPF cost plus the cost from the ASBR to the
network. A type 2 external route has a cost equal only to the cost from the ASBR to the
external network.
Interaarea routing Routes between networks in the same area. These routes are based only on
information received from within the area.
Interarea routing Routes between two different OSPF nonbackbone areas. The interarea path
consists of three parts: the intraarea path from the area to the ABR of the source area, the
backbone path from the source ABR to the destination ABR, and finally, the path from the
destination ABR to the destination network.
Route summarization Routes within an area, routes from another AS, and routes learned from
another routing protocol can be summarized by OSPF into a single route advertisement if the
IP network was designed properly. Figure 6-7 shows an OSPF area with 14 class C networks.
Without summarization, the ABR will advertise 14 routes. With summarization, the ABR can
advertise 1 route, significantly reducing the size of the routing update, and downstream
routers will have smaller routing tables. Notice that summarization can only occur on an
ABR or an ASBR. Summarization is not automatic, as is mentioned in the RFC.break
Page 77

Figure 6-7
Route summarization example.
Stub area An area with a single exit path from the area. Virtual links cannot be used in a stub
area.
OSPF Routing Protocol Packets
OSPF uses five types of routing protocol packets, as listed in Table 6-2. The hello protocol is
used to find neighbors on a routers' attached networks. The hello protocol is also used to
determine if a neighboringcontinue
Page 78
Table 6-2 OSPF Routing Protocol Packet Types
Packet Type
Purpose
Hello
Discover and maintain neighbors
Database description
Summarize database contents

Database description
Summarize database contents
Link-state request
Database download
Link-state update
Database upload
Link-state acknowledgment
Flooding acknowledgment
routers' interface is still functional by periodically sending out hello packets. Designated routers
are elected on broadcast and NBMA networks through the use of the hello protocol. Hello
packets are sent to the multicast address AllSPFRouters (224.0.0.5). During flooding, some
protocol packets are also sent to this address. Designated and backup designated routers send and
receive protocol packets to the multicast address AllDRouters (224.0.0.6). Packets sent to the
multicast address have the TTL field in the IP header set to 1 so that the packets will travel only a
single hop.
Packet Formats
All OSPF packets share a common 24-byte header, as shown in Fig. 6-8. The version number is
set to the version of OSPF that a router is running. The current version number is 2. The type
field has a value in thecontinue
Figure 6-8
OSPF protocol packet header.
Page 79
range 1 to 5 depending on the type of the OSPF packet. The packet length is the length in bytes
of the OSPF packet plus the OSPF header. Router ID is the highest IP address assigned to the
router transmitting the packet. Area ID is the 32-bit designator for the area assigned to the
routers' transmitting interface. If the packet is sent over a virtual link, then the area ID is 0. The
checksum is calculated using the one's complement sum, as we have seen with the FCS in an
Ethernet frame and the checksum for the IP header. If authentication is being used, the AuType
identifies the authentication method, and the following 64-bit field contains data required by the
authentication type being used. The hello protocol uses the packet format shown in Fig. 6-9.break

Figure 6-9
Hello protocol packet format.
Page 80
The network mask is the subnet mask of the interface that transmitted the hello packet. The hello
interval is the time in seconds between transmissions of a hello packet. The router priority field
can be used to influence the election of the DR. The default router priority value is 1. If all
routers use this default value, then the DR will be the one with the highest IP address. A value of
0 indicates that the router cannot be elected DR. If values other than 0 or 1 are used, then the
router with the highest priority will be elected DR. The RouterDeadInterval is used to determine
if a neighbor has died. If a hello packet has not been received from an established neighbor
during the number of seconds specified by the RouterDeadInterval, then the neighbor is declared
down. The designated router and backup designated router fields contain the IP address of the
DR and BDR. This field is set to 0 if there is no DR or BDR (point-to-point network). Finally,
the packet contains a list of neighbors that the router has on this network. If a hello packet is not
received from a neighbor in RouterDeadInterval seconds, then the neighbor is removed from this
list. The options field contains 5 assigned bits, but only 1 bit is described in RFC 2178, the E bit,
which determines how external link-state advertisements are flooded.

Designated Router Election
The algorithm for electing the DR and BDR is rather complex because the protocol requires a
smooth transition from BDR to DR in the event the DR fails. Understanding of the procedure for
election of the DR and the BDR to DR transition is essential for designing a stable and robust
OSPF network. Initially a network's DR and BDR are set to 0.0.0.0, indicating that a DR and
BDR have not yet been elected. A router will examine the list of neighbors and eliminate any
router with a priority of zero, indicating that the router is not eligible to become DR or BDR. The
algorithm is then run with the routers having zero priority removed from the eligibility list.
1. Record the current DR and BDR.
2. Determine the new BDR from the list of routers that are not currently identified as the DR. If
there are routers advertising as BDR, select the one with the highest router priority. If there is a
tie when comparing priorities, then select the one with the highestcontinue
Page 81
router ID (IP address). If there are no routers advertising as BDR, then choose the non-DR with
the highest priority. Again, if a tie occurs, choose the one with the highest router ID.
3. Examine the list of routers advertising themselves as the DR, and choose the one with the
highest priority to be the DR. If there is a tie, select the one with the highest router ID. If there
aren't any routers advertising as DR, then assign the new BDR to be the DR.
4. If a router becomes the DR or BDR, then steps 2 and 3 need to be repeated to ensure that a
router will not be elected both the DR and the BDR.
5. If elected DR, set the interface state to DR. If elected BDR, set the interface state to BDR.
Otherwise, set the interface state to DR Other.
6. On an NBMA network, the new DR and BDR must start sending hello packets to neighbors
that are not eligible to become DR.
7. If the DR and/or BDR has changed, then the state of adjacencies for this interface also will
need to be changed.
The state diagram in Fig. 6-10 shows the transitions from a router interface being down through
the state of two routers forming a full adjacency on their common network. The down state
signifies that either a router interface is physically down or the OSPF protocol has not yet been
enabled on the interface. When OSPF has been enabled on the interface, hello packets will be
transmitted. When a hello packet is received from a neighbor but the router does not appear in
the list of neighbors, the interface enters the Init state. All interfaces in this state and attached to
the network will be contained in the list of neighbors. When a router sees its interface listed in a
neighbor's list of neighbors, the state 2-way is entered. Any routers in the state 2-way or greater
are eligible to be elected DR or BDR. Also, routers can start exchanging linkstate information by

entering the ExStart state. In this state the routers decide who is the master and who is the slave
and what the initial database description sequence number will be. When the exchange state is
entered, the router is sending database description packets to neighboring routers and link-state
request packets requesting the neighbor's most up-to-date information. In the loading state the
neighbor is waiting for the request database updates. When the exchange of link-state databases
is complete, the two routers will enter the full state. If an adjacency has been formed, adjacent
routers will exchange hello packets periodically ascontinue
Page 82

Figure 6-10
Forming an adjacency on a broadcast network.
Page 83
a way of informing and detecting if adjacent neighbors are still functioning properly.

Link-State Database Packet Formats
The different types of link-state advertisements (LSAs) that routers can generate are listed in
Table 6-3. Router and network LSAs contain the information necessary to determine how the
networks and routers are interconnected. Summary LSAs are used to transmit networks that have
been aggregated into a single-network advertisement. The summaries can be created at either an
ABR (type 3) or an ASBR (type 4). External routing information can be propagated into the
OSPF domain by an ASBR using the type 5 LSA packet.
Every LSA packet has a common 20-byte header (Fig. 6-11). Typically, many LSA are being
exchanged by routers in the OSPF domain, and part of the function of the LSA header is to
uniquely identify each LSA packet and determine which one is the most recent. This is
accom-soft
Table 6-3 Link-State Types
Type
Description
1
Router LSA
2
Network LSA
3
Summary LSA
4
Summary LSA (ASBR)
5
AS-external LSA
Figure 6-11
LSA header format.
Page 84
plished by using the LS sequence, LS checksum, and LS age fields. The LS age field set initially
to 0 by the originating router and is incremented by an amount referred to as InfTransDelay,
which represents the time required to transmit the LSA to the next hop. A parameter, MaxAge, is
used to retire LSAs, and the LS age value is never incremented past the MaxAge value. Newer
LSAs will be used in the database, and older versions will be deleted from the database when
they reach MaxAge.

The options field is used to denote the capabilities of the router. The only bit currently used is the
E-bit (external), and this is 0 for stub areas and 1 for all other areas. LS type has a value of 1 to 5
and signals the type of LSA packet, as listed in Table 6-3. The Link-State ID values depend on
the LSA packet type, and these values are listed in Table 6-4. The advertising router field
contains the router ID of the originator of the LSA. In a router LSA, the advertising router field is
the same as the Link-State ID field. The network's DR is contained in this field for network
LSAs, the ID of the ABR is used in summary LSAs, and the ID of the ASBR is used in
AS-external LSAs. Sequence numbers are used to detect old and duplicate LSAs, and the
checksum is used to detect corrupted packets. The length field indicates the length of the LSA
including the header.
Link-State Database
A router maintains a separate link state database for every area in which it has an active interface.
Every router that has an interface in an area will have an identical link state database for that
area. The shortest path tree is calculated for each area separately by each router with itself as the
root of the tree. A router's portion of the link state database for an areacontinue
Table 6-4 LSA Link-State ID Values
LS Type
Link-State ID Value
1
The originating router's ID
2
IP interface address of this network's DR
3
Destination network's IP address
4
Router ID of the ASBR
5
Destination network's IP address
Page 85
is only flooded through that area. This area database is composed of router LSAs, network LSAs,
and summary LSAs. If the area is not a stub area, the database also will include an AS-external
LSA. A router will add an LSA to its database when it is received during flooding or when the
router initiates the LSA. Routers delete LSAs from the database when a newer LSA is received,
when the router generates a new LSA, or when an LSA becomes too old. Any LSAs deleted from
a router's database also will be removed from every neighbor's retransmission list.
Every router will originate a router LSA. If the router is also the DR, then the router will generate
a network LSA for the network that it is the DR. ABR routers will generate summary LSAs for
the interarea routes, and ASBR routers will generate AS-external LSAs for external routes. Ten
events have been identified that will trigger a new instance of an LSA to be generated:
1. When the age field of an LSA that was originated by the router reaches the value
LSRefreshTime.

2. The state of a router interface changes.
3. The DR for a network changes. The router ID is the highest IP address assigned to the router or
the highest loop-back IP address assigned to the router. If the interface that has the highest IP
address fails, then the router ID must change. This is why it is a good idea to use loop-back
interfaces: They never fail. The failed interface also may be the interface to the network for
which the router is the DR.
4. A neighboring router changes to the full state or changes from the full state.
5. An intraarea route has been added, deleted, or modified.
6. An interarea route has been added, deleted, or modified.
7. A router has an interface become active in an area.
8. A router's virtual link changes.
9. An external route changes.
10. A router that was an ASBR is no longer an ASBR.
Router Link-State Advertisements
A router will generate a router LSA for every area in which it has an active OSPF interface. The
information contained in the router LSA iscontinue
Page 86
the states of the router's interfaces in that area, and the LSA is flooded throughout the area. The
format of a router LSA is shown in Fig. 6-12. All the router's interfaces into an area must be
described in a single router LSA. The link-state ID field is the router's OSPF ID. The VEB bits
are used to determine the types of links that the router may have. The V bit indicates that the
router is the endpoint of a virtual link. If the router is an ASBR, then the E bit will be set. If the
router is an ABR, then the B bit will be set. The number of links indicates how many OSPF
interfaces are active on the router. Each link is described by the following fields:
1. Link type
Type 1: Point-to-point connection
Type 2: Connection to a transit network
Type 3: Connection to a stub network
Type 4: Virtual linkbreak

Figure 6-12
Router LSA packet format.
Page 87
2. Link ID
For type 1, the neighboring router's ID
For type 2, the IP address of the DR
For type 3, the IP network/subnet number
For type 4, the neighboring router's ID
The link ID identifies what the router's interface is connected to. The link ID is typically equal to
the neighboring router's link-state ID. The contents of the link data field depend on the link type
field . If the router has a connection to a stub network, then this field will contain the IP address
mask for the network. For other link types this field contains the IP address assigned to the
interface. The type of service field (TOS) is usually set to 0. The final value is the metric, or cost
of the link, which should always be nonzero except if the link is attached to a stub network.
Network Link-State Advertisements
The format of a network LSA is shown in Fig. 6-13. A network LSA is a type 2 LSA, and such

LSAs are generated for each broadcast and NBMA network in an area that supports two or more
routers. Network LSAs are originated by the DR for the network, and the link-state ID field
contains the IP address of the DR's interface to the area. A cost, or metric, iscontinue
Figure 6-13
Network LSA packet format.
Page 88
not needed in the advertisement because the routers are connected directly to the network,
resulting in a cost of zero. The network mask field contains the network mask for the common
network, and attached router fields contain the IP address of the router interfaces that are
connected to this common network and that are also adjacent with the DR.
Summary Link-State Advertisements
Type 3 and 4 LSAs are summary link-state advertisements having the format shown in Fig. 6-14.
Summary LSAs are generated by area border routers, and they describe interarea destinations. A
type 3 summary LSA has a destination of an IP address, and the link-state ID field is an IP
network number. A type 4 summary LSA has as its destination an autonomous system border
router, and the link-state ID field is the OSPF router ID. The link-state ID field is the only
difference between the two types of summary LSA packets.
Type 3 LSAs also can be used to describe a default route into a stub area. For this case, the
link-state ID field and network mask field are set to 0.0.0.0. The network mask field is the
destination network's IP address mask for a type 3 LSA and should be set to 0 for a type 4
LSA.break

Figure 6-14
Summary LSA packet format.
Page 89
AS-External LSAs
Type 5 LSAs are AS-external LSAs and are used by ASBRs to describe networks external to the
autonomous system. They have the packet format shown in Fig. 6-15. As-external LSAs are used
to describe routes to an external network. The link-state ID field will contain an IP network
number or 0.0.0.0 if it describes a default route. If the LSA describes a default route, then the
network mask field is also set to 0.0.0.0. The E bit is used to indicate whether the external route
is a type 2 (E = 1) or a type 1 (E = 0) external route. Recall that a type 1 route has a metric using
the same units as the link-state metric and a type 2 route is larger than any link-state metric. The
forwarding address contains the address to send any traffic destined for the external network. The
external route tag field is not used by OSPF.break

Figure 6-15
AS-external link-state advertisement packet format.
Page 90
Database Description Packet
A database description packet is a type 2 OSPF packet with the format shown in Fig. 6-16.
Database description packets are exchanged between routers that are in the process of forming an
adjacency, and they describe the link-state database. Depending on the number of interfaces and
networks, more than one database description packet may be needed to transmit the entire
link-state database. The routers involved in the exchange enter a master-slave relationship. The
master sends packets, and the slave acknowledges packets through the use of the database
description (DD) sequence numbers. The interface MTU field indicates the size of the largest IP
packet that can be sent through the interface. This field is set to 0 when sent over a virtual link.
The options field contains 3 bits that are used to indicate the capabilities of the router. The I bit is
the Init bit, and it is set to 1 for the first packet in the database sequence.continue

Figure 6-16
Database description packet format.
Page 91
The M bit is set to 1 to indicate that there are more database description packets in the sequence.
The MS bit is the master-slave bit. A 1 indicates that the router is the master, and a 0 indicates
that the router is the slave during the exchange of database description packets. The remaining
portion of the packet is one or more LSAs with the formats described in preceding sections of
this chapter.
Link-State Request Packets
Type 3 OSPF packets are link-state request packets, and they have the format shown in Fig. 6-17.
When two routers have completed exchanging database description packets, a router may detect
that portions of the link-state database are out of date. When this situation occurs, the router can
request newer database description packets that are more up to date.
Link-State Update Packet
Type 4 OSPF packets are link-state update packets, and they are used to implement the flooding
of LSAs. The format of a link-state update packet is shown in Fig. 6-18. Each link-state update
packet contains one orcontinue

Figure 6-17
Link-state request packet format.
Page 92
Figure 6-18
Link-state update packet format.
more LSAs, and each packet is acknowledged by using link-state acknowledgment packets.
Link-State Acknowledgment Packets
Type 5 OSPF packets are link-state acknowledgment packets. The format of a link-state
acknowledgment packet is shown in Fig. 6-19. These packets can be sent to one of three

addresses: the multicast address ALLDRouters, the multicast address ALLSPFRouters, or a
unicast address. A summary of OSPF link-state acknowledgment is shown in Table 6-5.
OPSF Not-So-Stubby Area
RFC 1587 describes the OSPF not-so-stubby area (NSSA) option, which was developed to
address the scenario depicted in Fig. 6-20.
From the point of view of the wide area transit network, the sites are stub areas having the
following properties:
1. Type 5 external link-state advertisements will not be sent into the stub area by routers r1 and
r4.break
Page 93
Figure 6-19
Link-state acknowledgment packet format.
2. Routers r1 and r4 will only advertise a default network to routers r2 and r3.
The problem with this configuration is that routers r1 and r2 (and routers r3 and r4) cannot both
be members of the stub area because a stub area cannot import routes external to OSPF. If OSPF
is running on routers r1 and r3, then routers r1 and r3 must be connected to the backbone or not
be in a stub area. There is no reason for routers r1 and r3 to maintain all the external routes for
the transit network, so we must run a different routing protocol, such as RIP, on routers r1 and r3
and redistribute routes from OSPF into RIP. NSSAs were developed so that AS external routes
could be imported into a stub area in a limited mannercontinue
Table 6-5 OSPF LSA Summary
LSA Type
Router Type

LSA Type
Router Type
Router
All routers
Network
Designated routers
Summary
Area border routers
AS-external
Autonomous system border routers
Page 94
Figure 6-20
Motivation for a not-so-stubby area (NSSA).
using a new type of LSA that is referred to as a type 7 AS external. Type 7 LSAs have the
following properties:

1. They can be originated and advertised throughout an NSSA.
2. They are propagated only in the NSSA and are not flooded onto the OSPF backbone, but their
information can be propagated into the backbone area.break
Page 95
NSSA border routers can originate a default type 7 LSA into the NSSA, and a limited exchange
of external routing information can be sent into an NSSA by translating type 7 LSAs into type 5
LSAs. One major difference between stub area and NSSA is that OSPF type 3 summary LSAs
are imported into the NSSA. NSSAs allow both routers r1 and r2 (and r3 and r4) to be members
of the NSSA. Router r2 is an NSSA border router, and router r1 is an autonomous system border
router internal to the NSSA. Router r1 will import the subnets of site 1 into the NSSA as type 7
LSAs. Router r2 will translate the type 7 LSAs into type 5 summary LSAs and flood them into
the OSPF backbone.
Summary
You should now have an appreciation for the complexity of OSPF as compared with RIP and
why this complexity is needed to achieve a stable IP routing protocol. The main points of the
RFC were covered to give an introduction to OSPF terminology and operation.
Main Points
1. Link-state versus distance-vector routing protocols
2. Link-state advertisement formats and their role
3. OSPF backbone or area 0
4. Area border routers (ABRs) and autonomous system border routers (ASBRs)
5. Virtual links and their use
6. Link cost determination
7. Stub and not-so-stubby areas
8. Router ID
9. Network types: broadcast and NBMA
10. Role of the designated router (DR) and backup designated router (BDR)
11. Adjacencies
12. Flooding
13. Intra- and interarea routes

14. Route summarizationbreak
Page 97
Chapter 7—
IP Traffic Management
Page 98
In general, there are two types of Internet Protocol (IP) traffic, routing and control traffic and user
traffic. This chapter examines techniques for managing user traffic. Types of user traffic that you
are probably most familiar with are telnet, ftp, email, pings, and, of course, the World Wide Web.
IP traffic can be managed through the use of standard and extended IP access lists. Before we
look at the facilities available in the Cisco IOS for traffic management, however, we need to
examine the structure of IP, UDP, and TCP packets in order to gain an understanding of the
information available in these packets that we can use to selectively manage IP traffic.
IP Data Packet Format
We have seen that the Internet Protocol (IP) operates at layer 3, the network layer, of the Internet
layered model. Data from layer 4 processes are encapsulated in an IP datagram having the
structure shown in Fig. 7-1.continue
Figure 7-1
IP datagram packet format.

Page 99
The 4-bit version field contains the version number of the format of the IP datagram. Routers
must check the version number to see if it matches the version number of IP they are running. If
the version number does not match, then the packet will be rejected. The current IP version
number is 4. The 4-bit header length is the length of the IP header in 32-bit words. If IP options
and padding are not used, then this field will contain 5, meaning that the IP header length is 20
bytes. The 8-bit type of service field specifies how the IP datagram should be handled by the
router. This field is ignored by routers but eventually will have a use in later versions. The total
length is the length of the IP datagram in bytes and includes both the header length and the data
length. The length of the data can be determined easily by subtracting the header length * 4 from
this field. Since the total length field is 16-bits, the maximum size of an IP datagram is 65,635
bytes. IP datagrams may traverse networks with different MTU sizes, possibly causing the IP
packet to become fragmented. The identification, flags, and fragment offset fields are used to
control the fragmentation and reassembly of IP datagrams. Routing loops may occur that can
cause an IP packet to endlessly circulate in the network. The time to live field is used to break
potential routing loops. The TTL field is initialized to a positive number, and each router that the
packet passes through decrements this field by 1. When the TTL field goes to zero, the router
will discard the packet. The data contained in an IP packet are from a layer 4 protocol. The
protocol field identifies the layer 4 process from which the data were received, such as UDP or
TCP. The header checksum is a checksum that is computed for the IP header only and does not
include the data. The upper-layer protocol that supplied the data typically includes a data
checksum, so there is no need for the data to be included in the IP checksum. The source IP
address contains the IP address of the originator of the datagram, and the destination address is
the address of the ultimate destination for the packet. A forwarding router never changes the
source and destination IP addresses. As was seen in Chap. 4, a router will change the source and
destination MAC addresses of a forwarded packet, but the router will never change the IP
addresses in the IP header. The IP options field has a variable length depending on the type of
option that is being used. The padding field is also a variable length that depends on the size of
the options field. Since the header length field gives a length in 32-bit words, the header must
end on a 32-bit boundary. The padding field is filled with zeros so that the length of the options
field and the length of the padding field are both 32 bits.break
Page 100
Standard IP Access Lists
A standard IP access list can be used to filter IP traffic based on the source address contained in
the IP header. Standard IP access lists cannot be used to filter traffic based on any other
parameter. An access list is created in global configuration mode as shown below. Standard IP
access lists are identified by a number in the range from 1 to 99, so a router can have a maximum
of 99 standard IP access lists active simultaneously.

router#configure terminal
Enter configuration commands, one per line. End with CNTL/Z
router(config)#access-list?
  <1–99>             IP standard access list
  <100–199>          IP extended access list
  <1000–1099>        IPX SAP access list
  <1100–1199>        Extended 48-bit MAC address access list
  <1200–1299>        IPX summary address access list
  <200–299>          Protocol type-code access list
  <300–399>          DECnet access list
  <400–499>          XNS standard access list
  <500–599>          XNS extended access list
  <600–699>          Appletalk access list
  <700–799>          48-bit MAC address access list
  <800–899>          IPX standard access list
  <900–999>          IPX extended access list
The first parameter for a standard IP access list is the list number, having a value of 1 to 99.
router(config)#access-list 1?
  deny          Specify packets to reject
  permit        Specify packets to forward
The second parameter indicates whether traffic will be permitted or denied. For example, assume
that we want to deny host 1 from accessing network 172.16.2.0 in Fig. 7-2, but we want to allow
all other hosts to be able to access network 172.16.2.0.
This would be a deny operation in an access list.break
router(config)#access-list 1 deny?
  Hostname or A.B.C.D Address to match
  any      Any source host
  host     A single host address
Page 101
Figure 7-2
Deny host 1 from accessing network 172.16.2.0.

What do we want to deny? We want to deny host 1, which has an IP address of 172.16.3.1. There
are two ways to enter a host address. The first is to simply enter the host address as an IP address.
router(config)#access-list 1 deny 172.16.3.1?
  A.B.C.D Wildcard bits
  <cr>
Notice that the entire address of the host was entered. The next parameter is called the wildcard
bits, and the bits can be considered a reverse mask because we enter a 0 to match a bit and a 1
indicates that we do not care what the corresponding bit value is. In order to match the entire host
address, the wild card bits would all be zero.
router(config)#access-list 1 deny 172.16.3.1 0.0.0.0?
  <cr>
We can now list the access list from exec mode.
router#show access-lists
Standard IP access list 1
  deny       172.16.3.1
Another way to enter a host address is to use the keyword host when creating the access list.break
Page 102
router(config)#access-list 1 deny?
  Hostname or A.B.C.D Address to match
  any      Any source host
  host     A single host address
router(config)#access-list 1 deny host?
  Hostname or A.B.C.D Host address
router(config)#access-list 1 deny host 172.16.3.1?
  <cr>
List the access list to see if there is any difference from the preceding example.
router#show access-lists
Standard IP access list 1
  deny       172.16.3.1
As we can see, there is no difference. The forms 172.16.3.1 0.0.0.0 and 172.16.3.1 are identical.
From the access-list listing we can see that only one statement is contained in the access list, but
there are actually two statements. The last statement in an IP access list is always a deny any
statement. This has the effect of denying all IP traffic and is implicitly added at the end of every
access list. The access list that we created actually contains
Standard IP access list 1
  deny       172.16.3.1
  deny       any         (implicit)
A very common mistake when working with access lists is to forget the implicit deny any

statement that the router adds at the end of the access list. Sometimes this implicit statement is
useful, as we shall see, but many times it can cause your access list to filter traffic that you had
no intention of filtering. For this example we only want to deny one host from accessing network
172.16.2.0 and allow any other host to access this network, so we need to permit all other hosts.
router(config)#access-list 1 permit any
The access list now contains the statements to accomplish our objective.break
router#show access-lists
Standard IP access list 1
  deny       172.16.3.1
  permit any
Page 103
For an access list to be active, it must be applied to a router interface in interface configuration
mode. From Fig. 7-2 we can see that we have six interfaces on which we can apply the access
list. Of course, the access list would have to be created on the router that we are going to use to
filter the traffic. Where is the best place to put the access list? Our goal is to block host
172.16.3.1 from reaching network 172.16.2.0 but not to interfere with host 1's traffic in any other
way. If we put the access list on the Ethernet interface on router r3, we would block all of host 1's
traffic. A standard IP access list can only filter on the source address, not the destination address.
If the access list is placed on router r3, then host 1 could not reach network 172.16.4.0 or any
other network. A good rule for standard access lists is stated below and should be committed to
memory.
Note
A standard access list should be applied as close to the destination as possible.
This rule means that we must place the standard access list on the router directly attached to the
network that we are trying to deny access to. Therefore, the access list for this example should be
placed on router r1. Now that we have decided on which router to place the access list, the next
question is on which interface should we place it. We can use the access list to filter traffic
coming in the serial interface or going out the Ethernet interface. For this example the interface
makes no difference, but it will soon. The commands for placing the access list on the interfaces
are shown below.
For the serial interface
r1(config)#interface serial 0
r1(config-if)#ip access-group?
   <1–199>        IP access list (standard or extended)
   WORD           Access-list name
r1(config-if)#ip access-group 1?
   in             inbound packets
   out            outbound packets
   <cr>
r1(config-if)#ip access-group 1 in

For the Ethernet interfacebreak
r1(config)#interface Ethernet 0
r1(config-if)#ip access-group?
r1(config-if)#ip access-group 1 out
Page 104
Figure 7-3
An input access list on router r1 will deny host 1 access to networks 2.0 and 5.0.
The IP access-group interface configuration command is used to associate an access list with the
interface. Which way is preferred? For this example, placing the access list on the serial interface
as an input list will relieve the router of having to route the packet to the Ethernet interface,
thereby making the process more efficient. If router r1 has multiple attached networks, as shown
in Fig. 7-3, then the serial interface is not the place to put the access list. Can you determine
why?
If host 1 tries to access a resource on network 172.16.5.0, the input access list on the serial
interface of router r1 will block the traffic because an access list can only filter traffic based on
the source address. For this scenario, the best place to put the access list is on the output of the
Ethernet interface on router r1. Host 1 could then access network 172.16.5.0 but not 172.16.2.0.
Is there an input access list we can use on the serial interface of router r1 so that host 1 can reach
network 172.16.5.0 but not 172.16.2.0? The answer is no. In order to do this, we will need to use
an extended IP access list, which we will cover shortly. Before doing so, we need to look at the
mechanics of building access lists. Whenever we add a permit or deny statement to an access list,
the statement is inserted at the end of the list. Well, almost the end of the list. Actually, the
statement is inserted as the second to the last statement because the implicit deny any
statement is always the last statement. If you create an access list and you notice that your permit
and deny statements are not in the proper order, there is no way to delete a statement or insert a
statement any-soft

Page 105
where in the list. The only choice is to delete the access list and start over. The no form of the
command is used to delete an access list.
r1#configure terminal
Enter configuration commands, one per line. End with CNTL/Z.
r1(config)#no access-list 1
We have seen how to deny a host access to a network using a standard IP access list. We also can
deny access to an entire network with a standard IP access list. For example, we want to deny all
hosts on network 172.16.3.0 from reaching network 172.16.2.0. How can we accomplish this
goal? Remember that the wildcard bits are used to determine which part of the address is used
when determining if traffic is to be filtered. To deny access to the entire 172.16.3.0 network, we
would use the source/wildcard bits pair shown below.
172.16.3.0 0.0.0.255
In other words, we do not care what the last octet of the source address is, and any address in the
range 172.16.3.0 to 172.16.3.255 will match. The corresponding access list for this case is
Standard IP access list 1
  deny       172.16.3.0, wildcard bits 0.0.0.255
  permit any
One final standard IP access-list example is in order. Assume that we only want hosts on network
172.16.3.0 to be able to access network 172.16.2.0. How would we do this? The following access
list will accomplish this goal.
Standard IP access list 1
  permit 172.16.3.0, wildcard bits 0.0.0.255
Any traffic with a source IP address of 172.16.3.x would be allowed, and all other traffic would
be denied because of the implicit deny any statement at the end of the list. Standard IP
access lists either permit or deny all IP traffic from a source that has an address that matches the
permit or deny statements, regardless of the traffic type or destination. Extended IP access lists
should be used when we want to filter traffic based on the destination or type of traffic. Before
we cover the commands for extended IP access lists, we need to examine layer 4 protocol packet
headers to determine what information is available to an extended IP access list.break
Page 106
User Datagram Protocol
The User Datagram Protocol (UDP) is a connectionless protocol that uses IP as its transport
mechanism. The format of a UDP packet is shown in Fig. 7-4.
The UDP source and destination ports identify the upper-layer application that is using UDP. The

source port is optional, and if it is not used, then this field should be set to zero. Table 7-1 lists
some of the common UDP port numbers.
The UDP message-length field is the length, in bytes, of the UDP datagram including the UDP
header and data. If the datagram contains no data, then the length is 8 bytes, which is the
minimum length for a UDP datagram. The UDP checksum is zero if it is not used. If thecontinue
Figure 7-4
User Datagram Protocol (UDP) packet format.
TABLE 7-1 Common UDP Port Numbers
UDP Port
Number Decimal
UDP Port Number
Hexadecimal
 Application
  7
  7
Echo (PING)
37
25
Time
53
35
DNS
67
43
BOOTP server
68
44
BOOTP client
69
45
TFTP
Page 107
checksum is used, then it is computed for the UDP header, data, and information that is not
included in the UDP datagram. The additional information is contained in a UDP pseudoheader,
shown in Fig. 7-5.
The pseudoheader is not part of the UDP datagram, and it is used only to compute the UDP
checksum. Since the UDP datagram does not contain either a source or destination IP address, it
is possible for a UDP packet to arrive at the wrong destination. UDP will ''peer" into the IP
packet header and use the destination address to compute the checksum. This may seem like a
violation of the Internet layered model, and it is. The pseudoheader is used to ensure that the

UDP datagram arrives at the proper destination. Since the IP packet checksum only includes the
IP header, the UDP checksum is normally used to detect any transmission errors that may have
corrupted the UDP packet. Once the UDP datagram has been created, it is encapsulated as the
data portion in an IP packet as shown in Fig. 7-6.
Transmission Control Protocol
The Transmission Control Protocol (TCP) is a connection-oriented protocol that uses IP as its
transport mechanism. The format of a TCP packet is shown in Fig. 7-7.break
Figure 7-5
UDP pseudoheader format.
Figure 7-6
Encapsulation of a UDP datagram in an IP packet.
Page 108

Figure 7-7
TCP segment format.
The fields that we are concerned with in the TCP segment header are the source and destination
ports. As with UDP, these port numbers specify the upper-level application that is using TCP.
Some common TCP port numbers are listed in Table 7-2.
The TCP checksum uses a pseudoheader, which is identical to the UDP pseudoheader. This
chapter is not concerned about the operation of TCP but only the information contained in the
TCP header that can be applied to extended access lists. A complete understanding of
TCPcontinue
TABLE 7-2 Common TCP Port Numbers
UDP Port
Number Decimal
UDP Port Number
Hexadecimal
 Application
  7
  7
Echo (PING)
   21
15
FTP
   23
17
TELNET
   25
19
SMTP
   79
4F
FINGER
   80
4F
HTTP/WWW
     110
6E
POP-3
Page 109
will help you to be a better network designer, and I have included references at the end of this
chapter for further study of UDP and TCP.

Once the TCP segment has been created, it is encapsulated as the data portion in an IP packet, as
shown in Fig. 7-8.
Extended IP Access Lists
An extended IP access list can be used to filter IP traffic based on the source and destination IP
addresses contained in the IP header. Extended IP access lists also can be used to filter traffic
based on the IP, UDP, and TCP port numbers contained in their respective headers. An extended
access list is created in global configuration mode as shown. Extended IP access lists are
identified by a number in the range from 100 to 199, so a router can have a maximum of 99
extended IP access lists active simultaneously.break
r1(config)#access-list?
   <1–99>                IP standard access list
   <100–199>             IP extended access list
   <1000–1099>           IPX SAP access list
   <1100–1199>           Extended 48-bit MAC address access list
   <1200–1299>           IPX summary address access list
   <200–299>             Protocol type-code access list
   <300–399>             DECnet access list
   <400–499>             XNS standard access list
   <500–599>             XNS extended access list
   <600–699>             Appletalk access list
   <700–799>             48-bit MAC address access list
   <800–899>             IPX standard access list
   <900–999>             IPX extended access list
Figure 7-8
Encapsulation of a TCP segment in an IP packet.
Page 110
Chose a number in the range 100 to 199.
r1(config)#access-list 100?
   deny             Specify packets to reject
   dynamic          Specify a DYNAMIC list of PERMITs or DENYs
   permit           Specify packets to forward
We have an option that did not exist with standard IP access lists, the dynamic list. Dynamic lists
are covered at the end of this chapter. Select either permit or deny, and then determine the next

parameter.
r1(config)#access-list 100 deny?
   <0–255>         An IP protocol number
   eigrp           Cisco's EIGRP routing protocol
   gre             Cisco's GRE tunneling
   icmp            Internet Control Message Protocol
   igmp            Internet Gateway Message Protocol
   igrp            Cisco's IGRP routing protocol
   ip              Any Internet Protocol
   ipinip          IP in IP tunneling
   nos             KA9Q NOS compatible IP over IP tunneling
   ospf            OSPF routing protocol
   tcp             Transmission Control Protocol
   udp             User Datagram Protocol
As you can see, we have many more options that we had with standard access lists. The options
that we will explore are the IP, UDP, TCP, and ICMP options.
r1(config)#access-list 100 deny ip?
   A.B.C.D        Source address
   Any            Any source host
   Host           A single source host
The source address is entered the same way as a standard access list, as an address and wildcard
mask. Assume that we want to block host 172.16.3.1 from accessing network 172.16.2.0 in Fig.
7-2. We have seen that there are two ways of entering a host address.
r1(config)#access-list 100 deny ip 172.16.3.1?
   A.B.C.D Source wildcard bits
r1(config)#access-list 100 deny ip 172.16.3.0 0.0.0.0?
   A.B.C.D        Destination address
   Any            Any destination host
   Host           A single destination host
Extended IP access lists have the additional selection for the destination address, which was not
present with a standard IP access list.continue
Page 111
The destination address is entered exactly as we entered the source address.
r1(config)#access-list 100 deny ip 172.16.3.1 0.0.0.0 172.16.2.0?
   A.B.C.D Destination wildcard bits
This deny statement is sufficient to block access to network 172.16.2.0 from host 1. Additionally,
we can base the deny action on the precedence or TOS parameters present in the IP header.
r1(config)#access-list 100 deny ip 172.16.3.0 0.0.0.255 172.16.2.0 0.0.0.255?
   log                Log matches against this entry
   log-input          Log matches against this entry, including input interfac
   precedence         Match packets with given precedence value
   tos                Match packets with given TOS value
   <cr>

r1(config)#Sip 172.16.3.0 0.0.0.255 172.16.2.0 0.0.0.255 precedence?
   <0–7>                  Precedence value
   critical               Match packets with critical precedence (5)
   flash                  Match packets with flash precedence (3)
   flash-override         Match packets with flash override precedence (4)
   immediate              Match packets with immediate precedence (2)
   internet               Match packets with internetwork control precedence (
   network                Match packets with network control precedence (7)
   priority               Match packets with priority precedence (1)
   routine                Match packets with routine precedence (0)
r1(config)#Sip 172.16.3.0 0.0.0.255 172.16.2.0 0.0.0.255 tos?
   <0–15>                 Type of service value
   max-reliability        Match packets with max reliable TOS (2)
   max-throughput         Match packets with max throughput TOS (4)
   min-delay              Match packets with min delay TOS (8)
   min-monetary-cost      Match packets with min monetary cost TOS (1)
   normal                 Match packets with normal TOS (0)
List the extended access list that we have entered.
r1#show access-lists 100
Extended IP access list 100
  deny         ip host 172.16.3.1 172.16.2.0 0.0.0.255
The difference between the extended and standard access lists, at least with this example, is the
addition of the destination address. As with standard access lists, there is an implicit deny
any any at the end of the list, so we need to add the statement permit any any as the last
statement that we enter (but not always).break
Page 112
r1(config)#access-list 100 permit ip any any
r1#show access-lists 100
Extended IP access list 100
  deny ip host 172.16.3.1 172.16.2.0 0.0.0.255
  permit ip any any
We deduced that the best location for a standard access list was as close to the destination as
possible. Where would be the best place to put an extended IP access list? We could put the
access list on router r1 in Fig. 7-2, but the traffic would have to propagate through routers r2 and
r3 before reaching router r1. Since we know both the source and destination addresses, the traffic
can be blocked by router r3 at the input to the Ethernet interface. Therefore, the rule to remember
for extended IP access lists is as follows:
Note
An extended access list should be applied as close to the source as possible.
Even though the list would operate properly on any of the routers, we want to stop the traffic as
soon as possible in order to reduce the bandwidth utilization of the network.

Traffic also can be filtered based on the information contained in the UDP or TCP headers. First,
we will examine the filtering of UDP packets.
r1(config)#access-list 100 deny udp?
   A.B.C.D Source address
   any           Any source host
   host          A single source host
Again, we need to input the source address to filter. For this example we will use the host
keyword.break
r1(config)#access-list 101 deny udp host 172.16.3.1?
   A.B.C.D              Destination address
   any                  Any destination host
   eq                   Match only packets on a given port number
   gt                   Match only packets with a greater port number
   host                 A single destination host
   lt                   Match only packets with a lower port number
   neq                  Match only packets not on a given port number
   range                Match only packets in the range of port numbers
Page 113
r1(config)#access-list 100 deny udp 172.16.3.0 0.0.0.255 eq?
   <0–65535>            Port number
   biff                 Biff (mail notification, comsat, 512)
   bootpc               Bootstrap Protocol (BOOTP) client (68)
   bootps               Bootstrap Protocol (BOOTP) server (67)
   discard              Discard (9)
   dnsix                DNSIX security protocol auditing (195)
   domain               Domain Name Service (DNS, 53)
   echo                 Echo (7)
   mobile-ip            Mobile IP registration (434)
   nameserver           IEN116 name service (obsolete, 42)
   netbios-dgm          NetBios datagram service (138)
   netbios-ns           NetBios name service (137)
   ntp                  Network Time Protocol (123)
   rip                  Routing Information Protocol (router, in.routed, 520)
   snmp                 Simple Network Management Protocol (161)
   snmptrap             SNMP Traps (162)
   sunrpc               Sun Remote Procedure Call (111)
   syslog               System Logger (514)
   tacacs               TAC Access Control System (49)
   talk                 Talk (517)
   tftp                 Trivial File Transfer Protocol (69)
   time                 Time (37)
   who                  Who service (rwho, 513)
   xdmcp                X Display Manager Control Protocol (177)
The available options for UDP are quite extensive. In general, we can accomplish the following
with UDP filters:
1. Filter UDP based on source and destination IP addresses.
access-list 100 deny udp 172.16.3.1 0.0.0.0 172.16.2.0 0.0.0.255

2. Filter UDP based on source address and UDP port number and on a destination address.
access-list 100 deny udp 172.16.3.1 0.0.0.0 eq tftp 172.16.2.0 0.0.0.255
3. Filter UDP based on a source address and destination address and port number.
access-list 100 deny udp 172.16.3.1 0.0.0.0 172.16.2.0 0.0.0.255 eq tftp
4. Filter UDP based on a source address and port number and a destination address and port
number.break
access-list 100 deny udp 172.16.3.1 0.0.0.0 eq tftp 172.16.2.0 0.0.0.255 eq tf
Page 114
For the port numbers, we can use the keywords eq for equal, gt for greater than, lt for less
than, and neq for not equal to. We also can enter a range of UDP ports numbers.
access-list 100 deny udp host 172.16.3.1 range echo tftp 172.16.2.0 0.0.0.255 
At this point you may be tempted to think that this is getting carried away, and I would agree.
The most common form you will see is form 3, since typically the source and destination port
numbers are the same or the source port number is not used. If we want to prevent host 1 in Fig.
7-1 from being able to tftp to network 172.16.2.0, we would use the extended access list shown
below.
Extended IP access list 100
  deny udp host 172.16.3.1 172.16.2.0 0.0.0.255 eq tftp
  permit ip any any
Filtering based on TCP port numbers is identical to filtering based on UDP port numbers.break
r1(config)#$ 100 deny top?
   A.B.C.D          Source address
   any              Any source host
   host             A single source host
r1(config)#$ 100 deny top 172.16.2.0 0.0.0.255 172.16.3.0 0.0.0.255?
   eq               Match only packets on a given port number
   established      Match established connections
   gt               Match only packets with a greater port number
   log              Log matches against this entry
   log-input        Log matches against this entry, including input interface
   lt               Match only packets with a lower port number
   neq              Match only packets not on a given port number
   precedence       Match packets with given precedence value
   range            Match only packets in the range of port numbers
   tos              Match packets with given TOS value
   <cr>
r1(config)#access-list 100 deny tcp any any eq?
   <0–65535>          Port number

   bgp                Border Gateway Protocol (179)
   chargen            Character generator (19)
   cmd                Remote commands (rcmd, 514)
   daytime            Daytime (13)
   discard            Discard (9)
   domain             Domain Name Service (53)
   echo               Echo (7)
   exec               Exec (rsh, 512)
Page 115
   finger             Finger (79)
   ftp                File Transfer Protocol (21)
   ftp-data           FTP data connections (used infrequently, 20)
   gopher             Gopher (70)
   hostname           NIC hostname server (101)
   ident              Ident Protocol (113)
   irc                Internet Relay Chat (194)
   klogin             Kerberos login (543)
   kshell             Kerberos shell (544)
   login              Login (rlogin, 513)
   lpd                Printer service (515)
   nntp               Network News Transport Protocol (119)
   pop2               Post Office Protocol v2 (109)
   pop3               Post Office Protocol v3 (110)
   smtp               Simple Mail Transport Protocol (25)
   sunrpc             Sun Remote Procedure Call (111)
   syslog             Syslog (514)
   tacacs             TAC Access Control System (49)
   talk               Talk (517)
   telnet             Telnet (23)
   time               Time (37)
   uucp               Unix-to-Unix Copy Program (540)
   whois              Nicname (43)
   www                World Wide Web (HTTP, 80)
For example, assume that we want to allow any host to access a Web server on network
172.16.2.0 but deny all other traffic to network 172.16.2.0. The access list we can use is shown
below.
Extended IP access list 102
  permit tcp any 172.16.2.0 0.0.0.255 eq www
Notice that the deny any any statement that is implicit at the end of the list is exactly what
we want. This access list permits only Web traffic and prevents all others.
Finally, I want to take at look at Internet Control Message Protocol (ICMP) filtering. The most
familiar ICMP function is echo, or PING.break
r1(config)#access-list 100 deny icmp?
   A.B.C.D Source address
   any                                 Any source host
   host                                A single source host
r1(config)#$ 100 deny icmp?
   <0–255>                             ICMP message type
   administratively-prohibited         Administratively prohibited

   alternate-address                   Alternate address
   conversion-error                    Datagram conversion
   dod-host-prohibited                 Host prohibited
Page 116
   dod-net-prohibited                  Net prohibited
   echo                                Echo (ping)
   echo-reply                          Echo reply
   general-parameter-problem           Parameter problem
   host-isolated                       Host isolated
   host-precedence-unreachable         Host unreachable for precedence
   host-redirect                       Host redirect
   host-tos-redirect                   Host redirect for TOS
   host-tos-unreachable                Host unreachable for TOS
   host-unknown                        Host unknown
   host-unreachable                    Host unreachable
   information-reply                   Information replies
   information-request                 Information requests
   log                                 Log matches against this entry
   log-input                           Log matches against this entry, includi
                                        interface
   mask-reply                          Mask replies
   mask-request                        Mask requests
   mobile-redirect                     Mobile host redirect
   net-redirect                        Network redirect
   net-tos-redirect                    Net redirect for TOS
   net-tos-unreachable                 Network unreachable for TOS
   net-unreachable                     Net unreachable
   network-unknown                     Network unknown
   no-room-for-option                  Parameter required but no room
   option-missing                      Parameter required but not present
   packet-too-big                      Fragmentation needed and DF set
   parameter-problem                   All parameter problems
   port-unreachable                    Port unreachable
   precedence                          Match packets with given precedence val
   precedence-unreachable              Precedence cutoff
   protocol-unreachable                Protocol unreachable
   reassembly-timeout                  Reassembly timeout
   redirect                            All redirects
   router-advertisement                Router discovery advertisements
   router-solicitation                 Router discovery solicitations
   source-quench                       Source quenches
   source-route-failed                 Source route failed
   time-exceeded                       All time exceededs
   timestamp-reply                     Timestamp replies
   timestamp-request                   Timestamp requests
   tos                                 Match packets with given TOS value
   traceroute                          Traceroute
   ttl-exceeded                        TTL exceeded
   unreachable                         All unreachables
As you can see, there are many choices, but they are entered in the same manner as UDP and
TCP access lists. If we want to prevent host 1 in Fig. 7-1 from being able to ping the Ethernet
interface on router r1, we could use the access list shown below.break

Page 117
Extended IP access list 151
  deny   udp host 172.16.3.1 host 172.16.2.1 eq echo
permit ip any any
One final property of access lists should be mentioned. An access list cannot be used to filter
traffic that originates in the router. For example, if we want to prevent router r3 in Fig. 7-2 from
being able to ping router r1, the access list cannot be placed on router r3, since access lists do not
affect traffic that originates in the router.
Dynamic Access Lists
The network in Fig. 7-9 contains a server on network 172.16.4.0 with IP address 172.16.4.1. We
want hosts on network 172.16.3.0 to only have telnet access to this server, so we can use an
extended IP access list to filter telnet traffic to this network.
The access list on router r1 should allow telnet but block all other traffic.
access-list 100 permit tcp any host 172.16.4.1 eq telnet
This access list would then be applied to the Ethernet 0 interface on router r1 as an input access
group.
interface Ethernet0
  ip address 172.16.3.2 255.255.255.0
  ip access-group 100 in
Assume that at times a particular user on network 172.16.3.0 needs access to network 172.16.4.0
using applications other than telnet. With thecontinue
Figure 7-9
Prevent hosts on network 172.16.3.0 from opening a telnet session to server 172.16.4.2.
Page 118
applied access list, this would not be possible. We could modify the access list to allow this a
host access as shown.
access-list 100 permit tcp any host 172.16.4.1 eq telnet
access-list 100 permit ip host 172.16.3.1 any
This would accomplish our goal of allowing host 172.16.3.1 to be able to access network

172.16.4.0. The problem is that the user must be logged into host 172.16.3.1. Also, anyone
logged into that particular host can gain access to the network. This may not be what is intended.
A more secure method is to use a dynamic IP access list, also referred to as lock-and-key security.
The idea behind lock-and-key security is to allow a user to temporarily open a hole in the access
list using a dynamic access list. The mechanics for lock-and-key security are
1. The user telnets into the router via the virtual terminal port.
2. The router opens a telnet session and prompts the user for a password. Several methods are
available for user authentication, such as local authentication, TACACS+, or RADIUS.
3. When the user successfully passes authentication, it is logged out of the router, and a
temporary entry is created in the access list.
4. The authenticated user can now access the server.
5. The dynamic access list will be deleted after a configured timeout has expired.
For this example we will use local authentication for the user. First, create a username and
password on the route.
r1(config)#username elvis password king
Next, enable local login authentication on the vty lines.
r1(config)#line vty 0 4
r1(config-line)#login?
   local        Local password checking
   tacacs       Use tacacs server for password checking
   r1(config-line)#login local
Create the dynamic access list on the router.
access-list 100 dynamic allow_elvis timeout 5 permit ip any any
The dynamic access list is given a name, allow_elvis, and an idle timeout in minutes.break
Page 119
Finally configure the virtual terminal lines to allow activation of the dynamic access list.
r1(config)#line vty 0 4
r1(config-line)#login local
r1(config-line)#autocommand
r1(config-line)#autocommand?
   LINE Appropriate EXEC command
r1(config-line)#autocommand access-enable timeout 10
The timeout specified is an absolute timeout value and should be greater than the timeout
specified for the access-list idle timeout.
When a user telnets into the router as user elvis and supplies the correct password, the user will
be logged out and the dynamic access list will be invoked, allowing the user access to network

172.16.4.0.
For further study of IP, UDP, and TCP, I suggest two very good books. The first is by Douglas E.
Comer, entitled, Internetworking with TCP/IP, vol. 1, published by Prentice-Hall. The second is
by W. Richard Stevens, entitled, TCP/IP Illustrated, vol. 1, published by Addison-Wesley.
Summary
IP access lists are used to restrict access to selected parts of the network. In later chapters we will
see how access lists can be used to influence routing updates between routers. IP access lists are
applied to every IP packet that meets the criteria of the list, having an impact on router
performance. For example, an input IP access list will be applied to every IP packet entering the
router, so employ access lists only when necessary.
Main Points
1. Standard IP access lists
2. Extended IP access lists
3. Access list placement
4. Dynamic access listsbreak
Page 121
Chapter 8—
Configuring RIP
Page 122
How do I get to San Jose? Practice,, practice. The only successful method that I have found for
becoming proficient with routers and preparing for the CCIE exam is hands-on experience. In
this chapter and the chapters to follow I strongly recommend that you have at lest two routers
available so you can implement all the configurations that will be discussed. These routers do not
have to be anything fancy. All that is required is a current version of the Cisco IOS and a way to
connect the two routers, either with Ethernet or with synchronous serial. Configure the routers as
discussed in the text, and try any variation you can imagine.
RIP Version 1
The network in Fig. 8-1 will be used to demonstrate the various configuration commands
possible with RIP Version 1.
Router r1 Configuration                 Router r2 Configuration

hostname r1                             hostname r2
enable password cisco                   enable password cisco
interface Loopback0                     interface Loopback0
ip address 172.16.1.1 255.255.255.0     ip address 172.16.4.1 255.255.255.0
interface Loopback1                     interface Loopback1
ip address 172.16.2.1 255.255.255.0     ip address 172.16.5.1 255.255.255.0
interface Ethernet0                     interface Ethernet0
ip address 172.16.3.1 255.255.255.0     ip address 172.16.3.2 255.255.255.0
As you can see in Fig. 8-1, we only need one physical interface on each router. The other
networks in the examples that follow will be simulated using loopback interfaces. The first step
in configuring the Routing Information Protocol (RIP) is to start the RIP routing process. This is
accomplished by entering configuration mode and enabling the RIP process.break
Figure 8-1
Network configuration for RIP examples.
Page 123
r1#configure terminal
Enter configuration commands, one per line. End with CNTL/Z
r1(config)#router rip
r1(config-router)#
The RIP routing process needs to know which networks to advertise. For router r1, we want to
advertise networks 172.16.1.0, 172.16.2.0, and 172.16.3.0. The network command is used to
inform RIP which networks to advertise in the routing updates.
r1(config-router)#network 172.16.1.0
r1(config-router)#network 172.16.2.0
r1(config-router)#network 172.16.3.0
r1(config-router)#
At this point, list the current router configuration to see how we have configured the basic RIP
routing process.
router rip
  network 172.16.0.0
Why does the configuration show only one network command when we entered three?
Remember from Chap. 5 that RIP Version 1 does not transmit subnet masks in the routing
updates. You can only enter major network numbers with the RIP network configuration
command. Since all of router r1's attached networks belong to the class B network 172.16.0.0,

this is the network that RIP will advertise. The network command also determines which
interfaces will send and receive RIP routing updates. Since all our networks belong to 172.16.0.0,
RIP will send and receive updates on all the interfaces. The configuration on router r2 will be
identical to the configuration of router r1.
r2(config-router)#network 172.16.0.0
r2(config-router)#
How many routes will RIP advertise is this situation, one or three? Remember that RIP Version 1
will only advertise subnets of a major network out on interface if those networks have the same
subnet mask as the interface on which they will be transmitted. Since all our networks have an
identical 24-bit subnet mask, RIP will advertise three routes, and the receiving router, r2, will
assume that all the advertised networks it receives for major network 172.16.0.0 have the same
subnet mask as the interface on which the routes were received. To determine if routers
r1continue
Page 124
and r2 are exchanging routing updates, use the command show IP route on routers r1 and r2.
r1#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-, L1 - IS-IS level-1, L2 - IS-IS level-2, · -  candidate default
  U - per-user static route
Gateway of last resort is not set
  172.16.0.0/16 is subnetted, 5 subnets
R   172.16.4.0 [120/1] via 172.16.3.2, 00:00:07, Ethernet0
R   172.16.5.0 [120/1] via 172.16.3.2, 00:00:07, Ethernet0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
r2#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, · - candidate default
  U - per-user static route
Gateway of last resort is not set
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
R   172.16.1.0 [120/1] via 172.16.3.1, 00:00:22, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:22, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
Notice that routers r1 and r2 have three directly connected routes and two routes that have been
learned from RIP. Each entry in the routing table contains the following information:
__ How the router was learned (C—directly connected; R—from RIP).

__ The destination network.
__ The administrative distance and hop count (120/1) for RIP or directly connected.
__ For RIP, the transit network (via 172.16.3.1).
__ The age of the route—00:00:22. RIP transmits routing updates every 30 s, and this entry
shows how much time has elapsed since the last update for this route.
__ The interface to use when sending a packet to the destination network.break
Page 125
This is the minimum configuration required to enable RIP Version 1. The IP routing table
contains the information necessary for each router to determine how to route a packet to a
destination network. For the connected networks, the router needs only to forward a packet
destined for a host on the network out the directly connected interface. For packets destined for a
network not on a directly connected interface, the router must determine which interface should
be used to forward the packet.
What happens if the subnet masks are not identical? Assume that the two networks on router r1,
Loopback 0 and Loopback 1, will have no more than 14 hosts each. We can use VLSM to
sub-subnet network 172.16.1.0 into two networks using a 28-bit subnet mask, as shown in Fig.
8-2.
Router r1 configuration changes
interface Loopback0
ip address 172.16.1.17 255.255.255.240
interface Loopback 1
ip address 172.16.1.33 255.255.255.240
How will this affect the RIP updates? If we examine the routing table for router r2, we see that
the new sub-subnetted routes do not appear. The clear ip route * command is used
because RIP will remember the old routes for 4 minutes. This command will clear the IP routing
table and force a routing table update so that we can see the effect of the router configuration
changes.break
r2#clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 3 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0

Figure 8-2
Using VLSM on router r1 on the same major network.
Page 126
Router 1 will not advertise networks 172.16.1.16 and 172.16.1.32 out network 172.16.3.0
because the subnet masks for these networks are unequal. If RIP Version 1 is going to be
deployed on a network, then the networks that you want to advertise must all have the same
subnet masks if they are contained in the same major network number. For this example the
major network number is 172.16.0.0. What if these sub-subnetted networks use a different major
subnet number, say, 173.16.0.0, as shown in Fig. 8-3?
Router r1 configuration changes
interface Loopback0
ip address 173.16.1.17 255.255.255.240
interface Loopback 1
ip address 173.16.1.33 255.255.255.240
router rip
network 172.16.0.0
network 173.16.0.0
r2# clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 3 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
R   173.16.0.0/16 [120/1] via 172.16.3.1, 00:00:14, Ethernet0
Notice that router r1 is advertising network 173.16.0.0, enabling router r2 to reach the two
173.16 networks on router r1. The subnet mask is different than the mask used for the 172.16
network, but since these are different major network numbers, RIP will advertise them. Also
notice that RIP Version 1 automatically summarizes network 173.16.0.0. What happens if we
assign networks for the sub-subnetted network 173.16.0.0 on router r2 (Fig. 8-4).break

Figure 8-3
Using VLSM on router r1 on a different major network.
Page 127
Figure 8-4
Using VLSM on routers r1 and r2 on a different major network.
Router r2 configuration changes
interface Loopback0
ip address 173.16.1.49 255.255.255.240
interface Loopback 1
ip address 173.16.1.65 255.255.255.240
router rip
network 172.16.0.0
network 173.16.0.0
The routing table for router r2 now contains
r2#clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, Ethernet0
  173.16.0.0/16 is subnetted, 2 subnets
C   173.16.1.48 is directly connected, Loopback0
C   173.16.1.64 is directly connected, Loopback1
Where are the routes to 173.16.1.16 and 173.16.1.32? Recall how the RIP algorithm operates.
Router r1 is advertising the route 173.16.0.0 with a hop count of 0, meaning they are connected
directly. Router r2 is also directly connected to network 173.16.0.0, so from router r2's
perspective, it has a better route to 173.16.0.0 and so router r2 will ignore the route to 173.16.0.0
that router r1 is advertising. Of course, this situation is not common, but it does illustrate the
problems that can occur will RIP Version 1, since RIP Version 1 does not advertise subnet
information in the routing updates.

This scenario, of course, is very unlikely. Using an entire class B network for the common
network between routers r1 and r2 does not make sense but does illustrate the behavior of RIP
Version 1. What would happen if the link between routers r1 and r2 were on the same major
network as the other interfaces (Fig. 8-5)?
As long as the subnet mask used is consistent, then all the routes will be propagated. Assume that
we have changed the addresses of the common interfaces to 173.16.1.82/28 (r1) and
173.16.1.81/28 (r2). The routingcontinue
Page 128
Figure 8-5
Using VLSM on the entire network 172.16.0.0
tables for routers r1 and r2 will contain routes to all the networks in the configuration.
Router r1 configuration changes                 Router r2 configuration change
Interface Ethernet 0                            Interface Ethernet 0
ip address 173.16.1.81 255.255.255.240          ip address 173.16.1.82 255.255
router rip                                      router rip
no network 172.16.0.0                           no network 172.16.0.0
r1#clear ip route *
r1#show ip route
  173.16.0.0/16 is subnetted, 5 subnets
R   173.16.1.48 [120/1] via 173.16.1.81, 00:00:14, Ethernet0
C   173.16.1.32 is directly connected, Loopback1
C   173.16.1.16 is directly connected, Loopback0
C   173.16.1.80 is directly connected, Ethernet0
R   173.16.1.64 [120/1] via 173.16.1.81, 00:00:15, Ethernet0
r2#clear ip route *
r2#show ip route
  173.16.0.0/16 is subnetted, 5 subnets
C   173.16.1.48 is directly connected, Loopback0
R   173.16.1.32 [120/1] via 173.16.1.82, 00:00:00, Ethernet0
R   173.16.1.16 [120/1] via 173.16.1.82, 00:00:00, Ethernet0
C   173.16.1.80 is directly connected, Ethernet0
C   173.16.1.64 is directly connected, Loopback1

We will now return to the network in Fig. 8-1 and examine the other commands available for
configuring RIP. These commands can be listed by entering RIP configuration mode and typing a
question mark.break
r1(config)#router rip
r1(config-router)#?
Router configuration commands:
auto-summary            Enable automatic network number summarization
default-information     Control distribution of default information
default-metric          Set metric of redistributed routes
distance                Define an administrative distance
distribute-list         Filter networks in routing updates
Page 129
exit                    Exit from routing protocol configuration mode
help                    Description of the interactive help system
neighbor                Specify a neighbor router
network                 Enable routing on an IP network
no                      Negate a command or set its defaults
offset-list             Add or subtract offset from IGRP or RIP metrics
output-delay            Interpacket delay for RIP updates
passive-interface       Suppress routing updates on an interface
redistribute            Redistribute information from another routing protocol
timers                  Adjust routing timers
validate-update-source  Perform sanity checks against source address of routin
                          updates
version                 Set routing protocol version
Command
auto-summary
Purpose
Automatic for RIP Version 1; see section on RIP Version 2
Command
default-information
Purpose
This command will be covered in Chap. 13.
Command
default-metric
Purpose
A router may be running more that one IP routing protocol (RIP,
IGRP, EIGRP, or OSPF). Each routing protocol has a different
metric; RIP has a hop count and OSPF has a dimensionless cost.
When injecting routes from one routing protocol to another, the route
metric needs to be converted from one protocol to another. The
default-metric command is used to perform this conversion.
This will be covered in detail in Chap. 13.
Command
distance

Command
distance
Purpose
Used to adjust the administrative distance of a route.
r2(config)#router rip
r2(config-router)#distance?
   <1-255> Administrative distance
Enter an administrative distance in the range 1 to 255. The default for RIP is 120. The
administrative distance is used when more than one routing protocol is active on a router. For
example, if we are running RIP and OSPF and each protocol has a route to the same network, the
OSPF route would be preferred because OSPF has a lower administrative distance (110) than
RIP (120). We can force the RIP route to be chosen by setting the administrative distance to be
lower than that for OSPF.break
r2(config-router)#distance 130?
   A.B.C.D IP Source address
<cr>
Page 130
Choosing <cr> will set the administrative distance to all routes learned from RIP to the number
entered, in this case 130. This can be seen by examining the IP routing table.
r2#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
R   172.16.1.0 [130/1] via 172.16.3.1, 00:00:22, Ethernet0
R   172.16.2.0 [130/1] via 172.16.3.1, 00:00:22, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
If you want to adjust the administrative distance for a particular IP network, use the form
r2(config-router)#distance 130 172.16.0.0?
   A.B.C.D IP address mask
r2(config-router)#distance 130 172.16.0.0 0.0.255.255?
   <1-99> IP Standard access list number
   <cr>
Entering <cr> will apply the new administrative distance only to network 172.16.0.0. Notice that
the IP address mask is the ''reverse" of what is used for a subnet mask. This is the same style used
for IP access lists, which were discussed in Chap. 7. Since router r2 is only learning about
network 172.16.0.0 from router r1, this has the same effect as applying the administrative
distance to all networks learned from RIP. Finally, we can choose the routes that will have their
administrative distance modified through the use of an IP access list. Assume that we want to
change the administrative distance of the route to 172.16.1.0 to 130 but not affect the route to
172.16.2.0. First, we would use the RIP command
r2(config-router)#distance 130 172.16.0.0 0.0.255.255?
   <1-99> IP Standard access list number
   <cr>

r2(config-router)#distance 130 172.16.0.0 0.0.255.255 1?
   <cr>
r2(config-router)#distance 130 172.16.0.0 0.0.255.255 1
r2(config-router)#
The final step is to create an IP access list that informs RIP to adjust the administrative distance
of 172.16.1.0 but leave the administrative distance of 172.16.2.0 set to 120. Without an access
list but with the distance command shown above, all the routes learned for network 172.16.0.0
will have their administrative distance set to 130 as shown. This is the default behavior.break
Page 131
r2#clear ip route *
r2#sh ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
R   172.16.1.0 [130/1] via 172.16.3.1, 00:00:01, Ethernet0
R   172.16.2.0 [130/1] via 172.16.3.1, 00:00:01, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
The access list needed to adjust only the 172.16.1.0 distance is
r2(config)#access-list 1?
   deny       Specify packets to reject
   permit     Specify packets to forward
r2(config)#access-list 1 permit?
   Hostname or A.B.C.D Address to match
   any      Any source host
   host     A single host address
r2(config)#access-list 1 permit 172.16.1.0 0.0.0.225?
   <cr>
r2(config)#access-list 1 permit 172.16.1.0 0.0.0.225
r2(config)#
Notice that we did not have to use a permit any statement at the end of the access list. A
normal IP access list always has an implicit deny any as the last statement. This is true in this
case, but the administrative distance is only affected for those routes which have a matching
permit statement, so in the case the implicit deny any in the access list has no effect. The
new IP routing table contains
r2#clear ip route *
r2#sh ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
R   172.16.1.0 [130/1] via 172.16.3.1, 00:00:02, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:02, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
Notice that route 172.16.1.0 is the only route that has an adjusted administrative distance. If we
want to set the administrative distance of 172.16.1.0 to 130 and the administrative distance of
172.16.2.0 to 140, can we use two distance commands with two access lists? Sometimes. When
we enter the second distance command under RIP configuration, the second distance command

will overwrite the first. We can have two distance commands if the major networks are different.
In summary we can set the administrative distance of any number of routes on the same major
network to any value between 1 and 255, but it has to be thecontinue
Page 132
same value. Only those routes which are permitted in the access list will have their administrative
distance modified.
Command
distribute-list
Purpose
Used to filter incoming or outgoing routing updates.
A distribute list is used to delete routes from either incoming or outgoing RIP updates. Assume
that router r2 wants to delete network 172.16.1.0 that is being advertised by router r1. First, we
need to assign a distribute list to the RIP process and router r2.
We can use either a standard or an extended IP access list, which gives us many possibilities.
1. Block the 172.16.1.0 route from any interface using a standard IP access list.
r2(config)#router rip
r2(config-router)#distribute-list?
   <1-199>       A standard IP access list number
r2(config-router)#distribute-list 1?
   in            Filter incoming routing updates
   out           Filter outgoing routing updates
r2(config-router)#distribute-list 1 in?
   Ethernet      Ethernet IEEE 802.3
   Loopback      Loopback interface
   Null          Null interface
<cr>
r2(config-router)#
Now create the access list to block the 172.16.1.0 route.
access-list 1 deny 172.16.1.0 0.0.0.255
access-list 1 permit any
We need the permit any statement in a distribute list; otherwise, the implicit deny
all at the end of the list will filter out all routes learned over all interfaces. The routing table for
router r2 now contains
r2#clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 4 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:16, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0

Notice that the 172.16.1.0 route from router r1 has been filtered. The access list(s) that are
configured for RIP can be seen by listing the configuration or by using the command show ip
protocols.break
Page 133
r2#show ip protocols
Routing Protocol is "rip"
  Sending updates every 31 seconds, next due in 25 seconds
  Invalid after 181 seconds, hold down 181, flushed after 241
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is 1
  Redistributing: rip
  Default version control: send version 1, receive any version
   Interface        Send     Recv     Key-chain
   Ethernet0          1       1           2
   Loopback0          1       1           2
   Loopback1          1       1           2
  Routing for Networks:
   172.16.0.0
  Routing Information Sources:
   Gateway      Distance     Last Update
   172.16.3.1     120          00:00:27
  Distance: (default is 120)
2. Block the 172.16.1.0 route from any interface using an extended IP access list.
r2(config)#router rip
r2(config-router)#distribute-list?
  <1-199>      A standard IP access list number
r2(config-router)#distribute-list 100?
  in           Filter incoming routing updates
  out          Filter outgoing routing updates
r2(config-router)#distribute-list 1 in?
  Ethernet     Ethernet IEEE 802.3
  Loopback     Loopback interface
  Null         Null interface
  <cr>
r2(config-router)#
access-list 100 deny ip any 172.16.1.0 0.0.0.255
access-list 100 permit ip any any
Notice that the route to block is listed as the destination address in the access list and not the
source address.
3. Block the 172.16.1.0 route from the Ethernet interface using a standard IP access list.break
r2(config)#router rip
r2(config-router)#distribute-list 1 in?
   Ethernet      Ethernet IEEE 802.3
   Loopback      Loopback interface
   Null          Null interface
   <cr>
r2(config-router)#distribute-list 1 in Ethernet?
   <0-1>         Ethernet interface number
r2(config-router)#distribute-list 1 in Ethernet 0?

   <cr>
Page 134
r2(config-router)#distribute-list 1 in Ethernet 0/0
r2(config-router)#
We can filter routes through a specific interface. If the route advertisement is learned through a
different interface, it will not be filtered.
4. Block the 172.16.1.0 route from the Ethernet interface using an extended IP access list.
r2(config)#router rip
r2(config-router)#distribute-list 1 in?
   Ethernet        Ethernet IEEE 802.3
   Loopback        Loopback interface
   Null            Null interface
   <cr>
r2(config-router)#distribute-list 1 in Ethernet?
   <0-1>           Ethernet interface number
r2(config-router)#distribute-list 1 in Ethernet 0?
   <cr>
r2(config-router)#distribute-list 1 in Ethernet 0
r2(config-router)#
For examples 3 and 4, the access lists did not need to be modified from examples 1 and 2. To
filter outgoing route advertisements, the distribute list would be applied as an outgoing instead of
as an incoming list. This also gives us four possibilities for filtering. For the examples, assume
that router r2 wants to block the route to 172.16.4.1 in Fig. 8-1 so that router r1 does not receive
it.
1. Block the 172.16.4.0 route going out any interface using a standard IP access list.break
r2(config)#router rip
r2(config-router)#distribute-list 1?
   in              Filter incoming routing updates
   out             Filter outgoing routing updates
r2(config-router)#distribute-list 1 out?
Ethernet           Ethernet IEEE 802.3
  Loopback         Loopback interface
  Null             Null interface
  Bgp              Border Gateway Protocol (BGP)
  Connected        Connected
  Egp              Exterior Gateway Protocol (EGP)
  Eigrp            Enhanced Interior Gateway Routing Protocol (EIGRP)
  Igrp             Interior Gateway Routing Protocol (IGRP)
  Isis             ISO IS-IS
  iso-igrp         IGRP for OSI networks
  ospf             Open Shortest Path First (OSPF)
  rip              Routing Information Protocol (RIP)
  static           Static routes
  <cr>
Page 135

r2(config-router)#distribute-list 1 out
r2(config-router)#
There are many more selections available for outbound filters than for inbound. These additional
choices are covered in Chap. 13. The access list for example 1 would contain
access-list 1 deny 172.16.4.0 0.0.0.255
access-list 1 permit any
The route 172.16.4.0 will not be contained in router r1's routing table after the filter has been
applied.
r1#sh ip route
  172.16.0.0/16 is subnetted, 4 subnets
R   172.16.5.0 [120/1] via 172.16.3.2, 00:00:03, Ethernet0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
The applied access list can be shown using the show ip protocols command.
r2#show ip protocols
Routing Protocol is "rip"
 Sending updates every 31 seconds, next due in 7 seconds
 Invalid after 181 seconds, hold down 181, flushed after 241
 Outgoing update filter list for all interfaces is 1
 Incoming update filter list for all interfaces is not set
 Redistributing: rip
Default version control: send version 1, receive any version
 Interface          Send     Recv     Key-chain
 Ethernet0            1       1           2
 Loopback0            1       1           2
 Loopback1            1       1           2
Routing for Networks:
 172.16.0.0
Routing Information Sources:
 Gateway        Distance      Last Update
 172.16.3.1       120           00:00:16
Distance: (default is 120)
2. Block the 172.16.4.0 route going out any interface using an extended IP access list.break
r2(config)#router rip
r2(config-router)#distribute-list 100 out
r2(config-router)#
access-list 100 deny ip any 172.16.4.0 0.0.0.255
access-list 100 permit ip any any
Page 136
3. Block the 172.16.4.0 route going out the Ethernet interface using a standard IP access list.
r2(config)#router rip
r2(config-router)#distribute-list 1 out
r2(config-router)#distribute-list 1 out Ethernet 0
r2(config-router)#

access-list 1 deny 172.16.4.0 0.0.0.255
access-list 1 permit any
4. Block the 172.16.4.0 route going out the Ethernet interface using an extended IP access list.
r2(config)#router rip
r2(config-router)#distribute-list 1 out
r2(config-router)#distribute-list 1 out Ethernet 0
r2(config-router)#
access-list 1 deny 172.16.4.0 0.0.0.255
access-list 1 permit any
Command
exit
Purpose
Exit router configuration mode and enter global configuration
mode.
r2(config)#router rip
r2(config-router)#exit
r2(config)#
Command
help
Purpose
Get help on help
r2(config)#router rip
r2(config-router)#help
Help may be requested at any point in a command by entering
a question mark '?'. If nothing matches, the help list will
be empty and you must backup until entering a '?' shows the
available options.
Two styles of help are provided:
1. Full help is available when you are ready to enter a command argument (e.g. 'show?')
   and describes each possible argument.
2. Partial help is provided when an abbreviated argument is entered and you want to
   know what arguments match the input (e.g. 'show pr?'.)
Command
neighbor
Purpose
Specify a neighbor on a non-broadcast network.
For NBMA networks such as X.25 and Frame Relay, additional configuration information is
needed to propagate RIP routing updates. Thecontinue

Page 137
neighbor command would be needed in order for RIP updates to cross a Frame Relay cloud.
The neighbor command can be used on a multiaccess network (Ethernet) in conjunction with
the passive-interface command, as we shall see.
Command
network
Purpose
To inform RIP which networks to advertise and which interfaces
will send and receive RIP routing updates. Any active interface
that has an IP address that is contained in the network
command will be used to send and receive RIP routing updates.
Command
no
Purpose
Used to negate configuration commands.
The no command is used to undo previous configuration commands. If we decide, for example,
not to advertise a network, remove a distribution list, or remove an administrative distance
modifier, we would use the no command.
r1(config)#router rip
r1(config-router)#no network 172.16.0.0
r1(config-router)#no distribute-list 100 out
r1(config-router)#no distance 130
r1(config-router)#
Command
      offset-list
Purpose
Add or subtract an offset from IGRP or RIP metrics.
An offset list is used to adjust the metric, or hop count, of routes in incoming or outgoing RIP
updates using a standard IP access list.
1. Increase the hop count of all incoming RIP routes on router r1 by 2.break
r1(config)#router rip
r1(config-router)#offset-list?
   <0-99>           Access list of networks to apply offset (0 selects all networks)
r1(config-router)#offset-list 1?
   in               Perform offset on incoming updates
   out              Perform offset on outgoing updates
r1(config-router)#offset-list 1 in?
   <0-16>           Offset

r1(config-router)#offset-list 1 in 2?
   Ethernet         Ethernet IEEE 802.3
   Loopback         Loopback interface
   Null             Null interface
   <cr>
r1(config-router)#offset-list 1 in 2
r1(config-router)#
access-list 1 permit any
Page 138
r1#clear ip route *
r1#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
R   172.16.4.0 [120/3] via 172.16.3.2, 00:00:02, Ethernet0
R   172.16.5.0 [120/3] via 172.16.3.2, 00:00:02, Ethernet0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
2. Increase the hop count of route 172.16.4.0 on router r1 by 2.
r1(config-router)#offset-list 1 in 2
access-list 1 permit 172.16.4.0 0.0.0.255
r1#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
R   172.16.4.0 [120/3] via 172.16.3.2, 00:00:02, Ethernet0
R   172.16.5.0 [120/1] via 172.16.3.2, 00:00:02, Ethernet0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
3. Increase the hop count of all outgoing RIP routes from router r1 by 2.
r1(config)#router rip
r1(config-router)#offset-list 1 out?
   <0-16>          Offset
r1(config-router)#offset-list 1 out 2?
   Ethernet        Ethernet IEEE 802.3
   Loopback        Loopback interface
   Null            Null interface
   <cr>
r1(config-router)#offset-list 1 out 2
r1(config-router)#
r2#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
R   172.16.1.0 [120/3] via 172.16.3.1, 00:00:01, Ethernet0
R   172.16.2.0 [120/3] via 172.16.3.1, 00:00:01, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
Applied offset lists can be seen by using the show ip protocols command.break
r1#show ip protocols
Routing Protocol is "rip"

  Sending updates every 30 seconds, next due in 25 seconds
  Invalid after 180 seconds, hold down 180, flushed after 240
  Outgoing update filter list for all interfaces is not set
Page 139
  Incoming update filter list for all interfaces is not set
  Outgoing routes will have 2 added to metric if on list 1
  Redistributing: rip
  Default version control: send version 1, receive any version
   Interface       Send      Recv     Key-chain
   Ethernet0         1        1           2
   Loopback0         1        1           2
   Loopback1         1        1           2
  Routing for Networks:
   172.16.0.0
  Routing Information Sources:
   Gateway      Distance      Last Update
   172.16.3.2     120           00:00:11
  Distance: (default is 120)
4. Increase the hop count of route 172.16.1.0 that is advertised by router r1 by 2.
access-list 1 permit 172.16.1.0 0.0.0.255
r2#sh ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
R   172.16.1.0 [120/3] via 172.16.3.1, 00:00:12, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:12, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
Command
passive-interface
Purpose
Suppress routing updates on an interface.
The passive-interface command stops routing updates from being sent out an interface,
but routing updates received on a passive interface will still be received and processed. For
example, if the 172.16.3.1 interface of router r1 in Fig. 8-1 is made passive, router r2 will not
receive routing updates from router r1 (because they are not being sent), but router r1 will still
receive routing updates from router r2.break
r1(config)#router rip
r1(config-router)#passive-interface Ethernet 0
r1(config-router)#
r1#clear ip route *
r1#sh ip route
  172.16.0.0/16 is subnetted, 5 subnets
R   172.16.4.0 [120/1] via 172.16.3.2, 00:00:13, Ethernet0
R   172.16.5.0 [120/1] via 172.16.3.2, 00:00:13, Ethernet0
C   172.16.1.0 is directly connected, Loopback0

C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
Page 140
r2#sh ip route
  172.16.0.0/16 is subnetted, 3 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
RIP Version 1 normally sends routing updates as a broadcast on an Ethernet network that all
hosts must process. To prevent broadcasts, the passive-interface command can be used
in conjunction with the neighbor command. If we want router r1 in Fig. 8-1 to send routing
updates to a unicast address, we can use the following configuration:
Router rip
  Passive-interface Ethernet 0
  Neighbor 172.16.3.2
Command
redistribute
Purpose
Redistribute information from another routing protocol.
This command is covered in Chap. 13.
Command
timers
Purpose
Adjust routing timers.
The RIP timers can be viewed by using the command show ip protocols illustrated below.
r2#show ip protocols
Routing Protocol is "rip"
  Sending updates every 30 seconds, next due in 0 seconds 
  Invalid after 180 seconds, hold down 180, flushed after 240
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is not set
  Redistributing: rip
  Default version control: send version 1, receive any version
   Interface       Send      Recv     Key-chain
   Ethernet0         1        1           2
   Loopback0         1        1           2
   Loopback1         1        1           2
  Routing for Networks:
  172.16.0.0
Routing Information Sources:
    Gateway     Distance     Last Update
    172.16.3.1    120          00:13:12

  Distance: (default is 120)
The update timer (30 s) is the time between routing updates sent out of an interface. Routes are
invalid after 180 s. This means that if a known route is not received within 180 s of the last
advertisement for this route,continue
Page 141
the route will be declared invalid. The hold-down time is the time that a route will remain in the
routing table before a new advertisement for that route will be accepted by the router. The flush
time is the amount of time that must expire before a route is removed from the routing table if no
routing updates for this route have been received. One timer value that does not appear in the list
is the sleep time. The sleep time is the amount of time an RIP routing update will be delayed
before transmission and is measured in milliseconds.
In most cases, you should probably never adjust the RIP timers. They have been selected to
provide optimal performance from the protocol. However, if you must, here is the syntax:
r2(config)#router rip
r2(config-router)#timers?
   basic Basic routing protocol update timers
r2(config-router)#timers basic?
   <0-4294967295>      Interval between updates
r2(config-router)#timers basic 31?
   <1-4294967295>      Invalid
r2(config-router)#timers basic 31 181?
   <0-4294967295>      Holddown
r2(config-router)#timers basic 31 181 181?
 <1-4294967295>         Flush
r2(config-router)#timers basic 31 181 181 241?
   <1-4294967295>      Sleep time, in milliseconds
   <cr>
r2(config-router)#timers basic 31 181 181 241 10?
   <cr>
The new timer values can be verified by using the show ip protocols command.
r2#show ip protocols
Routing Protocol is "rip"
Sending updates every 31 seconds, next due in 7 seconds
Invalid after 181 seconds, hold down 181, flushed after 241
Outgoing update filter list for all interfaces is not set
Incoming update filter list for all interfaces is not set
Command
validate-update-source
Purpose
Perform sanity checks against source address of routing updates.
This function is enabled by default. The source address is checked to see if it is a proper address.
In Fig. 8-1, RIP routing updates received by router r1 on interface 172.16.3.1 should be received

from an RIP router on this network. If the source address is not on the network, then the routing
update will be rejected. To disable this feature, use the no command in conjunction with the
validate-update-source command.break
Page 142
r1(config)#router rip
r1(config-router)#no validate-update-source
Command
version
Purpose
Set routing protocol version.
RIP can be configured as Version 1 (default) or Version 2. This command is used to select the
RIP version. The current value can be seen by examining the configuration or by using the show
ip protocols command.
r2(config)#router rip
r2(config-router)#version?
   <1-2> version
r2(config-router)#version 1?
   <cr>
or
r2(config-router)#version 2
The default behavior of RIP can be seen by executing the show ip protocols command.
r2#show ip protocols
Default version control: send version 1, receive any version
 Interface         Send      Recv     Key-chain
 Ethernet0           1        1           2
 Loopback0           1        1           2
 Loopback1           1        1           2
Notice that when sending RIP routing updates, Version 1 is used, but each interface can receive
both Version 1 and Version 2 formats. If we change the RIP version to 1, then we disable the
processing of Version 2 packets, and if we set the RIP version to 2, we disable the processing of
Version 1 packets.break
r2(config)#router rip
r2(config-router)#version 1
r2#show ip protocols
  Interface        Send      Recv     Key-chain
  Ethernet           1        1
  Loopback0          1        1
  Loopback1          1        1
r2(config)#router rip
r2(config-router)#version 2
r2#show ip protocols
  Interface        Send      Recv     Key-chain

  Ethernet0/0        2        2
Page 143
  Loopback0          2        2
  Loopback1          2        2
This behavior can be modified on a per-interface basis by using the ip rip send version or
ip rip receive version command while in interface configuration mode. For example, to
enable the Ethernet interface on router r2 to send Version 2 and receive Versions 1 and 2, we
would use
r2(config)#interface Ethernet 0
r2(config-if)#ip rip?
   authentication       Authentication control
   receive              advertisement reception
   send                 advertisement transmission
r2(config-if)#ip rip receive?
   version               version control
r2(config-if)#ip rip receive version?
   1  RIP version 1
   2  RIP version 2
   <cr>
r2(config-if)#ip rip receive version 1?
   2  RIP version 2
   <cr>
r2(config-if)#ip rip receive version 1 2?
   <cr>
r2(config-if)# ip rip receive version 1 2
r2(config-if)#ip rip send version 2
r2(config-if)#
r2#show ip protocols
  Interface        Send  Recv  Key-chain
  Ethernet0          2    1        2
  Loopback0          2    2
  Loopback1          2    2
RIP Version 2
Recall from Chap. 5 that RIP Version 2 includes subnet mask information in the routing updates.
This feature allows us to implement the network configuration of Fig. 8-4, which cannot be
handled by RIP Version 1. The only change necessary in the configuration is to set the RIP
version number to 2.break
r1(config)#router rip
r1(config-router)#network 172.16.0.0
r1(config-router)#network 173.16.0.0
Page 144
r1(config-router)#version 2
r1(config-router)#

r2(config)#router rip
r2(config-router)#network 172.16.0.0
r2(config-router)#network 173.16.0.0
r2(config-router)#version 2
r2(config-router)#
Another major difference between RIP Versions 1 and 2 is that RIP version 2 sends and receives
routing updates on the multicast address 224.0.0.9 and RIP Version 1 uses a broadcast address
for routing updates. The final difference between RIP Version 1 and Version 2 is that
authentication can be used be routers exchanging RIP routing updates. Authentication is
configured through the interface configuration mode using
r1(config)#int Ethernet 0
r1(config-if)#ip rip?
   authentication     Authentication control
   receive            advertisement reception
   send               advertisement transmission
r1(config-if)#ip rip authentication?
   key-chain            Authentication key-chain
   mode                 Authentication mode
r1(config-if)#ip rip authentication key-chain?
   LINE                name of key-chain
r1(config-if)#ip rip authentication key-chain cisco?
   LINE                 <cr>
r1(config-if)#ip rip authentication key-chain cisco
r1(config-if)#ip rip authentication mode?
   md5                 Keyed message digest
   text                Clear text authentication
r1(config-if)#ip rip authentication mode md5?
   <cr>
or
r1(config-if)#ip rip authentication mode text?
   <cr>
r1(config-if)#ip rip authentication mode text
r1(config-if)#
Clear text authentication sends the authentication key in the clear and can be
determined easily by intercepting the RIP routing updates, so method is not recommended. The
md5 authentication method encrypts the key before transmission, so md5 is the preferred method
for route authentication.
We are using the authentication key cisco to validate received routing updates. RIP Version 2
routers that are not using the same authentication key will have their routing updates ignored by
receiving routerscontinue
Page 145
that are using a different key. When we were using RIP Version 1, the 173.16.0.0 remote
networks did not appear in the routing tables. With RIP Version 2, these remote routes will
appear in the routing tables, as shown.
r1#show ip route

172.16.0.0/16 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, Ethernet0
    173.16.0.0/16 is variably subnetted, 3 subnets, 2 masks
C   173.16.1.32/28 is directly connected, Loopback1
C   173.16.1.16/28 is directly connected, Loopback0
R   173.16.0.0/16 [120/1] via 172.16.3.2, 00:00:23, Ethernet0
r2#show ip route
    172.16.0.0/16 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, Ethernet0
    173.16.0.0/16 is variably subnetted, 3 subnets, 2 masks
C   173.16.1.48/28 is directly connected, Loopback0
R   173.16.0.0/16 [120/1] via 172.16.3.1, 00:00:06, Ethernet0
C   173.16.1.64/28 is directly connected, Loopback1
Notice that only 1 RIP route appears in the routing table for both routers with a subnet mask of
16, while the directly connected 173.16.0.0 networks show a subnet mask of 28. The RIP
Version 2 process is automatically summarizing the routes into one route advertisement. This is
the default behavior of RIP Version 2. If we want both routes to be advertised, we must disable
route summarization.
r1(config)#router rip
r1(config-router)#network 172.16.0.0
r1(config-router)#network 173.16.0.0
r1(config-router)#version 2
r1(config-router)#no auto-summary
r1(config-router)#
r2(config)#router rip
r2(config-router)#network 172.16.0.0
r2(config-router)#network 173.16.0.0
r2(config-router)#version 2
r2(config-router)#no auto-summary
r2(config-router)#
The router tables for routers r1 and r2 now contain an entry for each remote network.break
r1#show ip route
    172.16.0.0/16 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, Ethernet0
    173.16.0.0/16 is subnetted, 4 subnets
Page 146
R   173.16.1.48 [120/1] via 172.16.3.2, 00:00:23, Ethernet0
C   173.16.1.32 is directly connected, Loopback1
C   173.16.1.16 is directly connected, Loopback0
R   173.16.1.64 [120/1] via 172.16.3.2, 00:00:23, Ethernet0
r2#show ip route
    172.16.0.0/16 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, Ethernet0
    173.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
C   173.16.1.48/28 is directly connected, Loopback0

R   173.16.1.32/28 [120/1] via 172.16.3.1, 00:00:28, Ethernet0
R   173.16.1.16/28 [120/1] via 172.16.3.1, 00:00:28, Ethernet0
R   173.16.0.0/16 [120/1] via 172.16.3.1, 00:01:24, Ethernet0
C   173.16.1.64/28 is directly connected, Loopback1
RIP Version 1 and Version 2 Interoperability
For routers to communicate using RIP, they must be able to send and receive the same version.
The simplest scenario is to have router r1 running RIP Version 2 and router r2 running RIP
Version 1. If we examine the protocol configurations for routers r1 and r2, we can see that the
routers will not be able to exchange routes.
r1#show ip protocols
  Interface        Send   Recv   Key-chain
  Ethernet0          2     2
  Loopback0          2     2
  Loopback1          2     2
r2#show ip protocols
  Interface        Send   Recv   Key-chain
  Ethernet0          1     1         2
  Loopback0          1     1         2
  Loopback1          1     1         2
Router r1 is only sending and receiving Version 2 packets. Router r2 is sending Version 1
packets but can receive both Version 1 and Version 2 packets, but since router r2 is running RIP
Version 1, the packets from router r1 will be ignored. We can configure the routers so that even
though they are running different versions of RIP, they can receive each other's routing updates.
For router r2 to see the routes from router r1, we need to force router r1 to send Version 1
packets in addition to the Version 2 packets by properly configuring the common interface.break
Page 147
r1(config)#interface Ethernet 0
r1(config-if)#ip rip send version 1 2
r1(config-if)#
Examining the protocol configuration shows that router r1 is now sending both Version 1 and
Version 2 packets to router r2.
r1#show ip protocols
Default version control: send version 2, receive version 2
 Interface         Send      Recv     Key-chain
 Ethernet0           1        2           2
 Loopback0           2        2
 Loopback1           2        2
Router r2 is now receiving Version 1 packets from router r1, and the networks for router r1
appear in router r2's routing table.
r2#show ip route
    173.16.0.0/16 is subnetted, 5 subnets
C   173.16.1.48 is directly connected, Loopback0

R   173.16.1.32 [120/1] via 173.16.1.82, 00:00:12, Ethernet0
R   173.16.1.16 [120/1] via 173.16.1.82, 00:00:12, Ethernet0
C   173.16.1.80 is directly connected, Ethernet0
C   173.16.1.64 is directly connected, Loopback1
Router r1 does not see the routes from router r2 because router r2 is sending Version 1 packets.
This situation can be overcome by enabling router r1 to receive Version 1 packets through
interface configuration mode.
r1(config)#interface Ethernet 0
r1(config-if)#ip rip receive version 1 2
r1(config-if)#
r1#show ip protocols
Default version control: send version 2, receive version 2
 Interface         Send      Recv     Key-chain
 Ethernet0           1        2           1         2
 Loopback0           2        2
 Loopback1           2        2
r1#sh ip route
    173.16.0.0/16 is subnetted, 5 subnets
R   173.16.1.48 [120/1] via 173.16.1.81, 00:00:20, Ethernet0
C   173.16.1.32 is directly connected, Loopback1
C   173.16.1.16 is directly connected, Loopback0
C   173.16.1.80 is directly connected, Ethernet0
R   173.16.1.64 [120/1] via 173.16.1.81, 00:00:20, Ethernet0
If you are going to upgrade an RIP Version 1 network to an RIP Version 2 network, then you
could just change the version number incontinue
Page 148
router configuration mode to 2, but then the Version 1 and Version 2 routers cannot
communicate. A better solution is to change each router to Version 2 and configure the
appropriate interfaces on the Version 2 routers to be able to send and receive Version 1 packets.
When all the routers have been upgraded to Version 2, then all the interfaces can be set to send
and receive only Version 2 packets. In this way, routing information will still flow between all
the RIP routers during the upgrade process. During this time there will be extra network traffic
because the Version 2 routers are sending both Version 1 and Version 2 packets.
Debugging RIP
The network in Fig. 8-5 is used to illustrate the RIP debugging commands. There are two
commands that can be used for debugging RIP. The first is the command
r1#debug ip rip
Which produces the following console output.
RIP: sending v1 update to 255.255.255.255 via Ethernet0 (173.16.1.81)
  subnet     173.16.1.32, metric 1
  subnet     173.16.1.16, metric 1
RIP: sending v2 update to 224.0.0.9 via Ethernet0 (173.16.1.81)

  173.16.1.32/28 -> 0.0.0.0, metric 1, tag 0
  173.16.1.16/28 -> 0.0.0.0, metric 1, tag 0
RIP: sending v2 update to 224.0.0.9 via Loopback0 (173.16.1.17)
  173.16.1.48/28 -> 0.0.0.0, metric 2, tag 0
  173.16.1.32/28 -> 0.0.0.0, metric 1, tag 0
  173.16.1.80/28 -> 0.0.0.0, metric 1, tag 0
  173.16.1.64/28 -> 0.0.0.0, metric 2, tag 0
RIP: sending v2 update to 224.0.0.9 via Loopback1 (173.16.1.33)
  173.16.1.48/28 -> 0.0.0.0, metric 2, tag 0
  173.16.1.16/28 -> 0.0.0.0, metric 1, tag 0
  173.16.1.80/28 -> 0.0.0.0, metric 1, tag 0
  173.16.1.64/28 -> 0.0.0.0, metric 2, tag 0
RIP: ignored v2 packet from 173.16.1.17 (sourced from one of our addresses)
RIP: ignored v2 packet from 173.16.1.33 (sourced from one of our addresses)
RIP: received v1 update from 173.16.1.82 on Ethernet0
  173.16.1.48 in 1 hops
  173.16.1.64 in 1 hops
Router r1 is sending both Version 1 and Version 2 routing updates. The Version 1 updates are
being sent to the broadcast address, and the Version 2 updates are being sent to the multicast
address 224.0.0.9. Router r1 is receiving Version 1 updates from router r2 on the Ethernet
interface, and we can see the routes that router r2 is sending. This informa-soft
Page 149
tion is useful when one or more routers are not receiving routing updates. The debug output
allows us to see exactly what the RIP process is doing and can help to lead us to the misbehaving
router. The other RIP debug command is
r1#debug ip rip events
RIP: received v1 update from 173.16.1.82 on Ethernet0
RIP: Update contains 2 routes
RIP: sending v1 update to 255.255.255.255 via Ethernet0 173.16.1.81)
RIP: Update contains 2 routes
RIP: sending v1 update to 255.255.255.255 via Loopback0 (173.16.1.17)
RIP: Update contains 4 routes
RIP: sending v1 update to 255.255.255.255 via Loopback1 (173.16.1.33)
RIP: Update contains 4 routes
The difference between debug ip rip and debug ip rip events is in the level of
detail. Thus, debug ip rip events is a summary of the RIP events, whereas debug ip
rip contains the information associated with each RIP event.
r1#debug ip rip
RIP protocol debugging is on
r1#
RIP: sending v2 update to 224.0.0.9 via Ethernet0 (173.16.1.81)
  173.16.1.32/28 -> 0.0.0.0, metric 1, tag 0
  173.16.1.16/28 -> 0.0.0.0, metric 1, tag 0
RIP: sending v2 update to 224.0.0.9 via Loopback0 (173.16.1.17)
  173.16.1.32/28 -> 0.0.0.0, metric 1, tag 0
  173.16.1.80/28 -> 0.0.0.0, metric 1, tag 0
RIP: sending v2 update to 224.0.0.9 via Loopback1 (173.16.1.33)
  173.16.1.16/28 -> 0.0.0.0, metric 1, tag 0
  173.16.1.80/28 -> 0.0.0.0, metric 1, tag 0
RIP: ignored v2 packet from 173.16.1.17 (sourced from one of our addresses)

RIP: ignored v2 packet from 173.16.1.33 (sourced from one of our addresses)
When authentication is being used and the keys do not match, or if one routing is using
authentication and the other router is not, the debugging output would contain
RIP: ignored v2 packet from 173.16.1.82 (invalid authentication)
Summary
It is difficult to summarize this chapter because all the commands are important and need to be
understood. Therefore, instead of a chapter summarization, I have listed the RIP commands in a
loose order ofcontinue
Page 150
importance. I also have listed three commands that are extremely important but are not covered
until Chap. 13. I list them here so you will have them in mind.
RIP Commands
1. router rip
2. network
3. redistribute (Chap. 13)
4. distribute-list (Chap. 13)
5. default-metric (Chap. 13)
6. passive-interface
7. offset-list
8. distance
9. All other RIP commandsbreak
Page 151
Chapter 9—
Configuring IGRP
Page 152
The Interior Gateway Routing Protocol (IGRP) is a Cisco proprietary routing protocol that is
based on the Routing Information Protocol (RIP), which means IGRP is a distance-vector interior

routing protocol. RIP uses a hop-count metric, and IGRP uses a dimensionless cost metric
composed of five parameters: bandwidth, delay, reliability, loading, and mtu. The IGRP metric
allows for a larger network diameter than RIP and provides more flexibility than RIP for route
determination, since the IGRP metrics can be adjusted depending on the network topology. IGRP
utilizes split horizon, hold downs, and poisoned reverse for route stability. IGRP also uses flash
updates, which send routing information when a network or metric changes before the next
routing table update period.
IGRP
The network in Fig. 9-1 will be used to demonstrate the various configuration commands
possible with IGRP using the configuration below.
Router r1 Configuration                 Router r2 Configuration
hostname r1                             hostname r2
enable password cisco                   enable password cisco
interface Loopback0                     interface Loopback0
ip address 172.16.1.1 255.255.255.0     ip address 172.16.4.1 255.255.255.0
interface Loopback1                     interface Loopback1
ip address 172.16.2.1 255.255.255.0     ip address 172.16.5.1 255.255.255.0
interface Ethernet0                     interface Ethernet0
ip address 172.16.3.1 255.255.255.0     ip address 172.16.3.2 255.255.255.0
As you can see in Fig. 9-1, we only need one physical interface on each router. The other
networks in the examples that follow will be simulated using loopback interfaces. The first step
in configuring IGRP is to start the IGRP routing process. This is accomplished by entering
configuration mode and enabling the IGRP process.break
r1#configure terminal
Enter configuration commands, one per line. End with CNTL/Z.
r1(config)#router igrp?
<1-65535>        Autonomous system number
r1(config-router)#router igrp 100
r1(config-router)#
Page 153
Figure 9-1
Network configuration for IGRP examples.
The IGRP routing process must be assigned an autonomous system number in the range 1 to

65,535. This actually should be called a routing process number because it does not have to
match your autonomous system number. Multiple IGRP routing processes can be running on the
same router, but only processes with the same number will exchange routing updates. As with
RIP, IGRP needs to know which networks to advertise. For router r1, we want to advertise
networks 172.16.1.0, 172.16.2.0, and 172.16.3.0. The network command is used to inform IGRP
which networks to advertise in the routing updates.
r1(config-router)#network 172.16.1.0
r1(config-router)#network 172.16.2.0
r1(config-router)#network 172.16.3.0
r1(config-router)#
At this point, list the current router configuration to see how we have configured the basic IGRP
routing process.
router igrp 100
network 172.16.0.0
Why does the configuration show only one network command when we entered three? I
mentioned that IGRP is based on RIP and does not transmit subnet masks in the routing updates.
You can only enter major network numbers with the IGRP network configuration command.
Since all of router r1's attached networks belong to the class B network 172.16.0.0, this is the
network that IGRP will advertise. The network command also determines which interfaces will
send and receive IGRP routing updates. Since all our networks belong to 172.16.0.0, IGRP will
send and receive updates on all the interfaces. The configuration for router r2 will be identical to
the configuration for router r1.break
Page 154
r2(config)#router igrp 100
r2(config-router)#network 172.16.0.0
r2(config-router)#
How many routes will IGRP advertise is this situation, one or three? Like RIP Version 1, IGRP
will only advertise subnets of a major network out an interface if those networks have the same
subnet mask as the interface on which they will be transmitted. Since all our networks have an
identical 24-bit subnet mask, IGRP will advertise three routes, and the receiving router, r2, will
assume that all the advertised networks it receives for major network 172.16.0.0 have the same
subnet mask as the interface on which the routes were received. To determine if routers r1 and r2
are exchanging routing updates, use the command show ip route on routers r1 and r2.
r1#show ip route
Codes: C - connected, S - static, I - IGRP, RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  E1 - OSPF external type 1, E2 - OSPF external type 2, E  - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, • - candidate default
  U - per-user static route
Gateway of last resort is not set
  172.16.0.0/16 is subnetted, 5 subnets
I   172.16.4.0 [100/610] via 172.16.3.2, 00:00:58, Ethernet0

I   172.16.5.0 [100/610] via 172.16.3.2, 00:00:58, Ethernet0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, FastEthernet8/0
r2#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, * - candidate default
  U - per-user static route
Gateway of last resort is not set
Gateway of last resort is not set
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
I   172.16.1.0 [100/610] via 172.16.3.1, 00:01:23, Ethernet0
I   172.16.2.0 [100/610] via 172.16.3.1, 00:01:23, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
Notice that routers r1 and r2 have three directly connected routes and two routes that have been
learned from IGRP. Each entry in the routing table contains the following information:
__ How the router was learned (C—directly connected; or I—from IGRP).break
Page 155
__ The destination network.
__ The administrative distance and route cost [100/610] for IGRP or directly connected.
__ For IGRP, the transit network (via 172.16.3.1).
__ The age of the route—00:01:23. IGRP transmits routing updates every 90 seconds, and this
entry shows how much time has elapsed since the last update for this route.
__ The interface to use when sending a packet to the destination network.
This is the minimum configuration required to enable IGRP. The IP routing table contains the
information necessary for each router to determine how to route a packet to a destination
network. For the connected networks, the router needs only to forward a packet destined for a
host on the network out the directly connected interface. For packets destined for a network not
on a directly connected interface, the router must determine which interface should be used to
forward the packet.
What happens if the subnet masks are not identical? Assume that the two loopback networks on
router r1, Loopback0 and Loopback1, will have no more than 14 hosts each. We can use VLSM
to sub-subnet network 172.16.1.0 into two networks using a 28-bit subnet mask, as shown in Fig.
9-2.
Router r1 configuration changes
interface Loopback0
ip address 172.16.1.17 255.255.255.240
interface Loopback1
ip address 172.16.1.33 255.255.255.240

How will this affect the IGRP updates? If we examine the routing table for router r2, we see that
the new sub-subnetted routes do notcontinue
Figure 9-2
IGRP—Using VLSM on router r1 on the same major network.
Page 156
appear. The clear ip route * command is used because IGRP will remember the old routes
for 10.5 min. This command will clear the IP routing table and force a routing table update so
that we can see the affect of the router configuration changes.
r2#clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 3 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
Router r1 will not advertise networks 172.16.1.16 and 172.16.1.32 from network 172.16.3.0
because the subnet masks for these networks are unequal. If IGRP is going to be deployed on a
network, then the networks that you want to advertise must all have the same subnet masks if
they are contained in the same major network number. For this example, the major network
number is 172.16.0.0. What if these sub-subnetted networks use a different major network
number, say, 173.16.0.0, as shown in Fig. 9-3?
Router r1 configuration changes
interface Loopback0
ip address 173.16.1.17 255.255.255.240
interface Loopback 1
ip address 173.16.1.33 255.255.255.240
router igrp 100
network 172.16.0.0
network 173.16.0.0
The routing table for router r1 now containsbreak
r2# clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 3 subnets

Figure 9-3
IGRP—Using VLSM on router r1 on a different major network.
Page 157
C  172.16.4.0 is directly connected, Loopback0
C  172.16.5.0 is directly connected, Loopback1
C  172.16.3.0 is directly connected, Ethernet0
I  173.16.0.0/16 [100/610] via 172.16.3.1, 00:00:03, Ethernet0
Notice that router r1 is advertising network 173.16.0.0, enabling router r2 to be able to reach the
two 173.16 networks on router r1. The subnet mask is different from the mask used for the
172.16 network, but since these are different major network numbers, IGRP will advertise them.
Also notice that IGRP automatically summarizes network 173.16.0.0. What happens if we assign
networks for the sub-subnetted network 173.16.0.0 on router r2 (Fig. 9-4).
Router r2 configuration changes
interface Loopback0
ip address 173.16.1.49 255.255.255.240
interface Loopback1
ip address 173.16.1.65 255.255.255.240
router igrp 100
network 172.16.0.0
network 173.16.0.0
The routing table for router r2 now contains
r2#clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, Ethernet0
  173.16.0.0/16 is subnetted, 2 subnets
C   173.16.1.48 is directly connected, Loopback0
C   173.16.1.64 is directly connected, Loopback1
Where are the routes to networks 173.16.1.16 and 173.16.1.32? The IGRP and RIP algorithms
operate similarly. Router r1 is advertising the route 173.16.0.0 with a cost of 610 and router r2 is
also directly connected tocontinue

Figure 9-4
IGRP—Using VLSM on routers r1 and r2 on a different major network.
Page 158
network 173.16.0.0, so from router r2's perspective, it has a better route to 173.16.0.0 and thus
will ignore the route to 173.16.0.0 that router r1 is advertising. Of course this situation is not
common, but it does illustrate the problems that can occur with IGRP because IGRP does not
advertise subnet information in the routing updates.
This scenario is, of course, very unlikely. Using an entire class B network for the common
network between routers r1 and r2 does not make sense but does illustrate the behavior of IGRP.
What would happen if the link between routers r1 and r2 were on the same major network as the
other interfaces (Fig. 9-5)?
As long as the subnet mask used is consistent, then all the routes will be propagated. Assume that
we have changed the addresses of the common interfaces to 173.16.1.82/28 (r1) and
173.16.1.81/28 (r2). The routing tables for routers r1 and r2 will contain routes to all the
networks in the configuration. Of course, this is not really VLSM, because all the subnet masks
are identical.break
Router r1 configuration changes            Router r2 configuration changes
interface Ethernet 0                       interface Ethernet 0
ip address 173.16.1.81 255.255.255.240     ip address 173.16.1.82 255.255.255.
router igrp 100                            router igrp 100
no network 172.16.0.0                      no network 172.16.0.0
r1#clear ip route *
r1#show ip route
  173.16.0.0/16 is subnetted, 5 subnets
I   173.16.1.48 [100/610] via 173.16.1.82, 00:00:08, FastEthernet8/0
C   173.16.1.32 is directly connected, Loopback1
C   173.16.1.16 is directly connected, Loopback0
C   173.16.1.80 is directly connected, FastEthernet8/0
I   173.16.1.64 [100/610] via 173.16.1.82, 00:00:09, FastEthernet8/0
r2#clear ip route *
r2#show ip route

Figure 9-5
IGRP—Using VLSM on the entire network 173.16.0.0.
Page 159
  173.16.0.0/16 is subnetted, 5 subnets
C   173.16.1.48 is directly connected, Loopback0
I   173.16.1.32 [100/610] via 173.16.1.81, 00:00:01, FastEthernet0/0
I   173.16.1.16 [100/610] via 173.16.1.81, 00:00:01, FastEthernet0/0
C   173.16.1.80 is directly connected, FastEthernet0/0
C   173.16.1.64 is directly connected, Loopback1
We will now return to the network of Fig. 9-1 and examine the other commands available for
configuring IGRP. These commands can be listed by entering IGRP configuration mode and
typing a question mark.
r1(config)#router igrp 100
r1(config-router)#?
Router configuration commands:
r1(config)#router igrp 100
r1(config-router)#?
Router configuration commands:
  default-information      Control distribution of default information
  default-metric           Set metric of redistributed routes
  distance                 Define an administrative distance
  distribute-list          Filter networks in routing updates
  exit                     Exit from routing protocol configuration mode
  help                     Description of the interactive help system
  maximum-paths            Forward packets over multiple paths
  metric                   Modify IGRP routing metrics and parameters
  neighbor                 Specify a neighbor router
  network                  Enable routing on an IP network
  no                       Negate or set default values of a command
  offset-list              Add or subtract offset from IGRP or RIP metrics
  passive-interface        Suppress routing updates on an interface
  redistribute             Redistribute information from another routing proto
  timers                   Adjust routing timers
  traffic-share            Algorithm for computing traffic share for alternate
                            routes
  validate-update-source   Perform sanity checks against source address of rou
                             updates
  variance                 Control load balancing variance
Command
default-information

Command
default-information
Purpose
Control distribution of default information
This command is covered in Chap. 13.break
Command
default-metric
Purpose
A router may be running more that one IP routing protocol
(RIP, IGRP, EIGRP, or OSPF). Each routing protocol has a different
metric; e.g., RIP has a hop count, OSPF has a dimensionless cost,
and IGRP has a cost based on five metrics. When injecting
routes from one routing protocol to another, the route metric
Page 160
needs to be converted from one protocol to another. The
default-metric command is used to perform this conversion.
This will be covered in detail in Chap. 13.
Command
distance
Purpose
Used to adjust the administrative distance of a route.
r2(config)#router igrp 100
r2(config-router)#distance?
   <1-255>        Administrative distance
Enter an administrative distance in the range 1-255. The default for IGRP is 100. The
administrative distance is used when more than one routing protocol is active on a router. For
example, if we are running IGRP and RIP and each protocol has a route to the same network, the
IGRP route would be preferred because IGRP has a lower administrative distance (100) than RIP
(120). We can force the IGRP route to not be chosen by setting the administrative distance to be
higher than that for RIP.
r2(config-router)#distance 130?
   A.B.C.D       IP Source address
   <cr>
Choosing <cr> will set the administrative distance to all routes learned from IGRP to the number
entered, in this case 130. This can be seen by examining the IP routing table.
r2#show ip route

  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
I   172.16.1.0 [130/610] via 172.16.3.1, 00:00:50, FastEthernet0/0
I   172.16.2.0 [130/610] via 172.16.3.1, 00:00:50, FastEthernet0/0
C   172.16.3.0 is directly connected, FastEthernet0/0
If you want to adjust the administrative distance for a particular IP network use the form
r2(config-router)#distance 130 172.16.0.0?
   A.B.C.D IP address mask
r2(config-router)#distance 130 172.16.0.0 0.0.255.255?
   <1-99>    IP Standard access list number
   <cr>
Entering <cr> will apply the new administrative distance only to network 172.16.0.0. Notice that
the IP address mask is the ''reverse" ofcontinue
Page 161
what is used for a subnet mask. This is the same style used for IP access lists that were discussed
in Chap. 7. Since router r2 is only learning about network 172.16.0.0 from router r1, this has the
same effect as applying the administrative distance to all networks learned from IGRP. Finally,
we can choose the routes that will have their administrative distance modified through the use of
an IP access list. Assume that we want to change the administrative distance of the route to
172.16.1.0 to 130 but not affect the route to 172.16.2.0. First, we would use the IGRP command
r2(config-router)#distance 130 172.16.0.0 0.0.255.255?
   <1-99>     IP Standard access list number
<cr>
r2(config-router)#distance 130 172.16.0.0 0.0.255.255 1?
   <cr>
r2(config-router)#distance 130 172.16.0.0 0.0.255.255 1
r2(config-router)#
The final step is to create an IP access list that informs IGRP to adjust the administrative distance
of 172.16.1.0 but leave the administrative distance of 172.16.2.0 set to 100. Without an access
list but with the distance command shown above, all the routes learned for network 172.16.0.0
will have their administrative distance set to 130 as shown. This is the default behavior.
r2#clear ip route *
r2#sh ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
I   172.16.1.0 [130/610] via 172.16.3.1, 00:00:01, FastEthernet0/0
I   172.16.2.0 [130/610] via 172.16.3.1, 00:00:01, FastEthernet0/0
C   172.16.3.0 is directly connected, FastEthernet0/0
The access list needed to adjust only network 172.16.1.0 isbreak
r2(config)#access-list 1?
   deny          Specify packets to reject
   permit        Specify packets to forward
r2(config)#access-list 1 permit?

   Hostname or A.B.C.D Address to match
   any         Any source host
   host        A single host address
r2(config)#access-list 1 permit 172.16.1.0 0.0.0.225?
   <cr>
r2(config)#access-list 1 permit 172.16.1.0 0.0.0.225
r2(config)#
Page 162
Notice that we did not have to use a permit any statement at the end of the access list. A
normal IP access list always has an implicit deny any as the last statement. This is true in this
case, but the administrative distance is only affected for those routes which have a matching
permit statement, so in this case the implicit deny any in the access list has no effect. The new
IP routing table contains
r2#clear ip route *
r2#sh ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
I   172.16.1.0 [130/610] via 172.16.3.1, 00:00:01, FastEthernet0/0
I   172.16.1.0 [100/610] via 172.16.3.1, 00:00:01, FastEthernet0/0
C   172.16.3.0 is directly connected, FastEthernet0/0
Notice that route 172.16.1.0 is the only route that has an adjusted administrative distance. If we
want to set the administrative distance of 172.16.1.0 to 130 and the administrative distance of
172.16.2.0 to 140, can we use two distance commands with two access lists? Sometimes. When
we enter the second distance command under RIP configuration, the second distance command
will overwrite the first. We can have two distance commands if the major networks are different.
In summary, we can set the administrative distance of any number of routes on the same major
network to any value between 1 and 255, but it has to be the same value. Only those routes which
are permitted in the access list will have their administrative distance modified.
Command
distribute-list
Purpose
Used to filter incoming or outgoing routing updates.
A distribute-list is used to delete routes from either incoming or outgoing IGRP updates.
Assume that router r2 wants to delete network 172.16.1.0 that is being advertised by router r1.
First, we need to assign a distribute-list to the IGRP process on router r2. We can either
use a standard or an extended IP access list, which gives us many possibilities.
1. Block the 172.16.1.0 route from any interface using a standard IP access list.break
r2(config)#router igrp 100
r2(config-router)#distribute-list?
   <1-199>        A standard IP access list number
r2(config-router)#distribute-list 1?

Page 163
   in              Filter incoming routing updates
   out             Filter outgoing routing updates
r2(config-router)#distribute-list 1 in?
   Ethernet        Ethernet IEEE 802.3
   Loopback        Loopback interface
   Null            Null interface
   <cr>
r2(config-router)#
Now create the access list to block the 172.16.1.0 route.
access-list 1 deny 172.16.1.0.0.0.0.255
access-list 1 permit any
We need the permit any statement in a distribute list; otherwise, the implicit deny all at
the end of the list would filter out all routes learned over all interfaces. The routing table for
router r2 now contains
r2#clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 4 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
I   172.16.2.0 [130/610] via 172.16.3.1, 00:00:01, FastEthernet0/0
C   172.16.3.0 is directly connected, FastEthernet0/0
Notice that the 172.16.1.0 route from router r1 has been filtered. The access list(s) that are
configured for IGRP can be seen by listing the configuration or by using the command show ip
protocols.break
r2#show ip protocols
Routing Protocol is "igrp 100"
  Sending updates every 90 seconds, next due in 43 seconds
  Invalid after 270 seconds, hold down 280, flushed after 630
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is 1
  Default networks flagged in outgoing updates
  Default networks accepted from incoming updates
  IGRP metric weight K1 = 1, K2 = 0, K3 = 1, K4 = 0, K5 = 0
  IGRP maximum hopcount 100
  IGRP maximum metric variance 1
  Redistributing: igrp 100
  Routing for Networks:
    172.16.0.0
  Routing Information Sources:
    Gateway           Distance      Last Update
    172.16.3.1          130           00:00:14
  Distance: (default is 100)
    Address         Wild mask      Distance List
    172.16.0.0      0.0.255.255         130 1
Page 164

2. Block the 172.16.1.0 route from any interface using an extended IP access list.
r2(config)#router igrp 100
r2(config-router)#distribute-list?
   <1-199>          A standard IP access list number
r2(config-router)#distribute-list 100?
   in               Filter incoming routing updates
   out              Filter outgoing routing updates
r2(config-router)#distribute-list 1 in?
   Ethernet         Ethernet IEEE 802.3
   Loopback         Loopback interface
   Null             Null interface
   <cr>
r2(config-router)#
access-list 100 deny ip any 172.16.1.0 0.0.0.255
access-list 100 permit ip any any
Notice that the route to block is listed as the destination address in the access list and not the
source address.
3. Block the 172.16.1.0 route from the Ethernet interface using a standard IP access list.
r2(config)#router igrp 100
r2(config-router)#distribute-list 1 in?
   Ethernet         Ethernet IEEE 802.3
   Loopback         Loopback interface
   Null             Null interface
   <cr>
r2(config-router)#distribute-list 1 in Ethernet?
   <0-1>            Ethernet interface number
r2(config-router)#distribute-list 1 in Ethernet 0?
   <cr>
r2(config-router)#distribute-list 1 in Ethernet 0/0
r2(config-rouFter)#
We can filter routes through a specific interface. If the route advertisement is learned through a
different interface, it will not be filtered.
4. Block the 172.16.1.0 route from the Ethernet interface using an extended IP access list.break
r2(config)#router igrp 100
r2(config-router)#distribute-list 1 in?
   Ethernet          Ethernet IEEE 802.3
   Loopback          Loopback interface
   Null   Null interface
   <cr>
Page 165
r2(config-router)#distribute-list 1 in Ethernet?
   <0-1>  Ethernet interface number
r2(config-router)#distribute-list 1 in Ethernet 0?
   <cr>
r2(config-router)#distribute-list 1 in Ethernet 0
r2(config-router)#

For examples 3 and 4, the access lists did not need to be modified from examples 1 and 2. To
filter outgoing route advertisements, the distribute list would be applied as an outgoing instead of
as an incoming list. This also gives us four possibilities for filtering. For the examples, assume
that router r2 wants to block the route to 172.16.4.1 in Fig. 9-1 so that router r1 does not receive
it.
1. Block the 172.16.4.0 route going out any interface using a standard IP access list.
r2(config)#router igrp 100
r2(config-router)#distribute-list 1?
   in              Filter incoming routing updates
   out             Filter outgoing routing updates
r2(config-router)#distribute-list 1 out?
   Ethernet        Ethernet IEEE 802.3
   Loopback        Loopback interface
   Null            Null interface
   Bgp             Border Gateway Protocol (BGP)
   Connected       Connected
   Egp             Exterior Gateway Protocol (EGP)
   Eigrp           Enhanced Interior Gateway Routing Protocol (EIGRP)
   Igrp            Interior Gateway Routing Protocol (IGRP)
   Isis            ISO IS-IS
   iso-igrp        IGRP for OSI networks
   ospf            Open Shortest Path First (OSPF)
   rip             Routing Information Protocol (RIP)
   static          Static routes
   <cr>
r2(config-router)#distribute-list 1 out
r2(config-router)#
There are many more selections available for outbound filters than for inbound. These additional
choices arc covered in Chap. 13. The access list for example 1 would contain
access-list 1 deny 172.16.4.0 0.0.0.255
access-list 1 permit any
The route 172.16.4.0 will not be contained in router r1's routing table after the filter has been
applied.break
Page 166
r1#sh ip route
  172.16.0.0/16 is subnetted, 4 subnets
I   172.16.5.0 [100/610] via 172.16.3.2, 00:00:03, Ethernet0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
The applied access list can be shown using the show ip protocols command.
r2#show ip protocols
Routing Protocol is "igrp 100"
  Sending updates every 90 seconds, next due in 18 seconds
  Invalid after 270 seconds, hold down 280, flushed after 630
  Outgoing update filter list for all interfaces is 1.

  Incoming update filter list for all interfaces is not set
  Default networks flagged in outgoing updates
  Default networks accepted from incoming updates
  IGRP metric weight K1 = 1, K2 = 0, K3 = 1, K4 = 0, K5 = 0
  IGRP maximum hopcount 100
  IGRP maximum metric variance 1
  Redistributing:igrp 100
  Routing for Networks:
    172.16.0.0
  Routing Information Sources:
    Gateway           Distance        Last Update
    172.16.3.1          100             00:00:07
  Distance: (default is 100)
2. Block the 172.16.4.0 route going out any interface using an extended IP access list.
r2(config)#router igrp 100
r2(config-router)#distribute-list 100 out
r2(config-router)#
access-list 100 deny ip any 172.16.4.0 0.0.0.255
access-list 100 permit ip any any
3. Block the 172.16.4.0 route going out the Ethernet interface using a standard IP access list.
r2(config)#router igrp 100
r2(config-router)#distribute-list 1 out
r2(config-router)#distribute-list 1 out Ethernet 0
r2(config-router)#
access-list 1 deny 172.16.4.0 0.0.0.255
access-list 1 permit any
4. Block the 172.16.4.0 route going out the Ethernet interface using an extended IP access
list.break
Page 167
r2(config)#router igrp 100
r2(config-router)#distribute-list 1 out
r2(config-router)#distribute-list 1 out Ethernet 0
r2(config-router)#
access-list 1 deny 172.16.4.0 0.0.0.255
access-list 1 permit any
Command
exit
Purpose
Exit router configuration mode and enter global configuration
mode.
r2(config)#router igrp 100
r2(config-router)#exit
r2(config)#

Command
help
Purpose
Get help on help
Command
maximum-paths
Purpose
Forward packets over multiple paths.
r1(config-router)#maximum-paths?
   <1-6> Number of paths
r1(config-router)#maximum-paths 3?
   <cr>
IGRP can be used to distribute traffic on up to six routes to the same destination. The
maximum-paths command allows the setting of the number of paths, if they exist, over which
traffic can be distributed to the same destination network.
Command
neighbor
Purpose
Specify a neighbor on a nonbroadcast network.
For NBMA networks such as X.25 and Frame Relay, additional configuration information is
needed to propagate IGRP routing updates. Thecontinue
Page 168
neighbor command would be needed in order for IGRP updates to cross a Frame Relay cloud.
The neighbor command can be used on a multiaccess network (Ethernet) in conjunction with
the passiveinterface command, as we shall see.
Command
network
Purpose
To inform IGRP which networks to advertise and out which
interfaces to advertise. Any active interface that has an IP address
contained in the network command will be used to send and
receive IGRP routing updates.
Command
no
Purpose
Used to negate configuration commands

Purpose
Used to negate configuration commands.
The no command is used to undo previous configuration commands. If we decide, for example,
not to advertise a network, remove a distribution list, or remove an administrative distance
modifier, we would use the no command.
r1(config)#router igrp 100
r1(config-router)#no network 172.16.0.0
r1(config-router)#no distribute-list 100 out
r1(config-router)#no distance 130
r1(config-router)#
Command
offset-list
Purpose
Add or subtract an offset from IGRP or RIP metrics.
An offset-list command is used to adjust the metric of routes in incoming or outgoing
IGRP updates using a standard IP access list.
1. Increase the cost of all incoming IGRP routes on router r1 by 50.break
r1(config)#router igrp 100
r1(config-router)#offset-list?
   <0-99>                      Access list of networks to apply offset (0 selects all n
r1(config-router)#offset-list 1?
   in                          Perform offset on incoming updates
   out                         Perform offset on outgoing updates
r1(config-router)#offset-list 1 in?
   <0-2147483647>              Offset
r1(config-router)#offset-list 1 in 50?
   Ethernet                    Ethernet IEEE 802.3
   Loopback                    Loopback interface
   Null                        Null interface
   <cr>
r1(config-router)#offset-list 1 in 50
r1(config-router)#
access-list 1 permit any
Page 169
r1#clear ip route *
r1#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
I   172.16.1.0 [100/660] via 172.16.3.1, 00:00:01, Ethernet0
I   172.16.2.0 [100/660] via 172.16.3.1, 00:00:01, Ethernet0
C   172.16.3.0 is directly connected, FastEthernet0/0

The form off set-list 0 in 50 could have been used to achieve the same result. Using
an access-list number of 0 has the effect of applying the offset to all routes.
2. Increase the cost of route 172.16.4.0 on router r1 by 50.
r1(config-router)#offset-list 1 in 50
access-list 1 permit 172.16.4.0 0.0.0.255
r1#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
I   172.16.4.0 [100/660] via 172.16.3.2, 00:00:04, FastEthernet8/0
I   172.16.5.0 [100/610] via 172.16.3.2, 00:00:04, FastEthernet8/0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, FastEthernet8/0
3. Increase the cost of all outgoing IGRP routes from router r1 by 50.
r1(config)#router igrp
r1(config-router)#offset-list 1 out?
   <0-2147483647>           Offset
r1(config-router)#offset-list 1 out 50?
   Ethernet                 Ethernet IEEE 802.3
   Loopback                 Loopback interface
   Null                     Null interface
   <cr>
r1(config-router)#offset-list 1 out 50
r1(config-router)#
access-list 1 permit 172.16.0.0 0.0.255.255
r2#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
I   172.16.4.0 [100/660] via 172.16.3.2, 00:00:01, FastEthernet8/0
I   172.16.5.0 [100/660] via 172.16.3.2, 00:00:01, FastEthernet8/0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, FastEthernet8/0
Again, we could have used access-list 0 to apply the offset to all routes. Applied offset
lists can be seen by using the show ip protocols command.break
Page 170
r1#show ip protocols
Routing Protocol is "igrp 100"
  Sending updates every 90 seconds, next due in 24 seconds
  Invalid after 270 seconds, hold down 280, flushed after 630
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is not set
  Outgoing routes will have 50 added to metric if on list 1
  Default networks flagged in outgoing updates
  Default networks accepted from incoming updates
  IGRP metric weight K1 = 1, K2 = 0, K3 = 1, K4 = 0, K5 = 0
  IGRP maximum hopcount 100
  IGRP maximum metric variance 1
  Redistributing: igrp 100
  Routing for Networks:

    172.16.0.0
  Routing Information Sources:
    Gateway           Distance      Last Update
    172.16.3.2          100           00:01:02
  Distance: (default is 100)
4. Increase the metric of route 172.16.1.0 that is advertised by router r1 by router 2.
access-list 1 permit 172.16.1.0 0.0.0.255
r2#sh ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
I   172.16.1.0 [130/660] via 172.16.3.1, 00:00:02, Ethernet0
I   172.16.2.0 [130/610] via 172.16.3.1, 00:00:02, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
Command
passive-interface
Purpose
Suppress routing updates on an interface.
The passive-interface command stops routing updates from being sent out an interface,
but routing updates received on a passive interface will still be received and processed. For
example, if the 172.16.3.1 interface of router r1 in Fig. 9-1 is made passive, router r2 will not
receive routing updates from router r1 (because they are not being sent), but router r1 will still
receive routing updates from router r2.break
r1(config)#router igrp 100
r1(config-router)#passive-interface Ethernet 0
r1(config-router)#
r1#clear ip route *
r1#sh ip route
  172.16.0.0/16 is subnetted, 5 subnets
I   172.16.4.0 [100/610] via 172.16.3.2, 00:00:47, FastEthernet8/0
Page 171
I   172.16.5.0 [100/610] via 172.16.3.2, 00:00:47, FastEthernet8/0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, FastEthernet8/0
r2#sh ip route
  172.16.0.0/16 is subnetted, 3 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
IGRP normally sends routing updates as a broadcast on an Ethernet network that all hosts must

process. To prevent broadcasts, the passive-interface command can be used in
conjunction with the neighbor command. If we want router r1 in Fig. 9-1 to send routing
updates to a unicast address, we can use the following configuration:
Router igrp 100
  Passive-interface ethernet 0
  Neighbor 172.16.3.2
Command
redistribute
Purpose
Redistribute information from another routing protocol.
This command is covered in Chap. 13.
Command
timers
Purpose
Adjust routing timers.
The IGRP timers can be viewed by using the command show ip protocols.break
r2#show ip protocols
Routing Protocol is "igrp 100"
  Sending updates every 90 seconds, next due in 32 seconds
  Invalid after 270 seconds, hold down 280, flushed after 630
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is not set
  Default networks flagged in outgoing updates
  Default networks accepted from incoming updates
  IGRP metric weight K1 = 1, K2 = 0, K3 = 1, K4 = 0, K5 = 0
  IGRP maximum hopcount 100
  IGRP maximum metric variance 1
  Redistributing: igrp 100
  Routing for Networks:
    172.16.0.0
  Routing Information Sources:
    Gateway           Distance        Last Update
    172.16.3.1          100             00:00:27
  Distance: (default is 100)
Page 172
The update timer (90 seconds) is the time between routing updates sent out of an interface.
Routes are invalid after 270 seconds. This means that if a known route is not received within 270
seconds of the last advertisement for this route, the route will be declared invalid. The hold down
time is the time that a route will remain in the routing table before a new advertisement for that
route will be accepted by the router. The flush time is the amount of time that must expire before
a route is removed from the routing table if no routing updates for this route have been received.

One timer value that does not appear in the list is the sleep time. The sleep time is the amount of
time an IGRP routing update will be delayed before transmission and is measured in
milliseconds. The sleep time parameter is optional and has a default value of zero. In most cases,
you probably should never adjust the IGRP timers. They have been selected to provide optimal
performance from the protocol. However, if you must, here is the syntax.
r2(config)#router igrp 100
r2(config-router)#timers?
   basic Basic routing protocol update timers
r2(config-router)#timers basic?
   <0-4294967295>   Interval between updates
r2(config-router)#timers basic 91?
   <1-4294967295>   Invalid
r2(config-router)#timers basic 91 271?
   <0-4294967295>   Holddown
r2(config-router)#timers basic 91 271 281?
   <1-4294967295>   Flush
r2(config-router)#timers basic 91 271 281 631?
   <1-4294967295>   Sleep time, in milliseconds
   <cr>
r2(config-router)#timers basic 91 271 281 631 10?
   <cr>
r2(config-router)#timers basic 91 181 181 241 10?
   <cr>
The new timer values can be verified by using the show ip protocols command.break
r2#show ip protocols
Routing Protocol is "igrp 100"
  Sending updates every 91 seconds, next due in 77 seconds.
  Invalid after 271 seconds, hold down 281, flushed after 631
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is not set
  Default networks flagged in outgoing updates
  Default networks accepted from incoming updates
  IGRP metric weight K1 = 1, K2 = 0, K3 = 1, K4 = 0, K5 = 0
Page 173
  IGRP maximum hopcount 100
  IGRP maximum metric variance 1
  Redistributing: igrp 100
  Routing for Networks:
    172.16.0.0
  Routing Information Sources:
    Gateway     Distance    Last Update
    172.16.3.1    100         00:01:07
  Distance: (default is 100)
Command
traffic-share
Purpose
Algorithm for computing traffic share for alternate routes.

When multiple unequal cost routes exist to the same destination network, the traffic-share
command controls how packets are distributed among the different paths. There are two
possibilities for traffic share, balanced and minimum. Balanced mode will distribute traffic in
proportion to the metrics of the routes. The min traffic-share option will only use the
routes that have minimum costs. The default for traffic-share is balanced.
r2(config-router)#traffic-share?
   balanced            Share inversely proportional to metric
   min                 All traffic shared among min metric paths
r2(config-router)#traffic-share balanced
or
r2(config-router)#traffic-share min?
Command
validate-update-source
Purpose
Perform sanity checks against source address of routing updates.
This function is enabled by default. The source address is checked to see if it is a proper address.
In Fig. 9-1, IGRP routing updates received by router r1 on interface 172.16.3.1 should be
received from an IGRP router on this network. If the source address is not on the network, then
the routing update will be rejected. To disable this feature, use the no command in conjunction
with the validate-update-source command.
r1(config)#router igrp 100
r1(config-router)#no validate-update-source
Command
variance
Purpose
Control load balancing variance.
IGRP can have up to six routes to the same destination in the routing table. Multiple routes to the
same destination will only be installed incontinue
Page 174
the routing table if their cost, or metric, passes a test that will be illustrated with Fig. 9-6.
Router r1 in Fig. 9-6 has two routes to network 172.16.0.0. The first route is directly to router r2
with a cost of A. The second route is through router r2 with a cost of B. Router r1 will include the
route through router r2 if two conditions are met:
1. If cost A is greater than cost C.
2. If variance * A ± B.

Needless to say, you won't be making many changes to the variance! However, if you must, the
command is
r2(config-router)#variance?
   <1-128>            Metric variance multiplier
r2(config-router)#variance 2?
   <cr>
Debugging IGRP
The network in Fig. 9-1 is used to illustrate the IGRP debugging commands. There are two
commands that can be used for debugging IGRP.break
Figure 9-6
Illustration of the variance parameter for IGRP.
Page 175
The first is
r1#debug ip igrp events
IGRP event debugging is on
which produces the console output
IGRP: sending update to 255.255.255.255 via Loopback0 (172.16.1.1)
IGRP: Update contains 4 interior, 0 system, and 0 exterior routes.
IGRP: Total routes in update: 4
IGRP: sending update to 255.255.255.255 via Loopback1 (172.16.2.1)
IGRP: Update contains 4 interior, 0 system, and 0 exterior routes.
IGRP: Total routes in update: 4
IGRP: sending update to 172.16.3.2 via FastEthernet8/0 (172.16.3.1)
IGRP: Update contains 3 interior, 0 system, and 0 exterior routes.
IGRP: Total routes in update: 3

IGRP: received update from 172.16.3.2 on FastEthernet8/0
IGRP: Update contains 2 interior, 0 system, and 0 exterior routes.
IGRP: Total routes in update: 2
r2#debug ip igrp?
  events                IGRP protocol events
  transactions          IGRP protocol transactions
r1#debug ip igrp events?
  A.B.C.D               IP address of neighbor
  <cr>
r1#debug ip igrp events 172.16.3.2?
  <cr>
r1#debug ip igrp events 172.16.3.2
IGRP event debugging is on for address 172.16.3.2
which produces the console output
IGRP: sending update to 255.255.255.255 via Ethernet0 (172.16.3.1)
IGRP: Update contains 2 interior, 0 system, and 0 exterior routes.
IGRP: Total routes in update: 2
IGRP: received update from 172.16.3.2 on Ethernet0
IGRP: Update contains 2 interior, 0 system, and 0 exterior routes.
IGRP: Total routes in update: 2
Notice that the debug ip igrp events displays all sent and received IGRP routing updates
and that the debug ip igrp events 172.16.3.2 displays only sent and received
updates with a particular neighbor.break
r1#debug ip igrp transactions
IGRP protocol debugging is on
IGRP: received update from 172.16.3.2 on Ethernet0
  subnet 172.16.4.0, metric 610 (neighbor 501)
  subnet 172.16.5.0, metric 610 (neighbor 501)
IGRP: sending update to 255.255.255.255 via Ethernet0 (172.16.3.1)
Page 176
  subnet 172.16.1.0, metric = 501
  subnet 172.16.2.0, metric = 501
IGRP: sending update to 255.255.255.255 via Loopback0 (172.16.1.1)
  subnet 172.16.4.0, metric = 610
  subnet 172.16.5.0, metric = 610
  subnet 172.16.2.0, metric = 501
  subnet 172.16.3.0, metric = 110
IGRP: sending update to 255.255.255.255 via Loopback1 (172.16.2.1)
  subnet 172.16.4.0, metric = 610
  subnet 172.16.5.0, metric = 610
  subnet 172.16.1.0, metric = 501
  subnet 172.16.3.0, metric = 110
r1#debug ip igrp transactions 172.16.3.2
IGRP protocol debugging is on for address 172.16.3.2
IGRP: sending update to 255.255.255.255 via Ethernet0 (172.16.3.1)
  subnet 172.16.1.0, metric = 501
  subnet 172.16.2.0, metric = 501
IGRP: received update from 172.16.3.2 on Ethernet0
  subnet 172.16.4.0, metric 610 (neighbor 501)
  subnet 172.16.5.0, metric 610 (neighbor 501)

r1#debug ip igrp transactions 172.16.3.2 172.16.4.0
IGRP protocol debugging is on for address 172.16.3.2
  for target route 172.16.4.0
IGRP: received update from 172.16.3.2 on Ethernet0
  subnet 172.16.4.0, metric 610 (neighbor 501)
IGRP: sending update to 255.255.255.255 via Ethernet0 (172.16.3.1)
The debug ip igrp events provides a summary of the sent and received IGRP messages
and the debug ip igrp transactions provides more detailed information such as the
actual routes sent or received, the metrics, and the neighbor. If you have configured an IGRP
network but the routing tables do not contain the routes that were expected, debugging IGRP is a
valuable tool for determining what the protocol is really doing and can lead you in the right
direction for resolving IGRP problems.
Summary
The important IGRP commands are listed in order below. All the IGRP commands are important,
but you will find that some are more useful than others.break
Page 177
IGRP Commands
1. router igrp <process id>
2. network
3. redistribute (see Chap. 13)
4. distribute-list (see Chap. 13)
5. default-metric (see Chap. 13)
6. passive-interface
7. offset-list
8. distance
9. maximum-paths
10. traffic-share
11. All other IGRP commandsbreak
Page 179
Chapter 10—

Configuring EIGRP
Page 180
The Enhanced Interior Gateway Routing Protocol (EIGRP) is a Cisco proprietary routing
protocol based on the IGRP routing protocol. EIGRP uses the Diffusing Update Algorithm
(DUAL) that was created at SRI International. EIGRP enhances IGRP (hence the name) by
including many new features. EIGRP has a faster convergence time than IGRP because EIGRP
stores the routing tables from all neighbors, allowing EIGRP to select alternate routes in case of a
route failure. Support for VLSM and route summarization has been included to overcome the
problems we have seen with RIP and IGRP. RIP and IGRP periodically transmit their entire
routing tables even when there have been no changes since the previous routing update. EIGRP
only sends updates when information for a route changes and then only sends the information for
the changed route, significantly reducing the utilized bandwidth. RIP and IGRP have no
knowledge of their neighbors, so routing updates are sent and received as broadcasts. EIGRP
uses a neighbor-discovery mechanism to determine the existence of neighboring routers. The
discovery process is enabled through the use of a hello protocol. This allows EIGRP to reliably
send and receive routing updates by exchanging acknowledgments with its neighbors. Finally,
since EIGRP maintains the routing tables of its neighbors, loop-free paths can be determined,
which is a significant improvement over RIP and IGRP. These features are supported through the
use of multiple packet types for interrouter communication. Hello packets are used not only for
neighbor discovery but also as an acknowledgment. A hello packet with no data is considered an
acknowledgment. Update packets are used to transmit routing information reliably. Update
packets are sent as unicast packets to neighbors or as multicast packets when a change to the
routing information occurs. Sending packets as unicast or multicast reduces the number of
packets that nonrouting hosts on the network need to process.
EIGRP
The network in Fig. 10-1 will be used to demonstrate the various configuration commands
possible with EIGRP.break
Router r1 Configuration       Router r2 Configuration
hostname r1                   hostname r2
enable password cisco         enable password cisco
interface Loopback0           interface Loopback0
Page 181

Figure 10-1
Network configuration for EIGRP examples.
Router r1 Configuration                Router r2 Configuration
ip address 172.16.1.1 255.255.255.0    ip address 172.16.4.1 255.255.255.0
interface Loopback1                    interface Loopback1
ip address 172.16.2.1 255.255.255.0    ip address 172.16.5.1 255.255.255.0
interface Ethernet0                    interface Ethernet0
ip address 172.16.3.1 255.255.255.0    ip address 172.16.3.2 255.255.255.0
As you can see in Fig. 10-1, we need only one physical interface on each router. The other
networks in the examples that follow will be simulated using loopback interfaces. The first step
in configuring EIGRP is to start the EIGRP routing process. This is accomplished by entering
configuration mode and enabling the EIGRP process.
r1#configure terminal
Enter configuration commands, one per line. End with CNTL/Z
r1(config)#router eigrp?
<1-65535>         Autonomous system number
r1(config-router)#router eigrp 100
r1(config-router)#
The EIGRP routing process must be assigned an autonomous system number in the range
1–65535. This actually should be called a routing process number because this number does not
have to match your autonomous system number. Multiple EIGRP routing processes can be
running on the same router, but only processes with the same number will exchange routing
updates. As with IGRP, EIGRP needs to know which networks to advertise. For router r1, we
want to advertise networks 172.16.1.0, 172.16.2.0, and 172.16.3.0. The network command is
used to inform EIGRP which networks to advertise in the routing updates.break
r1(config-router)#network 172.16.1.0
r1(config-router)#network 172.16.2.0
r1(config-router)#network 172.16.3.0
r1(config-router)#
Page 182
At this point, list the current router configuration to see how we have configured the basic
EIGRP routing process.
router eigrp 100
network 172.16.0.0

Why does the configuration show only one network command when we entered three? As with
RIP and IGRP, the network command only accepts major network numbers. Since all of router
r1's attached networks belong to the class B network 172.16.0.0, these are the networks that
EIGRP will advertise. The network command also determines which interfaces will send and
receive EIGRP routing updates. Since all our networks belong to 172.16.0.0, EIGRP will send
and receive updates on all the interfaces. The configuration on router r2 will be identical to the
configuration of router r1.
r2(config)#router eigrp 100
r2(config-router)#network 172.16.0.0
r2(config-router)#
How many routes will EIGRP advertise is this situation, one or three? Like RIP Version 1 and
IGRP, EIGRP will only advertise all three attached subnetworks because all attached networks
are included in the major network 172.16.0.0. To determine if routers r1 and r2 are exchanging
routing updates, use the command show ip route on routers r1 and r2.break
r1#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, * - candidate default
  U - per-user static route
Gateway of last resort is not set
  172.16.0.0/16 is subnetted, 5 subnets
D   172.16.4.0 [90/156160] via 172.16.3.2, 00:13:21, Ethernet0
D   172.16.5.0 [90/156160] via 172.16.3.2, 00:13:21, Ethernet0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
r2#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP EX - EIGRP external, O - OSPF, IA - OSPF inter area
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, * - candidate default
  U - per-user static route
Page 183
Gateway of last resort is not set
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
D   172.16.1.0 [90/156160] via 172.16.3.1, 00:14:25, Ethernet0
D   172.16.2.0 [90/156160] via 172.16.3.1, 00:14:25, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
Notice that routers r1 and r2 have three directly connected routes and two routes that have been
learned from EIGRP. Each entry in the routing table contains the following information:
__ How the router was learned (C—directly connected; or D—from EIGRP).

__ The destination network.
__ The administrative distance and route cost [90/156160] for EIGRP or directly connected.
__ For EIGRP, the transit network (via 172.16.3.1).
__ The age of the route—00:14:25. EIGRP does not periodically transmit the routing table.
Routing updates are transmitted if a change occurs, making EIGRP a much ''quieter" protocol
than RIP or EIGRP. This entry shows how much time has elapsed since the last update for this
route.
__ The interface to use when sending a packet to the destination network.
This is the minimum configuration required to enable EIGRP. The IP routing table contains the
information necessary for each router to determine how to route a packet to a destination
network. For the connected networks, the router needs only to forward a packet destined for a
host on the network out the directly connected interface. For packets destined for a network not
on a directly connected interface, the router must determine which interface should be used to
forward the packet.
What happens if the subnet masks are not identical? Assume that the two networks on router r1,
Ethernet 0 and Ethernet 1, will have no more than 14 hosts each. We can use VLSM to
sub-subnet network 172.16.1.0 into two networks using a 28-bit subnet mask, as shown in Fig.
10-2.break
Router r1 configuration changes
interface Loopback0
ip address 172.16.1.17 255.255.255.240
interface Loopback 1
ip address 172.16.1.33 255.255.255.240
Page 184
Figure 10-2
EIGRP—Using VLSM on router r1 on the same major network.
How will this affect the EIGRP updates? If we examine the routing table for router r2, we see
that the new sub-subnetted routes do appear along with their associated subnet mask.
r2#show ip route
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks

D   172.16.1.32/28 [90/156160] via 172.16.3.1, 00:00:01, FastEthernet0/0
D   172.16.1.16/28 [90/156160] via 172.16.3.1, 00:00:01, FastEthernet0/0
C   172.16.4.0/24 is directly connected, Loopback0
C   172.16.5.0/24 is directly connected, Loopback1
C   172.16.3.0/24 is directly connected, FastEthernet0/0
EIGRP carries subnet mask information in the routing updates, so router r1 will advertise
networks 172.16.1.16, and 172.16.1.32 out network 172.16.3.0. For this example, the major
network number is 172.16.0.0. What if these sub-subnetted networks use a different major subnet
number, say, 173.16.0.0, as shown in Fig. 10-3?break
Router r1 configuration changes
interface Loopback0
ip address 173.16.1.17 255.255.255.240
interface Loopback 1
ip address 173.16.1.33 255.255.255.240
router eigrp 100
network 172.16.0.0
network 173.16.0.0
Figure 10-3
EIGRP—Using VLSM on router r1 on a different major network.
Page 185
r2# clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 3 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, Ethernet0
D   173.16.0.0/16 [90/156160] via 172.16.3.1, 00:00:18, Ethernet0
Notice that router r1 is advertising network 173.16.0.0, enabling router r2 to be able to reach the
two 173.16 networks on router r1. The subnet mask is different from the mask used for the
172.16 network, but since EIGRP transmits subnet information, the routes will be advertised.
Also notice that EIGRP automatically summarizes network 173.16.0.0. What happens if we
assign networks for the sub-subnetted network 173.16.0.0 on router r2 (Fig. 10-4).
Router r2 configuration changes
interface Loopback0
ip address 173.16.1.49 255.255.255.240
interface Loopback 1
ip address 173.16.1.65 255.255.255.240
router eigrp 100
network 172.16.0.0

network 173.16.0.0
The routing table for router r2 now containsbreak
r2#clear ip route *
r2#show ip route
  172.16.0.0/16 is variably subnetted, 2 subnets, 2 masks
D   172.16.0.0/16 is a summary, 00:00:03, Null0
C   172.16.3.0/24 is directly connected, Ethernet0
  173.16.0.0/16 is variably subnetted, 3 subnets, 2 masks
C   173.16.1.48/28 is directly connected, Loopback0
D   173.16.0.0/16 is a summary, 00:00:03, Null0
C   173.16.1.64/28 is directly connected, Loopback1
Figure 10-4
EIGRP—Using VLSM on routers r1 and r2 on a different major network.
Page 186
Where are the routes to 173.16.1.16 and 173.16.1.32? We have succeeded in confusing EIGRP.
EIGRP automatically summarizes networks in the routing update. Both routers r1 and r2 are
advertising that they can reach network 173.16.0.0. Which is correct? They both are! This
demonstrates the behavior of EIGRP when we have subnets of the same network on different
routers and the fact that EIGRP is automatically summarizing the routes. For this scenario, we
need to disable automatic route summarization. This is a good time to introduce the EIGRP
routing commands, since the first one deals with route summarization. These commands can be
listed by entering EIGRP configuration mode and typing a question mark.
r1(config)#router eigrp 100
r1(config-router)#?
Router configuration commands:
  auto-summary           Enable automatic network number summarization
  default-information    Control distribution of default information
  default-metric         Set metric of redistributed routes
  distance               Define an administrative distance
  distribute-list        Filter networks in routing updates
  eigrp                  EIGRP specific commands
  exit                   Exit from routing protocol configuration mode
  help                   Description of the interactive help system
  maximum-paths          Forward packets over multiple paths
  metric                 Modify IGRP routing metrics and parameters
  neighbor               Specify a neighbor router
  network                Enable routing on an IP network
  no                     Negate or set default values of a command
  passive-interface      Suppress routing updates on an interface
  redistribute           Redistribute information from another routing protoco

  timers                 Adjust routing timers
  traffic-share          Algorithm for computing traffic share for alternate r
  variance               Control load balancing variance
Command
auto-summary
Purpose
Enable automatic network number summarization.
This default feature of EIGRP caused problems with the network in Fig. 10-4. Automatic route
summarization can be disabled on routers r1 and r2 by using the command no
auto-summary in router configuration mode.break
r1(config)#router eigrp 100
r1(config-router)#no auto-summary
r1(config-router)#
2(config)#router eigrp 100
r2(config-router)#no auto-summary
r2(config-router)#
Page 187
With automatic route summarization disabled, the routing tables for routers r1 and r2 contain
routes to all the subnetworks.
r1#show ip route
  172.16.0.0/16 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, FastEthernet8/0
  173.16.0.0/16 is subnetted, 4 subnets
D   173.16.1.48 [90/156160] via 172.16.3.2, 00:00:13, Ethernet0
C   173.16.1.32 is directly connected, Loopback1
C   173.16.1.16 is directly connected, Loopback0
D   173.16.1.64 [90/156160] via 172.16.3.2, 00:00:13, Ethernet0
r2#sh ip route
  172.16.0.0/16 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, FastEthernet0/0
  173.16.0.0/16 is subnetted, 4 subnets
C   173.16.1.48 is directly connected, Loopback0
D   173.16.1.32 [90/156160] via 172.16.3.1, 00:01:02, FastEthernet0/0
D   173.16.1.16 [90/156160] via 172.16.3.1, 00:01:02, FastEthernet0/0
C   173.16.1.64 is directly connected, Loopback1
Route summarization is beneficial because the size of the routing updates is reduced, thereby
reducing the bandwidth requirements, but as we have seen, route summarization does not
produce the desired result for all scenarios. The network configuration shown in Fig. 10-1 will be
used to illustrate the remaining EIGRP commands.

Command
default-information
Purpose
Control distribution of default information.
This command is covered in Chap. 13.break
Command
default-metric
Purpose
A router may be running more that one IP routing protocol (RIP,
IGRP, EIGRP, or OSPF). Each routing protocol has a different
metric; RIP has a hop count, OSPF has a dimensionless cost, and
EIGRP has a cost based on five metrics. When injecting routes from
one routing protocol to another, the route metric needs to be
converted from one protocol to another. The default-metric
command is used to perform this conversion. This will be covered in
detail in Chap. 13.
Command
distance
Purpose
Used to adjust the administrative distance of a route.
Page 188
r2(config)#router eigrp 100
r2(config-router)#distance?
   <1-255>           Administrative distance
eigrp IP-EIGRP distance
Enter an administrative distance in the range 1-255. The default for EIGRP is 90. The
administrative distance is used when more than one routing protocol is active on a router. For
example, if we are running EIGRP and RIP and each protocol has a route to the same network,
the EIGRP route would be preferred because EIGRP has a lower administrative distance (90)
than RIP (120). We can force the EIGRP route to not be chosen by setting the administrative
distance to be higher than that for RIP.
r2(config-router)#distance 130?
   A.B.C.D IP Source address
(Notice that we don't have the <cr> option that we had with RIP and IGRP)
r2(config-router)#distance 130 172.16.0.0?
   A.B.C.D IP address mask
r2(config-router)#distance 130 172.16.0.0 0.0.255.255?
   <1-99>IP Standard access list number
eigrp IP-EIGRP distance
   <cr>

Entering <cr> will apply the new administrative distance only to network 172.16.0.0. Notice that
the IP address mask is the "reverse" of what is used for a subnet mask. This is the same style used
for IP access lists that were discussed in Chap. 7. Since router r2 is only learning about network
172.16.0.0 from router r1, this has the same effect as applying the administrative distance to all
networks learned from EIGRP.
r2#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
D   172.16.1.0 [130/156160] via 172.16.3.1, 00:00:02, Ethernet0
D   172.16.2.0 [130/156160] via 172.16.3.1, 00:00:02, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
Finally, we can choose the routes that will have their administrative distance modified through
the use of an IP access list. Assume that we want to change the administrative distance of the
route to 172.16.1.0 to 130 but not affect the route to 172.16.2.0. First, we would use the EIGRP
commandbreak
Page 189
r2(config-router)#distance 130 172.16.0.0 0.0.255.255?
   <1-99>        IP Standard access list number
eigrp            IP-EIGRP distance
   <cr>
r2(config-router)#distance 130 172.16.0.0 0.0.255.255 1?
   <cr>
r2(config-router)#distance 130 172.16.0.0 0.0.255.255 1
r2(config-router)#
The final step is to create an IP access list that informs EIGRP to adjust the administrative
distance of 172.16.1.0 but leave the administrative distance of 172.16.2.0 set to 90. Without an
access list but with the distance command shown above, all the routes learned for network
172.16.0.0 will have their administrative distance set to 130 as shown. This is the default
behavior.
r2#clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
D   172.16.1.0 [130/156160] via 172.16.3.1, 00:00:01, FastEthernet0/0
D   172.16.2.0 [130/156160] via 172.16.3.1, 00:00:01, FastEthernet0/0
C   172.16.3.0 is directly connected, FastEthernet0/0
The access list needed to adjust only the administrative distance of 172.16.1.0 is
r2(config)#access-list 1?
   deny           Specify packets to reject
   permit         Specify packets to forward
r2(config)#access-list 1 permit?
   Hostname or A.B.C.D Address to match
   any         Any source host

   host        A single host address
r2(config)#access-list 1 permit 172.16.1.0 0.0.0.225?
   <cr>
r2(config)#access-list 1 permit 172.16.1.0 0.0.0.225
r2(config)#
Notice that we did not have to use a permit any statement at the end of the access list. A normal
IP access list always has an implicit deny any as the last statement. This is true in this case, but
the administrative distance is only affected for those routes which have a matching permit
statement, so in this case the implicit deny any in the access list has no effect. The new IP routing
table containsbreak
Page 190
r2#clear ip route *
r2#sh ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
D   172.16.1.0 [130/156160] via 172.16.3.1, 00:00:01, FastEthernet0/0
D   172.16.2.0 [90/156160] via 172.16.3.1, 00:00:01, FastEthernet0/0
C   172.16.3.0 is directly connected, FastEthernet0/0
Notice that route 172.16.1.0 is the only route that has an adjusted administrative distance. If we
want to set the administrative distance of 172.16.1.0 to 130 and the administrative distance of
172.16.2.0 to 140, can we use two distance commands with two access lists? Sometimes. When
we enter the second distance command under EIGRP configuration, the second distance
command will overwrite the first. We can have two distance commands if the major networks are
different. In summary, we can set the administrative distance of any number of routes on the
same major network to any value between 1 and 255, but it has to be the same value. Only those
routes which are permitted in the access list will have their administrative distance modified.
Another form of the distance command of EIGRP is to adjust internal and external routes as
shown.
r2(config-router)#distance?
   <1-255>        Administrative distance
eigrp             IP-EIGRP distance
r2(config-router)#distance eigrp?
   <1-255>        Distance for internal routes
r2(config-router)#distance eigrp 130?
   <1-255>        Distance for external routes
r2(config-router)#distance eigrp 130 90?
   <cr>
r2(config-router)#distance eigrp 130 90
This form of the distance command for external routes is covered in Chap. 13. This form also can
be used to adjust the distance of the internal routes by using
r2(config-router)#distance eigrp 130 90
This will set the distance of all our routes to 130, since our routes are all internal routes.

The previous form of the distance command using access lists is more flexible because it can be
used to adjust particular routes. If we use both forms of the distance command, the first form
takes precedencecontinue
Page 191
over the distance eigrp command. For example, assume that we have the following
configuration on router r2.
router eigrp 100
  network 172.16.0.0
  distance eigrp 115 62
  distance 130 172.16.0.0 0.0.255.255
Router r2's routing table will contain
r2#show ip route
  172.16.0.0/16 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
D   172.16.1.0 [130/156160] via 172.16.3.1, 00:00:01, FastEthernet0/0
D   172.16.2.0 [130/156160] via 172.16.3.1, 00:00:01, FastEthernet0/0
C   172.16.3.0 is directly connected, FastEthernet0/0
Command
distribute-list
Purpose
Used to filter incoming or outgoing routing updates.
A distribute-list is used to delete routes from either incoming or outgoing EIGRP
updates. Assume that router r2 wants to delete network 172.16.1.0 that is being advertised by
router r1. First, we need to assign a distribute-list to the EIGRP process on router r2. We
can either use a standard or an extended IP access list, which gives us many possibilities.
1. Block the 172.16.1.0 route from any interface using a standard IP access list.
r2(config)#router eigrp 100
r2(config-router)#distribute-list?
   <1-199>          A standard IP access list number
r2(config-router)#distribute-list 1?
   in               Filter incoming routing updates
   out              Filter outgoing routing updates
r2(config-router)#distribute-list 1 in?
   Ethernet         Ethernet IEEE 802.3
   Loopback         Loopback interface
   Null             Null interface
   <cr>
r2(config-router)#
Now create the access list to block the 172.16.1.0 route.break

access-list 1 deny       172.16.1.0 0.0.0.255
access-list 1 permit any
Page 192
We need the permit any statement in a distribute list; otherwise, the implicit deny all at the end of
the list would filter out all routes learned over all interfaces. The routing table for router r2 now
contains
r2#clear ip route *
r2#show ip route
  172.16.0.0/16 is subnetted, 4 subnets
C   172.16.4.0 is directly connected, Loopback0
C   172.16.5.0 is directly connected, Loopback1
D   172.16.2.0 [90/156160] via 172.16.3.1, 00:00:01, Ethernet0
C   172.16.3.0 is directly connected, Ethernet0
Notice that the 172.16.1.0 route from router r1 has been filtered. The access list(s) that are
configured for EIGRP can be seen by listing the configuration or by using the command show
ip protocols.
r2#show ip protocols
Routing Protocol is "eigrp 100"
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is 1
  Default networks flagged in outgoing updates
  Default networks accepted from incoming updates
  EIGRP metric weight K1 = 1, K2 = 0, K3 = 1, K4 = 0, K5 = 0
  EIGRP maximum hopcount 100
  EIGRP maximum metric variance 1
  Redistributing: eigrp 100, igrp 100
  Automatic network summarization is in effect
  Routing for Networks:
    172.16.0.0
  Routing Information Sources:
    Gateway      Distance     Last Update
    172.16.3.1      90          00:01:00
  Distance: internal 90 external 170
2. Block the 172.16.1.0 route from any interface using an extended IP access list.break
r2(config)#router eigrp 100
r2(config-router)#distribute-list?
   <1-199>                   A standard IP access list number
r2(config-router)#distribute-list 100?
   in                        Filter incoming routing updates
   out                       Filter outgoing routing updates
r2(config-router)#distribute-list 1 in?
   Ethernet                  Ethernet IEEE 802.3
   Loopback                  Loopback interface
   Null                      Null interface
   <cr>
Page 193

r2(config-router)#
access-list 100 deny         ip any 172.16.1.0 0.0.0.255
access-list 100 permit       ip any any
Notice that the route to block is listed as the destination address in the access list and not the
source address.
3. Block the 172.16.1.0 route from the Ethernet interface using a standard IP access list.
r2(config)#router eigrp 100
r2(config-router)#distribute-list 1 in?
   Ethernet        Ethernet IEEE 802.3
   Loopback        Loopback interface
   Null            Null interface
   <cr>
r2(config-router)#distribute-list 1 in Ethernet?
   <0-1>           Ethernet interface number
r2(config-router)#distribute-list 1 in Ethernet 0?
   <cr>
r2(config-router)#distribute-list 1 in Ethernet 0/0
r2(config-router)#
We can filter routes through a specific interface. If the route advertisement is learned through a
different interface, it will not be filtered.
4. Block the 172.16.1.0 route from the Ethernet interface using an extended IP access list.
r2(config)#router eigrp 100
r2(config-router)#distribute-list 1 in?
   Ethernet        Ethernet IEEE 802.3
   Loopback        Loopback interface
   Null            Null interface
   <cr>
r2(config-router)#distribute-list 1 in Ethernet?
   <0-1>           Ethernet interface number
    r2(config-router)#distribute-list 1 in Ethernet 0?
   <cr>
r2(config-router)#distribute-list 1 in Ethernet 0
r2(config-router)#
For examples 3 and 4, the access lists did not need to be modified from examples 1 and 2. To
filter outgoing route advertisements, the distribute list would be applied as an outgoing instead of
as an incoming list. This also gives us four possibilities for filtering. For the examples, assume
that router r2 wants to block the route to 172.16.4.1 in Fig. 10-1 so that router r1 does not receive
it.break
Page 194
1. Block the 172.16.4.0 route going out any interface using a standard IP access list.
r2(config)#router eigrp 100
r2(config-router)#distribute-list 1?
   in                Filter incoming routing updates
   out               Filter outgoing routing updates

r2(config-router)#distribute-list 1 out?
   Ethernet          Ethernet IEEE 802.3
   Loopback          Loopback interface
   Null              Null interface
   Bgp               Border Gateway Protocol (BGP)
   Connected         Connected
   Egp               Exterior Gateway Protocol (EGP)
   Eigrp             Enhanced Interior Gateway Routing Protocol (EIGRP)
   Igrp              Interior Gateway Routing Protocol (IGRP)
   Isis              ISO IS-IS
   iso-igrp          IGRP for OSI networks
   ospf              Open Shortest Path First (OSPF)
   rip               Routing Information Protocol (RIP)
   static            Static routes
   <cr>
r2(config-router)#distribute-list 1 out
r2(config-router)#
There are many more selections available for outbound filters than for inbound. These additional
choices are covered in Chap. 13. The access list for example 1 would contain
access-list 1 deny   172.16.4.0 0.0.0.255
access-list 1 permit any
The route 172.16.4.0 will not be contained in router r1's routing table after the filter has been
applied.
r1#sh ip route
  172.16.0.0/16 is subnetted, 4 subnets
D   172.16.5.0 [90/156160] via 172.16.3.2, 00:00:42, FastEthernet8/0
C   172.16.1.0 is directly connected, Loopback0
C   172.16.2.0 is directly connected, Loopback1
C   172.16.3.0 is directly connected, FastEthernet8/0
The applied access list can be shown using the show ip protocols command.break
r2#show ip protocols
Routing Protocol is "eigrp 100"
Page 195
  Outgoing update filter list for all interfaces is 1
  Incoming update filter list for all interfaces is not set
  Default networks flagged in outgoing updates
  Default networks accepted from incoming updates
  EIGRP metric weight K1 = 1, K2 = 0, K3 = 1, K4 = 0, K5 = 0
  EIGRP maximum hopcount 100
  EIGRP maximum metric variance 1
  Redistributing: eigrp 100, igrp 100
  Automatic network summarization is in effect
  Routing for Networks:
    172.16.0.0
  Routing Information Sources:
    Gateway     Distance      Last Update
    172.16.3.1     90           00:01:19
  Distance: internal 90 external 170
2. Block the 172.16.4.0 route going out any interface using an extended IP access list.

r2(config)#router eigrp 100
r2(config-router)#distribute-list 100 out
r2(config-router)#
access-list 100 deny ip any 172.16.4.0 0.0.0.255
access-list 100 permit ip any any
3. Block the 172.16.4.0 route going out the Ethernet interface using a standard IP access list.
r2(config)#router eigrp 100
r2(config-router)#distribute-list 1 out
r2(config-router)#distribute-list 1 out Ethernet 0
r2(config-router)#
access-list 1 deny 172.16.4.0 0.0.0.255
access-list 1 permit any
4. Block the 172.16.4.0 route going out the Ethernet interface using an extended IP access
list.break
r2(config)#router eigrp 100
r2(config-router)#distribute-list 1 out
r2(config-router)#distribute-list 1 out Ethernet 0
r2(config-router)#
access-list 1 deny 172.16.4.0 0.0.0.255
access-list 1 permit any
Command
exit
Purpose
Exit router configuration mode and enter global configuration
mode.
Page 196
r2(config)#router eigrp 100
r2(config-router)#exit
r2(config)#
Command
help
Purpose
Get help on help.
r2(config)#router eigrp 100
r2(config-router)#help
Help may be requested at any point in a command by entering a question mark '?'. If
nothing matches, the help list will be empty and you must backup until entering a '?'
shows the available options.
Two styles of help are provided:

1. Full help is available when you are ready to enter a command argument (e.g.
   and describes each possible argument.
2. Partial help is provided when an abbreviated argument is entered and you wa
   know what arguments match the input (e.g. 'show pr?'.)
Command
maximum-paths
Purpose
Forward packets over multiple paths.
EIGRP can distribute traffic on up to six different paths. See the traffic-share command
for further details.
r2(config)#router eigrp 100
r2(config-router)#max
r2(config-router)#maximum-paths?
   <1-6>        Number of paths
r2(config-router)#maximum-paths 3?
   <cr>
Command
neighbor
Purpose
Specify a neighbor on a nonbroadcast network.
For NBMA networks such as X.25 and Frame Relay, additional configuration information is
needed to propagate EIGRP routing updates. The neighbor command would be needed in
order for EIGRP updates to cross a Frame Relay cloud.break
Command
network
Purpose
To inform EIGRP which networks to advertise and out which
interfaces to advertise. Any active interface that has an IP address
contained in the network command will be used to send and
receive EIGRP routing updates.
Command
no
Purpose
Used to negate configuration commands.
Page 197
The no command is used to undo previous configuration commands. If we decide, for example,

not to advertise a network, remove a distribution list, or remove an administrative distance
modifier, we would use the no command.
r1(config)#router eigrp 100
r1(config-router)#no network 172.16.0.0
r1(config-router)#no distribute-list 100 out
r1(config-router)#no distance 130
r1(config-router)#
Command
passive-interface
Purpose
Suppress routing updates on an interface.
The passive-interface command stops routing updates from being sent or received
(processed) on an interface. Interfaces that have been configured as passive can be shown with
the show ip protocols command.
r1#show ip protocols
Routing Protocol is "eigrp 100"
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is not set
  Default networks flagged in outgoing updates
  Default networks accepted from incoming updates
  EIGRP metric weight K1 = 1, K2 = 0, K3 = 1, K4 = 0, K5 = 0
  EIGRP maximum hopcount 100
  EIGRP maximum metric variance 1
  Redistributing: eigrp 100
  Automatic network summarization is in effect
  Routing for Networks:
    172.16.0.0
  Passive Interface(s):
    Ethernet0
  Routing Information Sources:
    Gateway     Distance     Last Update
  (this router)     5          00:05:25
  172.16.3.2       90          00:05:18
  Distance: internal 90 external 170
Since EIGRP does not send routing updates as a broadcast, the passive-interface
command used in conjunction with the neighbor command will not allow EIGRP to receive
routing updates like we have seen with RIP and IGRP. Making an interface passive blocks the
EIGRP hello protocol, preventing a neighbor relationship from being established on the interface.
This has the effect of blocking the incoming routing updates because they are only sent to
neighbors.break
Page 198
Command
redistribute
Purpose
Redistribute information from another routing protocol

Purpose
Redistribute information from another routing protocol.
This command is covered in Chap. 13.
Command
timers
Purpose
Adjust routing timers.
The EIGRP timers can be viewed by using the command show ip protocols.
r2(config)#router eigrp 100
r2(config-router)#timers?
   active-time EIGRP time limit for active state
r2(config-router)#timers active-time?
   <1-4294967295>        EIGRP active-state time limit in minutes
   disabled              disable EIGRP time limit for active state
   <cr>
r2(config-router)#timers active-time 100?
   <cr>
r2(config-router)#timers active-time disabled?
   <cr>
Command
traffic-share
Purpose
Algorithm for computing traffic share for alternate routes.
When multiple unequal cost routes exist to the same destination network, the traffic-share
command controls how packets are distributed among the different paths. There are two
possibilities for traffic share, balanced and minimum. Balanced mode will distribute traffic in
proportion to the metrics of the routes. The min traffic-share option will only use the
routes that have minimum costs. The default for traffic-share is balanced.
r2(config-router)#traffic-share?
   balanced        Share inversely proportional to metric
   min             All traffic shared among min metric paths
r2(config-router)#traffic-share balanced
or
r2(config-router)#traffic-share min?
Command
variance
Purpose
Control load balancing variance.

EIGRP can have up to six routes to the same destination in the routing table. Multiple routes to
the same destination will only be installedcontinue
Page 199
Figure 10-5
Illustration of the variance parameter for EIGRP.
in the routing table if their cost, or metric, passes a test that will be illustrated with Fig. 10-5.
Router r1 in Fig. 10-5 has two routes to network 172.16.0.0. The first route is directly to router r2
with a cost of A. The second route is through router r2 with a cost of B. Router r1 will include the
route through router r2 if two conditions are met:
1. If cost A is greater than cost C.
2. If (variance * A)  B.
Needless to say, you won't be making many changes to the variance! However, if you must, the
command isbreak
r2(config-router)#variance?
   <1-128>         Metric variance multiplier
r2(config-router)#variance 2?
   <cr>
EIGRP Interface Commands
Command
ip hello-interval eigrp
Purpose
Used to adjust the EIGRP hello protocol interval on an interface

Purpose
Used to adjust the EIGRP hello protocol interval on an interface.
Default
60 seconds for NBMA networks
5 seconds for other networks
Page 200
r1(config)#interface Ethernet 0
r1(config-if)#ip hello-interval?
   eigrp Enhanced Interior Gateway Routing Protocol (EIGRP)
r1(config-if)#ip hello-interval eigrp?
   <1-65535>          Autonomous system number
r1(config-if)#ip hello-interval eigrp 100?
   <1-65535>          Seconds between hello transmissions
r1(config-if)#ip hello-interval eigrp 100 10?
   <cr>
Command
ip hold-time eigrp
Purpose
Used to adjust the EIGRP hold time on an interface.
Default
180 seconds for NBMA networks
15 seconds for other networks
r1(config-if)#ip hold-time?
   eigrp Enhanced Interior Gateway Routing Protocol (EIGRP)
r1(config-if)#ip hold-time eigrp?
   <1-65535>         Autonomous system number
r1(config-if)#ip hold-time eigrp 100?
   <1-65535>         Seconds before neighbor is considered down
r1(config-if)#ip hold-time eigrp 100 30
   <cr>
Command
ip split-horizon or no ip split-horizon
Purpose
Used to enable or disable EIGRP split horizon on an interface.
Default
enabled
r1(config-if)#ip split-horizon?
   eigrp Enhanced Interior Gateway Routing Protocol (EIGRP)
   <cr>
r1(config-if)#ip split-horizon eigrp?
   <1-65535>           Autonomous system number

r1(config-if)#ip split-horizon eigrp 100?
   <cr>
EIGRP show Command Summary
r1#show ip eigrp?
  neighbors IP-EIGRP Neighbors
  topology IP-EIGRP Topology Table
  traffic IP-EIGRP Traffic Statistics
r1#show ip eigrp neighbors?
  <1-65535>         AS Number
  Ethernet           Ethernet IEEE 802.3
  Loopback           Loopback interface
Page 201
    Null             Null interface
    detail           Show detailed peer information
    <cr>
  r1#show ip eigrp neighbors
  IP-EIGRP Neighbors for process 100
H     Address    Interface       Hold     Uptime    SRTT   RTO     Q     Seq
                                 (sec)     (ms)     (ms)   Cnt    Num
2    172.16.3.2     E0            14      00:41:26    4    20      0      21
1    172.16.2.1     Lo1           12      00:41:28    2    20      0      68
0    172.16.1.1     Lo0           12      00:41:28    2    20      0      67
Hold—Length of time that EIGRP will wait before declaring a neighbor down.
Uptime—Elapsed amount of time since last hearing from the neighbor.
Q Cnt—Number of packets waiting to be sent
SRTT—Smooth round-trip time. The time it takes to send a packet to the neighbor and receive
an acknowledgment.
RTO—Retransmission time.break
r1#show ip eigrp topology?
  <1-65535>            AS Number
  A.B.C.D              Network to display information about
  active               Show only active entries
  all-links            Show all links in topology table
  zero-successors      Show only zero successor entries
  <cr>
IP-EIGRP Topology Table for process 100
Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,
  r - Reply status

P 172.16.4.0/24, 1 successors, FD is 156160
  via 172.16.3.2 (156160/128256), Ethernet0
P 172.16.5.0/24, 1 successors, FD is 156160
  via 172.16.3.2 (156160/128256), Ethernet0
P 172.16.1.0/24, 1 successors, FD is 128256
  via Connected, Loopback0
P 172.16.2.0/24, 1 successors, FD is 128256
  via Connected, Loopback1
P 172.16.3.0/24, 1 successors, FD is 28160
  via Connected, Ethernet0
r1#show ip eigrp traffic
IP-EIGRP Traffic Statistics for process 100
   Hellos sent/received: 4303/4899
   Updates sent/received: 47/54
   Queries sent/received: 11/10
   Replies sent/received: 10/12
   Acks sent/received: 67/63
Page 202
Debugging EIGRP
The network in Fig. 10-1 is used to illustrate the EIGRP debugging commands. There are many
commands that can be used for debugging EIGRP, and they are summarized below.break
#debug ip eigrp?
  <1-65535>           AS number
  neighbor            IP-EIGRP neighbor debugging
  notifications       IP-EIGRP event notifications
  summary             IP-EIGRP summary route processing
  <cr>
r1#debug ip eigrp 100?
  A.B.C.D IP address
  <cr>
r1#debug ip eigrp 100 172.16.0.0?
  A.B.C.D IP mask
  <cr>
r1#debug ip eigrp 100 172.16.0.0 0.0.255.255?
  <cr>
r1#debug ip eigrp 100 172.16.0.0 0.0.255.255
IP Target enabled on AS 100 for 172.16.0.0 0xFFFF
r1#debug ip eigrp?
  <1-65535>           AS number
  neighbor            IP-EIGRP neighbor debugging
  notifications       IP-EIGRP event notifications
  summary             IP-EIGRP summary route processing

  <cr>
r1#debug ip eigrp nei
r1#debug ip eigrp neighbor?
  <1-65535>           AS number
r1#debug ip eigrp neighbor 100?
  A.B.C.D IP address
r1#debug ip eigrp neighbor 100 172.16.0.0?
  <cr>
r1#debug ip eigrp neighbor 100 172.16.0.0
IP Neighbor target enabled on AS 100 for 172.16.0.0
r1#debug ip eigrp?
  <1-65535>           AS number
  neighbor            IP-EIGRP neighbor debugging
  notifications       IP-EIGRP event notifications
  summary             IP-EIGRP summary route processing
  <cr>
Page 203
r1#debug ip eigrp notifications?
  <cr>
r1#debug ip eigrp notifications
IP-EIGRP Event notification debugging is on
r1#debug ip eigrp?
  <1-65535>           AS number
  neighbor            IP-EIGRP neighbor debugging
  notifications       IP-EIGRP event notifications
  summary             IP-EIGRP summary route processing
  <cr>
r1#debug ip eigrp summary?
  <cr>
r1#debug ip eigrp summary
IP-EIGRP Summary route processing debugging is on
Summary
The important EIGRP commands are listed in order below. All the EIGRP commands are
important, but you will find that some are more useful than others.
EIGRP Commands

1. router eigrp <process id>
2. network
3. redistribute (see Chap. 13)
4. distribute-list (see Chap. 13)
5. default-metric (see Chap. 13)
6. passive-interface
7. offset-list
8. distance
9. maximum-paths
10. traffic-share
11. All other EIGRP commandsbreak
Page 205
Chapter 11—
Basic OSPF Configuration
Page 206
Open Shortest Path First (OSPF) is a very complex IP routing protocol, as was seen in Chap. 6.
Mastering the concepts and properties of OSPF in order to design and maintain efficient and
robust networks is a must for any network designer. This chapter examines almost every OSPF
router configuration command except for those used for router redistribution and implementing
OSPF on Frame Relay, X.25, and ISDN networks. The commands that are not covered in this
chapter will be covered in Chaps. 12 and 13.
OSPF
We will start with the network in Fig. 11-1 to demonstrate the basic OSPF configuration
commands.
Router r1 Configuration                Router r2 Configuration
hostname r1                            hostname r2
enable password cisco                  enable password cisco
interface Loopback0                    interface Loopback0
ip address 172.16.1.1 255.255.255.0    ip address 172.16.4.1 255.255.255.0
interface Loopback1                    interface Loopback 1

ip address 172.16.2.1 255.255.255.0    ip address 172.16.5.1 255.255.255.0
interface Ethernet0                    interface Ethernet0
ip address 172.16.3.1 255.255.255.0    ip address 172.16.3.2 255.255.255.0
The first steps in configuring OSPF are similar to those of the other routing protocols that have
already been examined. An OSPF routing process needs to be started, and the OSPF process
needs to be informed as to which networks must be advertised. Since OSPF is a hierarchical
routing scheme, additional information is required to start an OSPF process, and that information
is the area parameter. The network in Fig. 11-1 uses only one area, area 0, or the backbone. This
will be our starting point for the basic OSPF configuration.break
Figure 11-1
Network configuration for the basic OSPF examples.
Page 207
The OSPF routing process is started similarly to IGRP and EIGRP and requires a process ID,
whereas IGRP and EIGRP required an autonomous system number (which we discovered really
wasn't an autonomous system number, it was just a process ID also!). The difference is that for
the IGRP or EIGRP process to be able to communicate with another IGRP or EIGRP process, the
autonomous system number had to be identical when the routing process was initially configured.
The OSPF process ID has only local significance and does not have to match the OSPF process
ID on other routers in order for the OSPF processes to be able to communicate.
r1#configure terminal
Enter configuration commands, one per line. End with CNTL/Z.
r1(config)#router ospf?
   <1-65535>        Process ID
r1(config-router)#router ospf 100
r1(config-router)#
The OSPF routing process must be assigned a process ID in the range 1–65,535. Multiple OSPF
processes can be configured on the same router, but this practice is not recommended. Multiple
OSPF processes will require multiple copies of OSPF databases, and multiple copies of the
Shortest Path algorithm will have to be run. This will put additional strain on the router.
Typically, multiple OSPF processes are run for purely political reasons, such as turf wars, where
one group wants control of one set of routers and another group wants to control another set of
routers. This may be the policy for some organizations, but your job is to convince the powers in
charge that running multiple OSPF processes is not an efficient or optimal solution. For router r1,
we want to advertise networks 172.16.1.0, 172.16.2.0, and 172.16.3.0. The network command is

used to inform OSPF which networks to advertise in the routing updates and is more explicit
than the RIP, IGRP, and EIGRP network commands. The RIP, IGRP and EIGRP network
commands would only allow you to input a major network number. The OSPF network
command has the three components, the network number, the network mask, and the area to
which the network belongs. These network components allow the specification of which
networks will be involved in the OSPF routing process to take many forms. The first form is to
use the actual IP address of the interface with a network mask of 0.0.0.0. This mask is referred to
as the OSPF wild-card bits and is the reverse of a netmask, similar to what is used in access lists.
A 0 in the wild-card bits means to match the corre-soft
Page 208
sponding bits in the network number. Using this form, the configuration for router r1 would be
r1(config-router)#network?
   A.B.C.D Network number
r1(config-router)#network 172.16.1.1?
   A.B.C.D OSPF wild card bits
r1(config-router)#network 172.16.1.1 0.0.0.0?
   area Set the OSPF area ID
r1(config-router)#network 172.16.1.1 0.0.0.0 area 0
   <0-4294967295>       OSPF area ID as a decimal value
   A.B.C.D              OSPF area ID in IP address format
or
r1(config-router)#network 172.16.1.1 0.0.0.0 area 0.0.0.0
Notice that the area ID for the network can be entered as either a decimal number in the range
0–4,294,967,295 or with the IP address format x.x.x.x. Neither form has an advantage over the
other, but there is less typing with the decimal form. Also notice that the decimal form has the
range of an unsigned 32-bit number, which is exactly the length, in bits, of an IP address. The
remaining networks would be entered using a similar form, as shown.
r1(config-router)#network 172.16.2.1 0.0.0.0 area 0
r1(config-router)#network 172.16.3.1 0.0.0.0 area 0
The configuration for router r2 using this form would be
router ospf 100
  network 172.16.3.2 0.0.0.0 area 0
  network 172.16.4.1 0.0.0.0 area 0
  network 172.16.5.1 0.0.0.0 area 0
OSPF is now running on routers r1 and r2 and can be verified by listing their routing tables.break
r2#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  N1 OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, * - candidate default
  U - per-user static route, o - ODR
Gateway of last resort is not set
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
C   172.16.4.0/24 is directly connected, Loopback0

C   172.16.5.0/24 is directly connected, Loopback1
Page 209
O   172.16.1.1/32 [110/2] via 172.16.3.1, 00:02:49, FastEthernet0/0
O   172.16.2.1/32 [110/2] via 172.16.3.1, 00:02:49, FastEthernet0/0
C   172.16.3.0/24 is directly connected, FastEthernet0/0
r1#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, *  - candidate default
  U - per-user static route, o - ODR
Gateway of last resort is not set
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
O   172.16.5.1/32 [110/2] via 172.16.3.2, 00:03:40, FastEthernet8/1
O   172.16.4.1/32 [110/2] via 172.16.3.2, 00:03:40, FastEthernet8/1
C   172.16.1.0/24 is directly connected, Loopback0
C   172.16.2.0/24 is directly connected, Loopback1
C   172.16.3.0/24 is directly connected, FastEthernet8/1
Notice that routers r1 and r2 have three directly connected routes and two routes that have been
learned from OSPF. Each entry in the routing table contains the following information:
__ How the route was learned (C—directly connected; or O—from OSPF).
__ The destination network.
__ The administrative distance and route cost [110/2] for OSPF or directly connected.
__ For OSPF, the transit network (via 172.16.3.1).
__ The age of the route—00:02:49. OSPF does not periodically transmit the routing table.
Routing updates are transmitted if a change occurs, making OSPF a much ''quieter" protocol than
RIP or IGRP. This entry shows how much time has elapsed since the last update for this route.
__ The interface to use when sending a packet to the destination network.
The cost of an OSPF network is calculated by dividing 100,000,000 by the bandwidth of the
network. The fast Ethernet link has a bandwidth of 100,000,000 and can be seen by examining
the interface.break
r1#show interface fastEthernet8/1
FastEthernet8/1 is up, line protocol is up
  Hardware is cyBus FastEthernet Interface, address is 0000.0ca5.d402 (bia 000
  Internet address is 172.16.3.1/24
  MTU 1500 bytes, BW 100000 Kbit, DLY 100 usec, rely 255/255, load 1/255
Page 210
  Encapsulation ARPA, loopback not set, keepalive set (10 sec

  Half-duplex, 100Mb/s, 100BaseTX/FX
  ARP type: ARPA, ARP Timeout 04:00:00
  Last input 00:00:07, output 00:00:02, output hang never
  Last clearing of "show interface" counters never
  Queueing strategy: fifo
  Output queue 0/40, 0 drops; input queue 0/75, 0 drops
  5 minute input rate 0 bits/sec, 0 packets/sec
  5 minute output rate 0 bits/sec, 0 packets/sec
    27021 packets input, 2443141 bytes, 0 no buffer
    Received 14795 broadcasts, 0 runts, 0 giants, 0 throttles
    1 input errors, 1 CRC, 0 frame, 0 overrun, 0 ignored, 0 abort
    0 watchdog, 1 multicast
    0 input packets with dribble condition detected
    28489 packets output, 2502377 bytes, 0 underruns
    22 output errors, 1 collisions, 54 interface resets
    0 babbles, 0 late collision, 0 deferred
    22 lost carrier, 22 no carrier
    0 output buffer failures, 0 output buffers swapped out
The bandwidth used for the loopback interfaces, 80,000,000, is seen below:
r1#show interfaces loopback 0
Loopback0 is up, line protocol is up
  Hardware is Loopback
  Internet address is 172.16.1.1/24
  MTU 1514 bytes BW 8000000 Kbit, DLY 5000 usec, rely 255/255, load 1/255
  Encapsulation LOOPBACK, loopback not set, keepalive set (10 sec)
  Last input 02:29:05, output never, output hang never
  Last clearing of "show interface" counters never
  Queueing strategy: fifo
  Output queue 0/0, 0 drops; input queue 0/75, 0 drops
  5 minute input rate 0 bits/sec, 0 packets/sec
  5 minute output rate 0 bits/sec, 0 packets/sec
    0 packets input, 0 bytes, 0 no buffer
    Received 0 broadcasts, 0 runts, 0 giants, 0 throttles
    0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored, 0 abort
    5904 packets output, 0 bytes, 0 underruns
    0 output errors, 0 collisions, 0 interface resets
    0 output buffer failures, 0 output buffers swapped out
The cost or metric from router r2 to network 172.16.1.0 on router r1 (loopback 0) is the sum of
the costs using the fast Ethernet interface and then the loopback interface and dividing by
100,000,000.
The next form of the network command is to enter the network and wild-card bits identically to
the form used to enter the IP addresses oncontinue
Page 211
the interfaces, with the OSPF wild-card bits being the reverse of the interface netmask. Using this
form, the router configuration would be
Router r1 configuration

router ospf 100
  network 172.16.1.0 0.0.0.255 area 0
  network 172.16.2.0 0.0.0.255 area 0
  network 172.16.3.0 0.0.0.255 area 0
Router r2configuration
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 172.16.4.0 0.0.0.255 area 0
  network 172.16.5.0 0.0.0.255 area 0
Examining the route table for router r1 shows that this configuration form has the same effect as
the first form.
r1#show ip route
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
O   172.16.5.1/32 [110/2] via 172.16.3.2, 00:01:25, FastEthernet8/1
O   172.16.4.1/32 [110/2] via 172.16.3.2, 00:01:25, FastEthernet8/1
C   172.16.1.0/24 is directly connected, Loopback0
C   172.16.2.0/24 is directly connected, Loopback1
C   172.16.3.0/24 is directly connected, FastEthernet8/1
The next form of the network command is almost identical to the form used with RIP, IGRP, and
EIGRP, where we enter only a major network number. For the network in Fig. 11-1, the network
number would be 172.16.0.0, and the OSPF configuration for routers r1 and r2 would be
identical.
router ospf 100
  network 172.16.0.0 0.0.255.255 area 0
You have to be careful with the preceding form because all subnets of 172.16.0.0 will be put into
area 0. If we wanted to put network 172.16.1.0 into area 51 after using the preceding command,
the router will prevent this from happening.
r1(config)#router ospf 100
r1(config-router)#net 172.16.0.0 0.0.255.255 area 0
r1(config-router)#net 172.16.1.0 0.0.0.255 area 51
% OSPF: "network 172.16.1.0 0.0.0.255 area 51" is ignored. It is subset of a p
The second network statement tries to put network 172.16.1.0 into area 51, but this network has
already been placed in area 0 by the first net-soft
Page 212
work command. We can put network 172.16.1.0 into area 51 first and then place the rest of the
subnets of 172.16.0.0 into area 0.
r1(config)#router ospf 100
r1(config-router)#net 172.16.1.0 0.0.0.255 area 51
r1(config-router)#net 172.16.0.0 0.0.255.255 area 0
Although this approach will work, I would not recommend using a form of any command that
operates differently depending on the order the commands are entered.

The final form uses Classes Inter-Domain Routing (CIDR) or supernetting. The normal subnet
mask for a class B address is 255.255.0.0, and when used as a standard subnet mask, the first two
octets will always be 255.255. With CIDR, we can modify the natural mask and actually use a
smaller mask. For example, if we use the network and wild-card bit pair
172.0.0.0/0.255.255.255, then OSPF will advertise every interface that belongs to the class B
family 172.x.x.x.
router ospf 100
network 172.0.0.0 0.255.255.255 area 0
This form will have the same effect as the first two we examined, but it can cause problems. For
example, lets add another loopback interface on router r1, as shown in Fig. 11-2.
interface Loopback2
  ip address 172.17.6.1 255.255.255.0
No additional parameters need to be given to the OSPF process in order for OSPF to advertise
this route. The network statement usedcontinue
Figure 11-2
Multiple OSPF networks advertised with one network command.
Page 213
included this interface, so the network will be advertised. This can be seen by examining the
router r2's routing table.
r2#show ip route
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
C   172.16.4.0/24 is directly connected, Loopback0
C   172.16.5.0/24 is directly connected, Loopback1
O   172.16.1.1/32 [110/2] via 172.16.3.1, 00:02:55, FastEthernet0/0
O   172.16.2.1/32 [110/2] via 172.16.3.1, 00:02:55, FastEthernet0/0
C   172.16.3.0/24 is directly connected, FastEthernet0/0
  172.17.0.0/32 is subnetted, 1 subnets
O   172.17.6.1 [110/2] via 172.16.3.1, 00:02:55, FastEthernet0/0
Which area is network 172.17.6.0 in? The network command
network 172.0.0.0 0.255.255.255 area 0

will automatically put 172.17.6.0 into area 0. What if we want to put network 172.17.0.0 into a
different area? This is a situation where the form of the network command can cause us problems
if we are not careful. Using the current configuration on router r1, try using the following
network statement under OSPF router configuration mode:
r1(config-router)#network 172.17.6.0 0.0.0.255 area 1
r1(config-router)#
% OSPF: "network 172.17.6.0 0.0.0.255 area 1" is ignored. It is a subset of a 
What happened? Network 172.17.6.0 is already included in area 0 by the first network command,
so OSPF will ignore it. We can remedy this situation by reversing the order in which we enter the
network commands. Delete the OSPF network entry on router r1 by using the no form of the
command:
r1(config-router)#no network 172.0.0.0 0.255.255.255 area 0
Now enter the network commands in reverse order:
r1(config-router)#network 172.17.6.0 0.0.0.255 area 1
r1(config-router)#network 172.0.0.0 0.255.255.255 area 0
OSPF is now happy because we put network 172.17.6.0 into area 1 before putting everything else
into area 0. If we examine the routing table for router r2, we do see one change in the table.break
r2#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
Page 214
  N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, * - candidate default
  U - per-user static route, o - ODR
Gateway of last resort is not set
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
C   172.16.4.0/24 is directly connected, Loopback0
C   172.16.5.0/24 is directly connected, Loopback1
O   172.16.1.1/32 [110/2] via 172.16.3.1, 00:00:00, FastEthernet0/0
O   172.16.2.1/32 [110/2] via 172.16.3.1, 00:00:00, FastEthernet0/0
C   172.16.3.0/24 is directly connected, FastEthernet0/0
  172.17.0.0/32 is subnetted, 1 subnets
O IA 172.17.6.1 [110/2] via 172.16.3.1, 00:00:00, FastEthernet0/0
Notice that the entry for network 172.17.6.0 is an interarea (IA) route. Which form should I use?
We have seen that the last form using CIDR may be cool, but it also can cause us problems—and
the last thing we need are problems. I would recommend using the same form as the network
interface because we can see exactly what networks are being configured for OSPF, and it causes
no confusion.

The network in Fig. 11-1 has every interface in area 0. When only one area is being used in an
OSPF network, any valid area number can be used. When multiple areas are being used, then we
must have an area 0 or backbone area. We can see this by reconfiguring the OSPF process so that
we use area 1 instead of area 0 and verifying that routing is still occurring by examining the
routing tables.break
Router r1 OSPF configuration
router ospf 100
  network 172.16.1.0 0.0.0.255 area 1
  network 172.16.2.0 0.0.0.255 area 1
  network 172.16.3.0 0.0.0.255 area 1
Router r2 OSPF configuration
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0.0.0.1
  network 172.16.4.0 0.0.0.255 area 0.0.0.1
  network 172.16.5.0 0.0.0.255 area 0.0.0.1
r1#show ip route
O   172.16.5.1/32 [110/2] via 172.16.3.2, 00:12:07, FastEthernet8/1
O   172.16.4.1/32 [110/2] via 172.16.3.2, 00:12:07, FastEthernet8/1
C   172.16.1.0/24 is directly connected, Loopback0
C   172.16.2.0/24 is directly connected, Loopback1
C   172.16.3.0/24 is directly connected, FastEthernet8/1
Page 215
r2#show ip route
C   172.16.4.0/24 is directly connected, Loopback0
C   172.16.5.0/24 is directly connected, Loopback1
O   172.16.1.1/32 [110/2] via 172.16.3.1, 00:12:45, FastEthernet0/0
O   172.16.2.1/32 [110/2] via 172.16.3.1, 00:12:45, FastEthernet0/0
C   172.16.3.0/24 is directly connected, FastEthernet0/0
What happens if the subnet masks are not identical? Assume that the two networks on router r1,
Loopback 0 and Loopback 1, will have no more than 14 hosts each. We can use VLSM to
sub-subnet network 172.16.1.0 into two networks using a 28-bit subnet mask, as shown in Fig.
11-3.
We will need to modify the OSPF network command for the loopback interfaces on router r1 as
shown. First, use the no form of the network command to remove the previous network
commands for the loopback interfaces:
r1(config)#router ospf 100
r1(config-router)#no network 172.16.1.0 0.0.0.255 area 1
r1(config-router)#no network 172.16.2.0 0.0.0.255 area 1
Now modify the IP address and subnet mask for the loopback interfaces:
r1(config)#interface loopback 0
r1(config-if)#ip address 172.16.1.17 255.255.255.240
r1(config-if)#exit
r1(config)#interface loopback 1

r1(config-if)#ip address 172.16.1.33 255.255.255.240
r1(config-if)#
Finally, use the OSPF network command to add the loopbacks to the OSPF routing process:break
Figure 11-3
OSPF—Using VLSM on router r1 on the same major network.
Page 216
r1(config)#router ospf 100
r1(config-router)#network 172.16.1.16 0.0.0.15 area 1
r1(config-router)#network 172.16.1.32 0.0.0.15 area 1
r1(config-router)#
Notice that the reverse of the subnet mask 255.255.255.240 is 0.0.0.15. If we examine the routing
table for router r2, we can see that OSPF has no trouble with these new networks that are using
VLSM. In fact, all the scenarios that we have see using VLSM with RIP, IGRP, and EIGRP will
work fine when using OSPF.
r2#show ip route
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
O   172.16.1.33/32 [110/2] via 172.16.3.1, 00:00:49, FastEthernet0/0
O   172.16.1.17/32 [110/2] via 172.16.3.1, 00:00:49, FastEthernet0/0
C   172.16.4.0/24 is directly connected, Loopback0
C   172.16.5.0/24 is directly connected, Loopback1
C   172.16.3.0/24 is directly connected, FastEthernet0/0
Additional OSPF configuration commands can be seen by entering router configuration mode
and typing a question mark.
r1(config)#router ospf 100
r1(config-router)#?
Router configuration commands:
  area                   OSPF area parameters
  default-information    Control distribution of default information
  default-metric         Set metric of redistributed routes
  distance               Define an administrative distance
  distribute-list        Filter networks in routing updates
  exit                   Exit from routing protocol configuration mode
  help                   Description of the interactive help system
  maximum-paths          Forward packets over multiple paths
  neighbor               Specify a neighbor router

  network                Enable routing on an IP network
  no                     Negate a command or set its defaults
  ospf                   OSPF specific commands
  passive-interface      Suppress routing updates on an interface
  redistribute           Redistribute information from another routing protoco
  summary-address        Configure IP address summaries
  timers                 Adjust routing timers
Command
area
Purpose
OSPF area parameters.
The area command has many subcommands, as shown below.break
r1(config)#router ospf 100
r1(config-router)#area?
   <0-4294967295>OSPF area ID as a decimal value
Page 217
   A.B.C.D               OSPF area ID in IP address format
r1(config-router)#area 0?
   authentication        Enable authentication
   default-cost          Set the summary default-cost of a NSSA/stub area
   nssa                  Specify a NSSA area
   range                 Summarize routes matching address/mask (border routers only)
   stub                  Specify a stub area
   virtual-link          Define a virtual link and its parameters
The area command applies to parameters for a specific area that is selected with the first
parameter, the area ID, as either a decimal number or in IP address format. We will now examine
each area command.
Command
area
Subcommand
authentication
Purpose
Enable authentication for an area.
By default, OSPF does not use area authentication. Authentication can be enabled using one of
two methods, as shown.
r1(config-router)#area 0 authentication?
   message-digest        Use message-digest authentication
   <cr>
The first method is to use a clear text authentication password by selecting a <cr> with the

area 0 authentication command. Sending the authentication password as clear text
enables the password to be determined using a network sniffer, so this method is not actually
very secure. When authentication is used, all routers with interfaces in the area must use the same
authentication method. To enable clear text authentication, we also must configure the password
for each router interface in the area under router interface configuration mode. For the network in
Fig. 11-1, we will use simple clear text authentication for area 0 using the password cisco.break
Router r1 configuration
interface FastEthernet8/1
  ip address 172.16.3.1 255.255.255.0
  ip ospf authentication-key cisco
router ospf 100
  network 172.16.1.0 0.0.0.255 area 0
  network 172.16.2.0 0.0.0.255 area 0
  network 172.16.3.0 0.0.0.255 area 0
  area 0 authentication
Router 2 configuration
interface FastEthernet0/0
Page 218
  ip address 172.16.3.2 255.255.255.0
  ip ospf authentication-key cisco
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 172.16.4.0 0.0.0.255 area 0
  network 172.16.5.0 0.0.0.255 area 0
  area 0 authentication
Link-state information that is being exchanged between router r1 and router r2 will now be
authenticated using the clear text password cisco.
The second method is to use message digest (md5) authentication. If authentication is going to be
used, then this is the preferred method because md5 encrypts the authentication password before
it is transmitted. The configuration for md5 authentication is shown below. The message digest
key is a number in the range 1–255, and cisco is the authentication password.
Router r1 configuration
interface FastEthernet8/1
  ip address 172.16.3.1 255.255.255.0
  ip ospf message-digest-key 1 md5 cisco
  !
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 172.16.1.16 0.0.0.15 area 0
  network 172.16.1.32 0.0.0.15 area 0
  area 0 authentication message-digest

Router r2 configuration
interface FastEthernet0/0
  ip address 172.16.3.2 255.255.255.0
  ip ospf message-digest-key 1 md5 cisco
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 172.16.4.0 0.0.0.255 area 0
  network 172.16.5.0 0.0.0.255 area 0
  area 0 authentication message-digest
As with clear text authentication, all routers with interfaces in the area need to be configured with
the same authentication method, key, and password. Security practices normally dictate that the
passwords should be changed periodically. If this is the case, what happens when we change the
authentication key on one router but we haven't changed the keys on the other routers? If a new
key is configured, the router will send multiple copies of the packet, one with the old key and one
withcontinue
Page 219
the new key. This will continue until the router detects that everyone is using the new key, and
then only one copy of the packet will be sent. This will give you time to configure the other
routers with the new key. We can see the authentication method being used with the global
command
r1#show ip ospf interface f8/1.
FastEthernet8/1 is up, line protocol is up
  Internet Address 172.16.3.1/24, Area 0
  Process ID 100, Router ID 172.16.1.33, Network Type BROADCAST, Cost: 1
  Transmit Delay is 1 sec, State BDR, Priority 1
  Designated Router (ID) 172.16.5.1, Interface address 172.16.3.2
  Backup Designated router (ID) 172.16.1.33, Interface address 172.16.3.1
  Timer intervals configured, Hello 10, Dead 40, Wait 40, Retransmit 5
    Hello due in 00:00:08
  Neighbor Count is 1, Adjacent neighbor count is 1
  Adjacent with neighbor 172.16.5.1 (Designated Router)
  Suppress hello for 0 neighbor(s)
Message digest authentication enabled
  Youngest key id is 1
If we change the md5 key and password on router r1 but not on router r2, we can see that both
keys are being used.
r1(config)#interface fastEthernet 8/1
r1(config-if)#ip ospf message-digest-key 2 md5 secret
r1#sh ip ospf int f8/1
Message digest authentication enabled
  Youngest key id is 2
  Rollover in progress, 1 neighbor(s) using the old key(s):
Next, apply the new key on the fast Ethernet interface on router r2. When all the routers have
been configured with the new key, then remove the old key from each interface using the no form

of the command.
r1(config)#interface fastEthernet 8/1
r1(config-if)#no ip ospf message-digest-key 1 md5 cisco
Command
area
Subcommand
default-cost
Purpose
Set the summary default cost of a NSSA/stub area.
An OSPF stub area is an area that has one exit point or an area with multiple exit points but
routing out of the area does not h00ave to take the shortest path. This command is used to set the
cost of the defaultcontinue
Page 220
summary route that is sent into a stub area. The default cost is 1 and can be modified with this
command:
r1(config-router)#area 51 stub
r1(config-router)#area 51 default-cost?
   <0-16777215>         Stub's advertised external route metric
r1(config-router)#area 51 default-cost 5?
   <cr>
Command
area
Subcommand
nssa
Purpose
Specify an NSSA area.
The NSSA area type was covered in Chap. 6. Specification of an NSSA area is accomplished
using the command
r1(config-router)#area 51 nssa?
   default-information-originate     Originate Type 7 default into NSSA area
   no-redistribution                 No redistribution into this NSSA area
   no-summary                        Do not send summary LSA into NSSA
   <cr>
The default-information-originate subcommand is optional and is used to generate
a type 7 LSA into the NSSA area and should be used only on an NSSA ABR. The
no-redistribution subcommand is used if you are redistributing routes but you do not
want the redistributed routes to be injected into the NSSA area. Finally, the no-summary

subcommand will prevent summary LSAs from being injected into the NSSA area.
Command
area
Subcommand
range
Purpose
Summarize routes matching address/mask (border routers
only).
One important item to remember is that the area range command can only be used on an area
border router (ABR). An area border router has interfaces in more than one area. The network in
Fig. 11-1 has only one area, so neither one of the routers is an area border router. We can use this
command on a non-area border router, but it will have no effect. The purpose of the area range
command is to reduce multiple routes into an area into one route. This function is called route
summarization. As an example, assume that we have two networks with a maximum ofcontinue
Page 221
30 hosts each in network 200.16.10.0 (class C). We can use a 28-bit subnet mask to describe
these networks and can choose from the following subnets.200.16.10.0 (if we use the command
ip subnet-zero to allow this subnet)
200.16.10.32
200.16.10.64
200.16.10.96
200.16.10.128
200.16.10.160
200.16.10.192
200.16.10.224
We will choose networks 200.16.10.32 and 200.16.10.64, assign them to interfaces loopback 2
and loopback 3 on router r1, and add them to the OSPF process in area 51.
Router r1 configuration
interface Loopback2
  ip address 200.16.10.33 255.255.255.224
interface Loopback3
  ip address 200.16.10.65 255.255.255.224

router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 172.16.1.16 0.0.0.15 area 0
  network 172.16.1.32 0.0.0.15 area 0
  network 200.16.10.32 0.0.0.31 area 51
  network 200.16.10.64 0.0.0.31 area 51
The routing table for router r2 now contains the two new routes.
r2#show ip route
O   172.16.1.33/32 [110/2] via 172.16.3.1, 00:36:33, FastEthernet0/0
O   172.16.1.17/32 [110/2] via 172.16.3.1, 00:36:33, FastEthernet0/0
C   172.16.4.0/24 is directly connected, Loopback0
C   172.16.5.0/24 is directly connected, Loopback1
C   172.16.3.0/24 is directly connected, FastEthernet0/0
  200.16.10.0/32 is subnetted, 2 subnets
O   IA 200.16.10.65 [110/2] via 172.16.3.1, 00:01:46, FastEthernet0/0
O   IA 200.16.10.33 [110/2] via 172.16.3.1, 00:01:56, FastEthernet0/0
Do we really need both routes? The path to these two networks is identical, and all we need is a
route to network 200.16.10.0, since this willcontinue
Page 222
include both subnetted networks. In other words, we want to summarize these two routes into
one route. This can be done easily with the area range command.
r1(config-router)#area 51 range?
   A.B.C.D       IP address to match
r1(config-router)#area 51 range 200.16.10.0?
   A.B.C.D       IP mask for address
r1(config-router)#area 51 range 200.16.10.0 255.255.255.0?
   <cr>
r1(config-router)#area 51 range 200.16.10.0 255.255.255.0
The first parameter of the area range command is the area to be summarized, area 51. The next
parameters are the IP address and mask pair that will include both subnets. The mask used is the
standard subnet mask style that is used on network interfaces. Using the address/mask pair
200.16.10.0/255.255.255.0 will cause router r1 to advertise one route to network 200.16.10.0. If
we examine the routing table for router r2, we can see this summarized route.
r2#show ip route
O   172.16.1.33/32 [110/2] via 172.16.3.1, 00:42:49, FastEthernet0/0
O   172.16.1.17/32 [110/2] via 172.16.3.1, 00:42:49, FastEthernet0/0
C   172.16.4.0/24 is directly connected, Loopback0
C   172.16.5.0/24 is directly connected, Loopback1
C   172.16.3.0/24 is directly connected, FastEthernet0/0
O   IA 200.16.10.0/24 [110/2] via 172.16.3.1, 00:03:22, FastEthernet0/0
The routes 200.16.10.32 and 200.16.10.64 have been summarized into one route, 200.16.10.0.
What we have done works, but it is not the best solution. To see why, what if we wanted two
more subnets of 200.16.10.0 onto different interfaces in a different area? With the area range
command that we are using, this could not be done. For example, assume that we choose the
networks 200.16.10.96 and 200.16.10.160 for our new network, and we want to put them in area
8 attached top router r2. Try it and see.break

Router r2 configuration
interface Loopback2
  ip address 200.16.10.97 255.255.255.224
interface Loopback3
  ip address 200.16.10.129 255.255.255.224
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 172.16.4.0 0.0.0.255 area 0
  network 172.16.5.0 0.0.0.255 area 0
  network 200.16.10.96 0.0.0.31 area 8
Page 223
  network 200.16.10.160 0.0.0.31 area 8
  area 0 authentication message-digest
  area 8 range 200.16.10.0 255.255.255.0
If we look at the routing tables for routers r1 and r2, we do not see the routes to the new
networks. What has happened? Both routers are advertising summary routes to network
200.16.10.0. The best route to this network is through the attached router, since it has a lower
cost to the network. So router r1 will ignore router r2's summary advertisement, and router r2
will ignore router r1's summary advertisement. The problem is that we did not think enough
when we chose our network numbers. We need to be more precise with the area range command
in order for all the routes to be seen by both routers. The best way of looking at the problem is to
examine the bit patterns of the last octet for the subnets of network 200.16.10.0 (the h represents
a host-identifier bit).
Network 0 200.16.10.0
last octet = 0 0 0 h h h h h
Network 1 200.16.10.32
last octet = 0 0 1 h h h h h
Network 0 200.16.10.64
last octet = 0 1 0 h h h h h
Network 0 200.16.10.96
last octet = 0 1 1 h h h h h
Network 0 200.16.10.128
last octet = 1 0 0 h h h h h
Network 0 200.16.10.160
last octet = 1 0 1 h h h h h
Network 0 200.16.10.192
last octet = 1 1 0 h h h h h
Network 0 200.16.10.224
last octet = 1 1 1 h h h h h
With this list of subnet bit patterns, we can easily choose the best network/mask pair for the area
range command as follows.
List the bit pattern of the subnet mask for the networks that you want to summarize. The first pair

of networks are
200.16.10.32
0 0 1 h h h h h
200.16.10.64
0 1 0 h h h h h.
The range command must ''cover" all the bits that are different between the two subnet masks.
Another way of looking at this is to assume that bits that are different are part of the host address
and then determine the subnet mask if this were true. This would give us a subnet mask of
255.255.255.128. The IP address to use is the lowest network address of the bits that are going to
be used as host bits. If we look at our subnets again, we see that the lower 2 bits of the subnet are
changing, while the most significant bit is always 0. The lowest subnet for these bit patterns is
200.16.10.0.break
Page 224
Network 0 200.16.10.0
last octet = 0 0 0 h h h h h lowest subnet
Network 1 200.16.10.32
last octet = 0 0 1 h h h h h
Network 0 200.16.10.64
last octet = 0 1 0 h h h h h
Network 0 200.16.10.96
last octet = 0 1 1 h h h h h
r1(config-router)#area 51 range 200.16.10.0 255.255.255.128
For the second pair of networks, we would have
200.16.10.96
0 1 1 h h h h h
200.16.10.160
1 0 1 h h h h h
Since the left-most bits are different, we need to include them in the host portion. Also, the
lowest subnet for these bit patterns is 200.16.10.0, since all three of the subnet bits are changing.
Network 0 200.16.10.96
last octet = 0 1 1 h h h h h
Network 0 200.16.10.128
last octet = 1 0 0 h h h h h
Network 0 200 16 10 160
last octet = 1 0 1 h h h h h

Network 0 200.16.10.160
last octet = 1 0 1 h h h h h
Network 0 200.16.10.192
last octet = 1 1 0 h h h h h
Network 0 200.16.10.224
last octet = 1 1 1 h h h h h
The command to summarize would then bebreak
area 8 range 200.16.10.0 255.255.255.0
r1#show ip route
C   172.16.1.32/28 is directly connected, Loopback1
C   172.16.1.16/28 is directly connected, Loopback0
O   172.16.5.1/32 [110/2] via 172.16.3.2, 00:15:42, FastEthernet8/1
O   172.16.4.1/32 [110/2] via 172.16.3.2, 00:15:42, FastEthernet8/1
C   172.16.3.0/24 is directly connected, FastEthernet8/1
  200.16.10.0/24 is variably subnetted, 3 subnets, 2 masks
C   200.16.10.64/27 is directly connected, Loopback3
O   IA 200.16.10.0/24 [110/2] via 172.16.3.2, 00:15:42, FastEthernet8/1
C   200.16.10.32/27 is directly connected, Loopback2
r2#show ip route
O   172.16.1.33/32 [110/2] via 172.16.3.1, 00:01:41, FastEthernet0/0
O   172.16.1.17/32 [110/2] via 172.16.3.1, 00:01:41, FastEthernet0/0
C   172.16.4.0/24 is directly connected, Loopback0
C   172.16.5.0/24 is directly connected, Loopback1
C   172.16.3.0/24 is directly connected, FastEthernet0/0
  200.16.10.0/24 is variably subnetted, 3 subnets, 2 masks
C   200.16.10.160/27 is directly connected, Loopback3
C   200.16.10.96/27 is directly connected, Loopback2
O   IA 200.16.10.0/25 [110/2] via 172.16.3.1, 00:01:41, FastEthernet0/0
Page 225
There is still one problem with the way we have chosen our networks and ranges. The first pair,
200.16.10.32 and 200.16.10.64, actually "uses up" four networks. The range command
r1(config-router)#area 51 range 200.16.10.0 255.255.255.128
summarizes four networks, 200.16.10.0, 10.32, 10.64, and 10.96. Network 10.96 is on router r2,
so how can router r1 reach it if router r1 is also summarizing this network? The longest-match
algorithm has saved us in this case. The best way to choose your subnets is to pick networks with
the fewest number of changing bits in the subnet part of the address. For example, the networks
1. Network 0 200.16.10.0
last octet = 0 0 0 h h h h h
2. Network 1 200.16.10.32
last octet = 0 0 1 h h h h h   1-bit
change from 10 0

change from 10.0
3. Network 0 200.16.10.64
last octet = 0 1 0 h h h h h   2-bit
changes from 10.32
4. Network 0 200.16.10.96
last octet = 0 1 1 h h h h h   1-bit
change from 10.64
5. Network 0 200.16.10.128
last octet = 1 0 0 h h h h h   3-bit
changes from 10.96
6. Network 0 200.16.10.160
last octet = 1 0 1 h h h h h   1-bit
change from 10.128
7. Network 0 200.16.10.192
last octet = 1 1 0 h h h h h   2-bit
changes from 10.160
8. Network 0 200.16.10.224
last octet = 1 1 1 h h h h h   1-bit
change from 10.192.
If we want two networks, then use the pairs 1–2, 3–4, 5–6, or 7–8. If we want four networks, then
choose the groups 1–4 or 5–8. If we need an odd number of networks, then remember that we are
summarizing in powers of 2 (2, 4, 8, etc.), so you can tell how many networks you will be
wasting. If we want three networks, we could chose networks 1, 2, and 3, and network 4 could
not be used elsewhere.
Another example of the range command may be in order. Assume that we have the class B
address 156.26.0.0 and want 12 subnets with a maximum number of 3000 hosts each and that the
subnets will be spread across four routers. Determine the subnets and the proper areacontinue
Page 226
range command. Assume that the subnets on each router are in the same area but that the areas
are different on different routers.
For 3000 hosts, we need 12 bits for the host portion of the address and 4 bits for the subnet
portion. The subnet mask would be 255.255.240.0, and the possible subnets are listed below.
Group 1
156.26.0.0
0 0 0 0 h h h h . h h h h h h h h  Lowest network address
156.26.16.0
0 0 0 1 h h h h . h h h h h h h h
156 26 32 0
0 0 1 0 h h h h h h h h h h h h

156.26.32.0
0 0 1 0 h h h h . h h h h h h h h
156.26.48.0
0 0 1 1 h h h h . h h h h h h h h
Group 2
156.26.64.0
0 1 0 0 h h h h . h h h h h h h h  Lowest network address
156.26.80.0
0 1 0 1 h h h h . h h h h h h h h
156.26.96.0
0 1 1 0 h h h h . h h h h h h h h
156.26.112.0
0 1 1 1 h h h h . h h h h h h h h
Group 3
156.26.128.0
1 0 0 0 h h h h . h h h h h h h h  Lowest network address
156.26.144.0
1 0 0 1 h h h h . h h h h h h h h
156.26.160.0
1 0 1 0 h h h h . h h h h h h h h
156.26.176.0
1 0 1 1 h h h h . h h h h h h h h
Group 4
156.26.192.0
1 1 0 0 h h h h . h h h h h h h h h  Lowest network address
156.26.208.0
1 1 0 1 h h h h . h h h h h h h h
156.26.224.0
1 1 1 0 h h h h . h h h h h h h h
156.26.240.0
1 1 1 1 h h h h . h h h h h h h h
With 4 routers and 12 subnets, we need 3 subnets per router. We can use the 4 groups shown
above by using 3 networks from each group. For the first group, the least 2 significant bits of the
subnet mask are changing, so they need to be covered by the subnet mask in the range command.
These 2 bits will be transferred to the host portion of the network address, so the subnet mask
will be 255.255.192.0, and the range command is area 1 range 156.26.0.0 255.255.192.0.
For the second group, the same 2 bits are changing as in the first group, so the subnet mask will
be the same, but the network will becontinue
Page 227
156.26.64.0, the lowest one on the group. The associated range command is area 2 range

156.26.64.0 255.255.192.0.
For the third and fourth groups, we again have the same subnet masks as the first and second
groups, since only the low-order 2 bits of the subnet mask are changing, and their area range
commands are area 3 range 156.26.128.0 255.255.192.0 and area 4 range 156.26.192.0
255.255.192.0.
We can check part of this example by configuring router r1 with the first group and router r2 with
the second group.break
Router r1 configuration
interface Loopback0
  ip address 156.26.0.1 255.255.240.0
interface Loopback1
  ip address 156.26.16.1 255.255.240.0
interface Loopback2
  ip address 156.26.32.1 255.255.240.0
interface FastEthernet8/1
  ip address 172.16.3.1 255.255.255.0
  ip ospf message-digest-key 1 md5 cisco
  ip ospf message-digest-key 2 md5 secret
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 156.26.0.0 0.0.15.255 area 1
  network 156.26.16.0 0.0.15.255 area 1
  network 156.26.32.0 0.0.15.255 area 1
  area 0 authentication message-digest
Router r2 configuration
interface Loopback0
  ip address 156.26.64.1 255.255.240.0
interface Loopback1
  ip address 156.26.80.1 255.255.240.0
interface Loopback2
  ip address 156.26.96.1 255.255.240.0
interface FastEthernet0/0
  ip address 172.16.3.2 255.255.255.0
  ip ospf message-digest-key 1 md5 cisco
  ip ospf message-digest-key 2 md5 secret
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 156.26.64.0 0.0.15.255 area 2
  network 156.26.80.0 0.0.15.255 area 2
  network 156.26.96.0 0.0.15.255 area 2

  area 0 authentication message-digest
Page 228
Before using the range command, check to see if the routes are in the routing table and that you
can ping all the loopback interfaces.
r1#show ip route
  156.26.0.0/16 is variably subnetted, 6 subnets, 2 masks
C   156.26.0.0/20 is directly connected, Loopback0
C   156.26.16.0/20 is directly connected, Loopback1
C   156.26.32.0/20 is directly connected, Loopback2
O   IA 156.26.64.1/32 [110/2] via 172.16.3.2, 00:04:16, FastEthernet8/1
O   IA 156.26.80.1/32 [110/2] via 172.16.3.2, 00:04:06, FastEthernet8/1
O   IA 156.26.96.1/32 [110/2] via 172.16.3.2, 00:04:06, FastEthernet8/1
  172.16.0.0/24 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, FastEthernet8/1
r2#show ip route
  156.26.0.0/16 is variably subnetted, 6 subnets, 2 masks
O   IA 156.26.0.1/32 [110/2] via 172.16.3.1, 00:02:26, FastEthernet0/0
O   IA 156.26.16.1/32 [110/2] via 172.16.3.1, 00:02:26, FastEthernet0/0
O   IA 156.26.32.1/32 [110/2] via 172.16.3.1, 00:02:26, FastEthernet0/0
C   156.26.64.0/20 is directly connected, Loopback0
C   156.26.80.0/20 is directly connected, Loopback1
C   156.26.96.0/20 is directly connected, Loopback2
  172.16.0.0/24 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, FastEthernet0/0
Now add the area range command on routers r1 and r2 and then check the routing tables to see if
summarization was successful (is there any doubt?).break
r1(config)#router ospf 100
r1(config-router)#area 1 range 156.26.0.0 255.255.192.0
r2(config)#router ospf 100
r2(config-router)#area 2 range 156.26.64.0 255.255.192.0
r1#show ip route
  156.26.0.0/16 is variably subnetted, 4 subnets, 2 masks
C   156.26.0.0/20 is directly connected, Loopback0
C   156.26.16.0/20 is directly connected, Loopback1
C   156.26.32.0/20 is directly connected, Loopback2
O   IA 156.26.64.0/18 [110/2] via 172.16.3.2, 00:02:01, FastEthernet8/1
  172.16.0.0/24 is subnetted, 1 subnets
C   172.16.3.0 is directly connected, FastEthernet8/1
r2#show ip route
  156.26.0.0/16 is variably subnetted, 4 subnets, 2 masks
O   IA 156.26.0.0/18 [110/2] via 172.16.3.1, 00:00:07, FastEthernet0/0
C   156.26.64.0/20 is directly connected, Loopback0
C   156.26.80.0/20 is directly connected, Loopback1
C   156.26.96.0/20 is directly connected, Loopback2
  172.16.0.0/24 is subnetted, 1 subnets

C   172.16.3.0 is directly connected, FastEthernet0/0
Page 229
Command
area
Subcommand
stub
Purpose
Specify a stub area.
This command is used to define an area as a stub area. All routers in a stub area must be
configured using this command.
r1(config-router)#area 1 stub?
   no-summary Do not send summary LSA into stub area
   <cr>
The first form, area 1 stub, configures the area as a stub area. The second form, area 1
stub no-summary, reduces the amount of information sent into the area by preventing the
ABR from sending type 3 LSAs (summary LSAs) into the area.
Command
area
Subcommand
virtual-link
Purpose
Define a virtual link and its parameters.
All nonbackbone (nonzero) areas must connect to the backbone. If the backbone becomes
divided, or if an area cannot physically attach to the backbone, then a virtual link is needed (Fig.
11-4). The format of the command is
Area <transit area id> virtual-link <remote router ID>.
The transit area is the area connecting the backbone and nonbackbone areas or the area
connecting the two disjoint backbone areas. In Fig. 11-4 the transit area is area 51. The router ID
is the highest IP address assigned to the router or the highest loopback address if loopbacks are
being used (and they should). The commands to create the virtual link arebreak

Figure 11-4
OSPF network requiring a virtual link.
Page 230
Router r1:
area 51 virtual - link 172.16.60.1
Router r2:
area 51 virtual - link 172.16.30.1
There are additional subcommands for the virtual - link command, and they will be
explained in the section on OSPF interface commands.
r1(config-router)#area 1 virtual-link 1.2.3.4?
   authentication-key        Set authentication key
   dead-interval             Dead router detection time
   hello-interval            Hello packet interval
   message-digest-key        Set message digest key
   retransmit-interval       LSA retransmit interval
   transmit-delay            LSA transmission delay
   <cr>
Command
default - information
Purpose
Control distribution of default information.
This command is covered in Chap. 13.
Command
default - metric

Command
default - metric
Purpose
A router may be running more that one IP routing protocol
(RIP, IGRP, EIGRP, or OSPF). Each routing protocol has a
different metric; e.g., RIP has a hop count, OSPF has a
dimensionless cost, and IGRP and EIGRP have a cost based on
five metrics. When injecting routes from one routing protocol
to another, the route metric needs to be converted from one
protocol to another. The default - metric command is
used to perform this conversion. This will be covered in detail
in Chap. 13.
Command
distance
Purpose
Used to adjust the administrative distance of a route.
r2(config)#router ospf 100
r2(config-router)#distance?
   <1-255>        Administrative distance
   ospf           OSPF distance
The first form is to enter an administrative distance in the range 1–255. The default for OSPF is
110. The administrative distance is used when more than one routing protocol is active on a
router. For example, if we are running IGRP and OSPF and each protocol has a route to the same
network, the IGRP route would be preferred because IGRP has a lower administrative distance
(100) than OSPF (110). We can force thecontinue
Page 231
IGRP route to not be chosen by setting the administrative distance to be lower than that for
IGRP.
r2(config-router)#distance 95?
   A.B.C.D       IP Source address
   <cr>
Choosing <cr> will set the administrative distance to all routes learned from OSPF to the
number entered, in this case 95. This can be seen by examining the IP protocol listing.
r2#show ip protocols
Routing Protocol is "ospf 100"
  Sending updates every 0 seconds
  Invalid after 0 seconds, hold down 0, flushed after 0
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is not set
  Redistributing: ospf 100
  Routing for Networks:
    172.16.4.0/24
    172.16.5.0/24
    172.16.3.0/24

  Routing Information Sources:
    Gateway       Distance Last Update
  Distance: (default is 95)
If you want to adjust the administrative distance for a particular IP network, use the form
r2(config-router)#distance 130 172.16.0.0?
   A.B.C.D IP       address mask
r2(config-router)#distance 95 172.16.0.0 0.0.255.255?
   <1-99>           IP Standard access list number
Notice that the IP address mask is the "reverse" of what is used for a subnet mask. This is the
same style that was used for IP access lists, which were discussed in Chap. 7. We can choose the
routes that will have their administrative distance modified through the use of an IP access list.
Assume that we want to change the administrative distance of the route to 72.16.1.0 to 95 but not
affect the route to 172.16.2.0. First, we would use the OSPF commandbreak
r2(config-router)#distance 95 172.16.0.0 0.0.255.255?
   <1-99>        IP Standard access list number
r2(config-router)#distance 95 172.16.0.0 0.0.255.255 1?
   <cr>
r2(config-router)#distance 95 172.16.0.0 0.0.255.255 1
r2(config-router)#
Page 232
The final step is to create an IP access list that informs OSPF to adjust the administrative
distance of 172.16.1.0 but leave the administrative distance of 172.16.2.0 set to 110. Without an
access list but with the distance command shown above, all the routes learned for network
172.16.0.0 will have their administrative distance set to 95, as shown. This is the default
behavior.
The access list needed to adjust only the route to 172.16.1.0 is
r2(config)#access-list 1?
   deny        Specify packets to reject
   permit      Specify packets to forward
r2(config)#access-list 1 permit?
   Hostname or A.B.C.D Address to match
   any       Any source host
   host      A single host address
r2(config)#access-list 1 permit 172.16.1.0 0.0.0.225?
   <cr>
r2(config)#access-list 1 permit 172.16.1.0 0.0.0.225
r2(config)#
Notice that we did not have to use a permit any statement at the end of the access list. A normal
IP access list always has an implicit deny any as the last statement. This is true in this case, but
the administrative distance is only affected for those routes which have a matching permit
statement, so in this case the implicit deny any in the access list has no effect. The new IP
protocol listing contains
r2#show ip protocols

Routing Protocol is "ospf 100"
  Sending updates every 0 seconds
  Invalid after 0 seconds, hold down 0, flushed after 0
  Outgoing update filter list for all interfaces is not set
  Incoming update filter list for all interfaces is not set
  Redistributing: ospf 100
  Routing for Networks:
    172.16.1.0/24
    172.16.2.0/24
    172.16.3.0/24
  Routing Information Sources:
    Gateway       Distance     Last Update
  Distance: (default is 110)
     Address        Wild mask     Distance     List
    172.16.1.0      0.0.0.255        95         1
Another form of the distance commands allows you to adjust the distance of either external,
interarea, or intraarea routes.break
Page 233
r1(config-router)#distance ospf?
   external       External type 5 and type 7 routes
   inter-area     Inter-area routes
   intra-area     Intra-area routes
r1(config-router)#distance ospf external?
   <1-255>        Distance for external type 5 and type 7 routes
r1(config-router)#distance ospf inter-area?
   <1-255>        Distance for inter-area routes
r1(config-router)#distance ospf intra-area?
   <1-255>        Distance for intra-area routes
Command
distribute - list
Purpose
Used to filter incoming or outgoing routing updates.
A distribute list is used to delete routes from either incoming or outgoing routing updates, as we
have seen with RIP, IGRP, and EIGRP. The distribute-list command will have no effect
on OSPF and should not be used. Can you think of a reason why? OSPF routers exchange
link-state information and not routes. The routes are derived from the link-state information, and
every router in an area has an identical link-state database. Therefore there really aren't any routes
to block. Even if we could, they would be regenerated from the link-state database.break
Command
exit

Command
exit
Purpose
Exit router configuration mode and enter global configuration
mode.
r2(config)#router ospf 100
r2(config-router)#exit
r2(config)#
Command
help
Purpose
Get help on help.
r2(config)#router ospf 100
r2(config-router)#help
Help may be requested at any point in a command by entering a question mark '?'. If
nothing matches, the help list will be empty and you must backup until entering a '?'
shows the available options.
Two styles of help are provided:
1. Full help is available when you are ready to enter a command argument (e.g. 'show?')
   and describes each possible argument.
2. Partial help is provided when an abbreviated argument is entered and you want to
   know what arguments match the input (e.g. 'show pr?'.)
Page 234
Command
maximum-paths
Purpose
Forward packets over multiple paths.
OSPF can distribute traffic on up to six different paths.
r2(config)#router ospf 100
r2(config-router)#maximum-paths?
   <1-6>         Number of paths
r2(config-router)#maximum-paths 3?
   <cr>
Command
neighbor
Purpose
Specify a neighbor on a nonbroadcast network.

For NBMA networks such as X.25 and Frame Relay, additional configuration information is
needed to propagate OSPF LSAs. The neighbor command can be used so that OSPF LSAs can
cross a Frame Relay cloud or X.25 cloud. This command has been superseded by OSPF interface
commands, which we shall see in Chap. 12.
Command
network
Purpose
To inform OSPF which networks to advertise and out which
interfaces to advertise. Any active interface that has an IP
address contained in the network command will be used to
send and receive OSPF link-state information.
Command
no
Purpose
Used to negate configuration commands.
The no command is used to undo previous configuration commands.
r1(config)#router ospf 100
r1(config-router)#no network 172.16.1.0 0.0.0.255 area 1
Command
ospf
Purpose
OSPF specific commands.
The format for the OSPF specific commands is given below.break
r1(config-router)#ospf?
   auto-cost                    Calculate OSPF cost according to bandwidth
   ignore                       Do not complain about specific event
   log-adjacency-changes        Log changes in adjacency state
r1(config-router)#ospf auto-cost?
   reference-bandwidth          Use reference bandwidth method to assign OSPF cost
   <cr>
Page 235
r1(config-router)#ospf auto-cost reference-bandwidth?
   <1-4294967>       The reference bandwidth in terms of Mbits per second

r1(config-router)#ospf auto-cost reference-bandwidth 10?
r1(config-router)#ospf ignore?
   lsa Do not complain upon receiving LSA of the specified type
r1(config-router)#ospf ignore lsa?
   mospf MOSPF Type 6 LSA
r1(config-router)#ospf ignore lsa mospf?
   <cr>
r1(config-router)#ospf log-adjacency-changes?
   <cr>
The auto-cost command determines how OSPF will calculate default metrics for the router
interfaces. The default, as we have seen, is 100,000,000 and can be changed with this command.
For example, if we change the reference bandwidth to 1,000,000,000, then the cost of the fast
Ethernet interface should increase from 1 to 10, as shown.
r1(config-router)#ospf auto-cost reference-bandwidth?
   <1-4294967>         The reference bandwidth in terms of Mbits per second
r1(config-router)#ospf auto-cost reference-bandwidth 1000
%OSPF: Reference bandwidth is changed.
 Please ensure reference bandwidth is consistent across all routers.
r1#show ip ospf interface fastEthernet 8/1
FastEthernet8/1 is up, line protocol is up
  Internet Address 172.16.3.1/24, Area 0
  Process ID 100, Router ID 172.16.2.1, Network Type BROADCAST, Cost: 10
  Transmit Delay is 1 sec, State BDR, Priority 2
  Designated Router (ID) 172.16.5.1, Interface address 172.16.3.2
  Backup Designated router (ID) 172.16.2.1, Interface address 172.16.3.1
  Timer intervals configured, Hello 10, Dead 40, Wait 40, Retransmit 5
    Hello due in 00:00:07
  Neighbor Count is 1, Adjacent neighbor count is 1
    Adjacent with neighbor 172.16.5.1 (Designated Router)
  Suppress hello for 0 neighbor(s)
The interface command ip ospf cost will override the auto-cost router ospf
command.break
r1(config)#interface fastEthernet 8/1
r1(config-if)#ip ospf cost 1
Page 236
r1#show ip ospf interface fastEthernet 8/1
FastEthernet8/1 is up, line protocol is up
  Internet Address 172.16.3.1/24, Area 0
  Process ID 100, Router ID 172.16.2.1, Network Type BROADCAST, Cost: 1
  Transmit Delay is 1 sec, State BDR, Priority 2

  Designated Router (ID) 172.16.5.1, Interface address 172.16.3.2
  Backup Designated router (ID) 172.16.2.1, Interface address 172.16.3.1
  Timer intervals configured, Hello 10, Dead 40, Wait 40, Retransmit 5
    Hello due in 00:00:06
  Neighbor Count is 1, Adjacent neighbor count is 1
    Adjacent with neighbor 172.16.5.1 (Designated Router)
  Suppress hello for 0 neighbor(s)
The subcommand ospf log-adj-changes will send information to the console screen
when a neighbor's status changes. To test this feature, shut down the Ethernet interface on router
r2 and see what happens.
r1(config-router)#ospf log-adjacency-changes
r2(config)#interface fastEthernet 0/0
r2(config-if)#shut
r2(config-if)#
%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state
to down
%LINK-5-CHANGED: Interface FastEthernet0/0, changed state to administratively
down
Router r1 console output
%OSPF-5-ADJCHG: Process 100, Nbr 172.16.5.1 on FastEthernet8/1 from FULL to
DOWN, Neighbor Down
Now reenable the Ethernet interface on router r2 and watch routers r1 and r2 form their
adjacency.break
r2(config-if)#no shut
r2(config-if)#
%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state
  to up
%LINK-3-UPDOWN: Interface FastEthernet0/0, changed state to up
Router r1 console output
%OSPF-5-ADJCHG: Process 100, Nbr 172.16.5.1 on FastEthernet8/1 from DOWN to
  INIT,
Received Hello
%OSPF-5-ADJCHG: Process 100, Nbr 172.16.5.1 on FastEthernet8/1 from INIT to 2W
  2-Way Received
%OSPF-5-ADJCHG: Process 100, Nbr 172.16.5.1 on FastEthernet8/1 from 2WAY to EX
  START, AdjOK?
%OSPF-5-ADJCHG: Process 100, Nbr 172.16.5.1 on FastEthernet8/1 from EXSTART to
  EXCHANGE, Negotiation Done
Page 237
%OSPF-5-ADJCHG: Process 100, Nbr 172.16.5.1 on FastEthernet8/1 from EXCHANGE t

  LOADING, Exchange Done
%OSPF-5-ADJCHG: Process 100, Nbr 172.16.5.1 on FastEthernet8/1 from LOADING to
  FULL, Loading Done
The final OSPF subcommand is used to ignore MOSPF type 6 LSAs.
r1(config-router)#ospf ignore?
   lsa     Do not complain upon receiving LSA of the specified type
r1(config-router)#ospf ignore lsa?
   mospf MOSPF Type 6 LSA
r1(config-router)#ospf ignore lsa mospf?
<cr>
Command
passive-interface
Purpose
Suppress routing updates on an interface.
The passive-interface command stops routing information from being sent or received
(processed) on an interface. Interfaces that have been configured as passive can be shown with
the show ip protocols command.
r1#show ip protocols
Routing Protocol is "ospf 100"
Sending updates every 0 seconds
Invalid after 0 seconds, hold down 0, flushed after 0
Outgoing update filter list for all interfaces is not set
Incoming update filter list for all interfaces is not set
Redistributing: ospf 100
Routing for Networks:
 172.16.1.0/24
 172.16.2.0/24
 172.16.3.0/24
Passive Interface(s):
   Loopback0
Routing Information Sources:
  Gateway      Distance   Last Update
  172.16.5.1      110       00:09:18
Distance: (default is 110)
Since OSPF does not send routing updates as a broadcast, the passive-interface
command used in conjunction with the neighbor command will not allow OSPF to receive
routing updates like we have seen with RIP and IGRP. Making an interface passive blocks the
OSPF hello protocol, preventing a neighbor relationship from being established on the interface.
This has the affect of blocking the incomingcontinue
Page 238

routing updates, since they are only sent to neighbors. The passive interface is not needed with
OSPF because we can prevent OSPF from functioning on an interface by not entering a network
command for that interface. We could not do this with RIP, IGRP, and EIGRP, since we could
only enter major network numbers with the network command.
Command
redistribute
Purpose
Redistribute information from another routing protocol.
This command is covered in Chap. 13.
Command
summary-address
Purpose
Configure IP address summaries.
The summary-address command is used for external route summarization of external routes
that are injected into OSPF through redistribution. This topic will be covered in Chap. 13.
Command
timers
Purpose
Adjust routing timers.
The OSPF timer values can be seen by using the global command show ip ospf 100.
r1#show ip ospf 100
  Routing Process "ospf 100" with ID 172.16.2.1
  Supports only single TOS(TOS0) routes
  SPF schedule delay 5 secs, Hold time between two SPFs 10 secs
  Number of DCbitless external LSA 0
  Number of DoNotAge external LSA 0
  Number of areas in this router is 1. 1 normal 0 stub 0 nssa
  Area BACKBONE(0)
    Number of interfaces in this area is 3
    Area has no authentication
    SPF algorithm executed 4 times
    Area ranges are
    Link State Update Interval is 00:30:00 and due in 00:11:09
    Link State Age Interval is 00:20:00 and due in 00:01:08
    Number of DCbitless LSA 0
    Number of indication LSA 0
    Number of DoNotAge LSA 0
The two OSPF timer values can be modified with the timers command.break

r1(config)#router ospf 100
r1(config-router)#timers?
   spf OSPF SPF timers
Page 239
r1(config-router)#timers spf?
   <0-4294967295>         Delay between receiving a change to SPF calculation
r1(config-router)#timers spf 7?
   <0-4294967295>         Hold time between consecutive SPF calculations
r1(config-router)#timers spf 7 13?
   <cr>
r1(config-router)#timers spf 7 13
r1#show ip ospf 100
  Routing Process "ospf 100" with ID 172.16.2.1
  Supports only single TOS(TOS0) routes
  PF schedule delay 7 secs, Hold time between two SPFs 13 secs
  Number of DCbitless external LSA 0
  Number of DoNotAge external LSA 0
  Number of areas in this router is 1. 1 normal 0 stub 0 nssa
  Area BACKBONE(0)
    Number of interfaces in this area is 3
    Area has no authentication
    SPF algorithm executed 4 times
    Area ranges are
    Link State Update Interval is 00:30:00 and due in 00:06:46
    Link State Age Interval is 00:20:00 and due in 00:16:45
    Number of DCbitless LSA 0
    Number of indication LSA 0
    Number of DoNotAge LSA 0
OSPF Interface Commands
The OSPF commands available for an interface are shown below.
r1(config)#interface fastEthernet 8/1
r1(config-if)#ip ospf?
   authentication-key         Authentication password (key)
   cost                       Interface cost
   dead-interval              Interval after which a neighbor is declared dead
   demand-circuit             OSPF demand circuit
   hello-interval             Time between HELLO packets
   message-digest-key         Message digest authentication password (key)
   network                    Network type
   priority                   Router priority
   retransmit-interva         Time between retransmitting lost link state adve
   transmit-delay             Link state transmit delay
Command
authentication password (key)
Purpose
Used to apply clear text authentication to the interface.

This command was covered in the discussion of the area authentication router configuration
command.break
Page 240
Command
cost
Purpose
Change the interface OSPF cost.
The default cost for an interface is 100,000,000 divided by the bandwidth of the interface. For the
fast Ethernet interface, the cost would be 1, as seen by using the global command
r1#show ip ospf interface fastEthernet 8/1
FastEthernet8/1 is up, line protocol is up
  Internet Address 172.16.3.1/24, Area 0
  Process ID 100, Router ID 172.16.2.1, Network Type BROADCAST, Cost: 1
  Transmit Delay is 1 sec, State BDR, Priority 1
  Designated Router (ID) 172.16.5.1, Interface address 172.16.3.2
  Backup Designated router (ID) 172.16.2.1, Interface address 172.16.3.1
  Timer intervals configured, Hello 10, Dead 40, Wait 40, Retransmit 5
    Hello due in 00:00:00
  Neighbor Count is 1, Adjacent neighbor count is 1
    Adjacent with neighbor 172.16.5.1 (Designated Router)
  Suppress hello for 0 neighbor(s)
The interface cost can be modified by using the ip ospf cost interface command. For
example, if we want to change the cost of the fast Ethernet interface to 2, we would use
r1(config)#interface fastEthernet 8/1
r1(config-if)#ip ospf cost?
   <1-65535>         Cost
r1(config-if)#ip ospf cost 2?
   <cr>
The new cost can be seen by listing the OSPF interface.break
r1#show ip ospf interface fastEthernet 8/1
FastEthernet8/1 is up, line protocol is up
  Internet Address 172.16.3.1/24, Area 0
  Process ID 100, Router ID 172.16.2.1, Network Type BROADCAST, Cost: 2
  Transmit Delay is 1 sec, State BDR, Priority 1
  Designated Router (ID) 172.16.5.1, Interface address 172.16.3.2
  Backup Designated router (ID) 172.16.2.1, Interface address 172.16.3.1
  Timer intervals configured, Hello 10, Dead 40, Wait 40, Retransmit 5
    Hello due in 00:00:06
  Neighbor Count is 1, Adjacent neighbor count is 1
    Adjacent with neighbor 172.16.5.1 (Designated Router)
  Suppress hello for 0 neighbor(s)
Command
dead-interval

Command
dead-interval
Purpose
Interval after which a neighbor is declared dead.
Command
hello-interval
Page 241
Purpose
Time between hello packets.
Command
retransmit interval
Purpose
Time between retransmitting lost link-state advertisements.
Command
transmit-delay
Purpose
Link-state transmit delay.
These four commands are used to adjust OSPF timers. These values and their defaults can be
seen by executing the global command
r1#show ip ospf interface fastEthernet 8/1
FastEthernet8/1 is up line protocol is up
  Internet Address 172.16.3.1/24, Area 0
  Process ID 100, Router ID 172.16.2.1, Network Type BROADCAST, Cost: 1
  Transmit Delay is 1 sec, State BDR, Priority 1
  Designated Router (ID) 172.16.5.1, Interface address 172.16.3.2
  Backup Designated router (ID) 172.16.2.1, Interface address 172.16.3.1
  Timer intervals configured, Hello 10, Dead 40, Wait 40, Retransmit 5
    Hello due in 00:00:00
  Neighbor Count is 1, Adjacent neighbor count is 1
    Adjacent with neighbor 172.16.5.1 (Designated Router)
  Suppress hello for 0 neighbor(s)
The OSPF timer values can be modified in interface configuration mode as shown below.break
r1(config)#interface fastEthernet 8/1
r1(config-if)#ip ospf dead-interval?
   <1-65535>         Seconds
r1(config-if)#ip ospf dead-interval 20
r1(config-if)#ip ospf hello-interval?
   <1-65535          Seconds
r1(config-if)#ip ospf hello-interval 5
r1(config-if)#ip ospf retransmit-interval?
   <1-65535>         Seconds
r1(config-if)#ip ospf retransmit-interval 7
r1(config-if)#ip ospf transmit-delay?
   <1-65535>         Seconds
r1(config-if)#ip ospf transmit-delay 23?
   <cr>

r1(config-if)#ip ospf transmit-delay 23
r1#show ip ospf interface fastEthernet 8/1
FastEthernet8/1 is up, line protocol is up
  Internet Address 172.16.3.1/24, Area 0
  Process ID 100, Router ID 172.16.2.1, Network Type BROADCAST, Cost: 2
  Transmit Delay is 23 sec, State DR, Priority 1
  Designated Router (ID) 172.16.2.1, Interface address 172.16.3.1
  No backup designated router on this network
Page 242
  Timer intervals configured, Hello 5, Dead 20, Wait 20, Retransmit 7
    Hello due in 00:00:03
  Neighbor Count is 0, Adjacent neighbor count is 0
  Suppress hello for 0 neighbor(s)
Command
demand-circuit
Purpose
OSPF command circuit.
This command is covered in Chap. 12.
Command
message-digest-key
Purpose
Message digest authentication password (key).
This command was covered in the discussion of OSPF authentication.
Command
network
Purpose
Network type.
This command is covered in Chap. 12.
Command
priority
Purpose
Router priority.
The default OSPF priority on an interface is 1. If you do not want a router to be elected the DR or

BDR for a network, then set the interface OSPF priority to 0. Normally, the router with the
highest router ID is elected DR for a network. You can influence the DR election by increasing
the interface OSPF priority. The router with highest interface priority will be elected DR. The
OSPF priority for an interface is contained in the interface OSPF properties listing.
r1#show ip ospf interface fastEthernet 8/1
FastEthernet8/1 is up, line protocol is up
  Internet Address 172.16.3.1/24, Area 0
  Process ID 100, Router ID 172.16.2.1, Network Type BROADCAST, Cost: 2
  Transmit Delay is 1 sec, State DR, Priority 1
  Designated Router (ID) 172.16.2.1, Interface address 172.16.3.1
  No backup designated router on this network
  Timer intervals configured, Hello 5, Dead 20, Wait 20, Retransmit 7
    Hello due in 00:00:01
  Neighbor Count is 0, Adjacent neighbor count is 0
  Suppress hello for 0 neighbor(s)
To change the interface OSPF priority, use the interface commandbreak
r1(config)#interface fastEthernet 8/1
r1(config-if)#ip ospf priority?
Page 243
   <0-255>         Priority
r1(config-if)#ip ospf priority 2?
   <cr>
r1(config-if)#ip ospf priority 2
To see the effect of the command, list the interface OSPF parameters.
r1#show ip ospf interface fastEthernet 8/1
FastEthernet8/1 is up, line protocol is up
Internet Address 172.16.3.1/24, Area 0
Process ID 100, Router ID 172.16.2.1, Network Type BROADCAST, Cost: 2
Transmit Delay is 1 sec, State DR, Priority 2
Designated Router (ID) 172.16.2.1, Interface address 172.16.3.1
No backup designated router on this network
Timer intervals configured, Hello 5, Dead 20, Wait 20, Retransmit 7
  Hello due in 00:00:01
Neighbor Count is 0, Adjacent neighbor count is 0
Suppress hello for 0 neighbor(s)
Changing the priority will not immediately affect which router is the DR. For stability, the
current DR will remain DR until a change causes the election process to be run. When this
happens, then the router with the highest interface priority will be elected DR.
Monitoring OSPF
There are a multitude of show commands that can be used to monitor an OSPF network, and we
will examine those show commands which apply to our basic OSPF network shown in Fig. 11-1
with one modification. Put interface loopback 0 in area 51 instead of area 0. This will have the
effect of making router r1 an area border router.break

Command
show ip ospf <process id>
Purpose
Display information about all OSPF routing processes by
using show ip ospf or a particular process by using show
ip ospf <process id>.
r1#show ip ospf 100
Routing Process "ospf 100" with ID 172.16.2.1
Supports only single TOS(TOS0) routes
It is an area border router
Summary Link update interval is 00:30:00 and the update due in 00:28:13
SPF schedule delay 7 secs, Hold time between two SPFs 13 secs
Number of DCbitless external LSA 0
Page 244
Number of DoNotAge external LSA 0
Number of areas in this router is 2. 2 normal 0 stub 0 nssa
 Area BACKBONE(0) (Inactive)
   Number of interfaces in this area is 2
   Area has no authentication
   SPF algorithm executed 10 times
   Area ranges are
   Link State Update Interval is 00:30:00 and due in 00:11:43
   Link State Age Interval is 00:20:00 and due in 00:01:43
   Number of DCbitless LSA 0
   Number of indication LSA 0
   Number of DoNotAge LSA 0
 Area 51
   Number of interfaces in this area is 1
   Area has no authentication
   SPF algorithm executed 2 times
   Area ranges are
   Link State Update Interval is 00:30:00 and due in 00:28:06
   Link State Age Interval is 00:20:00 and due in 00:18:06
   Number of DCbitless LSA 0
   Number of indication LSA 0
   Number of DoNotAge LSA 0
The first line shows the OSPF routing process number and the ID of the router. Notice that the
router ID is not the highest IP address assigned to the router but is the highest loopback interface
IP address. The third line indicates that router r1 is an area border router. Router r1 is an ABR
because interface loopback 0 is a nonbackbone area, so router r1 has interfaces in more than one
area, making it an ABR. The forth line shows that the LSA update time is 30 minutes, making
OSPF a very ''quiet" protocol.
Command
show ip ospf neighbor
Purpose
Display an OSPF routers neighbor relationships.

For the basic network in Fig. 11-1, each router has only 1 neighbor, as shown.
r1#show ip ospf neighbor
       Neighbor ID        Pri    State     Dead Time     Address        Interf
         172.16.5.1        1    FULL/DR     00:00:31    172.16.3.2   FastEther
r2#show ip ospf neighbor
       Neighbor ID        Pri    State     Dead Time     Address        Interf
         172.16.2.1        1   FULL/BDR     00:00:36    172.16.3.1   FastEther
Since we only have two routers, one will be elected the DR and the other the BDR, as shown.
Router r1 is showing that router r2 is the DR,continue
Page 245
and router r2 is showing that router r1 is the BDR. This is expected, since router r2 has a higher
router ID (172.16.5.1) than router r1 (172.16.2.1). The state of this neighbor relationship if FULL.
Recall from Chap. 7 the states the neighbors go through before achieving an adjacency. We can
view this process by shutting down the fast Ethernet interface on router r1 and then turning it on
again with the shut and no shut router interface commands. We can then watch the
adjacency form by executing the show ip ospf neighbor command until the full
adjacency is reached.
Neighbor ID    Pri       State      Dead Time     Address        Interface
  172.16.5.1    1    2WAY/DROTHER    00:00:35    172.16.3.2   FastEthernet8/1
Neighbor ID    Pri       State      Dead Time     Address        Interface
  172.16.5.1    1     EXSTART/DR     00:00:39    172.16.3.2   FastEthernet8/1
Neighbor ID    Pri       State      Dead Time     Address        Interface
  172.16.5.1    1      FULL/DR       00:00:39    172.16.3.2   FastEthernet8/1
We have discussed the fact that if we want to influence the DR election, we can do so by
changing an interface's OSPF priority. Currently, router r2 is the DR because it has a higher
router ID. What will happen if we set the fast Ethernet interface priority on router r1 to 2? Router
r1 should be elected DR. Change the OSPF priority on router r1 to 2, shut down the interface,
and then reenable the interface. After the routers have reached the FULL state, determine which
one is the DR.
r1(config)#interface fastEthernet 8/1
r1(config-if)#shut
%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet8/1, changed state
to down
%LINK-5-CHANGED: Interface FastEthernet8/1, changed  state to administratively

down
r1(config-if)#ip ospf priority 2
r1(config-if)#no shut
%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet8/1, changed state
to up
%LINK-3-UPDOWN: Interface FastEthernet8/1, changed state to up [Resuming conne
tion 1 to r2...]
r2#show ip ospf neighbor
Neighbor ID   Pri   State   Dead Time   Address        Interface
  172.16.2.1   2  FULL/BDR   00:00:35  172.16.3.1   FastEthernet0/0
Something seems wrong. Router r1 shows a higher priority, but it is still the BDR. Router r2 was
the DR. Since the link on router r2 did not go down, it will remain the DR regardless of the
priority of router r1. To force router r1 to be DR, we need to shut down router r2's interface and
then reenable it.break
Page 246
r2(config)#interface fastEthernet 0/0
r2(config-if)#shut
%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state
to down
%LINK-5-CHANGED: Interface FastEthernet0/0, changed state to administratively
down
r2(config-if)#no shut
%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state
to up
%LINK-3-UPDOWN: Interface FastEthernet0/0, changed state to up
r2#show ip ospf neighbor
Neighbor ID      Pri     State    Dead Time    Address        Interface
  172.16.2.1      2     FULL/DR    00:00:31   172.16.3.1   FastEthernet0/0
Router r1 is now the DR due to its higher priority.
There are a multitude of ip ospf show commands, and we have seen the most commonly
used forms. The remaining forms are shown below. Experiment with them to get some practice
with the information they can reveal.
r1#show ip ospf?
  <1-4294967295>        Process ID number
  border-routers        Border and Boundary Router Information
  database              Database summary
  interface             Interface information
  neighbor              Neighbor list
  request-list          Link state request list
  retransmission-list   Link state retransmission list
  retransmission-list   Link state retransmission list
  virtual-links         Virtual link information
  <cr>

OSPF Debug Commands
There are a number of OSPF debug commands available for monitoring the OSPF process, as
shown below.break
r1#debug ip ospf?
  adj                 SPF adjacency events
  events              OSPF events
  flood               OSPF flooding
  lsa-generation      OSPF lsa generation
  packet              OSPF packets
  retransmission      OSPF retransmission events
  spf                 OSPF spf
  tree                OSPF database tree
Page 247
The debug ip ospf adj command will display on the console events relating to any
formed adjacencies or to adjacencies the router is trying to establish. Enable adjacency debugging
and then shut down the Ethernet interface on router r2 to view the operation of this command.
How long will it take from the time we disable the Ethernet interface on router r2 until we see an
adjacency change? The neighbor router will not be declared dead until the dead interval has
expired, which has a default of 40 seconds.
r1#debug ip ospf adj
OSPF adjacency events debugging is on
r2(config)#interface fastEthernet 0/0
r2(config-if)#shut
r2(config-if)#
%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state
to down
%LINK-5-CHANGED: Interface FastEthernet0/0, changed state to administratively
down
OSPF: 172.16.5.1 address 172.16.3.2 on FastEthernet8/1 is dead
OSPF: 172.16.5.1 address 172.16.3.2 on FastEthernet8/1 is dead, state DOWN
OSPF: Neighbor change Event on interface FastEthernet8/1
OSPF: DR/BDR election on FastEthernet8/1
OSPF: Elect BDR 0.0.0.0
OSPF: Elect DR 172.16.2.1
  DR: 172.16.2.1 (Id) BDR: none
OSPF: Build router LSA for area 0, router ID 172.16.2.1
OSPF: Build router LSA for area 0, router ID 172.16.2.1
OSPF: Build network LSA for FastEthernet8/1, router ID 172.16.2.1
OSPF: No full nbrs to build Net Lsa
OSPF: Flush network LSA on FastEthernet8/1 for area 172.16.2.1
OSPF: Schedule SPF to remove network route
OSPF: Build router LSA for area 0, router ID 172.16.2.1

Now reenable the Ethernet interface on router r2.break
r2(config-if)#no shut
r2(config-if)#
%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state
to up
%LINK-3-UPDOWN:Interface FastEthernet0/0, changed state to up
Router r1 console output
OSPF: 2 Way Communication to 172.16.5.1 on FastEthernet8/1, state 2WAY
OSPF: Neighbor change Event on interface FastEthernet8/1
OSPF: DR/BDR election on FastEthernet8/1
OSPF: Elect BDR 172.16.5.1
Page 248
OSPF: Elect DR 172.16.2.1
  DR: 172.16.2.1 (Id) BDR: 172.16.5.1 (Id)
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1A82 opt 0×2 flag 0×7 le
OSPF: Build router LSA for area 0, router ID 172.16.2.1
OSPF: Retransmitting DBD to 172.16.5.1 on FastEthernet8/1
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1A82 opt 0×2 flag 0×7 le
OSPF: Retransmitting DBD to 172.16.5.1 on FastEthernet8/1
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1A82 opt 0×2 flag 0×7 le
OSPF: Retransmitting DBD to 172.16.5.1 on FastEthernet8/1
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1A82 opt 0×2 flag 0×7 le
OSPF: Retransmitting DBD to 172.16.5.1 on FastEthernet8/1
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1A82 opt 0×2 flag 0×7 le
OSPF: Retransmitting DBD to 172.16.5.1 on FastEthernet8/1
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1A82 opt 0×2 flag 0×7 le
OSPF: Retransmitting DBD to 172.16.5.1 on FastEthernet8/1
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1A82 opt 0×2 flag 0×7 le
OSPF: Neighbor change Event on interface FastEthernet8/1
OSPF: DR/BDR election on FastEthernet8/1
OSPF: Elect BDR 172.16.5.1
OSPF: Elect DR 172.16.2.1
  DR: 172.16.2.1 (Id) BDR: 172.16.5.1 (Id)
OSPF: Build router LSA for area 0, router ID 172.16.2.1
OSPF: Retransmitting DBD to 172.16.5.1 on FastEthernet8/1
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1A82 opt 0×2 flag 0×7 le
OSPF: Rcv DBD from 172.16.5.1 on FastEthernet8/1 seq 0×1DE5 opt 0×2 flag 0×7 l
state EXSTART
OSPF: NBR Negotiation Done. We are the SLAVE
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1DE5 opt 0×2 flag 0×2 le
OSPF: Rcv DBD from 172.16.5.1 on FastEthernet8/1 seq 0×1DE6 opt 0×2 flag 0×3 l
state EXCHANGE

OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1DE6 opt 0×2 flag 0×0 le
OSPF: Database request to 172.16.5.1
OSPF: sent LS REQ packet to 172.16.3.2, length 24
OSPF: Rcv DBD from 172.16.5.1 on FastEthernet8/1 seq 0×1DE7 opt 0×2 flag 0×1 l
state EXCHANGE
OSPF: Exchange Done with 172.16.5.1 on FastEthernet8/1
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×1DE7 opt 0×2 flag 0×0 le
OSPF: Build network LSA for FastEthernet8/1, router ID 172.16.2.1
OSPF: No full nbrs to build Net Lsa
OSPF: Flush network LSA on FastEthernet8/1 for area 172.16.2.1
OSPF: Synchronized with 172.16.5.1 on FastEthernet8/1, state FULL
OSPF: Build router LSA for area 0, router ID 172.16.2.1
OSPF: Build network LSA for FastEthernet8/1, router ID 172.16.2.1
This debugging output gives you a clear picture of the events that occur when two routers are
forming an adjacency on a network. The debug ip ospf events command displays a
more summarized output than the debug ip ospf adjacencies command. Enable events
debugging and again shutdown the Ethernet interface on router r2. We will again have to wait 40
seconds before seeing any output.break
Page 249
r1#debug ip ospf events
OSPF events debugging is on
OSPF:172.16.5.1 address 172.16.3.2 on FastEthernet8/1 is dead
OSPF: Neighbor change Event on interface FastEthernet8/1
OSPF: DR/BDR election on FastEthernet8/1
OSPF: Elect BDR 0.0.0.0
OSPF: Elect DR 172.16.2.1
  DR: 172.16.2.1 (Id) BDR: none
OSPF: Tried to build Router LSA within MinLSInterval
OSPF: Schedule SPF to remove network route
OSPF: service_maxage: Trying to delete MAXAGE LSA
Reenable the Ethernet interface on router r2 and sit back and watch the action.
OSPF: 2 Way Communication to 72.16.5.1 on FastEthernet8/1, state 2WAY
OSPF: Neighbor change Event on interface FastEthernet8/1
OSPF: DR/BDR election on FastEthernet8/1
OSPF: Elect BDR 172.16.5.1
OSPF: Elect DR 172.16.2.1
  DR: 172.16.2.1 (Id) BDR: 172.16.5.1 (Id)
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×236D opt 0×2 flag 0×7 le
OSPF: Rcv DBD from 172.16.5.1 on FastEthernet8/1 seq 0×2324 opt 0×2 flag 0×7 l
state EXSTART
OSPF: NBR Negotiation Done. We are the SLAVE
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×2324 opt 0×2 flag 0×2 le
OSPF: Rcv DBD from 172.16.5.1 on FastEthernet8/1 seq 0×2325 opt 0×2 flag 0×3 l
state EXCHANGE
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×2325 opt 0×2 flag 0×0 le

OSPF: Database request to 172.16.5.1
OSPF: sent LS REQ packet to 172.16.3.2, length 24
OSPF: Rcv DBD from 172.16.5.1 on FastEthernet8/1 seq 0×2326 opt 0×2 flag 0×1 l
state EXCHANGE
OSPF: Exchange Done with 172.16.5.1 on FastEthernet8/1
OSPF: Send DBD to 172.16.5.1 on FastEthernet8/1 seq 0×2326 opt 0×2 flag 0×0 le
OSPF: Synchronized with 172.16.5.1 on FastEthernet8/1, state FULL
Experiment with the other debug commands and become familiar with the information they can
supply.
Summary
As you have just seen, OSPF is a much more complicated IP routing protocol than RIP, IGRP, or
EIGRP. This complexity is required for the stability and fast convergence of OSPF. Much of this
chapter grew out of my experiences in the CCIE Preparation Lab and from the
misconceptionscontinue
Page 250
and misunderstandings that many of the lab attendees had concerning OSPF. Every tricky aspect
of the protocol was covered, except for route redistribution. Below is a list of those OSPF topics
which tend to cause people the most trouble and confusion. If you can master these topics, you
are ready for the advanced OSPF topics and route redistribution.
OSFP Commands and Concepts
1. router ospf <process id>
2. network
3. redistribute (see Chap. 13)
4. distribute-list (see Chap. 13)
5. default-metric (see Chap. 13)
6. Summarizing routes—ABR and the area range command.
7. Summarizing routes—ASBR and the summary address command
8. Configuring virtual links
9. The rest of the commandsbreak
Page 251

Chapter 12—
Advanced OSPF Configuration
Page 252
In the preceding chapter, almost all the Open Shortest Path First (OSPF) configuration
commands were covered in sufficient detail. These commands were presented on relatively
simple network configurations. The network configurations were kept simple so as not to obscure
the task that was at hand—to learn the operation of OSPF. In this chapter we will examine OSPF
configurations for more complex networks—networks that include Frame Relay and ISDN. The
OSPF commands that were skipped in Chap. 11 will be presented in this chapter, and I will
present those commands which enable efficient OSPF implementations over Frame Relay and
demand circuits such as ISDN.
Frame Relay—An Overview
Frame Relay is a wide area network (WAN) protocol that operates at layer 2 of the OSI model.
Being a layer 2 protocol means that Frame Relay is not routable but is a switched protocol like
Ethernet. A basic Frame Relay network is shown in Fig. 12-1. The components of a Frame Relay
network include one or more frame switches that are used to transport the Frame Relay packet
through the WAN. A frame connection consists of a data terminal equipment (DTE) interface
that is usually part of the equipment on a customer's premise. The data circuit-terminating
equipment (DCE) interface supplies the clock for the synchronous serial connection, as is usually
provided by the WAN service provider. User data from the upper layers are encapsulated in a
Frame Relay packet and then switched through the WAN to the exit point from the cloud. The
frames are switched through the network based on a data-link connec-soft
Figure 12-1
Frame Relay WAN.
Page 253

Flags
0111 1110
Address
2–4 bytes
Data
Variable length
FCS
2 bytes
Flags
0111 1110
Figure 12-2
Frame Relay frame format.
tion identifier (DLCI). The DLCI is the Frame Relay address and can be 2 to 4 bytes in length, as
shown in Fig. 12-2. The WAN service provider normally assigns DLCIs.
The 1-byte flags field at the beginning and end of the frame is used to signal the start and end of
the frame. A DLCI can be 10, 17, or 24 bits in length. The length of the DLCI is determined by
examining the address extension (EA) bits in the address field, as shown in Fig. 12-3. The 2-byte
Frame Relay address filed is the default and can be increased to 3 or 4 byes in length through use
of the EA bits. If EA is equal to 1, then this indicated the last byte of the DLCI. Three bits are
used for congestion control. The forward-explicit congestion notification (FECN) bit is set to 1 to
notify a DTE device that there is congestion in the frame transmission path from source to
destination. The backward-explicit congestion notification (BECN) bit is set to 1 to indicate
congestion in the opposite direction, from destination to source. Routers use the discard
eligibility (DE) bit when congestion occurs. When the DE bit is 1, this signals the frame switch
that this frame should be discarded first if congestion occurs. The C/R bit is currently not used.
The format of a Frame Relay frame is extremely simple compared with other protocols. There is
only one format and no control fields, so error and flow control cannot be accomplished. Frame
Relay depends on the reliability of modern digital communications links and assumes that
upper-layer protocols will handle the task of detecting and resending lost frames. This simple
frame format makes Frame Relay a very fast and efficient protocol.
The DLCI is used between the DTE and DCE to multiplex frames from different sources, and the
DLCI has local significance only. This means that DLCIs do not have to be globally unique. All
four routers in Fig. 12-1 can use the same DLCI without confusion because they only have
meaning between the local DTE and DCE devices.
The status of the link between the DTE and DCE devices and the status of connections in the
Frame Relay WAN are provided by the local management interface (LMI) protocol. The LMI
interface also performs an inverse ARP function that is used to dynamically inform the DTE of
the DLCI that has been assigned to the interface.break
Page 254

Figure 12-3
Frame Relay address fields:
(a) 2-byte field;
(b) 3-byte field;
(c) 4-byte field.
Frame Relay Topologies
Frame Relay connections can be configured using three different topologies. The first topology is
to use a fully meshed point-to-point Frame Relay architecture as shown in Fig. 12-4.
In Fig. 12-4 we have three routers that are fully meshed, meaning that each router has a
connection to every other router. Each connection is a permanent virtual connection (PVC) that
has been established by the WAN service provider. PVCs differ from switched virtual circuits
(SVC),continue
Page 255

Figure 12-4
Fully meshed point-to-point Frame Relay topology.
which require a call-setup process to establish the link and a call-terminate process to remove the
link. PVCs are always established, eliminating the need for call-setup and call-termination
processing. Each router in Fig. 12-4 has two Frame Relay PVCs, one to each of the other routers,
but each router is using only one serial interface. Multiple Frame Relay PVCs can be configured
using subinterfaces on the physical serial interface. A subinterface is a logically separate
interface that shares the same physical interface with possible other logical subinterfaces. We
have seen that every router interface, whether it is Ethernet, Token Ring, or a serial interface,
must be configured on a separate logical IP subnet. Therefore, the network in Fig. 12-4 requires
three separate IP subnets in order to configure a fully meshed topology. The topology is referred
to as point-to-point because every link behaves like a standard synchronous serial link. Fully
meshed Frame Relay topologies are easy to configure but can be quite expensive. We would have
to purchase three PVCs from our service provider in order to achieve a full mesh for the network
in Fig. 12-4.
One method of reducing the number of PVCs required but still maintaining connectivity between
all networks is to use a partially meshed point-to-point Frame Relay topology (Fig. 12-5). This
arrangement is also referred to as a hub-and-spoke topology, with one of the routers being the
hub and the other routers being the spokes. In Fig. 12-5 we need only two PVCs and two logical
IP subnets in order to achieve full connectivity between the networks.
The spoke routers have only one Frame Relay PVC, the connection to the hub router. For this
topology, a spoke router can use either a standard serial interface (router r2) or a subinterface
(router r3). The hubcontinue
Page 256

Figure 12-5
Partially meshed point-to-point Frame Relay topology.
router must use subinterfaces on the serial interface because it is attaching to two separate logical
IP subnets. The number of subnets for this configuration has been reduced from 3 to 2. The
number of required Frame Relay PVCs has also been reduced from 3 to 2. This not only saves us
money on PVCs but also reduces that number of valuable IP subnets that must be used.
The third and final Frame Relay topology is called a multipoint configuration, as shown in Fig.
12-6.
The network in Fig. 12-6 seems identical to the network in Fig. 12-5. Physically, they are the
same, but notice that we only need one logical IP subnet for the multipoint configuration. Since
we are using only one IP subnet, none of the serial interfaces need to use subinterfaces, but we
will see that to configure this topology, we will need to use one subinterface on each of the
routers. Table 12-1 lists the PVC and logical IP subnet requirements for the various topologies
for 2 to 10 routers. Review the three topology diagrams, and make sure you understand the
differences between them. An understanding of the three Frame Relay topologies is critical for
the proper configuration of Cisco routers using OSPF over a Frame Relay WAN.break
Page 257

Figure 12-6
Multipoint Frame Relay topology.
TABLE 12-1 PVC and IP Subnet Requirements for Each Frame Relay Topology
 Fully Meshed
Point-to-Point
Partially Meshed
Point-to-Point
Multipoint
Number
of Routers
PVCs
IP
Subnets
PVCs
IP
Subnets
PVCs
IP
Subnets
2
1
1
1
1
1
1
3
3
3
2
2
2
1
4
6
6
3
3
3
1
5
10
10
4
4
4
1
6
15
15
5
5
5
1
7
21
21
6
6
6
1
8
28
28
7
7
7
1
9
36
36
8
8
8
1
10
45
45
9
9
9
1
Page 258
Configuring Frame Relay
Before we configure Frame Relay on a Cisco router, let's list the parameters of a normal serial
interface.
r1#show interfaces serial 0
Serial0 is up, line protocol is up

  Hardware is HD64570
  Internet address is 172.16.5.2/24
  MTU 1500 bytes, BW 38 Kbit, DLY 20000 usec, rely 255/255, load 1/255
  Encapsulation HDLC, loopback not set, keepalive set (10 sec)
r4#show ip interface serial 0
Serial0 is up, line protocol is down
  Internet address is 172.16.5.2/24
  Broadcast address is 255.255.255.255
  Address determined by non-volatile memory
  MTU is 1500 bytes
  Helper address is not set
  Directed broadcast forwarding is enabled
  Outgoing access list is not set
  Inbound access list is not set
  Proxy ARP is enabled
  Security level is default
  Split horizon is enabled
Notice and remember that the encapsulation is HDLC and that split horizon is enable.
To configure a serial interface for Frame Relay, we need to change the encapsulation and set the
LMI type.break
r1(config)#interface serial 0
r1(config-if)#encapsulation?
   atm-dxi               ATM-DXI encapsulation
   bstun                 Block Serial tunneling (BSTUN)
   frame-relay           Frame Relay networks
   hdlc                  Serial HDLC synchronous
   lapb                  LAPB (X 25 Level 2)
   ppp                   Point-to-Point protocol
   sdlc                  SDLC
   sdlc-primary          SDLC (primary)
   sdlc-secondary        SDLC (secondary)
   smds                  Switched Megabit Data Service (SMDS)
   stun                  Serial tunneling (STUN)
   x25                   X.25
r4(config-if)#encapsulation frame-relay
r4(config-if)#frame-relay lmi-type?
   cisco
Page 259
   ansi
   q933a
r4(config-if)#frame-relay lmi-type ansi
The lmi-type parameter specifies the flavor of the lmi protocol. To ensure interoperability
with non-Cisco equipment, use lmi-type ansi. At this point, relist the parameters of the
serial interface.
r4#show interfaces serial 0

Serial0 is up, line protocol is down
  Hardware is HD64570
  Internet address is 172.16.5.2/24
  MTU 1500 bytes, BW 38 Kbit, DLY 20000 usec, rely 255/255, load 1/255
  Encapsulation FRAME-RELAY, loopback not set, keepalive set (10 sec)
r4#show ip interface serial 0
Serial0 is up, line protocol is up
  Internet address is 172.16.5.2/24
  Broadcast address is 255.255.255.255
  Address determined by non-volatile memory
  MTU is 1500 bytes
  Helper address is not set
  Directed broadcast forwarding is enabled
  Outgoing access list is not set
  Inbound access list is not set
  Proxy ARP is enabled
  Security level is default
  Split horizon is disabled
The change in the encapsulation to Frame Relay should not surprise us, but the fact that split
horizon is disabled is interesting and can be a source of great pain if you forget this fact. In Chap.
13 we will see the ramifications of having split horizon disabled when redistributing protocols.
For now, remember that changing the encapsulation on a serial interface disables split horizon.
Now we will configure a subinterface for serial interface 0.break
r1(config)#interface serial 0
r1(config-if)#no ip address
r1(config-if)#exit
r1(config)#interface serial 0.1?
   multipoint             Treat as a multipoint link
   point-to-point         Treat as a point-to-point link
r4(config)#interface serial 0.1 point-to-point
r4(config-subif)#ip address 172.16.5.2 255.255.255.0
r4(config-subif)#frame-relay interface-dlci 103?
Page 260
interface Serial0
  no ip address
  encapsulation frame-relay
  frame-relay lmi-type ansi
interface Serial0.1 point-to-point
  ip address 172.16.5.2 255.255.255.0
  frame-relay interface-dlci 103
When using subinterfaces, the IP address is given to the subinterface and not the major serial
interface; this is why the command no ip address is used for serial interface 0.
Encapsulation is set at the major interface level and will be used for all subinterfaces that are
created. Under subinterface 0.1, we need to specify whether this is a point-to-point or multipoint
interface. The difference will be explored when you examine OSPF configuration issues with
Frame Relay. When subinterfaces are created, the DLCI assigned to the subinterface has to be

specified. LMI can talk to the frame switch and determine what DLCIs have been assigned, but
since we are using subinterfaces, the router has no way of knowing which DLCI goes with which
interface, so they need to be specified. At this point relist the interface parameters.
Serial0 is up, line protocol is down
  Internet protocol processing disabled
r4#show ip interface serial 0.1
Serial0.1 is up, line protocol is up
  Internet address is 172.16.5.2/24
  Broadcast address is 255.255.255.255
  Address determined by setup command
  MTU is 1500 bytes
  Helper address is not set
  Directed broadcast forwarding is enabled
  Outgoing access list is not set
  Inbound access list is not set
  Proxy ARP is enabled
  Security level is default
  Split horizon is enabled
IP processing has been disabled on the major interface, serial 0, and has been transferred to the
subinterface. The most important item is split horizon on the subinterface, which we can see is
now enabled. Again, this is extremely important to remember, so commit the following to
memory:
1. Split horizon is enabled on an HDLC encapsulated serial interface.
2. Split horizon is disabled on a Frame Relay encapsulated interface if no subinterfaces are being
used.break
Page 261
3. Split horizon is enabled on a Frame Relay encapsulated interface if subinterfaces have been
configured.
We have seen in part how to configure Frame Relay on a serial interface, but only to reveal the
state of split horizon for various configurations. Before examining Frame Relay configuration in
depth, we will look at configuring a Cisco router as a frame switch so that we can configure our
own frame cloud for experimentation.
Configuration of a Frame Relay Switch—Point-to-Point Fully Meshed
Topology
The first configuration we need to examine is for the network of Fig. 12-4, a fully meshed
point-to-point Frame Relay network. The router that we use as the frame switch will need three
serial interfaces. We will use the frame switch as shown in Fig. 12-7.break

Figure 12-7
Using a Cisco router as a Frame Relay switch.
Page 262
The configuration for the Frame Relay switch needed to implement the network in Fig. 7-4 is
shown below.
hostname frame_switch
frame-relay switching
interface Serial0
  no ip address
  encapsulation frame-relay
  no fair-queue
  clockrate 2000000
  frame-relay lmi-type ansi
  frame-relay intf-type dce
  frame-relay route 102 interface Serial1 201
  frame-relay route 103 interface Serial2 301
interface Serial1
  no ip address
  encapsulation frame-relay
  clockrate 2000000
  frame-relay lmi-type ansi
  frame-relay intf-type dce
  frame-relay route 201 interface Serial2 102
  frame-relay route 203 interface Serial0 302
interface Serial2
  no ip address
  encapsulation frame-relay
  clockrate 2000000
  frame-relay lmi-type ansi
  frame-relay intf-type dce
  frame-relay route 301 interface Serial1 103
  frame-relay route 302 interface Serial0 203
The first command is used to enable frame switching on the router. Each serial interface is going
to switch input frames to one of two routers. Serial 0 is the DCE for router r1, serial 1 is the DCE

for router r2, and serial 2 is the DCE for router 3 in Fig. 12-4. When a frame is sent to the frame
switch, the frame is switched based on the DLCI number. When serial interface 0 receives a
frame from router r1, the frame will be addressed with DLCI 102 or 103 (the DLCIs were picked
so that the first digit represents the originating router, the second digit is 0, and the third digit is
the destination router). Thus DLCI 102 is from router r1 to router r2. We could have used the
same pairs of DLCIs on each router because DLCIs have only local significance, but this tends to
be confusing. Normally, the service provider sets the DLCIs, but since we are picking them, we
will try to make them clear. Each interface has common configuration commands as listed
below.break
Page 263
1. encapsulation frame-relay—Set the encapsulation to frame relay
2. clockrate 2000000—These are DCE interfaces that supply the clock for the link.
3. frame-relay lmi-type ansi—The DTE and DCE must agree on an LMI type.
4. frame-relay intf-type dce—Set the interface type. Switches are DCEs.
5. frame-relay route <input DLCI> <output interface> <output
DLCI>—Routing is not a good choice of words because Frame Relay cannot be routed in the
OSI sense. Switch would be a better word.
The frame-relay route command instructs the frame switch that any frame received with
a DLCI indicated in the input DLCI field should be routed (or switched) to the appropriate
interface, with the DLCI being replaced with the output DLCI. For example, when router r1
sends a frame to router r2, the DLCI used is 102. When serial interface 0 receives this frame, the
input DLCI number is checked. If the input DLCI equals 102, the DLCI number is replaced by
201 and switched to serial interface 1 and sent to router r2.
DTE Router Configuration
The configuration for a point-to-point fully meshed Frame Relay topology is listed below for
router r1.
hostname r1
interface Serial0
  no ip address
  encapsulation frame-relay
  no fair-queue
  frame-relay lmi-type ansi
interface Serial0.2 point-to-point
  ip address 172.16.1.1 255.255.255.0
  frame-relay interface-dlci 102
interface Serial0.3 point-to-point
  ip address 172.16.2.1 255.255.255.0
  frame-relay interface-dlci 103
Since we have two Frame Relay PVCs for each router, we must use subinterfaces because for

this topology each PVC is on a separate logicalcontinue
Page 264
IP subnet. For the major serial interface 0, we disable IP routing by using the command no ip
address. The encapsulation is set to frame relay, and the LMI type is set to ansi to
match the LMI type of the frame switch. The subinterfaces are of type point-to-point, which
matches the Frame Relay topology that we are trying to configure. The frame-relay
interface-dlci command must be used because we are using subinterfaces and we need to
inform the router which DLCI goes with which subinterface. Router r1 is using IP subnets
172.16.1.0 and 172.16.2.0. The subinterface numbers were chosen for convenience. Subinterface
0.2 is the connection to router r2, and subinterface 0.3 is the connection to router r3. The
configurations for routers r2 and r3 are shown below.
hostname r2
interface Serial0
  no ip address
  encapsulation frame-relay
  no fair-queue
  frame-relay lmi-type ansi
interface Serial0.1 point-to-point
  ip address 172.16.1.2 255.255.255.0
  frame-relay interface-dlci 201
interface Serial0.3 point-to-point
  ip address 172.16.3.2 255.255.255.0
  frame-relay interface-dlci 203
hostname r3
interface Serial0
  no ip address
  encapsulation frame-relay
  no fair-queue
  frame-relay lmi-type ansi
interface Serial0.1 point-to-point
  ip address 172.16.2.3 255.255.255.0
  frame-relay interface-dlci 301
interface Serial0.3 point-to-point
  ip address 172.16.3.3 255.255.255.0
  frame-relay interface-dlci 302
We are now ready to configure OSPF over the Frame Relay network. Since we are using a fully
meshed point-to-point Frame Relay network, everything that we learned about OSPF in Chap. 11
still applies. The links between routers look like normal serial interfaces, so no new OSPF
commands or configurations are necessary. No DR or BDR backup designated router will be
elected for the network because this only occurs on broadcast networks. The next two topologies
will not be so easy.break
Page 265
Configuration of a Frame Relay Switch—Point-to-Point Partially Meshed

Topology
The configuration of the frame switch for the partially meshed point-to-point topology of Fig. 7-5
is listed below.
hostname frame_switch
frame-relay switching
interface Serial0
  no ip address
  encapsulation frame-relay
  no fair-queue
  clockrate 2000000
  frame-relay lmi-type ansi
  frame-relay intf-type dce
  frame-relay route 102 interface Serial1 201
  frame-relay route 103 interface Serial2 301
interface Serial1
  no ip address
  encapsulation frame-relay
  clockrate 2000000
  frame-relay lmi-type ansi
  frame-relay intf-type dce
  frame-relay route 201 interface Serial0 102
interface Serial2
  no ip address
  encapsulation frame-relay
  clockrate 2000000
  frame-relay lmi-type ansi
  frame-relay intf-type dce
  frame-relay route 301 interface Serial0 103
Can you detect the differences in this configuration from the fully meshed configuration? The
configuration for serial interface 0 did not change because router r1 is now the hub router and
still has two PVCs. Routers r2 and r3 now only have one PVC, so we only need one
frame-relay route command for serial interfaces 1 and 2. If router r2 wants to send a
packet to router r3, how does it get there? Sounds like we need a routing protocol. We will see
how to handle this problem shortly. First, we need to reconfigure routers r1, r2, and r3. Router r1
does not need to be reconfigured from the preceding example. Since routers r2 and r3 have only
one PVC, we can use either one subinterface or no subinterfaces, so we will do one of each to see
how this is done. The configuration for router r2 is listed below.break
Page 266
hostname r2
interface Serial0
  ip address 172.16.1.2 255.255.255.0
  encapsulation frame-relay
  no fair-queue
  frame-relay lmi-type ansi
Router r2 is not using a subinterface, so LMI can determine the DLCI number by communicating
with the frame switch. This is why we did not need to specify the DLCI. The configuration for
router r3 will be a bit different.

hostname r3
interface Serial0
  no ip address
  encapsulation frame-relay
  no fair-queue
  frame-relay lmi-type ansi
interface Serial0.1 point-to-point
  ip address 172.16.2.3 255.255.255.0
  frame-relay interface-dlci 301
Since a subinterface is being used on router r3, the frame-relay interface command is
necessary in order to associate the DLCI with the proper interface.
OSPF—Frame Relay Partially Meshed Point-to-Point Topology
The partially meshed point-to-point topology is going to cause OSPF some problems. This is not
a broadcast topology like Ethernet or a true point-to-point topology as we have seen with normal
serial interfaces. From routers r2 and r3, the network does look like a normal serial link, but from
router r1's perspective, the network is neither. We need to fool OSPF on router r1 that the
network is a broadcast network by using an OSPF interface command that we skipped in Chap.
11.break
hostname r1
interface Serial0
  no ip address
  encapsulation frame-relay
  no fair-queue
  frame-relay lmi-type ansi
Page 267
interface Serial0.2 point-to-point
  ip address 172.16.1.1 255.255.255.0
  ip ospf network broadcast
  frame-relay interface-dlci 102
interface Serial0.3 point-to-point
  ip address 172.16.2.1 255.255.255.0
  frame-relay interface-dlci 103
  ip ospf network broadcast
The interface command ip ospf network broadcast will fool OSPF into believing that
this is a broadcast network and not an NBMA network. Routers r1, r2, and r3 will form
relationships as if they were on an Ethernet network, and a DR and BDR will be elected. The
command ip ospf network broadcast also will need to be configured on routers r2 and
r3.
hostname r2
interface Serial0
  ip address 172.16.1.2 255.255.255.0
  ip ospf network broadcast
  encapsulation frame-relay
  no fair-queue
  frame-relay lmi-type ansi

hostname r3
interface Serial0
  no ip address
  encapsulation frame-relay
  no fair-queue
  frame-relay lmi-type ansi
interface Serial0.1 point-to-point
  ip address 172.16.2.3 255.255.255.0
  ip ospf network broadcast
  frame-relay interface-dlci 301
The ip ospf network broadcast command is all we need to use to enable the proper
operation of OSPF over the partially meshed point-to-point network. You can now configure
OSPF as you have learned from Chap. 11, and everything will work just fine, except for one
thing. Which router should be the DR? On a true broadcast network such as Ethernet, every
router could communicate directly with every other router. This is not the case for this topology.
Only router r1 has a direct communication link with the other routers, so router r1 needs to be
elected DR. From what you learned in Chap. 11, can you think of three ways to influence the DR
election? The first way is by the proper configuration of loopback addresses. If loopbacks are
used, then they arecontinue
Page 268
used as the routers' OSPF IDs, and the router with the highest ID is elected DR. Thus we can
configure loopbacks on routers r1, r2, and r3 and make sure that router r1's loopback address is
higher than those of routers r2 and r3. We could configure the OSPF priority of router r1's serial
subinterfaces to be greater than 1, which will force router r1 to be elected DR. Finally, we can set
the OSPF priority of the serial interfaces on routers r1 and r2 to be 0, making them ineligible to
be elected DR.
OSPF—Frame Relay Partially Meshed Point-to-Multipoint Topology
The multipoint partially meshed configuration of Fig. 12-6 differs from the partially meshed
point-to-point configuration of Fig. 12-5 only in the assignment of subnets. The PVCs are
assigned the same subnet, making this a point-to-multipoint configuration. The configuration of
the frame switch will not change from the preceding scenario. The configurations for routers r1,
r2, and r3 are given below.
hostname r1
interface Serial0
  no ip address
  encapsulation frame-relay
  bandwidth 38
  no fair-queue
  frame-relay lmi-type ansi
interface Serial0.1 multipoint
  ip address 172.16.1.1 255.255.255.0
  ip ospf network point-to-multipoint
  frame-relay interface-dlci 102
  frame-relay interface-dlci 103

Router r1 now only needs one subinterface, since both PVCs are on the same subnet. The
subinterface is declared as a multipoint interface, and both DLCIs are applied to the subinterface.
The OSPF network type has been changed from broadcast to point-to-multipoint.break
hostname r2
interface Serial0
  ip address 172.16.1.2 255.255.255.0
  encapsulation frame-relay
  ip ospf network point-to-multipoint
  bandwidth 38
Page 269
  no fair-queue
  frame-relay lmi-type ansi
hostname r3
interface Serial0
  no ip address
  encapsulation frame-relay
  no fair-queue
  frame-relay lmi-type ansi
interface Serial0.1 multipoint
  ip address 172.16.1.3 255.255.255.0
  ip ospf network point-to-multipoint
  frame-relay interface-dlci 201
Split horizon will be enabled on the serial interface for routers r1 and r3 but will be disabled for
router r2 because a subinterface is not being used. Also notice that on router r2 the DLCI was not
specified, because it will be learned through LMI.
OSPF and Demand Circuits
A demand circuit is a link that is only activated when traffic that has been designated as
interesting needs to be sent across the link. Demand circuits are usually provided by a service
provider, and the user is only charged for the time the circuit is in use. Running a routing
protocol over a demand circuit can be quite expensive because IP routing protocols periodically
send some type of traffic. RIP sends the routing table every 30 seconds, and OSPF sends hello
packets every 10 seconds. Normally, OSPF would not be run across a demand circuit because the
periodic traffic would tend to keep the link up. One solution is to not run any routing protocol
across the link and to use static routes on either end of the demand circuit. A new interface
command has been added to the OSPF bag of tricks for demand circuits.
interface bri0
  ip ospf demand-circuit
This command will suppress OSPF hellos and periodic refreshes of LSAs from being transmitted
across the link after the initial exchange of OSPF link-state information. This command only
needs to be used on one side of the demand circuit for point-to-point connections and oncontinue

Page 270
the hub for a multipoint connection. Below is a sample ISDN configuration using the
demand-circuit command.
hostname r2
username R3 password 0 cisco
isdn switch-type basic-nil
interface Loopback0
  ip address 172.16.200.1 255.255.255.0
interface BRI0
  ip address 130.10.10.2 255.255.255.0
  encapsulation ppp
  ip ospf demand-circuit
  bandwidth 56
  isdn spid1 31622081880101 2208188
  isdn spid2 31622081890101 2208189
  dialer idle-timeout 60
  dialer map ip 130.10.10.3 name r3 speed 56 broadcast 2208190
  dialer map ip 130.10.10.3 name r3 speed 56 broadcast 2208191
  dialer load-threshold 100 outbound
  dialer-group 1
  ppp authentication chap
If you have configured a virtual link across the ISDN circuit, the virtual link will keep the ISDN
circuit up even if you are using ip ospf demand-circuit in your configuration.
Summary
Configuring OSPF over an NBMA network such as Frame Relay does not need to be difficult if
you master the configurations that were presented in this chapter. Be careful with an NBMA
network when using a routing protocol other than OSPF because of the state of split horizon for
the various configurations.
OSPF and NBMA Configuration Concepts
1. Point-to-point fully meshed
2. Point-to-point partially meshed
3. Point-to-multipoint partially meshed
4. State of split horizon for normal serial interfaces, Frame Relay encapsulated interfaces, and
Frame Relay encapsulated serial interfacesbreak
Page 271
Chapter 13—

Route Redistribution
Page 272
During your career in networking, you will encounter networks that are using more than one IP
routing protocol. Many of the problems that you will find with these networks can be attributed
to the interaction of dissimilar protocols due to improper route redistribution. This chapter covers
the interaction of RIP, IGRP, EIGRP, and OSPF protocols and how to redistribute routes
successfully from one protocol to another. Additionally, you may need to convert a network for
one routing protocol such as RIP to a better routing protocol, usually OSPF. Since it is not
possible to convert all routers simultaneously, the network will be running multiple protocols
until the conversion is complete. A firm grasp of protocol interaction is a prerequisite for the
efficient and proper conversion from one protocol to another.
RIP and IGRP
The network in Fig. 13-1 is divided into two routing domains. The first domain, consisting of
routers r1 and r2, is running the RIP Version 1 routing protocol for networks 172.16.2.0,
172.16.3.0, and 172.16.4.0. The second domain, consisting of routers r3 and r4, is running the
Cisco IGRP routing protocol for networks 172.16.4.0, 172.16.5.0, and 172.16.6.0. The goal for
this network is for each router to be able to reach every network.break
Router r1 configuration
hostname r1
enable password cisco
interface Loopback0
  ip address 172.16.2.1 255.255.255.0
interface FastEthernet0/0
  ip address 172.16.3.1 255.255.255.0
Figure 13-1
Network with multiple protocol domains—RIP and IGRP.
Page 273
router rip
  network 172.16.0.0

Router r2 configuration
hostname r2
enable password cisco
interface Ethernet0
  ip address 172.16.4.1 255.255.255.0
interface FastEthernet0
  ip address 172.16.3.2 255.255.255.0
router rip
  network 172.16.0.0
Router r3 configuration
hostname r3
enable password cisco
interface Ethernet0
  ip address 172.16.4.2 255.255.255.0
interface Serial0
  ip address 172.16.5.1 255.255.255.0
  bandwidth 38
router igrp 100
  network 172.16.0.0
Router r4 configuration
hostname r4
enable password cisco
interface Loopback0
  ip address 172.16.6.1 255.255.255.0
interface Serial0
  ip address 172.16.5.1 255.255.255.0
  bandwidth 38
  clock rate 38400
router igrp 100
  network 172.16.0.0
What would you expect to see in the routing tables for the four routers? Let's examine the routing
tables and determine what is happening.break
r1#show ip route
  172.16.0.0/16 is variably subnetted, 4 subnets, 2 masks
R   172.16.4.0/24 [120/1] via 172.16.3.2, 00:00:16, FastEthernet0/0
C   172.16.2.0/24 is directly connected, Loopback0
C   172.16.3.0/24 is directly connected, FastEthernet0/0
r2#show ip route
  172.16.0.0/16 is variably subnetted, 4 subnets, 2 masks
C   172.16.4.0/24 is directly connected, Ethernet0
R   172.16.2.0/24 [120/1] via 172.16.3.1, 00:00:20, FastEthernet0
C   172.16.3.0/24 is directly connected, FastEthernet0
Page 274
r3#show ip route
  172.16.0.0 is variably subnetted, 4 subnets, 2 masks
C   172.16.4.0 255.255.255.0 is directly connected, Ethernet0
C   172.16.5.0 255.255.255.0 is directly connected, Serial0
I   172.16.6.0 255.255.255.0 [100/2760] via 172.16.5.2, 00:00:33, Serial0

r4#show ip route
  172.16.0.0/16 is variably subnetted, 4 subnets, 2 masks
I   172.16.4.0/24 [100/3100] via 172.16.5.1, 00:00:53, Serial0
C   172.16.5.0/24 is directly connected, Serial0
C   172.16.6.0/24 is directly connected, Loopback0
Routers r1 and r2 can see their directly connected networks and the networks that are being
advertised by RIP. Routers r3 and r4 can see their directly connected networks and the networks
being advertised by IGRP. The RIP domain routers cannot see routes from the IGRP domain, and
the IGRP domain routers cannot see routes from the RIP domain. The link between the two
domains, network 172.16.4.0, that is connecting routers r2 and r3 is carrying RIP and IGRP
routing updates, but there is not an RIP routing process running on router r3, so the RIP routes
will not be learned. Also, since router r2 is not running an IGRP process, the IGRP routing
updates that router r2 receives will be ignored. How do we enable the two domains to see each
other's routes? In general, there are two solutions, static routes and route redistribution. We can
use static routes to inform a router of a route that is not being advertised or received by a routing
protocol. A static route is created in global configuration mode and has the following format:
r1(config)#ip route?
   A.B.C.D Destination prefix
The destination prefix is the network to which we want to establish the static route. For router r1
there are two networks that it does not have a route for in its routing table, networks 172.16.5.0
and 172.16.6.0. We will build the static route for network 172.16.5.0.
r1(config)#ip route 172.16.5.0?
   A.B.C.D Destination prefix mask
The router needs to know which portion of the address to use for the static route. The mask uses
the same format as an IP address mask.break
r1(config)#ip route 172.16.5.0 255.255.255.0?
   A.B.C.D             Forwarding router's address
   FastEthernet        FastEthernet IEEE 802.3
Page 275
   Loopback            Loopback interface
   Null                Null interface
The next parameter is either the interface to use when sending packets to the destination network
or the IP address of the router that will forward the traffic. For this static route, we will use an
output interface.
r1(config)#ip route 172.16.5.0 255.255.255.0 fastEthernet 0/0?
   <1-255>             Distance metric for this route
   A.B.C.D             Forwarding router's address
   permanent           permanent route
   tag                 Set tag for this route
   <cr>

This is the minimum information we need to configure a static route. The other static route for
router r1 is to the 172.16.6.0 network.
r1(config)#ip route 172.16.6.0 255.255.255.0 fastEthernet 0/0?
The routing table for router r1 now contains these new static routes.
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
R   172.16.4.0 [120/1] via 172.16.3.2, 00:00:07, FastEthernet0/0
S   172.16.5.0 is directly connected, FastEthernet0/0
S   172.16.6.0 is directly connected, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0
Notice that the static routes appear as directly connected networks connected to the fast Ethernet
interface. We can now ping all the interfaces on routers r3 and r4. Similarly, to enable routers r2,
r3, and r4 to be able to reach all the networks, we would need to establish their static routes.break
Router r2
ip route 172.16.5.0 255.255.255.0 Ethernet0
ip route 172.16.6.0 255.255.255.0 Ethernet0
Router r3
ip route 172.16.2.0 255.255.255.0 Ethernet0
ip route 172.16.3.0 255.255.255.0 Ethernet0
Router r4
ip route 172.16.2.0 255.255.255.0 Serial0
ip route 172.16.3.0 255.255.255.0 Serial0
Page 276
We can reduce the number of static routes that need to be configured by using the property of
longest match when a router is making a forwarding decision. If we create a static route to
network 172.16.0.0 that includes every subnet of 172.16.0.0, then we only need to create one
static route.
Router r1
ip route 172.16.0.0 255.255.0.0 FastEthernet0/0
r1#show ip route
  172.16.0.0/16 is variably subnetted, 6 subnets, 2 masks
R   172.16.4.0/24 [120/1] via 172.16.3.2, 00:00:26, FastEthernet0/0
R   172.16.5.0/24 [120/1] via 172.16.3.2, 00:00:26, FastEthernet0/0
R   172.16.6.0/24 [120/1] via 172.16.3.2, 00:00:26, FastEthernet0/0
S   172.16.0.0/16 is directly connected, FastEthernet0/0
C   172.16.2.0/24 is directly connected, Loopback0
C   172.16.3.0/24 is directly connected, FastEthernet0/0
The routing table for router r1 now has two different routes to network 172.16.2.0. The first is
using the directly connected interface loopback 0, and the second route is using the directly

connected interface fast Ethernet 0. Which one will the router use to forward traffic to network
172.16.2.0? The route using the loopback interface has a 24-bit subnet mask, and the route using
the fast Ethernet interface has a 16-bit subnet mask. The loopback route has a longer match on
the network address than the static route, so the loopback interface will be used.
We have seen in Chap. 12 that static routes serve a useful function for tariff networks such as
ISDN. For the network in Fig. 13-1, static routes only impose another administrative burden. The
first burden is deciding which static routes are needed and then configuring them on the routers.
The second burden is maintaining the static routes. What if we change the network number of the
serial link between routers r3 and r4 but use the same major network number? We would have to
modify the static routes on routers r1 and r2 (of course, if we use static route 172.16.0.0, then no
modification is necessary). If we changed the major network number of the serial link, then we
would have no choice but to reconfigure the static routes. This is not very difficult on a network
of the simplicity of that in Fig. 13-1, but if we have tens or hundreds of routers, then this task
becomes a nightmare and prone to error.
A better solution is to use a dynamic approach instead of a static approach using route
redistribution. Route redistribution is the process of taking routes learned from one protocol,
such as RIP, and injecting them into a different protocol such as IGRP. Since the route costs or
met-soft
Page 277
rics are different (usually) between routing protocols, we are truly mixing apples and oranges.
For our introduction to route redistribution, we will cover the mechanics of route redistribution
and then try to uncover any snakes that may jump up and bite us.
For route redistribution to occur on a router, the router must be running both the routing
protocols that will engage in the redistribution. For the network in Fig. 13-1, we have two
choices, run RIP and IGRP on router r2 or router r3, as shown in Figs. 13-2 and 13-3.
For the first redistribution example, we will run RIP and IGRP on router r3, as shown in Fig.
13-2. The first step is to remove the static routes from all the routers by using the no form of the
ip route global configuration command. The next step is to enable the RIP routing process
router r3.break

Figure 13-2
Running RIP and IGRP on router r3.
Figure 13-3
Running RIP and IGRP on router r2.
Page 278
Router r3
router rip
  network 172.16.0.0
router igrp 100
  network 172.16.0.0
The routing table for router r3 now contains routes for the entire network, but the other routers do
not.
r3#show ip route
  172.16.0.0 is variably subnetted, 6 subnets, 2 masks
C   172.16.4.0 255.255.255.0 is directly connected, Ethernet0
C   172.16.5.0 255.255.255.0 is directly connected, Serial0
I   172.16.6.0 255.255.255.0 [100/2760] via 172.16.5.2, 00:01:05, Serial0
R   172.16.2.0 255.255.255.0 [120/2] via 172.16.4.1, 00:00:25, Ethernet0
R   172.16.3.0 255.255.255.0 [120/1] via 172.16.4.1, 00:00:25, Ethernet0
2#show ip route
  172.16.0.0/24 is subnetted, 4 subnets
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:07, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:21, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0
Router r3 has learned all the routes because router r3 is now running RIP and IGRP and is able to
receive and process both the RIP and IGRP routing updates. In order for all routers, to learn the
routes we now need to redistribute them on router r3. In router configuration mode on router r3
we will enable the RIP process to learn the IGRP routes. Once RIP has learned the IGRP routes,
they will be distributed to routers r2 and r1 using RIP.
r3(config-router)#redistribute igrp?
   <1-65535>         Autonomous system number

r3(config-router)#redistribute igrp 100?
   metric            Metric for redistributed routes
   route-map         Route map reference
   <cr>
Select <cr> and examine the routing table for router r2 to see if it has learned the IGRP routes
that were redistributed into RIP on router r3.break
r2#show ip route
  172.16.0.0/24 is subnetted, 4 subnets
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:15, Ethernet0
Page 279
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:02, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0
Oops! Where are the routes to networks 172.16.5.0 and 172.16.6.0? We have just made a classic
mistake that is made over and over again, even by experienced router personnel. Remember, we
are mixing apples and oranges. RIP has a simple hop count for a metric, and IGRP has a more
sophisticated distance metric. Not only do we need to redistribute the routes, we also need to turn
apples into oranges. When an IGRP route is redistributed into RIP, we need to assign an RIP
metric to the IGRP route. We forgot to do this in our configuration on router r3, and there are two
general ways of assigning the metric. The first is by using the default-metric command.
r3(config)#router rip
r3(config-router)#default-metric?
   <1-4294967295>         Default metric
r3(config-router)#default-metric 3?
   <cr>
The default-metric command used assigns a RIP hop count to every redistributed IGRP
route, which can be seen in router r2's routing table.
r2#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:04, Ethernet0
R   172.16.6.0 [120/3] via 172.16.4.2, 00:00:04, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:11, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0
Router r2 now has routes to networks 172.16.5.0 and 172.16.6.0. Why is the hop count to
172.16.5.0 equal to 1, whereas the route to 172.16.6.0 is 3? When we enabled RIP on router r3,
we instructed RIP to advertise network 176.16.0.0. Router r3 has network 172.16.5.0 as a directly
connected network, so this route was being advertised before we enabled route redistribution and
thus is not a redistributed route. The only redistributed route is 172.16.6.0, so this is the only
route that will have the default metric applied to it. Another common—and deadly—mistake
occurs when assigning the default metric. The default-metric command allows you to
enter a default hop count in the range 1–4,294,967,295. Let's use a large default metric and see

what happens.break
Page 280
r3(config)#router rip
r3(config-router)#no default-metric 1
r3(config-router)#default-metric 100
If we do not waste time, we can see that the routing table for router r2 now contains
show ip route
  172.16.0.0/24 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:23, Ethernet0
R   172.16.6.0/24 is possibly down, routing via 172.16.4.2, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:11, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0
What has happened to the route to network 172.16.6.0? The default metric that was used is
greater than the maximum metric for RIP, which is 15. Any route with a hop count of 16 is
considered unreachable. Remember that the hold time for RIP is 180 seconds and the flush time
is 240 seconds. Router r3 is advertising to router r2 an RIP route with a hop count of 100. After
240 seconds, the route will disappear from router r2's routing table.
r2#show ip route
  172.16.0.0/24 is subnetted, 4 subnets
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:21, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:18, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0
Try not to forget these common redistribution errors: forgetting a default metric or using a
default metric that is too large.
Using the default-metric command is a quick and painless way of assigned metrics to
redistributed routes. The one major drawback is that the default-metric command assigns
this metric to all redistributed routes regardless of how far away they actually are. If we are
redistributing more than one protocol into RIP, e.g., IGRP and OSPF, then all redistributed routes
will have the same assigned hop count. For the single or multiple redistributed protocols, we can
assign a metric with the redistribute command as shown.break
r3(config)#router rip
r3(config-router)#redistribute igrp 100?
   metric                  Metric for redistributed routes
   route-map               Route map reference
   <cr>
Page 281
r3(config-router)#redistribute igrp 100 metric?
   <0-4294967295>           Default metric
r3(config-router)#redistribute igrp 100 metric 1?
   metric                  Metric for redistributed routes
   route-map               Route map reference

   <cr>
r3(config-router)#redistribute igrp 100 metric 1
By assigning the metric with the redistribute command, the metric is applied only to the
routes learned from IGRP. We can redistribute another protocol with a different metric, as
shown.
router rip
  redistribute igrp 100 metric 1
  redistribute eigrp 100 metric 3
  network 172.16.0.0
This approach allows for more flexibility when assigning metrics to redistributed routes.
Although we are assigning a different metric for each redistributed protocol, for each protocol we
are assigning the same metric to every redistributed route. For example, we are assigning a
default metric of 1 to all the IGRP routes and a metric of 3 to all the EIGRP routes. If the
situation arises where we need to assign different metrics to routes redistributed from the same
protocol, then we must use route maps. For the network in Fig. 13-4, another loopback interface
has been added to router r4 with address 172.16.7.1. We now have two IGRP networks that will
be redistributed into RIP on router r3, and both routes will be assigned the same metric, as seen
by router r2's routing table.break
Figure 13-4
Using route maps to assign different metrics to redistributed routes.
Page 282
r2#show ip route
  172.16.0.0/24 is subnetted, 6 subnets
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:09, Ethernet0
R   172.16.6.0 [120/1] via 172.16.4.2, 00:00:09, Ethernet0
R   172.16.7.0 [120/1] via 172.16.4.2, 00:00:09, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:02, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0
Route maps can be used to assign different metrics to routes learned from the same routing
protocol. For example, assign a metric of 2 to network 172.16.7.0 and a metric of 1 to network
172.16.6.0 and a metric of 1 to any other redistributed IGRP route.

r3(config-router)#redistribute igrp 100?
   metric            Metric for redistributed routes
   route-map         Route map reference
   <cr>
r3(config-router)#redistribute igrp 100 route-map?
   Word Pointer to route-map entries
r3(config-router)#redistribute igrp 100 route-map adjust_igrp?
   metric            Metric for redistributed routes
   route-map         Route map reference
   <cr>
This form of the redistribute command will create a route map named adjust_igrp. A
route map is a list of match and set statements similar to an access list. After the route map
has been created, we need to add the match and set statements in global configuration mode.
r3(config)#router rip
r3(config-router)#redistribute igrp 100?
   metric            Metric for redistributed routes
   route-map         Route map reference
   <cr>
r3(config-router)#redistribute igrp 100 route-map?
   Word Pointer to route-map entries
r3(config-router)#redistribute igrp 100 route-map igrp_to_rip
The first step in using a route map is to inform RIP that a route map is going to be used to set the
metrics of the redistributed routes. The parameter
route-map igrp_to_rip
in the redistribute command informs RIP to consult the route map igrp_to_rip when
setting the metrics. The next step is to create thecontinue
Page 283
route map. The structure of a route map is similar to an old Basic program, which used line
numbers. Numbered statements are entered into the route map and are executed in numeric order.
If a match occurs, then the statements in the route map will be executed and the processing of the
route map will terminate. For the route map igrp_to_rip, we need two operations, one to set
the metric of network 172.16.6.0 to 2 and one to set the metric of network 172.16.7.0 to 3. Route
maps are constructed in global configuration mode.
r3(config)#route-map?
   Word Route map tag
Enter the name of the route map that was used in the redistribute command under router
RIP configuration.
r3(config)#route-map igrp_to_rip?
   <0-65535>   Sequence to insert to/delete from existing route-map entry
   deny         Route map denies set operations
   permit       Route map permits set operations
   <cr>

r3(config)#route-map igrp_to_rip permit 10
Like an old BASIC program, enter the number for the set of route map commands.
r3(config-route-map)#?
Route Map configuration commands:
  exit       Exit from route-map configuration mode
  help       Description of the interactive help system
  match      Match values from routing table
  no         Negate or set default values of a command
  set        Set values in destination routing protocol
Ignoring the exit, help, and no commands leaves us with two choices, match and set.
These are usually entered as pairs with the match statement coming first and the set
second.break
r3(config-route-map)#match?
   as-path            Match BGP AS path list
   clns               CLNS information
   community          Match BGP community list
   interface          Match first hop interface of route
   ip                 IP specific information
   length             Packet length
   metric             Match metric of route
   route-type         Match route-type of route
   tag                Match tag of route
Page 284
Next, enter the item to match. Since we are adjusting IP routes, select ip.
r3(config-route-map)#match ip?
   address           Match address of route or match packet
   next-hop          Match next-hop address of route
   route-source      Match advertising source address of route
We want to match an IP address, either 172.16.6.0 or 172.16.7.0, so select address.
r3(config-route-map)#match ip address?
   <1-199>       IP access-list number
<cr>
Access lists are used for the IP address match function. Since two metrics will be used, we will
need two access lists, one for the 172.16.6.0 network and one for the 172.16.7.0 network.
r3(config-route-map)#match ip address 1
If the IP address in the access list matches the route that is redistributed, then decide what action
to take.
r3(config-route-map)#?
Route Map configuration commands:
  exit       Exit from route-map configuration mode
  help       Description of the interactive help system
  match      Match values from routing table

  no         Negate or set default values of a command
  set        Set values in destination routing protocol
The action is to set the metric of the route.break
r3(config-route-map)#set?
   as-path               Prepend string for a BGP AS-path attribute
   automatic-tag         Automatically compute TAG value
   clns                  OSI summary address
   community             BGP community attribute
   default               Set default information
   interface             Output interface
   ip                    IP specific information
   level                 Where to import route
   local-preference      BGP local preference path attribute
   metric                Metric value for destination routing protocol
   metric-type           Type of metric for destination routing protocol
   origin                BGP origin code
   tag                   Tag value for destination routing protocol
   weight                BGP weight for routing table
Page 285
r3(config-route-map)#set metric?
   +/-<metric>           Add or subtract metric
   <0-4294967295>        Metric value or IGRP bandwidth in Kbits per second
   <cr>
r3(config-route-map)#set metric 2
r3(config-route-map)#exit
Return to global configuration and enter the next pair of match and set statements to be used
on network 172.16.7.0.
r3(config)#route-map igrp_to_rip permit 20
r3(config-route-map)#match ip address 2
r3(config-route-map)#set metric 3
Finally, return to global configuration mode and create the access lists.
r3(config)#access-list 1 permit 172.16.6.0 0.0.0.255
r3(config)#access-list 2 permit 172.16.7.0 0.0.0.255
Listing the configuration of router r3 will show what has occurred.
router rip
  redistribute igrp 100 route-map igrp_to_rip
  network 172.16.0.0
access-list 1 permit 172.16.6.0 0.0.0.255
access-list 2 permit 172.16.7.0 0.0.0.255
route-map igrp_to_rip permit 10
  match ip address 1
  set metric 2
route-map igrp_to_rip permit 20

  match ip address 2
  set metric 3
When RIP redistributes a route the route map, igrp_to_rip will be consulted. When network
172.16.6.0 is redistributed, RIP will go through the route map until either a match is found or
RIP comes to the end of the list. If a match is found, the set command will be executed. If no
matches are found, then the effect will be the same as when we forgot to enter a default metric:
The route will not be redistributed. The effect of the route map can be seen by examining router
r2's routing table.break
r2#show ip route
  172.16.0.0/24 is subnetted, 6 subnets
Page 286
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:14, Ethernet0
R   172.16.6.0 [120/2] via 172.16.4.2, 00:00:24, Ethernet0
R   172.16.7.0 [120/3] via 172.16.4.2, 00:00:24, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:24, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0
The two redistributed IGRPs now have different metrics due to operation of the route map.
Remember that when statements were added to an access list, the new statements always were
placed at the end of the list. If we wanted to insert a statement in the middle of the list, we were
out of luck. The list would have to be deleted and reentered in the order we wanted. With a route
map, we can enter a match-set pair of statements anywhere in the list because each pair is
numbered. To test this and to test that a route map exits when a match occurs, modify the route
map on router r3 so that it contains the additional match-set pair as shown.
route-map igrp_to_rip permit 5
  match ip address 1
  set metric 6
route-map igrp_to_rip permit 10
  match ip address 1
  set metric 2
route-map igrp_to_rip permit 20
  match ip address 2
  set metric 3
The effect of the route map statement 5 is to set metric of network 172.16.6.0 to 5, but statement
10 sets this metric to 2. The second matchset pair will not be executed because after matching the
first one, RIP will exit processing the route map, which can be verified with router r2's routing
table.
r2#show ip route
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:21, Ethernet0
R   172.16.6.0 [120/6] via 172.16.4.2, 00:00:21, Ethernet0
R   172.16.7.0 [120/3] via 172.16.4.2, 00:00:21, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:14, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0

Redistributing IGRP into RIP allows routers r1 and r2 to see all the routes. Router r3's routing
table also contains all the routes becausecontinue
Page 287
router r3 is running both RIP and IGRP. However, router r4 can still only see the IGRP routes.
Before we enable router r4 to also see all the routes, return the routers to the following
configurations.break
Router r1 configuration
hostname r1
enable password cisco
interface Loopback0
  ip address 172.16.2.1 255.255.255.0
interface FastEthernet0/0
  ip address 172.16.3.1 255.255.255.0
router rip
  network 172.16.0.0
Router r2 configuration
hostname r2
enable password cisco
interface Ethernet0
  ip address 172.16.4.1 255.255.255.0
interface FastEthernet0
  ip address 172.16.3.2 255.255.255.0
router rip
  network 172.16.0.0
Router r3 configuration
hostname r3
enable password cisco
interface Ethernet0
  ip address 172.16.4.2 255.255.255.0
interface Serial0
  ip address 172.16.5.1 255.255.255.0
  bandwidth 38400
router rip
  redistribute igrp 100 metric 1
  network 172.16.0.0
router igrp 100
  network 172.16.0.0
Router r4 configuration
hostname r4
enable password cisco
interface Loopback0
  ip address 172.16.6.1 255.255.255.0
interface Serial0
  ip address 172.16.5.2 255.255.255.0
  bandwidth 38
  clockrate 38400
router igrp 100
  network 172.16.0.0

Page 288
r3(config-router)#redistribute rip metric?
   <1-4294967295>         IGRP bandwidth metric in kilobits per second
r3(config-router)#redistribute rip metric 38?
   <0-4294967295>         IGRP delay metric, in 10 microsecond units
r3(config-router)#redistribute rip metric 38 2000?
   <0-255>                IGRP reliability metric where 255 is 100% reliable
r3(config-router)#redistribute rip metric 38 2000 255?
   <1-255>                IGRP Effective bandwidth metric (Loading) where 255 
                          loaded
r3(config-router)#redistribute rip metric 38 2000 255 1?
   <1-4294967295>         IGRP MTU of the path
r3(config-router)#redistribute rip metric 38 2000 255 1 1500?
   metric                 Metric for redistributed routes
   route-map              Route map reference
   <cr>
If router r4 is to see all the routes, then we must redistribute RIP into IGRP on router r3. The
form of the command is identical to the one that was used to redistribute IGRP into RIP, the only
difference being the assigned metric. When we convert an RIP route into an IGRP route, we must
assign a five-parameter metric to the RIP routes. These parameters are bandwidth, delay,
reliability, load, and MTU. How do we decide which values to use? We can list the values of
these parameters by using the command show interfaces.break
r3#show interfaces serial 0
Serial0 is up, line protocol is up
  Hardware is HD64570
  Internet address is 172.16.5.1 255.255.255.0
  MTU 1500 bytes, BW 38 Kbit, DLY 20000 usec, rely 255/255, load 1/255
  Encapsulation HDLC, loopback not set, keepalive set (10 sec)
  Last input 0:00:07, output 0:00:03, output hang never
  Last clearing of "show interface" counters never
  Output queue 0/40, 0 drops; input queue 0/75, 0 drops
  5 minute input rate 0 bits/sec, 0 packets/sec
  5 minute output rate 0 bits/sec, 0 packets/sec
    10420 packets input, 627195 bytes, 0 no buffer
    Received 10036 broadcasts, 0 runts, 0 giants
    0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored, 0 abort
    11404 packets output, 739139 bytes, 0 underruns
    0 output errors, 0 collisions, 3 interface resets, 0 restarts
    0 output buffer failures, 0 output buffers swapped out
    2 carrier transitions
    DCD = up DSR = up DTR = up RTS = up CTS = up
r3#show interfaces ethernet 0
Ethernet0 is up, line protocol is up
  Hardware is Lance, address is 0000.0c5c.2a90 (bia 0000.0c5c.2a90)
  Internet address is 172.16.4.2 255.255.255.0
Page 289

  MTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec, rely 255/255, load 1/255
  Encapsulation ARPA, loopback not set, keepalive set (10 sec)
  ARP type ARPA, ARP Timeout 4:00:00
  Last input 0:00:00, output 0:00:00, output hang never
  Last clearing of "show interface" counters never
  Output queue 0/40, 0 drops; input queue 0/75, 0 drops
  5 minute input rate 1000 bits/sec, 1 packets/sec
  5 minute output rate 1000 bits/sec, 1 packets/sec
    8283 packets input, 856890 bytes, 0 no buffer
    Received 4319 broadcasts, 0 runts, 0 giants
    0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored, 0 abort
    0 input packets with dribble condition detected
    14122 packets output, 1352048 bytes, 0 underruns
    0 output errors, 0 collisions, 2 interface resets, 0 restarts
    0 output buffer failures, 0 output buffers swapped out
We can see the values of the five IGRP parameters for each interface, but which set of
parameters should be used, the set for the serial interface or the set for the Ethernet interface?
Since we are going to redistribute RIP routes, that are reached over the Ethernet interface, the set
of parameters for the Ethernet interface should be used. The cost of the serial interface will be
added to the route cost. If we use the metrics associated with the Ethernet interface, then all RIP
routes will be assigned the same cost (assuming that we are not using route maps to assign a
different cost to each individual redistributed RIP route). This situation is acceptable because the
cost of all RIP routes to router r2 is identical. Once traffic has reached router r2, router r2 will
make a routing decision based on the lowest RIP hop count. The RIP routes are redistributed on
router r3 as shown below.break
r3(config)#router igrp 100
r3(config-router)#redistribute?
   bgp             Border Gateway Protocol (BGP)
   connectd        Connected
   egp             Exterior Gateway Protocol (EGP)
   eigrp           Enhanced Interior Gateway Routing Protocol (EIGRP)
   igrp            Interior Gateway Routing Protocol (IGRP)
   isis            ISO IS-IS
   iso-igrp        IGRP for OSI networks
   mobile          Mobile routes
   ospf            Open Shortest Path First (OSPF)
   rip             Routing Information Protocol (RIP)
   static          Static routes
r3(config-router)#redistribute rip?
   metric          Metric for redistributed routes
   route-map       Route map reference
   <cr>
Page 290
r3(config-router)#redistribute rip metric?
   <1-4294967295> IGRP bandwidth metric in kilobits per second
r3(config-router)#redistribute rip metric 10000?
   <0-4294967295> IGRP delay metric, in 10 microsecond units
r3(config-router)#redistribute rip metric 10000 100?
   <0-255> IGRP reliability metric where 255 is 100% reliable

r3(config-router)#redistribute rip metric 10000 100 255?
   <1-255> IGRP Effective bandwidth metric (Loading) where 255 is 100% loaded
r3(config-router)#redistribute rip metric 10000 100 255 1?
   <1-4294967295> IGRP MTU of the path
r3(config-router)#redistribute rip metric 10000 100 255 1 1500?
   metric           Metric for redistributed routes
   route-map        Route map reference
   <cr>
r3(config-router)#redistribute rip metric 10000 100 255 1 1500
Notice that the delay value entered is 100 instead of 1000, as shown for the Ethernet interface.
The interface delay value must be divided by 10 before entering it as an IGRP metric.
At this point, router r4 should have learned all the RIP routes that were redistributed in IGRP.
r4#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
I   172.16.4.0 [100/265257] via 172.16.5.1, 00:00:02, Serial0
C   172.16.5.0 is directly connected, Serial0
C   172.16.6.0 is directly connected, Loopback0
I   172.16.2.0 [100/265257] via 172.16.5.1, 00:00:02, Serial0
I   172.16.3.0 [100/265257] via 172.16.5.1, 00:00:02, Serial0
Another command to list IP routes and their metrics is to use. show ip route <IP
address of the destination network>. Using this form of the show ip route
command, we can list the information that router r4 has concerning the route to network
172.16.2.0.break
r4#show ip route 172.16.2.0
Routing entry for 172.16.2.0/24
  Known via "igrp 100", distance 100, metric 265257
  Redistributing via igrp 100
  Advertised by igrp 100 (self originated)
  Last update from 172.16.5.1 on Serial0, 00:01:07 ago
  Routing Descriptor Blocks:
   * 172.16.5.1, from 172.16.5.1, 00:01:07 ago, via Serial0
   Route metric is 265257, traffic share count is 1
   Total delay is 21000 microseconds, minimum bandwidth is 38 Kbit
   Reliability 255/255, minimum MTU 1500 bytes
   Loading 1/255, Hops 0
Page 291
The route was learned via IGRP and has an administrative distance of 100 (the default for IGRP).
The IGRP metric is 265257, which consists of the four metrics: bandwidth, delay, load, and
reliability. The total delay is 21000, which is the sum of the delay for the serial link (20000) and
the delay of the Ethernet link (1000). Using the four metrics for the Ethernet and serial interfaces,
the total cost can be calculated using the IGRP metric formula

The default values for K1, K2, K3, K4, and K5 are
The bandwidth used in the metric formula is the smallest bandwidth of the path in units of 1 kbit.
The smallest bandwidth is associated with the serial link to the bandwidth used in the formula is
38000/1000 = 38. So,
Now we will examine the other types of routes that we can redistribute into any of the IP routing
protocols.break
r3(config-router)#redistribute?
   bgp               Border Gateway Protocol (BGP)
   connected         Connected
   egp               Exterior Gateway Protocol (EGP)
   eigrp             Enhanced Interior Gateway Routing Protocol (EIGRP)
   igrp              Interior Gateway Routing Protocol (IGRP)
   isis              ISO IS-IS
   iso-igrp          IGRP for OSI networks
   mobile            Mobile routes
   ospf              Open Shortest Path First (OSPF)
   rip               Routing Information Protocol (RIP)
   static            Static routes
Page 292
In particular, we are interested in the highlighted selections, connected and static. Redistributing
connected routes for RIP and IGRP can be an alternation to using the network command under
router configuration mode. The operative phrase here is ''can be." Reconfigure the IGRP routing
process on router r3 to redistribute connected routes without using the network command.
router igrp 100
  redistribute connected
  redistribute rip metric 10000 100 255 1 1500
Router r3's connected networks are 172.16.4.0 and 172.16.5.0. Now examine the routing table for
router r4.
r4#show ip route

  172.16.0.0/24 is subnetted, 2 subnets
C   172.16.5.0 is directly connected, Serial0
C   172.16.6.0 is directly connected, Loopback0
Router r4 has lost all route exits for its directly connected networks. When we reconfigured IGRP
on router r3, we did not use any network statements. The network statement is used to inform
IGRP not only of the networks to advertise but also of which interfaces to send and receive IGRP
routing updates. Without a network command, the IGRP process on router r3 will do nothing, so
router r4 will not learn any routes. A better illustration of redistributed connected routes is to
create a loopback interface on router r3 in a different major network than 172.16.0.0. For this
demonstration, network 156.26.1.0 will be used.
Router r3 configuration
interface Loopback0
  ip address 156.26.1.1 255.255.255.0
router igrp 100
  redistribute connected
  redistribute rip metric 10000 100 255 1 1500
  network 172.16.0.0
With this configuration, router r3 will run IGRP over interfaces in the 172.16.0.0 network. Since
network 156.26.0.0 is on a directly connected interface, the redistribute connected
command will force IGRP to advertise this network also, as seen by router r4's routing
table.break
r4#show ip route
I   156.26.0.0/16 [100/265657] via 172.16.5.1, 00:00:40, Serial0
  172.16.0.0/24 is subnetted, 5 subnets
I   172.16.4.0 [100/265257] via 172.16.5.1, 00:00:40, Serial0
Page 293
C   172.16.5.0 is directly connected, Serial0
C   172.16.6.0 is directly connected, Loopback0
I   172.16.2.0 [100/265257] via 172.16.5.1, 00:00:40, Serial0
I   172.16.3.0 [100/265257] via 172.16.5.1, 00:00:40, Serial0
For RIP, IGRP, and EIGRP, the redistribute connected command essentially can be
used to replace the network command as long as at least one network command has been used.
Will IGRP advertise routes out the 156.26.1.0 interface? We can debug IGRP transactions to
determine whether or not routes will be sent onto the 156.26.0.0 network.
r3#debug ip igrp transactions
IGRP protocol debugging is on
r3#
IGRP: sending update to 255.255.255.255 via Ethernet0 (172.16.4.2)
  subnet 172.16.5.0, metric = 265157
  subnet 172.16.6.0, metric = 265657
  network 156.26.0.0, metric = 501
IGRP: sending update to 255.255.255.255 via Serial0 (172.16.5.1)
  subnet 172.16.4.0, metric = 1100
  subnet 172.16.2.0, metric = 1100
  subnet 172.16.3.0, metric = 1100
  network 156.26.0.0, metric = 501

As we can see, routing updates are not sent onto the 156.26.0.0 network. IGRP will only
broadcast routing updates out interfaces that are contained in the network statements. The
equivalent commands to redistribute connected would be
router igrp 100
passive-interface Loopback0
network 156.26.0.0
network 172.16.0.0
r3#debug ip igrp transactions
IGRP protocol debugging is on
r3#
IGRP: sending update to 255.255.255.255 via Ethernet0 (172.16.4.2)
  subnet 172.16.5.0, metric = 265157
  subnet 172.16.6.0, metric = 265657
  network 156.26.0.0, metric = 501
IGRP: sending update to 255.255.255.255 via Serial0 (172.16.5.1)
  subnet 172.16.4.0, metric = 1100
  subnet 172.16.2.0, metric = 1100
  subnet 172.16.3.0, metric = 1100
  network 156.26.0.0, metric = 501
From the debugging output for both cases, we can see that the same information is being
broadcast out the same interfaces. You may askcontinue
Page 294
what is the benefit of having a redistribute connected command when we can achieve
the same result using network and passive interface commands. This question will be answered
when we examine route redistribution with OSPF.
The next redistribute command that we will examine is redistribute static.
Static routes are useful, as we have seen, when we want to prevent routing traffic over an ISDN
connection. The redistribute static command simply advertises any static routes that
have been configured on the router. For example, create a static route to the network 200.16.10.0
on router r3.
r3(config)#ip route 200.16.10.0 255.255.255.0 Ethernet 0
Router r3 now has a static route to network 200.16.10.0.
r3#show ip route
  156.26.0.0 255.255.255.0 is subnetted, 1 subnets
C   156.26.1.0 is directly connected, Loopback0
  172.16.0.0 255.255.255.0 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Ethernet0
C   172.16.5.0 is directly connected, Serial0
I   172.16.6.0 [100/265657] via 172.16.5.2, 00:00:13, Serial0
R   172.16.2.0 [120/2] via 172.16.4.1, 00:00:25, Ethernet0
R   172.16.3.0 [120/1] via 172.16.4.1, 00:00:25, Ethernet0
S   200.16.10.0 is directly connected, Ethernet0
Even though the static route appears as a directly connected route, router r3 will not advertise this

route if we use the redistribute connected command, as shown by router r4's routing
table.
r4#sh ip route
I   156.26.0.0/16 [100/265657] via 172.16.5.1, 00:00:02, Serial0
  172.16.0.0/24 is subnetted, 5 subnets
I   172.16.4.0 [100/265257] via 172.16.5.1, 00:00:02, Serial0
C   172.16.5.0 is directly connected, Serial0
C   172.16.6.0 is directly connected, Loopback0
I   172.16.2.0 [100/265257] via 172.16.5.1, 00:00:02, Serial0
I   172.16.3.0 [100/265257] via 172.16.5.1, 00:00:02, Serial0
In order to advertise the static route to 200.16.10.0, the redistribute static command
must be used under router IGRP configuration mode.break
router igrp 100
  redistribute connected
  redistribute static
  redistribute rip metric 10000 100 255 1 1500
  network 172.16.0.0
Page 295
This will force the IGRP process on router r3 to advertise the static route, as shown by router r4's
routing table.
r4#show ip route
I   156.26.0.0/16 [100/265657] via 172.16.5.1, 00:00:03, Serial0
  172.16.0.0/24 is subnetted, 5 subnets
I   172.16.4.0 [100/265257] via 172.16.5.1, 00:00:03, Serial0
C   172.16.5.0 is directly connected, Serial0
C   172.16.6.0 is directly connected, Loopback0
I   172.16.2.0 [100/265257] via 172.16.5.1, 00:00:03, Serial0
I   172.16.3.0 [100/265257] via 172.16.5.1, 00:00:03, Serial0
I   200.16.10.0/24 [100/265257] via 172.16.5.1, 00:00:03, Serial0
There is a special static route called a default route. A default route is a route to network 0.0.0.0.
A default route is used when a router receives a packet that is destined for a network that is not in
the router's routing table. A default route is created as a static route to network 0.0.0.0. Create a
default router on router r2.
r2(config)#ip route 0.0.0.0 255.255.255.255 fastEthernet 0
r2#show ip route
r2#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:07, Ethernet0
R   172.16.6.0 [120/1] via 172.16.4.2, 00:00:07, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:27, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0
S   0.0.0.0/32 is directly connected, FastEthernet0
Configure the RIP routing process on router r2 with the redistribute static command.
Even though router r2 has a route to the default network and it has been declared as a static route,
the command redistribute static will not cause this route to be advertised by RIP, as

seen by router r1's routing table.
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
R   172.16.4.0 [120/1] via 172.16.3.2, 00:00:03, FastEthernet0/0
R   172.16.5.0 [120/2] via 172.16.3.2, 00:00:03, FastEthernet0/0
R   172.16.6.0 [120/2] via 172.16.3.2, 00:00:03, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0
To redistribute the default route so that all routers can see it without having to create a default
static route on every router, we can use thecontinue
Page 296
default-information originate command under RIP router configuration mode on
router r2.
r2(config-router)#default-information?
   originate Distribute a default route
r2(config-router)#default-information originate?
   route-map Route-map reference
   <cr>
r2(config-router)#default-information originate
The routing table for router r1 now contains the default route.
r1#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, * - candidate default
  U - per-user static route, o - ODR
Gateway of last resort is 172.16.3.2 to network 0.0.0.0
  172.16.0.0/24 is subnetted, 5 subnets
R   172.16.4.0 [120/1] via 172.16.3.2, 00:00:24, FastEthernet0/0
R   172.16.5.0 [120/2] via 172.16.3.2, 00:00:24, FastEthernet0/0
R   172.16.6.0 [120/2] via 172.16.3.2, 00:00:24, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0
R*  0.0.0.0/0 [120/1] via 172.16.3.2, 00:00:24, FastEthernet0/0
If router r1 receives a packet to a network not in router r1's routing table, the packet will be sent
onto interface fast Ethernet 0.
One of the commands that we skipped in Chap. 11 was the metric weights command. This
command is used to modify the constants K1, K2, K3, K4, and K5 in the IGRP metric equation.
The syntax of the command is given below.break
r3(config)#router igrp 100

r3(config-router)#metric weights?
   <0-8>                 Type Of Service (Only TOS 0 supported)
r3(config-router)#metric weights 0?
   <0-4294967295>        K1
r3(config-router)#metric weights 0 1?
   <0-4294967295>        K2
r3(config-router)#metric weights 0 1 0?
   <0-4294967295>        K3
Page 297
r3(config-router)#metric weights 0 1 0 1?
   <0-4294967295>        K4
r3(config-router)#metric weights 0 1 0 10?
   <0-4294967295>        K5
r3(config-router)#metric weights 0 1 0 1 0 0
Although the constants K1 through K5 can be modified, don't do it! These values have been
chosen for the optimal operation of the IGRP routing protocol. Modifying these values probably
will cause you nothing but trouble. However, if you are ever asked to modify them, now you
know how.
Although we did not look at any examples of using route maps with redistributed connected and
static routes, route maps can be used in the same manner that we used them for redistributing
routes from other routing protocols.
The final configuration example that we need to explore concerns mutual redistribution. The
network is configured so that router r3 is redistributing RIP routes into IGRP and IGRP routes
into RIP. Mutual redistribution sometimes can cause routing loops to occur. The problem occurs
when redistributed routes are readvertised using another protocol. For example, router r3 is
advertising to router r4 that it can reach network 172.16.2.0. Network 172.16.2.0 was learned
from RIP and redistributed into IGRP. Router r4 receives this route advertisement from router r3
but does not readvertise the route to router r3 because of split horizon. IP split horizon is enabled
by default on IP interfaces, so router r4 will not advertise to router r3 that it has a route to
network 172.16.2.0 because router r4 learned this route from router r3. What would happen if we
disabled IP split horizon on router r4's serial interface? Let's do it and see what happens. Disable
IP split horizon on the serial interface between router r3 and router r4 on router r4's serial
interface. Before we disable IP split horizon, look at the routing table for router r3 and determine
the route to 172.16.2.0.break
r3#show ip route
Gateway of last resort is 172.16.4.1 to network 0.0.0.0
  156.26.0.0 255.255.255.0 is subnetted, 1 subnets
C   156.26.1.0 is directly connected, Loopback0
  172.16.0.0 255.255.255.0 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Ethernet0
C   172.16.5.0 is directly connected, Serial0
I   172.16.6.0 [100/265657] via 172.16.5.2, 00:00:06, Serial0
R   172.16.2.0 [120/2] via 172.16.4.1, 00:00:11, Ethernet0
R   172.16.3.0 [120/1] via 172.16.4.1, 00:00:11, Ethernet0

Page 298
S   200.16.10.0 is directly connected, Ethernet0
R*  0.0.0.0 0.0.0.0 [120/1] via 172.16.4.1, 00:00:11, Ethernet0
As expected, router r3 has a route to network 172.16.2.0 through router r2. Now disable split
horizon on the serial interface of router r4.
r4(config)#interface serial 0
r4(config-if)#no ip split-horizon
Now examine router r3's routing table.
r3#show ip route
  156.26.0.0 is variably subnetted, 2 subnets, 2 masks
I   156.26.0.0 255.255.0.0 [100/267657] via 172.16.5.2, 00:01:03, Serial0
C   156.26.1.0 255.255.255.0 is directly connected, Loopback0
  172.16.0.0 255.255.255.0 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Ethernet0
C   172.16.5.0 is directly connected, Serial0
I   172.16.6.0 [100/265657] via 172.16.5.2, 00:01:04, Serial0
I   172.16.2.0 [100/267257] via 172.16.5.2, 00:01:04, Serial0
I   172.16.3.0 [100/267257] via 172.16.5.2, 00:01:04, Serial0
S   200.16.10.0 is directly connected, Ethernet0
R*  0.0.0.0 0.0.0.0 [120/1] via 172.16.4.1, 00:00:26, Ethernet0
Router r3 now thinks that it has a route to networks 172.16.2.0 and 172.16.3.0 through router r4!
How can this be? The answer is apples and oranges. Figure 13-5 shows the process that has
caused these routes to be installed in router r3's routing table. In Fig. 13-5, router r2 is advertising
to router r3 routes to networks 172.16.2.0 and 172.16.3.0. Router r3 is running RIP, so these two
routes will be added to the routing table. Router r3 redistributes these two routes into IGRP and
advertises them as IGRP routes to router r4. Since IP split horizon is disabled on router r4, it will
advertise to router r3 that it has a route to networks 172.16.2.0 andcontinue
Figure 13-5
Formation of a routing loop.
Page 299
172.16.3.0. Router r3 is now receiving advertisements to networks 172.16.2.0 and 172.16.3.0
from routers r2 and r4. Which routes will be installed in the routing tables. Router r3 cannot use
the route metrics to decide because the metric for RIP is not comparable with the metric for
IGRP (apples and oranges). This is when the administrative distance comes into play. The

administrative distance for RIP is 120 and the administrative distance for IGRP is 100, so the
IGRP route is preferred. The RIP routes will be ignored, and the IGRP routes will be installed in
the routing table. Even worse, router r4 has routes to networks 172.16.2.0 and 172.16.3.0 that
point to router r3.
r4#show ip route
I   156.26.0.0/16 [100/265657] via 172.16.5.1, 00:00:07, Serial0
  172.16.0.0/24 is subnetted, 5 subnets
I   172.16.4.0 [100/265257] via 172.16.5.1, 00:00:07, Serial0
C   172.16.5.0 is directly connected, Serial0
C   172.16.6.0 is directly connected, Loopback0
I   172.16.2.0 [100/265257] via 172.16.5.1, 00:00:25, Serial0
I   172.16.3.0 [100/265257] via 172.16.5.1, 00:00:25, Serial0
I   200.16.10.0/24 [100/265257] via 172.16.5.1, 00:00:08, Serial0
We now have a classic routing loop. If we trace the route from router r4 to network 172.16.2.0,
we can see this loop in action.
r4#traceroute
Protocol [ip]:
Target IP address: 172.16.2.1
Source address:
Numeric display [n]:
Timeout in seconds [3]:
Probe count [3]:
Minimum Time to Live [1]:
Maximum Time to Live [30]:
Port Number [33434]:
Loose, Strict, Record, Timestamp, Verbose[none]: v
Loose, Strict, Record, Timestamp, Verbose[V]:
Type escape sequence to abort.
Tracing the route to 172.16.2.1
  1      172.16.5.1 24 msec 24 msec 24 msec
  2      172.16.5.2 60 msec 44 msec 44 msec
The packet is bouncing between routers r3 and r4. This example may be somewhat artificial
because for this configuration we would probably never disable split horizon. However, if we are
running IGRP and RIP across a point-to-multipoint NBMA network using subinterfaces,
thencontinue
Page 300

Figure 13-6
NBMA multipoint configuration where split horizon needs to be disabled.
this exact problem can occur. We need to disable IP split horizon on the hub router (Fig. 13-6) so
that the routing updates can be propagated to all the routers. If in additional route redistribution is
taking place, then a routing loop can occur.
The final note for RIP and IGRP route redistribution concerns redistributing routes between
routing domains that are employing different length subnet masks. We have already seen the
effects of using VLSM in an RIP or IGRP routing domain and the problems associated with
doing so. The question at hand is how will route redistribution be affected if the two routing
domains, RIP and IGRP, use a different length subnet mask. There are two cases that need to be
examined. The first is using a different length subnet mask using the same major net-soft
Page 301
work number. The second case is using a different length subnet mask and a different major
network number. For the first case, we will retain the 8-bit subnet mask for the RIP domain and
use a 12-bit subnet mask for the IGRP domain. The only configuration changes occur on routers

r3 and r4. Also, remove all static and default routes and remove the redistribute static
and connected commands on router r3.
Router r3 configuration changes
interface Serial0
  ip address 176.16.5.1 255.255.255.240
  bandwidth 38
Router r4 configuration changes
interface Loopback0
  ip address 172.16.6.1 255.255.255.240
interface Serial0
  ip address 176.16.5.2 255.255.255.240
  bandwidth 38
  clockrate 38400
With the preceding changes, the routing table for router r4 now contains
r4#show ip route
  172.16.0.0/28 is subnetted, 2 subnets
C   172.16.5.0 is directly connected, Serial0
C   172.16.6.0 is directly connected, Loopback0
All the routes that were learned previously from RIP have now disappeared. As we might have
expected, since the subnet masks between the two routing domains are different, the routes will
not be redistributed. The problem can be solved by creating static routes to networks 172.16.2.0,
172.16.3.0, and 172.16.4.0 with an 8-bit subnet mask on router r4 or creating the static routes on
router r3 and redistributing them into IGRP. Since router r3 has already learned the routes to
these networks via RIP, the best place to configure the static routes is on router r4.
Router r4 configuration
ip route 172.16.2.0 255.255.255.0 Serial0
ip route 172.16.3.0 255.255.255.0 Serial0
ip route 172.16.4.0 255.255.255.0 Serial0
Notice that an 8-bit subnet mask was used for the static routes and not a 12-bit subnet mask.
Since these are static routes and not routes learned from IGRP, the 8-bit subnet mask will work.
If the static routes were created on router r3 and redistributed into IGRP, then a 12-bit sub-soft
Page 302
net mask would need to be used. To see if the static routes have solved our problem, try pinging
interfaces on networks 172.16.2.0, 172.16.3.0, and 172.16.4.0 from router r4. Router r4 can ping
172.16.4.2 because this interface is connected directly to router r3 and router r3 is running IGRP,
so it has a route back to router r4. Router r4 cannot ping 172.16.4.1 because router r2 does not
have a route back to router r2 owing to the subnet mask mismatch between the RIP and IGRP
domains. Static routes need to be entered on router r2 and redistributed into RIP so that router r1
will learn about their existence.
Router r2 configuration
router rip
  redistribute static metric 1

  network 172.16.0.0
ip route 172.16.5.0 255.255.255.0 Ethernet0
ip route 172.16.6.0 255.255.255.0 Ethernet0
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
R   172.16.4.0 [120/1] via 172.16.3.2, 00:00:07, FastEthernet0/0
R   172.16.5.0 [120/1] via 172.16.3.2, 00:00:07, FastEthernet0/0
R   172.16.6.0 [120/1] via 172.16.3.2, 00:00:07, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0
Router r1 now has routes to the IGRP networks, router r4 can ping the RIP networks, and router
r1 can ping the IGRP networks.
In order to examine case 2, where the IGRP domain uses a different major network number than
RIP and a different length subnet mask configures routers r3 and r4 as shown, remove any static
routes from the routers and any redistribute static commands.break
Router r3 configuration
interface Serial0
  ip address 173.16.5.1 255.255.255.240
  bandwidth 38
router rip
  redistribute igrp 100 metric 1
  network 172.16.0.0
router igrp 100
  redistribute rip metric 10000 100 255 1 1500interface Loopback0
  ip address 173.16.6.1 255.255.255.240
Router r4 configuration
interface Serial0
  ip address 173.16.5.2 255.255.255.240
  bandwidth 38
  clockrate 38400
Page 303
router igrp 100
  network 173.16.0.0
The routing tables for routers r1 and r4 now contain routes to the other routing domains.
r1#show ip route
  172.16.0.0/24 is subnetted, 3 subnets
R   172.16.4.0 [120/1] via 172.16.3.2, 00:00:11, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0
R   173.16.0.0/16 [120/2] via 172.16.3.2, 00:00:11, FastEthernet0/0
r4#show ip route
I   172.16.0.0/16 [100/265257] via 173.16.5.1, 00:00:26, Serial0
  173.16.0.0/28 is subnetted, 2 subnets
C   173.16.5.0 is directly connected, Serial0
C   173.16.6.0 is directly connected, Loopback0

We have covered the scenarios that can occur when redistributing between RIP and IGRP. Many
of the scenarios that were examined and commands that were used are applicable when
redistributing routes between protocols other than RIP and IGRP. For the remaining
combinations of routing protocols, I will only examine issues that are unique to the routing
protocol pairs under discussion.
RIP and EIGRP
The network in Fig. 13-7 will be used to examine the interaction between RIP and EIGRP when
redistributing routes. Configure routers r1, r2, r3, and r4 as shown.break
Figure 13-7
Example network for RIP and EIGRP route redistribution.
Page 304
Router r1 configuration
hostname r1
enable password cisco
interface Loopback0
  ip address 172.16.2.1 255.255.255.0
interface FastEthernet0/0
  ip address 172.16.3.1 255.255.255.0
router rip
  network 172.16.0.0
Router r2 configuration
hostname r2
enable password cisco
interface Ethernet0
  ip address 172.16.4.1 255.255.255.0
interface FastEthernet0
  ip address 172.16.3.2 255.255.255.0
router rip
  network 172.16.0.0
Router r3 configuration
hostname r3
enable password cisco
interface Ethernet0

  ip address 172.16.4.2 255.255.255.0
interface Serial0
  ip address 172.16.5.1 255.255.255.0
  bandwidth 38
router rip
  redistribute eigrp 100 metric 1
  network 172.16.0.0
router eigrp 100
  redistribute rip metric 10000 100 255 1 1500
  network 172.16.0.0
Router r4 configuration
hostname r4
enable password cisco
interface Loopback0
  ip address 172.16.6.1 255.255.255.0
interface Serial0
  ip address 172.16.5.2 255.255.255.0
  bandwidth 38
  clockrate 38400
router eigrp 100
  network 172.16.0.0
The only difference between this RIP/EIGRP configuration and the first RIP/IGRP confirmation
is that we are running EIGRP instead ofcontinue
Page 305
IGRP. Previous experience tells us that this configuration should present no routing problems, as
shown by the routing tables.
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
R   172.16.4.0 [120/1] via 172.16.3.2, 00:00:11, FastEthernet0/0
R   172.16.5.0 [120/2] via 172.16.3.2, 00:00:11, FastEthernet0/0
R   172.16.6.0 [120/2] via 172.16.3.2, 00:00:11, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0
r2#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Ethernet0
R   172.16.5.0 [120/1] via 172.16.4.2, 00:00:01, Ethernet0
R   172.16.6.0 [120/1] via 172.16.4.2, 00:00:01, Ethernet0
R   172.16.2.0 [120/1] via 172.16.3.1, 00:00:11, FastEthernet0
C   172.16.3.0 is directly connected, FastEthernet0
r3#show ip route
  172.16.0.0 255.255.255.0 is subnetted, 5 subnets
C   172.16.4.0 is directly connected, Ethernet0
C   172.16.5.0 is directly connected, Serial0
D   172.16.6.0 [90/68008192] via 172.16.5.2, 00:07:36, Serial0
R   172.16.2.0 [120/2] via 172.16.4.1, 00:00:14, Ethernet0
R   172.16.3.0 [120/1] via 172.16.4.1, 00:00:14, Ethernet0

r4#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  E1 OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, * - candidate default
  U - per-user static route
Gateway of last resort is not set
  172.16.0.0/24 is subnetted, 5 subnets
D        172.16.4.0 [90/67905792] via 172.16.5.1, 00:08:18, Serial0
C        172.16.5.0 is directly connected, Serial0
C        172.16.6.0 is directly connected, Loopback0
D EX     172.16.2.0 [170/68136192] via 172.16.5.1, 00:02:49, Serial0
D EX     172.16.3.0 [170/68136192] via 172.16.5.1, 00:02:49, Serial0
Notice that the routes learned from RIP and redistributed into EIGRP are tagged as external
routes.
The scenarios left to examine are using different length subnet masks on the same major network
number and different length subnet masks on a different major subnet number. For the first
scenario, configure routers r3 and r4 as shown.break
Page 306
Router r3 configuration
interface Serial0
  ip address 172.16.5.1 255.255.255.240
  bandwidth 38
Router r4 configuration
interface Loopback0
  ip address 172.16.6.1 255.255.255.240
interface Serial0
  ip address 172.16.5.2 255.255.255.240
  bandwidth 38
  no fair-queue
  clockrate 38400
Since EIGRP carries subnet information in the routing updates, we should expect to see the
redistributed RIP routes in router r4's routing table.
r4#show ip route
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
D        172.16.4.0/24 [90/67905792] via 172.16.5.1, 00:00:49, Serial0
C        172.16.5.0/28 is directly connected, Serial0
C        172.16.6.0/28 is directly connected, Loopback0
D EX     172.16.2.0/24 [170/68136192] via 172.16.5.1, 00:00:49, Serial0
D EX     172.16.3.0/24 [170/68136192] via 172.16.5.1, 00:00:49, Serial0
But we should not see the EIGRP routes in router r1's routing table because RIP does not carry
subnet information in the routing updates.

r1#show ip route
  172.16.0.0/24 is subnetted, 3 subnets
R   172.16.4.0 [120/1] via 172.16.3.2, 00:00:02, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0
Using EIGRP instead of IGRP has solved half our routing problem, namely, that the EIGRP
domain can see the RIP routes. What can we do to enable the RIP domain to see the EIGRP
routes? Static routes can be created on router r2 and then redistributed into RIP, as was done with
RIP/IGRP. Or we can use RIP, Version 2 on routers r1, r2, and r3. Reconfigure the RIP processes
as Version 2 on routers r1, r2, and r3 and then reexamine router r1's routing table.break
r1#show ip route
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
R   172.16.4.0/24 [120/1] via 172.16.3.2, 00:00:01, FastEthernet0/0
R   172.16.5.0/28 [120/2] via 172.16.3.2, 00:00:01, FastEthernet0/0
Page 307
R   172.16.6.0/28 [120/2] via 172.16.3.2, 00:00:01, FastEthernet0/0
C   172.16.2.0/24 is directly connected, Loopback0
C   172.16.3.0/24 is directly connected, FastEthernet0/0
The final scenario, where the domains are using different length subnet masks and different
major network numbers, will work identically to the same scenario that was examined for
RIP/IGRP route redistribution, regardless of the version of RIP that is running.
From the routing table listing for router r3, we can determine the EIGRP metric.
D   172.16.6.0 [90/68008192] via 172.16.5.2, 00:07:36, Serial0
We have seen how to calculate the IGRP metric, so how do we calculate the EIGRP metric? The
IGRP metric for the same route was shown to be
I   172.16.6.0 [100/265657] via 172.16.5.2, 00:00:13, Serial0
If we divide the EIGRP metric by the IGRP metric, we can determine the relationship between
the metrics.
The EIGRP metric is always 256 times the IGRP metric.
IGRP and EIGRP
In order to determine the relationship between redistributing routes between IGRP and EIGRP,
configure the network shown in Fig. 13-8 with the following configurations.break
Router r1 configuration
hostname r1
enable password cisco
interface Loopback0

  ip address 172.16.2.1 255.255.255.0
interface FastEthernet0/0
  ip address 172.16.3.1 255.255.255.0
router igrp 100
  network 172.16.0.0
Page 308
Router r2 configuration
hostname r2
enable password cisco
interface Ethernet0
  ip address 172.16.4.1 255.255.255.0
interface FastEthernet0
  ip address 172.16.3.2 255.255.255.0
router igrp 100
  network 172.16.0.0
Router r3 configuration
hostname r3
enable password cisco
interface Ethernet0
  ip address 172.16.4.2 255.255.255.0
interface Serial0
  ip address 172.16.5.1 255.255.255.0
  bandwidth 38
router eigrp 100
  network 172.16.0.0
router igrp 100
  network 172.16.0.0
Router r4 configuration
hostname r4
enable password cisco
interface Loopback0
  ip address 172.16.6.1 255.255.255.0
interface Serial0
  ip address 172.16.5.2 255.255.255.0
  bandwidth 38
  clockrate 38400
router eigrp 100
  network 172.16.0.0
Examine the routing tables for routers r1 and r4 and determine what has happened.break

Figure 13-8
Example network for IGRP and EIGRP route redistribution.
Page 309
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
I   172.16.4.0 [100/1110] via 172.16.3.2, 00:00:20, FastEthernet0/0
I   172.16.5.0 [100/265267] via 172.16.3.2, 00:00:20, FastEthernet0/0
I   172.16.6.0 [100/265767] via 172.16.3.2, 00:00:20, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0
r4#show ip route
  172.16.0.0/16 is variably subnetted, 6 subnets, 2 masks
D        172.16.4.0/24 [90/67905792] via 172.16.5.1, 00:12:12, Serial0
D        172.16.5.0/28 [90/68392192] via 172.16.5.1, 00:12:12, Serial0
C        172.16.5.0/24 is directly connected, Serial0
C        172.16.6.0/24 is directly connected, Loopback0
D EX     172.16.2.0/24 [170/68036352] via 172.16.5.1, 00:12:12, Serial0
D EX     172.16.3.0/24 [170/67908352] via 172.16.5.1, 00:12:12, Serial0
The configuration for router r3 did not redistribute routes from IGRP into EIGRP nor redistribute
routes from EIGRP into IGRP, yet routers r1 and r4 can see all the routes. Since IGRP and
EIGRP are similar routing protocols, route redistribution is automatic.
The scenario using different length subnet masks and a different major network number in the
two routing domains will have no problems redistributing routes between IGRP and EIGRP. We
need to examine what will happen when we use different subnet mask lengths in the two routing
domains with IGRP and EIGRP. Reconfigure routers r3 and r4 with a 12-bit subnet mask while
leaving routers r1 and r2 with an 8-bit subnet mask.break
Router r3 configuration
interface Serial0
  ip address 172.16.5.1 255.255.255.240
  bandwidth 38
Router r4 configuration
interface Loopback0
  ip address 172.16.6.1 255.255.255.240
interface Serial0
  ip address 172.16.5.2 255.255.255.240
  bandwidth 38
  clockrate 38400
r1#show ip route
  172.16.0.0/24 is subnetted, 4 subnets
I   172.16.4.0 [100/1110] via 172.16.3.2, 00:00:03, FastEthernet0/0
I   172.16.5.0 [100/265267] via 172.16.3.2, 00:00:03, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0

Page 310
r4#show ip route
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
D        172.16.4.0/24 [90/67905792] via 172.16.5.1, 00:00:44, Serial0
C        172.16.5.0/28 is directly connected, Serial0
C        172.16.6.0/28 is directly connected, Loopback0
D EX     172.16.2.0/24 [170/68036352] via 172.16.5.1, 00:00:44, Serial0
D EX     172.16.3.0/24 [170/67908352] via 172.16.5.1, 00:00:44, Serial0
As expected, the EIGRP domain can see the redistributed IGRP routes, but the IGRP domain
cannot see the EIGRP routes. This is the same problem that occurred when we were
redistributing RIP and EIGRP: IGRP cannot handle VLSM, so the EIGRP routes will not be
redistributed. This problem can be fixed in the same manner by using static routes and then
redistributing them into the proper protocol.
We have examined redistributing routes between RIP Version 1, RIP Version 2, IGRP and
EIGRP. Similar problems exist with all the pairs of protocols when VLSM is involved. The
techniques to overcome the VLSM shortcomings of RIP Version 1 and IGRP can be overcome
with the judicious use of static routes. The techniques using route maps are applicable for all the
protocols that have been examined thus far.
Before moving on to route redistribution involving OSPF, we will examine a technique of
selective route redistribution. In all the preceding scenarios, we have redistributed, or at least
tried to redistribute, all routes from one routing protocol into another. The situation may arise
where we only need to redistribute a subset of the routes from one routing domain into another.
For example, using our current IGRP/EIGRP configuration with the EIGRP subnet mask
changed to an 8-bit mask so that it matches the IGRP domain subnet mask, router r3 is
redistributing two routes, 172.16.2.0 and 172.16.3.0, from the IGRP domain into the EIGRP
domain. What if we only want to redistribute the route to network 172.16.2.0 into the EIGRP
domain and block the route to the 172.16.3.0 network into the EIGRP domain? The answer is
through the use of distribution lists. A distribution list is used to filter routes that are redistributed
between protocols. For example, we want to configure router r3 so that it only imports the
172.16.2.0 route from the IGRP domain and injects this route into the EIGRP domain. There are
multiple ways to filter routes from routing updates, so let's start at the beginning. Enter EIGRP
router configuration mode on router r3 and list the parameters for a distribution list.break
r3(config)#router eigrp 100
r3(config-router)#distribute-list?
   <1-199>        A standard IP access list number
Page 311
The first parameter gives us a choice of either using a standard IP access list (1–99) or an
extended IP access list. We will first filter the routes using a standard IP access list and then see
what additional options we have with an extended IP access list. Select IP access list 1 and list
the next parameter.
r3(config-router)#distribute-list 1?

   in     Filter incoming routing updates
   out    Filter outgoing routing updates
Route filters can be applied to either incoming routing updates or outgoing routing updates. The
route that we want to filter out, 172.16.3.0, is coming in the Ethernet interface and going out the
serial interface on router r3. The incoming route is an IGRP route, so we cannot perform EIGRP
route filtering on the input. Select out and list the next parameter.
r3(config-router)#distribute-list 1 out?
   Ethernet         IEEE 802.3
   Loopback         Loopback interface
   Null             Null interface
   Serial           Serial
   bgp              Border Gateway Protocol (BGP)
   connected        Connected
   egp              Exterior Gateway Protocol (EGP)
   eigrp            Enhanced Interior Gateway Routing Protocol (EIGRP)
   igrp             Interior Gateway Routing Protocol (IGRP)
   isis             ISO IS-IS
   iso-igrp         IGRP for OSI networks
   ospf             Open Shortest Path First (OSPF)
   rip              Routing Information Protocol (RIP)
   static           Static routes
   <cr>
We have a number of choices from which to select. The first choice is to filter the EIGRP route
going out any interface.
r3(config-router)#distribute-list 1 out
Selecting this option, the outgoing EIGRP route updates on any interface of router r3 will be
filtered according to access list 1. Access list 1 will be used to block the 172.16.3.0 route and
permit all other routes. The list to use in this situation is shown below.break
Router r3 access-list
access-list 1 deny 172.16.3.0 0.0.0.255
access-list 1 permit any
Page 312
Don't forget the permit any statement in the access list. Remember that there is always an implicit
deny all at the end of every access list. Examine the routing table for router r4 to see the effect of
the route filter.
r4#show ip route
  172.16.0.0/16 is variably subnetted, 4 subnets, 2 masks
D        172.16.4.0/24 [90/67905792] via 172.16.5.1, 00:00:00, Serial0
C        172.16.5.0/28 is directly connected, Serial0
C        172.16.6.0/28 is directly connected, Loopback0
D EX       172.16.2.0/24 [170/68036352] via 172.16.5.1, 00:00:00, Serial0
The second choice, using an extended IP access filter, also can be used to block the route to
network 172.16.3.0.
Router r3 access-list
access-list 100 deny ip any 172.16.3.0 0.0.0.255

access-list 100 permit ip any any
The route to block is input in the extended IP access list as the destination address. The effect can
be seen in router r4's routing table.
r4#show ip route
  172.16.0.0/16 is variably subnetted, 4 subnets, 2 masks
D        172.16.4.0/24 [90/67905792] via 172.16.5.1, 00:00:01, Serial0
C        172.16.5.0/28 is directly connected, Serial0
C        172.16.6.0/28 is directly connected, Loopback0
D EX     172.16.2.0/24 [170/68036352] via 172.16.5.1, 00:00:01, Serial0
The second choice is to filter the route to network 172.16.3.0 from routing updates going out
only the serial interface using a standard IP access list.
r3(config-router)#distrbute-list 1 out serial 0
access-list 1 deny 172.16.3.0 0.0.0.255
access-list 1 permit any
This distribution list will block the 172.16.3.0 route from EIGRP routing updates. We can
prevent selected routes from being redistributed into another protocol with a distribution list. For
example, block the 172.16.6.0 EIGRP route from being redistributed into IGRP.break
Router r3 configuration
router eigrp 100
  network 172.16.0.0
Page 313
  distribute-list 2 out igrp 100
  access-list 2 deny 172.16.6.0 0.0.0.255
  access-list 2 permit any
This form will prevent the 172.16.6.0 route from being redistributed into IGRP process number
100, so routers r1 and r2 will never receive this route from IGRP.
r1#show ip route
  172.16.0.0/24 is subnetted, 4 subnets
I   172.16.4.0 [100/1110] via 172.16.3.2, 00:00:33, FastEthernet0/0
I   172.16.5.0 [100/265267] via 172.16.3.2, 00:00:33, FastEthernet0/0
C   172.16.2.0 is directly connected, Loopback0
C   172.16.3.0 is directly connected, FastEthernet0/0
If you don't see the route to network 172.16.5.0, make sure that you have changed the subnet
mask in the EIGRP domain to an 8-bit subnet mask (255.255.255.0).
These filtering examples were used to block routes that were being output either to a particular
interface or to a particular routing protocol. Input route filters also can be used to block routing
updates. For example, to block the 172.16.3.0 route from router r4, we can use an input route
filter on router r4, instead of an output router filer on router r3. Before proceeding, remove all the
distributions lists from router r3.break
r4(config)#router eigrp 100

r4(config-router)#distribute-list?
   <1-199>        IP access list number
r4(config-router)#distribute-list 1?
   in              Filter incoming routing updates
   out             Filter outgoing routing updates
r4(config-router)#distribute-list 1 in?
   Ethernet        IEEE 802.3
   Loopback        Loopback interface
   Null            Null interface
   Serial          Serial
   <cr>
r4(config-router)#distribute-list 1 in serial 0?
   <cr>
access-list 1 deny 172.16.3.0 0.0.0.255
access-list 1 permit any
r4#show ip route
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
D        172.16.4.0/24 [90/67905792] via 172.16.5.1, 00:00:02, Serial0
D        172.16.5.0/28 [90/68392192] via 172.16.5.1, 00:00:02, Serial0
C        172.16.5.0/24 is directly connected, Serial0
Page 314
C        172.16.6.0/24 is directly connected, Loopback0
D        EX172.16.2.0/24 [170/68036352] via 172.16.5.1, 00:00:02, Serial0
In summary, distribution lists can be used to filter incoming or outgoing routing updates on all
router interfaces or on a particular interface. A distribution list also can be used to filter the
routes that are being redistributed into another routing protocol. All the filtering examples that
we have seen were applied to the EIGRP routing process, but they also can be applied to RIP and
IGRP but not OSPF. Why not OSPF? RIP, IGRP, and EIGRP send and receive routing updates
that contain routes. This may sound like a silly statement, but it is true. OSPF routing updates do
not contain routes; they contain link-state advertisements. The OSPF Shortest Path First
algorithm generates OSPF routes. All routers in the same OSPF area have an identical link-state
database. A distribution list cannot, and should not, change this fact. Therefore, remember never
to use a distribution list with OSPF.
OSPF and RIP
The network in Fig. 13-9 will be used to examine the interactions between OSPF and RIP.break
Router r1 configuration
hostname r1
enable password cisco
interface Loopback0
  ip address 172.16.2.1 255.255.255.0
interface FastEthernet0/0
  ip address 172.16.3.1 255.255.255.0

Figure 13-9
Example network for OSPF and RIP route redistribution.
Page 315
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 172.16.2.0 0.0.0.255 area 51
Router r2 configuration
hostname r2
enable password cisco
interface Ethernet0
  ip address 172.16.4.1 255.255.255.0
interface FastEthernet0
  ip address 172.16.3.2 255.255.255.0
router ospf 100
  network 172.16.4.0 0.0.0.255 area 2
  network 172.16.3.0 0.0.0.255 area 0
Router r3 configuration
enable password cisco
interface Ethernet0
  ip address 172.16.4.2 255.255.255.0
interface Serial0
  ip address 172.16.5.1 255.255.255.0
  bandwidth 38
router ospf 100
  redistribute rip metric 10
  network 172.16.4.0 0.0.0.255 area 2
router rip
  redistribute ospf 100 metric 1
  passive-interface Ethernet0
  network 172.16.0.0
Router r4 configuration
hostname r4
enable password cisco
interface Loopback0
  ip address 172.16.6.1 255.255.255.0
interface Serial0
  ip address 172.16.5.2 255.255.255.0
  bandwidth 38
  clock rate 38400

router rip
  network 172.16.0.0
Redistributing has been configured on router r3 in Fig. 13-9. The Ethernet interface has been
configured as a passive interface for the RIP routing protocol. There is no need to broadcast RIP
routing updates out interface Ethernet 0 because there is no RIP routing process on router r2 to
receive them. The redistributed OSPF routes are assigned a metric of 1, and the redistributed RIP
routes are assigned a metric of 10.break
Page 316
router ospf 100
  redistribute rip metric 10
  network 172.16.4.0 0.0.0.255 area 2
router rip
  redistribute ospf 100 metric 1
  passive-interface Ethernet0
  network 172.16.0.0
List the routing tables of routers r1 and r4 in order to observe the results of the route
redistribution between RIP and OSPF.
r1#show ip route
  172.16.0.0/24 is subnetted, 3 subnets
O IA   172.16.4.0 [110/11] via 172.16.3.2, 00:10:29, FastEthernet0/0
C      172.16.2.0 is directly connected, Loopback0
C      172.16.3.0 is directly connected, FastEthernet0/0
r4#show ip route
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
R   172.16.4.0/24 [120/1] via 172.16.5.1, 00:00:26, Serial0
C   172.16.5.0/24 is directly connected, Serial0
C   172.16.6.0/24 is directly connected, Loopback0
R   172.16.3.0/24 [120/1] via 172.16.5.1, 00:00:26, Serial0
R   172.16.2.1/32 [120/1] via 172.16.5.1, 00:00:26, Serial0
What has happened is very interesting. The OSPF routes were redistributed successfully into RIP,
as seen by router r4's routing table. The RIP routes have not been redistributed successfully into
OSPF, as shown by router r1's routing table. How could this happen, since OSPF has been
advertised as a better routing protocol? The answer is very simple. When RIP is redistributed into
OSPF using the configuration for router r3, only routes having a 16-bit subnet mask will be
redistributed into OSPF because the network is a class B network and class B networks have an
natural subnet mask that is 16 bits in length. The RIP domain has been subnetted using a 24-bit
subnet mask, so the RIP routes will not be redistributed into OSPF. We can see this by creating a
loopback interface on router r3 with a class B address and 16-bit subnet mask.break
Router r3 configuration changes
interface Loopback0
  ip address 173.16.1.1 255.255.0.0
router rip
  redistribute ospf 100 metric 1
  passive-interface Ethernet0
  network 172.16.0.0

  network 173.16.0.0
Page 317
No changes need to be made to the OSPF router configuration on router r3. The routing table for
router r1 should now contain a route to network 173.16.0.0.
r1#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, *   - candidate default
  U - per-user static route, o - ODR
Gateway of last resort is not set
  172.16.0.0/24 is subnetted, 3 subnets
O IA    172.16.4.0 [110/11] via 172.16.3.2, 00:19:27, FastEthernet0/0
C       172.16.2.0 is directly connected, Loopback0
C       172.16.3.0 is directly connected, FastEthernet0/0
O E2    173.16.0.0/16 [110/10] via 172.16.3.2, 00:01:08, FastEthernet0/0
For OSPF to be able to redistribute RIP routes that are not using a natural subnet mask, we must
instruct OSPF to redistribute the subnet information for the RIP routes.
Enter configuration commands, one per line. End with CNTL/Z.
r3(config)#router ospf 100
r3(config-router)#redistribute rip metric 1?
   metric              Metric for redistributed routes
   metric-type         OSPF/IS-IS exterior metric type for redistributed route
   route-map           Route map reference
   subnets             Consider subnets for redistribution into OSPF
   tag                 Set tag for routes redistributed into OSPF
   <cr>
The keyword subnet needs to be used when redistributing RIP into OSPF. The new OSPF
configuration will allow the RIP routes to be redistributed into OSPF
router ospf 100
  redistribute rip metric 10 subnets
  network 172.16.4.0 0.0.0.255 area 2
Router r1 will now have routes to all the networks in the RIP routing domain.break
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
O IA     172.16.4.0 [110/11] via 172.16.3.2, 00:27:08, FastEthernet0/0
O E2   172.16.5.0 [110/10] via 172.16.3.2, 00:00:54, FastEthernet0/0
Page 318
O E2   172.16.6.0 [110/10] via 172.16.3.2, 00:00:54, FastEthernet0/0
C  172.16.2.0 is directly connected, Loopback0
C  172.16.3.0 is directly connected, FastEthernet0/0
O E2   173.16.0.0/16 [110/10] via 172.16.3.2, 00:00:54, FastEthernet0/0

The routes that were redistributed from RIP into OSPF have been tagged as external type 2
routes. Recall from Chap. 6 that there are two types of external routes. External type 1 routes
have a metric that is the sum of the cost to cross the OSPF domain plus the cost of the route from
the egress point of the OSPF domain to the route. An external type 2 metric only reflects the cost
from the egress point of the OSPF domain to the route. The default type for OSPF external routes
is type 2, as can be seen in router r1's routing table. The external route type can be set in the
OSPF redistribution command.
r3(config)#router ospf 100
r3(config-router)#redistribute rip metric 10?
   metric              Metric for redistributed routes
   metric-type         OSPF/IS-IS exterior metric type for redistributed route
   route-map           Route map reference
   subnets             Consider subnets for redistribution into OSPF
   tag                 Set tag for routes redistributed into OSPF
   <cr>
r3(config-router)#redistribute rip metric 10 metric-type?
  1 Set OSPF External Type 1 metrics
  2 Set OSPF External Type 2 metrics
r3(config-router)#redistribute rip metric 10 metric-type 1 subnets
The effect of setting the metric type of the redistributed routes is shown in router r1's routing
table.
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
O IA   172.16.4.0 [110/11] via 172.16.3.2, 00:29:52, FastEthernet0/0
O E1   172.16.5.0 [110/21] via 172.16.3.2, 00:00:06, FastEthernet0/0
O E1   172.16.6.0 [110/21] via 172.16.3.2, 00:00:06, FastEthernet0/0
C      172.16.2.0 is directly connected, Loopback0
C      172.16.3.0 is directly connected, FastEthernet0/0
O E1   173.16.0.0/16 [110/21] via 172.16.3.2, 00:00:06, FastEthernet0/0
If we want to set the metric type for network 172.16.5.0 to type 1 and for all other redistributed
routes to type 2, then a route map would need to be employed.break
Page 319
router ospf 100
  redistribute rip metric 10 subnets route-map ospf_type
  network 172.16.4.0 0.0.0.255 area 2
access-list 1 permit 172.16.5.0 0.0.0.255
route-map ospf_type permit 10
  match ip address 1
  set metric-type type-1
route-map ospf_type permit 20
  set metric-type type-2
When OSPF redistributes an RIP route the route map named ospf_type will be consulted. If

the route matches the network of access list 1, then the metric type will be set to 1. If the route
does not match the network of access list 1, then the next statement in the route map will be
executed. There is no match statement, so all other routes will have their metric type set to type
2.
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
O IA   172.16.4.0 [110/11] via 172.16.3.2, 00:51:15, FastEthernet0/0
O E1   172.16.5.0 [110/21] via 172.16.3.2, 00:04:16, FastEthernet0/0
O E2   172.16.6.0 [110/10] via 172.16.3.2, 00:03:16, FastEthernet0/0
C      172.16.2.0 is directly connected, Loopback0
C      172.16.3.0 is directly connected, FastEthernet0/0
O E2   173.16.0.0/16 [110/10] via 172.16.3.2, 00:03:16, FastEthernet0/0
Routers r1 and r2 are area border routers because they have interfaces in more than one OSPF
area. Router r3 is an autonomous system border router (ASBR) because it has an interface in the
OSPF domain and the RIP domain.
r2#show ip ospf border-routers
OSPF Process 100 internal Routing Table
Codes: i - Intra-area route, I - Inter-area route
I  172.16.2.1 [1] via 172.16.3.1, FastEthernet0, ABR, Area 0, SPF 5
I  172.16.5.1 [10] via 172.16.4.2, Ethernet0, ASBR, Area 2, SPF 4
In Chap. 10, the area range command was used to summarize routes from a nonbackbone
OSPF area into area 0. External routes can be summarized by an ASBR. Configure two
additional loopback interfaces on router r4 and enable RIP to advertise these routes.break
Router r4 configuration changes
interface Loopback1
  ip address 200.16.10.1 255.255.255.0
interface Loopback2
  ip address 200.16.11.1 255.255.255.0
Page 320
router rip
  network 172.16.0.0
  network 200.16.11.0
  network 200.16.10.0
OSPF will redistribute these new RIP routes on router r3, and they will be propagated to routers
r1 and r2.
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
O IA    172.16.4.0 [110/11] via 172.16.3.2, 01:05:33, FastEthernet0/0
O E1    172.16.5.0 [110/21] via 172.16.3.2, 00:12:53, FastEthernet0/0
O E2    172.16.6.0 [110/10] via 172.16.3.2, 00:12:53, FastEthernet0/0
C       172.16.2.0 is directly connected, Loopback0
C       172.16.3.0 is directly connected, FastEthernet0/0
O E2    173.16.0.0/16 [110/10] via 172.16.3.2, 00:12:53, FastEthernet0/0
O E2      200.16.10.0/24 [110/10] via 172.16.3.2, 00:02:01, FastEthernet0/0
O E2      200.16.11.0/24 [110/10] via 172.16.3.2, 00:02:01, FastEthernet0/0
Route summarization can be used on router r3 to reduce the amount of routing information that is

injected from the RIP domain into the OSPF domain.
r3(config)#router ospf 100
r3(config-router)#summary-address?
   A.B.C.D IP summary address
r3(config-router)#summary-address 200.16.0.0?
   A.B.C.D Summary mask
r3(config-router)#summary-address 200.16.0.0 255.255.0.0?
   <cr>
The two class C networks on router r4 have been summarizing using the supernet 200.10.0.0, as
shown in router r1's routing table.
r1#show ip route
  172.16.0.0/24 is subnetted, 5 subnets
O IA    172.16.4.0 [110/11] via 172.16.3.2, 00:00:02, FastEthernet0/0
O E1    172.16.5.0 [110/21] via 172.16.3.2, 00:00:02, FastEthernet0/0
O E2    172.16.6.0 [110/10] via 172.16.3.2, 00:00:02, FastEthernet0/0
C       172.16.2.0 is directly connected, Loopback0
C       172.16.3.0 is directly connected, FastEthernet0/0
O E2    173.16.0.0/16 [110/10] via 172.16.3.2, 00:00:02, FastEthernet0/0
O E2      200.16.0.0/16 [110/10] via 172.16.3.2, 00:00:02, FastEthernet0/0
An OSPF process also can advertise a default route and declare itself as the originator of the
default route. To accomplish this, we need to configure a default route and then allow OSPF to
advertise that it is the originator of the route.break
Page 321
Router r3 OSPF configuration
router ospf 100
summary-address 200.16.0.0 255.255.0.0
redistribute rip metric 10 subnets tag 666 route-map ospf_type
network 172.16.4.0 0.0.0.255 area 2
default-information originate metric 10
r2#show ip route
Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP
  D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
  N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
  E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP
  i - IS-IS, L1 - IS-IS, level-1, L2 - IS-IS level-2, * - candidate default
  U - per-user static route, o - ODR
Gateway of last resort is 172.16.4.2 to network 0.0.0.0
  172.16.0.0/16 is variably subnetted, 5 subnets, 2 masks
C       172.16.4.0/24 is directly connected, Ethernet0
O E1    172.16.5.0/24 [110/20] via 172.16.4.2, 00:26:54, Ethernet0
O E2    172.16.6.0/24 [110/10] via 172.16.4.2, 00:26:54, Ethernet0
O IA    172.16.2.1/32 [110/2] via 172.16.3.1, 01:19:28, FastEthernet0
C       172.16.3.0/24 is directly connected, FastEthernet0
O E2    173.16.0.0/16 [110/10] via 172.16.4.2, 00:11:42, Ethernet0
O*E2    0.0.0.0/0 [110/10] via 172.16.4.2, 00:12:07, Ethernet0
O E2  200.16.0.0/16 [110/10] via 172.16.4.2, 00:11:31, Ethernet0
OSPF and IGRP

Every issue that we examined for the case of OSPF and RIP redistribution is applicable to OSPF
and IGRP redistribution. To verify this claim, replace the RIP routing processes on routers r3 and
r4 with IGRP, as shown in Fig. 13-10.break
Figure 13-10
Example network for OSPF and IGRP route redistribution.
Page 322
Router r3 configuration
router ospf 100
  summary-address 200.16.0.0 255.255.0.0
  redistribute igrp 100 metric 10 subnets
  network 172.16.4.0 0.0.0.255 area 2
  default-information originate metric 10
router igrp 100
  redistribute ospf 100 metric 38 2000 255 1 1500
  network 173.16.0.0
  network 172.16.0.0
Router r4 configuration
router igrp 100
  network 172.16.0.0
  network 200.16.10.0
  network 200.16.11.0
Remember to use the subnets keyword when redistributing IGRP into OSPF. One final form of
the redistribute command that we need to cover uses the parameter match.
r3(config-router)#redistribute ospf 100?
   match          Redistribution of OSPF routes
   metric         Metric for redistributed routes
   route-map      Route map reference
   <cr>
r3(config-router)#redistribute ospf 100 match?
   external       Redistribute OSPF external routes
   internal       Redistribute OSPF internal routes
r3(config-router)#redistribute ospf 100 match external?
   1              Redistribute external type 1 routes
   2              Redistribute OSPF external type 2 routes
   external       Redistribute OSPF external routes
   internal       Redistribute OSPF internal routes

   match          Redistribution of OSPF routes
   metric         Metric for redistributed routes
   route-map Route map reference
   <cr>
OSPF has three types of routes, internal, external type 1, and external type 2. When we
redistribute OSPF routes using the command
redistribute ospf 100 metric 38 1000 255 1 1500 subnets
all OSPF routes, internal, external type 1, and external type 2, are automatically redistributed. We
can selectively choose which types of routes we want to redistribute. The forms of the
redistribute command and their effect are listed below.break
Page 323
redistribute ospf 100 metric 38 1000 255 1 1500 subnets match external interna
and
redistribute ospf 100 metric 38 1000 255 1 1500 subnets
are equivalent. In fact, if you type in the first form and list the configuration, you will see the
second form. Both forms will redistribute all OSPF routes.
Redistribute ospf 100 metric 38 1000 255 1 1500 subnets match external
This form will only redistribute OSPF external type 1 and type 2 routes and will block all OSPF
internal routes.
Redistribute ospf 100 metric 38 1000 255 1 1500 subnets match external 1
This form will only redistribute OSPF external type 1 routes and will block all OSPF internal
routes and external type 2 routes.
Redistribute ospf 100 metric 38 1000 255 1 1500 subnets match external 2
This form will only redistribute OSPF external type 2 routes and will block all OSPF internal
routes and external type 1 routes.
Redistribute ospf 100 metric 38 1000 255 1 1500 subnets match internal
This form will only redistribute OSPF internal routes and will block all OSPF external routes.
All forms can be used with RIP and EIGRP. An alternative is to redistribute all OSPF routes and
then use a route map to selectively block internal and external routes.
The final situation concerning IGRP and OSPF redistribution is the problem that occurs if OSPF
is using VLSM. We know that IGRP cannot handle VLSM, and OSPF will only redistribute
those OSPF routes which have the same subnet mask as the IGRP domain. For example, if we
create two new loopback interfaces on router r1 using a subnet mask that does not match the
subnet mask IGRP is using, then IGRP will not see the routes.break
Router r1 configuration

interface Loopback1
  ip address 172.16.20.1 255.255.255.240
interface Loopback2
  ip address 172.16.20.17 255.255.255.240
Page 324
router ospf 100
  network 172.16.3.0 0.0.0.255 area 0
  network 172.16.2.0 0.0.0.255 area 51
  network 172.16.20.0 0.0.0.15 area 3
  network 172.16.20.16 0.0.0.15 area 3
  area 3 range 172.16.20.0 255.255.255.0
r4#show ip route
  172.16.0.0/24 is subnetted, 4 subnets
I   172.16.4.0 [100/265257] via 172.16.5.1, 00:00:01, Serial0
C   172.16.5.0 is directly connected, Serial0
C   172.16.6.0 is directly connected, Loopback0
I   172.16.3.0 [100/266157] via 172.16.5.1, 00:00:01, Serial0
C   200.16.10.0/24 is directly connected, Loopback1
C   200.16.11.0/24 is directly connected, Loopback2
There are two ways to propagate networks 172.16.20.0 and 172.16.20.16 into the IGRP domain.
The first is with a static route. We can create the static route on router r3 and redistribute it into
IGRP, or we can create a static route on router r4. The static route would have to have the same
subnet mask length as the IGRP domain.
ip route 172.16.20.0 255.255.255.0 Serial0
This static route is sufficient to reach both the loopback interfaces on router r1. The other method
is to use the area range command on router r1 and summarize the two loopback addresses
into one route with an 8-bit subnet mask.
area 3 range 172.16.20.0 255.255.255.0
These techniques also apply to RIP Version 1.
OSPF and EIGRP
Every issue that we examined for the case of OSPF and IGRP redistribution is applicable to
OSPF and EIGRP redistribution. If you feel the need, replace the IGRP routing process on
routers r3 and r4 with EIGRP and verify that everything that we have covered with respect to
OSPF router redistribution still applies.break
Page 325
Summary
Redistributing routes between the various IP routing protocols can be treacherous if you forget
the properties of the protocols, their administrative distances, and the state of split horizon for

various configurations. Ensure that you understand how classful routing protocols (RIP and
IGRP) interact with each other and with classless routing protocols (IGRP and OSPF). Also
understand how route distribution and route advertisement can be controlled with distribution
lists, route maps, and passive interfaces.
This brings us to the end of this book, and I hope that the material and examples have helped you
to understand the operation and interaction of the IP routing protocols that are available on Cisco
routers. I want to leave you with a final comment about IP addresses and subnets. Throughout
this book I have said that the subnet containing all zeros or all ones was prohibited, and this
statement is usually true. The all-zeros subnet can be used if you use the following command in a
global configuration mode:
ip subnet-zero
Also, the Cisco IOS will allow a 1-bit subnet mask, which should only be used if you really need
to squeeze a few more addresses out of your IP address space assignment. Continue to practice
with the configurations contained in the book, and experiment with any configuration that you
can imagine. If the material in the book is well understood, then you should have no problem
configuring IP networks, whether in a production setting or on the CCIE examination.break
Page 327
Appendix A—
Solutions to Exercises
Exercise 2.1
For the following partial Ethernet frames (no preamble), determine source and destination
addresses, the type of the frame, the upper-layer protocol using the frame, and if possible, the
length of the frame.
1. 00000C1234560800B06AA350800ABACAB . . .
Destination address = 00000C123456
00000C12345608000B06AA350800ABACAB . . .
Source Address = 08000B06AA35
00000C12345608000B06AA350800ABACAB . . .
Frame type = Ethernet II because 0800 > 05DC
0800 = IP
Frame length is unknown.

2. 080001A1B2C37E46000000010300AAAA03A1B2C38138 . . .
Destination address = 080001A1B2C3
080001A1B2C37E46000000010300AAAA03A1B2C38138 . . .
Source address = 7E4600000001
080001A1B2C37E46000000010300 AAAA03A1B2C38138
Frame length = 3 * 256 = 768
080001A1B2C37E46000000010300AAAA03A1B2C38138 . . .break
Page 328
Frame type = Ethernet SNAP
080001A1B2C37E4600000001AAAA03A1B2C38138 . . .
Upper-layer protocol = 8138 = Novell
3. FFFFFFFFFFFF192834641243FFFF123456 . . .
Destination address = broadcast
FFFFFFFFFFFF192834641243FFFF123456 . . .
Source address = 192834641243
FFFFFFFFFFFF19283464123FFFF123456 . . .
Packet type = Novel IPX
Exercise 3.1
Create a table similar to Tables 3-4 and 3-5 for class A addresses.break
Class A Subnet Masks
Number of
Subnet Bits
         Subnet
          Mask
Number of
Subnetworks
Number of
Hosts/Subnet
Total Number
  of Hosts
     1
             —
—
—
  —
     2
255.192.0.0
2
  4194302
      8388604
     3
255.224.0.0
6
  2097150
    12582900
     4
255.240.0.0
14
  1048574
    14680036
     5
255.248.0.0
30
    524286
    15728580
     6
255.252.0.0
62
    262142
    16252804
     7
255.254.0.0
126
    131070
    16514820
8
255 255 0 0
254
65534
16645636

     8
255.255.0.0
254
   65534
   16645636
     9
 255.255.128.0
510
    32766
    16710660
  10
      255.255.192.0
1022
    16382
    16742404
  11
      255.255.224.0
2046
      8190
    16756740
  12
      255.255.240.0
4094
      4094
    16760836
(table continued on next page)
Page 329
(table continued from previous page)
Number of
Subnet Bits
        Subnet
         Mask
Number of
Subnetworks
Number of
Hosts/Subnet
Total Number
of Hosts
  13
    255.255.248.0
         8190
     2046
  16756740
  14
    255.255.252.0
       16382
     1022
  16742404
  15
    255.255.254.0
       32766
       510
  16710660
  16
    255.255.255.0
       65534
       254
  16645636
  17
 255.255.255.128
     131070
       126
  16514820
  18
 255.255.255.192
     262142
         62
  16252804
  19
 255.255.255.224
     524286
         30
  15728580
  20
 255.255.255.240
    1048574
         14
  14680036
  21
 255.255.255.248
    2097150
           6
  12582900
  22
 255.255.255.252
    4194302
           2
   8388604
  23
—
         —
        —
—
  24
—
         —
         —
—
Exercise 3.2
Complete Table 3-6.
 IP Address
     Subnet
       Mask
Valid
 Pair?
    Network
    Number
Range
of Hosts
144.223.136.231
255.255.255.192
Yes
144.223.136.192
    193–254
184.16.34.10
255.255.255.224
Yes
        184.16.34.0
 1–30
12.14.1.2
       255.255.0.0
Yes
             1214.0.0
0.1–255.254
193.15.16.1
255.255.255.252
No
For IP address 193.15.16.1/255.255.255.252, the subnet is 0, so it is not a valid pair. If the
command ip subnet-zero is used, then the pair is valid, the network number is 192.15.16.0,

and the hosts are 1 and 2.break
Page 330
Exercise 3.3
Determine all the subnet numbers for the address/mask pair 193.128.55.0/255.255.255.240. Also
determine the range of host addresses and the broadcast address for the fourth subnet.
Network
Hosts
193.128.55.0
1–14 (if ip subnet-zero is used)
193.128.55.16
17–30
193.128.55.32
33–46
193.128.55.48
49–62 (broadcast address = 193.128.55.63)
193.128.55.64
65–78
193.128.55.80
81–94
193.128.55.96
97–100
193.128.55.112
113–126
193.128.55.128
129–142
193.128.55.144
145–158
193.128.55.160
161–174
193.128.55.176
177–190
193.128.55.192
193–206
193.128.55.208
209–222
193.128.55.224
225–238
193.128.55.240
241–254
Exercise 3.4
Design a network using the class C address 200.100.50.0 that satisfies the following
requirements:
__ Nine serial point-to-point links
__ Four networks with a maximum of 30 hosts
__ Three networks with a maximum of 5 hostsbreak
Page 331
Determine the address host ranges and the broadcast address for each subnet. From Table 3-5, a
3-bit subnet mask will give us 5 networks of 30 hosts each.

Subnet mask = 255.255.255.224.
Networks
Hosts
  Broadcast  
    Address
200.100.50.0
  1–30
 200.100.50.31 (if we use ip subnet-zero)
200.100.50.32
33–62
 200.100.50.63
200.100.50.64
65–94
 200.100.50.95
200.100.50.96
 97–126
200.100.50.127
200.100.50.128
129–158
200.100.50.159
200.100.50.160
161–190
200.100.50.191
200.100.50.192
193–222
200.100.50.223
One solution is to use the first 4 networks to satisfy the requirement of 4 networks with 30 hosts
each. For the requirement of 3 networks with 5 hosts each, we can sub-subnet network
200.100.50.160 using the 5-bit subnet mask 200.100.50.160/255.255.255.248, which gives us the
net-works listed below.
Network
Hosts
Broadcast Address
200.100.50.160
161–166
200.100.50.167
200.100.50.168
169–174
200.100.50.175
200.100.50.176
177–185
200.100.50.183
200.100.50.184
185–190
200.100.50.191
We can use any of 3 of the 4 networks to satisfy the requirements of 3 networks with 5 hosts.
Finally we can sub-subnet the 200.100.50.192 network using a 30-bit subnet mask, which gives
us the networks listed below.break
Page 332
  Network
Hosts
Broadcast Address
200.100.50.192
193–194
200.100.50.195
200.100.50.196
197–198
200.100.50.199
200.100.50.200
201–202
200.100.50.203
200.100.50.204
205–206
200.100.50.207
200.100.50.208
209–210
200.100.50.211
200.100.50.212
213–214
200.100.50.215
200.100.50.216
217–218
200.100.50.219
200.100.50.220
221–222
200.100.50.223
200.100.50.224
225–226
200.100.50.227
200 100 50 228
229 230
200 100 50 231

200.100.50.228
229–230
200.100.50.231
200.100.50.232
233–234
200.100.50.235
200.100.50.236
237–238
200.100.50.237
200.100.50.240
241–242
200.100.50.243
200.100.50.244
245–246
200.100.50.247
200.100.50.248
249–250
200.100.50.249
Choose any 9 of the networks for the serial links.
Exercise 4.1
In Fig. 4-7, host 1 wants to send IP packets to host 2. Assume that host 1 has an empty ARP
cache. Determine the sequence of events that allows host 1 to send IP packets to host 2.
Host 1, 156.26.1.1, is sending to host 2, 156.26.2.1. Since they are on the same IP subnet, host 1
will send an ARP request onto the network. The bridge will forward the broadcast to host 2. Host
2 will reply with its Ethernet address.
When host 2 receives an IP packet from host 1, what is the source Ethernet address of the frame
received by host 2. What is the source IP address received by host 2?
Source Ethernet address = host 1's Ethernet address
Source IP address = host 1's IP addressbreak
Page 333
Figure 4-7
Network for Exercise 4.1.
Exercise 4.2
In Fig. 4-8, host 1 wants to send IP packets to host 2. Assume that host 1 has an empty ARP

cache. Determine the sequence of events that allows host 1 to send IP packets to host 2.
Since host 2 is on a different subnet than host 1, host 1 will send the packet directly to the
gateway at address 156.26.1.2. Host 1 will first ARP for the Ethernet address for IP address
156.26.1.2 and then send the Ethernet frame to router A. Router A will forward the frame to
router B, assuming that router B is router A's default gateway. Router B will ARP on network
156.26.2.0, and host 2 will replay with its Ethernet address. Router B can now send the frame to
host 2.break
Figure 4-8
Network for Exercise 4.2.
Page 334
When host 2 receives an IP packet from host 1, what is the source Ethernet address of the frame
received by host 2. What is the source IP address received by host 2?
Source Ethernet address = 00 00 1c 00 00 04
Source IP address = 156.26.1.1break
Page 335
Index
A
ABR (see Area border router)
Access lists:
dynamic, 117-119
extended IP, 109-117

destination address, 110-112
ICMP filtering, 115-116
source address, 110
UDP packet filtering, 112-115
standard IP, 100-105
Address:
Burned-In-, 18
Ethernet, 18-19
IP, 26-30
MAC, 18, 20
Address resolution, 48
Address Resolution Protocol (ARP), 48-54
multiple networks, 50-52
single network, 48-50
Adjacencies, 76
Area border router (ABR), 76, 220
area command (OSPF), 216-230
authentication subcommand, 217-219
default-cost subcommand, 219-220
nssa subcommand, 220
range subcommand, 220-228
stub subcommand, 229
virtual-link subcommand, 229-230
ARP (see Address Resolution Protocol)
AS (see Autonomous system)
ASBR (see Autonomous system border router)
AS-external link-state advertisements, 89

Authentication, user, 118
authentication command (OSPF), 217-219
authentication password command (OSPF), 239
auto-summary command (RIP), 129
auto-summary configuration command (EIGRP), 186-187
Autonomous system (AS), 56, 68
Autonomous system border router (ASBR), 76
B
Backbone areas, 72-73
Backup designated router (BDR), 76, 80-81
Backward-explicit congestion notification (BECN), 253
BDR (see Backup designated router)
BECN (see Backward-explicit congestion notification)
BIA (see Burned-In-Address)
Bits, wildcard, 101, 207-208
Bridge Protocol data units (BPDUs), 11
Bridges, 5-10
definition of, 5
failure of, 8-10
and Spanning Tree Protocol, 10-11
and switches, 12
transparency of, 8
Bridging table, 6-8
Broadcast networks, 73
Broadcasts, Ethernet, 8
Buffering, 8
Burned-In-Address (BIA), 18

Bus architecture, 16
C
Classful IP addressing, 27-30
Collisions, 16-18
Comer, Douglas E., 119
Convergence, 60
cost command (OSPF), 240
Count-to-infinity problem, 61-62
CSMA/CD (Carrier Sense Multiple Access with Collision Detect), 16
D
Data circuit-terminating equipment (DCE), 252, 253, 262, 263
Data terminal equipment (DTE), 252, 253, 263-264
Database description packets, 90-91
Data-link connection identifiers (DLCIs), 252-253, 262-264, 268-269
Data-link layer (OSI model), 3
DCE (see Data circuit-terminating equipment)
dead-interval command (OSPF), 240
Debugging:
EIGRP, 202-203
IGRP, 174-176
OSPF, 246-249
RIP, 148
DEC, 19
default-cost command (OSPF), 219-220
default-information command:
EIGRP, 187

IGRP 159
OSPF, 230
RIP Version 1, 129
default-metric command:
EIGRP, 187
IGRP, 159-160
OSPF, 230
RIP Version 1, 129
Demand circuits, 269-270
demand-circuit command (OSPF), 242
Designated router (DR), 74, 80-81
Destination Service Access Point (DSAP), 21
Diffusing Update Algorithm (DUAL), 180
distance command:
EIGRP 187-191
IGRP, 160-162
OSPF, 230-233
RIP Version 1, 129-132break
Page 336
Distance-vector routing protocols, 68
distribute-list command:
EIGRP 191-195
IGRP, 162-167
OSPF, 233
RIP Version 1, 132-136
DLCIs (see Data-link connection identifiers)

Dotted decimal notation, 27
DR (see Designated router)
DSAP (see Destination Service Access Point)
DTE (see Data terminal equipment)
DUAL (see Diffusing Update Algorithm)
Dynamic access lists, 117-119
E
EGPs (see Exterior gateway protocols)
EIGRP (see Enhanced Interior Gateway Routing Protocol)
Enhanced Interior Gateway Routing Protocol (EIGRP), 180-203
auto-summary configuration command, 186-187
debugging, 202-203
default-information configuration command, 187
default-metric configuration command, 187
distance configuration command, 187-191
distribute-list configuration command, 191-195
exit configuration command, 195-196
help configuration command, 196
interface commands, 199-201
maximum-paths configuration command, 196
neighbor configuration command, 196
network configuration command , 196
no configuration command, 196-197
OSPF vs., 207
passive-interface configuration command, 197
redistribute configuration command, 198
Enhanced Interior Gateway Routing Protocol

(Cont.):
route redistribution
between IGRP and EIGRP, 307-314
between OSPF and EIGRP, 324
between RIP and EIGRP, 303-307
routing process, enabling, 181-186
timers configuration command, 198
traffic-share configuration command, 198
variance configuration command, 198-199
Ethernet, 4-6, 16-24
addresses in, 18-19
frame formats in, 19-23
differentiation of, 23
IEEE 802.3/802.2, 21-22
IEEE 802.3 SNAP, 22-23
Novell proprietary, 21
Version II, 20-21
as technology, 16-18
Ethernet broadcasts, 8
Ethernet Version II frame format, 20-21
exit command:
EIGRP, 195-196
IGRP, 167
OSPF, 233
RIP Version 1, 136
Extended IP access lists, 109-117
destination address, 110-112

ICMP filtering, 115-116
source address, 110
UDP packet filtering, 112-115
Exterior gateway protocols (EGPs), 56, 64
External routes, 76
F
FCS (see Frame Check Sequence)
FECN (see Forward-explicit congestion notification)
Filtering, packet, 112-116
Flooding, 68, 76, 78
Flush time, 141, 172
Forward-explicit congestion notification (FECN), 253
Frame Check Sequence (FCS), 20-21
Frame formats (Ethernet):
differentiation of, 23
IEEE 802.3/802.2, 21-22
IEEE 802.3 SNAP, 22-23
Novell proprietary, 21
Version II, 20-21
Frame Relay, 252-269
configuration of, 258-261
point-to-point fully meshed topology, 261-264
point-to-point partially meshed topology, 265-269
topology types with, 254-257
Fully meshed point-to-point topology, 261-264
G

Garbage-collection timer, 61
H
Headers (OSPF packets), 78-79
Hello protocol, 77-79
hello-interval command (OSPF), 240-241
help command:
EIGRP, 196
IGRP, 167
OSPF, 233
RIP Version 1, 136
Hold down, 62
Hold-down time, 141, 172
Hop count, 56-61
Hosts, 27
Hub-and-spoke topologies, 255
I
ICMP (see Internet Control Message Protocol)
IEEE (see Institute of Electrical and Electronic Engineers)
IEEE 802.3/802.2 frame format, 21-22
IEEE 802.3 SNAP frame format, 22-23
IEEE 802.1 Spanning Tree Protocol, 10-11
IGPs (see Interior gateway protocols)break
Page 337
IGRP (see Interior Gateway Routing Protocol)
Institute of Electrical and Electronic Engineers (IEEE), 18, 19
Intel, 19

Interarea routing, 76
Interface, 73
Interface-state routing protocols, 68
Interior gateway protocols (IGPs), 56, 64, 68
Interior Gateway Routing Protocol (IGRP), 152-177
debugging, 174-176
default-information configuration command, 159
default-metric configuration command, 159-160
distance configuration command, 160-162
distribute-list configuration command, 162-167
EIGRP vs., 180
exit configuration command, 167
help configuration command, 167
maximum-paths configuration command, 167
neighbor configuration command, 167-168
network configuration command, 168
no configuration command, 168
offset-list configuration command, 168-170
OSPF vs., 207
passive-interface configuration command, 170-171
redistribute configuration command, 171
route redistribution
between EIGRP and IGRP, 307-314
between OSPF and IGRP, 321-324
between RIP and IGRP, 272-303
routing process, enabling, 152-159
timers configuration command, 171-173

traffic-share configuration command, 173
validate-update-source configuration command, 173
variance configuration command, 173-174
(See also Enhanced Interior Gateway Routing Protocol)
Internet Control Message Protocol (ICMP), 115-116
Internet Protocol (IP), 26-45
address format in, 26-27
classful addressing in, 27-30
data packet format in, 98-99
dynamic access lists with, 117-119
extended access lists in, 109-117
destination address, 110-112
ICMP filtering, 115-116
source address, 110
UDP packet filtering, 112-115
standard access lists in, 100-105
subnets in, 30-39
and Transmission Control Protocol, 107-109
and User Datagram Protocol, 106-107
variable-length subnet masks in, 39-44
Intraarea routing, 76
ip hold-time eigrp command (EIGRP), 200
ip split-horizon command (EIGRP), 200
ISDN, 70, 270
L
Links, 73
Link-state acknowledgment packets, 92

Link-state advertisements (LSAs), 76, 83-89
AS-external, 89
network, 87-88
router, 85-87
summary, 88
Link-state database, 84-85
Link-state request packets, 91
Link-state routing protocols, 68
Link-state update packets, 91-92
LLC (see Logical Link Control)
LMI (see Local management interface)
Local link states, 68
Local management interface (LMI), 253, 264, 269
Lock-and-key security, 118
Logical Link Control (LLC), 21
Loop-free topology, 10-11
LSAs (see Link-state advertisements)
M
MAC address (see Media Access Control address)
maximum-paths configuration command:
EIGRP, 196
IGRP, 167
OSPF, 234
Media Access Control (MAC) address, 18, 20
message-digest-key command (OSPF), 242
MTU field, 90
Multiple networks, address resolution with, 50-52

Multipoint configuration, 256, 257, 268-269
N
NBMA networks (see Nonbroadcast multiaccess (NBMA) networks)
neighbor command:
EIGRP, 196
IGRP, 167-168
OSPF, 234
RIP Version 1, 136-137
Neighboring routers, 73
network command:
EIGRP, 196
IGRP, 168
OSPF, 234, 242
RIP Version 1, 137
Network layer (OSI model), 3, 98
Network link-state advertisements, 87-88
Networks, 27
broadcast, 73
nonbroadcast, 73-76
no command:
EIGRP, 196-197
IGRP, 168
OSPF, 234
RIP Version 1, 137break
Page 338
no ip split-horizon command (EIGRP), 200

Nonbackbone areas, 72, 76
Nonbroadcast multiaccess (NBMA) networks, 74, 81
Nonbroadcast networks, 73-76
Not-so-stubby area (NSSA) option, 92-95
Novell frame format, 21
NSSA (see Not-so-stubby area (NSSA) option)
nssa command (OSPF), 220
O
offset-list command:
IGRP, 168-170
RIP Version 1, 137-139
Open Shortest Path First (OSPF), 2, 68-95, 206-250
area configuration command, 216-230
authentication subcommand, 217-219
default-cost subcommand, 219-220
nssa subcommand, 220
range subcommand, 220-228
stub subcommand, 229
virtual-link subcommand, 229-230
database description packets in, 90-91
debug commands, 246-249
default-information configuration command, 230
default-metric configuration command, 230
and demand circuits, 269-270
designated router election in, 80-83
distance configuration command, 230-233
distribute-list configuration command, 233

exit configuration command, 233
Frame Relay networks, 252-269
configuration, 258-261
point-to-point fully meshed topology, 261-264
point-to-point partially meshed topology, 265-269
topology types, 254-257
help configuration command, 233
interface commands, 239-243
link-state acknowledgment packets in, 92
link-state advertisements in, 83-89
AS-external LSAs, 89
network LSAs, 87-88
router LSAs, 85-87
summary LSAs, 88
link-state request packets in, 91
link-state update packets in, 91-92
maximum-paths configuration command, 234
monitoring, 243-246
neighbor configuration command, 234
network configuration command, 234
no configuration command, 234
not-so-stubby area option, 92-95
ospf configuration command, 234-237
packet formats in, 78-80
passive-interface configuration command, 237-238
redistribute configuration command, 238
RIP vs., 68, 70-71

route redistribution
between EIGRP and OSPF, 324
between IGRP and OSPF, 321-324
between RIP and OSPF, 314-321
routing process, enabling, 206-216
routing protocol packets in, 77-78
technical overview of, 68-73
terminology, 73-77
timers configuration command, 238-239
Open Systems Interconnection (OSI) model, 2-3
OSPF (see Open Shortest Path First)
ospf configuration command (OSPF), 234-237
OSPF wild-card bits, 207-208
P
Packet filtering, 112-116
Packet formats:
IP, 98-99
OSPF, 78-80
Partially meshed point-to-point topology, 265-269
passive-interface command:
EIGRP, 197
IGRP, 170-171
OSPF 237-238
RIP Version 1, 139-140
Permanent virtual connections (PVCs), 254-257, 263-265
Physical layer (OSI model), 3
Point-to-point topologies, 255

fully meshed, 261-264
partially meshed, 265-269
Poisoned reverse, split horizon with, 62
priority command (OSPF), 242-243
Pseudoheader, 107
PVCs (see Permanent virtual connections)
R
range command (OSPF), 220-228
redistribute command:
EIGRP, 198
IGRP, 171
OSPF, 238
RIP Version 1, 140
Redistribution, route, 272-325
definition of, 276-277
EIGRP
between IGRP and, 307-314
between OSPF and, 324
between RIP and, 303-307
IGRP
between EIGRP and, 307-314
between OSPF and, 321-324
between RIP and, 272-303
OSPF
between EIGRP and, 324
between IGRP and, 321-324
between RIP and, 314-321

RIP
between EIGRP and, 303-307
between IGRP and, 272-303
between OSPF and, 314-321break
Page 339
retransmit interval command (OSPF), 241
RFC 1058, 56, 64
RFC 1723, 63, 64
RFC 2178, 80
RIP (see Routing Information Protocol)
Routable protocols, 3
Route maps, 282
Route redistribution (see Redistribution, route)
Route summarization, 76-77, 220-228
Router ID, 73
Router link-state advertisements, 85-87
Router(s), 12-13
area border, 76
autonomous system border, 76
backup designated, 76
designated, 74
neighboring, 73
Routing, interarea, 76
Routing, intraarea, 76
Routing Information Protocol (RIP), 56-66
configuration of:

Version 1, 122-143
Version 2, 143-146
and count-to-infinity problem, 61-62
debugging, 148
EIGRP vs., 180
hold down with, 62
IGRP vs., 152-154
interoperability of Version 1 and Version 2 of, 146-148
OSPF vs., 68, 70-71, 207
route redistribution:
between EIGRP and RIP, 303-307
between IGRP and RIP, 272-303
between OSPF and RIP, 314-321
split horizon technique with, 62
technical overview of, 56-61
triggered updates in, 63
Version 1 of, 122-143
auto-summary configuration command, 129
default-information configuration command, 129
default-metric configuration command, 129
distance configuration command, 129-132
distribute list configuration command, 132-136
exit configuration command, 136
help configuration command, 136
minimum configuration, 125
neighbor configuration command, 136-137
network configuration command, 137

no configuration command, 137
offset-list configuration command, 137-139
passive-interface configuration command, 139-140
redistribute configuration command, 140
timers configuration command, 140-141
validate-update-source configuration command, 141-142
version configuration command, 142-143
Version 2 of, 63-64, 143-146
and VLSM, 63
Routing process number, 153, 181
S
Security, lock-and-key, 118
Shared media, 5, 16
show command:
EIGRP, 200-201
OSPF, 243-246
Sleep time, 141, 172
SNAP (see SubNetwork Access Protocol)
Source Service Access Point (SSAP), 21
Spanning Tree Protocol, 10-11
Split horizon technique, 62
SSAP (see Source Service Access Point)
Standard IP access lists, 100-105
Star architecture, 16
State, 68
Static routes, 274
Stevens, W. Richard, 119

Stub area, 77, 219
stub command (OSPF), 229
Subinterfaces, 255
Subnet masks, 30-39
OSPF, 80
variable-length, 39-44
Subnets, IP, 30-39
SubNetwork Access Protocol (SNAP), 22-23
Summarization, route, 76-77
Summary link-state advertisements, 88
Switched virtual circuits (SVCs), 254-255
Switches, 12
T
TCP (see Transmission Control Protocol)
Timeout timer, 61
Timers for RIP updates, 60-61
timers command:
EIGRP, 198
IGRP, 171-173
OSPF, 238-239
RIP Version 1, 140-141
traffic-share configuration command:
EIGRP, 198
IGRP, 173
Transmission Control Protocol (TCP), 4, 107-109
transmit-delay command (OSPF), 241-242
Transport layer (OSI model), 3

Triggered updates, 63
TTL field, 99
Tunneling, 13
Type 7 AS external LSAs, 94-95
U
UDP (see User Datagram Protocol)
UDP packet filtering, 112-115
Unshielded twisted-pair (UTP), 16
Update timer, 172break
Page 340
Updates, triggered, 63
User authentication, 118
User Datagram Protocol (UDP), 4, 106-107
UTP (see Unshielded twisted-pair)
V
validate-update-source command:
IGRP, 173
RIP Version 1, 141-142
Variable-length subnet masks (VLSMs), 39-44, 63, 180, 310, 323
variance configuration command:
EIGRP, 198-199
IGRP, 173-174
version command (RIP Version 1), 142-143
Virtual LANs (VLANs), 18
virtual-link command (OSPF), 229-230
VLANs, (see Virtual LANs)

VLSMs (see Variable-length subnet masks)
W
Wildcard bits, 101, 207-208
X
Xerox, 19
About the Author
William R. Parkhurst, Ph.D., CCIE, developed and led the CCIE Preparation Lab at Wichita
State University, which prepares students for the two-day hands-on test required by Cisco of all
CCIE candidates. A former associate electrical and computer engineering professor at Wichita
State, Dr. Parkhurst is now a senior member of the technical staff at Sprint-Paranet.

