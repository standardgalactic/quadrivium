
PREFACE
ABOUT THE BOOK
This book contains 200 very important JavaScript interview questions.
ABOUT THE AUTHOR
Happy Rawat has around 15 years of experience in software development. 
He helps candidates in clearing technical interview in tech companies. 

Top 100 HTML, CSS, Bootstrap Interview Q&A
HTML
1. Basics & Document Structure
2. HTML Elements & Tags – Part I
3. HTML Elements & Tags – Part II
4. HTML Attributes
5. HTML Links & Navigation
6. HTML Lists & Tables
7. HTML Images & Multimedia
8. HTML Forms
9. Best Practices & Deployment
10. Responsiveness & Others
CSS
1. Basics & Implementation
2. Selectors in CSS
3. Layout and Positioning
4. Responsive Design
Bootstrap
1. Bootstrap

Q. What is HTML? Differences between HTML & HTML5? Advantages of HTML5?
Q. What is the difference between HTML and XHTML?
Q. What is the role of DOCTYPE in HTML?
Q. What if you remove <!DOCTYPE html> from your HTML?
Q. Difference between Head & Body in HTML? Where to place JS link reference?
Q. What is Title Tag in HTML? What are the 4 advantages of Title tag?
Q. What are Meta Tags? What are the 5 types of meta tags?
1. HTML Basics & Document Structure

Q. What is HTML? Differences between HTML & HTML5? Advantages of HTML5?
❖HTML(HyperText Markup Language) is 
the standard markup language used to 
create web pages. 
❖Markup language meaning a language 
which define the structure of a 
document using elements like 
headings, paragraphs, links, lists, and 
more.
❖HTML is not a programming language, 
it’s a markup language like XML.
Hyper
Text
Markup
Language

Old HTML/ HTML4
HTML/ HTML5
❖HTML5 is the fifth and latest version of HTML. 
Q. What is HTML? Differences between HTML & HTML5? Advantages of HTML5?

5 Advantages of HTML5:
1. New Semantic Elements:  <header>, <nav>, <article>, <section>, <aside>, <footer>
2. Form Input Types: <input type="date">, <input type="email">
3. Audio and Video Support: <audio>, <video>
4. Mobile Compatibility
5. Simpler Code
Q. What is HTML? Differences between HTML & HTML5? Advantages of HTML5?

Q. What is the difference between HTML and XHTML?
HTML/ HTML5
XHTML
❖XHTML(eXtensible HyperText Markup Language) is a markup 
language that follows the rules of XML to define the 
structure of web pages.

Q. What is the difference between HTML and XHTML?

Q. What is the difference between HTML and XHTML?
HTML/ HTML5
XHTML
1. HTML has more lenient syntax rules. 
Closing tag is not mandatory for some elements.
<img src="image.jpg" alt="Description">.
XHTML follows stricter syntax rules. 
All tags must be properly nested and closed. 
<img src="image.jpg" alt="Description" />
2. HTML is not case-sensitive.
<DIV>, <P> will work.
XHTML is case-sensitive. 
<div>, <p> will work.
3. HTML is widely supported by all browsers and 
web platforms.
XHTML has limited support by browsers.

Q. What is the role of DOCTYPE in HTML?
❖DOCTYPE(Document Type) declaration specifies the 
version of HTML.
❖DOCTYPE tells the browser which version of HTML it 
is and how to interpret the code.

Q. What if you remove <!DOCTYPE html> from your HTML?
❖Then browsers can still render the page, but they will not 
be able to validate the version of HTML, therefore it may 
lead to some compatibility issues with SEO or debugging.

Q. Difference between Head & Body in HTML? Where to place JS link reference?
❖The <head> element is where you place meta-
information (information about the document ). 
For example,  <title>, <meta>, <link>, <script>, 
<style> are normally kept under head element.
❖The <body> element is where you place the actual 
content of your HTML web page. For example, 
<div>, <h1>, <p>, <img>, <a> are normally kept 
under body element.
❖Head will load before the body, therefore, if you 
are manipulating HTML elements in your JS 
functions, then place the JS link at the end of the 
body section because until then all the elements 
will be loaded. Else, place it inside the head tag.

Q. What is Title Tag in HTML? What are the 4 advantages of Title tag?
❖The <title> tag in HTML is used to define the title of a 
web page.

Q. What is Title Tag in HTML? What are the 4 advantages of Title tag?
❖Advantages of title tag:
1. Window Title: <title> element text is displayed in the tab of the browser.
2. SEO: Search engines use the title as the main heading for search results. 
3. Bookmarks/Favorite: Title tag is used as the default name for the bookmark.
4. Social Media Sharing: Title tag is used as the default title in the shared post.

Q. What are Meta Tags? What are the 5 types of meta tags?
❖Meta tags in HTML are elements used to provide 
metadata or additional information about a web 
page. 
5 Types of 
Meta Tags
1. charset
2. viewport
3. description
4. keywords
5. author

Q. What are Meta Tags? What are the 5 types of meta tags?
1. Character Encoding:
This helps browsers to interpret the 
different characters in the 
document. The charset="UTF-8" 
attribute ensures that characters 
from different languages will be 
displayed correctly in the browser.
2. Responsive Design:
viewport meta tag is 
crucial for creating 
mobile-friendly, 
responsive web 
designs for various 
screen sizes.
3. Description for SEO:
This meta tag provides 
description of the 
content of the page. 
Search engines may use 
this for search results.
4. Keywords for SEO:
This meta tag used 
to be important for 
search engines, but 
it's now of less 
importance.
5. Author Info:
This meta tag 
can be used to 
specify the 
author of the 
document.

2. HTML Elements & Tags – Part I
Q. What are HTML Elements? What is the difference between Element & Tag?
Q. What are the roles and uses of the <div> element in HTML?
Q. What is the difference between <div> and <span> element?
Q. What is the role of <p>, <a>, <br>, <hr>, <em>, <img>, <input> & <button>
elements?
Q. What is the role of header, main, section, footer & address elements in HTML?
Q. What is the role of Heading tags in HTML? How does it impact SEO?
Q. What is the difference between <section> & <article> elements?

Q. What are HTML elements? What is the difference between Element & Tag?
❖HTML elements are the building blocks of web pages.
❖Element consists of a start tag, content, and an end tag. 
❖Tag is a specific part of an element that denotes the 
beginning or end of that element.
Opening Tag
Closing Tag
Content/ Text
HTML Element

Top 10 most common used HTML elements
1. Paragraph Element: Defines a block of text.<p>.
2. Heading Elements: <h1> <h2><h3><h4><h5><h6>.
3. Header and Footer Elements: <header> and <footer>.
4. Sectioning Elements: <section>, <article>, <nav>, <aside>, <main>.
5. Image Element: Embeds images into a webpage.<img> (self-closing).
6. List Elements: <ul> (unordered list), <ol> (ordered list) ), <li> (list item).
7. Anchor Element (Link): Creates hyperlinks to other pages or resources.<a>.
8. Division Element: <div> groups together content for applying styles or scripting.<div>.
9. Table Elements: <table>, <tr> (table row), <th> (table header) and <td> (table data).
10. Form Elements: Used for creating forms.<form>, <input>, <button>, <select>, <textarea>, etc.
Q. What are HTML elements? What is the difference between Element & Tag?

Q. What are the roles and uses of the <div> element in HTML?
❖The <div>(division) element in HTML is a container that is 
used to group and structure the content on a webpage.
❖Top 3 uses of <div> element:
• It allows you to group together related 
elements.
1. Grouping & structuring Content:
• <div> elements are used to apply common 
styles or css to grouped elements.
2. Styling and Layout:
• JavaScript and other scripting languages can 
target <div> elements to manipulate their 
content or behavior.
3. Scripting:

Q. What is the difference between <div> and <span> element?
❖The <div>(division) element in HTML is a container that is used to 
group and structure the content on a webpage.
❖The <span> element in HTML is an inline container used to apply 
styles or scripting to a specific section of text or content.
❖<div> is a block-level element and <span> is an inline element.

Q. What is the role of <p>, <a>, <br>, <hr>, <em>, <img>, <input> & <button> elements?
• Defines a paragraph of text. 
1. <p>
• Creates a hyperlink. The href attribute 
specifies the url and content is the 
text of hyperlink.
2. <a>
• Inserts a line break.
3. <br>
• Creates a horizontal line break.
4. <hr>

Q. What is the role of <p>, <a>, <br>, <hr>, <em>, <img>, <input> & <button> elements?
• Emphasizes text displayed in italics. 
1. <em>
• Embeds an image. The src attribute 
specifies the image file, and alt 
provides alternative text.
2. <img>
• Creates an input field within a form.
3. <input>
• Creates a clickable button.
4. <button>

Q. What is the role of header, main, section, footer & address elements in HTML?
❖<header>, <main>, <section> and <footer> 
are semantic elements, used to define the 
layout and structure of a webpage in a 
meaningful and organized way. 
Contains the header content of 
website.
<header>
Contains the main content of the 
document.
<main>
contains the group related content. 
<footer>
provides contact information.
<address>

Q. What is the role of Heading tags in HTML? How does it impact SEO?
❖Heading tags in HTML are used to define 
the headings of sections within a webpage.
❖Top 3 uses of heading tags:
1. Organization & Readability: Heading tags 
organize the content in better way, making 
it easier for users to understand the 
organization of the page.
2. SEO (Search Engine Optimization): Search 
engines use headings to understand the  
importance of content. 
3. Styling and Layout: For example, same CSS 
can be applied to all h1 tags to show their 
importance. That will help in creating 
consistent layouts.

Q. What is the difference between <section> & <article> elements?
❖The <section> element is a generic container used 
to group related content together.
❖The <article> element represents a self-contained or 
independent piece of content with a title and 
content. For example: a blog post, a news article, a 
forum post, a comment, etc.
❖Article example: offer

3. HTML Elements & Tags – Part II
Q. What are Root, Parent, Child & Nested elements?
Q. What are Empty Elements?
Q. What are Semantic Elements in HTML?
Q. Can HTML tags be written in Uppercase?
Q. What are the 3 differences between Block-Level & Inline Elements?
Q. List all Block-Level & Inline Elements in HTML.

Q. What are Root, Parent, Child & Nested elements?
<html>(Root)
<head>(Parent)
<meta>(child)
<title>(child)
<link>(child)
<script>(child)
<body>(Parent)
<div>(Parent for h1 & ul)
(Child/ Nested for body)
<h1>
<ul>
<li>
<li>

Q. What are Root, Parent, Child & Nested elements?
1. The root element is the highest-level element in the 
hierarchy of an HTML document. In HTML5, the root 
element is <html>.
2. A parent element is an element that contains other 
child elements. 
3. A child or nested element is an element that is 
contained within a parent element. Child and nested 
elements are same.

Q. What are Empty Elements?
❖An empty element in HTML is an element that 
doesn't need content between opening and 
closing tags. 
❖Empty elements are also called a self-closing
or void elements.
❖Empty elements in HTML: <img>, <input>, 
<br>, <hr>, <meta>, <link>, <area>, <base>, 
<col>, <embed>.

Q. What are Semantic Elements in HTML? Is div a semantic element?
❖Semantic elements in HTML are elements that 
provide meaning to the content they contain.
❖<div> is not a semantic element, because div is 
a general-purpose structural element. It 
doesn’t give any meaning to the content.
Top 5 Semantic elements
1. <header>
2. <main>
3. <section>
4. <footer>
5. <address>

Q. What are Semantic Elements in HTML? Is div a semantic element? 
❖10 more semantic elements:
1. <progress> - Displays the progress of a task.
2. <nav> - Contains navigation links for a webpage.
3. <time> - Represents a specific period in time or a date.
4. <mark> - Highlights parts of the text for reference or emphasis.
5. <summary> - Provides a summary, caption, or legend for a <details> element.
6. <meter> - Represents a scalar measurement within a known range (like a gauge).
7. <figure> - Contains content like images, illustrations, diagrams, etc., along with a caption.
8. <details> - Represents additional information or controls that can be toggled open or closed.
9. <aside> - Contains content that is related to the main content but can be considered separate.
10. <article> - Represents a self-contained composition in a document, such as a blog post or a news article.

Q. Can HTML tags be written in Uppercase?
❖Yes, HTML tags not case-sensitive therefore 
can be written in uppercase, lowercase, or a 
combination of both.
❖But it is not recommended as per standards.

Q. What are the 3 differences between Block-Level and Inline Elements?
1. Block-level elements create "blocks" of content.      
<div>, <p>, <h1>, <ul>, <li>, <table>, <form> etc.
2. By default, Block-level elements start on a new line.
3. You can set both width and height for block-level 
elements.
1. Inline elements length depends on their content length. 
<span>, <a>, <strong>, <em>, <img>, <input>, <br> etc.
2. Inline elements do not start on a new line.
3. You can't set width and height for inline elements.

Q. List all Block-Level & Inline elements in HTML.
❖Top 20 block-level elements in HTML:
1. <h1>, <h2>, <h3>, <h4>, <h5>, <h6>: Heading elements from highest (h1) to lowest (h6) level.
2. <header>: Represents the introductory content or a group of navigational links.
3. <div>: The generic container element used for grouping and applying styles.
4. <footer>: Represents the footer of a section or document.
5. <nav>: Defines a section with navigation links.
6. <section>: Defines a section of a document.
7. <ol>: Creates an ordered (numbered) list.
8. <p>: Represents a paragraph of text.
9. <li>: Represents a list item in a list.
10. <ul>: Creates an unordered list.

Q. List all Block-Level & Inline elements in HTML.
❖Top 20 block-level elements in HTML(Continued…):
11. <article>: Represents a self-contained piece of content, such as a blog post or article.
12. <aside>: Represents content related to the main content but is considered separate.
13. <blockquote>: Represents a section that is quoted from another source.
14. <figure>: Used for encapsulating media and its caption.
15. <form>: Used for creating forms to collect user input.
16. <hr>: Creates a horizontal rule (a thematic break).
17. <figcaption>: Represents a caption for a <figure>.
18. <table>: Defines structure of a table.
19. <tr>: Represents a table row.
20. <td>: Represents a table cell.

Q. List all Block-Level & Inline elements in HTML.
❖Top 20 inline elements in HTML:
1. <span>: A generic container that doesn't have any specific semantic meaning.
2. <strong>: Indicates strong importance, often displayed as bold text.
3. <span>: A generic container used for applying styles or scripting.
4. <em>: Emphasizes on text, often displayed as italicized text.
5. <small>: Reduces the text size, often used for fine print.
6. <a>: Creates hyperlinks to other pages or resources.
7. <label>: Provides a label for an input element.
8. <input>: Used to create form input fields.
9. <code>: Represents a snippet of code.
10. <cite>: Specifies the title of a work.

Q. List all Block-Level & Inline elements in HTML.
❖Top 20 inline elements in HTML(Continued…):
11. <br>: Inserts a line break, forcing content after it onto a new line.
12. <select>: Creates a dropdown menu for selecting options.
13. <time>: Represents a specific period in time or a date.
14. <small>: Reduces the text size, used for fine print.
15. <abbr>: Defines an abbreviation or acronym.
16. <del>: Indicates deleted or removed text.
17. <q>: Defines a short inline quotation.
18. <sup>: Renders text as superscript.
19. <sub>: Renders text as subscript.
20. <img>: Embeds an image.

4. HTML Attributes
Q. What are HTML Attributes? What are the Types of HTML attributes?
Q. What are the Id, Style & Class attributes of an element? When to use what?
Q. What will happen if two elements have same ids?
Q. How to specify Multiple Classes for single element? What is the style precedence?
Q. What are Data Attributes in HTML?

Q. What are HTML Attributes? What are the Types of HTML attributes?
❖HTML attributes provide additional information about HTML elements.
Opening Tag
Closing Tag
HTML Element
Content/ Text
HTML Attributes

Q. What are HTML Attributes? What are the Types of HTML attributes?
❖Types of attributes:
• Example: class, id, style, data-*
• They are common and applicable for all the elements. 
1. Common Attributes (Global Attributes)
• Example: href, src, alt, width, height, target, rel, type, value, 
name, placeholder, disabled, readonly, checked, selected
• These are specific to the elements.
2. Specific Attributes

Q. What are the Id, Style & Class attributes of an element? When to use what?
❖id attribute is used to uniquely identify an 
element on a page.
▪The primary purpose of the id attribute is 
to allow JavaScript and CSS to target and 
manipulate specific elements.
❖style attribute allows you to apply inline styles
directly to an individual element.
❖class attribute is used to group together multiple 
elements that share common styles.
▪classes are recommended for large website 
not inline styles.

Q. What will happen if two elements have same ids?
❖May be in browser there is no direct impact, 
but it will be considered as invalid HTML.
❖Invalid HTML means it can lead to unexpected 
behavior in your webpage. For example, 
problems can occur in css styling and JavaScript 
interactions.

Q. How to specify Multiple Classes for single element? What is the style precedence?
❖To specify multiple classes for an 
element in HTML, you can simply add a 
space-separated list of class names
within the class attribute.
❖In case of multiple classes with same 
style attribute, style defined in the last 
class will take precedence.

Q. What are Data Attributes in HTML?
❖Data attributes in HTML provide a way to 
add custom data attributes to add 
additional informational in elements.
❖Data attributes are specified using the 
data- prefix.
❖Data attributes can be accessed by dataset 
property in JS.

5. HTML Links & Navigation
Q. What are the 5 Types of Links in HTML?
Q. What is the difference between Absolute & Relative URLs?
Q. What is the purpose of the <nav> element in HTML?
Q. What is a Fragment Identifier in a URL?
Q. What is the purpose of the <base> element in HTML.?
Q. How do you add an external stylesheet in your HTML?
Q. How do you open a link in a new tab?
Q. How do you create an Email Link?

Q. What are the 5 Types of Links in HTML?
5 Types of Link elements
Anchor Link
External Resource 
Link
Image Link
Bookmark Link 
(Named Anchor)
Email Link
1.
Anchor Link (<a>) used for 
navigating from one webpage to 
another.
2.
External Resource Link (<link>) used 
in the <head> section to connect to 
an external resource like a 
stylesheet or an icon.
3.
Image Link (<img>) used to create a 
clickable image that leads to 
another webpage.
4.
Bookmark Link (Named Anchor) 
points to a specific location within a 
webpage using a named anchor.
5.
Email Link creates a clickable link 
that opens the user's default email 
client with a pre-filled email 
address.

Q. What is the difference between Absolute and Relative URLs?
❖Absolute URLs:
1. Absolute URLs provide the complete 
web address of a resource.
2. Absolute URLs  are typically used to 
link to resources on different websites.
❖Relative URLs:
1. Relative URLs specify the location of a 
resource in relation to the current 
document. Full url is not required.
2. They are used when linking to 
resources within the same website.

Q. What is the purpose of the <nav> element in HTML?
❖<nav> element in HTML is used to define a 
section of a web page that contains 
navigation links.
❖<nav> element provide clear navigation 
structure and keep navigation separate 
from other body content which is good 
from SEO perspective.

Q. What is a Fragment Identifier in a URL?
❖A fragment identifier is used to navigate to a 
specific section of the same webpage.
❖Fragment identifier is preceded by a # (hash)
symbol.

Q. What is the purpose of the <base> element in HTML.?
❖The <base> element in HTML is used to 
specify a base URL for relative URLs within 
a document.
❖The <base> element is typically placed 
within the <head> section.

Q. How do you add an external stylesheet in your HTML?
❖<link> element is an empty element used to link 
external resources like stylesheets to the HTML 
document.
❖rel attribute specifies the relationship between 
the current document and the linked resource.
❖href attribute specifies the location (URL) of the 
external stylesheet.

Q. How do you open a link in a new tab?
❖Target attribute specifies how the linked content should be displayed. 
❖Target values: _blank(new tab), _self(default), _parent, _top

Q. How do you create an Email Link?
❖Set the href attribute "mailto:" followed by 
the email address. 
❖This will prompt the user's default email 
with the specified email address pre-filled 
in the "To" field. Else it will prompt for the 
other options.

6. HTML Lists & Tables
Q. What are the different Types of Lists in HTML?
Q. What is a Nested List in HTML?
Q. What are table, tr, th, td elements? What are table advantages & disadvantages?
Q. What is the colspan attribute in HTML?
Q. What is the best way to add a border to a table, column and cell?

Q. What are the different Types of Lists in HTML?
1. An ordered list is a list where the items are 
numbered or ordered in a specific sequence. 
2. An unordered list is a list where the items 
are marked with bullets.
3. A description list is used to display a list of 
terms along with their corresponding 
descriptions or definitions.
Types of List
Ordered   List
Unordered List
Description List

Q. What is a Nested List in HTML?
❖A nested list in HTML is a list that is placed 
within another list item.

Q. What are table, tr, th, td elements? What are table advantages & disadvantages?
❖Table elements:
1. <table> is the container for the 
entire table.
2. <tr>(table row) is used to define a 
row in the table.
3. <th>(table header) is used to 
represent the column headers.
4. <td>(table data) is used to represent 
the regular cells in a table. 
Tables are a powerful tool for styling and 
displaying structured data. 
Tables multiple column's structure is not 
good for mobile devices(not responsive).

Q. What is the colspan attribute in HTML?
❖The colspan attribute is used to merge multiple cells
horizontally into a single cell.
❖colspan attribute is applicable to <th> and <td> only.

Q. What is the best way to add a border to a table, column and cell?
❖Setting the common style for 
table, tr, th and td, then all the 
multiple tables in your webpage 
will follow consistent same style 
and format.

7. HTML Images & Multimedia
Q. How to embed an Image in HTML? Why alt attribute is so important?
Q. What are the difference between JPEG & PNG image formats?
Q. How to embed Video element in HTML? Why we need multiple 
source elements? 
Q. How to embed Audio element in HTML?
Q. What are the Autoplay & Loop attributes in multimedia elements?

Q. How to embed an Image in HTML? Why alt attribute is so important?
❖<img> element is used to embed an image in HTML.
❖The src(soruce) attribute specifies the source file of 
the image.
❖The alt(alternative text) attribute provides 
alternative text that describes the content of the 
image which is important for SEO(for searching).

Q. What are the difference between JPEG and PNG image formats?

Q. What are the difference between JPEG and PNG image formats?
JPEG 
PNG
1. JPEG stands for Joint Photographic Experts 
Group.
PNG stands for Portable Network Graphics
2. JPEG uses lossy compression, which means 
some data is discarded to reduce image size. 
PNG uses lossless compression, meaning no data 
is lost during compression. 
3. Due to lossy compression, lower image quality.
Due to lossless compression, higher image 
quality.
4. Due to lossy compression, Image size is reduced.
Due to lossless compression, the image has a 
comparatively larger size.

Q. How to embed Video in HTML? Why we need multiple source elements? 
1
<video> is the element used to embed videos.
2
controls attribute adds video controls like play, 
pause & volume.
3
<source> element specifies multiple sources for 
the video. If one video format is not compatible 
with browser, then other will execute.
4
src attribute specifies the path to the video file.
5
type attribute indicates the MIME type.
6
The text "Your browser…" is a fallback message for 
browsers that do not support the <video> 
element.

1
<audio> is the element used to embed audios.
2
controls attribute adds video controls like play, 
pause & volume.
3
<source> element specifies multiple sources for 
the audio. If one audio format is not compatible 
with browser, then other will execute.
4
src attribute specifies the path to the audio file.
5
type attribute indicates the MIME type.
6
The text "Your browser…" is a fallback message for 
browsers that do not support the <audio> 
element.
Q. How to embed Audio in HTML?

Q. What are the Autoplay & Loop attributes in multimedia elements?
❖The autoplay attribute allows media content 
to start playing automatically as soon as the 
page is loaded.
❖The loop attribute, allows the media content 
to restart whenever it reaches the end.

8. HTML Forms
Q. What are HTML Forms and what are its advantages?
Q. Q. What are HTML Form Elements and their Main Attributes? 
Q. How to Validate for empty input field in form?
Q. What is the role of the <textarea> element in a form?
Q. What are the Types of Input elements in a form?
Q. How to create radio buttons and checkboxes? How to group them?
Q. What is the purpose of the <select> element in a form?

Q. What are HTML Forms and what are its advantages?
❖Forms provide a way to collect and submit user data 
on a webpage.
Advantages of Form element
1. Data collection & organization is simple
2. Data validation is simple
3. Data submission on server is easy
4. Styling and Layout
5. Compatible with all browsers

Q. What are HTML Form Elements and their Main Attributes?
Form elements & Attributes
1. form element
2. action attribute
3. method attribute
4. label element
5. for attribute
6. input element
7. type attribute
8. name attribute

Q. What are HTML Form Elements and their Main Attributes?
❖Form elements and attributes
1. <form> element is the container of form elements.
2. The action attribute specifies the URL where the form data will be sent when it 
is submitted.
3. The method attribute defines the HTTP method to be used when sending the 
form data.
4. The <label> element is used to provide a label or description for an input field. 
The for attribute associate the label with a specific input field.
5. The <input> element is used to create controls.
6. The type attribute specifies the type of input field.
7. The name attribute is used to define a name for the input field.

Q. How to Validate for empty input field in form?
❖required attribute is used to make the input filed mandatory.

Q. What is the role of the <textarea> element in a form?
❖The <textarea> element is used in HTML 
forms to create a multi-line text input field.
❖rows attribute in textarea identify the 
number of lines in the text area.
❖cols attribute in textarea identify the number 
of characters in one row.

Q. What are the Types of Input elements in a form?
Types of Input elements
Text Input
Password Input
File Input
Submit Button
Reset Button 
Checkbox 
Radio Button
Select 

Q. What are the Types of Input elements in a form?
1. Text Input: Allows users to type alphanumeric characters. 
Commonly used for names, email addresses, passwords, etc.
2. Password Input: Masks the characters entered by the user, 
typically used for sensitive information like passwords.
3. File Input: Allows users to upload files.
4. Submit Button: Creates a button that submits the form data to a 
server for processing.
5. Reset Button: Creates a button that resets all the form fields 
back to their default values.
Types of Input elements
Text Input
Password Input
File Input
Submit Button
Reset Button 
Checkbox 
Radio Button
Select 

Q. How to create radio buttons and checkboxes? How to group them?
❖Radio buttons are used when you want the user to 
select exactly one option from a group of options.
❖Checkboxes are used when you want the user 
to be able to select multiple options from a list.
❖All radio buttons or checkboxes within a group 
should share the same name attribute. 

Q. What is the purpose of the <select> element in a form?
❖The <select> element in HTML is used to create 
a dropdown menu within a form.
❖Dropdown menus are space-efficient compared 
to radio-buttons and checkboxes for displaying 
a long list of options.

9. Best Practices, Boilerplate & Deployment
Q. What are Top 10 Best Practices for writing HTML code?
Q. What is HTML5 Boilerplate code?
Q. How do you optimize an HTML website for Performance?
Q. What is SEO? What are 5 HTML Best Practices for SEO?
Q. What are the 5 steps required for HTML website deployment?

Q. What are top 10 Best Practices for writing HTML code?
❖HTML Bad Practices
❖HTML Best Practices

Q. What are top 10 Best Practices for writing HTML code?
❖7 Best practices for HTML:
1. Proper DocType declaration
2. Proper Meta Tags
3. Use Semantic Elements.
4. Give meaningful ID’s and class names.
5. Give Lowercase Element Names.
6. Alternative Text for Images by alt attribute.
7. Use of proper Header Elements.(h1,h2,h3,h4,h5,h6)
8. Use External CSS Link for styling. 
9. Proper Indentation and Formatting for readability.
10. Always give title for the website page.
❖HTML with best practices

Q. What is an HTML5 Boilerplate?
❖An HTML5 boilerplate is a basic template for 
building modern websites using HTML5. 

Q. How do you optimize an HTML website for Performance?
❖8 Best Practices for performance improvement in HTML:
1. Minimize HTTP Requests: Reduce the number of HTTP 
requests by combining CSS and JavaScript files.
2. Use External CSS and JavaScript Files
3. Minify CSS, JavaScript, and HTML: Remove unnecessary 
whitespace, comments & formatting to reduce file sizes.
4. Compress Images: Use tools to compress images and 
choose appropriate formats.
5. Leverage Browser Caching: Set cache headers to allow 
resources to be stored locally, reducing the need for 
repeated requests.
6. Load Critical Resources First.
7. Use Async and Await in JS.
8. Implement Lazy Loading to improve initial load times.

Q. What is SEO? What are 5 HTML Best Practices for SEO?
5 HTML Best Practices for SEO
1. Use Semantic HTML Elements
2. Optimize Page Titles
3. Use Meta Description Tags
4. Use Proper Heading Tags
5. Optimize Image Alt Attributes
❖SEO(Search Engine Optimization) is the practice 
of optimizing a website to improve its visibility
and ranking in search engine results.

Q. What are the 5 steps required for HTML website deployment?
1
Choose a Hosting Provider (ex: aws/ azure)
2
Purchase a Domain (ex: www.interviewhappy.com)
3
Prepare Your Website Files(ex: HTML/ CSS/ JS/ Image)
4
Upload Files to Hosting Server(using FTP, hosting panel, GIT)
5
Configure SSL (Optional - Enable SSL for using HTTPS and enhance security)
❖5 Basic Steps for HTML website deployment:

10. HTML Responsiveness, Frameworks & Others
Q. What is Responsive Design?
Q. What are the top 3 things required to make a website Responsive in HTML?
Q. What are some Responsive Design Frameworks for HTML & CSS?
Q. What are HTML Entities? How do you display special characters in HTML?
Q. What are the Top 5 Emerging Trends in HTML development?

Q. What is Responsive Design?
❖Responsive design is a practice of creating web pages that 
adapt and display well on various devices and screen sizes.

Q. What are the top 3 things required to make a website Responsive in HTML?
1. Set the Viewport Meta Tag : This tag tells the 
browser to adjust the width of the page to 
match the screen's width.
2. Use Relative Units: Instead of using fixed units 
like pixels, use relative units like percentages 
3. Media Queries: They set different sizes for 
different screen types.

Q. What are some Responsive Design Frameworks for HTML & CSS?
Responsive 
Design 
Frameworks
1. 
Bootstrap
2. 
Foundation
3. 
Bulma
4. 
Semantic 
UI
5. 
Materialize
6. 
Tailwind 
CSS

Q. What are HTML Entities? How do you display special characters in HTML?
❖HTML entities are special codes or 
sequences of characters used to 
represent reserved or special 
characters in HTML. 

Q. What are the Top 5 Emerging Trends in HTML development?
Web Components are a set of web platform 
APIs that allow you to create custom, reusable 
HTML elements. 
1. Web Components:
PWAs are web applications that provide a 
native app-like experience to users.
2. Progressive Web Apps 
(PWAs)
SPAs load a single HTML page and dynamically 
update content as the user interacts with the 
app. 
3. Single Page Applications 
(SPAs):
VR refers to the integration of virtual reality 
experiences within a web browser using HTML, 
CSS, and JS. Example: WebGL & WebVR.
4. 3D Graphics and Virtual 
Reality (VR)
AR combines the physical world with digital 
information or content. Example: ARCore and 
ARKit for web development. 
5. Augmented Reality (AR):

1. CSS Basics & Implementation
Q. What is CSS? What are the 5 ways to Implement CSS in HTML?
Q. What is Inline Style in CSS? When to use it in real applications?
Q. What is Internal Stylesheet in CSS? When to use it in real applications?
Q. What is External Stylesheet in CSS? When to use it in real applications?
Q. What are the 5 advantages of external stylesheet?
Q. How do you Include CSS in a webpage or HTML?
Q. How to implement CSS using @import rule?
Q. What is CSS Preprocessors? What is SCSS?
Q. What are the 3 Types of CSS Preprocessors?

Q. What is CSS? What are the 5 ways to Implement CSS in HTML?
CSS
❖CSS(Cascading Style Sheets) is a stylesheet 
language used to control the presentation of 
web pages. 
HTML
(Markup 
Language)
JavaScript
(Scripting/ 
Programming 
Language)
CSS
(Stylesheet 
Language)

Q. What is CSS? What are the 5 ways to Implement CSS in HTML?
5 Ways of  
implementing 
CSS in HTML
1. Inline Styles
2. Internal Style Sheet
3. External Stylesheet
4. @import Rule
5. CSS Preprocessors

Q. What is Inline Style in CSS? When to use it in real applications?
5 Ways of 
implementing 
CSS in HTML
1. Inline Styles
2. Internal Style Sheet
3. External Stylesheet
4. @import Rule
5. CSS Preprocessors
❖Inline Styles apply styles directly to individual 
HTML elements using the style attribute. 
❖This method is suitable for applying styles to a 
single element.

Q. What is Internal Stylesheet in CSS? When to use it in real applications?
5 Ways of 
implementing 
CSS in HTML
1. Inline Styles
2. Internal Style Sheet
3. External Stylesheet
4. @import Rule
5. CSS Preprocessors
❖Internal Style Sheets can be implemented by adding 
the <style> element in the <head> section of 
HTML. 
❖This method is suitable for smaller projects.

Q. What is External Stylesheet in CSS? When to use it in real applications?
5 Ways of 
implementing 
CSS in HTML
1. Inline Styles
2. Internal Style Sheet
3. External Stylesheet
4. @import Rule
5. CSS Preprocessors
❖In External Stylesheet, a separate CSS file is 
created(.css extension) and link it in the 
HTML file using the <link> element. 
❖This is most common and recommended.

Q. What are the 5 advantages of External Stylesheet?
5 Advantages of CSS:
1. Separation of content(HTML) and presentation(Style).
2. Reusability of CSS classes in multiple elements.
3. Keeps things organized and structured.
4. Adapts to Different Devices.
5. Improves Website Speed.

Q. How do you Include CSS in a webpage or HTML?
❖1. External Stylesheet: By using the <link> element 
in the <head> section of the HTML document.
❖2. Internal Style Sheet: By using the <style> 
element in the <head> section.
❖3. Inline Styles: Apply styles directly to individual 
HTML elements using the style attribute. 

Q. How to implement CSS using @import rule?
5 Ways of 
implementing 
CSS in HTML
1. Inline Styles
2. Internal Style Sheet
3. External Stylesheet
4. @import Rule
5. CSS Preprocessors
❖@import rule is to include external CSS file to 
main CSS file. 
❖This method is less commonly used due to 
potential performance issues.

Q. What is CSS Preprocessors? What is SCSS?
❖CSS preprocessors are scripting languages that 
provide additional syntax and features that are 
not available in traditional CSS. For example, 
variables, loops, and conditional statements.
❖SCSS is a type of CSS preprocessor.

Q. What are the 3 Types of CSS Preprocessors?
3 Types of CSS 
Preprocessors
1. SCSS/ SASS
(Sassy CSS/ (Syntactically Awesome Stylesheets)
File extension: .scss 
3. LESS
File extension:  .less
4. Stylus
File extension: .styl

2. Selectors in CSS
Q. What are Selectors in CSS? How many types of selectors are there?
Q. Difference between ID, Element & Class selector? When to use which selector?
Q. What are Universal selectors?
Q. What are the Descendant Selectors in CSS?
Q. What are Attribute Selectors in CSS? What are it’s 5 Types?
Q. What are Child Selectors in CSS?
Q. How Child Selector is different from Descendent selectors?
Q. What are Pseudo-class Selector & Pseudo-element Selector?

Q. What are Selectors in CSS? How many Types of selectors are there?
❖In CSS, selectors are patterns that are used to select 
and style HTML elements.
Types of Selectors
1. ID Selector(#)
2. Element Selector(no symbol)
3. Class Selector(.)
4. Universal Selector(*)
5. Descendant selector
6. Child Selector(>)

Q. Difference between ID, Element & Class selector? When to use which selector?

• ID selectors are used for unique elements on a 
page, and they should only be assigned to one 
element.
1. ID Selector (#)
• Element selectors are used when you want to 
apply a style to all elements of a specific type.
2. Element Selector
• Class selectors are used when you want to 
apply a style to multiple elements with the 
same class.
3. Class Selector (.)
Q. Difference between ID, Element & Class selector? When to use which selector?

Q. What are Universal selectors?
❖Universal selector applied the specified styles to 
all elements, regardless of their type or attributes.

Q. What are the Descendant Selectors in CSS?
❖A descendant selector in CSS is a selector that 
targets an element that is a descendant of 
another specified element(nested elements).

Q. What are Attribute Selectors in CSS? What are it’s 5 Types?
❖Attribute selectors in CSS target HTML elements 
based on their attributes and their values. 

Q. What are Child Selectors in CSS? 
❖A child selector targets an element that is a 
immediate child of specified parent element.
❖It's denoted by the > symbol. 

Q. How Child Selector is different from Descendant selectors?
❖The child selector targets immediate children, 
while the descendant selector targets all 
descendants, regardless of depth.

Q. What are Pseudo-class Selector and Pseudo-element Selector?
❖A pseudo-class selector is used to define the special state of 
an HTML element, like when a user hovers over an element. 
❖A pseudo-element selector targets a specific part of an 
element, such as ::before to insert content before an element.

3. Layout and Positioning
Q. Explain the concept of the Box Model in CSS.
Q. What is the difference between Padding & Margin?
Q. What is the difference between display: inline & display: block?
Q. What is the difference between display: inline & display: inlineblock?
Q. What is z-index property in CSS? How same z-index elements will be displayed?
Q. What is the role of float property in CSS?
Q. What is the difference between position: relative/ absolute/ fixed?

Q. Explain the concept of the Box Model in CSS.
❖The "box model" describes the layout of elements on 
a webpage in terms of their dimensions and spacing. 
1. Content: This is the actual content of the element, 
such as text, images, videos, etc.
2. Padding: This is the space between the content and 
the border. 
3. Border: This is the line that separate the content 
from the surrounding elements. 
4. Margin: This is the space between the borders of 
adjacent elements. Margins help control the space 
between elements.
❖In CSS, you can control each of these components 
using various properties like width, height, padding 
border, margin. 
❖Without box model
❖With box model

Q. What is the difference between Padding and Margin?
Content/ Text
Element 1
Padding
Margin
Element Border
Content/ Text
Element 2
Padding
Margin
❖Padding is the space between the content of an 
element and its border.
❖Margin is the space outside an element, between 
the element and its surrounding elements. 

Q. What is the difference between display: inline & display: block?
❖Block elements take up the full width
of their parent container by default
❖Inline elements take up as much width 
as per the width of content only.

Q. What is the difference between display: inline and display: inlineblock?
❖Inline elements do not accept 
width and height values whereas 
inline-block accept width and 
height also.

Q. What is z-index property in CSS? How same z-index elements will be displayed?
❖z-index property in CSS is used to 
control the stacking order of 
positioned elements.
❖Elements with a higher z-index value 
will be displayed on top of elements 
with a lower z-index value.
❖If two elements have the same z-
index, the one that comes later in 
the HTML source will appear on top.

Q. What is the role of float property in CSS?
❖The float property in CSS is used to specify how an 
element should align or "float" within its parent 
container. 

Q. What is the difference between position: relative/ absolute/ fixed?
❖position: relative positions an element 
relative to its normal position of the page.
❖position: absolute is positioned as per the 
parent element.
❖position: fixed will fix the position of 
element even if the page is scrolled. 

4. Responsive Design, Flexbox & Grid Layout
Q. What is the role of meta viewport tag?
Q. What are Media Queries in CSS?
Q. What is display: flex in CSS?
Q. What is CSS Grid Layout in CSS?
Q. How can you create a Sticky Header in CSS?
Q. What are the 5 best practices for creating a Responsive Design using CSS?

Q. What is the role of meta viewport tag?
❖In web design, the "viewport" is the portion of the 
webpage that the user can see on their screen at 
any given time, without scrolling.
Viewport
Viewport
Viewport

Q. What is the role of meta viewport tag?
❖Name attribute specifies that 
the meta tag is a meta 
viewport.
❖Content width property tells the 
browser to set the width of the 
viewport to the width of the 
device's screen. 
❖Content initial-scale property sets the initial zoom 
level when the page is first loaded. A value of 1.0 
means that the page is displayed at its actual size 
without any zooming.
❖The <meta name="viewport"> tag in HTML is used 
to adjust the webpage on different devices and 
screen sizes. 

Q. What are Media Queries in CSS?
❖Media queries in CSS allows you to apply 
different styles to elements based on the 
size of device screen.

Q. What is display: flex in CSS?
❖display:flex turns an element into a container that structure 
and align its child elements in a better way. It enables a 
flexbox layout for the container. 
❖justify-content property aligns flex items along the main axis 
of the flex container. It controls the spacing between and 
around items.

Q. What is CSS Grid Layout in CSS?
❖The CSS Grid Layout Module offers a grid-based 
layout system, with rows and columns.
Without grid css
With grid css

Q. How can you create a Sticky Header in CSS?
❖Position: fixed can be used to implement sticky 
header in CSS.

Q. What are the 5 best practices for creating a Responsive Design using CSS?
5 Best practices for creating responsive design
 1. Use Responsive Units(%)
2. Use Media Queries
3. Flexible Layout
4. Images and Media size
5. Viewport Meta Tag

1. Use Responsive Units:
Use relative units like percentages (%) or em units for sizes (width, height, padding, margin, etc.) instead of fixed 
units like pixels (px).
2. Use Media Queries:
Media queries allow you to apply different styles based on the characteristics of the device, such as screen width, 
height, and orientation. They are essential for creating a responsive design.
3. Flexible Grid Systems:
Use CSS Grid or Flexbox to create flexible layouts that can adapt to different screen sizes and orientations.
4. Images and Media:
Use max-width: 100%; on images to ensure they don't overflow their containers. This allows images to scale down 
proportionally on smaller screens.
5. Viewport Meta Tag:
Include the viewport meta tag in the <head> of your HTML to control how the page is displayed on mobile devices. It 
sets the initial scale, width, and zoom behavior.
Q. What are the 5 best practices for creating a Responsive Design using CSS?

1. Bootstrap
Q. What is Bootstrap? What are the other 5 responsive design frameworks?  
Q. What are the 5 Advantages of using Bootstrap?
Q. What are the 2 ways to include Bootstrap framework for your website.
Q. Explain the Grid System in Bootstrap?
Q. What is the difference between col-xs, col-sm, col-md, col-lg & col-xl?
Q. What are Bootstrap Components? What are Top 10 bootstrap components?
Q. What is a Bootstrap Modal component?
Q. What is a Bootstrap Navigation component?
Q. What is Bootstrap Carousel component?
Q. Explain the difference between Bootstrap's container & container-fluid?

Q. What is Bootstrap? What are the other 5 responsive design frameworks?  
❖Bootstrap is a popular open-source front-end framework 
which provides responsive and mobile-first CSS.

All 
Responsive 
Design 
Frameworks
1. 
Bootstrap
2. 
Foundation
3. 
Bulma
4. 
Semantic 
UI
5. 
Materialize
6. 
Tailwind 
CSS
Q. What is Bootstrap? What are the other 5 responsive design frameworks?  

Q. What are the 5 Advantages of using Bootstrap?
1. Rapid 
Development
•Bootstrap provides a 
wide range of ready-
to-use components 
like navigation bars, 
buttons, forms, 
modals, and more. 
This saves time and 
effort in writing code 
from scratch. 
2. Responsive 
Design
•Bootstrap is built with 
a mobile-first 
approach, meaning it 
prioritizes designing 
for smaller screens 
first and then scales 
up for larger screens. 
This ensures websites 
with Bootstrap is 
responsive for every 
device.
3. Cross-
Browser 
Compatibility
•Bootstrap provides a 
consistent set of 
styles and 
components across 
different browsers, 
which helps in 
reducing cross-
browser compatibility 
issues.
4. Large 
Community 
and Support
•This means there are 
plenty of resources, 
documentation, 
tutorials, and forums 
available for 
assistance. 
5. Accessibility
•Bootstrap 
incorporates best 
practices for web 
accessibility, making it 
easier to create 
websites that are 
usable by people with 
disabilities. 

Q. What are the 2 ways to include Bootstrap framework for your website.
2 ways to  include Bootstrap:
1. Put the link of Bootstrap CDN (Content Delivery 
Network) in head section.
2. Download the Bootstrap files and add them locally 
in your HTML document.

Q. Explain the Grid System in Bootstrap?
col-1
col-2
col-3
col-4
col-5
col-6
col-7
col-8
col-9 cool-10 col-11 col-12
col-1
col-2
col-3
col-4
col-5
col-6
col-1
col-2
col-3
col-4
col-1
col-2
col-3
col-1
col-2
col-1
❖Grid system is 12-column layout and is designed to 
adapt to various screen sizes.

Q. Explain the Grid System in Bootstrap?

Q. What is the difference between col-xs, col-sm, col-md, col-lg & col-xl?
1. col-xs (Extra Small): Applies to 
extra small screens (phones).
2. col-sm (Small): Applies to small 
screens (tablets).
3. col-md (Medium): Applies to 
medium screens (laptops).
4. col-lg (Large): Applies to large 
screens (larger desktops).
5. col-xl (Extra Large):  Applies to 
extra large screens (large TVs).

Q. What are Bootstrap Components? What are Top 10 bootstrap components?
❖Bootstrap components are 
pre-designed elements that 
can be easily integrated into a 
web project. 
Top 10 Bootstrap 
components
1. Buttons
2. Navbar
3. Forms
4. Carousel 
5. Cards 
6. Progress Bars
7. Pagination 
8. Spinners
9. Badges
10. Modals

❖Bootstrap components are 
pre-designed elements that 
can be easily integrated into a 
web project. 
Top 10 Bootstrap 
components
1. Buttons
2. Navbar
3. Forms
4. Carousel 
5. Cards 
6. Progress Bars
7. Pagination 
8. Spinners
9. Badges
10. Modals
Q. What are Bootstrap Components? What are Top 10 bootstrap components?

Q. What is a Bootstrap Modal component?
❖A Bootstrap modal is a lightweight, customizable, and 
interactive dialog box or popup window that appears 
on top of the main content of a web page. 

Q. What is a Bootstrap Navigation component?
❖Bootstrap's Navigation component provides a set of 
styles and components to create various types of 
navigation menus on a webpage. 

Q. What is Bootstrap Carousel component?
❖Bootstrap's carousel component is a slideshow or image 
slider that allows you to display a series of images or 
content in a rotating manner.

Q. Explain the difference between Bootstrap's container and container-fluid?
❖.container class centered the content and add padding to the 
sides, ensuring that the content remains within a specified width.
❖.container-fluid class provides a full-width layout, with the 
content extending to the edges of the screen.


