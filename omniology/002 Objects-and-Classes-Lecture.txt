©2019 MathByte Academy

What is an object?
a container
contains data
contains functionality
à state
à behavior
à attributes
à methods
my_car
brand = Ferrari
model = 599XX
year = 2010
state
accelerate
brake
steer
behavior
dot notation
my_car.brand à Ferrari
my_car.purchase_price = 1_600_000
my_car.accelerate(10)
my_car.steer(-15)
©2019 MathByte Academy

Creating objects
How do we create the "container"?
How do we define and set state?
How do we define and implement behavior?
Many languages use a class-based approach
à C++, Java, Python, etc
A class is like a template used to create objects
à also called a type
à objects created from that class are called instances
of that class or type
©2019 MathByte Academy

Classes
Classes are themselves objects
They have attributes (state)
à e.g. class name (or type name)
They have behavior
à e.g. how to create an instance of the class
if a class is an object, and objects are created from classes, how are classes created?
Python à classes are created from the type metaclass
©2019 MathByte Academy

Instances
Classes have behavior
à they are callable
MyClass()
à this returns an instance of the class
à often called objects, differentiating from class
(even though a class is technically an object as well)
Instances are created from classes
their type is the class they were created from
if MyClass is a class in Python
and my_obj is an instance of that class
my_obj = MyClass()
type(my_obj) à MyClass
this is an object
(classes are objects)
isinstance(my_obj, MyClass)
à True
©2019 MathByte Academy

Creating Classes
use the class keyword
class MyClass:
pass
à Python creates an object
à called MyClass
à of type type
à automatically provides us certain attributes (state) and methods (behavior)
MyClass.__name__
à 'MyClass'
string
MyClass()
à returns an instance of MyClass
(state)
(behavior)
type(MyClass) à type
isinstance(MyClass, type) à True
©2019 MathByte Academy

Coding
©2019 MathByte Academy

